void sub_10094BA6C()
{
  qword_101480058 = 0x4041000000000000;
}

char *sub_10094BA7C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  NSString v5;
  void *v6;
  void *v7;
  char v8;
  UIImage *v9;
  UIImage *v10;
  uint64_t v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  NSString v16;
  void *v17;
  id v18;
  UIImage *v19;
  id v20;
  id v21;
  NSString v22;
  id v23;
  id v24;
  void *v25;
  UIImage *v26;
  id v27;
  NSString v28;
  NSString v29;
  id v30;
  uint64_t v31;
  id v32;
  NSString v33;
  NSString v34;
  id v35;
  uint64_t v36;
  id v37;
  NSString v38;
  id v39;
  UIImage *v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  UIImage *v46;
  void *v47;
  char *v48;
  char *v49;
  double v50;
  NSString v51;
  id v53;
  UIImage *v54;

  v1 = v0;
  v2 = (void *)objc_opt_self(UIScreen);
  v3 = objc_msgSend(v2, "mainScreen");
  v4 = objc_msgSend(v3, "traitCollection");

  objc_msgSend(v4, "crl_isUserInterfaceStyleDark");
  v5 = String._bridgeToObjectiveC()();
  v54 = (UIImage *)objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v5);

  v6 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_element);
  if ((objc_msgSend(v6, "options") & 4) == 0
    && (objc_msgSend(v6, "options") & 0x1000) == 0
    && (objc_msgSend(v6, "options") & 0x80000) == 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"makeBaseLayerButton()", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Formatters/CRLiOSMiniFormatterColorPaletteBuilder.swift", 113, 2, 165, "The Color Palette base layer button is only used for color palette and sticky notes elements", 92, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"makeBaseLayerButton()", 21, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Formatters/CRLiOSMiniFormatterColorPaletteBuilder.swift", 113, 2u, 165, (uint64_t)"The Color Palette base layer button is only used for color palette and sticky notes elements", 92, 2u);
  }
  if ((objc_msgSend(v6, "options") & 4) == 0
    && (objc_msgSend(v6, "options") & 0x1000) == 0
    && (objc_msgSend(v6, "options") & 0x80000) == 0
    || (v7 = (void *)sub_10094E67C(), v7 == (void *)1))
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"makeBaseLayerButton()", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Formatters/CRLiOSMiniFormatterColorPaletteBuilder.swift", 113, 2, 187, "Unable to retrieve shape fill information from the shapeFillDataProvider", 72, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"makeBaseLayerButton()", 21, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Formatters/CRLiOSMiniFormatterColorPaletteBuilder.swift", 113, 2u, 187, (uint64_t)"Unable to retrieve shape fill information from the shapeFillDataProvider", 72, 2u);
    v9 = v54;
    v10 = v54;
    v11 = 0;
    goto LABEL_24;
  }
  v12 = v7;
  if ((v8 & 1) != 0)
  {
    v22 = String._bridgeToObjectiveC()();
    v23 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v22);

    if (v23)
    {
      v24 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
      v9 = (UIImage *)objc_msgSend(v23, "imageWithTintColor:", v24);

    }
    else
    {
      v9 = 0;
    }
    v32 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v33 = String._bridgeToObjectiveC()();
    v34 = String._bridgeToObjectiveC()();
    v35 = objc_msgSend(v32, "localizedStringForKey:value:table:", v33, v34, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
    v11 = v36;

    sub_1004CB49C(v12);
LABEL_24:
    v15 = 0;
    if (v9)
      goto LABEL_25;
    goto LABEL_33;
  }
  if (v7
    && (v13 = objc_msgSend(v7, "referenceColor")) != 0
    && (v14 = v13, v15 = objc_msgSend(v13, "UIColor"), v14, v15))
  {
    v16 = String._bridgeToObjectiveC()();
    v17 = (void *)objc_opt_self(UIImage);
    v18 = objc_msgSend(v17, "imageNamed:", v16);

    if (v18)
    {
      v9 = (UIImage *)objc_msgSend(v18, "imageWithTintColor:", v15);

      if (v9)
      {
        v53 = v17;
        v19 = v9;
        if (sub_10097C9F4())
        {
          v20 = objc_msgSend(v2, "mainScreen");
          v21 = objc_msgSend(v20, "traitCollection");

          objc_msgSend(v21, "crl_isUserInterfaceStyleDark");
          v38 = String._bridgeToObjectiveC()();
          v39 = objc_msgSend(v53, "imageNamed:", v38);

          if (v39)
          {
            v40 = (UIImage *)v39;
            v9 = sub_1008ECF80(v19);

            v19 = v40;
          }
          else
          {
            v9 = 0;
          }

        }
      }
    }
    else
    {
      v9 = 0;
    }
    v41 = v15;
    v42 = objc_msgSend(v41, "accessibilityName");
    static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
    v11 = v43;
    sub_1004CB49C(v12);

    if (v9)
      goto LABEL_25;
  }
  else
  {
    v25 = (void *)objc_opt_self(NSBundle);
    v26 = v54;
    v27 = objc_msgSend(v25, "mainBundle");
    v28 = String._bridgeToObjectiveC()();
    v29 = String._bridgeToObjectiveC()();
    v30 = objc_msgSend(v27, "localizedStringForKey:value:table:", v28, v29, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
    v11 = v31;

    sub_1004CB49C(v12);
    v15 = 0;
    v9 = v54;
    if (v54)
    {
LABEL_25:
      v37 = -[UIImage crl_imageWithAlpha:renderingMode:](v9, "crl_imageWithAlpha:renderingMode:", 0, 0.4);
      goto LABEL_34;
    }
  }
LABEL_33:
  v37 = 0;
LABEL_34:
  sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
  v44 = swift_allocObject(&unk_10128A450, 24, 7);
  swift_unknownObjectWeakInit(v44 + 16);
  v45 = v15;
  v46 = v9;
  v47 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_1004CBB04, v44);
  v48 = sub_1004C57EC(v47, v15, v9, v37);

  v49 = v48;
  if (v11)
  {
    v51 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v50 = swift_bridgeObjectRelease().n128_u64[0];
  }
  else
  {
    v51 = 0;
  }
  objc_msgSend(v48, "setAccessibilityValue:", v51, v50);

  return v48;
}

void sub_10094C290(uint64_t a1@<X0>, void *a2@<X1>, char a3@<W2>, void *a4@<X3>, objc_class **a5@<X8>)
{
  void *v9;
  int v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  char v19;
  int v20;
  UIImage *v21;
  id v22;
  char v23;
  UIImage *v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  Class v29;
  UIAccessibilityTraits v30;
  objc_class *v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  UIAccessibilityTraits v35;
  unint64_t v36;
  unint64_t v37;

  v9 = *(void **)a1;
  v10 = *(unsigned __int8 *)(a1 + 8);
  sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
  v11 = swift_allocObject(&unk_10128A540, 40, 7);
  *(_QWORD *)(v11 + 16) = v9;
  *(_BYTE *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = a2;
  sub_1006B8360(v9, v10);
  v12 = a2;
  v13 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100950F6C, v11);
  if ((a3 & 1) != 0)
    goto LABEL_18;
  if (!a4 && v10 == 3 && !v9)
  {
    v21 = sub_10094AD2C(0, 3);
    v20 = 1;
    goto LABEL_19;
  }
  if (v10)
  {
    if (v10 != 1 || !a4)
      goto LABEL_18;
    v14 = v9;
    v15 = objc_msgSend(a4, "referenceColor");
    if (v15)
    {
      v16 = v15;
      v17 = objc_msgSend(v15, "UIColor");

      if (v17)
      {
        sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
        v18 = objc_msgSend(v14, "UIColor");
        v19 = static NSObject.== infix(_:_:)(v18, v17);

        if ((v19 & 1) != 0)
        {
          v20 = 1;
          v21 = sub_10094AD2C(v9, 1);
          sub_1006B8384(v9, 1u);

          goto LABEL_19;
        }

      }
    }
    goto LABEL_17;
  }
  if (a4)
  {
    sub_1004B8930(0, (unint64_t *)&qword_1013F3910, off_101229898);
    sub_1006B8360(v9, 0);
    v22 = a4;
    v23 = static NSObject.== infix(_:_:)(v9, v22);

    if ((v23 & 1) != 0)
    {
      v21 = sub_10094AD2C(v9, 0);
      sub_1006B8384(v9, 0);
      v20 = 1;
      goto LABEL_19;
    }
LABEL_17:
    sub_1006B8384(v9, v10);
  }
LABEL_18:
  sub_10094A614((uint64_t)v9, v10);
  v21 = v24;
  v20 = 0;
LABEL_19:
  if (qword_1013DD5A8 != -1)
    swift_once(&qword_1013DD5A8, sub_10094BA6C);
  v25 = *(double *)&qword_101480058;
  v26 = sub_1006B7E50(v9, v10);
  v28 = v27;
  v29 = sub_100A087E4(v21, v13, v26, v27, v25);
  swift_bridgeObjectRelease(v28);
  v30 = UIAccessibilityTraitSelected;
  v31 = v29;
  v32 = (unint64_t)-[objc_class accessibilityTraits](v31, "accessibilityTraits");
  v33 = -1;
  if ((v32 & v30) != 0)
    v33 = ~v30;
  v34 = v33 & v32;
  if ((v32 & v30) == v30)
    v35 = 0;
  else
    v35 = v30;
  v36 = v35 | v32;
  if (v20)
    v37 = v36;
  else
    v37 = v34;
  -[objc_class setAccessibilityTraits:](v31, "setAccessibilityTraits:", v37);

  *a5 = v31;
}

void sub_10094C5E0(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

void sub_10094C610()
{
  void *v0;
  id v1;

  v1 = v0;
  sub_10094E2BC(v0);
  sub_1006B8384(v0, 0);
}

id sub_10094C664()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int16 v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  id v11;
  Class isa;
  id v13;
  unsigned __int16 v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform38CRLiOSMiniFormatterColorPaletteBuilder_showHeaderView) == 1)
  {
    v1 = sub_1004B804C((uint64_t *)&unk_1013E4180);
    v2 = swift_allocObject(v1, 48, 7);
    *(_OWORD *)(v2 + 16) = xmmword_100EF5560;
    *(_QWORD *)(v2 + 32) = sub_10094C85C();
    v3 = (unsigned __int16)objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_element), "options");
    v4 = &OBJC_IVAR____TtC8Freeform38CRLiOSMiniFormatterColorPaletteBuilder_fullColorPalette;
    if ((v3 & 0x1000) != 0)
      v4 = &OBJC_IVAR____TtC8Freeform38CRLiOSMiniFormatterColorPaletteBuilder_stickyColorPalette;
    v5 = v0 + *v4;
    v7 = *(_QWORD *)(v5 + 8);
    v6 = *(_QWORD *)(v5 + 16);
    swift_bridgeObjectRetain(v6);
    v9 = sub_10094D254(v8, v7, v6);
    swift_bridgeObjectRelease(v6);
    *(_QWORD *)(v2 + 40) = v9;
    specialized Array._endMutation()(v10);
    v11 = objc_allocWithZone((Class)UIStackView);
    sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    v13 = objc_msgSend(v11, "initWithArrangedSubviews:", isa, swift_bridgeObjectRelease(v2).n128_f64[0]);

    objc_msgSend(v13, "setAxis:", 1);
    if (qword_1013DC8A8 != -1)
      swift_once(&qword_1013DC8A8, sub_1004C5434);
    objc_msgSend(v13, "setSpacing:", *(double *)&qword_10147E6C8);
  }
  else
  {
    v14 = (unsigned __int16)objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_element), "options");
    v15 = &OBJC_IVAR____TtC8Freeform38CRLiOSMiniFormatterColorPaletteBuilder_fullColorPalette;
    if ((v14 & 0x1000) != 0)
      v15 = &OBJC_IVAR____TtC8Freeform38CRLiOSMiniFormatterColorPaletteBuilder_stickyColorPalette;
    v16 = v0 + *v15;
    v17 = *(_QWORD *)(v16 + 8);
    v18 = *(_QWORD *)(v16 + 16);
    swift_bridgeObjectRetain(v18);
    v13 = sub_10094D254(v19, v17, v18);
    swift_bridgeObjectRelease(v18);
  }
  return v13;
}

id sub_10094C85C()
{
  uint64_t v0;
  uint64_t ObjectType;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  NSString v14;
  NSString v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  NSString v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  void *v29;
  void (*v30)(char *, char *, uint64_t);
  char *v31;
  void *v32;
  double v33;
  id v34;
  id v35;
  NSString v36;
  NSString v37;
  id v38;
  id v39;
  id v40;
  uint64_t v41;
  void *v42;
  UIButton v43;
  id v44;
  NSString v45;
  NSString v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  NSString v50;
  id v51;
  double v52;
  void *v53;
  id v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  id v60;
  id v61;
  objc_class *v62;
  Class isa;
  id v64;
  id v66[2];
  id v67;
  id v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  UIAction_optional v73;

  ObjectType = swift_getObjectType(v0);
  v2 = sub_1004B804C((uint64_t *)&unk_1013DFBD0);
  __chkstk_darwin(v2);
  v4 = (char *)v66 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UIButton.Configuration(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)v66 - v10;
  static UIButton.Configuration.plain()(v12);
  v68 = (id)objc_opt_self(NSBundle);
  v13 = objc_msgSend(v68, "mainBundle");
  v14 = String._bridgeToObjectiveC()();
  v15 = String._bridgeToObjectiveC()();
  v16 = objc_msgSend(v13, "localizedStringForKey:value:table:", v14, v15, 0);

  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v19 = v18;

  UIButton.Configuration.title.setter(v17, v19, v20);
  v21 = swift_allocObject(&unk_10128A568, 24, 7);
  *(_QWORD *)(v21 + 16) = ObjectType;
  UIConfigurationTextAttributesTransformer.init(_:)(sub_100950F8C, v21);
  v22 = type metadata accessor for UIConfigurationTextAttributesTransformer(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v4, 0, 1, v22);
  UIButton.Configuration.titleTextAttributesTransformer.setter(v4);
  v23 = String._bridgeToObjectiveC()();
  v24 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v23);

  UIButton.Configuration.image.setter(v24);
  v25 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:weight:", 7, 14.0);
  v26 = UIButton.Configuration.preferredSymbolConfigurationForImage.setter(v25);
  UIButton.Configuration.imagePadding.setter(v26, 3.0);
  UIButton.Configuration.contentInsets.setter(NSDirectionalEdgeInsetsZero.top, NSDirectionalEdgeInsetsZero.leading, NSDirectionalEdgeInsetsZero.bottom, NSDirectionalEdgeInsetsZero.trailing);
  sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
  v27 = swift_allocObject(&unk_10128A590, 24, 7);
  v28 = (char *)v66[1];
  swift_unknownObjectWeakInit(v27 + 16);
  v29 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100950F94, v27);
  sub_1004B8930(0, (unint64_t *)&unk_1013DFBC0, UIButton_ptr);
  v70 = v6;
  v71 = v5;
  v30 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v31 = v28;
  v30(v8, v11, v5);
  v69 = v29;
  v32 = (void *)UIButton.init(configuration:primaryAction:)(v8, v29);
  LODWORD(v33) = 1148846080;
  objc_msgSend(v32, "setContentCompressionResistancePriority:forAxis:", 0, v33);
  v34 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v66[0] = (id)objc_opt_self(UIFont);
  v35 = objc_msgSend(v66[0], "boldSystemFontOfSize:", 18.0);
  objc_msgSend(v34, "setFont:", v35);

  v36 = *(NSString *)&v28[OBJC_IVAR____TtC8Freeform38CRLiOSMiniFormatterColorPaletteBuilder_headerTitle + 8];
  if (v36)
    v37 = String._bridgeToObjectiveC()();
  else
    v37 = 0;
  objc_msgSend(v34, "setText:", v37);

  v38 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  objc_msgSend(v34, "setTextColor:", v38);

  objc_msgSend(v34, "setTextAlignment:", 1);
  objc_msgSend(v34, "setAdjustsFontSizeToFitWidth:", 1);
  objc_msgSend(v34, "setAllowsDefaultTighteningForTruncation:", 1);
  objc_msgSend(v34, "setMinimumScaleFactor:", 0.6);
  objc_msgSend(v34, "setShowsLargeContentViewer:", 1);
  v39 = v34;
  if (v36)
    v36 = String._bridgeToObjectiveC()();
  objc_msgSend(v34, "setLargeContentTitle:", v36);

  v40 = objc_msgSend(objc_allocWithZone((Class)UILargeContentViewerInteraction), "initWithDelegate:", v31);
  objc_msgSend(v34, "addInteraction:", v40);

  v41 = swift_allocObject(&unk_10128A590, 24, 7);
  swift_unknownObjectWeakInit(v41 + 16);
  v42 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100950F9C, v41);
  v67 = v42;
  v73.value.super.super.isa = (Class)v42;
  v43.super.super.super.super.isa = UIButton.init(type:primaryAction:)(UIButtonTypeSystem, v73).super.super.super.super.isa;
  v44 = objc_msgSend(v68, "mainBundle");
  v45 = String._bridgeToObjectiveC()();
  v46 = String._bridgeToObjectiveC()();
  v47 = objc_msgSend(v44, "localizedStringForKey:value:table:", v45, v46, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v47);
  v49 = v48;

  v50 = String._bridgeToObjectiveC()();
  -[objc_class setTitle:forState:](v43.super.super.super.super.isa, "setTitle:forState:", v50, 0, swift_bridgeObjectRelease(v49).n128_f64[0]);

  v51 = -[objc_class titleLabel](v43.super.super.super.super.isa, "titleLabel");
  if (v51)
  {
    v53 = v51;
    v54 = objc_msgSend(v66[0], "systemFontOfSize:", 18.0);
    objc_msgSend(v53, "setFont:", v54);

  }
  LODWORD(v52) = 1148846080;
  -[objc_class setContentCompressionResistancePriority:forAxis:](v43.super.super.super.super.isa, "setContentCompressionResistancePriority:forAxis:", 0, v52);
  -[objc_class setShowsLargeContentViewer:](v43.super.super.super.super.isa, "setShowsLargeContentViewer:", 1);
  v55 = objc_msgSend(objc_allocWithZone((Class)UILargeContentViewerInteraction), "initWithDelegate:", v31);
  -[objc_class addInteraction:](v43.super.super.super.super.isa, "addInteraction:", v55);

  v56 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v57 = swift_allocObject(v56, 56, 7);
  *(_OWORD *)(v57 + 16) = xmmword_100EF7300;
  *(_QWORD *)(v57 + 32) = v32;
  *(_QWORD *)(v57 + 40) = v34;
  *(UIButton *)(v57 + 48) = v43;
  v72 = v57;
  specialized Array._endMutation()(v57);
  v58 = v72;
  v59 = objc_allocWithZone((Class)UIStackView);
  sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
  v60 = v34;
  v61 = v32;
  v62 = v43.super.super.super.super.isa;
  isa = Array._bridgeToObjectiveC()().super.isa;
  v64 = objc_msgSend(v59, "initWithArrangedSubviews:", isa, swift_bridgeObjectRelease(v58).n128_f64[0]);

  objc_msgSend(v64, "setDistribution:", 4);
  objc_msgSend(v64, "setSpacing:", 2.5);

  (*(void (**)(char *, uint64_t))(v70 + 8))(v11, v71);
  return v64;
}

uint64_t sub_10094D0C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t KeyPath;
  id v9;

  v4 = type metadata accessor for AttributeContainer(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  KeyPath = swift_getKeyPath(&unk_100F1AEC8);
  v5 = swift_getKeyPath(&unk_100F1AEF8);
  v9 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:", 18.0, KeyPath);
  v6 = sub_1004CB548();
  return AttributeContainer.subscript.setter(&v9, v5, v6);
}

void sub_10094D170(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  _BYTE v9[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = Strong + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_presenter;
    v6 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_presenter);
    v7 = *(_QWORD *)(v5 + 16);

    if (v6)
    {
      ObjectType = swift_getObjectType(v6);
      (*(void (**)(uint64_t, uint64_t))(v7 + 56))(ObjectType, v7);
      swift_unknownObjectRelease(v6);
    }
  }
}

void sub_10094D204(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    sub_10094E7EC();

  }
}

id sub_10094D254(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v6;
  char v7;
  char v8;
  void *v9;
  id v10;
  char *v11;
  int64_t v12;
  int64_t v13;
  double *v14;
  double *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  id v21;
  Class isa;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  __n128 v36;
  double *v37;
  id v38;
  Class v39;
  id v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  swift_getObjectType(v3);
  v6 = sub_10094E67C();
  v8 = (v6 != 1) & v7;
  if (v6 == 1)
    v9 = 0;
  else
    v9 = (void *)v6;
  v10 = v9;
  swift_bridgeObjectRetain(a3);
  v11 = v3;
  v12 = sub_10094A524(a3, v11, v8, v9);

  swift_bridgeObjectRelease(a3);
  if (!((unint64_t)v12 >> 62))
  {
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (a2)
      goto LABEL_6;
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if (v12 < 0)
    v42 = v12;
  else
    v42 = v12 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v12);
  v13 = _CocoaArrayWrapper.endIndex.getter(v42);
  swift_bridgeObjectRelease(v12);
  if (!a2)
    goto LABEL_30;
LABEL_6:
  v14 = sub_10094A2F4(0, v13, a2, v12, a2);
  v15 = v14;
  v16 = *((_QWORD *)v14 + 2);
  if (v16)
  {
    specialized ContiguousArray.reserveCapacity(_:)(v16);
    v17 = 0;
    do
    {
      v18 = *(_QWORD *)&v15[v17 + 4];
      if ((unint64_t)v18 >> 62)
      {
        if (v18 < 0)
          v29 = *(_QWORD *)&v15[v17 + 4];
        else
          v29 = v18 & 0xFFFFFFFFFFFFFF8;
        v30 = sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
        swift_bridgeObjectRetain(v18);
        v20 = _bridgeCocoaArray<A>(_:)(v29, v30);
      }
      else
      {
        swift_bridgeObjectRetain_n(*(_QWORD *)&v15[v17 + 4], 2);
        dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v19);
        sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
        v20 = v18;
      }
      v21 = objc_allocWithZone((Class)UIStackView);
      sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
      isa = Array._bridgeToObjectiveC()().super.isa;
      v23 = objc_msgSend(v21, "initWithArrangedSubviews:", isa, swift_bridgeObjectRelease(v20).n128_f64[0]);

      objc_msgSend(v23, "setDistribution:", 3);
      v24 = objc_msgSend(v23, "heightAnchor");
      if (qword_1013DC8B0 != -1)
        swift_once(&qword_1013DC8B0, sub_1004C5444);
      ++v17;
      v25 = objc_msgSend(v24, "constraintGreaterThanOrEqualToConstant:", *(double *)&qword_10147E6D0);

      objc_msgSend(v25, "setActive:", 1);
      swift_bridgeObjectRelease(v18);

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v26);
      v27 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(*(_QWORD *)&v27);
      v28 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(*(_QWORD *)&v27, v23);
      specialized ContiguousArray._endMutation()(v28);
    }
    while (v16 != v17);
    a2 = (uint64_t)_swiftEmptyArrayStorage;
    swift_bridgeObjectRelease(v15);
  }
  else
  {
    swift_bridgeObjectRelease(v14);
    a2 = (uint64_t)_swiftEmptyArrayStorage;
  }
  v31 = sub_10094D700();
  if (v31)
  {
    v32 = v31;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v32);
    v34 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    v33 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v34 >= v33 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v33 > 1, v34 + 1, 1);
    v35 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v34, v32);
    specialized Array._endMutation()(v35);

    a2 = (uint64_t)_swiftEmptyArrayStorage;
  }
  if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
  {
    v36 = swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v36);
    sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
    v37 = _swiftEmptyArrayStorage;
    goto LABEL_25;
  }
LABEL_31:
  if (a2 < 0)
    v43 = a2;
  else
    v43 = a2 & 0xFFFFFFFFFFFFFF8;
  v44 = sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
  swift_bridgeObjectRetain(a2);
  v37 = (double *)_bridgeCocoaArray<A>(_:)(v43, v44);
  swift_bridgeObjectRelease(a2);
LABEL_25:
  swift_bridgeObjectRelease(a2);
  v38 = objc_allocWithZone((Class)UIStackView);
  sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
  v39 = Array._bridgeToObjectiveC()().super.isa;
  v40 = objc_msgSend(v38, "initWithArrangedSubviews:", v39, swift_bridgeObjectRelease(v37).n128_f64[0]);

  objc_msgSend(v40, "setAxis:", 1);
  objc_msgSend(v40, "setSpacing:", *(double *)&v11[OBJC_IVAR____TtC8Freeform38CRLiOSMiniFormatterColorPaletteBuilder_rowSpacing]);
  return v40;
}

id sub_10094D700()
{
  char *v0;
  void *v1;
  uint64_t v2;
  char *v3;
  void *v4;
  id v5;
  NSString v6;
  NSString v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSString v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  objc_class *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  void *v26;
  id v27;
  NSString v28;
  NSString v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  void *v36;
  char *v37;
  id v38;
  void *v39;
  id v40;
  id v41;
  void *v42;
  char v43;
  void *v44;
  unsigned __int16 v45;
  uint64_t *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  void *v51;
  char v52;
  int v53;
  void *v54;
  id v55;
  id v56;
  void *v57;
  char *v58;
  id v59;
  char v60;
  id v61;
  id v62;
  void *v63;
  void *v64;
  double v65;
  uint64_t v66;
  char *v67;
  void *v68;
  id v69;
  NSString v70;
  NSString v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  Class v76;
  double v77;
  double v78;
  id v79;
  unint64_t v80;
  id v81;
  objc_class *v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  uint64_t v89;
  id v90;
  Class isa;
  double *v93;
  id v94;
  objc_class *v95;
  uint64_t v96;
  id v97;
  void *v98;
  id v99;
  void *v100;

  v1 = *(void **)&v0[OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_element];
  if ((objc_msgSend(v1, "options") & 4) != 0)
  {
    sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
    v24 = swift_allocObject(&unk_10128A4C8, 24, 7);
    *(_QWORD *)(v24 + 16) = v0;
    v25 = v0;
    v26 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100950EF8, v24);
    v99 = (id)objc_opt_self(NSBundle);
    v27 = objc_msgSend(v99, "mainBundle");
    v28 = String._bridgeToObjectiveC()();
    v29 = String._bridgeToObjectiveC()();
    v30 = objc_msgSend(v27, "localizedStringForKey:value:table:", v28, v29, 0);

    v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
    v33 = v32;

    v34 = objc_opt_self(UIColor);
    v35 = v26;
    v36 = (void *)v34;
    v37 = v25;
    v38 = objc_msgSend(v36, "labelColor");
    v39 = sub_1004C85B0(v31, v33, 0, (uint64_t)v38, 0, 1, v26, 0, 6.0);
    swift_bridgeObjectRelease(v33);
    v98 = v35;

    v100 = v39;
    v40 = objc_msgSend(v39, "heightAnchor");
    if (qword_1013DC8B0 != -1)
      swift_once(&qword_1013DC8B0, sub_1004C5444);
    v41 = objc_msgSend(v40, "constraintGreaterThanOrEqualToConstant:", *(double *)&qword_10147E6D0);

    objc_msgSend(v41, "setActive:", 1);
    v42 = (void *)sub_10094E67C();
    if ((unint64_t)v42 < 2)
      goto LABEL_32;
    v44 = v42;
    if ((v43 & 1) != 0)
      goto LABEL_31;
    v97 = v42;
    v45 = (unsigned __int16)objc_msgSend(v1, "options");
    v46 = &OBJC_IVAR____TtC8Freeform38CRLiOSMiniFormatterColorPaletteBuilder_fullColorPalette;
    if ((v45 & 0x1000) != 0)
      v46 = &OBJC_IVAR____TtC8Freeform38CRLiOSMiniFormatterColorPaletteBuilder_stickyColorPalette;
    v47 = &v37[*v46];
    v48 = *((_QWORD *)v47 + 2);
    v49 = *(_QWORD *)(v48 + 16);
    if (!v49)
    {
      swift_bridgeObjectRetain(*((_QWORD *)v47 + 2));
      sub_1004CB49C(v44);
      swift_bridgeObjectRelease(v48);
      goto LABEL_33;
    }
    swift_bridgeObjectRetain_n(*((_QWORD *)v47 + 2), 2);
    sub_1004CB968(v44);
    swift_bridgeObjectRetain(v48);
    v96 = v48;
    v50 = (_BYTE *)(v48 + 40);
    v51 = v97;
    while (1)
    {
      v53 = *v50;
      if ((v53 - 2) < 2)
        goto LABEL_16;
      v54 = (void *)*((_QWORD *)v50 - 1);
      if (*v50)
      {
        sub_1006B8360(*((id *)v50 - 1), 1u);
        v55 = objc_msgSend(v54, "color");
        v56 = objc_msgSend(v51, "referenceColor");
        v57 = v56;
        if (v55)
        {
          if (v56)
          {
            sub_1004B8930(0, (unint64_t *)&qword_1013FBC20, off_101229840);
            v58 = v37;
            v59 = v55;
            v51 = v97;
            v60 = static NSObject.== infix(_:_:)(v59, v57);
            sub_1006B8384(v54, 1u);

            v37 = v58;
            if ((v60 & 1) != 0)
              goto LABEL_30;
            goto LABEL_15;
          }
          sub_1006B8384(v54, 1u);
          v57 = v55;
        }
        else
        {
          sub_1006B8384(v54, 1u);
          if (!v57)
          {
LABEL_30:
            swift_bridgeObjectRelease_n(v96, 2);
            sub_1006B8384(v54, v53);
            sub_1004CB49C(v44);
            sub_1004CB49C(v44);
            swift_bridgeObjectRelease(v96);
LABEL_31:
            sub_1004CB49C(v44);
LABEL_32:
            v44 = 0;
LABEL_33:
            v62 = v44;
            sub_10094A614((uint64_t)v44, 2);
            v64 = v63;
            if (qword_1013DD5A8 != -1)
              swift_once(&qword_1013DD5A8, sub_10094BA6C);
            v65 = *(double *)&qword_101480058;
            v66 = swift_allocObject(&unk_10128A4F0, 24, 7);
            *(_QWORD *)(v66 + 16) = v37;
            v67 = v37;
            v68 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100950FA4, v66);
            v69 = objc_msgSend(v99, "mainBundle");
            v70 = String._bridgeToObjectiveC()();
            v71 = String._bridgeToObjectiveC()();
            v72 = objc_msgSend(v69, "localizedStringForKey:value:table:", v70, v71, 0);

            v73 = static String._unconditionallyBridgeFromObjectiveC(_:)(v72);
            v75 = v74;

            v76 = sub_100A087E4(v64, v68, v73, v75, v65);
            swift_bridgeObjectRelease(v75);

            LODWORD(v77) = 1148846080;
            -[objc_class setContentHuggingPriority:forAxis:](v76, "setContentHuggingPriority:forAxis:", 0, v77);
            LODWORD(v78) = 1148846080;
            -[objc_class setContentCompressionResistancePriority:forAxis:](v76, "setContentCompressionResistancePriority:forAxis:", 0, v78);
            v79 = v100;
            if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
            {
              v80 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8) + 0x10);
              v81 = v100;
              v82 = v76;
              v84 = v80 + 2;
              if (!__OFADD__(v80, 2))
                goto LABEL_37;
LABEL_48:
              __break(1u);
              goto LABEL_49;
            }
            if ((uint64_t)_swiftEmptyArrayStorage < 0)
              v93 = _swiftEmptyArrayStorage;
            else
              v93 = (double *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
            v94 = v100;
            v95 = v76;
            swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
            v80 = _CocoaArrayWrapper.endIndex.getter(v93);
            swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
            v84 = v80 + 2;
            if (__OFADD__(v80, 2))
              goto LABEL_48;
LABEL_37:
            v85 = sub_100DCD070(v84, 1);
            specialized Array._endMutation()(v85);
            v79 = v100;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v79);
            v80 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
            v83 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v80 >= v83 >> 1)
LABEL_49:
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v83 > 1, v80 + 1, 1);
            v86 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v80, v79);
            specialized Array._endMutation()(v86);
            v20 = v76;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v20);
            v88 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
            v87 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v88 >= v87 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v87 > 1, v88 + 1, 1);
            v89 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v88, v20);
            specialized Array._endMutation()(v89);

LABEL_41:
            v90 = objc_allocWithZone((Class)UIStackView);
            sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
            isa = Array._bridgeToObjectiveC()().super.isa;
            v61 = objc_msgSend(v90, "initWithArrangedSubviews:", isa, swift_bridgeObjectRelease(_swiftEmptyArrayStorage).n128_f64[0]);

            objc_msgSend(v61, "setAlignment:", 1);
            objc_msgSend(v61, "setSpacing:", 7.5);
            return v61;
          }
        }

        LOBYTE(v53) = 1;
      }
      else
      {
        sub_1004B8930(0, (unint64_t *)&qword_1013F3910, off_101229898);
        sub_1006B8360(v54, 0);
        sub_1004CB968(v44);
        sub_1006B8360(v54, 0);
        v52 = static NSObject.== infix(_:_:)(v51, v54);
        sub_1006B8384(v54, 0);
        sub_1004CB49C(v44);
        if ((v52 & 1) != 0)
          goto LABEL_30;
      }
LABEL_15:
      sub_1006B8384(v54, v53);
LABEL_16:
      v50 += 16;
      if (!--v49)
      {
        swift_bridgeObjectRelease_n(v96, 2);
        sub_1004CB49C(v44);
        sub_1004CB49C(v44);
        swift_bridgeObjectRelease(v96);
        goto LABEL_33;
      }
    }
  }
  if ((v0[OBJC_IVAR____TtC8Freeform38CRLiOSMiniFormatterColorPaletteBuilder_showMoreOptionsButton] & 1) != 0)
  {
    sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
    v2 = swift_allocObject(&unk_10128A518, 24, 7);
    *(_QWORD *)(v2 + 16) = v0;
    v3 = v0;
    v4 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100950F1C, v2);
    v5 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v6 = String._bridgeToObjectiveC()();
    v7 = String._bridgeToObjectiveC()();
    v8 = objc_msgSend(v5, "localizedStringForKey:value:table:", v6, v7, 0);

    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v11 = v10;

    v12 = String._bridgeToObjectiveC()();
    v13 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v12);

    v14 = (void *)objc_opt_self(UIFont);
    v15 = v4;
    v16 = objc_msgSend(v14, "preferredFontForTextStyle:", UIFontTextStyleBody);
    v17 = sub_1004C85B0(v9, v11, v13, 0, 0x4024000000000000, 0, v4, v16, 8.0);
    swift_bridgeObjectRelease(v11);

    v18 = objc_msgSend(v17, "heightAnchor");
    v19 = objc_msgSend(v18, "constraintGreaterThanOrEqualToConstant:", 46.0);

    objc_msgSend(v19, "setActive:", 1);
    v20 = v17;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v20);
    v22 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    v21 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v22 >= v21 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v21 > 1, v22 + 1, 1);
    v23 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v22, v20);
    specialized Array._endMutation()(v23);
    goto LABEL_41;
  }
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  return 0;
}

void sub_10094E2BC(void *a1)
{
  uint64_t v1;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjCClassFromMetadata;
  id v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  _QWORD aBlock[5];
  uint64_t v24;
  __objc2_prot *v25;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_element);
  if ((objc_msgSend(v3, "options") & 4) != 0 || (objc_msgSend(v3, "options") & 0x1000) != 0)
  {
    v12 = *(void **)(*(_QWORD *)(v1
                               + OBJC_IVAR____TtC8Freeform38CRLiOSMiniFormatterColorPaletteBuilder_shapeFillDataProvider)
                   + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
    v13 = sub_1004B8930(0, (unint64_t *)&qword_1013F2E80, off_1012299C0);
    if (v13)
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v13, v14);
    else
      ObjCClassFromMetadata = 0;
    v16 = objc_msgSend(v12, "mostSpecificCurrentEditorOfClass:", ObjCClassFromMetadata);
    v17 = objc_opt_self(CRLShapeEditor);
    v18 = (void *)swift_dynamicCastObjCClass(v16, v17);
    v22 = v18;
    if (!v18)
    {
      swift_unknownObjectRelease(v16);
      v18 = 0;
    }
    objc_msgSend(v18, "setShapeFill:", a1);

  }
  else
  {
    if ((objc_msgSend(v3, "options") & 8) != 0)
    {
      if (!a1 || (v8 = objc_msgSend(a1, "referenceColor")) == 0)
        v8 = objc_msgSend((id)objc_opt_self(CRLColor), "clearColor");
      v19 = objc_msgSend(*(id *)(*(_QWORD *)(v1+ OBJC_IVAR____TtC8Freeform38CRLiOSMiniFormatterColorPaletteBuilder_strokeDataProvider)+ OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController), "mostSpecificEditorConformingToProtocol:", &OBJC_PROTOCOL___CRLStrokeEditor);
      if (v19)
      {
        v20 = v19;
        v25 = &OBJC_PROTOCOL___CRLStrokeEditor;
        v21 = (void *)swift_dynamicCastObjCProtocolConditional(v19, 1, &v25);
        if (v21)
          objc_msgSend(v21, "applyStrokeColor:", v8);
        swift_unknownObjectRelease(v20);
      }
      sub_1007BEDBC();
LABEL_23:

      return;
    }
    if ((objc_msgSend(v3, "options") & 0x10) != 0
      || (objc_msgSend(v3, "options") & 0x80000) != 0)
    {
      if (a1)
      {
        v4 = *(void **)(*(_QWORD *)(v1
                                  + OBJC_IVAR____TtC8Freeform38CRLiOSMiniFormatterColorPaletteBuilder_textDataProvider)
                      + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
        v5 = swift_allocObject(&unk_10128A478, 32, 7);
        *(_QWORD *)(v5 + 24) = 0;
        *(_QWORD *)(v5 + 16) = 0;
        aBlock[4] = sub_100500184;
        v24 = v5;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = *(_QWORD *)"";
        aBlock[2] = sub_100541BD8;
        aBlock[3] = &unk_10128A490;
        v6 = _Block_copy(aBlock);
        v7 = v24;
        swift_retain(v5);
        v8 = a1;
        objc_msgSend(v4, "enumerateEditorsOnStackUsingBlock:", v6, swift_release(v7).n128_f64[0]);
        _Block_release(v6);
        swift_beginAccess(v5 + 16, aBlock, 0, 0);
        v9 = *(_QWORD *)(v5 + 16);
        v10 = *(_QWORD *)(v5 + 24);
        swift_unknownObjectRetain(v9);
        swift_release(v5);
        if (v9)
        {
          ObjectType = swift_getObjectType(v9);
          (*(void (**)(id, uint64_t, uint64_t))(v10 + 176))(v8, ObjectType, v10);

          swift_unknownObjectRelease(v9);
          return;
        }
        goto LABEL_23;
      }
      sub_100757E04(&_mh_execute_header, (uint64_t)"set(fill:)", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Formatters/CRLiOSMiniFormatterColorPaletteBuilder.swift", 113, 2, 398, "invalid nil value found", 23, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"set(fill:)", 10, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Formatters/CRLiOSMiniFormatterColorPaletteBuilder.swift", 113, 2u, 398, (uint64_t)"invalid nil value found", 23, 2u);
    }
  }
}

uint64_t sub_10094E67C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  char v6;
  void *v7;
  uint64_t v8;
  uint64_t v10;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_element);
  if (((objc_msgSend(v1, "options") & 4) != 0 || (objc_msgSend(v1, "options") & 0x1000) != 0)
    && (v2 = sub_100557658()) != 0)
  {
    v3 = v2;
    sub_100948CA8(&v10, v2);
    swift_bridgeObjectRelease(v3);
    return v10;
  }
  else
  {
    if ((objc_msgSend(v1, "options") & 8) != 0)
    {
      v5 = (void *)sub_1007BF0F4();
      if ((unint64_t)v5 >= 2)
      {
        v7 = v5;
        if ((v6 & 1) == 0)
        {
          v4 = objc_msgSend(objc_allocWithZone((Class)CRLColorFill), "initWithColor:", v5);
          sub_1004CB49C(v7);
          return (uint64_t)v4;
        }
        sub_1004CB49C(v5);
      }
    }
    if ((objc_msgSend(v1, "options") & 0x10) != 0
      || (objc_msgSend(v1, "options") & 0x80000) != 0)
    {
      v8 = sub_1008533EC();
      if (v8)
        return v8;
      else
        return 1;
    }
    else
    {
      return 1;
    }
  }
}

void sub_10094E7EC()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  objc_class *v3;
  char *v4;
  id v5;
  char *v6;
  char *v7;
  id v8;
  char *v9;
  id v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t Strong;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  char *v22;
  uint64_t v23;
  void *v24;
  char v25;
  void *v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  objc_super v31;

  if (v0[OBJC_IVAR____TtC8Freeform38CRLiOSMiniFormatterColorPaletteBuilder_isEditingText] != 1)
  {
    v16 = &v0[OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_presenter];
    Strong = swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_presenter]);
    if (!Strong)
      return;
    v18 = Strong;
    v19 = *((_QWORD *)v16 + 2);
    v20 = type metadata accessor for CRLiOSMiniFormatterColorPickerViewController();
    ObjectType = swift_getObjectType(v18);
    v22 = v0;
    swift_unknownObjectRetain(v18);
    v30 = sub_1004CA528(v23, (uint64_t)v22, v20, ObjectType, v19);
    objc_msgSend(v30, "setDelegate:", v22);
    v24 = (void *)sub_10094E67C();
    if (v24 == (void *)1)
      goto LABEL_12;
    v26 = v24;
    if ((v25 & 1) == 0)
    {
      if (!v24)
      {
LABEL_12:
        (*(void (**)(id, char *, uint64_t, uint64_t))(v19 + 32))(v30, v22, ObjectType, v19);
        swift_unknownObjectRelease(v18);

        return;
      }
      v27 = objc_msgSend(v24, "referenceColor");
      if (v27)
      {
        v28 = v27;
        v29 = objc_msgSend(v27, "UIColor");

        if (v29)
        {
          objc_msgSend(v30, "crl_ifVisuallyDifferentSetSelectedColor:", v29);

        }
      }
    }
    sub_1004CB49C(v26);
    goto LABEL_12;
  }
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform38CRLiOSMiniFormatterColorPaletteBuilder_headerTitle];
  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform38CRLiOSMiniFormatterColorPaletteBuilder_headerTitle + 8];
  v3 = (objc_class *)type metadata accessor for CRLiOSMiniFormatterTextEditingColorPickerViewController();
  v4 = (char *)objc_allocWithZone(v3);
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform55CRLiOSMiniFormatterTextEditingColorPickerViewController_builder] = v0;
  v5 = objc_allocWithZone((Class)PKColorPicker);
  swift_bridgeObjectRetain(v1);
  v6 = v0;
  v7 = v4;
  v8 = objc_msgSend(v5, "init");
  *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform55CRLiOSMiniFormatterTextEditingColorPickerViewController_colorPicker] = v8;
  v9 = &v7[OBJC_IVAR____TtC8Freeform55CRLiOSMiniFormatterTextEditingColorPickerViewController_headerTitle];
  *(_QWORD *)v9 = v2;
  *((_QWORD *)v9 + 1) = v1;

  v31.receiver = v7;
  v31.super_class = v3;
  v10 = objc_msgSendSuper2(&v31, "initWithNibName:bundle:", 0, 0);
  v11 = &v6[OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_presenter];
  v12 = swift_unknownObjectWeakLoadStrong(&v6[OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_presenter]);
  if (v12)
  {
    v13 = v12;
    v14 = *((_QWORD *)v11 + 2);
    v15 = swift_getObjectType(v12);
    (*(void (**)(id, uint64_t, uint64_t))(v14 + 24))(v10, v15, v14);

    swift_unknownObjectRelease(v13);
  }
  else
  {

  }
}

void *sub_10094EA68()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v9;

  v1 = sub_100704150();
  if (v1)
    sub_100511EB8(v1);
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_element);
  if (((objc_msgSend(v2, "options") & 4) != 0 || (objc_msgSend(v2, "options") & 0x1000) != 0)
    && (v3 = sub_100557658()) != 0
    || (objc_msgSend(v2, "options") & 8) != 0 && (v3 = sub_100557658()) != 0
    || ((objc_msgSend(v2, "options") & 0x10) != 0
     || (objc_msgSend(v2, "options") & 0x80000) != 0)
    && (v3 = sub_100557658()) != 0)
  {
    v4 = v3;
    v5 = v3 & 0xFFFFFFFFFFFFFF8;
    if ((unint64_t)v3 >> 62)
    {
      if (v3 < 0)
        v5 = v3;
      v9 = type metadata accessor for CRLBoardItem(0);
      v7 = _bridgeCocoaArray<A>(_:)(v5, v9);
    }
    else
    {
      v6 = swift_bridgeObjectRetain(v3);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v6);
      type metadata accessor for CRLBoardItem(0);
      v7 = v4;
    }
    swift_bridgeObjectRelease();
    sub_10051FB14(v7);
    swift_bridgeObjectRelease();
  }
  return &_swiftEmptySetSingleton;
}

uint64_t sub_10094EBDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  char v34;
  char v35;
  uint64_t v37[3];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v5 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_element);
  if ((objc_msgSend(v5, "options") & 4) != 0 || (objc_msgSend(v5, "options") & 0x1000) != 0)
  {
    v6 = sub_100557658();
    if (v6)
    {
      v7 = v6;
      sub_1004CB6E8(a2, (uint64_t)&v38);
      v8 = type metadata accessor for CRLShapeItem(0);
      if ((swift_dynamicCast(v37, &v38, (char *)&type metadata for Any + 8, v8, 6) & 1) != 0)
      {
        v9 = (void *)v37[0];
        v10 = sub_100C9D9C0(v37[0], v7);
        swift_bridgeObjectRelease(v7);
        if ((v10 & 1) != 0)
        {
          v11 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform15CRLChangeRecord_details)
              + OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data;
          swift_beginAccess(v11, v37, 0, 0);
          v12 = *(_QWORD *)v11;
          if (!*(_QWORD *)(*(_QWORD *)v11 + 16) || (v13 = sub_100843260(20), (v14 & 1) == 0))
          {
LABEL_35:
            v21 = 0;
            v38 = 0;
            v39 = 0;
            v40 = 0;
            v41 = 1;
            goto LABEL_36;
          }
LABEL_17:
          sub_1004F370C(*(_QWORD *)(v12 + 56) + 32 * v13, (uint64_t)&v38);
          v21 = 1;
LABEL_36:
          sub_100607CA8((uint64_t)&v38);

          return v21 & 1;
        }

      }
      else
      {
        swift_bridgeObjectRelease(v7);
      }
    }
  }
  if ((objc_msgSend(v5, "options") & 8) != 0)
  {
    sub_1004CB6E8(a2, (uint64_t)&v38);
    v15 = type metadata accessor for CRLShapeItem(0);
    if ((swift_dynamicCast(v37, &v38, (char *)&type metadata for Any + 8, v15, 6) & 1) != 0)
    {
      v9 = (void *)v37[0];
      v16 = sub_100557658();
      if (v16)
      {
        v17 = v16;
        v18 = sub_100C9D9C0((uint64_t)v9, v16);
        swift_bridgeObjectRelease(v17);
        if ((v18 & 1) != 0)
        {
          v19 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform15CRLChangeRecord_details)
              + OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data;
          swift_beginAccess(v19, v37, 0, 0);
          v12 = *(_QWORD *)v19;
          if (!*(_QWORD *)(*(_QWORD *)v19 + 16))
            goto LABEL_35;
          v13 = sub_100843260(15);
          if ((v20 & 1) == 0)
            goto LABEL_35;
          goto LABEL_17;
        }
      }

    }
  }
  if ((objc_msgSend(v5, "options") & 0x10) == 0
    && (objc_msgSend(v5, "options") & 0x80000) == 0)
  {
    goto LABEL_34;
  }
  sub_1004CB6E8(a2, (uint64_t)&v38);
  v22 = type metadata accessor for CRLShapeItem(0);
  if ((swift_dynamicCast(v37, &v38, (char *)&type metadata for Any + 8, v22, 6) & 1) == 0)
    goto LABEL_34;
  v23 = (void *)v37[0];
  v24 = sub_100557658();
  if (!v24 || (v25 = v24, v26 = sub_100C9D9C0((uint64_t)v23, v24), swift_bridgeObjectRelease(v25), (v26 & 1) == 0))
  {

LABEL_34:
    v21 = sub_1004C9944(a1, a2);
    return v21 & 1;
  }
  v27 = *(char **)(a1 + OBJC_IVAR____TtC8Freeform15CRLChangeRecord_details);
  v28 = &v27[OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data];
  v29 = v27;
  swift_beginAccess(v28, v37, 0, 0);
  v30 = *(_QWORD *)v28;
  if (*(_QWORD *)(*(_QWORD *)v28 + 16))
  {
    v31 = sub_100843260(25);
    if ((v32 & 1) != 0)
      goto LABEL_32;
  }
  v38 = 0;
  v39 = 0;
  v40 = 0;
  v41 = 1;
  sub_100607CA8((uint64_t)&v38);
  v30 = *(_QWORD *)v28;
  if (*(_QWORD *)(*(_QWORD *)v28 + 16))
  {
    v31 = sub_100843260(27);
    if ((v33 & 1) != 0)
      goto LABEL_32;
  }
  v38 = 0;
  v39 = 0;
  v40 = 0;
  v41 = 1;
  sub_100607CA8((uint64_t)&v38);
  v30 = *(_QWORD *)v28;
  if (*(_QWORD *)(*(_QWORD *)v28 + 16))
  {
    v31 = sub_100843260(29);
    if ((v34 & 1) != 0)
      goto LABEL_32;
  }
  v38 = 0;
  v39 = 0;
  v40 = 0;
  v41 = 1;
  sub_100607CA8((uint64_t)&v38);
  v30 = *(_QWORD *)v28;
  if (*(_QWORD *)(*(_QWORD *)v28 + 16) && (v31 = sub_100843260(30), (v35 & 1) != 0))
  {
LABEL_32:
    sub_1004F370C(*(_QWORD *)(v30 + 56) + 32 * v31, (uint64_t)&v38);
    sub_100607CA8((uint64_t)&v38);

    v21 = 1;
  }
  else
  {
    v38 = 0;
    v39 = 0;
    v40 = 0;
    v41 = 1;
    sub_100607CA8((uint64_t)&v38);

    v21 = 0;
  }
  return v21 & 1;
}

unint64_t sub_10094F004()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_element);
  if ((objc_msgSend(v1, "options") & 0x10) != 0)
    return 1;
  else
    return ((unint64_t)objc_msgSend(v1, "options") >> 19) & 1;
}

uint64_t sub_10094F058(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  char v10;
  char *v11;
  char v12;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25[3];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v5 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_element);
  if ((objc_msgSend(v5, "options") & 4) == 0
    && (objc_msgSend(v5, "options") & 0x1000) == 0
    && (objc_msgSend(v5, "options") & 0x80000) == 0)
  {
    goto LABEL_13;
  }
  v6 = sub_100557658();
  if (!v6)
    goto LABEL_13;
  v7 = v6;
  sub_1004CB6E8(a2, (uint64_t)&v26);
  v8 = type metadata accessor for CRLShapeItem(0);
  if ((swift_dynamicCast(v25, &v26, (char *)&type metadata for Any + 8, v8, 6) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  v9 = (void *)v25[0];
  v10 = sub_100C9D9C0(v25[0], v7);
  swift_bridgeObjectRelease();
  if ((v10 & 1) == 0)
  {

    goto LABEL_13;
  }
  v11 = (char *)*(id *)(a1 + OBJC_IVAR____TtC8Freeform15CRLChangeRecord_details);
  if ((objc_msgSend(v5, "options") & 4) != 0 || (objc_msgSend(v5, "options") & 0x1000) != 0)
  {
    v14 = &v11[OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data];
    swift_beginAccess(&v11[OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data], v25, 0, 0);
    v15 = *(_QWORD *)v14;
    if (*(_QWORD *)(v15 + 16) && (v16 = sub_100843260(20), (v17 & 1) != 0))
    {
      sub_1004F370C(*(_QWORD *)(v15 + 56) + 32 * v16, (uint64_t)&v26);
      v12 = 1;
    }
    else
    {
      v12 = 0;
      v26 = 0;
      v27 = 0;
      v28 = 0;
      v29 = 1;
    }
    sub_100607CA8((uint64_t)&v26);

  }
  else
  {
    if ((objc_msgSend(v5, "options") & 0x80000) == 0)
    {

LABEL_13:
      v12 = sub_1004C9944(a1, a2);
      return v12 & 1;
    }
    v18 = &v11[OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data];
    swift_beginAccess(&v11[OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data], v25, 0, 0);
    v19 = *(_QWORD *)v18;
    if (*(_QWORD *)(*(_QWORD *)v18 + 16) && (v20 = sub_100843260(25), (v21 & 1) != 0))
    {
      sub_1004F370C(*(_QWORD *)(v19 + 56) + 32 * v20, (uint64_t)&v26);
      sub_100607CA8((uint64_t)&v26);

      v12 = 1;
    }
    else
    {
      v26 = 0;
      v27 = 0;
      v28 = 0;
      v29 = 1;
      sub_100607CA8((uint64_t)&v26);
      v22 = *(_QWORD *)v18;
      if (*(_QWORD *)(*(_QWORD *)v18 + 16) && (v23 = sub_100843260(27), (v24 & 1) != 0))
      {
        sub_1004F370C(*(_QWORD *)(v22 + 56) + 32 * v23, (uint64_t)&v26);
        v12 = 1;
      }
      else
      {
        v12 = 0;
        v26 = 0;
        v27 = 0;
        v28 = 0;
        v29 = 1;
      }
      sub_100607CA8((uint64_t)&v26);

    }
  }
  return v12 & 1;
}

BOOL sub_10094F310()
{
  uint64_t v0;
  void *v1;
  char v2;

  if ((objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_element), "options") & 8) == 0)return 0;
  v1 = (void *)sub_1007BEFB8();
  if (v1)
  {
    if (v1 != (void *)1)
      sub_1004CB49C(v1);
    return 0;
  }
  return (v2 & 1) == 0;
}

uint64_t sub_10094F378()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC8Freeform38CRLiOSMiniFormatterColorPaletteBuilder_fullColorPalette
                                      + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC8Freeform38CRLiOSMiniFormatterColorPaletteBuilder_stickyColorPalette
                                      + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC8Freeform38CRLiOSMiniFormatterColorPaletteBuilder_singleRowPalette
                                      + 16));
  return swift_bridgeObjectRelease(*(_QWORD *)(v0
                                             + OBJC_IVAR____TtC8Freeform38CRLiOSMiniFormatterColorPaletteBuilder_headerTitle
                                             + 8));
}

id sub_10094F404()
{
  return sub_1004C3370(type metadata accessor for CRLiOSMiniFormatterColorPaletteBuilder);
}

uint64_t type metadata accessor for CRLiOSMiniFormatterColorPaletteBuilder()
{
  return objc_opt_self(_TtC8Freeform38CRLiOSMiniFormatterColorPaletteBuilder);
}

void sub_10094F6F8()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  char v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  Class isa;
  id v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  Class v26;
  uint64_t v27;
  id v28;
  objc_super v29;

  v1 = v0;
  v29.receiver = v0;
  v29.super_class = (Class)type metadata accessor for CRLiOSMiniFormatterTextEditingColorPickerViewController();
  objc_msgSendSuper2(&v29, "loadView");
  v2 = objc_msgSend(v0, "view");
  if (!v2)
  {
    __break(1u);
    goto LABEL_16;
  }
  v3 = v2;
  v4 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
  objc_msgSend(v3, "setBackgroundColor:", v4);

  v5 = *(void **)&v1[OBJC_IVAR____TtC8Freeform55CRLiOSMiniFormatterTextEditingColorPickerViewController_colorPicker];
  objc_msgSend(v5, "setDelegate:", *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform55CRLiOSMiniFormatterTextEditingColorPickerViewController_builder]);
  objc_msgSend(v5, "setColorUserInterfaceStyle:", 1);
  objc_msgSend(v5, "setEdgesForExtendedLayout:", 0);
  v6 = (void *)sub_10094E67C();
  v8 = 0;
  if (v6 != (void *)1)
  {
    v9 = v6;
    if ((v7 & 1) == 0)
    {
      if (!v6)
      {
LABEL_8:
        v8 = 0;
        goto LABEL_9;
      }
      v10 = objc_msgSend(v6, "referenceColor");
      if (v10)
      {
        v11 = v10;
        v8 = objc_msgSend(v10, "UIColor");
        sub_1004CB49C(v9);

        goto LABEL_9;
      }
    }
    sub_1004CB49C(v9);
    goto LABEL_8;
  }
LABEL_9:
  objc_msgSend(v5, "setSelectedColor:", v8);

  v12 = objc_msgSend(v5, "view");
  if (!v12)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v13 = v12;
  objc_msgSend(v12, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  objc_msgSend(v1, "addChildViewController:", v5);
  v14 = sub_10094FB60();
  v15 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v16 = swift_allocObject(v15, 48, 7);
  *(_OWORD *)(v16 + 16) = xmmword_100EF5560;
  *(_QWORD *)(v16 + 32) = v14;
  v17 = v14;
  v18 = objc_msgSend(v5, "view");
  if (!v18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  *(_QWORD *)(v16 + 40) = v18;
  specialized Array._endMutation()(v18);
  v19 = objc_allocWithZone((Class)UIStackView);
  sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v21 = objc_msgSend(v19, "initWithArrangedSubviews:", isa, swift_bridgeObjectRelease().n128_f64[0]);

  objc_msgSend(v21, "setAxis:", 1);
  objc_msgSend(v21, "setSpacing:", 8.0);
  objc_msgSend(v21, "setLayoutMarginsRelativeArrangement:", 1);
  objc_msgSend(v21, "setDirectionalLayoutMargins:", 12.0, 8.0, 8.0, 8.0);
  objc_msgSend(v21, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v22 = objc_msgSend(v1, "view");
  if (!v22)
  {
LABEL_18:
    __break(1u);
    return;
  }
  v23 = v22;
  objc_msgSend(v22, "addSubview:", v21);

  v28 = objc_msgSend(v1, "view");
  v24 = sub_1004B804C((uint64_t *)&unk_1013FBC10);
  v25 = Optional._bridgeToObjectiveC()(v24);

  v26 = (Class)objc_msgSend(v21, "crl_constraintsToAllSidesOfItem:", v25);
  swift_unknownObjectRelease(v25);
  if (!v26)
  {
    v27 = sub_1004B8930(0, (unint64_t *)&qword_1013E1760, NSLayoutConstraint_ptr);
    static Array._unconditionallyBridgeFromObjectiveC(_:)(0, v27);
    v26 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  objc_msgSend((id)objc_opt_self(NSLayoutConstraint), "activateConstraints:", v26);

  objc_msgSend(v5, "didMoveToParentViewController:", v1);
}

id sub_10094FB60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  NSString v14;
  NSString v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  NSString v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  double v29;
  id v30;
  id v31;
  NSString v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  id v39;
  id v40;
  Class isa;
  id v42;
  id v43;
  id v44;
  id v45;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;

  v1 = v0;
  v2 = sub_1004B804C((uint64_t *)&unk_1013DFBD0);
  __chkstk_darwin(v2);
  v4 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UIButton.Configuration(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v47 - v10;
  static UIButton.Configuration.plain()(v12);
  v13 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v14 = String._bridgeToObjectiveC()();
  v15 = String._bridgeToObjectiveC()();
  v16 = objc_msgSend(v13, "localizedStringForKey:value:table:", v14, v15, 0);

  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v19 = v18;

  UIButton.Configuration.title.setter(v17, v19, v20);
  UIConfigurationTextAttributesTransformer.init(_:)(sub_10094D0C8, 0);
  v21 = type metadata accessor for UIConfigurationTextAttributesTransformer(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v4, 0, 1, v21);
  UIButton.Configuration.titleTextAttributesTransformer.setter(v4);
  v22 = String._bridgeToObjectiveC()();
  v23 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v22);

  UIButton.Configuration.image.setter(v23);
  v24 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:weight:", 7, 14.0);
  v25 = UIButton.Configuration.preferredSymbolConfigurationForImage.setter(v24);
  UIButton.Configuration.imagePadding.setter(v25, 3.0);
  UIButton.Configuration.contentInsets.setter(NSDirectionalEdgeInsetsZero.top, NSDirectionalEdgeInsetsZero.leading, NSDirectionalEdgeInsetsZero.bottom, NSDirectionalEdgeInsetsZero.trailing);
  sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
  v26 = swift_allocObject(&unk_10128A408, 24, 7);
  swift_unknownObjectWeakInit(v26 + 16);
  v27 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100950D54, v26);
  sub_1004B8930(0, (unint64_t *)&unk_1013DFBC0, UIButton_ptr);
  v49 = v6;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
  v48 = v27;
  v28 = (void *)UIButton.init(configuration:primaryAction:)(v8, v27);
  LODWORD(v29) = 1148846080;
  objc_msgSend(v28, "setContentHuggingPriority:forAxis:", 0, v29);
  v30 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v31 = objc_msgSend((id)objc_opt_self(UIFont), "boldSystemFontOfSize:", 18.0);
  objc_msgSend(v30, "setFont:", v31);

  if (*(_QWORD *)(v1
                 + OBJC_IVAR____TtC8Freeform55CRLiOSMiniFormatterTextEditingColorPickerViewController_headerTitle
                 + 8))
    v32 = String._bridgeToObjectiveC()();
  else
    v32 = 0;
  objc_msgSend(v30, "setText:", v32);

  v33 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  objc_msgSend(v30, "setTextColor:", v33);

  objc_msgSend(v30, "setTextAlignment:", 1);
  v34 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v35 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v36 = swift_allocObject(v35, 56, 7);
  *(_OWORD *)(v36 + 16) = xmmword_100EF7300;
  *(_QWORD *)(v36 + 32) = v28;
  *(_QWORD *)(v36 + 40) = v30;
  *(_QWORD *)(v36 + 48) = v34;
  v50 = v36;
  specialized Array._endMutation()(v36);
  v37 = objc_allocWithZone((Class)UIStackView);
  sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
  v38 = v28;
  v39 = v30;
  v40 = v34;
  isa = Array._bridgeToObjectiveC()().super.isa;
  v42 = objc_msgSend(v37, "initWithArrangedSubviews:", isa, swift_bridgeObjectRelease().n128_f64[0]);

  v43 = objc_msgSend(v40, "widthAnchor");
  v44 = objc_msgSend(v38, "widthAnchor");
  v45 = objc_msgSend(v43, "constraintEqualToAnchor:", v44);

  objc_msgSend(v45, "setActive:", 1);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v11, v5);
  return v42;
}

void sub_10095012C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  char v10[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = (char *)objc_retain(*(id *)(Strong
                                   + OBJC_IVAR____TtC8Freeform55CRLiOSMiniFormatterTextEditingColorPickerViewController_builder));

    v6 = &v5[OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_presenter];
    v7 = swift_unknownObjectWeakLoadStrong(&v5[OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_presenter]);
    v8 = *((_QWORD *)v6 + 2);

    if (v7)
    {
      ObjectType = swift_getObjectType(v7);
      (*(void (**)(uint64_t, uint64_t))(v8 + 56))(ObjectType, v8);
      swift_unknownObjectRelease(v7);
    }
  }
}

id sub_100950224()
{
  return sub_1004C3370(type metadata accessor for CRLiOSMiniFormatterTextEditingColorPickerViewController);
}

uint64_t type metadata accessor for CRLiOSMiniFormatterTextEditingColorPickerViewController()
{
  return objc_opt_self(_TtC8Freeform55CRLiOSMiniFormatterTextEditingColorPickerViewController);
}

uint64_t sub_10095029C(uint64_t a1, uint64_t a2)
{
  return sub_10094EBDC(a1, a2) & 1;
}

unint64_t sub_1009502CC()
{
  _QWORD *v0;
  void *v1;

  v1 = *(void **)(*(_QWORD *)(*v0
                            + OBJC_IVAR____TtC8Freeform55CRLiOSMiniFormatterTextEditingColorPickerViewController_builder)
                + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_element);
  if ((objc_msgSend(v1, "options") & 0x10) != 0)
    return 1;
  else
    return ((unint64_t)objc_msgSend(v1, "options") >> 19) & 1;
}

void sub_100950330()
{
  sub_100950C5C();
}

double *sub_100950350(int64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  Swift::Int v10;
  Swift::Int v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  double *v17;
  uint64_t v18;
  uint64_t v19;
  double *v20;
  uint64_t v21;

  v6 = a1 + a3;
  if (__OFADD__(a1, a3))
  {
    __break(1u);
LABEL_38:
    if (v4 < 0)
      v7 = v4;
    else
      v7 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v8 = _CocoaArrayWrapper.endIndex.getter(v7);
    swift_bridgeObjectRelease(v4);
    if (v8 >= v6)
      v8 = v6;
    if (v8 < v3)
      goto LABEL_49;
    swift_bridgeObjectRetain(v4);
    v7 = _CocoaArrayWrapper.endIndex.getter(v7);
    swift_bridgeObjectRelease(v4);
    if (v7 >= v3)
      goto LABEL_8;
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  v4 = a2;
  v3 = a1;
  v5 = a2 >> 62;
  if (a2 >> 62)
    goto LABEL_38;
  v7 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v7 >= v6)
    v8 = a1 + a3;
  else
    v8 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v8 < a1)
    goto LABEL_49;
  if (v7 < a1)
    goto LABEL_45;
LABEL_8:
  if (v3 < 0)
  {
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  if (v5)
  {
    if (v4 < 0)
      v9 = v4;
    else
      v9 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v7 = _CocoaArrayWrapper.endIndex.getter(v9);
    swift_bridgeObjectRelease(v4);
  }
  else
  {
    v7 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v7 < v8)
    goto LABEL_47;
  if (v8 < 0)
  {
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  if ((v4 & 0xC000000000000001) != 0 && v8 != v3)
  {
    if (v8 > (unint64_t)v3)
    {
      sub_1004B8930(0, (unint64_t *)&unk_1013DFBC0, UIButton_ptr);
      v10 = v3;
      do
      {
        v11 = v10 + 1;
        _ArrayBuffer._typeCheckSlowPath(_:)(v10);
        v10 = v11;
      }
      while (v8 != v11);
      goto LABEL_22;
    }
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
LABEL_22:
  if (v5)
  {
    if (v4 < 0)
      v12 = v4;
    else
      v12 = v4 & 0xFFFFFFFFFFFFFF8;
    v13 = swift_bridgeObjectRetain(v4);
    v7 = _CocoaArrayWrapper.subscript.getter(v3, v8, v12, v13);
    v5 = v14;
    v3 = v15;
    v8 = v16;
    swift_bridgeObjectRelease(v4);
    if ((v8 & 1) == 0)
      goto LABEL_29;
  }
  else
  {
    v7 = v4 & 0xFFFFFFFFFFFFFF8;
    v5 = (v4 & 0xFFFFFFFFFFFFFF8) + 32;
    v8 = (2 * v8) | 1;
    swift_bridgeObjectRetain(v4);
    if ((v8 & 1) == 0)
    {
LABEL_29:
      v17 = sub_1005FEE60(v7, v5, v3, v8);
      goto LABEL_36;
    }
  }
  v18 = type metadata accessor for __ContiguousArrayStorageBase(0);
  v19 = swift_unknownObjectRetain_n(v7, 2);
  v20 = (double *)swift_dynamicCastClass(v19, v18);
  if (!v20)
  {
    swift_unknownObjectRelease(v7);
    v20 = _swiftEmptyArrayStorage;
  }
  v21 = *((_QWORD *)v20 + 2);
  swift_release(v20);
  if (__OFSUB__((unint64_t)v8 >> 1, v3))
    goto LABEL_51;
  a1 = v7;
  if (v21 != ((unint64_t)v8 >> 1) - v3)
  {
LABEL_52:
    swift_unknownObjectRelease(a1);
    goto LABEL_29;
  }
  v17 = (double *)swift_dynamicCastClass(v7, v18);
  if (!v17)
  {
    swift_unknownObjectRelease(v7);
    v17 = _swiftEmptyArrayStorage;
  }
LABEL_36:
  swift_unknownObjectRelease(v7);
  return v17;
}

id sub_1009505DC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, void *a6, char a7, char a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, char a13)
{
  char *v13;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  objc_class *v27;
  id v28;
  char *v29;
  char *v30;
  id v31;
  char *v32;
  id v33;
  char *v34;
  objc_super v43;
  objc_super v44;
  objc_super v45;

  v15 = &v13[OBJC_IVAR____TtC8Freeform38CRLiOSMiniFormatterColorPaletteBuilder_fullColorPalette];
  v16 = qword_1013DD590;
  v17 = v13;
  if (v16 != -1)
    swift_once(&qword_1013DD590, sub_10094B1E0);
  v18 = qword_101480010;
  *(_OWORD *)v15 = xmmword_101480000;
  *((_QWORD *)v15 + 2) = v18;
  v19 = &v17[OBJC_IVAR____TtC8Freeform38CRLiOSMiniFormatterColorPaletteBuilder_stickyColorPalette];
  v20 = qword_1013DD598;
  swift_bridgeObjectRetain(v18);
  if (v20 != -1)
    swift_once(&qword_1013DD598, sub_10094B524);
  v22 = qword_101480030;
  *(_OWORD *)v19 = xmmword_101480020;
  *((_QWORD *)v19 + 2) = v22;
  v23 = &v17[OBJC_IVAR____TtC8Freeform38CRLiOSMiniFormatterColorPaletteBuilder_singleRowPalette];
  v24 = qword_1013DD5A0;
  swift_bridgeObjectRetain(v22);
  if (v24 != -1)
    swift_once(&qword_1013DD5A0, sub_10094B71C);
  v25 = qword_101480050;
  *(_OWORD *)v23 = xmmword_101480040;
  *((_QWORD *)v23 + 2) = v25;
  v26 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLMiniFormatterShapeFillDataProvider());
  *(_QWORD *)&v26[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController] = a5;
  v27 = (objc_class *)type metadata accessor for CRLMiniFormatterDataProvider();
  v45.receiver = v26;
  v45.super_class = v27;
  swift_bridgeObjectRetain(v25);
  v28 = a5;
  *(_QWORD *)&v17[OBJC_IVAR____TtC8Freeform38CRLiOSMiniFormatterColorPaletteBuilder_shapeFillDataProvider] = objc_msgSendSuper2(&v45, "init");
  v29 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLMiniFormatterStrokeDataProvider());
  v30 = &v29[OBJC_IVAR____TtC8Freeform34CRLMiniFormatterStrokeDataProvider_strokeChangingState];
  *(_QWORD *)v30 = 0;
  v30[8] = 1;
  *(_QWORD *)&v29[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController] = v28;
  v44.receiver = v29;
  v44.super_class = v27;
  v31 = v28;
  *(_QWORD *)&v17[OBJC_IVAR____TtC8Freeform38CRLiOSMiniFormatterColorPaletteBuilder_strokeDataProvider] = objc_msgSendSuper2(&v44, "init");
  v32 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLMiniFormatterTextDataProvider());
  *(_QWORD *)&v32[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController] = v31;
  v43.receiver = v32;
  v43.super_class = v27;
  v33 = v31;
  *(_QWORD *)&v17[OBJC_IVAR____TtC8Freeform38CRLiOSMiniFormatterColorPaletteBuilder_textDataProvider] = objc_msgSendSuper2(&v43, "init");
  v17[OBJC_IVAR____TtC8Freeform38CRLiOSMiniFormatterColorPaletteBuilder_showMoreOptionsButton] = a7 & 1;
  v17[OBJC_IVAR____TtC8Freeform38CRLiOSMiniFormatterColorPaletteBuilder_showHeaderView] = a8 & 1;
  v34 = &v17[OBJC_IVAR____TtC8Freeform38CRLiOSMiniFormatterColorPaletteBuilder_headerTitle];
  *(_QWORD *)v34 = a9;
  *((_QWORD *)v34 + 1) = a10;
  if ((a12 & 1) != 0)
  {
    if (qword_1013DC8A8 != -1)
      swift_once(&qword_1013DC8A8, sub_1004C5434);
    a11 = qword_10147E6C8;
  }
  *(_QWORD *)&v17[OBJC_IVAR____TtC8Freeform38CRLiOSMiniFormatterColorPaletteBuilder_rowSpacing] = a11;
  v17[OBJC_IVAR____TtC8Freeform38CRLiOSMiniFormatterColorPaletteBuilder_isEditingText] = a13 & 1;

  return sub_1004CA6E8(a1, a2, a3, a4, v33, a6);
}

UIImage *sub_1009508D8(uint64_t a1)
{
  NSString v2;
  void *v3;
  id v4;
  NSString v5;
  id v6;
  id v7;
  UIImage *v8;

  v2 = String._bridgeToObjectiveC()();
  v3 = (void *)objc_opt_self(UIImage);
  v4 = objc_msgSend(v3, "imageNamed:", v2);

  if (!v4)
    return 0;
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v3, "imageNamed:", v5);

  if (v6
    && (v7 = objc_msgSend(v6, "imageWithTintColor:renderingMode:", a1, 1),
        v6,
        v7))
  {
    v8 = sub_1008ECF80(v7);

    v4 = v7;
  }
  else
  {
    v8 = 0;
  }

  return v8;
}

UIImage *sub_1009509F8(uint64_t a1, uint64_t a2, SEL *a3)
{
  NSString v4;
  void *v5;
  UIImage *v6;
  UIImage *v7;
  NSString v8;
  UIImage *v9;
  UIImage *v10;

  v4 = String._bridgeToObjectiveC()();
  v5 = (void *)objc_opt_self(UIImage);
  v6 = (UIImage *)objc_msgSend(v5, "imageNamed:", v4);

  if (v6)
  {
    v7 = (UIImage *)objc_msgSend((id)objc_opt_self(UIColor), *a3);
    v8 = String._bridgeToObjectiveC()();
    v9 = (UIImage *)objc_msgSend(v5, "imageNamed:", v8);

    if (v9)
    {
      v10 = -[UIImage imageWithTintColor:renderingMode:](v9, "imageWithTintColor:renderingMode:", v7, 1);

      if (!v10)
      {
        v9 = 0;
        goto LABEL_8;
      }
      v9 = sub_1008ECF80(v10);
      v7 = v10;
    }

    v6 = v7;
LABEL_8:

    return v9;
  }
  return 0;
}

void sub_100950B24(uint64_t a1, void *a2, char a3, void *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  unsigned __int8 *v11;
  char v12;
  void *v13;
  unsigned __int8 v14;
  objc_class *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  unsigned __int8 v20;
  objc_class *v21;
  double *v22;

  v5 = v4;
  v7 = *(_QWORD *)(a1 + 16);
  if (v7)
  {
    v22 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v7);
    v11 = (unsigned __int8 *)(a1 + 40);
    v12 = a3 & 1;
    while (1)
    {
      v13 = (void *)*((_QWORD *)v11 - 1);
      v14 = *v11;
      v19 = v13;
      v20 = v14;
      sub_1006B8360(v13, v14);
      sub_10094C290((uint64_t)&v19, a2, v12, a4, &v21);
      if (v5)
        break;
      v5 = 0;
      v11 += 16;
      sub_1006B8384(v13, v14);
      v15 = v21;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v16);
      v17 = *((_QWORD *)v22 + 2);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v17);
      v18 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v15);
      specialized ContiguousArray._endMutation()(v18);
      if (!--v7)
        return;
    }
    sub_1006B8384(v13, v14);
    swift_release(v22);
  }
}

void sub_100950C5C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  char v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform55CRLiOSMiniFormatterTextEditingColorPickerViewController_colorPicker);
  v2 = (void *)sub_10094E67C();
  if (v2 == (void *)1)
    goto LABEL_7;
  v4 = v2;
  if ((v3 & 1) != 0)
    goto LABEL_6;
  if (!v2)
  {
LABEL_7:
    v7 = 0;
    goto LABEL_8;
  }
  v5 = objc_msgSend(v2, "referenceColor");
  if (!v5)
  {
LABEL_6:
    sub_1004CB49C(v4);
    goto LABEL_7;
  }
  v6 = v5;
  v8 = objc_msgSend(v5, "UIColor");
  sub_1004CB49C(v4);

  v7 = v8;
LABEL_8:
  v9 = v7;
  objc_msgSend(v1, "setSelectedColor:");

}

uint64_t sub_100950D30()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100950D54(uint64_t a1)
{
  uint64_t v1;

  sub_10095012C(a1, v1);
}

uint64_t sub_100950D68()
{
  return 8;
}

double sub_100950D74(_QWORD *a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*a1).n128_u64[0];
  return result;
}

double sub_100950D7C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  double result;

  v2 = *a1;
  *a2 = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

_QWORD *sub_100950D90(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

double sub_100950D9C(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t Strong;
  double result;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  char v11;
  id v12;

  v5 = v2 + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_presenter;
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v8 = Strong;
    v9 = *(_QWORD *)(v5 + 16);
    ObjectType = swift_getObjectType(Strong);
    v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 96))(ObjectType, v9);
    if ((a2 & 1) != 0)
    {
      if ((v11 & 1) == 0)
        (*(void (**)(uint64_t, uint64_t))(v9 + 80))(ObjectType, v9);
    }
    else if ((v11 & 1) != 0)
    {
      (*(void (**)(uint64_t, uint64_t))(v9 + 88))(ObjectType, v9);
LABEL_9:
      *(_QWORD *)&result = swift_unknownObjectRelease(v8).n128_u64[0];
      return result;
    }
    v12 = objc_msgSend(objc_allocWithZone((Class)CRLColorFill), "initWithUIColor:", a1);
    sub_10094E2BC(v12);

    goto LABEL_9;
  }
  return result;
}

uint64_t sub_100950E98()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

double sub_100950EBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

double sub_100950ECC(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_100950ED4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100950EF8()
{
  sub_10094E2BC(0);
}

void sub_100950F1C()
{
  sub_10094E7EC();
}

uint64_t sub_100950F3C()
{
  uint64_t v0;

  sub_1006B8384(*(id *)(v0 + 16), *(_BYTE *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

void sub_100950F6C(uint64_t a1)
{
  uint64_t v1;

  sub_10094C5E0(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24));
}

uint64_t sub_100950F7C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100950F8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10094D0C8(a1, a2);
}

void sub_100950F94(uint64_t a1)
{
  uint64_t v1;

  sub_10094D170(a1, v1);
}

void sub_100950F9C(uint64_t a1)
{
  uint64_t v1;

  sub_10094D204(a1, v1);
}

uint64_t sub_100950FE8()
{
  return type metadata accessor for CRLCanvasDotGridBackgroundView();
}

void sub_10095122C(long double a1)
{
  uint64_t v1;
  void *Strong;
  void *v4;
  double v5;
  double v6;
  long double v7;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform19CRLCanvasBackground_icc);
  if (Strong)
  {
    v4 = Strong;
    objc_msgSend(Strong, "viewScale");
    v6 = v5;

  }
  else
  {
    v6 = 1.0;
  }
  -[CRLCanvasDotGridBackground snapDistanceForViewScale:]_0(v6);
  fmod(a1, v7);
}

id sub_100951338()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCanvasDotGridBackground();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLCanvasDotGridBackground()
{
  return objc_opt_self(_TtC8Freeform26CRLCanvasDotGridBackground);
}

uint64_t sub_100951490(void *a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t inited;
  uint64_t Strong;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  objc_class *v36;
  _BYTE *v37;
  _QWORD *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  id v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  void *v51;
  objc_super v52;
  unint64_t v53;
  _BYTE v54[72];

  if (qword_1013DCB58 != -1)
    swift_once(&qword_1013DCB58, sub_1006185A4);
  v3 = (void *)qword_10147ECB0;
  v4 = sub_1004B804C((uint64_t *)&unk_1013E8830);
  v5 = swift_allocObject(v4, 64, 7);
  *(_OWORD *)(v5 + 16) = xmmword_100EF5E40;
  *(_QWORD *)(v5 + 56) = type metadata accessor for CRLTextRange();
  *(_QWORD *)(v5 + 32) = a1;
  inited = swift_initStackObject(v4, v54);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_QWORD *)(inited + 56) = sub_1004B804C((uint64_t *)&unk_1013E91F0);
  *(_QWORD *)(inited + 32) = v5;
  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_interactiveCanvasController);
  if (!Strong)
  {
    v43 = v3;
    v44 = a1;
    swift_bridgeObjectRetain(v5);
    goto LABEL_20;
  }
  v8 = (void *)Strong;
  v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_textStorage);
  v10 = v3;
  v11 = a1;
  v12 = objc_msgSend(v8, "layoutForInfo:", v9, swift_bridgeObjectRetain(v5).n128_f64[0]);

  if (!v12)
  {
LABEL_20:
    swift_release(inited);
    v45 = (uint64_t)_swiftEmptyArrayStorage;
    goto LABEL_21;
  }
  v13 = type metadata accessor for CRLWPLayout();
  v14 = (void *)swift_dynamicCastClass(v12, v13);
  if (!v14)
  {

    goto LABEL_20;
  }
  v15 = v14;
  if ((objc_msgSend(v14, "layoutIsValid") & 1) == 0)
    objc_msgSend(v15, "validate");
  v16 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v17 = swift_allocObject(v16, 40, 7);
  *(_OWORD *)(v17 + 16) = xmmword_100EEF400;
  *(_QWORD *)(v17 + 32) = v11;
  v53 = v17;
  specialized Array._endMutation()(v17);
  v18 = v53;
  v19 = (void *)qword_10147ECB0;
  v20 = v11;
  v21 = v19;
  swift_bridgeObjectRetain(v53);
  sub_100625FAC((uint64_t)v15, v53, (uint64_t *)&v53);

  swift_bridgeObjectRelease_n(v18, 2);
  v22 = v53;
  if (!(v53 >> 62))
  {
    v23 = *(_QWORD *)((v53 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v23)
      goto LABEL_10;
LABEL_26:
    swift_bridgeObjectRelease();
    v45 = (uint64_t)_swiftEmptyArrayStorage;
    if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
    {
LABEL_18:
      v46 = swift_bridgeObjectRetain(v45);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v46);
      sub_1005E96D4();
      swift_release(inited);

      swift_bridgeObjectRelease();
LABEL_21:

      swift_bridgeObjectRelease();
      return v45;
    }
LABEL_27:
    if (v45 < 0)
      v48 = v45;
    else
      v48 = v45 & 0xFFFFFFFFFFFFFF8;
    v49 = sub_1005E96D4();
    swift_bridgeObjectRetain(v45);
    v50 = _bridgeCocoaArray<A>(_:)(v48, v49);
    swift_release(inited);

    swift_bridgeObjectRelease_n(v45, 2);
    v45 = v50;
    goto LABEL_21;
  }
  if ((v53 & 0x8000000000000000) != 0)
    v47 = v53;
  else
    v47 = v53 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v53);
  v23 = _CocoaArrayWrapper.endIndex.getter(v47);
  swift_bridgeObjectRelease();
  if (!v23)
    goto LABEL_26;
LABEL_10:
  v51 = v3;
  v53 = (unint64_t)_swiftEmptyArrayStorage;
  result = specialized ContiguousArray.reserveCapacity(_:)(v23);
  if ((v23 & 0x8000000000000000) == 0)
  {
    v25 = 0;
    do
    {
      if ((v22 & 0xC000000000000001) != 0)
        v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v25, v22);
      else
        v26 = *(id *)(v22 + 8 * v25 + 32);
      v27 = v26;
      ++v25;
      objc_msgSend(v26, "rect");
      objc_msgSend(v15, "convertNaturalRectToUnscaledCanvas:");
      v29 = v28;
      v31 = v30;
      v33 = v32;
      v35 = v34;
      v36 = (objc_class *)type metadata accessor for CRLTextSelectionRect();
      v37 = objc_allocWithZone(v36);
      v37[OBJC_IVAR____TtC8Freeform20CRLTextSelectionRect__containsStart] = 0;
      v37[OBJC_IVAR____TtC8Freeform20CRLTextSelectionRect__containsEnd] = 0;
      v38 = &v37[OBJC_IVAR____TtC8Freeform20CRLTextSelectionRect__rect];
      *v38 = v29;
      v38[1] = v31;
      v38[2] = v33;
      v38[3] = v35;
      *(_QWORD *)&v37[OBJC_IVAR____TtC8Freeform20CRLTextSelectionRect__writingDirection] = 0;
      v52.receiver = v37;
      v52.super_class = v36;
      v39 = objc_msgSendSuper2(&v52, "init");

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v40);
      v41 = *(_QWORD *)(v53 + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v41);
      v42 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v41, v39);
      specialized ContiguousArray._endMutation()(v42);
    }
    while (v23 != v25);
    v45 = v53;
    swift_bridgeObjectRelease();
    v3 = v51;
    if (!((unint64_t)v45 >> 62))
      goto LABEL_18;
    goto LABEL_27;
  }
  __break(1u);
  return result;
}

void *sub_100951964(CGFloat a1, CGFloat a2)
{
  uint64_t v2;
  uint64_t Strong;
  char *v6;
  void *result;
  void *v8;
  char *v9;
  uint64_t v10;
  void *v11;
  char *v12;
  id v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double v25;
  double v26;
  double v27;
  double v28;
  _BOOL8 v29;
  CGPoint v30;
  CGRect v31;
  CGRect v32;
  CGRect v33;

  Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_editor);
  if (!Strong)
    return 0;
  v6 = (char *)Strong;
  result = (void *)swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc);
  if (!result)
    goto LABEL_12;
  if (*(_QWORD *)(*(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape]
                 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage))
  {
    v8 = result;
    v9 = (char *)objc_msgSend(result, "layoutForInfo:");

    if (v9)
    {
      v10 = type metadata accessor for CRLWPLayout();
      v11 = (void *)swift_dynamicCastClass(v9, v10);

      if (v11 && (v12 = sub_1005E6498()) != 0)
      {
        v6 = v12;
        if (objc_msgSend(v12, "isEmpty"))
        {
          v13 = objc_msgSend(v6, "start");
          v14 = sub_1009522CC(v13);
          v16 = v15;
          v18 = v17;
          v20 = v19;

          objc_msgSend(v11, "convertNaturalRectFromUnscaledCanvas:", v14, v16, v18, v20);
          x = v31.origin.x;
          y = v31.origin.y;
          width = v31.size.width;
          height = v31.size.height;
          v25 = CGRectGetWidth(v31) + 5.0 + 5.0;
          if (v25 > *(double *)(v2 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_minimumCaretHitRegionWidth))
            v26 = v25;
          else
            v26 = *(double *)(v2 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_minimumCaretHitRegionWidth);
          v32.origin.x = x;
          v32.origin.y = y;
          v32.size.width = width;
          v32.size.height = height;
          CGRectGetHeight(v32);
          v27 = sub_100061400(x, y, width, height);
          v33.origin.x = sub_10005FD98(v27, v28, v26);
          v30.x = a1;
          v30.y = a2;
          v29 = CGRectContainsPoint(v33, v30);
        }
        else
        {
          v29 = 0;
        }

      }
      else
      {
        v29 = 0;
        v6 = v9;
      }
      goto LABEL_17;
    }
LABEL_12:
    v29 = 0;
LABEL_17:

    return (void *)v29;
  }
  __break(1u);
  return result;
}

double sub_100951BD4(void *a1)
{
  uint64_t v1;
  void *Strong;
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  char *v10;
  double v11;
  double v12;
  double v14[4];

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_interactiveCanvasController);
  if (!Strong)
    return CGRectInfinite.origin.x;
  v4 = Strong;
  v5 = objc_msgSend(Strong, "layoutForInfo:", *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_textStorage));

  if (!v5)
    return CGRectInfinite.origin.x;
  v6 = type metadata accessor for CRLWPLayout();
  v7 = (void *)swift_dynamicCastClass(v5, v6);
  if (!v7)
  {

    return CGRectInfinite.origin.x;
  }
  v8 = v7;
  if ((objc_msgSend(v7, "layoutIsValid") & 1) == 0)
    objc_msgSend(v8, "validate");
  if (qword_1013DCB58 != -1)
    swift_once(&qword_1013DCB58, sub_1006185A4);
  v9 = (id)qword_10147ECB0;
  v10 = a1;
  sub_1006255CC((char *)v8, v10, v14);

  objc_msgSend(v8, "convertNaturalRectToUnscaledCanvas:", v14[0], v14[1], v14[2], v14[3]);
  v12 = v11;

  return v12;
}

void sub_100951D50(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *Strong;
  void *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  void *v29;
  id v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  void *v36;
  id v37;
  uint64_t v38;
  id v39;
  char *v40;
  uint64_t v41;
  char *v42;
  void *v43;
  _QWORD *v44;
  id v45;
  void *v46;
  id v47;
  id v48;
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  void (*v55)(char *, uint64_t);
  char *v56;
  id v57;
  _QWORD *v58;
  uint64_t v59;
  id v60;
  double v61[4];

  v4 = v3;
  v60 = (id)a1;
  v7 = sub_1004B804C((uint64_t *)&unk_1013E8570);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_interactiveCanvasController);
  if (!Strong)
    return;
  v18 = Strong;
  v58 = a3;
  v59 = a2;
  v19 = OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_textStorage;
  v20 = objc_msgSend(Strong, "layoutForInfo:", *(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_textStorage));

  if (!v20)
    return;
  v21 = type metadata accessor for CRLWPLayout();
  v22 = (void *)swift_dynamicCastClass(v20, v21);
  if (!v22)
    goto LABEL_7;
  v23 = v22;
  v24 = objc_msgSend(v22, "layoutIsValid");
  if ((v24 & 1) == 0)
    v24 = objc_msgSend(v23, "validate");
  v25 = NSNotFound.getter(v24);
  if ((id)v25 == v60)
  {
LABEL_7:

    return;
  }
  v54 = (char *)v23;
  v57 = v20;
  v26 = *(char **)(v4 + v19);
  v27 = *(_QWORD *)&v26[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
  if (!v27)
  {
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  (*(void (**)(void))(*(_QWORD *)v27 + 760))();
  sub_1004D29BC((uint64_t)&v13[*(int *)(v11 + 20)], (uint64_t)v16);
  v56 = v26;
  sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLWPShapeItemCRDTData);
  v28 = *(char **)(v8 + 16);
  ((void (*)(char *, char *, uint64_t))v28)(v10, v16, v7);
  sub_1004B84A4((uint64_t)v16, type metadata accessor for CRLWPStorageCRDTData);
  v29 = (void *)CRAttributedString.attributedString.getter(v7);
  v55 = *(void (**)(char *, uint64_t))(v8 + 8);
  v55(v10, v7);
  v30 = objc_msgSend(v29, "length");

  if ((uint64_t)v30 < (uint64_t)v60)
  {

    return;
  }
  v56 = v28;
  v31 = *(char **)(v4 + v19);
  v32 = *(_QWORD *)&v31[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
  if (!v32)
    goto LABEL_22;
  v33 = v59;
  v53 = (uint64_t)v60 + v59;
  (*(void (**)(void))(*(_QWORD *)v32 + 760))();
  sub_1004D29BC((uint64_t)&v13[*(int *)(v11 + 20)], (uint64_t)v16);
  v34 = v31;
  v35 = v33;
  v52 = v34;
  sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLWPShapeItemCRDTData);
  ((void (*)(char *, char *, uint64_t))v56)(v10, v16, v7);
  sub_1004B84A4((uint64_t)v16, type metadata accessor for CRLWPStorageCRDTData);
  v36 = (void *)CRAttributedString.attributedString.getter(v7);
  v55(v10, v7);
  v37 = objc_msgSend(v36, "length");

  v38 = v35;
  v39 = v60;
  if ((uint64_t)v37 < v53)
  {
    v40 = *(char **)(v4 + v19);
    v41 = *(_QWORD *)&v40[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
    if (v41)
    {
      (*(void (**)(void))(*(_QWORD *)v41 + 760))();
      sub_1004D29BC((uint64_t)&v13[*(int *)(v11 + 20)], (uint64_t)v16);
      v42 = v40;
      sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLWPShapeItemCRDTData);
      ((void (*)(char *, char *, uint64_t))v56)(v10, v16, v7);
      sub_1004B84A4((uint64_t)v16, type metadata accessor for CRLWPStorageCRDTData);
      v43 = (void *)CRAttributedString.attributedString.getter(v7);
      v55(v10, v7);
      v39 = objc_msgSend(v43, "length");

      v38 = 0;
      v35 = v59;
      goto LABEL_16;
    }
LABEL_23:
    __break(1u);
    return;
  }
LABEL_16:
  v44 = v58;
  if (v58)
  {
    *v58 = v39;
    v44[1] = v38;
  }
  v45 = objc_allocWithZone((Class)type metadata accessor for CRLTextRange());
  v46 = (void *)sub_10060EDE4((uint64_t)v60, v35);
  v47 = v57;
  if (qword_1013DCB58 != -1)
    swift_once(&qword_1013DCB58, sub_1006185A4);
  v48 = (id)qword_10147ECB0;
  v49 = v46;
  v50 = v54;
  sub_1006255CC(v54, v49, v61);

  objc_msgSend(v50, "convertNaturalRectToUnscaledCanvas:", v61[0], v61[1], v61[2], v61[3]);
}

double sub_1009522CC(void *a1)
{
  uint64_t v1;
  void *Strong;
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  double v9;
  double v10;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_interactiveCanvasController);
  if (!Strong)
    return CGRectInfinite.origin.x;
  v4 = Strong;
  v5 = objc_msgSend(Strong, "layoutForInfo:", *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_textStorage));

  if (!v5)
    return CGRectInfinite.origin.x;
  v6 = type metadata accessor for CRLWPLayout();
  v7 = (void *)swift_dynamicCastClass(v5, v6);
  if (!v7)
  {

    return CGRectInfinite.origin.x;
  }
  v8 = v7;
  if ((objc_msgSend(v7, "layoutIsValid") & 1) == 0)
    objc_msgSend(v8, "validate");
  objc_msgSend(v8, "convertNaturalRectToUnscaledCanvas:", sub_100625E38(a1));
  v10 = v9;

  return v10;
}

id sub_1009523E8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLWPTextSelectionManager_x();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLWPTextSelectionManager_x()
{
  return objc_opt_self(_TtC8Freeform27CRLWPTextSelectionManager_x);
}

unint64_t sub_100952438()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  void *object;
  Swift::String v4;
  Swift::String v5;
  void *v6;
  Swift::String v7;

  _StringGuts.grow(_:)(35);
  swift_bridgeObjectRelease(0xE000000000000000);
  v0 = type metadata accessor for URL(0);
  v1 = sub_1005034A0(&qword_1013FA4A0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
  v2._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v0, v1);
  object = v2._object;
  String.append(_:)(v2);
  swift_bridgeObjectRelease(object);
  v4._countAndFlagsBits = 0x69666E6F63202C3ELL;
  v4._object = (void *)0xEB00000000203A67;
  String.append(_:)(v4);
  type metadata accessor for CRLUSDRendering.SceneRequest(0);
  v5._countAndFlagsBits = sub_1009565D8();
  v6 = v5._object;
  String.append(_:)(v5);
  swift_bridgeObjectRelease(v6);
  v7._countAndFlagsBits = 41;
  v7._object = (void *)0xE100000000000000;
  String.append(_:)(v7);
  return 0xD000000000000013;
}

uint64_t sub_100952568()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100952590 + 4 * byte_100F1AF80[*v0]))(7107189, 0xE300000000000000);
}

uint64_t sub_100952590()
{
  return 0x6D6B6F6F426C7275;
}

uint64_t sub_1009525B4()
{
  return 0x72756769666E6F63;
}

uint64_t sub_1009525D8()
{
  return 0x46746C7561666564;
}

uint64_t sub_1009525F8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100959378(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10095261C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10095D890();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100952644(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10095D890();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10095266C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1009526A0 + 4 * byte_100F1AF84[*v0]))(0x4F466172656D6163, 0xE900000000000056);
}

uint64_t sub_1009526A0()
{
  return 0x7461746E6569726FLL;
}

uint64_t sub_1009526C0()
{
  return 0x724664656C616373;
}

unint64_t sub_1009526E4()
{
  return 0xD000000000000011;
}

uint64_t sub_100952700()
{
  return 0x73746E65746E6F63;
}

uint64_t sub_100952724@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100959580(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100952748(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10095E154();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100952770(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10095E154();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100952798()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1009527D4 + 4 * byte_100F1AF89[*v0]))(0x6D696E4179616C70, 0xEE00736E6F697461);
}

uint64_t sub_1009527D4()
{
  return 0x696E416573756170;
}

uint64_t sub_100952824()
{
  return 0x6D696E41706F7473;
}

uint64_t sub_100952838@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100959800(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10095285C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10095D918();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100952884(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10095D918();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1009528AC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10095DA28();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1009528D4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10095DA28();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1009528FC()
{
  _BYTE *v0;

  if (*v0)
    return 0x6150737472617473;
  else
    return 0xD000000000000012;
}

uint64_t sub_100952944@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100959A8C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100952968(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10095DA6C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100952990(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10095DA6C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1009529B8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10095D9A0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1009529E0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10095D9A0();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100952A08(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10095D9E4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100952A30(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10095D9E4();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100952A58(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10095D95C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100952A80(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10095D95C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100952AA8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100952AD8 + 4 * byte_100F1AF8E[*v0]))(0x6465737561507369, 0xE800000000000000);
}

uint64_t sub_100952AD8()
{
  return 0x656C706D6F437369;
}

uint64_t sub_100952AF4()
{
  return 0x6E6979616C507369;
}

uint64_t sub_100952B14()
{
  return 0x6570706F74537369;
}

uint64_t sub_100952B30()
{
  return 0x6465657073;
}

uint64_t sub_100952B44@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100959B90(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100952B68(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10095DC04();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100952B90(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10095DC04();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100952BB8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10095DAF4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100952BE0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10095DAF4();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100952C08()
{
  _BYTE *v0;

  if (*v0)
    return 0x657669746361;
  else
    return 0x6576697463616E69;
}

uint64_t sub_100952C40@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100959DC4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100952C64(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10095DAB0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100952C8C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10095DAB0();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100952CB4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10095DB7C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100952CDC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10095DB7C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100952D04()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100952D3C + 4 * byte_100F1AF93[*v0]))(0x756F426C65646F6DLL, 0xEB0000000073646ELL);
}

uint64_t sub_100952D3C()
{
  return 0x6F6974616D696E61;
}

uint64_t sub_100952D58()
{
  return 0x6956734977656976;
}

uint64_t sub_100952D7C()
{
  return 0x617461646174656DLL;
}

uint64_t sub_100952D94@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100959EAC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100952DB8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10095E198();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100952DE0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10095E198();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100952E08()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100952E38 + 4 * byte_100F1AF97[*v0]))(0x64656C6261736964, 0xE800000000000000);
}

uint64_t sub_100952E38()
{
  return 0x6574736575716572;
}

uint64_t sub_100952E54()
{
  return 0x676E6964616F6CLL;
}

uint64_t sub_100952E6C()
{
  return 0x6E697265646E6572;
}

uint64_t sub_100952E8C()
{
  return 0x726F727265;
}

uint64_t sub_100952EA0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_10095A0AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100952EC4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10095DC48();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100952EEC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10095DC48();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100952F14(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10095DDE0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100952F3C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10095DDE0();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100952F64(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10095DC8C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100952F8C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10095DC8C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100952FB4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10095DD58();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100952FDC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10095DD58();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100953004(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10095DCD0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10095302C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10095DCD0();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100953054(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10095DD9C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10095307C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10095DD9C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1009530A4(uint64_t a1, uint64_t a2)
{
  _BYTE v4[64];
  _BYTE v5[64];

  sub_10068EAAC(a1, (uint64_t)v4);
  sub_10068EAAC(a2, (uint64_t)v5);
  return sub_100958A70((uint64_t)v4, (uint64_t)v5) & 1;
}

uint64_t sub_1009530EC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10095E0CC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100953114(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10095E0CC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10095313C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100953174 + 4 * byte_100F1AF9C[*v0]))(0x7245676E69646F63, 0xEB00000000726F72);
}

uint64_t sub_100953174()
{
  return 0x726F7272456C7275;
}

uint64_t sub_10095318C()
{
  return 0x45676E6964616F6CLL;
}

uint64_t sub_100953214@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_10095A2D0(a1, a2);
  *a3 = result;
  return result;
}

void sub_100953238(_BYTE *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_100953244(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10095DEAC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10095326C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10095DEAC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100953294(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10095DF34();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1009532BC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10095DF34();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1009532E4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10095DEF0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10095330C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10095DEF0();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100953334(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10095E044();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10095335C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10095E044();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100953384(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10095E000();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1009533AC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10095E000();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1009533D4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10095DFBC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1009533FC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10095DFBC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100953424(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10095E088();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10095344C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10095E088();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100953474(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10095E3C0();
  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_10095349C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10095E3C0();
  return Error<>._code.getter(a1, v2);
}

void sub_1009534C4(uint64_t a1)
{
  sub_10095887C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_1009534E0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  unint64_t v19;
  __int128 *v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  char v31;

  v3 = v1;
  v5 = sub_1004B804C(&qword_1013FC038);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_10095D890();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLUSDRendering.SceneRequest.CodingKeys, &type metadata for CRLUSDRendering.SceneRequest.CodingKeys, v11, v9, v10);
  LOBYTE(v26) = 0;
  v12 = type metadata accessor for URL(0);
  v13 = sub_1005034A0(&qword_1013F3D18, 255, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
  KeyedEncodingContainer.encode<A>(_:forKey:)(v3, &v26, v5, v12, v13);
  if (!v2)
  {
    v14 = (int *)type metadata accessor for CRLUSDRendering.SceneRequest(0);
    v26 = *(_OWORD *)(v3 + v14[5]);
    v31 = 1;
    v15 = sub_100587C2C();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v26, &v31, v5, &type metadata for Data, v15);
    v16 = v3 + v14[6];
    v17 = *(_QWORD *)(v16 + 64);
    LODWORD(v26) = *(_DWORD *)v16;
    v18 = *(_OWORD *)(v16 + 32);
    v27 = *(_OWORD *)(v16 + 16);
    v28 = v18;
    v29 = *(_OWORD *)(v16 + 48);
    v30 = v17;
    v31 = 2;
    v19 = sub_1006DB504();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v26, &v31, v5, &type metadata for CRLUSDRendering.SceneConfiguration, v19);
    v20 = (__int128 *)(v3 + v14[7]);
    v21 = v20[1];
    v26 = *v20;
    v27 = v21;
    v31 = 3;
    type metadata accessor for CGRect(0);
    v23 = v22;
    v24 = sub_1005034A0(&qword_1013E4868, 255, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, (uint64_t)&protocol conformance descriptor for CGRect);
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v26, &v31, v5, v23, v24);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10095371C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char *v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _OWORD *v27;
  __int128 v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  _QWORD *v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  char v41;

  v30 = a2;
  v31 = type metadata accessor for URL(0);
  v3 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin(v31);
  v34 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_1004B804C(&qword_1013FC028);
  v5 = *(_QWORD *)(v32 - 8);
  __chkstk_darwin(v32);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (int *)type metadata accessor for CRLUSDRendering.SceneRequest(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v11 = a1[4];
  sub_1004BB5A4(a1, v12);
  v13 = sub_10095D890();
  v33 = v7;
  v14 = v35;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLUSDRendering.SceneRequest.CodingKeys, &type metadata for CRLUSDRendering.SceneRequest.CodingKeys, v13, v12, v11);
  if (v14)
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  v15 = v5;
  v35 = a1;
  LOBYTE(v36) = 0;
  v16 = sub_1005034A0(&qword_1013F3CE8, 255, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
  v17 = v31;
  v18 = v32;
  KeyedDecodingContainer.decode<A>(_:forKey:)(v31, &v36, v32, v31, v16);
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v10, v34, v17);
  v41 = 1;
  v19 = sub_100587AC0();
  KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for Data, &v41, v18, &type metadata for Data, v19);
  *(_OWORD *)&v10[v8[5]] = v36;
  v41 = 2;
  v20 = sub_1006DCD28();
  KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for CRLUSDRendering.SceneConfiguration, &v41, v18, &type metadata for CRLUSDRendering.SceneConfiguration, v20);
  v21 = v40;
  v22 = &v10[v8[6]];
  *(_DWORD *)v22 = v36;
  v23 = v38;
  *((_OWORD *)v22 + 1) = v37;
  *((_OWORD *)v22 + 2) = v23;
  *((_OWORD *)v22 + 3) = v39;
  *((_QWORD *)v22 + 8) = v21;
  type metadata accessor for CGRect(0);
  v25 = v24;
  v41 = 3;
  v26 = sub_1005034A0(&qword_1013E4818, 255, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, (uint64_t)&protocol conformance descriptor for CGRect);
  KeyedDecodingContainer.decode<A>(_:forKey:)(v25, &v41, v18, v25, v26);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v33, v18);
  v27 = (_OWORD *)v8[7];
  v28 = v37;
  *v27 = v36;
  v27[1] = v28;
  sub_10095D8D4(0, v30);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v35);
  return sub_1006DCE5C(0);
}

void sub_100953A94(uint64_t a1, Swift::UInt64 a2, char a3)
{
  Swift::UInt v3;
  Swift::UInt8 v5;
  Swift::UInt64 v6;

  switch(a3)
  {
    case 2:
      v3 = 1;
      goto LABEL_10;
    case 3:
      v3 = 2;
      goto LABEL_10;
    case 4:
      v3 = 3;
      goto LABEL_10;
    case 5:
      v3 = 4;
LABEL_10:
      Hasher._combine(_:)(v3);
      break;
    default:
      v5 = a3 & 1;
      Hasher._combine(_:)(0);
      if ((a2 & 0x7FFFFFFFFFFFFFFFLL) != 0)
        v6 = a2;
      else
        v6 = 0;
      Hasher._combine(_:)(v6);
      Hasher._combine(_:)(v5);
      break;
  }
}

uint64_t sub_100953B28(_QWORD *a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  int v24;
  unint64_t v25;
  uint64_t v26;
  double v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  unint64_t v33;
  unint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  double v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  char v54;
  char v55;
  char v56;
  char v57;
  char v58;
  char v59;
  char v60;

  v46 = *(double *)&a2;
  v53 = a3;
  v4 = sub_1004B804C(&qword_1013FC0A0);
  v48 = *(_QWORD *)(v4 - 8);
  v49 = v4;
  __chkstk_darwin(v4);
  v47 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C(&qword_1013FC0A8);
  v44 = *(_QWORD *)(v6 - 8);
  v45 = v6;
  __chkstk_darwin(v6);
  v43 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C(&qword_1013FC0B0);
  v41 = *(_QWORD *)(v8 - 8);
  v42 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_1004B804C(&qword_1013FC0B8);
  v11 = *(_QWORD *)(v39 - 8);
  __chkstk_darwin(v39);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_1004B804C(&qword_1013FC0C0);
  v14 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40);
  v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1004B804C(&qword_1013FC0C8);
  v50 = *(_QWORD *)(v17 - 8);
  v51 = v17;
  __chkstk_darwin(v17);
  v19 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = a1[3];
  v21 = a1[4];
  sub_1004BB5A4(a1, v20);
  v22 = sub_10095D918();
  v23 = v21;
  v24 = v53;
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLUSDRendering.SceneAction.CodingKeys, &type metadata for CRLUSDRendering.SceneAction.CodingKeys, v22, v20, v23);
  switch(v24)
  {
    case 2:
      v57 = 1;
      v25 = sub_10095DA28();
      v26 = v51;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for CRLUSDRendering.SceneAction.PauseAnimationsCodingKeys, &v57, v51, &type metadata for CRLUSDRendering.SceneAction.PauseAnimationsCodingKeys, v25);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v39);
      goto LABEL_10;
    case 3:
      v58 = 2;
      v33 = sub_10095D9E4();
      v26 = v51;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for CRLUSDRendering.SceneAction.ResumeAnimationsCodingKeys, &v58, v51, &type metadata for CRLUSDRendering.SceneAction.ResumeAnimationsCodingKeys, v33);
      (*(void (**)(char *, uint64_t))(v41 + 8))(v10, v42);
      goto LABEL_10;
    case 4:
      v59 = 3;
      v34 = sub_10095D9A0();
      v35 = v43;
      v26 = v51;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for CRLUSDRendering.SceneAction.ResetAnimationsCodingKeys, &v59, v51, &type metadata for CRLUSDRendering.SceneAction.ResetAnimationsCodingKeys, v34);
      v37 = v44;
      v36 = v45;
      goto LABEL_9;
    case 5:
      v60 = 4;
      v38 = sub_10095D95C();
      v35 = v47;
      v26 = v51;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for CRLUSDRendering.SceneAction.StopAnimationsCodingKeys, &v60, v51, &type metadata for CRLUSDRendering.SceneAction.StopAnimationsCodingKeys, v38);
      v37 = v48;
      v36 = v49;
LABEL_9:
      (*(void (**)(char *, uint64_t))(v37 + 8))(v35, v36);
LABEL_10:
      result = (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v19, v26);
      break;
    default:
      v27 = v46;
      v56 = 0;
      v28 = sub_10095DA6C();
      v29 = v51;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for CRLUSDRendering.SceneAction.PlayAnimationsCodingKeys, &v56, v51, &type metadata for CRLUSDRendering.SceneAction.PlayAnimationsCodingKeys, v28);
      v55 = 0;
      v30 = v40;
      v31 = v52;
      KeyedEncodingContainer.encode(_:forKey:)(&v55, v40, v27);
      if (!v31)
      {
        v54 = 1;
        KeyedEncodingContainer.encode(_:forKey:)(v24 & 1, &v54, v30);
      }
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v30);
      result = (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v19, v29);
      break;
  }
  return result;
}

uint64_t sub_100953F28(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int16 v26;
  char v27;
  char v28;
  int v29;
  char v30;
  char v31;

  v4 = sub_1004B804C(&qword_1013FC108);
  v23 = *(_QWORD *)(v4 - 8);
  v24 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1004B804C(&qword_1013FC110);
  v7 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C(&qword_1013FC118);
  v25 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v14 = a1[4];
  sub_1004BB5A4(a1, v13);
  v15 = sub_10095DAB0();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLUSDRendering.SceneDescription.AnimationState.CodingKeys, &type metadata for CRLUSDRendering.SceneDescription.AnimationState.CodingKeys, v15, v13, v14);
  if (a2 == 2)
  {
    v30 = 0;
    v16 = sub_10095DB7C();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for CRLUSDRendering.SceneDescription.AnimationState.InactiveCodingKeys, &v30, v10, &type metadata for CRLUSDRendering.SceneDescription.AnimationState.InactiveCodingKeys, v16);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v22);
  }
  else
  {
    v31 = 1;
    v18 = sub_10095DAF4();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for CRLUSDRendering.SceneDescription.AnimationState.ActiveCodingKeys, &v31, v10, &type metadata for CRLUSDRendering.SceneDescription.AnimationState.ActiveCodingKeys, v18);
    v26 = a2 & 0x101;
    v27 = BYTE2(a2) & 1;
    v28 = BYTE3(a2) & 1;
    v29 = HIDWORD(a2);
    v19 = sub_10095DBC0();
    v20 = v24;
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v26, v21, v24, &type metadata for CRLUSDRendering.SceneDescription.AnimationState.PlaybackState, v19);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v6, v20);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v12, v10);
}

Swift::Int sub_100954178(uint64_t a1)
{
  Swift::UInt32 v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, 0);
  if (a1 == 2)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Hasher._combine(_:)(1uLL);
    Hasher._combine(_:)(a1 & 1);
    Hasher._combine(_:)(BYTE1(a1) & 1);
    Hasher._combine(_:)(BYTE2(a1) & 1);
    Hasher._combine(_:)(BYTE3(a1) & 1);
    if ((a1 & 0x7FFFFF00000000) == 0 && (a1 & 0x7F80000000000000) == 0)
      v3 = 0;
    else
      v3 = HIDWORD(a1);
    Hasher._combine(_:)(v3);
  }
  return Hasher._finalize()();
}

void sub_10095422C(float a1, uint64_t a2, int a3)
{
  Swift::UInt32 v5;

  Hasher._combine(_:)(a3 & 1);
  Hasher._combine(_:)(BYTE1(a3) & 1);
  Hasher._combine(_:)(BYTE2(a3) & 1);
  Hasher._combine(_:)(HIBYTE(a3) & 1);
  if ((LODWORD(a1) & 0x7FFFFFFF) != 0)
    v5 = LODWORD(a1);
  else
    v5 = 0;
  Hasher._combine(_:)(v5);
}

uint64_t sub_100954288(_QWORD *a1, unsigned int a2, float a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;

  v7 = a2 & 1;
  v8 = sub_1004B804C(&qword_1013FC138);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v13 = a1[4];
  sub_1004BB5A4(a1, v12);
  v14 = sub_10095DC04();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLUSDRendering.SceneDescription.AnimationState.PlaybackState.CodingKeys, &type metadata for CRLUSDRendering.SceneDescription.AnimationState.PlaybackState.CodingKeys, v14, v12, v13);
  v21 = 0;
  KeyedEncodingContainer.encode(_:forKey:)(v7, &v21, v8);
  if (!v3)
  {
    v20 = 1;
    KeyedEncodingContainer.encode(_:forKey:)((a2 >> 8) & 1, &v20, v8);
    v19 = 2;
    KeyedEncodingContainer.encode(_:forKey:)(HIWORD(a2) & 1, &v19, v8);
    v18 = 3;
    KeyedEncodingContainer.encode(_:forKey:)(HIBYTE(a2) & 1, &v18, v8);
    v17 = 4;
    KeyedEncodingContainer.encode(_:forKey:)(&v17, v8, a3);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

Swift::Int sub_10095442C(int a1, float a2)
{
  Swift::UInt32 v4;
  _QWORD v6[9];

  Hasher.init(_seed:)(v6, 0);
  Hasher._combine(_:)(a1 & 1);
  Hasher._combine(_:)(BYTE1(a1) & 1);
  Hasher._combine(_:)(BYTE2(a1) & 1);
  Hasher._combine(_:)(HIBYTE(a1) & 1);
  if ((LODWORD(a2) & 0x7FFFFFFF) != 0)
    v4 = LODWORD(a2);
  else
    v4 = 0;
  Hasher._combine(_:)(v4);
  return Hasher._finalize()();
}

void sub_1009544B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  char v5;
  uint64_t v6;
  __n128 v8;
  __n128 v9;
  __n128 v10;
  __n128 v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  __n128 v15;
  __n128 v16;

  v2 = v1;
  sub_10068EAAC(v2, (uint64_t)&v10);
  v5 = v13;
  v4 = v14;
  if (v13 >> 62)
  {
    if (v13 >> 62 == 1)
    {
      v13 &= 0x3FFFFFFFFFFFFFFFuLL;
      sub_100694F08(&v10, &v15);
      Hasher._combine(_:)(4uLL);
      sub_100694F08(&v15, &v16);
      __asm { BR              X10 }
    }
    if (v13 == 0x8000000000000000
      && (v14 | v10.n128_u64[0] | v12 | v11.n128_u64[1] | v11.n128_u64[0] | v10.n128_u64[1]) == 0)
    {
      Hasher._combine(_:)(0);
    }
    else if (v13 == 0x8000000000000000
           && v10.n128_u64[0] == 1
           && !(v11.n128_u64[1] | v12 | v11.n128_u64[0] | v10.n128_u64[1] | v14))
    {
      Hasher._combine(_:)(1uLL);
    }
    else
    {
      Hasher._combine(_:)(2uLL);
    }
  }
  else
  {
    v13 &= 0x3FFFFFFFFFFFFFFFuLL;
    v8 = v10;
    v9 = v11;
    v6 = v12;
    Hasher._combine(_:)(3uLL);
    sub_100958660(v8);
    sub_100958660(v9);
    swift_bridgeObjectRetain(v6);
    sub_100958458(a1, v6);
    swift_bridgeObjectRelease(v6);
    Hasher._combine(_:)(v5 & 1);
    swift_bridgeObjectRetain(v4);
    sub_100958294(a1, v4);
    swift_bridgeObjectRelease(v4);
  }
}

void sub_1009546C4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v2 - 88);
  v4 = *(_QWORD *)(v2 - 80);
  Hasher._combine(_:)(6uLL);
  if (v4)
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v4);
    String.hash(into:)(v0, v3, v4);
    sub_10095D820(v1);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  JUMPOUT(0x1009546B0);
}

uint64_t sub_100954718(_QWORD *a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  char *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char *v32;
  unint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49[3];
  uint64_t v50;
  __n128 v51;
  __n128 v52;
  __n128 v53;
  uint64_t v54;
  __n128 v55;
  __n128 v56;
  __n128 v57;
  uint64_t v58;
  __n128 v59;

  v45 = sub_1004B804C(&qword_1013FC1A8);
  v44 = *(_QWORD *)(v45 - 8);
  __chkstk_darwin(v45);
  v3 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = sub_1004B804C(&qword_1013FC1B0);
  v42 = *(_QWORD *)(v43 - 8);
  __chkstk_darwin(v43);
  v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_1004B804C(&qword_1013FC1B8);
  v40 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v39 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_1004B804C(&qword_1013FC1C0);
  v37 = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38);
  v36 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C(&qword_1013FC1C8);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = sub_1004B804C(&qword_1013FC1D0);
  v47 = *(_QWORD *)(v48 - 8);
  __chkstk_darwin(v48);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v15 = a1[4];
  sub_1004BB5A4(a1, v14);
  v16 = sub_10095DC48();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLUSDRendering.RendererState.CodingKeys, &type metadata for CRLUSDRendering.RendererState.CodingKeys, v16, v14, v15);
  sub_10068EAAC(v46, (uint64_t)&v51);
  if (!(v53.n128_u64[1] >> 62))
  {
    v53.n128_u64[1] &= 0x3FFFFFFFFFFFFFFFuLL;
    v55 = v51;
    v56 = v52;
    v58 = v54;
    v57 = v53;
    v49[0].n128_u8[0] = 3;
    v24 = sub_10095DCD0();
    v18 = v48;
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for CRLUSDRendering.RendererState.RenderingCodingKeys, v49, v48, &type metadata for CRLUSDRendering.RendererState.RenderingCodingKeys, v24);
    v49[0] = v55;
    v49[1] = v56;
    v49[2] = v57;
    v50 = v58;
    v25 = sub_10095DE68();
    v20 = v43;
    KeyedEncodingContainer.encode<A>(_:forKey:)(v49, v26, v43, &type metadata for CRLUSDRendering.SceneDescription, v25);
    v22 = *(void (**)(char *, uint64_t))(v42 + 8);
    v23 = v5;
    goto LABEL_5;
  }
  if (v53.n128_u64[1] >> 62 == 1)
  {
    v53.n128_u64[1] &= 0x3FFFFFFFFFFFFFFFuLL;
    sub_100694F08(&v51, &v59);
    v49[0].n128_u8[0] = 4;
    v17 = sub_10095DC8C();
    v18 = v48;
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for CRLUSDRendering.RendererState.ErrorCodingKeys, v49, v48, &type metadata for CRLUSDRendering.RendererState.ErrorCodingKeys, v17);
    sub_100694F08(&v59, v49);
    v19 = sub_10095DE24();
    v20 = v45;
    KeyedEncodingContainer.encode<A>(_:forKey:)(v49, v21, v45, &type metadata for CRLUSDRendering.RendererError, v19);
    v22 = *(void (**)(char *, uint64_t))(v44 + 8);
    v23 = v3;
LABEL_5:
    v22(v23, v20);
    return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v13, v18);
  }
  v28 = v52.n128_u64[0] | v51.n128_u64[1];
  if (v53.n128_u64[1] == 0x8000000000000000 && !(v54 | v51.n128_u64[0] | v53.n128_u64[0] | v52.n128_u64[1] | v28))
  {
    v49[0].n128_u8[0] = 0;
    v29 = sub_10095DDE0();
    v30 = v48;
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for CRLUSDRendering.RendererState.DisabledCodingKeys, v49, v48, &type metadata for CRLUSDRendering.RendererState.DisabledCodingKeys, v29);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v13, v30);
  }
  if (v53.n128_u64[1] == 0x8000000000000000
    && v51.n128_u64[0] == 1
    && !(v52.n128_u64[1] | v53.n128_u64[0] | v28 | v54))
  {
    v49[0].n128_u8[0] = 1;
    v31 = sub_10095DD9C();
    v32 = v36;
    v18 = v48;
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for CRLUSDRendering.RendererState.RequestedCodingKeys, v49, v48, &type metadata for CRLUSDRendering.RendererState.RequestedCodingKeys, v31);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v32, v38);
  }
  else
  {
    v49[0].n128_u8[0] = 2;
    v33 = sub_10095DD58();
    v34 = v39;
    v18 = v48;
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for CRLUSDRendering.RendererState.LoadingCodingKeys, v49, v48, &type metadata for CRLUSDRendering.RendererState.LoadingCodingKeys, v33);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v34, v41);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v13, v18);
}

void sub_100954C78(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  __asm { BR              X10 }
}

uint64_t sub_100954CB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  Hasher._combine(_:)(0);
  return String.hash(into:)(v1, v2, v0);
}

void sub_100954D08()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;

  Hasher._combine(_:)(6uLL);
  if (!v0)
  {
    Hasher._combine(_:)(0);
    JUMPOUT(0x100954D60);
  }
  Hasher._combine(_:)(1u);
  swift_bridgeObjectRetain(v0);
  String.hash(into:)(v1, v2, v0);
  sub_100689EEC(v2, v0, 5);
}

void sub_100954D50()
{
  JUMPOUT(0x100954D5CLL);
}

void sub_100954D7C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD v18[2];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;

  v39 = a4;
  v34 = a2;
  v35 = a3;
  v5 = sub_1004B804C(&qword_1013FC270);
  v32 = *(_QWORD *)(v5 - 8);
  v33 = v5;
  __chkstk_darwin(v5);
  v31 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_1013FC278);
  v29 = *(_QWORD *)(v7 - 8);
  v30 = v7;
  __chkstk_darwin(v7);
  v28 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C(&qword_1013FC280);
  v26 = *(_QWORD *)(v9 - 8);
  v27 = v9;
  __chkstk_darwin(v9);
  v24 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_1004B804C(&qword_1013FC288);
  v23 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v22 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1004B804C(&qword_1013FC290);
  v20 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v19 = sub_1004B804C(&qword_1013FC298);
  v18[1] = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v12 = sub_1004B804C(&qword_1013FC2A0);
  __chkstk_darwin(v12);
  v38 = sub_1004B804C(&qword_1013FC2A8);
  v36 = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38);
  v14 = (char *)v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1[3];
  v16 = a1[4];
  sub_1004BB5A4(a1, v15);
  v17 = sub_10095DEAC();
  v37 = v14;
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLUSDRendering.RendererError.CodingKeys, &type metadata for CRLUSDRendering.RendererError.CodingKeys, v17, v15, v16);
  __asm { BR              X10 }
}

uint64_t sub_100955014()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v3 - 104) = 0;
  v4 = sub_10095E0CC();
  v6 = *(_QWORD *)(v3 - 128);
  v5 = *(_QWORD *)(v3 - 120);
  KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for CRLUSDRendering.RendererError.CodingErrorCodingKeys, v3 - 104, v5, &type metadata for CRLUSDRendering.RendererError.CodingErrorCodingKeys, v4);
  KeyedEncodingContainer.encode(_:forKey:)(*(_QWORD *)(v3 - 152), *(_QWORD *)(v3 - 144), v7, v2);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 136) + 8))(v6, v5);
}

void sub_1009552C8()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v0 - 104) = 4;
  v1 = sub_10095DFBC();
  v2 = *(_QWORD *)(v0 - 232);
  v4 = *(_QWORD *)(v0 - 128);
  v3 = *(_QWORD *)(v0 - 120);
  KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for CRLUSDRendering.RendererError.TimeoutErrorCodingKeys, v0 - 104, v3, &type metadata for CRLUSDRendering.RendererError.TimeoutErrorCodingKeys, v1);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 - 216) + 8))(v2, *(_QWORD *)(v0 - 208));
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 136) + 8))(v4, v3);
  JUMPOUT(0x1009552A4);
}

void sub_100955328(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD v4[9];

  Hasher.init(_seed:)(v4, 0);
  __asm { BR              X10 }
}

Swift::Int sub_100955370()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  Hasher._combine(_:)(0);
  String.hash(into:)(&v3, v1, v0);
  return Hasher._finalize()();
}

uint64_t sub_100955464@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10095371C(a1, a2);
}

uint64_t sub_100955478(_QWORD *a1)
{
  return sub_1009534E0(a1);
}

Swift::Int sub_10095548C()
{
  uint64_t v0;
  Swift::UInt64 v1;
  char v2;
  _QWORD v4[9];

  v1 = *(_QWORD *)v0;
  v2 = *(_BYTE *)(v0 + 8);
  Hasher.init(_seed:)(v4, 0);
  sub_100953A94((uint64_t)v4, v1, v2);
  return Hasher._finalize()();
}

void sub_1009554D8(uint64_t a1)
{
  uint64_t v1;

  sub_100953A94(a1, *(_QWORD *)v1, *(_BYTE *)(v1 + 8));
}

Swift::Int sub_1009554E4(uint64_t a1)
{
  uint64_t v1;
  Swift::UInt64 v2;
  char v3;
  _QWORD v5[9];

  v2 = *(_QWORD *)v1;
  v3 = *(_BYTE *)(v1 + 8);
  Hasher.init(_seed:)(v5, a1);
  sub_100953A94((uint64_t)v5, v2, v3);
  return Hasher._finalize()();
}

uint64_t sub_10095552C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v5;

  result = sub_10095A634(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = result;
    *(_BYTE *)(a2 + 8) = v5;
  }
  return result;
}

uint64_t sub_100955558(_QWORD *a1)
{
  uint64_t v1;

  return sub_100953B28(a1, *(_QWORD *)v1, *(_BYTE *)(v1 + 8));
}

uint64_t sub_100955574(uint64_t a1, uint64_t a2)
{
  int v2;
  BOOL v3;
  uint64_t result;
  char v5;

  v2 = *(unsigned __int8 *)(a2 + 8);
  switch(*(_BYTE *)(a1 + 8))
  {
    case 2:
      v3 = v2 == 2;
      goto LABEL_9;
    case 3:
      v3 = v2 == 3;
      goto LABEL_9;
    case 4:
      v3 = v2 == 4;
      goto LABEL_9;
    case 5:
      v3 = v2 == 5;
LABEL_9:
      v5 = v3;
      result = v5 & 1;
      break;
    default:
      if ((v2 - 2) >= 4 && *(double *)a1 == *(double *)a2)
        result = (((*(_BYTE *)(a1 + 8) & 1) == 0) ^ v2) & 1;
      else
        result = 0;
      break;
  }
  return result;
}

Swift::Int sub_100955600()
{
  uint64_t *v0;

  return sub_100954178(*v0);
}

void sub_100955608()
{
  uint64_t *v0;
  uint64_t v1;
  Swift::UInt32 v3;

  v1 = *v0;
  if (*v0 == 2)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Hasher._combine(_:)(1uLL);
    Hasher._combine(_:)(v1 & 1);
    Hasher._combine(_:)(BYTE1(v1) & 1);
    Hasher._combine(_:)(BYTE2(v1) & 1);
    Hasher._combine(_:)(BYTE3(v1) & 1);
    if ((v1 & 0x7FFFFF00000000) == 0 && (v1 & 0x7F80000000000000) == 0)
      v3 = 0;
    else
      v3 = HIDWORD(v1);
    Hasher._combine(_:)(v3);
  }
}

Swift::Int sub_10095568C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  Swift::UInt32 v4;
  _QWORD v6[9];

  v2 = *v1;
  Hasher.init(_seed:)(v6, a1);
  if (v2 == 2)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Hasher._combine(_:)(1uLL);
    Hasher._combine(_:)(v2 & 1);
    Hasher._combine(_:)(BYTE1(v2) & 1);
    Hasher._combine(_:)(BYTE2(v2) & 1);
    Hasher._combine(_:)(BYTE3(v2) & 1);
    if ((v2 & 0x7FFFFF00000000) == 0 && (v2 & 0x7F80000000000000) == 0)
      v4 = 0;
    else
      v4 = HIDWORD(v2);
    Hasher._combine(_:)(v4);
  }
  return Hasher._finalize()();
}

unint64_t sub_10095573C@<X0>(_QWORD *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v2;
  unint64_t result;

  result = sub_10095AC58(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_100955764(_QWORD *a1)
{
  uint64_t *v1;

  return sub_100953F28(a1, *v1);
}

uint64_t sub_10095577C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a1;
  result = *a2 == 2 && v3 == 2;
  if (v3 != 2 && *a2 != 2)
  {
    if (*((float *)&v2 + 1) == COERCE_FLOAT(HIDWORD(*a2)))
      return (((v2 & 1) == 0) ^ *a2) & (((v2 & 0x100) == 0) ^ ((*(_DWORD *)a2 & 0x100u) >> 8)) & (((v2 & 0x10000) == 0) ^ WORD1(*a2)) & (((v2 & 0x1000000) == 0) ^ BYTE3(*a2));
    else
      return 0;
  }
  return result;
}

Swift::Int sub_100955804()
{
  float *v0;
  int v1;
  int v2;
  int v3;
  int v4;

  if (*((_BYTE *)v0 + 1))
    v1 = 256;
  else
    v1 = 0;
  v2 = v1 | *(unsigned __int8 *)v0;
  if (*((_BYTE *)v0 + 2))
    v3 = 0x10000;
  else
    v3 = 0;
  if (*((_BYTE *)v0 + 3))
    v4 = 0x1000000;
  else
    v4 = 0;
  return sub_10095442C(v2 | v3 | v4, v0[1]);
}

void sub_10095584C(uint64_t a1)
{
  float *v1;
  int v2;
  int v3;
  int v4;
  int v5;

  if (*((_BYTE *)v1 + 1))
    v2 = 256;
  else
    v2 = 0;
  v3 = v2 | *(unsigned __int8 *)v1;
  if (*((_BYTE *)v1 + 2))
    v4 = 0x10000;
  else
    v4 = 0;
  if (*((_BYTE *)v1 + 3))
    v5 = 0x1000000;
  else
    v5 = 0;
  sub_10095422C(v1[1], a1, v3 | v4 | v5);
}

Swift::Int sub_100955894(uint64_t a1)
{
  uint64_t v1;
  Swift::UInt8 v2;
  Swift::UInt8 v3;
  Swift::UInt8 v4;
  Swift::UInt8 v5;
  Swift::UInt32 v6;
  Swift::UInt32 v7;
  _QWORD v9[9];

  v2 = *(_BYTE *)v1;
  v3 = *(_BYTE *)(v1 + 1);
  v4 = *(_BYTE *)(v1 + 2);
  v5 = *(_BYTE *)(v1 + 3);
  v6 = *(_DWORD *)(v1 + 4);
  Hasher.init(_seed:)(v9, a1);
  Hasher._combine(_:)(v2);
  Hasher._combine(_:)(v3);
  Hasher._combine(_:)(v4);
  Hasher._combine(_:)(v5);
  if ((v6 & 0x7FFFFFFF) != 0)
    v7 = v6;
  else
    v7 = 0;
  Hasher._combine(_:)(v7);
  return Hasher._finalize()();
}

void sub_100955928(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v4;
  float v5;

  v5 = sub_10095B018(a1);
  if (!v2)
  {
    *(_BYTE *)a2 = v4 & 1;
    *(_BYTE *)(a2 + 1) = BYTE1(v4) & 1;
    *(_BYTE *)(a2 + 2) = BYTE2(v4) & 1;
    *(_BYTE *)(a2 + 3) = HIBYTE(v4) & 1;
    *(float *)(a2 + 4) = v5;
  }
}

uint64_t sub_100955970(_QWORD *a1)
{
  float *v1;
  int v2;
  int v3;
  int v4;
  int v5;

  if (*((_BYTE *)v1 + 1))
    v2 = 256;
  else
    v2 = 0;
  v3 = v2 | *(unsigned __int8 *)v1;
  if (*((_BYTE *)v1 + 2))
    v4 = 0x10000;
  else
    v4 = 0;
  if (*((_BYTE *)v1 + 3))
    v5 = 0x1000000;
  else
    v5 = 0;
  return sub_100954288(a1, v3 | v4 | v5, v1[1]);
}

BOOL sub_1009559C8(float *a1, float *a2)
{
  _BOOL8 result;

  result = 0;
  if (*(unsigned __int8 *)a1 == *(unsigned __int8 *)a2
    && ((*((unsigned __int8 *)a1 + 1) ^ *((unsigned __int8 *)a2 + 1)) & 1) == 0
    && ((*((unsigned __int8 *)a1 + 2) ^ *((unsigned __int8 *)a2 + 2)) & 1) == 0
    && ((*((unsigned __int8 *)a1 + 3) ^ *((unsigned __int8 *)a2 + 3)) & 1) == 0)
  {
    return a1[1] == a2[1];
  }
  return result;
}

Swift::Int sub_100955A24()
{
  uint64_t v0;
  _QWORD v2[9];
  _BYTE v3[64];

  sub_10068EAAC(v0, (uint64_t)v3);
  Hasher.init(_seed:)(v2, 0);
  sub_1009544B4((uint64_t)v2);
  return Hasher._finalize()();
}

void sub_100955A70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_10068EAAC(v1, (uint64_t)&v3);
  sub_1009544B4(a1);
}

Swift::Int sub_100955AAC(uint64_t a1)
{
  uint64_t v1;
  _QWORD v4[9];
  _BYTE v5[64];

  sub_10068EAAC(v1, (uint64_t)v5);
  Hasher.init(_seed:)(v4, a1);
  sub_1009544B4((uint64_t)v4);
  return Hasher._finalize()();
}

uint64_t sub_100955AFC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  _BYTE v5[64];

  result = sub_10095B21C(a1, (uint64_t)v5);
  if (!v2)
    return sub_10068EAAC((uint64_t)v5, a2);
  return result;
}

uint64_t sub_100955B40(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v4;

  sub_10068EAAC(v1, (uint64_t)&v4);
  return sub_100954718(a1);
}

void sub_100955B8C()
{
  uint64_t v0;

  sub_100955328(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

void sub_100955B98(uint64_t a1)
{
  uint64_t v1;

  sub_100954C78(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_BYTE *)(v1 + 16));
}

void sub_100955BA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[9];

  v2 = *(unsigned __int8 *)(v1 + 16);
  Hasher.init(_seed:)(v3, a1);
  __asm { BR              X9 }
}

Swift::Int sub_100955BE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  Hasher._combine(_:)(0);
  String.hash(into:)(&v3, v1, v0);
  return Hasher._finalize()();
}

_QWORD *sub_100955CD0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;
  char v6;

  result = sub_10095B93C(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = result;
    *(_QWORD *)(a2 + 8) = v5;
    *(_BYTE *)(a2 + 16) = v6;
  }
  return result;
}

void sub_100955CFC(_QWORD *a1)
{
  uint64_t v1;

  sub_100954D7C(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(unsigned __int8 *)(v1 + 16));
}

void sub_100955D18(uint64_t a1)
{
  __n128 *v1;
  __n128 *v2;
  Swift::UInt32 v4;
  Swift::UInt64 v5;
  Swift::UInt64 v6;
  Swift::UInt64 v7;
  Swift::UInt64 v8;
  Swift::UInt64 v9;
  Swift::UInt64 v10;
  Swift::UInt64 v11;

  v2 = v1;
  if ((v2->n128_u32[0] & 0x7FFFFFFF) != 0)
    v4 = v2->n128_u32[0];
  else
    v4 = 0;
  Hasher._combine(_:)(v4);
  simd_quatf.hash(into:)(a1, v2[1]);
  v5 = v2[2].n128_u64[1];
  if ((v2[2].n128_u64[0] & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v6 = v2[2].n128_u64[0];
  else
    v6 = 0;
  Hasher._combine(_:)(v6);
  if ((v5 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v7 = v5;
  else
    v7 = 0;
  Hasher._combine(_:)(v7);
  v8 = v2[3].n128_u64[1];
  if ((v2[3].n128_u64[0] & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v9 = v2[3].n128_u64[0];
  else
    v9 = 0;
  Hasher._combine(_:)(v9);
  if ((v8 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v10 = v8;
  else
    v10 = 0;
  Hasher._combine(_:)(v10);
  if ((v2[4].n128_u64[0] & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v11 = v2[4].n128_u64[0];
  else
    v11 = 0;
  Hasher._combine(_:)(v11);
}

uint64_t sub_100955DA4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  float v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v21;
  char v22;
  __int128 v23;

  v3 = v1;
  v5 = sub_1004B804C(&qword_1013FC2D0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_10095E154();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLUSDRendering.SceneConfiguration.CodingKeys, &type metadata for CRLUSDRendering.SceneConfiguration.CodingKeys, v11, v9, v10);
  v12 = *(float *)v3;
  LOBYTE(v23) = 0;
  KeyedEncodingContainer.encode(_:forKey:)(&v23, v5, v12);
  if (!v2)
  {
    v23 = *(_OWORD *)(v3 + 16);
    v22 = 1;
    type metadata accessor for simd_quatf(0);
    v14 = v13;
    v15 = sub_1005034A0(&qword_1013FC2D8, 255, (uint64_t (*)(uint64_t))type metadata accessor for simd_quatf, (uint64_t)&protocol conformance descriptor for simd_quatf);
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v23, &v22, v5, v14, v15);
    v23 = *(_OWORD *)(v3 + 32);
    v22 = 2;
    type metadata accessor for CGSize(0);
    v17 = v16;
    v18 = sub_1005034A0(&qword_1013E47D0, 255, (uint64_t (*)(uint64_t))type metadata accessor for CGSize, (uint64_t)&protocol conformance descriptor for CGSize);
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v23, &v22, v5, v17, v18);
    v23 = *(_OWORD *)(v3 + 48);
    v22 = 3;
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v23, &v22, v5, v17, v18);
    *(_QWORD *)&v23 = *(_QWORD *)(v3 + 64);
    v22 = 4;
    v19 = sub_100587B04();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v23, &v22, v5, &type metadata for CGFloat, v19);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

Swift::Int sub_100955FD4()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  sub_100955D18((uint64_t)v1);
  return Hasher._finalize()();
}

Swift::Int sub_100956014(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  sub_100955D18((uint64_t)v2);
  return Hasher._finalize()();
}

__n128 sub_10095604C@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v5;
  _OWORD v6[4];
  uint64_t v7;

  sub_10095C2E4(a1, (uint64_t)v6);
  if (!v2)
  {
    v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_QWORD *)(a2 + 64) = v7;
    result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_100956094(_QWORD *a1)
{
  return sub_100955DA4(a1);
}

BOOL sub_1009560A8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[4];
  uint64_t v8;
  _OWORD v9[4];
  uint64_t v10;

  v2 = *(_OWORD *)(a1 + 48);
  v7[2] = *(_OWORD *)(a1 + 32);
  v7[3] = v2;
  v8 = *(_QWORD *)(a1 + 64);
  v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  v4 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v4;
  v10 = *(_QWORD *)(a2 + 64);
  v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return sub_1009586C0((uint64_t)v7, (uint64_t)v9);
}

uint64_t sub_100956100(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  __int128 v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _OWORD v22[2];

  v3 = v1;
  v5 = sub_1004B804C(&qword_1013FC320);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_10095E198();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLUSDRendering.SceneDescription.CodingKeys, &type metadata for CRLUSDRendering.SceneDescription.CodingKeys, v11, v9, v10);
  v12 = *(_OWORD *)(v3 + 16);
  v22[0] = *(_OWORD *)v3;
  v22[1] = v12;
  v21 = 0;
  v13 = sub_10095E264();
  KeyedEncodingContainer.encode<A>(_:forKey:)(v22, &v21, v5, &type metadata for BoundingBox, v13);
  if (!v2)
  {
    *(_QWORD *)&v22[0] = *(_QWORD *)(v3 + 32);
    v21 = 1;
    v14 = sub_1004B804C(&qword_1013FC2F8);
    v15 = sub_10095E2A8(&qword_1013FC330, (void (*)(void))sub_10095E31C, (uint64_t)&protocol witness table for String, (uint64_t)&protocol conformance descriptor for <> [A : B]);
    KeyedEncodingContainer.encode<A>(_:forKey:)(v22, &v21, v5, v14, v15);
    v16 = *(unsigned __int8 *)(v3 + 40);
    LOBYTE(v22[0]) = 2;
    KeyedEncodingContainer.encode(_:forKey:)(v16, v22, v5);
    *(_QWORD *)&v22[0] = *(_QWORD *)(v3 + 48);
    v21 = 3;
    v17 = sub_1004B804C(&qword_1013FC310);
    v18 = sub_10095E360(&qword_1013FC340, (uint64_t)&protocol witness table for String, (uint64_t)&protocol conformance descriptor for <> [A : B]);
    KeyedEncodingContainer.encode<A>(_:forKey:)(v22, &v21, v5, v17, v18);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

Swift::Int sub_1009562FC()
{
  __n128 *v0;
  uint64_t v1;
  Swift::UInt8 v2;
  uint64_t v3;
  __n128 v5;
  __n128 v6;
  _QWORD v7[9];

  v5 = *v0;
  v6 = v0[1];
  v1 = v0[2].n128_i64[0];
  v2 = v0[2].n128_u8[8];
  v3 = v0[3].n128_i64[0];
  Hasher.init(_seed:)(v7, 0);
  sub_100958660(v5);
  sub_100958660(v6);
  swift_bridgeObjectRetain(v1);
  sub_100958458((uint64_t)v7, v1);
  swift_bridgeObjectRelease();
  Hasher._combine(_:)(v2);
  swift_bridgeObjectRetain(v3);
  sub_100958294((uint64_t)v7, v3);
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

double sub_1009563AC(uint64_t a1)
{
  __n128 *v1;
  uint64_t v3;
  Swift::UInt8 v4;
  uint64_t v5;
  double result;
  __n128 v7;

  v7 = v1[1];
  v3 = v1[2].n128_i64[0];
  v4 = v1[2].n128_u8[8];
  v5 = v1[3].n128_i64[0];
  sub_100958660(*v1);
  sub_100958660(v7);
  swift_bridgeObjectRetain(v3);
  sub_100958458(a1, v3);
  swift_bridgeObjectRelease();
  Hasher._combine(_:)(v4);
  swift_bridgeObjectRetain(v5);
  sub_100958294(a1, v5);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

Swift::Int sub_100956444(uint64_t a1)
{
  __n128 *v1;
  uint64_t v2;
  Swift::UInt8 v3;
  uint64_t v4;
  __n128 v6;
  __n128 v7;
  _QWORD v8[9];

  v6 = *v1;
  v7 = v1[1];
  v2 = v1[2].n128_i64[0];
  v3 = v1[2].n128_u8[8];
  v4 = v1[3].n128_i64[0];
  Hasher.init(_seed:)(v8, a1);
  sub_100958660(v6);
  sub_100958660(v7);
  swift_bridgeObjectRetain(v2);
  sub_100958458((uint64_t)v8, v2);
  swift_bridgeObjectRelease();
  Hasher._combine(_:)(v3);
  swift_bridgeObjectRetain(v4);
  sub_100958294((uint64_t)v8, v4);
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

double sub_1009564F0@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;
  uint64_t v8;

  sub_10095C584(a1, (uint64_t)v6);
  if (!v2)
  {
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    result = *(double *)&v7;
    *(_OWORD *)(a2 + 32) = v7;
    *(_QWORD *)(a2 + 48) = v8;
  }
  return result;
}

uint64_t sub_100956538(_QWORD *a1)
{
  return sub_100956100(a1);
}

void sub_10095654C(__n128 *a1, __n128 *a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  char v8;

  v2 = a1[2].n128_i64[0];
  v3 = a1[2].n128_u8[8];
  v4 = a1[3].n128_i64[0];
  v5 = a2[2].n128_i64[0];
  v6 = a2[2].n128_u8[8];
  v7 = a2[3].n128_i64[0];
  if (sub_10095899C(*a1, a1[1], *a2, a2[1]))
  {
    sub_100C9E440(v2, v5);
    if ((v8 & 1) != 0 && ((v3 ^ v6) & 1) == 0)
      sub_100C9E654(v4, v7);
  }
}

uint64_t sub_1009565D8()
{
  uint64_t v0;
  Swift::String v1;
  Swift::String v2;
  uint64_t v3;
  uint64_t v4;
  Swift::String v5;
  void *object;
  Swift::String v7;
  uint64_t v8;
  Swift::String v9;
  Swift::String v10;
  void *v11;
  Swift::String v12;
  __int128 v14;
  _QWORD v15[2];

  v15[0] = 0;
  v15[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(66);
  v1._object = (void *)0x8000000100FE3510;
  v1._countAndFlagsBits = 0xD000000000000011;
  String.append(_:)(v1);
  Float.write<A>(to:)(v15, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, *(float *)v0);
  v2._countAndFlagsBits = 0x746E6569726F202CLL;
  v2._object = (void *)0xEF203A6E6F697461;
  String.append(_:)(v2);
  v14 = *(_OWORD *)(v0 + 16);
  v3 = sub_1004B804C(&qword_1013FBD28);
  v4 = sub_1004CBA30(&qword_1013FC020, &qword_1013FBD28, (uint64_t)&protocol conformance descriptor for SIMD4<A>);
  v5._countAndFlagsBits = SIMD.description.getter(v3, v4);
  object = v5._object;
  String.append(_:)(v5);
  swift_bridgeObjectRelease(object);
  v7._countAndFlagsBits = 0x203A657A6973202CLL;
  v7._object = (void *)0xE800000000000000;
  String.append(_:)(v7);
  v14 = *(_OWORD *)(v0 + 32);
  type metadata accessor for CGSize(0);
  _print_unlocked<A, B>(_:_:)(&v14, v15, v8, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v9._object = (void *)0x8000000100FE3530;
  v9._countAndFlagsBits = 0xD000000000000011;
  String.append(_:)(v9);
  v10._countAndFlagsBits = Double.description.getter(*(double *)(v0 + 64));
  v11 = v10._object;
  String.append(_:)(v10);
  swift_bridgeObjectRelease(v11);
  v12._countAndFlagsBits = 41;
  v12._object = (void *)0xE100000000000000;
  String.append(_:)(v12);
  return v15[0];
}

void sub_100956784()
{
  uint64_t v0;

  sub_100958D88(*(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
}

uint64_t sub_100956794(char *a1, char *a2)
{
  return sub_10083CF60(*a1, *a2);
}

Swift::Int sub_1009567A0()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  _QWORD v4[9];

  v1 = *v0;
  Hasher.init(_seed:)(v4, 0);
  if (v1)
    v2 = 7889261;
  else
    v2 = 7235949;
  String.hash(into:)(v4, v2, 0xE300000000000000);
  swift_bridgeObjectRelease(0xE300000000000000);
  return Hasher._finalize()();
}

uint64_t sub_100956804(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;

  if (*v1)
    v2 = 7889261;
  else
    v2 = 7235949;
  String.hash(into:)(a1, v2, 0xE300000000000000);
  return swift_bridgeObjectRelease(0xE300000000000000);
}

Swift::Int sub_10095683C(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  uint64_t v3;
  _QWORD v5[9];

  v2 = *v1;
  Hasher.init(_seed:)(v5, a1);
  if (v2)
    v3 = 7889261;
  else
    v3 = 7235949;
  String.hash(into:)(v5, v3, 0xE300000000000000);
  swift_bridgeObjectRelease(0xE300000000000000);
  return Hasher._finalize()();
}

uint64_t sub_10095689C@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;
  char v7;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_101265458, v3);
  result = swift_bridgeObjectRelease(v4);
  if (v5 == 1)
    v7 = 1;
  else
    v7 = 2;
  if (!v5)
    v7 = 0;
  *a2 = v7;
  return result;
}

void sub_1009568F8(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;

  v2 = 7235949;
  if (*v1)
    v2 = 7889261;
  *a1 = v2;
  a1[1] = 0xE300000000000000;
}

uint64_t sub_100956920()
{
  _BYTE *v0;

  if (*v0)
    return 7889261;
  else
    return 7235949;
}

uint64_t sub_100956944@<X0>(Swift::String string@<0:X0, 8:X1>, char *a2@<X8>)
{
  void *object;
  Swift::String v3;
  Swift::Int v5;
  uint64_t result;
  char v7;

  object = string._object;
  v3._countAndFlagsBits = string._countAndFlagsBits;
  v3._object = object;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_101265458, v3);
  result = swift_bridgeObjectRelease(object);
  if (v5 == 1)
    v7 = 1;
  else
    v7 = 2;
  if (!v5)
    v7 = 0;
  *a2 = v7;
  return result;
}

uint64_t sub_1009569A4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100956B9C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1009569CC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100956B9C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t BoundingBox.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  __int128 v14;
  __int128 v16;
  __n128 v17;
  char v18;
  __n128 v19[2];

  v3 = sub_1004B804C(&qword_1013FBCF8);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  v8 = a1[4];
  sub_1004BB5A4(a1, v7);
  v9 = sub_100956B9C();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&_s10CodingKeysON, &_s10CodingKeysON, v9, v7, v8);
  if (!v1)
  {
    v10 = sub_1004B804C(&qword_1013FBD08);
    v19[0].n128_u8[0] = 0;
    v11 = sub_1004CBA30(&qword_1013FBD10, &qword_1013FBD08, (uint64_t)&protocol conformance descriptor for SIMD3<A>);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v10, v19, v3, v10, v11);
    v17 = v19[1];
    v18 = 1;
    v12 = KeyedDecodingContainer.decode<A>(_:forKey:)(v10, &v18, v3, v10, v11);
    v13.n128_f64[0] = BoundingBox.init(min:max:)(v12, v17, v19[0]);
    v16 = v14;
    v17 = v13;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
}

unint64_t sub_100956B9C()
{
  unint64_t result;

  result = qword_1013FBD00;
  if (!qword_1013FBD00)
  {
    result = swift_getWitnessTable(&unk_100F1B9C4, &_s10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1013FBD00);
  }
  return result;
}

uint64_t BoundingBox.encode(to:)(_QWORD *a1, __n128 a2, __n128 a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v15;
  __n128 v16;
  __n128 v17;
  char v18;

  v15 = a3;
  v16 = a2;
  v5 = sub_1004B804C(&qword_1013FBD18);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_100956B9C();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&_s10CodingKeysON, &_s10CodingKeysON, v11, v9, v10);
  v17 = v16;
  v18 = 0;
  v12 = sub_1004B804C(&qword_1013FBD08);
  v13 = sub_1004CBA30(&qword_1013FBD20, &qword_1013FBD08, (uint64_t)&protocol conformance descriptor for SIMD3<A>);
  KeyedEncodingContainer.encode<A>(_:forKey:)(&v17, &v18, v5, v12, v13);
  if (!v3)
  {
    v17 = v15;
    v18 = 1;
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v17, &v18, v5, v12, v13);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100956D44@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  __int128 v5;
  __int128 v6;

  result = BoundingBox.init(from:)(a1);
  if (!v2)
  {
    *a2 = v5;
    a2[1] = v6;
  }
  return result;
}

uint64_t sub_100956D6C(_QWORD *a1)
{
  __n128 *v1;

  return BoundingBox.encode(to:)(a1, *v1, v1[1]);
}

uint64_t simd_quatf.init(from:)(_QWORD *a1)
{
  return sub_10095C854(a1);
}

uint64_t simd_quatf.encode(to:)(_QWORD *a1, __n128 a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v10;
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;

  v2 = a1[3];
  v3 = a1[4];
  sub_1004BB5A4(a1, v2);
  dispatch thunk of Encoder.singleValueContainer()(v11, v2, v3);
  v10 = a2;
  v4 = v12;
  v5 = v13;
  sub_1004CB9AC((uint64_t)v11, v12);
  v6 = sub_1004B804C(&qword_1013FBD28);
  v7 = sub_1004CBA30(&qword_1013FBD30, &qword_1013FBD28, (uint64_t)&protocol conformance descriptor for SIMD4<A>);
  dispatch thunk of SingleValueEncodingContainer.encode<A>(_:)(&v10, v6, v7, v4, v5);
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v11);
}

uint64_t sub_100956E64@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  __int128 v5;

  result = sub_10095C854(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_100956E8C(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v9;
  __int128 v10;
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;

  v9 = *v1;
  v2 = a1[3];
  v3 = a1[4];
  sub_1004BB5A4(a1, v2);
  dispatch thunk of Encoder.singleValueContainer()(v11, v2, v3);
  v10 = v9;
  v4 = v12;
  v5 = v13;
  sub_1004CB9AC((uint64_t)v11, v12);
  v6 = sub_1004B804C(&qword_1013FBD28);
  v7 = sub_1004CBA30(&qword_1013FBD30, &qword_1013FBD28, (uint64_t)&protocol conformance descriptor for SIMD4<A>);
  dispatch thunk of SingleValueEncodingContainer.encode<A>(_:)(&v10, v6, v7, v4, v5);
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v11);
}

double sub_100956F5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double result;

  v0 = type metadata accessor for CRLUSDRendering.TaskQueue();
  v1 = swift_allocObject(v0, 136, 15);
  swift_defaultActor_initialize(v1, v2);
  *(_QWORD *)(v1 + 128) = _swiftEmptyArrayStorage;
  *(_QWORD *)&result = 1;
  *(_OWORD *)(v1 + 112) = xmmword_100F02C20;
  qword_1013FBCF0 = v1;
  return result;
}

uint64_t sub_100956FAC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = v0;
  return swift_task_switch(sub_100956FC4, 0, 0);
}

uint64_t sub_100956FC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (qword_1013DD5B0 != -1)
    swift_once(&qword_1013DD5B0, sub_100956F5C);
  v1 = *(_QWORD *)(v0 + 24);
  v2 = qword_1013FBCF0;
  *(_QWORD *)(v0 + 32) = qword_1013FBCF0;
  swift_retain(v1);
  return swift_task_switch(sub_100957034, v2, 0);
}

uint64_t sub_100957034(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  static Task<>.checkCancellation()(a1);
  v2 = *(_QWORD *)(v1 + 32);
  v4 = sub_1005034A0(&qword_1013EB310, v3, (uint64_t (*)(uint64_t))type metadata accessor for CRLUSDRendering.TaskQueue, (uint64_t)&unk_100F1B3CC);
  v5 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v1 + 40) = v5;
  *v5 = v1;
  v5[1] = sub_100957114;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v5, v2, v4, 0xD000000000000013, 0x8000000100FC1C70, sub_100694ED8, *(_QWORD *)(v1 + 32), (char *)&type metadata for () + 8);
}

uint64_t sub_100957114()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 40);
  *(_QWORD *)(*v1 + 48) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_100957224;
  else
    v4 = sub_100957178;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 32), 0);
}

uint64_t sub_100957178(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t **v8;

  v2 = v1[6];
  result = static Task<>.checkCancellation()(a1);
  if (v2)
  {
    v4 = v1[4];
    v5 = *(_QWORD *)(v4 + 120);
    v6 = __OFSUB__(v5, 1);
    v7 = v5 - 1;
    if (v6)
    {
      __break(1u);
    }
    else
    {
      *(_QWORD *)(v4 + 120) = v7;
      sub_100957CC0();
      v1[9] = v2;
      return swift_task_switch(sub_100957350, 0, 0);
    }
  }
  else
  {
    v8 = (uint64_t **)swift_task_alloc(dword_1013FC374);
    v1[7] = (uint64_t)v8;
    *v8 = v1;
    v8[1] = (uint64_t *)sub_100957240;
    return sub_100957384((uint64_t)(v1 + 2), v1[3]);
  }
  return result;
}

uint64_t sub_100957224()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 72) = *(_QWORD *)(v0 + 48);
  return swift_task_switch(sub_100957350, 0, 0);
}

uint64_t sub_100957240()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 56);
  *(_QWORD *)(*v1 + 64) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_1009572F8;
  else
    v4 = sub_1009572A4;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 32), 0);
}

uint64_t sub_1009572A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v1 + 120);
  v3 = __OFSUB__(v2, 1);
  v4 = v2 - 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 24);
    *(_QWORD *)(v1 + 120) = v4;
    sub_100957CC0();
    v6 = swift_release(v5);
    return (*(uint64_t (**)(_QWORD, __n128))(v0 + 8))(*(_QWORD *)(v0 + 16), v6);
  }
  return result;
}

uint64_t sub_1009572F8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  uint64_t result;

  v1 = v0[4];
  v2 = *(_QWORD *)(v1 + 120);
  v3 = __OFSUB__(v2, 1);
  v4 = v2 - 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + 120) = v4;
    sub_100957CC0();
    v0[9] = v0[8];
    return swift_task_switch(sub_100957350, 0, 0);
  }
  return result;
}

uint64_t sub_100957350()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_release(*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(__n128))(v0 + 8))(v1);
}

uint64_t sub_100957384(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[2] = a1;
  v2[3] = a2;
  v3 = type metadata accessor for MainActor(0);
  v2[4] = v3;
  v2[5] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  v2[6] = v4;
  v2[7] = v5;
  return swift_task_switch(sub_1009573F4, v4, v5);
}

uint64_t sub_1009573F4(__n128 a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v2 = v1[3];
  v3 = type metadata accessor for Entity(0, a1);
  v4 = static Entity.loadAsync(contentsOf:withName:)(v2 + OBJC_IVAR____TtCO8Freeform15CRLUSDRendering11LoadReceipt_url, 0, 0);
  v1[8] = v4;
  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtCO8Freeform15CRLUSDRendering11LoadReceipt_entityLoadRequest);
  *(_QWORD *)(v2 + OBJC_IVAR____TtCO8Freeform15CRLUSDRendering11LoadReceipt_entityLoadRequest) = v4;
  swift_retain(v4);
  swift_release(v5);
  v6 = swift_allocObject(&unk_10128A8E0, 17, 7);
  v1[9] = v6;
  *(_BYTE *)(v6 + 16) = 0;
  v7 = static MainActor.shared.getter(v6);
  v1[10] = v7;
  v8 = (_QWORD *)swift_task_alloc(48);
  v1[11] = v8;
  v8[2] = v2;
  v8[3] = v4;
  v8[4] = v6;
  v9 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  v1[12] = v9;
  *v9 = v1;
  v9[1] = sub_100957528;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v1[2], v7, &protocol witness table for MainActor, 0x746E45636E797361, 0xED00002928797469, sub_10095E468, v8, v3);
}

uint64_t sub_100957528()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 96);
  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = v2[6];
    v5 = v2[7];
    v6 = sub_1009575E4;
  }
  else
  {
    v7 = v2[11];
    swift_release(v2[10]);
    swift_task_dealloc(v7);
    v4 = v2[6];
    v5 = v2[7];
    v6 = sub_10095759C;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_10095759C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 40);
  swift_release(*(_QWORD *)(v0 + 72));
  swift_release(v1);
  v3 = swift_release(v2);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v3);
}

uint64_t sub_1009575E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 40);
  swift_release(*(_QWORD *)(v0 + 80));
  swift_release(v2);
  swift_release(v3);
  swift_release(v4);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_100957648(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  char *v11;
  void (*v12)(char *, uint64_t, uint64_t, __n128);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double result;
  _QWORD v25[2];

  v25[0] = a2;
  v7 = sub_1004B804C(&qword_1013FC378);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  v10 = __chkstk_darwin(v7);
  v11 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25[1] = a3;
  v12 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16);
  v12(v11, a1, v7, v10);
  v13 = *(unsigned __int8 *)(v8 + 80);
  v14 = (v13 + 24) & ~v13;
  v15 = v14 + v9;
  v16 = v13 | 7;
  v17 = swift_allocObject(&unk_10128A908, v15, v13 | 7);
  *(_QWORD *)(v17 + 16) = a4;
  v18 = *(void (**)(uint64_t, char *, uint64_t))(v8 + 32);
  v18(v17 + v14, v11, v7);
  ((void (*)(char *, uint64_t, uint64_t))v12)(v11, a1, v7);
  v19 = swift_allocObject(&unk_10128A930, v15, v16);
  *(_QWORD *)(v19 + 16) = a4;
  v18(v19 + v14, v11, v7);
  swift_retain_n(a4, 2);
  v20 = sub_1004B804C(&qword_1013FC380);
  v21 = sub_1004CBA30(&qword_1013FC388, &qword_1013FC380, (uint64_t)&protocol conformance descriptor for LoadRequest<A>);
  v22 = Publisher.sink(receiveCompletion:receiveValue:)(sub_10095E478, v17, sub_10095E500, v19, v20, v21);
  swift_release(v17);
  swift_release(v19);
  v23 = *(_QWORD *)(v25[0] + OBJC_IVAR____TtCO8Freeform15CRLUSDRendering11LoadReceipt_cancellable);
  *(_QWORD *)(v25[0] + OBJC_IVAR____TtCO8Freeform15CRLUSDRendering11LoadReceipt_cancellable) = v22;
  *(_QWORD *)&result = swift_release(v23).n128_u64[0];
  return result;
}

void sub_1009577F8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  _BYTE *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10[24];
  char v11[24];

  v3 = *a1;
  v4 = (_BYTE *)(a2 + 16);
  swift_beginAccess(a2 + 16, v11, 0, 0);
  if ((*(_BYTE *)(a2 + 16) & 1) == 0)
  {
    swift_beginAccess(v4, v10, 1, 0);
    *v4 = 1;
    if (v3)
    {
      v9 = v3;
      swift_errorRetain(v3);
    }
    else
    {
      v5 = sub_100694FA8();
      v6 = swift_allocError(&type metadata for CRLUSDRendering.RendererError, v5, 0, 0);
      *(_QWORD *)v7 = 0xD00000000000001CLL;
      *(_QWORD *)(v7 + 8) = 0x8000000100FE3590;
      *(_BYTE *)(v7 + 16) = 2;
      v9 = v6;
    }
    v8 = sub_1004B804C(&qword_1013FC378);
    CheckedContinuation.resume(throwing:)(&v9, v8);
  }
}

void sub_1009578F4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[24];
  _BYTE v8[24];

  v3 = *a1;
  v4 = (_BYTE *)(a2 + 16);
  swift_beginAccess(a2 + 16, v8, 0, 0);
  if ((*(_BYTE *)(a2 + 16) & 1) == 0)
  {
    swift_beginAccess(v4, v7, 1, 0);
    *v4 = 1;
    v6 = v3;
    swift_retain(v3);
    v5 = sub_1004B804C(&qword_1013FC378);
    CheckedContinuation.resume(returning:)(&v6, v5);
  }
}

uint64_t sub_100957988()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCO8Freeform15CRLUSDRendering11LoadReceipt_url;
  v2 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtCO8Freeform15CRLUSDRendering11LoadReceipt_entityLoadRequest));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtCO8Freeform15CRLUSDRendering11LoadReceipt_cancellable));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1009579F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t, __n128);
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[3];
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[24];

  v1 = v0;
  v2 = sub_1004B804C(&qword_1013EB680);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess(v1 + 128, v19, 0, 0);
  v6 = *(_QWORD *)(v1 + 128);
  v7 = *(_QWORD *)(v6 + 16);
  if (v7)
  {
    v16[2] = v1 + 128;
    v17 = v1;
    v8 = v6 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v9 = *(_QWORD *)(v3 + 72);
    v10 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16);
    v16[1] = v6;
    v11 = swift_bridgeObjectRetain(v6);
    do
    {
      v10(v5, v8, v2, v11);
      v12 = type metadata accessor for CancellationError(0);
      v13 = sub_1005034A0(&qword_1013DFE68, 255, (uint64_t (*)(uint64_t))&type metadata accessor for CancellationError, (uint64_t)&protocol conformance descriptor for CancellationError);
      v14 = swift_allocError(v12, v13, 0, 0);
      CancellationError.init()();
      v18 = v14;
      CheckedContinuation.resume(throwing:)(&v18, v2);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      v8 += v9;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
    v1 = v17;
  }
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy(v1);
  return swift_defaultActor_deallocate(v1);
}

void sub_100957B74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  _BYTE *v8;
  unint64_t *v9;
  unint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v12;
  unint64_t v13;
  _BYTE v15[24];

  v4 = sub_1004B804C(&qword_1013EB680);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v5 + 16))(v8, a1, v4, v6);
  v9 = (unint64_t *)(a2 + 128);
  swift_beginAccess(a2 + 128, v15, 33, 0);
  v10 = *(_QWORD *)(a2 + 128);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v10);
  *(_QWORD *)(a2 + 128) = v10;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v10 = sub_100D11104(0, *(_QWORD *)(v10 + 16) + 1, 1, v10);
    *v9 = v10;
  }
  v13 = *(_QWORD *)(v10 + 16);
  v12 = *(_QWORD *)(v10 + 24);
  if (v13 >= v12 >> 1)
  {
    v10 = sub_100D11104(v12 > 1, v13 + 1, 1, v10);
    *v9 = v10;
  }
  *(_QWORD *)(v10 + 16) = v13 + 1;
  (*(void (**)(unint64_t, _BYTE *, uint64_t))(v5 + 32))(v10+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v13, v8, v4);
  swift_endAccess(v15);
  sub_100957CC0();
}

void sub_100957CC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[24];
  _BYTE v10[24];

  v1 = sub_1004B804C(&qword_1013EB680);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v9[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess(v0 + 128, v10, 0, 0);
  if (*(_QWORD *)(*(_QWORD *)(v0 + 128) + 16))
  {
    v5 = *(_QWORD *)(v0 + 120);
    if (v5 <= 0)
    {
      *(_QWORD *)(v0 + 120) = v5 + 1;
      v6 = swift_beginAccess(v0 + 128, v9, 33, 0);
      v7 = *(_QWORD *)(v0 + 128);
      if (*(_QWORD *)(v7 + 16))
      {
        (*(void (**)(_BYTE *, unint64_t, uint64_t, __n128))(v2 + 16))(v4, v7 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80)), v1, v6);
        sub_100CFF228(0, 1);
        v8 = swift_endAccess(v9);
        CheckedContinuation.resume(returning:)(v8, v1);
        (*(void (**)(_BYTE *, uint64_t))(v2 + 8))(v4, v1);
      }
      else
      {
        __break(1u);
      }
    }
  }
}

unint64_t sub_100957DDC(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t inited;
  uint64_t v13;
  _QWORD v14[2];
  char v15;

  if (qword_1013DCF48 != -1)
    swift_once(&qword_1013DCF48, sub_1006D59B4);
  v14[0] = a1;
  v14[1] = a2;
  v15 = a3;
  v6 = sub_10095DE24();
  v7 = dispatch thunk of JSONEncoder.encode<A>(_:)(v14, &type metadata for CRLUSDRendering.RendererError, v6);
  v9 = v8;
  v10 = sub_1004B804C(&qword_1013F7600);
  inited = swift_initStackObject(v10, &v13);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_QWORD *)(inited + 32) = 0xD000000000000026;
  *(_QWORD *)(inited + 40) = 0x8000000100FE34C0;
  *(_QWORD *)(inited + 72) = &type metadata for Data;
  *(_QWORD *)(inited + 48) = v7;
  *(_QWORD *)(inited + 56) = v9;
  return sub_1008D5E68(inited);
}

unint64_t sub_100957EDC()
{
  uint64_t v0;

  return sub_100957DDC(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

uint64_t sub_100957EE8()
{
  uint64_t v0;

  return sub_10095E404(*(uint64_t (**)(void))(v0 + 8));
}

void sub_100957EF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  Swift::UInt *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  Swift::UInt v17;
  Swift::UInt v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  Swift::UInt v30;
  char *v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  char *v40;
  int64_t v41;
  _OWORD v42[4];
  uint64_t v43;

  v4 = type metadata accessor for AnyCRValue(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v40 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_1013FC358);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (Swift::UInt *)((char *)&v36 - v11);
  v13 = *(_QWORD *)(a2 + 64);
  v37 = a2 + 64;
  v14 = 1 << *(_BYTE *)(a2 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v38 = (unint64_t)(v14 + 63) >> 6;
  v39 = a2;
  v36 = v38 - 1;
  swift_bridgeObjectRetain(a2);
  v17 = 0;
  v41 = 0;
  if (!v16)
    goto LABEL_6;
LABEL_4:
  v18 = v17;
  v19 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  v20 = v19 | (v41 << 6);
LABEL_5:
  v21 = *(_QWORD *)(*(_QWORD *)(v39 + 48) + 8 * v20);
  v22 = *(_QWORD *)(v39 + 56) + *(_QWORD *)(v5 + 72) * v20;
  v23 = sub_1004B804C(&qword_1013FC360);
  (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(&v10[*(int *)(v23 + 48)], v22, v4);
  *(_QWORD *)v10 = v21;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v10, 0, 1, v23);
  v17 = v18;
  while (1)
  {
    sub_10095E410((uint64_t)v10, (uint64_t)v12);
    v29 = sub_1004B804C(&qword_1013FC360);
    if ((*(unsigned int (**)(Swift::UInt *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 48))(v12, 1, v29) == 1)
    {
      swift_release(v39);
      Hasher._combine(_:)(v17);
      return;
    }
    v30 = *v12;
    v31 = v40;
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v40, (char *)v12 + *(int *)(v29 + 48), v4);
    v32 = *(_QWORD *)(a1 + 64);
    v33 = *(_OWORD *)(a1 + 16);
    v42[0] = *(_OWORD *)a1;
    v42[1] = v33;
    v34 = *(_OWORD *)(a1 + 48);
    v42[2] = *(_OWORD *)(a1 + 32);
    v42[3] = v34;
    v43 = v32;
    Hasher._combine(_:)(v30);
    v35 = sub_1005034A0(&qword_1013FC368, 255, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCRValue, (uint64_t)&protocol conformance descriptor for AnyCRValue);
    dispatch thunk of Hashable.hash(into:)(v42, v4, v35);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v31, v4);
    v17 ^= Hasher._finalize()();
    if (v16)
      goto LABEL_4;
LABEL_6:
    v24 = v41 + 1;
    if (__OFADD__(v41, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v24 < v38)
    {
      v25 = *(_QWORD *)(v37 + 8 * v24);
      if (v25)
        goto LABEL_9;
      v26 = v41 + 2;
      ++v41;
      if (v24 + 1 < v38)
      {
        v25 = *(_QWORD *)(v37 + 8 * v26);
        if (v25)
        {
          ++v24;
LABEL_9:
          v18 = v17;
          v16 = (v25 - 1) & v25;
          v20 = __clz(__rbit64(v25)) + (v24 << 6);
          v41 = v24;
          goto LABEL_5;
        }
        v27 = v24 + 2;
        v41 = v24 + 1;
        if (v24 + 2 < v38)
          break;
      }
    }
LABEL_21:
    v28 = sub_1004B804C(&qword_1013FC360);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v10, 1, 1, v28);
    v16 = 0;
  }
  v25 = *(_QWORD *)(v37 + 8 * v27);
  if (v25)
  {
    v24 += 2;
    goto LABEL_9;
  }
  while (1)
  {
    v24 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v24 >= v38)
    {
      v41 = v36;
      goto LABEL_21;
    }
    v25 = *(_QWORD *)(v37 + 8 * v24);
    ++v27;
    if (v25)
      goto LABEL_9;
  }
LABEL_27:
  __break(1u);
}

void sub_100958294(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  Swift::UInt v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  _OWORD v26[4];
  uint64_t v27;

  v25 = a2 + 64;
  v4 = 1 << *(_BYTE *)(a2 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a2 + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain(a2);
  v8 = 0;
  v9 = 0;
  while (1)
  {
    if (v6)
    {
      v10 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v11 = v10 | (v9 << 6);
      goto LABEL_5;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v22 >= v7)
      goto LABEL_19;
    v23 = *(_QWORD *)(v25 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v7)
        goto LABEL_19;
      v23 = *(_QWORD *)(v25 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_18:
    v6 = (v23 - 1) & v23;
    v11 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_5:
    v12 = 16 * v11;
    v13 = (uint64_t *)(*(_QWORD *)(a2 + 48) + v12);
    v14 = *v13;
    v15 = v13[1];
    v16 = (uint64_t *)(*(_QWORD *)(a2 + 56) + v12);
    v17 = *v16;
    v18 = v16[1];
    v19 = *(_QWORD *)(a1 + 64);
    v20 = *(_OWORD *)(a1 + 16);
    v26[0] = *(_OWORD *)a1;
    v26[1] = v20;
    v21 = *(_OWORD *)(a1 + 48);
    v26[2] = *(_OWORD *)(a1 + 32);
    v26[3] = v21;
    v27 = v19;
    swift_bridgeObjectRetain(v15);
    swift_bridgeObjectRetain(v18);
    String.hash(into:)(v26, v14, v15);
    swift_bridgeObjectRelease(v15);
    String.hash(into:)(v26, v17, v18);
    swift_bridgeObjectRelease(v18);
    v8 ^= Hasher._finalize()();
  }
  v24 = v22 + 2;
  if (v24 >= v7)
  {
LABEL_19:
    swift_release(a2);
    Hasher._combine(_:)(v8);
    return;
  }
  v23 = *(_QWORD *)(v25 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_18;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v7)
      goto LABEL_19;
    v23 = *(_QWORD *)(v25 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_18;
  }
LABEL_21:
  __break(1u);
}

void sub_100958458(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  Swift::UInt v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  Swift::UInt32 v24;
  _OWORD v25[4];
  uint64_t v26;

  v4 = a2 + 64;
  v5 = 1 << *(_BYTE *)(a2 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a2 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain(a2);
  v9 = 0;
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v12 = v11 | (v10 << 6);
      goto LABEL_20;
    }
    v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v13 >= v8)
      goto LABEL_28;
    v14 = *(_QWORD *)(v4 + 8 * v13);
    ++v10;
    if (!v14)
    {
      v10 = v13 + 1;
      if (v13 + 1 >= v8)
        goto LABEL_28;
      v14 = *(_QWORD *)(v4 + 8 * v10);
      if (!v14)
        break;
    }
LABEL_19:
    v7 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v10 << 6);
LABEL_20:
    v16 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v12);
    v17 = *v16;
    v18 = v16[1];
    v19 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v12);
    v20 = *(_QWORD *)(a1 + 64);
    v21 = *(_OWORD *)(a1 + 16);
    v25[0] = *(_OWORD *)a1;
    v25[1] = v21;
    v22 = *(_OWORD *)(a1 + 48);
    v25[2] = *(_OWORD *)(a1 + 32);
    v25[3] = v22;
    v26 = v20;
    swift_bridgeObjectRetain(v18);
    String.hash(into:)(v25, v17, v18);
    swift_bridgeObjectRelease(v18);
    if (v19 == 2)
    {
      Hasher._combine(_:)(0);
    }
    else
    {
      Hasher._combine(_:)(1uLL);
      Hasher._combine(_:)(v19 & 1);
      Hasher._combine(_:)(BYTE1(v19) & 1);
      Hasher._combine(_:)(BYTE2(v19) & 1);
      Hasher._combine(_:)(BYTE3(v19) & 1);
      if ((v19 & 0x7FFFFF00000000) == 0 && (v19 & 0x7F80000000000000) == 0)
        v24 = 0;
      else
        v24 = HIDWORD(v19);
      Hasher._combine(_:)(v24);
    }
    v9 ^= Hasher._finalize()();
  }
  v15 = v13 + 2;
  if (v15 >= v8)
  {
LABEL_28:
    swift_release(a2);
    Hasher._combine(_:)(v9);
    return;
  }
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
  {
    v10 = v15;
    goto LABEL_19;
  }
  while (1)
  {
    v10 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v10 >= v8)
      goto LABEL_28;
    v14 = *(_QWORD *)(v4 + 8 * v10);
    ++v15;
    if (v14)
      goto LABEL_19;
  }
LABEL_30:
  __break(1u);
}

void sub_100958660(__n128 a1)
{
  Swift::UInt32 v1;
  Swift::UInt32 v2;
  Swift::UInt32 v3;

  if ((a1.n128_u32[0] & 0x7FFFFFFF) != 0)
    v1 = a1.n128_u32[0];
  else
    v1 = 0;
  Hasher._combine(_:)(v1);
  if ((a1.n128_u32[1] & 0x7FFFFFFF) != 0)
    v2 = a1.n128_u32[1];
  else
    v2 = 0;
  Hasher._combine(_:)(v2);
  if ((a1.n128_u32[2] & 0x7FFFFFFF) != 0)
    v3 = a1.n128_u32[2];
  else
    v3 = 0;
  Hasher._combine(_:)(v3);
}

BOOL sub_1009586C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  BOOL v5;
  float v6;
  float v7;
  uint64_t v8;
  __int128 v10;
  __int128 v11;

  if (*(float *)a1 != *(float *)a2)
    return 0;
  v2 = 0;
  v3 = *(_OWORD *)(a1 + 16);
  v4 = *(_OWORD *)(a2 + 16);
  v5 = 1;
  while (!v5)
  {
    v5 = 0;
    v8 = 0;
    if (v2 == 3)
      return v8;
LABEL_4:
    ++v2;
  }
  v10 = v3;
  v6 = *(float *)((unint64_t)&v10 & 0xFFFFFFFFFFFFFFF3 | (4 * (v2 & 3)));
  v11 = v4;
  v7 = *(float *)((unint64_t)&v11 & 0xFFFFFFFFFFFFFFF3 | (4 * (v2 & 3)));
  v5 = v6 == v7;
  if (v2 != 3)
    goto LABEL_4;
  if (v6 != v7
    || *(double *)(a1 + 32) != *(double *)(a2 + 32)
    || *(double *)(a1 + 40) != *(double *)(a2 + 40)
    || *(double *)(a1 + 48) != *(double *)(a2 + 48)
    || *(double *)(a1 + 56) != *(double *)(a2 + 56))
  {
    return 0;
  }
  return *(double *)(a1 + 64) == *(double *)(a2 + 64);
}

BOOL sub_1009587A4(uint64_t a1, uint64_t a2)
{
  int *v4;
  char v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  _OWORD v13[4];
  uint64_t v14;
  _OWORD v15[4];
  uint64_t v16;

  if ((static URL.== infix(_:_:)(a1, a2) & 1) == 0)
    return 0;
  v4 = (int *)type metadata accessor for CRLUSDRendering.SceneRequest(0);
  sub_1007B38CC(*(_QWORD *)(a1 + v4[5]), *(_QWORD *)(a1 + v4[5] + 8));
  if ((v5 & 1) == 0)
    return 0;
  v6 = a1 + v4[6];
  v7 = *(_OWORD *)(v6 + 48);
  v13[2] = *(_OWORD *)(v6 + 32);
  v13[3] = v7;
  v14 = *(_QWORD *)(v6 + 64);
  v8 = *(_OWORD *)(v6 + 16);
  v13[0] = *(_OWORD *)v6;
  v13[1] = v8;
  v9 = a2 + v4[6];
  v16 = *(_QWORD *)(v9 + 64);
  v10 = *(_OWORD *)(v9 + 48);
  v15[2] = *(_OWORD *)(v9 + 32);
  v15[3] = v10;
  v11 = *(_OWORD *)(v9 + 16);
  v15[0] = *(_OWORD *)v9;
  v15[1] = v11;
  return sub_1009586C0((uint64_t)v13, (uint64_t)v15)
      && CGRectEqualToRect(*(CGRect *)(a1 + v4[7]), *(CGRect *)(a2 + v4[7]));
}

void sub_10095887C(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

uint64_t sub_1009588A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a6)
    return 0;
  if (a1 == a4 && a2 == a5)
    return 1;
  return _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a4, a5, 0);
}

BOOL sub_10095899C(__n128 a1, __n128 a2, __n128 a3, __n128 a4)
{
  uint64_t v4;
  BOOL v5;
  _BOOL8 result;
  float v7;
  float v8;
  uint64_t v9;
  float v10;
  BOOL v11;
  __n128 v12;
  __n128 v13;
  __n128 v14;
  __n128 v15;

  v4 = 0;
  v5 = 1;
  while (!v5)
  {
    v5 = 0;
    result = 0;
    if (v4 == 2)
      return result;
LABEL_3:
    ++v4;
  }
  v14 = a1;
  v7 = *(float *)((unint64_t)&v14 & 0xFFFFFFFFFFFFFFF3 | (4 * (v4 & 3)));
  v15 = a3;
  v8 = *(float *)((unint64_t)&v15 & 0xFFFFFFFFFFFFFFF3 | (4 * (v4 & 3)));
  v5 = v7 == v8;
  if (v4 != 2)
    goto LABEL_3;
  if (v7 != v8)
    return 0;
  v9 = 0;
  while (1)
  {
    v12 = a2;
    v10 = *(float *)((unint64_t)&v12 & 0xFFFFFFFFFFFFFFF3 | (4 * (v9 & 3)));
    v13 = a4;
    v11 = v10 == *(float *)((unint64_t)&v13 & 0xFFFFFFFFFFFFFFF3 | (4 * (v9 & 3)));
    result = v11;
    if (v9 == 2)
      break;
    while (1)
    {
      ++v9;
      if (v11)
        break;
      v11 = 0;
      result = 0;
      if (v9 == 2)
        return result;
    }
  }
  return result;
}

uint64_t sub_100958A70(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  int v10;
  unint64_t v11;
  BOOL v12;
  uint64_t v13;
  float v14;
  float v15;
  int8x16_t v17;
  uint64_t v18;
  BOOL v19;
  float v20;
  float v21;
  int8x16_t v22;
  char v23;
  char v24;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  _BYTE v32[40];
  unint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;

  sub_10068EAAC(a1, (uint64_t)&v35);
  v4 = v38;
  v3 = v39;
  if (!(v38 >> 62))
  {
    v38 &= 0x3FFFFFFFFFFFFFFFuLL;
    v26 = v35;
    v27 = v36;
    v9 = v37;
    sub_10068EAAC(a2, (uint64_t)v32);
    v10 = v33;
    v11 = v33 >> 62;
    if (v33 >> 62)
      goto LABEL_45;
    v12 = 1;
    v13 = v34;
    while (1)
    {
      while (!v12)
      {
        if (v11 == 2)
          goto LABEL_45;
        v12 = 0;
        ++v11;
      }
      v30 = v26;
      v14 = *(float *)((unint64_t)&v30 & 0xFFFFFFFFFFFFFFF3 | (4 * (v11 & 3)));
      v31 = *(_OWORD *)v32;
      v15 = *(float *)((unint64_t)&v31 & 0xFFFFFFFFFFFFFFF3 | (4 * (v11 & 3)));
      v12 = v14 == v15;
      if (v11 == 2)
        break;
      ++v11;
    }
    if (v14 != v15)
      goto LABEL_45;
    v18 = 0;
    v19 = 1;
    while (1)
    {
      while (!v19)
      {
        if (v18 == 2)
          goto LABEL_45;
        v19 = 0;
        ++v18;
      }
      v28 = v27;
      v20 = *(float *)((unint64_t)&v28 & 0xFFFFFFFFFFFFFFF3 | (4 * (v18 & 3)));
      v29 = *(_OWORD *)&v32[16];
      v21 = *(float *)((unint64_t)&v29 & 0xFFFFFFFFFFFFFFF3 | (4 * (v18 & 3)));
      v19 = v20 == v21;
      if (v18 == 2)
        break;
      ++v18;
    }
    if (v20 != v21)
      goto LABEL_45;
    sub_100C9E440(v9, *(uint64_t *)&v32[32]);
    if ((v23 & 1) == 0)
      goto LABEL_45;
    if (((v4 ^ v10) & 1) != 0)
      goto LABEL_45;
    sub_100C9E654(v3, v13);
    if ((v24 & 1) == 0)
      goto LABEL_45;
    goto LABEL_40;
  }
  v5 = v35;
  if (v38 >> 62 != 1)
  {
    if (v38 == 0x8000000000000000
      && (v39 | (unint64_t)v35 | v37 | *((_QWORD *)&v36 + 1) | (unint64_t)v36 | *((_QWORD *)&v35 + 1)) == 0)
    {
      sub_10068EAAC(a2, (uint64_t)v32);
      if (v33 >> 62 != 2)
        goto LABEL_45;
      if (v33 != 0x8000000000000000)
        goto LABEL_45;
      v17 = vorrq_s8(*(int8x16_t *)&v32[8], *(int8x16_t *)&v32[24]);
      if (*(_QWORD *)&vorr_s8(*(int8x8_t *)v17.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v17, v17, 8uLL)) | v34 | *(_QWORD *)v32)
        goto LABEL_45;
    }
    else
    {
      if (v38 == 0x8000000000000000
        && (_QWORD)v35 == 1
        && !(*((_QWORD *)&v36 + 1) | v37 | (unint64_t)v36 | *((_QWORD *)&v35 + 1) | v39))
      {
        sub_10068EAAC(a2, (uint64_t)v32);
        if (v33 >> 62 != 2 || v34 || v33 != 0x8000000000000000 || *(_QWORD *)v32 != 1)
          goto LABEL_45;
      }
      else
      {
        sub_10068EAAC(a2, (uint64_t)v32);
        if (v33 >> 62 != 2 || v34 || v33 != 0x8000000000000000 || *(_QWORD *)v32 != 2)
          goto LABEL_45;
      }
      v22 = vorrq_s8(*(int8x16_t *)&v32[8], *(int8x16_t *)&v32[24]);
      if (vorr_s8(*(int8x8_t *)v22.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v22, v22, 8uLL)))
      {
LABEL_45:
        v8 = 0;
        return v8 & 1;
      }
    }
LABEL_40:
    v8 = 1;
    return v8 & 1;
  }
  v38 &= 0x3FFFFFFFFFFFFFFFuLL;
  v6 = *((_QWORD *)&v35 + 1);
  v7 = v36;
  sub_10068EAAC(a2, (uint64_t)v32);
  if (v33 >> 62 != 1)
    goto LABEL_45;
  v33 &= 0x3FFFFFFFFFFFFFFFuLL;
  sub_10095887C(v5, v6, v7);
  return v8 & 1;
}

void sub_100958D88(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  BOOL v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  Swift::String v20;
  Swift::String v21;
  uint64_t v22;
  Swift::String v23;
  Swift::String v24;
  uint64_t v25;
  Swift::String v26;
  Swift::String v27;
  Swift::String v28;
  Swift::String v29;
  Swift::String v30;
  Swift::String v31;
  Swift::String v32;
  Swift::String v33;
  Swift::String v34;
  Swift::String v35;
  Swift::String v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  Swift::String v40;
  __int128 v41;

  v3 = 0;
  v4 = 0;
  v5 = 0;
  v6 = a1 + 64;
  v7 = 1 << *(_BYTE *)(a1 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a1 + 64);
  v10 = (unint64_t)(v7 + 63) >> 6;
  do
  {
    while (1)
    {
      if (v9)
      {
        v12 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v13 = v12 | (v5 << 6);
      }
      else
      {
        v14 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
          __break(1u);
LABEL_34:
          __break(1u);
LABEL_35:
          __break(1u);
LABEL_36:
          __break(1u);
          return;
        }
        if (v14 >= v10)
          goto LABEL_25;
        v15 = *(_QWORD *)(v6 + 8 * v14);
        ++v5;
        if (!v15)
        {
          v5 = v14 + 1;
          if (v14 + 1 >= v10)
            goto LABEL_25;
          v15 = *(_QWORD *)(v6 + 8 * v5);
          if (!v15)
          {
            v5 = v14 + 2;
            if (v14 + 2 >= v10)
              goto LABEL_25;
            v15 = *(_QWORD *)(v6 + 8 * v5);
            if (!v15)
            {
              v16 = v14 + 3;
              if (v16 >= v10)
                goto LABEL_25;
              v15 = *(_QWORD *)(v6 + 8 * v16);
              if (!v15)
              {
                while (1)
                {
                  v5 = v16 + 1;
                  if (__OFADD__(v16, 1))
                    goto LABEL_34;
                  if (v5 >= v10)
                    goto LABEL_25;
                  v15 = *(_QWORD *)(v6 + 8 * v5);
                  ++v16;
                  if (v15)
                    goto LABEL_20;
                }
              }
              v5 = v16;
            }
          }
        }
LABEL_20:
        v9 = (v15 - 1) & v15;
        v13 = __clz(__rbit64(v15)) + (v5 << 6);
      }
      if (*(_BYTE *)(*(_QWORD *)(a1 + 56) + 8 * v13) != 2)
        break;
      v11 = __OFADD__(v3++, 1);
      if (v11)
        goto LABEL_35;
    }
    v11 = __OFADD__(v4++, 1);
  }
  while (!v11);
  __break(1u);
LABEL_25:
  *(double *)&v17 = BoundingBox.extents.getter();
  v41 = v17;
  v18 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  v19 = swift_allocObject(v18, 72, 7);
  *(_OWORD *)(v19 + 16) = xmmword_100EF5E40;
  *(_QWORD *)(v19 + 56) = &type metadata for Float;
  *(_QWORD *)(v19 + 64) = &protocol witness table for Float;
  *(_DWORD *)(v19 + 32) = v41;
  v20._countAndFlagsBits = String.init(format:_:)(1714499109, 0xE400000000000000, v19);
  String.append(_:)(v20);
  swift_bridgeObjectRelease();
  v21._countAndFlagsBits = 2127904;
  v21._object = (void *)0xE300000000000000;
  String.append(_:)(v21);
  v22 = swift_allocObject(v18, 72, 7);
  *(_OWORD *)(v22 + 16) = xmmword_100EF5E40;
  *(_QWORD *)(v22 + 56) = &type metadata for Float;
  *(_QWORD *)(v22 + 64) = &protocol witness table for Float;
  *(_DWORD *)(v22 + 32) = DWORD1(v41);
  v23._countAndFlagsBits = String.init(format:_:)(1714499109, 0xE400000000000000, v22);
  String.append(_:)(v23);
  swift_bridgeObjectRelease();
  v24._countAndFlagsBits = 2127904;
  v24._object = (void *)0xE300000000000000;
  String.append(_:)(v24);
  v25 = swift_allocObject(v18, 72, 7);
  *(_OWORD *)(v25 + 16) = xmmword_100EF5E40;
  *(_QWORD *)(v25 + 56) = &type metadata for Float;
  *(_QWORD *)(v25 + 64) = &protocol witness table for Float;
  *(_DWORD *)(v25 + 32) = DWORD2(v41);
  v26._countAndFlagsBits = String.init(format:_:)(1714499109, 0xE400000000000000, v25);
  String.append(_:)(v26);
  swift_bridgeObjectRelease();
  v27._countAndFlagsBits = 41;
  v27._object = (void *)0xE100000000000000;
  String.append(_:)(v27);
  _StringGuts.grow(_:)(69);
  v28._object = (void *)0x8000000100FE3550;
  v28._countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v28);
  v29._countAndFlagsBits = 40;
  v29._object = (void *)0xE100000000000000;
  String.append(_:)(v29);
  swift_bridgeObjectRelease();
  v30._countAndFlagsBits = 8236;
  v30._object = (void *)0xE200000000000000;
  String.append(_:)(v30);
  if (__OFADD__(v4, v3))
    goto LABEL_36;
  v31._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  String.append(_:)(v31);
  swift_bridgeObjectRelease();
  v32._countAndFlagsBits = 0x2820736D696E6120;
  v32._object = (void *)0xE800000000000000;
  String.append(_:)(v32);
  v33._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  String.append(_:)(v33);
  swift_bridgeObjectRelease();
  v34._countAndFlagsBits = 0x2C65766974636120;
  v34._object = (void *)0xE900000000000020;
  String.append(_:)(v34);
  v35._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  String.append(_:)(v35);
  swift_bridgeObjectRelease();
  v36._countAndFlagsBits = 0xD000000000000015;
  v36._object = (void *)0x8000000100FE3570;
  String.append(_:)(v36);
  if ((a2 & 1) != 0)
    v37 = 1702195828;
  else
    v37 = 0x65736C6166;
  if ((a2 & 1) != 0)
    v38 = 0xE400000000000000;
  else
    v38 = 0xE500000000000000;
  v39 = v38;
  String.append(_:)(*(Swift::String *)&v37);
  swift_bridgeObjectRelease();
  v40._countAndFlagsBits = 41;
  v40._object = (void *)0xE100000000000000;
  String.append(_:)(v40);
}

uint64_t sub_1009591F4(void *a1)
{
  id v1;
  uint64_t v2;
  unint64_t v3;
  char v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD v9[2];
  __int128 v10;
  __int128 v11;

  v1 = objc_msgSend(a1, "userInfo");
  v2 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v1, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  if (!*(_QWORD *)(v2 + 16) || (v3 = sub_100842E98(0xD000000000000026, 0x8000000100FE34C0), (v4 & 1) == 0))
  {
    v10 = 0u;
    v11 = 0u;
    swift_bridgeObjectRelease(v2);
    goto LABEL_9;
  }
  sub_1004CB6E8(*(_QWORD *)(v2 + 56) + 32 * v3, (uint64_t)&v10);
  swift_bridgeObjectRelease(v2);
  if (!*((_QWORD *)&v11 + 1))
  {
LABEL_9:
    sub_1004D28EC((uint64_t)&v10);
    return 0;
  }
  if ((swift_dynamicCast(v9, &v10, (char *)&type metadata for Any + 8, &type metadata for Data, 6) & 1) == 0)
    return 0;
  v5 = v9[0];
  v6 = v9[1];
  if (qword_1013DCF50 != -1)
    swift_once(&qword_1013DCF50, sub_1006D59D0);
  v7 = sub_10095D7DC();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)(&v10, &type metadata for CRLUSDRendering.RendererError, v5, v6, &type metadata for CRLUSDRendering.RendererError, v7);
  sub_1004BBBC8(v5, v6);
  return v10;
}

uint64_t sub_100959378(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  char v9;

  if (a1 == 7107189 && a2 == 0xE300000000000000)
  {
    v5 = 0xE300000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(7107189, 0xE300000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x6D6B6F6F426C7275 && a2 == 0xEF617461446B7261)
  {
    v7 = 0xEF617461446B7261;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6D6B6F6F426C7275, 0xEF617461446B7261, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x72756769666E6F63 && a2 == 0xED00006E6F697461)
  {
    v8 = 0xED00006E6F697461;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x72756769666E6F63, 0xED00006E6F697461, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 0x46746C7561666564 && a2 == 0xEC000000656D6172)
  {
    swift_bridgeObjectRelease(0xEC000000656D6172);
    return 3;
  }
  else
  {
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(0x46746C7561666564, 0xEC000000656D6172, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v9 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_100959580(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;

  if (a1 == 0x4F466172656D6163 && a2 == 0xE900000000000056)
  {
    v5 = 0xE900000000000056;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x4F466172656D6163, 0xE900000000000056, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x7461746E6569726FLL && a2 == 0xEB000000006E6F69)
  {
    v7 = 0xEB000000006E6F69;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7461746E6569726FLL, 0xEB000000006E6F69, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x724664656C616373 && a2 == 0xEF657A6953656D61)
  {
    v8 = 0xEF657A6953656D61;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x724664656C616373, 0xEF657A6953656D61, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 0xD000000000000011)
  {
    v9 = 0x8000000100FE35F0;
    if (a2 == 0x8000000100FE35F0)
      goto LABEL_25;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000011, 0x8000000100FE35F0, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
LABEL_25:
    swift_bridgeObjectRelease(v9);
    return 3;
  }
  if (a1 == 0x73746E65746E6F63 && a2 == 0xED0000656C616353)
  {
    swift_bridgeObjectRelease(0xED0000656C616353);
    return 4;
  }
  else
  {
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(0x73746E65746E6F63, 0xED0000656C616353, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v10 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_100959800(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;

  if (a1 == 0x6D696E4179616C70 && a2 == 0xEE00736E6F697461)
  {
    v5 = 0xEE00736E6F697461;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6D696E4179616C70, 0xEE00736E6F697461, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x696E416573756170 && a2 == 0xEF736E6F6974616DLL)
  {
    v7 = 0xEF736E6F6974616DLL;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x696E416573756170, 0xEF736E6F6974616DLL, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0xD000000000000010)
  {
    v8 = 0x8000000100FE35B0;
    if (a2 == 0x8000000100FE35B0)
      goto LABEL_19;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x8000000100FE35B0, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
LABEL_19:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if (a1 == 0x696E417465736572 && a2 == 0xEF736E6F6974616DLL)
  {
    v9 = 0xEF736E6F6974616DLL;
LABEL_25:
    swift_bridgeObjectRelease(v9);
    return 3;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x696E417465736572, 0xEF736E6F6974616DLL, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
    goto LABEL_25;
  }
  if (a1 == 0x6D696E41706F7473 && a2 == 0xEE00736E6F697461)
  {
    swift_bridgeObjectRelease(0xEE00736E6F697461);
    return 4;
  }
  else
  {
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6D696E41706F7473, 0xEE00736E6F697461, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v10 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_100959A8C(uint64_t a1, unint64_t a2)
{
  unint64_t v4;
  char v6;

  if (a1 == 0xD000000000000012)
  {
    v4 = 0x8000000100FE35D0;
    if (a2 == 0x8000000100FE35D0)
      goto LABEL_5;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000012, 0x8000000100FE35D0, a1, a2, 0) & 1) != 0)
  {
    v4 = a2;
LABEL_5:
    swift_bridgeObjectRelease(v4);
    return 0;
  }
  if (a1 == 0x6150737472617473 && a2 == 0xEC00000064657375)
  {
    swift_bridgeObjectRelease(0xEC00000064657375);
    return 1;
  }
  else
  {
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6150737472617473, 0xEC00000064657375, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_100959B90(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;

  if (a1 == 0x6465737561507369 && a2 == 0xE800000000000000)
  {
    v5 = 0xE800000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6465737561507369, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x656C706D6F437369 && a2 == 0xEA00000000006574)
  {
    v7 = 0xEA00000000006574;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x656C706D6F437369, 0xEA00000000006574, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x6E6979616C507369 && a2 == 0xE900000000000067)
  {
    v8 = 0xE900000000000067;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E6979616C507369, 0xE900000000000067, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 0x6570706F74537369 && a2 == 0xE900000000000064)
  {
    v9 = 0xE900000000000064;
LABEL_26:
    swift_bridgeObjectRelease(v9);
    return 3;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6570706F74537369, 0xE900000000000064, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
    goto LABEL_26;
  }
  if (a1 == 0x6465657073 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease(0xE500000000000000);
    return 4;
  }
  else
  {
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6465657073, 0xE500000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v10 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_100959DC4(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v7;

  if (a1 == 0x6576697463616E69 && a2 == 0xE800000000000000)
  {
    v5 = 0xE800000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6576697463616E69, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x657669746361 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease(0xE600000000000000);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0x657669746361, 0xE600000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_100959EAC(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  char v9;

  if (a1 == 0x756F426C65646F6DLL && a2 == 0xEB0000000073646ELL)
  {
    v5 = 0xEB0000000073646ELL;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x756F426C65646F6DLL, 0xEB0000000073646ELL, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x6F6974616D696E61 && a2 == 0xEA0000000000736ELL)
  {
    v7 = 0xEA0000000000736ELL;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6F6974616D696E61, 0xEA0000000000736ELL, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x6956734977656976 && a2 == 0xED0000656C626973)
  {
    v8 = 0xED0000656C626973;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6956734977656976, 0xED0000656C626973, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 0x617461646174656DLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease(0xE800000000000000);
    return 3;
  }
  else
  {
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(0x617461646174656DLL, 0xE800000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v9 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_10095A0AC(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;

  if (a1 == 0x64656C6261736964 && a2 == 0xE800000000000000)
  {
    v5 = 0xE800000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x64656C6261736964, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x6574736575716572 && a2 == 0xE900000000000064)
  {
    v7 = 0xE900000000000064;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6574736575716572, 0xE900000000000064, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x676E6964616F6CLL && a2 == 0xE700000000000000)
  {
    v8 = 0xE700000000000000;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x676E6964616F6CLL, 0xE700000000000000, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 0x6E697265646E6572 && a2 == 0xE900000000000067)
  {
    v9 = 0xE900000000000067;
LABEL_26:
    swift_bridgeObjectRelease(v9);
    return 3;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E697265646E6572, 0xE900000000000067, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
    goto LABEL_26;
  }
  if (a1 == 0x726F727265 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease(0xE500000000000000);
    return 4;
  }
  else
  {
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(0x726F727265, 0xE500000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v10 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_10095A2D0(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char v12;

  if (a1 == 0x7245676E69646F63 && a2 == 0xEB00000000726F72)
  {
    v5 = 0xEB00000000726F72;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7245676E69646F63, 0xEB00000000726F72, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x726F7272456C7275 && a2 == 0xE800000000000000)
  {
    v7 = 0xE800000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x726F7272456C7275, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x45676E6964616F6CLL && a2 == 0xEC000000726F7272)
  {
    v8 = 0xEC000000726F7272;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x45676E6964616F6CLL, 0xEC000000726F7272, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 0x7272456574617473 && a2 == 0xEA0000000000726FLL)
  {
    v9 = 0xEA0000000000726FLL;
LABEL_26:
    swift_bridgeObjectRelease(v9);
    return 3;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7272456574617473, 0xEA0000000000726FLL, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
    goto LABEL_26;
  }
  if (a1 == 0x4574756F656D6974 && a2 == 0xEC000000726F7272)
  {
    v10 = 0xEC000000726F7272;
LABEL_32:
    swift_bridgeObjectRelease(v10);
    return 4;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x4574756F656D6974, 0xEC000000726F7272, a1, a2, 0) & 1) != 0)
  {
    v10 = a2;
    goto LABEL_32;
  }
  if (a1 == 0x6F69736E65747865 && a2 == 0xEE00726F7272456ELL)
  {
    v11 = 0xEE00726F7272456ELL;
LABEL_38:
    swift_bridgeObjectRelease(v11);
    return 5;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6F69736E65747865, 0xEE00726F7272456ELL, a1, a2, 0) & 1) != 0)
  {
    v11 = a2;
    goto LABEL_38;
  }
  if (a1 == 0x45636972656E6567 && a2 == 0xEC000000726F7272)
  {
    swift_bridgeObjectRelease(0xEC000000726F7272);
    return 6;
  }
  else
  {
    v12 = _stringCompareWithSmolCheck(_:_:expecting:)(0x45636972656E6567, 0xEC000000726F7272, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v12 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

uint64_t sub_10095A634(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  __n128 v25;
  __n128 v26;
  _QWORD v28[8];
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  _QWORD *v36;
  char *v37;

  v30 = sub_1004B804C(&qword_1013FC040);
  v35 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v34 = (char *)v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_1004B804C(&qword_1013FC048);
  v28[5] = *(_QWORD *)(v29 - 8);
  __chkstk_darwin(v29);
  v33 = (char *)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1004B804C(&qword_1013FC050);
  v28[6] = *(_QWORD *)(v4 - 8);
  v28[7] = v4;
  __chkstk_darwin(v4);
  v32 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C(&qword_1013FC058);
  v28[3] = *(_QWORD *)(v6 - 8);
  v28[4] = v6;
  __chkstk_darwin(v6);
  v31 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C(&qword_1013FC060);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1004B804C(&qword_1013FC068);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a1[3];
  v16 = a1[4];
  v36 = a1;
  sub_1004BB5A4(a1, v17);
  v18 = sub_10095D918();
  v19 = v37;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLUSDRendering.SceneAction.CodingKeys, &type metadata for CRLUSDRendering.SceneAction.CodingKeys, v18, v17, v16);
  if (!v19)
  {
    v37 = v11;
    v28[1] = v9;
    v28[2] = v8;
    v20 = KeyedDecodingContainer.allKeys.getter(v12);
    if (*(_QWORD *)(v20 + 16) == 1)
      __asm { BR              X10 }
    v9 = type metadata accessor for DecodingError(0);
    swift_allocError(v9, &protocol witness table for DecodingError, 0, 0);
    v21 = v15;
    v23 = v22;
    sub_1004B804C(&qword_1013DF800);
    *v23 = &type metadata for CRLUSDRendering.SceneAction;
    v24 = KeyedDecodingContainer.codingPath.getter(v12);
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)(v24, 0xD00000000000002BLL, 0x8000000100FACD50, 0);
    v25.n128_f64[0] = (*(double (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v23, enum case for DecodingError.typeMismatch(_:), v9);
    swift_willThrow(v25);
    v26 = swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, __n128))(v13 + 8))(v21, v12, v26);
  }
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v36);
  return v9;
}

void sub_10095AAF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __n128 v9;

  *(_QWORD *)(v7 - 96) = a1;
  *(_BYTE *)(v7 - 81) = 4;
  v8 = sub_10095D95C();
  KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for CRLUSDRendering.SceneAction.StopAnimationsCodingKeys, v7 - 81, v6, &type metadata for CRLUSDRendering.SceneAction.StopAnimationsCodingKeys, v8);
  if (v4)
  {
    swift_bridgeObjectRelease();
    JUMPOUT(0x10095AAACLL);
  }
  (*(void (**)(uint64_t, _QWORD))(v1 + 8))(v3, *(_QWORD *)(v7 - 152));
  v9 = swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, __n128))(v5 + 8))(v2, v6, v9);
  JUMPOUT(0x10095ABE0);
}

unint64_t sub_10095AC58(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  __n128 v34;
  __n128 v35;
  unint64_t v36;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  _QWORD *v42;
  uint64_t v43;
  unsigned __int8 v44;
  char v45;
  char v46;
  char v47;
  unsigned int v48;
  char v49;
  char v50;

  v2 = sub_1004B804C(&qword_1013FC0D0);
  v3 = *(_QWORD *)(v2 - 8);
  v39 = v2;
  v40 = v3;
  __chkstk_darwin(v2);
  v41 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C(&qword_1013FC0D8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C(&qword_1013FC0E0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v14 = a1[4];
  v42 = a1;
  v15 = (unint64_t)sub_1004BB5A4(a1, v13);
  v16 = sub_10095DAB0();
  v17 = v43;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLUSDRendering.SceneDescription.AnimationState.CodingKeys, &type metadata for CRLUSDRendering.SceneDescription.AnimationState.CodingKeys, v16, v13, v14);
  if (!v17)
  {
    v18 = v5;
    v19 = v41;
    v43 = v10;
    v20 = KeyedDecodingContainer.allKeys.getter(v9);
    if (*(_QWORD *)(v20 + 16) == 1)
    {
      if ((*(_BYTE *)(v20 + 32) & 1) != 0)
      {
        v50 = 1;
        v21 = sub_10095DAF4();
        KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for CRLUSDRendering.SceneDescription.AnimationState.ActiveCodingKeys, &v50, v9, &type metadata for CRLUSDRendering.SceneDescription.AnimationState.ActiveCodingKeys, v21);
        v22 = sub_10095DB38();
        v23 = v39;
        KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for CRLUSDRendering.SceneDescription.AnimationState.PlaybackState, v24, v39, &type metadata for CRLUSDRendering.SceneDescription.AnimationState.PlaybackState, v22);
        (*(void (**)(char *, uint64_t))(v40 + 8))(v19, v23);
        v25 = swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t, __n128))(v43 + 8))(v12, v9, v25);
        v26 = 256;
        if (!v45)
          v26 = 0;
        v27 = v26 | v44;
        v28 = 0x10000;
        if (!v46)
          v28 = 0;
        v29 = 0x1000000;
        if (!v47)
          v29 = 0;
        v15 = v27 | v28 | v29 | ((unint64_t)v48 << 32);
      }
      else
      {
        v49 = 0;
        v36 = sub_10095DB7C();
        KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for CRLUSDRendering.SceneDescription.AnimationState.InactiveCodingKeys, &v49, v9, &type metadata for CRLUSDRendering.SceneDescription.AnimationState.InactiveCodingKeys, v36);
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v18);
        v38 = swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t, __n128))(v43 + 8))(v12, v9, v38);
        v15 = 2;
      }
    }
    else
    {
      v30 = type metadata accessor for DecodingError(0);
      swift_allocError(v30, &protocol witness table for DecodingError, 0, 0);
      v32 = v31;
      sub_1004B804C(&qword_1013DF800);
      v15 = (unint64_t)v12;
      *v32 = &type metadata for CRLUSDRendering.SceneDescription.AnimationState;
      v33 = KeyedDecodingContainer.codingPath.getter(v9);
      DecodingError.Context.init(codingPath:debugDescription:underlyingError:)(v33, 0xD00000000000002BLL, 0x8000000100FACD50, 0);
      v34.n128_f64[0] = (*(double (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v32, enum case for DecodingError.typeMismatch(_:), v30);
      swift_willThrow(v34);
      v35 = swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t, __n128))(v43 + 8))(v12, v9, v35);
    }
  }
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v42);
  return v15;
}

float sub_10095B018(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  float v10;
  float v11;
  _DWORD v12[2];
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;

  v2 = sub_1004B804C(&qword_1013FC128);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = a1[3];
  v7 = a1[4];
  sub_1004BB5A4(a1, v6);
  v8 = sub_10095DC04();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLUSDRendering.SceneDescription.AnimationState.PlaybackState.CodingKeys, &type metadata for CRLUSDRendering.SceneDescription.AnimationState.PlaybackState.CodingKeys, v8, v6, v7);
  v17 = 0;
  KeyedDecodingContainer.decode(_:forKey:)(&v17, v2);
  v16 = 1;
  KeyedDecodingContainer.decode(_:forKey:)(&v16, v2);
  v15 = 2;
  KeyedDecodingContainer.decode(_:forKey:)(&v15, v2);
  v14 = 3;
  v12[1] = KeyedDecodingContainer.decode(_:forKey:)(&v14, v2);
  v13 = 4;
  KeyedDecodingContainer.decode(_:forKey:)(&v13, v2);
  v11 = v10;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  return v11;
}

uint64_t sub_10095B21C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  __n128 v28;
  __n128 v29;
  _QWORD v31[7];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;

  v37 = a2;
  v32 = sub_1004B804C(&qword_1013FC140);
  v41 = *(_QWORD *)(v32 - 8);
  __chkstk_darwin(v32);
  v40 = (char *)v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1004B804C(&qword_1013FC148);
  v5 = *(_QWORD *)(v4 - 8);
  v34 = v4;
  v35 = v5;
  __chkstk_darwin(v4);
  v39 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_1004B804C(&qword_1013FC150);
  v31[6] = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33);
  v38 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C(&qword_1013FC158);
  v31[4] = *(_QWORD *)(v8 - 8);
  v31[5] = v8;
  __chkstk_darwin(v8);
  v36 = (char *)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C(&qword_1013FC160);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1004B804C(&qword_1013FC168);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = a1[3];
  v18 = a1[4];
  v42 = a1;
  sub_1004BB5A4(a1, v19);
  v20 = sub_10095DC48();
  v21 = v43;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLUSDRendering.RendererState.CodingKeys, &type metadata for CRLUSDRendering.RendererState.CodingKeys, v20, v19, v18);
  if (!v21)
  {
    v31[3] = v13;
    v31[1] = v11;
    v31[2] = v10;
    v43 = v15;
    v22 = KeyedDecodingContainer.allKeys.getter(v14);
    v23 = v14;
    if (*(_QWORD *)(v22 + 16) == 1)
      __asm { BR              X10 }
    v24 = type metadata accessor for DecodingError(0);
    swift_allocError(v24, &protocol witness table for DecodingError, 0, 0);
    v26 = v25;
    sub_1004B804C(&qword_1013DF800);
    *v26 = &type metadata for CRLUSDRendering.RendererState;
    v27 = KeyedDecodingContainer.codingPath.getter(v23);
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)(v27, 0xD00000000000002BLL, 0x8000000100FACD50, 0);
    v28.n128_f64[0] = (*(double (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v26, enum case for DecodingError.typeMismatch(_:), v24);
    swift_willThrow(v28);
    v29 = swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, __n128))(v43 + 8))(v17, v23, v29);
  }
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v42);
}

_QWORD *sub_10095B93C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  __n128 v32;
  __n128 v33;
  _QWORD v35[9];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  char *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;

  v36 = sub_1004B804C(&qword_1013FC1E8);
  v48 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin(v36);
  v47 = (char *)v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1004B804C(&qword_1013FC1F0);
  v4 = *(_QWORD *)(v3 - 8);
  v40 = v3;
  v41 = v4;
  __chkstk_darwin(v3);
  v46 = (char *)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_1004B804C(&qword_1013FC1F8);
  v35[8] = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38);
  v43 = (char *)v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_1004B804C(&qword_1013FC200);
  v37 = *(_QWORD *)(v39 - 8);
  __chkstk_darwin(v39);
  v44 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C(&qword_1013FC208);
  v9 = *(_QWORD *)(v8 - 8);
  v35[6] = v8;
  v35[7] = v9;
  __chkstk_darwin(v8);
  v42 = (char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1004B804C(&qword_1013FC210);
  v12 = *(_QWORD *)(v11 - 8);
  v35[4] = v11;
  v35[5] = v12;
  __chkstk_darwin(v11);
  v45 = (char *)v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1004B804C(&qword_1013FC218);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1004B804C(&qword_1013FC220);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)v35 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = a1[3];
  v23 = a1[4];
  v49 = a1;
  v24 = sub_1004BB5A4(a1, v22);
  v25 = sub_10095DEAC();
  v26 = v50;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLUSDRendering.RendererError.CodingKeys, &type metadata for CRLUSDRendering.RendererError.CodingKeys, v25, v22, v23);
  if (!v26)
  {
    v35[3] = v17;
    v35[1] = v15;
    v35[0] = v14;
    v50 = v19;
    v27 = KeyedDecodingContainer.allKeys.getter(v18);
    if (*(_QWORD *)(v27 + 16) == 1)
    {
      v35[2] = v18;
      __asm { BR              X10 }
    }
    v28 = type metadata accessor for DecodingError(0);
    swift_allocError(v28, &protocol witness table for DecodingError, 0, 0);
    v30 = v29;
    v24 = v21;
    sub_1004B804C(&qword_1013DF800);
    *v30 = &type metadata for CRLUSDRendering.RendererError;
    v31 = KeyedDecodingContainer.codingPath.getter(v18);
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)(v31, 0xD00000000000002BLL, 0x8000000100FACD50, 0);
    v32.n128_f64[0] = (*(double (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v28 - 8) + 104))(v30, enum case for DecodingError.typeMismatch(_:), v28);
    swift_willThrow(v32);
    v33 = swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, __n128))(v50 + 8))(v21, v18, v33);
  }
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v49);
  return v24;
}

uint64_t sub_10095C2E4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t result;
  __int128 v25;
  __int128 v26;
  char v27;

  v5 = sub_1004B804C(&qword_1013FC2B8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_10095E154();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLUSDRendering.SceneConfiguration.CodingKeys, &type metadata for CRLUSDRendering.SceneConfiguration.CodingKeys, v11, v9, v10);
  if (v2)
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  LOBYTE(v26) = 0;
  KeyedDecodingContainer.decode(_:forKey:)(&v26, v5);
  v13 = v12;
  type metadata accessor for simd_quatf(0);
  v15 = v14;
  v27 = 1;
  v16 = sub_1005034A0(&qword_1013FC2C8, 255, (uint64_t (*)(uint64_t))type metadata accessor for simd_quatf, (uint64_t)&protocol conformance descriptor for simd_quatf);
  KeyedDecodingContainer.decode<A>(_:forKey:)(v15, &v27, v5, v15, v16);
  v25 = v26;
  type metadata accessor for CGSize(0);
  v18 = v17;
  v27 = 2;
  v19 = sub_1005034A0(&qword_1013E4768, 255, (uint64_t (*)(uint64_t))type metadata accessor for CGSize, (uint64_t)&protocol conformance descriptor for CGSize);
  KeyedDecodingContainer.decode<A>(_:forKey:)(v18, &v27, v5, v18, v19);
  v20 = v26;
  v27 = 3;
  KeyedDecodingContainer.decode<A>(_:forKey:)(v18, &v27, v5, v18, v19);
  v21 = v26;
  v27 = 4;
  v22 = sub_100587A7C();
  KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for CGFloat, &v27, v5, &type metadata for CGFloat, v22);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v23 = v26;
  result = _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  *(_DWORD *)a2 = v13;
  *(_OWORD *)(a2 + 16) = v25;
  *(_OWORD *)(a2 + 32) = v20;
  *(_OWORD *)(a2 + 48) = v21;
  *(_QWORD *)(a2 + 64) = v23;
  return result;
}

void sub_10095C584(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  unint64_t v23;
  _OWORD v24[2];
  char v25;

  v5 = sub_1004B804C(&qword_1013FC2E0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1008D6BFC((uint64_t)_swiftEmptyArrayStorage);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_10095E198();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLUSDRendering.SceneDescription.CodingKeys, &type metadata for CRLUSDRendering.SceneDescription.CodingKeys, v11, v9, v10);
  if (v2)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
    swift_bridgeObjectRelease();
  }
  else
  {
    v25 = 0;
    v12 = sub_10095E1DC();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for BoundingBox, &v25, v5, &type metadata for BoundingBox, v12);
    v21 = v24[1];
    v22 = v24[0];
    v13 = sub_1004B804C(&qword_1013FC2F8);
    v25 = 1;
    v14 = sub_10095E2A8(&qword_1013FC300, (void (*)(void))sub_10095E220, (uint64_t)&protocol witness table for String, (uint64_t)&protocol conformance descriptor for <> [A : B]);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v13, &v25, v5, v13, v14);
    v15 = *(_QWORD *)&v24[0];
    LOBYTE(v24[0]) = 2;
    swift_bridgeObjectRetain(v15);
    v16 = KeyedDecodingContainer.decode(_:forKey:)(v24, v5);
    v17 = sub_1004B804C(&qword_1013FC310);
    v25 = 3;
    v18 = sub_10095E360(&qword_1013FC318, (uint64_t)&protocol witness table for String, (uint64_t)&protocol conformance descriptor for <> [A : B]);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v17, &v25, v5, v17, v18);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v19 = *(_QWORD *)&v24[0];
    swift_bridgeObjectRetain(*(_QWORD *)&v24[0]);
    swift_bridgeObjectRelease();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v20 = v21;
    *(_OWORD *)a2 = v22;
    *(_OWORD *)(a2 + 16) = v20;
    *(_QWORD *)(a2 + 32) = v15;
    *(_BYTE *)(a2 + 40) = v16 & 1;
    *(_QWORD *)(a2 + 48) = v19;
  }
}

uint64_t sub_10095C854(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;

  v3 = a1[3];
  v4 = a1[4];
  sub_1004BB5A4(a1, v3);
  dispatch thunk of Decoder.singleValueContainer()(v11, v3, v4);
  if (v1)
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  v5 = v12;
  v6 = v13;
  sub_1004BB5A4(v11, v12);
  v7 = sub_1004B804C(&qword_1013FBD28);
  v8 = sub_1004CBA30(&qword_1013FC390, &qword_1013FBD28, (uint64_t)&protocol conformance descriptor for SIMD4<A>);
  dispatch thunk of SingleValueDecodingContainer.decode<A>(_:)(&v10, v7, v7, v8, v5, v6);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v11);
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
}

uint64_t sub_10095C95C()
{
  return type metadata accessor for CRLUSDRendering.LoadReceipt(0);
}

uint64_t type metadata accessor for CRLUSDRendering.LoadReceipt(uint64_t a1)
{
  return sub_1004BD408(a1, (uint64_t *)&unk_1013FBD60, (uint64_t)&nominal type descriptor for CRLUSDRendering.LoadReceipt);
}

uint64_t sub_10095C978(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = "\b";
    v4[2] = "\b";
    result = swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for CRLUSDRendering.TaskQueue()
{
  return objc_opt_self(_TtCO8Freeform15CRLUSDRendering9TaskQueue);
}

__n128 initializeWithCopy for CRLUSDRendering.SceneConfiguration(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for CRLUSDRendering.SceneConfiguration(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 72))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for CRLUSDRendering.SceneConfiguration(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 72) = v3;
  return result;
}

ValueMetadata *type metadata accessor for CRLUSDRendering.SceneConfiguration()
{
  return &type metadata for CRLUSDRendering.SceneConfiguration;
}

uint64_t destroy for CRLUSDRendering.SceneDescription(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 32));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 48));
}

uint64_t initializeWithCopy for CRLUSDRendering.SceneDescription(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v4;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  return a1;
}

uint64_t assignWithCopy for CRLUSDRendering.SceneDescription(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 48);
  v7 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  return a1;
}

__n128 initializeWithTake for CRLUSDRendering.SceneDescription(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for CRLUSDRendering.SceneDescription(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease(v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLUSDRendering.SceneDescription(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLUSDRendering.SceneDescription(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLUSDRendering.SceneDescription()
{
  return &type metadata for CRLUSDRendering.SceneDescription;
}

void destroy for CRLUSDRendering.RendererState(uint64_t *a1)
{
  sub_100689EAC(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6]);
}

uint64_t *initializeWithCopy for CRLUSDRendering.RendererState(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  v9 = a2[6];
  sub_100689CF4(*a2, v4, v5, v6, v7, v8, v9);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  return a1;
}

uint64_t *assignWithCopy for CRLUSDRendering.RendererState(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  v9 = a2[6];
  sub_100689CF4(*a2, v4, v5, v6, v7, v8, v9);
  v10 = *a1;
  v11 = a1[1];
  v12 = a1[2];
  v13 = a1[3];
  v14 = a1[4];
  v15 = a1[5];
  v16 = a1[6];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  sub_100689EAC(v10, v11, v12, v13, v14, v15, v16);
  return a1;
}

uint64_t *assignWithTake for CRLUSDRendering.RendererState(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __int128 v11;

  v3 = *(_QWORD *)(a2 + 48);
  v4 = *a1;
  v6 = a1[1];
  v5 = a1[2];
  v7 = a1[3];
  v8 = a1[4];
  v9 = a1[5];
  v10 = a1[6];
  v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v11;
  *((_OWORD *)a1 + 2) = *(_OWORD *)(a2 + 32);
  a1[6] = v3;
  sub_100689EAC(v4, v6, v5, v7, v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLUSDRendering.RendererState(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 40) >> 1;
  if (v2 > 0x80000000)
    v3 = ~(_DWORD)v2;
  else
    v3 = -1;
  return (v3 + 1);
}

double storeEnumTagSinglePayload for CRLUSDRendering.RendererState(uint64_t a1, int a2, int a3)
{
  double result;

  if (a2 < 0)
  {
    result = 0.0;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(a1 + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      result = 0.0;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_QWORD *)(a1 + 32) = 0;
      *(_QWORD *)(a1 + 40) = 2 * -a2;
      *(_QWORD *)(a1 + 48) = 0;
      return result;
    }
    *(_BYTE *)(a1 + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_10095CEB4(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 40) >> 62;
  if (v1 <= 1)
    return v1;
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_10095CED0(uint64_t result)
{
  *(_QWORD *)(result + 40) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_10095CEE0(uint64_t result, uint64_t a2)
{
  if (a2 < 2)
  {
    *(_QWORD *)(result + 40) = *(_QWORD *)(result + 40) & 1 | (a2 << 62);
  }
  else
  {
    *(_QWORD *)result = (a2 - 2);
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 40) = xmmword_100F02BE0;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLUSDRendering.RendererState()
{
  return &type metadata for CRLUSDRendering.RendererState;
}

uint64_t *sub_10095CF2C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  __int128 v17;
  __int128 v18;
  _OWORD *v19;
  _OWORD *v20;
  __int128 v21;
  uint64_t v22;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v22);
  }
  else
  {
    v7 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = *v10;
    v12 = v10[1];
    sub_1004BE310(*v10, v12);
    *v9 = v11;
    v9[1] = v12;
    v13 = a3[6];
    v14 = a3[7];
    v15 = (char *)a1 + v13;
    v16 = (char *)a2 + v13;
    v17 = *((_OWORD *)v16 + 3);
    *((_OWORD *)v15 + 2) = *((_OWORD *)v16 + 2);
    *((_OWORD *)v15 + 3) = v17;
    *((_QWORD *)v15 + 8) = *((_QWORD *)v16 + 8);
    v18 = *((_OWORD *)v16 + 1);
    *(_OWORD *)v15 = *(_OWORD *)v16;
    *((_OWORD *)v15 + 1) = v18;
    v19 = (_OWORD *)((char *)a1 + v14);
    v20 = (_OWORD *)((char *)a2 + v14);
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
  }
  return a1;
}

uint64_t sub_10095D004(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return sub_1004BBBC8(*(_QWORD *)(a1 + *(int *)(a2 + 20)), *(_QWORD *)(a1 + *(int *)(a2 + 20) + 8));
}

uint64_t sub_10095D04C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  _OWORD *v18;
  _OWORD *v19;
  __int128 v20;

  v6 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = (uint64_t *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v10 = *v9;
  v11 = v9[1];
  sub_1004BE310(*v9, v11);
  *v8 = v10;
  v8[1] = v11;
  v12 = a3[6];
  v13 = a3[7];
  v14 = a1 + v12;
  v15 = a2 + v12;
  v16 = *(_OWORD *)(v15 + 48);
  *(_OWORD *)(v14 + 32) = *(_OWORD *)(v15 + 32);
  *(_OWORD *)(v14 + 48) = v16;
  *(_QWORD *)(v14 + 64) = *(_QWORD *)(v15 + 64);
  v17 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)v14 = *(_OWORD *)v15;
  *(_OWORD *)(v14 + 16) = v17;
  v18 = (_OWORD *)(a1 + v13);
  v19 = (_OWORD *)(a2 + v13);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  return a1;
}

uint64_t sub_10095D0F8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;

  v6 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (uint64_t *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v10 = *v9;
  v11 = v9[1];
  sub_1004BE310(*v9, v11);
  v12 = *v8;
  v13 = v8[1];
  *v8 = v10;
  v8[1] = v11;
  sub_1004BBBC8(v12, v13);
  v14 = a3[6];
  v15 = a1 + v14;
  v16 = a2 + v14;
  *(_DWORD *)v15 = *(_DWORD *)v16;
  *(_OWORD *)(v15 + 16) = *(_OWORD *)(v16 + 16);
  *(_QWORD *)(v15 + 32) = *(_QWORD *)(v16 + 32);
  *(_QWORD *)(v15 + 40) = *(_QWORD *)(v16 + 40);
  *(_QWORD *)(v15 + 48) = *(_QWORD *)(v16 + 48);
  *(_QWORD *)(v15 + 56) = *(_QWORD *)(v16 + 56);
  *(_QWORD *)(v15 + 64) = *(_QWORD *)(v16 + 64);
  v17 = a3[7];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  *v18 = *v19;
  v18[1] = v19[1];
  v18[2] = v19[2];
  v18[3] = v19[3];
  return a1;
}

uint64_t sub_10095D1E8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  __int128 v15;

  v6 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)(v8 + 64) = *(_QWORD *)(v9 + 64);
  v10 = *(_OWORD *)(v9 + 48);
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
  *(_OWORD *)(v8 + 48) = v10;
  v11 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v11;
  v12 = a3[7];
  v13 = (_OWORD *)(a1 + v12);
  v14 = (_OWORD *)(a2 + v12);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  return a1;
}

uint64_t sub_10095D278(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  _OWORD *v15;
  _OWORD *v16;
  __int128 v17;

  v6 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(_QWORD *)(a1 + v7);
  v9 = *(_QWORD *)(a1 + v7 + 8);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  sub_1004BBBC8(v8, v9);
  v10 = a3[6];
  v11 = a3[7];
  v12 = a1 + v10;
  v13 = a2 + v10;
  *(_DWORD *)v12 = *(_DWORD *)v13;
  v14 = *(_OWORD *)(v13 + 32);
  *(_OWORD *)(v12 + 16) = *(_OWORD *)(v13 + 16);
  *(_OWORD *)(v12 + 32) = v14;
  *(_OWORD *)(v12 + 48) = *(_OWORD *)(v13 + 48);
  *(_QWORD *)(v12 + 64) = *(_QWORD *)(v13 + 64);
  v15 = (_OWORD *)(a1 + v11);
  v16 = (_OWORD *)(a2 + v11);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  return a1;
}

uint64_t sub_10095D31C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10095D328);
}

uint64_t sub_10095D328(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8) >> 60;
  if (((4 * (_DWORD)v9) & 0xC) != 0)
    return 16 - ((4 * (_DWORD)v9) & 0xC | (v9 >> 2));
  else
    return 0;
}

uint64_t sub_10095D3B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10095D3C4);
}

uint64_t sub_10095D3C4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD *v10;

  result = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  v10 = (_QWORD *)(a1 + *(int *)(a4 + 20));
  *v10 = 0;
  v10[1] = (unint64_t)(((-(int)a2 >> 2) & 3) - 4 * (_DWORD)a2) << 60;
  return result;
}

uint64_t type metadata accessor for CRLUSDRendering.SceneRequest(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1013FBF88, (uint64_t)&nominal type descriptor for CRLUSDRendering.SceneRequest);
}

uint64_t sub_10095D460(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  result = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100F1B1D0;
    v4[2] = &unk_100F1B1E8;
    v4[3] = &unk_100F1B200;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLUSDRendering()
{
  return &type metadata for CRLUSDRendering;
}

ValueMetadata *_s10CodingKeysOMa()
{
  return &_s10CodingKeysON;
}

unint64_t sub_10095D50C()
{
  unint64_t result;

  result = qword_1013FBFC8;
  if (!qword_1013FBFC8)
  {
    result = swift_getWitnessTable(&unk_100F1B2FC, &_s10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1013FBFC8);
  }
  return result;
}

unint64_t sub_10095D558()
{
  unint64_t result;

  result = qword_1013FBFD0;
  if (!qword_1013FBFD0)
  {
    result = swift_getWitnessTable(&unk_100F1B46C, &type metadata for CRLUSDRendering.SceneDescription);
    atomic_store(result, (unint64_t *)&qword_1013FBFD0);
  }
  return result;
}

unint64_t sub_10095D5A0()
{
  unint64_t result;

  result = qword_1013FBFD8;
  if (!qword_1013FBFD8)
  {
    result = swift_getWitnessTable(&unk_100F1B524, &type metadata for CRLUSDRendering.SceneConfiguration);
    atomic_store(result, (unint64_t *)&qword_1013FBFD8);
  }
  return result;
}

unint64_t sub_10095D5E8()
{
  unint64_t result;

  result = qword_1013FBFE0;
  if (!qword_1013FBFE0)
  {
    result = swift_getWitnessTable(&unk_100F1B66C, &type metadata for CRLUSDRendering.RendererError);
    atomic_store(result, (unint64_t *)&qword_1013FBFE0);
  }
  return result;
}

unint64_t sub_10095D630()
{
  unint64_t result;

  result = qword_1013FBFE8;
  if (!qword_1013FBFE8)
  {
    result = swift_getWitnessTable(&unk_100F1B324, &type metadata for CRLUSDRendering.RendererState);
    atomic_store(result, (unint64_t *)&qword_1013FBFE8);
  }
  return result;
}

unint64_t sub_10095D678()
{
  unint64_t result;

  result = qword_1013FBFF0;
  if (!qword_1013FBFF0)
  {
    result = swift_getWitnessTable(L"=7ᗜ!", &type metadata for CRLUSDRendering.SceneDescription.AnimationState.PlaybackState);
    atomic_store(result, (unint64_t *)&qword_1013FBFF0);
  }
  return result;
}

unint64_t sub_10095D6C0()
{
  unint64_t result;

  result = qword_1013FBFF8;
  if (!qword_1013FBFF8)
  {
    result = swift_getWitnessTable(&unk_100F1B7DC, &type metadata for CRLUSDRendering.SceneDescription.AnimationState);
    atomic_store(result, (unint64_t *)&qword_1013FBFF8);
  }
  return result;
}

unint64_t sub_10095D708()
{
  unint64_t result;

  result = qword_1013FC000;
  if (!qword_1013FC000)
  {
    result = swift_getWitnessTable(&unk_100F1B894, &type metadata for CRLUSDRendering.SceneAction);
    atomic_store(result, (unint64_t *)&qword_1013FC000);
  }
  return result;
}

unint64_t sub_10095D750()
{
  unint64_t result;

  result = qword_1013FC008;
  if (!qword_1013FC008)
  {
    result = swift_getWitnessTable(&unk_100F1B234, &_s10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1013FC008);
  }
  return result;
}

unint64_t sub_10095D798()
{
  unint64_t result;

  result = qword_1013FC010;
  if (!qword_1013FC010)
  {
    result = swift_getWitnessTable(&unk_100F1B25C, &_s10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1013FC010);
  }
  return result;
}

unint64_t sub_10095D7DC()
{
  unint64_t result;

  result = qword_1013FC018;
  if (!qword_1013FC018)
  {
    result = swift_getWitnessTable(&unk_100F1B604, &type metadata for CRLUSDRendering.RendererError);
    atomic_store(result, (unint64_t *)&qword_1013FC018);
  }
  return result;
}

uint64_t *sub_10095D820(uint64_t *a1)
{
  sub_100689EAC(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6]);
  return a1;
}

__n128 *sub_10095D854(__n128 *a1, __n128 *a2)
{
  initializeWithTake for CRLColorModelMonochromeData(a2, a1);
  return a2;
}

unint64_t sub_10095D890()
{
  unint64_t result;

  result = qword_1013FC030;
  if (!qword_1013FC030)
  {
    result = swift_getWitnessTable(&unk_100F1D480, &type metadata for CRLUSDRendering.SceneRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC030);
  }
  return result;
}

uint64_t sub_10095D8D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLUSDRendering.SceneRequest(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_10095D918()
{
  unint64_t result;

  result = qword_1013FC070;
  if (!qword_1013FC070)
  {
    result = swift_getWitnessTable(&unk_100F1D430, &type metadata for CRLUSDRendering.SceneAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC070);
  }
  return result;
}

unint64_t sub_10095D95C()
{
  unint64_t result;

  result = qword_1013FC078;
  if (!qword_1013FC078)
  {
    result = swift_getWitnessTable(&unk_100F1D3E0, &type metadata for CRLUSDRendering.SceneAction.StopAnimationsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC078);
  }
  return result;
}

unint64_t sub_10095D9A0()
{
  unint64_t result;

  result = qword_1013FC080;
  if (!qword_1013FC080)
  {
    result = swift_getWitnessTable(&unk_100F1D390, &type metadata for CRLUSDRendering.SceneAction.ResetAnimationsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC080);
  }
  return result;
}

unint64_t sub_10095D9E4()
{
  unint64_t result;

  result = qword_1013FC088;
  if (!qword_1013FC088)
  {
    result = swift_getWitnessTable(&unk_100F1D340, &type metadata for CRLUSDRendering.SceneAction.ResumeAnimationsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC088);
  }
  return result;
}

unint64_t sub_10095DA28()
{
  unint64_t result;

  result = qword_1013FC090;
  if (!qword_1013FC090)
  {
    result = swift_getWitnessTable(&unk_100F1D2F0, &type metadata for CRLUSDRendering.SceneAction.PauseAnimationsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC090);
  }
  return result;
}

unint64_t sub_10095DA6C()
{
  unint64_t result;

  result = qword_1013FC098;
  if (!qword_1013FC098)
  {
    result = swift_getWitnessTable(&unk_100F1D2A0, &type metadata for CRLUSDRendering.SceneAction.PlayAnimationsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC098);
  }
  return result;
}

unint64_t sub_10095DAB0()
{
  unint64_t result;

  result = qword_1013FC0E8;
  if (!qword_1013FC0E8)
  {
    result = swift_getWitnessTable(&unk_100F1D250, &type metadata for CRLUSDRendering.SceneDescription.AnimationState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC0E8);
  }
  return result;
}

unint64_t sub_10095DAF4()
{
  unint64_t result;

  result = qword_1013FC0F0;
  if (!qword_1013FC0F0)
  {
    result = swift_getWitnessTable(&unk_100F1D200, &type metadata for CRLUSDRendering.SceneDescription.AnimationState.ActiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC0F0);
  }
  return result;
}

unint64_t sub_10095DB38()
{
  unint64_t result;

  result = qword_1013FC0F8;
  if (!qword_1013FC0F8)
  {
    result = swift_getWitnessTable(&unk_100F1B774, &type metadata for CRLUSDRendering.SceneDescription.AnimationState.PlaybackState);
    atomic_store(result, (unint64_t *)&qword_1013FC0F8);
  }
  return result;
}

unint64_t sub_10095DB7C()
{
  unint64_t result;

  result = qword_1013FC100;
  if (!qword_1013FC100)
  {
    result = swift_getWitnessTable(&unk_100F1D1B0, &type metadata for CRLUSDRendering.SceneDescription.AnimationState.InactiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC100);
  }
  return result;
}

unint64_t sub_10095DBC0()
{
  unint64_t result;

  result = qword_1013FC120;
  if (!qword_1013FC120)
  {
    result = swift_getWitnessTable(&unk_100F1B74C, &type metadata for CRLUSDRendering.SceneDescription.AnimationState.PlaybackState);
    atomic_store(result, (unint64_t *)&qword_1013FC120);
  }
  return result;
}

unint64_t sub_10095DC04()
{
  unint64_t result;

  result = qword_1013FC130;
  if (!qword_1013FC130)
  {
    result = swift_getWitnessTable(&unk_100F1D160, &type metadata for CRLUSDRendering.SceneDescription.AnimationState.PlaybackState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC130);
  }
  return result;
}

unint64_t sub_10095DC48()
{
  unint64_t result;

  result = qword_1013FC170;
  if (!qword_1013FC170)
  {
    result = swift_getWitnessTable(&unk_100F1D110, &type metadata for CRLUSDRendering.RendererState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC170);
  }
  return result;
}

unint64_t sub_10095DC8C()
{
  unint64_t result;

  result = qword_1013FC178;
  if (!qword_1013FC178)
  {
    result = swift_getWitnessTable(&unk_100F1D0C0, &type metadata for CRLUSDRendering.RendererState.ErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC178);
  }
  return result;
}

unint64_t sub_10095DCD0()
{
  unint64_t result;

  result = qword_1013FC180;
  if (!qword_1013FC180)
  {
    result = swift_getWitnessTable(&unk_100F1D070, &type metadata for CRLUSDRendering.RendererState.RenderingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC180);
  }
  return result;
}

unint64_t sub_10095DD14()
{
  unint64_t result;

  result = qword_1013FC188;
  if (!qword_1013FC188)
  {
    result = swift_getWitnessTable(&unk_100F1B4BC, &type metadata for CRLUSDRendering.SceneDescription);
    atomic_store(result, (unint64_t *)&qword_1013FC188);
  }
  return result;
}

unint64_t sub_10095DD58()
{
  unint64_t result;

  result = qword_1013FC190;
  if (!qword_1013FC190)
  {
    result = swift_getWitnessTable(&unk_100F1D020, &type metadata for CRLUSDRendering.RendererState.LoadingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC190);
  }
  return result;
}

unint64_t sub_10095DD9C()
{
  unint64_t result;

  result = qword_1013FC198;
  if (!qword_1013FC198)
  {
    result = swift_getWitnessTable(&unk_100F1CFD0, &type metadata for CRLUSDRendering.RendererState.RequestedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC198);
  }
  return result;
}

unint64_t sub_10095DDE0()
{
  unint64_t result;

  result = qword_1013FC1A0;
  if (!qword_1013FC1A0)
  {
    result = swift_getWitnessTable(&unk_100F1CF80, &type metadata for CRLUSDRendering.RendererState.DisabledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC1A0);
  }
  return result;
}

unint64_t sub_10095DE24()
{
  unint64_t result;

  result = qword_1013FC1D8;
  if (!qword_1013FC1D8)
  {
    result = swift_getWitnessTable(&unk_100F1B5DC, &type metadata for CRLUSDRendering.RendererError);
    atomic_store(result, (unint64_t *)&qword_1013FC1D8);
  }
  return result;
}

unint64_t sub_10095DE68()
{
  unint64_t result;

  result = qword_1013FC1E0;
  if (!qword_1013FC1E0)
  {
    result = swift_getWitnessTable(&unk_100F1B494, &type metadata for CRLUSDRendering.SceneDescription);
    atomic_store(result, (unint64_t *)&qword_1013FC1E0);
  }
  return result;
}

unint64_t sub_10095DEAC()
{
  unint64_t result;

  result = qword_1013FC228;
  if (!qword_1013FC228)
  {
    result = swift_getWitnessTable(&unk_100F1CF30, &type metadata for CRLUSDRendering.RendererError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC228);
  }
  return result;
}

unint64_t sub_10095DEF0()
{
  unint64_t result;

  result = qword_1013FC230;
  if (!qword_1013FC230)
  {
    result = swift_getWitnessTable(&unk_100F1CEE0, &type metadata for CRLUSDRendering.RendererError.GenericErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC230);
  }
  return result;
}

unint64_t sub_10095DF34()
{
  unint64_t result;

  result = qword_1013FC238;
  if (!qword_1013FC238)
  {
    result = swift_getWitnessTable(&unk_100F1CE90, &type metadata for CRLUSDRendering.RendererError.ExtensionErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC238);
  }
  return result;
}

unint64_t sub_10095DF78()
{
  unint64_t result;

  result = qword_1013FC240;
  if (!qword_1013FC240)
  {
    result = swift_getWitnessTable(&unk_100F05A68, &type metadata for CRLUSDRendererExtensionShared.ExtensionError);
    atomic_store(result, (unint64_t *)&qword_1013FC240);
  }
  return result;
}

unint64_t sub_10095DFBC()
{
  unint64_t result;

  result = qword_1013FC248;
  if (!qword_1013FC248)
  {
    result = swift_getWitnessTable(&unk_100F1CE40, &type metadata for CRLUSDRendering.RendererError.TimeoutErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC248);
  }
  return result;
}

unint64_t sub_10095E000()
{
  unint64_t result;

  result = qword_1013FC250;
  if (!qword_1013FC250)
  {
    result = swift_getWitnessTable(&unk_100F1CDF0, &type metadata for CRLUSDRendering.RendererError.StateErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC250);
  }
  return result;
}

unint64_t sub_10095E044()
{
  unint64_t result;

  result = qword_1013FC258;
  if (!qword_1013FC258)
  {
    result = swift_getWitnessTable(&unk_100F1CDA0, &type metadata for CRLUSDRendering.RendererError.LoadingErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC258);
  }
  return result;
}

unint64_t sub_10095E088()
{
  unint64_t result;

  result = qword_1013FC260;
  if (!qword_1013FC260)
  {
    result = swift_getWitnessTable(&unk_100F1CD50, &type metadata for CRLUSDRendering.RendererError.UrlErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC260);
  }
  return result;
}

unint64_t sub_10095E0CC()
{
  unint64_t result;

  result = qword_1013FC268;
  if (!qword_1013FC268)
  {
    result = swift_getWitnessTable(&unk_100F1CD00, &type metadata for CRLUSDRendering.RendererError.CodingErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC268);
  }
  return result;
}

unint64_t sub_10095E110()
{
  unint64_t result;

  result = qword_1013FC2B0;
  if (!qword_1013FC2B0)
  {
    result = swift_getWitnessTable(&unk_100F05A40, &type metadata for CRLUSDRendererExtensionShared.ExtensionError);
    atomic_store(result, (unint64_t *)&qword_1013FC2B0);
  }
  return result;
}

unint64_t sub_10095E154()
{
  unint64_t result;

  result = qword_1013FC2C0;
  if (!qword_1013FC2C0)
  {
    result = swift_getWitnessTable(&unk_100F1CCB0, &type metadata for CRLUSDRendering.SceneConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC2C0);
  }
  return result;
}

unint64_t sub_10095E198()
{
  unint64_t result;

  result = qword_1013FC2E8;
  if (!qword_1013FC2E8)
  {
    result = swift_getWitnessTable(&unk_100F1CC60, &type metadata for CRLUSDRendering.SceneDescription.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC2E8);
  }
  return result;
}

unint64_t sub_10095E1DC()
{
  unint64_t result;

  result = qword_1013FC2F0;
  if (!qword_1013FC2F0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for BoundingBox, &type metadata for BoundingBox);
    atomic_store(result, (unint64_t *)&qword_1013FC2F0);
  }
  return result;
}

unint64_t sub_10095E220()
{
  unint64_t result;

  result = qword_1013FC308;
  if (!qword_1013FC308)
  {
    result = swift_getWitnessTable(&unk_100F1B82C, &type metadata for CRLUSDRendering.SceneDescription.AnimationState);
    atomic_store(result, (unint64_t *)&qword_1013FC308);
  }
  return result;
}

unint64_t sub_10095E264()
{
  unint64_t result;

  result = qword_1013FC328;
  if (!qword_1013FC328)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for BoundingBox, &type metadata for BoundingBox);
    atomic_store(result, (unint64_t *)&qword_1013FC328);
  }
  return result;
}

uint64_t sub_10095E2A8(unint64_t *a1, void (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v8 = sub_1004CB6A4(&qword_1013FC2F8);
    a2();
    result = swift_getWitnessTable(a4, v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10095E31C()
{
  unint64_t result;

  result = qword_1013FC338;
  if (!qword_1013FC338)
  {
    result = swift_getWitnessTable(&unk_100F1B804, &type metadata for CRLUSDRendering.SceneDescription.AnimationState);
    atomic_store(result, (unint64_t *)&qword_1013FC338);
  }
  return result;
}

uint64_t sub_10095E360(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_1004CB6A4(&qword_1013FC310);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10095E3C0()
{
  unint64_t result;

  result = qword_1013FC348;
  if (!qword_1013FC348)
  {
    result = swift_getWitnessTable(&unk_100F1B34C, &type metadata for CRLUSDRendering.RendererError);
    atomic_store(result, (unint64_t *)&qword_1013FC348);
  }
  return result;
}

uint64_t sub_10095E404(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_10095E410(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013FC358);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10095E458()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

double sub_10095E468(uint64_t a1)
{
  uint64_t *v1;

  return sub_100957648(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_10095E478(uint64_t a1)
{
  return sub_10095E50C(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_1009577F8);
}

uint64_t sub_10095E488()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  v1 = sub_1004B804C(&qword_1013FC378);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10095E500(uint64_t a1)
{
  return sub_10095E50C(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_1009578F4);
}

uint64_t sub_10095E50C(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, uint64_t))
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_1004B804C(&qword_1013FC378) - 8) + 80);
  return a2(a1, *(_QWORD *)(v2 + 16), v2 + ((v4 + 24) & ~v4));
}

ValueMetadata *type metadata accessor for CRLUSDRendering.SceneDescription.CodingKeys()
{
  return &type metadata for CRLUSDRendering.SceneDescription.CodingKeys;
}

ValueMetadata *type metadata accessor for CRLUSDRendering.SceneConfiguration.CodingKeys()
{
  return &type metadata for CRLUSDRendering.SceneConfiguration.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for CRLUSDRendering.RendererError.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_10095E5D4 + 4 * byte_100F1AFFB[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_10095E608 + 4 * byte_100F1AFF6[v4]))();
}

uint64_t sub_10095E608(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10095E610(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10095E618);
  return result;
}

uint64_t sub_10095E624(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10095E62CLL);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_10095E630(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10095E638(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLUSDRendering.RendererError.CodingKeys()
{
  return &type metadata for CRLUSDRendering.RendererError.CodingKeys;
}

ValueMetadata *type metadata accessor for CRLUSDRendering.RendererError.CodingErrorCodingKeys()
{
  return &type metadata for CRLUSDRendering.RendererError.CodingErrorCodingKeys;
}

ValueMetadata *type metadata accessor for CRLUSDRendering.RendererError.UrlErrorCodingKeys()
{
  return &type metadata for CRLUSDRendering.RendererError.UrlErrorCodingKeys;
}

ValueMetadata *type metadata accessor for CRLUSDRendering.RendererError.LoadingErrorCodingKeys()
{
  return &type metadata for CRLUSDRendering.RendererError.LoadingErrorCodingKeys;
}

ValueMetadata *type metadata accessor for CRLUSDRendering.RendererError.StateErrorCodingKeys()
{
  return &type metadata for CRLUSDRendering.RendererError.StateErrorCodingKeys;
}

ValueMetadata *type metadata accessor for CRLUSDRendering.RendererError.TimeoutErrorCodingKeys()
{
  return &type metadata for CRLUSDRendering.RendererError.TimeoutErrorCodingKeys;
}

ValueMetadata *type metadata accessor for CRLUSDRendering.RendererError.ExtensionErrorCodingKeys()
{
  return &type metadata for CRLUSDRendering.RendererError.ExtensionErrorCodingKeys;
}

ValueMetadata *type metadata accessor for CRLUSDRendering.RendererError.GenericErrorCodingKeys()
{
  return &type metadata for CRLUSDRendering.RendererError.GenericErrorCodingKeys;
}

ValueMetadata *type metadata accessor for CRLUSDRendering.RendererState.CodingKeys()
{
  return &type metadata for CRLUSDRendering.RendererState.CodingKeys;
}

ValueMetadata *type metadata accessor for CRLUSDRendering.RendererState.DisabledCodingKeys()
{
  return &type metadata for CRLUSDRendering.RendererState.DisabledCodingKeys;
}

ValueMetadata *type metadata accessor for CRLUSDRendering.RendererState.RequestedCodingKeys()
{
  return &type metadata for CRLUSDRendering.RendererState.RequestedCodingKeys;
}

ValueMetadata *type metadata accessor for CRLUSDRendering.RendererState.LoadingCodingKeys()
{
  return &type metadata for CRLUSDRendering.RendererState.LoadingCodingKeys;
}

ValueMetadata *type metadata accessor for CRLUSDRendering.RendererState.RenderingCodingKeys()
{
  return &type metadata for CRLUSDRendering.RendererState.RenderingCodingKeys;
}

ValueMetadata *type metadata accessor for CRLUSDRendering.RendererState.ErrorCodingKeys()
{
  return &type metadata for CRLUSDRendering.RendererState.ErrorCodingKeys;
}

ValueMetadata *type metadata accessor for CRLUSDRendering.SceneDescription.AnimationState.PlaybackState.CodingKeys()
{
  return &type metadata for CRLUSDRendering.SceneDescription.AnimationState.PlaybackState.CodingKeys;
}

ValueMetadata *type metadata accessor for CRLUSDRendering.SceneDescription.AnimationState.CodingKeys()
{
  return &type metadata for CRLUSDRendering.SceneDescription.AnimationState.CodingKeys;
}

ValueMetadata *type metadata accessor for CRLUSDRendering.SceneDescription.AnimationState.InactiveCodingKeys()
{
  return &type metadata for CRLUSDRendering.SceneDescription.AnimationState.InactiveCodingKeys;
}

uint64_t _s8Freeform15CRLUSDRenderingO13RendererErrorO21CodingErrorCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_10095E798 + 4 * byte_100F1B000[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_10095E7B8 + 4 * byte_100F1B005[v4]))();
}

_BYTE *sub_10095E798(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_10095E7B8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_10095E7C0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_10095E7C8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_10095E7D0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_10095E7D8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for CRLUSDRendering.SceneDescription.AnimationState.ActiveCodingKeys()
{
  return &type metadata for CRLUSDRendering.SceneDescription.AnimationState.ActiveCodingKeys;
}

uint64_t _s8Freeform15CRLUSDRenderingO18SceneConfigurationV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_10095E840 + 4 * byte_100F1B00F[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_10095E874 + 4 * byte_100F1B00A[v4]))();
}

uint64_t sub_10095E874(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10095E87C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10095E884);
  return result;
}

uint64_t sub_10095E890(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10095E898);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_10095E89C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10095E8A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLUSDRendering.SceneAction.CodingKeys()
{
  return &type metadata for CRLUSDRendering.SceneAction.CodingKeys;
}

uint64_t _s10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10095E90C + 4 * byte_100F1B019[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10095E940 + 4 * byte_100F1B014[v4]))();
}

uint64_t sub_10095E940(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10095E948(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10095E950);
  return result;
}

uint64_t sub_10095E95C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10095E964);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10095E968(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10095E970(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLUSDRendering.SceneAction.PlayAnimationsCodingKeys()
{
  return &type metadata for CRLUSDRendering.SceneAction.PlayAnimationsCodingKeys;
}

ValueMetadata *type metadata accessor for CRLUSDRendering.SceneAction.PauseAnimationsCodingKeys()
{
  return &type metadata for CRLUSDRendering.SceneAction.PauseAnimationsCodingKeys;
}

ValueMetadata *type metadata accessor for CRLUSDRendering.SceneAction.ResumeAnimationsCodingKeys()
{
  return &type metadata for CRLUSDRendering.SceneAction.ResumeAnimationsCodingKeys;
}

ValueMetadata *type metadata accessor for CRLUSDRendering.SceneAction.ResetAnimationsCodingKeys()
{
  return &type metadata for CRLUSDRendering.SceneAction.ResetAnimationsCodingKeys;
}

ValueMetadata *type metadata accessor for CRLUSDRendering.SceneAction.StopAnimationsCodingKeys()
{
  return &type metadata for CRLUSDRendering.SceneAction.StopAnimationsCodingKeys;
}

uint64_t _s8Freeform15CRLUSDRenderingO16SceneDescriptionV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_10095EA18 + 4 * byte_100F1B023[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_10095EA4C + 4 * byte_100F1B01E[v4]))();
}

uint64_t sub_10095EA4C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10095EA54(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10095EA5CLL);
  return result;
}

uint64_t sub_10095EA68(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10095EA70);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_10095EA74(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10095EA7C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLUSDRendering.SceneRequest.CodingKeys()
{
  return &type metadata for CRLUSDRendering.SceneRequest.CodingKeys;
}

uint64_t getEnumTagSinglePayload for CRLUSDRendering.SceneAction(uint64_t a1, unsigned int a2)
{
  uint64_t result;
  unsigned int v3;
  unsigned int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFB && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 251);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 < 2)
    return 0;
  v4 = (v3 + 2147483646) & 0x7FFFFFFF;
  result = v4 - 3;
  if (v4 <= 3)
    return 0;
  return result;
}

uint64_t storeEnumTagSinglePayload for CRLUSDRendering.SceneAction(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(_QWORD *)result = 0;
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 251;
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = a2 + 5;
  }
  return result;
}

uint64_t sub_10095EB28(uint64_t a1)
{
  unsigned int v1;
  BOOL v2;
  int v3;

  v1 = *(unsigned __int8 *)(a1 + 8);
  v2 = v1 >= 2;
  v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2)
    return (v3 + 1);
  else
    return 0;
}

uint64_t sub_10095EB44(uint64_t result, unsigned int a2)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
  }
  else if (a2)
  {
    *(_BYTE *)(result + 8) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLUSDRendering.SceneAction()
{
  return &type metadata for CRLUSDRendering.SceneAction;
}

uint64_t getEnumTagSinglePayload for CRLUSDRendering.SceneDescription.AnimationState.PlaybackState(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[8])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLUSDRendering.SceneDescription.AnimationState.PlaybackState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLUSDRendering.SceneDescription.AnimationState.PlaybackState()
{
  return &type metadata for CRLUSDRendering.SceneDescription.AnimationState.PlaybackState;
}

uint64_t getEnumTagSinglePayload for CRLUSDRendering.SceneDescription.AnimationState(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && a1[8])
    return (*(_DWORD *)a1 + 254);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  if (v5 + 1 >= 2)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for CRLUSDRendering.SceneDescription.AnimationState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 2;
  }
  return result;
}

uint64_t sub_10095ECB8(unsigned __int8 *a1)
{
  unsigned int v1;
  BOOL v2;
  int v3;

  v1 = *a1;
  v2 = v1 >= 2;
  v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2)
    return (v3 + 1);
  else
    return 0;
}

_QWORD *sub_10095ECD4(_QWORD *result, unsigned int a2)
{
  if (a2 > 0xFE)
  {
    *result = a2 - 255;
  }
  else if (a2)
  {
    *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLUSDRendering.SceneDescription.AnimationState()
{
  return &type metadata for CRLUSDRendering.SceneDescription.AnimationState;
}

void destroy for CRLUSDRendering.RendererError(uint64_t a1)
{
  sub_100689EEC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s8Freeform15CRLUSDRenderingO13RendererErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_100689D34(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for CRLUSDRendering.RendererError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_100689D34(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_100689EEC(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for CRLUSDRendering.RendererError(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_100689EEC(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLUSDRendering.RendererError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFA && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 250);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 6)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLUSDRendering.RendererError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF9)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 250;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_10095EE88(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 5u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 6);
}

uint64_t sub_10095EEA0(uint64_t result, unsigned int a2)
{
  if (a2 >= 6)
  {
    *(_QWORD *)result = a2 - 6;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 6;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for CRLUSDRendering.RendererError()
{
  return &type metadata for CRLUSDRendering.RendererError;
}

unint64_t sub_10095EECC()
{
  unint64_t result;

  result = qword_1013FC398;
  if (!qword_1013FC398)
  {
    result = swift_getWitnessTable(&unk_100F1BD30, &type metadata for CRLUSDRendering.SceneRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC398);
  }
  return result;
}

unint64_t sub_10095EF14()
{
  unint64_t result;

  result = qword_1013FC3A0;
  if (!qword_1013FC3A0)
  {
    result = swift_getWitnessTable(&unk_100F1BF28, &type metadata for CRLUSDRendering.SceneAction.PlayAnimationsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC3A0);
  }
  return result;
}

unint64_t sub_10095EF5C()
{
  unint64_t result;

  result = qword_1013FC3A8;
  if (!qword_1013FC3A8)
  {
    result = swift_getWitnessTable(&unk_100F1BFE0, &type metadata for CRLUSDRendering.SceneAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC3A8);
  }
  return result;
}

unint64_t sub_10095EFA4()
{
  unint64_t result;

  result = qword_1013FC3B0;
  if (!qword_1013FC3B0)
  {
    result = swift_getWitnessTable(&unk_100F1C098, &type metadata for CRLUSDRendering.SceneDescription.AnimationState.ActiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC3B0);
  }
  return result;
}

unint64_t sub_10095EFEC()
{
  unint64_t result;

  result = qword_1013FC3B8;
  if (!qword_1013FC3B8)
  {
    result = swift_getWitnessTable(&unk_100F1C1A0, &type metadata for CRLUSDRendering.SceneDescription.AnimationState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC3B8);
  }
  return result;
}

unint64_t sub_10095F034()
{
  unint64_t result;

  result = qword_1013FC3C0;
  if (!qword_1013FC3C0)
  {
    result = swift_getWitnessTable(&unk_100F1C258, &type metadata for CRLUSDRendering.SceneDescription.AnimationState.PlaybackState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC3C0);
  }
  return result;
}

unint64_t sub_10095F07C()
{
  unint64_t result;

  result = qword_1013FC3C8;
  if (!qword_1013FC3C8)
  {
    result = swift_getWitnessTable(&unk_100F1C310, &type metadata for CRLUSDRendering.RendererState.ErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC3C8);
  }
  return result;
}

unint64_t sub_10095F0C4()
{
  unint64_t result;

  result = qword_1013FC3D0;
  if (!qword_1013FC3D0)
  {
    result = swift_getWitnessTable(&unk_100F1C3C8, &type metadata for CRLUSDRendering.RendererState.RenderingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC3D0);
  }
  return result;
}

unint64_t sub_10095F10C()
{
  unint64_t result;

  result = qword_1013FC3D8;
  if (!qword_1013FC3D8)
  {
    result = swift_getWitnessTable(&unk_100F1C570, &type metadata for CRLUSDRendering.RendererState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC3D8);
  }
  return result;
}

unint64_t sub_10095F154()
{
  unint64_t result;

  result = qword_1013FC3E0;
  if (!qword_1013FC3E0)
  {
    result = swift_getWitnessTable(&unk_100F1C628, &type metadata for CRLUSDRendering.RendererError.GenericErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC3E0);
  }
  return result;
}

unint64_t sub_10095F19C()
{
  unint64_t result;

  result = qword_1013FC3E8;
  if (!qword_1013FC3E8)
  {
    result = swift_getWitnessTable(&unk_100F1C6E0, &type metadata for CRLUSDRendering.RendererError.ExtensionErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC3E8);
  }
  return result;
}

unint64_t sub_10095F1E4()
{
  unint64_t result;

  result = qword_1013FC3F0;
  if (!qword_1013FC3F0)
  {
    result = swift_getWitnessTable(&unk_100F1C7E8, &type metadata for CRLUSDRendering.RendererError.StateErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC3F0);
  }
  return result;
}

unint64_t sub_10095F22C()
{
  unint64_t result;

  result = qword_1013FC3F8;
  if (!qword_1013FC3F8)
  {
    result = swift_getWitnessTable(&unk_100F1C8A0, &type metadata for CRLUSDRendering.RendererError.LoadingErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC3F8);
  }
  return result;
}

unint64_t sub_10095F274()
{
  unint64_t result;

  result = qword_1013FC400;
  if (!qword_1013FC400)
  {
    result = swift_getWitnessTable(&unk_100F1C958, &type metadata for CRLUSDRendering.RendererError.UrlErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC400);
  }
  return result;
}

unint64_t sub_10095F2BC()
{
  unint64_t result;

  result = qword_1013FC408;
  if (!qword_1013FC408)
  {
    result = swift_getWitnessTable(&unk_100F1CA10, &type metadata for CRLUSDRendering.RendererError.CodingErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC408);
  }
  return result;
}

unint64_t sub_10095F304()
{
  unint64_t result;

  result = qword_1013FC410;
  if (!qword_1013FC410)
  {
    result = swift_getWitnessTable(&unk_100F1CAC8, &type metadata for CRLUSDRendering.RendererError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC410);
  }
  return result;
}

unint64_t sub_10095F34C()
{
  unint64_t result;

  result = qword_1013FC418;
  if (!qword_1013FC418)
  {
    result = swift_getWitnessTable(&unk_100F1CB80, &type metadata for CRLUSDRendering.SceneConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC418);
  }
  return result;
}

unint64_t sub_10095F394()
{
  unint64_t result;

  result = qword_1013FC420;
  if (!qword_1013FC420)
  {
    result = swift_getWitnessTable(&unk_100F1CC38, &type metadata for CRLUSDRendering.SceneDescription.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC420);
  }
  return result;
}

unint64_t sub_10095F3DC()
{
  unint64_t result;

  result = qword_1013FC428;
  if (!qword_1013FC428)
  {
    result = swift_getWitnessTable(&unk_100F1CBA8, &type metadata for CRLUSDRendering.SceneDescription.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC428);
  }
  return result;
}

unint64_t sub_10095F424()
{
  unint64_t result;

  result = qword_1013FC430;
  if (!qword_1013FC430)
  {
    result = swift_getWitnessTable(&unk_100F1CBD0, &type metadata for CRLUSDRendering.SceneDescription.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC430);
  }
  return result;
}

unint64_t sub_10095F46C()
{
  unint64_t result;

  result = qword_1013FC438;
  if (!qword_1013FC438)
  {
    result = swift_getWitnessTable(&unk_100F1CAF0, &type metadata for CRLUSDRendering.SceneConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC438);
  }
  return result;
}

unint64_t sub_10095F4B4()
{
  unint64_t result;

  result = qword_1013FC440;
  if (!qword_1013FC440)
  {
    result = swift_getWitnessTable(&unk_100F1CB18, &type metadata for CRLUSDRendering.SceneConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC440);
  }
  return result;
}

unint64_t sub_10095F4FC()
{
  unint64_t result;

  result = qword_1013FC448;
  if (!qword_1013FC448)
  {
    result = swift_getWitnessTable(&unk_100F1C980, &type metadata for CRLUSDRendering.RendererError.CodingErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC448);
  }
  return result;
}

unint64_t sub_10095F544()
{
  unint64_t result;

  result = qword_1013FC450;
  if (!qword_1013FC450)
  {
    result = swift_getWitnessTable(&unk_100F1C9A8, &type metadata for CRLUSDRendering.RendererError.CodingErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC450);
  }
  return result;
}

unint64_t sub_10095F58C()
{
  unint64_t result;

  result = qword_1013FC458;
  if (!qword_1013FC458)
  {
    result = swift_getWitnessTable(&unk_100F1C8C8, &type metadata for CRLUSDRendering.RendererError.UrlErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC458);
  }
  return result;
}

unint64_t sub_10095F5D4()
{
  unint64_t result;

  result = qword_1013FC460;
  if (!qword_1013FC460)
  {
    result = swift_getWitnessTable(&unk_100F1C8F0, &type metadata for CRLUSDRendering.RendererError.UrlErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC460);
  }
  return result;
}

unint64_t sub_10095F61C()
{
  unint64_t result;

  result = qword_1013FC468;
  if (!qword_1013FC468)
  {
    result = swift_getWitnessTable(&unk_100F1C810, &type metadata for CRLUSDRendering.RendererError.LoadingErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC468);
  }
  return result;
}

unint64_t sub_10095F664()
{
  unint64_t result;

  result = qword_1013FC470;
  if (!qword_1013FC470)
  {
    result = swift_getWitnessTable(&unk_100F1C838, &type metadata for CRLUSDRendering.RendererError.LoadingErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC470);
  }
  return result;
}

unint64_t sub_10095F6AC()
{
  unint64_t result;

  result = qword_1013FC478;
  if (!qword_1013FC478)
  {
    result = swift_getWitnessTable(&unk_100F1C758, &type metadata for CRLUSDRendering.RendererError.StateErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC478);
  }
  return result;
}

unint64_t sub_10095F6F4()
{
  unint64_t result;

  result = qword_1013FC480;
  if (!qword_1013FC480)
  {
    result = swift_getWitnessTable(&unk_100F1C780, &type metadata for CRLUSDRendering.RendererError.StateErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC480);
  }
  return result;
}

unint64_t sub_10095F73C()
{
  unint64_t result;

  result = qword_1013FC488;
  if (!qword_1013FC488)
  {
    result = swift_getWitnessTable(&unk_100F1C708, &type metadata for CRLUSDRendering.RendererError.TimeoutErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC488);
  }
  return result;
}

unint64_t sub_10095F784()
{
  unint64_t result;

  result = qword_1013FC490;
  if (!qword_1013FC490)
  {
    result = swift_getWitnessTable(&unk_100F1C730, &type metadata for CRLUSDRendering.RendererError.TimeoutErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC490);
  }
  return result;
}

unint64_t sub_10095F7CC()
{
  unint64_t result;

  result = qword_1013FC498;
  if (!qword_1013FC498)
  {
    result = swift_getWitnessTable(&unk_100F1C650, &type metadata for CRLUSDRendering.RendererError.ExtensionErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC498);
  }
  return result;
}

unint64_t sub_10095F814()
{
  unint64_t result;

  result = qword_1013FC4A0;
  if (!qword_1013FC4A0)
  {
    result = swift_getWitnessTable(&unk_100F1C678, &type metadata for CRLUSDRendering.RendererError.ExtensionErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC4A0);
  }
  return result;
}

unint64_t sub_10095F85C()
{
  unint64_t result;

  result = qword_1013FC4A8;
  if (!qword_1013FC4A8)
  {
    result = swift_getWitnessTable(&unk_100F1C598, &type metadata for CRLUSDRendering.RendererError.GenericErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC4A8);
  }
  return result;
}

unint64_t sub_10095F8A4()
{
  unint64_t result;

  result = qword_1013FC4B0;
  if (!qword_1013FC4B0)
  {
    result = swift_getWitnessTable(&unk_100F1C5C0, &type metadata for CRLUSDRendering.RendererError.GenericErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC4B0);
  }
  return result;
}

unint64_t sub_10095F8EC()
{
  unint64_t result;

  result = qword_1013FC4B8;
  if (!qword_1013FC4B8)
  {
    result = swift_getWitnessTable(&unk_100F1CA38, &type metadata for CRLUSDRendering.RendererError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC4B8);
  }
  return result;
}

unint64_t sub_10095F934()
{
  unint64_t result;

  result = qword_1013FC4C0;
  if (!qword_1013FC4C0)
  {
    result = swift_getWitnessTable(&unk_100F1CA60, &type metadata for CRLUSDRendering.RendererError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC4C0);
  }
  return result;
}

unint64_t sub_10095F97C()
{
  unint64_t result;

  result = qword_1013FC4C8;
  if (!qword_1013FC4C8)
  {
    result = swift_getWitnessTable(&unk_100F1C490, &type metadata for CRLUSDRendering.RendererState.DisabledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC4C8);
  }
  return result;
}

unint64_t sub_10095F9C4()
{
  unint64_t result;

  result = qword_1013FC4D0;
  if (!qword_1013FC4D0)
  {
    result = swift_getWitnessTable(&unk_100F1C4B8, &type metadata for CRLUSDRendering.RendererState.DisabledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC4D0);
  }
  return result;
}

unint64_t sub_10095FA0C()
{
  unint64_t result;

  result = qword_1013FC4D8;
  if (!qword_1013FC4D8)
  {
    result = swift_getWitnessTable(&unk_100F1C440, &type metadata for CRLUSDRendering.RendererState.RequestedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC4D8);
  }
  return result;
}

unint64_t sub_10095FA54()
{
  unint64_t result;

  result = qword_1013FC4E0;
  if (!qword_1013FC4E0)
  {
    result = swift_getWitnessTable(&unk_100F1C468, &type metadata for CRLUSDRendering.RendererState.RequestedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC4E0);
  }
  return result;
}

unint64_t sub_10095FA9C()
{
  unint64_t result;

  result = qword_1013FC4E8;
  if (!qword_1013FC4E8)
  {
    result = swift_getWitnessTable(&unk_100F1C3F0, &type metadata for CRLUSDRendering.RendererState.LoadingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC4E8);
  }
  return result;
}

unint64_t sub_10095FAE4()
{
  unint64_t result;

  result = qword_1013FC4F0;
  if (!qword_1013FC4F0)
  {
    result = swift_getWitnessTable(&unk_100F1C418, &type metadata for CRLUSDRendering.RendererState.LoadingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC4F0);
  }
  return result;
}

unint64_t sub_10095FB2C()
{
  unint64_t result;

  result = qword_1013FC4F8;
  if (!qword_1013FC4F8)
  {
    result = swift_getWitnessTable(&unk_100F1C338, &type metadata for CRLUSDRendering.RendererState.RenderingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC4F8);
  }
  return result;
}

unint64_t sub_10095FB74()
{
  unint64_t result;

  result = qword_1013FC500;
  if (!qword_1013FC500)
  {
    result = swift_getWitnessTable(&unk_100F1C360, &type metadata for CRLUSDRendering.RendererState.RenderingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC500);
  }
  return result;
}

unint64_t sub_10095FBBC()
{
  unint64_t result;

  result = qword_1013FC508;
  if (!qword_1013FC508)
  {
    result = swift_getWitnessTable(&unk_100F1C280, &type metadata for CRLUSDRendering.RendererState.ErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC508);
  }
  return result;
}

unint64_t sub_10095FC04()
{
  unint64_t result;

  result = qword_1013FC510;
  if (!qword_1013FC510)
  {
    result = swift_getWitnessTable(&unk_100F1C2A8, &type metadata for CRLUSDRendering.RendererState.ErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC510);
  }
  return result;
}

unint64_t sub_10095FC4C()
{
  unint64_t result;

  result = qword_1013FC518;
  if (!qword_1013FC518)
  {
    result = swift_getWitnessTable(&unk_100F1C4E0, &type metadata for CRLUSDRendering.RendererState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC518);
  }
  return result;
}

unint64_t sub_10095FC94()
{
  unint64_t result;

  result = qword_1013FC520;
  if (!qword_1013FC520)
  {
    result = swift_getWitnessTable(&unk_100F1C508, &type metadata for CRLUSDRendering.RendererState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC520);
  }
  return result;
}

unint64_t sub_10095FCDC()
{
  unint64_t result;

  result = qword_1013FC528;
  if (!qword_1013FC528)
  {
    result = swift_getWitnessTable(&unk_100F1C1C8, &type metadata for CRLUSDRendering.SceneDescription.AnimationState.PlaybackState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC528);
  }
  return result;
}

unint64_t sub_10095FD24()
{
  unint64_t result;

  result = qword_1013FC530;
  if (!qword_1013FC530)
  {
    result = swift_getWitnessTable(&unk_100F1C1F0, &type metadata for CRLUSDRendering.SceneDescription.AnimationState.PlaybackState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC530);
  }
  return result;
}

unint64_t sub_10095FD6C()
{
  unint64_t result;

  result = qword_1013FC538;
  if (!qword_1013FC538)
  {
    result = swift_getWitnessTable(&unk_100F1C0C0, &type metadata for CRLUSDRendering.SceneDescription.AnimationState.InactiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC538);
  }
  return result;
}

unint64_t sub_10095FDB4()
{
  unint64_t result;

  result = qword_1013FC540;
  if (!qword_1013FC540)
  {
    result = swift_getWitnessTable(&unk_100F1C0E8, &type metadata for CRLUSDRendering.SceneDescription.AnimationState.InactiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC540);
  }
  return result;
}

unint64_t sub_10095FDFC()
{
  unint64_t result;

  result = qword_1013FC548;
  if (!qword_1013FC548)
  {
    result = swift_getWitnessTable(&unk_100F1C008, &type metadata for CRLUSDRendering.SceneDescription.AnimationState.ActiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC548);
  }
  return result;
}

unint64_t sub_10095FE44()
{
  unint64_t result;

  result = qword_1013FC550;
  if (!qword_1013FC550)
  {
    result = swift_getWitnessTable(&unk_100F1C030, &type metadata for CRLUSDRendering.SceneDescription.AnimationState.ActiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC550);
  }
  return result;
}

unint64_t sub_10095FE8C()
{
  unint64_t result;

  result = qword_1013FC558;
  if (!qword_1013FC558)
  {
    result = swift_getWitnessTable(&unk_100F1C110, &type metadata for CRLUSDRendering.SceneDescription.AnimationState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC558);
  }
  return result;
}

unint64_t sub_10095FED4()
{
  unint64_t result;

  result = qword_1013FC560;
  if (!qword_1013FC560)
  {
    result = swift_getWitnessTable(&unk_100F1C138, &type metadata for CRLUSDRendering.SceneDescription.AnimationState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC560);
  }
  return result;
}

unint64_t sub_10095FF1C()
{
  unint64_t result;

  result = qword_1013FC568;
  if (!qword_1013FC568)
  {
    result = swift_getWitnessTable(&unk_100F1BE98, &type metadata for CRLUSDRendering.SceneAction.PlayAnimationsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC568);
  }
  return result;
}

unint64_t sub_10095FF64()
{
  unint64_t result;

  result = qword_1013FC570;
  if (!qword_1013FC570)
  {
    result = swift_getWitnessTable(&unk_100F1BEC0, &type metadata for CRLUSDRendering.SceneAction.PlayAnimationsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC570);
  }
  return result;
}

unint64_t sub_10095FFAC()
{
  unint64_t result;

  result = qword_1013FC578;
  if (!qword_1013FC578)
  {
    result = swift_getWitnessTable(&unk_100F1BE48, &type metadata for CRLUSDRendering.SceneAction.PauseAnimationsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC578);
  }
  return result;
}

unint64_t sub_10095FFF4()
{
  unint64_t result;

  result = qword_1013FC580;
  if (!qword_1013FC580)
  {
    result = swift_getWitnessTable(&unk_100F1BE70, &type metadata for CRLUSDRendering.SceneAction.PauseAnimationsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC580);
  }
  return result;
}

unint64_t sub_10096003C()
{
  unint64_t result;

  result = qword_1013FC588;
  if (!qword_1013FC588)
  {
    result = swift_getWitnessTable(&unk_100F1BDF8, &type metadata for CRLUSDRendering.SceneAction.ResumeAnimationsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC588);
  }
  return result;
}

unint64_t sub_100960084()
{
  unint64_t result;

  result = qword_1013FC590;
  if (!qword_1013FC590)
  {
    result = swift_getWitnessTable(&unk_100F1BE20, &type metadata for CRLUSDRendering.SceneAction.ResumeAnimationsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC590);
  }
  return result;
}

unint64_t sub_1009600CC()
{
  unint64_t result;

  result = qword_1013FC598;
  if (!qword_1013FC598)
  {
    result = swift_getWitnessTable(&unk_100F1BDA8, &type metadata for CRLUSDRendering.SceneAction.ResetAnimationsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC598);
  }
  return result;
}

unint64_t sub_100960114()
{
  unint64_t result;

  result = qword_1013FC5A0;
  if (!qword_1013FC5A0)
  {
    result = swift_getWitnessTable(&unk_100F1BDD0, &type metadata for CRLUSDRendering.SceneAction.ResetAnimationsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC5A0);
  }
  return result;
}

unint64_t sub_10096015C()
{
  unint64_t result;

  result = qword_1013FC5A8;
  if (!qword_1013FC5A8)
  {
    result = swift_getWitnessTable(&unk_100F1BD58, &type metadata for CRLUSDRendering.SceneAction.StopAnimationsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC5A8);
  }
  return result;
}

unint64_t sub_1009601A4()
{
  unint64_t result;

  result = qword_1013FC5B0;
  if (!qword_1013FC5B0)
  {
    result = swift_getWitnessTable(&unk_100F1BD80, &type metadata for CRLUSDRendering.SceneAction.StopAnimationsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC5B0);
  }
  return result;
}

unint64_t sub_1009601EC()
{
  unint64_t result;

  result = qword_1013FC5B8;
  if (!qword_1013FC5B8)
  {
    result = swift_getWitnessTable(&unk_100F1BF50, &type metadata for CRLUSDRendering.SceneAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC5B8);
  }
  return result;
}

unint64_t sub_100960234()
{
  unint64_t result;

  result = qword_1013FC5C0;
  if (!qword_1013FC5C0)
  {
    result = swift_getWitnessTable(&unk_100F1BF78, &type metadata for CRLUSDRendering.SceneAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC5C0);
  }
  return result;
}

unint64_t sub_10096027C()
{
  unint64_t result;

  result = qword_1013FC5C8;
  if (!qword_1013FC5C8)
  {
    result = swift_getWitnessTable(&unk_100F1BCA0, &type metadata for CRLUSDRendering.SceneRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC5C8);
  }
  return result;
}

unint64_t sub_1009602C4()
{
  unint64_t result;

  result = qword_1013FC5D0;
  if (!qword_1013FC5D0)
  {
    result = swift_getWitnessTable(&unk_100F1BCC8, &type metadata for CRLUSDRendering.SceneRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FC5D0);
  }
  return result;
}

uint64_t type metadata accessor for CRLAnalyticsFileImported()
{
  return objc_opt_self(_TtC8Freeform24CRLAnalyticsFileImported);
}

void sub_100960328(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  NSString v5;
  char isUniquelyReferenced_nonNull_native;
  id v7;
  char v8;
  void *v9;
  NSString v10;
  Class isa;

  v4 = sub_1008D5C30((uint64_t)_swiftEmptyArrayStorage);
  v5 = String._bridgeToObjectiveC()();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v4);
  sub_100826868((uint64_t)v5, 0xD000000000000011, 0x8000000100FE3640, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithUnsignedLongLong:", a3);
  v8 = swift_isUniquelyReferenced_nonNull_native(v4);
  sub_100826868((uint64_t)v7, 0x6D657449656C6966, 0xEC000000657A6953, v8);
  swift_bridgeObjectRelease();
  v9 = (void *)objc_opt_self(CRLAnalyticsLogger);
  v10 = String._bridgeToObjectiveC()();
  sub_100511A70();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v9, "sendEventInDomain:lazily:eventPayload:", v10, 1, isa, swift_bridgeObjectRelease().n128_f64[0]);

}

void sub_1009604A8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  int64_t v7;
  void *v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  id *v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v2 = a1 + 64;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v6 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v7 = 0;
  while (v5)
  {
    v9 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    v10 = v9 | (v7 << 6);
LABEL_23:
    v14 = *(id **)(*(_QWORD *)(a1 + 56) + 8 * v10);
    v15 = objc_msgSend(v14[3], "anyObject", swift_retain(v14).n128_f64[0]);
    if (v15)
    {
      v8 = v15;
      swift_release(v14);

    }
    else
    {
      v16 = objc_msgSend(v14[4], "anyObject");
      swift_unknownObjectRelease(v16);
      if (v16)
      {
        swift_release(v14);
      }
      else
      {
        v17 = v14[2];
        swift_release(v14);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v18);
        v20 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v19 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v20 >= v19 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v19 > 1, v20 + 1, 1);
        v21 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v20, v17);
        specialized Array._endMutation()(v21);
      }
    }
  }
  v11 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v11 >= v6)
    goto LABEL_29;
  v12 = *(_QWORD *)(v2 + 8 * v11);
  ++v7;
  if (v12)
    goto LABEL_22;
  v7 = v11 + 1;
  if (v11 + 1 >= v6)
    goto LABEL_29;
  v12 = *(_QWORD *)(v2 + 8 * v7);
  if (v12)
    goto LABEL_22;
  v7 = v11 + 2;
  if (v11 + 2 >= v6)
    goto LABEL_29;
  v12 = *(_QWORD *)(v2 + 8 * v7);
  if (v12)
    goto LABEL_22;
  v7 = v11 + 3;
  if (v11 + 3 >= v6)
    goto LABEL_29;
  v12 = *(_QWORD *)(v2 + 8 * v7);
  if (v12)
  {
LABEL_22:
    v5 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v7 << 6);
    goto LABEL_23;
  }
  v13 = v11 + 4;
  if (v13 >= v6)
  {
LABEL_29:
    swift_release(a1);
    return;
  }
  v12 = *(_QWORD *)(v2 + 8 * v13);
  if (v12)
  {
    v7 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    v7 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v7 >= v6)
      goto LABEL_29;
    v12 = *(_QWORD *)(v2 + 8 * v7);
    ++v13;
    if (v12)
      goto LABEL_22;
  }
LABEL_31:
  __break(1u);
}

double *sub_1009606DC(uint64_t a1)
{
  uint64_t v2;
  double *result;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  id v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = *(_QWORD *)(a1 + 16);
  result = _swiftEmptyArrayStorage;
  if (v2)
  {
    specialized ContiguousArray.reserveCapacity(_:)(v2);
    result = (double *)sub_10051FA48(a1);
    v4 = (uint64_t)result;
    v6 = v5;
    v7 = 0;
    v8 = a1 + 64;
    v19 = v2;
    while ((v4 & 0x8000000000000000) == 0 && v4 < 1 << *(_BYTE *)(a1 + 32))
    {
      v10 = (unint64_t)v4 >> 6;
      if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v4 >> 6)) & (1 << v4)) == 0)
        goto LABEL_22;
      if (*(_DWORD *)(a1 + 36) != v6)
        goto LABEL_23;
      v20 = v7;
      v11 = *(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v4) + 16);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v11);
      v12 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(*(_QWORD *)&v12);
      v13 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(*(_QWORD *)&v12, v11);
      result = (double *)specialized ContiguousArray._endMutation()(v13);
      v9 = 1 << *(_BYTE *)(a1 + 32);
      if (v4 >= v9)
        goto LABEL_24;
      v14 = *(_QWORD *)(v8 + 8 * v10);
      if ((v14 & (1 << v4)) == 0)
        goto LABEL_25;
      if (*(_DWORD *)(a1 + 36) != v6)
        goto LABEL_26;
      v15 = v14 & (-2 << (v4 & 0x3F));
      if (v15)
      {
        v9 = __clz(__rbit64(v15)) | v4 & 0xFFFFFFFFFFFFFFC0;
      }
      else
      {
        v16 = v10 + 1;
        v17 = (unint64_t)(v9 + 63) >> 6;
        if (v10 + 1 < v17)
        {
          v18 = *(_QWORD *)(v8 + 8 * v16);
          if (v18)
          {
LABEL_18:
            v9 = __clz(__rbit64(v18)) + (v16 << 6);
          }
          else
          {
            while (v17 - 2 != v10)
            {
              v18 = *(_QWORD *)(a1 + 80 + 8 * v10++);
              if (v18)
              {
                v16 = v10 + 1;
                goto LABEL_18;
              }
            }
          }
        }
      }
      v7 = v20 + 1;
      v4 = v9;
      if (v20 + 1 == v19)
        return _swiftEmptyArrayStorage;
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
  }
  return result;
}

void sub_1009608BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _DWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  objc_class *v9;
  id v10;
  double v11;
  id v12;
  objc_super v13;
  _QWORD v14[5];

  v0 = type metadata accessor for CRLDataAssetStorage(0);
  v1 = swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  v2 = type metadata accessor for CRLUnfairLock();
  v3 = swift_allocObject(v2, 24, 7);
  v4 = (_DWORD *)swift_slowAlloc(4, -1);
  *v4 = 0;
  *(_QWORD *)(v3 + 16) = v4;
  atomic_thread_fence(memory_order_acq_rel);
  *(_QWORD *)(v1 + 48) = v3;
  v5 = v1 + OBJC_IVAR____TtC8Freeform19CRLDataAssetStorage__assetUUID;
  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform19CRLDataAssetStorage__temporaryDirectoryForAVAsset) = 0;
  v7 = v1 + OBJC_IVAR____TtC8Freeform19CRLDataAssetStorage__temporaryURLForAVAsset;
  v8 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  *(_OWORD *)(v1 + 16) = xmmword_100EF78C0;
  *(_QWORD *)(v1 + 32) = 0;
  *(_QWORD *)(v1 + 40) = 0xE000000000000000;
  v14[3] = v0;
  v14[4] = &off_101279F20;
  v14[0] = v1;
  v9 = (objc_class *)type metadata accessor for CRLAsset();
  v10 = objc_allocWithZone(v9);
  sub_1004E90B0((uint64_t)v14, (uint64_t)v10 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage);
  v13.receiver = v10;
  v13.super_class = v9;
  *(_QWORD *)&v11 = swift_retain(v1).n128_u64[0];
  v12 = objc_msgSendSuper2(&v13, "init", v11);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v14);
  swift_release(v1);
  qword_101480078 = (uint64_t)v12;
}

uint64_t sub_100960A98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  char v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  _DWORD *v17;
  uint64_t v18;
  id v19;
  void *v20;
  os_unfair_lock_s *v21;
  id v22;
  objc_class *v24;
  objc_super v25;
  uint64_t v26;
  _BYTE v27[40];

  sub_1004E90B0(v0 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage, (uint64_t)v27);
  v1 = sub_1004B804C(&qword_101400020);
  v2 = type metadata accessor for CRLAssetBackedAssetStorage(0);
  if (swift_dynamicCast(&v26, v27, v1, v2, 6))
  {
    v3 = v26;
    v4 = (char *)*(id *)(v26 + OBJC_IVAR____TtC8Freeform26CRLAssetBackedAssetStorage_store);
    swift_release(v3);
    v5 = *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManagerLock];
    os_unfair_lock_lock(*(os_unfair_lock_t *)(v5 + 16));
    v6 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager;
    v7 = *(void **)&v4[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
    if (v7)
    {
      v8 = *(id *)&v4[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
    }
    else
    {
      v24 = (objc_class *)type metadata accessor for CRLAssetManager();
      v10 = (char *)objc_allocWithZone(v24);
      v11 = &v10[OBJC_IVAR____TtC8Freeform15CRLAssetManager_store];
      swift_unknownObjectWeakInit(&v10[OBJC_IVAR____TtC8Freeform15CRLAssetManager_store]);
      v12 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_lock;
      v13 = type metadata accessor for CRLUnfairLock();
      v14 = swift_allocObject(v13, 24, 7);
      v15 = v4;
      v16 = v10;
      v17 = (_DWORD *)swift_slowAlloc(4, -1);
      *v17 = 0;
      *(_QWORD *)(v14 + 16) = v17;
      atomic_thread_fence(memory_order_acq_rel);
      *(_QWORD *)&v10[v12] = v14;
      *(_QWORD *)&v16[OBJC_IVAR____TtC8Freeform15CRLAssetManager_assets] = _swiftEmptyDictionarySingleton;
      v18 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_owners;
      *(_QWORD *)&v16[v18] = objc_msgSend((id)objc_opt_self(NSMapTable), "mapTableWithKeyOptions:valueOptions:", 517, 0);
      *(_QWORD *)&v16[OBJC_IVAR____TtC8Freeform15CRLAssetManager_garbageCollectionWorkItem] = 0;
      swift_unknownObjectWeakAssign(v11, v15);

      v25.receiver = v16;
      v25.super_class = v24;
      v19 = objc_msgSendSuper2(&v25, "init");

      v20 = *(void **)&v4[v6];
      *(_QWORD *)&v4[v6] = v19;
      v8 = v19;

      v7 = 0;
    }
    v21 = *(os_unfair_lock_s **)(v5 + 16);
    v22 = v7;
    os_unfair_lock_unlock(v21);
    v9 = sub_100962374(v0);

  }
  else
  {
    v9 = 0;
  }
  return v9 & 1;
}

uint64_t sub_100960FF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  void *v29;
  int v30;
  void *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char v39;
  uint64_t *v40;
  char *v41;
  void *v43;
  char *v44;
  char *v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  void (*v52)(char *, uint64_t);
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _BYTE v61[24];
  uint64_t v62;
  char *v63;

  v3 = type metadata accessor for UUID(0);
  v58 = *(_QWORD *)(v3 - 8);
  v59 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v55 - v7;
  v9 = sub_1004B804C((uint64_t *)&unk_1013E9BE0);
  __chkstk_darwin(v9);
  v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = type metadata accessor for CRLAssetData(0);
  v12 = *(_QWORD *)(v60 - 8);
  __chkstk_darwin(v60);
  v14 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v55 - v16;
  __chkstk_darwin(v18);
  v20 = (char *)&v55 - v19;
  __chkstk_darwin(v21);
  v23 = (char *)&v55 - v22;
  sub_1004F370C(a1, (uint64_t)v61);
  if (!v62)
  {
    v40 = &qword_1013E0230;
    v41 = v61;
LABEL_11:
    sub_1004CB800((uint64_t)v41, v40);
    goto LABEL_12;
  }
  v24 = type metadata accessor for CRLAsset();
  if ((swift_dynamicCast(&v63, v61, (char *)&type metadata for Any + 8, v24, 6) & 1) == 0)
  {
LABEL_12:
    v39 = 0;
    return v39 & 1;
  }
  v56 = v5;
  v57 = v63;
  v25 = (_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage);
  sub_1004E90B0(v1 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage, (uint64_t)v61);
  v26 = sub_1004B804C(&qword_101400020);
  v27 = type metadata accessor for CRLAssetBackedAssetStorage(0);
  if (!swift_dynamicCast(&v63, v61, v26, v27, 6))
  {
    v43 = v57;
    v44 = &v57[OBJC_IVAR____TtC8Freeform8CRLAsset_storage];
    sub_1004E90B0((uint64_t)&v57[OBJC_IVAR____TtC8Freeform8CRLAsset_storage], (uint64_t)v61);
    if (!swift_dynamicCast(&v63, v61, v26, v27, 6))
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v11, 1, 1, v60);
      sub_1004CB800((uint64_t)v11, (uint64_t *)&unk_1013E9BE0);
      v47 = v25[3];
      v48 = v25[4];
      sub_1004BB5A4(v25, v47);
      (*(void (**)(uint64_t, uint64_t))(v48 + 24))(v47, v48);
      v49 = *((_QWORD *)v44 + 3);
      v50 = *((_QWORD *)v44 + 4);
      sub_1004BB5A4(v44, v49);
      v51 = v56;
      (*(void (**)(uint64_t, uint64_t))(v50 + 24))(v49, v50);
      v39 = static UUID.== infix(_:_:)(v8);

      v52 = *(void (**)(char *, uint64_t))(v58 + 8);
      v53 = v51;
      v54 = v59;
      v52(v53, v59);
      v52(v8, v54);
      return v39 & 1;
    }
    v45 = v63;
    sub_10069BF0C((uint64_t)&v63[OBJC_IVAR____TtC8Freeform26CRLAssetBackedAssetStorage_assetData], (uint64_t)v11);
    v46 = swift_release(v45);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v12 + 56))(v11, 0, 1, v60, v46);

    v40 = (uint64_t *)&unk_1013E9BE0;
    v41 = v11;
    goto LABEL_11;
  }
  v28 = v63;
  sub_10069BF0C((uint64_t)&v63[OBJC_IVAR____TtC8Freeform26CRLAssetBackedAssetStorage_assetData], (uint64_t)v20);
  swift_release(v28);
  sub_10078DF08((uint64_t)v20, (uint64_t)v23);
  v29 = v57;
  sub_1004E90B0((uint64_t)&v57[OBJC_IVAR____TtC8Freeform8CRLAsset_storage], (uint64_t)v61);
  v30 = swift_dynamicCast(&v63, v61, v26, v27, 6);
  v31 = v29;
  if (!v30)
  {
    sub_1005CC194((uint64_t)v23);

    goto LABEL_12;
  }
  v32 = v63;
  sub_10069BF0C((uint64_t)&v63[OBJC_IVAR____TtC8Freeform26CRLAssetBackedAssetStorage_assetData], (uint64_t)v14);
  swift_release(v32);
  sub_10078DF08((uint64_t)v14, (uint64_t)v17);
  if ((static UUID.== infix(_:_:)(v23) & 1) != 0)
  {
    v33 = v60;
    v34 = *(int *)(v60 + 20);
    v35 = *(_QWORD *)&v23[v34];
    v36 = *(_QWORD *)&v23[v34 + 8];
    v37 = &v17[v34];
    v38 = *((_QWORD *)v37 + 1);
    if (v35 == *(_QWORD *)v37 && v36 == v38
      || (v39 = 0, (_stringCompareWithSmolCheck(_:_:expecting:)(v35, v36, *(_QWORD *)v37, v38, 0) & 1) != 0))
    {
      v39 = sub_100C9E04C(*(_QWORD *)&v23[*(int *)(v33 + 24)], *(_QWORD *)&v17[*(int *)(v33 + 24)]);
    }
  }
  else
  {
    v39 = 0;
  }

  sub_1005CC194((uint64_t)v17);
  sub_1005CC194((uint64_t)v23);
  return v39 & 1;
}

id sub_100961E58()
{
  return sub_1004C3370(type metadata accessor for CRLAsset);
}

uint64_t type metadata accessor for CRLAsset()
{
  return objc_opt_self(_TtC8Freeform8CRLAsset);
}

uint64_t sub_10096205C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 40) = a4;
  *(_QWORD *)(v5 + 48) = a5;
  return swift_task_switch(sub_100962074, 0, 0);
}

uint64_t sub_100962074()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  os_unfair_lock_s *v8;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetDownloadManagerLock);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v2 + 16));
  v3 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetDownloadManager;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetDownloadManager);
  if (v4)
  {
    v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetDownloadManager);
  }
  else
  {
    v6 = (char *)*(id *)(v0 + 40);
    v4 = sub_1005D2858(v6);

    v7 = *(_QWORD *)(v1 + v3);
    *(_QWORD *)(v1 + v3) = v4;
    swift_retain(v4);
    swift_release(v7);
    v5 = 0;
  }
  *(_QWORD *)(v0 + 56) = v4;
  v8 = *(os_unfair_lock_s **)(v2 + 16);
  swift_retain(v5);
  os_unfair_lock_unlock(v8);
  return swift_task_switch(sub_100962130, v4, 0);
}

uint64_t sub_100962130()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 56);
  swift_beginAccess(v1 + 272, v0 + 16, 0, 0);
  v3 = *(_QWORD *)(v1 + 272);
  v4 = swift_task_alloc(32);
  *(_QWORD *)(v4 + 16) = v2;
  swift_bridgeObjectRetain(v3);
  sub_100D6E968((void (*)(char *, __n128))sub_100964C14, v4, v3);
  swift_bridgeObjectRelease(v3);
  swift_release(v1);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100962374(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  __n128 v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  id *v15;
  __n128 v16;
  id v17;
  char v18;
  id v19;
  uint64_t v20;
  _BYTE v23[24];

  v3 = type metadata accessor for UUID(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v23[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform15CRLAssetManager_lock);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v7 + 16));
  v8 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 24);
  v9 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 32);
  sub_1004BB5A4((_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage), v8);
  (*(void (**)(uint64_t, uint64_t))(v9 + 24))(v8, v9);
  v10 = (uint64_t *)(v1 + OBJC_IVAR____TtC8Freeform15CRLAssetManager_assets);
  v11 = swift_beginAccess(v10, v23, 0, 0);
  v12 = *v10;
  if (!*(_QWORD *)(v12 + 16))
    goto LABEL_7;
  swift_bridgeObjectRetain(v12);
  v13 = sub_100842EFC((uint64_t)v6);
  if ((v14 & 1) == 0)
  {
    v11 = swift_bridgeObjectRelease();
LABEL_7:
    (*(void (**)(char *, uint64_t, __n128))(v4 + 8))(v6, v3, v11);
LABEL_8:
    v20 = 0;
    goto LABEL_9;
  }
  v15 = *(id **)(*(_QWORD *)(v12 + 56) + 8 * v13);
  swift_retain(v15);
  v16 = swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, __n128))(v4 + 8))(v6, v3, v16);
  sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
  v17 = v15[2];
  v18 = static NSObject.== infix(_:_:)(v17, a1);

  if ((v18 & 1) == 0)
  {
    swift_release(v15);
    goto LABEL_8;
  }
  v19 = objc_msgSend(v15[3], "anyObject");
  if (v19)
  {

    swift_release(v15);
    v20 = 1;
  }
  else
  {
    v20 = (uint64_t)objc_msgSend(v15[4], "anyObject");
    swift_release(v15);
    if (v20)
    {
      swift_unknownObjectRelease(v20);
      v20 = 1;
    }
  }
LABEL_9:
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v7 + 16));
  return v20;
}

void sub_100962574(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  os_unfair_lock_s *v12;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  unint64_t i;
  __n128 v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  __n128 v33;
  void *v34;
  id v35;
  void *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  uint64_t v50;
  _BYTE *v51;
  _BYTE *v52;
  id v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  __n128 v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  CKRecordID v70;
  Swift::String v71;
  _QWORD v72[2];
  _BYTE *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  int64_t v82;
  _QWORD *v83;
  int64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  char v89[24];
  char v90[24];
  unint64_t v91;

  v2 = v1;
  ObjectType = swift_getObjectType(v1);
  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v9);
  v11 = (char *)v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform15CRLAssetManager_lock);
  v12 = *(os_unfair_lock_s **)(v74 + 16);
  os_unfair_lock_lock(v12);
  v86 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_owners;
  v13 = objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC8Freeform15CRLAssetManager_owners), "objectForKeyedSubscript:", a1);
  if (!v13)
  {
    os_unfair_lock_unlock(v12);
    return;
  }
  v72[1] = ObjectType;
  v13[24] = 1;
  v91 = (unint64_t)_swiftEmptyArrayStorage;
  v79 = v11;
  v14 = v13;
  swift_beginAccess(v13 + 16, v90, 0, 0);
  v15 = sub_100DCD070(*(_QWORD *)(*((_QWORD *)v14 + 2) + 16), 0);
  specialized Array._endMutation()(v15);
  v73 = v14;
  v16 = *((_QWORD *)v14 + 2);
  v17 = v79;
  v18 = *(_QWORD *)(v16 + 56);
  v81 = v16 + 56;
  v19 = 1 << *(_BYTE *)(v16 + 32);
  v20 = -1;
  if (v19 < 64)
    v20 = ~(-1 << v19);
  v85 = v20 & v18;
  v21 = (_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform15CRLAssetManager_assets);
  swift_bridgeObjectRetain(v16);
  v83 = v21;
  swift_beginAccess(v21, v89, 0, 0);
  v22 = 0;
  v82 = (unint64_t)(v19 + 63) >> 6;
  v87 = v2;
  v75 = v16;
  v76 = v8;
  v77 = v6;
  v78 = v5;
  v23 = v85;
  if (!v85)
    goto LABEL_8;
LABEL_5:
  v85 = (v23 - 1) & v23;
  for (i = __clz(__rbit64(v23)) | (v22 << 6); ; i = __clz(__rbit64(v27)) + (v22 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v17, *(_QWORD *)(v16 + 48) + *(_QWORD *)(v6 + 72) * i, v5);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v17, 0, 1, v5);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v17, 1, v5) == 1)
      goto LABEL_72;
    v84 = v22;
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v17, v5);
    v29 = *v83;
    if (!*(_QWORD *)(*v83 + 16))
      goto LABEL_7;
    swift_bridgeObjectRetain(*v83);
    v30 = sub_100842EFC((uint64_t)v8);
    if ((v31 & 1) == 0)
    {
      v25 = swift_bridgeObjectRelease(v29);
LABEL_7:
      (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v25);
      goto LABEL_50;
    }
    v32 = *(_QWORD *)(*(_QWORD *)(v29 + 56) + 8 * v30);
    swift_retain(v32);
    v33 = swift_bridgeObjectRelease(v29);
    (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v33);
    v34 = *(void **)(v32 + 32);
    v19 = (uint64_t)&selRef_computeAlignmentFrameInRoot_;
    v35 = objc_msgSend(v34, "count");
    v80 = v32;
    v36 = *(void **)(v32 + 24);
    if ((uint64_t)v35 <= 0)
    {
      v57 = objc_msgSend(*(id *)(v32 + 24), "allObjects");
      v58 = type metadata accessor for CRLBoard(0);
      v45 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v57, v58);

      if (!((unint64_t)v45 >> 62))
      {
        v59 = swift_bridgeObjectRetain(v45);
        dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v59);
        swift_bridgeObjectRelease(v45);
LABEL_30:
        v46 = *(_QWORD *)((v45 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(v45);
        if (!v46)
          break;
        goto LABEL_31;
      }
      if (v45 < 0)
        v65 = v45;
      else
        v65 = v45 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v45);
      v66 = sub_1004B804C(&qword_1013E7918);
      v67 = _bridgeCocoaArray<A>(_:)(v65, v66);
      swift_bridgeObjectRelease_n(v45, 2);
      v45 = v67;
      if (!(v67 >> 62))
        goto LABEL_30;
    }
    else if ((uint64_t)objc_msgSend(*(id *)(v32 + 24), "count") <= 0)
    {
      v61 = objc_msgSend(v34, "allObjects");
      v62 = sub_1004B804C(&qword_1013E7918);
      v45 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v61, v62);

      if (!((unint64_t)v45 >> 62))
        goto LABEL_30;
    }
    else
    {
      v37 = objc_msgSend(v36, "allObjects");
      v38 = type metadata accessor for CRLBoard(0);
      v39 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v37, v38);

      if ((unint64_t)v39 >> 62)
      {
        if (v39 < 0)
          v63 = v39;
        else
          v63 = v39 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v39);
        v64 = sub_1004B804C(&qword_1013E7918);
        v41 = _bridgeCocoaArray<A>(_:)(v63, v64);
        swift_bridgeObjectRelease(v39);
      }
      else
      {
        v40 = swift_bridgeObjectRetain(v39);
        dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v40);
        v41 = v39;
      }
      v42 = objc_msgSend(v34, "allObjects", swift_bridgeObjectRelease(v39).n128_f64[0]);
      v43 = sub_1004B804C(&qword_1013E7918);
      v44 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v42, v43);

      v88 = v41;
      sub_10061FE94(v44);
      v2 = v87;
      v45 = v88;
      if (!(v88 >> 62))
        goto LABEL_30;
    }
    v60 = v45 < 0 ? v45 : v45 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v45);
    v46 = _CocoaArrayWrapper.endIndex.getter(v60);
    if (!v46)
      break;
LABEL_31:
    if (v46 < 1)
      goto LABEL_76;
    v47 = 0;
    v48 = 0;
    v49 = 1;
    do
    {
      if ((v45 & 0xC000000000000001) != 0)
      {
        v50 = specialized _ArrayBuffer._getElementSlowPath(_:)(v47, v45);
      }
      else
      {
        v50 = *(_QWORD *)(v45 + 8 * v47 + 32);
        swift_unknownObjectRetain(v50);
      }
      v19 = v50 == a1;
      if ((v49 & 1) != 0)
      {
        v51 = objc_msgSend(*(id *)(v2 + v86), "objectForKeyedSubscript:", v50);
        if (v51)
        {
          v52 = v51;
          v49 = v51[24];
          swift_unknownObjectRelease(v50);
          swift_release(v52);
        }
        else
        {
          swift_unknownObjectRelease(v50);
          v49 = 0;
        }
        v2 = v87;
      }
      else
      {
        swift_unknownObjectRelease(v50);
        v49 = 0;
      }
      v48 |= v19;
      ++v47;
    }
    while (v46 != v47);
    swift_bridgeObjectRelease_n(v45, 2);
    if ((v48 & 1) == 0)
      goto LABEL_85;
    v5 = v78;
    if ((v49 & 1) != 0)
    {
      v19 = v80;
      v53 = *(id *)(v80 + 16);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v53);
      v55 = *(_QWORD *)((v91 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v54 = *(_QWORD *)((v91 & 0xFFFFFFFFFFFFFF8) + 0x18);
      v6 = v77;
      if (v55 >= v54 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v54 > 1, v55 + 1, 1);
      v56 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v55, v53);
      specialized Array._endMutation()(v56);
      swift_release(v19);
    }
    else
    {
      swift_release(v80);
      v6 = v77;
    }
    v16 = v75;
    v8 = v76;
    v17 = v79;
LABEL_50:
    v22 = v84;
    v23 = v85;
    if (v85)
      goto LABEL_5;
LABEL_8:
    v26 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
LABEL_76:
      __break(1u);
LABEL_77:
      __break(1u);
LABEL_78:
      if (v19 < 0)
        v68 = v19;
      else
        v68 = v19 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v19);
      v69 = _CocoaArrayWrapper.endIndex.getter(v68);
      swift_bridgeObjectRelease(v19);
      if (v69 < 1)
      {
LABEL_82:
        swift_release(v73);
        swift_bridgeObjectRelease(v19);
        goto LABEL_83;
      }
LABEL_74:
      sub_1009632BC(v19);
      swift_bridgeObjectRelease(v19);
      swift_release(v73);
LABEL_83:
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v74 + 16));
      return;
    }
    if (v26 >= v82)
      goto LABEL_71;
    v27 = *(_QWORD *)(v81 + 8 * v26);
    ++v22;
    if (!v27)
    {
      v22 = v26 + 1;
      if (v26 + 1 >= v82)
        goto LABEL_71;
      v27 = *(_QWORD *)(v81 + 8 * v22);
      if (!v27)
      {
        v22 = v26 + 2;
        if (v26 + 2 >= v82)
          goto LABEL_71;
        v27 = *(_QWORD *)(v81 + 8 * v22);
        if (!v27)
        {
          v28 = v26 + 3;
          if (v28 >= v82)
          {
LABEL_71:
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v17, 1, 1, v5);
LABEL_72:
            swift_release(v16);
            v19 = v91;
            if (v91 >> 62)
              goto LABEL_78;
            if (*(uint64_t *)((v91 & 0xFFFFFFFFFFFFF8) + 0x10) < 1)
              goto LABEL_82;
            goto LABEL_74;
          }
          v27 = *(_QWORD *)(v81 + 8 * v28);
          if (!v27)
          {
            while (1)
            {
              v22 = v28 + 1;
              if (__OFADD__(v28, 1))
                goto LABEL_77;
              if (v22 >= v82)
                goto LABEL_71;
              v27 = *(_QWORD *)(v81 + 8 * v22);
              ++v28;
              if (v27)
                goto LABEL_21;
            }
          }
          v22 = v28;
        }
      }
    }
LABEL_21:
    v85 = (v27 - 1) & v27;
  }
  swift_bridgeObjectRelease_n(v45, 2);
LABEL_85:
  sub_100757E04(&_mh_execute_header, (uint64_t)"boardWillClose(_:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLAsset.swift", 80, 2, 346, "Bookkeeping for asset owners is wrong.", 38, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Bookkeeping for asset owners is wrong.");
  sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"boardWillClose(_:)", 18, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLAsset.swift", 80, 2u, 346, (uint64_t)"Bookkeeping for asset owners is wrong.", 38, 2u);
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v70, v71);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
  __break(1u);
}

void sub_100962E98()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[24];

  swift_getObjectType(v0);
  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform15CRLAssetManager_lock);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v1 + 16));
  v2 = (_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform15CRLAssetManager_assets);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform15CRLAssetManager_assets, v7, 0, 0);
  swift_bridgeObjectRetain(*v2);
  v4 = (uint64_t)sub_1009606DC(v3);
  swift_bridgeObjectRelease();
  if ((unint64_t)v4 >> 62)
  {
    if (v4 < 0)
      v5 = v4;
    else
      v5 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v6 = _CocoaArrayWrapper.endIndex.getter(v5);
    swift_bridgeObjectRelease();
    if (v6 >= 1)
      goto LABEL_3;
  }
  else if (*(uint64_t *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10) >= 1)
  {
LABEL_3:
    sub_1009632D8(v4);
  }
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
}

uint64_t sub_100962F94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  _QWORD *v16;

  v0 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004B8930(0, (unint64_t *)&qword_1013DE090, OS_dispatch_queue_ptr);
  static DispatchQoS.unspecified.getter(v10);
  v16 = _swiftEmptyArrayStorage;
  v11 = sub_1004B7878((unint64_t *)&qword_1013E3A70, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v12 = sub_1004B804C(&qword_1013FF6B0);
  v13 = sub_1005FC154((unint64_t *)&qword_1013E3A78, &qword_1013FF6B0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v16, v12, v13, v4, v11);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v0);
  result = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD00000000000001FLL, 0x8000000100FE3A50, v9, v6, v3, 0);
  qword_1013FC678 = result;
  return result;
}

void sub_100963160()
{
  uint64_t v0;
  uint64_t v1;
  _DWORD *v2;

  v0 = type metadata accessor for CRLUnfairLock();
  v1 = swift_allocObject(v0, 24, 7);
  v2 = (_DWORD *)swift_slowAlloc(4, -1);
  *v2 = 0;
  *(_QWORD *)(v1 + 16) = v2;
  atomic_thread_fence(memory_order_acq_rel);
  off_1013FC680 = (_UNKNOWN *)v1;
}

id sub_1009631B4()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(NSHashTable), "hashTableWithOptions:", 517);
  qword_1013FC688 = (uint64_t)result;
  return result;
}

double sub_100963208(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  uint64_t v6;
  double result;

  v6 = qword_1013DD5C8;
  swift_unknownObjectRetain(a3);
  if (v6 != -1)
    swift_once(&qword_1013DD5C8, sub_100963160);
  os_unfair_lock_lock(*((os_unfair_lock_t *)off_1013FC680 + 2));
  if (qword_1013DD5D0 != -1)
    swift_once(&qword_1013DD5D0, sub_1009631B4);
  objc_msgSend((id)qword_1013FC688, *a4, a3);
  os_unfair_lock_unlock(*((os_unfair_lock_t *)off_1013FC680 + 2));
  *(_QWORD *)&result = swift_unknownObjectRelease(a3).n128_u64[0];
  return result;
}

double sub_1009632BC(uint64_t a1)
{
  return sub_1009632F4(a1, (uint64_t)&unk_10128B8D8, (uint64_t)sub_100964EC0, (uint64_t)&unk_10128B8F0);
}

double sub_1009632D8(uint64_t a1)
{
  return sub_1009632F4(a1, (uint64_t)&unk_10128B888, (uint64_t)sub_100964E7C, (uint64_t)&unk_10128B8A0);
}

double sub_1009632F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double result;
  _QWORD v23[2];
  uint64_t v24;
  _QWORD *v25;
  _QWORD aBlock[5];
  uint64_t v27;

  v9 = type metadata accessor for DispatchWorkItemFlags(0);
  v24 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchQoS(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1013DD5C0 != -1)
    swift_once(&qword_1013DD5C0, sub_100962F94);
  v23[1] = qword_1013FC678;
  v16 = swift_allocObject(a2, 32, 7);
  *(_QWORD *)(v16 + 16) = v4;
  *(_QWORD *)(v16 + 24) = a1;
  aBlock[4] = a3;
  v27 = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1005D2FC0;
  aBlock[3] = a4;
  v17 = _Block_copy(aBlock);
  v18 = swift_bridgeObjectRetain(a1);
  static DispatchQoS.unspecified.getter(v18);
  v25 = _swiftEmptyArrayStorage;
  v19 = sub_1004B7878((unint64_t *)&qword_1013E1D20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v20 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
  v21 = sub_1005FC154((unint64_t *)&qword_1013E1D30, (uint64_t *)&unk_1013DFBF0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v25, v20, v21, v9, v19);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v15, v11, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v9);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  *(_QWORD *)&result = swift_release(v27).n128_u64[0];
  return result;
}

void sub_100963500(uint64_t a1, uint64_t a2, SEL *a3)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  Class isa;
  uint64_t v11;

  if (qword_1013DD5C8 != -1)
    swift_once(&qword_1013DD5C8, sub_100963160);
  os_unfair_lock_lock(*((os_unfair_lock_t *)off_1013FC680 + 2));
  if (qword_1013DD5D0 != -1)
    swift_once(&qword_1013DD5D0, sub_1009631B4);
  v4 = objc_msgSend((id)qword_1013FC688, "allObjects");
  v5 = sub_1004B804C(&qword_1013FC8B8);
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);

  os_unfair_lock_unlock(*((os_unfair_lock_t *)off_1013FC680 + 2));
  if (!((unint64_t)v6 >> 62))
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v6);
    if (v7)
      goto LABEL_7;
LABEL_17:
    swift_bridgeObjectRelease_n(v6, 2);
    return;
  }
  if (v6 < 0)
    v11 = v6;
  else
    v11 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v6);
  v7 = _CocoaArrayWrapper.endIndex.getter(v11);
  if (!v7)
    goto LABEL_17;
LABEL_7:
  if (v7 >= 1)
  {
    v8 = 0;
    do
    {
      if ((v6 & 0xC000000000000001) != 0)
      {
        v9 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v6);
      }
      else
      {
        v9 = *(void **)(v6 + 8 * v8 + 32);
        swift_unknownObjectRetain(v9);
      }
      ++v8;
      type metadata accessor for CRLAsset();
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v9, *a3, isa);
      swift_unknownObjectRelease(v9);

    }
    while (v7 != v8);
    goto LABEL_17;
  }
  __break(1u);
}

void sub_1009636AC(double a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  char *v29;
  void (*v30)(char *, uint64_t);
  char *v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  __n128 v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  double *v39;
  _QWORD aBlock[5];
  uint64_t v41;

  v2 = v1;
  ObjectType = swift_getObjectType(v1);
  v5 = type metadata accessor for DispatchTime(0);
  v38 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v36 - v9;
  v11 = type metadata accessor for DispatchWorkItemFlags(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_garbageCollectionWorkItem;
  v15 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform15CRLAssetManager_garbageCollectionWorkItem);
  if (!v15
    || (v16 = swift_retain(v15),
        v17 = dispatch thunk of DispatchWorkItem.isCancelled.getter(v16),
        swift_release(v15),
        (v17 & 1) != 0))
  {
    v36 = v10;
    v37 = v5;
    v18 = swift_allocObject(&unk_10128B810, 24, 7);
    swift_unknownObjectWeakInit(v18 + 16);
    v19 = swift_allocObject(&unk_10128B838, 32, 7);
    *(_QWORD *)(v19 + 16) = v18;
    *(_QWORD *)(v19 + 24) = ObjectType;
    aBlock[4] = sub_100964E5C;
    v41 = v19;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(_QWORD *)"";
    aBlock[2] = sub_1005D2FC0;
    aBlock[3] = &unk_10128B850;
    v20 = _Block_copy(aBlock);
    v39 = _swiftEmptyArrayStorage;
    v21 = sub_1004B7878((unint64_t *)&qword_1013E1D20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    swift_retain(v18);
    v22 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
    v23 = sub_1005FC154((unint64_t *)&qword_1013E1D30, (uint64_t *)&unk_1013DFBF0);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v39, v22, v23, v11, v21);
    v24 = type metadata accessor for DispatchWorkItem(0);
    swift_allocObject(v24, *(unsigned int *)(v24 + 48), *(unsigned __int16 *)(v24 + 52));
    v25 = DispatchWorkItem.init(flags:block:)(v13, v20);
    v26 = v41;
    swift_release(v18);
    swift_release(v26);
    v27 = *(_QWORD *)(v2 + v14);
    *(_QWORD *)(v2 + v14) = v25;
    v28 = swift_release(v27);
    if (qword_1013DD5C0 != -1)
      swift_once(&qword_1013DD5C0, sub_100962F94);
    static DispatchTime.now()(v28);
    v29 = v36;
    + infix(_:_:)(v7, a1);
    v30 = *(void (**)(char *, uint64_t))(v38 + 8);
    v31 = v7;
    v32 = v37;
    v30(v31, v37);
    v33 = *(_QWORD *)(v2 + v14);
    if (v33)
    {
      v34 = swift_retain(v33);
      OS_dispatch_queue.asyncAfter(deadline:execute:)(v29, v33, v34);
      v35 = swift_release(v33);
      ((void (*)(char *, uint64_t, __n128))v30)(v29, v32, v35);
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1009639A0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t Strong;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(unint64_t, uint64_t);
  uint64_t v18;
  char *v19;
  void *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  Class isa;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  char *v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE v47[32];
  char v48[24];
  char v49[24];

  v2 = type metadata accessor for UUID(0);
  v45 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v49, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v6 = Strong;
    v7 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_lock;
    os_unfair_lock_lock(*(os_unfair_lock_t *)(*(_QWORD *)(Strong + OBJC_IVAR____TtC8Freeform15CRLAssetManager_lock)
                                            + 16));
    v8 = *(_QWORD *)(v6 + OBJC_IVAR____TtC8Freeform15CRLAssetManager_garbageCollectionWorkItem);
    *(_QWORD *)(v6 + OBJC_IVAR____TtC8Freeform15CRLAssetManager_garbageCollectionWorkItem) = 0;
    swift_release(v8);
    v9 = (_QWORD *)(v6 + OBJC_IVAR____TtC8Freeform15CRLAssetManager_assets);
    swift_beginAccess(v6 + OBJC_IVAR____TtC8Freeform15CRLAssetManager_assets, v48, 0, 0);
    v10 = (char *)*v9;
    swift_bridgeObjectRetain(*v9);
    sub_1009604A8(v11);
    v13 = v12;
    swift_bridgeObjectRelease();
    v40 = v7;
    v41 = (char *)v6;
    v39 = (unint64_t)v13 >> 62;
    if ((unint64_t)v13 >> 62)
    {
      if (v13 < 0)
        v10 = (char *)v13;
      else
        v10 = (char *)(v13 & 0xFFFFFFFFFFFFFF8);
      swift_bridgeObjectRetain(v13);
      v14 = _CocoaArrayWrapper.endIndex.getter(v10);
      if (!v14)
        goto LABEL_19;
    }
    else
    {
      v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v13);
      if (!v14)
        goto LABEL_19;
    }
    if (v14 < 1)
    {
      __break(1u);
      goto LABEL_40;
    }
    v15 = 0;
    v42 = v13 & 0xC000000000000001;
    v43 = v14;
    v44 = v13;
    do
    {
      if (v42)
        v19 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v15, v13);
      else
        v19 = (char *)*(id *)(v13 + 8 * v15 + 32);
      v20 = v19;
      v21 = &v19[OBJC_IVAR____TtC8Freeform8CRLAsset_storage];
      v23 = *((_QWORD *)v21 + 3);
      v22 = *((_QWORD *)v21 + 4);
      sub_1004BB5A4(v21, v23);
      (*(void (**)(uint64_t, uint64_t))(v22 + 24))(v23, v22);
      swift_beginAccess(v9, v47, 33, 0);
      swift_bridgeObjectRetain(*v9);
      v24 = sub_100842EFC((uint64_t)v4);
      LOBYTE(v22) = v25;
      swift_bridgeObjectRelease();
      if ((v22 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v9);
        v27 = *v9;
        v46 = *v9;
        *v9 = 0x8000000000000000;
        if (!isUniquelyReferenced_nonNull_native)
        {
          sub_10082D708();
          v27 = v46;
        }
        v17 = *(void (**)(unint64_t, uint64_t))(v45 + 8);
        v18 = v2;
        v17(*(_QWORD *)(v27 + 48) + *(_QWORD *)(v45 + 72) * v24, v2);
        v28 = v46;
        v16 = *(_QWORD *)(*(_QWORD *)(v46 + 56) + 8 * v24);
        sub_10051A11C(v24, v46);
        *v9 = v28;
        swift_bridgeObjectRelease();
      }
      else
      {
        v16 = 0;
        v17 = *(void (**)(unint64_t, uint64_t))(v45 + 8);
        v18 = v2;
      }
      ++v15;
      v17((unint64_t)v4, v18);
      swift_endAccess(v47);

      swift_release(v16);
      v13 = v44;
    }
    while (v43 != v15);
LABEL_19:
    swift_bridgeObjectRelease();
    v10 = v41;
    if (*(_QWORD *)(*v9 + 16))
      sub_1009636AC(3600.0);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(_QWORD *)&v10[v40] + 16));
    if (v39)
    {
      if (v13 < 0)
        v29 = v13;
      else
        v29 = v13 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v13);
      v30 = _CocoaArrayWrapper.endIndex.getter(v29);
      swift_bridgeObjectRelease();
      if (v30 < 1)
        goto LABEL_23;
    }
    else if (*(uint64_t *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10) < 1)
    {
LABEL_23:

LABEL_46:
      swift_bridgeObjectRelease();
      return;
    }
    if (qword_1013DD5C8 == -1)
    {
LABEL_29:
      os_unfair_lock_lock(*((os_unfair_lock_t *)off_1013FC680 + 2));
      if (qword_1013DD5D0 != -1)
        swift_once(&qword_1013DD5D0, sub_1009631B4);
      v31 = objc_msgSend((id)qword_1013FC688, "allObjects", v39);
      v32 = sub_1004B804C(&qword_1013FC8B8);
      v33 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v31, v32);

      os_unfair_lock_unlock(*((os_unfair_lock_t *)off_1013FC680 + 2));
      if ((unint64_t)v33 >> 62)
      {
        if (v33 < 0)
          v38 = v33;
        else
          v38 = v33 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v33);
        v34 = _CocoaArrayWrapper.endIndex.getter(v38);
        if (v34)
          goto LABEL_33;
      }
      else
      {
        v34 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(v33);
        if (v34)
        {
LABEL_33:
          if (v34 < 1)
          {
            __break(1u);
            return;
          }
          v35 = 0;
          do
          {
            if ((v33 & 0xC000000000000001) != 0)
            {
              v36 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v35, v33);
            }
            else
            {
              v36 = *(void **)(v33 + 8 * v35 + 32);
              swift_unknownObjectRetain(v36);
            }
            ++v35;
            type metadata accessor for CRLAsset();
            isa = Array._bridgeToObjectiveC()().super.isa;
            objc_msgSend(v36, "willCullAssets:", isa);
            swift_unknownObjectRelease(v36);

          }
          while (v34 != v35);
        }
      }

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_46;
    }
LABEL_40:
    swift_once(&qword_1013DD5C8, sub_100963160);
    goto LABEL_29;
  }
}

uint64_t sub_100963E74()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocClassInstance(v0, 25, 7);
}

id sub_100963EC4()
{
  return sub_1004C3370(type metadata accessor for CRLAssetManager);
}

uint64_t type metadata accessor for CRLAssetManager()
{
  return objc_opt_self(_TtC8Freeform15CRLAssetManager);
}

uint64_t type metadata accessor for CRLAssetManager.AssetInfo()
{
  return objc_opt_self(_TtCC8Freeform15CRLAssetManagerP33_1A782DA2ACC64C8B7F1C22F93906A4349AssetInfo);
}

uint64_t type metadata accessor for CRLAssetManager.OwnerInfo()
{
  return objc_opt_self(_TtCC8Freeform15CRLAssetManagerP33_1A782DA2ACC64C8B7F1C22F93906A4349OwnerInfo);
}

id sub_100963F98(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t, __n128);
  void *Strong;
  id result;
  void *v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t inited;
  unint64_t v24;
  double v25;
  char *v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  void (*v33)(char *, uint64_t, uint64_t, __n128);
  uint64_t v34;
  void *v35;
  id v36;
  char v37;
  char *v38;
  char *v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  char *v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  void *v52;
  id v53;
  char v54;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t, uint64_t, __n128);
  _QWORD *v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  id v70;
  id v71;
  uint64_t v72;
  void *v73;
  id v74;
  id v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  void *v80;
  id v81;
  __n128 v82;
  uint64_t v83;
  char isUniquelyReferenced_nonNull_native;
  __n128 v85;
  void *v86;
  uint64_t v87;
  id v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  __n128 v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  double v96;
  void *v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  __n128 v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  void (*v110)(uint64_t, uint64_t);
  uint64_t v111;
  void *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  void (*v117)(uint64_t, uint64_t, uint64_t);
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  id v123;
  uint64_t v124;
  char *v125;
  __n128 v126;
  id v127;
  __int128 v128;
  uint64_t v129;
  char *v130;
  char *v131;
  unint64_t v132;
  id v133;
  void (*v134)(char *, uint64_t, uint64_t, __n128);
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  _QWORD v147[3];
  uint64_t v148;
  _BYTE v149[24];
  char v150[24];
  char v151[120];

  v142 = a3;
  v144 = a2;
  v5 = type metadata accessor for CRLAssetData(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v128 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v140 = type metadata accessor for UUID(0);
  v143 = *(_QWORD *)(v140 - 8);
  __chkstk_darwin(v140);
  v9 = (char *)&v128 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v139 = (char *)&v128 - v11;
  __chkstk_darwin(v12);
  v141 = (char *)&v128 - v13;
  v14 = *(_QWORD *)(a3 + OBJC_IVAR____TtC8Freeform15CRLAssetManager_lock);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v14 + 16));
  v15 = (void (*)(char *, uint64_t, uint64_t, __n128))(a3 + OBJC_IVAR____TtC8Freeform15CRLAssetManager_store);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a3 + OBJC_IVAR____TtC8Freeform15CRLAssetManager_store);

  v134 = v15;
  v135 = v14;
  v130 = v9;
  v131 = v7;
  v138 = a1;
  if (Strong)
  {
    result = (id)swift_unknownObjectWeakLoadStrong(v15);
    if (!result)
    {
      __break(1u);
      return result;
    }
    v18 = result;
    v19 = objc_msgSend(result, "description");
    v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
    v22 = v21;

  }
  else
  {
    v22 = 0xE300000000000000;
    v20 = 7104878;
  }
  v136 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v136, v151);
  v128 = xmmword_100EF5A10;
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v24 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v24;
  v129 = v20;
  *(_QWORD *)(inited + 32) = v20;
  *(_QWORD *)(inited + 40) = v22;
  v132 = v22;
  *(_QWORD *)&v25 = swift_bridgeObjectRetain(v22).n128_u64[0];
  v26 = v144;
  v27 = objc_msgSend(v144, "store", v25);
  v28 = objc_msgSend(v27, "description");
  v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
  v31 = v30;

  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v24;
  v137 = v24;
  *(_QWORD *)(inited + 72) = v29;
  *(_QWORD *)(inited + 80) = v31;
  v32 = objc_msgSend(v26, "store");
  v33 = v134;
  v34 = swift_unknownObjectWeakLoadStrong(v134);
  if (!v34)
  {

    goto LABEL_9;
  }
  v35 = (void *)v34;
  type metadata accessor for CRLBoardDataStore(0);
  v36 = v32;
  v37 = static NSObject.== infix(_:_:)(v36, v35);

  if ((v37 & 1) == 0)
  {
LABEL_9:
    sub_100757E04(&_mh_execute_header, (uint64_t)"asset(forAssetData:owner:)", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLAsset.swift", 80, 2, 234, "Unexpected board data store. expected=%{public}@, actual=%{public}@", 67, 2u, inited);
    sub_1004F5394(inited, (uint64_t)"asset(forAssetData:owner:)", 26, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLAsset.swift", 80, 2u, 234, (uint64_t)"Unexpected board data store. expected=%{public}@, actual=%{public}@", 67, 2u);
  }
  v38 = (char *)objc_msgSend(v144, "parentBoard", swift_bridgeObjectRelease().n128_f64[0]);
  v133 = v38;
  if (v38)
  {
    v39 = v38;
    v40 = swift_initStackObject(v136, &v145);
    *(_OWORD *)(v40 + 16) = v128;
    v41 = v137;
    *(_QWORD *)(v40 + 56) = &type metadata for String;
    *(_QWORD *)(v40 + 64) = v41;
    v42 = v132;
    *(_QWORD *)(v40 + 32) = v129;
    *(_QWORD *)(v40 + 40) = v42;
    v43 = OBJC_IVAR____TtC8Freeform8CRLBoard_store;
    v44 = v39;
    v45 = *(id *)&v39[OBJC_IVAR____TtC8Freeform8CRLBoard_store];
    v144 = v44;
    v46 = objc_msgSend(v45, "description");
    v47 = static String._unconditionallyBridgeFromObjectiveC(_:)(v46);
    v49 = v48;

    *(_QWORD *)(v40 + 96) = &type metadata for String;
    *(_QWORD *)(v40 + 104) = v41;
    *(_QWORD *)(v40 + 72) = v47;
    *(_QWORD *)(v40 + 80) = v49;
    v50 = *(void **)&v44[v43];
    v51 = swift_unknownObjectWeakLoadStrong(v33);
    if (!v51
      || (v52 = (void *)v51,
          type metadata accessor for CRLBoardDataStore(0),
          v53 = v50,
          v54 = static NSObject.== infix(_:_:)(v53, v52),
          v53,
          v53,
          v52,
          (v54 & 1) == 0))
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"asset(forAssetData:owner:)", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLAsset.swift", 80, 2, 240, "Unexpected board data store. expected=%{public}@, actual=%{public}@", 67, 2u, v40);
      sub_1004F5394(v40, (uint64_t)"asset(forAssetData:owner:)", 26, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLAsset.swift", 80, 2u, 240, (uint64_t)"Unexpected board data store. expected=%{public}@, actual=%{public}@", 67, 2u);
    }
    v55 = swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v55 = swift_unknownObjectRetain(v144);
  }
  v56 = v142;
  v58 = v140;
  v57 = (uint64_t)v141;
  v59 = v138;
  v60 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v143 + 16);
  v60(v141, v138, v140, v55);
  v61 = (_QWORD *)(v56 + OBJC_IVAR____TtC8Freeform15CRLAssetManager_assets);
  swift_beginAccess(v56 + OBJC_IVAR____TtC8Freeform15CRLAssetManager_assets, v150, 0, 0);
  v62 = *v61;
  if (!*(_QWORD *)(*v61 + 16))
    goto LABEL_21;
  swift_bridgeObjectRetain(*v61);
  v63 = sub_100842EFC(v57);
  if ((v64 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_21:
    v134 = v60;
    v68 = (uint64_t)v131;
    sub_10069BF0C(v59, (uint64_t)v131);
    v69 = v144;
    v70 = objc_msgSend(v144, "store");
    v71 = sub_100964AE0(v68, v70);

    v72 = type metadata accessor for CRLAssetManager.AssetInfo();
    v65 = swift_allocObject(v72, 40, 7);
    v73 = (void *)objc_opt_self(NSHashTable);
    v74 = v71;
    v75 = objc_msgSend(v73, "hashTableWithOptions:", 517, swift_unknownObjectRetain(v69).n128_f64[0]);
    *(_QWORD *)(v65 + 24) = v75;
    v76 = objc_msgSend((id)objc_opt_self(NSHashTable), "hashTableWithOptions:", 517);
    *(_QWORD *)(v65 + 32) = v76;
    *(_QWORD *)(v65 + 16) = v74;
    v77 = type metadata accessor for CRLBoard(0);
    v78 = swift_dynamicCastClass(v69, v77);
    v79 = v74;
    if (v78)
    {
      v80 = v75;
      v81 = (id)v78;
    }
    else
    {
      v80 = v76;
      v81 = v144;
    }
    objc_msgSend(v80, "addObject:", v81);
    v60 = v134;

    v82 = swift_unknownObjectRelease(v144);
    v83 = (uint64_t)v139;
    v58 = v140;
    v57 = (uint64_t)v141;
    v60(v139, (uint64_t)v141, v140, v82);
    swift_beginAccess(v61, v149, 33, 0);
    swift_retain(v65);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v61);
    v147[0] = *v61;
    *v61 = 0x8000000000000000;
    sub_100826404(v65, v83, isUniquelyReferenced_nonNull_native);
    *v61 = v147[0];
    v85 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, __n128))(v143 + 8))(v83, v58, v85);
    swift_endAccess(v149);
    v56 = v142;
    if (qword_1013DD8C0 != -1)
      swift_once(&qword_1013DD8C0, sub_100A0685C);
    swift_beginAccess(&static OS_os_log.assetManagement, v149, 0, 0);
    v86 = (void *)static OS_os_log.assetManagement;
    v87 = swift_initStackObject(v136, &v148);
    *(_OWORD *)(v87 + 16) = xmmword_100EF5E40;
    v88 = v86;
    v89 = UUID.uuidString.getter(v88);
    v90 = v137;
    *(_QWORD *)(v87 + 56) = &type metadata for String;
    *(_QWORD *)(v87 + 64) = v90;
    *(_QWORD *)(v87 + 32) = v89;
    *(_QWORD *)(v87 + 40) = v91;
    v93 = static os_log_type_t.default.getter(v92);
    sub_100A06EBC((uint64_t)v88, &_mh_execute_header, v93, "CRLAssetManager asset(forAssetData:%@, owner:) create new", 57, 2, v87);
    swift_setDeallocating(v87);
    v94 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v87 + 32, 1, v94);

    goto LABEL_31;
  }
  v65 = *(_QWORD *)(*(_QWORD *)(v62 + 56) + 8 * v63);
  swift_retain(v65);
  swift_bridgeObjectRelease();
  v66 = type metadata accessor for CRLBoard(0);
  v67 = swift_dynamicCastClass(v144, v66);
  if (v67)
  {
    objc_msgSend(*(id *)(v65 + 24), "addObject:", v67, swift_retain(v65).n128_f64[0]);
  }
  else
  {
    v95 = *(void **)(v65 + 32);
    *(_QWORD *)&v96 = swift_retain(v65).n128_u64[0];
    objc_msgSend(v95, "addObject:", v144, v96);
  }
  if (qword_1013DD8C0 != -1)
    swift_once(&qword_1013DD8C0, sub_100A0685C);
  swift_beginAccess(&static OS_os_log.assetManagement, v149, 0, 0);
  v97 = (void *)static OS_os_log.assetManagement;
  v98 = swift_initStackObject(v136, &v146);
  *(_OWORD *)(v98 + 16) = xmmword_100EF5E40;
  v88 = v97;
  v99 = UUID.uuidString.getter(v88);
  v100 = v137;
  *(_QWORD *)(v98 + 56) = &type metadata for String;
  *(_QWORD *)(v98 + 64) = v100;
  *(_QWORD *)(v98 + 32) = v99;
  *(_QWORD *)(v98 + 40) = v101;
  v103 = static os_log_type_t.default.getter(v102);
  sub_100A06EBC((uint64_t)v88, &_mh_execute_header, v103, "CRLAssetManager asset(forAssetData:%@, owner:) add owner to existing", 68, 2, v98);
  swift_setDeallocating(v98);
  v104 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v98 + 32, 1, v104);
  swift_release(v65);
LABEL_31:

  v105 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_owners;
  v106 = (char *)objc_msgSend(*(id *)(v56 + OBJC_IVAR____TtC8Freeform15CRLAssetManager_owners), "objectForKeyedSubscript:", v144);
  if (v106)
  {
    v107 = v106;
    v108 = (uint64_t)v130;
    ((void (*)(char *, uint64_t, uint64_t))v60)(v130, v57, v58);
    swift_beginAccess(v107 + 16, v147, 33, 0);
    v109 = (uint64_t)v139;
    sub_100AD569C((uint64_t)v139, v108);
    v110 = *(void (**)(uint64_t, uint64_t))(v143 + 8);
    v110(v109, v58);
    swift_endAccess(v147);
    swift_unknownObjectRelease(v144);

    v111 = (uint64_t)v107;
  }
  else
  {
    v112 = *(void **)(v56 + v105);
    v113 = (uint64_t)v139;
    ((void (*)(char *, uint64_t, uint64_t))v60)(v139, v57, v58);
    v114 = type metadata accessor for CRLAssetManager.OwnerInfo();
    v115 = swift_allocObject(v114, 25, 7);
    *(_BYTE *)(v115 + 24) = 0;
    v116 = sub_1004B804C(&qword_1013E77A8);
    v117 = (void (*)(uint64_t, uint64_t, uint64_t))v60;
    v118 = v143;
    v119 = *(unsigned __int8 *)(v143 + 80);
    v120 = (v119 + 32) & ~v119;
    v121 = swift_allocObject(v116, v120 + *(_QWORD *)(v143 + 72), v119 | 7);
    *(_OWORD *)(v121 + 16) = xmmword_100EF5E40;
    v122 = v121 + v120;
    v117(v122, v113, v58);
    v123 = v112;
    v124 = sub_100AF7994(v121);
    swift_setDeallocating(v121);
    swift_arrayDestroy(v122, 1, v58);
    swift_deallocClassInstance(v121, 32, 7);
    v110 = *(void (**)(uint64_t, uint64_t))(v118 + 8);
    v110(v113, v58);
    *(_QWORD *)(v115 + 16) = v124;
    v57 = (uint64_t)v141;
    v125 = v144;
    objc_msgSend(v123, "setObject:forKeyedSubscript:", v115, v144);
    swift_unknownObjectRelease(v125);

    v111 = v115;
  }
  v126 = swift_release(v111);
  ((void (*)(uint64_t, uint64_t, __n128))v110)(v57, v58, v126);
  v127 = *(id *)(v65 + 16);
  swift_release(v65);
  sub_1009636AC(3600.0);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v135 + 16));
  return v127;
}

id sub_100964AE0(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  objc_class *v9;
  id v10;
  id v11;
  double v12;
  id v13;
  uint64_t v15;
  objc_super v16;
  _QWORD v17[5];

  v4 = type metadata accessor for CRLAssetData(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10069BF0C(a1, (uint64_t)v6);
  v7 = type metadata accessor for CRLAssetBackedAssetStorage(0);
  v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
  sub_10078DF08((uint64_t)v6, v8 + OBJC_IVAR____TtC8Freeform26CRLAssetBackedAssetStorage_assetData);
  *(_QWORD *)(v8 + OBJC_IVAR____TtC8Freeform26CRLAssetBackedAssetStorage_store) = a2;
  v17[3] = v7;
  v17[4] = &off_101289A20;
  v17[0] = v8;
  v9 = (objc_class *)type metadata accessor for CRLAsset();
  v10 = objc_allocWithZone(v9);
  sub_1004E90B0((uint64_t)v17, (uint64_t)v10 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage);
  v16.receiver = v10;
  v16.super_class = v9;
  v11 = a2;
  *(_QWORD *)&v12 = swift_retain(v8).n128_u64[0];
  v13 = objc_msgSendSuper2(&v16, "init", v12);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v17);
  swift_release(v8);
  sub_1005CC194(a1);
  return v13;
}

double sub_100964C14(uint64_t a1)
{
  uint64_t v1;

  return sub_1005CCB48(a1, *(_QWORD *)(v1 + 16));
}

id sub_100964C2C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  void (*v10)(char *, uint64_t, uint64_t, __n128);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _DWORD *v16;
  uint64_t v17;
  uint64_t v18;
  objc_class *v19;
  id v20;
  double v21;
  id v22;
  __n128 v23;
  uint64_t v25;
  objc_super v26;
  _QWORD v27[5];

  v2 = type metadata accessor for URL(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v25 - v8;
  v10 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16);
  v10((char *)&v25 - v8, a1, v2, v7);
  ((void (*)(char *, char *, uint64_t))v10)(v5, v9, v2);
  v11 = type metadata accessor for CRLFileAssetStorage(0);
  v12 = swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
  v13 = OBJC_IVAR____TtC8Freeform19CRLFileAssetStorage_lock;
  v14 = type metadata accessor for CRLUnfairLock();
  v15 = swift_allocObject(v14, 24, 7);
  swift_retain(v12);
  v16 = (_DWORD *)swift_slowAlloc(4, -1);
  *v16 = 0;
  *(_QWORD *)(v15 + 16) = v16;
  atomic_thread_fence(memory_order_acq_rel);
  *(_QWORD *)(v12 + v13) = v15;
  v17 = v12 + OBJC_IVAR____TtC8Freeform19CRLFileAssetStorage__assetUUID;
  v18 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v12 + OBJC_IVAR____TtC8Freeform19CRLFileAssetStorage__url, v5, v2);
  swift_release(v12);
  v27[3] = v11;
  v27[4] = &off_101289A20;
  v27[0] = v12;
  v19 = (objc_class *)type metadata accessor for CRLAsset();
  v20 = objc_allocWithZone(v19);
  sub_1004E90B0((uint64_t)v27, (uint64_t)v20 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage);
  v26.receiver = v20;
  v26.super_class = v19;
  *(_QWORD *)&v21 = swift_retain(v12).n128_u64[0];
  v22 = objc_msgSendSuper2(&v26, "init", v21);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v27);
  v23 = swift_release(v12);
  (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v9, v2, v23);
  return v22;
}

uint64_t sub_100964E14()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100964E38()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100964E5C()
{
  uint64_t v0;

  sub_1009639A0(*(_QWORD *)(v0 + 16));
}

double sub_100964E64(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

double sub_100964E74(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

void sub_100964E7C()
{
  uint64_t v0;

  sub_100963500(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (SEL *)&selRef_willCloseBoardDataStoreForAssets_);
}

uint64_t sub_100964E9C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100964EC0()
{
  uint64_t v0;

  sub_100963500(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (SEL *)&selRef_willCloseContainerForAssets_);
}

uint64_t sub_100964EE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100964F5C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

id sub_100964FC4()
{
  return sub_1004C3370(type metadata accessor for CRLiOSPencilHoverStates);
}

void sub_100965030(void *a1)
{
  char *v1;
  void *v2;
  char *v4;
  uint64_t Strong;
  id v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  id v17;
  id v18;
  char v19;
  void *v20;
  uint64_t v21;
  uint64_t inited;
  id v23;
  Swift::String v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  Swift::String v28;
  Swift::String v29;
  Swift::String v30;
  Swift::String v31;
  Swift::String v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  char v45;
  void *v46;
  uint64_t v47;
  void *v48;
  id v49;
  id v50;
  uint64_t v51;
  void *v52;
  id v53;
  id v54;
  unsigned __int8 v55;
  void *v56;
  void *v57;
  double v58;
  double v59;
  id v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  id v66;
  unsigned __int8 v67;
  void *v68;
  void *v69;
  id v70;
  id v71;
  id v72;
  uint64_t v73;
  unint64_t v74;
  char v75[72];
  char v76[24];
  _QWORD v77[12];

  v2 = v1;
  v4 = &v1[OBJC_IVAR____TtC8Freeform31CRLiOSPencilHoverGestureHandler_icc];
  Strong = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC8Freeform31CRLiOSPencilHoverGestureHandler_icc]);
  if (!Strong)
    return;
  v72 = (id)Strong;
  if (!objc_msgSend((id)objc_opt_self(UIPencilInteraction), "prefersHoverToolPreview"))
  {

    return;
  }
  v6 = objc_msgSend(v72, "canvasView");
  objc_msgSend(a1, "locationInView:", v6);
  v8 = v7;
  v10 = v9;

  objc_msgSend(v72, "convertBoundsToUnscaledPoint:", v8, v10);
  v12 = v11;
  v14 = v13;
  objc_msgSend(a1, "zOffset");
  v16 = v15;
  v71 = objc_msgSend(v72, "freehandDrawingToolkit");
  v17 = objc_msgSend(v72, "canvasView");
  v18 = objc_msgSend(v17, "enclosingScrollView");

  sub_1009658C4();
  v19 = sub_100966960(a1, v16);
  if (qword_1013DD7D8 != -1)
    swift_once(&qword_1013DD7D8, sub_100A03DBC);
  swift_beginAccess(&static OS_os_log.crlPencilHover, v76, 0, 0);
  v20 = (void *)static OS_os_log.crlPencilHover;
  v21 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v21, v75);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v73 = 0;
  v74 = 0xE000000000000000;
  v23 = v20;
  _StringGuts.grow(_:)(61);
  v24._countAndFlagsBits = 0xD000000000000012;
  v24._object = (void *)0x8000000100FE3C20;
  String.append(_:)(v24);
  if ((v19 & 1) != 0)
    v25 = 1702195828;
  else
    v25 = 0x65736C6166;
  if ((v19 & 1) != 0)
    v26 = 0xE400000000000000;
  else
    v26 = 0xE500000000000000;
  v27 = v26;
  String.append(_:)(*(Swift::String *)&v25);
  swift_bridgeObjectRelease();
  v28._countAndFlagsBits = 0x657366664F7A202CLL;
  v28._object = (void *)0xEA00000000003A74;
  String.append(_:)(v28);
  v29._countAndFlagsBits = Double.description.getter(v16);
  String.append(_:)(v29);
  swift_bridgeObjectRelease();
  v30._countAndFlagsBits = 0x3A6574617473202CLL;
  v30._object = (void *)0xE900000000000020;
  String.append(_:)(v30);
  objc_msgSend(a1, "state");
  v31._countAndFlagsBits = 0x746C7561666564;
  v31._object = (void *)0xE700000000000000;
  String.append(_:)(v31);
  swift_bridgeObjectRelease();
  v32._object = (void *)0x8000000100FE3C40;
  v32._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v32);
  v33 = swift_allocObject(&unk_10128B978, 24, 7);
  *(_QWORD *)(v33 + 16) = v2;
  v34 = swift_allocObject(&unk_10128B9A0, 32, 7);
  *(_QWORD *)(v34 + 16) = sub_100966B54;
  *(_QWORD *)(v34 + 24) = v33;
  v77[0] = sub_100966B98;
  v77[1] = v34;
  v35 = v2;
  v36 = sub_1004B804C((uint64_t *)&unk_1013FC950);
  _print_unlocked<A, B>(_:_:)(v77, &v73, v36, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  swift_release(v34);
  v37 = v73;
  v38 = v74;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v37;
  *(_QWORD *)(inited + 40) = v38;
  v40 = static os_log_type_t.debug.getter(v39);
  sub_100A06EBC((uint64_t)v23, &_mh_execute_header, v40, "**** %@", 7, 2, inited);
  swift_setDeallocating(inited);
  v41 = *(_QWORD *)(inited + 16);
  v42 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, v41, v42);

  sub_1009659E4();
  v43 = OBJC_IVAR____TtC8Freeform31CRLiOSPencilHoverGestureHandler_pencilHoverStates;
  v44 = *(id *)&v35[OBJC_IVAR____TtC8Freeform31CRLiOSPencilHoverGestureHandler_pencilHoverStates];
  sub_100965BD4(v12, v14);
  v44[OBJC_IVAR____TtC8Freeform23CRLiOSPencilHoverStates_currentHoverToolType] = v45;

  v46 = v71;
  if ((v19 & 1) != 0)
  {
    v47 = OBJC_IVAR____TtC8Freeform31CRLiOSPencilHoverGestureHandler_decorator;
    v48 = *(void **)&v35[OBJC_IVAR____TtC8Freeform31CRLiOSPencilHoverGestureHandler_decorator];
    if (v48)
    {
      if (v71 && v18)
      {
        v70 = v48;
        v49 = v71;
        v50 = v18;
        if ((objc_msgSend(v50, "isDragging") & 1) != 0
          || (objc_msgSend(v50, "isDragging") & 1) != 0
          || (objc_msgSend(v50, "isDecelerating") & 1) != 0)
        {

          v46 = v71;
          goto LABEL_21;
        }
        objc_msgSend(v72, "viewScale");
        v59 = v58;
        v60 = objc_msgSend(v72, "backgroundColorAtUnscaledCanvasPoint:", v8, v10);
        v61 = objc_msgSend(v60, "CGColor");

        v62 = *(_QWORD *)&v35[OBJC_IVAR____TtC8Freeform31CRLiOSPencilHoverGestureHandler_previewImageProvider];
        sub_100965BD4(v12, v14);
        v64 = v63;
        v65 = *(id *)&v35[v43];
        sub_100A2B430(v77, v62, v61, v64, v65, v8, v10, v16, v59);

        sub_100A08B8C(v49, (unsigned __int8 *)v77);
        objc_msgSend(v49, "keepPencilShadowVisible");
        objc_msgSend(v49, "inputPointFromHoverGesture:", a1);
        objc_msgSend(v49, "updatePencilShadowWithInputPoint:", &v73);
        if (objc_msgSend(v49, "isInDrawingMode"))
        {
          objc_msgSend(a1, "state");
          sub_100966C08(v8, v10);
        }
        else
        {
          v66 = *(id *)&v35[OBJC_IVAR____TtC8Freeform31CRLiOSPencilHoverGestureHandler_hoverRepManager];
          v67 = sub_100DC01F0();

          if ((v67 & 1) != 0)
          {
            v68 = (void *)swift_unknownObjectWeakLoadStrong(v4);
            if (v68)
            {
              v69 = v68;
              if (*(_QWORD *)&v35[v47])
                objc_msgSend(v68, "invalidateLayersForDecorator:");

              goto LABEL_39;
            }
          }
        }

LABEL_39:
        sub_100966BC4((uint64_t)v77);

        return;
      }
    }
  }
LABEL_21:
  v51 = OBJC_IVAR____TtC8Freeform31CRLiOSPencilHoverGestureHandler_decorator;
  v52 = *(void **)&v35[OBJC_IVAR____TtC8Freeform31CRLiOSPencilHoverGestureHandler_decorator];
  if (v52)
  {
    v53 = v52;
    sub_10066EF14();

  }
  v54 = *(id *)&v35[OBJC_IVAR____TtC8Freeform31CRLiOSPencilHoverGestureHandler_hoverRepManager];
  v55 = sub_100DC01F0();

  if ((v55 & 1) != 0 && (v56 = (void *)swift_unknownObjectWeakLoadStrong(v4)) != 0)
  {
    v57 = v56;
    if (*(_QWORD *)&v35[v51])
    {
      objc_msgSend(v56, "invalidateLayersForDecorator:");

      return;
    }

    v18 = v46;
  }
  else
  {
    v57 = v46;
  }

}

void sub_1009658C4()
{
  uint64_t v0;
  void *Strong;
  void *v2;
  id v3;
  id v4;
  id v5;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform31CRLiOSPencilHoverGestureHandler_icc);
  if (Strong)
  {
    v2 = Strong;
    v3 = objc_msgSend(Strong, "layerHost");

    if (v3)
    {
      if ((objc_msgSend(v3, "respondsToSelector:", "asiOSCVC") & 1) != 0)
      {
        v4 = objc_msgSend(v3, "asiOSCVC");
        swift_unknownObjectRelease(v3);
        v3 = objc_msgSend(v4, "delegate");

        if (!v3)
        {
          __break(1u);
          return;
        }
        if ((objc_msgSend(v3, "respondsToSelector:", "currentDocumentMode") & 1) != 0)
        {
          v5 = objc_msgSend(v3, "currentDocumentMode");
          swift_unknownObjectRelease(v3);
          objc_msgSend(v5, "pencilModeType");

          return;
        }
      }
      swift_unknownObjectRelease(v3);
    }
  }
}

void sub_1009659E4()
{
  uint64_t v0;
  void *Strong;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  id v8;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform31CRLiOSPencilHoverGestureHandler_icc);
  v2 = OBJC_IVAR____TtC8Freeform31CRLiOSPencilHoverGestureHandler_decorator;
  v3 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform31CRLiOSPencilHoverGestureHandler_decorator);
  if (!Strong)
  {
    *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform31CRLiOSPencilHoverGestureHandler_decorator) = 0;
    Strong = v3;
    goto LABEL_6;
  }
  if (v3)
  {
LABEL_6:

    return;
  }
  v8 = Strong;
  v4 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CRLiOSPencilToolShapeDecorator()), "init");
  v5 = *(void **)(v0 + v2);
  *(_QWORD *)(v0 + v2) = v4;

  v6 = *(void **)(v0 + v2);
  if (v6)
  {
    v7 = v6;
    objc_msgSend(v8, "addDecorator:", v7);

    Strong = v8;
    goto LABEL_6;
  }
  __break(1u);
}

void sub_100965AE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  unsigned __int8 v6;
  void *Strong;
  id v8;

  v1 = v0;
  v2 = OBJC_IVAR____TtC8Freeform31CRLiOSPencilHoverGestureHandler_decorator;
  v3 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform31CRLiOSPencilHoverGestureHandler_decorator);
  if (v3)
  {
    v4 = v3;
    sub_10066EF14();

  }
  v5 = *(id *)(v0 + OBJC_IVAR____TtC8Freeform31CRLiOSPencilHoverGestureHandler_hoverRepManager);
  v6 = sub_100DC01F0();

  if ((v6 & 1) != 0)
  {
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform31CRLiOSPencilHoverGestureHandler_icc);
    if (Strong)
    {
      if (*(_QWORD *)(v1 + v2))
      {
        v8 = Strong;
        objc_msgSend(Strong, "invalidateLayersForDecorator:");
        Strong = v8;
      }

    }
  }
}

void sub_100965BD4(double a1, double a2)
{
  uint64_t v2;
  uint64_t v5;
  void *Strong;
  void *v7;
  id v8;
  id v9;
  id v10;
  unint64_t v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  id v17;

  v5 = v2 + OBJC_IVAR____TtC8Freeform31CRLiOSPencilHoverGestureHandler_icc;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC8Freeform31CRLiOSPencilHoverGestureHandler_icc);
  if (Strong)
  {
    v7 = Strong;
    v8 = objc_msgSend(Strong, "layerHost");

    if (v8)
    {
      if ((objc_msgSend(v8, "respondsToSelector:", "asiOSCVC") & 1) == 0)
        goto LABEL_9;
      v9 = objc_msgSend(v8, "asiOSCVC");
      v8 = objc_msgSend(v9, "delegate", swift_unknownObjectRelease(v8).n128_f64[0]);

      if (!v8)
      {
        __break(1u);
        return;
      }
      if ((objc_msgSend(v8, "respondsToSelector:", "currentDocumentMode") & 1) != 0)
      {
        v10 = objc_msgSend(v8, "currentDocumentMode");
        v11 = (unint64_t)objc_msgSend(v10, "pencilModeType", swift_unknownObjectRelease(v8).n128_f64[0]);

        if (v11)
        {
          if (v11 == 2)
            return;
          goto LABEL_13;
        }
      }
      else
      {
LABEL_9:
        swift_unknownObjectRelease(v8);
      }
    }
  }
  v12 = (void *)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC8Freeform31CRLiOSPencilHoverGestureHandler_pencilMediator);
  if (!v12)
    return;
  v13 = v12;
  v14 = objc_msgSend(v12, "pencilBehaviorOutsideModesAtUnscaledPoint:", a1, a2);
  swift_unknownObjectRelease(v13);
  if (v14 == (id)2)
    return;
  v11 = v14 == (id)1;
LABEL_13:
  if (v11 == 1)
  {
    v15 = (void *)swift_unknownObjectWeakLoadStrong(v5);
    if (v15
      && (v16 = v15,
          v17 = objc_msgSend(v15, "freehandDrawingToolkit"),
          v16,
          v17))
    {
      sub_100A2B318();

    }
    else
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"hoverToolType(at:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLiOSPencilHoverGestureHandler.swift", 102, 2, 103, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"hoverToolType(at:)", 18, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLiOSPencilHoverGestureHandler.swift", 102, 2u, 103, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    }
  }
}

void CRLiOSPencilHoverGestureHandler.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("Freeform.CRLiOSPencilHoverGestureHandler", 40, "init()", 6, 0);
  __break(1u);
}

id CRLiOSPencilHoverGestureHandler.__deallocating_deinit()
{
  return sub_1004C3370(type metadata accessor for CRLiOSPencilHoverGestureHandler);
}

uint64_t type metadata accessor for CRLiOSPencilHoverGestureHandler()
{
  return objc_opt_self(_TtC8Freeform31CRLiOSPencilHoverGestureHandler);
}

uint64_t type metadata accessor for CRLiOSPencilHoverStates()
{
  return objc_opt_self(_TtC8Freeform23CRLiOSPencilHoverStates);
}

void sub_100965F68(double a1, double a2)
{
  uint64_t v2;
  void *Strong;
  void *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  id v11;
  id v12;
  uint64_t v13;
  void *v14;
  Class isa;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t i;
  uint64_t v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  double *v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  void *v42;
  uint64_t v43;
  _QWORD *v44;
  void *v45;
  char v46;
  uint64_t v47;
  double v48;
  uint64_t v49;
  double *v50;
  void *v51;
  void *v52;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC8Freeform31CRLiOSPencilHoverGestureHandler_icc);
  if (!Strong)
    return;
  v6 = Strong;
  objc_msgSend(Strong, "convertBoundsToUnscaledPoint:", a1, a2);
  v8 = v7;
  v10 = v9;
  v11 = objc_msgSend(v6, "parentForFreehandDrawingLayoutsAtPoint:");
  v52 = v11;
  if (v11)
  {
    v12 = objc_msgSend(v11, "children");
    v13 = sub_1004B8930(0, (unint64_t *)&qword_1013FC960, off_101229810);
    static Array._unconditionallyBridgeFromObjectiveC(_:)(v12, v13);

  }
  v14 = (void *)objc_opt_self(CRLFreehandDrawingLayout);
  sub_1004B8930(0, (unint64_t *)&qword_1013FC960, off_101229810);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v16 = objc_msgSend(v14, "freehandDrawingLayoutsToInteractWithFromLayouts:", isa, swift_bridgeObjectRelease().n128_f64[0]);

  v17 = sub_1004B8930(0, &qword_1013F6DC0, off_1012298A8);
  v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v16, v17);

  v19 = v6;
  v20 = (uint64_t)sub_100966698(v18, v19);
  swift_bridgeObjectRelease();
  v51 = v19;

  if ((unint64_t)v20 >> 62)
  {
    if (v20 < 0)
      v28 = v20;
    else
      v28 = v20 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v20);
    v21 = _CocoaArrayWrapper.endIndex.getter(v28);
    if (!v21)
      goto LABEL_18;
  }
  else
  {
    v21 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v20);
    if (!v21)
      goto LABEL_18;
  }
  if (v21 < 1)
  {
    __break(1u);
    goto LABEL_53;
  }
  v22 = 0;
  do
  {
    if ((v20 & 0xC000000000000001) != 0)
      v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v22, v20);
    else
      v23 = *(id *)(v20 + 8 * v22 + 32);
    v24 = v23;
    ++v22;
    v25 = objc_msgSend(v23, "childReps", v51, v52);
    v26 = sub_1004B8930(0, (unint64_t *)&qword_1013E56B0, off_101229828);
    v27 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v25, v26);

    sub_100620DB4(v27);
  }
  while (v21 != v22);
LABEL_18:
  swift_bridgeObjectRelease_n(v20, 2);
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    if ((uint64_t)_swiftEmptyArrayStorage < 0)
      v38 = _swiftEmptyArrayStorage;
    else
      v38 = (double *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    v29 = _CocoaArrayWrapper.endIndex.getter(v38);
    if (v29)
    {
LABEL_20:
      if (v29 >= 1)
      {
        for (i = 0; i != v29; ++i)
        {
          v32 = _swiftEmptyArrayStorage[i + 4];
          v33 = objc_opt_self(CRLShapeRep);
          v34 = swift_dynamicCastObjCClass(*(_QWORD *)&v32, v33);
          if (v34)
          {
            v35 = v34;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(*(id *)&v32);
            v37 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
            v36 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v37 >= v36 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v36 > 1, v37 + 1, 1);
            v31 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v37, v35);
            specialized Array._endMutation()(v31);
          }
        }
        goto LABEL_32;
      }
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
      return;
    }
  }
  else
  {
    v29 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    if (v29)
      goto LABEL_20;
  }
LABEL_32:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
    goto LABEL_47;
  v39 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v39)
  {
    v40 = 4;
    while (1)
    {
      v41 = ((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v40 - 4, _swiftEmptyArrayStorage)
          : *(id *)&_swiftEmptyArrayStorage[v40];
      v42 = v41;
      v43 = v40 - 3;
      if (__OFADD__(v40 - 4, 1))
        break;
      objc_msgSend(v41, "convertNaturalPointFromUnscaledCanvas:", v8, v10);
      if (!objc_msgSend(v42, "containsPoint:withPrecision:", 1))
        goto LABEL_35;
      v44 = objc_msgSend(v42, "shapeInfo");
      if (!v44)
        goto LABEL_54;
      v45 = v44;
      v46 = (*(uint64_t (**)(void))((swift_isaMask & *v44) + 0x4C0))();

      if ((v46 & 1) != 0)
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v47);
        v48 = _swiftEmptyArrayStorage[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(*(_QWORD *)&v48);
        v49 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(*(_QWORD *)&v48, v42);
        specialized ContiguousArray._endMutation()(v49);
      }
      else
      {
LABEL_35:

      }
      ++v40;
      if (v43 == v39)
        goto LABEL_51;
    }
    __break(1u);
LABEL_47:
    if ((uint64_t)_swiftEmptyArrayStorage < 0)
      v50 = _swiftEmptyArrayStorage;
    else
      v50 = (double *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    v39 = _CocoaArrayWrapper.endIndex.getter(v50);
    swift_bridgeObjectRelease();
  }
LABEL_51:
  swift_bridgeObjectRelease();

}

id sub_1009664C0(uint64_t a1)
{
  uint64_t *v1;
  unint64_t v3;
  unsigned __int8 v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  id result;
  void *v11;
  double v12;
  double v13;
  void *v14;
  void *v15;
  uint64_t v16;

  v3 = *v1;
  swift_bridgeObjectRetain(*v1);
  v4 = sub_100548F18(a1, v3);
  swift_bridgeObjectRelease();
  if ((v4 & 1) != 0)
    return (id)((v4 & 1) == 0);
  sub_100DC0390();
  swift_bridgeObjectRetain(a1);
  swift_bridgeObjectRelease();
  *v1 = a1;
  if (!((unint64_t)a1 >> 62))
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v5)
      goto LABEL_4;
    goto LABEL_13;
  }
LABEL_16:
  if (a1 < 0)
    v16 = a1;
  else
    v16 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v5 = _CocoaArrayWrapper.endIndex.getter(v16);
  if (!v5)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    return (id)((v4 & 1) == 0);
  }
LABEL_4:
  v6 = 4;
  while (1)
  {
    if ((a1 & 0xC000000000000001) != 0)
      v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6 - 4, a1);
    else
      v7 = *(id *)(a1 + 8 * v6);
    v8 = v7;
    v9 = v6 - 3;
    if (__OFADD__(v6 - 4, 1))
    {
      __break(1u);
      goto LABEL_16;
    }
    result = objc_msgSend(v7, "styledLayout");
    if (!result)
      break;
    v11 = result;
    objc_msgSend(result, "opacity");
    v13 = v12;

    result = objc_msgSend(v8, "styledLayout");
    if (!result)
      goto LABEL_22;
    v14 = result;
    objc_msgSend(result, "dynamicOpacityChangeDidBegin");

    result = objc_msgSend(v8, "styledLayout");
    if (!result)
      goto LABEL_23;
    v15 = result;
    objc_msgSend(result, "dynamicOpacityUpdateToValue:", v13 * 0.2);

    ++v6;
    if (v9 == v5)
      goto LABEL_13;
  }
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
  return result;
}

_QWORD *sub_100966698(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;

  if ((unint64_t)a1 >> 62)
    goto LABEL_15;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v4; v4 = _CocoaArrayWrapper.endIndex.getter(v14))
  {
    v5 = 4;
    while (1)
    {
      v7 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5 - 4, a1)
         : *(id *)(a1 + 8 * v5);
      v8 = v7;
      v9 = v5 - 3;
      if (__OFADD__(v5 - 4, 1))
        break;
      v10 = objc_msgSend(a2, "repForLayout:", v7);

      if (v10)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v11);
        v13 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v12 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v13 >= v12 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v12 > 1, v13 + 1, 1);
        v6 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, v10);
        specialized Array._endMutation()(v6);
      }
      ++v5;
      if (v9 == v4)
        goto LABEL_19;
    }
    __break(1u);
LABEL_15:
    if (a1 < 0)
      v14 = a1;
    else
      v14 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
LABEL_19:
  swift_bridgeObjectRelease(a1);
  return _swiftEmptyArrayStorage;
}

id sub_10096681C(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  objc_class *v11;
  _BYTE *v12;
  char *v13;
  objc_super v15;
  objc_super v16;

  v5 = &v2[OBJC_IVAR____TtC8Freeform31CRLiOSPencilHoverGestureHandler_icc];
  swift_unknownObjectWeakInit(&v2[OBJC_IVAR____TtC8Freeform31CRLiOSPencilHoverGestureHandler_icc]);
  v6 = &v2[OBJC_IVAR____TtC8Freeform31CRLiOSPencilHoverGestureHandler_pencilMediator];
  swift_unknownObjectWeakInit(&v2[OBJC_IVAR____TtC8Freeform31CRLiOSPencilHoverGestureHandler_pencilMediator]);
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform31CRLiOSPencilHoverGestureHandler_decorator] = 0;
  v7 = OBJC_IVAR____TtC8Freeform31CRLiOSPencilHoverGestureHandler_previewImageProvider;
  v8 = type metadata accessor for CRLiOSPencilHoverPreviewImageProvider();
  v9 = (_QWORD *)swift_allocObject(v8, 40, 7);
  v9[3] = 0;
  v9[4] = 0;
  v9[2] = 0;
  *(_QWORD *)&v2[v7] = v9;
  v10 = OBJC_IVAR____TtC8Freeform31CRLiOSPencilHoverGestureHandler_pencilHoverStates;
  v11 = (objc_class *)type metadata accessor for CRLiOSPencilHoverStates();
  v12 = objc_allocWithZone(v11);
  v12[OBJC_IVAR____TtC8Freeform23CRLiOSPencilHoverStates_currentHoverToolType] = 8;
  v16.receiver = v12;
  v16.super_class = v11;
  v13 = v2;
  *(_QWORD *)&v2[v10] = objc_msgSendSuper2(&v16, "init");
  swift_unknownObjectWeakAssign(v5, a1);
  swift_unknownObjectWeakAssign(v6, a2);
  *(_QWORD *)&v13[OBJC_IVAR____TtC8Freeform31CRLiOSPencilHoverGestureHandler_hoverRepManager] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CRLiOSPencilHoveredRepManager()), "init");

  v15.receiver = v13;
  v15.super_class = (Class)type metadata accessor for CRLiOSPencilHoverGestureHandler();
  return objc_msgSendSuper2(&v15, "init");
}

uint64_t sub_100966960(void *a1, double a2)
{
  uint64_t v2;
  void *Strong;
  void *v6;
  id v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  void *v16;
  void *v17;
  id v18;

  if ((char *)objc_msgSend(a1, "state") - 1 > (char *)1)
    return 0;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC8Freeform31CRLiOSPencilHoverGestureHandler_icc);
  if (!Strong)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"shouldHandleHover(zOffset:hoverGesture:currentHoverToolWorksOutsideDrawingBounds:)", 82, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLiOSPencilHoverGestureHandler.swift", 102, 2, 189, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"shouldHandleHover(zOffset:hoverGesture:currentHoverToolWorksOutsideDrawingBounds:)", 82, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLiOSPencilHoverGestureHandler.swift", 102, 2u, 189, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    return 1;
  }
  v6 = Strong;
  v7 = objc_msgSend(Strong, "canvasView");
  objc_msgSend(a1, "locationInView:", v7);
  v9 = v8;
  v11 = v10;

  objc_msgSend(v6, "convertBoundsToUnscaledPoint:", v9, v11);
  if (a2 < 0.0 || (v14 = v12, a2 >= 1.0))
  {

    return 0;
  }
  v15 = v13;
  v16 = (void *)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC8Freeform31CRLiOSPencilHoverGestureHandler_pencilMediator);
  if (!v16)
  {

    return 1;
  }
  v17 = v16;
  v18 = objc_msgSend(v16, "shouldAllowNativeHoverPreviewAtUnscaledPoint:", v14, v15);

  swift_unknownObjectRelease(v17);
  return (uint64_t)v18;
}

uint64_t sub_100966B30()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100966B54(double a1, double a2)
{
  sub_100965BD4(a1, a2);
}

uint64_t sub_100966B74()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100966B98@<X0>(double *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(double, double))(v2 + 16))(*a1, a1[1]);
  *a2 = result;
  return result;
}

uint64_t sub_100966BC4(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;

  v2 = *(void **)(a1 + 32);
  v3 = *(void **)(a1 + 64);
  v4 = *(void **)(a1 + 72);

  return a1;
}

void sub_100966C08(double a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t Strong;
  void *v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  __n128 v18;
  uint64_t v19;
  unsigned __int8 v20;
  id v21;
  unsigned __int8 v22;
  void *v23;
  id v24;
  unsigned __int8 v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  id v31;
  _BYTE v32[24];

  v3 = v2;
  v4 = OBJC_IVAR____TtC8Freeform31CRLiOSPencilHoverGestureHandler_decorator;
  v5 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform31CRLiOSPencilHoverGestureHandler_decorator);
  if (v5)
  {
    Strong = swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC8Freeform31CRLiOSPencilHoverGestureHandler_icc);
    if (Strong)
    {
      v9 = (void *)Strong;
      v10 = v5;
      v11 = objc_msgSend(v9, "freehandDrawingToolkit");
      if (v11
        && (v12 = v11, v13 = objc_msgSend(v11, "currentTool"),
                       v12,
                       v13))
      {
        if (objc_msgSend(v13, "type") == (id)8)
        {
          if (*((_BYTE *)v10 + OBJC_IVAR____TtC8Freeform30CRLiOSPencilToolShapeDecorator_isHoveredWithObjectEraser) != 1)
          {
            v24 = *(id *)(v3 + OBJC_IVAR____TtC8Freeform31CRLiOSPencilHoverGestureHandler_hoverRepManager);
            v25 = sub_100DC01F0();

            if ((v25 & 1) == 0)
            {
LABEL_30:

              goto LABEL_31;
            }
LABEL_20:
            v26 = v10;
            objc_msgSend(v9, "invalidateLayersForDecorator:", v26);

LABEL_31:
            return;
          }
          sub_100965F68(a1, a2);
          v15 = v14;
          v16 = *(char **)(v3 + OBJC_IVAR____TtC8Freeform31CRLiOSPencilHoverGestureHandler_hoverRepManager);
          if ((unint64_t)v14 >> 62)
          {
            if (v14 < 0)
              v27 = v14;
            else
              v27 = v14 & 0xFFFFFFFFFFFFFF8;
            v28 = sub_1004B8930(0, &qword_1013E1C90, off_1012299F8);
            v29 = v16;
            v19 = _bridgeCocoaArray<A>(_:)(v27, v28);
            swift_bridgeObjectRelease();
            v15 = v19;
            if ((unint64_t)v19 >> 62)
            {
              if (v19 >= 0)
                v19 &= 0xFFFFFFFFFFFFFF8uLL;
              swift_bridgeObjectRetain(v15);
              v30 = _CocoaArrayWrapper.endIndex.getter(v19);
              swift_bridgeObjectRelease();
              if (v30)
                goto LABEL_10;
              goto LABEL_28;
            }
          }
          else
          {
            v17 = v16;
            v18 = swift_bridgeObjectRetain(v15);
            dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v18);
            sub_1004B8930(0, &qword_1013E1C90, off_1012299F8);
            swift_bridgeObjectRelease();
            v19 = v15;
          }
          if (*(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
LABEL_10:
            swift_beginAccess(&v16[OBJC_IVAR____TtC8Freeform29CRLiOSPencilHoveredRepManager_repsModel], v32, 33, 0);
            v20 = sub_1009664C0(v15);
            swift_endAccess(v32);
            goto LABEL_29;
          }
LABEL_28:
          v20 = sub_100DC01F0();
LABEL_29:

          swift_bridgeObjectRelease();
          if ((v20 & 1) == 0)
            goto LABEL_30;
          goto LABEL_20;
        }

        v10 = v9;
      }
      else
      {
        v13 = v9;
      }

    }
  }
  v21 = *(id *)(v3 + OBJC_IVAR____TtC8Freeform31CRLiOSPencilHoverGestureHandler_hoverRepManager);
  v22 = sub_100DC01F0();

  if ((v22 & 1) != 0)
  {
    v23 = (void *)swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC8Freeform31CRLiOSPencilHoverGestureHandler_icc);
    if (v23)
    {
      if (*(_QWORD *)(v3 + v4))
      {
        v31 = v23;
        objc_msgSend(v23, "invalidateLayersForDecorator:");
        v23 = v31;
      }

    }
  }
}

uint64_t type metadata accessor for CRLAnalyticsBoardOpenedTime()
{
  return objc_opt_self(_TtC8Freeform27CRLAnalyticsBoardOpenedTime);
}

void sub_100966F38(double a1)
{
  unint64_t v2;
  id v3;
  char isUniquelyReferenced_nonNull_native;
  void *v5;
  NSString v6;
  Class isa;

  v2 = sub_1008D5C30((uint64_t)_swiftEmptyArrayStorage);
  v3 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithDouble:", a1);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v2);
  sub_100826868((uint64_t)v3, 0x65704F6472616F62, 0xED0000656D69546ELL, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease(0x8000000000000000);
  v5 = (void *)objc_opt_self(CRLAnalyticsLogger);
  v6 = String._bridgeToObjectiveC()();
  sub_100511A70();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v5, "sendEventInDomain:lazily:eventPayload:", v6, 1, isa, swift_bridgeObjectRelease(v2).n128_f64[0]);

}

void sub_100967068()
{
  uint64_t v0;
  char v1;
  void *v2;
  void **p_cache;
  uint64_t v4;
  ValueMetadata *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  __n128 v16;
  uint64_t v17;
  _BYTE v18[24];
  _BYTE v19[32];
  _QWORD aBlock[3];
  ValueMetadata *ObjectType;
  unint64_t v22;
  uint64_t v23;
  char v24[32];

  ObjectType = &type metadata for CRLFeatureFlags;
  v22 = sub_1004DB6DC();
  LOBYTE(aBlock[0]) = 5;
  v1 = isFeatureEnabled(_:)(aBlock);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(aBlock);
  if ((v1 & 1) != 0)
  {
    v2 = (void *)objc_opt_self(NSThread);
    p_cache = (void **)(&OBJC_METACLASS___CRLFreehandDrawingRepTrifurcationContainer + 16);
    if ((objc_msgSend(v2, "isMainThread") & 1) == 0)
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"beginObserving()", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLCloudQuotaMessagingObserver.swift", 95, 2, 42, "This operation must only be performed on the main thread.", 57, 2u, (uint64_t)_swiftEmptyArrayStorage);
      p_cache = &OBJC_METACLASS___CRLFreehandDrawingRepTrifurcationContainer.cache;
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"beginObserving()", 16, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLCloudQuotaMessagingObserver.swift", 95, 2u, 42, (uint64_t)"This operation must only be performed on the main thread.", 57, 2u);
      objc_msgSend((id)objc_opt_self(CRLAssertionHandler), "logFullBacktrace");
    }
    if ((objc_msgSend(v2, "isMainThread") & 1) == 0)
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"isObserving", 11, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLCloudQuotaMessagingObserver.swift", 95, 2, 33, "This operation must only be performed on the main thread.", 57, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"isObserving", 11, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLCloudQuotaMessagingObserver.swift", 95, 2u, 33, (uint64_t)"This operation must only be performed on the main thread.", 57, 2u);
      objc_msgSend((id)objc_opt_self(p_cache + 373), "logFullBacktrace");
    }
    v4 = v0 + 48;
    swift_beginAccess(v0 + 48, v24, 0, 0);
    sub_1004F370C(v0 + 48, (uint64_t)aBlock);
    v5 = ObjectType;
    sub_1004CB800((uint64_t)aBlock, &qword_1013E0230);
    if (v5)
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"beginObserving()", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLCloudQuotaMessagingObserver.swift", 95, 2, 45, "beginning cloud quota in-app messaging observation with an existing observation", 79, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"beginObserving()", 16, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLCloudQuotaMessagingObserver.swift", 95, 2u, 45, (uint64_t)"beginning cloud quota in-app messaging observation with an existing observation", 79, 2u);
    }
    else
    {
      v6 = swift_allocObject(&unk_10128BA58, 24, 7);
      swift_weakInit(v6 + 16, v0);
      v7 = swift_allocObject(&unk_10128BA80, 32, 7);
      *(_QWORD *)(v7 + 16) = sub_100968E7C;
      *(_QWORD *)(v7 + 24) = v6;
      v8 = (void *)objc_opt_self(NSNotificationCenter);
      v9 = objc_msgSend(v8, "defaultCenter", swift_retain(v6).n128_f64[0]);
      v10 = *(_QWORD *)(v0 + 40);
      v22 = (unint64_t)sub_100968EA8;
      v23 = v7;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(_QWORD *)"";
      aBlock[2] = sub_100568280;
      ObjectType = (ValueMetadata *)&unk_10128BA98;
      v11 = _Block_copy(aBlock);
      v12 = v23;
      swift_retain(v7);
      v13 = objc_msgSend(v9, "addObserverForName:object:queue:usingBlock:", v10, 0, 0, v11, swift_release(v12).n128_f64[0]);
      _Block_release(v11);

      ObjectType = (ValueMetadata *)swift_getObjectType(v13);
      aBlock[0] = v13;
      sub_1004D28A4((uint64_t)aBlock, (uint64_t)v19);
      swift_beginAccess(v4, v18, 33, 0);
      sub_10056B738((uint64_t)v19, v4);
      swift_endAccess(v18);
      v14 = objc_msgSend((id)objc_opt_self(ICQInAppMessaging), "shared");
      objc_msgSend(v14, "observeUpdates");

      if (qword_1013DD7F8 != -1)
        swift_once(&qword_1013DD7F8, sub_100A04364);
      swift_beginAccess(&static OS_os_log.crlCloudQuotaMessaging, aBlock, 0, 0);
      v15 = (id)static OS_os_log.crlCloudQuotaMessaging;
      v17 = static os_log_type_t.default.getter(v16);
      sub_100A06EBC((uint64_t)v15, &_mh_execute_header, v17, "enabled cloud quota in-app messaging update observation", 55, 2, (uint64_t)_swiftEmptyArrayStorage);
      swift_release(v6);
      swift_release(v7);

    }
  }
}

double sub_10096751C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  void *v10;
  uint64_t Strong;
  uint64_t v12;
  double result;
  uint64_t v14;
  uint64_t v15;
  id v16;
  __n128 v17;
  uint64_t v18;
  _QWORD v19[2];
  _QWORD v20[5];
  __int128 v21;
  __int128 v22;

  v2 = a2 + 16;
  v3 = Notification.userInfo.getter(a1);
  if (!v3)
  {
    v21 = 0u;
    v22 = 0u;
LABEL_12:
    sub_1004CB800((uint64_t)&v21, &qword_1013E0230);
    goto LABEL_13;
  }
  v4 = v3;
  static String._unconditionallyBridgeFromObjectiveC(_:)(ICQInAppMessageKey);
  v19[0] = v5;
  v19[1] = v6;
  AnyHashable.init<A>(_:)(v19, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v4 + 16) && (v7 = sub_1008432BC((uint64_t)v20), (v8 & 1) != 0))
  {
    sub_1004CB6E8(*(_QWORD *)(v4 + 56) + 32 * v7, (uint64_t)&v21);
  }
  else
  {
    v21 = 0u;
    v22 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1004B89A4((uint64_t)v20);
  if (!*((_QWORD *)&v22 + 1))
    goto LABEL_12;
  v9 = sub_1004B8930(0, &qword_1013FCB78, ICQInAppMessage_ptr);
  if ((swift_dynamicCast(v20, &v21, (char *)&type metadata for Any + 8, v9, 6) & 1) != 0)
  {
    v10 = (void *)v20[0];
    swift_beginAccess(v2, v20, 0, 0);
    Strong = swift_weakLoadStrong(v2);
    if (Strong)
    {
      v12 = Strong;
      sub_100967D28(v10);
      swift_release(v12);
    }

    return result;
  }
LABEL_13:
  swift_beginAccess(v2, v20, 0, 0);
  v14 = swift_weakLoadStrong(v2);
  if (v14)
  {
    v15 = v14;
    if (qword_1013DD7F8 != -1)
      swift_once(&qword_1013DD7F8, sub_100A04364);
    swift_beginAccess(&static OS_os_log.crlCloudQuotaMessaging, &v21, 0, 0);
    v16 = (id)static OS_os_log.crlCloudQuotaMessaging;
    v18 = static os_log_type_t.default.getter(v17);
    sub_100A06EBC((uint64_t)v16, &_mh_execute_header, v18, "received empty cloud quota in-app message; resetting messaging",
      62,
      2,
      (uint64_t)_swiftEmptyArrayStorage);

    sub_100967F54((void *)1);
    *(_QWORD *)&result = swift_release(v15).n128_u64[0];
  }
  return result;
}

uint64_t sub_10096771C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  __n128 v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  void *v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD aBlock[5];
  uint64_t v34;

  v28 = a2;
  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v32 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v30 = *(_QWORD *)(v8 - 8);
  v31 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Notification(0, v11);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  __chkstk_darwin(v12);
  sub_1004B8930(0, (unint64_t *)&qword_1013DE090, OS_dispatch_queue_ptr);
  v29 = static OS_dispatch_queue.main.getter(v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v12);
  v16 = *(unsigned __int8 *)(v13 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = swift_allocObject(&unk_10128BAD0, v17 + v14, v16 | 7);
  *(_QWORD *)(v18 + 16) = v28;
  *(_QWORD *)(v18 + 24) = a3;
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v18 + v17, (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  aBlock[4] = sub_100968F3C;
  v34 = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1005D2FC0;
  aBlock[3] = &unk_10128BAE8;
  v19 = _Block_copy(aBlock);
  v20 = v34;
  swift_retain(a3);
  v21 = swift_release(v20);
  static DispatchQoS.unspecified.getter(v21);
  aBlock[0] = _swiftEmptyArrayStorage;
  v22 = sub_1004CB65C();
  v23 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
  v24 = sub_100503E88();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v23, v24, v5, v22);
  v25 = (void *)v29;
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v7, v19);
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v32 + 8))(v7, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v10, v31);
}

void sub_10096797C()
{
  uint64_t v0;
  char v1;
  void *v2;
  ValueMetadata *v3;
  id v4;
  ValueMetadata *v5;
  _QWORD *v6;
  uint64_t v7;
  id v8;
  id v9;
  __n128 v10;
  uint64_t v11;
  _BYTE v12[24];
  __int128 v13;
  __int128 v14;
  _BYTE v15[24];
  __int128 v16;
  ValueMetadata *v17;
  unint64_t v18;

  v17 = &type metadata for CRLFeatureFlags;
  v18 = sub_1004DB6DC();
  LOBYTE(v16) = 5;
  v1 = isFeatureEnabled(_:)(&v16);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v16);
  if ((v1 & 1) != 0)
  {
    v2 = (void *)objc_opt_self(NSThread);
    if ((objc_msgSend(v2, "isMainThread") & 1) == 0)
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"isObserving", 11, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLCloudQuotaMessagingObserver.swift", 95, 2, 33, "This operation must only be performed on the main thread.", 57, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"isObserving", 11, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLCloudQuotaMessagingObserver.swift", 95, 2u, 33, (uint64_t)"This operation must only be performed on the main thread.", 57, 2u);
      objc_msgSend((id)objc_opt_self(CRLAssertionHandler), "logFullBacktrace");
    }
    swift_beginAccess(v0 + 48, v15, 0, 0);
    sub_1004F370C(v0 + 48, (uint64_t)&v16);
    v3 = v17;
    sub_1004CB800((uint64_t)&v16, &qword_1013E0230);
    if (v3)
    {
      if ((objc_msgSend(v2, "isMainThread") & 1) == 0)
      {
        sub_100757E04(&_mh_execute_header, (uint64_t)"endObserving()", 14, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLCloudQuotaMessagingObserver.swift", 95, 2, 70, "This operation must only be performed on the main thread.", 57, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"endObserving()", 14, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLCloudQuotaMessagingObserver.swift", 95, 2u, 70, (uint64_t)"This operation must only be performed on the main thread.", 57, 2u);
        objc_msgSend((id)objc_opt_self(CRLAssertionHandler), "logFullBacktrace");
      }
      sub_1004F370C(v0 + 48, (uint64_t)&v13);
      if (*((_QWORD *)&v14 + 1))
      {
        sub_10050CB14(&v13, &v16);
        v4 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
        v5 = v17;
        v6 = sub_1004BB5A4(&v16, (uint64_t)v17);
        v7 = _bridgeAnythingToObjectiveC<A>(_:)(v6, v5);
        objc_msgSend(v4, "removeObserver:name:object:", v7, *(_QWORD *)(v0 + 40), 0);

        swift_unknownObjectRelease(v7);
        v13 = 0u;
        v14 = 0u;
        swift_beginAccess(v0 + 48, v12, 33, 0);
        sub_10056B738((uint64_t)&v13, v0 + 48);
        swift_endAccess(v12);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v16);
      }
      else
      {
        sub_1004CB800((uint64_t)&v13, &qword_1013E0230);
      }
      v8 = objc_msgSend((id)objc_opt_self(ICQInAppMessaging), "shared");
      objc_msgSend(v8, "stopObservingUpdates");

      if (qword_1013DD7F8 != -1)
        swift_once(&qword_1013DD7F8, sub_100A04364);
      swift_beginAccess(&static OS_os_log.crlCloudQuotaMessaging, &v16, 0, 0);
      v9 = (id)static OS_os_log.crlCloudQuotaMessaging;
      v11 = static os_log_type_t.default.getter(v10);
      sub_100A06EBC((uint64_t)v9, &_mh_execute_header, v11, "disabled cloud quota in-app messaging update observation", 56, 2, (uint64_t)_swiftEmptyArrayStorage);

    }
  }
}

void sub_100967D28(void *a1)
{
  void *v2;
  uint64_t v3;
  uint64_t inited;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  char v25;
  id v26;
  uint64_t v27;
  _BYTE v28[24];

  if (qword_1013DD7F8 != -1)
    swift_once(&qword_1013DD7F8, sub_100A04364);
  swift_beginAccess(&static OS_os_log.crlCloudQuotaMessaging, v28, 0, 0);
  v2 = (void *)static OS_os_log.crlCloudQuotaMessaging;
  v3 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v3, &v27);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v5 = v2;
  v6 = objc_msgSend(a1, "reason");
  if (v6)
  {
    v7 = v6;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
    v9 = v8;
    v11 = v10;

  }
  else
  {
    v11 = 0xE900000000000029;
    v9 = 0x6E776F6E6B6E7528;
  }
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v9;
  *(_QWORD *)(inited + 40) = v11;
  v13 = static os_log_type_t.default.getter(v12);
  sub_100A06EBC((uint64_t)v5, &_mh_execute_header, v13, "received cloud quota in-app message for reason %@", 49, 2, inited);
  swift_setDeallocating(inited);
  v14 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v14);

  v15 = objc_msgSend(a1, "reason");
  if (v15)
  {
    v16 = v15;
    v17 = (void *)ICQUIInAppMessageReasoniCloudAlmostFull;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
    v19 = v18;
    v21 = v20;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
    if (v19 == v22 && v21 == v23)
    {
      v24 = v17;

      swift_bridgeObjectRelease_n(v21, 2);
    }
    else
    {
      v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v21, v22, v23, 0);
      v26 = v17;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v25 & 1) == 0)
        return;
    }
    sub_100967F54(a1);
  }
}

void sub_100967F54(void *a1)
{
  uint64_t v1;
  void *v3;
  uint64_t Strong;
  uint64_t v5;
  void *v6;

  if ((objc_msgSend((id)objc_opt_self(NSThread), "isMainThread") & 1) == 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"updateEvent(to:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLCloudQuotaMessagingObserver.swift", 95, 2, 95, "This operation must only be performed on the main thread.", 57, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateEvent(to:)", 16, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLCloudQuotaMessagingObserver.swift", 95, 2u, 95, (uint64_t)"This operation must only be performed on the main thread.", 57, 2u);
    objc_msgSend((id)objc_opt_self(CRLAssertionHandler), "logFullBacktrace");
  }
  v3 = *(void **)(v1 + 32);
  *(_QWORD *)(v1 + 32) = a1;
  sub_100968E38(a1);
  sub_100968E48(v3);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 16);
  if (Strong)
  {
    v5 = Strong;
    v6 = *(void **)(v1 + 32);
    if ((unint64_t)v6 > 1)
    {
      sub_100C2E184(v6);
      swift_unknownObjectRelease(v5);
      sub_100968E48(v6);
    }
    else
    {
      swift_unknownObjectRelease(Strong);
    }
  }
}

uint64_t sub_1009680D8(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  Swift::String v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  void *v23;
  uint64_t v24;
  Swift::String v25;
  uint64_t v26;
  id v27;
  NSString v28;
  void *v29;
  uint64_t v30;
  uint64_t inited;
  unint64_t v32;
  uint64_t v33;
  id v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  _BOOL8 v38;
  uint64_t v39;
  char *v40;
  __n128 v41;
  double v42;
  void (*v43)(char *, uint64_t);
  void *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  id v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v52;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v4 = sub_1004B804C(&qword_1013E04F0);
  __chkstk_darwin(v4);
  v6 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v55 - 8);
  __chkstk_darwin(v55);
  v9 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v11 = __chkstk_darwin(v10).n128_u64[0];
  v13 = (char *)&v54 - v12;
  v14 = objc_msgSend(a1, "reason", v11);
  v54 = v13;
  if (v14)
  {
    v15 = v14;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
    v57 = v16;
    v58 = v17;

  }
  else
  {
    v58 = 0xE900000000000029;
    v57 = 0x6E776F6E6B6E7528;
  }
  v61 = UUID.uuidString.getter(v14);
  v62 = v18;
  swift_bridgeObjectRetain(v18);
  v19._countAndFlagsBits = 58;
  v19._object = (void *)0xE100000000000000;
  String.append(_:)(v19);
  swift_bridgeObjectRelease();
  v20 = v61;
  v21 = v62;
  v22 = (uint64_t *)(a2 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  v24 = *v22;
  v23 = (void *)v22[1];
  v61 = v20;
  v62 = v21;
  swift_bridgeObjectRetain(v21);
  v25._countAndFlagsBits = v24;
  v25._object = v23;
  String.append(_:)(v25);
  swift_bridgeObjectRelease();
  v26 = v62;
  v56 = v61;
  v27 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  sub_1009685CC(a2);
  v28 = String._bridgeToObjectiveC()();
  LODWORD(v20) = objc_msgSend(v27, "BOOLForKey:", v28, swift_bridgeObjectRelease().n128_f64[0]);

  if ((_DWORD)v20)
  {
    if (qword_1013DD7F8 != -1)
      swift_once(&qword_1013DD7F8, sub_100A04364);
    swift_beginAccess(&static OS_os_log.crlCloudQuotaMessaging, &v61, 0, 0);
    v29 = (void *)static OS_os_log.crlCloudQuotaMessaging;
    v30 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v30, &v59);
    *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v32 = sub_1004CFC2C();
    *(_QWORD *)(inited + 32) = v57;
    *(_QWORD *)(inited + 40) = v58;
    *(_QWORD *)(inited + 96) = &type metadata for String;
    *(_QWORD *)(inited + 104) = v32;
    v33 = v56;
    *(_QWORD *)(inited + 64) = v32;
    *(_QWORD *)(inited + 72) = v33;
    *(_QWORD *)(inited + 80) = v26;
    v34 = v29;
    v36 = static os_log_type_t.default.getter(v35);
    sub_100A06EBC((uint64_t)v34, &_mh_execute_header, v36, "cloud quota message alert for reason %@ was already shown for board %@", 70, 2, inited);
    swift_setDeallocating(inited);
    v37 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 2, v37);

    return 0;
  }
  else
  {
    sub_10096878C(a1, (uint64_t)v6);
    v39 = v55;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v6, 1, v55) == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1004CB800((uint64_t)v6, &qword_1013E04F0);
      return 1;
    }
    else
    {
      v40 = v54;
      v41.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v7 + 32))(v54, v6, v39);
      static Date.now.getter(v41);
      v42 = Date.timeIntervalSince(_:)(v40);
      v43 = *(void (**)(char *, uint64_t))(v7 + 8);
      v43(v9, v39);
      v38 = v42 > 604800.0;
      if (qword_1013DD7F8 != -1)
        swift_once(&qword_1013DD7F8, sub_100A04364);
      swift_beginAccess(&static OS_os_log.crlCloudQuotaMessaging, &v61, 0, 0);
      v44 = (void *)static OS_os_log.crlCloudQuotaMessaging;
      v45 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v46 = swift_initStackObject(v45, &v60);
      *(_OWORD *)(v46 + 16) = xmmword_100EF5550;
      *(_QWORD *)(v46 + 56) = &type metadata for String;
      v47 = sub_1004CFC2C();
      *(_QWORD *)(v46 + 32) = v57;
      *(_QWORD *)(v46 + 40) = v58;
      *(_QWORD *)(v46 + 96) = &type metadata for String;
      *(_QWORD *)(v46 + 104) = v47;
      v48 = v56;
      *(_QWORD *)(v46 + 64) = v47;
      *(_QWORD *)(v46 + 72) = v48;
      *(_QWORD *)(v46 + 80) = v26;
      *(_QWORD *)(v46 + 136) = &type metadata for Bool;
      *(_QWORD *)(v46 + 144) = &protocol witness table for Bool;
      *(_BYTE *)(v46 + 112) = v42 > 604800.0;
      v49 = v44;
      v51 = static os_log_type_t.default.getter(v50);
      sub_100A06EBC((uint64_t)v49, &_mh_execute_header, v51, "cloud quota message alert for reason %@ and board %@ timeout is elapsed = %d", 76, 2, v46);
      swift_setDeallocating(v46);
      v52 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(v46 + 32, 3, v52);

      v43(v54, v39);
    }
  }
  return v38;
}

uint64_t sub_1009685CC(uint64_t a1)
{
  void *v1;
  void *v3;
  Swift::String v4;
  uint64_t *v5;
  uint64_t v6;
  void *v7;
  Swift::String v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Swift::String v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  Swift::String v20;
  Swift::String v21;
  Swift::String v22;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;

  v24 = UUID.uuidString.getter(a1);
  v26 = v3;
  swift_bridgeObjectRetain(v3);
  v4._countAndFlagsBits = 58;
  v4._object = (void *)0xE100000000000000;
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  v5 = (uint64_t *)(a1 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  v6 = *v5;
  v7 = (void *)v5[1];
  swift_bridgeObjectRetain(v26);
  v8._countAndFlagsBits = v6;
  v8._object = v7;
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  v10 = v24;
  v9 = v26;
  static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("CRLCloudQuotaMessageAlertWasShownForReasonAndBoard"));
  v25 = v11;
  v27 = v12;
  swift_bridgeObjectRetain(v12);
  v13._countAndFlagsBits = 45;
  v13._object = (void *)0xE100000000000000;
  String.append(_:)(v13);
  v14 = objc_msgSend(v1, "reason", swift_bridgeObjectRelease().n128_f64[0]);
  if (v14)
  {
    v15 = v14;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
    v17 = v16;
    v19 = v18;

  }
  else
  {
    v19 = (void *)0xE900000000000029;
    v17 = 0x6E776F6E6B6E7528;
  }
  swift_bridgeObjectRetain(v27);
  v20._countAndFlagsBits = v17;
  v20._object = v19;
  String.append(_:)(v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain(v27);
  v21._countAndFlagsBits = 45;
  v21._object = (void *)0xE100000000000000;
  String.append(_:)(v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain(v27);
  v22._countAndFlagsBits = v10;
  v22._object = v9;
  String.append(_:)(v22);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v25;
}

uint64_t sub_10096878C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  Swift::String v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  Swift::String v14;
  NSString v15;
  id v16;
  uint64_t v17;
  int v18;
  uint64_t v20;
  _OWORD v21[2];
  _BYTE v22[24];
  uint64_t v23;

  v4 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("CRLCloudQuotaMessageAlertLastShownDateForReason"));
  *(_QWORD *)&v21[0] = v5;
  *((_QWORD *)&v21[0] + 1) = v6;
  swift_bridgeObjectRetain(v6);
  v7._countAndFlagsBits = 45;
  v7._object = (void *)0xE100000000000000;
  String.append(_:)(v7);
  v8 = objc_msgSend(a1, "reason", swift_bridgeObjectRelease().n128_f64[0]);
  if (v8)
  {
    v9 = v8;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v11 = v10;
    v13 = v12;

  }
  else
  {
    v13 = (void *)0xE900000000000029;
    v11 = 0x6E776F6E6B6E7528;
  }
  swift_bridgeObjectRetain(*((_QWORD *)&v21[0] + 1));
  v14._countAndFlagsBits = v11;
  v14._object = v13;
  String.append(_:)(v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15 = String._bridgeToObjectiveC()();
  v16 = objc_msgSend(v4, "objectForKey:", v15, swift_bridgeObjectRelease().n128_f64[0], v21[0]);

  if (v16)
  {
    _bridgeAnyObjectToAny(_:)(v21, v16);
    swift_unknownObjectRelease(v16);
  }
  else
  {
    memset(v21, 0, sizeof(v21));
  }
  sub_1004D28A4((uint64_t)v21, (uint64_t)v22);
  if (v23)
  {
    v17 = type metadata accessor for Date(0);
    v18 = swift_dynamicCast(a2, v22, (char *)&type metadata for Any + 8, v17, 6);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a2, v18 ^ 1u, 1, v17);
  }
  else
  {
    sub_1004CB800((uint64_t)v22, &qword_1013E0230);
    v20 = type metadata accessor for Date(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a2, 1, 1, v20);
  }
}

uint64_t sub_100968998()
{
  uint64_t v0;

  sub_1004CBB0C(v0 + 16);
  sub_100968E48(*(id *)(v0 + 32));

  sub_1004CB800(v0 + 48, &qword_1013E0230);
  return swift_deallocClassInstance(v0, 88, 7);
}

uint64_t type metadata accessor for CRLCloudQuotaMessagingObserver()
{
  return objc_opt_self(_TtC8Freeform30CRLCloudQuotaMessagingObserver);
}

_QWORD *initializeBufferWithCopyOfBuffer for CRLCloudQuotaMessagingEvent(_QWORD *a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF)
    v4 = v3;
  *a1 = v3;
  return a1;
}

void destroy for CRLCloudQuotaMessagingEvent(void **a1)
{
  void *v1;

  v1 = *a1;
  if ((unint64_t)v1 >= 0xFFFFFFFF)

}

void **assignWithCopy for CRLCloudQuotaMessagingEvent(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
  {
    if ((unint64_t)v4 >= 0xFFFFFFFF)
    {
      *a1 = v4;
      v6 = v4;
      return a1;
    }
LABEL_7:
    *a1 = v4;
    return a1;
  }
  if ((unint64_t)v4 < 0xFFFFFFFF)
  {

    v4 = *a2;
    goto LABEL_7;
  }
  *a1 = v4;
  v5 = v4;

  return a1;
}

void **assignWithTake for CRLCloudQuotaMessagingEvent(void **a1, unint64_t *a2)
{
  void *v3;
  unint64_t v4;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
    goto LABEL_6;
  if (v4 < 0xFFFFFFFF)
  {

LABEL_6:
    *a1 = (void *)v4;
    return a1;
  }
  *a1 = (void *)v4;

  return a1;
}

uint64_t getEnumTagSinglePayload for CRLCloudQuotaMessagingEvent(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for CRLCloudQuotaMessagingEvent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 1;
  }
  return result;
}

uint64_t sub_100968BDC(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_100968BF4(_QWORD *result, int a2)
{
  unsigned int v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2)
      return result;
    v2 = a2 - 1;
  }
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for CRLCloudQuotaMessagingEvent()
{
  return &type metadata for CRLCloudQuotaMessagingEvent;
}

void sub_100968C24(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  __n128 v10;
  NSDate v11;
  uint64_t v12;
  uint64_t v13;
  Swift::String v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  Swift::String v24;
  NSString v25;
  id v26;
  NSString v27;
  uint64_t v28;
  uint64_t v29;

  v4 = type metadata accessor for Date(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (void *)objc_opt_self(NSUserDefaults);
  v9 = objc_msgSend(v8, "standardUserDefaults");
  static Date.now.getter(v10);
  v11.super.isa = Date._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("CRLCloudQuotaMessageAlertLastShownDateForReason"));
  v28 = v12;
  v29 = v13;
  swift_bridgeObjectRetain(v13);
  v14._countAndFlagsBits = 45;
  v14._object = (void *)0xE100000000000000;
  String.append(_:)(v14);
  *(_QWORD *)&v15 = swift_bridgeObjectRelease().n128_u64[0];
  v17 = v28;
  v16 = v29;
  v18 = objc_msgSend(a1, "reason", v15);
  if (v18)
  {
    v19 = v18;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    v21 = v20;
    v23 = v22;

  }
  else
  {
    v23 = (void *)0xE900000000000029;
    v21 = 0x6E776F6E6B6E7528;
  }
  v28 = v17;
  v29 = v16;
  swift_bridgeObjectRetain(v16);
  v24._countAndFlagsBits = v21;
  v24._object = v23;
  String.append(_:)(v24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v25 = String._bridgeToObjectiveC()();
  objc_msgSend(v9, "setObject:forKey:", v11.super.isa, v25, swift_bridgeObjectRelease().n128_f64[0]);

  v26 = objc_msgSend(v8, "standardUserDefaults");
  sub_1009685CC(a2);
  v27 = String._bridgeToObjectiveC()();
  objc_msgSend(v26, "setBool:forKey:", 1, v27, swift_bridgeObjectRelease().n128_f64[0]);

}

id sub_100968E38(id result)
{
  if ((unint64_t)result >= 2)
    return result;
  return result;
}

void sub_100968E48(id a1)
{
  if ((unint64_t)a1 >= 2)

}

uint64_t sub_100968E58()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_100968E7C(uint64_t a1)
{
  uint64_t v1;

  return sub_10096751C(a1, v1);
}

uint64_t sub_100968E84()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100968EA8(uint64_t a1)
{
  uint64_t v1;

  return sub_10096771C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

double sub_100968EB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

double sub_100968EC0(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_100968EC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;

  v3 = type metadata accessor for Notification(0, a2);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = v6 + *(_QWORD *)(v4 + 64);
  v8 = v5 | 7;
  v9 = swift_release(*(_QWORD *)(v2 + 24));
  (*(void (**)(uint64_t, uint64_t, __n128))(v4 + 8))(v2 + v6, v3, v9);
  return swift_deallocObject(v2, v7, v8);
}

uint64_t sub_100968F3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Notification(0, a2) - 8) + 80);
  return (*(uint64_t (**)(uint64_t))(v2 + 16))(v2 + ((v3 + 32) & ~v3));
}

void sub_100968F88(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  NSString v7;
  NSString v8;
  _QWORD *v9;
  void *v10;
  _QWORD v11[5];
  _QWORD *v12;

  v7 = String._bridgeToObjectiveC()();
  (*(void (**)(uint64_t, uint64_t))(a3 + 8))(a2, a3);
  v8 = String._bridgeToObjectiveC()();
  objc_msgSend(a1, "startedSubTest:forTest:", v7, v8, swift_bridgeObjectRelease().n128_f64[0]);

  v9 = (_QWORD *)swift_allocObject(&unk_10128C0E8, 48, 7);
  v9[2] = a2;
  v9[3] = a3;
  v9[4] = a1;
  v9[5] = v3;
  v11[4] = sub_10096EDD4;
  v12 = v9;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = *(_QWORD *)"";
  v11[2] = sub_1005D2FC0;
  v11[3] = &unk_10128C100;
  v10 = _Block_copy(v11);
  objc_msgSend(a1, "installCACommitCompletionBlock:", v10, swift_release(v12).n128_f64[0]);
  _Block_release(v10);
}

void sub_1009690C8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  NSString v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  NSString v11;
  NSString v12;
  uint64_t v13;
  uint64_t v14;
  id v15;

  v7 = String._bridgeToObjectiveC()();
  v8 = *(void (**)(uint64_t, uint64_t))(a4 + 8);
  v8(a3, a4);
  v10 = v9;
  v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v10);
  objc_msgSend(a1, "finishedSubTest:forTest:", v7, v11);

  v12 = String._bridgeToObjectiveC()();
  v8(a3, a4);
  v14 = v13;
  v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v14);
  objc_msgSend(a1, "startedSubTest:forTest:", v12, v15);

}

void sub_1009691DC(void *a1, uint64_t a2, uint64_t a3)
{
  NSString v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v6 = String._bridgeToObjectiveC()();
  (*(void (**)(uint64_t, uint64_t))(a3 + 8))(a2, a3);
  v8 = v7;
  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v8);
  objc_msgSend(a1, "finishedSubTest:forTest:", v6, v9);

}

void sub_10096927C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  unsigned __int8 *v20;
  unsigned int v21;
  uint64_t v22;
  NSString v23;
  uint64_t v24;
  void *v25;
  _QWORD *v26;
  void *v27;
  _QWORD *v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  unsigned __int8 *v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  unsigned __int8 *v37;
  unsigned int v38;
  uint64_t v39;
  char v40;
  void **aBlock;
  uint64_t v42;
  double (*v43)(uint64_t, uint64_t);
  void *v44;
  uint64_t (*v45)();
  _QWORD *v46;
  uint64_t v47;
  unint64_t v48;
  __int128 v49;
  __int128 v50;

  if (qword_1013DD398 != -1)
    swift_once(&qword_1013DD398, sub_1008B6E9C);
  v47 = 0x6F69746172657469;
  v48 = 0xEA0000000000736ELL;
  AnyHashable.init<A>(_:)(&v47, &type metadata for String, &protocol witness table for String);
  swift_beginAccess(&qword_10147FC28, &v47, 32, 0);
  v7 = qword_10147FC28;
  if (*(_QWORD *)(qword_10147FC28 + 16) && (v8 = sub_1008432BC((uint64_t)&aBlock), (v9 & 1) != 0))
  {
    sub_1004CB6E8(*(_QWORD *)(v7 + 56) + 32 * v8, (uint64_t)&v49);
  }
  else
  {
    v49 = 0u;
    v50 = 0u;
  }
  swift_endAccess(&v47);
  sub_1004B89A4((uint64_t)&aBlock);
  if (*((_QWORD *)&v50 + 1))
  {
    if (swift_dynamicCast(&v47, &v49, (char *)&type metadata for Any + 8, &type metadata for String, 6))
    {
      v10 = v47;
      v11 = v48;
      goto LABEL_12;
    }
  }
  else
  {
    sub_1004CB800((uint64_t)&v49, &qword_1013E0230);
  }
  v11 = 0xE100000000000000;
  v10 = 53;
LABEL_12:
  v12 = HIBYTE(v11) & 0xF;
  v13 = v10 & 0xFFFFFFFFFFFFLL;
  if ((v11 & 0x2000000000000000) != 0)
    v14 = HIBYTE(v11) & 0xF;
  else
    v14 = v10 & 0xFFFFFFFFFFFFLL;
  if (!v14)
  {
    swift_bridgeObjectRelease();
    goto LABEL_67;
  }
  if ((v11 & 0x1000000000000000) != 0)
    goto LABEL_68;
  if ((v11 & 0x2000000000000000) == 0)
  {
    if ((v10 & 0x1000000000000000) != 0)
      v15 = (unsigned __int8 *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v15 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v10, v11);
    v16 = (uint64_t)sub_10096E5C4(v15, v13, 10);
    v18 = v17 & 1;
    goto LABEL_45;
  }
  aBlock = (void **)v10;
  v42 = v11 & 0xFFFFFFFFFFFFFFLL;
  if (v10 == 43)
  {
    if (v12)
    {
      if (v12 != 1 && (BYTE1(v10) - 48) <= 9u)
      {
        v16 = (BYTE1(v10) - 48);
        if (v12 == 2)
          goto LABEL_44;
        if ((BYTE2(v10) - 48) <= 9u)
        {
          v16 = 10 * (BYTE1(v10) - 48) + (BYTE2(v10) - 48);
          v19 = v12 - 3;
          if (v19)
          {
            v20 = (unsigned __int8 *)&aBlock + 3;
            while (1)
            {
              v21 = *v20 - 48;
              if (v21 > 9)
                goto LABEL_42;
              v22 = 10 * v16;
              if ((unsigned __int128)(v16 * (__int128)10) >> 64 != (10 * v16) >> 63)
                goto LABEL_42;
              v16 = v22 + v21;
              if (__OFADD__(v22, v21))
                goto LABEL_42;
              v18 = 0;
              ++v20;
              if (!--v19)
                goto LABEL_45;
            }
          }
          goto LABEL_44;
        }
      }
      goto LABEL_42;
    }
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  if (v10 != 45)
  {
    if (v12 && (v10 - 48) <= 9u)
    {
      v16 = (v10 - 48);
      if (v12 == 1)
        goto LABEL_44;
      if ((BYTE1(v10) - 48) <= 9u)
      {
        v16 = 10 * (v10 - 48) + (BYTE1(v10) - 48);
        v32 = v12 - 2;
        if (v32)
        {
          v33 = (unsigned __int8 *)&aBlock + 2;
          while (1)
          {
            v34 = *v33 - 48;
            if (v34 > 9)
              goto LABEL_42;
            v35 = 10 * v16;
            if ((unsigned __int128)(v16 * (__int128)10) >> 64 != (10 * v16) >> 63)
              goto LABEL_42;
            v16 = v35 + v34;
            if (__OFADD__(v35, v34))
              goto LABEL_42;
            v18 = 0;
            ++v33;
            if (!--v32)
              goto LABEL_45;
          }
        }
        goto LABEL_44;
      }
    }
LABEL_42:
    v16 = 0;
    v18 = 1;
    goto LABEL_45;
  }
  if (!v12)
  {
    __break(1u);
    goto LABEL_71;
  }
  if (v12 == 1 || (BYTE1(v10) - 48) > 9u)
    goto LABEL_42;
  if (v12 != 2)
  {
    if ((BYTE2(v10) - 48) <= 9u)
    {
      v16 = -10 * (BYTE1(v10) - 48) - (BYTE2(v10) - 48);
      v36 = v12 - 3;
      if (v36)
      {
        v37 = (unsigned __int8 *)&aBlock + 3;
        while (1)
        {
          v38 = *v37 - 48;
          if (v38 > 9)
            goto LABEL_42;
          v39 = 10 * v16;
          if ((unsigned __int128)(v16 * (__int128)10) >> 64 != (10 * v16) >> 63)
            goto LABEL_42;
          v16 = v39 - v38;
          if (__OFSUB__(v39, v38))
            goto LABEL_42;
          v18 = 0;
          ++v37;
          if (!--v36)
            goto LABEL_45;
        }
      }
LABEL_44:
      v18 = 0;
      goto LABEL_45;
    }
    goto LABEL_42;
  }
  v18 = 0;
  v16 = -(uint64_t)(BYTE1(v10) - 48);
LABEL_45:
  while (1)
  {
    swift_bridgeObjectRelease();
    if ((v18 & 1) == 0)
      break;
LABEL_67:
    __break(1u);
LABEL_68:
    v16 = (uint64_t)sub_10096E4E0(v10, v11, 10);
    v18 = v40;
  }
  sub_1007BE5D4();
  v23 = String._bridgeToObjectiveC()();
  objc_msgSend(a2, "startedTest:", v23, swift_bridgeObjectRelease().n128_f64[0]);

  v24 = swift_allocObject(&unk_10128BDF0, 32, 7);
  *(_QWORD *)(v24 + 16) = a2;
  *(_QWORD *)(v24 + 24) = a4;
  if (v16 < 1)
  {
    v31 = a2;
    sub_1009697BC(v31);

    swift_release(v24);
    return;
  }
  v25 = *(void **)(a3 + 16);
  if (v25)
  {
    v26 = (_QWORD *)swift_allocObject(&unk_10128BE18, 56, 7);
    v26[2] = 4;
    v26[3] = a3;
    v26[4] = v16;
    v26[5] = sub_10096EC68;
    v26[6] = v24;
    v45 = sub_10096EC74;
    v46 = v26;
    aBlock = _NSConcreteStackBlock;
    v42 = *(_QWORD *)"";
    v43 = sub_1006084F4;
    v44 = &unk_10128BE30;
    v27 = _Block_copy(&aBlock);
    v28 = v46;
    v29 = a2;
    v30 = v25;
    swift_retain(a3);
    swift_retain(v24);
    objc_msgSend(v30, "rotateIfNeeded:completion:", 4, v27, swift_release(v28).n128_f64[0]);
    _Block_release(v27);

    swift_release(v24);
    return;
  }
LABEL_72:
  __break(1u);
}

void sub_1009697BC(void *a1)
{
  id v2;

  sub_1007BE5D4();
  v2 = String._bridgeToObjectiveC()();
  objc_msgSend(a1, "finishedTest:", v2, swift_bridgeObjectRelease().n128_f64[0]);

}

uint64_t sub_100969820(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __n128 v18;
  void *v19;
  _QWORD *v20;
  void *v21;
  _QWORD *v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD aBlock[5];
  _QWORD *v33;

  v11 = type metadata accessor for DispatchWorkItemFlags(0);
  v31 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for DispatchQoS(0);
  v29 = *(_QWORD *)(v14 - 8);
  v30 = v14;
  __chkstk_darwin(v14);
  v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 == 1)
    v17 = 4;
  else
    v17 = 1;
  sub_100503E34();
  v19 = (void *)static OS_dispatch_queue.main.getter(v18);
  v20 = (_QWORD *)swift_allocObject(&unk_10128BE68, 56, 7);
  v20[2] = a3;
  v20[3] = v17;
  v20[4] = a4;
  v20[5] = a5;
  v20[6] = a6;
  aBlock[4] = sub_10096ECA4;
  v33 = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1005D2FC0;
  aBlock[3] = &unk_10128BE80;
  v21 = _Block_copy(aBlock);
  v22 = v33;
  swift_retain(a3);
  swift_retain(a6);
  v23 = swift_release(v22);
  static DispatchQoS.unspecified.getter(v23);
  aBlock[0] = _swiftEmptyArrayStorage;
  v24 = sub_1004B7878((unint64_t *)&qword_1013E1D20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v25 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
  v26 = sub_100503E88();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v25, v26, v11, v24);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v16, v13, v21);
  _Block_release(v21);

  (*(void (**)(char *, uint64_t))(v31 + 8))(v13, v11);
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v16, v30);
}

void sub_100969A38(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v5;
  void *v9;
  _QWORD *v11;
  void *v12;
  _QWORD *v13;
  id v14;
  _QWORD v15[5];
  _QWORD *v16;

  v5 = a3 - 1;
  if (__OFSUB__(a3, 1))
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return;
  }
  if (v5 >= 1)
  {
    v9 = *(void **)(a1 + 16);
    if (v9)
    {
      v11 = (_QWORD *)swift_allocObject(&unk_10128BEB8, 56, 7);
      v11[2] = a2;
      v11[3] = a1;
      v11[4] = v5;
      v11[5] = a4;
      v11[6] = a5;
      v15[4] = sub_10096EC74;
      v16 = v11;
      v15[0] = _NSConcreteStackBlock;
      v15[1] = *(_QWORD *)"";
      v15[2] = sub_1006084F4;
      v15[3] = &unk_10128BED0;
      v12 = _Block_copy(v15);
      v13 = v16;
      v14 = v9;
      swift_retain(a1);
      swift_retain(a5);
      objc_msgSend(v14, "rotateIfNeeded:completion:", a2, v12, swift_release(v13).n128_f64[0]);
      _Block_release(v12);

      return;
    }
    goto LABEL_8;
  }
  a4();
}

uint64_t sub_100969B4C()
{
  uint64_t v0;
  uint64_t result;

  result = swift_allocObject(v0, 25, 7);
  *(_QWORD *)(result + 16) = 0;
  *(_BYTE *)(result + 24) = 1;
  return result;
}

void sub_100969B78(void *a1)
{
  NSString v2;
  id v3;

  sub_1007BE5D4();
  v2 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  _StringGuts.grow(_:)(24);
  swift_bridgeObjectRelease();
  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(a1, "failedTest:withFailure:", v2, v3);

}

uint64_t sub_100969C28(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  id v18;
  __n128 v19;
  __n128 v20;
  void (*v21)(char *, uint64_t);
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  id v27;
  __n128 v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char *v34;
  void *v35;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD aBlock[5];
  uint64_t v46;

  v2 = v1;
  v41 = type metadata accessor for DispatchWorkItemFlags(0);
  v44 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v40 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v42 = *(_QWORD *)(v5 - 8);
  v43 = v5;
  __chkstk_darwin(v5);
  v39 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchTimeInterval(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (uint64_t *)((char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v37 = type metadata accessor for DispatchTime(0);
  v11 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v37);
  v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v37 - v15;
  v17 = *(void **)(v2 + 16);
  *(_QWORD *)(v2 + 16) = a1;
  v18 = a1;

  *(_BYTE *)(v2 + 24) = 1;
  sub_100503E34();
  v38 = static OS_dispatch_queue.main.getter(v19);
  static DispatchTime.now()(v20);
  *v10 = 1;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for DispatchTimeInterval.seconds(_:), v7);
  DispatchTime.advanced(by:)(v10);
  (*(void (**)(_QWORD *, uint64_t))(v8 + 8))(v10, v7);
  v21 = *(void (**)(char *, uint64_t))(v11 + 8);
  v22 = v13;
  v23 = v37;
  v21(v22, v37);
  v24 = swift_allocObject(&unk_10128BB70, 32, 7);
  *(_QWORD *)(v24 + 16) = v2;
  *(_QWORD *)(v24 + 24) = v18;
  aBlock[4] = sub_10096E004;
  v46 = v24;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1005D2FC0;
  aBlock[3] = &unk_10128BB88;
  v25 = _Block_copy(aBlock);
  v26 = v46;
  v27 = v18;
  swift_retain(v2);
  v28 = swift_release(v26);
  v29 = v39;
  static DispatchQoS.unspecified.getter(v28);
  aBlock[0] = _swiftEmptyArrayStorage;
  v30 = sub_1004B7878((unint64_t *)&qword_1013E1D20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v31 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
  v32 = sub_100503E88();
  v34 = v40;
  v33 = v41;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v31, v32, v41, v30);
  v35 = (void *)v38;
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v16, v29, v34, v25);
  _Block_release(v25);

  (*(void (**)(char *, uint64_t))(v44 + 8))(v34, v33);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v29, v43);
  return ((uint64_t (*)(char *, uint64_t))v21)(v16, v23);
}

void sub_100969F3C(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t Strong;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  id v37;
  void *v38;
  id v39;
  void *v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  __n128 v51;
  char *v52;
  void (*v53)(char *, uint64_t);
  _QWORD *v54;
  uint64_t v55;
  void *v56;
  void *v57;
  _QWORD *v58;
  id v59;
  id v60;
  __n128 v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  id v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  id v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83[24];
  _QWORD aBlock[5];
  _QWORD *v85;

  v76 = a1;
  v77 = a2;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v82 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v79 = (char *)&v69 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DispatchQoS(0);
  v80 = *(_QWORD *)(v4 - 8);
  v81 = v4;
  __chkstk_darwin(v4);
  v78 = (char *)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchTimeInterval(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (id *)((char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = type metadata accessor for DispatchTime(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v69 - v15;
  v17 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v17);
  v74 = (char *)&v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v20 = objc_msgSend(v19, "delegate");

  if (!v20)
  {
    __break(1u);
    return;
  }
  v21 = type metadata accessor for CRLiOSAppDelegate();
  swift_dynamicCastClassUnconditional(v20, v21, 0, 0, 0);
  sub_10060A6B8();
  v23 = v22;
  swift_unknownObjectRelease(v20);
  if (v23)
  {
    v75 = v2;
    v24 = sub_1009038CC();
    v25 = objc_msgSend(v24, "presentedViewController");

    if (v25)
    {
      v26 = objc_opt_self(UINavigationController);
      v27 = (void *)swift_dynamicCastObjCClass(v25, v26);
      if (v27)
      {
        v28 = objc_msgSend(v27, "topViewController");

        if (v28)
        {
          v29 = type metadata accessor for CRLiOSBoardViewController(0);
          v30 = swift_dynamicCastClass(v28, v29);
          if (v30)
          {
            v31 = v30;
            v73 = v28;
            Strong = swift_unknownObjectWeakLoadStrong(v30 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_delegate);
            if (!Strong)
            {
              v41 = v73;
LABEL_23:

              goto LABEL_24;
            }
            v33 = Strong;
            v72 = v31;
            v34 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window;
            v35 = *(void **)(Strong + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window);
            if (v35 && (objc_msgSend(v35, "isUserInteractionEnabled") & 1) != 0)
            {
              v36 = *(void **)(v33 + v34);
              v70 = v33;
              if (v36
                && (v37 = objc_msgSend(v36, "rootViewController")) != 0
                && (v38 = v37,
                    v69 = objc_msgSend(v37, "crl_windowWrapper"),
                    v38,
                    v69)
                && (v39 = v69,
                    v71 = objc_msgSend(v69, "newWrapperBeginningIgnoringUserInteractionSafely"),
                    v39,
                    v71))
              {
                v40 = v71;
              }
              else
              {
                if (qword_1013DD6C8 != -1)
                  swift_once(&qword_1013DD6C8, sub_100A00D28);
                swift_beginAccess(&static OS_os_log.crlError, v83, 0, 0);
                v42 = (id)static OS_os_log.crlError;
                v43 = static os_log_type_t.error.getter(v42);
                sub_100A06EBC((uint64_t)v42, &_mh_execute_header, v43, "Could not create token for ignoring user interaction; view hierarchy may not be set up yet",
                  90,
                  2,
                  (uint64_t)_swiftEmptyArrayStorage);

                v40 = 0;
              }
              v44 = type metadata accessor for TaskPriority(0);
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v74, 1, 1, v44);
              type metadata accessor for MainActor(0);
              v71 = v40;
              v69 = v40;
              v45 = v70;
              swift_unknownObjectRetain(v70);
              v73 = v73;
              v46 = static MainActor.shared.getter(v73);
              v47 = (_QWORD *)swift_allocObject(&unk_10128BC10, 56, 7);
              v47[2] = v46;
              v47[3] = &protocol witness table for MainActor;
              v48 = v72;
              v47[4] = v45;
              v47[5] = v48;
              v47[6] = v71;
              v49 = sub_100521B98((uint64_t)v74, (uint64_t)&unk_1013E1AC0, (uint64_t)v47);

              swift_unknownObjectRelease(v45);
              swift_release(v49);
              v41 = v69;
              goto LABEL_23;
            }

            swift_unknownObjectRelease(v33);
          }
          else
          {

          }
        }
      }
      else
      {

      }
    }
LABEL_24:
    sub_100503E34();
    v74 = (char *)static OS_dispatch_queue.main.getter(v50);
    static DispatchTime.now()(v51);
    *v9 = 1;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for DispatchTimeInterval.seconds(_:), v6);
    v52 = v16;
    DispatchTime.advanced(by:)(v9);
    (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
    v53 = *(void (**)(char *, uint64_t))(v11 + 8);
    v53(v13, v10);
    v54 = (_QWORD *)swift_allocObject(&unk_10128BBC0, 40, 7);
    v55 = v76;
    v56 = v77;
    v54[2] = v23;
    v54[3] = v55;
    v54[4] = v56;
    aBlock[4] = sub_10096E848;
    v85 = v54;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(_QWORD *)"";
    aBlock[2] = sub_1005D2FC0;
    aBlock[3] = &unk_10128BBD8;
    v57 = _Block_copy(aBlock);
    v58 = v85;
    v59 = v23;
    swift_retain(v55);
    v60 = v56;
    v61 = swift_release(v58);
    v62 = v78;
    static DispatchQoS.unspecified.getter(v61);
    aBlock[0] = _swiftEmptyArrayStorage;
    v63 = sub_1004B7878((unint64_t *)&qword_1013E1D20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v64 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
    v65 = sub_100503E88();
    v66 = v79;
    v67 = v75;
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v64, v65, v75, v63);
    v68 = v74;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v52, v62, v66, v57);
    _Block_release(v57);

    (*(void (**)(char *, uint64_t))(v82 + 8))(v66, v67);
    (*(void (**)(char *, uint64_t))(v80 + 8))(v62, v81);
    v53(v52, v10);
  }
}

uint64_t sub_10096A5E4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  __n128 v33;
  void *v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  void *v44;
  uint64_t v45;
  id v46;
  __n128 v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  void *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD aBlock[5];
  uint64_t v69;

  v62 = a3;
  v64 = type metadata accessor for DispatchWorkItemFlags(0);
  v67 = *(_QWORD *)(v64 - 8);
  __chkstk_darwin(v64);
  v63 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v65 = *(_QWORD *)(v5 - 8);
  v66 = v5;
  __chkstk_darwin(v5);
  v61 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = type metadata accessor for DispatchTimeInterval(0);
  v57 = *(_QWORD *)(v59 - 8);
  __chkstk_darwin(v59);
  v8 = (uint64_t *)((char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v60 = type metadata accessor for DispatchTime(0);
  v58 = *(_QWORD *)(v60 - 8);
  __chkstk_darwin(v60);
  v10 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v56 = (char *)&v55 - v12;
  v13 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v13);
  v15 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_QWORD *)(v17 + 64);
  __chkstk_darwin(v16);
  v19 = (char *)&v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __chkstk_darwin(v20);
  v23 = (char *)&v55 - v22;
  v55 = a2;
  (*(void (**)(__n128))(*(_QWORD *)a2 + 96))(v21);
  v24 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v15, 1, 1, v24);
  v25 = swift_allocObject(&unk_10128BC38, 24, 7);
  swift_unknownObjectWeakInit(v25 + 16);
  sub_10068FB24((uint64_t)v23, (uint64_t)v19);
  type metadata accessor for MainActor(0);
  swift_retain(v25);
  v27 = static MainActor.shared.getter(v26);
  v28 = *(unsigned __int8 *)(v17 + 80);
  v29 = (v28 + 40) & ~v28;
  v30 = v29 + v18;
  v31 = (_QWORD *)swift_allocObject(&unk_10128BC60, v29 + v18 + 2, v28 | 7);
  v31[2] = v27;
  v31[3] = &protocol witness table for MainActor;
  v31[4] = v25;
  sub_10096E9A4((uint64_t)v19, (uint64_t)v31 + v29);
  *(_WORD *)((char *)v31 + v30) = 0;
  swift_release(v25);
  v32 = sub_100521B98((uint64_t)v15, (uint64_t)&unk_1013FDDF0, (uint64_t)v31);
  swift_release(v32);
  sub_10096EAA0((uint64_t)v23);
  sub_100503E34();
  v34 = (void *)static OS_dispatch_queue.main.getter(v33);
  static DispatchTime.now()(v35);
  *v8 = 2;
  v36 = v57;
  v37 = v59;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v57 + 104))(v8, enum case for DispatchTimeInterval.seconds(_:), v59);
  v38 = v56;
  DispatchTime.advanced(by:)(v8);
  (*(void (**)(_QWORD *, uint64_t))(v36 + 8))(v8, v37);
  v39 = *(void (**)(char *, uint64_t))(v58 + 8);
  v40 = v60;
  v39(v10, v60);
  v41 = swift_allocObject(&unk_10128BC88, 32, 7);
  v42 = v55;
  v43 = v62;
  *(_QWORD *)(v41 + 16) = v55;
  *(_QWORD *)(v41 + 24) = v43;
  aBlock[4] = sub_10096EB0C;
  v69 = v41;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1005D2FC0;
  aBlock[3] = &unk_10128BCA0;
  v44 = _Block_copy(aBlock);
  v45 = v69;
  swift_retain(v42);
  v46 = v43;
  v47 = swift_release(v45);
  v48 = v61;
  static DispatchQoS.unspecified.getter(v47);
  aBlock[0] = _swiftEmptyArrayStorage;
  v49 = sub_1004B7878((unint64_t *)&qword_1013E1D20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v50 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
  v51 = sub_100503E88();
  v53 = v63;
  v52 = v64;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v50, v51, v64, v49);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v38, v48, v53, v44);
  _Block_release(v44);

  (*(void (**)(char *, uint64_t))(v67 + 8))(v53, v52);
  (*(void (**)(char *, uint64_t))(v65 + 8))(v48, v66);
  return ((uint64_t (*)(char *, uint64_t))v39)(v38, v40);
}

uint64_t type metadata accessor for CRLPPTTestStartingAt()
{
  return objc_opt_self(_TtC8Freeform20CRLPPTTestStartingAt);
}

uint64_t sub_10096AAA4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 152))();
  *a1 = result;
  return result;
}

uint64_t sub_10096AACC(void *a1)
{
  return sub_100969C28(a1);
}

uint64_t sub_10096AAEC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 192))();
}

void sub_10096AB14(void *a1)
{
  NSString v2;
  id v3;

  sub_1007BE5D4();
  v2 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  _StringGuts.grow(_:)(24);
  swift_bridgeObjectRelease();
  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(a1, "failedTest:withFailure:", v2, v3);

}

void sub_10096ABC4(void *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  id v32;
  __n128 v33;
  uint64_t Strong;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  id v39;
  void *v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __n128 v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  void (*v61)(char *, uint64_t);
  uint64_t v62;
  _QWORD *v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  _QWORD *v68;
  id v69;
  id v70;
  __n128 v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  id v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  void *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  id v100;
  char v101[24];
  _QWORD aBlock[5];
  _QWORD *v103;

  v90 = a1;
  v2 = *v1;
  v3 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v3);
  v82 = (char *)&v79 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v96 = *(_QWORD *)(v5 - 8);
  v97 = v5;
  __chkstk_darwin(v5);
  v95 = (char *)&v79 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v93 = *(_QWORD *)(v7 - 8);
  v94 = v7;
  __chkstk_darwin(v7);
  v92 = (char *)&v79 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = type metadata accessor for DispatchTimeInterval(0);
  v84 = *(_QWORD *)(v85 - 8);
  __chkstk_darwin(v85);
  v10 = (uint64_t *)((char *)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v91 = type metadata accessor for DispatchTime(0);
  v83 = *(_QWORD *)(v91 - 8);
  __chkstk_darwin(v91);
  v12 = (char *)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v88 = (char *)&v79 - v14;
  v15 = sub_1004B804C((uint64_t *)&unk_1013E3830);
  __chkstk_darwin(v15);
  v17 = (char *)&v79 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(_QWORD *)(v19 + 64);
  __chkstk_darwin(v18);
  __chkstk_darwin(v21);
  v99 = (uint64_t)&v79 - v22;
  v87 = type metadata accessor for IndexPath(0);
  v86 = *(_QWORD *)(v87 - 8);
  __chkstk_darwin(v87);
  v98 = (char *)&v79 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v25 = objc_msgSend(v24, "delegate");

  if (!v25)
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v26 = type metadata accessor for CRLiOSAppDelegate();
  swift_dynamicCastClassUnconditional(v25, v26, 0, 0, 0);
  sub_10060A6B8();
  v100 = v27;
  swift_unknownObjectRelease(v25);
  if (!v100)
    return;
  v79 = (uint64_t)&v79 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = v2;
  v29 = sub_100903140();
  if (!v29)
  {

    return;
  }
  v30 = (char *)v29;
  v31 = v98;
  IndexPath.init(item:section:)(0, 0);
  v32 = sub_100B787A8();
  dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(v31, v33);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
    goto LABEL_21;
  sub_10096E9A4((uint64_t)v17, v99);
  Strong = swift_unknownObjectWeakLoadStrong(&v30[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_delegate]);
  if (!Strong)
  {
LABEL_22:
    __break(1u);
    return;
  }
  v35 = Strong;
  v36 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window;
  v37 = *(void **)(Strong + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window);
  v81 = v28;
  v80 = v30;
  if (v37 && (objc_msgSend(v37, "isUserInteractionEnabled") & 1) != 0)
  {
    v38 = *(void **)(v35 + v36);
    if (!v38
      || (v39 = objc_msgSend(v38, "rootViewController")) == 0
      || (v40 = v39,
          v41 = objc_msgSend(v39, "crl_windowWrapper"),
          v40,
          !v41)
      || (v42 = objc_msgSend(v41, "newWrapperBeginningIgnoringUserInteractionSafely"), v41, !v42))
    {
      if (qword_1013DD6C8 != -1)
        swift_once(&qword_1013DD6C8, sub_100A00D28);
      swift_beginAccess(&static OS_os_log.crlError, v101, 0, 0);
      v43 = (id)static OS_os_log.crlError;
      v44 = static os_log_type_t.error.getter(v43);
      sub_100A06EBC((uint64_t)v43, &_mh_execute_header, v44, "Could not create token for ignoring user interaction; view hierarchy may not be set up yet",
        90,
        2,
        (uint64_t)_swiftEmptyArrayStorage);

      v42 = 0;
    }
    v45 = swift_allocObject(&unk_10128C160, 24, 7);
    *(_QWORD *)(v45 + 16) = v42;
    v46 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v82, 1, 1, v46);
    v47 = v79;
    sub_10068FB24(v99, v79);
    type metadata accessor for MainActor(0);
    swift_retain(v45);
    swift_unknownObjectRetain(v35);
    v49 = static MainActor.shared.getter(v48);
    v50 = *(unsigned __int8 *)(v19 + 80);
    v51 = (v50 + 32) & ~v50;
    v52 = (v20 + v51 + 7) & 0xFFFFFFFFFFFFFFF8;
    v53 = (v52 + 15) & 0xFFFFFFFFFFFFFFF8;
    v54 = swift_allocObject(&unk_10128C200, v53 + 8, v50 | 7);
    *(_QWORD *)(v54 + 16) = v49;
    *(_QWORD *)(v54 + 24) = &protocol witness table for MainActor;
    sub_10096E9A4(v47, v54 + v51);
    *(_QWORD *)(v54 + v52) = v45;
    *(_QWORD *)(v54 + v53) = v35;
    v55 = sub_100521B98((uint64_t)v82, (uint64_t)&unk_1013FDE10, v54);
    swift_unknownObjectRelease(v35);
    swift_release(v45);
    swift_release(v55);
  }
  else
  {
    swift_unknownObjectRelease(v35);
  }
  sub_100503E34();
  v82 = (char *)static OS_dispatch_queue.main.getter(v56);
  static DispatchTime.now()(v57);
  *v10 = 5;
  v58 = v84;
  v59 = v85;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v84 + 104))(v10, enum case for DispatchTimeInterval.seconds(_:), v85);
  v60 = v88;
  DispatchTime.advanced(by:)(v10);
  (*(void (**)(_QWORD *, uint64_t))(v58 + 8))(v10, v59);
  v61 = *(void (**)(char *, uint64_t))(v83 + 8);
  v62 = v91;
  v61(v12, v91);
  v63 = (_QWORD *)swift_allocObject(&unk_10128C1B0, 48, 7);
  v65 = v89;
  v64 = v90;
  v63[2] = v100;
  v63[3] = v65;
  v66 = v81;
  v63[4] = v64;
  v63[5] = v66;
  aBlock[4] = sub_10096EE54;
  v103 = v63;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1005D2FC0;
  aBlock[3] = &unk_10128C1C8;
  v67 = _Block_copy(aBlock);
  v68 = v103;
  v69 = v100;
  swift_retain(v65);
  v70 = v64;
  v71 = swift_release(v68);
  v72 = v92;
  static DispatchQoS.unspecified.getter(v71);
  aBlock[0] = _swiftEmptyArrayStorage;
  v73 = sub_1004B7878((unint64_t *)&qword_1013E1D20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v74 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
  v75 = sub_100503E88();
  v76 = v95;
  v77 = v97;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v74, v75, v97, v73);
  v78 = v82;
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v60, v72, v76, v67);
  _Block_release(v67);

  (*(void (**)(char *, uint64_t))(v96 + 8))(v76, v77);
  (*(void (**)(char *, uint64_t))(v93 + 8))(v72, v94);
  v61(v60, v62);
  sub_10096EAA0(v99);
  (*(void (**)(char *, uint64_t))(v86 + 8))(v98, v87);
}

void sub_10096B3DC(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  NSString v11;
  id v12;

  v5 = sub_1009038CC();
  v6 = objc_msgSend(v5, "presentedViewController");

  if (!v6)
    goto LABEL_8;
  v7 = objc_opt_self(UINavigationController);
  v8 = (void *)swift_dynamicCastObjCClass(v6, v7);
  if (!v8)
    goto LABEL_7;
  v12 = objc_msgSend(v8, "topViewController");

  if (!v12)
  {
LABEL_8:
    sub_1007BE5D4();
    v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v12 = String._bridgeToObjectiveC()();
    objc_msgSend(a3, "failedTest:withFailure:", v11);

    goto LABEL_9;
  }
  v9 = type metadata accessor for CRLiOSBoardViewController(0);
  v10 = swift_dynamicCastClass(v12, v9);
  if (!v10)
  {
    v6 = v12;
LABEL_7:

    goto LABEL_8;
  }
  (*(void (**)(void *, uint64_t))(*(_QWORD *)a2 + 200))(a3, v10);
LABEL_9:

}

uint64_t type metadata accessor for CRLPPTTestWithFirstBoard()
{
  return objc_opt_self(_TtC8Freeform24CRLPPTTestWithFirstBoard);
}

void sub_10096B54C(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  void *v19;
  NSString v20;
  uint64_t v21;
  char *v22;
  char *v23;
  id v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t Strong;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  id v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  id v56;
  char v57[24];

  v3 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v3);
  v52 = (uint64_t)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C((uint64_t *)&unk_1013E3830);
  __chkstk_darwin(v5);
  v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v51 = (uint64_t)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v50 - v12;
  v14 = type metadata accessor for IndexPath(0);
  v53 = *(_QWORD *)(v14 - 8);
  v54 = v14;
  __chkstk_darwin(v14);
  v55 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v17 = objc_msgSend(v16, "delegate");

  if (!v17)
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v18 = type metadata accessor for CRLiOSAppDelegate();
  swift_dynamicCastClassUnconditional(v17, v18, 0, 0, 0);
  sub_10060A6B8();
  v56 = v19;
  swift_unknownObjectRelease(v17);
  if (!v56)
    return;
  *(_BYTE *)(v1 + 24) = 0;
  sub_1007BE5D4();
  v20 = String._bridgeToObjectiveC()();
  objc_msgSend(a1, "startedTest:", v20, swift_bridgeObjectRelease().n128_f64[0]);

  v21 = sub_100903140();
  if (!v21)
  {

    return;
  }
  v22 = (char *)v21;
  v23 = v55;
  IndexPath.init(item:section:)(0, 0);
  v24 = sub_100B787A8();
  dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(v23, v25);

  v26 = v9;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    goto LABEL_21;
  v27 = (uint64_t)v13;
  sub_10096E9A4((uint64_t)v7, (uint64_t)v13);
  Strong = swift_unknownObjectWeakLoadStrong(&v22[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_delegate]);
  if (!Strong)
  {
LABEL_22:
    __break(1u);
    return;
  }
  v29 = Strong;
  v30 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window;
  v31 = *(void **)(Strong + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window);
  if (v31 && (objc_msgSend(v31, "isUserInteractionEnabled") & 1) != 0)
  {
    v32 = *(void **)(v29 + v30);
    if (!v32
      || (v33 = objc_msgSend(v32, "rootViewController")) == 0
      || (v34 = v33,
          v35 = objc_msgSend(v33, "crl_windowWrapper"),
          v34,
          !v35)
      || (v36 = objc_msgSend(v35, "newWrapperBeginningIgnoringUserInteractionSafely"), v35, !v36))
    {
      if (qword_1013DD6C8 != -1)
        swift_once(&qword_1013DD6C8, sub_100A00D28);
      swift_beginAccess(&static OS_os_log.crlError, v57, 0, 0);
      v37 = (id)static OS_os_log.crlError;
      v38 = static os_log_type_t.error.getter(v37);
      sub_100A06EBC((uint64_t)v37, &_mh_execute_header, v38, "Could not create token for ignoring user interaction; view hierarchy may not be set up yet",
        90,
        2,
        (uint64_t)_swiftEmptyArrayStorage);

      v36 = 0;
    }
    v39 = swift_allocObject(&unk_10128C160, 24, 7);
    *(_QWORD *)(v39 + 16) = v36;
    v40 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v52, 1, 1, v40);
    v41 = v51;
    sub_10068FB24((uint64_t)v13, v51);
    type metadata accessor for MainActor(0);
    swift_retain(v39);
    swift_unknownObjectRetain(v29);
    v43 = static MainActor.shared.getter(v42);
    v44 = *(unsigned __int8 *)(v26 + 80);
    v45 = (v44 + 32) & ~v44;
    v46 = (v10 + v45 + 7) & 0xFFFFFFFFFFFFFFF8;
    v47 = (v46 + 15) & 0xFFFFFFFFFFFFFFF8;
    v48 = swift_allocObject(&unk_10128C188, v47 + 8, v44 | 7);
    *(_QWORD *)(v48 + 16) = v43;
    *(_QWORD *)(v48 + 24) = &protocol witness table for MainActor;
    sub_10096E9A4(v41, v48 + v45);
    *(_QWORD *)(v48 + v46) = v39;
    *(_QWORD *)(v48 + v47) = v29;
    v49 = sub_100521B98(v52, (uint64_t)&unk_1013FA5E0, v48);

    swift_unknownObjectRelease(v29);
    swift_release(v39);
    swift_release(v49);
    v23 = v55;
  }
  else
  {

    swift_unknownObjectRelease(v29);
  }
  sub_10096EAA0(v27);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v23, v54);
}

void sub_10096BA68(void *a1)
{
  sub_10096BF04(a1, 25);
}

void sub_10096BA88(void *a1)
{
  sub_10096C0F0(a1, 25);
}

uint64_t type metadata accessor for CRLPPTNavigate_OpenBoard()
{
  return objc_opt_self(_TtC8Freeform24CRLPPTNavigate_OpenBoard);
}

void sub_10096BAC8(void *a1)
{
  uint64_t v1;
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  NSString v7;
  uint64_t v8;
  void *v9;
  uint64_t Strong;
  uint64_t v11;
  id v12;

  v3 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v4 = objc_msgSend(v3, "delegate");

  if (!v4)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    return;
  }
  v5 = type metadata accessor for CRLiOSAppDelegate();
  swift_dynamicCastClassUnconditional(v4, v5, 0, 0, 0);
  sub_10060A6B8();
  v12 = v6;
  swift_unknownObjectRelease(v4);
  if (v12)
  {
    *(_BYTE *)(v1 + 24) = 0;
    sub_1007BE5D4();
    v7 = String._bridgeToObjectiveC()();
    objc_msgSend(a1, "startedTest:", v7, swift_bridgeObjectRelease().n128_f64[0]);

    v8 = sub_100903140();
    if (!v8)
    {
LABEL_6:

      return;
    }
    v9 = (void *)v8;
    Strong = swift_unknownObjectWeakLoadStrong(v8 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_delegate);
    if (Strong)
    {
      v11 = Strong;
      sub_100913210(v9);

      swift_unknownObjectRelease(v11);
      goto LABEL_6;
    }
    goto LABEL_9;
  }
}

uint64_t type metadata accessor for CRLPPTNavigate_OpenNewBoard()
{
  return objc_opt_self(_TtC8Freeform27CRLPPTNavigate_OpenNewBoard);
}

void sub_10096BC44(void *a1, char *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  NSString v8;
  uint64_t Strong;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  char v27[24];

  v5 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v5);
  v7 = &v27[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1007BE5D4();
  v8 = String._bridgeToObjectiveC()();
  objc_msgSend(a1, "startedTest:", v8, swift_bridgeObjectRelease().n128_f64[0]);

  *(_BYTE *)(v2 + 24) = 0;
  Strong = swift_unknownObjectWeakLoadStrong(&a2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_delegate]);
  if (Strong)
  {
    v10 = Strong;
    v11 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window;
    v12 = *(void **)(Strong + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window);
    if (v12 && (objc_msgSend(v12, "isUserInteractionEnabled") & 1) != 0)
    {
      v13 = *(void **)(v10 + v11);
      if (!v13
        || (v14 = objc_msgSend(v13, "rootViewController")) == 0
        || (v15 = v14,
            v16 = objc_msgSend(v14, "crl_windowWrapper"),
            v15,
            !v16)
        || (v17 = objc_msgSend(v16, "newWrapperBeginningIgnoringUserInteractionSafely"), v16, !v17))
      {
        if (qword_1013DD6C8 != -1)
          swift_once(&qword_1013DD6C8, sub_100A00D28);
        swift_beginAccess(&static OS_os_log.crlError, v27, 0, 0);
        v18 = (id)static OS_os_log.crlError;
        v19 = static os_log_type_t.error.getter(v18);
        sub_100A06EBC((uint64_t)v18, &_mh_execute_header, v19, "Could not create token for ignoring user interaction; view hierarchy may not be set up yet",
          90,
          2,
          (uint64_t)_swiftEmptyArrayStorage);

        v17 = 0;
      }
      v20 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v7, 1, 1, v20);
      type metadata accessor for MainActor(0);
      v21 = v17;
      swift_unknownObjectRetain(v10);
      v22 = a2;
      v23 = static MainActor.shared.getter(v22);
      v24 = (_QWORD *)swift_allocObject(&unk_10128C138, 56, 7);
      v24[2] = v23;
      v24[3] = &protocol witness table for MainActor;
      v24[4] = v10;
      v24[5] = v22;
      v24[6] = v17;
      v25 = sub_100521B98((uint64_t)v7, (uint64_t)&unk_1013FDE08, (uint64_t)v24);
      swift_unknownObjectRelease(v10);
      swift_release(v25);

    }
    else
    {
      swift_unknownObjectRelease(v10);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_10096BEE8(void *a1)
{
  sub_10096BF04(a1, 23);
}

void sub_10096BF04(void *a1, Swift::Int a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  void *v9;
  id v10;
  NSString v11;
  id v12;
  uint64_t v13;
  void *v14;
  void *v15;
  Swift::String v16;
  Swift::String v17;
  Swift::String v18;
  id v19;

  if ((*(_BYTE *)(v2 + 24) & 1) == 0)
  {
    v4 = v2;
    v6 = *(_QWORD *)v2;
    v7 = type metadata accessor for CRLiOSBoardViewController(0);
    ObjectType = swift_getObjectType(a1);
    v9 = *(void **)(v4 + 16);
    if (v7 == ObjectType)
    {
      if (v9)
      {
        v19 = v9;
        sub_100968F88(v19, v6, (uint64_t)&off_10128BB10);
        goto LABEL_7;
      }
    }
    else
    {
      if (v9)
      {
        v10 = v9;
        sub_1007BE5D4();
        v11 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        _StringGuts.grow(_:)(a2);
        v12 = objc_msgSend(a1, "description", swift_bridgeObjectRelease().n128_f64[0]);
        v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
        v15 = v14;

        v16._countAndFlagsBits = v13;
        v16._object = v15;
        String.append(_:)(v16);
        swift_bridgeObjectRelease();
        v17._countAndFlagsBits = 0x746365707865202CLL;
        v17._object = (void *)0xEB00000000206465;
        String.append(_:)(v17);
        v18._object = (void *)0x8000000100FE44C0;
        v18._countAndFlagsBits = 0xD000000000000019;
        String.append(_:)(v18);
        v19 = String._bridgeToObjectiveC()();
        objc_msgSend(v10, "failedTest:withFailure:", v11, v19, swift_bridgeObjectRelease().n128_f64[0]);

LABEL_7:
        return;
      }
      __break(1u);
    }
    __break(1u);
  }
}

void sub_10096C0D4(void *a1)
{
  sub_10096C0F0(a1, 23);
}

void sub_10096C0F0(void *a1, Swift::Int a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  void *v9;
  id v10;
  NSString v11;
  id v12;
  uint64_t v13;
  void *v14;
  void *v15;
  Swift::String v16;
  Swift::String v17;
  Swift::String v18;
  id v19;
  void *v20;
  id v21;

  if ((*(_BYTE *)(v2 + 24) & 1) == 0)
  {
    v4 = v2;
    v6 = *(_QWORD *)v2;
    v7 = type metadata accessor for CRLiOSBoardViewController(0);
    ObjectType = swift_getObjectType(a1);
    v9 = *(void **)(v4 + 16);
    if (v7 == ObjectType)
    {
      if (v9)
      {
        v19 = v9;
        sub_1009691DC(v19, v6, (uint64_t)&off_10128BB10);

        v20 = *(void **)(v4 + 16);
        if (v20)
        {
          v11 = v20;
          sub_1007BE5D4();
          v21 = String._bridgeToObjectiveC()();
          objc_msgSend(v11, "finishedTest:", v21, swift_bridgeObjectRelease().n128_f64[0]);
          goto LABEL_8;
        }
        goto LABEL_11;
      }
    }
    else
    {
      if (v9)
      {
        v10 = v9;
        sub_1007BE5D4();
        v11 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        _StringGuts.grow(_:)(a2);
        v12 = objc_msgSend(a1, "description", swift_bridgeObjectRelease().n128_f64[0]);
        v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
        v15 = v14;

        v16._countAndFlagsBits = v13;
        v16._object = v15;
        String.append(_:)(v16);
        swift_bridgeObjectRelease();
        v17._countAndFlagsBits = 0x746365707865202CLL;
        v17._object = (void *)0xEB00000000206465;
        String.append(_:)(v17);
        v18._object = (void *)0x8000000100FE44C0;
        v18._countAndFlagsBits = 0xD000000000000019;
        String.append(_:)(v18);
        v21 = String._bridgeToObjectiveC()();
        objc_msgSend(v10, "failedTest:withFailure:", v11, v21, swift_bridgeObjectRelease().n128_f64[0]);

LABEL_8:
        return;
      }
      __break(1u);
    }
    __break(1u);
LABEL_11:
    __break(1u);
  }
}

uint64_t type metadata accessor for CRLPPTNavigate_CloseBoard()
{
  return objc_opt_self(_TtC8Freeform25CRLPPTNavigate_CloseBoard);
}

void sub_10096C330(void *a1)
{
  id v2;
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  NSString v9;
  double v10;
  void *v11;
  NSString v12;
  id v13;

  v2 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v3 = objc_msgSend(v2, "delegate");

  if (v3)
  {
    v4 = type metadata accessor for CRLiOSAppDelegate();
    swift_dynamicCastClassUnconditional(v3, v4, 0, 0, 0);
    sub_10060A6B8();
    v6 = v5;
    swift_unknownObjectRelease(v3);
    if (v6)
    {
      v7 = (void *)sub_100903140();
      if (v7)
      {
        v13 = v7;
        v8 = objc_msgSend(v7, "collectionView");
        sub_1007BE5D4();
        v9 = String._bridgeToObjectiveC()();
        *(_QWORD *)&v10 = swift_bridgeObjectRelease().n128_u64[0];
        if (v8)
        {
          objc_msgSend(v8, "_performScrollTest:iterations:delta:", v9, 5, 18, v10);
        }
        else
        {
          v12 = String._bridgeToObjectiveC()();
          objc_msgSend(a1, "failedTest:withFailure:", v9, v12);
          v8 = v9;
          v9 = v12;
        }

        v11 = v13;
      }
      else
      {
        v11 = v6;
      }

    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t type metadata accessor for CRLPPTLibrary_Scroll()
{
  return objc_opt_self(_TtC8Freeform20CRLPPTLibrary_Scroll);
}

void sub_10096C4E8(void *a1)
{
  id v2;
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  unsigned __int8 v10;
  id v11;
  id v12;
  NSString v13;
  void *v14;
  id v15;
  id v16;
  NSString v17;
  NSString v18;
  id v19;
  id v20;
  _QWORD aBlock[5];
  uint64_t v22;

  v2 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v3 = objc_msgSend(v2, "delegate");

  if (!v3)
  {
    __break(1u);
    return;
  }
  v4 = type metadata accessor for CRLiOSAppDelegate();
  swift_dynamicCastClassUnconditional(v3, v4, 0, 0, 0);
  sub_10060A6B8();
  v20 = v5;
  swift_unknownObjectRelease(v3);
  if (v20)
  {
    v6 = (void *)sub_100903140();
    if (v6)
    {
      v19 = v6;
      v7 = objc_msgSend(v6, "collectionView");
      if (!v7)
      {

        return;
      }
      v8 = v7;
      v9 = (void *)objc_opt_self(RPTTestRunner);
      v10 = objc_msgSend(v9, "isRecapAvailable");
      sub_1007BE5D4();
      if ((v10 & 1) != 0)
      {
        v11 = objc_allocWithZone((Class)RPTScrollViewTestParameters);
        v12 = v8;
        v13 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        aBlock[4] = SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
        v22 = 0;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = *(_QWORD *)"";
        aBlock[2] = sub_1005D2FC0;
        aBlock[3] = &unk_10128C0B0;
        v14 = _Block_copy(aBlock);
        v15 = objc_msgSend(v11, "initWithTestName:scrollView:completionHandler:", v13, v12, v14, swift_release(v22).n128_f64[0]);

        _Block_release(v14);
        v16 = v15;
        objc_msgSend(v9, "runTestWithParameters:", v16);

        return;
      }
      v17 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      v18 = String._bridgeToObjectiveC()();
      objc_msgSend(a1, "failedTest:withFailure:", v17, v18);

    }
  }
}

uint64_t type metadata accessor for CRLPPTLibrary_ScrollRecap()
{
  return objc_opt_self(_TtC8Freeform25CRLPPTLibrary_ScrollRecap);
}

uint64_t sub_10096C7A0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v2;

  *a1 = 1;
  v2 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  return swift_storeEnumTagMultiPayload(a1, v2, 0);
}

void sub_10096C7D8(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  _QWORD *v6;
  id v7;
  _QWORD v8[5];
  _QWORD *v9;

  v3 = *v1;
  v4 = (_QWORD *)swift_allocObject(&unk_10128C070, 40, 7);
  v4[2] = a1;
  v4[3] = v1;
  v4[4] = v3;
  v8[4] = sub_10096EF6C;
  v9 = v4;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = *(_QWORD *)"";
  v8[2] = sub_1006084F4;
  v8[3] = &unk_10128C088;
  v5 = _Block_copy(v8);
  v6 = v9;
  v7 = a1;
  swift_retain(v1);
  objc_msgSend(v7, "rotateIfNeeded:completion:", 1, v5, swift_release(v6).n128_f64[0]);
  _Block_release(v5);
}

uint64_t type metadata accessor for CRLPPTLibrary_Rotate()
{
  return objc_opt_self(_TtC8Freeform20CRLPPTLibrary_Rotate);
}

void sub_10096C8C4(void *a1)
{
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  NSString v13;
  NSString v14;
  id v15;

  v2 = (void *)objc_opt_self(RPTTestRunner);
  if (!objc_msgSend(v2, "isRecapAvailable"))
    goto LABEL_10;
  v3 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v4 = objc_msgSend(v3, "delegate");

  if (v4)
  {
    v5 = type metadata accessor for CRLiOSAppDelegate();
    swift_dynamicCastClassUnconditional(v4, v5, 0, 0, 0);
    sub_10060A6B8();
    v7 = v6;
    swift_unknownObjectRelease(v4);
    if (!v7)
      goto LABEL_10;
    v8 = (void *)sub_100903140();

    if (!v8)
      goto LABEL_10;
    v9 = objc_msgSend(v8, "view");
    if (v9)
    {
      v10 = v9;
      v11 = objc_msgSend(v9, "window");

      if (v11)
      {
        sub_1007BE5D4();
        v12 = objc_allocWithZone((Class)RPTResizeTestParameters);
        v13 = v11;
        v14 = String._bridgeToObjectiveC()();
        v15 = objc_msgSend(v12, "initWithTestName:window:completionHandler:", v14, v13, 0, swift_bridgeObjectRelease().n128_f64[0]);

        objc_msgSend(v2, "runTestWithParameters:", v15);
LABEL_11:

        return;
      }

LABEL_10:
      sub_1007BE5D4();
      v13 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      v15 = String._bridgeToObjectiveC()();
      objc_msgSend(a1, "failedTest:withFailure:", v13);
      goto LABEL_11;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t type metadata accessor for CRLPPTLibrary_Resize()
{
  return objc_opt_self(_TtC8Freeform20CRLPPTLibrary_Resize);
}

void sub_10096CB58(uint64_t a1, uint64_t a2)
{
  sub_10096CB88(a1, a2, 2);
}

uint64_t type metadata accessor for CRLPPTBoard_ScrollVertical()
{
  return objc_opt_self(_TtC8Freeform26CRLPPTBoard_ScrollVertical);
}

void sub_10096CB80(uint64_t a1, uint64_t a2)
{
  sub_10096CB88(a1, a2, 1);
}

void sub_10096CB88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4;
  id v5;

  v4 = *(id *)(a2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scrollView);
  sub_1007BE5D4();
  v5 = String._bridgeToObjectiveC()();
  objc_msgSend(v4, "_performScrollTest:iterations:delta:scrollAxis:", v5, 5, 18, a3, swift_bridgeObjectRelease().n128_f64[0]);

}

uint64_t type metadata accessor for CRLPPTBoard_ScrollHorizontal()
{
  return objc_opt_self(_TtC8Freeform28CRLPPTBoard_ScrollHorizontal);
}

void sub_10096CC3C(void *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  NSString v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  id v24;
  void **v25;
  uint64_t v26;
  void *v27;
  void *v28;
  void *v29;
  uint64_t v30;

  v5 = *v2;
  sub_1007BE5D4();
  v6 = String._bridgeToObjectiveC()();
  objc_msgSend(a1, "startedTest:", v6, swift_bridgeObjectRelease().n128_f64[0]);

  v7 = *(void **)(a2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scrollView);
  v8 = swift_allocObject(&unk_10128BF30, 32, 7);
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = v5;
  v29 = sub_10096ECF4;
  v30 = v8;
  v25 = _NSConcreteStackBlock;
  v26 = *(_QWORD *)"";
  v27 = sub_1005D2FC0;
  v28 = &unk_10128BF48;
  v9 = _Block_copy(&v25);
  v10 = v30;
  v11 = v7;
  v12 = a1;
  swift_release(v10);
  v13 = swift_allocObject(&unk_10128BF80, 32, 7);
  *(_QWORD *)(v13 + 16) = v12;
  *(_QWORD *)(v13 + 24) = v5;
  v29 = sub_10096ED18;
  v30 = v13;
  v25 = _NSConcreteStackBlock;
  v26 = *(_QWORD *)"";
  v27 = sub_1006084F4;
  v28 = &unk_10128BF98;
  v14 = _Block_copy(&v25);
  v15 = v30;
  v16 = v12;
  swift_release(v15);
  v17 = swift_allocObject(&unk_10128BFD0, 32, 7);
  *(_QWORD *)(v17 + 16) = v16;
  *(_QWORD *)(v17 + 24) = v5;
  v29 = sub_10096ED20;
  v30 = v17;
  v25 = _NSConcreteStackBlock;
  v26 = *(_QWORD *)"";
  v27 = sub_1005D2FC0;
  v28 = &unk_10128BFE8;
  v18 = _Block_copy(&v25);
  v19 = v30;
  v20 = v16;
  swift_release(v19);
  v21 = swift_allocObject(&unk_10128C020, 32, 7);
  *(_QWORD *)(v21 + 16) = v20;
  *(_QWORD *)(v21 + 24) = v5;
  v29 = sub_10096ED50;
  v30 = v21;
  v25 = _NSConcreteStackBlock;
  v26 = *(_QWORD *)"";
  v27 = sub_1005D2FC0;
  v28 = &unk_10128C038;
  v22 = _Block_copy(&v25);
  v23 = v30;
  v24 = v20;
  swift_release(v23);
  objc_msgSend(v11, "_simulateScrollWithTranslation:duration:willBeginDragging:didEndDragging:willBeginDecelerating:didEndDecelerating:", v9, v14, v18, v22, 1000.0, 250.0, 1.0);
  _Block_release(v22);
  _Block_release(v18);
  _Block_release(v14);
  _Block_release(v9);

}

void sub_10096CEC0(char a1, void *a2)
{
  NSString v4;
  NSString v5;
  id v6;

  v4 = String._bridgeToObjectiveC()();
  sub_1007BE5D4();
  v5 = String._bridgeToObjectiveC()();
  objc_msgSend(a2, "finishedSubTest:forTest:", v4, v5, swift_bridgeObjectRelease().n128_f64[0]);

  if ((a1 & 1) == 0)
  {
    sub_1007BE5D4();
    v6 = String._bridgeToObjectiveC()();
    objc_msgSend(a2, "finishedTest:", v6, swift_bridgeObjectRelease().n128_f64[0]);

  }
}

uint64_t type metadata accessor for CRLPPTBoard_ScrollNatural()
{
  return objc_opt_self(_TtC8Freeform25CRLPPTBoard_ScrollNatural);
}

void sub_10096CFCC(void *a1, uint64_t a2)
{
  void *v4;
  void *v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  id v15;
  NSString v16;
  void *v17;
  id v18;
  NSString v19;
  id v20;
  _QWORD aBlock[5];
  uint64_t v22;

  v4 = (void *)objc_opt_self(RPTTestRunner);
  if (objc_msgSend(v4, "isRecapAvailable"))
  {
    v5 = *(void **)(a2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scrollView);
    v6 = RPTGetBoundsForView(v5);
    v8 = v7;
    v10 = v9;
    v12 = v11;
    sub_1007BE5D4();
    objc_msgSend(v5, "contentSize");
    v14 = v13;
    v15 = objc_allocWithZone((Class)RPTScrollViewTestParameters);
    v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    aBlock[4] = SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
    v22 = 0;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(_QWORD *)"";
    aBlock[2] = sub_1005D2FC0;
    aBlock[3] = &unk_10128BEF8;
    v17 = _Block_copy(aBlock);
    swift_release(v22);
    v18 = objc_msgSend(v15, "initWithTestName:scrollBounds:amplitude:direction:completionHandler:", v16, 2, v17, v6, v8, v10, v12, v14);
    _Block_release(v17);

    objc_msgSend(v4, "runTestWithParameters:", v18);
  }
  else
  {
    sub_1007BE5D4();
    v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v20 = String._bridgeToObjectiveC()();
    objc_msgSend(a1, "failedTest:withFailure:", v19, v20);

  }
}

uint64_t type metadata accessor for CRLPPTBoard_ScrollRecap()
{
  return objc_opt_self(_TtC8Freeform23CRLPPTBoard_ScrollRecap);
}

void sub_10096D1FC(void *a1, void *a2)
{
  void *v4;
  unsigned int v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  NSString v10;
  NSString v11;
  id v12;

  v4 = (void *)objc_opt_self(RPTTestRunner);
  v5 = objc_msgSend(v4, "isRecapAvailable");
  sub_1007BE5D4();
  if (!v5)
  {
    v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v12 = String._bridgeToObjectiveC()();
    objc_msgSend(a1, "failedTest:withFailure:", v11);

    goto LABEL_6;
  }
  v6 = objc_msgSend(a2, "view");
  if (v6)
  {
    v7 = v6;
    v8 = objc_msgSend(v6, "window");

    if (v8)
    {
      v9 = objc_allocWithZone((Class)RPTResizeTestParameters);
      v10 = String._bridgeToObjectiveC()();
      v12 = objc_msgSend(v9, "initWithTestName:window:completionHandler:", v10, v8, 0, swift_bridgeObjectRelease().n128_f64[0]);

      objc_msgSend(v4, "runTestWithParameters:", v12);
LABEL_6:

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t type metadata accessor for CRLPPTBoard_Resize()
{
  return objc_opt_self(_TtC8Freeform18CRLPPTBoard_Resize);
}

void sub_10096D39C(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  _QWORD *v6;
  id v7;
  _QWORD v8[5];
  _QWORD *v9;

  v3 = *v1;
  v4 = (_QWORD *)swift_allocObject(&unk_10128BDA0, 40, 7);
  v4[2] = a1;
  v4[3] = v1;
  v4[4] = v3;
  v8[4] = sub_10096EC5C;
  v9 = v4;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = *(_QWORD *)"";
  v8[2] = sub_1006084F4;
  v8[3] = &unk_10128BDB8;
  v5 = _Block_copy(v8);
  v6 = v9;
  v7 = a1;
  swift_retain(v1);
  objc_msgSend(v7, "rotateIfNeeded:completion:", 1, v5, swift_release(v6).n128_f64[0]);
  _Block_release(v5);
}

uint64_t type metadata accessor for CRLPPTBoard_Rotate()
{
  return objc_opt_self(_TtC8Freeform18CRLPPTBoard_Rotate);
}

void sub_10096D488(void *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  NSString v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  void **v17;
  uint64_t v18;
  double (*v19)(uint64_t);
  void *v20;
  void (*v21)();
  uint64_t v22;

  v5 = *v2;
  sub_1007BE5D4();
  v6 = String._bridgeToObjectiveC()();
  objc_msgSend(a1, "startedTest:", v6, swift_bridgeObjectRelease().n128_f64[0]);

  v7 = *(void **)(a2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scrollView);
  v8 = swift_allocObject(&unk_10128BD00, 32, 7);
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = v5;
  v21 = sub_10096EC10;
  v22 = v8;
  v17 = _NSConcreteStackBlock;
  v18 = *(_QWORD *)"";
  v19 = sub_1005D2FC0;
  v20 = &unk_10128BD18;
  v9 = _Block_copy(&v17);
  v10 = v22;
  v11 = v7;
  v12 = a1;
  swift_release(v10);
  v13 = swift_allocObject(&unk_10128BD50, 32, 7);
  *(_QWORD *)(v13 + 16) = v12;
  *(_QWORD *)(v13 + 24) = v5;
  v21 = sub_10096EC34;
  v22 = v13;
  v17 = _NSConcreteStackBlock;
  v18 = *(_QWORD *)"";
  v19 = sub_1005D2FC0;
  v20 = &unk_10128BD68;
  v14 = _Block_copy(&v17);
  v15 = v22;
  v16 = v12;
  swift_release(v15);
  objc_msgSend(v11, "_simulateZoomByScaleFactor:duration:willBeginZooming:didEndZooming:", v9, v14, 1.5, 1.0);
  _Block_release(v14);
  _Block_release(v9);

}

void sub_10096D620(void *a1)
{
  NSString v2;
  id v3;

  v2 = String._bridgeToObjectiveC()();
  sub_1007BE5D4();
  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(a1, "startedSubTest:forTest:", v2, v3, swift_bridgeObjectRelease().n128_f64[0]);

}

void sub_10096D6A4(void *a1)
{
  NSString v2;
  NSString v3;
  id v4;

  v2 = String._bridgeToObjectiveC()();
  sub_1007BE5D4();
  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(a1, "finishedSubTest:forTest:", v2, v3, swift_bridgeObjectRelease().n128_f64[0]);

  sub_1007BE5D4();
  v4 = String._bridgeToObjectiveC()();
  objc_msgSend(a1, "finishedTest:", v4, swift_bridgeObjectRelease().n128_f64[0]);

}

uint64_t type metadata accessor for CRLPPTBoard_ZoomScroll()
{
  return objc_opt_self(_TtC8Freeform22CRLPPTBoard_ZoomScroll);
}

double sub_10096D78C(void *a1, void *a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  double result;
  uint64_t v16;

  v5 = *v2;
  v6 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  type metadata accessor for MainActor(0);
  v10 = a2;
  v11 = a1;
  v12 = static MainActor.shared.getter(v11);
  v13 = (_QWORD *)swift_allocObject(&unk_10128BCD8, 56, 7);
  v13[2] = v12;
  v13[3] = &protocol witness table for MainActor;
  v13[4] = v10;
  v13[5] = v11;
  v13[6] = v5;
  v14 = sub_100521B98((uint64_t)v8, (uint64_t)&unk_1013FDE00, (uint64_t)v13);
  *(_QWORD *)&result = swift_release(v14).n128_u64[0];
  return result;
}

uint64_t sub_10096D884(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6[4] = a5;
  v6[5] = a6;
  v6[3] = a4;
  v7 = sub_1004B804C(&qword_1013E0220);
  v6[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for NSNotificationCenter.Notifications.Iterator(0);
  v6[7] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v6[8] = v9;
  v6[9] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MainActor(0);
  v6[10] = v10;
  v6[11] = static MainActor.shared.getter(v10);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v10, &protocol witness table for MainActor);
  v6[12] = v11;
  v6[13] = v12;
  return swift_task_switch(sub_10096D944, v11, v12);
}

uint64_t sub_10096D944()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  NSString v7;
  id v8;
  NSString v9;
  NSString v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  void *v16;
  NSString v17;
  NSString v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(void **)(*(_QWORD *)(v0 + 24) + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController);
  *(_QWORD *)(v0 + 112) = v1;
  v2 = v1;
  v3 = objc_msgSend(v2, "layerHost");
  if (v3
    && (v4 = v3,
        v5 = objc_msgSend(v3, "canvasLayer"),
        *(_QWORD *)(v0 + 120) = v5,
        swift_unknownObjectRelease(v4),
        v5))
  {
    v6 = *(void **)(v0 + 32);
    sub_1007BE5D4();
    v7 = String._bridgeToObjectiveC()();
    objc_msgSend(v6, "startedTest:", v7, swift_bridgeObjectRelease().n128_f64[0]);

    v8 = objc_msgSend(objc_allocWithZone((Class)CRLCanvasZoomTracker), "initWithCanvasLayer:", v5);
    *(_QWORD *)(v0 + 128) = v8;
    v9 = String._bridgeToObjectiveC()();
    sub_1007BE5D4();
    v10 = String._bridgeToObjectiveC()();
    objc_msgSend(v6, "startedSubTest:forTest:", v9, v10, swift_bridgeObjectRelease().n128_f64[0]);

    objc_msgSend(v8, "zoomWithScale:velocity:locationInView:phase:", 0, 0.999, 0.5, 400.0, 300.0);
    objc_msgSend(v8, "zoomWithScale:velocity:locationInView:phase:", 1, 0.5, 0.5, 400.0, 300.0);
    objc_msgSend(v8, "zoomWithScale:velocity:locationInView:phase:", 2, 0.25, 0.5, 400.0, 300.0);
    v11 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    NSNotificationCenter.notifications(named:object:)(CFSTR("CRLCanvasDidZoomNotification"), 0);

    v12 = NSNotificationCenter.Notifications.makeAsyncIterator()();
    *(_QWORD *)(v0 + 136) = static MainActor.shared.getter(v12);
    v13 = sub_1004B7878(&qword_1013E0228, (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Notifications.Iterator, (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Notifications.Iterator);
    v14 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
    *(_QWORD *)(v0 + 144) = v14;
    *v14 = v0;
    v14[1] = sub_10096DC8C;
    return dispatch thunk of AsyncIteratorProtocol.next()(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), v13);
  }
  else
  {
    v16 = *(void **)(v0 + 32);
    swift_release(*(_QWORD *)(v0 + 88));
    sub_1007BE5D4();
    v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v18 = String._bridgeToObjectiveC()();
    objc_msgSend(v16, "failedTest:withFailure:", v17, v18);

    v19 = *(_QWORD *)(v0 + 72);
    v20 = *(_QWORD *)(v0 + 48);

    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10096DC8C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 144);
  *(_QWORD *)(*v1 + 152) = v0;
  swift_task_dealloc(v3);
  v4 = *(_QWORD *)(v2 + 136);
  if (v0)
  {
    if (v4)
    {
      ObjectType = swift_getObjectType(v4);
      v6 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor);
      v8 = v7;
    }
    else
    {
      v6 = 0;
      v8 = 0;
    }
    v11 = sub_10096DF60;
  }
  else
  {
    if (v4)
    {
      v9 = swift_getObjectType(v4);
      v6 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
      v8 = v10;
    }
    else
    {
      v6 = 0;
      v8 = 0;
    }
    v11 = sub_10096DD50;
  }
  return swift_task_switch(v11, v6, v8);
}

uint64_t sub_10096DD50()
{
  _QWORD *v0;

  swift_release(v0[17]);
  return swift_task_switch(sub_10096DD88, v0[12], v0[13]);
}

uint64_t sub_10096DD88(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v11;
  NSString v12;
  NSString v13;
  NSString v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v3 = *(_QWORD *)(v2 + 48);
  v4 = type metadata accessor for Notification(0, a2);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v3, 1, v4) == 1)
  {
    v6 = *(void **)(v2 + 120);
    v5 = *(void **)(v2 + 128);
    v7 = *(_QWORD *)(v2 + 88);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v2 + 64) + 8))(*(_QWORD *)(v2 + 72), *(_QWORD *)(v2 + 56));

    swift_release(v7);
    v8 = *(_QWORD *)(v2 + 72);
    v9 = *(_QWORD *)(v2 + 48);

    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    return (*(uint64_t (**)(void))(v2 + 8))();
  }
  else
  {
    v11 = *(void **)(v2 + 32);
    v12 = String._bridgeToObjectiveC()();
    sub_1007BE5D4();
    v13 = String._bridgeToObjectiveC()();
    objc_msgSend(v11, "finishedSubTest:forTest:", v12, v13, swift_bridgeObjectRelease().n128_f64[0]);

    sub_1007BE5D4();
    v14 = String._bridgeToObjectiveC()();
    objc_msgSend(v11, "finishedTest:", v14, swift_bridgeObjectRelease().n128_f64[0]);

    v15 = sub_1004CB800(v3, &qword_1013E0220);
    *(_QWORD *)(v2 + 136) = static MainActor.shared.getter(v15);
    v16 = sub_1004B7878(&qword_1013E0228, (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Notifications.Iterator, (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Notifications.Iterator);
    v17 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
    *(_QWORD *)(v2 + 144) = v17;
    *v17 = v2;
    v17[1] = sub_10096DC8C;
    return dispatch thunk of AsyncIteratorProtocol.next()(*(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), v16);
  }
}

uint64_t sub_10096DF60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 152);
  v1 = sub_1004B804C(&qword_1013E0210);
  v2 = swift_dynamicCast(v1, v0 + 16, v1, &type metadata for Never, 7);
  return swift_willThrowTypedImpl(v2, &type metadata for Never, &protocol witness table for Never);
}

uint64_t type metadata accessor for CRLPPTBoard_Zoom()
{
  return objc_opt_self(_TtC8Freeform16CRLPPTBoard_Zoom);
}

uint64_t type metadata accessor for CRLPPTTests()
{
  return objc_opt_self(_TtC8Freeform11CRLPPTTests);
}

void sub_10096E004()
{
  uint64_t v0;

  sub_100969F3C(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

double sub_10096E00C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

double sub_10096E01C(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_10096E024(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1;
  v3 = 7;
  if (((a2 >> 60) & ((a1 & 0x800000000000000) == 0)) != 0)
    v3 = 11;
  v4 = String.subscript.getter(15, v3 | (v2 << 16), a1, a2);
  v6 = v5;
  v9 = sub_10096E0A0(v4, v7, v8, v5);
  swift_bridgeObjectRelease(v6);
  return v9;
}

uint64_t sub_10096E0A0(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v5;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[5];

  v5 = a3;
  if ((a4 & 0x1000000000000000) != 0)
  {
    v12 = sub_10096E1E4(a1, a2, a3, a4);
    if (v12)
    {
      v9 = v12;
      v8 = (unint64_t)sub_100BF13AC(v12, 0);
      v5 = sub_10096E2D0((unint64_t)v15, v8 + 32, v9, a1, a2, v5, a4);
      v13 = v15[3];
      swift_bridgeObjectRetain(a4);
      swift_bridgeObjectRelease(v13);
      if (v5 != v9)
      {
        __break(1u);
        goto LABEL_11;
      }
    }
    else
    {
      v8 = (unint64_t)_swiftEmptyArrayStorage;
    }
    v14 = static String._uncheckedFromUTF8(_:)(v8 + 32, *(_QWORD *)(v8 + 16));
    swift_release(v8);
    return v14;
  }
  else
  {
    v8 = a1 >> 16;
    v9 = a2 >> 16;
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
      {
        v10 = (a4 & 0xFFFFFFFFFFFFFFFLL) + 32;
LABEL_5:
        v10 += v8;
        return static String._uncheckedFromUTF8(_:)(v10, v9 - v8);
      }
LABEL_11:
      v10 = _StringObject.sharedUTF8.getter(v5, a4);
      if (!v10)
        return static String._uncheckedFromUTF8(_:)(v10, v9 - v8);
      goto LABEL_5;
    }
    v15[0] = a3;
    v15[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return static String._uncheckedFromUTF8(_:)((char *)v15 + v8, v9 - v8);
  }
}

unint64_t sub_10096E1E4(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v7 = result;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    result = sub_100BF1410(result, a3, a4);
    v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    result = sub_100BF1410(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0)
      return (a2 >> 16) - (v7 >> 16);
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v10 = a3 & 0xFFFFFFFFFFFFLL;
  if (v10 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v10 >= a2 >> 16)
  {
    return String.UTF8View._foreignDistance(from:to:)(v7);
  }
  __break(1u);
  return result;
}

unint64_t sub_10096E2D0(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[2];

  v9 = (_QWORD *)result;
  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v12 = a4;
    v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = 0;
    v12 = a4;
LABEL_33:
    *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  v11 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v23 = v16;
  v26 = a3 - 1;
  v12 = a4;
  while (1)
  {
    v17 = v12 & 0xC;
    result = v12;
    if (v17 == v15)
      result = sub_100BF1410(v12, a6, a7);
    if (result >> 14 < v27 || result >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      result = String.UTF8View._foreignSubscript(position:)();
      v19 = result;
      if (v17 != v15)
        goto LABEL_23;
    }
    else
    {
      v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        v19 = *((_BYTE *)v28 + v18);
        if (v17 != v15)
          goto LABEL_23;
      }
      else
      {
        result = v21;
        if ((a6 & 0x1000000000000000) == 0)
          result = _StringObject.sharedUTF8.getter(a6, a7);
        v19 = *(_BYTE *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0)
            goto LABEL_24;
          goto LABEL_27;
        }
      }
    }
    result = sub_100BF1410(v12, a6, a7);
    v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16)
      goto LABEL_35;
    v12 = String.UTF8View._foreignIndex(after:)(v12, a6, a7);
LABEL_29:
    *(_BYTE *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14)
      goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

unsigned __int8 *sub_10096E4E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unsigned __int8 *v13;
  uint64_t v15;
  uint64_t v16;

  v15 = a1;
  v16 = a2;
  v4 = swift_bridgeObjectRetain(a2);
  v5 = String.init<A>(_:)(&v15, &type metadata for String, &protocol witness table for String, &protocol witness table for String, v4);
  v7 = v5;
  v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v10 = HIBYTE(v8) & 0xF;
    v15 = v7;
    v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    v9 = (unsigned __int8 *)&v15;
    goto LABEL_7;
  }
  v7 = sub_10096E024(v5, v6);
  v12 = v11;
  swift_bridgeObjectRelease();
  v8 = v12;
  if ((v12 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    v9 = (unsigned __int8 *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v9 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v7, v8);
  }
LABEL_7:
  v13 = sub_10096E5C4(v9, v10, a3);
  swift_bridgeObjectRelease();
  return v13;
}

unsigned __int8 *sub_10096E5C4(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 *v18;
  unsigned int v19;
  char v20;
  uint64_t v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  uint64_t v25;
  unsigned int v26;
  char v27;
  uint64_t v28;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8)
                    return 0;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
                return 0;
              v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12)))
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      v22 = a3 + 48;
      v23 = a3 + 55;
      v24 = a3 + 87;
      if (a3 > 10)
      {
        v22 = 58;
      }
      else
      {
        v24 = 97;
        v23 = 65;
      }
      if (result)
      {
        v25 = 0;
        do
        {
          v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24)
                return 0;
              v27 = -87;
            }
            else
            {
              v27 = -55;
            }
          }
          else
          {
            v27 = -48;
          }
          v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63)
            return 0;
          v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27)))
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  v14 = a2 - 1;
  if (a2 == 1)
    return 0;
  v15 = a3 + 48;
  v16 = a3 + 55;
  v17 = a3 + 87;
  if (a3 > 10)
  {
    v15 = 58;
  }
  else
  {
    v17 = 97;
    v16 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v18 = result + 1;
  do
  {
    v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17)
          return 0;
        v20 = -87;
      }
      else
      {
        v20 = -55;
      }
    }
    else
    {
      v20 = -48;
    }
    v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
      return 0;
    v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20)))
      return 0;
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_10096E840()
{
  return sub_10096EE14(40);
}

uint64_t sub_10096E848()
{
  uint64_t v0;

  return sub_10096A5E4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_10096E858()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10096E87C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v0 + v4, v1);
  if (EnumCaseMultiPayload == 2)
  {
    v9 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v0 + v4, v9);
    type metadata accessor for CRLBoardIdentifierStorage(0);
    swift_bridgeObjectRelease();
    sub_1004B804C((uint64_t *)&unk_1013EA630);
    goto LABEL_6;
  }
  if (EnumCaseMultiPayload == 1)
  {
    v7 = sub_1004B804C(&qword_1013E1790);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v0 + v4, 5, v7))
    {
      v8 = type metadata accessor for UUID(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v0 + v4, v8);
LABEL_6:
      swift_bridgeObjectRelease();
    }
  }
  return swift_deallocObject(v0, v5 + v4 + 2, v3 | 7);
}

uint64_t sub_10096E9A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10096E9E8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char v11;
  char v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = (char *)v1 + *(_QWORD *)(v4 + 64) + v5;
  v11 = *v10;
  v12 = v10[1];
  v13 = (_QWORD *)swift_task_alloc(dword_1013FA32C);
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_1004CFD00;
  return sub_100910218(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_10096EAA0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10096EAE0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10096EB0C()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v0 + 16) + 160))(*(_QWORD *)(v0 + 24));
}

uint64_t sub_10096EB38()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10096EB6C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_1013FDDFC);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1004CF80C;
  return sub_10096D884(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_10096EBEC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10096EC10()
{
  uint64_t v0;

  sub_10096D620(*(void **)(v0 + 16));
}

void sub_10096EC34()
{
  uint64_t v0;

  sub_10096D6A4(*(void **)(v0 + 16));
}

void sub_10096EC5C(uint64_t a1)
{
  uint64_t v1;

  sub_10096927C(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

void sub_10096EC68()
{
  uint64_t v0;

  sub_1009697BC(*(void **)(v0 + 16));
}

uint64_t sub_10096EC78()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

void sub_10096ECA4()
{
  uint64_t v0;

  sub_100969A38(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(void (**)(void))(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_10096ECB8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10096ECE4(uint64_t a1)
{
  uint64_t *v1;

  return sub_100969820(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

void sub_10096ECF4()
{
  uint64_t v0;

  sub_10096D620(*(void **)(v0 + 16));
}

void sub_10096ED18(char a1)
{
  uint64_t v1;

  sub_10096CEC0(a1, *(void **)(v1 + 16));
}

void sub_10096ED20()
{
  uint64_t v0;

  sub_10096D620(*(void **)(v0 + 16));
}

void sub_10096ED50()
{
  uint64_t v0;

  sub_10096D6A4(*(void **)(v0 + 16));
}

uint64_t sub_10096ED84()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10096EDB0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 48, 7);
}

void sub_10096EDD4()
{
  uint64_t v0;

  sub_1009690C8(*(void **)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10096EDE4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10096EE0C()
{
  return sub_10096EE14(48);
}

uint64_t sub_10096EE14(uint64_t a1)
{
  uint64_t v1;

  swift_release(*(_QWORD *)(v1 + 24));
  return swift_deallocObject(v1, a1, 7);
}

void sub_10096EE54()
{
  uint64_t v0;

  sub_10096B3DC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_10096EE64()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1004B804C(&qword_1013FDE18);
  v1 = swift_allocObject(v0, 368, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100F0E490;
  *(_QWORD *)(v1 + 32) = type metadata accessor for CRLPPTNavigate_OpenBoard();
  *(_QWORD *)(v1 + 40) = &off_10128BB10;
  *(_QWORD *)(v1 + 48) = &off_10128BB28;
  *(_QWORD *)(v1 + 56) = type metadata accessor for CRLPPTNavigate_OpenNewBoard();
  *(_QWORD *)(v1 + 64) = &off_10128BB10;
  *(_QWORD *)(v1 + 72) = &off_10128BB28;
  *(_QWORD *)(v1 + 80) = type metadata accessor for CRLPPTNavigate_CloseBoard();
  *(_QWORD *)(v1 + 88) = &off_10128BB10;
  *(_QWORD *)(v1 + 96) = &off_10128BB28;
  *(_QWORD *)(v1 + 104) = type metadata accessor for CRLPPTLibrary_Scroll();
  *(_QWORD *)(v1 + 112) = &off_10128BB10;
  *(_QWORD *)(v1 + 120) = &off_10128BB28;
  *(_QWORD *)(v1 + 128) = type metadata accessor for CRLPPTLibrary_ScrollRecap();
  *(_QWORD *)(v1 + 136) = &off_10128BB10;
  *(_QWORD *)(v1 + 144) = &off_10128BB28;
  *(_QWORD *)(v1 + 152) = type metadata accessor for CRLPPTLibrary_Rotate();
  *(_QWORD *)(v1 + 160) = &off_10128BB10;
  *(_QWORD *)(v1 + 168) = &off_10128BB28;
  *(_QWORD *)(v1 + 176) = type metadata accessor for CRLPPTLibrary_Resize();
  *(_QWORD *)(v1 + 184) = &off_10128BB10;
  *(_QWORD *)(v1 + 192) = &off_10128BB28;
  *(_QWORD *)(v1 + 200) = type metadata accessor for CRLPPTBoard_ScrollVertical();
  *(_QWORD *)(v1 + 208) = &off_10128BB10;
  *(_QWORD *)(v1 + 216) = &off_10128BB28;
  *(_QWORD *)(v1 + 224) = type metadata accessor for CRLPPTBoard_ScrollHorizontal();
  *(_QWORD *)(v1 + 232) = &off_10128BB10;
  *(_QWORD *)(v1 + 240) = &off_10128BB28;
  *(_QWORD *)(v1 + 248) = type metadata accessor for CRLPPTBoard_ScrollNatural();
  *(_QWORD *)(v1 + 256) = &off_10128BB10;
  *(_QWORD *)(v1 + 264) = &off_10128BB28;
  *(_QWORD *)(v1 + 272) = type metadata accessor for CRLPPTBoard_ScrollRecap();
  *(_QWORD *)(v1 + 280) = &off_10128BB10;
  *(_QWORD *)(v1 + 288) = &off_10128BB28;
  *(_QWORD *)(v1 + 296) = type metadata accessor for CRLPPTBoard_Rotate();
  *(_QWORD *)(v1 + 304) = &off_10128BB10;
  *(_QWORD *)(v1 + 312) = &off_10128BB28;
  *(_QWORD *)(v1 + 320) = type metadata accessor for CRLPPTBoard_Resize();
  *(_QWORD *)(v1 + 328) = &off_10128BB10;
  *(_QWORD *)(v1 + 336) = &off_10128BB28;
  *(_QWORD *)(v1 + 344) = type metadata accessor for CRLPPTBoard_Zoom();
  *(_QWORD *)(v1 + 352) = &off_10128BB10;
  *(_QWORD *)(v1 + 360) = &off_10128BB28;
  return v1;
}

void sub_10096F018(void *a1, void *a2, uint64_t a3)
{
  void *v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  char *v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  objc_class *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  objc_super v35;
  uint64_t v36;

  v7 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v7);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (void *)objc_opt_self(UIApplication);
  v11 = v3;
  v12 = objc_msgSend(v10, "sharedApplication");
  v13 = objc_msgSend(v12, "delegate");

  if (!v13)
  {
    __break(1u);
    goto LABEL_15;
  }
  v14 = type metadata accessor for CRLiOSAppDelegate();
  v15 = *(_QWORD *)(swift_dynamicCastClassUnconditional(v13, v14, 0, 0, 0)
                  + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_stencilLibrary);
  swift_retain(v15);
  swift_unknownObjectRelease(v13);
  if (!v15)
  {
LABEL_15:
    __break(1u);
    return;
  }
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform34CRLiOSStencilLibraryViewController_stencilLibrary] = v15;
  v16 = &v11[OBJC_IVAR____TtC8Freeform34CRLiOSStencilLibraryViewController____lazy_storage___gridView];
  v17 = _s11SwiftUIViewVMa(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform34CRLiOSStencilLibraryViewController____lazy_storage___gridViewController] = 0;
  v18 = OBJC_IVAR____TtC8Freeform34CRLiOSStencilLibraryViewController_swiftUIPublisher;
  v19 = _s11SwiftUIViewV9PublisherCMa(0);
  v20 = swift_allocObject(v19, *(unsigned int *)(v19 + 48), *(unsigned __int16 *)(v19 + 52));
  v36 = 0;
  v21 = sub_1004B804C((uint64_t *)&unk_101409880);
  Published.init(initialValue:)(&v36, v21);
  *(_QWORD *)&v11[v18] = v20;
  swift_unknownObjectUnownedInit(&v11[OBJC_IVAR____TtC8Freeform34CRLiOSStencilLibraryViewController_editingCoordinator], a1);
  swift_unknownObjectUnownedInit(&v11[OBJC_IVAR____TtC8Freeform34CRLiOSStencilLibraryViewController_icc], a2);
  if ((a3 & 0xC000000000000001) != 0)
  {
    if (a3 < 0)
      v22 = a3;
    else
      v22 = a3 & 0xFFFFFFFFFFFFFF8;
    if (__CocoaSet.count.getter(v22))
      goto LABEL_8;
LABEL_10:
    swift_bridgeObjectRelease();
    v24 = 0;
    goto LABEL_11;
  }
  if (!*(_QWORD *)(a3 + 16))
    goto LABEL_10;
LABEL_8:
  v23 = _s12DataArchiverCMa();
  v24 = swift_allocObject(v23, 64, 7);
  *(_OWORD *)(v24 + 32) = xmmword_100F02070;
  *(_QWORD *)(v24 + 48) = 0;
  *(_QWORD *)(v24 + 56) = 0;
  swift_unknownObjectUnownedInit(v24 + 24, a1);
  *(_QWORD *)(v24 + 16) = a3;
LABEL_11:
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform34CRLiOSStencilLibraryViewController_stencilDataArchiver] = v24;

  v25 = (objc_class *)type metadata accessor for CRLiOSStencilLibraryViewController(0);
  v35.receiver = v11;
  v35.super_class = v25;
  v26 = (char *)objc_msgSendSuper2(&v35, "initWithNibName:bundle:", 0, 0);
  v27 = *(_QWORD *)&v26[OBJC_IVAR____TtC8Freeform34CRLiOSStencilLibraryViewController_stencilDataArchiver];
  if (v27)
  {
    v28 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v9, 1, 1, v28);
    type metadata accessor for MainActor(0);
    v29 = v26;
    swift_retain_n(v27, 2);
    v30 = v29;
    v31 = static MainActor.shared.getter(v30);
    v32 = (_QWORD *)swift_allocObject(&unk_10128C280, 48, 7);
    v32[2] = v31;
    v32[3] = &protocol witness table for MainActor;
    v32[4] = v30;
    v32[5] = v27;
    v33 = sub_100618920((uint64_t)v9, (uint64_t)&unk_1013FDED8, (uint64_t)v32);
    swift_release(v33);
    swift_release(v27);

  }
}

uint64_t sub_10096F34C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[5] = a4;
  v5[6] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[7] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v5[8] = v7;
  v5[9] = v8;
  return swift_task_switch(sub_10096F3B8, v7, v8);
}

uint64_t sub_10096F3B8()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 80) = *(_QWORD *)(*(_QWORD *)(v0 + 40)
                                   + OBJC_IVAR____TtC8Freeform34CRLiOSStencilLibraryViewController_swiftUIPublisher);
  return swift_task_switch(sub_10096F3E0, 0, 0);
}

uint64_t sub_10096F3E0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = sub_10087EDAC();
  *(_QWORD *)(v0 + 88) = v1;
  v2 = (_QWORD *)swift_task_alloc(async function pointer to Task.result.getter[1]);
  *(_QWORD *)(v0 + 96) = v2;
  type metadata accessor for CGImage(0);
  v4 = v3;
  v5 = sub_1004B804C(&qword_1013E0210);
  *v2 = v0;
  v2[1] = sub_10096F478;
  return Task.result.getter(v0 + 16, v1, v4, v5, &protocol self-conformance witness table for Error);
}

uint64_t sub_10096F478()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 88);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 96));
  swift_release(v1);
  return swift_task_switch(sub_10096F4D4, 0, 0);
}

uint64_t sub_10096F4D4(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  *(_QWORD *)(v1 + 104) = *(_QWORD *)(v1 + 16);
  if ((*(_BYTE *)(v1 + 24) & 1) != 0)
  {
    swift_willThrow(a1);
    v2 = *(_QWORD *)(v1 + 64);
    v3 = *(_QWORD *)(v1 + 72);
    v4 = sub_10096F5EC;
  }
  else
  {
    v2 = *(_QWORD *)(v1 + 64);
    v3 = *(_QWORD *)(v1 + 72);
    v4 = sub_10096F530;
  }
  return swift_task_switch(v4, v2, v3);
}

uint64_t sub_10096F530()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  uint64_t KeyPath;
  uint64_t v5;

  v1 = *(void **)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 80);
  swift_release(*(_QWORD *)(v0 + 56));
  v3 = objc_msgSend(objc_allocWithZone((Class)UIImage), "initWithCGImage:", v1);
  sub_1004E1E08(v1, 0);
  KeyPath = swift_getKeyPath("أS");
  v5 = swift_getKeyPath(byte_100F1D980);
  *(_QWORD *)(v0 + 32) = v3;
  swift_retain(v2);
  static Published.subscript.setter(v0 + 32, v2, KeyPath, v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10096F5EC()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_release(*(_QWORD *)(v0 + 56));
  return (*(uint64_t (**)(__n128))(v0 + 8))(v1);
}

uint64_t sub_10096F79C(char a1)
{
  void *v1;
  char v3;
  uint64_t result;
  id v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  char v11;
  _QWORD v12[5];
  objc_super v13;

  v13.receiver = v1;
  v13.super_class = (Class)type metadata accessor for CRLiOSStencilLibraryViewController(0);
  objc_msgSendSuper2(&v13, "viewDidAppear:", a1 & 1);
  v12[3] = &type metadata for CRLFeatureFlags;
  v12[4] = sub_1004DB6DC();
  LOBYTE(v12[0]) = 0;
  v3 = isFeatureEnabled(_:)(v12);
  result = _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v12);
  if ((v3 & 1) != 0)
  {
    v5 = objc_msgSend(v1, "traitCollection");
    v6 = objc_msgSend(v5, "crl_isCompactWidth");

    if (v6)
    {
      if (qword_1013DCB20 != -1)
        swift_once(&qword_1013DCB20, sub_1005E9770);
      v7 = sub_1004B804C((uint64_t *)&unk_1013E1B00);
      v8 = v7;
      v9 = qword_10147EB38;
    }
    else
    {
      if (qword_1013DD440 != -1)
        swift_once(&qword_1013DD440, sub_1008E1D00);
      v7 = sub_1004B804C((uint64_t *)&unk_1013E1B00);
      v8 = v7;
      v9 = qword_10147FDA0;
    }
    v10 = sub_1004F2A1C(v7, (uint64_t)v9);
    v11 = 1;
    swift_beginAccess(v10, v12, 33, 0);
    Tips.Parameter.wrappedValue.setter(&v11, v8);
    return swift_endAccess(v12);
  }
  return result;
}

void sub_10096F950(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *Strong;
  id v9;
  id v10;
  uint64_t v11;
  Class isa;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t inited;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[3];
  char v36[72];
  char v37[72];
  _BYTE v38[32];
  char v39[24];

  v3 = *(_QWORD *)(*(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform34CRLiOSStencilLibraryViewController_stencilLibrary]
                 + OBJC_IVAR____TtC8Freeform17CRLStencilLibrary_fakeDataStore);
  swift_beginAccess(v3 + 16, v39, 0, 0);
  v4 = *(_QWORD *)(v3 + 16);
  v35[2] = a1;
  swift_bridgeObjectRetain(v4);
  sub_100C9D2D0((uint64_t (*)(uint64_t *, __n128))sub_1009711A8, (uint64_t)v35, v4);
  v6 = v5;
  swift_bridgeObjectRelease(v4);
  if (v6)
  {
    v7 = &v1[OBJC_IVAR____TtC8Freeform34CRLiOSStencilLibraryViewController_icc];
    Strong = (void *)swift_unknownObjectUnownedLoadStrong(&v1[OBJC_IVAR____TtC8Freeform34CRLiOSStencilLibraryViewController_icc]);
    v9 = objc_msgSend(Strong, "canvasEditor");

    if (v9)
    {
      v10 = objc_msgSend((id)objc_opt_self(CRLPasteboard), "pasteboardWithUniqueName");
      v11 = *(_QWORD *)(v6 + 16);
      type metadata accessor for CRLBoardItem(0);
      sub_1004B7878((unint64_t *)&qword_1013E4190, type metadata accessor for CRLBoardItem, (uint64_t)&protocol conformance descriptor for NSObject);
      swift_bridgeObjectRetain(v11);
      isa = Set._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v9, "copyBoardItems:toPasteboard:asPDF:nativeOnly:", isa, v10, 0, 1, swift_bridgeObjectRelease(v11).n128_f64[0]);

      objc_msgSend(v9, "pasteWithPasteboard:sender:", v10, 0);
      objc_msgSend(v1, "dismissViewControllerAnimated:completion:", 1, 0);
      swift_release(v6);
      swift_unknownObjectRelease(v9);
    }
    else
    {
      if (qword_1013DD760 != -1)
        swift_once(&qword_1013DD760, sub_100A027F0);
      swift_beginAccess(&static OS_os_log.crlStencilLibrary, v38, 0, 0);
      v24 = (void *)static OS_os_log.crlStencilLibrary;
      v25 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v25, v36);
      *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
      v27 = (void *)swift_unknownObjectUnownedLoadStrong(v7);
      v10 = v24;
      v28 = objc_msgSend(v27, "description");
      v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
      v31 = v30;

      *(_QWORD *)(inited + 56) = &type metadata for String;
      v32 = sub_1004CFC2C();
      *(_QWORD *)(inited + 64) = v32;
      *(_QWORD *)(inited + 32) = v29;
      *(_QWORD *)(inited + 40) = v31;
      v33 = static os_log_type_t.error.getter(v32);
      sub_100A06EBC((uint64_t)v10, &_mh_execute_header, v33, "Tried to insert stencil, but could not retrieve canvas editor from ICC %@", 73, 2, inited);
      swift_setDeallocating(inited);
      v34 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(inited + 32, 1, v34);
      swift_release(v6);
    }
  }
  else
  {
    if (qword_1013DD760 != -1)
      swift_once(&qword_1013DD760, sub_100A027F0);
    swift_beginAccess(&static OS_os_log.crlStencilLibrary, v38, 0, 0);
    v13 = (void *)static OS_os_log.crlStencilLibrary;
    v14 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v15 = swift_initStackObject(v14, v37);
    *(_OWORD *)(v15 + 16) = xmmword_100EF5E40;
    v16 = type metadata accessor for UUID(0);
    v17 = sub_1004B7878(&qword_1013E49E0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v10 = v13;
    v18 = dispatch thunk of CustomStringConvertible.description.getter(v16, v17);
    v20 = v19;
    *(_QWORD *)(v15 + 56) = &type metadata for String;
    v21 = sub_1004CFC2C();
    *(_QWORD *)(v15 + 64) = v21;
    *(_QWORD *)(v15 + 32) = v18;
    *(_QWORD *)(v15 + 40) = v20;
    v22 = static os_log_type_t.error.getter(v21);
    sub_100A06EBC((uint64_t)v10, &_mh_execute_header, v22, "Tried to insert stencil, but could not retrieve stencil data for identifier %@", 78, 2, v15);
    swift_setDeallocating(v15);
    v23 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v15 + 32, 1, v23);
  }

}

void sub_10096FE2C(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;

  v5 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v5);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform34CRLiOSStencilLibraryViewController_stencilDataArchiver];
  if (v8)
  {
    v9 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v7, 1, 1, v9);
    type metadata accessor for MainActor(0);
    swift_retain_n(v8, 2);
    swift_bridgeObjectRetain(a2);
    v10 = v2;
    v11 = static MainActor.shared.getter(v10);
    v12 = (_QWORD *)swift_allocObject(&unk_10128C258, 64, 7);
    v12[2] = v11;
    v12[3] = &protocol witness table for MainActor;
    v12[4] = a1;
    v12[5] = a2;
    v12[6] = v8;
    v12[7] = v10;
    v13 = sub_100618920((uint64_t)v7, (uint64_t)&unk_1013FDEC8, (uint64_t)v12);
    swift_release(v13);
    swift_release(v8);
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"saveStencil(title:)", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSStencilLibraryViewController.swift", 104, 2, 116, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"saveStencil(title:)", 19, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSStencilLibraryViewController.swift", 104, 2u, 116, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  }
}

uint64_t sub_10096FFEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;

  v7[27] = a6;
  v7[28] = a7;
  v7[25] = a4;
  v7[26] = a5;
  v8 = type metadata accessor for MainActor(0);
  v7[29] = v8;
  v7[30] = static MainActor.shared.getter(v8);
  return swift_task_switch(sub_100970040, 0, 0);
}

uint64_t sub_100970040()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = sub_10087EDAC();
  v0[31] = v1;
  v2 = (_QWORD *)swift_task_alloc(async function pointer to Task.result.getter[1]);
  v0[32] = v2;
  type metadata accessor for CGImage(0);
  v4 = v3;
  v5 = sub_1004B804C(&qword_1013E0210);
  v0[33] = v5;
  *v2 = v0;
  v2[1] = sub_1009700DC;
  return Task.result.getter(v0 + 22, v1, v4, v5, &protocol self-conformance witness table for Error);
}

uint64_t sub_1009700DC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 248);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 256));
  swift_release(v1);
  return swift_task_switch(sub_100970138, 0, 0);
}

uint64_t sub_100970138(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v1 + 272) = *(_QWORD *)(v1 + 176);
  if ((*(_BYTE *)(v1 + 184) & 1) != 0)
  {
    v2 = *(_QWORD *)(v1 + 232);
    swift_willThrow(a1);
    v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
    v5 = v4;
    v6 = sub_1009702C8;
    v7 = v3;
    v8 = v5;
  }
  else
  {
    v9 = dispatch thunk of Actor.unownedExecutor.getter(*(_QWORD *)(v1 + 232), &protocol witness table for MainActor);
    v8 = v10;
    *(_QWORD *)(v1 + 280) = v9;
    *(_QWORD *)(v1 + 288) = v10;
    v6 = sub_1009701D0;
    v7 = v9;
  }
  return swift_task_switch(v6, v7, v8);
}

uint64_t sub_1009701D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  _QWORD *v5;
  void *v7;

  *(_QWORD *)(v0 + 88) = *(_QWORD *)(v0 + 272);
  v1 = *(_QWORD *)(v0 + 224);
  v2 = *(_QWORD *)(v0 + 208);
  *(_QWORD *)(v0 + 96) = *(_QWORD *)(v0 + 200);
  *(_QWORD *)(v0 + 104) = v2;
  *(_QWORD *)(v0 + 112) = 0;
  *(_QWORD *)(v0 + 120) = 0;
  *(_QWORD *)(v0 + 128) = &_swiftEmptySetSingleton;
  *(_QWORD *)(v0 + 136) = &_swiftEmptySetSingleton;
  *(_WORD *)(v0 + 144) = 1;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform34CRLiOSStencilLibraryViewController_stencilDataArchiver);
  if (v3)
  {
    v4 = *(void **)(v3 + 16);
    swift_bridgeObjectRetain(v2);
    swift_bridgeObjectRetain(v4);
  }
  else
  {
    swift_bridgeObjectRetain(v2);
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
      && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
    {
      sub_1004B5FB0((uint64_t)_swiftEmptyArrayStorage);
      v4 = v7;
    }
    else
    {
      v4 = &_swiftEmptySetSingleton;
    }
  }
  *(_QWORD *)(v0 + 296) = v4;
  v5 = (_QWORD *)swift_task_alloc(dword_1014028CC);
  *(_QWORD *)(v0 + 304) = v5;
  *v5 = v0;
  v5[1] = sub_1009702FC;
  return sub_100A20040((uint64_t)v4, v0 + 88);
}

uint64_t sub_1009702C8()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_release(*(_QWORD *)(v0 + 240));
  return (*(uint64_t (**)(__n128))(v0 + 8))(v1);
}

uint64_t sub_1009702FC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 304);
  *(_QWORD *)(*v1 + 312) = v0;
  swift_task_dealloc(v3);
  swift_bridgeObjectRelease();
  if (v0)
    v4 = sub_1009703E8;
  else
    v4 = sub_100970364;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 280), *(_QWORD *)(v2 + 288));
}

uint64_t sub_100970364()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 272);
  v2 = *(_QWORD *)(v0 + 208);
  objc_msgSend(*(id *)(v0 + 224), "dismissViewControllerAnimated:completion:", 1, 0, swift_release(*(_QWORD *)(v0 + 240)).n128_f64[0]);

  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(0);
  swift_bridgeObjectRelease_n(&_swiftEmptySetSingleton, 2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009703E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t inited;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;

  swift_release(*(_QWORD *)(v0 + 240));
  if (qword_1013DD760 != -1)
    swift_once(&qword_1013DD760, sub_100A027F0);
  v1 = *(_QWORD *)(v0 + 312);
  v2 = *(_QWORD *)(v0 + 264);
  v3 = *(void **)(v0 + 272);
  swift_beginAccess(&static OS_os_log.crlStencilLibrary, v0 + 152, 0, 0);
  v4 = (void *)static OS_os_log.crlStencilLibrary;
  v5 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v5, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_QWORD *)(v0 + 192) = v1;
  v7 = v4;
  swift_errorRetain(v1);
  v8 = String.init<A>(describing:)(v0 + 192, v2);
  v10 = v9;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v11 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v11;
  *(_QWORD *)(inited + 32) = v8;
  *(_QWORD *)(inited + 40) = v10;
  v12 = static os_log_type_t.error.getter(v11);
  sub_100A06EBC((uint64_t)v7, &_mh_execute_header, v12, "Error saving stencil: %@", 24, 2, inited);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n(&_swiftEmptySetSingleton, 2);
  swift_setDeallocating(inited);
  v13 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v13);

  swift_errorRelease(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_10097057C()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
  qword_1013FDE20 = (uint64_t)result;
  return result;
}

double sub_1009705B4()
{
  double result;

  result = 800.0;
  xmmword_1013FDE28 = xmmword_100F1D8E0;
  return result;
}

uint64_t sub_1009705CC@<X0>(uint64_t a1@<X8>)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  _BYTE v15[24];
  _BYTE v16[24];

  v3 = sub_1004B804C(&qword_1013FDEB8);
  __chkstk_darwin(v3);
  v5 = &v15[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v8 = &v15[-v7];
  v9 = (uint64_t)&v1[OBJC_IVAR____TtC8Freeform34CRLiOSStencilLibraryViewController____lazy_storage___gridView];
  swift_beginAccess(&v1[OBJC_IVAR____TtC8Freeform34CRLiOSStencilLibraryViewController____lazy_storage___gridView], v16, 0, 0);
  sub_100970F88(v9, (uint64_t)v8);
  v10 = _s11SwiftUIViewVMa(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    return sub_10097109C((uint64_t)v8, a1);
  sub_100970FD0((uint64_t)v8);
  v12 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform34CRLiOSStencilLibraryViewController_stencilDataArchiver] != 0;
  v13 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform34CRLiOSStencilLibraryViewController_swiftUIPublisher];
  swift_retain(v13);
  sub_100767FC8((uint64_t)v1, (uint64_t)&off_10128C228, v12, v13, a1);
  sub_100971010(a1, (uint64_t)v5);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v5, 0, 1, v10);
  swift_beginAccess(v9, v15, 33, 0);
  sub_100971054((uint64_t)v5, v9);
  return swift_endAccess(v15);
}

id sub_10097075C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v13;

  v1 = v0;
  v2 = _s11SwiftUIViewVMa(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = OBJC_IVAR____TtC8Freeform34CRLiOSStencilLibraryViewController____lazy_storage___gridViewController;
  v6 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform34CRLiOSStencilLibraryViewController____lazy_storage___gridViewController);
  if (v6)
  {
    v7 = *(id *)(v0 + OBJC_IVAR____TtC8Freeform34CRLiOSStencilLibraryViewController____lazy_storage___gridViewController);
  }
  else
  {
    sub_1009705CC((uint64_t)v4);
    v8 = objc_allocWithZone((Class)sub_1004B804C(&qword_1013FDEB0));
    v9 = (void *)UIHostingController.init(rootView:)(v4);
    v10 = *(void **)(v0 + v5);
    *(_QWORD *)(v1 + v5) = v9;
    v7 = v9;

    v6 = 0;
  }
  v11 = v6;
  return v7;
}

void sub_100970818()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  void *v39;
  void *v40;
  id v41;
  id v42;
  uint64_t v43;
  Class isa;

  if (qword_1013DD5E0 != -1)
    swift_once(&qword_1013DD5E0, sub_1009705B4);
  objc_msgSend(v0, "setPreferredContentSize:", xmmword_1013FDE28);
  v1 = sub_10097075C();
  v2 = objc_msgSend(v1, "view");

  if (!v2)
  {
    __break(1u);
    goto LABEL_16;
  }
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v3 = objc_msgSend(v0, "view");
  if (!v3)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v4 = v3;
  v5 = sub_10097075C();
  v6 = objc_msgSend(v5, "view");

  if (!v6)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  objc_msgSend(v4, "addSubview:", v6);

  v7 = sub_10097075C();
  objc_msgSend(v0, "addChildViewController:", v7);

  v8 = sub_10097075C();
  objc_msgSend(v8, "didMoveToParentViewController:", v0);

  v9 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v10 = swift_allocObject(v9, 64, 7);
  *(_OWORD *)(v10 + 16) = xmmword_100EF7310;
  v11 = sub_10097075C();
  v12 = objc_msgSend(v11, "view");

  if (!v12)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v13 = objc_msgSend(v12, "topAnchor");

  v14 = objc_msgSend(v0, "view");
  if (!v14)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v15 = v14;
  v16 = objc_msgSend(v14, "safeAreaLayoutGuide");

  v17 = objc_msgSend(v16, "topAnchor");
  v18 = objc_msgSend(v13, "constraintEqualToAnchor:", v17);

  *(_QWORD *)(v10 + 32) = v18;
  v19 = sub_10097075C();
  v20 = objc_msgSend(v19, "view");

  if (!v20)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v21 = objc_msgSend(v20, "leadingAnchor");

  v22 = objc_msgSend(v0, "view");
  if (!v22)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v23 = v22;
  v24 = objc_msgSend(v22, "safeAreaLayoutGuide");

  v25 = objc_msgSend(v24, "leadingAnchor");
  v26 = objc_msgSend(v21, "constraintEqualToAnchor:", v25);

  *(_QWORD *)(v10 + 40) = v26;
  v27 = sub_10097075C();
  v28 = objc_msgSend(v27, "view");

  if (!v28)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v29 = objc_msgSend(v28, "trailingAnchor");

  v30 = objc_msgSend(v0, "view");
  if (!v30)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v31 = v30;
  v32 = objc_msgSend(v30, "safeAreaLayoutGuide");

  v33 = objc_msgSend(v32, "trailingAnchor");
  v34 = objc_msgSend(v29, "constraintEqualToAnchor:", v33);

  *(_QWORD *)(v10 + 48) = v34;
  v35 = sub_10097075C();
  v36 = objc_msgSend(v35, "view");

  if (!v36)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v37 = objc_msgSend(v36, "bottomAnchor");

  v38 = objc_msgSend(v0, "view");
  if (v38)
  {
    v39 = v38;
    v40 = (void *)objc_opt_self(NSLayoutConstraint);
    v41 = objc_msgSend(v39, "bottomAnchor");

    v42 = objc_msgSend(v37, "constraintEqualToAnchor:", v41);
    *(_QWORD *)(v10 + 56) = v42;
    specialized Array._endMutation()(v43);
    sub_1004DD8D8();
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v40, "activateConstraints:", isa, swift_bridgeObjectRelease().n128_f64[0]);

    return;
  }
LABEL_25:
  __break(1u);
}

id sub_100970D98()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSStencilLibraryViewController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100970E54()
{
  return type metadata accessor for CRLiOSStencilLibraryViewController(0);
}

uint64_t type metadata accessor for CRLiOSStencilLibraryViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1013FDE98;
  if (!qword_1013FDE98)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLiOSStencilLibraryViewController);
  return result;
}

void sub_100970E98(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[7];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[1] = "\b";
  v4[2] = "\b";
  v4[3] = &unk_100F1D930;
  sub_100970F34(319);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(v2 - 8) + 64;
    v4[5] = &unk_100F1D930;
    v4[6] = (char *)&value witness table for Builtin.NativeObject + 64;
    swift_updateClassMetadata2(a1, 256, 7, v4, a1 + 80);
  }
}

void sub_100970F34(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1013FDEA8)
  {
    v2 = _s11SwiftUIViewVMa(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1013FDEA8);
  }
}

uint64_t sub_100970F88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013FDEB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100970FD0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B804C(&qword_1013FDEB8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100971010(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s11SwiftUIViewVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100971054(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013FDEB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10097109C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s11SwiftUIViewVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1009710E0()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 48));

  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10097111C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v9 = v1[6];
  v8 = v1[7];
  v10 = (_QWORD *)swift_task_alloc(dword_1013FDEC4);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_1004CF80C;
  return sub_10096FFEC(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_1009711A8(_QWORD *a1)
{
  uint64_t v1;

  return sub_100A2045C(a1, *(_QWORD *)(v1 + 16)) & 1;
}

void sub_1009711C4()
{
  char *v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v2 = objc_msgSend(v1, "delegate");

  if (!v2)
    __break(1u);
  v3 = type metadata accessor for CRLiOSAppDelegate();
  v4 = *(_QWORD *)(swift_dynamicCastClassUnconditional(v2, v3, 0, 0, 0)
                 + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_stencilLibrary);
  swift_retain(v4);
  swift_unknownObjectRelease(v2);
  if (!v4)
    __break(1u);
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform34CRLiOSStencilLibraryViewController_stencilLibrary] = v4;
  v5 = &v0[OBJC_IVAR____TtC8Freeform34CRLiOSStencilLibraryViewController____lazy_storage___gridView];
  v6 = _s11SwiftUIViewVMa(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform34CRLiOSStencilLibraryViewController____lazy_storage___gridViewController] = 0;
  v7 = OBJC_IVAR____TtC8Freeform34CRLiOSStencilLibraryViewController_swiftUIPublisher;
  v8 = _s11SwiftUIViewV9PublisherCMa(0);
  v9 = swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
  v11 = 0;
  v10 = sub_1004B804C((uint64_t *)&unk_101409880);
  Published.init(initialValue:)(&v11, v10);
  *(_QWORD *)&v0[v7] = v9;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100FAD6F0, "Freeform/CRLiOSStencilLibraryViewController.swift", 49, 2, 40, 0);
  __break(1u);
}

uint64_t sub_100971350()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100971384(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1013FDED4);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1004CFD00;
  return sub_10096F34C(a1, v4, v5, v7, v6);
}

uint64_t sub_100971404@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _DWORD *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  char *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char *v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _OWORD v44[2];
  uint64_t v45;
  uint64_t v46;

  v40 = a3;
  v5 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  __chkstk_darwin(v5);
  v43 = (uint64_t)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CRLProto_Data(0);
  v41 = *(_QWORD *)(v7 - 8);
  v42 = v7;
  __chkstk_darwin(v7);
  v39 = (uint64_t *)((char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = type metadata accessor for UUID(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v36 - v15;
  v17 = type metadata accessor for BinaryDecodingOptions(0, v14);
  __chkstk_darwin(v17);
  v19 = (char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for CRLProto_CollaboratorCursorColor(0);
  __chkstk_darwin(v20);
  v22 = (_DWORD *)((char *)&v36 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v45 = 0;
  memset(v44, 0, sizeof(v44));
  v23 = sub_1004BE310(a1, a2);
  BinaryDecodingOptions.init()(v23);
  v24 = sub_1009719C8();
  v25 = v46;
  Message.init(serializedData:extensions:partial:options:)(a1, a2, v44, 0, v19, v20, v24);
  if (v25)
    return sub_1004BBBC8(a1, a2);
  v46 = a1;
  v37 = v10;
  v38 = v12;
  v27 = v43;
  sub_100552F84((uint64_t)v22 + *(int *)(v20 + 24), v43);
  v28 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v27, 1, v42);
  v29 = v39;
  if ((_DWORD)v28 == 1)
  {
    *(_OWORD *)v39 = xmmword_100EF78C0;
    UnknownStorage.init()(v28);
    sub_10078F968(v27);
  }
  else
  {
    sub_100552FCC(v27, (uint64_t)v39);
  }
  v30 = v40;
  v31 = v9;
  v33 = *v29;
  v32 = v29[1];
  sub_1004BE310(*v29, v32);
  sub_1004B84A4((uint64_t)v29, type metadata accessor for CRLProto_Data);
  UUID.init(crl_data:)(v33, v32);
  sub_1004BBBC8(v46, a2);
  v34 = v38;
  v35 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
  v35(v38, v16, v31);
  LODWORD(v32) = *v22;
  sub_1004B84A4((uint64_t)v22, type metadata accessor for CRLProto_CollaboratorCursorColor);
  v35(v30, v34, v31);
  result = type metadata accessor for CRLCollaboratorCursorColor(0);
  *(_DWORD *)&v30[*(int *)(result + 20)] = v32;
  return result;
}

uint64_t sub_100971718()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _DWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;

  v1 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  __chkstk_darwin(v1);
  v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRLProto_Data(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (__int128 *)((char *)&v25 - v9);
  v11 = type metadata accessor for CRLProto_CollaboratorCursorColor(0);
  __chkstk_darwin(v11);
  v13 = (_DWORD *)((char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v13 = 0;
  UnknownStorage.init()(v14);
  v26 = v11;
  v15 = (uint64_t)v13 + *(int *)(v11 + 24);
  v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
  v17 = v16(v15, 1, 1, v4);
  v25 = xmmword_100EF78C0;
  *v10 = xmmword_100EF78C0;
  UnknownStorage.init()(v17);
  sub_10078F968(v15);
  sub_100552FCC((uint64_t)v10, v15);
  v16(v15, 0, 1, v4);
  v27 = v0;
  v18 = UUID.crl_data()();
  v20 = v19;
  sub_100552F84(v15, (uint64_t)v3);
  v21 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
  if ((_DWORD)v21 == 1)
  {
    *(_OWORD *)v7 = v25;
    UnknownStorage.init()(v21);
    sub_10078F968((uint64_t)v3);
  }
  else
  {
    sub_100552FCC((uint64_t)v3, (uint64_t)v7);
  }
  sub_1004BBBC8(*(_QWORD *)v7, *((_QWORD *)v7 + 1));
  *(_QWORD *)v7 = v18;
  *((_QWORD *)v7 + 1) = v20;
  sub_10078F968(v15);
  sub_100552FCC((uint64_t)v7, v15);
  v16(v15, 0, 1, v4);
  *v13 = *(_DWORD *)(v27 + *(int *)(type metadata accessor for CRLCollaboratorCursorColor(0) + 20));
  v22 = sub_1009719C8();
  v23 = Message.serializedData(partial:)(0, v26, v22);
  sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLProto_CollaboratorCursorColor);
  return v23;
}

uint64_t type metadata accessor for CRLCollaboratorCursorColor(uint64_t a1)
{
  uint64_t result;

  result = qword_1013FDF40;
  if (!qword_1013FDF40)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLCollaboratorCursorColor);
  return result;
}

unint64_t sub_1009719C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013FDEE0;
  if (!qword_1013FDEE0)
  {
    v1 = type metadata accessor for CRLProto_CollaboratorCursorColor(255);
    result = swift_getWitnessTable(&unk_100F25590, v1);
    atomic_store(result, (unint64_t *)&qword_1013FDEE0);
  }
  return result;
}

uint64_t *sub_100971A10(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v8);
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(_DWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_DWORD *)((char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_100971A98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_DWORD *)(a1 + *(int *)(a3 + 20)) = *(_DWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100971AF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_DWORD *)(a1 + *(int *)(a3 + 20)) = *(_DWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100971B50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_DWORD *)(a1 + *(int *)(a3 + 20)) = *(_DWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100971BAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_DWORD *)(a1 + *(int *)(a3 + 20)) = *(_DWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100971C08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100971C14);
}

uint64_t sub_100971C14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_100971C50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100971C5C);
}

uint64_t sub_100971C5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_100971C9C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.Int32 + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_100971D10(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  double *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  int64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  void *v26;
  Swift::String v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  double *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  _QWORD v38[2];
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  double *v49;

  v3 = type metadata accessor for CRLBoardIdentifier(0);
  v46 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v45 = (uint64_t)v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v44 = (uint64_t)v38 - v6;
  v7 = *(_QWORD *)(a1 + 16);
  v8 = _swiftEmptyArrayStorage;
  if (!v7)
    return (uint64_t)v8;
  v38[1] = v1;
  v49 = _swiftEmptyArrayStorage;
  sub_1006006EC(0, v7, 0);
  result = sub_100B59DA8(a1);
  v11 = result;
  v12 = 0;
  v13 = a1 + 64;
  v39 = a1 + 80;
  v40 = v7;
  v42 = a1 + 64;
  v43 = a1;
  v41 = v10;
  while ((v11 & 0x8000000000000000) == 0 && v11 < 1 << *(_BYTE *)(a1 + 32))
  {
    v16 = (unint64_t)v11 >> 6;
    if ((*(_QWORD *)(v13 + 8 * ((unint64_t)v11 >> 6)) & (1 << v11)) == 0)
      goto LABEL_25;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v10)
      goto LABEL_26;
    v17 = v44;
    sub_1004B8460(*(_QWORD *)(a1 + 48) + *(_QWORD *)(v46 + 72) * v11, v44, type metadata accessor for CRLBoardIdentifier);
    v18 = v45;
    v19 = sub_1004B84E0(v17, v45, type metadata accessor for CRLBoardIdentifier);
    v47 = UUID.uuidString.getter(v19);
    v48 = v20;
    swift_bridgeObjectRetain(v20);
    v21._countAndFlagsBits = 58;
    v21._object = (void *)0xE100000000000000;
    String.append(_:)(v21);
    swift_bridgeObjectRelease();
    v23 = v47;
    v22 = v48;
    v24 = (uint64_t *)(v18 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
    v25 = *v24;
    v26 = (void *)v24[1];
    v47 = v23;
    v48 = v22;
    swift_bridgeObjectRetain(v22);
    v27._countAndFlagsBits = v25;
    v27._object = v26;
    String.append(_:)(v27);
    swift_bridgeObjectRelease();
    v29 = v47;
    v28 = v48;
    sub_1004B84A4(v18, type metadata accessor for CRLBoardIdentifier);
    v8 = v49;
    result = swift_isUniquelyReferenced_nonNull_native(v49);
    if ((result & 1) == 0)
    {
      result = sub_1006006EC(0, *((_QWORD *)v8 + 2) + 1, 1);
      v8 = v49;
    }
    v31 = *((_QWORD *)v8 + 2);
    v30 = *((_QWORD *)v8 + 3);
    if (v31 >= v30 >> 1)
    {
      result = sub_1006006EC(v30 > 1, v31 + 1, 1);
      v8 = v49;
    }
    *((_QWORD *)v8 + 2) = v31 + 1;
    v32 = &v8[2 * v31];
    *((_QWORD *)v32 + 4) = v29;
    *((_QWORD *)v32 + 5) = v28;
    a1 = v43;
    v14 = 1 << *(_BYTE *)(v43 + 32);
    if (v11 >= v14)
      goto LABEL_27;
    v13 = v42;
    v33 = *(_QWORD *)(v42 + 8 * v16);
    if ((v33 & (1 << v11)) == 0)
      goto LABEL_28;
    LODWORD(v10) = v41;
    if (*(_DWORD *)(v43 + 36) != (_DWORD)v41)
      goto LABEL_29;
    v34 = v33 & (-2 << (v11 & 0x3F));
    if (v34)
    {
      v14 = __clz(__rbit64(v34)) | v11 & 0xFFFFFFFFFFFFFFC0;
      v15 = v40;
    }
    else
    {
      v35 = v16 + 1;
      v36 = (unint64_t)(v14 + 63) >> 6;
      v15 = v40;
      if (v16 + 1 < v36)
      {
        v37 = *(_QWORD *)(v42 + 8 * v35);
        if (v37)
        {
LABEL_22:
          v14 = __clz(__rbit64(v37)) + (v35 << 6);
        }
        else
        {
          while (v36 - 2 != v16)
          {
            v37 = *(_QWORD *)(v39 + 8 * v16++);
            if (v37)
            {
              v35 = v16 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    ++v12;
    v11 = v14;
    if (v12 == v15)
      return (uint64_t)v8;
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_100972048(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v3 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CRLSpotlightManager.ChangeType(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004B8460(v1, (uint64_t)v8, v9);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v8, v6);
  sub_1004B84E0((uint64_t)v8, (uint64_t)v5, type metadata accessor for CRLBoardIdentifier);
  Hasher._combine(_:)(EnumCaseMultiPayload == 1);
  v11 = type metadata accessor for UUID(0);
  v12 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(a1, v11, v12);
  v13 = &v5[*(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20)];
  v15 = *(_QWORD *)v13;
  v14 = *((_QWORD *)v13 + 1);
  swift_bridgeObjectRetain(v14);
  String.hash(into:)(a1, v15, v14);
  swift_bridgeObjectRelease();
  return sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLBoardIdentifier);
}

Swift::Int sub_1009721BC()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  sub_100972048((uint64_t)v1);
  return Hasher._finalize()();
}

Swift::Int sub_1009721FC(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  sub_100972048((uint64_t)v2);
  return Hasher._finalize()();
}

id sub_100972238(char *a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  NSString v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  _DWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _DWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  char *v29;
  id v30;
  objc_class *v31;
  id v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  id v38;
  uint64_t v39;
  id v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v44;
  char *v45;
  uint64_t ObjectType;
  char v47[24];
  objc_super v48;

  v3 = v2;
  ObjectType = swift_getObjectType(v2);
  v6 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v6);
  v45 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_defaultActor_initialize(v2, v12);
  v13 = objc_allocWithZone((Class)CSSearchableIndex);
  swift_retain(v3);
  v14 = String._bridgeToObjectiveC()();
  v15 = objc_msgSend(v13, "initWithName:", v14);

  v3[14] = v15;
  v3[19] = _swiftEmptyDictionarySingleton;
  v16 = type metadata accessor for CRLUnfairLock();
  v17 = swift_allocObject(v16, 24, 7);
  v18 = (_DWORD *)swift_slowAlloc(4, -1);
  *v18 = 0;
  *(_QWORD *)(v17 + 16) = v18;
  atomic_thread_fence(memory_order_acq_rel);
  v3[20] = v17;
  *((_BYTE *)v3 + OBJC_IVAR____TtC8Freeform19CRLSpotlightManager_isIndexing) = 0;
  v19 = OBJC_IVAR____TtC8Freeform19CRLSpotlightManager_boardChangedPublisher;
  v20 = sub_1004B804C(&qword_1013FE200);
  swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
  *(_QWORD *)((char *)v3 + v19) = PassthroughSubject.init()();
  *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8Freeform19CRLSpotlightManager_pendingChanges) = &_swiftEmptySetSingleton;
  v21 = OBJC_IVAR____TtC8Freeform19CRLSpotlightManager_pendingChangesLock;
  v22 = swift_allocObject(v16, 24, 7);
  v23 = (_DWORD *)swift_slowAlloc(4, -1);
  *v23 = 0;
  *(_QWORD *)(v22 + 16) = v23;
  atomic_thread_fence(memory_order_acq_rel);
  *(_QWORD *)((char *)v3 + v21) = v22;
  v24 = OBJC_IVAR____TtC8Freeform19CRLSpotlightManager_didUpdateSpotlightPublisher;
  v25 = sub_1004B804C(&qword_1013FE278);
  swift_allocObject(v25, *(unsigned int *)(v25 + 48), *(unsigned __int16 *)(v25 + 52));
  *(_QWORD *)((char *)v3 + v24) = PassthroughSubject.init()();
  *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8Freeform19CRLSpotlightManager_subscriptionSet) = &_swiftEmptySetSingleton;
  v26 = OBJC_IVAR____TtC8Freeform19CRLSpotlightManager_drawingIndexableContentHelper;
  *(_QWORD *)((char *)v3 + v26) = objc_msgSend(objc_allocWithZone((Class)CRLiOSPKDrawingIndexableContentHelper), "init");
  v3[15] = a1;
  v3[16] = &off_10129F490;
  v27 = *(void **)&a1[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store];
  v3[17] = v27;
  v3[18] = a2;
  v28 = a2;
  v29 = a1;
  v30 = v27;
  sub_100972638((uint64_t)v11);
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))((uint64_t)v3 + OBJC_IVAR____TtC8Freeform19CRLSpotlightManager_boardIndexStateURL, v11, v8);
  swift_release(v3);
  v31 = (objc_class *)type metadata accessor for CRLSpotlightManager(0);
  v48.receiver = v3;
  v48.super_class = v31;
  v32 = objc_msgSendSuper2(&v48, "init");
  v33 = (void *)objc_opt_self(CSSearchableIndex);
  v34 = v32;
  if (objc_msgSend(v33, "isIndexingAvailable"))
  {
    v35 = type metadata accessor for TaskPriority(0);
    v36 = (uint64_t)v45;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v45, 1, 1, v35);
    v37 = (_QWORD *)swift_allocObject(&unk_10128C3D0, 40, 7);
    v37[2] = 0;
    v37[3] = 0;
    v37[4] = v34;
    v38 = v34;
    v39 = sub_100521B98(v36, (uint64_t)&unk_1013FE340, (uint64_t)v37);
    swift_release(v39);
  }
  else
  {
    if (qword_1013DD718 != -1)
      swift_once(&qword_1013DD718, sub_100A01B78);
    swift_beginAccess(&static OS_os_log.crlSpotlight, v47, 0, 0);
    v40 = (id)static OS_os_log.crlSpotlight;
    v42 = static os_log_type_t.default.getter(v41);
    sub_100A06EBC((uint64_t)v40, &_mh_execute_header, v42, "CoreSpotlight indexing not available on this device.", 52, 2, (uint64_t)_swiftEmptyArrayStorage);

  }
  return v34;
}

uint64_t sub_100972638@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  NSURL *v12;
  void *v13;
  void *v14;
  unsigned int v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  __n128 v20;
  void *v21;
  uint64_t v22;
  uint64_t inited;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  id v35;
  void *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  char *v41;
  uint64_t result;
  id v43;
  uint64_t v44;
  __n128 v45;
  _QWORD v46[3];
  char *v47;
  id v48;
  _QWORD v49[3];
  char v50[16];
  char v51[72];
  id v52[3];

  v2 = type metadata accessor for URL(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v47 = (char *)v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)v46 - v6;
  __chkstk_darwin(v8);
  v10 = (char *)v46 - v9;
  v11 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
  sub_1009FAB10();
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v10, v7, v2);
  URL._bridgeToObjectiveC()(v12);
  v14 = v13;
  v52[0] = 0;
  v15 = objc_msgSend(v11, "createDirectoryAtURL:withIntermediateDirectories:attributes:error:", v13, 1, 0, v52);

  v16 = v52[0];
  if (v15)
  {
    v17 = v52[0];

LABEL_7:
    URL.appendingPathComponent(_:)(0x6867696C746F7053, 0xEF7473696C702E74);
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v10, v2);
  }
  v18 = v52[0];
  v19 = _convertNSErrorToError(_:)(v16);

  swift_willThrow(v20);
  v46[1] = a1;

  if (qword_1013DD718 != -1)
    swift_once(&qword_1013DD718, sub_100A01B78);
  swift_beginAccess(&static OS_os_log.crlSpotlight, v52, 0, 0);
  v21 = (void *)static OS_os_log.crlSpotlight;
  v22 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v22, v51);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  swift_getErrorValue(v19, v50, v49);
  v24 = v49[1];
  v25 = v49[2];
  v26 = v21;
  v27 = Error.localizedDescription.getter(v24, v25);
  v29 = v28;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v30 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v30;
  *(_QWORD *)(inited + 32) = v27;
  *(_QWORD *)(inited + 40) = v29;
  v31 = static os_log_type_t.error.getter(v30);
  sub_100A06EBC((uint64_t)v26, &_mh_execute_header, v31, "Could not get board index state URL: %@", 39, 2, inited);
  swift_setDeallocating(inited);
  v32 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v32);

  v33 = objc_allocWithZone((Class)CRLTemporaryDirectory);
  v48 = 0;
  v34 = objc_msgSend(v33, "initWithError:", &v48);
  v35 = v48;
  if (v34)
  {
    v36 = v34;
    v48 = (id)v46[2];
    v37 = v35;
    v38 = sub_1004B804C(&qword_1013FE348);
    v39 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(&v48, v38);
    objc_msgSend(v36, "setAssociatedLifetimeObject:", v39);
    swift_unknownObjectRelease(v39);
    v40 = objc_msgSend(v36, "URL");
    v41 = v47;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v40);

    swift_errorRelease(v19);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v10, v41, v2);
    goto LABEL_7;
  }
  v43 = v48;
  v44 = _convertNSErrorToError(_:)(v35);

  swift_willThrow(v45);
  result = swift_unexpectedError(v44, "Freeform/CRLSpotlightManager.swift", 34, 1, 273);
  __break(1u);
  return result;
}

uint64_t sub_100972A54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch(sub_100972A6C, a4, 0);
}

uint64_t sub_100972A6C()
{
  uint64_t v0;

  sub_1009756D8();
  sub_100972E34();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100972AA0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[24];
  _QWORD v33[5];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8Freeform19CRLSpotlightManager_subscriptionSet);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform19CRLSpotlightManager_subscriptionSet, v32, 1, 0);
  v2 = *v1;
  v28 = v1;
  v29 = v0;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    if (v2 < 0)
      v3 = *v1;
    else
      v3 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v4 = __CocoaSet.makeIterator()(v3);
    v5 = type metadata accessor for AnyCancellable(0);
    v6 = sub_1004B7878(&qword_1013E4A10, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
    v7 = Set.Iterator.init(_cocoa:)(v33, v4, v5, v6);
    v2 = v33[0];
    v8 = v33[1];
    v9 = v33[2];
    v10 = v33[3];
    v11 = v33[4];
  }
  else
  {
    v12 = -1 << *(_BYTE *)(v2 + 32);
    v8 = v2 + 56;
    v9 = ~v12;
    v13 = -v12;
    if (v13 < 64)
      v14 = ~(-1 << v13);
    else
      v14 = -1;
    v11 = v14 & *(_QWORD *)(v2 + 56);
    swift_bridgeObjectRetain(v2);
    v10 = 0;
  }
  v15 = (unint64_t)(v9 + 64) >> 6;
  if (v2 < 0)
    goto LABEL_13;
  while (1)
  {
    if (v11)
    {
      v16 = (v11 - 1) & v11;
      v17 = __clz(__rbit64(v11)) | (v10 << 6);
      v18 = v10;
      goto LABEL_30;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
      break;
    if (v23 >= v15)
      goto LABEL_33;
    v24 = *(_QWORD *)(v8 + 8 * v23);
    v18 = v10 + 1;
    if (!v24)
    {
      v18 = v10 + 2;
      if (v10 + 2 >= v15)
        goto LABEL_33;
      v24 = *(_QWORD *)(v8 + 8 * v18);
      if (!v24)
      {
        v18 = v10 + 3;
        if (v10 + 3 >= v15)
          goto LABEL_33;
        v24 = *(_QWORD *)(v8 + 8 * v18);
        if (!v24)
        {
          v18 = v10 + 4;
          if (v10 + 4 >= v15)
            goto LABEL_33;
          v24 = *(_QWORD *)(v8 + 8 * v18);
          if (!v24)
          {
            v25 = v10 + 5;
            while (v15 != v25)
            {
              v24 = *(_QWORD *)(v8 + 8 * v25++);
              if (v24)
              {
                v18 = v25 - 1;
                goto LABEL_29;
              }
            }
LABEL_33:
            sub_1004D284C(v2);
            *v28 = (uint64_t)&_swiftEmptySetSingleton;
            swift_bridgeObjectRelease();

            swift_unknownObjectRelease(*(_QWORD *)(v29 + 120));
            swift_bridgeObjectRelease();
            swift_release(*(_QWORD *)(v29 + 160));
            v26 = v29 + OBJC_IVAR____TtC8Freeform19CRLSpotlightManager_boardIndexStateURL;
            v27 = type metadata accessor for URL(0);
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v26, v27);
            swift_release(*(_QWORD *)(v29 + OBJC_IVAR____TtC8Freeform19CRLSpotlightManager_boardChangedPublisher));
            swift_bridgeObjectRelease();
            swift_release(*(_QWORD *)(v29 + OBJC_IVAR____TtC8Freeform19CRLSpotlightManager_pendingChangesLock));
            swift_release(*(_QWORD *)(v29 + OBJC_IVAR____TtC8Freeform19CRLSpotlightManager_didUpdateSpotlightPublisher));
            swift_bridgeObjectRelease();

            swift_defaultActor_destroy(v29);
            return;
          }
        }
      }
    }
LABEL_29:
    v16 = (v24 - 1) & v24;
    v17 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_30:
    v22 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v17);
    swift_retain(v22);
    if (!v22)
      goto LABEL_33;
    while (1)
    {
      AnyCancellable.cancel()();
      swift_release(v22);
      v10 = v18;
      v11 = v16;
      if ((v2 & 0x8000000000000000) == 0)
        break;
LABEL_13:
      v19 = __CocoaSet.Iterator.next()(v7);
      if (v19)
      {
        v20 = v19;
        v30 = v19;
        v21 = type metadata accessor for AnyCancellable(0);
        swift_unknownObjectRetain(v20);
        swift_dynamicCast(&v31, &v30, (char *)&type metadata for Swift.AnyObject + 8, v21, 7);
        v22 = v31;
        swift_unknownObjectRelease(v20);
        v18 = v10;
        v16 = v11;
        if (v22)
          continue;
      }
      goto LABEL_33;
    }
  }
  __break(1u);
}

uint64_t sub_100972E00()
{
  uint64_t v0;

  sub_100972AA0();
  return swift_defaultActor_deallocate(v0);
}

uint64_t sub_100972E18()
{
  return type metadata accessor for CRLSpotlightManager(0);
}

uint64_t type metadata accessor for CRLSpotlightManager(uint64_t a1)
{
  return sub_1004BD408(a1, (uint64_t *)&unk_1013FDFE0, (uint64_t)&nominal type descriptor for CRLSpotlightManager);
}

void sub_100972E34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  char *v51;
  uint64_t v52;
  __n128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  __n128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  __n128 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __n128 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __n128 v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  __n128 v87;
  id v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  __n128 v95;
  void (*v96)(char *, uint64_t, __n128);
  uint64_t v97;
  uint64_t v98;
  __n128 v99;
  uint64_t v100;
  uint64_t v101;
  __n128 v102;
  char *v103;
  char *v104;
  char *v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  void (*v117)(_QWORD *, _QWORD, uint64_t);
  void (*v118)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  id v137;

  v1 = v0;
  v134 = type metadata accessor for NSNotificationCenter.Publisher(0);
  v132 = *(_QWORD *)(v134 - 8);
  __chkstk_darwin(v134);
  v133 = (char *)&v103 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1004B804C(&qword_1013FE1C0);
  v4 = *(_QWORD *)(v3 - 8);
  v130 = v3;
  v131 = v4;
  __chkstk_darwin(v3);
  v129 = (char *)&v103 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135 = sub_1004B804C(&qword_1013E48E8);
  v120 = *(_QWORD *)(v135 - 8);
  __chkstk_darwin(v135);
  v103 = (char *)&v103 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_1013E48E0);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v103 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchQoS.QoSClass(0, v8);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v103 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = sub_1004B804C(&qword_1013FE1C8);
  v108 = *(_QWORD *)(v106 - 8);
  __chkstk_darwin(v106);
  v104 = (char *)&v103 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = sub_1004B804C(&qword_1013FE1D0);
  v112 = *(_QWORD *)(v111 - 8);
  __chkstk_darwin(v111);
  v105 = (char *)&v103 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = sub_1004B804C(&qword_1013FE1D8);
  v116 = *(_QWORD *)(v114 - 8);
  __chkstk_darwin(v114);
  v107 = (char *)&v103 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = sub_1004B804C(&qword_1013FE1E0);
  v124 = *(_QWORD *)(v121 - 8);
  __chkstk_darwin(v121);
  v109 = (char *)&v103 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1004B804C(&qword_1013FE1E8);
  v20 = *(_QWORD *)(v19 - 8);
  v125 = v19;
  v126 = v20;
  __chkstk_darwin(v19);
  v115 = (char *)&v103 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1004B804C((uint64_t *)&unk_1013FE1F0);
  v23 = *(_QWORD *)(v22 - 8);
  v127 = v22;
  v128 = v23;
  __chkstk_darwin(v22);
  v123 = (char *)&v103 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform19CRLSpotlightManager_boardChangedPublisher);
  v25 = v136;
  v26 = sub_1004B8930(0, (unint64_t *)&qword_1013DE090, OS_dispatch_queue_ptr);
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, enum case for DispatchQoS.QoSClass.background(_:), v11);
  swift_retain(v25);
  v27 = (void *)static OS_dispatch_queue.global(qos:)(v14);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v137 = v27;
  v28 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56);
  v119 = v28;
  v29(v10, 1, 1, v28);
  v118 = v29;
  v30 = sub_1004B804C(&qword_1013FE200);
  v31 = sub_1004CBA30(&qword_1013FE208, &qword_1013FE200, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v32 = sub_1005A15B8((unint64_t *)&qword_1013E4920, (unint64_t *)&qword_1013DE090, OS_dispatch_queue_ptr, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue);
  v122 = v32;
  Publisher.receive<A>(on:options:)(&v137, v10, v30, v26, v31);
  sub_1004CB800((uint64_t)v10, &qword_1013E48E0);

  swift_release(v136);
  sub_1004B804C(&qword_1013E4910);
  v33 = v103;
  v34 = v26;
  v110 = v26;
  *v33 = static OS_dispatch_queue.main.getter(v35);
  static OS_dispatch_queue.SchedulerTimeType.Stride.seconds(_:)(20);
  v36 = v120;
  v117 = *(void (**)(_QWORD *, _QWORD, uint64_t))(v120 + 104);
  v37 = v135;
  v117(v33, enum case for Publishers.TimeGroupingStrategy.byTime<A>(_:), v135);
  v29(v10, 1, 1, v28);
  v38 = sub_1004CBA30(&qword_1013FE210, &qword_1013FE1C8, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v39 = v105;
  v113 = v10;
  v40 = v106;
  v41 = v104;
  Publisher.collect<A>(_:options:)(v33, v10, v106, v34, v38, v32);
  sub_1004CB800((uint64_t)v10, &qword_1013E48E0);
  v120 = *(_QWORD *)(v36 + 8);
  ((void (*)(_QWORD *, uint64_t))v120)(v33, v37);
  v42 = (*(uint64_t (**)(char *, uint64_t))(v108 + 8))(v41, v40);
  v43 = static Subscribers.Demand.unlimited.getter(v42);
  v44 = sub_1004B804C(&qword_1013FE218);
  v45 = sub_1004CBA30(&qword_1013FE220, &qword_1013FE1D0, (uint64_t)&protocol conformance descriptor for Publishers.CollectByTime<A, B>);
  v46 = sub_1004CBA30(&qword_1013FE228, &qword_1013FE218, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v47 = v107;
  v48 = v111;
  Publisher<>.flatMap<A>(maxPublishers:_:)(v43, sub_100973B68, 0, v111, v44, v45, v46);
  (*(void (**)(char *, uint64_t))(v112 + 8))(v39, v48);
  v49 = sub_1004CBA30(&qword_1013FE230, &qword_1013FE1D8, (uint64_t)&protocol conformance descriptor for Publishers.FlatMap<A, B>);
  v50 = swift_retain(v1);
  v51 = v109;
  v52 = v114;
  Publisher.filter(_:)(sub_10097B404, v1, v114, v49, v50);
  v53 = swift_release(v1);
  (*(void (**)(char *, uint64_t, __n128))(v116 + 8))(v47, v52, v53);
  swift_retain(v1);
  v55 = static Subscribers.Demand.unlimited.getter(v54);
  v56 = sub_1004B804C(&qword_1013FE238);
  v57 = sub_1004CBA30(&qword_1013FE240, &qword_1013FE1E0, (uint64_t)&protocol conformance descriptor for Publishers.Filter<A>);
  v58 = sub_1004CBA30(&qword_1013FE248, &qword_1013FE238, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v59 = v115;
  v60 = v121;
  Publisher<>.flatMap<A>(maxPublishers:_:)(v55, sub_10097B40C, v1, v121, v56, v57, v58);
  v61 = swift_release(v1);
  (*(void (**)(char *, uint64_t, __n128))(v124 + 8))(v51, v60, v61);
  swift_retain(v1);
  v63 = static Subscribers.Demand.unlimited.getter(v62);
  v64 = sub_1004B804C(&qword_1013FE250);
  v65 = sub_1004CBA30(&qword_1013FE258, &qword_1013FE1E8, (uint64_t)&protocol conformance descriptor for Publishers.FlatMap<A, B>);
  v66 = sub_1004CBA30(&qword_1013FE260, &qword_1013FE250, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v67 = v123;
  v68 = v125;
  Publisher<>.flatMap<A>(maxPublishers:_:)(v63, sub_10097B414, v1, v125, v64, v65, v66);
  v69 = swift_release(v1);
  (*(void (**)(char *, uint64_t, __n128))(v126 + 8))(v59, v68, v69);
  v70 = sub_1004CBA30(&qword_1013FE268, (uint64_t *)&unk_1013FE1F0, (uint64_t)&protocol conformance descriptor for Publishers.FlatMap<A, B>);
  swift_retain(v1);
  v71 = v127;
  v72 = Publisher<>.sink(receiveValue:)(sub_10097B41C, v1, v127, v70);
  v73 = swift_release(v1);
  (*(void (**)(char *, uint64_t, __n128))(v128 + 8))(v67, v71, v73);
  v74 = v1 + OBJC_IVAR____TtC8Freeform19CRLSpotlightManager_subscriptionSet;
  swift_beginAccess(v1 + OBJC_IVAR____TtC8Freeform19CRLSpotlightManager_subscriptionSet, &v136, 33, 0);
  AnyCancellable.store(in:)(v74);
  swift_endAccess(&v136);
  swift_release(v72);
  sub_100975DB8();
  v136 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform19CRLSpotlightManager_didUpdateSpotlightPublisher);
  v75 = v136;
  v76 = *(int *)(sub_1004B804C(&qword_1013FE270) + 64);
  v77 = swift_retain(v75);
  v78 = v110;
  *v33 = static OS_dispatch_queue.main.getter(v77);
  static OS_dispatch_queue.SchedulerTimeType.Stride.seconds(_:)(20);
  *(_QWORD *)((char *)v33 + v76) = 5;
  v79 = v135;
  v117(v33, enum case for Publishers.TimeGroupingStrategy.byTimeOrCount<A>(_:), v135);
  v80 = (uint64_t)v113;
  v118(v113, 1, 1, v119);
  v81 = sub_1004B804C(&qword_1013FE278);
  v82 = sub_1004CBA30(&qword_1013FE280, &qword_1013FE278, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v83 = v129;
  Publisher.collect<A>(_:options:)(v33, v80, v81, v78, v82, v122);
  sub_1004CB800(v80, &qword_1013E48E0);
  ((void (*)(_QWORD *, uint64_t))v120)(v33, v79);
  swift_release(v136);
  v84 = sub_1004CBA30(&qword_1013FE288, &qword_1013FE1C0, (uint64_t)&protocol conformance descriptor for Publishers.CollectByTime<A, B>);
  swift_retain(v1);
  v85 = v130;
  v86 = Publisher<>.sink(receiveValue:)(sub_10097B444, v1, v130, v84);
  v87 = swift_release(v1);
  (*(void (**)(char *, uint64_t, __n128))(v131 + 8))(v83, v85, v87);
  swift_beginAccess(v74, &v136, 33, 0);
  AnyCancellable.store(in:)(v74);
  swift_endAccess(&v136);
  swift_release(v86);
  v88 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  if (qword_1013DDAA8 != -1)
    swift_once(&qword_1013DDAA8, sub_100A74280);
  v89 = *(_QWORD *)(v1 + 136);
  v90 = v133;
  NSNotificationCenter.publisher(for:object:)(qword_101480A50, v89);
  v91 = swift_allocObject(&unk_10128C308, 24, 7);
  swift_weakInit(v91 + 16, v1);
  v92 = sub_1004B7878((unint64_t *)&qword_1013FE290, (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher, (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Publisher);
  v93 = v134;
  v94 = Publisher<>.sink(receiveValue:)(sub_10097B47C, v91, v134, v92);
  v95 = swift_release(v91);
  v96 = *(void (**)(char *, uint64_t, __n128))(v132 + 8);
  v96(v90, v93, v95);
  swift_beginAccess(v74, &v136, 33, 0);
  AnyCancellable.store(in:)(v74);
  swift_endAccess(&v136);
  swift_release(v94);
  if (qword_1013DDAA0 != -1)
    swift_once(&qword_1013DDAA0, sub_100A7424C);
  NSNotificationCenter.publisher(for:object:)(qword_101480A48, v89);
  v97 = swift_allocObject(&unk_10128C308, 24, 7);
  swift_weakInit(v97 + 16, v1);
  v98 = Publisher<>.sink(receiveValue:)(sub_10097B484, v97, v93, v92);
  v99 = swift_release(v97);
  v96(v90, v93, v99);
  swift_beginAccess(v74, &v136, 33, 0);
  AnyCancellable.store(in:)(v74);
  swift_endAccess(&v136);
  swift_release(v98);
  if (qword_1013DD4D8 != -1)
    swift_once(&qword_1013DD4D8, sub_1008FDDFC);
  NSNotificationCenter.publisher(for:object:)(qword_10147FF00, 0);
  v100 = swift_allocObject(&unk_10128C308, 24, 7);
  swift_weakInit(v100 + 16, v1);
  v101 = Publisher<>.sink(receiveValue:)(sub_10097B48C, v100, v93, v92);
  v102 = swift_release(v100);
  v96(v90, v93, v102);
  swift_beginAccess(v74, &v136, 33, 0);
  AnyCancellable.store(in:)(v74);
  swift_endAccess(&v136);
  objc_msgSend(*(id *)(v1 + 112), "setIndexDelegate:", v1, swift_release(v101).n128_f64[0]);

  *(_BYTE *)(v1 + OBJC_IVAR____TtC8Freeform19CRLSpotlightManager_isIndexing) = 1;
}

uint64_t sub_100973B68@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;

  v4 = sub_1004B804C(&qword_1013FE310);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain(*a1);
  v9 = sub_100A65BC8(v8);
  swift_bridgeObjectRetain(v9);
  v11 = sub_10097A3DC(v10, v10);
  swift_bridgeObjectRelease();
  v17 = v11;
  v12 = sub_1004B804C(&qword_1013FE318);
  v13 = sub_1004CBA30(&qword_1013FE320, &qword_1013FE318, (uint64_t)&protocol conformance descriptor for Set<A>);
  Sequence.publisher.getter(v12, v13);
  swift_release(v11);
  v14 = sub_1004CBA30((unint64_t *)&unk_1013FE328, &qword_1013FE310, (uint64_t)&protocol conformance descriptor for Publishers.Sequence<A, B>);
  v15 = Publisher.eraseToAnyPublisher()(v4, v14);
  result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *a2 = v15;
  return result;
}

BOOL sub_100973CA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  _BYTE v8[24];

  v4 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform19CRLSpotlightManager_pendingChangesLock);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v4 + 16));
  v5 = (uint64_t *)(a2 + OBJC_IVAR____TtC8Freeform19CRLSpotlightManager_pendingChanges);
  swift_beginAccess(v5, v8, 0, 0);
  v6 = *v5;
  swift_bridgeObjectRetain(v6);
  LOBYTE(a1) = sub_100623DD0(a1, v6);
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
  return (a1 & 1) == 0;
}

uint64_t sub_100973D38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  _QWORD v32[3];

  v31 = a3;
  v5 = sub_1004B804C(&qword_1013FE2C8);
  v6 = *(_QWORD *)(v5 - 8);
  v29 = v5;
  v30 = v6;
  __chkstk_darwin(v5);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CRLSpotlightManager.ChangeType(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v29 - v14;
  v16 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform19CRLSpotlightManager_pendingChangesLock);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v16 + 16));
  sub_1004B8460(a1, (uint64_t)v12, type metadata accessor for CRLSpotlightManager.ChangeType);
  swift_beginAccess(a2 + OBJC_IVAR____TtC8Freeform19CRLSpotlightManager_pendingChanges, v32, 33, 0);
  sub_100ADAF84((uint64_t)v15, (uint64_t)v12);
  sub_1004B84A4((uint64_t)v15, type metadata accessor for CRLSpotlightManager.ChangeType);
  swift_endAccess(v32);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v16 + 16));
  sub_1004B8460(a1, (uint64_t)v15, type metadata accessor for CRLSpotlightManager.ChangeType);
  v17 = *(unsigned __int8 *)(v10 + 80);
  v18 = (v17 + 24) & ~v17;
  v19 = swift_allocObject(&unk_10128C380, v18 + v11, v17 | 7);
  *(_QWORD *)(v19 + 16) = a2;
  sub_1004B84E0((uint64_t)v15, v19 + v18, type metadata accessor for CRLSpotlightManager.ChangeType);
  v20 = sub_1004B804C(&qword_1013FE2D0);
  swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
  v21 = swift_retain(a2);
  v22 = Future.init(_:)(sub_10097B7A4, v19, v21);
  v32[0] = v22;
  v23 = type metadata accessor for CRLSpotlightManager.IndexDecision(0);
  v24 = sub_1004CBA30(&qword_1013FE2D8, &qword_1013FE2D0, (uint64_t)&protocol conformance descriptor for Future<A, B>);
  Publisher.compactMap<A>(_:)(sub_100974AB8, 0, v20, v23, v24);
  swift_release(v22);
  v25 = sub_1004CBA30(&qword_1013FE2E0, &qword_1013FE2C8, (uint64_t)&protocol conformance descriptor for Publishers.CompactMap<A, B>);
  v26 = v29;
  v27 = Publisher.eraseToAnyPublisher()(v29, v25);
  result = (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v8, v26);
  *v31 = v27;
  return result;
}

double sub_100973FB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  double result;
  uint64_t v25;

  v8 = type metadata accessor for CRLSpotlightManager.ChangeType(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v12);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  static TaskPriority.background.getter(v15);
  v16 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v14, 0, 1, v16);
  sub_1004B8460(a4, (uint64_t)v11, type metadata accessor for CRLSpotlightManager.ChangeType);
  v17 = sub_1004B7878(&qword_1013FE2B0, type metadata accessor for CRLSpotlightManager, (uint64_t)&unk_100F1DAEC);
  v18 = *(unsigned __int8 *)(v9 + 80);
  v19 = (v18 + 40) & ~v18;
  v20 = (v10 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  v21 = (_QWORD *)swift_allocObject(&unk_10128C3A8, v20 + 16, v18 | 7);
  v21[2] = a3;
  v21[3] = v17;
  v21[4] = a3;
  sub_1004B84E0((uint64_t)v11, (uint64_t)v21 + v19, type metadata accessor for CRLSpotlightManager.ChangeType);
  v22 = (_QWORD *)((char *)v21 + v20);
  *v22 = a1;
  v22[1] = a2;
  swift_retain_n(a3, 2);
  swift_retain(a2);
  v23 = sub_100521B98((uint64_t)v14, (uint64_t)&unk_1013FE2F8, (uint64_t)v21);
  *(_QWORD *)&result = swift_release(v23).n128_u64[0];
  return result;
}

uint64_t sub_10097414C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v7[7] = a6;
  v7[8] = a7;
  v7[5] = a4;
  v7[6] = a5;
  v9 = sub_1004B804C(&qword_1013FE300);
  v7[9] = v9;
  v7[10] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CRLBoardIdentifier(0);
  v7[11] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for CRLSpotlightManager.ChangeType(0);
  v7[12] = v11;
  v7[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1004B804C(&qword_1013FE2E8);
  v7[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1004B804C(&qword_1013FE308);
  v7[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v13 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100974240, a4, 0);
}

uint64_t sub_100974240()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  _QWORD *v17;

  v1 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 40);
  v5 = *(_QWORD *)(v0 + 48);
  v6 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform19CRLSpotlightManager_pendingChangesLock);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v6 + 16));
  swift_beginAccess(v4 + OBJC_IVAR____TtC8Freeform19CRLSpotlightManager_pendingChanges, v0 + 16, 33, 0);
  sub_100B285E0(v5, v1);
  sub_1004CB800(v1, &qword_1013FE308);
  swift_endAccess(v0 + 16);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 16));
  sub_1004B8460(v5, v2, type metadata accessor for CRLSpotlightManager.ChangeType);
  if (swift_getEnumCaseMultiPayload(v2, v3) == 1)
  {
    v7 = *(_QWORD *)(v0 + 112);
    sub_1004B84E0(*(_QWORD *)(v0 + 104), v7, type metadata accessor for CRLBoardIdentifier);
    v8 = type metadata accessor for CRLSpotlightManager.IndexDecision(0);
    swift_storeEnumTagMultiPayload(v7, v8, 1);
    v10 = *(_QWORD *)(v0 + 112);
    v9 = *(_QWORD *)(v0 + 120);
    v11 = *(_QWORD *)(v0 + 104);
    v12 = *(_QWORD *)(v0 + 80);
    v13 = *(_QWORD *)(v0 + 88);
    v14 = *(_QWORD *)(v0 + 72);
    v15 = *(void (**)(uint64_t))(v0 + 56);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v10, 0, 1, v8);
    sub_10097B818(v10, v12);
    swift_storeEnumTagMultiPayload(v12, v14, 0);
    v15(v12);
    sub_1004CB800(v12, &qword_1013FE300);
    sub_1004CB800(v10, &qword_1013FE2E8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v13);
    swift_task_dealloc(v12);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    sub_1004B84E0(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 88), type metadata accessor for CRLBoardIdentifier);
    v17 = (_QWORD *)swift_task_alloc(dword_1013FDFFC);
    *(_QWORD *)(v0 + 128) = v17;
    *v17 = v0;
    v17[1] = sub_10097444C;
    return sub_100977778(*(_QWORD *)(v0 + 88));
  }
}

uint64_t sub_10097444C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 128);
  *(_QWORD *)(*v2 + 136) = a1;
  swift_task_dealloc(v4);
  v5 = *(_QWORD *)(v3 + 40);
  if (v1)
  {
    swift_errorRelease(v1);
    v6 = sub_100974888;
  }
  else
  {
    v6 = sub_1009744C4;
  }
  return swift_task_switch(v6, v5, 0);
}

uint64_t sub_1009744C4()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  _QWORD *v17;

  v1 = *(void **)(v0 + 136);
  if (v1)
  {
    v2 = objc_msgSend(v1, "attributeSet");
    *(_QWORD *)(v0 + 144) = v2;
    v3 = objc_msgSend(v2, "title");
    if (v3)
    {
      v4 = v3;
      v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
      v7 = v6;

    }
    else
    {
      v5 = 0;
      v7 = 0xE000000000000000;
    }
    *(_QWORD *)(v0 + 152) = v7;
    v17 = (_QWORD *)swift_task_alloc(dword_1013FE004);
    *(_QWORD *)(v0 + 160) = v17;
    *v17 = v0;
    v17[1] = sub_100974664;
    return sub_100978534(*(_QWORD *)(v0 + 88), v5, v7);
  }
  else
  {
    sub_1004B84A4(*(_QWORD *)(v0 + 88), type metadata accessor for CRLBoardIdentifier);
    v8 = type metadata accessor for CRLSpotlightManager.IndexDecision(0);
    v10 = *(_QWORD *)(v0 + 112);
    v9 = *(_QWORD *)(v0 + 120);
    v11 = *(_QWORD *)(v0 + 104);
    v12 = *(_QWORD *)(v0 + 80);
    v13 = *(_QWORD *)(v0 + 88);
    v14 = *(_QWORD *)(v0 + 72);
    v15 = *(void (**)(uint64_t))(v0 + 56);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v10, 1, 1, v8);
    sub_10097B818(v10, v12);
    swift_storeEnumTagMultiPayload(v12, v14, 0);
    v15(v12);
    sub_1004CB800(v12, &qword_1013FE300);
    sub_1004CB800(v10, &qword_1013FE2E8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v13);
    swift_task_dealloc(v12);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100974664(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v4 = *(_QWORD **)v3;
  v5 = *(_QWORD *)(*(_QWORD *)v3 + 160);
  v4[21] = a1;
  v4[22] = a2;
  swift_task_dealloc(v5);
  v6 = v4[5];
  if (v2)
  {
    swift_errorRelease(v2);
    swift_bridgeObjectRelease();
    v7 = sub_10097497C;
  }
  else
  {
    swift_bridgeObjectRelease();
    v7 = sub_1009746F8;
  }
  return swift_task_switch(v7, v6, 0);
}

uint64_t sub_1009746F8()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  void *v3;
  Class isa;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t);

  v1 = *(_QWORD *)(v0 + 176);
  if (v1 >> 60 == 15)
  {

  }
  else
  {
    v2 = *(_QWORD *)(v0 + 168);
    v3 = *(void **)(v0 + 144);
    isa = Data._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v3, "setThumbnailData:", isa);

    sub_1004BE2FC(v2, v1);
  }
  v5 = *(_QWORD *)(v0 + 136);
  v6 = *(_QWORD *)(v0 + 112);
  v7 = *(_QWORD *)(v0 + 88);
  v8 = *(int *)(sub_1004B804C((uint64_t *)&unk_1013FE160) + 48);
  sub_1004B84E0(v7, v6, type metadata accessor for CRLBoardIdentifier);
  *(_QWORD *)(v6 + v8) = v5;
  v9 = type metadata accessor for CRLSpotlightManager.IndexDecision(0);
  swift_storeEnumTagMultiPayload(v6, v9, 0);
  v11 = *(_QWORD *)(v0 + 112);
  v10 = *(_QWORD *)(v0 + 120);
  v12 = *(_QWORD *)(v0 + 104);
  v13 = *(_QWORD *)(v0 + 80);
  v14 = *(_QWORD *)(v0 + 88);
  v15 = *(_QWORD *)(v0 + 72);
  v16 = *(void (**)(uint64_t))(v0 + 56);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v11, 0, 1, v9);
  sub_10097B818(v11, v13);
  swift_storeEnumTagMultiPayload(v13, v15, 0);
  v16(v13);
  sub_1004CB800(v13, &qword_1013FE300);
  sub_1004CB800(v11, &qword_1013FE2E8);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v14);
  swift_task_dealloc(v13);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100974888()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t);

  sub_1004B84A4(*(_QWORD *)(v0 + 88), type metadata accessor for CRLBoardIdentifier);
  v1 = type metadata accessor for CRLSpotlightManager.IndexDecision(0);
  v3 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 80);
  v6 = *(_QWORD *)(v0 + 88);
  v7 = *(_QWORD *)(v0 + 72);
  v8 = *(void (**)(uint64_t))(v0 + 56);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 56))(v3, 1, 1, v1);
  sub_10097B818(v3, v5);
  swift_storeEnumTagMultiPayload(v5, v7, 0);
  v8(v5);
  sub_1004CB800(v5, &qword_1013FE300);
  sub_1004CB800(v3, &qword_1013FE2E8);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v6);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10097497C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t);

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 88);
  v4 = *(int *)(sub_1004B804C((uint64_t *)&unk_1013FE160) + 48);
  sub_1004B84E0(v3, v2, type metadata accessor for CRLBoardIdentifier);
  *(_QWORD *)(v2 + v4) = v1;
  v5 = type metadata accessor for CRLSpotlightManager.IndexDecision(0);
  swift_storeEnumTagMultiPayload(v2, v5, 0);
  v7 = *(_QWORD *)(v0 + 112);
  v6 = *(_QWORD *)(v0 + 120);
  v8 = *(_QWORD *)(v0 + 104);
  v9 = *(_QWORD *)(v0 + 80);
  v10 = *(_QWORD *)(v0 + 88);
  v11 = *(_QWORD *)(v0 + 72);
  v12 = *(void (**)(uint64_t))(v0 + 56);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v7, 0, 1, v5);
  sub_10097B818(v7, v9);
  swift_storeEnumTagMultiPayload(v9, v11, 0);
  v12(v9);
  sub_1004CB800(v9, &qword_1013FE300);
  sub_1004CB800(v7, &qword_1013FE2E8);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v10);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100974AB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10097B818(a1, a2);
}

void sub_100974AC0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[2];

  v6 = type metadata accessor for CRLSpotlightManager.IndexDecision(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  sub_1004B8460(a1, (uint64_t)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CRLSpotlightManager.IndexDecision);
  v9 = *(unsigned __int8 *)(v7 + 80);
  v10 = (v9 + 24) & ~v9;
  v11 = swift_allocObject(&unk_10128C330, v10 + v8, v9 | 7);
  *(_QWORD *)(v11 + 16) = a2;
  sub_1004B84E0((uint64_t)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v11 + v10, type metadata accessor for CRLSpotlightManager.IndexDecision);
  v12 = sub_1004B804C(&qword_1013FE298);
  swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
  v13 = swift_retain(a2);
  v14 = Future.init(_:)(sub_10097B558, v11, v13);
  v17[1] = v14;
  v15 = sub_1004CBA30(&qword_1013FE2A0, &qword_1013FE298, (uint64_t)&protocol conformance descriptor for Future<A, B>);
  v16 = Publisher.eraseToAnyPublisher()(v12, v15);
  swift_release(v14);
  *a3 = v16;
}

double sub_100974C08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  double result;
  uint64_t v24;

  v8 = type metadata accessor for CRLSpotlightManager.IndexDecision(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v12);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  sub_1004B8460(a4, (uint64_t)v11, type metadata accessor for CRLSpotlightManager.IndexDecision);
  v16 = sub_1004B7878(&qword_1013FE2B0, type metadata accessor for CRLSpotlightManager, (uint64_t)&unk_100F1DAEC);
  v17 = *(unsigned __int8 *)(v9 + 80);
  v18 = (v17 + 40) & ~v17;
  v19 = (v10 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = (_QWORD *)swift_allocObject(&unk_10128C358, v19 + 16, v17 | 7);
  v20[2] = a3;
  v20[3] = v16;
  v20[4] = a3;
  sub_1004B84E0((uint64_t)v11, (uint64_t)v20 + v18, type metadata accessor for CRLSpotlightManager.IndexDecision);
  v21 = (_QWORD *)((char *)v20 + v19);
  *v21 = a1;
  v21[1] = a2;
  swift_retain_n(a3, 2);
  swift_retain(a2);
  v22 = sub_100521B98((uint64_t)v14, (uint64_t)&unk_1013FE2B8, (uint64_t)v20);
  *(_QWORD *)&result = swift_release(v22).n128_u64[0];
  return result;
}

uint64_t sub_100974D98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v7[3] = a6;
  v7[4] = a7;
  v7[2] = a4;
  v9 = sub_1004B804C(&qword_1013FE2C0);
  v7[5] = v9;
  v7[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CRLBoardIdentifier(0);
  v11 = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7[7] = v11;
  v12 = (_QWORD *)swift_task_alloc(dword_1013FDFF4);
  v7[8] = v12;
  *v12 = v7;
  v12[1] = sub_100974E50;
  return sub_100976710(v11, a5);
}

uint64_t sub_100974E50()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 64));
  return swift_task_switch(sub_100974EA8, v1, 0);
}

uint64_t sub_100974EA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);

  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = *(void (**)(uint64_t))(v0 + 24);
  sub_1004B8460(v1, v2, type metadata accessor for CRLBoardIdentifier);
  swift_storeEnumTagMultiPayload(v2, v3, 0);
  v4(v2);
  sub_1004CB800(v2, &qword_1013FE2C0);
  sub_1004B84A4(v1, type metadata accessor for CRLBoardIdentifier);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_100974F48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  double result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  _QWORD v13[2];
  uint64_t v14[5];
  __int128 v15;
  __int128 v16;
  _BYTE v17[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v17, 0, 0);
  Strong = swift_weakLoadStrong(v2);
  if (Strong)
  {
    v5 = Strong;
    v6 = Notification.userInfo.getter(Strong);
    if (v6)
    {
      v7 = v6;
      v13[0] = 0xD000000000000010;
      v13[1] = 0x8000000100FB5A20;
      AnyHashable.init<A>(_:)(v13, &type metadata for String, &protocol witness table for String);
      if (*(_QWORD *)(v7 + 16) && (v8 = sub_1008432BC((uint64_t)v14), (v9 & 1) != 0))
      {
        sub_1004CB6E8(*(_QWORD *)(v7 + 56) + 32 * v8, (uint64_t)&v15);
      }
      else
      {
        v15 = 0u;
        v16 = 0u;
      }
      swift_bridgeObjectRelease();
      sub_1004B89A4((uint64_t)v14);
      if (*((_QWORD *)&v16 + 1))
      {
        v10 = sub_1004B804C(&qword_1013E4980);
        if ((swift_dynamicCast(v14, &v15, (char *)&type metadata for Any + 8, v10, 6) & 1) != 0)
        {
          v11 = sub_100979BA4(v14[0], (uint64_t)&_swiftEmptySetSingleton);
          v12 = swift_bridgeObjectRelease();
          v14[0] = v11;
          PassthroughSubject.send(_:)(v14, v12);
          swift_release(v5);
          *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
          return result;
        }
        goto LABEL_12;
      }
    }
    else
    {
      v15 = 0u;
      v16 = 0u;
    }
    sub_1004CB800((uint64_t)&v15, &qword_1013E0230);
LABEL_12:
    sub_100757E04(&_mh_execute_header, (uint64_t)"startIndexing()", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Spotlight/CRLSpotlightManager.swift", 89, 2, 224, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"startIndexing()", 15, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Spotlight/CRLSpotlightManager.swift", 89, 2u, 224, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  }
  return result;
}

double sub_10097515C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  double result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  _QWORD v13[2];
  uint64_t v14[5];
  __int128 v15;
  __int128 v16;
  _BYTE v17[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v17, 0, 0);
  Strong = swift_weakLoadStrong(v2);
  if (!Strong)
    return result;
  v5 = Strong;
  v6 = Notification.userInfo.getter(Strong);
  if (!v6)
  {
    v15 = 0u;
    v16 = 0u;
LABEL_12:
    swift_release(v5);
    sub_1004CB800((uint64_t)&v15, &qword_1013E0230);
    return result;
  }
  v7 = v6;
  v13[0] = 0xD000000000000017;
  v13[1] = 0x8000000100FB5A40;
  AnyHashable.init<A>(_:)(v13, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v7 + 16) && (v8 = sub_1008432BC((uint64_t)v14), (v9 & 1) != 0))
  {
    sub_1004CB6E8(*(_QWORD *)(v7 + 56) + 32 * v8, (uint64_t)&v15);
  }
  else
  {
    v15 = 0u;
    v16 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1004B89A4((uint64_t)v14);
  if (!*((_QWORD *)&v16 + 1))
    goto LABEL_12;
  v10 = sub_1004B804C(&qword_1013E4980);
  if ((swift_dynamicCast(v14, &v15, (char *)&type metadata for Any + 8, v10, 6) & 1) != 0)
  {
    v11 = sub_100979BA4((uint64_t)&_swiftEmptySetSingleton, v14[0]);
    v12 = swift_bridgeObjectRelease();
    if (*(_QWORD *)(v11 + 16))
    {
      v14[0] = v11;
      PassthroughSubject.send(_:)(v14, v12);
      swift_release(v5);
      *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
      return result;
    }
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  return result;
}

double sub_1009752F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t Strong;
  double result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  __n128 v27;
  _QWORD v29[2];
  _QWORD v30[5];
  __int128 v31;
  __int128 v32;
  _BYTE v33[24];

  v3 = sub_1004B804C(&qword_1013E0270);
  __chkstk_darwin(v3);
  v5 = (char *)&v29[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v29[-1] - v7;
  v9 = type metadata accessor for CRLBoardIdentifier(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v29[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v33, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v15 = Strong;
    v16 = Notification.userInfo.getter(Strong);
    if (v16)
    {
      v17 = v16;
      v29[0] = 0xD000000000000033;
      v29[1] = 0x8000000100FDF5E0;
      AnyHashable.init<A>(_:)(v29, &type metadata for String, &protocol witness table for String);
      if (*(_QWORD *)(v17 + 16) && (v18 = sub_1008432BC((uint64_t)v30), (v19 & 1) != 0))
      {
        sub_1004CB6E8(*(_QWORD *)(v17 + 56) + 32 * v18, (uint64_t)&v31);
      }
      else
      {
        v31 = 0u;
        v32 = 0u;
      }
      swift_bridgeObjectRelease();
      sub_1004B89A4((uint64_t)v30);
      if (*((_QWORD *)&v32 + 1))
      {
        v20 = swift_dynamicCast(v5, &v31, (char *)&type metadata for Any + 8, v9, 6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v5, v20 ^ 1u, 1, v9);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v5, 1, v9) != 1)
        {
LABEL_13:
          sub_1004C4938((uint64_t)v5, (uint64_t)v8, &qword_1013E0270);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
          {
            swift_release(v15);
            sub_1004CB800((uint64_t)v8, &qword_1013E0270);
          }
          else
          {
            sub_1004B84E0((uint64_t)v8, (uint64_t)v12, type metadata accessor for CRLBoardIdentifier);
            v21 = sub_1004B804C(&qword_1013E7870);
            v22 = *(unsigned __int8 *)(v10 + 80);
            v23 = (v22 + 32) & ~v22;
            v24 = swift_allocObject(v21, v23 + *(_QWORD *)(v10 + 72), v22 | 7);
            *(_OWORD *)(v24 + 16) = xmmword_100EF5E40;
            sub_1004B8460((uint64_t)v12, v24 + v23, type metadata accessor for CRLBoardIdentifier);
            v25 = sub_1004B5A78(v24);
            swift_setDeallocating(v24);
            swift_arrayDestroy(v24 + v23, 1, v9);
            swift_deallocClassInstance(v24, 32, 7);
            v26 = sub_100979BA4((uint64_t)v25, (uint64_t)&_swiftEmptySetSingleton);
            v27 = swift_bridgeObjectRelease();
            v30[0] = v26;
            PassthroughSubject.send(_:)(v30, v27);
            sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLBoardIdentifier);
            swift_release(v15);
            *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
          }
          return result;
        }
LABEL_12:
        sub_100757E04(&_mh_execute_header, (uint64_t)"startIndexing()", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Spotlight/CRLSpotlightManager.swift", 89, 2, 251, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"startIndexing()", 15, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Spotlight/CRLSpotlightManager.swift", 89, 2u, 251, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
        goto LABEL_13;
      }
    }
    else
    {
      v31 = 0u;
      v32 = 0u;
    }
    sub_1004CB800((uint64_t)&v31, &qword_1013E0230);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v5, 1, 1, v9);
    goto LABEL_12;
  }
  return result;
}

uint64_t sub_1009756D8()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t inited;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  os_unfair_lock_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[23];
  _BYTE v35[72];
  _BYTE v36[32];

  v1 = type metadata accessor for URL(0);
  v2 = __chkstk_darwin(v1);
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = v0;
  v5 = v0 + OBJC_IVAR____TtC8Freeform19CRLSpotlightManager_boardIndexStateURL;
  v32 = v7;
  v33 = v6;
  (*(void (**)(char *, uint64_t, __n128))(v7 + 16))(v4, v0 + OBJC_IVAR____TtC8Freeform19CRLSpotlightManager_boardIndexStateURL, v2);
  if (qword_1013DD718 != -1)
    swift_once(&qword_1013DD718, sub_100A01B78);
  swift_beginAccess(&static OS_os_log.crlSpotlight, v36, 0, 0);
  v8 = (void *)static OS_os_log.crlSpotlight;
  v9 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v9, v35);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v11 = v8;
  v12 = URL.absoluteString.getter(v11);
  v14 = v13;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v12;
  *(_QWORD *)(inited + 40) = v14;
  v16 = static os_log_type_t.default.getter(v15);
  sub_100A06EBC((uint64_t)v11, &_mh_execute_header, v16, "Loading Spotlight state from %@", 31, 2, inited);
  swift_setDeallocating(inited);
  v31 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v31);

  v17 = Data.init(contentsOf:options:)(v5, 0);
  v19 = v18;
  v29 = *(os_unfair_lock_t *)(*(_QWORD *)(v30 + 160) + 16);
  os_unfair_lock_lock(v29);
  v20 = type metadata accessor for PropertyListDecoder(0);
  swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
  v21 = PropertyListDecoder.init()();
  v22 = sub_1004B804C(&qword_1013FE188);
  v23 = sub_10097B368();
  dispatch thunk of PropertyListDecoder.decode<A>(_:from:)(v22, v17, v19, v22, v23, v24);
  swift_release(v21);
  v25 = v34[3];
  v26 = v30;
  swift_beginAccess(v30 + 152, v34, 1, 0);
  *(_QWORD *)(v26 + 152) = v25;
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(v29);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v4, v33);
  return sub_1004BBBC8(v17, v19);
}

uint64_t sub_100975A44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t inited;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  os_unfair_lock_s *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  __n128 v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE v33[72];
  _BYTE v34[32];

  v1 = v0;
  v2 = type metadata accessor for URL(0);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = v7;
  v30 = v6;
  (*(void (**)(char *, uint64_t, __n128))(v7 + 16))(v5, v0 + OBJC_IVAR____TtC8Freeform19CRLSpotlightManager_boardIndexStateURL, v3);
  if (qword_1013DD718 != -1)
    swift_once(&qword_1013DD718, sub_100A01B78);
  swift_beginAccess(&static OS_os_log.crlSpotlight, v34, 0, 0);
  v8 = (void *)static OS_os_log.crlSpotlight;
  v9 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v9, v33);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v11 = v8;
  v12 = URL.absoluteString.getter(v11);
  v14 = v13;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v12;
  *(_QWORD *)(inited + 40) = v14;
  v16 = static os_log_type_t.default.getter(v15);
  sub_100A06EBC((uint64_t)v11, &_mh_execute_header, v16, "Saving Spotlight state to %@", 28, 2, inited);
  swift_setDeallocating(inited);
  v28 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v28);

  v17 = *(os_unfair_lock_s **)(*(_QWORD *)(v1 + 160) + 16);
  os_unfair_lock_lock(v17);
  v18 = type metadata accessor for PropertyListEncoder(0);
  swift_allocObject(v18, *(unsigned int *)(v18 + 48), *(unsigned __int16 *)(v18 + 52));
  v19 = PropertyListEncoder.init()();
  swift_beginAccess(v1 + 152, &v32, 0, 0);
  v31 = *(_QWORD *)(v1 + 152);
  swift_bridgeObjectRetain(v31);
  v20 = sub_1004B804C(&qword_1013FE188);
  v21 = sub_10097B2CC();
  v23 = dispatch thunk of PropertyListEncoder.encode<A>(_:)(&v31, v20, v21, v22);
  v25 = v24;
  swift_bridgeObjectRelease();
  swift_release(v19);
  os_unfair_lock_unlock(v17);
  Data.write(to:options:)(v5, 0, v23, v25);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v5, v30);
  return sub_1004BBBC8(v23, v25);
}

double sub_100975DB8()
{
  uint64_t v0;
  uint64_t v1;
  double result;
  _QWORD v3[20];

  v3[2] = *(_QWORD *)(v0 + 136);
  v1 = sub_1004B804C(&qword_1013FE180);
  OS_dispatch_queue.sync<A>(execute:)(sub_10097B2B4, v3, v1);
  sub_100975F64(v3[16]);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

double sub_100975F64(unint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  double *v11;
  void *v12;
  uint64_t v13;
  uint64_t inited;
  int64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  double *v28;
  unint64_t v29;
  double *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  double *v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __n128 v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __n128 v76;
  double result;
  uint64_t v78;
  _QWORD *v79;
  void *v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  __int128 v86;
  double *v87;
  double *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92[80];
  double *v93;
  char v94[56];
  char v95[8];
  char v96[8];

  v3 = type metadata accessor for CRLBoardIdentifier(0);
  v91 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v90 = (uint64_t)&v78 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v89 = (uint64_t)&v78 - v6;
  swift_beginAccess(v1 + 152, v96, 0, 0);
  v84 = v1;
  v7 = *(_QWORD **)(v1 + 152);
  swift_bridgeObjectRetain_n(v7, 2);
  v9 = sub_100A65498(v8);
  swift_bridgeObjectRetain(a1);
  v11 = (double *)sub_100DB90DC(v10, v9);
  swift_bridgeObjectRelease();
  if (qword_1013DD718 != -1)
    goto LABEL_35;
  while (1)
  {
    swift_beginAccess(&static OS_os_log.crlSpotlight, v95, 0, 0);
    v12 = (void *)static OS_os_log.crlSpotlight;
    v13 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v13, v94);
    v86 = xmmword_100EF5E40;
    v85 = inited;
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v15 = *((_QWORD *)v11 + 2);
    v88 = v11;
    if (v15)
    {
      v81 = v13;
      v82 = (unint64_t)v7;
      v83 = a1;
      v93 = _swiftEmptyArrayStorage;
      v80 = v12;
      v16 = v12;
      sub_1006006EC(0, v15, 0);
      v17 = sub_100CE0488(v11);
      v19 = v18;
      v21 = v20 & 1;
      v87 = v11 + 7;
      while ((v17 & 0x8000000000000000) == 0 && v17 < 1 << *((_BYTE *)v11 + 32))
      {
        if (((*(_QWORD *)((char *)v87 + (((unint64_t)v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) == 0)
          goto LABEL_30;
        if (*((_DWORD *)v11 + 9) != (_DWORD)v19)
          goto LABEL_31;
        v22 = v89;
        sub_1004B8460(*((_QWORD *)v11 + 6) + *(_QWORD *)(v91 + 72) * v17, v89, type metadata accessor for CRLBoardIdentifier);
        v23 = v22;
        v24 = v90;
        v25 = sub_1004B84E0(v23, v90, type metadata accessor for CRLBoardIdentifier);
        v26 = UUID.uuidString.getter(v25);
        v7 = v27;
        sub_1004B84A4(v24, type metadata accessor for CRLBoardIdentifier);
        v28 = v93;
        if ((swift_isUniquelyReferenced_nonNull_native(v93) & 1) == 0)
        {
          sub_1006006EC(0, *((_QWORD *)v28 + 2) + 1, 1);
          v28 = v93;
        }
        a1 = *((_QWORD *)v28 + 2);
        v29 = *((_QWORD *)v28 + 3);
        if (a1 >= v29 >> 1)
        {
          sub_1006006EC(v29 > 1, a1 + 1, 1);
          v28 = v93;
        }
        *((_QWORD *)v28 + 2) = a1 + 1;
        v30 = &v28[2 * a1];
        *((_QWORD *)v30 + 4) = v26;
        *((_QWORD *)v30 + 5) = v7;
        v11 = v88;
        v31 = sub_1005C3B08(v17, v19, v21 & 1, v88);
        v17 = v31;
        v19 = v32;
        v21 = v33 & 1;
        if (!--v15)
        {
          sub_100503494(v31, v32, v33 & 1);
          a1 = v83;
          v7 = (_QWORD *)v82;
          v13 = v81;
          v34 = v80;
          goto LABEL_15;
        }
      }
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
    v35 = v12;
    v28 = _swiftEmptyArrayStorage;
    v34 = v12;
LABEL_15:
    v11 = (double *)v85;
    v87 = (double *)(v85 + 32);
    v93 = v28;
    v36 = sub_1004B804C((uint64_t *)&unk_1013E4970);
    v83 = sub_1004CBA30((unint64_t *)&qword_1013DFC40, (uint64_t *)&unk_1013E4970, (uint64_t)&protocol conformance descriptor for [A]);
    v37 = BidirectionalCollection<>.joined(separator:)(44, 0xE100000000000000, v36, v83);
    v39 = v38;
    swift_bridgeObjectRelease();
    *((_QWORD *)v11 + 7) = &type metadata for String;
    v82 = sub_1004CFC2C();
    *((_QWORD *)v11 + 8) = v82;
    *((_QWORD *)v11 + 4) = v37;
    *((_QWORD *)v11 + 5) = v39;
    v41 = static os_log_type_t.default.getter(v40);
    sub_100A06EBC((uint64_t)v34, &_mh_execute_header, v41, "DELETED BOARDS [%{public}@]", 27, 2, (uint64_t)v11);
    swift_setDeallocating(v11);
    v42 = *((_QWORD *)v11 + 2);
    v85 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v87, v42, v85);

    swift_bridgeObjectRetain(a1);
    sub_1009796B4(v43, (uint64_t)v7, a1);
    v45 = v44;
    swift_bridgeObjectRelease();
    v46 = sub_100AF87D0(v45);
    swift_bridgeObjectRelease();
    a1 = static OS_os_log.crlSpotlight;
    v47 = swift_initStackObject(v13, v92);
    v7 = (_QWORD *)v47;
    *(_OWORD *)(v47 + 16) = v86;
    v48 = *(_QWORD *)(v46 + 16);
    if (!v48)
      break;
    v79 = (_QWORD *)v47;
    v81 = v36;
    v93 = _swiftEmptyArrayStorage;
    v80 = (void *)a1;
    v49 = (id)a1;
    sub_1006006EC(0, v48, 0);
    v50 = sub_100CE0488(v46);
    v52 = v51;
    v54 = v53 & 1;
    v87 = (double *)(v46 + 56);
    *(_QWORD *)&v86 = v46;
    while ((v50 & 0x8000000000000000) == 0 && v50 < 1 << *(_BYTE *)(v46 + 32))
    {
      if (((*(_QWORD *)((char *)v87 + (((unint64_t)v50 >> 3) & 0xFFFFFFFFFFFFF8)) >> v50) & 1) == 0)
        goto LABEL_33;
      if (*(_DWORD *)(v46 + 36) != (_DWORD)v52)
        goto LABEL_34;
      v55 = v89;
      sub_1004B8460(*(_QWORD *)(v46 + 48) + *(_QWORD *)(v91 + 72) * v50, v89, type metadata accessor for CRLBoardIdentifier);
      v56 = v55;
      v57 = v90;
      v58 = sub_1004B84E0(v56, v90, type metadata accessor for CRLBoardIdentifier);
      v7 = (_QWORD *)UUID.uuidString.getter(v58);
      v60 = v59;
      sub_1004B84A4(v57, type metadata accessor for CRLBoardIdentifier);
      v11 = v93;
      if ((swift_isUniquelyReferenced_nonNull_native(v93) & 1) == 0)
      {
        sub_1006006EC(0, *((_QWORD *)v11 + 2) + 1, 1);
        v11 = v93;
      }
      v62 = *((_QWORD *)v11 + 2);
      v61 = *((_QWORD *)v11 + 3);
      a1 = v62 + 1;
      if (v62 >= v61 >> 1)
      {
        sub_1006006EC(v61 > 1, v62 + 1, 1);
        v11 = v93;
      }
      *((_QWORD *)v11 + 2) = a1;
      v63 = &v11[2 * v62];
      *((_QWORD *)v63 + 4) = v7;
      *((_QWORD *)v63 + 5) = v60;
      v46 = v86;
      v64 = sub_1005C3B08(v50, v52, v54 & 1, v86);
      v50 = v64;
      v52 = v65;
      v54 = v66 & 1;
      if (!--v48)
      {
        sub_100503494(v64, v65, v66 & 1);
        v36 = v81;
        a1 = (unint64_t)v80;
        v7 = v79;
        goto LABEL_28;
      }
    }
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    swift_once(&qword_1013DD718, sub_100A01B78);
  }
  v67 = (id)a1;
  v11 = _swiftEmptyArrayStorage;
LABEL_28:
  v93 = v11;
  v68 = BidirectionalCollection<>.joined(separator:)(44, 0xE100000000000000, v36, v83);
  v70 = v69;
  v71 = swift_bridgeObjectRelease();
  v72 = v82;
  v7[7] = &type metadata for String;
  v7[8] = v72;
  v7[4] = v68;
  v7[5] = v70;
  v73 = static os_log_type_t.default.getter(v71);
  sub_100A06EBC(a1, &_mh_execute_header, v73, "CHANGED BOARDS [%{public}@]", 27, 2, (uint64_t)v7);
  swift_setDeallocating(v7);
  swift_arrayDestroy(v7 + 4, v7[2], v85);

  v74 = (uint64_t)v88;
  v75 = sub_100979BA4(v46, (uint64_t)v88);
  swift_release(v74);
  v76 = swift_bridgeObjectRelease();
  v93 = (double *)v75;
  PassthroughSubject.send(_:)(&v93, v76);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_100976710(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v3[60] = a2;
  v3[61] = v2;
  v3[59] = a1;
  v4 = sub_1004B804C(&qword_1013E04F0);
  v3[62] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[63] = swift_task_alloc(v5);
  v3[64] = swift_task_alloc(v5);
  v3[65] = swift_task_alloc(v5);
  v6 = type metadata accessor for CRLSpotlightManager.IndexDecision(0);
  v3[66] = v6;
  v3[67] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009767D0, v2, 0);
}

uint64_t sub_1009767D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int EnumCaseMultiPayload;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t inited;
  id v12;
  uint64_t v13;
  Swift::String v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  void *v18;
  Swift::String v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  Swift::String v26;
  Swift::String v27;
  uint64_t (*v28)();
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v1 = *(_QWORD *)(v0 + 536);
  v2 = *(_QWORD *)(v0 + 528);
  sub_1004B8460(*(_QWORD *)(v0 + 480), v1, type metadata accessor for CRLSpotlightManager.IndexDecision);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v1, v2);
  v4 = *(_QWORD *)(v0 + 536);
  v5 = *(_QWORD *)(v0 + 472);
  if (EnumCaseMultiPayload == 1)
  {
    v6 = *(_QWORD *)(v0 + 512);
    sub_1004B84E0(*(_QWORD *)(v0 + 536), v6, type metadata accessor for CRLBoardIdentifier);
    sub_1004B8460(v6, v5, type metadata accessor for CRLBoardIdentifier);
    if (qword_1013DD718 != -1)
      swift_once(&qword_1013DD718, sub_100A01B78);
    v7 = *(_QWORD *)(v0 + 488);
    v8 = *(_QWORD *)(v0 + 472);
    swift_beginAccess(&static OS_os_log.crlSpotlight, v0 + 360, 0, 0);
    v9 = (void *)static OS_os_log.crlSpotlight;
    v10 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v10, v0 + 240);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v12 = v9;
    v44 = UUID.uuidString.getter(v12);
    v47 = v13;
    swift_bridgeObjectRetain(v13);
    v14._countAndFlagsBits = 58;
    v14._object = (void *)0xE100000000000000;
    String.append(_:)(v14);
    swift_bridgeObjectRelease();
    v15 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
    *(_DWORD *)(v0 + 632) = v15;
    v16 = (uint64_t *)(v8 + v15);
    v17 = *v16;
    v18 = (void *)v16[1];
    swift_bridgeObjectRetain(v47);
    v19._countAndFlagsBits = v17;
    v19._object = v18;
    String.append(_:)(v19);
    swift_bridgeObjectRelease();
    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = sub_1004CFC2C();
    *(_QWORD *)(inited + 32) = v44;
    *(_QWORD *)(inited + 40) = v47;
    v21 = static os_log_type_t.default.getter(v20);
    sub_100A06EBC((uint64_t)v12, &_mh_execute_header, v21, "CoreSpotlight DELETE %@", 23, 2, inited);
    swift_setDeallocating(inited);
    v22 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v22);

    *(_QWORD *)(v0 + 592) = *(_QWORD *)(v7 + 112);
    v23 = sub_1004B804C((uint64_t *)&unk_1013DFC30);
    v24 = swift_allocObject(v23, 48, 7);
    *(_QWORD *)(v0 + 600) = v24;
    *(_OWORD *)(v24 + 16) = xmmword_100EF5E40;
    v45 = UUID.uuidString.getter(v24);
    v48 = v25;
    swift_bridgeObjectRetain(v25);
    v26._countAndFlagsBits = 58;
    v26._object = (void *)0xE100000000000000;
    String.append(_:)(v26);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain(v48);
    v27._countAndFlagsBits = v17;
    v27._object = v18;
    String.append(_:)(v27);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v24 + 32) = v45;
    *(_QWORD *)(v24 + 40) = v48;
    v28 = sub_1009770B0;
  }
  else
  {
    v29 = *(_QWORD *)(v0 + 520);
    v30 = *(void **)(v4 + *(int *)(sub_1004B804C((uint64_t *)&unk_1013FE160) + 48));
    *(_QWORD *)(v0 + 544) = v30;
    sub_1004B84E0(v4, v29, type metadata accessor for CRLBoardIdentifier);
    sub_1004B8460(v29, v5, type metadata accessor for CRLBoardIdentifier);
    if (qword_1013DD718 != -1)
      swift_once(&qword_1013DD718, sub_100A01B78);
    v31 = *(_QWORD *)(v0 + 488);
    swift_beginAccess(&static OS_os_log.crlSpotlight, v0 + 384, 0, 0);
    v32 = (void *)static OS_os_log.crlSpotlight;
    v33 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v34 = swift_initStackObject(v33, v0 + 168);
    *(_OWORD *)(v34 + 16) = xmmword_100EF5E40;
    *(_QWORD *)(v34 + 56) = sub_1004B8930(0, &qword_1013EC5E0, CSSearchableItem_ptr);
    *(_QWORD *)(v34 + 64) = sub_1005A15B8((unint64_t *)&unk_1013FE170, &qword_1013EC5E0, CSSearchableItem_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
    *(_QWORD *)(v34 + 32) = v30;
    v35 = v32;
    v36 = v30;
    v38 = static os_log_type_t.default.getter(v37);
    sub_100A06EBC((uint64_t)v35, &_mh_execute_header, v38, "CoreSpotlight INDEX %@", 22, 2, v34);
    swift_setDeallocating(v34);
    v39 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v34 + 32, 1, v39);

    *(_QWORD *)(v0 + 552) = *(_QWORD *)(v31 + 112);
    v40 = sub_1004B804C((uint64_t *)&unk_1013E4180);
    v41 = swift_allocObject(v40, 40, 7);
    *(_OWORD *)(v41 + 16) = xmmword_100EEF400;
    *(_QWORD *)(v41 + 32) = v36;
    v46 = v41;
    specialized Array._endMutation()(v41);
    *(_QWORD *)(v0 + 560) = v46;
    v42 = v36;
    v28 = sub_100976C40;
  }
  return swift_task_switch(v28, 0, 0);
}

uint64_t sub_100976C40()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = swift_task_alloc(32);
  *(_QWORD *)(v0 + 568) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 552);
  v2 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 576) = v2;
  *v2 = v0;
  v2[1] = sub_100976CDC;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v2, 0, 0, 0xD00000000000001CLL, 0x8000000100FE4AB0, sub_10097B2AC, v1, (char *)&type metadata for () + 8);
}

uint64_t sub_100976CDC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 576);
  *(_QWORD *)(*v1 + 584) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_100976E64;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 568));
    v4 = sub_100976D48;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_100976D48()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 488);
  swift_bridgeObjectRelease();
  return swift_task_switch(sub_100976D88, v1, 0);
}

void sub_100976D88()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 584);
  v2 = *(void **)(v0 + 544);
  v3 = *(_QWORD *)(v0 + 488);
  v4 = *(_QWORD *)(v0 + 472);
  v5 = *(os_unfair_lock_s **)(*(_QWORD *)(v3 + 160) + 16);
  os_unfair_lock_lock(v5);
  sub_1009775F8(v3, v4, v2);
  os_unfair_lock_unlock(v5);
  if (!v1)
  {
    v6 = *(_QWORD *)(v0 + 520);

    sub_1004B84A4(v6, type metadata accessor for CRLBoardIdentifier);
    v7 = *(_QWORD *)(v0 + 520);
    v9 = *(_QWORD *)(v0 + 504);
    v8 = *(_QWORD *)(v0 + 512);
    v10 = *(_QWORD *)(v0 + 496);
    swift_task_dealloc(*(_QWORD *)(v0 + 536));
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    (*(void (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100976E64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 568);
  v2 = *(_QWORD *)(v0 + 488);
  swift_bridgeObjectRelease();
  swift_task_dealloc(v1);
  return swift_task_switch(sub_100976EB0, v2, 0);
}

uint64_t sub_100976EB0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t inited;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v21 = *(_QWORD *)(v0 + 584);
  sub_1004B84A4(*(_QWORD *)(v0 + 520), type metadata accessor for CRLBoardIdentifier);
  if (qword_1013DD718 != -1)
    swift_once(&qword_1013DD718, sub_100A01B78);
  swift_beginAccess(&static OS_os_log.crlSpotlight, v0 + 312, 0, 0);
  v1 = (void *)static OS_os_log.crlSpotlight;
  v2 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v2, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5550;
  v4 = v1;
  v5 = UUID.uuidString.getter(v4);
  v7 = v6;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v8 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v8;
  *(_QWORD *)(inited + 32) = v5;
  *(_QWORD *)(inited + 40) = v7;
  swift_getErrorValue(v21, v0 + 464, v0 + 408);
  v9 = Error.publicDescription.getter(*(_QWORD *)(v0 + 416), *(_QWORD *)(v0 + 424));
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v8;
  *(_QWORD *)(inited + 72) = v9;
  *(_QWORD *)(inited + 80) = v10;
  swift_getErrorValue(v21, v0 + 456, v0 + 336);
  v11 = Error.fullDescription.getter(*(_QWORD *)(v0 + 344));
  *(_QWORD *)(inited + 136) = &type metadata for String;
  *(_QWORD *)(inited + 144) = v8;
  *(_QWORD *)(inited + 112) = v11;
  *(_QWORD *)(inited + 120) = v12;
  v14 = static os_log_type_t.default.getter(v13);
  sub_100A06EBC((uint64_t)v4, &_mh_execute_header, v14, "Spotlight ERROR identifier:%{public}@ error: %{public}@, <%@>", 61, 2, inited);
  swift_setDeallocating(inited);
  v15 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 3, v15);

  swift_errorRelease(v21);
  v16 = *(_QWORD *)(v0 + 520);
  v18 = *(_QWORD *)(v0 + 504);
  v17 = *(_QWORD *)(v0 + 512);
  v19 = *(_QWORD *)(v0 + 496);
  swift_task_dealloc(*(_QWORD *)(v0 + 536));
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009770B0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = swift_task_alloc(32);
  *(_QWORD *)(v0 + 608) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 592);
  v2 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 616) = v2;
  *v2 = v0;
  v2[1] = sub_100977148;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v2, 0, 0, 0xD00000000000002BLL, 0x8000000100FE4A20, sub_10097B2A4, v1, (char *)&type metadata for () + 8);
}

uint64_t sub_100977148()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 616);
  *(_QWORD *)(*v1 + 624) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1009773B4;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 608));
    v4 = sub_1009771B4;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1009771B4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 488);
  swift_bridgeObjectRelease();
  return swift_task_switch(sub_1009771F4, v1, 0);
}

uint64_t sub_1009771F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  void *v7;
  uint64_t v8;
  Swift::String v9;
  void *v10;
  uint64_t v11;
  Swift::String v12;
  NSString v13;
  os_unfair_lock_s *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v2 = *(_QWORD *)(v1 + 504);
  v21 = *(_QWORD *)(v1 + 512);
  v3 = *(_QWORD *)(v1 + 488);
  v4 = *(_QWORD *)(v1 + 496);
  v5 = *(_QWORD *)(v1 + 472);
  v6 = (uint64_t *)(v5 + *(int *)(v1 + 632));
  v7 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform19CRLSpotlightManager_drawingIndexableContentHelper);
  UUID.uuidString.getter(a1);
  v22 = v8;
  swift_bridgeObjectRetain(v8);
  v9._countAndFlagsBits = 58;
  v9._object = (void *)0xE100000000000000;
  String.append(_:)(v9);
  swift_bridgeObjectRelease();
  v11 = *v6;
  v10 = (void *)v6[1];
  swift_bridgeObjectRetain(v22);
  v12._countAndFlagsBits = v11;
  v12._object = v10;
  String.append(_:)(v12);
  swift_bridgeObjectRelease();
  v13 = String._bridgeToObjectiveC()();
  objc_msgSend(v7, "removeDrawingIndexedContentsFromBoardWithIdentifierString:", v13, swift_bridgeObjectRelease().n128_f64[0]);

  v14 = *(os_unfair_lock_s **)(*(_QWORD *)(v3 + 160) + 16);
  os_unfair_lock_lock(v14);
  sub_1004B8460(v5, v2, type metadata accessor for CRLBoardIdentifier);
  v15 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v4, 1, 1, v15);
  swift_beginAccess(v3 + 152, v1 + 432, 33, 0);
  sub_10083EA24(v4, v2);
  swift_endAccess(v1 + 432);
  os_unfair_lock_unlock(v14);
  sub_1004B84A4(v21, type metadata accessor for CRLBoardIdentifier);
  v16 = *(_QWORD *)(v1 + 520);
  v18 = *(_QWORD *)(v1 + 504);
  v17 = *(_QWORD *)(v1 + 512);
  v19 = *(_QWORD *)(v1 + 496);
  swift_task_dealloc(*(_QWORD *)(v1 + 536));
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1009773B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 608);
  v2 = *(_QWORD *)(v0 + 488);
  swift_bridgeObjectRelease();
  swift_task_dealloc(v1);
  return swift_task_switch(sub_100977400, v2, 0);
}

uint64_t sub_100977400()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t inited;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v21 = *(_QWORD *)(v0 + 624);
  sub_1004B84A4(*(_QWORD *)(v0 + 512), type metadata accessor for CRLBoardIdentifier);
  if (qword_1013DD718 != -1)
    swift_once(&qword_1013DD718, sub_100A01B78);
  swift_beginAccess(&static OS_os_log.crlSpotlight, v0 + 312, 0, 0);
  v1 = (void *)static OS_os_log.crlSpotlight;
  v2 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v2, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5550;
  v4 = v1;
  v5 = UUID.uuidString.getter(v4);
  v7 = v6;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v8 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v8;
  *(_QWORD *)(inited + 32) = v5;
  *(_QWORD *)(inited + 40) = v7;
  swift_getErrorValue(v21, v0 + 464, v0 + 408);
  v9 = Error.publicDescription.getter(*(_QWORD *)(v0 + 416), *(_QWORD *)(v0 + 424));
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v8;
  *(_QWORD *)(inited + 72) = v9;
  *(_QWORD *)(inited + 80) = v10;
  swift_getErrorValue(v21, v0 + 456, v0 + 336);
  v11 = Error.fullDescription.getter(*(_QWORD *)(v0 + 344));
  *(_QWORD *)(inited + 136) = &type metadata for String;
  *(_QWORD *)(inited + 144) = v8;
  *(_QWORD *)(inited + 112) = v11;
  *(_QWORD *)(inited + 120) = v12;
  v14 = static os_log_type_t.default.getter(v13);
  sub_100A06EBC((uint64_t)v4, &_mh_execute_header, v14, "Spotlight ERROR identifier:%{public}@ error: %{public}@, <%@>", 61, 2, inited);
  swift_setDeallocating(inited);
  v15 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 3, v15);

  swift_errorRelease(v21);
  v16 = *(_QWORD *)(v0 + 520);
  v18 = *(_QWORD *)(v0 + 504);
  v17 = *(_QWORD *)(v0 + 512);
  v19 = *(_QWORD *)(v0 + 496);
  swift_task_dealloc(*(_QWORD *)(v0 + 536));
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009775F8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t (*v12)(_QWORD);
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v19[24];

  v6 = sub_1004B804C(&qword_1013E04F0);
  __chkstk_darwin(v6);
  v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v9);
  v11 = &v19[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1004B8460(a2, (uint64_t)v11, v12);
  v13 = objc_msgSend(a3, "attributeSet");
  v14 = objc_msgSend(v13, "contentModificationDate");

  if (v14)
  {
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v14);

    v15 = type metadata accessor for Date(0);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v8, 0, 1, v15);
  }
  else
  {
    v16 = type metadata accessor for Date(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 1, 1, v16);
  }
  swift_beginAccess(a1 + 152, v19, 33, 0);
  sub_10083EA24((uint64_t)v8, (uint64_t)v11);
  return swift_endAccess(v19);
}

uint64_t sub_100977778(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2[45] = a1;
  v2[46] = v1;
  v3 = sub_1004B804C(&qword_1013FE140);
  v2[47] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRLBoardEntity(0);
  v2[48] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[49] = v5;
  v2[50] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (*(_QWORD *)(*(_QWORD *)(sub_1004B804C(&qword_1013E04F0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[51] = swift_task_alloc(v6);
  v2[52] = swift_task_alloc(v6);
  v7 = type metadata accessor for CRLBoardCRDTData(0);
  v2[53] = v7;
  v2[54] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Date(0);
  v2[55] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[56] = v9;
  v2[57] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CRLBoardIdentifier(0);
  v2[58] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10097789C, v1, 0);
}

uint64_t sub_10097789C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;

  v1 = v0[58];
  v2 = v0[46];
  sub_1004B8460(v0[45], v1, type metadata accessor for CRLBoardIdentifier);
  v3 = *(void **)(v2 + 136);
  v4 = type metadata accessor for CRLBoardActor(0);
  v5 = swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  v0[59] = v5;
  v6 = v3;
  swift_defaultActor_initialize(v5, v7);
  sub_1004B84E0(v1, v5 + OBJC_IVAR____TtC8Freeform13CRLBoardActor_boardIdentifier, type metadata accessor for CRLBoardIdentifier);
  *(_QWORD *)(v5 + OBJC_IVAR____TtC8Freeform13CRLBoardActor_store) = v6;
  return swift_task_switch(sub_10097794C, v5, 0);
}

uint64_t sub_10097794C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 472);
  type metadata accessor for CRLImmutableBoard(0);
  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform13CRLBoardActor_store);
  v3 = v1 + OBJC_IVAR____TtC8Freeform13CRLBoardActor_boardIdentifier;
  v4 = (_QWORD *)swift_task_alloc(dword_1013E8364);
  *(_QWORD *)(v0 + 480) = v4;
  *v4 = v0;
  v4[1] = sub_1009779D0;
  return sub_100618D44(v2, v3, 1);
}

uint64_t sub_1009779D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  void *v5;

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 480);
  v3[61] = a1;
  v3[62] = v1;
  swift_task_dealloc(v4);
  if (v1)
    v5 = sub_1009780D4;
  else
    v5 = sub_100977A3C;
  return swift_task_switch(v5, v3[46], 0);
}

uint64_t sub_100977A3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;
  uint64_t *v5;
  uint64_t v6;
  void *v7;
  Swift::String v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  Swift::String v15;
  uint64_t v16;
  void *v17;
  Swift::String v18;
  NSString v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  Class isa;
  id v31;
  id v32;
  NSString v33;
  NSString v34;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t inited;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  char **v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  id v61;
  id v62;
  __n128 v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v73;
  _QWORD *v74;
  void (*v75)(uint64_t, uint64_t);
  uint64_t (*v76)(uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;

  v2 = *(_QWORD *)(v1 + 360);
  UUID.uuidString.getter(a1);
  v77 = v3;
  swift_bridgeObjectRetain(v3);
  v4._countAndFlagsBits = 58;
  v4._object = (void *)0xE100000000000000;
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  v5 = (uint64_t *)(v2 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  v6 = *v5;
  v7 = (void *)v5[1];
  swift_bridgeObjectRetain(v77);
  v8._countAndFlagsBits = v6;
  v8._object = v7;
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 264) = &type metadata for CRLFeatureFlags;
  v9 = sub_1004DB6DC();
  *(_BYTE *)(v1 + 240) = 13;
  v73 = v1 + 352;
  *(_QWORD *)(v1 + 272) = v9;
  v10 = isFeatureEnabled(_:)(v1 + 240);
  v11 = _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v1 + 240));
  v12 = *(void **)(v1 + 488);
  if ((v10 & 1) != 0)
  {
    v13 = *(void **)(*(_QWORD *)(v1 + 368) + OBJC_IVAR____TtC8Freeform19CRLSpotlightManager_drawingIndexableContentHelper);
    UUID.uuidString.getter(v11);
    v78 = v14;
    swift_bridgeObjectRetain(v14);
    v15._countAndFlagsBits = 58;
    v15._object = (void *)0xE100000000000000;
    String.append(_:)(v15);
    swift_bridgeObjectRelease();
    v16 = *v5;
    v17 = (void *)v5[1];
    swift_bridgeObjectRetain(v78);
    v18._countAndFlagsBits = v16;
    v18._object = v17;
    String.append(_:)(v18);
    swift_bridgeObjectRelease();
    v19 = String._bridgeToObjectiveC()();
    v20 = objc_msgSend(v13, "drawingIndexedContentsFromBoardWithIdentifierString:", v19, swift_bridgeObjectRelease().n128_f64[0], v73);

    v21 = objc_msgSend(v12, "searchableItemAttributeSet:", v20);
  }
  else
  {
    v21 = objc_msgSend(*(id *)(v1 + 488), "searchableItemAttributeSet:", 0, v73);
  }
  *(_QWORD *)(v1 + 504) = v21;
  v23 = *(_QWORD *)(v1 + 448);
  v22 = *(_QWORD *)(v1 + 456);
  v25 = *(_QWORD *)(v1 + 432);
  v24 = *(_QWORD *)(v1 + 440);
  v26 = *(_QWORD *)(*(_QWORD *)(v1 + 488) + OBJC_IVAR____TtC8Freeform8CRLBoard_data)
      + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v26, v1 + 280, 0, 0);
  sub_1004B8460(v26, v25, type metadata accessor for CRLBoardCRDTData);
  v27 = sub_1004B804C(&qword_1013FE148);
  CRMaxRegister.wrappedValue.getter(v74, v27);
  v28 = *(double *)(v1 + 352);
  v29 = sub_1004B84A4(v25, type metadata accessor for CRLBoardCRDTData);
  Date.init(timeIntervalSinceReferenceDate:)(v29, v28);
  isa = Date._bridgeToObjectiveC()().super.isa;
  v75 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
  v75(v22, v24);
  objc_msgSend(v21, "setContentModificationDate:", isa);

  v31 = objc_allocWithZone((Class)CSSearchableItem);
  v32 = v21;
  v33 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v34 = String._bridgeToObjectiveC()();
  v35 = objc_msgSend(v31, "initWithUniqueIdentifier:domainIdentifier:attributeSet:", v33, v34, v32);
  *(_QWORD *)(v1 + 512) = v35;

  if (qword_1013DD718 != -1)
    swift_once(&qword_1013DD718, sub_100A01B78);
  swift_beginAccess(&static OS_os_log.crlSpotlight, v1 + 328, 0, 0);
  v36 = (void *)static OS_os_log.crlSpotlight;
  v37 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  *(_QWORD *)(v1 + 520) = v37;
  inited = swift_initStackObject(v37, v1 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5550;
  v39 = v36;
  v40 = objc_msgSend(v35, "uniqueIdentifier");
  v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
  v43 = v42;

  *(_QWORD *)(inited + 56) = &type metadata for String;
  v44 = sub_1004CFC2C();
  *(_QWORD *)(v1 + 528) = v44;
  *(_QWORD *)(inited + 32) = v41;
  *(_QWORD *)(inited + 64) = v44;
  *(_QWORD *)(inited + 40) = v43;
  v45 = objc_msgSend(v35, "attributeSet");
  v46 = objc_msgSend(v45, "contentModificationDate");

  if (v46)
  {
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v46);

    v47 = 0;
  }
  else
  {
    v47 = 1;
  }
  v48 = *(_QWORD *)(v1 + 440);
  v49 = *(_QWORD *)(v1 + 448);
  v51 = *(_QWORD *)(v1 + 408);
  v50 = *(_QWORD *)(v1 + 416);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 56))(v51, v47, 1, v48);
  sub_1004C4938(v51, v50, &qword_1013E04F0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v50, 1, v48))
  {
    sub_1004CB800(*(_QWORD *)(v1 + 416), &qword_1013E04F0);
    v52 = (uint64_t *)(inited + 72);
    *(_QWORD *)(inited + 96) = &type metadata for String;
    *(_QWORD *)(inited + 104) = v44;
LABEL_11:
    v53 = &selRef_parentMapOfItemsFrom_;
    *v52 = 0x4E574F4E4B4E55;
    v54 = 0xE700000000000000;
    goto LABEL_14;
  }
  v55 = *(_QWORD *)(v1 + 456);
  v56 = *(_QWORD *)(v1 + 440);
  v57 = *(_QWORD *)(v1 + 416);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 + 448) + 16))(v55, v57, v56);
  v58 = sub_1004CB800(v57, &qword_1013E04F0);
  v59 = Date.description.getter(v58);
  v54 = v60;
  v75(v55, v56);
  v52 = (uint64_t *)(inited + 72);
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v44;
  if (!v54)
    goto LABEL_11;
  *v52 = v59;
  v53 = &selRef_parentMapOfItemsFrom_;
LABEL_14:
  *(_QWORD *)(inited + 80) = v54;
  v61 = objc_msgSend(v35, v53[265]);
  v62 = objc_msgSend(v61, "title");

  if (!v62)
  {
    v67 = (uint64_t *)(inited + 112);
    *(_QWORD *)(inited + 136) = &type metadata for String;
    *(_QWORD *)(inited + 144) = v44;
    goto LABEL_18;
  }
  v64 = static String._unconditionallyBridgeFromObjectiveC(_:)(v62);
  v66 = v65;

  v67 = (uint64_t *)(inited + 112);
  *(_QWORD *)(inited + 136) = &type metadata for String;
  *(_QWORD *)(inited + 144) = v44;
  if (!v66)
  {
LABEL_18:
    *v67 = 0x4E574F4E4B4E55;
    v66 = 0xE700000000000000;
    goto LABEL_19;
  }
  *v67 = v64;
LABEL_19:
  *(_QWORD *)(inited + 120) = v66;
  v68 = static os_log_type_t.default.getter(v63);
  sub_100A06EBC((uint64_t)v39, &_mh_execute_header, v68, "Indexed UUID:%s Date:%s Title:%s", 32, 2, inited);
  swift_setDeallocating(inited);
  v69 = *(_QWORD *)(inited + 16);
  v70 = sub_1004B804C(&qword_1013E0190);
  *(_QWORD *)(v1 + 536) = v70;
  swift_arrayDestroy(inited + 32, v69, v70);

  v76 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_10140C6A0 + dword_10140C6A0);
  v71 = (_QWORD *)swift_task_alloc(unk_10140C6A4);
  *(_QWORD *)(v1 + 544) = v71;
  *v71 = v1;
  v71[1] = sub_10097816C;
  return v76(*(_QWORD *)(v1 + 376), *(_QWORD *)(v1 + 360));
}

uint64_t sub_1009780D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 464);
  v2 = *(_QWORD *)(v0 + 456);
  v3 = *(_QWORD *)(v0 + 432);
  v5 = *(_QWORD *)(v0 + 408);
  v4 = *(_QWORD *)(v0 + 416);
  v6 = *(_QWORD *)(v0 + 400);
  v7 = *(_QWORD *)(v0 + 376);
  swift_release(*(_QWORD *)(v0 + 472));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10097816C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 544));
  v3 = *(_QWORD *)(v2 + 368);
  if (v0)
  {
    swift_errorRelease(v0);
    v4 = sub_100978458;
  }
  else
  {
    v4 = sub_1009781D8;
  }
  return swift_task_switch(v4, v3, 0);
}

uint64_t sub_1009781D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t inited;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v30;
  uint64_t v31;

  v1 = *(_QWORD *)(v0 + 384);
  v2 = *(_QWORD *)(v0 + 376);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 392) + 48))(v2, 1, v1) == 1)
  {
    v3 = *(void **)(v0 + 504);
    v4 = *(_QWORD *)(v0 + 472);

    swift_release(v4);
    sub_1004CB800(v2, &qword_1013FE140);
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 400);
    sub_1004B84E0(v2, v5, type metadata accessor for CRLBoardEntity);
    v6 = sub_1004B7878((unint64_t *)&unk_1013FE150, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F063B4);
    CSSearchableItem.associate<A>(appEntity:priority:)(v5, 0, v1, v6);
    if (qword_1013DD838 != -1)
      swift_once(&qword_1013DD838, sub_100A04F30);
    v7 = *(_QWORD *)(v0 + 536);
    v8 = *(_QWORD *)(v0 + 528);
    v9 = *(_QWORD *)(v0 + 520);
    v10 = *(void **)(v0 + 512);
    v11 = *(void **)(v0 + 488);
    v12 = *(_QWORD *)(v0 + 472);
    v30 = *(void **)(v0 + 504);
    v31 = *(_QWORD *)(v0 + 400);
    swift_beginAccess(&static OS_os_log.appIntents, v0 + 304, 0, 0);
    v13 = (void *)static OS_os_log.appIntents;
    inited = swift_initStackObject(v9, v0 + 168);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v15 = v13;
    v16 = objc_msgSend(v10, "uniqueIdentifier");
    v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
    v19 = v18;

    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = v8;
    *(_QWORD *)(inited + 32) = v17;
    *(_QWORD *)(inited + 40) = v19;
    v21 = static os_log_type_t.default.getter(v20);
    sub_100A06EBC((uint64_t)v15, &_mh_execute_header, v21, "Associated entity with spotlight searchable item: %@", 52, 2, inited);
    swift_release(v12);
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, 1, v7);

    sub_1004B84A4(v31, type metadata accessor for CRLBoardEntity);
  }
  v22 = *(_QWORD *)(v0 + 512);
  v23 = *(_QWORD *)(v0 + 456);
  v24 = *(_QWORD *)(v0 + 432);
  v26 = *(_QWORD *)(v0 + 408);
  v25 = *(_QWORD *)(v0 + 416);
  v27 = *(_QWORD *)(v0 + 400);
  v28 = *(_QWORD *)(v0 + 376);
  swift_task_dealloc(*(_QWORD *)(v0 + 464));
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v22);
}

uint64_t sub_100978458()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 392) + 56))(*(_QWORD *)(v0 + 376), 1, 1, *(_QWORD *)(v0 + 384));
  v1 = *(void **)(v0 + 504);
  v2 = *(_QWORD *)(v0 + 472);
  v3 = *(_QWORD *)(v0 + 376);

  swift_release(v2);
  sub_1004CB800(v3, &qword_1013FE140);
  v4 = *(_QWORD *)(v0 + 512);
  v5 = *(_QWORD *)(v0 + 456);
  v6 = *(_QWORD *)(v0 + 432);
  v8 = *(_QWORD *)(v0 + 408);
  v7 = *(_QWORD *)(v0 + 416);
  v9 = *(_QWORD *)(v0 + 400);
  v10 = *(_QWORD *)(v0 + 376);
  swift_task_dealloc(*(_QWORD *)(v0 + 464));
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v4);
}

uint64_t sub_100978534(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4[31] = a3;
  v4[32] = v3;
  v4[29] = a1;
  v4[30] = a2;
  v5 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  v4[33] = v5;
  v4[34] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100978594, v3, 0);
}

uint64_t sub_100978594()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(void **)(*(_QWORD *)(v0 + 256) + 144);
  *(_QWORD *)(v0 + 280) = v1;
  v2 = *(_QWORD *)(v0 + 272);
  if (v1)
  {
    v3 = *(_QWORD *)(v0 + 264);
    sub_1004B8460(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 272), type metadata accessor for CRLBoardIdentifier);
    swift_storeEnumTagMultiPayload(v2, v3, 1);
    v4 = dword_1013E431C;
    v1;
    v5 = (_QWORD *)swift_task_alloc(v4);
    *(_QWORD *)(v0 + 288) = v5;
    *v5 = v0;
    v5[1] = sub_100978670;
    return sub_100590F30(*(_QWORD *)(v0 + 272), 4, 0, 1, 2.0);
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v0 + 272));
    return (*(uint64_t (**)(_QWORD, unint64_t))(v0 + 8))(0, 0xF000000000000000);
  }
}

uint64_t sub_100978670(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 288);
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 272);
  v3[37] = a1;
  v3[38] = v1;
  swift_task_dealloc(v4);
  sub_1004B84A4(v5, type metadata accessor for CRLBoardPreviewImageCache.Item);
  if (v1)
    v6 = sub_100978948;
  else
    v6 = sub_1009786F8;
  return swift_task_switch(v6, v3[32], 0);
}

void sub_1009786F8()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t inited;
  id v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v1 = objc_msgSend(*(id *)(v0 + 296), "PNGRepresentation");
  static Data._unconditionallyBridgeFromObjectiveC(_:)(v1);
  v3 = v2;

  if (qword_1013DD718 != -1)
    swift_once(&qword_1013DD718, sub_100A01B78);
  v4 = *(void **)(v0 + 296);
  swift_beginAccess(&static OS_os_log.crlSpotlight, v0 + 208, 0, 0);
  v5 = (void *)static OS_os_log.crlSpotlight;
  v6 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v6, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E30;
  v8 = v5;
  objc_msgSend(v4, "size");
  v10 = v9;
  *(_QWORD *)(inited + 56) = &type metadata for CGFloat;
  v11 = sub_1008898AC();
  *(_QWORD *)(inited + 32) = v10;
  *(_QWORD *)(inited + 64) = v11;
  objc_msgSend(v4, "size");
  *(_QWORD *)(inited + 96) = &type metadata for CGFloat;
  *(_QWORD *)(inited + 104) = v11;
  *(_QWORD *)(inited + 72) = v12;
  __asm { BR              X11 }
}

uint64_t sub_100978948()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 272);

  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009789B4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[15];

  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[2] = &unk_100F1DA30;
  v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[4] = &unk_100F1DA48;
  v4[5] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[6] = (char *)&value witness table for Builtin.NativeObject + 64;
  result = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    v4[7] = *(_QWORD *)(result - 8) + 64;
    v4[8] = &unk_100F1DA60;
    v4[9] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[10] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[11] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[12] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[13] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[14] = (char *)&value witness table for Builtin.UnknownObject + 64;
    return swift_updateClassMetadata2(a1, 256, 15, v4, a1 + 80);
  }
  return result;
}

double sub_100978A84(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;
  uint64_t v17;
  double result;
  _BYTE v20[24];

  v4 = v3;
  v8 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v8);
  v10 = &v20[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (qword_1013DD718 != -1)
    swift_once(&qword_1013DD718, sub_100A01B78);
  swift_beginAccess(&static OS_os_log.crlSpotlight, v20, 0, 0);
  v11 = (id)static OS_os_log.crlSpotlight;
  v13 = static os_log_type_t.default.getter(v12);
  sub_100A06EBC((uint64_t)v11, &_mh_execute_header, v13, "REINDEX ALL", 11, 2, (uint64_t)_swiftEmptyArrayStorage);

  v14 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v10, 1, 1, v14);
  v15 = (_QWORD *)swift_allocObject(&unk_10128C2E0, 64, 7);
  v15[2] = 0;
  v15[3] = 0;
  v15[4] = v4;
  v15[5] = a1;
  v15[6] = a2;
  v15[7] = a3;
  swift_retain(v4);
  v16 = a1;
  swift_retain(a3);
  v17 = sub_100521B98((uint64_t)v10, (uint64_t)&unk_1013FE130, (uint64_t)v15);
  *(_QWORD *)&result = swift_release(v17).n128_u64[0];
  return result;
}

uint64_t sub_100978BF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[7] = a6;
  v7[8] = a7;
  v7[6] = a4;
  return swift_task_switch(sub_100978C10, a4, 0);
}

uint64_t sub_100978C10()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(os_unfair_lock_s **)(*(_QWORD *)(v1 + 160) + 16);
  os_unfair_lock_lock(v2);
  swift_beginAccess(v1 + 152, v0 + 16, 0, 0);
  swift_bridgeObjectRetain(*(_QWORD *)(v1 + 152));
  *(_QWORD *)(v0 + 72) = sub_100971D10(v3);
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(v2);
  return swift_task_switch(sub_100978CB0, 0, 0);
}

uint64_t sub_100978CB0()
{
  uint64_t v0;
  __n128 v1;

  sub_10097A5A0(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 56), *(uint64_t **)(v0 + 64));
  v1 = swift_bridgeObjectRelease();
  return (*(uint64_t (**)(__n128))(v0 + 8))(v1);
}

uint64_t *sub_100978E08(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v13);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    v8 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    v9 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    swift_bridgeObjectRetain(v12);
    swift_storeEnumTagMultiPayload(a1, a3, EnumCaseMultiPayload == 1);
  }
  return a1;
}

uint64_t sub_100978ED4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BOOL8 v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;

  v6 = swift_getEnumCaseMultiPayload(a2, a3) == 1;
  v7 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
  v8 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  swift_bridgeObjectRetain(v11);
  swift_storeEnumTagMultiPayload(a1, a3, v6);
  return a1;
}

uint64_t sub_100978F68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BOOL8 v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;

  if (a1 != a2)
  {
    sub_1004B84A4(a1, type metadata accessor for CRLSpotlightManager.ChangeType);
    v6 = swift_getEnumCaseMultiPayload(a2, a3) == 1;
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
    v9 = (_QWORD *)(a1 + v8);
    v10 = (_QWORD *)(a2 + v8);
    *v9 = *v10;
    v11 = v10[1];
    v9[1] = v11;
    swift_bridgeObjectRetain(v11);
    swift_storeEnumTagMultiPayload(a1, a3, v6);
  }
  return a1;
}

uint64_t type metadata accessor for CRLSpotlightManager.ChangeType(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1013FE0D8, (uint64_t)&nominal type descriptor for CRLSpotlightManager.ChangeType);
}

uint64_t sub_100979030(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BOOL8 v6;
  uint64_t v7;
  uint64_t v8;

  v6 = swift_getEnumCaseMultiPayload(a2, a3) == 1;
  v7 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
  v8 = type metadata accessor for CRLBoardIdentifierStorage(0);
  *(_OWORD *)(a1 + *(int *)(v8 + 20)) = *(_OWORD *)(a2 + *(int *)(v8 + 20));
  swift_storeEnumTagMultiPayload(a1, a3, v6);
  return a1;
}

uint64_t sub_1009790B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BOOL8 v6;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_1004B84A4(a1, type metadata accessor for CRLSpotlightManager.ChangeType);
    v6 = swift_getEnumCaseMultiPayload(a2, a3) == 1;
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    v8 = type metadata accessor for CRLBoardIdentifierStorage(0);
    *(_OWORD *)(a1 + *(int *)(v8 + 20)) = *(_OWORD *)(a2 + *(int *)(v8 + 20));
    swift_storeEnumTagMultiPayload(a1, a3, v6);
  }
  return a1;
}

uint64_t sub_100979158(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for CRLBoardIdentifierStorage(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = v4[0];
    swift_initEnumMetadataMultiPayload(a1, 256, 2, v4);
    return 0;
  }
  return result;
}

uint64_t sub_1009791BC()
{
  return sub_1004B7878((unint64_t *)&unk_1013FE110, type metadata accessor for CRLSpotlightManager.ChangeType, (uint64_t)&unk_100F1DA84);
}

uint64_t sub_1009791E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v4 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v4);
  v51 = (uint64_t)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v52 = (uint64_t)&v50 - v7;
  __chkstk_darwin(v8);
  v53 = (uint64_t)&v50 - v9;
  __chkstk_darwin(v10);
  v12 = (char *)&v50 - v11;
  __chkstk_darwin(v13);
  v50 = (uint64_t)&v50 - v14;
  __chkstk_darwin(v15);
  v17 = (char *)&v50 - v16;
  v18 = type metadata accessor for CRLSpotlightManager.ChangeType(0);
  __chkstk_darwin(v18);
  v20 = (char *)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v50 - v22;
  v24 = sub_1004B804C(&qword_1013FE120);
  __chkstk_darwin(v24);
  v26 = (char *)&v50 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = (uint64_t)&v26[*(int *)(v27 + 48)];
  sub_1004B8460(a1, (uint64_t)v26, type metadata accessor for CRLSpotlightManager.ChangeType);
  sub_1004B8460(a2, v28, type metadata accessor for CRLSpotlightManager.ChangeType);
  if (swift_getEnumCaseMultiPayload(v26, v18) == 1)
  {
    sub_1004B8460((uint64_t)v26, (uint64_t)v20, type metadata accessor for CRLSpotlightManager.ChangeType);
    if (swift_getEnumCaseMultiPayload(v28, v18) == 1)
    {
      v29 = v53;
      sub_1004B84E0(v28, v53, type metadata accessor for CRLBoardIdentifier);
      v30 = static UUID.== infix(_:_:)(v20);
      v31 = v52;
      sub_1004B8460((uint64_t)v20, v52, type metadata accessor for CRLBoardIdentifier);
      v32 = v51;
      sub_1004B8460(v29, v51, type metadata accessor for CRLBoardIdentifier);
      if ((v30 & 1) != 0)
      {
        v33 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
        v34 = *(_QWORD *)(v31 + v33);
        v35 = *(_QWORD *)(v31 + v33 + 8);
        v36 = (_QWORD *)(v32 + v33);
        v37 = v36[1];
        if (v34 == *v36 && v35 == v37)
        {
          sub_1004B84A4(v32, type metadata accessor for CRLBoardIdentifier);
          sub_1004B84A4(v31, type metadata accessor for CRLBoardIdentifier);
          sub_1004B84A4(v29, type metadata accessor for CRLBoardIdentifier);
          v38 = (uint64_t)v20;
LABEL_12:
          sub_1004B84A4(v38, type metadata accessor for CRLBoardIdentifier);
LABEL_21:
          sub_1004B84A4((uint64_t)v26, type metadata accessor for CRLSpotlightManager.ChangeType);
          return 1;
        }
        v47 = _stringCompareWithSmolCheck(_:_:expecting:)(v34, v35, *v36, v37, 0);
        sub_1004B84A4(v32, type metadata accessor for CRLBoardIdentifier);
        sub_1004B84A4(v31, type metadata accessor for CRLBoardIdentifier);
        sub_1004B84A4(v29, type metadata accessor for CRLBoardIdentifier);
        v48 = (uint64_t)v20;
LABEL_20:
        sub_1004B84A4(v48, type metadata accessor for CRLBoardIdentifier);
        if ((v47 & 1) != 0)
          goto LABEL_21;
        goto LABEL_22;
      }
      sub_1004B84A4(v32, type metadata accessor for CRLBoardIdentifier);
      sub_1004B84A4(v31, type metadata accessor for CRLBoardIdentifier);
      sub_1004B84A4(v29, type metadata accessor for CRLBoardIdentifier);
      v46 = (uint64_t)v20;
      goto LABEL_17;
    }
    v23 = v20;
  }
  else
  {
    sub_1004B8460((uint64_t)v26, (uint64_t)v23, type metadata accessor for CRLSpotlightManager.ChangeType);
    if (swift_getEnumCaseMultiPayload(v28, v18) != 1)
    {
      sub_1004B84E0(v28, (uint64_t)v17, type metadata accessor for CRLBoardIdentifier);
      v39 = static UUID.== infix(_:_:)(v23);
      v40 = v50;
      sub_1004B8460((uint64_t)v23, v50, type metadata accessor for CRLBoardIdentifier);
      sub_1004B8460((uint64_t)v17, (uint64_t)v12, type metadata accessor for CRLBoardIdentifier);
      if ((v39 & 1) != 0)
      {
        v41 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
        v42 = *(_QWORD *)(v40 + v41);
        v43 = *(_QWORD *)(v40 + v41 + 8);
        v44 = &v12[v41];
        v45 = *((_QWORD *)v44 + 1);
        if (v42 == *(_QWORD *)v44 && v43 == v45)
        {
          sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLBoardIdentifier);
          sub_1004B84A4(v40, type metadata accessor for CRLBoardIdentifier);
          sub_1004B84A4((uint64_t)v17, type metadata accessor for CRLBoardIdentifier);
          v38 = (uint64_t)v23;
          goto LABEL_12;
        }
        v47 = _stringCompareWithSmolCheck(_:_:expecting:)(v42, v43, *(_QWORD *)v44, v45, 0);
        sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLBoardIdentifier);
        sub_1004B84A4(v40, type metadata accessor for CRLBoardIdentifier);
        sub_1004B84A4((uint64_t)v17, type metadata accessor for CRLBoardIdentifier);
        v48 = (uint64_t)v23;
        goto LABEL_20;
      }
      sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLBoardIdentifier);
      sub_1004B84A4(v40, type metadata accessor for CRLBoardIdentifier);
      sub_1004B84A4((uint64_t)v17, type metadata accessor for CRLBoardIdentifier);
      v46 = (uint64_t)v23;
LABEL_17:
      sub_1004B84A4(v46, type metadata accessor for CRLBoardIdentifier);
LABEL_22:
      sub_1004B84A4((uint64_t)v26, type metadata accessor for CRLSpotlightManager.ChangeType);
      return 0;
    }
  }
  sub_1004B84A4((uint64_t)v23, type metadata accessor for CRLBoardIdentifier);
  sub_1004CB800((uint64_t)v26, &qword_1013FE120);
  return 0;
}

void sub_1009796B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t (*v25)(uint64_t);
  unint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  uint64_t (*v38)(uint64_t);
  char *v39;
  char *v40;
  char *v41;
  char v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  double *v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  double *v67;

  v6 = sub_1004B804C(&qword_1013E04F0);
  __chkstk_darwin(v6);
  v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v66 - 8);
  __chkstk_darwin(v66);
  v59 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v65 = (char *)&v51 - v12;
  v13 = type metadata accessor for CRLBoardIdentifier(0);
  v62 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v58 = (uint64_t)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v60 = (uint64_t)&v51 - v16;
  __chkstk_darwin(v17);
  v19 = (char *)&v51 - v18;
  v20 = 0;
  v67 = _swiftEmptyArrayStorage;
  v21 = *(_QWORD *)(a1 + 64);
  v53 = a1 + 64;
  v22 = 1 << *(_BYTE *)(a1 + 32);
  v23 = -1;
  if (v22 < 64)
    v23 = ~(-1 << v22);
  v24 = v23 & v21;
  v54 = (unint64_t)(v22 + 63) >> 6;
  v25 = type metadata accessor for CRLBoardIdentifier;
  v52 = a1;
  v56 = a2;
  v57 = v8;
  v55 = a3;
  while (1)
  {
    if (v24)
    {
      v64 = (v24 - 1) & v24;
      v26 = __clz(__rbit64(v24)) | (v20 << 6);
    }
    else
    {
      v27 = v20 + 1;
      if (__OFADD__(v20, 1))
        goto LABEL_41;
      if (v27 >= v54)
      {
LABEL_38:
        swift_release(a1);
        return;
      }
      v28 = *(_QWORD *)(v53 + 8 * v27);
      ++v20;
      if (!v28)
      {
        v20 = v27 + 1;
        if (v27 + 1 >= v54)
          goto LABEL_38;
        v28 = *(_QWORD *)(v53 + 8 * v20);
        if (!v28)
        {
          v20 = v27 + 2;
          if (v27 + 2 >= v54)
            goto LABEL_38;
          v28 = *(_QWORD *)(v53 + 8 * v20);
          if (!v28)
          {
            v20 = v27 + 3;
            if (v27 + 3 >= v54)
              goto LABEL_38;
            v28 = *(_QWORD *)(v53 + 8 * v20);
            if (!v28)
            {
              v29 = v27 + 4;
              if (v29 >= v54)
                goto LABEL_38;
              v28 = *(_QWORD *)(v53 + 8 * v29);
              if (!v28)
              {
                while (1)
                {
                  v20 = v29 + 1;
                  if (__OFADD__(v29, 1))
                    goto LABEL_42;
                  if (v20 >= v54)
                    goto LABEL_38;
                  v28 = *(_QWORD *)(v53 + 8 * v20);
                  ++v29;
                  if (v28)
                    goto LABEL_23;
                }
              }
              v20 = v29;
            }
          }
        }
      }
LABEL_23:
      v64 = (v28 - 1) & v28;
      v26 = __clz(__rbit64(v28)) + (v20 << 6);
    }
    v30 = *(_QWORD *)(a1 + 48);
    v61 = *(_QWORD *)(v62 + 72);
    v31 = v60;
    sub_1004B8460(v30 + v61 * v26, v60, v25);
    sub_1004B84E0(v31, (uint64_t)v19, v25);
    if (*(_QWORD *)(a2 + 16) && (v32 = sub_100843264((uint64_t)v19), (v33 & 1) != 0))
    {
      v34 = v66;
      (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v8, *(_QWORD *)(a2 + 56) + *(_QWORD *)(v9 + 72) * v32, v66);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v8, 0, 1, v34);
      v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v34);
      if ((_DWORD)v35 != 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v65, v8, v66);
        goto LABEL_30;
      }
    }
    else
    {
      v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v8, 1, 1, v66);
    }
    static Date.distantPast.getter(v35);
    sub_1004CB800((uint64_t)v8, &qword_1013E04F0);
LABEL_30:
    if (!*(_QWORD *)(a3 + 16))
      break;
    v36 = sub_100843264((uint64_t)v19);
    if ((v37 & 1) == 0)
      goto LABEL_40;
    v63 = v20;
    v38 = v25;
    v39 = v19;
    v40 = v59;
    Date.init(timeIntervalSinceReferenceDate:)(v36, *(double *)(*(_QWORD *)(a3 + 56) + 8 * v36));
    v41 = v65;
    v42 = static Date.< infix(_:_:)(v65, v40);
    v43 = v9;
    v44 = *(void (**)(char *, uint64_t))(v9 + 8);
    v45 = v66;
    v44(v40, v66);
    v44(v41, v45);
    v19 = v39;
    v46 = (uint64_t)v39;
    if ((v42 & 1) != 0)
    {
      v25 = v38;
      sub_1004B84E0(v46, v58, v38);
      v47 = v67;
      if ((swift_isUniquelyReferenced_nonNull_native(v67) & 1) == 0)
      {
        sub_100600A18(0, *((_QWORD *)v47 + 2) + 1, 1);
        v47 = v67;
      }
      v48 = v61;
      v50 = *((_QWORD *)v47 + 2);
      v49 = *((_QWORD *)v47 + 3);
      if (v50 >= v49 >> 1)
      {
        sub_100600A18(v49 > 1, v50 + 1, 1);
        v47 = v67;
      }
      *((_QWORD *)v47 + 2) = v50 + 1;
      sub_1004B84E0(v58, (uint64_t)v47+ ((*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80))+ v50 * v48, v25);
      a1 = v52;
    }
    else
    {
      v25 = v38;
      sub_1004B84A4(v46, v38);
    }
    a3 = v55;
    a2 = v56;
    v8 = v57;
    v9 = v43;
    v20 = v63;
    v24 = v64;
  }
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
}

uint64_t sub_100979BA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int64_t v13;
  double *v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  char v28;
  int64_t v29;
  double *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  double *v55;

  v4 = type metadata accessor for CRLBoardIdentifier(0);
  v54 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v53 = (uint64_t)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v52 = (uint64_t)&v46 - v7;
  v8 = type metadata accessor for CRLSpotlightManager.ChangeType(0);
  v50 = *(_QWORD *)(v8 - 8);
  v51 = v8;
  __chkstk_darwin(v8);
  v49 = (uint64_t)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v46 - v11;
  v13 = *(_QWORD *)(a1 + 16);
  v14 = _swiftEmptyArrayStorage;
  v47 = a2;
  if (v13)
  {
    v55 = _swiftEmptyArrayStorage;
    sub_100600C10(0, v13, 0);
    result = sub_100CE0488(a1);
    v16 = result;
    v18 = v17;
    v20 = v19 & 1;
    v21 = a1 + 56;
    v48 = a1 + 56;
    while ((v16 & 0x8000000000000000) == 0 && v16 < 1 << *(_BYTE *)(a1 + 32))
    {
      if (((*(_QWORD *)(v21 + (((unint64_t)v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
        goto LABEL_27;
      if (*(_DWORD *)(a1 + 36) != (_DWORD)v18)
        goto LABEL_28;
      v22 = v52;
      sub_1004B8460(*(_QWORD *)(a1 + 48) + *(_QWORD *)(v54 + 72) * v16, v52, type metadata accessor for CRLBoardIdentifier);
      v23 = v22;
      v24 = v53;
      sub_1004B84E0(v23, v53, type metadata accessor for CRLBoardIdentifier);
      sub_1004B8460(v24, (uint64_t)v12, type metadata accessor for CRLBoardIdentifier);
      swift_storeEnumTagMultiPayload(v12, v51, 0);
      sub_1004B84A4(v24, type metadata accessor for CRLBoardIdentifier);
      v14 = v55;
      if ((swift_isUniquelyReferenced_nonNull_native(v55) & 1) == 0)
      {
        sub_100600C10(0, *((_QWORD *)v14 + 2) + 1, 1);
        v21 = v48;
        v14 = v55;
      }
      v26 = *((_QWORD *)v14 + 2);
      v25 = *((_QWORD *)v14 + 3);
      if (v26 >= v25 >> 1)
      {
        sub_100600C10(v25 > 1, v26 + 1, 1);
        v21 = v48;
        v14 = v55;
      }
      *((_QWORD *)v14 + 2) = v26 + 1;
      sub_1004B84E0((uint64_t)v12, (uint64_t)v14+ ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80))+ *(_QWORD *)(v50 + 72) * v26, type metadata accessor for CRLSpotlightManager.ChangeType);
      result = sub_1005C3B08(v16, v18, v20 & 1, a1);
      v16 = result;
      v18 = v27;
      v20 = v28 & 1;
      if (!--v13)
      {
        sub_100503494(result, v27, v28 & 1);
        a2 = v47;
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
  }
  else
  {
LABEL_13:
    v29 = *(_QWORD *)(a2 + 16);
    v30 = _swiftEmptyArrayStorage;
    if (!v29)
    {
LABEL_25:
      v55 = v14;
      sub_100620DC0((uint64_t)v30);
      v45 = sub_100AF8AB4((uint64_t)v55);
      swift_bridgeObjectRelease();
      return v45;
    }
    v55 = _swiftEmptyArrayStorage;
    sub_100600C10(0, v29, 0);
    v31 = v47;
    result = sub_100CE0488(v47);
    v32 = result;
    v34 = v33;
    v36 = v35 & 1;
    v48 = v31 + 56;
    while ((v32 & 0x8000000000000000) == 0 && v32 < 1 << *(_BYTE *)(v31 + 32))
    {
      if (((*(_QWORD *)(v48 + (((unint64_t)v32 >> 3) & 0xFFFFFFFFFFFFF8)) >> v32) & 1) == 0)
        goto LABEL_30;
      if (*(_DWORD *)(v31 + 36) != (_DWORD)v34)
        goto LABEL_31;
      v37 = v52;
      sub_1004B8460(*(_QWORD *)(v31 + 48) + *(_QWORD *)(v54 + 72) * v32, v52, type metadata accessor for CRLBoardIdentifier);
      v38 = v37;
      v39 = v53;
      sub_1004B84E0(v38, v53, type metadata accessor for CRLBoardIdentifier);
      v40 = v49;
      sub_1004B8460(v39, v49, type metadata accessor for CRLBoardIdentifier);
      swift_storeEnumTagMultiPayload(v40, v51, 1);
      sub_1004B84A4(v39, type metadata accessor for CRLBoardIdentifier);
      v30 = v55;
      if ((swift_isUniquelyReferenced_nonNull_native(v55) & 1) == 0)
      {
        sub_100600C10(0, *((_QWORD *)v30 + 2) + 1, 1);
        v31 = v47;
        v30 = v55;
      }
      v42 = *((_QWORD *)v30 + 2);
      v41 = *((_QWORD *)v30 + 3);
      if (v42 >= v41 >> 1)
      {
        sub_100600C10(v41 > 1, v42 + 1, 1);
        v31 = v47;
        v30 = v55;
      }
      *((_QWORD *)v30 + 2) = v42 + 1;
      sub_1004B84E0(v49, (uint64_t)v30+ ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80))+ *(_QWORD *)(v50 + 72) * v42, type metadata accessor for CRLSpotlightManager.ChangeType);
      result = sub_1005C3B08(v32, v34, v36 & 1, v31);
      v32 = result;
      v34 = v43;
      v36 = v44 & 1;
      if (!--v29)
      {
        sub_100503494(result, v43, v44 & 1);
        goto LABEL_25;
      }
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

void sub_10097A05C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;

  v36 = a2;
  v43 = a4;
  v37 = a1;
  v5 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v5);
  v42 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CRLSpotlightManager.ChangeType(0);
  v45 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v41 = (uint64_t)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v36 - v10;
  __chkstk_darwin(v12);
  v15 = (char *)&v36 - v14;
  v16 = 0;
  v46 = a3;
  v17 = *(_QWORD *)(a3 + 56);
  v38 = 0;
  v39 = a3 + 56;
  v18 = 1 << *(_BYTE *)(a3 + 32);
  v19 = -1;
  if (v18 < 64)
    v19 = ~(-1 << v18);
  v20 = v19 & v17;
  v40 = (unint64_t)(v18 + 63) >> 6;
  v44 = v13;
  v21 = (uint64_t)v42;
  while (v20)
  {
    v22 = __clz(__rbit64(v20));
    v20 &= v20 - 1;
    v23 = v22 | (v16 << 6);
LABEL_21:
    v27 = *(_QWORD *)(v46 + 48);
    v28 = *(_QWORD *)(v45 + 72);
    v47 = v23;
    sub_1004B8460(v27 + v28 * v23, (uint64_t)v15, type metadata accessor for CRLSpotlightManager.ChangeType);
    sub_1004B8460((uint64_t)v15, (uint64_t)v11, type metadata accessor for CRLSpotlightManager.ChangeType);
    if (swift_getEnumCaseMultiPayload(v11, v7) == 1)
    {
      sub_1004B84A4((uint64_t)v11, type metadata accessor for CRLSpotlightManager.ChangeType);
LABEL_25:
      sub_1004B84A4((uint64_t)v15, type metadata accessor for CRLSpotlightManager.ChangeType);
      *(unint64_t *)((char *)v37 + ((v47 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v47;
      v34 = __OFADD__(v38++, 1);
      v7 = v44;
      if (v34)
      {
        __break(1u);
LABEL_28:
        v35 = v46;
        swift_retain(v46);
        sub_100CD89CC(v37, v36, v38, v35);
        return;
      }
    }
    else
    {
      sub_1004B84E0((uint64_t)v11, v21, type metadata accessor for CRLBoardIdentifier);
      v29 = v20;
      v30 = v16;
      v31 = v41;
      sub_1004B8460(v21, v41, type metadata accessor for CRLBoardIdentifier);
      swift_storeEnumTagMultiPayload(v31, v7, 1);
      v32 = sub_100623DD0(v31, v43);
      v33 = v31;
      v16 = v30;
      v20 = v29;
      sub_1004B84A4(v33, type metadata accessor for CRLSpotlightManager.ChangeType);
      sub_1004B84A4(v21, type metadata accessor for CRLBoardIdentifier);
      if ((v32 & 1) == 0)
        goto LABEL_25;
      sub_1004B84A4((uint64_t)v15, type metadata accessor for CRLSpotlightManager.ChangeType);
      v7 = v44;
    }
  }
  v24 = v16 + 1;
  if (__OFADD__(v16, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v24 >= v40)
    goto LABEL_28;
  v25 = *(_QWORD *)(v39 + 8 * v24);
  ++v16;
  if (v25)
    goto LABEL_20;
  v16 = v24 + 1;
  if (v24 + 1 >= v40)
    goto LABEL_28;
  v25 = *(_QWORD *)(v39 + 8 * v16);
  if (v25)
    goto LABEL_20;
  v16 = v24 + 2;
  if (v24 + 2 >= v40)
    goto LABEL_28;
  v25 = *(_QWORD *)(v39 + 8 * v16);
  if (v25)
  {
LABEL_20:
    v20 = (v25 - 1) & v25;
    v23 = __clz(__rbit64(v25)) + (v16 << 6);
    goto LABEL_21;
  }
  v26 = v24 + 3;
  if (v26 >= v40)
    goto LABEL_28;
  v25 = *(_QWORD *)(v39 + 8 * v26);
  if (v25)
  {
    v16 = v26;
    goto LABEL_20;
  }
  while (1)
  {
    v16 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v16 >= v40)
      goto LABEL_28;
    v25 = *(_QWORD *)(v39 + 8 * v16);
    ++v26;
    if (v25)
      goto LABEL_20;
  }
LABEL_30:
  __break(1u);
}

uint64_t sub_10097A3DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v5;
  unsigned int v6;
  unint64_t v7;
  size_t v8;
  uint64_t isStackAllocationSafe;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  void *v13;
  uint64_t v14;
  uint64_t v16;

  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v7 = (unint64_t)((1 << v5) + 63) >> 6;
  v8 = 8 * v7;
  isStackAllocationSafe = swift_bridgeObjectRetain_n(a2, 2);
  if (v6 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(v8, 8), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v16 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    swift_bridgeObjectRetain(a2);
    sub_10097A05C((unint64_t *)((char *)&v16 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0)), v7, a1, a2);
    v11 = v10;
    swift_bridgeObjectRelease();
    v12 = swift_release(a1);
    if (v2)
      swift_willThrow(v12);
    swift_bridgeObjectRelease_n(a2, 2);
  }
  else
  {
    v13 = (void *)swift_slowAlloc(v8, -1);
    bzero(v13, v8);
    swift_bridgeObjectRetain(a2);
    sub_10097A05C((unint64_t *)v13, v7, a1, a2);
    v11 = v14;
    swift_bridgeObjectRelease();
    swift_release(a1);
    swift_slowDealloc(v13, -1, -1);
    swift_bridgeObjectRelease_n(a2, 2);
  }
  return v11;
}

uint64_t sub_10097A5A0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t inited;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  __n128 v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  __n128 v59;
  char *v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __n128 v70;
  __n128 v71;
  _QWORD v73[2];
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  unint64_t v85;
  char *v86;
  _QWORD v87[2];
  void *v88;
  char v89[72];
  char v90[32];

  v6 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v6);
  v8 = (char *)v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UUID(0);
  v82 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v86 = (char *)v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = type metadata accessor for CRLBoardIdentifierStorage(0);
  __chkstk_darwin(v81);
  v80 = (char *)v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v12);
  v79 = (uint64_t)v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v78 = (uint64_t)v73 - v15;
  __chkstk_darwin(v16);
  v77 = (uint64_t)v73 - v17;
  __chkstk_darwin(v18);
  v76 = (uint64_t)v73 - v19;
  __chkstk_darwin(v20);
  v75 = (uint64_t)v73 - v21;
  if (qword_1013DD718 != -1)
    goto LABEL_20;
  while (1)
  {
    swift_beginAccess(&static OS_os_log.crlSpotlight, v90, 0, 0);
    v22 = (void *)static OS_os_log.crlSpotlight;
    v23 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v23, v89);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v87[0] = a1;
    v25 = v22;
    v26 = sub_1004B804C((uint64_t *)&unk_1013E4970);
    v27 = sub_1004CBA30((unint64_t *)&qword_1013DFC40, (uint64_t *)&unk_1013E4970, (uint64_t)&protocol conformance descriptor for [A]);
    v28 = BidirectionalCollection<>.joined(separator:)(44, 0xE100000000000000, v26, v27);
    v30 = v29;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = sub_1004CFC2C();
    *(_QWORD *)(inited + 32) = v28;
    *(_QWORD *)(inited + 40) = v30;
    v32 = static os_log_type_t.default.getter(v31);
    sub_100A06EBC((uint64_t)v25, &_mh_execute_header, v32, "REINDEX [%@]", 12, 2, inited);
    swift_setDeallocating(inited);
    v33 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v33);

    v34 = &_swiftEmptySetSingleton;
    v88 = &_swiftEmptySetSingleton;
    v35 = a1;
    a1 = *(_QWORD *)(a1 + 16);
    if (!a1)
      break;
    v73[1] = a3;
    v74 = a2;
    swift_bridgeObjectRetain(v35);
    v85 = sub_1004D292C();
    v73[0] = v35;
    a3 = (uint64_t *)(v35 + 40);
    v83 = v9;
    v84 = v8;
    a2 = v82;
    while (1)
    {
      v36 = *(a3 - 1);
      v37 = *a3;
      v87[0] = v36;
      v87[1] = v37;
      swift_bridgeObjectRetain_n(v37, 2);
      v38 = (_QWORD *)StringProtocol<>.split(separator:maxSplits:omittingEmptySubsequences:)(58, 0xE100000000000000, 1, 0, &type metadata for String, v85);
      v40 = v38[2];
      if (v40)
        break;
      v48 = v37;
LABEL_10:
      UUID.init(uuidString:)(v36, v48, v39);
      v49 = swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(a2 + 48))(v8, 1, v9, v49) == 1)
      {
        swift_bridgeObjectRelease();
        sub_1004CB800((uint64_t)v8, (uint64_t *)&unk_1013E1A50);
      }
      else
      {
        a2 = *(_QWORD *)(a2 + 32);
        ((void (*)(char *, char *, uint64_t))a2)(v86, v8, v9);
        if (v40 <= 1)
        {
          v59 = swift_bridgeObjectRelease();
          v56 = 0;
          v58 = 0xE000000000000000;
        }
        else
        {
          if (v38[2] < 2uLL)
            goto LABEL_19;
          v50 = v38[8];
          v51 = v38[9];
          v52 = v38[10];
          v53 = v38[11];
          swift_bridgeObjectRetain(v53);
          v54 = swift_bridgeObjectRelease();
          v55 = v52;
          v8 = v84;
          v56 = static String._fromSubstring(_:)(v50, v51, v55, v53, v54);
          v58 = v57;
          v9 = v83;
          v59 = swift_bridgeObjectRelease();
        }
        v60 = v80;
        ((void (*)(char *, char *, uint64_t, __n128))a2)(v80, v86, v9, v59);
        v61 = (uint64_t *)&v60[*(int *)(v81 + 20)];
        *v61 = v56;
        v61[1] = v58;
        v62 = (uint64_t)v60;
        v63 = v77;
        sub_1004B84E0(v62, v77, type metadata accessor for CRLBoardIdentifierStorage);
        v64 = v63;
        v65 = v76;
        sub_1004B84E0(v64, v76, type metadata accessor for CRLBoardIdentifier);
        v66 = v75;
        sub_1004B84E0(v65, v75, type metadata accessor for CRLBoardIdentifier);
        v67 = v79;
        sub_1004B8460(v66, v79, type metadata accessor for CRLBoardIdentifier);
        v68 = v78;
        sub_100AD7844(v78, v67);
        sub_1004B84A4(v68, type metadata accessor for CRLBoardIdentifier);
        sub_1004B84A4(v66, type metadata accessor for CRLBoardIdentifier);
        a2 = v82;
      }
      a3 += 2;
      swift_bridgeObjectRelease();
      if (!--a1)
      {
        swift_bridgeObjectRelease();
        v34 = v88;
        a2 = v74;
        goto LABEL_17;
      }
    }
    swift_bridgeObjectRelease();
    if (v38[2])
    {
      v41 = v38[4];
      v42 = v38[5];
      v44 = v38[6];
      v43 = v38[7];
      v45 = swift_bridgeObjectRetain(v43);
      v46 = v44;
      v9 = v83;
      v36 = static String._fromSubstring(_:)(v41, v42, v46, v43, v45);
      v48 = v47;
      v8 = v84;
      v39 = swift_bridgeObjectRelease();
      goto LABEL_10;
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    swift_once(&qword_1013DD718, sub_100A01B78);
  }
LABEL_17:
  v69 = sub_100979BA4((uint64_t)v34, (uint64_t)&_swiftEmptySetSingleton);
  v70 = swift_bridgeObjectRelease();
  v87[0] = v69;
  PassthroughSubject.send(_:)(v87, v70);
  v71 = swift_bridgeObjectRelease();
  return ((uint64_t (*)(__n128))a2)(v71);
}

uint64_t sub_10097ABB8(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t inited;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  __n128 v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __n128 v70;
  __n128 v71;
  _QWORD v73[2];
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  unint64_t v86;
  char *v87;
  _QWORD v88[2];
  void *v89;
  char v90[72];
  char v91[32];

  v6 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v6);
  v8 = (char *)v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UUID(0);
  v83 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v87 = (char *)v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = type metadata accessor for CRLBoardIdentifierStorage(0);
  __chkstk_darwin(v82);
  v81 = (char *)v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v12);
  v80 = (uint64_t)v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v79 = (uint64_t)v73 - v15;
  __chkstk_darwin(v16);
  v78 = (uint64_t)v73 - v17;
  __chkstk_darwin(v18);
  v77 = (uint64_t)v73 - v19;
  __chkstk_darwin(v20);
  v76 = (uint64_t)v73 - v21;
  if (qword_1013DD718 != -1)
    goto LABEL_20;
  while (1)
  {
    swift_beginAccess(&static OS_os_log.crlSpotlight, v91, 0, 0);
    v22 = (void *)static OS_os_log.crlSpotlight;
    v23 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v23, v90);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v88[0] = a1;
    v25 = v22;
    v26 = sub_1004B804C((uint64_t *)&unk_1013E4970);
    v27 = sub_1004CBA30((unint64_t *)&qword_1013DFC40, (uint64_t *)&unk_1013E4970, (uint64_t)&protocol conformance descriptor for [A]);
    v75 = a1;
    v28 = BidirectionalCollection<>.joined(separator:)(44, 0xE100000000000000, v26, v27);
    v30 = v29;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = sub_1004CFC2C();
    *(_QWORD *)(inited + 32) = v28;
    *(_QWORD *)(inited + 40) = v30;
    v31 = v75;
    v33 = static os_log_type_t.default.getter(v32);
    sub_100A06EBC((uint64_t)v25, &_mh_execute_header, v33, "REINDEX [%@]", 12, 2, inited);
    swift_setDeallocating(inited);
    v34 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v34);

    v35 = &_swiftEmptySetSingleton;
    v89 = &_swiftEmptySetSingleton;
    v36 = v31[2];
    if (!v36)
      break;
    v73[1] = a2;
    v74 = a3;
    swift_bridgeObjectRetain(v31);
    v37 = sub_1004D292C();
    v85 = v8;
    v86 = v37;
    a2 = v31 + 5;
    v84 = v9;
    a3 = v83;
    while (1)
    {
      v38 = *(a2 - 1);
      v39 = *a2;
      v88[0] = v38;
      v88[1] = v39;
      swift_bridgeObjectRetain_n(v39, 2);
      a1 = (_QWORD *)StringProtocol<>.split(separator:maxSplits:omittingEmptySubsequences:)(58, 0xE100000000000000, 1, 0, &type metadata for String, v86);
      v41 = a1[2];
      if (v41)
        break;
      v49 = v39;
LABEL_10:
      UUID.init(uuidString:)(v38, v49, v40);
      v50 = swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(a3 + 48))(v8, 1, v9, v50) == 1)
      {
        swift_bridgeObjectRelease();
        sub_1004CB800((uint64_t)v8, (uint64_t *)&unk_1013E1A50);
      }
      else
      {
        a3 = *(_QWORD *)(a3 + 32);
        ((void (*)(char *, char *, uint64_t))a3)(v87, v8, v9);
        if (v41 <= 1)
        {
          v60 = swift_bridgeObjectRelease();
          v57 = 0;
          v59 = 0xE000000000000000;
        }
        else
        {
          if (a1[2] < 2uLL)
            goto LABEL_19;
          v51 = a1[8];
          v52 = a1[9];
          v53 = a1[10];
          v54 = a1[11];
          swift_bridgeObjectRetain(v54);
          v55 = swift_bridgeObjectRelease();
          v56 = v53;
          v8 = v85;
          v57 = static String._fromSubstring(_:)(v51, v52, v56, v54, v55);
          v59 = v58;
          v9 = v84;
          v60 = swift_bridgeObjectRelease();
        }
        v61 = (uint64_t)v81;
        ((void (*)(char *, char *, uint64_t, __n128))a3)(v81, v87, v9, v60);
        v62 = (uint64_t *)(v61 + *(int *)(v82 + 20));
        *v62 = v57;
        v62[1] = v59;
        v63 = v78;
        sub_1004B84E0(v61, v78, type metadata accessor for CRLBoardIdentifierStorage);
        v64 = v63;
        v65 = v77;
        sub_1004B84E0(v64, v77, type metadata accessor for CRLBoardIdentifier);
        v66 = v76;
        sub_1004B84E0(v65, v76, type metadata accessor for CRLBoardIdentifier);
        v67 = v80;
        sub_1004B8460(v66, v80, type metadata accessor for CRLBoardIdentifier);
        v68 = v79;
        sub_100AD7844(v79, v67);
        sub_1004B84A4(v68, type metadata accessor for CRLBoardIdentifier);
        sub_1004B84A4(v66, type metadata accessor for CRLBoardIdentifier);
        a3 = v83;
      }
      a2 += 2;
      swift_bridgeObjectRelease();
      if (!--v36)
      {
        swift_bridgeObjectRelease();
        v35 = v89;
        a3 = v74;
        goto LABEL_17;
      }
    }
    swift_bridgeObjectRelease();
    if (a1[2])
    {
      v42 = a1[4];
      v43 = a1[5];
      v45 = a1[6];
      v44 = a1[7];
      v46 = swift_bridgeObjectRetain(v44);
      v47 = v45;
      v9 = v84;
      v38 = static String._fromSubstring(_:)(v42, v43, v47, v44, v46);
      v49 = v48;
      v8 = v85;
      v40 = swift_bridgeObjectRelease();
      goto LABEL_10;
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    swift_once(&qword_1013DD718, sub_100A01B78);
  }
LABEL_17:
  v69 = sub_100979BA4((uint64_t)v35, (uint64_t)&_swiftEmptySetSingleton);
  v70 = swift_bridgeObjectRelease();
  v88[0] = v69;
  PassthroughSubject.send(_:)(v88, v70);
  v71 = swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t, __n128))(a3 + 16))(a3, v71);
}

uint64_t sub_10097B1C8()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10097B1EC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));

  swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10097B228()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = swift_task_alloc(dword_1013FE12C);
  v4 = *(_OWORD *)(v0 + 48);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_1004CFD00;
  *(_OWORD *)(v3 + 56) = v4;
  *(_QWORD *)(v3 + 48) = v2;
  return swift_task_switch(sub_100978C10, v2, 0);
}

uint64_t type metadata accessor for CRLSpotlightManager.IndexDecision(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1013FE3C0, (uint64_t)&nominal type descriptor for CRLSpotlightManager.IndexDecision);
}

void sub_10097B2A4(uint64_t a1)
{
  uint64_t v1;

  sub_10073FAC4(a1, *(void **)(v1 + 16));
}

void sub_10097B2AC(uint64_t a1)
{
  uint64_t v1;

  sub_10073FC14(a1, *(void **)(v1 + 16));
}

uint64_t sub_10097B2B4@<X0>(uint64_t *a1@<X8>)
{
  return sub_100A9C608(a1);
}

unint64_t sub_10097B2CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013FE190;
  if (!qword_1013FE190)
  {
    v1 = sub_1004CB6A4(&qword_1013FE188);
    sub_1004B7878(&qword_1013DF830, type metadata accessor for CRLBoardIdentifier, (uint64_t)&unk_100F02134);
    sub_1004B7878(&qword_1013FE1A0, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> [A : B], v1);
    atomic_store(result, (unint64_t *)&qword_1013FE190);
  }
  return result;
}

unint64_t sub_10097B368()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013FE1A8;
  if (!qword_1013FE1A8)
  {
    v1 = sub_1004CB6A4(&qword_1013FE188);
    sub_1004B7878((unint64_t *)&unk_1013FE1B0, type metadata accessor for CRLBoardIdentifier, (uint64_t)&unk_100F0210C);
    sub_1004B7878(&qword_1013E95C0, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> [A : B], v1);
    atomic_store(result, (unint64_t *)&qword_1013FE1A8);
  }
  return result;
}

BOOL sub_10097B404(uint64_t a1)
{
  uint64_t v1;

  return sub_100973CA0(a1, v1);
}

uint64_t sub_10097B40C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_100973D38(a1, v2, a2);
}

void sub_10097B414(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  sub_100974AC0(a1, v2, a2);
}

uint64_t sub_10097B41C()
{
  return PassthroughSubject.send(_:)();
}

uint64_t sub_10097B444(uint64_t result)
{
  if (*(_QWORD *)(*(_QWORD *)result + 16))
    return sub_100975A44();
  return result;
}

uint64_t sub_10097B458()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_10097B47C(uint64_t a1)
{
  uint64_t v1;

  return sub_100974F48(a1, v1);
}

double sub_10097B484(uint64_t a1)
{
  uint64_t v1;

  return sub_10097515C(a1, v1);
}

double sub_10097B48C(uint64_t a1)
{
  uint64_t v1;

  return sub_1009752F4(a1, v1);
}

uint64_t sub_10097B494()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for CRLSpotlightManager.IndexDecision(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release(*(_QWORD *)(v0 + 16));
  LODWORD(v1) = swift_getEnumCaseMultiPayload(v0 + v4, v1);
  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v0 + v4, v6);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease();
  if ((_DWORD)v1 != 1)

  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_10097B558(uint64_t a1, uint64_t a2)
{
  return sub_10097B7B8(a1, a2, type metadata accessor for CRLSpotlightManager.IndexDecision, (uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t))sub_100974C08);
}

uint64_t sub_10097B56C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = type metadata accessor for CRLSpotlightManager.IndexDecision(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  LODWORD(v1) = swift_getEnumCaseMultiPayload(v0 + v4, v1);
  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v0 + v4, v6);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease();
  if ((_DWORD)v1 != 1)

  v7 = (v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = v7 + 16;
  swift_release(*(_QWORD *)(v0 + v7 + 8));
  return swift_deallocObject(v0, v8, v3 | 7);
}

uint64_t sub_10097B658(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(type metadata accessor for CRLSpotlightManager.IndexDecision(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = (_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v11 = *v10;
  v12 = v10[1];
  v13 = (_QWORD *)swift_task_alloc(dword_1013FE2AC);
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_1004CFD00;
  return sub_100974D98(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_10097B714()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(type metadata accessor for CRLSpotlightManager.ChangeType(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 24) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  swift_release(*(_QWORD *)(v0 + 16));
  v5 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v0 + v3, v5);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease();
  return swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_10097B7A4(uint64_t a1, uint64_t a2)
{
  return sub_10097B7B8(a1, a2, type metadata accessor for CRLSpotlightManager.ChangeType, (uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t))sub_100973FB4);
}

uint64_t sub_10097B7B8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t (*a4)(uint64_t, uint64_t, _QWORD, uint64_t))
{
  uint64_t v4;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(a3(0) - 8) + 80);
  return a4(a1, a2, *(_QWORD *)(v4 + 16), v4 + ((v7 + 24) & ~v7));
}

uint64_t sub_10097B818(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013FE2E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10097B860()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = *(_QWORD *)(type metadata accessor for CRLSpotlightManager.ChangeType(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 40) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  v5 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v0 + v3, v5);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease();
  v6 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = v6 + 16;
  swift_release(*(_QWORD *)(v0 + v6 + 8));
  return swift_deallocObject(v0, v7, v2 | 7);
}

uint64_t sub_10097B918(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(type metadata accessor for CRLSpotlightManager.ChangeType(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = (_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v11 = *v10;
  v12 = v10[1];
  v13 = (_QWORD *)swift_task_alloc(dword_1013FE2F4);
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_1004CFD00;
  return sub_10097414C(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_10097B9D4()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10097BA00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc(dword_1013FE33C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1004CF80C;
  v3[2] = v2;
  return swift_task_switch(sub_100972A6C, v2, 0);
}

uint64_t *sub_10097BA60(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v16);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    v8 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    v9 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    swift_bridgeObjectRetain(v12);
    if (EnumCaseMultiPayload == 1)
    {
      v13 = a1;
      v14 = a3;
      v15 = 1;
    }
    else
    {
      v17 = *(int *)(sub_1004B804C((uint64_t *)&unk_1013FE160) + 48);
      v18 = *(void **)((char *)a2 + v17);
      *(uint64_t *)((char *)a1 + v17) = (uint64_t)v18;
      v19 = v18;
      v13 = a1;
      v14 = a3;
      v15 = 0;
    }
    swift_storeEnumTagMultiPayload(v13, v14, v15);
  }
  return a1;
}

void sub_10097BB50(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v4;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1, a2);
  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease();
  if (EnumCaseMultiPayload != 1)

}

uint64_t sub_10097BBD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  v7 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
  v8 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  swift_bridgeObjectRetain(v11);
  if (EnumCaseMultiPayload == 1)
  {
    v12 = 1;
  }
  else
  {
    v13 = *(int *)(sub_1004B804C((uint64_t *)&unk_1013FE160) + 48);
    v14 = *(void **)(a2 + v13);
    *(_QWORD *)(a1 + v13) = v14;
    v15 = v14;
    v12 = 0;
  }
  swift_storeEnumTagMultiPayload(a1, a3, v12);
  return a1;
}

uint64_t sub_10097BC8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;

  if (a1 != a2)
  {
    sub_1004B84A4(a1, type metadata accessor for CRLSpotlightManager.IndexDecision);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
    v9 = (_QWORD *)(a1 + v8);
    v10 = (_QWORD *)(a2 + v8);
    *v9 = *v10;
    v11 = v10[1];
    v9[1] = v11;
    swift_bridgeObjectRetain(v11);
    if (EnumCaseMultiPayload == 1)
    {
      v12 = 1;
    }
    else
    {
      v13 = *(int *)(sub_1004B804C((uint64_t *)&unk_1013FE160) + 48);
      v14 = *(void **)(a2 + v13);
      *(_QWORD *)(a1 + v13) = v14;
      v15 = v14;
      v12 = 0;
    }
    swift_storeEnumTagMultiPayload(a1, a3, v12);
  }
  return a1;
}

uint64_t sub_10097BD68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  v7 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
  v8 = type metadata accessor for CRLBoardIdentifierStorage(0);
  *(_OWORD *)(a1 + *(int *)(v8 + 20)) = *(_OWORD *)(a2 + *(int *)(v8 + 20));
  if (EnumCaseMultiPayload == 1)
  {
    v9 = 1;
  }
  else
  {
    v10 = sub_1004B804C((uint64_t *)&unk_1013FE160);
    v9 = 0;
    *(_QWORD *)(a1 + *(int *)(v10 + 48)) = *(_QWORD *)(a2 + *(int *)(v10 + 48));
  }
  swift_storeEnumTagMultiPayload(a1, a3, v9);
  return a1;
}

uint64_t sub_10097BE14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (a1 != a2)
  {
    sub_1004B84A4(a1, type metadata accessor for CRLSpotlightManager.IndexDecision);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    v8 = type metadata accessor for CRLBoardIdentifierStorage(0);
    *(_OWORD *)(a1 + *(int *)(v8 + 20)) = *(_OWORD *)(a2 + *(int *)(v8 + 20));
    if (EnumCaseMultiPayload == 1)
    {
      v9 = 1;
    }
    else
    {
      v10 = sub_1004B804C((uint64_t *)&unk_1013FE160);
      v9 = 0;
      *(_QWORD *)(a1 + *(int *)(v10 + 48)) = *(_QWORD *)(a2 + *(int *)(v10 + 48));
    }
    swift_storeEnumTagMultiPayload(a1, a3, v9);
  }
  return a1;
}

uint64_t sub_10097BED8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;
  _BYTE v5[32];
  _QWORD v6[2];

  result = type metadata accessor for CRLBoardIdentifierStorage(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_getTupleTypeLayout2(v5, v4, (char *)&value witness table for Builtin.UnknownObject + 64);
    v6[0] = v5;
    v6[1] = v4;
    swift_initEnumMetadataMultiPayload(a1, 256, 2, v6);
    return 0;
  }
  return result;
}

_QWORD *sub_10097BF60(objc_class *a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t KeyPath;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  _QWORD *v14;
  uint64_t *v15;
  void (*v16)(uint64_t, uint64_t);
  _QWORD *v17;
  uint64_t v19[3];

  KeyPath = swift_getKeyPath(aP_15);
  v9 = sub_1009EA44C(a2, a1, KeyPath);
  swift_release(KeyPath);
  if (v9)
  {
    v10 = sub_1004B804C((uint64_t *)&unk_1013E4180);
    v11 = swift_allocObject(v10, 40, 7);
    *(_OWORD *)(v11 + 16) = xmmword_100EEF400;
    *(_QWORD *)(v11 + 32) = v9;
    v19[0] = v11;
    specialized Array._endMutation()(v11);
    v12 = v19[0];
    v13 = objc_allocWithZone((Class)type metadata accessor for CRLCommandGroup());
    v14 = v9;
    v9 = objc_msgSend(v13, "init");
    v15 = (_QWORD *)((char *)v9 + OBJC_IVAR____TtC8Freeform15CRLCommandGroup_commands);
    swift_beginAccess((char *)v9 + OBJC_IVAR____TtC8Freeform15CRLCommandGroup_commands, v19, 1, 0);
    *v15 = v12;

    swift_bridgeObjectRelease();
    if (a4)
    {
      v16 = *(void (**)(uint64_t, uint64_t))((swift_isaMask & *v9) + 0x110);
      swift_bridgeObjectRetain(a4);
      v17 = v9;
      v16(a3, a4);

    }
  }
  return v9;
}

double sub_10097C0B4(_QWORD *a1)
{
  _UNKNOWN ****v1;
  uint64_t v2;
  uint64_t v3;
  double result;
  _BYTE v5[24];

  v1 = *(_UNKNOWN *****)(*a1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*v1 == &off_10140F528)
    v2 = *(_QWORD *)(*a1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  else
    v2 = 0;
  swift_beginAccess(v2 + qword_101481450, v5, 32, 0);
  swift_retain(v1);
  v3 = sub_1004B804C((uint64_t *)&unk_1013E9BD0);
  CRRegister.wrappedValue.getter(v3);
  swift_endAccess(v5);
  *(_QWORD *)&result = swift_release(v1).n128_u64[0];
  return result;
}

uint64_t sub_10097C158(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = type metadata accessor for CRLUSDZAssetDataStruct(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10097C1F8(a1, (uint64_t)v4);
  return sub_10065F518((uint64_t)v4);
}

uint64_t type metadata accessor for CRLUSDZItemCommandProvider()
{
  return objc_opt_self(_TtC8Freeform26CRLUSDZItemCommandProvider);
}

uint64_t sub_10097C1F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLUSDZAssetDataStruct(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id sub_10097C23C(double a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  double v12;
  double v13;
  double v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  id result;
  void *v21;
  double v22;
  CGFloat v23;
  double v24;
  double v25;
  int64_t Height;
  CGAffineTransform v27;

  v5 = sub_10065FB20();
  if (!v5)
    return 0;
  v6 = v5;
  v7 = objc_msgSend((id)objc_opt_self(CRLImageProviderPool), "sharedPool");
  v8 = objc_msgSend(v7, "providerForAsset:shouldValidate:", v6, 1);

  v9 = objc_opt_self(CRLBitmapImageProvider);
  v10 = (void *)swift_dynamicCastObjCClass(v8, v9);
  if (!v10
    || (v11 = v10, !objc_msgSend(v10, "isValid"))
    || (objc_msgSend(v11, "isError") & 1) != 0
    || (objc_msgSend(v11, "naturalSize"),
        v14 = sub_100062E58(v12, v13, 1000000.0),
        (v15 = objc_msgSend(v11, "CGImageResampledToSize:lowQuality:assetOwner:", 1, a3, sub_100061064(v14))) == 0))
  {

    return 0;
  }
  v16 = v15;
  v17 = (void *)objc_opt_self(CRLBezierPath);
  v18 = objc_msgSend(v17, "tracedPathForImage:alphaThreshold:pointSpacing:", v16, a1, 1.0);
  if (!v18)
  {

    return 0;
  }
  v19 = v18;
  result = objc_msgSend(v17, "smoothBezierPath:withThreshold:", v18, 2.0);
  if (result)
  {
    v21 = result;
    objc_msgSend(v11, "naturalSize");
    v23 = v22 / (double)(uint64_t)CGImageGetWidth((CGImageRef)v16);
    objc_msgSend(v11, "naturalSize");
    v25 = v24;
    Height = CGImageGetHeight((CGImageRef)v16);
    CGAffineTransformMakeScale(&v27, v23, v25 / (double)Height);
    objc_msgSend(v21, "transformUsingAffineTransform:", &v27);

    return v21;
  }
  __break(1u);
  return result;
}

uint64_t sub_10097C464(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[2] = a1;
  v2[3] = a2;
  v3 = type metadata accessor for MainActor(0);
  v2[4] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  v2[5] = v4;
  v2[6] = v5;
  return swift_task_switch(sub_10097C4D0, v4, v5);
}

uint64_t sub_10097C4D0()
{
  uint64_t v0;
  uint64_t v1;
  __CFData *v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  id v6;
  _QWORD *v7;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = sub_100435130(*(CGImage **)(v0 + 16));
  v3 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v2);
  v5 = v4;

  *(_QWORD *)(v0 + 56) = v3;
  *(_QWORD *)(v0 + 64) = v5;
  v6 = objc_allocWithZone((Class)type metadata accessor for CRLPreinsertionAssetWrapper(0));
  sub_1004BE310(v3, v5);
  swift_unknownObjectRetain(v1);
  *(_QWORD *)(v0 + 72) = sub_1009BAF98(v3, v5, 0x6D49726574736F70, 0xEF676E702E656761, v1);
  v7 = (_QWORD *)swift_task_alloc(dword_1013FFA54);
  *(_QWORD *)(v0 + 80) = v7;
  *v7 = v0;
  v7[1] = sub_10097C5E4;
  return sub_1009BB884();
}

uint64_t sub_10097C5E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 80);
  *(_QWORD *)(*(_QWORD *)v2 + 88) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = v4[5];
    v7 = v4[6];
    v8 = sub_10097C6A4;
  }
  else
  {
    v4[12] = a1;
    v6 = v4[5];
    v7 = v4[6];
    v8 = sub_10097C658;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_10097C658()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 32);
  sub_1004BBBC8(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  swift_release(v2);

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 96));
}

uint64_t sub_10097C6A4()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 72);
  swift_release(*(_QWORD *)(v0 + 32));

  sub_1004BBBC8(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_10097C6E8(double a1)
{
  void *v1;
  id v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  NSString *v8;
  NSString *v9;
  unint64_t v10;
  unint64_t v11;
  Class isa;
  id v13;
  double v14;
  id v15;
  _BYTE v17[48];
  _BYTE v18[72];

  v3 = objc_msgSend(v1, "fontDescriptor");
  v4 = sub_1004B804C(&qword_1013FE500);
  inited = swift_initStackObject(v4, v18);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_QWORD *)(inited + 32) = UIFontDescriptorTraitsAttribute;
  v6 = sub_1004B804C(&qword_1013FE508);
  v7 = swift_initStackObject(v6, v17);
  *(_OWORD *)(v7 + 16) = xmmword_100EF5E40;
  *(_QWORD *)(v7 + 32) = UIFontWeightTrait;
  *(double *)(v7 + 40) = a1;
  v8 = UIFontDescriptorTraitsAttribute;
  v9 = UIFontWeightTrait;
  v10 = sub_1008D4EBC(v7);
  *(_QWORD *)(inited + 64) = sub_1004B804C(&qword_1013FE510);
  *(_QWORD *)(inited + 40) = v10;
  v11 = sub_1008D4FC4(inited);
  type metadata accessor for AttributeName(0);
  sub_10097C888();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v11);
  v13 = objc_msgSend(v3, "fontDescriptorByAddingAttributes:", isa);

  objc_msgSend(v1, "pointSize");
  v15 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v13, v14);

  return v15;
}

unint64_t sub_10097C888()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013DEDB0;
  if (!qword_1013DEDB0)
  {
    type metadata accessor for AttributeName(255);
    result = swift_getWitnessTable(&unk_100EF44A4, v1);
    atomic_store(result, (unint64_t *)&qword_1013DEDB0);
  }
  return result;
}

id sub_10097C8D0(void *a1)
{
  void *v1;
  double v4;
  double v5;
  double v6;
  double v7;
  uint64_t v8;
  double v9;
  double v10;
  double v11;

  v10 = 0.0;
  v11 = 0.0;
  v8 = 0;
  v9 = 0.0;
  v6 = 0.0;
  v7 = 0.0;
  v4 = 0.0;
  v5 = 0.0;
  objc_msgSend(v1, "getRed:green:blue:alpha:", &v11, &v10, &v9, &v8);
  objc_msgSend(a1, "getRed:green:blue:alpha:", &v7, &v6, &v5, &v4);
  return objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", v4 * v7 + (1.0 - v4) * v11, v4 * v6 + (1.0 - v4) * v10, v4 * v5 + (1.0 - v4) * v9, 1.0);
}

BOOL sub_10097C9F4()
{
  void *v0;
  id v1;
  id v2;
  CGColor *v3;
  double v4;
  CGColor *v5;
  BOOL v6;
  CGColor *v8;
  double Alpha;

  v1 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  v2 = objc_msgSend(v1, "traitCollection");

  LODWORD(v1) = objc_msgSend(v2, "crl_isUserInterfaceStyleDark");
  v3 = (CGColor *)objc_msgSend(v0, "CGColor");
  v4 = sub_1000122A8(v3);

  if (!(_DWORD)v1)
  {
    if (v4 <= 0.8)
      goto LABEL_5;
    return 1;
  }
  if (v4 < 0.4)
    return 1;
LABEL_5:
  v5 = (CGColor *)objc_msgSend(v0, "CGColor");
  v6 = sub_10001228C(v5);

  if (v6)
    return 1;
  v8 = (CGColor *)objc_msgSend(v0, "CGColor");
  Alpha = CGColorGetAlpha(v8);

  return Alpha < 0.1;
}

uint64_t sub_10097CB38(char a1, uint64_t a2, uint64_t a3)
{
  if (a3)
    __asm { BR              X10 }
  return 0;
}

uint64_t sub_10097D0A8()
{
  uint64_t v0;

  sub_10097D208(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32));
  return swift_deallocClassInstance(v0, 40, 7);
}

uint64_t type metadata accessor for CRLiOSPencilHoverPreviewImageProvider()
{
  return objc_opt_self(_TtC8Freeform37CRLiOSPencilHoverPreviewImageProvider);
}

void destroy for CRLiOSPencilHoverPreviewImageProvider.CachedImage(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));

}

_QWORD *_s8Freeform37CRLiOSPencilHoverPreviewImageProviderC11CachedImageVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = (void *)a2[2];
  a1[2] = v4;
  swift_bridgeObjectRetain(v3);
  v5 = v4;
  return a1;
}

_QWORD *assignWithCopy for CRLiOSPencilHoverPreviewImageProvider.CachedImage(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = (void *)a2[2];
  v7 = (void *)a1[2];
  a1[2] = v6;
  v8 = v6;

  return a1;
}

_QWORD *assignWithTake for CRLiOSPencilHoverPreviewImageProvider.CachedImage(_QWORD *a1, uint64_t a2)
{
  void *v4;

  *a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease(a1[1]);
  v4 = (void *)a1[2];
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);

  return a1;
}

ValueMetadata *type metadata accessor for CRLiOSPencilHoverPreviewImageProvider.CachedImage()
{
  return &type metadata for CRLiOSPencilHoverPreviewImageProvider.CachedImage;
}

void sub_10097D208(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    swift_bridgeObjectRelease(a2);

  }
}

uint64_t sub_10097D238()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _OWORD v7[2];
  uint64_t v8;
  _BYTE __dst[872];
  _BYTE __src[872];

  sub_10097F8C4(v0, (uint64_t)__src);
  memcpy(__dst, __src, sizeof(__dst));
  type metadata accessor for CRContext(0);
  v8 = 0;
  memset(v7, 0, sizeof(v7));
  v1 = (void *)static CRContext.newTransientContext(uniqueAssetManager:encryptionDelegate:)(0, v7);
  sub_100984544((uint64_t)v7);
  if (qword_1013DCB10 != -1)
    swift_once(&qword_1013DCB10, sub_1005DE88C);
  v2 = type metadata accessor for CRCodableVersion(0);
  v3 = sub_1004F2A1C(v2, (uint64_t)qword_10147EB08);
  v4 = sub_10097E53C();
  v5 = CRValue.serializedData(_:version:)(v1, v3, &type metadata for CRLFreehandDrawingToolkitUIStateData, v4);

  sub_1009841A0((uint64_t)__src);
  return v5;
}

uint64_t sub_10097D3E0(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_10097D41C + 4 * byte_100F1DBD0[a1]))(0xD00000000000001CLL, 0x8000000100FE4FD0);
}

unint64_t sub_10097D41C()
{
  return 0xD000000000000011;
}

uint64_t sub_10097D5EC()
{
  uint64_t v0;

  return v0 + 6;
}

uint64_t sub_10097D5FC()
{
  uint64_t v0;

  return v0 + 2;
}

void sub_10097D60C()
{
  JUMPOUT(0x10097D618);
}

BOOL sub_10097D624(char *a1, char *a2)
{
  return qword_100F1DFF0[*a1] == qword_100F1DFF0[*a2];
}

Swift::Int sub_10097D648()
{
  char *v0;
  uint64_t v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(qword_100F1DFF0[v1]);
  return Hasher._finalize()();
}

void sub_10097D694()
{
  char *v0;

  Hasher._combine(_:)(qword_100F1DFF0[*v0]);
}

Swift::Int sub_10097D6C8(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(qword_100F1DFF0[v2]);
  return Hasher._finalize()();
}

uint64_t sub_10097D710@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_100980208(*a1);
  *a2 = result;
  return result;
}

void sub_10097D738(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_100F1DFF0[*v1];
}

uint64_t sub_10097D750()
{
  unsigned __int8 *v0;

  return sub_10097D3E0(*v0);
}

uint64_t sub_10097D758@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_10098022C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10097D77C()
{
  char *v0;

  return qword_100F1DFF0[*v0];
}

uint64_t sub_10097D794@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_100980208(a1);
  *a2 = result;
  return result;
}

void sub_10097D7B8(_QWORD *a1@<X8>)
{
  *a1 = &off_1012644C0;
}

uint64_t sub_10097D7C8(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = sub_100986850();
  v5 = sub_100986898();
  return static CodingKey<>.intCases.getter(a1, a2, v4, v5);
}

uint64_t sub_10097D80C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100986898();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10097D834(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100986898();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10097D85C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  unsigned __int8 v18;
  uint64_t v19;
  unsigned __int8 v20;
  uint64_t v21;
  unsigned __int8 v22;
  uint64_t v23;
  unsigned __int8 v24;
  uint64_t v25;
  unsigned __int8 v26;
  uint64_t v27;
  unsigned __int8 v28;
  uint64_t v29;
  unsigned __int8 v30;
  uint64_t v31;
  uint64_t v32;
  unsigned __int8 v33;
  uint64_t v34;
  unsigned __int8 v35;
  uint64_t v36;
  unsigned __int8 v37;
  uint64_t v38;
  unsigned __int8 v39;
  uint64_t v40;
  unsigned __int8 v41;
  uint64_t v42;
  unsigned __int8 v43;
  uint64_t v44;
  unsigned __int8 v45;
  uint64_t v46;
  unsigned __int8 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  _QWORD v53[11];
  _BYTE v54[16];
  _BYTE v55[88];
  _BYTE v56[88];
  _BYTE v57[88];
  _BYTE v58[88];
  _BYTE v59[88];
  _BYTE v60[88];
  _BYTE v61[88];
  _BYTE v62[88];
  _BYTE v63[24];
  _BYTE v64[4];

  v3 = v1;
  v5 = sub_1004B804C(&qword_1013FE688);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_100986898();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLFreehandDrawingToolkitUIStateData.CodingKeys, &type metadata for CRLFreehandDrawingToolkitUIStateData.CodingKeys, v11, v9, v10);
  sub_1004C4938(v3, (uint64_t)v63, &qword_1013FE5E8);
  sub_1004C4938((uint64_t)v63, (uint64_t)v53, &qword_1013FE5E8);
  v64[0] = 0;
  v12 = sub_1004B804C(&qword_1013FE600);
  v13 = sub_1008C2438(&qword_1013FE690, &qword_1013FE600, (uint64_t)&protocol conformance descriptor for <> CRExtensible<A>);
  KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v53, v64, v5, v12, v13);
  if (!v2)
  {
    sub_1004C4938(v3 + 16, (uint64_t)v62, &qword_1013FE698);
    sub_1004C4938((uint64_t)v62, (uint64_t)v53, &qword_1013FE698);
    v64[0] = 1;
    v14 = sub_1006C6680();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v53, v64, v5, &type metadata for CRLColorData, v14);
    v15 = *(unsigned int *)(v3 + 104);
    v16 = *(_BYTE *)(v3 + 108);
    LOBYTE(v53[0]) = 2;
    v64[0] = v16;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v15 | ((unint64_t)v16 << 32), v53, v5);
    v17 = *(unsigned int *)(v3 + 112);
    v18 = *(_BYTE *)(v3 + 116);
    LOBYTE(v53[0]) = 3;
    v64[0] = v18;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v17 | ((unint64_t)v18 << 32), v53, v5);
    sub_1004C4938(v3 + 224, (uint64_t)v61, &qword_1013FE698);
    sub_1004C4938((uint64_t)v61, (uint64_t)v53, &qword_1013FE698);
    v64[0] = 4;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v53, v64, v5, &type metadata for CRLColorData, v14);
    v19 = *(unsigned int *)(v3 + 312);
    v20 = *(_BYTE *)(v3 + 316);
    LOBYTE(v53[0]) = 5;
    v64[0] = v20;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v19 | ((unint64_t)v20 << 32), v53, v5);
    v21 = *(unsigned int *)(v3 + 320);
    v22 = *(_BYTE *)(v3 + 324);
    LOBYTE(v53[0]) = 6;
    v64[0] = v22;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v21 | ((unint64_t)v22 << 32), v53, v5);
    sub_1004C4938(v3 + 328, (uint64_t)v60, &qword_1013FE698);
    sub_1004C4938((uint64_t)v60, (uint64_t)v53, &qword_1013FE698);
    v64[0] = 7;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v53, v64, v5, &type metadata for CRLColorData, v14);
    v23 = *(unsigned int *)(v3 + 416);
    v24 = *(_BYTE *)(v3 + 420);
    LOBYTE(v53[0]) = 8;
    v64[0] = v24;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v23 | ((unint64_t)v24 << 32), v53, v5);
    v25 = *(unsigned int *)(v3 + 424);
    v26 = *(_BYTE *)(v3 + 428);
    LOBYTE(v53[0]) = 9;
    v64[0] = v26;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v25 | ((unint64_t)v26 << 32), v53, v5);
    sub_1004C4938(v3 + 744, (uint64_t)v59, &qword_1013FE698);
    sub_1004C4938((uint64_t)v59, (uint64_t)v53, &qword_1013FE698);
    v64[0] = 10;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v53, v64, v5, &type metadata for CRLColorData, v14);
    v27 = *(unsigned int *)(v3 + 832);
    v28 = *(_BYTE *)(v3 + 836);
    LOBYTE(v53[0]) = 11;
    v64[0] = v28;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v27 | ((unint64_t)v28 << 32), v53, v5);
    v29 = *(unsigned int *)(v3 + 840);
    v30 = *(_BYTE *)(v3 + 844);
    LOBYTE(v53[0]) = 12;
    v64[0] = v30;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v29 | ((unint64_t)v30 << 32), v53, v5);
    v31 = *(unsigned __int8 *)(v3 + 845);
    LOBYTE(v53[0]) = 13;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v31, v53, v5);
    sub_1004C4938(v3 + 120, (uint64_t)v58, &qword_1013FE698);
    sub_1004C4938((uint64_t)v58, (uint64_t)v53, &qword_1013FE698);
    v64[0] = 14;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v53, v64, v5, &type metadata for CRLColorData, v14);
    v32 = *(unsigned int *)(v3 + 208);
    v33 = *(_BYTE *)(v3 + 212);
    LOBYTE(v53[0]) = 15;
    v64[0] = v33;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v32 | ((unint64_t)v33 << 32), v53, v5);
    v34 = *(unsigned int *)(v3 + 216);
    v35 = *(_BYTE *)(v3 + 220);
    LOBYTE(v53[0]) = 16;
    v64[0] = v35;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v34 | ((unint64_t)v35 << 32), v53, v5);
    sub_1004C4938(v3 + 432, (uint64_t)v57, &qword_1013FE698);
    sub_1004C4938((uint64_t)v57, (uint64_t)v53, &qword_1013FE698);
    v64[0] = 17;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v53, v64, v5, &type metadata for CRLColorData, v14);
    v36 = *(unsigned int *)(v3 + 520);
    v37 = *(_BYTE *)(v3 + 524);
    LOBYTE(v53[0]) = 18;
    v64[0] = v37;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v36 | ((unint64_t)v37 << 32), v53, v5);
    v38 = *(unsigned int *)(v3 + 528);
    v39 = *(_BYTE *)(v3 + 532);
    LOBYTE(v53[0]) = 19;
    v64[0] = v39;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v38 | ((unint64_t)v39 << 32), v53, v5);
    sub_1004C4938(v3 + 536, (uint64_t)v56, &qword_1013FE698);
    sub_1004C4938((uint64_t)v56, (uint64_t)v53, &qword_1013FE698);
    v64[0] = 20;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v53, v64, v5, &type metadata for CRLColorData, v14);
    v40 = *(unsigned int *)(v3 + 624);
    v41 = *(_BYTE *)(v3 + 628);
    LOBYTE(v53[0]) = 21;
    v64[0] = v41;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v40 | ((unint64_t)v41 << 32), v53, v5);
    v42 = *(unsigned int *)(v3 + 632);
    v43 = *(_BYTE *)(v3 + 636);
    LOBYTE(v53[0]) = 22;
    v64[0] = v43;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v42 | ((unint64_t)v43 << 32), v53, v5);
    sub_1004C4938(v3 + 640, (uint64_t)v55, &qword_1013FE698);
    sub_1004C4938((uint64_t)v55, (uint64_t)v53, &qword_1013FE698);
    v64[0] = 23;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v53, v64, v5, &type metadata for CRLColorData, v14);
    v44 = *(unsigned int *)(v3 + 728);
    v45 = *(_BYTE *)(v3 + 732);
    LOBYTE(v53[0]) = 24;
    v64[0] = v45;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v44 | ((unint64_t)v45 << 32), v53, v5);
    v46 = *(unsigned int *)(v3 + 736);
    v47 = *(_BYTE *)(v3 + 740);
    LOBYTE(v53[0]) = 25;
    v64[0] = v47;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v46 | ((unint64_t)v47 << 32), v53, v5);
    sub_1004C4938(v3 + 848, (uint64_t)v54, &qword_1013FE5F0);
    sub_1004C4938((uint64_t)v54, (uint64_t)v53, &qword_1013FE5F0);
    v64[0] = 26;
    v48 = sub_1004B804C(&qword_1013FE5F8);
    v49 = sub_1008C2438(&qword_1013FE6A0, &qword_1013FE5F8, (uint64_t)&protocol conformance descriptor for <> CRExtensible<A>);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v53, v64, v5, v48, v49);
    v53[0] = *(_QWORD *)(v3 + 864);
    v64[0] = 27;
    v50 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    v51 = sub_1004F31B4();
    KeyedEncodingContainer.encode<A>(_:forKey:)(v53, v64, v5, v50, v51);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10097E114()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + 864));
}

uint64_t sub_10097E11C(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease(*(_QWORD *)(v1 + 864));
  *(_QWORD *)(v1 + 864) = a1;
  return result;
}

Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *sub_10097E144())(CKRecordID recordID, Swift::String recordType)
{
  return SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
}

uint64_t sub_10097E154(void *__src, const void *a2)
{
  float v4[218];
  uint64_t __dst[109];

  memcpy(v4, __src, sizeof(v4));
  memcpy(__dst, a2, sizeof(__dst));
  return sub_10097E580(v4, __dst) & 1;
}

void sub_10097E1A8(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  _BYTE __src[872];

  sub_100980CDC(a1, __src);
  if (!v2)
    memcpy(a2, __src, 0x368uLL);
}

uint64_t sub_10097E1F8(_QWORD *a1)
{
  const void *v1;
  _BYTE __dst[872];

  memcpy(__dst, v1, sizeof(__dst));
  return sub_10097D85C(a1);
}

uint64_t sub_10097E248(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_100986EAC();
  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_10097E288(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t v7;

  v6 = sub_10097E53C();
  v7 = sub_100986EF0();
  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_10097E2E4(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_100986EAC();
  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_10097E31C(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_1009869C0();
  return CRValueStruct.init(from:)(a1, a2, v4);
}

uint64_t sub_10097E368(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_1009869C0();
  return CRValueStruct.encode(to:)(a1, a2, v4);
}

uint64_t sub_10097E3AC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1009869C0();
  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

id sub_10097E3E4(uint64_t a1, unint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  id v6;
  _BYTE __src[872];
  _BYTE __dst[872];

  sub_1004BE310(a1, a2);
  v4 = sub_10097E53C();
  CRValue.init(serializedData:)(a1, a2, &type metadata for CRLFreehandDrawingToolkitUIStateData, v4);
  memcpy(__dst, __src, sizeof(__dst));
  v6 = sub_100983598((uint64_t)__dst, v5);
  sub_1009841A0((uint64_t)__dst);
  sub_1004BBBC8(a1, a2);
  return v6;
}

unint64_t sub_10097E53C()
{
  unint64_t result;

  result = qword_1013FE5E0;
  if (!qword_1013FE5E0)
  {
    result = swift_getWitnessTable(&unk_100F1DF08, &type metadata for CRLFreehandDrawingToolkitUIStateData);
    atomic_store(result, (unint64_t *)&qword_1013FE5E0);
  }
  return result;
}

uint64_t sub_10097E580(float *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char v117;
  char v118;
  uint64_t v119;
  uint64_t v120;
  char v121;
  char v122;
  uint64_t v123;
  uint64_t v124;
  char v125;
  char v126;
  uint64_t v127;
  uint64_t v128;
  char v129;
  char v130;
  int v131;
  int v132;
  _BOOL4 v133;
  uint64_t v134;
  int v135;
  unint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char v148;
  char v149;
  char v150;
  char v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char v173;
  char v174;
  char v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  float *v245;
  uint64_t *v246;
  uint64_t v247;
  uint64_t v248;
  char v249;
  _BYTE v250[16];
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  _BYTE v273[16];
  _BYTE v274[16];
  int v275;
  char v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  int v287;
  char v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  int v299;
  char v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  int v311;
  char v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  int v323;
  char v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  int v335;
  char v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  int v347;
  char v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  int v359;
  char v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  int v371;
  char v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  int v383;
  char v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  int v395;
  char v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  int v407;
  char v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  int v419;
  char v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  int v431;
  char v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  uint64_t v453;
  _BYTE v454[16];
  char v455[16];
  _BYTE v456[16];
  char v457[24];

  sub_1004C4938((uint64_t)a1, (uint64_t)v274, &qword_1013FE5E8);
  v4 = *a2;
  v5 = *((unsigned __int8 *)a2 + 8);
  sub_1004C4938((uint64_t)v274, (uint64_t)v454, &qword_1013FE5E8);
  if (v454[8] == 255)
  {
    if (v5 != 255)
      goto LABEL_14;
  }
  else
  {
    sub_1004C4938((uint64_t)v454, (uint64_t)v455, &qword_1013FE600);
    sub_1004C4938((uint64_t)v274, (uint64_t)&v251, &qword_1013FE5E8);
    if (v5 == 255)
      goto LABEL_14;
    v443 = v4;
    LOBYTE(v444) = v5 & 1;
    v6 = sub_10060C858();
    if ((static CRExtensible.== infix(_:_:)(&v251, &v443, &type metadata for CRLFreehandDrawingToolTypeData, v6, &protocol witness table for Int, &protocol witness table for Int) & 1) == 0)goto LABEL_14;
  }
  v7 = *((_QWORD *)a1 + 2);
  v8 = *((_QWORD *)a1 + 3);
  v9 = *((_QWORD *)a1 + 4);
  v10 = *((_QWORD *)a1 + 5);
  v11 = *((_QWORD *)a1 + 6);
  v12 = *((_QWORD *)a1 + 7);
  v13 = *((_QWORD *)a1 + 8);
  v14 = *((_QWORD *)a1 + 9);
  v15 = *((_QWORD *)a1 + 10);
  v16 = *((_QWORD *)a1 + 11);
  v245 = a1;
  v246 = a2;
  v17 = *((_QWORD *)a1 + 12);
  v18 = a2[2];
  v19 = a2[3];
  v21 = a2[4];
  v20 = a2[5];
  v23 = a2[6];
  v22 = a2[7];
  v24 = a2[8];
  v25 = a2[9];
  v26 = a2[10];
  v27 = a2[11];
  v28 = a2[12];
  if (!v17)
  {
    if (!v28)
      goto LABEL_16;
LABEL_11:
    v251 = v7;
    v252 = v8;
    v253 = v9;
    v254 = v10;
    v255 = v11;
    v256 = v12;
    v257 = v13;
    v258 = v14;
    v259 = v15;
    v260 = v16;
    v261 = v17;
    v262 = v18;
    v263 = v19;
    v264 = v21;
    v265 = v20;
    v266 = v23;
    v267 = v22;
    v268 = v24;
    v269 = v25;
    v270 = v26;
    v271 = v27;
    v272 = v28;
    v247 = v25;
    v32 = v22;
    v33 = v23;
    v34 = v20;
    v35 = v26;
    sub_100986A4C(v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17);
LABEL_12:
    sub_100986A4C(v18, v19, v21, v34, v33, v32, v24, v247, v35, v27, v28);
LABEL_13:
    sub_100986AA8((uint64_t)&v251);
    goto LABEL_14;
  }
  if (!v28)
    goto LABEL_11;
  v431 = v7;
  v432 = BYTE4(v7) & 1;
  v433 = v8;
  v434 = v9;
  v435 = v10;
  v436 = v11;
  v437 = v12;
  v438 = v13;
  v439 = v14;
  v440 = v15;
  v441 = v16;
  v442 = v17;
  v165 = v18;
  LODWORD(v443) = v18;
  BYTE4(v443) = BYTE4(v18) & 1;
  v444 = v19;
  v445 = v21;
  v446 = v20;
  v447 = v23;
  v448 = v22;
  v449 = v24;
  v450 = v25;
  v451 = v26;
  v452 = v27;
  v453 = v28;
  v157 = v17;
  v197 = v7;
  v205 = v8;
  v213 = v9;
  v221 = v10;
  v229 = v11;
  v234 = v12;
  v239 = v13;
  v242 = v14;
  v29 = v24;
  v30 = v22;
  v181 = v16;
  v189 = v15;
  v31 = v26;
  sub_100986A4C(v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17);
  sub_100986A4C(v165, v19, v21, v20, v23, v30, v29, v25, v31, v27, v28);
  v173 = sub_1006C4CF8(&v431, &v443);
  sub_1009844E8(v165, v19, v21, v20, v23, v30, v29, v25, v31, v27, v28);
  sub_1009844E8(v197, v205, v213, v221, v229, v234, v239, v242, v189, v181, v157);
  if ((v173 & 1) == 0)
    goto LABEL_14;
LABEL_16:
  v38 = *((_BYTE *)v246 + 108);
  if (((_BYTE)v245[27] & 1) != 0)
  {
    if (!*((_BYTE *)v246 + 108))
      goto LABEL_14;
  }
  else
  {
    if (v245[26] != *((float *)v246 + 26))
      v38 = 1;
    if ((v38 & 1) != 0)
      goto LABEL_14;
  }
  v39 = *((_BYTE *)v246 + 116);
  if (((_BYTE)v245[29] & 1) != 0)
  {
    if (!*((_BYTE *)v246 + 116))
      goto LABEL_14;
  }
  else
  {
    if (v245[28] != *((float *)v246 + 28))
      v39 = 1;
    if ((v39 & 1) != 0)
      goto LABEL_14;
  }
  v40 = *((_QWORD *)v245 + 15);
  v41 = *((_QWORD *)v245 + 16);
  v42 = *((_QWORD *)v245 + 17);
  v43 = *((_QWORD *)v245 + 18);
  v44 = *((_QWORD *)v245 + 19);
  v45 = *((_QWORD *)v245 + 20);
  v46 = *((_QWORD *)v245 + 21);
  v47 = *((_QWORD *)v245 + 22);
  v48 = *((_QWORD *)v245 + 23);
  v49 = *((_QWORD *)v245 + 24);
  v50 = *((_QWORD *)v245 + 25);
  v18 = v246[15];
  v19 = v246[16];
  v21 = v246[17];
  v51 = v246[18];
  v53 = v246[19];
  v52 = v246[20];
  v24 = v246[21];
  v54 = v246[22];
  v55 = v246[23];
  v27 = v246[24];
  v28 = v246[25];
  if (v50)
  {
    if (!v28)
      goto LABEL_33;
    v407 = *((_QWORD *)v245 + 15);
    v408 = BYTE4(v40) & 1;
    v409 = v41;
    v410 = v42;
    v411 = v43;
    v412 = v44;
    v413 = v45;
    v414 = v46;
    v415 = v47;
    v416 = v48;
    v417 = v49;
    v418 = v50;
    v166 = v18;
    v419 = v18;
    v420 = BYTE4(v18) & 1;
    v421 = v19;
    v422 = v21;
    v423 = v51;
    v424 = v53;
    v425 = v52;
    v426 = v24;
    v427 = v54;
    v428 = v55;
    v429 = v27;
    v158 = v50;
    v430 = v28;
    v198 = v40;
    v206 = v41;
    v214 = v42;
    v222 = v43;
    v230 = v44;
    v235 = v45;
    v240 = v46;
    v243 = v47;
    v56 = v24;
    v57 = v52;
    v182 = v49;
    v190 = v48;
    v58 = v55;
    sub_100986A4C(v40, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50);
    sub_100986A4C(v166, v19, v21, v51, v53, v57, v56, v54, v58, v27, v28);
    v174 = sub_1006C4CF8(&v407, &v419);
    sub_1009844E8(v166, v19, v21, v51, v53, v57, v56, v54, v58, v27, v28);
    sub_1009844E8(v198, v206, v214, v222, v230, v235, v240, v243, v190, v182, v158);
    if ((v174 & 1) == 0)
      goto LABEL_14;
  }
  else if (v28)
  {
    goto LABEL_33;
  }
  v59 = *((_BYTE *)v246 + 212);
  if (((_BYTE)v245[53] & 1) != 0)
  {
    if (!*((_BYTE *)v246 + 212))
      goto LABEL_14;
  }
  else
  {
    if (v245[52] != *((float *)v246 + 52))
      v59 = 1;
    if ((v59 & 1) != 0)
      goto LABEL_14;
  }
  v60 = *((_BYTE *)v246 + 220);
  if (((_BYTE)v245[55] & 1) != 0)
  {
    if (!*((_BYTE *)v246 + 220))
      goto LABEL_14;
  }
  else
  {
    if (v245[54] != *((float *)v246 + 54))
      v60 = 1;
    if ((v60 & 1) != 0)
      goto LABEL_14;
  }
  v40 = *((_QWORD *)v245 + 28);
  v41 = *((_QWORD *)v245 + 29);
  v42 = *((_QWORD *)v245 + 30);
  v43 = *((_QWORD *)v245 + 31);
  v44 = *((_QWORD *)v245 + 32);
  v45 = *((_QWORD *)v245 + 33);
  v46 = *((_QWORD *)v245 + 34);
  v47 = *((_QWORD *)v245 + 35);
  v48 = *((_QWORD *)v245 + 36);
  v49 = *((_QWORD *)v245 + 37);
  v50 = *((_QWORD *)v245 + 38);
  v18 = v246[28];
  v19 = v246[29];
  v21 = v246[30];
  v51 = v246[31];
  v53 = v246[32];
  v52 = v246[33];
  v24 = v246[34];
  v54 = v246[35];
  v55 = v246[36];
  v27 = v246[37];
  v28 = v246[38];
  if (!v50)
  {
    if (!v28)
      goto LABEL_51;
    goto LABEL_33;
  }
  if (!v28)
  {
LABEL_33:
    v251 = v40;
    v252 = v41;
    v253 = v42;
    v254 = v43;
    v255 = v44;
    v256 = v45;
    v257 = v46;
    v258 = v47;
    v259 = v48;
    v260 = v49;
    v261 = v50;
    v262 = v18;
    v263 = v19;
    v264 = v21;
    v265 = v51;
    v266 = v53;
    v267 = v52;
    v268 = v24;
    v269 = v54;
    v270 = v55;
    v271 = v27;
    v272 = v28;
    v247 = v54;
    v32 = v52;
    v33 = v53;
    v34 = v51;
    v35 = v55;
    sub_100986A4C(v40, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50);
    goto LABEL_12;
  }
  v383 = *((_QWORD *)v245 + 28);
  v384 = BYTE4(v40) & 1;
  v385 = v41;
  v386 = v42;
  v387 = v43;
  v388 = v44;
  v389 = v45;
  v390 = v46;
  v391 = v47;
  v392 = v48;
  v393 = v49;
  v394 = v50;
  v167 = v18;
  v395 = v18;
  v396 = BYTE4(v18) & 1;
  v397 = v19;
  v398 = v21;
  v399 = v51;
  v400 = v53;
  v401 = v52;
  v402 = v24;
  v403 = v54;
  v404 = v55;
  v405 = v27;
  v159 = v50;
  v406 = v28;
  v199 = v40;
  v207 = v41;
  v215 = v42;
  v223 = v43;
  v231 = v44;
  v236 = v45;
  v241 = v46;
  v244 = v47;
  v61 = v24;
  v62 = v52;
  v183 = v49;
  v191 = v48;
  v63 = v55;
  sub_100986A4C(v40, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50);
  sub_100986A4C(v167, v19, v21, v51, v53, v62, v61, v54, v63, v27, v28);
  v175 = sub_1006C4CF8(&v383, &v395);
  sub_1009844E8(v167, v19, v21, v51, v53, v62, v61, v54, v63, v27, v28);
  sub_1009844E8(v199, v207, v215, v223, v231, v236, v241, v244, v191, v183, v159);
  if ((v175 & 1) == 0)
    goto LABEL_14;
LABEL_51:
  v64 = *((_BYTE *)v246 + 316);
  if (((_BYTE)v245[79] & 1) != 0)
  {
    if (!*((_BYTE *)v246 + 316))
      goto LABEL_14;
  }
  else
  {
    if (v245[78] != *((float *)v246 + 78))
      v64 = 1;
    if ((v64 & 1) != 0)
      goto LABEL_14;
  }
  v65 = *((_BYTE *)v246 + 324);
  if (((_BYTE)v245[81] & 1) != 0)
  {
    if (!*((_BYTE *)v246 + 324))
      goto LABEL_14;
  }
  else
  {
    if (v245[80] != *((float *)v246 + 80))
      v65 = 1;
    if ((v65 & 1) != 0)
      goto LABEL_14;
  }
  v66 = *((_QWORD *)v245 + 41);
  v67 = *((_QWORD *)v245 + 42);
  v68 = *((_QWORD *)v245 + 43);
  v69 = *((_QWORD *)v245 + 44);
  v70 = *((_QWORD *)v245 + 45);
  v71 = *((_QWORD *)v245 + 46);
  v72 = *((_QWORD *)v245 + 47);
  v73 = *((_QWORD *)v245 + 48);
  v74 = *((_QWORD *)v245 + 49);
  v75 = *((_QWORD *)v245 + 50);
  v76 = *((_QWORD *)v245 + 51);
  v77 = v246[41];
  v19 = v246[42];
  v78 = v246[43];
  v79 = v246[44];
  v81 = v246[45];
  v80 = v246[46];
  v24 = v246[47];
  v82 = v246[48];
  v83 = v246[49];
  v27 = v246[50];
  v28 = v246[51];
  if (!v76)
  {
    if (!v28)
      goto LABEL_69;
    goto LABEL_68;
  }
  if (!v28)
  {
LABEL_68:
    v251 = *((_QWORD *)v245 + 41);
    v252 = v67;
    v253 = v68;
    v254 = v69;
    v255 = v70;
    v256 = v71;
    v257 = v72;
    v258 = v73;
    v259 = v74;
    v260 = v75;
    v261 = v76;
    v262 = v77;
    v88 = v77;
    v263 = v19;
    v264 = v78;
    v265 = v79;
    v266 = v81;
    v267 = v80;
    v268 = v24;
    v269 = v82;
    v270 = v83;
    v271 = v27;
    v272 = v28;
    v138 = v76;
    v247 = v82;
    v32 = v80;
    v33 = v81;
    v34 = v79;
    v21 = v78;
    v18 = v88;
    v35 = v83;
    sub_100986A4C(v66, v67, v68, v69, v70, v71, v72, v73, v74, v75, v138);
    goto LABEL_12;
  }
  v359 = *((_QWORD *)v245 + 41);
  v360 = BYTE4(v66) & 1;
  v361 = v67;
  v362 = v68;
  v363 = v69;
  v364 = v70;
  v365 = v71;
  v366 = v72;
  v367 = v73;
  v368 = v74;
  v369 = v75;
  v370 = v76;
  v152 = v77;
  v371 = v77;
  v372 = BYTE4(v77) & 1;
  v373 = v19;
  v374 = v78;
  v375 = v79;
  v376 = v81;
  v377 = v80;
  v378 = v24;
  v379 = v82;
  v380 = v83;
  v381 = v27;
  v147 = v76;
  v382 = v28;
  v137 = v76;
  v184 = v66;
  v192 = v67;
  v200 = v68;
  v208 = v69;
  v216 = v70;
  v224 = v71;
  v232 = v72;
  v237 = v73;
  v84 = v24;
  v85 = v80;
  v168 = v75;
  v176 = v74;
  v86 = v78;
  v87 = v83;
  sub_100986A4C(v66, v67, v68, v69, v70, v71, v72, v73, v74, v75, v137);
  sub_100986A4C(v152, v19, v86, v79, v81, v85, v84, v82, v87, v27, v28);
  v160 = sub_1006C4CF8(&v359, &v371);
  sub_1009844E8(v152, v19, v86, v79, v81, v85, v84, v82, v87, v27, v28);
  sub_1009844E8(v184, v192, v200, v208, v216, v224, v232, v237, v176, v168, v147);
  if ((v160 & 1) == 0)
    goto LABEL_14;
LABEL_69:
  v89 = *((_BYTE *)v246 + 420);
  if (((_BYTE)v245[105] & 1) != 0)
  {
    if (!*((_BYTE *)v246 + 420))
      goto LABEL_14;
  }
  else
  {
    if (v245[104] != *((float *)v246 + 104))
      v89 = 1;
    if ((v89 & 1) != 0)
      goto LABEL_14;
  }
  v90 = *((_BYTE *)v246 + 428);
  if (((_BYTE)v245[107] & 1) != 0)
  {
    if (!*((_BYTE *)v246 + 428))
      goto LABEL_14;
  }
  else
  {
    if (v245[106] != *((float *)v246 + 106))
      v90 = 1;
    if ((v90 & 1) != 0)
      goto LABEL_14;
  }
  v91 = *((_QWORD *)v245 + 54);
  v92 = *((_QWORD *)v245 + 55);
  v93 = *((_QWORD *)v245 + 56);
  v94 = *((_QWORD *)v245 + 57);
  v95 = *((_QWORD *)v245 + 58);
  v96 = *((_QWORD *)v245 + 59);
  v97 = *((_QWORD *)v245 + 60);
  v98 = *((_QWORD *)v245 + 61);
  v99 = *((_QWORD *)v245 + 62);
  v100 = *((_QWORD *)v245 + 63);
  v101 = *((_QWORD *)v245 + 64);
  v102 = v246[54];
  v103 = v246[55];
  v104 = v246[56];
  v105 = v246[57];
  v107 = v246[58];
  v106 = v246[59];
  v109 = v246[60];
  v108 = v246[61];
  v110 = v246[62];
  v111 = v246[63];
  v112 = v246[64];
  if (v101)
  {
    if (!v112)
      goto LABEL_86;
    v335 = *((_QWORD *)v245 + 54);
    v217 = v98;
    v225 = v91;
    v336 = BYTE4(v91) & 1;
    v337 = v92;
    v169 = v92;
    v177 = v93;
    v338 = v93;
    v339 = v94;
    v185 = v94;
    v193 = v95;
    v340 = v95;
    v341 = v96;
    v201 = v96;
    v209 = v97;
    v342 = v97;
    v343 = v98;
    v344 = v99;
    v153 = v100;
    v161 = v99;
    v345 = v100;
    v346 = v101;
    v347 = v102;
    v348 = BYTE4(v102) & 1;
    v139 = v103;
    v143 = v104;
    v349 = v103;
    v350 = v104;
    v351 = v105;
    v352 = v107;
    v353 = v106;
    v354 = v109;
    v355 = v108;
    v113 = v110;
    v356 = v110;
    v114 = v111;
    v357 = v111;
    v358 = v112;
    sub_100986A4C(v91, v92, v93, v94, v95, v96, v97, v98, v99, v100, v101);
    sub_100986A4C(v102, v139, v143, v105, v107, v106, v109, v108, v113, v114, v112);
    v148 = sub_1006C4CF8(&v335, &v347);
    sub_1009844E8(v102, v139, v143, v105, v107, v106, v109, v108, v113, v114, v112);
    sub_1009844E8(v225, v169, v177, v185, v193, v201, v209, v217, v161, v153, v101);
    if ((v148 & 1) == 0)
      goto LABEL_14;
  }
  else if (v112)
  {
    goto LABEL_86;
  }
  v117 = *((_BYTE *)v246 + 524);
  if (((_BYTE)v245[131] & 1) != 0)
  {
    if (!*((_BYTE *)v246 + 524))
      goto LABEL_14;
  }
  else
  {
    if (v245[130] != *((float *)v246 + 130))
      v117 = 1;
    if ((v117 & 1) != 0)
      goto LABEL_14;
  }
  v118 = *((_BYTE *)v246 + 532);
  if (((_BYTE)v245[133] & 1) != 0)
  {
    if (!*((_BYTE *)v246 + 532))
      goto LABEL_14;
  }
  else
  {
    if (v245[132] != *((float *)v246 + 132))
      v118 = 1;
    if ((v118 & 1) != 0)
      goto LABEL_14;
  }
  v91 = *((_QWORD *)v245 + 67);
  v92 = *((_QWORD *)v245 + 68);
  v93 = *((_QWORD *)v245 + 69);
  v94 = *((_QWORD *)v245 + 70);
  v95 = *((_QWORD *)v245 + 71);
  v96 = *((_QWORD *)v245 + 72);
  v97 = *((_QWORD *)v245 + 73);
  v98 = *((_QWORD *)v245 + 74);
  v99 = *((_QWORD *)v245 + 75);
  v100 = *((_QWORD *)v245 + 76);
  v101 = *((_QWORD *)v245 + 77);
  v102 = v246[67];
  v103 = v246[68];
  v104 = v246[69];
  v105 = v246[70];
  v107 = v246[71];
  v106 = v246[72];
  v109 = v246[73];
  v108 = v246[74];
  v110 = v246[75];
  v111 = v246[76];
  v112 = v246[77];
  if (v101)
  {
    if (!v112)
      goto LABEL_86;
    v311 = *((_QWORD *)v245 + 67);
    v218 = v98;
    v226 = v91;
    v312 = BYTE4(v91) & 1;
    v313 = v92;
    v170 = v92;
    v178 = v93;
    v314 = v93;
    v315 = v94;
    v186 = v94;
    v194 = v95;
    v316 = v95;
    v317 = v96;
    v202 = v96;
    v210 = v97;
    v318 = v97;
    v319 = v98;
    v320 = v99;
    v154 = v100;
    v162 = v99;
    v321 = v100;
    v322 = v101;
    v323 = v102;
    v324 = BYTE4(v102) & 1;
    v140 = v103;
    v144 = v104;
    v325 = v103;
    v326 = v104;
    v327 = v105;
    v328 = v107;
    v329 = v106;
    v330 = v109;
    v331 = v108;
    v119 = v110;
    v332 = v110;
    v120 = v111;
    v333 = v111;
    v334 = v112;
    sub_100986A4C(v91, v92, v93, v94, v95, v96, v97, v98, v99, v100, v101);
    sub_100986A4C(v102, v140, v144, v105, v107, v106, v109, v108, v119, v120, v112);
    v149 = sub_1006C4CF8(&v311, &v323);
    sub_1009844E8(v102, v140, v144, v105, v107, v106, v109, v108, v119, v120, v112);
    sub_1009844E8(v226, v170, v178, v186, v194, v202, v210, v218, v162, v154, v101);
    if ((v149 & 1) == 0)
      goto LABEL_14;
  }
  else if (v112)
  {
    goto LABEL_86;
  }
  v121 = *((_BYTE *)v246 + 628);
  if (((_BYTE)v245[157] & 1) != 0)
  {
    if (!*((_BYTE *)v246 + 628))
      goto LABEL_14;
  }
  else
  {
    if (v245[156] != *((float *)v246 + 156))
      v121 = 1;
    if ((v121 & 1) != 0)
      goto LABEL_14;
  }
  v122 = *((_BYTE *)v246 + 636);
  if (((_BYTE)v245[159] & 1) != 0)
  {
    if (!*((_BYTE *)v246 + 636))
      goto LABEL_14;
  }
  else
  {
    if (v245[158] != *((float *)v246 + 158))
      v122 = 1;
    if ((v122 & 1) != 0)
      goto LABEL_14;
  }
  v91 = *((_QWORD *)v245 + 80);
  v92 = *((_QWORD *)v245 + 81);
  v93 = *((_QWORD *)v245 + 82);
  v94 = *((_QWORD *)v245 + 83);
  v95 = *((_QWORD *)v245 + 84);
  v96 = *((_QWORD *)v245 + 85);
  v97 = *((_QWORD *)v245 + 86);
  v98 = *((_QWORD *)v245 + 87);
  v99 = *((_QWORD *)v245 + 88);
  v100 = *((_QWORD *)v245 + 89);
  v101 = *((_QWORD *)v245 + 90);
  v102 = v246[80];
  v103 = v246[81];
  v104 = v246[82];
  v105 = v246[83];
  v107 = v246[84];
  v106 = v246[85];
  v109 = v246[86];
  v108 = v246[87];
  v110 = v246[88];
  v111 = v246[89];
  v112 = v246[90];
  if (v101)
  {
    if (!v112)
      goto LABEL_86;
    v287 = *((_QWORD *)v245 + 80);
    v219 = v98;
    v227 = v91;
    v288 = BYTE4(v91) & 1;
    v289 = v92;
    v171 = v92;
    v179 = v93;
    v290 = v93;
    v291 = v94;
    v187 = v94;
    v195 = v95;
    v292 = v95;
    v293 = v96;
    v203 = v96;
    v211 = v97;
    v294 = v97;
    v295 = v98;
    v296 = v99;
    v155 = v100;
    v163 = v99;
    v297 = v100;
    v298 = v101;
    v299 = v102;
    v300 = BYTE4(v102) & 1;
    v141 = v103;
    v145 = v104;
    v301 = v103;
    v302 = v104;
    v303 = v105;
    v304 = v107;
    v305 = v106;
    v306 = v109;
    v307 = v108;
    v123 = v110;
    v308 = v110;
    v124 = v111;
    v309 = v111;
    v310 = v112;
    sub_100986A4C(v91, v92, v93, v94, v95, v96, v97, v98, v99, v100, v101);
    sub_100986A4C(v102, v141, v145, v105, v107, v106, v109, v108, v123, v124, v112);
    v150 = sub_1006C4CF8(&v287, &v299);
    sub_1009844E8(v102, v141, v145, v105, v107, v106, v109, v108, v123, v124, v112);
    sub_1009844E8(v227, v171, v179, v187, v195, v203, v211, v219, v163, v155, v101);
    if ((v150 & 1) == 0)
      goto LABEL_14;
  }
  else if (v112)
  {
    goto LABEL_86;
  }
  v125 = *((_BYTE *)v246 + 732);
  if (((_BYTE)v245[183] & 1) != 0)
  {
    if (!*((_BYTE *)v246 + 732))
      goto LABEL_14;
  }
  else
  {
    if (v245[182] != *((float *)v246 + 182))
      v125 = 1;
    if ((v125 & 1) != 0)
      goto LABEL_14;
  }
  v126 = *((_BYTE *)v246 + 740);
  if (((_BYTE)v245[185] & 1) != 0)
  {
    if (!*((_BYTE *)v246 + 740))
      goto LABEL_14;
  }
  else
  {
    if (v245[184] != *((float *)v246 + 184))
      v126 = 1;
    if ((v126 & 1) != 0)
      goto LABEL_14;
  }
  v91 = *((_QWORD *)v245 + 93);
  v92 = *((_QWORD *)v245 + 94);
  v93 = *((_QWORD *)v245 + 95);
  v94 = *((_QWORD *)v245 + 96);
  v95 = *((_QWORD *)v245 + 97);
  v96 = *((_QWORD *)v245 + 98);
  v97 = *((_QWORD *)v245 + 99);
  v98 = *((_QWORD *)v245 + 100);
  v99 = *((_QWORD *)v245 + 101);
  v100 = *((_QWORD *)v245 + 102);
  v101 = *((_QWORD *)v245 + 103);
  v102 = v246[93];
  v103 = v246[94];
  v104 = v246[95];
  v105 = v246[96];
  v107 = v246[97];
  v106 = v246[98];
  v109 = v246[99];
  v108 = v246[100];
  v110 = v246[101];
  v111 = v246[102];
  v112 = v246[103];
  if (!v101)
  {
    if (!v112)
      goto LABEL_138;
    goto LABEL_86;
  }
  if (!v112)
  {
LABEL_86:
    v251 = v91;
    v252 = v92;
    v253 = v93;
    v254 = v94;
    v255 = v95;
    v256 = v96;
    v257 = v97;
    v258 = v98;
    v259 = v99;
    v260 = v100;
    v261 = v101;
    v262 = v102;
    v233 = v102;
    v238 = v106;
    v263 = v103;
    v264 = v104;
    v265 = v105;
    v266 = v107;
    v267 = v106;
    v268 = v109;
    v269 = v108;
    v270 = v110;
    v115 = v110;
    v116 = v111;
    v271 = v111;
    v272 = v112;
    sub_100986A4C(v91, v92, v93, v94, v95, v96, v97, v98, v99, v100, v101);
    sub_100986A4C(v233, v103, v104, v105, v107, v238, v109, v108, v115, v116, v112);
    goto LABEL_13;
  }
  v275 = *((_QWORD *)v245 + 93);
  v220 = v98;
  v228 = v91;
  v276 = BYTE4(v91) & 1;
  v277 = v92;
  v278 = v93;
  v172 = v92;
  v180 = v93;
  v279 = v94;
  v280 = v95;
  v188 = v94;
  v196 = v95;
  v281 = v96;
  v282 = v97;
  v204 = v96;
  v212 = v97;
  v283 = v98;
  v284 = v99;
  v156 = v100;
  v164 = v99;
  v285 = v100;
  v286 = v101;
  LODWORD(v251) = v102;
  BYTE4(v251) = BYTE4(v102) & 1;
  v142 = v103;
  v146 = v104;
  v252 = v103;
  v253 = v104;
  v254 = v105;
  v255 = v107;
  v256 = v106;
  v257 = v109;
  v258 = v108;
  v259 = v110;
  v127 = v110;
  v128 = v111;
  v260 = v111;
  v261 = v112;
  sub_100986A4C(v91, v92, v93, v94, v95, v96, v97, v98, v99, v100, v101);
  sub_100986A4C(v102, v142, v146, v105, v107, v106, v109, v108, v127, v128, v112);
  v151 = sub_1006C4CF8(&v275, &v251);
  sub_1009844E8(v102, v142, v146, v105, v107, v106, v109, v108, v127, v128, v112);
  sub_1009844E8(v228, v172, v180, v188, v196, v204, v212, v220, v164, v156, v101);
  if ((v151 & 1) == 0)
    goto LABEL_14;
LABEL_138:
  v129 = *((_BYTE *)v246 + 836);
  if (((_BYTE)v245[209] & 1) != 0)
  {
    if (!*((_BYTE *)v246 + 836))
      goto LABEL_14;
  }
  else
  {
    if (v245[208] != *((float *)v246 + 208))
      v129 = 1;
    if ((v129 & 1) != 0)
      goto LABEL_14;
  }
  v130 = *((_BYTE *)v246 + 844);
  if (((_BYTE)v245[211] & 1) != 0)
  {
    if (!*((_BYTE *)v246 + 844))
      goto LABEL_14;
  }
  else
  {
    if (v245[210] != *((float *)v246 + 210))
      v130 = 1;
    if ((v130 & 1) != 0)
      goto LABEL_14;
  }
  v131 = *((unsigned __int8 *)v245 + 845);
  v132 = *((unsigned __int8 *)v246 + 845);
  if (v131 == 2)
  {
    if (v132 != 2)
      goto LABEL_14;
    goto LABEL_155;
  }
  v36 = 0;
  v133 = (v131 & 1) == 0;
  if (v132 != 2 && ((v133 ^ v132) & 1) != 0)
  {
LABEL_155:
    sub_1004C4938((uint64_t)(v245 + 212), (uint64_t)v273, &qword_1013FE5F0);
    v134 = v246[106];
    v135 = *((unsigned __int8 *)v246 + 856);
    sub_1004C4938((uint64_t)v273, (uint64_t)v456, &qword_1013FE5F0);
    if (v456[8] == 255)
    {
      if (v135 == 255)
      {
LABEL_160:
        v36 = sub_100C9E04C(*((_QWORD *)v245 + 108), v246[108]);
        return v36 & 1;
      }
    }
    else
    {
      sub_1004C4938((uint64_t)v456, (uint64_t)v457, &qword_1013FE5F8);
      sub_1004C4938((uint64_t)v273, (uint64_t)v250, &qword_1013FE5F0);
      if (v135 != 255)
      {
        v248 = v134;
        v249 = v135 & 1;
        v136 = sub_1004D2DF8();
        if ((static CRExtensible.== infix(_:_:)(v250, &v248, &type metadata for CRLFreehandDrawingLassoTypeData, v136, &protocol witness table for Int, &protocol witness table for Int) & 1) != 0)goto LABEL_160;
      }
    }
LABEL_14:
    v36 = 0;
  }
  return v36 & 1;
}

float sub_10097F8C4@<S0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  uint64_t v20;
  int v21;
  double v22;
  double v23;
  double v24;
  double v25;
  uint64_t v26;
  int v27;
  double v28;
  double v29;
  double v30;
  double v31;
  unsigned __int8 v32;
  id v33;
  const mach_header_64 *v34;
  const mach_header_64 *v35;
  unint64_t v36;
  const mach_header_64 *v37;
  unint64_t v38;
  float v39;
  float v40;
  float v41;
  float v42;
  const mach_header_64 *v43;
  unint64_t v44;
  float v45;
  float v46;
  const mach_header_64 *v47;
  unint64_t v48;
  float v49;
  float v50;
  const mach_header_64 *v51;
  unint64_t v52;
  float v53;
  float v54;
  const mach_header_64 *v55;
  unint64_t v56;
  float v57;
  float v58;
  const mach_header_64 *v59;
  unint64_t v60;
  float v61;
  float v62;
  float v63;
  float result;
  __int128 v65;
  __int128 v66;
  int v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  double v74;
  __int128 v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  double v82;
  int v83;
  uint64_t v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  uint64_t v88;
  uint64_t v89;
  __int128 v90;
  double v91;
  __int128 v92;
  __int128 v93;
  double v94;
  uint64_t v95;
  uint64_t v96;
  __int128 v97;
  __int128 v98;
  int v99;
  uint64_t v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  uint64_t v104;
  uint64_t v105;
  __int128 v106;
  double v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  double v112;
  uint64_t v113;
  uint64_t v114;
  int v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  double v119;
  __int128 v120;
  __int128 v121;
  uint64_t v122;
  uint64_t v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  double v128;
  uint64_t v129;
  uint64_t v130;
  int v131;
  uint64_t v132;
  unsigned __int8 v133;
  _BYTE v134[7];
  __int16 v135;
  char v136;
  __int16 v137;
  char v138;
  __int16 v139;
  char v140;
  __int16 v141;
  char v142;
  __int16 v143;
  char v144;
  __int16 v145;
  char v146;
  __int16 v147;
  char v148;
  unsigned int v149;
  unsigned __int8 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  uint64_t v155;
  uint64_t v156;
  unsigned int v157;
  unsigned __int8 v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  uint64_t v163;
  uint64_t v164;
  unsigned int v165;
  unsigned __int8 v166;
  __int128 v167;
  __int128 v168;
  __int128 v169;
  __int128 v170;
  uint64_t v171;
  uint64_t v172;
  unsigned int v173;
  unsigned __int8 v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  uint64_t v179;
  uint64_t v180;
  unsigned int v181;
  unsigned __int8 v182;
  __int128 v183;
  __int128 v184;
  __int128 v185;
  __int128 v186;
  uint64_t v187;
  uint64_t v188;
  unsigned int v189;
  unsigned __int8 v190;
  __int128 v191;
  __int128 v192;
  __int128 v193;
  __int128 v194;
  uint64_t v195;
  uint64_t v196;
  unsigned int v197;
  unsigned __int8 v198;
  __int128 v199;
  __int128 v200;
  __int128 v201;
  __int128 v202;
  uint64_t v203;
  uint64_t v204;
  unsigned int v205;
  unsigned __int8 v206;
  __int128 v207;
  __int128 v208;
  __int128 v209;
  __int128 v210;
  uint64_t v211;
  uint64_t v212;

  v133 = sub_10060C634((unint64_t)objc_msgSend(a1, "mostRecentRestorableToolType"));
  sub_1006C5DE8(objc_msgSend(a1, "colorForToolType:", 0), (uint64_t)&v149);
  v132 = v149;
  v131 = v150;
  v126 = v152;
  v127 = v151;
  v125 = v153;
  v121 = v154;
  v130 = v155;
  v129 = v156;
  objc_msgSend(a1, "opacityForToolType:", 0);
  v128 = v4;
  objc_msgSend(a1, "strokeWidthForToolType:", 0);
  v119 = v5;
  sub_1006C5DE8(objc_msgSend(a1, "colorForToolType:", 1), (uint64_t)&v157);
  v118 = v157;
  v115 = v158;
  v110 = v160;
  v111 = v159;
  v108 = v162;
  v109 = v161;
  v114 = v163;
  v113 = v164;
  objc_msgSend(a1, "opacityForToolType:", 1);
  v112 = v6;
  objc_msgSend(a1, "strokeWidthForToolType:", 1);
  v107 = v7;
  sub_1006C5DE8(objc_msgSend(a1, "colorForToolType:", 2), (uint64_t)&v165);
  v100 = v165;
  v99 = v166;
  v92 = v168;
  v93 = v167;
  v120 = v169;
  v124 = v170;
  v123 = v171;
  v122 = v172;
  objc_msgSend(a1, "opacityForToolType:", 2);
  v94 = v8;
  objc_msgSend(a1, "strokeWidthForToolType:", 2);
  v91 = v9;
  sub_1006C5DE8(objc_msgSend(a1, "colorForToolType:", 3), (uint64_t)&v173);
  v84 = v173;
  v83 = v174;
  v75 = v175;
  v72 = v177;
  v73 = v176;
  v71 = v178;
  v117 = v179;
  v116 = v180;
  objc_msgSend(a1, "opacityForToolType:", 3);
  v82 = v10;
  objc_msgSend(a1, "strokeWidthForToolType:", 3);
  v74 = v11;
  sub_1006C5DE8(objc_msgSend(a1, "colorForToolType:", 4), (uint64_t)&v181);
  v70 = v181;
  v69 = v182;
  v101 = v183;
  v102 = v184;
  v103 = v185;
  v106 = v186;
  v105 = v187;
  v104 = v188;
  objc_msgSend(a1, "opacityForToolType:", 4);
  v13 = v12;
  objc_msgSend(a1, "strokeWidthForToolType:", 4);
  v15 = v14;
  sub_1006C5DE8(objc_msgSend(a1, "colorForToolType:", 5), (uint64_t)&v189);
  v68 = v189;
  v67 = v190;
  v65 = v192;
  v66 = v191;
  v97 = v194;
  v98 = v193;
  v95 = v196;
  v96 = v195;
  objc_msgSend(a1, "opacityForToolType:", 5);
  v17 = v16;
  objc_msgSend(a1, "strokeWidthForToolType:", 5);
  v19 = v18;
  sub_1006C5DE8(objc_msgSend(a1, "colorForToolType:", 6), (uint64_t)&v197);
  v20 = v197;
  v21 = v198;
  v85 = v199;
  v86 = v200;
  v87 = v201;
  v90 = v202;
  v88 = v204;
  v89 = v203;
  objc_msgSend(a1, "opacityForToolType:", 6);
  v23 = v22;
  objc_msgSend(a1, "strokeWidthForToolType:", 6);
  v25 = v24;
  sub_1006C5DE8(objc_msgSend(a1, "colorForToolType:", 7), (uint64_t)&v205);
  v26 = v205;
  v27 = v206;
  v80 = v208;
  v81 = v207;
  v78 = v210;
  v79 = v209;
  v76 = v212;
  v77 = v211;
  objc_msgSend(a1, "opacityForToolType:", 7);
  v29 = v28;
  objc_msgSend(a1, "strokeWidthForToolType:", 8);
  v31 = v30;
  v32 = objc_msgSend(a1, "eraserToolErasesWholeObjects");
  v33 = objc_msgSend(a1, "currentLassoType");

  *(_OWORD *)(a2 + 24) = v127;
  *(_OWORD *)(a2 + 40) = v126;
  *(_OWORD *)(a2 + 56) = v125;
  *(_OWORD *)(a2 + 72) = v121;
  *(_OWORD *)(a2 + 128) = v111;
  *(_OWORD *)(a2 + 144) = v110;
  *(_OWORD *)(a2 + 160) = v109;
  *(_OWORD *)(a2 + 176) = v108;
  *(_OWORD *)(a2 + 232) = v93;
  *(_OWORD *)(a2 + 248) = v92;
  *(_OWORD *)(a2 + 336) = v75;
  *(_OWORD *)(a2 + 352) = v73;
  *(_OWORD *)(a2 + 368) = v72;
  *(_OWORD *)(a2 + 384) = v71;
  *(_OWORD *)(a2 + 544) = v66;
  *(_OWORD *)(a2 + 560) = v65;
  *(_QWORD *)(a2 + 88) = v130;
  *(_QWORD *)(a2 + 96) = v129;
  *(_QWORD *)(a2 + 192) = v114;
  *(_QWORD *)(a2 + 200) = v113;
  v34 = &_mh_execute_header;
  if (v131)
    v35 = &_mh_execute_header;
  else
    v35 = 0;
  v36 = (unint64_t)v35 | v132;
  if (v115)
    v37 = &_mh_execute_header;
  else
    v37 = 0;
  v38 = (unint64_t)v37 | v118;
  if (v99)
    v43 = &_mh_execute_header;
  else
    v43 = 0;
  v44 = (unint64_t)v43 | v100;
  if (v83)
    v47 = &_mh_execute_header;
  else
    v47 = 0;
  v48 = (unint64_t)v47 | v84;
  if (v69)
    v51 = &_mh_execute_header;
  else
    v51 = 0;
  v52 = (unint64_t)v51 | v70;
  if (v67)
    v55 = &_mh_execute_header;
  else
    v55 = 0;
  v56 = (unint64_t)v55 | v68;
  if (v21)
    v59 = &_mh_execute_header;
  else
    v59 = 0;
  v60 = (unint64_t)v59 | v20;
  if (!v27)
    v34 = 0;
  v63 = v29;
  result = v31;
  *(_QWORD *)a2 = v133;
  *(_BYTE *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = v36;
  v39 = v128;
  *(float *)(a2 + 104) = v39;
  *(_BYTE *)(a2 + 108) = 0;
  v40 = v119;
  *(float *)(a2 + 112) = v40;
  *(_BYTE *)(a2 + 116) = 0;
  *(_QWORD *)(a2 + 120) = v38;
  v41 = v112;
  *(float *)(a2 + 208) = v41;
  *(_BYTE *)(a2 + 212) = 0;
  v42 = v107;
  *(float *)(a2 + 216) = v42;
  *(_BYTE *)(a2 + 220) = 0;
  *(_QWORD *)(a2 + 224) = v44;
  *(_OWORD *)(a2 + 264) = v120;
  *(_OWORD *)(a2 + 280) = v124;
  *(_QWORD *)(a2 + 296) = v123;
  *(_QWORD *)(a2 + 304) = v122;
  v45 = v94;
  *(float *)(a2 + 312) = v45;
  *(_BYTE *)(a2 + 316) = 0;
  v46 = v91;
  *(float *)(a2 + 320) = v46;
  *(_BYTE *)(a2 + 324) = 0;
  *(_QWORD *)(a2 + 328) = v48;
  *(_QWORD *)(a2 + 400) = v117;
  *(_QWORD *)(a2 + 408) = v116;
  v49 = v82;
  *(float *)(a2 + 416) = v49;
  *(_BYTE *)(a2 + 420) = 0;
  v50 = v74;
  *(float *)(a2 + 424) = v50;
  *(_BYTE *)(a2 + 428) = 0;
  *(_QWORD *)(a2 + 432) = v52;
  *(_OWORD *)(a2 + 440) = v101;
  *(_OWORD *)(a2 + 456) = v102;
  *(_OWORD *)(a2 + 472) = v103;
  *(_OWORD *)(a2 + 488) = v106;
  *(_QWORD *)(a2 + 504) = v105;
  *(_QWORD *)(a2 + 512) = v104;
  v53 = v13;
  *(float *)(a2 + 520) = v53;
  *(_BYTE *)(a2 + 524) = 0;
  *(_BYTE *)(a2 + 527) = v148;
  *(_WORD *)(a2 + 525) = v147;
  v54 = v15;
  *(float *)(a2 + 528) = v54;
  *(_BYTE *)(a2 + 532) = 0;
  *(_BYTE *)(a2 + 535) = v146;
  *(_WORD *)(a2 + 533) = v145;
  *(_QWORD *)(a2 + 536) = v56;
  *(_OWORD *)(a2 + 576) = v98;
  *(_OWORD *)(a2 + 592) = v97;
  *(_QWORD *)(a2 + 608) = v96;
  *(_QWORD *)(a2 + 616) = v95;
  v57 = v17;
  *(float *)(a2 + 624) = v57;
  *(_BYTE *)(a2 + 628) = 0;
  *(_BYTE *)(a2 + 631) = v144;
  *(_WORD *)(a2 + 629) = v143;
  v58 = v19;
  *(float *)(a2 + 632) = v58;
  *(_BYTE *)(a2 + 636) = 0;
  *(_BYTE *)(a2 + 639) = v142;
  *(_WORD *)(a2 + 637) = v141;
  *(_QWORD *)(a2 + 640) = v60;
  *(_OWORD *)(a2 + 648) = v85;
  *(_OWORD *)(a2 + 664) = v86;
  *(_OWORD *)(a2 + 680) = v87;
  *(_OWORD *)(a2 + 696) = v90;
  *(_QWORD *)(a2 + 712) = v89;
  *(_QWORD *)(a2 + 720) = v88;
  v61 = v23;
  *(float *)(a2 + 728) = v61;
  *(_BYTE *)(a2 + 732) = 0;
  *(_BYTE *)(a2 + 735) = v140;
  *(_WORD *)(a2 + 733) = v139;
  v62 = v25;
  *(float *)(a2 + 736) = v62;
  *(_BYTE *)(a2 + 740) = 0;
  *(_BYTE *)(a2 + 743) = v138;
  *(_WORD *)(a2 + 741) = v137;
  *(_QWORD *)(a2 + 744) = (unint64_t)v34 | v26;
  *(_OWORD *)(a2 + 752) = v81;
  *(_OWORD *)(a2 + 768) = v80;
  *(_OWORD *)(a2 + 784) = v79;
  *(_OWORD *)(a2 + 800) = v78;
  *(_QWORD *)(a2 + 816) = v77;
  *(_QWORD *)(a2 + 824) = v76;
  *(float *)(a2 + 832) = v63;
  *(_BYTE *)(a2 + 836) = 0;
  *(_BYTE *)(a2 + 839) = v136;
  *(_WORD *)(a2 + 837) = v135;
  *(float *)(a2 + 840) = result;
  *(_BYTE *)(a2 + 844) = 0;
  *(_BYTE *)(a2 + 845) = v32;
  *(_QWORD *)(a2 + 848) = v33 == (id)1;
  *(_BYTE *)(a2 + 856) = 0;
  *(_DWORD *)(a2 + 860) = *(_DWORD *)&v134[3];
  *(_DWORD *)(a2 + 857) = *(_DWORD *)v134;
  *(_QWORD *)(a2 + 864) = &_swiftEmptyDictionarySingleton;
  return result;
}

uint64_t sub_100980208(uint64_t a1)
{
  if ((unint64_t)(a1 + 1) > 0x1B)
    return 28;
  else
    return byte_100F1E0D0[a1 + 1];
}

uint64_t sub_10098022C(uint64_t a1, unint64_t a2)
{
  unint64_t v4;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;

  if (a1 == 0xD00000000000001CLL)
  {
    v4 = 0x8000000100FE4FD0;
    if (a2 == 0x8000000100FE4FD0)
      goto LABEL_5;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000001CLL, 0x8000000100FE4FD0, a1, a2, 0) & 1) != 0)
  {
    v4 = a2;
LABEL_5:
    swift_bridgeObjectRelease(v4);
    return 0;
  }
  if (a1 == 0xD000000000000011)
  {
    v6 = 0x8000000100FE4FF0;
    if (a2 == 0x8000000100FE4FF0)
      goto LABEL_10;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000011, 0x8000000100FE4FF0, a1, a2, 0) & 1) != 0)
  {
    v6 = a2;
LABEL_10:
    swift_bridgeObjectRelease(v6);
    return 1;
  }
  if (a1 == 0xD000000000000013)
  {
    v7 = 0x8000000100FE5010;
    if (a2 == 0x8000000100FE5010)
      goto LABEL_15;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000013, 0x8000000100FE5010, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
LABEL_15:
    swift_bridgeObjectRelease(v7);
    return 2;
  }
  if (a1 == 0xD000000000000019 && a2 == 0x8000000100FE5030)
  {
    v8 = 0x8000000100FE5030;
LABEL_21:
    swift_bridgeObjectRelease(v8);
    return 3;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000019, 0x8000000100FE5030, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_21;
  }
  if (a1 == 0x6F546C69636E6570 && a2 == 0xEF726F6C6F436C6FLL)
  {
    v9 = 0xEF726F6C6F436C6FLL;
LABEL_27:
    swift_bridgeObjectRelease(v9);
    return 4;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6F546C69636E6570, 0xEF726F6C6F436C6FLL, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
    goto LABEL_27;
  }
  if (a1 == 0xD000000000000011)
  {
    v10 = 0x8000000100FE5050;
    if (a2 == 0x8000000100FE5050)
      goto LABEL_32;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000011, 0x8000000100FE5050, a1, a2, 0) & 1) != 0)
  {
    v10 = a2;
LABEL_32:
    swift_bridgeObjectRelease(v10);
    return 5;
  }
  if (a1 == 0xD000000000000017)
  {
    v11 = 0x8000000100FE5070;
    if (a2 == 0x8000000100FE5070)
      goto LABEL_37;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000017, 0x8000000100FE5070, a1, a2, 0) & 1) != 0)
  {
    v11 = a2;
LABEL_37:
    swift_bridgeObjectRelease(v11);
    return 6;
  }
  if (a1 == 0x6F546E6F79617263 && a2 == 0xEF726F6C6F436C6FLL)
  {
    v12 = 0xEF726F6C6F436C6FLL;
LABEL_43:
    swift_bridgeObjectRelease(v12);
    return 7;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6F546E6F79617263, 0xEF726F6C6F436C6FLL, a1, a2, 0) & 1) != 0)
  {
    v12 = a2;
    goto LABEL_43;
  }
  if (a1 == 0xD000000000000011)
  {
    v13 = 0x8000000100FE5090;
    if (a2 == 0x8000000100FE5090)
      goto LABEL_48;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000011, 0x8000000100FE5090, a1, a2, 0) & 1) != 0)
  {
    v13 = a2;
LABEL_48:
    swift_bridgeObjectRelease(v13);
    return 8;
  }
  if (a1 == 0xD000000000000017)
  {
    v14 = 0x8000000100FE50B0;
    if (a2 == 0x8000000100FE50B0)
      goto LABEL_53;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000017, 0x8000000100FE50B0, a1, a2, 0) & 1) != 0)
  {
    v14 = a2;
LABEL_53:
    swift_bridgeObjectRelease(v14);
    return 9;
  }
  if (a1 == 0x6C6F6F546C6C6966 && a2 == 0xED0000726F6C6F43)
  {
    v15 = 0xED0000726F6C6F43;
LABEL_59:
    swift_bridgeObjectRelease(v15);
    return 10;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6C6F6F546C6C6966, 0xED0000726F6C6F43, a1, a2, 0) & 1) != 0)
  {
    v15 = a2;
    goto LABEL_59;
  }
  if (a1 == 0x6C6F6F546C6C6966 && a2 == 0xEF7974696361704FLL)
  {
    v16 = 0xEF7974696361704FLL;
LABEL_65:
    swift_bridgeObjectRelease(v16);
    return 11;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6C6F6F546C6C6966, 0xEF7974696361704FLL, a1, a2, 0) & 1) != 0)
  {
    v16 = a2;
    goto LABEL_65;
  }
  if (a1 == 0xD000000000000015)
  {
    v17 = 0x8000000100FE50D0;
    if (a2 == 0x8000000100FE50D0)
      goto LABEL_70;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000015, 0x8000000100FE50D0, a1, a2, 0) & 1) != 0)
  {
    v17 = a2;
LABEL_70:
    swift_bridgeObjectRelease(v17);
    return 12;
  }
  if (a1 == 0xD00000000000001CLL)
  {
    v18 = 0x8000000100FE50F0;
    if (a2 == 0x8000000100FE50F0)
      goto LABEL_75;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000001CLL, 0x8000000100FE50F0, a1, a2, 0) & 1) != 0)
  {
    v18 = a2;
LABEL_75:
    swift_bridgeObjectRelease(v18);
    return 13;
  }
  if (a1 == 0x436C6F6F546E6570 && a2 == 0xEC000000726F6C6FLL)
  {
    v19 = 0xEC000000726F6C6FLL;
LABEL_81:
    swift_bridgeObjectRelease(v19);
    return 14;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x436C6F6F546E6570, 0xEC000000726F6C6FLL, a1, a2, 0) & 1) != 0)
  {
    v19 = a2;
    goto LABEL_81;
  }
  if (a1 == 0x4F6C6F6F546E6570 && a2 == 0xEE00797469636170)
  {
    v20 = 0xEE00797469636170;
LABEL_87:
    swift_bridgeObjectRelease(v20);
    return 15;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x4F6C6F6F546E6570, 0xEE00797469636170, a1, a2, 0) & 1) != 0)
  {
    v20 = a2;
    goto LABEL_87;
  }
  if (a1 == 0xD000000000000014)
  {
    v21 = 0x8000000100FE5110;
    if (a2 == 0x8000000100FE5110)
      goto LABEL_92;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000014, 0x8000000100FE5110, a1, a2, 0) & 1) != 0)
  {
    v21 = a2;
LABEL_92:
    swift_bridgeObjectRelease(v21);
    return 16;
  }
  if (a1 == 0xD000000000000013)
  {
    v22 = 0x8000000100FE5130;
    if (a2 == 0x8000000100FE5130)
      goto LABEL_97;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000013, 0x8000000100FE5130, a1, a2, 0) & 1) != 0)
  {
    v22 = a2;
LABEL_97:
    swift_bridgeObjectRelease(v22);
    return 17;
  }
  if (a1 == 0xD000000000000015)
  {
    v23 = 0x8000000100FE5150;
    if (a2 == 0x8000000100FE5150)
      goto LABEL_102;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000015, 0x8000000100FE5150, a1, a2, 0) & 1) != 0)
  {
    v23 = a2;
LABEL_102:
    swift_bridgeObjectRelease(v23);
    return 18;
  }
  if (a1 == 0xD00000000000001BLL && a2 == 0x8000000100FE5170)
  {
    v24 = 0x8000000100FE5170;
LABEL_108:
    swift_bridgeObjectRelease(v24);
    return 19;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000001BLL, 0x8000000100FE5170, a1, a2, 0) & 1) != 0)
  {
    v24 = a2;
    goto LABEL_108;
  }
  if (a1 == 0xD000000000000014)
  {
    v25 = 0x8000000100FE5190;
    if (a2 == 0x8000000100FE5190)
      goto LABEL_113;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000014, 0x8000000100FE5190, a1, a2, 0) & 1) != 0)
  {
    v25 = a2;
LABEL_113:
    swift_bridgeObjectRelease(v25);
    return 20;
  }
  if (a1 == 0xD000000000000016 && a2 == 0x8000000100FE51B0)
  {
    v26 = 0x8000000100FE51B0;
LABEL_119:
    swift_bridgeObjectRelease(v26);
    return 21;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000016, 0x8000000100FE51B0, a1, a2, 0) & 1) != 0)
  {
    v26 = a2;
    goto LABEL_119;
  }
  if (a1 == 0xD00000000000001CLL)
  {
    v27 = 0x8000000100FE51D0;
    if (a2 == 0x8000000100FE51D0)
      goto LABEL_124;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000001CLL, 0x8000000100FE51D0, a1, a2, 0) & 1) != 0)
  {
    v27 = a2;
LABEL_124:
    swift_bridgeObjectRelease(v27);
    return 22;
  }
  if (a1 == 0x6F5472656B72616DLL && a2 == 0xEF726F6C6F436C6FLL)
  {
    v28 = 0xEF726F6C6F436C6FLL;
LABEL_130:
    swift_bridgeObjectRelease(v28);
    return 23;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6F5472656B72616DLL, 0xEF726F6C6F436C6FLL, a1, a2, 0) & 1) != 0)
  {
    v28 = a2;
    goto LABEL_130;
  }
  if (a1 == 0xD000000000000011)
  {
    v29 = 0x8000000100FE51F0;
    if (a2 == 0x8000000100FE51F0)
      goto LABEL_135;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000011, 0x8000000100FE51F0, a1, a2, 0) & 1) != 0)
  {
    v29 = a2;
LABEL_135:
    swift_bridgeObjectRelease(v29);
    return 24;
  }
  if (a1 == 0xD000000000000017)
  {
    v30 = 0x8000000100FE5210;
    if (a2 == 0x8000000100FE5210)
      goto LABEL_140;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000017, 0x8000000100FE5210, a1, a2, 0) & 1) != 0)
  {
    v30 = a2;
LABEL_140:
    swift_bridgeObjectRelease(v30);
    return 25;
  }
  if (a1 == 0xD000000000000013)
  {
    v31 = 0x8000000100FE5230;
    if (a2 == 0x8000000100FE5230)
      goto LABEL_145;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000013, 0x8000000100FE5230, a1, a2, 0) & 1) != 0)
  {
    v31 = a2;
LABEL_145:
    swift_bridgeObjectRelease(v31);
    return 26;
  }
  if (a1 == 0xD000000000000010 && a2 == 0x8000000100FAF1E0)
  {
    swift_bridgeObjectRelease(0x8000000100FAF1E0);
    return 27;
  }
  else
  {
    v32 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x8000000100FAF1E0, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v32 & 1) != 0)
      return 27;
    else
      return 28;
  }
}

void sub_100980CDC(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  char *v16;
  unint64_t v17;
  unsigned int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  int v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  __n128 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  __int128 v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __int128 v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  __int128 v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  unint64_t v115;
  unint64_t v116;
  int v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  __int128 v134;
  __int128 v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  unint64_t v140;
  uint64_t v141;
  int v142;
  uint64_t v143;
  unint64_t v144;
  uint64_t v145;
  unint64_t v146;
  uint64_t v147;
  unint64_t v148;
  uint64_t v149;
  uint64_t v150;
  unint64_t v151;
  unint64_t v152;
  int v153;
  uint64_t v154;
  void *v155;
  _QWORD *v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  __int128 v168;
  __int128 v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  __int128 v175;
  __int128 v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  __int128 v194;
  unint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  __int128 v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  __int128 v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  __int128 v237;
  _BYTE v238[872];
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  __int128 v242;
  __int128 v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  int v250;
  char v251;
  __int16 v252;
  char v253;
  int v254;
  char v255;
  __int16 v256;
  char v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  __int128 v261;
  __int128 v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  int v267;
  char v268;
  __int16 v269;
  char v270;
  int v271;
  char v272;
  __int16 v273;
  char v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  __int128 v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  int v285;
  char v286;
  __int16 v287;
  char v288;
  int v289;
  char v290;
  __int16 v291;
  char v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  __int128 v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  int v303;
  char v304;
  __int16 v305;
  char v306;
  int v307;
  char v308;
  __int16 v309;
  char v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  __int128 v314;
  __int128 v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  int v320;
  char v321;
  __int16 v322;
  char v323;
  int v324;
  char v325;
  __int16 v326;
  char v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  int v339;
  char v340;
  __int16 v341;
  char v342;
  int v343;
  char v344;
  __int16 v345;
  char v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  int v358;
  char v359;
  __int16 v360;
  char v361;
  int v362;
  char v363;
  __int16 v364;
  char v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  int v377;
  char v378;
  __int16 v379;
  char v380;
  int v381;
  char v382;
  char v383;
  uint64_t v384;
  char v385;
  _BYTE v386[7];
  uint64_t v387;
  char v388;
  uint64_t v389;
  _BYTE v390[7];
  char v391;
  __int16 v392;
  char v393;
  char v394;
  __int16 v395;
  char v396;
  char v397;
  __int16 v398;
  char v399;
  char v400;
  __int16 v401;
  char v402;
  char v403;
  __int16 v404;
  char v405;
  char v406;
  __int16 v407;
  char v408;
  char v409;
  __int16 v410;
  char v411;
  char v412;
  __int16 v413;
  char v414;
  char v415;
  __int16 v416;
  char v417;
  char v418;
  __int16 v419;
  char v420;
  char v421;
  __int16 v422;
  char v423;
  char v424;
  __int16 v425;
  char v426;
  char v427;
  __int16 v428;
  char v429;
  char v430;
  __int16 v431;
  char v432;
  char v433;
  __int16 v434;
  char v435;
  char v436;
  _DWORD v437[3];
  uint64_t v438;

  *(_QWORD *)&v237 = sub_1004B804C(&qword_1013FE670);
  v5 = *(_QWORD *)(v237 - 8);
  __chkstk_darwin(v237);
  v7 = (char *)&v114 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1[3];
  v9 = a1[4];
  sub_1004BB5A4(a1, v8);
  v10 = sub_100986898();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLFreehandDrawingToolkitUIStateData.CodingKeys, &type metadata for CRLFreehandDrawingToolkitUIStateData.CodingKeys, v10, v8, v9);
  if (v2)
  {
    v438 = v2;
    v18 = 0x8000000;
  }
  else
  {
    *(_QWORD *)&v194 = v5;
    v11 = sub_1004B804C(&qword_1013FE600);
    v238[0] = 0;
    v12 = sub_1008C2438(&qword_1013FE678, &qword_1013FE600, (uint64_t)&protocol conformance descriptor for <> CRExtensible<A>);
    v13 = v237;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v11, v238, v237, v11, v12);
    v14 = v239;
    v15 = v240;
    v238[0] = 1;
    v16 = v7;
    v17 = sub_1006C6638();
    v157 = v16;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&type metadata for CRLColorData, v238, v13, &type metadata for CRLColorData, v17);
    v195 = v17;
    v153 = v15;
    v154 = v14;
    v155 = a2;
    v156 = a1;
    v30 = v239;
    v31 = *((_QWORD *)&v243 + 1);
    v32 = v244;
    v33 = v245;
    v34 = v246;
    v35 = v247;
    LOBYTE(v239) = 2;
    v188 = v30;
    v190 = v240;
    v193 = v241;
    v191 = *((_QWORD *)&v242 + 1);
    v189 = v242;
    v192 = v243;
    sub_100986A4C(v30, v240, v241, v242, *((uint64_t *)&v242 + 1), v243, *((uint64_t *)&v243 + 1), v244, v245, v246, v247);
    v36 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v239, v13);
    v183 = v32;
    v187 = v31;
    v186 = v33;
    v185 = v34;
    v184 = v35;
    v37 = v36;
    v38 = HIDWORD(v36) & 1;
    v436 = BYTE4(v36) & 1;
    LOBYTE(v239) = 3;
    v39 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v239, v13);
    v150 = v38;
    v151 = v39;
    v152 = v37;
    v40 = HIDWORD(v39) & 1;
    v433 = BYTE4(v39) & 1;
    v238[0] = 4;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&type metadata for CRLColorData, v238, v13, &type metadata for CRLColorData, v195);
    v149 = v40;
    v41 = v239;
    v42 = v240;
    v43 = v244;
    v44 = v247;
    LOBYTE(v239) = 5;
    v182 = v246;
    v235 = v245;
    v45 = v241;
    v233 = v242;
    v236 = *((_QWORD *)&v243 + 1);
    v234 = v243;
    sub_100986A4C(v41, v240, v241, v242, *((uint64_t *)&v242 + 1), v243, *((uint64_t *)&v243 + 1), v244, v245, v246, v247);
    v46 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v239, v13);
    v181 = v43;
    v232 = v44;
    v231 = v45;
    v230 = v42;
    v229 = v41;
    v47 = HIDWORD(v46) & 1;
    v424 = BYTE4(v46) & 1;
    LOBYTE(v239) = 6;
    v48 = v46;
    v49 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v239, v13);
    v147 = HIDWORD(v49) & 1;
    v148 = v48;
    v421 = BYTE4(v49) & 1;
    v238[0] = 7;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&type metadata for CRLColorData, v238, v13, &type metadata for CRLColorData, v195);
    v145 = v47;
    v146 = v49;
    v50 = v239;
    v51 = v247;
    LOBYTE(v239) = 8;
    v228 = v246;
    v226 = v245;
    v52 = v50;
    v222 = v240;
    v223 = v241;
    v224 = *((_QWORD *)&v242 + 1);
    v53 = v242;
    v225 = v243;
    v227 = v244;
    sub_100986A4C(v50, v240, v241, v242, *((uint64_t *)&v242 + 1), v243, *((uint64_t *)&v243 + 1), v244, v245, v246, v247);
    v54 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v239, v13);
    v221 = v51;
    v220 = v53;
    v219 = v52;
    v55 = v148;
    v56 = v54;
    v57 = HIDWORD(v54) & 1;
    v418 = BYTE4(v54) & 1;
    LOBYTE(v239) = 9;
    v58 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v239, v13);
    v438 = 0;
    v59 = v58;
    v60 = HIDWORD(v58) & 1;
    v415 = BYTE4(v58) & 1;
    v238[0] = 10;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&type metadata for CRLColorData, v238, v237, &type metadata for CRLColorData, v195);
    v438 = 0;
    v61 = v239;
    LOBYTE(v239) = 11;
    v208 = v247;
    v209 = v246;
    v210 = v245;
    v218 = v61;
    v217 = v240;
    v216 = v241;
    v214 = *((_QWORD *)&v242 + 1);
    v215 = v242;
    v212 = *((_QWORD *)&v243 + 1);
    v213 = v243;
    v211 = v244;
    sub_100986A4C(v61, v240, v241, v242, *((uint64_t *)&v242 + 1), v243, *((uint64_t *)&v243 + 1), v244, v245, v246, v247);
    v62 = v438;
    v63 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v239, v237);
    v438 = v62;
    if (v62)
    {
      v18 = 138413186;
      (*(void (**)(char *, _QWORD))(v194 + 8))(v157, v237);
      sub_1009844E8(v218, v217, v216, v215, v214, v213, v212, v211, v210, v209, v208);
      sub_1009844E8(v219, v222, v223, v220, v224, v225, *((uint64_t *)&v225 + 1), v227, v226, v228, v221);
      sub_1009844E8(v229, v230, v231, v233, *((uint64_t *)&v233 + 1), v234, v236, v181, v235, v182, v232);
      sub_1009844E8(v188, v190, v193, v189, v191, v192, v187, v183, v186, v185, v184);
    }
    else
    {
      v64 = v63;
      v143 = HIDWORD(v63) & 1;
      v394 = BYTE4(v63) & 1;
      LOBYTE(v239) = 12;
      v144 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v239, v237);
      v438 = 0;
      v141 = HIDWORD(v144) & 1;
      v391 = BYTE4(v144) & 1;
      LOBYTE(v239) = 13;
      v142 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v239, v237, v65);
      v438 = 0;
      v238[0] = 14;
      KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&type metadata for CRLColorData, v238, v237, &type metadata for CRLColorData, v195);
      v438 = 0;
      v66 = v239;
      LOBYTE(v239) = 15;
      v180 = v247;
      v179 = v246;
      v178 = v245;
      v172 = v66;
      v173 = v240;
      v174 = v241;
      v175 = v242;
      v176 = v243;
      v177 = v244;
      sub_100986A4C(v66, v240, v241, v242, *((uint64_t *)&v242 + 1), v243, *((uint64_t *)&v243 + 1), v244, v245, v246, v247);
      v67 = v438;
      v140 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v239, v237);
      v438 = v67;
      if (v67)
      {
        (*(void (**)(char *, _QWORD))(v194 + 8))(v157, v237);
        sub_1009844E8(v218, v217, v216, v215, v214, v213, v212, v211, v210, v209, v208);
        sub_1009844E8(v219, v222, v223, v220, v224, v225, *((uint64_t *)&v225 + 1), v227, v226, v228, v221);
        sub_1009844E8(v229, v230, v231, v233, *((uint64_t *)&v233 + 1), v234, v236, v181, v235, v182, v232);
        sub_1009844E8(v172, v173, v174, v175, *((uint64_t *)&v175 + 1), v176, *((uint64_t *)&v176 + 1), v177, v178, v179, v180);
        sub_1009844E8(v188, v190, v193, v189, v191, v192, v187, v183, v186, v185, v184);
        v18 = 138413202;
      }
      else
      {
        v138 = HIDWORD(v140) & 1;
        v430 = BYTE4(v140) & 1;
        LOBYTE(v239) = 16;
        v139 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v239, v237);
        v438 = 0;
        v137 = HIDWORD(v139) & 1;
        v427 = BYTE4(v139) & 1;
        v238[0] = 17;
        KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&type metadata for CRLColorData, v238, v237, &type metadata for CRLColorData, v195);
        v438 = 0;
        v68 = v239;
        LOBYTE(v239) = 18;
        v168 = v243;
        v169 = v242;
        v170 = v247;
        v171 = v246;
        v131 = v245;
        v132 = v68;
        v133 = v240;
        v207 = v241;
        v134 = v242;
        v135 = v243;
        v136 = v244;
        sub_100986A4C(v68, v240, v241, v242, *((uint64_t *)&v242 + 1), v243, *((uint64_t *)&v243 + 1), v244, v245, v246, v247);
        v69 = v438;
        v130 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v239, v237);
        v438 = v69;
        if (v69)
        {
          v18 = 138421394;
          (*(void (**)(char *, _QWORD))(v194 + 8))(v157, v237);
          sub_1009844E8(v218, v217, v216, v215, v214, v213, v212, v211, v210, v209, v208);
          v70 = v131;
          v71 = v132;
          v72 = v133;
          v73 = v136;
          sub_1009844E8(v132, v133, v207, v134, *((uint64_t *)&v134 + 1), v135, *((uint64_t *)&v135 + 1), v136, v131, v171, v170);
          sub_1009844E8(v219, v222, v223, v220, v224, v225, *((uint64_t *)&v225 + 1), v227, v226, v228, v221);
          sub_1009844E8(v229, v230, v231, v233, *((uint64_t *)&v233 + 1), v234, v236, v181, v235, v182, v232);
          sub_1009844E8(v172, v173, v174, v175, *((uint64_t *)&v175 + 1), v176, *((uint64_t *)&v176 + 1), v177, v178, v179, v180);
          sub_1009844E8(v188, v190, v193, v189, v191, v192, v187, v183, v186, v185, v184);
          *(_QWORD *)&v74 = v72;
          *((_QWORD *)&v74 + 1) = v71;
          v237 = v74;
          *(_QWORD *)&v74 = v73;
          *((_QWORD *)&v74 + 1) = v70;
          v194 = v74;
        }
        else
        {
          v128 = HIDWORD(v130) & 1;
          v412 = BYTE4(v130) & 1;
          LOBYTE(v239) = 19;
          v129 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v239, v237);
          v438 = 0;
          v127 = HIDWORD(v129) & 1;
          v409 = BYTE4(v129) & 1;
          v238[0] = 20;
          KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&type metadata for CRLColorData, v238, v237, &type metadata for CRLColorData, v195);
          v438 = 0;
          v75 = v239;
          LOBYTE(v239) = 21;
          v196 = v247;
          v197 = v246;
          v198 = v245;
          v206 = v75;
          v205 = v240;
          v204 = v241;
          v202 = *((_QWORD *)&v242 + 1);
          v203 = v242;
          v200 = *((_QWORD *)&v243 + 1);
          v201 = v243;
          v199 = v244;
          sub_100986A4C(v75, v240, v241, v242, *((uint64_t *)&v242 + 1), v243, *((uint64_t *)&v243 + 1), v244, v245, v246, v247);
          v76 = v438;
          v126 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v239, v237);
          v438 = v76;
          if (v76)
          {
            (*(void (**)(char *, _QWORD))(v194 + 8))(v157, v237);
            sub_1009844E8(v218, v217, v216, v215, v214, v213, v212, v211, v210, v209, v208);
            sub_1009844E8(v206, v205, v204, v203, v202, v201, v200, v199, v198, v197, v196);
            v77 = v131;
            v79 = v132;
            v78 = v133;
            v80 = v136;
            sub_1009844E8(v132, v133, v207, v134, *((uint64_t *)&v134 + 1), v135, *((uint64_t *)&v135 + 1), v136, v131, v171, v170);
            sub_1009844E8(v219, v222, v223, v220, v224, v225, *((uint64_t *)&v225 + 1), v227, v226, v228, v221);
            sub_1009844E8(v229, v230, v231, v233, *((uint64_t *)&v233 + 1), v234, v236, v181, v235, v182, v232);
            sub_1009844E8(v172, v173, v174, v175, *((uint64_t *)&v175 + 1), v176, *((uint64_t *)&v176 + 1), v177, v178, v179, v180);
            sub_1009844E8(v188, v190, v193, v189, v191, v192, v187, v183, v186, v185, v184);
            *(_QWORD *)&v81 = v78;
            *((_QWORD *)&v81 + 1) = v79;
            v237 = v81;
            *(_QWORD *)&v81 = v80;
            *((_QWORD *)&v81 + 1) = v77;
            v194 = v81;
            v18 = 138486930;
          }
          else
          {
            v124 = HIDWORD(v126) & 1;
            v406 = BYTE4(v126) & 1;
            LOBYTE(v239) = 22;
            v125 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v239, v237);
            v438 = 0;
            v123 = HIDWORD(v125) & 1;
            v403 = BYTE4(v125) & 1;
            v238[0] = 23;
            KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&type metadata for CRLColorData, v238, v237, &type metadata for CRLColorData, v195);
            v438 = 0;
            v82 = v239;
            LOBYTE(v239) = 24;
            v158 = v247;
            v159 = v246;
            v160 = v245;
            v164 = v82;
            v165 = *((_QWORD *)&v242 + 1);
            v195 = v240;
            v166 = v242;
            v167 = v241;
            v162 = *((_QWORD *)&v243 + 1);
            v163 = v243;
            v161 = v244;
            sub_100986A4C(v82, v240, v241, v242, *((uint64_t *)&v242 + 1), v243, *((uint64_t *)&v243 + 1), v244, v245, v246, v247);
            v83 = v438;
            v122 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v239, v237);
            v438 = v83;
            if (!v83)
            {
              v120 = HIDWORD(v122) & 1;
              v400 = BYTE4(v122) & 1;
              LOBYTE(v239) = 25;
              v121 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v239, v237);
              v438 = 0;
              v119 = HIDWORD(v121) & 1;
              v397 = BYTE4(v121) & 1;
              v84 = sub_1004B804C(&qword_1013FE5F8);
              v238[0] = 26;
              v85 = sub_1008C2438(&qword_1013FE680, &qword_1013FE5F8, (uint64_t)&protocol conformance descriptor for <> CRExtensible<A>);
              v86 = v438;
              KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v84, v238, v237, v84, v85);
              v438 = v86;
              if (!v86)
              {
                v118 = v239;
                v117 = v240;
                v92 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
                v388 = 27;
                v93 = sub_1004F3130();
                v94 = v438;
                KeyedDecodingContainer.decode<A>(_:forKey:)(v92, &v388, v237, v92, v93);
                v438 = v94;
                if (!v94)
                {
                  (*(void (**)(char *, _QWORD))(v194 + 8))(v157, v237);
                  *(_QWORD *)&v237 = v389;
                  swift_bridgeObjectRetain(v389);
                  swift_bridgeObjectRelease();
                  v238[316] = v145;
                  v238[324] = v147;
                  v238[420] = v57;
                  v238[428] = v60;
                  v238[524] = v128;
                  v238[532] = v127;
                  v238[628] = v124;
                  v238[636] = v123;
                  v238[732] = v120;
                  v238[740] = v119;
                  v238[836] = v143;
                  v238[844] = v141;
                  v238[108] = v150;
                  v238[116] = v149;
                  v238[212] = v138;
                  v238[220] = v137;
                  *(_QWORD *)v238 = v154;
                  v238[8] = v153;
                  *(_QWORD *)&v238[16] = v188;
                  *(_QWORD *)&v238[24] = v190;
                  *(_QWORD *)&v238[32] = v193;
                  *(_QWORD *)&v238[40] = v189;
                  *(_QWORD *)&v238[48] = v191;
                  *(_QWORD *)&v238[56] = v192;
                  *(_QWORD *)&v238[64] = v187;
                  *(_QWORD *)&v238[72] = v183;
                  *(_QWORD *)&v238[80] = v186;
                  *(_QWORD *)&v238[88] = v185;
                  *(_QWORD *)&v238[96] = v184;
                  *(_DWORD *)&v238[104] = v152;
                  *(_DWORD *)&v238[112] = v151;
                  *(_QWORD *)&v238[120] = v172;
                  *(_QWORD *)&v238[128] = v173;
                  *(_QWORD *)&v238[136] = v174;
                  *(_OWORD *)&v238[144] = v175;
                  *(_OWORD *)&v238[160] = v176;
                  *(_QWORD *)&v238[176] = v177;
                  *(_QWORD *)&v238[184] = v178;
                  *(_QWORD *)&v238[192] = v179;
                  *(_QWORD *)&v238[200] = v180;
                  *(_DWORD *)&v238[208] = v140;
                  *(_DWORD *)&v238[216] = v139;
                  *(_QWORD *)&v238[224] = v229;
                  *(_QWORD *)&v238[232] = v230;
                  *(_QWORD *)&v238[240] = v231;
                  *(_OWORD *)&v238[248] = v233;
                  *(_QWORD *)&v238[264] = v234;
                  *(_QWORD *)&v238[272] = v236;
                  *(_QWORD *)&v238[280] = v181;
                  *(_QWORD *)&v238[288] = v235;
                  *(_QWORD *)&v238[296] = v182;
                  *(_QWORD *)&v238[304] = v232;
                  *(_DWORD *)&v238[312] = v55;
                  *(_DWORD *)&v238[320] = v146;
                  *(_QWORD *)&v238[328] = v219;
                  *(_QWORD *)&v238[336] = v222;
                  *(_QWORD *)&v238[344] = v223;
                  *(_QWORD *)&v238[352] = v220;
                  *(_QWORD *)&v238[360] = v224;
                  *(_OWORD *)&v238[368] = v225;
                  *(_QWORD *)&v238[384] = v227;
                  *(_QWORD *)&v238[392] = v226;
                  *(_QWORD *)&v238[400] = v228;
                  *(_QWORD *)&v238[408] = v221;
                  v114 = v59;
                  v115 = v56;
                  *(_DWORD *)&v238[416] = v56;
                  *(_DWORD *)&v238[424] = v59;
                  *(_QWORD *)&v238[432] = v132;
                  *(_QWORD *)&v238[440] = v133;
                  *(_QWORD *)&v238[448] = v207;
                  *(_OWORD *)&v238[456] = v134;
                  *(_OWORD *)&v238[472] = v135;
                  *(_QWORD *)&v238[488] = v136;
                  *(_QWORD *)&v238[496] = v131;
                  *(_QWORD *)&v238[504] = v171;
                  *(_QWORD *)&v238[512] = v170;
                  *(_DWORD *)&v238[520] = v130;
                  *(_DWORD *)&v238[528] = v129;
                  *(_QWORD *)&v238[536] = v206;
                  *(_QWORD *)&v238[544] = v205;
                  *(_QWORD *)&v238[552] = v204;
                  *(_QWORD *)&v238[560] = v203;
                  *(_QWORD *)&v238[568] = v202;
                  *(_QWORD *)&v238[576] = v201;
                  *(_QWORD *)&v238[584] = v200;
                  *(_QWORD *)&v238[592] = v199;
                  *(_QWORD *)&v238[600] = v198;
                  *(_QWORD *)&v238[608] = v197;
                  *(_QWORD *)&v238[616] = v196;
                  *(_DWORD *)&v238[624] = v126;
                  *(_DWORD *)&v238[632] = v125;
                  *(_QWORD *)&v238[640] = v164;
                  *(_QWORD *)&v238[648] = v195;
                  *(_QWORD *)&v238[656] = v167;
                  *(_QWORD *)&v238[664] = v166;
                  *(_QWORD *)&v238[672] = v165;
                  *(_QWORD *)&v238[680] = v163;
                  *(_QWORD *)&v238[688] = v162;
                  *(_QWORD *)&v238[696] = v161;
                  *(_QWORD *)&v238[704] = v160;
                  *(_QWORD *)&v238[712] = v159;
                  *(_QWORD *)&v238[720] = v158;
                  *(_DWORD *)&v238[728] = v122;
                  *(_DWORD *)&v238[736] = v121;
                  *(_QWORD *)&v238[744] = v218;
                  *(_QWORD *)&v238[752] = v217;
                  *(_QWORD *)&v238[760] = v216;
                  *(_QWORD *)&v238[768] = v215;
                  *(_QWORD *)&v238[776] = v214;
                  v100 = v213;
                  *(_QWORD *)&v238[784] = v213;
                  v101 = v212;
                  *(_QWORD *)&v238[792] = v212;
                  v102 = v211;
                  *(_QWORD *)&v238[800] = v211;
                  v103 = v210;
                  *(_QWORD *)&v238[808] = v210;
                  v104 = v209;
                  *(_QWORD *)&v238[816] = v209;
                  v105 = v208;
                  *(_QWORD *)&v238[824] = v208;
                  v116 = v64;
                  *(_DWORD *)&v238[832] = v64;
                  *(_DWORD *)&v238[840] = v144;
                  v238[845] = v142;
                  *(_QWORD *)&v238[848] = v118;
                  v238[856] = v117;
                  *(_QWORD *)&v238[864] = v237;
                  sub_100986B64((uint64_t)v238);
                  swift_bridgeObjectRelease();
                  sub_1009844E8(v218, v217, v216, v215, v214, v100, v101, v102, v103, v104, v105);
                  sub_1009844E8(v164, v195, v167, v166, v165, v163, v162, v161, v160, v159, v158);
                  sub_1009844E8(v206, v205, v204, v203, v202, v201, v200, v199, v198, v197, v196);
                  sub_1009844E8(v132, v133, v207, v134, *((uint64_t *)&v134 + 1), v135, *((uint64_t *)&v135 + 1), v136, v131, v171, v170);
                  sub_1009844E8(v219, v222, v223, v220, v224, v225, *((uint64_t *)&v225 + 1), v227, v226, v228, v221);
                  sub_1009844E8(v229, v230, v231, v233, *((uint64_t *)&v233 + 1), v234, v236, v181, v235, v182, v232);
                  sub_1009844E8(v172, v173, v174, v175, *((uint64_t *)&v175 + 1), v176, *((uint64_t *)&v176 + 1), v177, v178, v179, v180);
                  v106 = v188;
                  v107 = v190;
                  v108 = v193;
                  v109 = v189;
                  v110 = v191;
                  v111 = v192;
                  v112 = v187;
                  v113 = v183;
                  sub_1009844E8(v188, v190, v193, v189, v191, v192, v187, v183, v186, v185, v184);
                  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v156);
                  v239 = v154;
                  LOBYTE(v240) = v153;
                  v241 = v106;
                  *(_QWORD *)&v242 = v107;
                  *((_QWORD *)&v242 + 1) = v108;
                  *(_QWORD *)&v243 = v109;
                  *((_QWORD *)&v243 + 1) = v110;
                  v244 = v111;
                  v245 = v112;
                  v246 = v113;
                  v247 = v186;
                  v248 = v185;
                  v249 = v184;
                  v250 = v152;
                  v254 = v151;
                  v258 = v172;
                  v259 = v173;
                  v260 = v174;
                  v261 = v175;
                  v262 = v176;
                  v263 = v177;
                  v264 = v178;
                  v265 = v179;
                  v266 = v180;
                  v267 = v140;
                  v271 = v139;
                  v275 = v229;
                  v276 = v230;
                  v277 = v231;
                  v278 = v233;
                  v279 = v234;
                  v280 = v236;
                  v281 = v181;
                  v282 = v235;
                  v283 = v182;
                  v284 = v232;
                  v285 = v148;
                  v289 = v146;
                  v293 = v219;
                  v294 = v222;
                  v295 = v223;
                  v296 = v220;
                  v297 = v224;
                  v298 = v225;
                  v299 = v227;
                  v300 = v226;
                  v301 = v228;
                  v302 = v221;
                  v303 = v115;
                  v307 = v114;
                  v311 = v132;
                  v312 = v133;
                  v313 = v207;
                  v314 = v134;
                  v315 = v135;
                  v316 = v136;
                  v317 = v131;
                  v318 = v171;
                  v319 = v170;
                  v320 = v130;
                  v324 = v129;
                  v328 = v206;
                  v329 = v205;
                  v330 = v204;
                  v331 = v203;
                  v332 = v202;
                  v333 = v201;
                  v334 = v200;
                  v335 = v199;
                  v336 = v198;
                  v337 = v197;
                  v338 = v196;
                  v339 = v126;
                  v343 = v125;
                  v347 = v164;
                  *(_DWORD *)((char *)&v240 + 1) = v437[0];
                  v252 = v434;
                  v256 = v431;
                  v269 = v428;
                  v273 = v425;
                  v287 = v422;
                  v291 = v419;
                  v305 = v416;
                  v309 = v413;
                  v322 = v410;
                  v326 = v407;
                  v341 = v404;
                  v345 = v401;
                  HIDWORD(v240) = *(_DWORD *)((char *)v437 + 3);
                  v251 = v436;
                  v253 = v435;
                  v255 = v433;
                  v257 = v432;
                  v268 = v430;
                  v270 = v429;
                  v272 = v427;
                  v274 = v426;
                  v286 = v424;
                  v288 = v423;
                  v290 = v421;
                  v292 = v420;
                  v304 = v418;
                  v306 = v417;
                  v308 = v415;
                  v310 = v414;
                  v321 = v412;
                  v323 = v411;
                  v325 = v409;
                  v327 = v408;
                  v340 = v406;
                  v342 = v405;
                  v344 = v403;
                  v346 = v402;
                  v348 = v195;
                  v349 = v167;
                  v350 = v166;
                  v351 = v165;
                  v352 = v163;
                  v353 = v162;
                  v354 = v161;
                  v355 = v160;
                  v356 = v159;
                  v357 = v158;
                  v358 = v122;
                  v359 = v400;
                  v360 = v398;
                  v361 = v399;
                  v362 = v121;
                  v363 = v397;
                  v364 = v395;
                  v365 = v396;
                  v366 = v218;
                  v367 = v217;
                  v368 = v216;
                  v369 = v215;
                  v370 = v214;
                  v371 = v213;
                  v372 = v212;
                  v373 = v211;
                  v374 = v210;
                  v375 = v209;
                  v376 = v208;
                  v377 = v116;
                  v378 = v394;
                  v379 = v392;
                  v380 = v393;
                  v381 = v144;
                  v382 = v391;
                  v383 = v142;
                  v384 = v118;
                  v385 = v117;
                  *(_DWORD *)v386 = *(_DWORD *)v390;
                  *(_DWORD *)&v386[3] = *(_DWORD *)&v390[3];
                  v387 = v237;
                  sub_1009841A0((uint64_t)&v239);
                  memcpy(v155, v238, 0x368uLL);
                  return;
                }
                (*(void (**)(char *, _QWORD))(v194 + 8))(v157, v237);
                sub_1009844E8(v218, v217, v216, v215, v214, v213, v212, v211, v210, v209, v208);
                sub_1009844E8(v164, v195, v167, v166, v165, v163, v162, v161, v160, v159, v158);
                sub_1009844E8(v206, v205, v204, v203, v202, v201, v200, v199, v198, v197, v196);
                v95 = v131;
                v97 = v132;
                v96 = v133;
                v98 = v136;
                sub_1009844E8(v132, v133, v207, v134, *((uint64_t *)&v134 + 1), v135, *((uint64_t *)&v135 + 1), v136, v131, v171, v170);
                sub_1009844E8(v219, v222, v223, v220, v224, v225, *((uint64_t *)&v225 + 1), v227, v226, v228, v221);
                sub_1009844E8(v229, v230, v231, v233, *((uint64_t *)&v233 + 1), v234, v236, v181, v235, v182, v232);
                sub_1009844E8(v172, v173, v174, v175, *((uint64_t *)&v175 + 1), v176, *((uint64_t *)&v176 + 1), v177, v178, v179, v180);
                sub_1009844E8(v188, v190, v193, v189, v191, v192, v187, v183, v186, v185, v184);
                _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v156);
                *(_QWORD *)&v99 = v96;
                *((_QWORD *)&v99 + 1) = v97;
                v237 = v99;
                *(_QWORD *)&v99 = v98;
                v19 = 1;
                v20 = 1;
                v21 = 1;
                *((_QWORD *)&v99 + 1) = v95;
                v194 = v99;
                v22 = 1;
                v23 = 1;
                v24 = 1;
                v25 = 1;
                goto LABEL_5;
              }
            }
            (*(void (**)(char *, _QWORD))(v194 + 8))(v157, v237);
            sub_1009844E8(v218, v217, v216, v215, v214, v213, v212, v211, v210, v209, v208);
            sub_1009844E8(v164, v195, v167, v166, v165, v163, v162, v161, v160, v159, v158);
            sub_1009844E8(v206, v205, v204, v203, v202, v201, v200, v199, v198, v197, v196);
            v87 = v131;
            v89 = v132;
            v88 = v133;
            v90 = v136;
            sub_1009844E8(v132, v133, v207, v134, *((uint64_t *)&v134 + 1), v135, *((uint64_t *)&v135 + 1), v136, v131, v171, v170);
            sub_1009844E8(v219, v222, v223, v220, v224, v225, *((uint64_t *)&v225 + 1), v227, v226, v228, v221);
            sub_1009844E8(v229, v230, v231, v233, *((uint64_t *)&v233 + 1), v234, v236, v181, v235, v182, v232);
            sub_1009844E8(v172, v173, v174, v175, *((uint64_t *)&v175 + 1), v176, *((uint64_t *)&v176 + 1), v177, v178, v179, v180);
            sub_1009844E8(v188, v190, v193, v189, v191, v192, v187, v183, v186, v185, v184);
            *(_QWORD *)&v91 = v88;
            *((_QWORD *)&v91 + 1) = v89;
            v237 = v91;
            *(_QWORD *)&v91 = v90;
            *((_QWORD *)&v91 + 1) = v87;
            v194 = v91;
            v18 = 139011218;
          }
        }
      }
    }
    a1 = v156;
  }
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  v19 = (v18 >> 4) & 1;
  v20 = (v18 >> 7) & 1;
  v21 = (v18 >> 10) & 1;
  v22 = (v18 >> 13) & 1;
  v23 = HIWORD(v18) & 1;
  v24 = (v18 >> 19) & 1;
  v25 = (v18 >> 22) & 1;
  if ((v18 & 2) != 0)
LABEL_5:
    sub_1009844E8(v188, v190, v193, v189, v191, v192, v187, v183, v186, v185, v184);
  if (v19)
    sub_1009844E8(v172, v173, v174, v175, *((uint64_t *)&v175 + 1), v176, *((uint64_t *)&v176 + 1), v177, v178, v179, v180);
  if (v20)
    sub_1009844E8(v229, v230, v231, v233, *((uint64_t *)&v233 + 1), v234, v236, v181, v235, v182, v232);
  v26 = v216;
  if (v21)
    sub_1009844E8(v219, v222, v223, v220, v224, v225, *((uint64_t *)&v225 + 1), v227, v226, v228, v221);
  v27 = v218;
  if (v22)
    sub_1009844E8(*((uint64_t *)&v237 + 1), v237, v207, v169, *((uint64_t *)&v169 + 1), v168, *((uint64_t *)&v168 + 1), v194, *((uint64_t *)&v194 + 1), v171, v170);
  v28 = v195;
  if (v23)
    sub_1009844E8(v206, v205, v204, v203, v202, v201, v200, v199, v198, v197, v196);
  v29 = v217;
  if (v24)
    sub_1009844E8(v164, v28, v167, v166, v165, v163, v162, v161, v160, v159, v158);
  if (v25)
    sub_1009844E8(v27, v29, v26, v215, v214, v213, v212, v211, v210, v209, v208);
  swift_bridgeObjectRelease();
}

id sub_100983598(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  CGColorSpace *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  CGColorSpace *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  CGColorSpace *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  CGColorSpace *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  CGColorSpace *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  CGColorSpace *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  CGColorSpace *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  CGColorSpace *v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _BYTE v71[15];
  char v72;
  _BYTE v73[8];
  _BYTE v74[8];
  _BYTE v75[8];
  _BYTE v76[8];
  _BYTE v77[8];
  _BYTE v78[8];
  _BYTE v79[8];
  _BYTE v80[8];
  _BYTE v81[8];
  _BYTE v82[8];
  _BYTE v83[8];
  _BYTE v84[8];
  char v85;
  _BYTE v86[8];
  _BYTE v87[8];
  _BYTE v88[8];
  _BYTE v89[16];
  int v90;
  char v91;
  __int128 v92;
  uint64_t v93;
  __int128 v94;
  uint64_t v95;
  __int128 v96;
  uint64_t v97;
  uint64_t v98;
  int v99;
  char v100;
  __int128 v101;
  uint64_t v102;
  __int128 v103;
  uint64_t v104;
  __int128 v105;
  uint64_t v106;
  uint64_t v107;
  int v108;
  char v109;
  __int128 v110;
  uint64_t v111;
  __int128 v112;
  uint64_t v113;
  __int128 v114;
  uint64_t v115;
  uint64_t v116;
  int v117;
  char v118;
  __int128 v119;
  uint64_t v120;
  __int128 v121;
  uint64_t v122;
  __int128 v123;
  uint64_t v124;
  uint64_t v125;
  int v126;
  char v127;
  __int128 v128;
  uint64_t v129;
  __int128 v130;
  uint64_t v131;
  __int128 v132;
  uint64_t v133;
  uint64_t v134;
  int v135;
  char v136;
  __int128 v137;
  uint64_t v138;
  __int128 v139;
  uint64_t v140;
  __int128 v141;
  uint64_t v142;
  uint64_t v143;
  int v144;
  char v145;
  __int128 v146;
  uint64_t v147;
  __int128 v148;
  uint64_t v149;
  __int128 v150;
  uint64_t v151;
  uint64_t v152;
  int v153;
  char v154;
  __int128 v155;
  uint64_t v156;
  __int128 v157;
  uint64_t v158;
  __int128 v159;
  uint64_t v160;
  uint64_t v161;
  _BYTE v162[16];
  _BYTE v163[16];
  char v164[16];
  float v165;
  char v166;
  float v167;
  char v168;
  float v169;
  char v170;
  float v171;
  char v172;
  float v173;
  char v174;
  float v175;
  char v176;
  float v177;
  char v178;
  float v179;
  char v180;
  float v181;
  char v182;
  float v183;
  char v184;
  float v185;
  char v186;
  float v187;
  char v188;
  float v189;
  char v190;
  float v191;
  char v192;
  float v193;
  char v194;
  float v195;
  char v196;
  char v197;
  _BYTE v198[16];
  _BYTE v199[16];
  _BYTE v200[24];

  v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2, a2)), "init");
  sub_1004C4938(a1, (uint64_t)v89, &qword_1013FE5E8);
  sub_1004C4938((uint64_t)v89, (uint64_t)v162, &qword_1013FE5E8);
  if (v162[8] == 255
    || (sub_1004C4938((uint64_t)v162, (uint64_t)v163, &qword_1013FE600),
        sub_1004C4938((uint64_t)v163, (uint64_t)v164, &qword_1013FE600),
        (v164[8] & 1) != 0))
  {
    v5 = v4;
  }
  else
  {
    objc_msgSend(v4, "setCurrentToolType:", sub_10060C6A0(v164[0]));
  }
  v6 = *(_QWORD *)(a1 + 96);
  if (v6)
  {
    v7 = *(_QWORD *)(a1 + 88);
    v8 = *(_QWORD *)(a1 + 64);
    v9 = *(_QWORD *)(a1 + 40);
    v10 = *(_QWORD *)(a1 + 16);
    v153 = v10;
    v154 = BYTE4(v10) & 1;
    v155 = *(_OWORD *)(a1 + 24);
    v157 = *(_OWORD *)(a1 + 48);
    v63 = v157;
    v156 = v9;
    v158 = v8;
    v159 = *(_OWORD *)(a1 + 72);
    v55 = v159;
    v160 = v7;
    v161 = v6;
    sub_1005E40F4();
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v6);
    swift_bridgeObjectRetain(v63);
    swift_bridgeObjectRetain(v55);
    v11 = sub_1006C52C0((uint64_t)&v153);
    objc_msgSend(v4, "setColor:forToolType:", v11, 0);

  }
  sub_1004C4938(a1 + 104, (uint64_t)v88, &qword_1013E0B30);
  sub_1004C4938((uint64_t)v88, (uint64_t)&v165, &qword_1013E0B30);
  if ((v166 & 1) == 0)
    objc_msgSend(v4, "setOpacity:forToolType:", 0, v165);
  sub_1004C4938(a1 + 112, (uint64_t)v87, &qword_1013E0B30);
  sub_1004C4938((uint64_t)v87, (uint64_t)&v167, &qword_1013E0B30);
  if ((v168 & 1) == 0)
    objc_msgSend(v4, "setStrokeWidth:forToolType:", 0, v167);
  v12 = *(_QWORD *)(a1 + 200);
  if (v12)
  {
    v13 = *(_QWORD *)(a1 + 192);
    v14 = *(_QWORD *)(a1 + 168);
    v15 = *(_QWORD *)(a1 + 144);
    v16 = *(_QWORD *)(a1 + 120);
    v144 = v16;
    v145 = BYTE4(v16) & 1;
    v146 = *(_OWORD *)(a1 + 128);
    v147 = v15;
    v148 = *(_OWORD *)(a1 + 152);
    v64 = v148;
    v150 = *(_OWORD *)(a1 + 176);
    v56 = v150;
    v149 = v14;
    v151 = v13;
    v152 = v12;
    sub_1005E40F4();
    swift_bridgeObjectRetain(v13);
    swift_bridgeObjectRetain(v12);
    swift_bridgeObjectRetain(v64);
    swift_bridgeObjectRetain(v56);
    v17 = sub_1006C52C0((uint64_t)&v144);
    objc_msgSend(v4, "setColor:forToolType:", v17, 1);

  }
  sub_1004C4938(a1 + 208, (uint64_t)v86, &qword_1013E0B30);
  sub_1004C4938((uint64_t)v86, (uint64_t)&v169, &qword_1013E0B30);
  if ((v170 & 1) == 0)
    objc_msgSend(v4, "setOpacity:forToolType:", 1, v169);
  sub_1004C4938(a1 + 216, (uint64_t)&v85, &qword_1013E0B30);
  sub_1004C4938((uint64_t)&v85, (uint64_t)&v171, &qword_1013E0B30);
  if ((v172 & 1) == 0)
    objc_msgSend(v4, "setStrokeWidth:forToolType:", 1, v171);
  v18 = *(_QWORD *)(a1 + 304);
  if (v18)
  {
    v19 = *(_QWORD *)(a1 + 296);
    v20 = *(_QWORD *)(a1 + 272);
    v21 = *(_QWORD *)(a1 + 248);
    v22 = *(_QWORD *)(a1 + 224);
    v135 = v22;
    v136 = BYTE4(v22) & 1;
    v137 = *(_OWORD *)(a1 + 232);
    v139 = *(_OWORD *)(a1 + 256);
    v65 = v139;
    v138 = v21;
    v140 = v20;
    v141 = *(_OWORD *)(a1 + 280);
    v57 = v141;
    v142 = v19;
    v143 = v18;
    sub_1005E40F4();
    swift_bridgeObjectRetain(v19);
    swift_bridgeObjectRetain(v18);
    swift_bridgeObjectRetain(v65);
    swift_bridgeObjectRetain(v57);
    v23 = sub_1006C52C0((uint64_t)&v135);
    objc_msgSend(v4, "setColor:forToolType:", v23, 2);

  }
  sub_1004C4938(a1 + 312, (uint64_t)v84, &qword_1013E0B30);
  sub_1004C4938((uint64_t)v84, (uint64_t)&v173, &qword_1013E0B30);
  if ((v174 & 1) == 0)
    objc_msgSend(v4, "setOpacity:forToolType:", 2, v173);
  sub_1004C4938(a1 + 320, (uint64_t)v83, &qword_1013E0B30);
  sub_1004C4938((uint64_t)v83, (uint64_t)&v175, &qword_1013E0B30);
  if ((v176 & 1) == 0)
    objc_msgSend(v4, "setStrokeWidth:forToolType:", 2, v175);
  v24 = *(_QWORD *)(a1 + 408);
  if (v24)
  {
    v25 = *(_QWORD *)(a1 + 400);
    v26 = *(_QWORD *)(a1 + 376);
    v27 = *(_QWORD *)(a1 + 352);
    v28 = *(_QWORD *)(a1 + 328);
    v126 = v28;
    v127 = BYTE4(v28) & 1;
    v128 = *(_OWORD *)(a1 + 336);
    v129 = v27;
    v130 = *(_OWORD *)(a1 + 360);
    v66 = v130;
    v132 = *(_OWORD *)(a1 + 384);
    v58 = v132;
    v131 = v26;
    v133 = v25;
    v134 = v24;
    sub_1005E40F4();
    swift_bridgeObjectRetain(v25);
    swift_bridgeObjectRetain(v24);
    swift_bridgeObjectRetain(v66);
    swift_bridgeObjectRetain(v58);
    v29 = sub_1006C52C0((uint64_t)&v126);
    objc_msgSend(v4, "setColor:forToolType:", v29, 3);

  }
  sub_1004C4938(a1 + 416, (uint64_t)v82, &qword_1013E0B30);
  sub_1004C4938((uint64_t)v82, (uint64_t)&v177, &qword_1013E0B30);
  if ((v178 & 1) == 0)
    objc_msgSend(v4, "setOpacity:forToolType:", 3, v177);
  sub_1004C4938(a1 + 424, (uint64_t)v81, &qword_1013E0B30);
  sub_1004C4938((uint64_t)v81, (uint64_t)&v179, &qword_1013E0B30);
  if ((v180 & 1) == 0)
    objc_msgSend(v4, "setStrokeWidth:forToolType:", 3, v179);
  v30 = *(_QWORD *)(a1 + 512);
  if (v30)
  {
    v31 = *(_QWORD *)(a1 + 504);
    v32 = *(_QWORD *)(a1 + 480);
    v33 = *(_QWORD *)(a1 + 456);
    v34 = *(_QWORD *)(a1 + 432);
    v117 = v34;
    v118 = BYTE4(v34) & 1;
    v119 = *(_OWORD *)(a1 + 440);
    v121 = *(_OWORD *)(a1 + 464);
    v67 = v121;
    v120 = v33;
    v122 = v32;
    v123 = *(_OWORD *)(a1 + 488);
    v59 = v123;
    v124 = v31;
    v125 = v30;
    sub_1005E40F4();
    swift_bridgeObjectRetain(v31);
    swift_bridgeObjectRetain(v30);
    swift_bridgeObjectRetain(v67);
    swift_bridgeObjectRetain(v59);
    v35 = sub_1006C52C0((uint64_t)&v117);
    objc_msgSend(v4, "setColor:forToolType:", v35, 4);

  }
  sub_1004C4938(a1 + 520, (uint64_t)v80, &qword_1013E0B30);
  sub_1004C4938((uint64_t)v80, (uint64_t)&v181, &qword_1013E0B30);
  if ((v182 & 1) == 0)
    objc_msgSend(v4, "setOpacity:forToolType:", 4, v181);
  sub_1004C4938(a1 + 528, (uint64_t)v79, &qword_1013E0B30);
  sub_1004C4938((uint64_t)v79, (uint64_t)&v183, &qword_1013E0B30);
  if ((v184 & 1) == 0)
    objc_msgSend(v4, "setStrokeWidth:forToolType:", 4, v183);
  v36 = *(_QWORD *)(a1 + 616);
  if (v36)
  {
    v37 = *(_QWORD *)(a1 + 608);
    v38 = *(_QWORD *)(a1 + 584);
    v39 = *(_QWORD *)(a1 + 560);
    v40 = *(_QWORD *)(a1 + 536);
    v108 = v40;
    v109 = BYTE4(v40) & 1;
    v110 = *(_OWORD *)(a1 + 544);
    v111 = v39;
    v112 = *(_OWORD *)(a1 + 568);
    v68 = v112;
    v114 = *(_OWORD *)(a1 + 592);
    v60 = v114;
    v113 = v38;
    v115 = v37;
    v116 = v36;
    sub_1005E40F4();
    swift_bridgeObjectRetain(v37);
    swift_bridgeObjectRetain(v36);
    swift_bridgeObjectRetain(v68);
    swift_bridgeObjectRetain(v60);
    v41 = sub_1006C52C0((uint64_t)&v108);
    objc_msgSend(v4, "setColor:forToolType:", v41, 5);

  }
  sub_1004C4938(a1 + 624, (uint64_t)v78, &qword_1013E0B30);
  sub_1004C4938((uint64_t)v78, (uint64_t)&v185, &qword_1013E0B30);
  if ((v186 & 1) == 0)
    objc_msgSend(v4, "setOpacity:forToolType:", 5, v185);
  sub_1004C4938(a1 + 632, (uint64_t)v77, &qword_1013E0B30);
  sub_1004C4938((uint64_t)v77, (uint64_t)&v187, &qword_1013E0B30);
  if ((v188 & 1) == 0)
    objc_msgSend(v4, "setStrokeWidth:forToolType:", 5, v187);
  v42 = *(_QWORD *)(a1 + 720);
  if (v42)
  {
    v43 = *(_QWORD *)(a1 + 712);
    v44 = *(_QWORD *)(a1 + 688);
    v45 = *(_QWORD *)(a1 + 664);
    v46 = *(_QWORD *)(a1 + 640);
    v99 = v46;
    v100 = BYTE4(v46) & 1;
    v101 = *(_OWORD *)(a1 + 648);
    v103 = *(_OWORD *)(a1 + 672);
    v69 = v103;
    v102 = v45;
    v104 = v44;
    v105 = *(_OWORD *)(a1 + 696);
    v61 = v105;
    v106 = v43;
    v107 = v42;
    sub_1005E40F4();
    swift_bridgeObjectRetain(v43);
    swift_bridgeObjectRetain(v42);
    swift_bridgeObjectRetain(v69);
    swift_bridgeObjectRetain(v61);
    v47 = sub_1006C52C0((uint64_t)&v99);
    objc_msgSend(v4, "setColor:forToolType:", v47, 6);

  }
  sub_1004C4938(a1 + 728, (uint64_t)v76, &qword_1013E0B30);
  sub_1004C4938((uint64_t)v76, (uint64_t)&v189, &qword_1013E0B30);
  if ((v190 & 1) == 0)
    objc_msgSend(v4, "setOpacity:forToolType:", 6, v189);
  sub_1004C4938(a1 + 736, (uint64_t)v75, &qword_1013E0B30);
  sub_1004C4938((uint64_t)v75, (uint64_t)&v191, &qword_1013E0B30);
  if ((v192 & 1) == 0)
    objc_msgSend(v4, "setStrokeWidth:forToolType:", 6, v191);
  v48 = *(_QWORD *)(a1 + 824);
  if (v48)
  {
    v49 = *(_QWORD *)(a1 + 816);
    v50 = *(_QWORD *)(a1 + 792);
    v51 = *(_QWORD *)(a1 + 768);
    v52 = *(_QWORD *)(a1 + 744);
    v90 = v52;
    v91 = BYTE4(v52) & 1;
    v92 = *(_OWORD *)(a1 + 752);
    v93 = v51;
    v94 = *(_OWORD *)(a1 + 776);
    v70 = v94;
    v96 = *(_OWORD *)(a1 + 800);
    v62 = v96;
    v95 = v50;
    v97 = v49;
    v98 = v48;
    sub_1005E40F4();
    swift_bridgeObjectRetain(v49);
    swift_bridgeObjectRetain(v48);
    swift_bridgeObjectRetain(v70);
    swift_bridgeObjectRetain(v62);
    v53 = sub_1006C52C0((uint64_t)&v90);
    objc_msgSend(v4, "setColor:forToolType:", v53, 7);

  }
  sub_1004C4938(a1 + 832, (uint64_t)v74, &qword_1013E0B30);
  sub_1004C4938((uint64_t)v74, (uint64_t)&v193, &qword_1013E0B30);
  if ((v194 & 1) == 0)
    objc_msgSend(v4, "setOpacity:forToolType:", 7, v193);
  sub_1004C4938(a1 + 840, (uint64_t)v73, &qword_1013E0B30);
  sub_1004C4938((uint64_t)v73, (uint64_t)&v195, &qword_1013E0B30);
  if ((v196 & 1) == 0)
    objc_msgSend(v4, "setStrokeWidth:forToolType:", 8, v195);
  sub_1004C4938(a1 + 845, (uint64_t)&v72, &qword_1013EFCA0);
  sub_1004C4938((uint64_t)&v72, (uint64_t)&v197, &qword_1013EFCA0);
  if (v197 != 2)
    objc_msgSend(v4, "setEraserToolErasesWholeObjects:", v197 & 1);
  sub_1004C4938(a1 + 848, (uint64_t)v71, &qword_1013FE5F0);
  sub_1004C4938((uint64_t)v71, (uint64_t)v198, &qword_1013FE5F0);
  if (v198[8] != 255)
  {
    sub_1004C4938((uint64_t)v198, (uint64_t)v199, &qword_1013FE5F8);
    sub_1004C4938((uint64_t)v199, (uint64_t)v200, &qword_1013FE5F8);
    if ((v200[8] & 1) == 0)
      objc_msgSend(v4, "setCurrentLassoType:", v200[0]);
  }

  return v4;
}

uint64_t sub_1009841A0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __int128 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;

  v71 = *(_QWORD *)(a1 + 128);
  v72 = *(_QWORD *)(a1 + 120);
  v70 = *(_QWORD *)(a1 + 136);
  v67 = *(_QWORD *)(a1 + 152);
  v68 = *(_QWORD *)(a1 + 144);
  v65 = *(_QWORD *)(a1 + 168);
  v66 = *(_QWORD *)(a1 + 160);
  v61 = *(_QWORD *)(a1 + 176);
  v50 = *(_OWORD *)(a1 + 184);
  v49 = *(_QWORD *)(a1 + 200);
  v64 = *(_QWORD *)(a1 + 224);
  v59 = *(_QWORD *)(a1 + 240);
  v60 = *(_QWORD *)(a1 + 232);
  v57 = *(_QWORD *)(a1 + 256);
  v58 = *(_QWORD *)(a1 + 248);
  v54 = *(_QWORD *)(a1 + 272);
  v55 = *(_QWORD *)(a1 + 264);
  v53 = *(_QWORD *)(a1 + 280);
  v46 = *(_OWORD *)(a1 + 288);
  v41 = *(_QWORD *)(a1 + 304);
  v2 = *(_QWORD *)(a1 + 344);
  v62 = *(_QWORD *)(a1 + 336);
  v63 = *(_QWORD *)(a1 + 328);
  v44 = *(_OWORD *)(a1 + 392);
  v51 = *(_OWORD *)(a1 + 496);
  v56 = *(_OWORD *)(a1 + 600);
  v69 = *(_OWORD *)(a1 + 704);
  v73 = *(_OWORD *)(a1 + 808);
  v3 = *(_QWORD *)(a1 + 352);
  v4 = *(_QWORD *)(a1 + 360);
  v6 = *(_QWORD *)(a1 + 368);
  v5 = *(_QWORD *)(a1 + 376);
  v7 = *(_QWORD *)(a1 + 384);
  v8 = *(_QWORD *)(a1 + 408);
  v9 = *(_QWORD *)(a1 + 432);
  v12 = *(_QWORD *)(a1 + 440);
  v13 = *(_QWORD *)(a1 + 448);
  v14 = *(_QWORD *)(a1 + 456);
  v15 = *(_QWORD *)(a1 + 464);
  v16 = *(_QWORD *)(a1 + 472);
  v17 = *(_QWORD *)(a1 + 480);
  v10 = *(_QWORD *)(a1 + 512);
  v19 = *(_QWORD *)(a1 + 488);
  v20 = *(_QWORD *)(a1 + 536);
  v21 = *(_QWORD *)(a1 + 544);
  v22 = *(_QWORD *)(a1 + 552);
  v23 = *(_QWORD *)(a1 + 560);
  v24 = *(_QWORD *)(a1 + 568);
  v25 = *(_QWORD *)(a1 + 576);
  v26 = *(_QWORD *)(a1 + 584);
  v18 = *(_QWORD *)(a1 + 616);
  v28 = *(_QWORD *)(a1 + 592);
  v29 = *(_QWORD *)(a1 + 640);
  v30 = *(_QWORD *)(a1 + 648);
  v31 = *(_QWORD *)(a1 + 656);
  v32 = *(_QWORD *)(a1 + 664);
  v33 = *(_QWORD *)(a1 + 672);
  v34 = *(_QWORD *)(a1 + 680);
  v35 = *(_QWORD *)(a1 + 688);
  v27 = *(_QWORD *)(a1 + 720);
  v37 = *(_QWORD *)(a1 + 696);
  v38 = *(_QWORD *)(a1 + 744);
  v39 = *(_QWORD *)(a1 + 752);
  v40 = *(_QWORD *)(a1 + 760);
  v42 = *(_QWORD *)(a1 + 768);
  v43 = *(_QWORD *)(a1 + 776);
  v45 = *(_QWORD *)(a1 + 784);
  v47 = *(_QWORD *)(a1 + 792);
  v48 = *(_QWORD *)(a1 + 800);
  v36 = *(_QWORD *)(a1 + 824);
  v52 = *(_QWORD *)(a1 + 864);
  sub_1009844E8(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96));
  sub_1009844E8(v72, v71, v70, v68, v67, v66, v65, v61, v50, *((uint64_t *)&v50 + 1), v49);
  sub_1009844E8(v64, v60, v59, v58, v57, v55, v54, v53, v46, *((uint64_t *)&v46 + 1), v41);
  sub_1009844E8(v63, v62, v2, v3, v4, v6, v5, v7, v44, *((uint64_t *)&v44 + 1), v8);
  sub_1009844E8(v9, v12, v13, v14, v15, v16, v17, v19, v51, *((uint64_t *)&v51 + 1), v10);
  sub_1009844E8(v20, v21, v22, v23, v24, v25, v26, v28, v56, *((uint64_t *)&v56 + 1), v18);
  sub_1009844E8(v29, v30, v31, v32, v33, v34, v35, v37, v69, *((uint64_t *)&v69 + 1), v27);
  sub_1009844E8(v38, v39, v40, v42, v43, v45, v47, v48, v73, *((uint64_t *)&v73 + 1), v36);
  swift_bridgeObjectRelease(v52);
  return a1;
}

uint64_t sub_1009844E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t result;

  result = a11;
  if (a11)
  {
    swift_bridgeObjectRelease(a11);
    swift_bridgeObjectRelease(a5);
    swift_bridgeObjectRelease(a8);
    return swift_bridgeObjectRelease(a10);
  }
  return result;
}

uint64_t sub_100984544(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B804C((uint64_t *)&unk_1014064C0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t destroy for CRLFreehandDrawingToolkitUIStateData(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = a1[12];
  if (v2)
  {
    swift_bridgeObjectRelease(a1[6]);
    swift_bridgeObjectRelease(a1[9]);
    v3 = a1[11];
    swift_bridgeObjectRelease(v2);
    swift_bridgeObjectRelease(v3);
  }
  v4 = a1[25];
  if (v4)
  {
    swift_bridgeObjectRelease(a1[19]);
    swift_bridgeObjectRelease(a1[22]);
    v5 = a1[24];
    swift_bridgeObjectRelease(v4);
    swift_bridgeObjectRelease(v5);
  }
  v6 = a1[38];
  if (v6)
  {
    swift_bridgeObjectRelease(a1[32]);
    swift_bridgeObjectRelease(a1[35]);
    v7 = a1[37];
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(v7);
  }
  v8 = a1[51];
  if (v8)
  {
    swift_bridgeObjectRelease(a1[45]);
    swift_bridgeObjectRelease(a1[48]);
    v9 = a1[50];
    swift_bridgeObjectRelease(v8);
    swift_bridgeObjectRelease(v9);
  }
  v10 = a1[64];
  if (v10)
  {
    swift_bridgeObjectRelease(a1[58]);
    swift_bridgeObjectRelease(a1[61]);
    v11 = a1[63];
    swift_bridgeObjectRelease(v10);
    swift_bridgeObjectRelease(v11);
  }
  v12 = a1[77];
  if (v12)
  {
    swift_bridgeObjectRelease(a1[71]);
    swift_bridgeObjectRelease(a1[74]);
    v13 = a1[76];
    swift_bridgeObjectRelease(v12);
    swift_bridgeObjectRelease(v13);
  }
  v14 = a1[90];
  if (v14)
  {
    swift_bridgeObjectRelease(a1[84]);
    swift_bridgeObjectRelease(a1[87]);
    v15 = a1[89];
    swift_bridgeObjectRelease(v14);
    swift_bridgeObjectRelease(v15);
  }
  v16 = a1[103];
  if (v16)
  {
    swift_bridgeObjectRelease(a1[97]);
    swift_bridgeObjectRelease(a1[100]);
    v17 = a1[102];
    swift_bridgeObjectRelease(v16);
    swift_bridgeObjectRelease(v17);
  }
  return swift_bridgeObjectRelease(a1[108]);
}

uint64_t initializeWithCopy for CRLFreehandDrawingToolkitUIStateData(uint64_t a1, uint64_t a2)
{
  _DWORD *v4;
  _DWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  _DWORD *v12;
  _DWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  _DWORD *v20;
  _DWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  _DWORD *v28;
  _DWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  _DWORD *v36;
  _DWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  _DWORD *v44;
  _DWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  _DWORD *v52;
  _DWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  _DWORD *v60;
  _DWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  __int128 v67;
  uint64_t v68;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = (_DWORD *)(a1 + 16);
  v5 = (_DWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 96);
  if (v6)
  {
    *v4 = *v5;
    *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
    *(_QWORD *)(a1 + 36) = *(_QWORD *)(a2 + 36);
    *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
    v7 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 48) = v7;
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    v8 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 72) = v8;
    *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
    v9 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 88) = v9;
    *(_QWORD *)(a1 + 96) = v6;
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v9);
    swift_bridgeObjectRetain(v6);
  }
  else
  {
    v10 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v10;
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    v11 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)v4 = *(_OWORD *)v5;
    *(_OWORD *)(a1 + 32) = v11;
  }
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 108) = *(_BYTE *)(a2 + 108);
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 116) = *(_BYTE *)(a2 + 116);
  v12 = (_DWORD *)(a1 + 120);
  v13 = (_DWORD *)(a2 + 120);
  v14 = *(_QWORD *)(a2 + 200);
  if (v14)
  {
    *v12 = *v13;
    *(_BYTE *)(a1 + 124) = *(_BYTE *)(a2 + 124);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
    *(_QWORD *)(a1 + 140) = *(_QWORD *)(a2 + 140);
    *(_DWORD *)(a1 + 148) = *(_DWORD *)(a2 + 148);
    v15 = *(_QWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 152) = v15;
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    v16 = *(_QWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 176) = v16;
    *(_DWORD *)(a1 + 184) = *(_DWORD *)(a2 + 184);
    v17 = *(_QWORD *)(a2 + 192);
    *(_QWORD *)(a1 + 192) = v17;
    *(_QWORD *)(a1 + 200) = v14;
    swift_bridgeObjectRetain(v15);
    swift_bridgeObjectRetain(v16);
    swift_bridgeObjectRetain(v17);
    swift_bridgeObjectRetain(v14);
  }
  else
  {
    v18 = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 168) = v18;
    *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
    *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
    v19 = *(_OWORD *)(a2 + 136);
    *(_OWORD *)v12 = *(_OWORD *)v13;
    *(_OWORD *)(a1 + 136) = v19;
  }
  *(_DWORD *)(a1 + 208) = *(_DWORD *)(a2 + 208);
  *(_BYTE *)(a1 + 212) = *(_BYTE *)(a2 + 212);
  *(_DWORD *)(a1 + 216) = *(_DWORD *)(a2 + 216);
  *(_BYTE *)(a1 + 220) = *(_BYTE *)(a2 + 220);
  v20 = (_DWORD *)(a1 + 224);
  v21 = (_DWORD *)(a2 + 224);
  v22 = *(_QWORD *)(a2 + 304);
  if (v22)
  {
    *v20 = *v21;
    *(_BYTE *)(a1 + 228) = *(_BYTE *)(a2 + 228);
    *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
    *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
    *(_QWORD *)(a1 + 244) = *(_QWORD *)(a2 + 244);
    *(_DWORD *)(a1 + 252) = *(_DWORD *)(a2 + 252);
    v23 = *(_QWORD *)(a2 + 256);
    *(_QWORD *)(a1 + 256) = v23;
    *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
    v24 = *(_QWORD *)(a2 + 280);
    *(_QWORD *)(a1 + 280) = v24;
    *(_DWORD *)(a1 + 288) = *(_DWORD *)(a2 + 288);
    v25 = *(_QWORD *)(a2 + 296);
    *(_QWORD *)(a1 + 296) = v25;
    *(_QWORD *)(a1 + 304) = v22;
    swift_bridgeObjectRetain(v23);
    swift_bridgeObjectRetain(v24);
    swift_bridgeObjectRetain(v25);
    swift_bridgeObjectRetain(v22);
  }
  else
  {
    v26 = *(_OWORD *)(a2 + 272);
    *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
    *(_OWORD *)(a1 + 272) = v26;
    *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
    *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
    v27 = *(_OWORD *)(a2 + 240);
    *(_OWORD *)v20 = *(_OWORD *)v21;
    *(_OWORD *)(a1 + 240) = v27;
  }
  *(_DWORD *)(a1 + 312) = *(_DWORD *)(a2 + 312);
  *(_BYTE *)(a1 + 316) = *(_BYTE *)(a2 + 316);
  *(_DWORD *)(a1 + 320) = *(_DWORD *)(a2 + 320);
  *(_BYTE *)(a1 + 324) = *(_BYTE *)(a2 + 324);
  v28 = (_DWORD *)(a1 + 328);
  v29 = (_DWORD *)(a2 + 328);
  v30 = *(_QWORD *)(a2 + 408);
  if (v30)
  {
    *v28 = *v29;
    *(_BYTE *)(a1 + 332) = *(_BYTE *)(a2 + 332);
    *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
    *(_BYTE *)(a1 + 344) = *(_BYTE *)(a2 + 344);
    *(_DWORD *)(a1 + 348) = *(_DWORD *)(a2 + 348);
    *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
    v31 = *(_QWORD *)(a2 + 360);
    *(_QWORD *)(a1 + 360) = v31;
    *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
    v32 = *(_QWORD *)(a2 + 384);
    *(_QWORD *)(a1 + 384) = v32;
    *(_DWORD *)(a1 + 392) = *(_DWORD *)(a2 + 392);
    v33 = *(_QWORD *)(a2 + 400);
    *(_QWORD *)(a1 + 400) = v33;
    *(_QWORD *)(a1 + 408) = v30;
    swift_bridgeObjectRetain(v31);
    swift_bridgeObjectRetain(v32);
    swift_bridgeObjectRetain(v33);
    swift_bridgeObjectRetain(v30);
  }
  else
  {
    v34 = *(_OWORD *)(a2 + 376);
    *(_OWORD *)(a1 + 360) = *(_OWORD *)(a2 + 360);
    *(_OWORD *)(a1 + 376) = v34;
    *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
    *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
    v35 = *(_OWORD *)(a2 + 344);
    *(_OWORD *)v28 = *(_OWORD *)v29;
    *(_OWORD *)(a1 + 344) = v35;
  }
  *(_DWORD *)(a1 + 416) = *(_DWORD *)(a2 + 416);
  *(_BYTE *)(a1 + 420) = *(_BYTE *)(a2 + 420);
  *(_DWORD *)(a1 + 424) = *(_DWORD *)(a2 + 424);
  *(_BYTE *)(a1 + 428) = *(_BYTE *)(a2 + 428);
  v36 = (_DWORD *)(a1 + 432);
  v37 = (_DWORD *)(a2 + 432);
  v38 = *(_QWORD *)(a2 + 512);
  if (v38)
  {
    *v36 = *v37;
    *(_BYTE *)(a1 + 436) = *(_BYTE *)(a2 + 436);
    *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
    *(_BYTE *)(a1 + 448) = *(_BYTE *)(a2 + 448);
    *(_DWORD *)(a1 + 452) = *(_DWORD *)(a2 + 452);
    *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
    v39 = *(_QWORD *)(a2 + 464);
    *(_QWORD *)(a1 + 464) = v39;
    *(_OWORD *)(a1 + 472) = *(_OWORD *)(a2 + 472);
    v40 = *(_QWORD *)(a2 + 488);
    *(_QWORD *)(a1 + 488) = v40;
    *(_DWORD *)(a1 + 496) = *(_DWORD *)(a2 + 496);
    v41 = *(_QWORD *)(a2 + 504);
    *(_QWORD *)(a1 + 504) = v41;
    *(_QWORD *)(a1 + 512) = v38;
    swift_bridgeObjectRetain(v39);
    swift_bridgeObjectRetain(v40);
    swift_bridgeObjectRetain(v41);
    swift_bridgeObjectRetain(v38);
  }
  else
  {
    v42 = *(_OWORD *)(a2 + 480);
    *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
    *(_OWORD *)(a1 + 480) = v42;
    *(_OWORD *)(a1 + 496) = *(_OWORD *)(a2 + 496);
    *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
    v43 = *(_OWORD *)(a2 + 448);
    *(_OWORD *)v36 = *(_OWORD *)v37;
    *(_OWORD *)(a1 + 448) = v43;
  }
  *(_DWORD *)(a1 + 520) = *(_DWORD *)(a2 + 520);
  *(_BYTE *)(a1 + 524) = *(_BYTE *)(a2 + 524);
  *(_DWORD *)(a1 + 528) = *(_DWORD *)(a2 + 528);
  *(_BYTE *)(a1 + 532) = *(_BYTE *)(a2 + 532);
  v44 = (_DWORD *)(a1 + 536);
  v45 = (_DWORD *)(a2 + 536);
  v46 = *(_QWORD *)(a2 + 616);
  if (v46)
  {
    *v44 = *v45;
    *(_BYTE *)(a1 + 540) = *(_BYTE *)(a2 + 540);
    *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
    *(_BYTE *)(a1 + 552) = *(_BYTE *)(a2 + 552);
    *(_DWORD *)(a1 + 556) = *(_DWORD *)(a2 + 556);
    *(_QWORD *)(a1 + 560) = *(_QWORD *)(a2 + 560);
    v47 = *(_QWORD *)(a2 + 568);
    *(_QWORD *)(a1 + 568) = v47;
    *(_OWORD *)(a1 + 576) = *(_OWORD *)(a2 + 576);
    v48 = *(_QWORD *)(a2 + 592);
    *(_QWORD *)(a1 + 592) = v48;
    *(_DWORD *)(a1 + 600) = *(_DWORD *)(a2 + 600);
    v49 = *(_QWORD *)(a2 + 608);
    *(_QWORD *)(a1 + 608) = v49;
    *(_QWORD *)(a1 + 616) = v46;
    swift_bridgeObjectRetain(v47);
    swift_bridgeObjectRetain(v48);
    swift_bridgeObjectRetain(v49);
    swift_bridgeObjectRetain(v46);
  }
  else
  {
    v50 = *(_OWORD *)(a2 + 584);
    *(_OWORD *)(a1 + 568) = *(_OWORD *)(a2 + 568);
    *(_OWORD *)(a1 + 584) = v50;
    *(_OWORD *)(a1 + 600) = *(_OWORD *)(a2 + 600);
    *(_QWORD *)(a1 + 616) = *(_QWORD *)(a2 + 616);
    v51 = *(_OWORD *)(a2 + 552);
    *(_OWORD *)v44 = *(_OWORD *)v45;
    *(_OWORD *)(a1 + 552) = v51;
  }
  *(_DWORD *)(a1 + 624) = *(_DWORD *)(a2 + 624);
  *(_BYTE *)(a1 + 628) = *(_BYTE *)(a2 + 628);
  *(_DWORD *)(a1 + 632) = *(_DWORD *)(a2 + 632);
  *(_BYTE *)(a1 + 636) = *(_BYTE *)(a2 + 636);
  v52 = (_DWORD *)(a1 + 640);
  v53 = (_DWORD *)(a2 + 640);
  v54 = *(_QWORD *)(a2 + 720);
  if (v54)
  {
    *v52 = *v53;
    *(_BYTE *)(a1 + 644) = *(_BYTE *)(a2 + 644);
    *(_QWORD *)(a1 + 648) = *(_QWORD *)(a2 + 648);
    *(_BYTE *)(a1 + 656) = *(_BYTE *)(a2 + 656);
    *(_DWORD *)(a1 + 660) = *(_DWORD *)(a2 + 660);
    *(_QWORD *)(a1 + 664) = *(_QWORD *)(a2 + 664);
    v55 = *(_QWORD *)(a2 + 672);
    *(_QWORD *)(a1 + 672) = v55;
    *(_OWORD *)(a1 + 680) = *(_OWORD *)(a2 + 680);
    v56 = *(_QWORD *)(a2 + 696);
    *(_QWORD *)(a1 + 696) = v56;
    *(_DWORD *)(a1 + 704) = *(_DWORD *)(a2 + 704);
    v57 = *(_QWORD *)(a2 + 712);
    *(_QWORD *)(a1 + 712) = v57;
    *(_QWORD *)(a1 + 720) = v54;
    swift_bridgeObjectRetain(v55);
    swift_bridgeObjectRetain(v56);
    swift_bridgeObjectRetain(v57);
    swift_bridgeObjectRetain(v54);
  }
  else
  {
    v58 = *(_OWORD *)(a2 + 688);
    *(_OWORD *)(a1 + 672) = *(_OWORD *)(a2 + 672);
    *(_OWORD *)(a1 + 688) = v58;
    *(_OWORD *)(a1 + 704) = *(_OWORD *)(a2 + 704);
    *(_QWORD *)(a1 + 720) = *(_QWORD *)(a2 + 720);
    v59 = *(_OWORD *)(a2 + 656);
    *(_OWORD *)v52 = *(_OWORD *)v53;
    *(_OWORD *)(a1 + 656) = v59;
  }
  *(_DWORD *)(a1 + 728) = *(_DWORD *)(a2 + 728);
  *(_BYTE *)(a1 + 732) = *(_BYTE *)(a2 + 732);
  *(_DWORD *)(a1 + 736) = *(_DWORD *)(a2 + 736);
  *(_BYTE *)(a1 + 740) = *(_BYTE *)(a2 + 740);
  v60 = (_DWORD *)(a1 + 744);
  v61 = (_DWORD *)(a2 + 744);
  v62 = *(_QWORD *)(a2 + 824);
  if (v62)
  {
    *v60 = *v61;
    *(_BYTE *)(a1 + 748) = *(_BYTE *)(a2 + 748);
    *(_QWORD *)(a1 + 752) = *(_QWORD *)(a2 + 752);
    *(_BYTE *)(a1 + 760) = *(_BYTE *)(a2 + 760);
    *(_DWORD *)(a1 + 764) = *(_DWORD *)(a2 + 764);
    *(_QWORD *)(a1 + 768) = *(_QWORD *)(a2 + 768);
    v63 = *(_QWORD *)(a2 + 776);
    *(_QWORD *)(a1 + 776) = v63;
    *(_OWORD *)(a1 + 784) = *(_OWORD *)(a2 + 784);
    v64 = *(_QWORD *)(a2 + 800);
    *(_QWORD *)(a1 + 800) = v64;
    *(_DWORD *)(a1 + 808) = *(_DWORD *)(a2 + 808);
    v65 = *(_QWORD *)(a2 + 816);
    *(_QWORD *)(a1 + 816) = v65;
    *(_QWORD *)(a1 + 824) = v62;
    swift_bridgeObjectRetain(v63);
    swift_bridgeObjectRetain(v64);
    swift_bridgeObjectRetain(v65);
    swift_bridgeObjectRetain(v62);
  }
  else
  {
    v66 = *(_OWORD *)(a2 + 792);
    *(_OWORD *)(a1 + 776) = *(_OWORD *)(a2 + 776);
    *(_OWORD *)(a1 + 792) = v66;
    *(_OWORD *)(a1 + 808) = *(_OWORD *)(a2 + 808);
    *(_QWORD *)(a1 + 824) = *(_QWORD *)(a2 + 824);
    v67 = *(_OWORD *)(a2 + 760);
    *(_OWORD *)v60 = *(_OWORD *)v61;
    *(_OWORD *)(a1 + 760) = v67;
  }
  *(_DWORD *)(a1 + 832) = *(_DWORD *)(a2 + 832);
  *(_BYTE *)(a1 + 836) = *(_BYTE *)(a2 + 836);
  *(_DWORD *)(a1 + 840) = *(_DWORD *)(a2 + 840);
  *(_WORD *)(a1 + 844) = *(_WORD *)(a2 + 844);
  *(_QWORD *)(a1 + 848) = *(_QWORD *)(a2 + 848);
  *(_BYTE *)(a1 + 856) = *(_BYTE *)(a2 + 856);
  v68 = *(_QWORD *)(a2 + 864);
  *(_QWORD *)(a1 + 864) = v68;
  swift_bridgeObjectRetain(v68);
  return a1;
}

uint64_t assignWithCopy for CRLFreehandDrawingToolkitUIStateData(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  int v28;
  int v29;
  _DWORD *v30;
  int *v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  int v53;
  int v54;
  _DWORD *v55;
  int *v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  int v78;
  int v79;
  _DWORD *v80;
  int *v81;
  uint64_t v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  int v103;
  int v104;
  _DWORD *v105;
  int *v106;
  uint64_t v107;
  int v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  int v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  int v128;
  int v129;
  _DWORD *v130;
  int *v131;
  uint64_t v132;
  int v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  int v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  int v153;
  int v154;
  _DWORD *v155;
  int *v156;
  uint64_t v157;
  int v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  int v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  __int128 v170;
  __int128 v171;
  __int128 v172;
  __int128 v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  int v178;
  int v179;
  _DWORD *v180;
  int *v181;
  uint64_t v182;
  int v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  int v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  __int128 v195;
  __int128 v196;
  __int128 v197;
  __int128 v198;
  __int128 v199;
  __int128 v200;
  __int128 v201;
  __int128 v202;
  int v203;
  int v204;
  uint64_t v205;
  uint64_t v206;

  v4 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v4;
  v5 = a1 + 16;
  v6 = (int *)(a2 + 2);
  v7 = a2[12];
  if (*(_QWORD *)(a1 + 96))
  {
    if (v7)
    {
      v8 = *v6;
      *(_BYTE *)(a1 + 20) = *((_BYTE *)a2 + 20);
      *(_DWORD *)v5 = v8;
      v9 = a2[3];
      *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
      *(_QWORD *)(a1 + 24) = v9;
      *(_DWORD *)(a1 + 36) = *((_DWORD *)a2 + 9);
      *(_DWORD *)(a1 + 40) = *((_DWORD *)a2 + 10);
      *(_DWORD *)(a1 + 44) = *((_DWORD *)a2 + 11);
      v10 = a2[6];
      *(_QWORD *)(a1 + 48) = v10;
      swift_bridgeObjectRetain(v10);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 56) = *((_DWORD *)a2 + 14);
      *(_DWORD *)(a1 + 60) = *((_DWORD *)a2 + 15);
      *(_DWORD *)(a1 + 64) = *((_DWORD *)a2 + 16);
      *(_DWORD *)(a1 + 68) = *((_DWORD *)a2 + 17);
      v11 = a2[9];
      *(_QWORD *)(a1 + 72) = v11;
      swift_bridgeObjectRetain(v11);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 80) = *((_DWORD *)a2 + 20);
      v12 = a2[11];
      *(_QWORD *)(a1 + 88) = v12;
      swift_bridgeObjectRetain(v12);
      swift_bridgeObjectRelease();
      v13 = a2[12];
      *(_QWORD *)(a1 + 96) = v13;
      swift_bridgeObjectRetain(v13);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100985D9C((_QWORD *)(a1 + 16));
      v20 = *((_OWORD *)v6 + 1);
      *(_OWORD *)v5 = *(_OWORD *)v6;
      *(_OWORD *)(v5 + 16) = v20;
      v22 = *((_OWORD *)v6 + 3);
      v21 = *((_OWORD *)v6 + 4);
      v23 = *((_OWORD *)v6 + 2);
      *(_QWORD *)(v5 + 80) = *((_QWORD *)v6 + 10);
      *(_OWORD *)(v5 + 48) = v22;
      *(_OWORD *)(v5 + 64) = v21;
      *(_OWORD *)(v5 + 32) = v23;
    }
  }
  else if (v7)
  {
    v14 = *v6;
    *(_BYTE *)(a1 + 20) = *((_BYTE *)a2 + 20);
    *(_DWORD *)v5 = v14;
    v15 = a2[3];
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    *(_QWORD *)(a1 + 24) = v15;
    *(_DWORD *)(a1 + 36) = *((_DWORD *)a2 + 9);
    *(_DWORD *)(a1 + 40) = *((_DWORD *)a2 + 10);
    *(_DWORD *)(a1 + 44) = *((_DWORD *)a2 + 11);
    v16 = a2[6];
    *(_QWORD *)(a1 + 48) = v16;
    *(_DWORD *)(a1 + 56) = *((_DWORD *)a2 + 14);
    *(_DWORD *)(a1 + 60) = *((_DWORD *)a2 + 15);
    *(_DWORD *)(a1 + 64) = *((_DWORD *)a2 + 16);
    *(_DWORD *)(a1 + 68) = *((_DWORD *)a2 + 17);
    v17 = a2[9];
    *(_QWORD *)(a1 + 72) = v17;
    *(_DWORD *)(a1 + 80) = *((_DWORD *)a2 + 20);
    v18 = a2[11];
    *(_QWORD *)(a1 + 88) = v18;
    v19 = a2[12];
    *(_QWORD *)(a1 + 96) = v19;
    swift_bridgeObjectRetain(v16);
    swift_bridgeObjectRetain(v17);
    swift_bridgeObjectRetain(v18);
    swift_bridgeObjectRetain(v19);
  }
  else
  {
    v24 = *((_OWORD *)a2 + 2);
    *(_OWORD *)v5 = *(_OWORD *)v6;
    *(_OWORD *)(a1 + 32) = v24;
    v25 = *((_OWORD *)a2 + 3);
    v26 = *((_OWORD *)a2 + 4);
    v27 = *((_OWORD *)a2 + 5);
    *(_QWORD *)(a1 + 96) = a2[12];
    *(_OWORD *)(a1 + 64) = v26;
    *(_OWORD *)(a1 + 80) = v27;
    *(_OWORD *)(a1 + 48) = v25;
  }
  v28 = *((_DWORD *)a2 + 26);
  *(_BYTE *)(a1 + 108) = *((_BYTE *)a2 + 108);
  *(_DWORD *)(a1 + 104) = v28;
  v29 = *((_DWORD *)a2 + 28);
  *(_BYTE *)(a1 + 116) = *((_BYTE *)a2 + 116);
  *(_DWORD *)(a1 + 112) = v29;
  v30 = (_DWORD *)(a1 + 120);
  v31 = (int *)(a2 + 15);
  v32 = a2[25];
  if (*(_QWORD *)(a1 + 200))
  {
    if (v32)
    {
      v33 = *v31;
      *(_BYTE *)(a1 + 124) = *((_BYTE *)a2 + 124);
      *v30 = v33;
      v34 = a2[16];
      *(_BYTE *)(a1 + 136) = *((_BYTE *)a2 + 136);
      *(_QWORD *)(a1 + 128) = v34;
      *(_DWORD *)(a1 + 140) = *((_DWORD *)a2 + 35);
      *(_DWORD *)(a1 + 144) = *((_DWORD *)a2 + 36);
      *(_DWORD *)(a1 + 148) = *((_DWORD *)a2 + 37);
      v35 = a2[19];
      *(_QWORD *)(a1 + 152) = v35;
      swift_bridgeObjectRetain(v35);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 160) = *((_DWORD *)a2 + 40);
      *(_DWORD *)(a1 + 164) = *((_DWORD *)a2 + 41);
      *(_DWORD *)(a1 + 168) = *((_DWORD *)a2 + 42);
      *(_DWORD *)(a1 + 172) = *((_DWORD *)a2 + 43);
      v36 = a2[22];
      *(_QWORD *)(a1 + 176) = v36;
      swift_bridgeObjectRetain(v36);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 184) = *((_DWORD *)a2 + 46);
      v37 = a2[24];
      *(_QWORD *)(a1 + 192) = v37;
      swift_bridgeObjectRetain(v37);
      swift_bridgeObjectRelease();
      v38 = a2[25];
      *(_QWORD *)(a1 + 200) = v38;
      swift_bridgeObjectRetain(v38);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100985D9C((_QWORD *)(a1 + 120));
      v45 = *(_OWORD *)(a2 + 17);
      *(_OWORD *)v30 = *(_OWORD *)v31;
      *(_OWORD *)(a1 + 136) = v45;
      v47 = *(_OWORD *)(a2 + 21);
      v46 = *(_OWORD *)(a2 + 23);
      v48 = *(_OWORD *)(a2 + 19);
      *(_QWORD *)(a1 + 200) = a2[25];
      *(_OWORD *)(a1 + 168) = v47;
      *(_OWORD *)(a1 + 184) = v46;
      *(_OWORD *)(a1 + 152) = v48;
    }
  }
  else if (v32)
  {
    v39 = *v31;
    *(_BYTE *)(a1 + 124) = *((_BYTE *)a2 + 124);
    *v30 = v39;
    v40 = a2[16];
    *(_BYTE *)(a1 + 136) = *((_BYTE *)a2 + 136);
    *(_QWORD *)(a1 + 128) = v40;
    *(_DWORD *)(a1 + 140) = *((_DWORD *)a2 + 35);
    *(_DWORD *)(a1 + 144) = *((_DWORD *)a2 + 36);
    *(_DWORD *)(a1 + 148) = *((_DWORD *)a2 + 37);
    v41 = a2[19];
    *(_QWORD *)(a1 + 152) = v41;
    *(_DWORD *)(a1 + 160) = *((_DWORD *)a2 + 40);
    *(_DWORD *)(a1 + 164) = *((_DWORD *)a2 + 41);
    *(_DWORD *)(a1 + 168) = *((_DWORD *)a2 + 42);
    *(_DWORD *)(a1 + 172) = *((_DWORD *)a2 + 43);
    v42 = a2[22];
    *(_QWORD *)(a1 + 176) = v42;
    *(_DWORD *)(a1 + 184) = *((_DWORD *)a2 + 46);
    v43 = a2[24];
    *(_QWORD *)(a1 + 192) = v43;
    v44 = a2[25];
    *(_QWORD *)(a1 + 200) = v44;
    swift_bridgeObjectRetain(v41);
    swift_bridgeObjectRetain(v42);
    swift_bridgeObjectRetain(v43);
    swift_bridgeObjectRetain(v44);
  }
  else
  {
    v49 = *(_OWORD *)(a2 + 17);
    *(_OWORD *)v30 = *(_OWORD *)v31;
    *(_OWORD *)(a1 + 136) = v49;
    v50 = *(_OWORD *)(a2 + 19);
    v51 = *(_OWORD *)(a2 + 21);
    v52 = *(_OWORD *)(a2 + 23);
    *(_QWORD *)(a1 + 200) = a2[25];
    *(_OWORD *)(a1 + 168) = v51;
    *(_OWORD *)(a1 + 184) = v52;
    *(_OWORD *)(a1 + 152) = v50;
  }
  v53 = *((_DWORD *)a2 + 52);
  *(_BYTE *)(a1 + 212) = *((_BYTE *)a2 + 212);
  *(_DWORD *)(a1 + 208) = v53;
  v54 = *((_DWORD *)a2 + 54);
  *(_BYTE *)(a1 + 220) = *((_BYTE *)a2 + 220);
  *(_DWORD *)(a1 + 216) = v54;
  v55 = (_DWORD *)(a1 + 224);
  v56 = (int *)(a2 + 28);
  v57 = a2[38];
  if (*(_QWORD *)(a1 + 304))
  {
    if (v57)
    {
      v58 = *v56;
      *(_BYTE *)(a1 + 228) = *((_BYTE *)a2 + 228);
      *v55 = v58;
      v59 = a2[29];
      *(_BYTE *)(a1 + 240) = *((_BYTE *)a2 + 240);
      *(_QWORD *)(a1 + 232) = v59;
      *(_DWORD *)(a1 + 244) = *((_DWORD *)a2 + 61);
      *(_DWORD *)(a1 + 248) = *((_DWORD *)a2 + 62);
      *(_DWORD *)(a1 + 252) = *((_DWORD *)a2 + 63);
      v60 = a2[32];
      *(_QWORD *)(a1 + 256) = v60;
      swift_bridgeObjectRetain(v60);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 264) = *((_DWORD *)a2 + 66);
      *(_DWORD *)(a1 + 268) = *((_DWORD *)a2 + 67);
      *(_DWORD *)(a1 + 272) = *((_DWORD *)a2 + 68);
      *(_DWORD *)(a1 + 276) = *((_DWORD *)a2 + 69);
      v61 = a2[35];
      *(_QWORD *)(a1 + 280) = v61;
      swift_bridgeObjectRetain(v61);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 288) = *((_DWORD *)a2 + 72);
      v62 = a2[37];
      *(_QWORD *)(a1 + 296) = v62;
      swift_bridgeObjectRetain(v62);
      swift_bridgeObjectRelease();
      v63 = a2[38];
      *(_QWORD *)(a1 + 304) = v63;
      swift_bridgeObjectRetain(v63);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100985D9C((_QWORD *)(a1 + 224));
      v70 = *((_OWORD *)a2 + 15);
      *(_OWORD *)v55 = *(_OWORD *)v56;
      *(_OWORD *)(a1 + 240) = v70;
      v72 = *((_OWORD *)a2 + 17);
      v71 = *((_OWORD *)a2 + 18);
      v73 = *((_OWORD *)a2 + 16);
      *(_QWORD *)(a1 + 304) = a2[38];
      *(_OWORD *)(a1 + 272) = v72;
      *(_OWORD *)(a1 + 288) = v71;
      *(_OWORD *)(a1 + 256) = v73;
    }
  }
  else if (v57)
  {
    v64 = *v56;
    *(_BYTE *)(a1 + 228) = *((_BYTE *)a2 + 228);
    *v55 = v64;
    v65 = a2[29];
    *(_BYTE *)(a1 + 240) = *((_BYTE *)a2 + 240);
    *(_QWORD *)(a1 + 232) = v65;
    *(_DWORD *)(a1 + 244) = *((_DWORD *)a2 + 61);
    *(_DWORD *)(a1 + 248) = *((_DWORD *)a2 + 62);
    *(_DWORD *)(a1 + 252) = *((_DWORD *)a2 + 63);
    v66 = a2[32];
    *(_QWORD *)(a1 + 256) = v66;
    *(_DWORD *)(a1 + 264) = *((_DWORD *)a2 + 66);
    *(_DWORD *)(a1 + 268) = *((_DWORD *)a2 + 67);
    *(_DWORD *)(a1 + 272) = *((_DWORD *)a2 + 68);
    *(_DWORD *)(a1 + 276) = *((_DWORD *)a2 + 69);
    v67 = a2[35];
    *(_QWORD *)(a1 + 280) = v67;
    *(_DWORD *)(a1 + 288) = *((_DWORD *)a2 + 72);
    v68 = a2[37];
    *(_QWORD *)(a1 + 296) = v68;
    v69 = a2[38];
    *(_QWORD *)(a1 + 304) = v69;
    swift_bridgeObjectRetain(v66);
    swift_bridgeObjectRetain(v67);
    swift_bridgeObjectRetain(v68);
    swift_bridgeObjectRetain(v69);
  }
  else
  {
    v74 = *((_OWORD *)a2 + 15);
    *(_OWORD *)v55 = *(_OWORD *)v56;
    *(_OWORD *)(a1 + 240) = v74;
    v75 = *((_OWORD *)a2 + 16);
    v76 = *((_OWORD *)a2 + 17);
    v77 = *((_OWORD *)a2 + 18);
    *(_QWORD *)(a1 + 304) = a2[38];
    *(_OWORD *)(a1 + 272) = v76;
    *(_OWORD *)(a1 + 288) = v77;
    *(_OWORD *)(a1 + 256) = v75;
  }
  v78 = *((_DWORD *)a2 + 78);
  *(_BYTE *)(a1 + 316) = *((_BYTE *)a2 + 316);
  *(_DWORD *)(a1 + 312) = v78;
  v79 = *((_DWORD *)a2 + 80);
  *(_BYTE *)(a1 + 324) = *((_BYTE *)a2 + 324);
  *(_DWORD *)(a1 + 320) = v79;
  v80 = (_DWORD *)(a1 + 328);
  v81 = (int *)(a2 + 41);
  v82 = a2[51];
  if (*(_QWORD *)(a1 + 408))
  {
    if (v82)
    {
      v83 = *v81;
      *(_BYTE *)(a1 + 332) = *((_BYTE *)a2 + 332);
      *v80 = v83;
      v84 = a2[42];
      *(_BYTE *)(a1 + 344) = *((_BYTE *)a2 + 344);
      *(_QWORD *)(a1 + 336) = v84;
      *(_DWORD *)(a1 + 348) = *((_DWORD *)a2 + 87);
      *(_DWORD *)(a1 + 352) = *((_DWORD *)a2 + 88);
      *(_DWORD *)(a1 + 356) = *((_DWORD *)a2 + 89);
      v85 = a2[45];
      *(_QWORD *)(a1 + 360) = v85;
      swift_bridgeObjectRetain(v85);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 368) = *((_DWORD *)a2 + 92);
      *(_DWORD *)(a1 + 372) = *((_DWORD *)a2 + 93);
      *(_DWORD *)(a1 + 376) = *((_DWORD *)a2 + 94);
      *(_DWORD *)(a1 + 380) = *((_DWORD *)a2 + 95);
      v86 = a2[48];
      *(_QWORD *)(a1 + 384) = v86;
      swift_bridgeObjectRetain(v86);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 392) = *((_DWORD *)a2 + 98);
      v87 = a2[50];
      *(_QWORD *)(a1 + 400) = v87;
      swift_bridgeObjectRetain(v87);
      swift_bridgeObjectRelease();
      v88 = a2[51];
      *(_QWORD *)(a1 + 408) = v88;
      swift_bridgeObjectRetain(v88);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100985D9C((_QWORD *)(a1 + 328));
      v95 = *(_OWORD *)(a2 + 43);
      *(_OWORD *)v80 = *(_OWORD *)v81;
      *(_OWORD *)(a1 + 344) = v95;
      v97 = *(_OWORD *)(a2 + 47);
      v96 = *(_OWORD *)(a2 + 49);
      v98 = *(_OWORD *)(a2 + 45);
      *(_QWORD *)(a1 + 408) = a2[51];
      *(_OWORD *)(a1 + 376) = v97;
      *(_OWORD *)(a1 + 392) = v96;
      *(_OWORD *)(a1 + 360) = v98;
    }
  }
  else if (v82)
  {
    v89 = *v81;
    *(_BYTE *)(a1 + 332) = *((_BYTE *)a2 + 332);
    *v80 = v89;
    v90 = a2[42];
    *(_BYTE *)(a1 + 344) = *((_BYTE *)a2 + 344);
    *(_QWORD *)(a1 + 336) = v90;
    *(_DWORD *)(a1 + 348) = *((_DWORD *)a2 + 87);
    *(_DWORD *)(a1 + 352) = *((_DWORD *)a2 + 88);
    *(_DWORD *)(a1 + 356) = *((_DWORD *)a2 + 89);
    v91 = a2[45];
    *(_QWORD *)(a1 + 360) = v91;
    *(_DWORD *)(a1 + 368) = *((_DWORD *)a2 + 92);
    *(_DWORD *)(a1 + 372) = *((_DWORD *)a2 + 93);
    *(_DWORD *)(a1 + 376) = *((_DWORD *)a2 + 94);
    *(_DWORD *)(a1 + 380) = *((_DWORD *)a2 + 95);
    v92 = a2[48];
    *(_QWORD *)(a1 + 384) = v92;
    *(_DWORD *)(a1 + 392) = *((_DWORD *)a2 + 98);
    v93 = a2[50];
    *(_QWORD *)(a1 + 400) = v93;
    v94 = a2[51];
    *(_QWORD *)(a1 + 408) = v94;
    swift_bridgeObjectRetain(v91);
    swift_bridgeObjectRetain(v92);
    swift_bridgeObjectRetain(v93);
    swift_bridgeObjectRetain(v94);
  }
  else
  {
    v99 = *(_OWORD *)(a2 + 43);
    *(_OWORD *)v80 = *(_OWORD *)v81;
    *(_OWORD *)(a1 + 344) = v99;
    v100 = *(_OWORD *)(a2 + 45);
    v101 = *(_OWORD *)(a2 + 47);
    v102 = *(_OWORD *)(a2 + 49);
    *(_QWORD *)(a1 + 408) = a2[51];
    *(_OWORD *)(a1 + 376) = v101;
    *(_OWORD *)(a1 + 392) = v102;
    *(_OWORD *)(a1 + 360) = v100;
  }
  v103 = *((_DWORD *)a2 + 104);
  *(_BYTE *)(a1 + 420) = *((_BYTE *)a2 + 420);
  *(_DWORD *)(a1 + 416) = v103;
  v104 = *((_DWORD *)a2 + 106);
  *(_BYTE *)(a1 + 428) = *((_BYTE *)a2 + 428);
  *(_DWORD *)(a1 + 424) = v104;
  v105 = (_DWORD *)(a1 + 432);
  v106 = (int *)(a2 + 54);
  v107 = a2[64];
  if (*(_QWORD *)(a1 + 512))
  {
    if (v107)
    {
      v108 = *v106;
      *(_BYTE *)(a1 + 436) = *((_BYTE *)a2 + 436);
      *v105 = v108;
      v109 = a2[55];
      *(_BYTE *)(a1 + 448) = *((_BYTE *)a2 + 448);
      *(_QWORD *)(a1 + 440) = v109;
      *(_DWORD *)(a1 + 452) = *((_DWORD *)a2 + 113);
      *(_DWORD *)(a1 + 456) = *((_DWORD *)a2 + 114);
      *(_DWORD *)(a1 + 460) = *((_DWORD *)a2 + 115);
      v110 = a2[58];
      *(_QWORD *)(a1 + 464) = v110;
      swift_bridgeObjectRetain(v110);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 472) = *((_DWORD *)a2 + 118);
      *(_DWORD *)(a1 + 476) = *((_DWORD *)a2 + 119);
      *(_DWORD *)(a1 + 480) = *((_DWORD *)a2 + 120);
      *(_DWORD *)(a1 + 484) = *((_DWORD *)a2 + 121);
      v111 = a2[61];
      *(_QWORD *)(a1 + 488) = v111;
      swift_bridgeObjectRetain(v111);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 496) = *((_DWORD *)a2 + 124);
      v112 = a2[63];
      *(_QWORD *)(a1 + 504) = v112;
      swift_bridgeObjectRetain(v112);
      swift_bridgeObjectRelease();
      v113 = a2[64];
      *(_QWORD *)(a1 + 512) = v113;
      swift_bridgeObjectRetain(v113);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100985D9C((_QWORD *)(a1 + 432));
      v120 = *((_OWORD *)a2 + 28);
      *(_OWORD *)v105 = *(_OWORD *)v106;
      *(_OWORD *)(a1 + 448) = v120;
      v122 = *((_OWORD *)a2 + 30);
      v121 = *((_OWORD *)a2 + 31);
      v123 = *((_OWORD *)a2 + 29);
      *(_QWORD *)(a1 + 512) = a2[64];
      *(_OWORD *)(a1 + 480) = v122;
      *(_OWORD *)(a1 + 496) = v121;
      *(_OWORD *)(a1 + 464) = v123;
    }
  }
  else if (v107)
  {
    v114 = *v106;
    *(_BYTE *)(a1 + 436) = *((_BYTE *)a2 + 436);
    *v105 = v114;
    v115 = a2[55];
    *(_BYTE *)(a1 + 448) = *((_BYTE *)a2 + 448);
    *(_QWORD *)(a1 + 440) = v115;
    *(_DWORD *)(a1 + 452) = *((_DWORD *)a2 + 113);
    *(_DWORD *)(a1 + 456) = *((_DWORD *)a2 + 114);
    *(_DWORD *)(a1 + 460) = *((_DWORD *)a2 + 115);
    v116 = a2[58];
    *(_QWORD *)(a1 + 464) = v116;
    *(_DWORD *)(a1 + 472) = *((_DWORD *)a2 + 118);
    *(_DWORD *)(a1 + 476) = *((_DWORD *)a2 + 119);
    *(_DWORD *)(a1 + 480) = *((_DWORD *)a2 + 120);
    *(_DWORD *)(a1 + 484) = *((_DWORD *)a2 + 121);
    v117 = a2[61];
    *(_QWORD *)(a1 + 488) = v117;
    *(_DWORD *)(a1 + 496) = *((_DWORD *)a2 + 124);
    v118 = a2[63];
    *(_QWORD *)(a1 + 504) = v118;
    v119 = a2[64];
    *(_QWORD *)(a1 + 512) = v119;
    swift_bridgeObjectRetain(v116);
    swift_bridgeObjectRetain(v117);
    swift_bridgeObjectRetain(v118);
    swift_bridgeObjectRetain(v119);
  }
  else
  {
    v124 = *((_OWORD *)a2 + 28);
    *(_OWORD *)v105 = *(_OWORD *)v106;
    *(_OWORD *)(a1 + 448) = v124;
    v125 = *((_OWORD *)a2 + 29);
    v126 = *((_OWORD *)a2 + 30);
    v127 = *((_OWORD *)a2 + 31);
    *(_QWORD *)(a1 + 512) = a2[64];
    *(_OWORD *)(a1 + 480) = v126;
    *(_OWORD *)(a1 + 496) = v127;
    *(_OWORD *)(a1 + 464) = v125;
  }
  v128 = *((_DWORD *)a2 + 130);
  *(_BYTE *)(a1 + 524) = *((_BYTE *)a2 + 524);
  *(_DWORD *)(a1 + 520) = v128;
  v129 = *((_DWORD *)a2 + 132);
  *(_BYTE *)(a1 + 532) = *((_BYTE *)a2 + 532);
  *(_DWORD *)(a1 + 528) = v129;
  v130 = (_DWORD *)(a1 + 536);
  v131 = (int *)(a2 + 67);
  v132 = a2[77];
  if (*(_QWORD *)(a1 + 616))
  {
    if (v132)
    {
      v133 = *v131;
      *(_BYTE *)(a1 + 540) = *((_BYTE *)a2 + 540);
      *v130 = v133;
      v134 = a2[68];
      *(_BYTE *)(a1 + 552) = *((_BYTE *)a2 + 552);
      *(_QWORD *)(a1 + 544) = v134;
      *(_DWORD *)(a1 + 556) = *((_DWORD *)a2 + 139);
      *(_DWORD *)(a1 + 560) = *((_DWORD *)a2 + 140);
      *(_DWORD *)(a1 + 564) = *((_DWORD *)a2 + 141);
      v135 = a2[71];
      *(_QWORD *)(a1 + 568) = v135;
      swift_bridgeObjectRetain(v135);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 576) = *((_DWORD *)a2 + 144);
      *(_DWORD *)(a1 + 580) = *((_DWORD *)a2 + 145);
      *(_DWORD *)(a1 + 584) = *((_DWORD *)a2 + 146);
      *(_DWORD *)(a1 + 588) = *((_DWORD *)a2 + 147);
      v136 = a2[74];
      *(_QWORD *)(a1 + 592) = v136;
      swift_bridgeObjectRetain(v136);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 600) = *((_DWORD *)a2 + 150);
      v137 = a2[76];
      *(_QWORD *)(a1 + 608) = v137;
      swift_bridgeObjectRetain(v137);
      swift_bridgeObjectRelease();
      v138 = a2[77];
      *(_QWORD *)(a1 + 616) = v138;
      swift_bridgeObjectRetain(v138);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100985D9C((_QWORD *)(a1 + 536));
      v145 = *(_OWORD *)(a2 + 69);
      *(_OWORD *)v130 = *(_OWORD *)v131;
      *(_OWORD *)(a1 + 552) = v145;
      v147 = *(_OWORD *)(a2 + 73);
      v146 = *(_OWORD *)(a2 + 75);
      v148 = *(_OWORD *)(a2 + 71);
      *(_QWORD *)(a1 + 616) = a2[77];
      *(_OWORD *)(a1 + 584) = v147;
      *(_OWORD *)(a1 + 600) = v146;
      *(_OWORD *)(a1 + 568) = v148;
    }
  }
  else if (v132)
  {
    v139 = *v131;
    *(_BYTE *)(a1 + 540) = *((_BYTE *)a2 + 540);
    *v130 = v139;
    v140 = a2[68];
    *(_BYTE *)(a1 + 552) = *((_BYTE *)a2 + 552);
    *(_QWORD *)(a1 + 544) = v140;
    *(_DWORD *)(a1 + 556) = *((_DWORD *)a2 + 139);
    *(_DWORD *)(a1 + 560) = *((_DWORD *)a2 + 140);
    *(_DWORD *)(a1 + 564) = *((_DWORD *)a2 + 141);
    v141 = a2[71];
    *(_QWORD *)(a1 + 568) = v141;
    *(_DWORD *)(a1 + 576) = *((_DWORD *)a2 + 144);
    *(_DWORD *)(a1 + 580) = *((_DWORD *)a2 + 145);
    *(_DWORD *)(a1 + 584) = *((_DWORD *)a2 + 146);
    *(_DWORD *)(a1 + 588) = *((_DWORD *)a2 + 147);
    v142 = a2[74];
    *(_QWORD *)(a1 + 592) = v142;
    *(_DWORD *)(a1 + 600) = *((_DWORD *)a2 + 150);
    v143 = a2[76];
    *(_QWORD *)(a1 + 608) = v143;
    v144 = a2[77];
    *(_QWORD *)(a1 + 616) = v144;
    swift_bridgeObjectRetain(v141);
    swift_bridgeObjectRetain(v142);
    swift_bridgeObjectRetain(v143);
    swift_bridgeObjectRetain(v144);
  }
  else
  {
    v149 = *(_OWORD *)(a2 + 69);
    *(_OWORD *)v130 = *(_OWORD *)v131;
    *(_OWORD *)(a1 + 552) = v149;
    v150 = *(_OWORD *)(a2 + 71);
    v151 = *(_OWORD *)(a2 + 73);
    v152 = *(_OWORD *)(a2 + 75);
    *(_QWORD *)(a1 + 616) = a2[77];
    *(_OWORD *)(a1 + 584) = v151;
    *(_OWORD *)(a1 + 600) = v152;
    *(_OWORD *)(a1 + 568) = v150;
  }
  v153 = *((_DWORD *)a2 + 156);
  *(_BYTE *)(a1 + 628) = *((_BYTE *)a2 + 628);
  *(_DWORD *)(a1 + 624) = v153;
  v154 = *((_DWORD *)a2 + 158);
  *(_BYTE *)(a1 + 636) = *((_BYTE *)a2 + 636);
  *(_DWORD *)(a1 + 632) = v154;
  v155 = (_DWORD *)(a1 + 640);
  v156 = (int *)(a2 + 80);
  v157 = a2[90];
  if (*(_QWORD *)(a1 + 720))
  {
    if (v157)
    {
      v158 = *v156;
      *(_BYTE *)(a1 + 644) = *((_BYTE *)a2 + 644);
      *v155 = v158;
      v159 = a2[81];
      *(_BYTE *)(a1 + 656) = *((_BYTE *)a2 + 656);
      *(_QWORD *)(a1 + 648) = v159;
      *(_DWORD *)(a1 + 660) = *((_DWORD *)a2 + 165);
      *(_DWORD *)(a1 + 664) = *((_DWORD *)a2 + 166);
      *(_DWORD *)(a1 + 668) = *((_DWORD *)a2 + 167);
      v160 = a2[84];
      *(_QWORD *)(a1 + 672) = v160;
      swift_bridgeObjectRetain(v160);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 680) = *((_DWORD *)a2 + 170);
      *(_DWORD *)(a1 + 684) = *((_DWORD *)a2 + 171);
      *(_DWORD *)(a1 + 688) = *((_DWORD *)a2 + 172);
      *(_DWORD *)(a1 + 692) = *((_DWORD *)a2 + 173);
      v161 = a2[87];
      *(_QWORD *)(a1 + 696) = v161;
      swift_bridgeObjectRetain(v161);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 704) = *((_DWORD *)a2 + 176);
      v162 = a2[89];
      *(_QWORD *)(a1 + 712) = v162;
      swift_bridgeObjectRetain(v162);
      swift_bridgeObjectRelease();
      v163 = a2[90];
      *(_QWORD *)(a1 + 720) = v163;
      swift_bridgeObjectRetain(v163);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100985D9C((_QWORD *)(a1 + 640));
      v170 = *((_OWORD *)a2 + 41);
      *(_OWORD *)v155 = *(_OWORD *)v156;
      *(_OWORD *)(a1 + 656) = v170;
      v172 = *((_OWORD *)a2 + 43);
      v171 = *((_OWORD *)a2 + 44);
      v173 = *((_OWORD *)a2 + 42);
      *(_QWORD *)(a1 + 720) = a2[90];
      *(_OWORD *)(a1 + 688) = v172;
      *(_OWORD *)(a1 + 704) = v171;
      *(_OWORD *)(a1 + 672) = v173;
    }
  }
  else if (v157)
  {
    v164 = *v156;
    *(_BYTE *)(a1 + 644) = *((_BYTE *)a2 + 644);
    *v155 = v164;
    v165 = a2[81];
    *(_BYTE *)(a1 + 656) = *((_BYTE *)a2 + 656);
    *(_QWORD *)(a1 + 648) = v165;
    *(_DWORD *)(a1 + 660) = *((_DWORD *)a2 + 165);
    *(_DWORD *)(a1 + 664) = *((_DWORD *)a2 + 166);
    *(_DWORD *)(a1 + 668) = *((_DWORD *)a2 + 167);
    v166 = a2[84];
    *(_QWORD *)(a1 + 672) = v166;
    *(_DWORD *)(a1 + 680) = *((_DWORD *)a2 + 170);
    *(_DWORD *)(a1 + 684) = *((_DWORD *)a2 + 171);
    *(_DWORD *)(a1 + 688) = *((_DWORD *)a2 + 172);
    *(_DWORD *)(a1 + 692) = *((_DWORD *)a2 + 173);
    v167 = a2[87];
    *(_QWORD *)(a1 + 696) = v167;
    *(_DWORD *)(a1 + 704) = *((_DWORD *)a2 + 176);
    v168 = a2[89];
    *(_QWORD *)(a1 + 712) = v168;
    v169 = a2[90];
    *(_QWORD *)(a1 + 720) = v169;
    swift_bridgeObjectRetain(v166);
    swift_bridgeObjectRetain(v167);
    swift_bridgeObjectRetain(v168);
    swift_bridgeObjectRetain(v169);
  }
  else
  {
    v174 = *((_OWORD *)a2 + 41);
    *(_OWORD *)v155 = *(_OWORD *)v156;
    *(_OWORD *)(a1 + 656) = v174;
    v175 = *((_OWORD *)a2 + 42);
    v176 = *((_OWORD *)a2 + 43);
    v177 = *((_OWORD *)a2 + 44);
    *(_QWORD *)(a1 + 720) = a2[90];
    *(_OWORD *)(a1 + 688) = v176;
    *(_OWORD *)(a1 + 704) = v177;
    *(_OWORD *)(a1 + 672) = v175;
  }
  v178 = *((_DWORD *)a2 + 182);
  *(_BYTE *)(a1 + 732) = *((_BYTE *)a2 + 732);
  *(_DWORD *)(a1 + 728) = v178;
  v179 = *((_DWORD *)a2 + 184);
  *(_BYTE *)(a1 + 740) = *((_BYTE *)a2 + 740);
  *(_DWORD *)(a1 + 736) = v179;
  v180 = (_DWORD *)(a1 + 744);
  v181 = (int *)(a2 + 93);
  v182 = a2[103];
  if (*(_QWORD *)(a1 + 824))
  {
    if (v182)
    {
      v183 = *v181;
      *(_BYTE *)(a1 + 748) = *((_BYTE *)a2 + 748);
      *v180 = v183;
      v184 = a2[94];
      *(_BYTE *)(a1 + 760) = *((_BYTE *)a2 + 760);
      *(_QWORD *)(a1 + 752) = v184;
      *(_DWORD *)(a1 + 764) = *((_DWORD *)a2 + 191);
      *(_DWORD *)(a1 + 768) = *((_DWORD *)a2 + 192);
      *(_DWORD *)(a1 + 772) = *((_DWORD *)a2 + 193);
      v185 = a2[97];
      *(_QWORD *)(a1 + 776) = v185;
      swift_bridgeObjectRetain(v185);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 784) = *((_DWORD *)a2 + 196);
      *(_DWORD *)(a1 + 788) = *((_DWORD *)a2 + 197);
      *(_DWORD *)(a1 + 792) = *((_DWORD *)a2 + 198);
      *(_DWORD *)(a1 + 796) = *((_DWORD *)a2 + 199);
      v186 = a2[100];
      *(_QWORD *)(a1 + 800) = v186;
      swift_bridgeObjectRetain(v186);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 808) = *((_DWORD *)a2 + 202);
      v187 = a2[102];
      *(_QWORD *)(a1 + 816) = v187;
      swift_bridgeObjectRetain(v187);
      swift_bridgeObjectRelease();
      v188 = a2[103];
      *(_QWORD *)(a1 + 824) = v188;
      swift_bridgeObjectRetain(v188);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100985D9C((_QWORD *)(a1 + 744));
      v195 = *(_OWORD *)(a2 + 95);
      *(_OWORD *)v180 = *(_OWORD *)v181;
      *(_OWORD *)(a1 + 760) = v195;
      v197 = *(_OWORD *)(a2 + 99);
      v196 = *(_OWORD *)(a2 + 101);
      v198 = *(_OWORD *)(a2 + 97);
      *(_QWORD *)(a1 + 824) = a2[103];
      *(_OWORD *)(a1 + 792) = v197;
      *(_OWORD *)(a1 + 808) = v196;
      *(_OWORD *)(a1 + 776) = v198;
    }
  }
  else if (v182)
  {
    v189 = *v181;
    *(_BYTE *)(a1 + 748) = *((_BYTE *)a2 + 748);
    *v180 = v189;
    v190 = a2[94];
    *(_BYTE *)(a1 + 760) = *((_BYTE *)a2 + 760);
    *(_QWORD *)(a1 + 752) = v190;
    *(_DWORD *)(a1 + 764) = *((_DWORD *)a2 + 191);
    *(_DWORD *)(a1 + 768) = *((_DWORD *)a2 + 192);
    *(_DWORD *)(a1 + 772) = *((_DWORD *)a2 + 193);
    v191 = a2[97];
    *(_QWORD *)(a1 + 776) = v191;
    *(_DWORD *)(a1 + 784) = *((_DWORD *)a2 + 196);
    *(_DWORD *)(a1 + 788) = *((_DWORD *)a2 + 197);
    *(_DWORD *)(a1 + 792) = *((_DWORD *)a2 + 198);
    *(_DWORD *)(a1 + 796) = *((_DWORD *)a2 + 199);
    v192 = a2[100];
    *(_QWORD *)(a1 + 800) = v192;
    *(_DWORD *)(a1 + 808) = *((_DWORD *)a2 + 202);
    v193 = a2[102];
    *(_QWORD *)(a1 + 816) = v193;
    v194 = a2[103];
    *(_QWORD *)(a1 + 824) = v194;
    swift_bridgeObjectRetain(v191);
    swift_bridgeObjectRetain(v192);
    swift_bridgeObjectRetain(v193);
    swift_bridgeObjectRetain(v194);
  }
  else
  {
    v199 = *(_OWORD *)(a2 + 95);
    *(_OWORD *)v180 = *(_OWORD *)v181;
    *(_OWORD *)(a1 + 760) = v199;
    v200 = *(_OWORD *)(a2 + 97);
    v201 = *(_OWORD *)(a2 + 99);
    v202 = *(_OWORD *)(a2 + 101);
    *(_QWORD *)(a1 + 824) = a2[103];
    *(_OWORD *)(a1 + 792) = v201;
    *(_OWORD *)(a1 + 808) = v202;
    *(_OWORD *)(a1 + 776) = v200;
  }
  v203 = *((_DWORD *)a2 + 208);
  *(_BYTE *)(a1 + 836) = *((_BYTE *)a2 + 836);
  *(_DWORD *)(a1 + 832) = v203;
  v204 = *((_DWORD *)a2 + 210);
  *(_BYTE *)(a1 + 844) = *((_BYTE *)a2 + 844);
  *(_DWORD *)(a1 + 840) = v204;
  *(_BYTE *)(a1 + 845) = *((_BYTE *)a2 + 845);
  v205 = a2[106];
  *(_BYTE *)(a1 + 856) = *((_BYTE *)a2 + 856);
  *(_QWORD *)(a1 + 848) = v205;
  v206 = a2[108];
  *(_QWORD *)(a1 + 864) = v206;
  swift_bridgeObjectRetain(v206);
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *sub_100985D9C(_QWORD *a1)
{
  destroy for CRLColorData(a1);
  return a1;
}

void *initializeWithTake for CRLFreehandDrawingToolkitUIStateData(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x368uLL);
}

uint64_t assignWithTake for CRLFreehandDrawingToolkitUIStateData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  _DWORD *v8;
  _DWORD *v9;
  __int128 v10;
  __int128 v11;
  _DWORD *v12;
  _DWORD *v13;
  __int128 v14;
  __int128 v15;
  _DWORD *v16;
  _DWORD *v17;
  __int128 v18;
  __int128 v19;
  _DWORD *v20;
  _DWORD *v21;
  __int128 v22;
  __int128 v23;
  _DWORD *v24;
  _DWORD *v25;
  __int128 v26;
  __int128 v27;
  _DWORD *v28;
  _DWORD *v29;
  __int128 v30;
  __int128 v31;
  _OWORD *v32;
  _OWORD *v33;
  __int128 v34;
  __int128 v35;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = a1 + 16;
  v5 = a2 + 16;
  if (*(_QWORD *)(a1 + 96))
  {
    if (*(_QWORD *)(a2 + 96))
    {
      *(_DWORD *)v4 = *(_DWORD *)v5;
      *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
      *(_QWORD *)(a1 + 36) = *(_QWORD *)(a2 + 36);
      *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_100985D9C((_QWORD *)(a1 + 16));
  }
  v6 = *(_OWORD *)(v5 + 48);
  *(_OWORD *)(v4 + 32) = *(_OWORD *)(v5 + 32);
  *(_OWORD *)(v4 + 48) = v6;
  *(_OWORD *)(v4 + 64) = *(_OWORD *)(v5 + 64);
  *(_QWORD *)(v4 + 80) = *(_QWORD *)(v5 + 80);
  v7 = *(_OWORD *)(v5 + 16);
  *(_OWORD *)v4 = *(_OWORD *)v5;
  *(_OWORD *)(v4 + 16) = v7;
LABEL_6:
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 108) = *(_BYTE *)(a2 + 108);
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 116) = *(_BYTE *)(a2 + 116);
  v8 = (_DWORD *)(a1 + 120);
  v9 = (_DWORD *)(a2 + 120);
  if (*(_QWORD *)(a1 + 200))
  {
    if (*(_QWORD *)(a2 + 200))
    {
      *v8 = *v9;
      *(_BYTE *)(a1 + 124) = *(_BYTE *)(a2 + 124);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
      *(_QWORD *)(a1 + 140) = *(_QWORD *)(a2 + 140);
      *(_DWORD *)(a1 + 148) = *(_DWORD *)(a2 + 148);
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
      *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 184) = *(_DWORD *)(a2 + 184);
      *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_100985D9C((_QWORD *)(a1 + 120));
  }
  v10 = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = v10;
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  v11 = *(_OWORD *)(a2 + 136);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(a1 + 136) = v11;
LABEL_11:
  *(_DWORD *)(a1 + 208) = *(_DWORD *)(a2 + 208);
  *(_BYTE *)(a1 + 212) = *(_BYTE *)(a2 + 212);
  *(_DWORD *)(a1 + 216) = *(_DWORD *)(a2 + 216);
  *(_BYTE *)(a1 + 220) = *(_BYTE *)(a2 + 220);
  v12 = (_DWORD *)(a1 + 224);
  v13 = (_DWORD *)(a2 + 224);
  if (*(_QWORD *)(a1 + 304))
  {
    if (*(_QWORD *)(a2 + 304))
    {
      *v12 = *v13;
      *(_BYTE *)(a1 + 228) = *(_BYTE *)(a2 + 228);
      *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
      *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
      *(_QWORD *)(a1 + 244) = *(_QWORD *)(a2 + 244);
      *(_DWORD *)(a1 + 252) = *(_DWORD *)(a2 + 252);
      *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
      *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 288) = *(_DWORD *)(a2 + 288);
      *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    sub_100985D9C((_QWORD *)(a1 + 224));
  }
  v14 = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 272) = v14;
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  v15 = *(_OWORD *)(a2 + 240);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_OWORD *)(a1 + 240) = v15;
LABEL_16:
  *(_DWORD *)(a1 + 312) = *(_DWORD *)(a2 + 312);
  *(_BYTE *)(a1 + 316) = *(_BYTE *)(a2 + 316);
  *(_DWORD *)(a1 + 320) = *(_DWORD *)(a2 + 320);
  *(_BYTE *)(a1 + 324) = *(_BYTE *)(a2 + 324);
  v16 = (_DWORD *)(a1 + 328);
  v17 = (_DWORD *)(a2 + 328);
  if (*(_QWORD *)(a1 + 408))
  {
    if (*(_QWORD *)(a2 + 408))
    {
      *v16 = *v17;
      *(_BYTE *)(a1 + 332) = *(_BYTE *)(a2 + 332);
      *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
      *(_BYTE *)(a1 + 344) = *(_BYTE *)(a2 + 344);
      *(_DWORD *)(a1 + 348) = *(_DWORD *)(a2 + 348);
      *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
      *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
      *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 392) = *(_DWORD *)(a2 + 392);
      *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
    sub_100985D9C((_QWORD *)(a1 + 328));
  }
  v18 = *(_OWORD *)(a2 + 376);
  *(_OWORD *)(a1 + 360) = *(_OWORD *)(a2 + 360);
  *(_OWORD *)(a1 + 376) = v18;
  *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
  *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
  v19 = *(_OWORD *)(a2 + 344);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *(_OWORD *)(a1 + 344) = v19;
LABEL_21:
  *(_DWORD *)(a1 + 416) = *(_DWORD *)(a2 + 416);
  *(_BYTE *)(a1 + 420) = *(_BYTE *)(a2 + 420);
  *(_DWORD *)(a1 + 424) = *(_DWORD *)(a2 + 424);
  *(_BYTE *)(a1 + 428) = *(_BYTE *)(a2 + 428);
  v20 = (_DWORD *)(a1 + 432);
  v21 = (_DWORD *)(a2 + 432);
  if (*(_QWORD *)(a1 + 512))
  {
    if (*(_QWORD *)(a2 + 512))
    {
      *v20 = *v21;
      *(_BYTE *)(a1 + 436) = *(_BYTE *)(a2 + 436);
      *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
      *(_BYTE *)(a1 + 448) = *(_BYTE *)(a2 + 448);
      *(_DWORD *)(a1 + 452) = *(_DWORD *)(a2 + 452);
      *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
      *(_QWORD *)(a1 + 464) = *(_QWORD *)(a2 + 464);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 472) = *(_OWORD *)(a2 + 472);
      *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 496) = *(_DWORD *)(a2 + 496);
      *(_QWORD *)(a1 + 504) = *(_QWORD *)(a2 + 504);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
      swift_bridgeObjectRelease();
      goto LABEL_26;
    }
    sub_100985D9C((_QWORD *)(a1 + 432));
  }
  v22 = *(_OWORD *)(a2 + 480);
  *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 480) = v22;
  *(_OWORD *)(a1 + 496) = *(_OWORD *)(a2 + 496);
  *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
  v23 = *(_OWORD *)(a2 + 448);
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *(_OWORD *)(a1 + 448) = v23;
LABEL_26:
  *(_DWORD *)(a1 + 520) = *(_DWORD *)(a2 + 520);
  *(_BYTE *)(a1 + 524) = *(_BYTE *)(a2 + 524);
  *(_DWORD *)(a1 + 528) = *(_DWORD *)(a2 + 528);
  *(_BYTE *)(a1 + 532) = *(_BYTE *)(a2 + 532);
  v24 = (_DWORD *)(a1 + 536);
  v25 = (_DWORD *)(a2 + 536);
  if (*(_QWORD *)(a1 + 616))
  {
    if (*(_QWORD *)(a2 + 616))
    {
      *v24 = *v25;
      *(_BYTE *)(a1 + 540) = *(_BYTE *)(a2 + 540);
      *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
      *(_BYTE *)(a1 + 552) = *(_BYTE *)(a2 + 552);
      *(_DWORD *)(a1 + 556) = *(_DWORD *)(a2 + 556);
      *(_QWORD *)(a1 + 560) = *(_QWORD *)(a2 + 560);
      *(_QWORD *)(a1 + 568) = *(_QWORD *)(a2 + 568);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 576) = *(_OWORD *)(a2 + 576);
      *(_QWORD *)(a1 + 592) = *(_QWORD *)(a2 + 592);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 600) = *(_DWORD *)(a2 + 600);
      *(_QWORD *)(a1 + 608) = *(_QWORD *)(a2 + 608);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 616) = *(_QWORD *)(a2 + 616);
      swift_bridgeObjectRelease();
      goto LABEL_31;
    }
    sub_100985D9C((_QWORD *)(a1 + 536));
  }
  v26 = *(_OWORD *)(a2 + 584);
  *(_OWORD *)(a1 + 568) = *(_OWORD *)(a2 + 568);
  *(_OWORD *)(a1 + 584) = v26;
  *(_OWORD *)(a1 + 600) = *(_OWORD *)(a2 + 600);
  *(_QWORD *)(a1 + 616) = *(_QWORD *)(a2 + 616);
  v27 = *(_OWORD *)(a2 + 552);
  *(_OWORD *)v24 = *(_OWORD *)v25;
  *(_OWORD *)(a1 + 552) = v27;
LABEL_31:
  *(_DWORD *)(a1 + 624) = *(_DWORD *)(a2 + 624);
  *(_BYTE *)(a1 + 628) = *(_BYTE *)(a2 + 628);
  *(_DWORD *)(a1 + 632) = *(_DWORD *)(a2 + 632);
  *(_BYTE *)(a1 + 636) = *(_BYTE *)(a2 + 636);
  v28 = (_DWORD *)(a1 + 640);
  v29 = (_DWORD *)(a2 + 640);
  if (*(_QWORD *)(a1 + 720))
  {
    if (*(_QWORD *)(a2 + 720))
    {
      *v28 = *v29;
      *(_BYTE *)(a1 + 644) = *(_BYTE *)(a2 + 644);
      *(_QWORD *)(a1 + 648) = *(_QWORD *)(a2 + 648);
      *(_BYTE *)(a1 + 656) = *(_BYTE *)(a2 + 656);
      *(_DWORD *)(a1 + 660) = *(_DWORD *)(a2 + 660);
      *(_QWORD *)(a1 + 664) = *(_QWORD *)(a2 + 664);
      *(_QWORD *)(a1 + 672) = *(_QWORD *)(a2 + 672);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 680) = *(_OWORD *)(a2 + 680);
      *(_QWORD *)(a1 + 696) = *(_QWORD *)(a2 + 696);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 704) = *(_DWORD *)(a2 + 704);
      *(_QWORD *)(a1 + 712) = *(_QWORD *)(a2 + 712);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 720) = *(_QWORD *)(a2 + 720);
      swift_bridgeObjectRelease();
      goto LABEL_36;
    }
    sub_100985D9C((_QWORD *)(a1 + 640));
  }
  v30 = *(_OWORD *)(a2 + 688);
  *(_OWORD *)(a1 + 672) = *(_OWORD *)(a2 + 672);
  *(_OWORD *)(a1 + 688) = v30;
  *(_OWORD *)(a1 + 704) = *(_OWORD *)(a2 + 704);
  *(_QWORD *)(a1 + 720) = *(_QWORD *)(a2 + 720);
  v31 = *(_OWORD *)(a2 + 656);
  *(_OWORD *)v28 = *(_OWORD *)v29;
  *(_OWORD *)(a1 + 656) = v31;
LABEL_36:
  *(_DWORD *)(a1 + 728) = *(_DWORD *)(a2 + 728);
  *(_BYTE *)(a1 + 732) = *(_BYTE *)(a2 + 732);
  *(_DWORD *)(a1 + 736) = *(_DWORD *)(a2 + 736);
  *(_BYTE *)(a1 + 740) = *(_BYTE *)(a2 + 740);
  v32 = (_OWORD *)(a1 + 744);
  v33 = (_OWORD *)(a2 + 744);
  if (!*(_QWORD *)(a1 + 824))
  {
LABEL_40:
    v34 = *(_OWORD *)(a2 + 792);
    *(_OWORD *)(a1 + 776) = *(_OWORD *)(a2 + 776);
    *(_OWORD *)(a1 + 792) = v34;
    *(_OWORD *)(a1 + 808) = *(_OWORD *)(a2 + 808);
    *(_QWORD *)(a1 + 824) = *(_QWORD *)(a2 + 824);
    v35 = *(_OWORD *)(a2 + 760);
    *v32 = *v33;
    *(_OWORD *)(a1 + 760) = v35;
    goto LABEL_41;
  }
  if (!*(_QWORD *)(a2 + 824))
  {
    sub_100985D9C((_QWORD *)(a1 + 744));
    goto LABEL_40;
  }
  *(_DWORD *)v32 = *(_DWORD *)v33;
  *(_BYTE *)(a1 + 748) = *(_BYTE *)(a2 + 748);
  *(_QWORD *)(a1 + 752) = *(_QWORD *)(a2 + 752);
  *(_BYTE *)(a1 + 760) = *(_BYTE *)(a2 + 760);
  *(_DWORD *)(a1 + 764) = *(_DWORD *)(a2 + 764);
  *(_QWORD *)(a1 + 768) = *(_QWORD *)(a2 + 768);
  *(_QWORD *)(a1 + 776) = *(_QWORD *)(a2 + 776);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 784) = *(_OWORD *)(a2 + 784);
  *(_QWORD *)(a1 + 800) = *(_QWORD *)(a2 + 800);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 808) = *(_DWORD *)(a2 + 808);
  *(_QWORD *)(a1 + 816) = *(_QWORD *)(a2 + 816);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 824) = *(_QWORD *)(a2 + 824);
  swift_bridgeObjectRelease();
LABEL_41:
  *(_DWORD *)(a1 + 832) = *(_DWORD *)(a2 + 832);
  *(_BYTE *)(a1 + 836) = *(_BYTE *)(a2 + 836);
  *(_DWORD *)(a1 + 840) = *(_DWORD *)(a2 + 840);
  *(_WORD *)(a1 + 844) = *(_WORD *)(a2 + 844);
  *(_QWORD *)(a1 + 848) = *(_QWORD *)(a2 + 848);
  *(_BYTE *)(a1 + 856) = *(_BYTE *)(a2 + 856);
  *(_QWORD *)(a1 + 864) = *(_QWORD *)(a2 + 864);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLFreehandDrawingToolkitUIStateData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 872))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 864);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLFreehandDrawingToolkitUIStateData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 840) = 0u;
    *(_OWORD *)(result + 856) = 0u;
    *(_OWORD *)(result + 824) = 0u;
    *(_OWORD *)(result + 808) = 0u;
    *(_OWORD *)(result + 792) = 0u;
    *(_OWORD *)(result + 776) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 872) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 864) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 872) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLFreehandDrawingToolkitUIStateData()
{
  return &type metadata for CRLFreehandDrawingToolkitUIStateData;
}

unint64_t sub_1009866E4()
{
  unint64_t result;

  result = qword_1013FE608;
  if (!qword_1013FE608)
  {
    result = swift_getWitnessTable(&unk_100F1DC28, &type metadata for CRLFreehandDrawingToolkitUIStateData);
    atomic_store(result, (unint64_t *)&qword_1013FE608);
  }
  return result;
}

unint64_t sub_100986730()
{
  unint64_t result;

  result = qword_1013FE610;
  if (!qword_1013FE610)
  {
    result = swift_getWitnessTable(&unk_100F1DCF8, &type metadata for CRLFreehandDrawingToolkitUIStateData);
    atomic_store(result, (unint64_t *)&qword_1013FE610);
  }
  return result;
}

unint64_t sub_100986778()
{
  unint64_t result;

  result = qword_1013FE618;
  if (!qword_1013FE618)
  {
    result = swift_getWitnessTable(&unk_100F1DCD0, &type metadata for CRLFreehandDrawingToolkitUIStateData);
    atomic_store(result, (unint64_t *)&qword_1013FE618);
  }
  return result;
}

unint64_t sub_1009867C0()
{
  unint64_t result;

  result = qword_1013FE620;
  if (!qword_1013FE620)
  {
    result = swift_getWitnessTable(&unk_100F1DD68, &type metadata for CRLFreehandDrawingToolkitUIStateData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FE620);
  }
  return result;
}

unint64_t sub_100986808()
{
  unint64_t result;

  result = qword_1013FE628;
  if (!qword_1013FE628)
  {
    result = swift_getWitnessTable(&unk_100F1DE78, &type metadata for CRLFreehandDrawingToolkitUIStateData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FE628);
  }
  return result;
}

unint64_t sub_100986850()
{
  unint64_t result;

  result = qword_1013FE630;
  if (!qword_1013FE630)
  {
    result = swift_getWitnessTable(&unk_100F1DE40, &type metadata for CRLFreehandDrawingToolkitUIStateData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FE630);
  }
  return result;
}

unint64_t sub_100986898()
{
  unint64_t result;

  result = qword_1013FE638;
  if (!qword_1013FE638)
  {
    result = swift_getWitnessTable(&unk_100F1DDA0, &type metadata for CRLFreehandDrawingToolkitUIStateData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FE638);
  }
  return result;
}

unint64_t sub_1009868E0()
{
  unint64_t result;

  result = qword_1013FE640;
  if (!qword_1013FE640)
  {
    result = swift_getWitnessTable(&unk_100F1DE18, &type metadata for CRLFreehandDrawingToolkitUIStateData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FE640);
  }
  return result;
}

unint64_t sub_100986928()
{
  unint64_t result;

  result = qword_1013FE648;
  if (!qword_1013FE648)
  {
    result = swift_getWitnessTable(&unk_100F1DDF0, &type metadata for CRLFreehandDrawingToolkitUIStateData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FE648);
  }
  return result;
}

unint64_t sub_100986970()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013FE650;
  if (!qword_1013FE650)
  {
    v1 = sub_1004CB6A4(&qword_1013FE658);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1013FE650);
  }
  return result;
}

unint64_t sub_1009869C0()
{
  unint64_t result;

  result = qword_1013FE660;
  if (!qword_1013FE660)
  {
    result = swift_getWitnessTable(&unk_100F1DD20, &type metadata for CRLFreehandDrawingToolkitUIStateData);
    atomic_store(result, (unint64_t *)&qword_1013FE660);
  }
  return result;
}

unint64_t sub_100986A08()
{
  unint64_t result;

  result = qword_1013FE668;
  if (!qword_1013FE668)
  {
    result = swift_getWitnessTable(&unk_100F1DC70, &type metadata for CRLFreehandDrawingToolkitUIStateData);
    atomic_store(result, (unint64_t *)&qword_1013FE668);
  }
  return result;
}

uint64_t sub_100986A4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t result;

  if (a11)
  {
    swift_bridgeObjectRetain(a10);
    swift_bridgeObjectRetain(a11);
    swift_bridgeObjectRetain(a5);
    return swift_bridgeObjectRetain(a8);
  }
  return result;
}

uint64_t sub_100986AA8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;

  v2 = *(_QWORD *)(a1 + 88);
  v3 = *(_QWORD *)(a1 + 96);
  v4 = *(_QWORD *)(a1 + 104);
  v5 = *(_QWORD *)(a1 + 112);
  v6 = *(_QWORD *)(a1 + 120);
  v7 = *(_QWORD *)(a1 + 128);
  v8 = *(_QWORD *)(a1 + 136);
  v9 = *(_QWORD *)(a1 + 144);
  v12 = *(_OWORD *)(a1 + 152);
  v10 = *(_QWORD *)(a1 + 168);
  sub_1009844E8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80));
  sub_1009844E8(v2, v3, v4, v5, v6, v7, v8, v9, v12, *((uint64_t *)&v12 + 1), v10);
  return a1;
}

uint64_t sub_100986B64(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __int128 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;

  v71 = *(_QWORD *)(a1 + 128);
  v72 = *(_QWORD *)(a1 + 120);
  v70 = *(_QWORD *)(a1 + 136);
  v67 = *(_QWORD *)(a1 + 152);
  v68 = *(_QWORD *)(a1 + 144);
  v65 = *(_QWORD *)(a1 + 168);
  v66 = *(_QWORD *)(a1 + 160);
  v61 = *(_QWORD *)(a1 + 176);
  v50 = *(_OWORD *)(a1 + 184);
  v49 = *(_QWORD *)(a1 + 200);
  v64 = *(_QWORD *)(a1 + 224);
  v59 = *(_QWORD *)(a1 + 240);
  v60 = *(_QWORD *)(a1 + 232);
  v57 = *(_QWORD *)(a1 + 256);
  v58 = *(_QWORD *)(a1 + 248);
  v54 = *(_QWORD *)(a1 + 272);
  v55 = *(_QWORD *)(a1 + 264);
  v53 = *(_QWORD *)(a1 + 280);
  v46 = *(_OWORD *)(a1 + 288);
  v41 = *(_QWORD *)(a1 + 304);
  v2 = *(_QWORD *)(a1 + 344);
  v62 = *(_QWORD *)(a1 + 336);
  v63 = *(_QWORD *)(a1 + 328);
  v44 = *(_OWORD *)(a1 + 392);
  v51 = *(_OWORD *)(a1 + 496);
  v56 = *(_OWORD *)(a1 + 600);
  v69 = *(_OWORD *)(a1 + 704);
  v73 = *(_OWORD *)(a1 + 808);
  v3 = *(_QWORD *)(a1 + 352);
  v4 = *(_QWORD *)(a1 + 360);
  v6 = *(_QWORD *)(a1 + 368);
  v5 = *(_QWORD *)(a1 + 376);
  v7 = *(_QWORD *)(a1 + 384);
  v8 = *(_QWORD *)(a1 + 408);
  v9 = *(_QWORD *)(a1 + 432);
  v12 = *(_QWORD *)(a1 + 440);
  v13 = *(_QWORD *)(a1 + 448);
  v14 = *(_QWORD *)(a1 + 456);
  v15 = *(_QWORD *)(a1 + 464);
  v16 = *(_QWORD *)(a1 + 472);
  v17 = *(_QWORD *)(a1 + 480);
  v10 = *(_QWORD *)(a1 + 512);
  v19 = *(_QWORD *)(a1 + 488);
  v20 = *(_QWORD *)(a1 + 536);
  v21 = *(_QWORD *)(a1 + 544);
  v22 = *(_QWORD *)(a1 + 552);
  v23 = *(_QWORD *)(a1 + 560);
  v24 = *(_QWORD *)(a1 + 568);
  v25 = *(_QWORD *)(a1 + 576);
  v26 = *(_QWORD *)(a1 + 584);
  v18 = *(_QWORD *)(a1 + 616);
  v28 = *(_QWORD *)(a1 + 592);
  v29 = *(_QWORD *)(a1 + 640);
  v30 = *(_QWORD *)(a1 + 648);
  v31 = *(_QWORD *)(a1 + 656);
  v32 = *(_QWORD *)(a1 + 664);
  v33 = *(_QWORD *)(a1 + 672);
  v34 = *(_QWORD *)(a1 + 680);
  v35 = *(_QWORD *)(a1 + 688);
  v27 = *(_QWORD *)(a1 + 720);
  v37 = *(_QWORD *)(a1 + 696);
  v38 = *(_QWORD *)(a1 + 744);
  v39 = *(_QWORD *)(a1 + 752);
  v40 = *(_QWORD *)(a1 + 760);
  v42 = *(_QWORD *)(a1 + 768);
  v43 = *(_QWORD *)(a1 + 776);
  v45 = *(_QWORD *)(a1 + 784);
  v47 = *(_QWORD *)(a1 + 792);
  v48 = *(_QWORD *)(a1 + 800);
  v36 = *(_QWORD *)(a1 + 824);
  v52 = *(_QWORD *)(a1 + 864);
  sub_100986A4C(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96));
  sub_100986A4C(v72, v71, v70, v68, v67, v66, v65, v61, v50, *((uint64_t *)&v50 + 1), v49);
  sub_100986A4C(v64, v60, v59, v58, v57, v55, v54, v53, v46, *((uint64_t *)&v46 + 1), v41);
  sub_100986A4C(v63, v62, v2, v3, v4, v6, v5, v7, v44, *((uint64_t *)&v44 + 1), v8);
  sub_100986A4C(v9, v12, v13, v14, v15, v16, v17, v19, v51, *((uint64_t *)&v51 + 1), v10);
  sub_100986A4C(v20, v21, v22, v23, v24, v25, v26, v28, v56, *((uint64_t *)&v56 + 1), v18);
  sub_100986A4C(v29, v30, v31, v32, v33, v34, v35, v37, v69, *((uint64_t *)&v69 + 1), v27);
  sub_100986A4C(v38, v39, v40, v42, v43, v45, v47, v48, v73, *((uint64_t *)&v73 + 1), v36);
  swift_bridgeObjectRetain(v52);
  return a1;
}

unint64_t sub_100986EAC()
{
  unint64_t result;

  result = qword_1013FE6A8;
  if (!qword_1013FE6A8)
  {
    result = swift_getWitnessTable(&unk_100F1DEC8, &type metadata for CRLFreehandDrawingToolkitUIStateData);
    atomic_store(result, (unint64_t *)&qword_1013FE6A8);
  }
  return result;
}

unint64_t sub_100986EF0()
{
  unint64_t result;

  result = qword_1013FE6B0;
  if (!qword_1013FE6B0)
  {
    result = swift_getWitnessTable(&unk_100F1DEA0, &type metadata for CRLFreehandDrawingToolkitUIStateData);
    atomic_store(result, (unint64_t *)&qword_1013FE6B0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for CRLFreehandDrawingToolkitUIStateData.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xE5)
    goto LABEL_17;
  if (a2 + 27 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 27) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 27;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 27;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 27;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x1C;
  v8 = v6 - 28;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLFreehandDrawingToolkitUIStateData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 27 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 27) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE4)
    return ((uint64_t (*)(void))((char *)&loc_100987010 + 4 * byte_100F1DBF1[v4]))();
  *a1 = a2 + 27;
  return ((uint64_t (*)(void))((char *)sub_100987044 + 4 * byte_100F1DBEC[v4]))();
}

uint64_t sub_100987044(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10098704C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100987054);
  return result;
}

uint64_t sub_100987060(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100987068);
  *(_BYTE *)result = a2 + 27;
  return result;
}

uint64_t sub_10098706C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100987074(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLFreehandDrawingToolkitUIStateData.CodingKeys()
{
  return &type metadata for CRLFreehandDrawingToolkitUIStateData.CodingKeys;
}

unint64_t sub_100987094()
{
  unint64_t result;

  result = qword_1013FE6B8;
  if (!qword_1013FE6B8)
  {
    result = swift_getWitnessTable(&unk_100F1DFC4, &type metadata for CRLFreehandDrawingToolkitUIStateData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FE6B8);
  }
  return result;
}

uint64_t destroy for CRLLayerTransformByScaleFactorTransition(uint64_t a1)
{
  swift_unknownObjectWeakDestroy(a1);
  return swift_unknownObjectWeakDestroy(a1 + 48);
}

uint64_t initializeWithCopy for CRLLayerTransformByScaleFactorTransition(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100987170(a1, a2, a3, (uint64_t (*)(void))&_swift_unknownObjectWeakCopyInit);
}

uint64_t assignWithCopy for CRLLayerTransformByScaleFactorTransition(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  v4 = swift_unknownObjectWeakCopyAssign(a1, a2);
  *(_QWORD *)(v4 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(a2 + 16);
  v5 = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(v4 + 40) = *(_BYTE *)(a2 + 40);
  *(_OWORD *)(v4 + 24) = v5;
  swift_unknownObjectWeakCopyAssign(v4 + 48, a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

uint64_t initializeWithTake for CRLLayerTransformByScaleFactorTransition(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100987170(a1, a2, a3, (uint64_t (*)(void))&_swift_unknownObjectWeakTakeInit);
}

uint64_t sub_100987170(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v7;

  v7 = a4();
  *(_OWORD *)(v7 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(v7 + 24) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(v7 + 40) = *(_BYTE *)(a2 + 40);
  ((void (*)(uint64_t, uint64_t))a4)(v7 + 48, a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

uint64_t assignWithTake for CRLLayerTransformByScaleFactorTransition(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_unknownObjectWeakTakeAssign(a1, a2);
  *(_OWORD *)(v4 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(v4 + 24) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(v4 + 40) = *(_BYTE *)(a2 + 40);
  swift_unknownObjectWeakTakeAssign(v4 + 48, a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLLayerTransformByScaleFactorTransition(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 57))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 56);
  if (v3 >= 2)
    v4 = ((v3 + 2147483646) & 0x7FFFFFFF) - 1;
  else
    v4 = -2;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLLayerTransformByScaleFactorTransition(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 57) = 0;
    if (a2)
      *(_BYTE *)(result + 56) = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLLayerTransformByScaleFactorTransition()
{
  return &type metadata for CRLLayerTransformByScaleFactorTransition;
}

void sub_1009872E8(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  void *v5;
  double v6;
  double v7;
  id v8;
  char v9;
  CGFloat v10;
  id v11;
  CGFloat v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _OWORD *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  unint64_t v33;
  _QWORD v34[4];
  _QWORD v35[4];
  _OWORD v36[8];
  _OWORD v37[8];
  CATransform3D v38;
  CATransform3D v39;

  v2 = v1;
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = 0.5;
    v7 = 0.5;
    if ((*(_BYTE *)(v2 + 40) & 1) == 0)
    {
      v6 = *(double *)(v2 + 24);
      v7 = *(double *)(v2 + 32);
    }
    v8 = (id)swift_unknownObjectWeakLoadStrong(v2 + 48);
    if (!v8)
      v8 = v5;
    v9 = *(_BYTE *)(v2 + 56) & 1;
    v10 = *(double *)(v2 + 8);
    v11 = v8;
    CATransform3DMakeScale(&v39, v10, v10, 1.0);
    sub_1008FCCF0(&v39.m11, v8, v5, v9, v36, v6, v7);

    v12 = *(double *)(v2 + 16);
    v13 = v11;
    CATransform3DMakeScale(&v38, v12, v12, 1.0);
    sub_1008FCCF0(&v38.m11, v8, v5, v9, v37, v6, v7);

    type metadata accessor for CATransform3D(0);
    v15 = v14;
    v35[3] = v14;
    v16 = (_OWORD *)swift_allocObject(&unk_10128C930, 144, 7);
    v34[3] = v15;
    v35[0] = v16;
    v17 = v36[5];
    v16[5] = v36[4];
    v16[6] = v17;
    v18 = v36[7];
    v16[7] = v36[6];
    v16[8] = v18;
    v19 = v36[1];
    v16[1] = v36[0];
    v16[2] = v19;
    v20 = v36[3];
    v16[3] = v36[2];
    v16[4] = v20;
    v21 = (_OWORD *)swift_allocObject(&unk_10128C930, 144, 7);
    v34[0] = v21;
    v22 = v37[5];
    v21[5] = v37[4];
    v21[6] = v22;
    v23 = v37[7];
    v21[7] = v37[6];
    v21[8] = v23;
    v24 = v37[1];
    v21[1] = v37[0];
    v21[2] = v24;
    v25 = v37[3];
    v21[3] = v37[2];
    v21[4] = v25;
    v30 = 0u;
    v31 = 0u;
    v28 = 0u;
    v29 = 0u;
    LOBYTE(v32) = 26;
    *((_QWORD *)&v32 + 1) = 0x726F66736E617274;
    v33 = 0xE90000000000006DLL;
    sub_10056B738((uint64_t)v35, (uint64_t)&v28);
    sub_10056B738((uint64_t)v34, (uint64_t)&v30);
    v26 = v31;
    *(_OWORD *)(a1 + 32) = v30;
    *(_OWORD *)(a1 + 48) = v26;
    *(_OWORD *)(a1 + 64) = v32;
    *(_QWORD *)(a1 + 80) = v33;
    v27 = v29;
    *(_OWORD *)a1 = v28;
    *(_OWORD *)(a1 + 16) = v27;

  }
  else
  {
    *(_QWORD *)(a1 + 80) = 0;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)(a1 + 64) = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
  }
}

uint64_t sub_100987554@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t result;
  char v9;

  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_BYTE *)(v1 + 40);
  result = swift_unknownObjectWeakLoadStrong(v1 + 48);
  v9 = *(_BYTE *)(v1 + 56);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = result;
  *(_BYTE *)(a1 + 48) = v9;
  *(_BYTE *)(a1 + 256) = 58;
  return result;
}

unint64_t sub_1009875C4(uint64_t a1)
{
  unint64_t result;

  result = sub_1009875E8();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1009875E8()
{
  unint64_t result;

  result = qword_1013FE6C0;
  if (!qword_1013FE6C0)
  {
    result = swift_getWitnessTable(&unk_100F1E12C, &type metadata for CRLLayerTransformByScaleFactorTransition);
    atomic_store(result, (unint64_t *)&qword_1013FE6C0);
  }
  return result;
}

BOOL sub_10098762C(uint64_t a1, uint64_t a2)
{
  void *Strong;
  uint64_t v5;
  void *v6;
  id v7;
  char v8;
  _BOOL8 result;
  uint64_t v10;
  id v11;
  char v12;
  int v13;
  int v14;
  _BOOL4 v15;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(a1);
  v5 = swift_unknownObjectWeakLoadStrong(a2);
  v6 = (void *)v5;
  if (Strong)
  {
    if (!v5)
      goto LABEL_19;
    sub_1004EB280();
    v7 = Strong;
    v8 = static NSObject.== infix(_:_:)(v7, v6);

    if ((v8 & 1) == 0)
      return 0;
  }
  else if (v5)
  {
    goto LABEL_6;
  }
  if (*(double *)(a1 + 8) != *(double *)(a2 + 8) || *(double *)(a1 + 16) != *(double *)(a2 + 16))
    return 0;
  if ((*(_BYTE *)(a1 + 40) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 40))
      return 0;
LABEL_15:
    Strong = (void *)swift_unknownObjectWeakLoadStrong(a1 + 48);
    v10 = swift_unknownObjectWeakLoadStrong(a2 + 48);
    v6 = (void *)v10;
    if (Strong)
    {
      if (v10)
      {
        sub_1004EB280();
        v11 = Strong;
        v12 = static NSObject.== infix(_:_:)(v11, v6);

        if ((v12 & 1) == 0)
          return 0;
        goto LABEL_23;
      }
LABEL_19:

      return 0;
    }
    if (!v10)
    {
LABEL_23:
      v13 = *(unsigned __int8 *)(a1 + 56);
      v14 = *(unsigned __int8 *)(a2 + 56);
      if (v13 != 2)
      {
        v15 = (v13 & 1) == 0;
        return v14 != 2 && ((v15 ^ v14) & 1) != 0;
      }
      return v14 == 2;
    }
LABEL_6:

    return 0;
  }
  if ((*(_BYTE *)(a2 + 40) & 1) != 0)
    return 0;
  result = 0;
  if (*(double *)(a1 + 24) == *(double *)(a2 + 24) && *(double *)(a1 + 32) == *(double *)(a2 + 32))
    goto LABEL_15;
  return result;
}

uint64_t sub_1009877B8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 144, 7);
}

void sub_1009877C8(void *a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Class isa;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  id v23;
  char *v24;
  uint64_t KeyPath;
  id v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  id v30;
  CKRecordID v31;
  Swift::String v32;
  unsigned __int8 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38[6];

  v5 = v4;
  v6 = v3;
  isa = UUID._bridgeToObjectiveC()().super.isa;
  v10 = objc_msgSend(a1, "getBoardItemForUUID:", isa);

  if (!v10)
    goto LABEL_22;
  v11 = type metadata accessor for CRLWPShapeItem(0);
  v12 = swift_dynamicCastClass(v10, v11);
  if (!v12)
  {

LABEL_22:
    sub_100757E04(&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Commands/CRLWPRemoveHyperlinkCommand.swift", 102, 2, 23, "Unable to retrieve board item", 29, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Unable to retrieve board item");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commit(with:transaction:undoable:)", 34, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Commands/CRLWPRemoveHyperlinkCommand.swift", 102, 2u, 23, (uint64_t)"Unable to retrieve board item", 29, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v31, v32);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
    return;
  }
  v13 = v12;
  v14 = *(void **)(v12 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v14)
    goto LABEL_20;
  v15 = v6 + OBJC_IVAR____TtC8Freeform27CRLWPRemoveHyperlinkCommand_range;
  v17 = *(_QWORD *)(v6 + OBJC_IVAR____TtC8Freeform27CRLWPRemoveHyperlinkCommand_range);
  v16 = *(_QWORD *)(v15 + 8);
  v36 = v17;
  v37 = v16;
  if (__OFSUB__(v16, v17))
  {
    __break(1u);
    goto LABEL_18;
  }
  v33 = a3;
  if (v16 == v17)
  {
    v34 = 0;
    v35 = 0;

    v18 = v34;
    v19 = v35;
    v27 = v17;
    if (v18 != NSNotFound.getter(v20))
    {
      v27 = v18 + v19;
      if (__OFADD__(v18, v19))
      {
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
      }
      v17 = v18;
    }
  }
  else
  {
    v21 = v14;
    sub_1007D7CB8(v17, v16, v38);
    v22 = (unsigned int (*)(char *, uint64_t, uint64_t))v38[4];
    v23 = v38[5];
    v24 = (char *)v38[3];

    KeyPath = swift_getKeyPath(byte_100F1E1B8);
    v26 = v21;
    sub_1007EA98C(KeyPath, v24, v22, (uint64_t)v23, v26, &v36);

    v5 = v4;
    swift_release(KeyPath);

    v17 = v36;
    v27 = v37;
  }
  if (__OFSUB__(v27, v17))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v27 - v17 < 1)
  {

  }
  else
  {
    v28 = v10;
    sub_100DBEE64(v13, (uint64_t)&off_10127C5E0);

    if (v5)
    {

    }
    else
    {
      v29 = swift_getKeyPath(byte_100F1E1B8);
      sub_100C66EDC(v29, v17, v27);
      swift_release(v29);
      v30 = v28;
      sub_100DB0D78(v13, (uint64_t)&off_10127C5E0, v33);

    }
  }
}

uint64_t sub_100987B78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8Freeform27CRLWPRemoveHyperlinkCommand_boardItemID;
  v2 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

id sub_100987BB4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLWPRemoveHyperlinkCommand(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100987C24()
{
  return type metadata accessor for CRLWPRemoveHyperlinkCommand(0);
}

uint64_t type metadata accessor for CRLWPRemoveHyperlinkCommand(uint64_t a1)
{
  uint64_t result;

  result = qword_1013FE6F0;
  if (!qword_1013FE6F0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLWPRemoveHyperlinkCommand);
  return result;
}

uint64_t sub_100987C68(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100F1E190;
    result = swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 200);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_100987CDC()
{
  id v0;
  NSString v1;
  NSString v2;
  NSString v3;
  id v4;
  uint64_t v5;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, v3);

  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  return v5;
}

void destroy for CRLCanvasExporter(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));

}

uint64_t initializeWithCopy for CRLCanvasExporter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_WORD *)(a1 + 49) = *(_WORD *)(a2 + 49);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v5 = *(void **)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v5;
  v6 = *(void **)(a2 + 112);
  v7 = *(void **)(a2 + 120);
  *(_QWORD *)(a1 + 112) = v6;
  *(_QWORD *)(a1 + 120) = v7;
  swift_bridgeObjectRetain(v3);
  v8 = v5;
  v9 = v6;
  v10 = v7;
  return a1;
}

uint64_t assignWithCopy for CRLCanvasExporter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v5;
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRelease(v4);
  v6 = *(_OWORD *)(a2 + 16);
  v7 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_BYTE *)(a1 + 50) = *(_BYTE *)(a2 + 50);
  v8 = *(_OWORD *)(a2 + 56);
  v9 = *(_OWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = v9;
  *(_OWORD *)(a1 + 56) = v8;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  v10 = *(void **)(a2 + 104);
  v11 = *(void **)(a1 + 104);
  *(_QWORD *)(a1 + 104) = v10;
  v12 = v10;

  v13 = *(void **)(a2 + 112);
  v14 = *(void **)(a1 + 112);
  *(_QWORD *)(a1 + 112) = v13;
  v15 = v13;

  v16 = *(void **)(a2 + 120);
  v17 = *(void **)(a1 + 120);
  *(_QWORD *)(a1 + 120) = v16;
  v18 = v16;

  return a1;
}

uint64_t assignWithTake for CRLCanvasExporter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  void *v6;
  void *v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease(v4);
  v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_BYTE *)(a1 + 50) = *(_BYTE *)(a2 + 50);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);

  v6 = *(void **)(a1 + 112);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);

  v7 = *(void **)(a1 + 120);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);

  return a1;
}

uint64_t getEnumTagSinglePayload for CRLCanvasExporter(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 128))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 104);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLCanvasExporter(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 128) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 104) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 128) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLCanvasExporter()
{
  return &type metadata for CRLCanvasExporter;
}

uint64_t sub_1009880C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD v23[4];

  v6 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v6);
  v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004DAEB4(a1, (uint64_t)v8);
  v9 = type metadata accessor for TaskPriority(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_10056805C((uint64_t)v8);
    v12 = 4096;
    v13 = *(_QWORD *)(a3 + 16);
    if (v13)
    {
LABEL_3:
      v14 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType(v13);
      swift_unknownObjectRetain(v13);
      v16 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v14);
      v18 = v17;
      swift_unknownObjectRelease(v13);
      goto LABEL_6;
    }
  }
  else
  {
    v19 = TaskPriority.rawValue.getter(v11);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    v12 = v19 | 0x1000;
    v13 = *(_QWORD *)(a3 + 16);
    if (v13)
      goto LABEL_3;
  }
  v16 = 0;
  v18 = 0;
LABEL_6:
  v20 = swift_allocObject(&unk_10128CA68, 32, 7);
  *(_QWORD *)(v20 + 16) = a2;
  *(_QWORD *)(v20 + 24) = a3;
  if (v18 | v16)
  {
    v23[0] = 0;
    v23[1] = 0;
    v21 = v23;
    v23[2] = v16;
    v23[3] = v18;
  }
  else
  {
    v21 = 0;
  }
  return swift_task_create(v12, v21, (char *)&type metadata for () + 8, &unk_1013FE730);
}

uint64_t sub_10098824C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD v24[4];

  v6 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v6);
  v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004DAEB4(a1, (uint64_t)v8);
  v9 = type metadata accessor for TaskPriority(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_10056805C((uint64_t)v8);
    v12 = 4096;
    v13 = *(_QWORD *)(a3 + 16);
    if (v13)
    {
LABEL_3:
      v14 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType(v13);
      swift_unknownObjectRetain(v13);
      v16 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v14);
      v18 = v17;
      swift_unknownObjectRelease(v13);
      goto LABEL_6;
    }
  }
  else
  {
    v19 = TaskPriority.rawValue.getter(v11);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    v12 = v19 | 0x1000;
    v13 = *(_QWORD *)(a3 + 16);
    if (v13)
      goto LABEL_3;
  }
  v16 = 0;
  v18 = 0;
LABEL_6:
  v20 = swift_allocObject(&unk_10128CAE0, 32, 7);
  *(_QWORD *)(v20 + 16) = a2;
  *(_QWORD *)(v20 + 24) = a3;
  v21 = sub_1004B804C((uint64_t *)&unk_1013E18E0);
  if (v18 | v16)
  {
    v24[0] = 0;
    v24[1] = 0;
    v22 = v24;
    v24[2] = v16;
    v24[3] = v18;
  }
  else
  {
    v22 = 0;
  }
  return swift_task_create(v12, v22, v21, &unk_1013FE750);
}

uint64_t sub_1009883DC(uint64_t a1, uint64_t a2, char a3, char a4)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 + 24) = a2;
  *(_QWORD *)(v5 + 32) = v4;
  *(_BYTE *)(v5 + 57) = a4;
  *(_BYTE *)(v5 + 56) = a3;
  *(_QWORD *)(v5 + 16) = a1;
  return swift_task_switch(sub_100988400, 0, 0);
}

uint64_t sub_100988400()
{
  uint64_t v0;
  Swift::String v1;
  NSString v2;
  NSString v3;
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;

  v1._countAndFlagsBits = 6710384;
  v1._object = (void *)0xE300000000000000;
  if (String.hasSuffix(_:)(v1))
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"exportAsPDFToTemporaryURL(title:forPrinting:scenesOnly:)", 56, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLCanvasExporter.swift", 87, 2, 77, "The title should not already have pdf applied to it.", 52, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"exportAsPDFToTemporaryURL(title:forPrinting:scenesOnly:)", 56, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLCanvasExporter.swift", 87, 2u, 77, (uint64_t)"The title should not already have pdf applied to it.", 52, 2u);
  }
  v2 = String._bridgeToObjectiveC()();
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v2, "crl_filenameFromDisplayNameWithExtension:", v3);

  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v7 = v6;

  v8 = type metadata accessor for CRLTemporaryFile(0);
  swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
  v9 = sub_10076740C(v5, v7);
  *(_QWORD *)(v0 + 40) = v9;
  v10 = (uint64_t)v9 + OBJC_IVAR____TtC8Freeform16CRLTemporaryFile_url;
  v11 = (_QWORD *)swift_task_alloc(dword_1013FE70C);
  *(_QWORD *)(v0 + 48) = v11;
  *v11 = v0;
  v11[1] = sub_1009885D0;
  return sub_100988894(v10, *(_BYTE *)(v0 + 56), *(_BYTE *)(v0 + 57));
}

uint64_t sub_1009885D0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *v0;
  v3 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 48));
  return (*(uint64_t (**)(_QWORD))(v3 + 8))(*(_QWORD *)(v1 + 40));
}

unint64_t sub_10098861C(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  double v4;
  unint64_t result;
  uint64_t v6;
  double v7;
  double v8;
  double v9;
  double v10;
  _BYTE *v11;
  uint64_t v12;
  double v13;
  double v14;
  double v15;
  double v16;
  _BYTE v17[40];
  _BYTE v18[40];
  _BYTE v19[8];
  uint64_t v20;
  _BYTE v21[16];
  double v22;
  double v23;
  char v24;
  _BYTE v25[16];
  double v26;
  double v27;
  char v28;

  v3 = *(void **)(v1 + 104);
  objc_msgSend(v3, "setIsPrinting:", 1);
  if ((*(_BYTE *)(v1 + 49) & 1) != 0)
  {
    sub_1004C4938(v1 + 8, (uint64_t)v19, &qword_1013FE738);
    result = sub_1004C4938((uint64_t)v19, (uint64_t)&v20, &qword_1013FE738);
    if (!v20)
      return result;
    result = *(_QWORD *)(v1 + 96);
    if ((v20 & 0xC000000000000001) == 0)
    {
      if ((result & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (result < *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v6 = *(_QWORD *)(v20 + 8 * result + 32) + OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect;
        v7 = *(double *)v6;
        v8 = *(double *)(v6 + 8);
        v9 = *(double *)(v6 + 16);
        v10 = *(double *)(v6 + 24);
        if ((*(_BYTE *)(v1 + 50) & 1) == 0)
        {
LABEL_8:
          objc_msgSend(v3, "setUnscaledClipRect:", v7, v8, v9, v10);
          sub_1004C4938(v1 + 16, (uint64_t)v21, &qword_1013E1B30);
          v11 = v21;
LABEL_13:
          sub_1004C4938((uint64_t)v11, (uint64_t)v25, &qword_1013E1B30);
          v4 = 1.0;
          if ((v28 & 1) == 0)
          {
            v16 = v26 / v9;
            if (v27 / v10 < v26 / v9)
              v16 = v27 / v10;
            v4 = floor(v16 * 100.0) / 100.0;
          }
          goto LABEL_17;
        }
LABEL_10:
        sub_1004C4938(v1 + 56, (uint64_t)v18, &qword_1013E1B30);
        sub_1004C4938((uint64_t)v18, (uint64_t)v21, &qword_1013E1B30);
        if ((v24 & 1) == 0)
        {
          v7 = sub_100062EB4(1, v22, v23, v7, v8, v9, v10);
          v8 = v13;
          v9 = v14;
          v10 = v15;
        }
        objc_msgSend(v3, "setUnscaledClipRect:", v7, v8, v9, v10);
        sub_1004C4938(v1 + 16, (uint64_t)v17, &qword_1013E1B30);
        v11 = v17;
        goto LABEL_13;
      }
      __break(1u);
      return result;
    }
    v12 = specialized _ArrayBuffer._getElementSlowPath(_:)(result, v20);
    v7 = *(double *)(v12 + OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect);
    v8 = *(double *)(v12 + OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect + 8);
    v9 = *(double *)(v12 + OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect + 16);
    v10 = *(double *)(v12 + OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect + 24);
    swift_unknownObjectRelease(v12);
    if ((*(_BYTE *)(v1 + 50) & 1) == 0)
      goto LABEL_8;
    goto LABEL_10;
  }
  objc_msgSend(v3, "setUnscaledClipRect:", CGRectInfinite.origin.x, CGRectInfinite.origin.y, CGRectInfinite.size.width, CGRectInfinite.size.height);
  v4 = *(double *)v1;
LABEL_17:
  objc_msgSend(v3, "setViewScale:", v4);
  return (unint64_t)objc_msgSend(v3, "drawPageInContext:createPage:includeMargin:", a1, 1, 0);
}

uint64_t sub_100988894(uint64_t a1, char a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(v4 + 90) = a3;
  *(_BYTE *)(v4 + 89) = a2;
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = v3;
  v5 = type metadata accessor for URL(0);
  *(_QWORD *)(v4 + 32) = v5;
  v6 = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v4 + 40) = v6;
  v7 = *(_QWORD *)(v6 + 64);
  *(_QWORD *)(v4 + 48) = v7;
  *(_QWORD *)(v4 + 56) = swift_task_alloc((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C(&qword_1013E01F0);
  *(_QWORD *)(v4 + 64) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100988924, 0, 0);
}

uint64_t sub_100988924()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  _QWORD *v22;

  v2 = *(_QWORD *)(v0 + 56);
  v1 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  v5 = *(__int128 **)(v0 + 24);
  v6 = *(_QWORD *)(v0 + 32);
  v7 = *(_BYTE *)(v0 + 90);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v1, 1, 1, v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v8, v6);
  v10 = *(unsigned __int8 *)(v4 + 80);
  v11 = (v10 + 32) & ~v10;
  v12 = (v3 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  v13 = swift_allocObject(&unk_10128CA40, v12 + 129, v10 | 7);
  *(_QWORD *)(v13 + 16) = 0;
  *(_QWORD *)(v13 + 24) = 0;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v13 + v11, v2, v6);
  v14 = v13 + v12;
  v15 = *v5;
  v16 = v5[1];
  v17 = v5[3];
  *(_OWORD *)(v14 + 32) = v5[2];
  *(_OWORD *)(v14 + 48) = v17;
  *(_OWORD *)v14 = v15;
  *(_OWORD *)(v14 + 16) = v16;
  v18 = v5[4];
  v19 = v5[5];
  v20 = v5[7];
  *(_OWORD *)(v14 + 96) = v5[6];
  *(_OWORD *)(v14 + 112) = v20;
  *(_OWORD *)(v14 + 64) = v18;
  *(_OWORD *)(v14 + 80) = v19;
  *(_BYTE *)(v14 + 128) = v7;
  sub_1006D3DDC(v5);
  v21 = sub_1009880C4(v1, (uint64_t)&unk_1013FE720, v13);
  *(_QWORD *)(v0 + 72) = v21;
  sub_10056805C(v1);
  v22 = (_QWORD *)swift_task_alloc(async function pointer to Task.result.getter[1]);
  *(_QWORD *)(v0 + 80) = v22;
  *v22 = v0;
  v22[1] = sub_100988AA4;
  return Task.result.getter(v0 + 88, v21, (char *)&type metadata for () + 8, &type metadata for Never, &protocol witness table for Never);
}

uint64_t sub_100988AA4()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 80));
  return swift_task_switch(sub_100988AF8, 0, 0);
}

uint64_t sub_100988AF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  void *v5;
  NSString v6;
  uint64_t v7;
  unint64_t v8;
  Class isa;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = *(unsigned __int8 *)(v0 + 89);
  v5 = (void *)objc_opt_self(CRLAnalyticsLogger);
  v6 = String._bridgeToObjectiveC()();
  if (v4)
    v7 = 3;
  else
    v7 = 1;
  v8 = _s8Freeform23CRLAnalyticsFeatureUsedC14featurePayload3forSDySSSo8NSObjectCGAA0bC4NameO_tFZ_0(v7);
  sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v5, "sendEventInDomain:lazily:eventPayload:", v6, 1, isa, swift_bridgeObjectRelease(v8).n128_f64[0]);

  swift_release(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100988C08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;

  *(_BYTE *)(v6 + 97) = a6;
  *(_QWORD *)(v6 + 240) = a4;
  *(_QWORD *)(v6 + 248) = a5;
  return swift_task_switch(sub_100988C24, 0, 0);
}

uint64_t sub_100988C24@<X0>(NSURL *a1@<X8>)
{
  uint64_t v1;
  const __CFURL *v2;
  const __CFURL *v3;
  CGContextRef v4;
  int v5;
  uint64_t v6;
  uint64_t *v7;
  char **v8;
  uint64_t *v9;
  void *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  double v18;
  CGFloat v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  __n128 v32;
  Class isa;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  _QWORD *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  CGContext *v45;
  unint64_t v46;
  void *v47;

  URL._bridgeToObjectiveC()(a1);
  v3 = v2;
  v4 = CGPDFContextCreateWithURL(v2, 0, 0);

  if (v4)
  {
    v5 = *(unsigned __int8 *)(v1 + 97);
    v6 = *(_QWORD *)(v1 + 248);
    v7 = *(uint64_t **)(v6 + 112);
    v8 = &selRef_imageByApplyingSymbolConfiguration_;
    objc_msgSend(v7, "setCgContext:", v4);
    sub_100410F48((uint64_t)v4, v7);
    v9 = *(uint64_t **)(v6 + 104);
    *(_QWORD *)(v1 + 48) = sub_1009892C0;
    *(_QWORD *)(v1 + 56) = 0;
    *(_QWORD *)(v1 + 16) = _NSConcreteStackBlock;
    *(_QWORD *)(v1 + 24) = *(_QWORD *)"";
    *(_QWORD *)(v1 + 32) = sub_100989600;
    *(_QWORD *)(v1 + 40) = &unk_10128CA80;
    v10 = _Block_copy((const void *)(v1 + 16));
    objc_msgSend(v9, "setPostRenderAction:", v10, swift_release(*(_QWORD *)(v1 + 56)).n128_f64[0]);
    _Block_release(v10);
    if (v5 == 1)
    {
      v11 = (_QWORD *)(v1 + 224);
      sub_1004C4938(*(_QWORD *)(v1 + 248) + 8, v1 + 224, &qword_1013FE738);
      sub_1004C4938(v1 + 224, v1 + 232, &qword_1013FE738);
      v12 = *(_QWORD *)(v1 + 232);
      if (!v12)
      {
LABEL_39:

        return (*(uint64_t (**)(void))(v1 + 8))();
      }
      if ((unint64_t)v12 >> 62)
        goto LABEL_33;
      v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
      sub_1006CD6A4((_QWORD *)(v1 + 224));
      v14 = v9;
      while (v13)
      {
        v40 = v11;
        v41 = v7;
        v15 = *(_QWORD *)(v1 + 248);
        v7 = &qword_1013E1B30;
        sub_1004C4938(v15 + 56, v1 + 184, &qword_1013E1B30);
        sub_1004C4938(v15 + 16, v1 + 104, &qword_1013E1B30);
        v16 = 0;
        v43 = *(_QWORD *)(v15 + 120);
        v42 = OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer;
        v45 = v4;
        v46 = v12 & 0xC000000000000001;
        v44 = (_QWORD *)v13;
        while (v46)
        {
          v17 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v16, v12);
          v11 = (_QWORD *)(v16 + 1);
          if (__OFADD__(v16, 1))
            goto LABEL_32;
LABEL_12:
          v47 = v17;
          v18 = *(double *)&v17[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect];
          v19 = *(double *)&v17[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect + 8];
          v20 = *(double *)&v17[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect + 16];
          v21 = *(double *)&v17[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect + 24];
          sub_1004C4938(v1 + 184, v1 + 144, &qword_1013E1B30);
          if ((*(_BYTE *)(v1 + 176) & 1) == 0)
          {
            v18 = sub_100062EB4(1, *(double *)(v1 + 160), *(double *)(v1 + 168), v18, v19, v20, v21);
            v19 = v22;
            v20 = v23;
            v21 = v24;
          }
          v8 = (char **)v12;
          objc_msgSend(v9, "setUnscaledClipRect:", v18, v19, v20, v21);
          sub_1004C4938(v1 + 104, v1 + 64, &qword_1013E1B30);
          v25 = 1.0;
          if ((*(_BYTE *)(v1 + 96) & 1) == 0)
          {
            v26 = *(double *)(v1 + 80) / v20;
            if (*(double *)(v1 + 88) / v21 < v26)
              v26 = *(double *)(v1 + 88) / v21;
            v25 = floor(v26 * 100.0) / 100.0;
          }
          objc_msgSend(v9, "setViewScale:", v25);
          objc_msgSend(v9, "drawPageInContext:createPage:includeMargin:", v4, 1, 0);
          v7 = (uint64_t *)objc_msgSend(objc_allocWithZone((Class)CRLCanvasImager), "initWithBoard:", v43);
          v27 = *(char **)(v43 + v42);
          v28 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
          v29 = *(_QWORD *)&v27[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems];
          v30 = v27;
          if (!v29)
          {
            sub_100740DA4();
            v29 = *(_QWORD *)&v27[v28];
          }
          if (v29)
            v31 = v29;
          else
            v31 = (uint64_t)_swiftEmptyArrayStorage;
          swift_bridgeObjectRetain(v29);

          if ((unint64_t)v31 >> 62)
          {
            if (v31 < 0)
              v35 = v31;
            else
              v35 = v31 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v31);
            v36 = sub_1004B804C(&qword_1013E0670);
            _bridgeCocoaArray<A>(_:)(v35, v36);
            swift_bridgeObjectRelease();
          }
          else
          {
            v32 = swift_bridgeObjectRetain(v31);
            dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v32);
          }
          v12 = (uint64_t)v8;
          swift_bridgeObjectRelease();
          sub_1004B804C(&qword_1013E0670);
          isa = Array._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v7, "setInfos:", isa, swift_bridgeObjectRelease().n128_f64[0]);

          *(_QWORD *)(v1 + 48) = sub_1009892C0;
          *(_QWORD *)(v1 + 56) = 0;
          *(_QWORD *)(v1 + 16) = _NSConcreteStackBlock;
          *(_QWORD *)(v1 + 24) = *(_QWORD *)"";
          *(_QWORD *)(v1 + 32) = sub_100989600;
          *(_QWORD *)(v1 + 40) = &unk_10128CAA8;
          v34 = _Block_copy((const void *)(v1 + 16));
          objc_msgSend(v7, "setPostRenderAction:", v34, swift_release(*(_QWORD *)(v1 + 56)).n128_f64[0]);

          _Block_release(v34);
          ++v16;
          v9 = v7;
          v4 = v45;
          if (v11 == v44)
          {
            sub_10051FD74(v40);

            v7 = v41;
            v8 = &selRef_imageByApplyingSymbolConfiguration_;
            goto LABEL_38;
          }
        }
        v17 = (char *)*(id *)(v12 + 8 * v16 + 32);
        v11 = (_QWORD *)(v16 + 1);
        if (!__OFADD__(v16, 1))
          goto LABEL_12;
LABEL_32:
        __break(1u);
LABEL_33:
        if (v12 < 0)
          v37 = v12;
        else
          v37 = v12 & 0xFFFFFFFFFFFFFF8;
        sub_1006CD6A4(v11);
        sub_1006CD6A4(v11);
        v38 = v9;
        v13 = _CocoaArrayWrapper.endIndex.getter(v37);
        sub_10051FD74(v11);
      }
      sub_10051FD74(v11);

    }
    else
    {
      objc_msgSend(v9, "drawPageInContext:createPage:includeMargin:", v4, 1, 1);
    }
LABEL_38:
    CGPDFContextClose(v4);
    sub_100410F48((uint64_t)v4, 0);
    objc_msgSend(v7, v8[229], 0);
    goto LABEL_39;
  }
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_100989178()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v6 + 8));

  return swift_deallocObject(v0, v6 + 129, v5);
}

uint64_t sub_100989224()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v2 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v0 + v3;
  v5 = v0 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8);
  v6 = *(_BYTE *)(v5 + 128);
  v7 = swift_task_alloc(dword_1013FE71C);
  *(_QWORD *)(v1 + 16) = v7;
  *(_QWORD *)v7 = v1;
  *(_QWORD *)(v7 + 8) = sub_1004CF80C;
  *(_BYTE *)(v7 + 97) = v6;
  *(_QWORD *)(v7 + 240) = v4;
  *(_QWORD *)(v7 + 248) = v5;
  return swift_task_switch(sub_100988C24, 0, 0);
}

void sub_1009892C0(void *a1, void *a2)
{
  CGContext *v3;
  double x;
  double y;
  double width;
  double height;
  id v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  double v29;
  int64_t v30;
  unint64_t v31;
  uint64_t v32;
  CGContext *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  _QWORD v37[6];
  CGRect ClipBoundingBox;

  if (a1)
  {
    v3 = a1;
    ClipBoundingBox = CGContextGetClipBoundingBox(v3);
    x = ClipBoundingBox.origin.x;
    y = ClipBoundingBox.origin.y;
    width = ClipBoundingBox.size.width;
    height = ClipBoundingBox.size.height;
    v8 = objc_msgSend(objc_allocWithZone((Class)CRLPdfHyperlinkController), "initWithTaggingRect:", CGRectNull.origin.x, CGRectNull.origin.y, CGRectNull.size.width, CGRectNull.size.height);
    v9 = objc_msgSend(a2, "allReps");
    v10 = sub_1004B8930(0, (unint64_t *)&qword_1013E56B0, off_101229828);
    v11 = sub_1004F619C();
    v12 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v9, v10, v11);

    v33 = v3;
    if ((v12 & 0xC000000000000001) != 0)
    {
      if (v12 < 0)
        v14 = v12;
      else
        v14 = v12 & 0xFFFFFFFFFFFFFF8;
      v15 = __CocoaSet.makeIterator()(v14);
      v13 = Set.Iterator.init(_cocoa:)(v37, v15, v10, v11);
      v12 = v37[0];
      v34 = v37[1];
      v16 = v37[2];
      v17 = v37[3];
      v18 = v37[4];
    }
    else
    {
      v17 = 0;
      v19 = -1 << *(_BYTE *)(v12 + 32);
      v34 = v12 + 56;
      v16 = ~v19;
      v20 = -v19;
      if (v20 < 64)
        v21 = ~(-1 << v20);
      else
        v21 = -1;
      v18 = v21 & *(_QWORD *)(v12 + 56);
    }
    v22 = (unint64_t)(v16 + 64) >> 6;
    if (v12 < 0)
      goto LABEL_14;
    while (1)
    {
      if (v18)
      {
        v23 = (v18 - 1) & v18;
        v24 = __clz(__rbit64(v18)) | (v17 << 6);
        v25 = v17;
      }
      else
      {
        v30 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
          __break(1u);
          return;
        }
        if (v30 >= v22)
          goto LABEL_34;
        v31 = *(_QWORD *)(v34 + 8 * v30);
        v25 = v17 + 1;
        if (!v31)
        {
          v25 = v17 + 2;
          if (v17 + 2 >= v22)
            goto LABEL_34;
          v31 = *(_QWORD *)(v34 + 8 * v25);
          if (!v31)
          {
            v25 = v17 + 3;
            if (v17 + 3 >= v22)
              goto LABEL_34;
            v31 = *(_QWORD *)(v34 + 8 * v25);
            if (!v31)
            {
              v25 = v17 + 4;
              if (v17 + 4 >= v22)
                goto LABEL_34;
              v31 = *(_QWORD *)(v34 + 8 * v25);
              if (!v31)
              {
                v32 = v17 + 5;
                while (v22 != v32)
                {
                  v31 = *(_QWORD *)(v34 + 8 * v32++);
                  if (v31)
                  {
                    v25 = v32 - 1;
                    goto LABEL_30;
                  }
                }
LABEL_34:
                sub_1004D284C(v12);
                objc_msgSend(v8, "crl_commitHyperlinksToPDF:targetRect:", v33, x, y, width, height);

                return;
              }
            }
          }
        }
LABEL_30:
        v23 = (v31 - 1) & v31;
        v24 = __clz(__rbit64(v31)) + (v25 << 6);
      }
      v28 = *(id *)(*(_QWORD *)(v12 + 48) + 8 * v24);
      if (!v28)
        goto LABEL_34;
      while (1)
      {
        objc_msgSend(v8, "addHyperlinksForRep:", v28, v29);

        v17 = v25;
        v18 = v23;
        if ((v12 & 0x8000000000000000) == 0)
          break;
LABEL_14:
        v26 = __CocoaSet.Iterator.next()(v13);
        if (v26)
        {
          v27 = v26;
          v35 = v26;
          swift_unknownObjectRetain(v26);
          swift_dynamicCast(&v36, &v35, (char *)&type metadata for Swift.AnyObject + 8, v10, 7);
          v28 = v36;
          *(_QWORD *)&v29 = swift_unknownObjectRelease(v27).n128_u64[0];
          v25 = v17;
          v23 = v18;
          if (v28)
            continue;
        }
        goto LABEL_34;
      }
    }
  }
}

void sub_100989600(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5;
  void (*v6)(void *, id);
  id v7;
  id v8;

  v6 = *(void (**)(void *, id))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  v8 = a2;
  v7 = a3;
  v6(a2, v7);
  swift_release(v5);

}

double sub_10098966C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

double sub_10098967C(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_100989684(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v4;

  *(_BYTE *)(v2 + 384) = a2;
  *(_QWORD *)(v2 + 312) = a1;
  v4 = type metadata accessor for CRLBoardCRDTData(0);
  *(_QWORD *)(v2 + 320) = v4;
  *(_QWORD *)(v2 + 328) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009896E8, a1, 0);
}

uint64_t sub_1009896E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 312);
  type metadata accessor for CRLImmutableBoard(0);
  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform13CRLBoardActor_store);
  v3 = v1 + OBJC_IVAR____TtC8Freeform13CRLBoardActor_boardIdentifier;
  v4 = (_QWORD *)swift_task_alloc(dword_1013E8364);
  *(_QWORD *)(v0 + 336) = v4;
  *v4 = v0;
  v4[1] = sub_10098976C;
  return sub_100618D44(v2, v3, 1);
}

uint64_t sub_10098976C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*v2 + 336);
  v4 = *v2;
  *(_QWORD *)(v4 + 344) = a1;
  swift_task_dealloc(v3);
  if (!v1)
    return swift_task_switch(sub_1009897E8, 0, 0);
  swift_task_dealloc(*(_QWORD *)(v4 + 328));
  return (*(uint64_t (**)(void))(v4 + 8))();
}

id sub_1009897E8()
{
  uint64_t v0;
  void *v1;
  id v2;
  char *v3;
  id v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  Class isa;
  id v12;
  id v13;
  id result;
  id v15;
  char *v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;

  v1 = *(void **)(v0 + 344);
  v2 = objc_allocWithZone((Class)CRLCanvasImager);
  v3 = v1;
  v4 = objc_msgSend(v2, "initWithBoard:", v3);
  v5 = *(char **)&v3[OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer];
  v6 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
  v7 = *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems];
  v8 = v5;
  if (!v7)
  {
    sub_100740DA4();
    v7 = *(_QWORD *)&v5[v6];
  }
  if (v7)
    v9 = v7;
  else
    v9 = (uint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)v9 >> 62)
  {
    if (v9 < 0)
      v31 = v9;
    else
      v31 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v9);
    v32 = sub_1004B804C(&qword_1013E0670);
    _bridgeCocoaArray<A>(_:)(v31, v32);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain(v7);
    v10 = swift_bridgeObjectRetain(v9);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v10);
  }

  swift_bridgeObjectRelease();
  sub_1004B804C(&qword_1013E0670);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v4, "setInfos:", isa, swift_bridgeObjectRelease().n128_f64[0]);

  v12 = objc_allocWithZone((Class)CRLPdfTagger);
  v13 = v4;
  result = objc_msgSend(v12, "init");
  if (result)
  {
    v15 = result;
    v16 = *(char **)(v0 + 344);
    v17 = *(_QWORD *)(v0 + 328);

    *(_QWORD *)(v0 + 144) = 0x3FF0000000000000;
    *(_OWORD *)(v0 + 152) = 0u;
    *(_OWORD *)(v0 + 168) = 0u;
    *(_QWORD *)(v0 + 184) = 0;
    *(_BYTE *)(v0 + 192) = 1;
    *(_WORD *)(v0 + 193) = 256;
    *(_OWORD *)(v0 + 200) = 0u;
    *(_OWORD *)(v0 + 216) = 0u;
    *(_BYTE *)(v0 + 232) = 1;
    *(_QWORD *)(v0 + 240) = 0;
    *(_QWORD *)(v0 + 248) = v13;
    *(_QWORD *)(v0 + 256) = v15;
    *(_QWORD *)(v0 + 264) = v16;
    v18 = *(_OWORD *)(v0 + 144);
    v19 = *(_OWORD *)(v0 + 160);
    v20 = *(_OWORD *)(v0 + 192);
    *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 176);
    *(_OWORD *)(v0 + 64) = v20;
    *(_OWORD *)(v0 + 16) = v18;
    *(_OWORD *)(v0 + 32) = v19;
    v21 = *(_OWORD *)(v0 + 208);
    v22 = *(_OWORD *)(v0 + 224);
    v23 = *(_OWORD *)(v0 + 256);
    *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 240);
    *(_OWORD *)(v0 + 128) = v23;
    *(_OWORD *)(v0 + 80) = v21;
    *(_OWORD *)(v0 + 96) = v22;
    v24 = *(_QWORD *)&v16[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess(v24, v0 + 272, 0, 0);
    sub_1004D48C8(v24, v17);
    v25 = v16;
    v26 = sub_1004B804C(&qword_1013E1980);
    CRRegister.wrappedValue.getter(v26);
    v27 = *(_QWORD *)(v0 + 296);
    v28 = *(_QWORD *)(v0 + 304);
    *(_QWORD *)(v0 + 352) = v28;
    sub_1004D490C(v17);

    v29 = swift_task_alloc(dword_1013FE704);
    *(_QWORD *)(v0 + 360) = v29;
    *(_QWORD *)v29 = v0;
    *(_QWORD *)(v29 + 8) = sub_100989AB4;
    v30 = *(_BYTE *)(v0 + 384);
    *(_QWORD *)(v29 + 24) = v28;
    *(_QWORD *)(v29 + 32) = v0 + 16;
    *(_BYTE *)(v29 + 57) = 0;
    *(_BYTE *)(v29 + 56) = v30;
    *(_QWORD *)(v29 + 16) = v27;
    return (id)swift_task_switch(sub_100988400, 0, 0);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100989AB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 360);
  *(_QWORD *)(*v2 + 368) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = sub_100989B80;
  }
  else
  {
    swift_bridgeObjectRelease();
    *(_QWORD *)(v4 + 376) = a1;
    v6 = sub_100989B30;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_100989B30()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 328);

  sub_1006D3E20(v0 + 144);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 376));
}

uint64_t sub_100989B80()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 344);
  swift_bridgeObjectRelease();
  sub_1006D3E20(v0 + 144);

  swift_task_dealloc(*(_QWORD *)(v0 + 328));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100989BCC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100989BF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1013E18D4);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1004CF80C;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1013E18D0 + dword_1013E18D0))(a1, v4);
}

id sub_100989C6C()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  NSString v3;
  NSString v4;
  id v5;
  id v6;
  id v7;
  id v8;
  Class isa;
  id v10;

  v0 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v1 = swift_allocObject(v0, 48, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100EF5560;
  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v3 = String._bridgeToObjectiveC()();
  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend(v2, "localizedStringForKey:value:table:", v3, v4, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v6 = sub_1004C7D68();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 32) = v6;
  v7 = sub_100989E24();
  *(_QWORD *)(v1 + 40) = v7;
  specialized Array._endMutation()(v7);
  v8 = objc_allocWithZone((Class)UIStackView);
  sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v10 = objc_msgSend(v8, "initWithArrangedSubviews:", isa, swift_bridgeObjectRelease().n128_f64[0]);

  objc_msgSend(v10, "setAxis:", 1);
  objc_msgSend(v10, "setSpacing:", 8.0);
  return v10;
}

id sub_100989E24()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  NSString v8;
  void *v9;
  id v10;
  NSString v11;
  id v12;
  NSString v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  double *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  NSString v24;
  NSString v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  NSString v31;
  NSString v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  id v38;
  NSString v39;
  NSString v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  __int16 v48;
  __n128 v49;
  uint64_t v51;
  uint64_t v52;
  id v53;
  id v54;
  char *v56;
  id v57;
  id v58;
  double *v59;

  v1 = v0;
  v2 = sub_1004B804C(&qword_1013E10A0);
  __chkstk_darwin(v2);
  v4 = (char *)&v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v56 - v6;
  v8 = String._bridgeToObjectiveC()();
  v9 = (void *)objc_opt_self(UIImage);
  v10 = objc_msgSend(v9, "imageNamed:", v8);

  if (v10)
  {
    v11 = String._bridgeToObjectiveC()();
    v12 = objc_msgSend(v9, "imageNamed:", v11);

    if (v12)
    {
      v13 = String._bridgeToObjectiveC()();
      v14 = objc_msgSend(v9, "imageNamed:", v13);

      if (v14)
      {
        v15 = sub_1004B804C((uint64_t *)&unk_1013E4180);
        v16 = swift_allocObject(v15, 56, 7);
        *(_OWORD *)(v16 + 16) = xmmword_100EF7300;
        *(_QWORD *)(v16 + 32) = v10;
        *(_QWORD *)(v16 + 40) = v12;
        *(_QWORD *)(v16 + 48) = v14;
        v59 = (double *)v16;
        specialized Array._endMutation()(v16);
        v17 = v59;
        v18 = sub_1004B804C((uint64_t *)&unk_1013DFC30);
        v19 = swift_allocObject(v18, 80, 7);
        *(_OWORD *)(v19 + 16) = xmmword_100EF5550;
        v20 = (void *)objc_opt_self(NSBundle);
        v58 = v10;
        v10 = v12;
        v21 = v14;
        v56 = v4;
        v57 = v21;
        v22 = v20;
        v23 = objc_msgSend(v20, "mainBundle");
        v24 = String._bridgeToObjectiveC()();
        v25 = String._bridgeToObjectiveC()();
        v26 = objc_msgSend(v23, "localizedStringForKey:value:table:", v24, v25, 0);

        v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
        v29 = v28;

        *(_QWORD *)(v19 + 32) = v27;
        *(_QWORD *)(v19 + 40) = v29;
        v30 = objc_msgSend(v22, "mainBundle");
        v31 = String._bridgeToObjectiveC()();
        v32 = String._bridgeToObjectiveC()();
        v33 = objc_msgSend(v30, "localizedStringForKey:value:table:", v31, v32, 0);

        v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
        v36 = v35;

        *(_QWORD *)(v19 + 48) = v34;
        *(_QWORD *)(v19 + 56) = v36;
        v37 = v22;
        v4 = v56;
        v38 = objc_msgSend(v37, "mainBundle");
        v39 = String._bridgeToObjectiveC()();
        v40 = String._bridgeToObjectiveC()();
        v41 = objc_msgSend(v38, "localizedStringForKey:value:table:", v39, v40, 0);

        v42 = static String._unconditionallyBridgeFromObjectiveC(_:)(v41);
        v44 = v43;

        *(_QWORD *)(v19 + 64) = v42;
        *(_QWORD *)(v19 + 72) = v44;

        v12 = v58;
      }
      else
      {
        v17 = _swiftEmptyArrayStorage;
      }

      v10 = v12;
    }
    else
    {
      v17 = _swiftEmptyArrayStorage;
    }

  }
  else
  {
    v17 = _swiftEmptyArrayStorage;
  }
  v45 = type metadata accessor for IndexSet(0);
  v46 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56);
  v46(v7, 1, 1, v45);
  v47 = sub_10074BBFC();
  if ((v48 & 0xFF00) != 0x200 && (v48 & 0x101) == 0)
  {
    if (v47 == 2)
      v51 = 1;
    else
      v51 = 2 * (v47 == 1);
    IndexSet.init(integer:)(v51, v49);
    sub_10098A7D0((uint64_t)v7);
    v46(v4, 0, 1, v45);
    sub_10098A810((uint64_t)v4, (uint64_t)v7);
  }
  v52 = swift_allocObject(&unk_10128CB10, 24, 7);
  *(_QWORD *)(v52 + 16) = v1;
  v53 = v1;
  v54 = sub_1004C6DDC((uint64_t)v17);
  swift_bridgeObjectRelease();
  swift_release(v52);
  swift_bridgeObjectRelease();
  sub_10098A7D0((uint64_t)v7);
  return v54;
}

void sub_10098A360(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  __int16 v4;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjCClassFromMetadata;
  id v12;
  uint64_t v13;
  void *v14;
  id v15;

  v2 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform40CRLiOSMiniFormatterConnectionLineBuilder_lineDataProvider);
  v3 = sub_10074BBFC();
  if ((v4 & 0xFF00) == 0x200 || (v4 & 1) != 0)
    return;
  v6 = v3;
  v7 = 0;
  if (!IndexSet.contains(_:)(0))
  {
    if (!IndexSet.contains(_:)(1))
    {
      v7 = IndexSet.contains(_:)(2);
      if (v7 == v6)
        return;
      goto LABEL_12;
    }
    v7 = 2;
  }
  if (v7 == v6)
    return;
LABEL_12:
  v8 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
  v9 = sub_1004B8930(0, (unint64_t *)&unk_101401450, off_101229858);
  if (v9)
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v9, v10);
  else
    ObjCClassFromMetadata = 0;
  v12 = objc_msgSend(v8, "mostSpecificCurrentEditorOfClass:", ObjCClassFromMetadata);
  v13 = objc_opt_self(CRLConnectionLineEditor);
  v14 = (void *)swift_dynamicCastObjCClass(v12, v13);
  v15 = v14;
  if (!v14)
  {
    swift_unknownObjectRelease(v12);
    v14 = 0;
  }
  objc_msgSend(v14, "setConnectionLineType:", v7);

}

void *sub_10098A4B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v7;

  v0 = sub_100704150();
  if (v0)
    sub_100511EB8(v0);
  v1 = sub_100557658();
  if (v1)
  {
    v2 = v1;
    v3 = v1 & 0xFFFFFFFFFFFFFF8;
    if ((unint64_t)v1 >> 62)
    {
      if (v1 < 0)
        v3 = v1;
      v7 = type metadata accessor for CRLBoardItem(0);
      v5 = _bridgeCocoaArray<A>(_:)(v3, v7);
    }
    else
    {
      v4 = swift_bridgeObjectRetain(v1);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v4);
      type metadata accessor for CRLBoardItem(0);
      v5 = v2;
    }
    swift_bridgeObjectRelease();
    sub_10051FB14(v5);
    swift_bridgeObjectRelease();
  }
  return &_swiftEmptySetSingleton;
}

uint64_t sub_10098A59C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  char v7;
  void *v9;
  _BYTE v10[32];

  sub_1004CB6E8(a2, (uint64_t)v10);
  v4 = type metadata accessor for CRLConnectionLineItem(0);
  if ((swift_dynamicCast(&v9, v10, (char *)&type metadata for Any + 8, v4, 6) & 1) == 0)
    goto LABEL_5;
  v5 = v9;
  v6 = sub_100557658();
  if (!v6)
  {

LABEL_5:
    v7 = sub_1004C9944(a1, a2);
    return v7 & 1;
  }
  v7 = sub_100C9D9C0((uint64_t)v5, v6);
  swift_bridgeObjectRelease();

  return v7 & 1;
}

uint64_t sub_10098A668(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  char v7;
  void *v9;
  _BYTE v10[32];

  sub_1004CB6E8(a2, (uint64_t)v10);
  v4 = type metadata accessor for CRLConnectionLineItem(0);
  if (!swift_dynamicCast(&v9, v10, (char *)&type metadata for Any + 8, v4, 6))
    goto LABEL_5;
  v5 = v9;
  v6 = sub_100557658();
  if (!v6)
  {

LABEL_5:
    v7 = sub_1004C9944(a1, a2);
    return v7 & 1;
  }
  v7 = sub_100C9D9C0((uint64_t)v5, v6);
  swift_bridgeObjectRelease();

  return v7 & 1;
}

void sub_10098A734()
{
  uint64_t v0;

}

id sub_10098A744()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSMiniFormatterConnectionLineBuilder();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLiOSMiniFormatterConnectionLineBuilder()
{
  return objc_opt_self(_TtC8Freeform40CRLiOSMiniFormatterConnectionLineBuilder);
}

uint64_t sub_10098A7A4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10098A7C8(uint64_t a1)
{
  uint64_t v1;

  sub_10098A360(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_10098A7D0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B804C(&qword_1013E10A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10098A810(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013E10A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_10098A858(uint64_t a1, unint64_t a2)
{
  unint64_t v2;

  v2 = 0xD000000000000029;
  switch(a2)
  {
    case 0uLL:
      break;
    case 1uLL:
      v2 = 0xD000000000000023;
      break;
    case 2uLL:
    case 7uLL:
    case 8uLL:
      v2 = 0xD000000000000024;
      break;
    case 3uLL:
      v2 = 0xD000000000000026;
      break;
    case 4uLL:
      v2 = 0xD000000000000025;
      break;
    case 5uLL:
      v2 = 0xD000000000000027;
      break;
    case 6uLL:
      v2 = 0xD000000000000023;
      break;
    default:
      v2 = a1;
      break;
  }
  sub_1004C4924(a1, a2);
  return v2;
}

void sub_10098AB04()
{
  qword_101480098 = (uint64_t)&off_1012654A8;
}

unint64_t sub_10098ABF8()
{
  unint64_t result;

  result = sub_10098AC14();
  qword_1014800A0 = result;
  return result;
}

unint64_t sub_10098AC14()
{
  uint64_t v0;
  uint64_t inited;
  unint64_t v2;
  uint64_t v3;
  _BYTE v5[248];

  v0 = sub_1004B804C(&qword_1013FE7D0);
  inited = swift_initStackObject(v0, v5);
  *(_OWORD *)(inited + 16) = xmmword_100F1E480;
  *(UIFontWeight *)(inited + 32) = UIFontWeightUltraLight;
  *(_QWORD *)(inited + 40) = 0xD000000000000029;
  *(_QWORD *)(inited + 48) = 0x8000000100FAA6F0;
  *(UIFontWeight *)(inited + 56) = UIFontWeightThin;
  *(_QWORD *)(inited + 64) = 0xD000000000000023;
  *(_QWORD *)(inited + 72) = 0x8000000100FAA720;
  *(UIFontWeight *)(inited + 80) = UIFontWeightLight;
  *(_QWORD *)(inited + 88) = 0xD000000000000024;
  *(_QWORD *)(inited + 96) = 0x8000000100FAA750;
  *(UIFontWeight *)(inited + 104) = UIFontWeightRegular;
  *(_QWORD *)(inited + 112) = 0xD000000000000026;
  *(_QWORD *)(inited + 120) = 0x8000000100FAA780;
  *(UIFontWeight *)(inited + 128) = UIFontWeightMedium;
  *(_QWORD *)(inited + 136) = 0xD000000000000025;
  *(_QWORD *)(inited + 144) = 0x8000000100FAA7B0;
  *(UIFontWeight *)(inited + 152) = UIFontWeightSemibold;
  *(_QWORD *)(inited + 160) = 0xD000000000000027;
  *(_QWORD *)(inited + 168) = 0x8000000100FAA7E0;
  *(UIFontWeight *)(inited + 176) = UIFontWeightBold;
  *(_QWORD *)(inited + 184) = 0xD000000000000023;
  *(_QWORD *)(inited + 192) = 0x8000000100FAA810;
  *(UIFontWeight *)(inited + 200) = UIFontWeightHeavy;
  *(_QWORD *)(inited + 208) = 0xD000000000000024;
  *(_QWORD *)(inited + 216) = 0x8000000100FAA840;
  *(UIFontWeight *)(inited + 224) = UIFontWeightBlack;
  *(_QWORD *)(inited + 232) = 0xD000000000000024;
  *(_QWORD *)(inited + 240) = 0x8000000100FAA870;
  v2 = sub_1008E05E0((double *)inited);
  swift_setDeallocating(inited);
  v3 = sub_1004B804C(&qword_1013FE7D8);
  swift_arrayDestroy(inited + 32, 9, v3);
  return v2;
}

_QWORD *sub_10098ADF4()
{
  _QWORD *result;

  result = sub_10098AE10();
  qword_1014800A8 = (uint64_t)result;
  return result;
}

_QWORD *sub_10098AE10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  int64_t v5;
  unint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  char v23;
  uint64_t *v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *result;
  uint64_t v29;

  if (qword_1013DD5F0 != -1)
LABEL_39:
    swift_once(&qword_1013DD5F0, sub_10098ABF8);
  v0 = qword_1014800A0;
  v29 = qword_1014800A0 + 64;
  v1 = 1 << *(_BYTE *)(qword_1014800A0 + 32);
  v2 = -1;
  if (v1 < 64)
    v2 = ~(-1 << v1);
  v3 = v2 & *(_QWORD *)(qword_1014800A0 + 64);
  v4 = (unint64_t)(v1 + 63) >> 6;
  swift_bridgeObjectRetain(qword_1014800A0);
  v5 = 0;
  while (1)
  {
    if (v3)
    {
      v6 = __clz(__rbit64(v3));
      v3 &= v3 - 1;
      v7 = v6 | (v5 << 6);
    }
    else
    {
      v8 = v5 + 1;
      if (__OFADD__(v5, 1))
        goto LABEL_37;
      if (v8 >= v4)
      {
LABEL_34:
        swift_release(v0);
        return _swiftEmptyDictionarySingleton;
      }
      v9 = *(_QWORD *)(v29 + 8 * v8);
      ++v5;
      if (!v9)
      {
        v5 = v8 + 1;
        if (v8 + 1 >= v4)
          goto LABEL_34;
        v9 = *(_QWORD *)(v29 + 8 * v5);
        if (!v9)
        {
          v5 = v8 + 2;
          if (v8 + 2 >= v4)
            goto LABEL_34;
          v9 = *(_QWORD *)(v29 + 8 * v5);
          if (!v9)
          {
            v10 = v8 + 3;
            if (v10 >= v4)
              goto LABEL_34;
            v9 = *(_QWORD *)(v29 + 8 * v10);
            if (!v9)
            {
              while (1)
              {
                v5 = v10 + 1;
                if (__OFADD__(v10, 1))
                  goto LABEL_38;
                if (v5 >= v4)
                  goto LABEL_34;
                v9 = *(_QWORD *)(v29 + 8 * v5);
                ++v10;
                if (v9)
                  goto LABEL_22;
              }
            }
            v5 = v10;
          }
        }
      }
LABEL_22:
      v3 = (v9 - 1) & v9;
      v7 = __clz(__rbit64(v9)) + (v5 << 6);
    }
    v11 = *(_QWORD *)(*(_QWORD *)(v0 + 48) + 8 * v7);
    v12 = (uint64_t *)(*(_QWORD *)(v0 + 56) + 16 * v7);
    v14 = *v12;
    v13 = v12[1];
    swift_bridgeObjectRetain(v13);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(_swiftEmptyDictionarySingleton);
    v17 = sub_100842E98(v14, v13);
    v18 = _swiftEmptyDictionarySingleton[2];
    v19 = (v16 & 1) == 0;
    v20 = v18 + v19;
    if (__OFADD__(v18, v19))
    {
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    v21 = v16;
    if (_swiftEmptyDictionarySingleton[3] < v20)
      break;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      if ((v16 & 1) != 0)
        goto LABEL_5;
    }
    else
    {
      sub_100832E80();
      if ((v21 & 1) != 0)
      {
LABEL_5:
        *(_QWORD *)(_swiftEmptyDictionarySingleton[7] + 8 * v17) = v11;
        goto LABEL_6;
      }
    }
LABEL_30:
    _swiftEmptyDictionarySingleton[(v17 >> 6) + 8] |= 1 << v17;
    v24 = (uint64_t *)(_swiftEmptyDictionarySingleton[6] + 16 * v17);
    *v24 = v14;
    v24[1] = v13;
    *(_QWORD *)(_swiftEmptyDictionarySingleton[7] + 8 * v17) = v11;
    v25 = _swiftEmptyDictionarySingleton[2];
    v26 = __OFADD__(v25, 1);
    v27 = v25 + 1;
    if (v26)
      goto LABEL_36;
    _swiftEmptyDictionarySingleton[2] = v27;
    swift_bridgeObjectRetain(v13);
LABEL_6:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_100821058(v20, isUniquelyReferenced_nonNull_native);
  v22 = sub_100842E98(v14, v13);
  if ((v21 & 1) == (v23 & 1))
  {
    v17 = v22;
    if ((v21 & 1) != 0)
      goto LABEL_5;
    goto LABEL_30;
  }
  result = (_QWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

id sub_10098B118()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLWPSystemFontNames();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLWPSystemFontNames()
{
  return objc_opt_self(_TtC8Freeform20CRLWPSystemFontNames);
}

uint64_t getEnumTagSinglePayload for CRLWPFontName(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFFF6 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483639);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 8;
  if (v4 >= 0xA)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for CRLWPFontName(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFF7)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483639;
    if (a3 >= 0x7FFFFFF7)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFF7)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLWPFontName()
{
  return &type metadata for CRLWPFontName;
}

uint64_t sub_10098B224@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = sub_10098B7E4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  *a2 = result;
  a2[1] = v4;
  return result;
}

unint64_t sub_10098B250@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t result;
  unint64_t v4;

  result = sub_10098A858(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_10098B278(uint64_t a1, unint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  switch(a3)
  {
    case 0uLL:
      v5 = dispatch thunk of CREncoder.valueContainer()();
      if (!v3)
      {
        v6 = v5;
        v7 = 0x8000000100FE5630;
        v8 = 0xD000000000000011;
        goto LABEL_23;
      }
      break;
    case 1uLL:
      v11 = dispatch thunk of CREncoder.valueContainer()();
      if (!v3)
      {
        v6 = v11;
        v8 = 0x546D65747379732ELL;
        v7 = 0xEB000000006E6968;
        goto LABEL_23;
      }
      break;
    case 2uLL:
      v12 = dispatch thunk of CREncoder.valueContainer()();
      if (!v3)
      {
        v6 = v12;
        v8 = 0x4C6D65747379732ELL;
        v13 = 1952999273;
        goto LABEL_22;
      }
      break;
    case 3uLL:
      v14 = dispatch thunk of CREncoder.valueContainer()();
      if (!v3)
      {
        v6 = v14;
        v8 = 0x526D65747379732ELL;
        v7 = 0xEE0072616C756765;
        goto LABEL_23;
      }
      break;
    case 4uLL:
      v15 = dispatch thunk of CREncoder.valueContainer()();
      if (!v3)
      {
        v6 = v15;
        v8 = 0x4D6D65747379732ELL;
        v7 = 0xED00006D75696465;
        goto LABEL_23;
      }
      break;
    case 5uLL:
      v16 = dispatch thunk of CREncoder.valueContainer()();
      if (!v3)
      {
        v6 = v16;
        v8 = 0x536D65747379732ELL;
        v7 = 0xEF646C6F62696D65;
        goto LABEL_23;
      }
      break;
    case 6uLL:
      v17 = dispatch thunk of CREncoder.valueContainer()();
      if (!v3)
      {
        v6 = v17;
        v8 = 0x426D65747379732ELL;
        v7 = 0xEB00000000646C6FLL;
        goto LABEL_23;
      }
      break;
    case 7uLL:
      v18 = dispatch thunk of CREncoder.valueContainer()();
      if (!v3)
      {
        v6 = v18;
        v8 = 0x486D65747379732ELL;
        v13 = 2037801317;
        goto LABEL_22;
      }
      break;
    case 8uLL:
      v19 = dispatch thunk of CREncoder.valueContainer()();
      if (!v3)
      {
        v6 = v19;
        v8 = 0x426D65747379732ELL;
        v13 = 1801675116;
LABEL_22:
        v7 = v13 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
        goto LABEL_23;
      }
      break;
    default:
      v10 = dispatch thunk of CREncoder.valueContainer()();
      if (!v3)
      {
        v6 = v10;
        v8 = a2;
        v7 = a3;
LABEL_23:
        dispatch thunk of CREncoder.CRValueContainer.encode(_:)(v8, v7);
        swift_release(v6);
      }
      break;
  }
}

Swift::Int sub_10098B4C8()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  _QWORD v4[9];

  v1 = *v0;
  v2 = v0[1];
  Hasher.init(_seed:)(v4, 0);
  sub_10083D41C((uint64_t)v4, v1, v2);
  return Hasher._finalize()();
}

double sub_10098B510(uint64_t a1)
{
  uint64_t v1;

  return sub_10083D41C(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8));
}

Swift::Int sub_10098B518(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v2 = *v1;
  v3 = v1[1];
  Hasher.init(_seed:)(v5, a1);
  sub_10083D41C((uint64_t)v5, v2, v3);
  return Hasher._finalize()();
}

uint64_t sub_10098B55C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_10062E1F4();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_10098B5B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_10062E1F4();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

uint64_t sub_10098B604@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *v1;
  v3 = v1[1];
  *a1 = *v1;
  a1[1] = v3;
  return sub_1004C4924(v2, v3);
}

uint64_t sub_10098B610(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t v7;

  v6 = sub_10098BB3C();
  v7 = sub_10098B758();
  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_10098B66C(uint64_t a1, uint64_t a2)
{
  return sub_10083CD20(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)a2, *(_QWORD *)(a2 + 8));
}

uint64_t sub_10098B680@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = sub_10098BCC8(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

void sub_10098B6A8(uint64_t a1)
{
  unint64_t *v1;

  sub_10098B278(a1, *v1, v1[1]);
}

uint64_t sub_10098B6C0(uint64_t a1)
{
  unint64_t v2;
  unint64_t v3;

  v2 = sub_10098BB3C();
  v3 = sub_10062E1F4();
  return CRValue<>.minEncodingVersion.getter(a1, v2, v3, &protocol witness table for String);
}

unint64_t sub_10098B710()
{
  unint64_t result;

  result = qword_1013FE7B0;
  if (!qword_1013FE7B0)
  {
    result = swift_getWitnessTable(&unk_100F1E2DC, &type metadata for CRLWPFontName);
    atomic_store(result, (unint64_t *)&qword_1013FE7B0);
  }
  return result;
}

unint64_t sub_10098B758()
{
  unint64_t result;

  result = qword_1013FE7B8;
  if (!qword_1013FE7B8)
  {
    result = swift_getWitnessTable(&unk_100F1E324, &type metadata for CRLWPFontName);
    atomic_store(result, (unint64_t *)&qword_1013FE7B8);
  }
  return result;
}

unint64_t sub_10098B7A0()
{
  unint64_t result;

  result = qword_1013FE7C0;
  if (!qword_1013FE7C0)
  {
    result = swift_getWitnessTable(&unk_100F1E34C, &type metadata for CRLWPFontName);
    atomic_store(result, (unint64_t *)&qword_1013FE7C0);
  }
  return result;
}

uint64_t sub_10098B7E4(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = a1;
  if (a1 == 0xD000000000000029 && a2 == 0x8000000100FAA6F0)
  {
    v4 = 0x8000000100FAA6F0;
  }
  else if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000029, 0x8000000100FAA6F0, a1, a2, 0) & 1) != 0)
  {
    v4 = a2;
  }
  else if (v3 != 0xD000000000000023 || (v4 = 0x8000000100FAA720, a2 != 0x8000000100FAA720))
  {
    if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000023, 0x8000000100FAA720, v3, a2, 0) & 1) != 0)
    {
      v4 = a2;
    }
    else if (v3 != 0xD000000000000024 || (v4 = 0x8000000100FAA750, a2 != 0x8000000100FAA750))
    {
      if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000024, 0x8000000100FAA750, v3, a2, 0) & 1) != 0)
      {
        v4 = a2;
      }
      else if (v3 == 0xD000000000000026 && a2 == 0x8000000100FAA780)
      {
        v4 = 0x8000000100FAA780;
      }
      else if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000026, 0x8000000100FAA780, v3, a2, 0) & 1) != 0)
      {
        v4 = a2;
      }
      else if (v3 == 0xD000000000000025 && a2 == 0x8000000100FAA7B0)
      {
        v4 = 0x8000000100FAA7B0;
      }
      else if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000025, 0x8000000100FAA7B0, v3, a2, 0) & 1) != 0)
      {
        v4 = a2;
      }
      else if (v3 == 0xD000000000000027 && a2 == 0x8000000100FAA7E0)
      {
        v4 = 0x8000000100FAA7E0;
      }
      else if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000027, 0x8000000100FAA7E0, v3, a2, 0) & 1) != 0)
      {
        v4 = a2;
      }
      else if (v3 != 0xD000000000000023 || (v4 = 0x8000000100FAA810, a2 != 0x8000000100FAA810))
      {
        if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000023, 0x8000000100FAA810, v3, a2, 0) & 1) != 0)
        {
          v4 = a2;
        }
        else if (v3 != 0xD000000000000024 || (v4 = 0x8000000100FAA840, a2 != 0x8000000100FAA840))
        {
          if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000024, 0x8000000100FAA840, v3, a2, 0) & 1) != 0)
          {
            v4 = a2;
          }
          else if (v3 != 0xD000000000000024 || (v4 = 0x8000000100FAA870, a2 != 0x8000000100FAA870))
          {
            if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000024, 0x8000000100FAA870, v3, a2, 0) & 1) == 0)
              return v3;
            v4 = a2;
          }
        }
      }
    }
  }
  swift_bridgeObjectRelease(v4);
  return 0;
}

unint64_t sub_10098BB3C()
{
  unint64_t result;

  result = qword_1013FE7C8;
  if (!qword_1013FE7C8)
  {
    result = swift_getWitnessTable(&unk_100F1E43C, &type metadata for CRLWPFontName);
    atomic_store(result, (unint64_t *)&qword_1013FE7C8);
  }
  return result;
}

unint64_t sub_10098BB80(double a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  unint64_t *v6;

  if (qword_1013DD5F0 != -1)
    swift_once(&qword_1013DD5F0, sub_10098ABF8);
  v2 = 0xD000000000000026;
  v3 = qword_1014800A0;
  if (*(_QWORD *)(qword_1014800A0 + 16))
  {
    v4 = sub_100843D38(a1);
    if ((v5 & 1) != 0)
    {
      v6 = (unint64_t *)(*(_QWORD *)(v3 + 56) + 16 * v4);
      v2 = *v6;
      swift_bridgeObjectRetain(v6[1]);
    }
  }
  return v2;
}

double sub_10098BC24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  const UIFontWeight *v8;
  double v9;

  if (qword_1013DD5F8 != -1)
    swift_once(&qword_1013DD5F8, sub_10098ADF4);
  v4 = qword_1014800A8;
  v5 = *(_QWORD *)(qword_1014800A8 + 16);
  swift_bridgeObjectRetain(a2);
  if (v5 && (v6 = sub_100842E98(a1, a2), (v7 & 1) != 0))
    v8 = (const UIFontWeight *)(*(_QWORD *)(v4 + 56) + 8 * v6);
  else
    v8 = &UIFontWeightRegular;
  v9 = *v8;
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_10098BCC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v9;
  char v10;

  v3 = a1;
  v4 = dispatch thunk of CRDecoder.valueContainer()();
  if (v1)
  {
    swift_release(a1);
  }
  else
  {
    v5 = v4;
    v3 = dispatch thunk of CRDecoder.CRValueContainer.decode(_:)();
    v7 = v6;
    swift_release(v5);
    if (v3 != 0xD000000000000011 || (v9 = 0x8000000100FE5630, v7 != 0x8000000100FE5630))
    {
      if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000011, 0x8000000100FE5630, v3, v7, 0) & 1) != 0)
      {
        v9 = v7;
      }
      else if (v3 == 0x546D65747379732ELL && v7 == 0xEB000000006E6968)
      {
        v9 = 0xEB000000006E6968;
      }
      else if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x546D65747379732ELL, 0xEB000000006E6968, v3, v7, 0) & 1) != 0)
      {
        v9 = v7;
      }
      else if (v3 == 0x4C6D65747379732ELL && v7 == 0xEC00000074686769)
      {
        v9 = 0xEC00000074686769;
      }
      else if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x4C6D65747379732ELL, 0xEC00000074686769, v3, v7, 0) & 1) != 0)
      {
        v9 = v7;
      }
      else if (v3 == 0x526D65747379732ELL && v7 == 0xEE0072616C756765)
      {
        v9 = 0xEE0072616C756765;
      }
      else if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x526D65747379732ELL, 0xEE0072616C756765, v3, v7, 0) & 1) != 0)
      {
        v9 = v7;
      }
      else if (v3 == 0x4D6D65747379732ELL && v7 == 0xED00006D75696465)
      {
        v9 = 0xED00006D75696465;
      }
      else if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x4D6D65747379732ELL, 0xED00006D75696465, v3, v7, 0) & 1) != 0)
      {
        v9 = v7;
      }
      else if (v3 == 0x536D65747379732ELL && v7 == 0xEF646C6F62696D65)
      {
        v9 = 0xEF646C6F62696D65;
      }
      else if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x536D65747379732ELL, 0xEF646C6F62696D65, v3, v7, 0) & 1) != 0)
      {
        v9 = v7;
      }
      else if (v3 == 0x426D65747379732ELL && v7 == 0xEB00000000646C6FLL)
      {
        v9 = 0xEB00000000646C6FLL;
      }
      else if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x426D65747379732ELL, 0xEB00000000646C6FLL, v3, v7, 0) & 1) != 0)
      {
        v9 = v7;
      }
      else if (v3 == 0x486D65747379732ELL && v7 == 0xEC00000079766165)
      {
        v9 = 0xEC00000079766165;
      }
      else
      {
        if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x486D65747379732ELL, 0xEC00000079766165, v3, v7, 0) & 1) == 0)
        {
          if (v3 == 0x426D65747379732ELL && v7 == 0xEC0000006B63616CLL)
          {
            swift_bridgeObjectRelease(0xEC0000006B63616CLL);
            swift_release(a1);
          }
          else
          {
            v10 = _stringCompareWithSmolCheck(_:_:expecting:)(0x426D65747379732ELL, 0xEC0000006B63616CLL, v3, v7, 0);
            swift_release(a1);
            if ((v10 & 1) == 0)
              return v3;
            swift_bridgeObjectRelease(v7);
          }
          return 0;
        }
        v9 = v7;
      }
    }
    swift_bridgeObjectRelease(v9);
    swift_release(a1);
    return 0;
  }
  return v3;
}

uint64_t sub_10098C20C(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v3 + 264) = a2;
  *(_QWORD *)(v3 + 200) = a1;
  *(_QWORD *)(v3 + 208) = v2;
  v4 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v3 + 216) = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  *(_QWORD *)(v3 + 224) = v5;
  *(_QWORD *)(v3 + 232) = v6;
  return swift_task_switch(sub_10098C27C, v5, v6);
}

uint64_t sub_10098C27C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t inited;
  uint64_t Strong;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t);

  v25 = v0 + 160;
  if (qword_1013DD888 != -1)
    swift_once(&qword_1013DD888, sub_100A05DE4);
  v1 = *(_QWORD *)(v0 + 208);
  v24 = *(_QWORD *)(v0 + 200);
  swift_beginAccess(&static OS_os_log.realTimeSync, v0 + 88, 0, 0);
  v2 = (void *)static OS_os_log.realTimeSync;
  v3 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v3, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  *(_QWORD *)(v0 + 184) = Strong;
  *(_QWORD *)(v0 + 192) = v6;
  v7 = v2;
  v8 = sub_1004B804C(&qword_1013FEE08);
  v9 = String.init<A>(describing:)(v0 + 184, v8);
  v11 = v10;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v9;
  *(_QWORD *)(inited + 40) = v11;
  v13 = static os_log_type_t.default.getter(v12);
  sub_100A06EBC((uint64_t)v7, &_mh_execute_header, v13, "leaveGroupSession() with delegate %@", 36, 2, inited);
  swift_setDeallocating(inited);
  v14 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v14);

  v15 = v24 + OBJC_IVAR____TtC8Freeform20CRLBoardGroupSession_sessionID;
  swift_beginAccess(v1 + 48, v0 + 112, 33, 0);
  v16 = sub_1008471AC(v15);
  swift_endAccess(v0 + 112);
  swift_release(v16);
  swift_beginAccess(v1 + 56, v0 + 136, 33, 0);
  v17 = sub_1008471AC(v15);
  swift_endAccess(v0 + 136);
  swift_release(v17);
  swift_beginAccess(v1 + 40, v25, 33, 0);
  v18 = sub_100847FF8(v15);
  swift_endAccess(v25);
  swift_release(v18);
  v19 = swift_unknownObjectWeakLoadStrong(v1 + 24);
  *(_QWORD *)(v0 + 240) = v19;
  if (v19)
  {
    v20 = v19;
    v26 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1013FEE10 + dword_1013FEE10);
    v21 = (_QWORD *)swift_task_alloc(unk_1013FEE14);
    *(_QWORD *)(v0 + 248) = v21;
    *v21 = v0;
    v21[1] = sub_10098C554;
    return v26(*(_QWORD *)(v0 + 200), v20);
  }
  else
  {
    v23 = (_QWORD *)swift_task_alloc(dword_1013F71CC);
    *(_QWORD *)(v0 + 256) = v23;
    *v23 = v0;
    v23[1] = sub_10098C5C8;
    return sub_100899424(*(_BYTE *)(v0 + 264));
  }
}

uint64_t sub_10098C554()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 240);
  v5 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 248));
  swift_unknownObjectRelease(v2);
  v3 = (_QWORD *)swift_task_alloc(dword_1013F71CC);
  *(_QWORD *)(v1 + 256) = v3;
  *v3 = v5;
  v3[1] = sub_10098C5C8;
  return sub_100899424(*(_BYTE *)(v1 + 264));
}

uint64_t sub_10098C5C8()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 256));
  return swift_task_switch(sub_10098C614, *(_QWORD *)(v1 + 224), *(_QWORD *)(v1 + 232));
}

uint64_t sub_10098C614()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;

  v1 = *(_QWORD *)(v0 + 208);
  v2 = *(_QWORD *)(v0 + 200);
  v3 = swift_release(*(_QWORD *)(v0 + 216));
  (*(void (**)(uint64_t, __n128))(*(_QWORD *)v1 + 336))(v2, v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10098C658(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2[46] = a1;
  v2[47] = v1;
  v3 = type metadata accessor for UUID(0);
  v2[48] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[49] = v4;
  v2[50] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  v2[51] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C(&qword_1013FED60);
  v2[52] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[53] = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[54] = swift_task_alloc(v8);
  v2[55] = swift_task_alloc(v8);
  v9 = type metadata accessor for MainActor(0);
  v2[56] = v9;
  v2[57] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  v2[58] = v10;
  v2[59] = v11;
  return swift_task_switch(sub_10098C74C, v10, v11);
}

uint64_t sub_10098C74C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  void (*v6)(uint64_t, uint64_t);
  id v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t inited;
  id v21;
  uint64_t v22;
  uint64_t v23;
  Swift::String v24;
  uint64_t *v25;
  void *v26;
  uint64_t v27;
  Swift::String v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v2 = *(_QWORD *)(v0 + 432);
  v1 = *(_QWORD *)(v0 + 440);
  v3 = *(_QWORD *)(v0 + 416);
  v4 = *(_QWORD *)(v0 + 424);
  GroupSession.state.getter();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v2, enum case for GroupSession.State.joined<A>(_:), v3);
  sub_1004CBA30(&qword_1013FED68, &qword_1013FED60, (uint64_t)&protocol conformance descriptor for GroupSession<A>.State);
  v5 = dispatch thunk of static Equatable.== infix(_:_:)(v1, v2);
  v6 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v6(v2, v3);
  v6(v1, v3);
  if ((v5 & 1) != 0)
  {
    swift_release(*(_QWORD *)(v0 + 456));
    if (qword_1013DD888 != -1)
      swift_once(&qword_1013DD888, sub_100A05DE4);
    swift_beginAccess(&static OS_os_log.realTimeSync, v0 + 336, 0, 0);
    v7 = (id)static OS_os_log.realTimeSync;
    v9 = static os_log_type_t.default.getter(v8);
    sub_100A06EBC((uint64_t)v7, &_mh_execute_header, v9, "CRLGroupSessionManager: we should not be attempting group session if the state is already .joined", 97, 2, (uint64_t)_swiftEmptyArrayStorage);

    v11 = *(_QWORD *)(v0 + 432);
    v13 = *(_QWORD *)(v0 + 400);
    v12 = *(_QWORD *)(v0 + 408);
    swift_task_dealloc(*(_QWORD *)(v0 + 440));
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v10 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v0 + 376) + 296))(*(_QWORD *)(v0 + 368));
    *(_QWORD *)(v0 + 480) = v10;
    v15 = v10;
    v16 = qword_1013DD888;
    swift_retain(v10);
    if (v16 != -1)
      swift_once(&qword_1013DD888, sub_100A05DE4);
    v39 = *(_QWORD *)(v0 + 448);
    v17 = *(_QWORD *)(v0 + 408);
    swift_beginAccess(&static OS_os_log.realTimeSync, v0 + 240, 0, 0);
    v18 = (void *)static OS_os_log.realTimeSync;
    v19 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    *(_QWORD *)(v0 + 488) = v19;
    inited = swift_initStackObject(v19, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
    *(_QWORD *)(v0 + 224) = type metadata accessor for CRLOpportunisticGroupActivity(0);
    *(_QWORD *)(v0 + 232) = sub_1004B7878(&qword_1013FED70, type metadata accessor for CRLOpportunisticGroupActivity, (uint64_t)&unk_100F1E6F4);
    swift_retain(v15);
    v21 = v18;
    GroupSession.activity.getter();
    swift_release(v15);
    sub_1004BB5A4((_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 224));
    v22 = sub_10098EB14(v17);
    v40 = UUID.uuidString.getter(v22);
    v41 = v23;
    swift_bridgeObjectRetain(v23);
    v24._countAndFlagsBits = 58;
    v24._object = (void *)0xE100000000000000;
    String.append(_:)(v24);
    swift_bridgeObjectRelease();
    v25 = (uint64_t *)(v17 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
    v27 = *v25;
    v26 = (void *)v25[1];
    swift_bridgeObjectRetain(v41);
    v28._countAndFlagsBits = v27;
    v28._object = v26;
    String.append(_:)(v28);
    swift_bridgeObjectRelease();
    sub_1004B84A4(v17, type metadata accessor for CRLGloballyScopedBoardIdentifier);
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v29 = sub_1004CFC2C();
    *(_QWORD *)(v0 + 496) = v29;
    *(_QWORD *)(inited + 64) = v29;
    *(_QWORD *)(inited + 32) = v40;
    *(_QWORD *)(inited + 40) = v41;
    *(_QWORD *)(v0 + 504) = OBJC_IVAR____TtC8Freeform20CRLBoardGroupSession_sessionID;
    v30 = UUID.uuidString.getter(v29);
    *(_QWORD *)(inited + 96) = &type metadata for String;
    *(_QWORD *)(inited + 104) = v29;
    *(_QWORD *)(inited + 72) = v30;
    *(_QWORD *)(inited + 80) = v31;
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 200));
    v33 = static os_log_type_t.default.getter(v32);
    sub_100A06EBC((uint64_t)v21, &_mh_execute_header, v33, "CRLGroupSessionManager: received board %@ from group session with ID: %@.", 73, 2, inited);
    swift_setDeallocating(inited);
    v34 = *(_QWORD *)(inited + 16);
    v35 = sub_1004B804C(&qword_1013E0190);
    *(_QWORD *)(v0 + 512) = v35;
    swift_arrayDestroy(inited + 32, v34, v35);

    *(_QWORD *)(v0 + 520) = static MainActor.shared.getter(v36);
    v37 = dispatch thunk of Actor.unownedExecutor.getter(v39, &protocol witness table for MainActor);
    return swift_task_switch(sub_10098CC10, v37, v38);
  }
}

uint64_t sub_10098CC10()
{
  _QWORD *v0;

  swift_release(v0[65]);
  return swift_task_switch(sub_10098CC48, v0[58], v0[59]);
}

uint64_t sub_10098CC48()
{
  uint64_t *v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t **v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  __n128 v12;
  uint64_t v13;
  __n128 v14;
  char isUniquelyReferenced_nonNull_native;
  __n128 v16;
  int *v17;
  uint64_t **v18;
  uint64_t (*v19)(uint64_t);
  uint64_t v20;

  Strong = swift_unknownObjectWeakLoadStrong(v0[47] + 24);
  v0[66] = Strong;
  if (Strong)
  {
    v2 = dword_10140E204;
    swift_retain(v0[60]);
    v3 = (uint64_t **)swift_task_alloc(v2);
    v0[67] = (uint64_t)v3;
    *v3 = v0;
    v3[1] = (uint64_t *)sub_10098CE4C;
    return sub_100CBC9A0(v0[47], (uint64_t)&off_101269E88, v0[60]);
  }
  else
  {
    v5 = v0[60];
    v7 = v0[49];
    v6 = v0[50];
    v8 = (_QWORD *)v0[47];
    v9 = v0[48];
    v10 = v5 + v0[63];
    sub_10098D64C(v5);
    v11 = (id)static OS_os_log.realTimeSync;
    v13 = static os_log_type_t.default.getter(v12);
    sub_100A06EBC((uint64_t)v11, &_mh_execute_header, v13, "CRLGroupSessionManager: Calling out to group session to join.", 61, 2, (uint64_t)_swiftEmptyArrayStorage);

    swift_retain(v5);
    sub_10098DEA8();
    v14 = swift_release(v5);
    (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v7 + 16))(v6, v10, v9, v14);
    swift_beginAccess(v8 + 5, v0 + 39, 33, 0);
    swift_retain(v5);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v8[5]);
    v20 = v8[5];
    v8[5] = 0x8000000000000000;
    sub_1008295B0(v5, v6, isUniquelyReferenced_nonNull_native);
    v8[5] = v20;
    v16 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, __n128))(v7 + 8))(v6, v9, v16);
    swift_endAccess(v0 + 39);
    v17 = *(int **)(*v8 + 312);
    v19 = (uint64_t (*)(uint64_t))((char *)v17 + *v17);
    v18 = (uint64_t **)swift_task_alloc(v17[1]);
    v0[69] = (uint64_t)v18;
    *v18 = v0;
    v18[1] = (uint64_t *)sub_10098CEE0;
    return v19(v0[60]);
  }
}

uint64_t sub_10098CE4C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 536);
  *(_QWORD *)(*(_QWORD *)v1 + 544) = v0;
  swift_task_dealloc(v3);
  v4 = v2[66];
  v5 = v2[60];
  if (v0)
  {
    swift_release(v2[60]);
    swift_unknownObjectRelease(v4);
    v6 = v2[58];
    v7 = v2[59];
    v8 = sub_10098D12C;
  }
  else
  {
    swift_unknownObjectRelease(v2[66]);
    swift_release(v5);
    v6 = v2[58];
    v7 = v2[59];
    v8 = sub_10098CFA0;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_10098CEE0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 480);
  swift_task_dealloc(*(_QWORD *)(*v0 + 552));
  swift_release(v2);
  return swift_task_switch(sub_10098CF38, *(_QWORD *)(v1 + 464), *(_QWORD *)(v1 + 472));
}

uint64_t sub_10098CF38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 456);
  swift_release(*(_QWORD *)(v0 + 480));
  swift_release(v1);
  v2 = *(_QWORD *)(v0 + 432);
  v4 = *(_QWORD *)(v0 + 400);
  v3 = *(_QWORD *)(v0 + 408);
  swift_task_dealloc(*(_QWORD *)(v0 + 440));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10098CFA0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  __n128 v8;
  uint64_t v9;
  __n128 v10;
  char isUniquelyReferenced_nonNull_native;
  __n128 v12;
  int *v13;
  _QWORD *v14;
  uint64_t (*v16)(_QWORD);
  uint64_t v17;

  v1 = v0[60];
  v3 = v0[49];
  v2 = v0[50];
  v4 = (_QWORD *)v0[47];
  v5 = v0[48];
  v6 = v1 + v0[63];
  sub_10098D64C(v1);
  v7 = (id)static OS_os_log.realTimeSync;
  v9 = static os_log_type_t.default.getter(v8);
  sub_100A06EBC((uint64_t)v7, &_mh_execute_header, v9, "CRLGroupSessionManager: Calling out to group session to join.", 61, 2, (uint64_t)_swiftEmptyArrayStorage);

  swift_retain(v1);
  sub_10098DEA8();
  v10 = swift_release(v1);
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v3 + 16))(v2, v6, v5, v10);
  swift_beginAccess(v4 + 5, v0 + 39, 33, 0);
  swift_retain(v1);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v4[5]);
  v17 = v4[5];
  v4[5] = 0x8000000000000000;
  sub_1008295B0(v1, v2, isUniquelyReferenced_nonNull_native);
  v4[5] = v17;
  v12 = swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, __n128))(v3 + 8))(v2, v5, v12);
  swift_endAccess(v0 + 39);
  v13 = *(int **)(*v4 + 312);
  v16 = (uint64_t (*)(_QWORD))((char *)v13 + *v13);
  v14 = (_QWORD *)swift_task_alloc(v13[1]);
  v0[69] = v14;
  *v14 = v0;
  v14[1] = sub_10098CEE0;
  return v16(v0[60]);
}

uint64_t sub_10098D12C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  int *v3;
  _QWORD *v4;
  uint64_t (*v6)(_QWORD);

  v2 = v1[47];
  v1[70] = static MainActor.shared.getter(a1);
  v3 = *(int **)(*(_QWORD *)v2 + 320);
  v6 = (uint64_t (*)(_QWORD))((char *)v3 + *v3);
  v4 = (_QWORD *)swift_task_alloc(v3[1]);
  v1[71] = v4;
  *v4 = v1;
  v4[1] = sub_10098D1A4;
  return v6(v1[60]);
}

uint64_t sub_10098D1A4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 448);
  swift_task_dealloc(*(_QWORD *)(*v0 + 568));
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  *(_QWORD *)(v1 + 576) = v3;
  *(_QWORD *)(v1 + 584) = v4;
  return swift_task_switch(sub_10098D220, v3, v4);
}

uint64_t sub_10098D220(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v1 + 448);
  *(_QWORD *)(v1 + 592) = static MainActor.shared.getter(a1);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_10098D280, v3, v4);
}

uint64_t sub_10098D280()
{
  _QWORD *v0;

  swift_release(v0[74]);
  return swift_task_switch(sub_10098D2BC, v0[72], v0[73]);
}

uint64_t sub_10098D2BC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t inited;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = v0[68];
  v2 = v0[64];
  v3 = v0[61];
  v4 = v0[62];
  v5 = v0[60];
  swift_release(v0[70]);
  v6 = (void *)static OS_os_log.realTimeSync;
  inited = swift_initStackObject(v3, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  swift_getErrorValue(v1, v0 + 45, v0 + 36);
  v8 = v0[37];
  v9 = v0[38];
  v10 = v6;
  v11 = Error.localizedDescription.getter(v8, v9);
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = v4;
  *(_QWORD *)(inited + 32) = v11;
  *(_QWORD *)(inited + 40) = v12;
  v13 = static os_log_type_t.error.getter(v11);
  sub_100A06EBC((uint64_t)v10, &_mh_execute_header, v13, "CRLGroupSessionManager: could not associate group session. Error: %@", 68, 2, inited);
  swift_setDeallocating(inited);
  swift_arrayDestroy(inited + 32, 1, v2);

  swift_release(v5);
  return swift_task_switch(sub_10098D3EC, v0[58], v0[59]);
}

uint64_t sub_10098D3EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 544);
  v2 = *(_QWORD *)(v0 + 456);
  swift_release(*(_QWORD *)(v0 + 480));
  swift_release(v2);
  swift_errorRelease(v1);
  v3 = *(_QWORD *)(v0 + 432);
  v5 = *(_QWORD *)(v0 + 400);
  v4 = *(_QWORD *)(v0 + 408);
  swift_task_dealloc(*(_QWORD *)(v0 + 440));
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10098D460(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v3 + 96) = a2;
  *(_QWORD *)(v3 + 40) = a1;
  *(_QWORD *)(v3 + 48) = v2;
  v4 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v3 + 56) = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  *(_QWORD *)(v3 + 64) = v5;
  *(_QWORD *)(v3 + 72) = v6;
  return swift_task_switch(sub_10098D4D0, v5, v6);
}

uint64_t sub_10098D4D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;
  __n128 v10;
  char *v11;

  v1 = *(_QWORD *)(v0 + 48);
  swift_beginAccess(v1 + 40, v0 + 16, 0, 0);
  v2 = *(_QWORD *)(v1 + 40);
  if (*(_QWORD *)(v2 + 16))
  {
    v3 = *(_QWORD *)(v0 + 40);
    swift_bridgeObjectRetain(v2);
    v4 = sub_100842EFC(v3);
    if ((v5 & 1) != 0)
    {
      v6 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v4);
      *(_QWORD *)(v0 + 80) = v6;
      swift_retain(v6);
      swift_bridgeObjectRelease();
      v11 = (char *)&dword_1013FEE00 + dword_1013FEE00;
      v7 = (_QWORD *)swift_task_alloc(unk_1013FEE04);
      *(_QWORD *)(v0 + 88) = v7;
      *v7 = v0;
      v7[1] = sub_10098D5C4;
      return ((uint64_t (*)(uint64_t, _QWORD))v11)(v6, *(unsigned __int8 *)(v0 + 96));
    }
    v9 = *(_QWORD *)(v0 + 56);
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = *(_QWORD *)(v0 + 56);
  }
  v10 = swift_release(v9);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v10);
}

uint64_t sub_10098D5C4()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 88));
  return swift_task_switch(sub_10098D610, *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72));
}

uint64_t sub_10098D610()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;

  v1 = *(_QWORD *)(v0 + 80);
  swift_release(*(_QWORD *)(v0 + 56));
  v2 = swift_release(v1);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
}

double sub_10098D64C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  double result;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[3];

  v2 = v1;
  v20[0] = *(_QWORD *)(a1 + 16);
  v4 = swift_allocObject(&unk_10128CDF8, 24, 7);
  swift_weakInit(v4 + 16, v1);
  swift_retain(v20[0]);
  v5 = sub_1004B804C(&qword_1013FED88);
  v6 = sub_1004CBA30(&qword_1013FED90, &qword_1013FED88, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v7 = Publisher<>.sink(receiveValue:)(sub_100995528, v4, v5, v6);
  swift_release(v4);
  swift_release(v20[0]);
  v8 = a1 + OBJC_IVAR____TtC8Freeform20CRLBoardGroupSession_sessionID;
  swift_beginAccess(v1 + 48, v20, 33, 0);
  swift_retain(v7);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v1 + 48));
  v18 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v1 + 48) = 0x8000000000000000;
  sub_100826410(v7, v8, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v1 + 48) = v18;
  swift_bridgeObjectRelease();
  swift_endAccess(v20);
  v20[0] = *(_QWORD *)(a1 + 24);
  v10 = v20[0];
  v11 = swift_allocObject(&unk_10128CDF8, 24, 7);
  swift_weakInit(v11 + 16, v2);
  v12 = swift_allocObject(&unk_10128CE20, 32, 7);
  *(_QWORD *)(v12 + 16) = v11;
  *(_QWORD *)(v12 + 24) = a1;
  swift_retain(v10);
  swift_retain(a1);
  v13 = sub_1004B804C(&qword_1013FED98);
  v14 = sub_1004CBA30(&qword_1013FEDA0, &qword_1013FED98, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v15 = Publisher<>.sink(receiveValue:)(sub_10099555C, v12, v13, v14);
  swift_release(v12);
  swift_release(v20[0]);
  swift_beginAccess(v2 + 56, v20, 33, 0);
  swift_retain(v15);
  v16 = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v2 + 56));
  v19 = *(_QWORD *)(v2 + 56);
  *(_QWORD *)(v2 + 56) = 0x8000000000000000;
  sub_100826410(v15, v8, v16);
  *(_QWORD *)(v2 + 56) = v19;
  swift_bridgeObjectRelease();
  swift_endAccess(v20);
  swift_release(v15);
  *(_QWORD *)&result = swift_release(v7).n128_u64[0];
  return result;
}

double sub_10098D8B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  double (*v15)(char *, uint64_t);
  double result;
  void *v17;
  uint64_t v18;
  uint64_t inited;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t Strong;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t, uint64_t);
  uint64_t v47;
  char v48[24];
  char v49[72];
  char v50[32];

  v4 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v4);
  v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_1013FEDD8);
  v45 = *(_QWORD *)(v7 - 8);
  v8 = *(_QWORD *)(v45 + 64);
  __chkstk_darwin(v7);
  v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = v10;
  v11 = *(int *)(v10 + 48);
  v12 = type metadata accessor for UUID(0);
  v13 = *(_QWORD *)(v12 - 8);
  v46 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v46(v9, a1, v12);
  v14 = *(unsigned __int8 *)(a1 + v11);
  v9[v11] = v14;
  v15 = *(double (**)(char *, uint64_t))(v13 + 8);
  v15(v9, v12);
  if (v14 == 1)
  {
    v43 = v8;
    v44 = v6;
    v42 = a2 + 16;
    if (qword_1013DD888 != -1)
      swift_once(&qword_1013DD888, sub_100A05DE4);
    swift_beginAccess(&static OS_os_log.realTimeSync, v50, 0, 0);
    v17 = (void *)static OS_os_log.realTimeSync;
    v18 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v18, v49);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v20 = *(int *)(v47 + 48);
    v46((char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v12);
    v9[v20] = *(_BYTE *)(a1 + v11);
    v21 = v17;
    v22 = UUID.uuidString.getter(v21);
    v24 = v23;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = sub_1004CFC2C();
    *(_QWORD *)(inited + 32) = v22;
    *(_QWORD *)(inited + 40) = v24;
    v25.n128_f64[0] = v15(v9, v12);
    v26 = static os_log_type_t.default.getter(v25);
    sub_100A06EBC((uint64_t)v21, &_mh_execute_header, v26, "CRLGroupSessionManager: Group session invalidated. Cleaning up session with ID: %@.", 83, 2, inited);
    swift_setDeallocating(inited);
    v27 = *(_QWORD *)(inited + 16);
    v28 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, v27, v28);

    v29 = type metadata accessor for TaskPriority(0);
    v30 = (uint64_t)v44;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v44, 1, 1, v29);
    v31 = swift_allocObject(&unk_10128CDF8, 24, 7);
    v32 = v42;
    swift_beginAccess(v42, v48, 0, 0);
    Strong = swift_weakLoadStrong(v32);
    swift_weakInit(v31 + 16, Strong);
    v34 = swift_release(Strong);
    v35 = *(int *)(v47 + 48);
    ((void (*)(char *, uint64_t, uint64_t, __n128))v46)(v9, a1, v12, v34);
    v9[v35] = *(_BYTE *)(a1 + v11);
    type metadata accessor for MainActor(0);
    swift_retain(v31);
    v37 = static MainActor.shared.getter(v36);
    v38 = *(unsigned __int8 *)(v45 + 80);
    v39 = (v38 + 40) & ~v38;
    v40 = (_QWORD *)swift_allocObject(&unk_10128CE70, v39 + v43, v38 | 7);
    v40[2] = v37;
    v40[3] = &protocol witness table for MainActor;
    v40[4] = v31;
    sub_1004C4938((uint64_t)v9, (uint64_t)v40 + v39, &qword_1013FEDD8);
    swift_release(v31);
    v41 = sub_100521BB8(v30, (uint64_t)&unk_1013FEDE8, (uint64_t)v40);
    *(_QWORD *)&result = swift_release(v41).n128_u64[0];
  }
  return result;
}

double sub_10098DC24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t Strong;
  double result;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t inited;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  _BYTE v27[112];
  _BYTE v28[24];
  _BYTE v29[24];

  v6 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v6);
  v8 = &v27[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a2 += 16;
  swift_beginAccess(a2, v29, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v11 = Strong;
    if (qword_1013DD888 != -1)
      swift_once(&qword_1013DD888, sub_100A05DE4);
    swift_beginAccess(&static OS_os_log.realTimeSync, v28, 0, 0);
    v12 = (void *)static OS_os_log.realTimeSync;
    v13 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v13, v27);
    *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
    v15 = v12;
    v16 = UUID.uuidString.getter(v15);
    v18 = v17;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = sub_1004CFC2C();
    *(_QWORD *)(inited + 32) = v16;
    *(_QWORD *)(inited + 40) = v18;
    *(_QWORD *)(inited + 96) = sub_1004B804C(&qword_1013FEDA8);
    *(_QWORD *)(inited + 104) = sub_1004CBA30(&qword_1013FEDB0, &qword_1013FEDA8, (uint64_t)&protocol conformance descriptor for Set<A>);
    *(_QWORD *)(inited + 72) = a1;
    v19 = swift_bridgeObjectRetain(a1);
    v20 = static os_log_type_t.default.getter(v19);
    sub_100A06EBC((uint64_t)v15, &_mh_execute_header, v20, "CRLGroupSessionManager: Group session active participants updated. ID: %{public}@. ActiveParticipants: %@", 105, 2, inited);
    swift_setDeallocating(inited);
    v21 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 2, v21);

    v22 = type metadata accessor for TaskPriority(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v8, 1, 1, v22);
    type metadata accessor for MainActor(0);
    swift_bridgeObjectRetain(a1);
    swift_retain(v11);
    swift_retain(a3);
    v24 = static MainActor.shared.getter(v23);
    v25 = (_QWORD *)swift_allocObject(&unk_10128CE48, 56, 7);
    v25[2] = v24;
    v25[3] = &protocol witness table for MainActor;
    v25[4] = v11;
    v25[5] = a1;
    v25[6] = a3;
    v26 = sub_100521BB8((uint64_t)v8, (uint64_t)&unk_1013FEDC0, (uint64_t)v25);
    swift_release(v26);
    *(_QWORD *)&result = swift_release(v11).n128_u64[0];
  }
  return result;
}

uint64_t sub_10098DEA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  void *v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  _BYTE v25[72];
  _BYTE v26[24];

  v1 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v1);
  v3 = &v25[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v25[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1013DD888 != -1)
    swift_once(&qword_1013DD888, sub_100A05DE4);
  swift_beginAccess(&static OS_os_log.realTimeSync, v26, 0, 0);
  v8 = (void *)static OS_os_log.realTimeSync;
  v9 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v9, v25);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v11 = *(_QWORD *)(v0 + qword_101480A40);
  v12 = v8;
  v13 = GroupSession.id.getter();
  v14 = UUID.uuidString.getter(v13);
  v16 = v15;
  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v14;
  *(_QWORD *)(inited + 40) = v16;
  v18 = static os_log_type_t.default.getter(v17);
  sub_100A06EBC((uint64_t)v12, &_mh_execute_header, v18, "CRLBoardShareSession: joining group session with ID: %@.", 56, 2, inited);
  swift_setDeallocating(inited);
  v19 = *(_QWORD *)(inited + 16);
  v20 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, v19, v20);

  v21 = type metadata accessor for TaskPriority(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v3, 1, 1, v21);
  v22 = (_QWORD *)swift_allocObject(&unk_10128CDD0, 40, 7);
  v22[2] = 0;
  v22[3] = 0;
  v22[4] = v11;
  swift_retain(v11);
  v23 = sub_1009880C4((uint64_t)v3, (uint64_t)&unk_1013FED80, (uint64_t)v22);
  swift_release(v23);
  return sub_1004CB800((uint64_t)v3, &qword_1013E01F0);
}

double sub_10098E0F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  __n128 v43;
  char *v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  __n128 v56;
  uint64_t v57;
  double result;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  int v62;
  char *v63;
  uint64_t v64;
  unint64_t v65;
  void (*v66)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  _BYTE v82[24];
  _BYTE v83[40];
  id v84[5];
  char v85[8];

  v1 = v0;
  v76 = sub_1004B804C(&qword_1013FEE20);
  v77 = *(_QWORD *)(v76 - 8);
  __chkstk_darwin(v76);
  v74 = (char *)&v59 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1004B804C(&qword_1013FEE28);
  v4 = *(_QWORD *)(v3 - 8);
  v78 = v3;
  v79 = v4;
  __chkstk_darwin(v3);
  v75 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C(&qword_1013E48E0);
  __chkstk_darwin(v6);
  v8 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C(&qword_1013FEE30);
  v70 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = sub_1004B804C(&qword_1013FEE38);
  v73 = *(_QWORD *)(v72 - 8);
  __chkstk_darwin(v72);
  v81 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = type metadata accessor for UUID(0);
  v80 = *(_QWORD *)(v68 - 8);
  v13 = *(_QWORD *)(v80 + 64);
  __chkstk_darwin(v68);
  v63 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v59 - v15;
  v17 = swift_allocObject(&unk_10128CE98, 24, 7);
  v69 = v17;
  *(_QWORD *)(v17 + 16) = 0;
  v18 = (uint64_t *)(v17 + 16);
  v64 = v0;
  v71 = v16;
  v19 = GroupSession.id.getter();
  GroupSession.activity.getter(v84, v19);
  v62 = *((unsigned __int8 *)v84[0] + OBJC_IVAR____TtC8Freeform29CRLOpportunisticGroupActivity_isMeToMe);
  swift_release(v84[0]);
  GroupSession.activity.getter(v84, v20);
  v21 = swift_release(v84[0]);
  GroupSession.$state.getter(v21);
  v22 = sub_1004B8930(0, (unint64_t *)&qword_1013DE090, OS_dispatch_queue_ptr);
  v61 = v22;
  v84[0] = (id)static OS_dispatch_queue.main.getter(v23);
  v67 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v66 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 56);
  v60 = v8;
  v66(v8, 1, 1, v67);
  v24 = sub_1004CBA30(&qword_1013FEE40, &qword_1013FEE30, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v65 = sub_1009974F8();
  Publisher.receive<A>(on:options:)(v84, v8, v9, v22, v24);
  sub_1004CB800((uint64_t)v8, &qword_1013E48E0);

  (*(void (**)(char *, uint64_t))(v70 + 8))(v11, v9);
  v25 = swift_allocObject(&unk_10128CEC0, 24, 7);
  swift_weakInit(v25 + 16, v1);
  v26 = v80;
  v27 = v63;
  v28 = v68;
  (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v63, v16, v68);
  v29 = *(unsigned __int8 *)(v26 + 80);
  v30 = (v29 + 25) & ~v29;
  v31 = v30 + v13;
  v32 = (v30 + v13) & 0xFFFFFFFFFFFFFFF8;
  v33 = swift_allocObject(&unk_10128CEE8, v32 + 16, v29 | 7);
  *(_QWORD *)(v33 + 16) = v25;
  *(_BYTE *)(v33 + 24) = 1;
  v34 = v27;
  v35 = v28;
  (*(void (**)(uint64_t, char *, uint64_t))(v26 + 32))(v33 + v30, v34, v28);
  *(_BYTE *)(v33 + v31) = v62;
  v36 = v69;
  *(_QWORD *)(v32 + v33 + 8) = v69;
  v37 = sub_1004CBA30(&qword_1013FEE48, &qword_1013FEE38, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  swift_retain(v36);
  v38 = v72;
  v39 = v81;
  v40 = Publisher<>.sink(receiveValue:)(sub_1009975E0, v33, v72, v37);
  v41 = swift_release(v33);
  (*(void (**)(char *, uint64_t, __n128))(v73 + 8))(v39, v38, v41);
  swift_beginAccess(v18, v85, 1, 0);
  v42 = *v18;
  *v18 = v40;
  v43 = swift_release(v42);
  v44 = v74;
  v45.n128_f64[0] = GroupSession.$activeParticipants.getter(v43);
  v46 = v61;
  v84[0] = (id)static OS_dispatch_queue.main.getter(v45);
  v47 = (uint64_t)v60;
  v66(v60, 1, 1, v67);
  v48 = sub_1004CBA30(&qword_1013FEE50, &qword_1013FEE20, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v49 = v75;
  v50 = v76;
  Publisher.receive<A>(on:options:)(v84, v47, v76, v46, v48);
  sub_1004CB800(v47, &qword_1013E48E0);

  (*(void (**)(char *, uint64_t))(v77 + 8))(v44, v50);
  v51 = swift_allocObject(&unk_10128CEC0, 24, 7);
  v52 = v64;
  swift_weakInit(v51 + 16, v64);
  v53 = sub_1004CBA30(&qword_1013FEE58, &qword_1013FEE28, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v54 = v78;
  v55 = (void *)Publisher<>.sink(receiveValue:)(sub_10099763C, v51, v78, v53);
  v56 = swift_release(v51);
  (*(void (**)(char *, uint64_t, __n128))(v79 + 8))(v49, v54, v56);
  v84[3] = (id)type metadata accessor for AnyCancellable(0);
  v84[4] = &protocol witness table for AnyCancellable;
  v84[0] = v55;
  (*(void (**)(char *, uint64_t))(v80 + 8))(v71, v35);
  sub_1004C4938((uint64_t)v84, (uint64_t)v83, &qword_1013EE2F8);
  v57 = v52 + qword_101404F00;
  swift_beginAccess(v52 + qword_101404F00, v82, 33, 0);
  sub_100582338((uint64_t)v83, v57, &qword_1013EE2F8);
  swift_endAccess(v82);
  *(_QWORD *)&result = swift_release(v36).n128_u64[0];
  return result;
}

uint64_t sub_10098E798(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  uint64_t inited;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  __n128 v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  Swift::String v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  void *v31;
  Swift::String v32;
  uint64_t v33;
  id v34;
  NSString v35;
  NSString v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE v51[112];
  _BYTE v52[32];

  v3 = v2;
  v6 = type metadata accessor for GroupActivityMetadata.ActivityType(0);
  __chkstk_darwin(v6);
  v46 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for GroupActivityMetadata(0);
  v47 = *(_QWORD *)(v8 - 8);
  v48 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_BYTE *)(v2 + OBJC_IVAR____TtC8Freeform29CRLOpportunisticGroupActivity_isMeToMe) = a2;
  if (qword_1013DD888 != -1)
    swift_once(&qword_1013DD888, sub_100A05DE4);
  swift_beginAccess(&static OS_os_log.realTimeSync, v52, 0, 0);
  v11 = (void *)static OS_os_log.realTimeSync;
  v12 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v12, v51);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  v14 = v11;
  v15 = UUID.uuidString.getter(v14);
  v17 = v16;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v18 = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v15;
  *(_QWORD *)(inited + 40) = v17;
  v20 = 28526;
  if ((a2 & 1) != 0)
    v20 = 7562617;
  v21 = 0xE200000000000000;
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v18;
  if ((a2 & 1) != 0)
    v21 = 0xE300000000000000;
  *(_QWORD *)(inited + 64) = v18;
  *(_QWORD *)(inited + 72) = v20;
  *(_QWORD *)(inited + 80) = v21;
  v22 = static os_log_type_t.default.getter(v19);
  sub_100A06EBC((uint64_t)v14, &_mh_execute_header, v22, "Created new opportunistic group activity with activity ID: %{public}@ MeToMe: %@", 80, 2, inited);
  swift_setDeallocating(inited);
  v23 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 2, v23);

  v49 = UUID.uuidString.getter(v24);
  v50 = v25;
  swift_bridgeObjectRetain(v25);
  v26._countAndFlagsBits = 58;
  v26._object = (void *)0xE100000000000000;
  String.append(_:)(v26);
  swift_bridgeObjectRelease();
  v27 = v49;
  v28 = v50;
  v29 = (uint64_t *)(a1 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  v30 = *v29;
  v31 = (void *)v29[1];
  v49 = v27;
  v50 = v28;
  swift_bridgeObjectRetain(v28);
  v32._countAndFlagsBits = v30;
  v32._object = v31;
  String.append(_:)(v32);
  swift_bridgeObjectRelease();
  v33 = v50;
  *(_QWORD *)(v3 + 16) = v49;
  *(_QWORD *)(v3 + 24) = v33;
  v34 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v35 = String._bridgeToObjectiveC()();
  v36 = String._bridgeToObjectiveC()();
  v37 = objc_msgSend(v34, "localizedStringForKey:value:table:", v35, v36, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
  v39 = v38;
  v41 = v40;

  v42 = GroupActivityMetadata.init()();
  v43 = v46;
  static GroupActivityMetadata.ActivityType.generic.getter(v42);
  GroupActivityMetadata.type.setter(v43);
  GroupActivityMetadata.title.setter(v39, v41);
  sub_1004B84A4(a1, type metadata accessor for CRLGloballyScopedBoardIdentifier);
  (*(void (**)(uint64_t, char *, uint64_t))(v47 + 32))(v3 + OBJC_IVAR____TtC8Freeform29CRLOpportunisticGroupActivity_metadata, v10, v48);
  return v3;
}

uint64_t sub_10098EB14@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[2];

  v3 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v3);
  v4 = type metadata accessor for UUID(0);
  __chkstk_darwin(v4);
  __chkstk_darwin(v5);
  v14[0] = type metadata accessor for CRLBoardIdentifierStorage(0);
  __chkstk_darwin(v14[0]);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  __chkstk_darwin(v8);
  v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(v1 + 16);
  v11 = *(_QWORD *)(v1 + 24);
  swift_bridgeObjectRetain(v11);
  sub_10067B81C(v12, v11, (uint64_t)v7);
  sub_1004B84E0((uint64_t)v7, (uint64_t)v10, type metadata accessor for CRLBoardIdentifierStorage);
  return sub_1004B84E0((uint64_t)v10, a1, type metadata accessor for CRLGloballyScopedBoardIdentifier);
}

uint64_t sub_10098EE98()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x617461646174656DLL;
  if (*v0 != 1)
    v1 = 0x654D6F54654D7369;
  if (*v0)
    return v1;
  else
    return 25705;
}

uint64_t sub_10098EEE8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_10099795C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10098EF0C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1009933F4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10098EF34(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1009933F4();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10098EF5C()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;

  swift_bridgeObjectRelease(v0[3]);
  v1 = (char *)v0 + OBJC_IVAR____TtC8Freeform29CRLOpportunisticGroupActivity_metadata;
  v2 = type metadata accessor for GroupActivityMetadata(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

void sub_10098EFB4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;

  v3 = v2;
  v4 = v1;
  v6 = type metadata accessor for GroupActivityMetadata(0);
  v24 = *(_QWORD *)(v6 - 8);
  v25 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C(&qword_1013FEEC0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v14 = a1[4];
  sub_1004BB5A4(a1, v13);
  v15 = sub_1009933F4();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLOpportunisticGroupActivity.CodingKeys, &type metadata for CRLOpportunisticGroupActivity.CodingKeys, v15, v13, v14);
  v16 = *(_QWORD *)(v4 + 16);
  v17 = *(_QWORD *)(v4 + 24);
  v28 = 0;
  swift_bridgeObjectRetain(v17);
  KeyedEncodingContainer.encode(_:forKey:)(v16, v17, &v28, v9);
  if (v3)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    swift_bridgeObjectRelease();
  }
  else
  {
    v18 = v10;
    v19 = swift_bridgeObjectRelease();
    v21 = v24;
    v20 = v25;
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v24 + 16))(v8, v4 + OBJC_IVAR____TtC8Freeform29CRLOpportunisticGroupActivity_metadata, v25, v19);
    v27 = 1;
    v22 = sub_1004B7878(&qword_1013FEEC8, (uint64_t (*)(uint64_t))&type metadata accessor for GroupActivityMetadata, (uint64_t)&protocol conformance descriptor for GroupActivityMetadata);
    KeyedEncodingContainer.encode<A>(_:forKey:)(v8, &v27, v9, v20, v22);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v20);
    v23 = *(unsigned __int8 *)(v4 + OBJC_IVAR____TtC8Freeform29CRLOpportunisticGroupActivity_isMeToMe);
    v26 = 2;
    KeyedEncodingContainer.encode(_:forKey:)(v23, &v26, v9);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v12, v9);
  }
}

_QWORD *sub_10098F1D8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  char v28;
  char v29;
  char v30;

  v3 = type metadata accessor for GroupActivityMetadata(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_1004B804C(&qword_1013FED28);
  v7 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1[3];
  v10 = a1[4];
  v26 = a1;
  sub_1004BB5A4(a1, v11);
  v12 = sub_1009933F4();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLOpportunisticGroupActivity.CodingKeys, &type metadata for CRLOpportunisticGroupActivity.CodingKeys, v12, v11, v10);
  if (v1)
  {
    v19 = v27;
    v16 = v26;
    v17 = type metadata accessor for CRLOpportunisticGroupActivity(0);
    swift_deallocPartialClassInstance(v19, v17, *(unsigned int *)(*v19 + 48), *(unsigned __int16 *)(*v19 + 52));
    v23 = v16;
  }
  else
  {
    v13 = v7;
    v24 = v4;
    v30 = 0;
    v14 = v25;
    v15 = KeyedDecodingContainer.decode(_:forKey:)(&v30, v25);
    v19 = v27;
    v27[2] = v15;
    v19[3] = v20;
    v29 = 1;
    v21 = sub_1004B7878(&qword_1013FED38, (uint64_t (*)(uint64_t))&type metadata accessor for GroupActivityMetadata, (uint64_t)&protocol conformance descriptor for GroupActivityMetadata);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v3, &v29, v14, v3, v21);
    (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))((uint64_t)v19 + OBJC_IVAR____TtC8Freeform29CRLOpportunisticGroupActivity_metadata, v6, v3);
    v28 = 2;
    v22 = KeyedDecodingContainer.decode(_:forKey:)(&v28, v14);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v25);
    *((_BYTE *)v19 + OBJC_IVAR____TtC8Freeform29CRLOpportunisticGroupActivity_isMeToMe) = v22 & 1;
    v23 = v26;
  }
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v23);
  return v19;
}

unint64_t sub_10098F470()
{
  return 0xD000000000000030;
}

uint64_t sub_10098F48C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v1 + OBJC_IVAR____TtC8Freeform29CRLOpportunisticGroupActivity_metadata;
  v5 = type metadata accessor for GroupActivityMetadata(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, v4, v5);
  return sub_1009933EC(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_10098F4F0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 24);
  *a1 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  a1[1] = v2;
  return swift_bridgeObjectRetain(v2);
}

_QWORD *sub_10098F500@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _QWORD *result;

  v5 = type metadata accessor for CRLOpportunisticGroupActivity(0);
  v6 = swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  result = sub_10098F1D8(a1);
  if (!v2)
    *a2 = v6;
  return result;
}

void sub_10098F558(_QWORD *a1)
{
  sub_10098EFB4(a1);
}

uint64_t sub_10098F57C(uint64_t a1)
{
  uint64_t result;

  result = sub_1004CBA30(&qword_1013FE7E0, &qword_1013FE7E8, (uint64_t)&protocol conformance descriptor for CKShareGroupSessionProvider<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_10098F5BC(uint64_t a1)
{
  uint64_t result;

  result = sub_1004CBA30(&qword_1013FE7F0, &qword_1013FE7F8, (uint64_t)&protocol conformance descriptor for PersonalGroupSessionProvider<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_10098F5F8()
{
  return type metadata accessor for CRLOpportunisticGroupActivity(0);
}

uint64_t type metadata accessor for CRLOpportunisticGroupActivity(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1013FE828, (uint64_t)&nominal type descriptor for CRLOpportunisticGroupActivity);
}

uint64_t sub_10098F614(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = &unk_100F1E520;
  result = type metadata accessor for GroupActivityMetadata(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = &unk_100F1E538;
    result = swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_10098F694(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE v50[24];
  uint64_t v51;

  v48 = a3;
  v5 = v4;
  v47 = a4;
  v8 = type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v47 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)&v47 - v15;
  *(_QWORD *)(v5 + OBJC_IVAR____TtC8Freeform36CRLBoardOpportunisticActivityWrapper_session) = 0;
  v17 = v5 + OBJC_IVAR____TtC8Freeform36CRLBoardOpportunisticActivityWrapper_sessionConfiguring;
  *(_QWORD *)(v17 + 8) = 0;
  swift_unknownObjectWeakInit(v17);
  *(_QWORD *)(v5 + OBJC_IVAR____TtC8Freeform36CRLBoardOpportunisticActivityWrapper_sessionObserverTask) = 0;
  v18 = v5 + OBJC_IVAR____TtC8Freeform36CRLBoardOpportunisticActivityWrapper_globallyScopedBoardIdentifier;
  sub_1004B8460(a1, v5 + OBJC_IVAR____TtC8Freeform36CRLBoardOpportunisticActivityWrapper_globallyScopedBoardIdentifier, type metadata accessor for CRLGloballyScopedBoardIdentifier);
  if (!a2)
  {
    if (qword_1013DD888 != -1)
      swift_once(&qword_1013DD888, sub_100A05DE4);
    swift_beginAccess(&static OS_os_log.realTimeSync, v50, 0, 0);
    v33 = (id)static OS_os_log.realTimeSync;
    v35 = static os_log_type_t.default.getter(v34);
    sub_100A06EBC((uint64_t)v33, &_mh_execute_header, v35, "CRLOpportunisticGroupSessionProvider: Initialize CRLOpportunisticMeToMeGroupSessionProvider", 91, 2, (uint64_t)_swiftEmptyArrayStorage);

    sub_1004B804C(&qword_1013FE7F8);
    sub_1004B8460(a1, (uint64_t)v16, type metadata accessor for CRLGloballyScopedBoardIdentifier);
    sub_1004B8460((uint64_t)v16, (uint64_t)v13, type metadata accessor for CRLGloballyScopedBoardIdentifier);
    v36 = type metadata accessor for CRLOpportunisticGroupActivity(0);
    v37 = swift_allocObject(v36, *(unsigned int *)(v36 + 48), *(unsigned __int16 *)(v36 + 52));
    sub_10098E798((uint64_t)v13, 1);
    v39 = *(_QWORD *)(v37 + 16);
    v38 = *(_QWORD *)(v37 + 24);
    v51 = v37;
    v40 = swift_bridgeObjectRetain(v38);
    v41 = dispatch thunk of PersonalGroupSessionProvider.__allocating_init(id:activity:)(v39, v38, &v51, v40);
    sub_1004B84A4((uint64_t)v16, type metadata accessor for CRLGloballyScopedBoardIdentifier);
    sub_1004B84A4(a1, type metadata accessor for CRLGloballyScopedBoardIdentifier);
    v42 = sub_1004CBA30(&qword_1013FEEB0, &qword_1013FE7F8, (uint64_t)&unk_100F1E4CC);
    goto LABEL_12;
  }
  v19 = qword_1013DD888;
  v20 = a2;
  if (v19 != -1)
    swift_once(&qword_1013DD888, sub_100A05DE4);
  swift_beginAccess(&static OS_os_log.realTimeSync, v50, 0, 0);
  v21 = (id)static OS_os_log.realTimeSync;
  v23 = static os_log_type_t.default.getter(v22);
  sub_100A06EBC((uint64_t)v21, &_mh_execute_header, v23, "CRLOpportunisticGroupSessionProvider: Initialize CRLOpportunisticCKShareGroupSessionProvider", 92, 2, (uint64_t)_swiftEmptyArrayStorage);

  sub_1004B804C(&qword_1013FE7E8);
  sub_1004B8460(a1, (uint64_t)v10, type metadata accessor for CRLGloballyScopedBoardIdentifier);
  sub_1004B8460((uint64_t)v10, (uint64_t)v16, type metadata accessor for CRLGloballyScopedBoardIdentifier);
  v24 = type metadata accessor for CRLOpportunisticGroupActivity(0);
  v25 = swift_allocObject(v24, *(unsigned int *)(v24 + 48), *(unsigned __int16 *)(v24 + 52));
  sub_10098E798((uint64_t)v16, 0);
  v26 = *(_QWORD *)(v25 + 16);
  v27 = *(_QWORD *)(v25 + 24);
  v51 = v25;
  v28 = qword_1013DCB60;
  swift_bridgeObjectRetain(v27);
  swift_retain(v25);
  if (v28 != -1)
    swift_once(&qword_1013DCB60, sub_100637218);
  v29 = (id)qword_10147ECC0;
  v30 = v49;
  v31 = dispatch thunk of CKShareGroupSessionProvider.__allocating_init(id:activity:share:container:)(v26, v27, &v51, v20, v29);
  if (!v30)
  {
    v41 = v31;
    sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLGloballyScopedBoardIdentifier);

    swift_release(v25);
    sub_1004B84A4(a1, type metadata accessor for CRLGloballyScopedBoardIdentifier);
    v42 = sub_1004CBA30(&qword_1013FEEB8, &qword_1013FE7E8, (uint64_t)&unk_100F1E4A4);
LABEL_12:
    v43 = (uint64_t *)(v5 + OBJC_IVAR____TtC8Freeform36CRLBoardOpportunisticActivityWrapper_groupSessionProvider);
    *v43 = v41;
    v43[1] = v42;
    v44 = v5 + OBJC_IVAR____TtC8Freeform36CRLBoardOpportunisticActivityWrapper_sessionConfiguring;
    v45 = v48;
    *(_QWORD *)(v44 + 8) = v47;
    swift_unknownObjectWeakAssign(v44, v45);
    swift_unknownObjectRelease(v45);
    return v5;
  }
  sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLGloballyScopedBoardIdentifier);

  swift_unknownObjectRelease(v48);
  swift_release(v25);
  sub_1004B84A4(a1, type metadata accessor for CRLGloballyScopedBoardIdentifier);
  sub_1004B84A4(v18, type metadata accessor for CRLGloballyScopedBoardIdentifier);
  swift_release(*(_QWORD *)(v5 + OBJC_IVAR____TtC8Freeform36CRLBoardOpportunisticActivityWrapper_session));
  sub_1004CBB0C(v5 + OBJC_IVAR____TtC8Freeform36CRLBoardOpportunisticActivityWrapper_sessionConfiguring);
  swift_release(*(_QWORD *)(v5 + OBJC_IVAR____TtC8Freeform36CRLBoardOpportunisticActivityWrapper_sessionObserverTask));
  v32 = type metadata accessor for CRLBoardOpportunisticActivityWrapper(0);
  swift_deallocPartialClassInstance(v5, v32, *(unsigned int *)(*(_QWORD *)v5 + 48), *(unsigned __int16 *)(*(_QWORD *)v5 + 52));
  return v5;
}

uint64_t sub_10098FB6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 296) = a4;
  return swift_task_switch(sub_10098FB84, 0, 0);
}

uint64_t sub_10098FB84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  __n128 v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t inited;
  uint64_t *v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t (*v11)(uint64_t, uint64_t);
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v1 = *(_QWORD *)(v0 + 296) + 16;
  swift_beginAccess(v1, v0 + 232, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  *(_QWORD *)(v0 + 304) = Strong;
  if (Strong)
  {
    v4 = Strong;
    if (qword_1013DD888 != -1)
      swift_once(&qword_1013DD888, sub_100A05DE4);
    swift_beginAccess(&static OS_os_log.realTimeSync, v0 + 256, 0, 0);
    v5 = (void *)static OS_os_log.realTimeSync;
    v6 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    *(_QWORD *)(v0 + 312) = v6;
    inited = swift_initStackObject(v6, v0 + 160);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v8 = (uint64_t *)(v4 + OBJC_IVAR____TtC8Freeform36CRLBoardOpportunisticActivityWrapper_groupSessionProvider);
    v9 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform36CRLBoardOpportunisticActivityWrapper_groupSessionProvider + 8);
    ObjectType = swift_getObjectType(*(_QWORD *)(v4
                                               + OBJC_IVAR____TtC8Freeform36CRLBoardOpportunisticActivityWrapper_groupSessionProvider));
    v11 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 24);
    v12 = v5;
    v13 = v11(ObjectType, v9);
    v15 = v14;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v16 = sub_1004CFC2C();
    *(_QWORD *)(v0 + 320) = v16;
    *(_QWORD *)(inited + 64) = v16;
    *(_QWORD *)(inited + 32) = v13;
    *(_QWORD *)(inited + 40) = v15;
    v18 = static os_log_type_t.default.getter(v17);
    sub_100A06EBC((uint64_t)v12, &_mh_execute_header, v18, "CRLOpportunisticGroupSessionProvider: begin waiting on session for activity %@", 78, 2, inited);
    swift_setDeallocating(inited);
    v19 = sub_1004B804C(&qword_1013E0190);
    *(_QWORD *)(v0 + 328) = v19;
    swift_arrayDestroy(inited + 32, 1, v19);

    v20 = *v8;
    *(_QWORD *)(v0 + 336) = *v8;
    v21 = sub_1004B804C(&qword_1013FE7F8);
    if (swift_dynamicCastClass(v20, v21))
    {
      v22 = swift_unknownObjectWeakLoadStrong(v4 + OBJC_IVAR____TtC8Freeform36CRLBoardOpportunisticActivityWrapper_sessionConfiguring);
      *(_QWORD *)(v0 + 344) = v22;
      if (v22)
      {
        v23 = v22;
        v24 = type metadata accessor for CRLOpportunisticGroupSessionManager(0);
        v25 = swift_dynamicCastClass(v23, v24);
        *(_QWORD *)(v0 + 352) = v25;
        if (v25)
        {
          v26 = async function pointer to GroupSessionProvider.session.getter[1];
          swift_unknownObjectRetain(v20);
          v27 = (_QWORD *)swift_task_alloc(v26);
          *(_QWORD *)(v0 + 360) = v27;
          v28 = sub_1004CBA30(&qword_1013FE7F0, &qword_1013FE7F8, (uint64_t)&protocol conformance descriptor for PersonalGroupSessionProvider<A>);
          v29 = sub_10098FEC8;
LABEL_13:
          *v27 = v0;
          v27[1] = v29;
          return GroupSessionProvider.session.getter(v21, v28);
        }
        swift_unknownObjectRelease(v23);
      }
    }
    v30 = *v8;
    *(_QWORD *)(v0 + 384) = *v8;
    v21 = sub_1004B804C(&qword_1013FE7E8);
    if (swift_dynamicCastClass(v30, v21))
    {
      v31 = swift_unknownObjectWeakLoadStrong(v4 + OBJC_IVAR____TtC8Freeform36CRLBoardOpportunisticActivityWrapper_sessionConfiguring);
      *(_QWORD *)(v0 + 392) = v31;
      if (v31)
      {
        v32 = v31;
        v33 = type metadata accessor for CRLOpportunisticGroupSessionManager(0);
        v34 = swift_dynamicCastClass(v32, v33);
        *(_QWORD *)(v0 + 400) = v34;
        if (v34)
        {
          v35 = async function pointer to GroupSessionProvider.session.getter[1];
          swift_unknownObjectRetain(v30);
          v27 = (_QWORD *)swift_task_alloc(v35);
          *(_QWORD *)(v0 + 408) = v27;
          v28 = sub_1004CBA30(&qword_1013FE7E0, &qword_1013FE7E8, (uint64_t)&protocol conformance descriptor for CKShareGroupSessionProvider<A>);
          v29 = sub_100990144;
          goto LABEL_13;
        }
        swift_unknownObjectRelease(v32);
      }
    }
    v3 = swift_release(v4);
  }
  return (*(uint64_t (**)(__n128))(v0 + 8))(v3);
}

uint64_t sub_10098FEC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 360);
  *(_QWORD *)(*(_QWORD *)v1 + 368) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_10098FF24, 0, 0);
}

uint64_t sub_10098FF24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t inited;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t (*v17)(uint64_t);

  v1 = *(_QWORD *)(v0 + 368);
  if (v1)
  {
    v3 = *(_QWORD *)(v0 + 320);
    v2 = *(_QWORD *)(v0 + 328);
    v4 = (void *)static OS_os_log.realTimeSync;
    inited = swift_initStackObject(*(_QWORD *)(v0 + 312), v0 + 88);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    *(_QWORD *)(v0 + 288) = v1;
    v6 = v4;
    swift_retain(v1);
    v7 = sub_1004B804C(&qword_1013FED50);
    v8 = String.init<A>(reflecting:)(v0 + 288, v7);
    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = v3;
    *(_QWORD *)(inited + 32) = v8;
    *(_QWORD *)(inited + 40) = v9;
    v11 = static os_log_type_t.default.getter(v10);
    sub_100A06EBC((uint64_t)v6, &_mh_execute_header, v11, "CRLOpportunisticGroupSessionProvider: observed new group session: %@", 68, 2, inited);
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, 1, v2);

    v17 = (uint64_t (*)(uint64_t))((char *)&dword_1013FED58 + dword_1013FED58);
    v12 = (_QWORD *)swift_task_alloc(unk_1013FED5C);
    *(_QWORD *)(v0 + 376) = v12;
    *v12 = v0;
    v12[1] = sub_100990098;
    return v17(v1);
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 344);
    v15 = *(_QWORD *)(v0 + 304);
    swift_unknownObjectRelease(*(_QWORD *)(v0 + 336));
    swift_unknownObjectRelease(v14);
    v16 = swift_release(v15);
    return (*(uint64_t (**)(__n128))(v0 + 8))(v16);
  }
}

uint64_t sub_100990098()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 376));
  return swift_task_switch(sub_1009900EC, 0, 0);
}

uint64_t sub_1009900EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;

  v1 = *(_QWORD *)(v0 + 368);
  v2 = *(_QWORD *)(v0 + 344);
  v3 = *(_QWORD *)(v0 + 304);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 336));
  swift_unknownObjectRelease(v2);
  swift_release(v3);
  v4 = swift_release(v1);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v4);
}

uint64_t sub_100990144(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 408);
  *(_QWORD *)(*(_QWORD *)v1 + 416) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1009901A0, 0, 0);
}

uint64_t sub_1009901A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t inited;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t (*v17)(uint64_t);

  v1 = *(_QWORD *)(v0 + 416);
  if (v1)
  {
    v3 = *(_QWORD *)(v0 + 320);
    v2 = *(_QWORD *)(v0 + 328);
    v4 = (void *)static OS_os_log.realTimeSync;
    inited = swift_initStackObject(*(_QWORD *)(v0 + 312), v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    *(_QWORD *)(v0 + 280) = v1;
    v6 = v4;
    swift_retain(v1);
    v7 = sub_1004B804C(&qword_1013FED50);
    v8 = String.init<A>(reflecting:)(v0 + 280, v7);
    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = v3;
    *(_QWORD *)(inited + 32) = v8;
    *(_QWORD *)(inited + 40) = v9;
    v11 = static os_log_type_t.default.getter(v10);
    sub_100A06EBC((uint64_t)v6, &_mh_execute_header, v11, "CRLOpportunisticGroupSessionProvider: observed new group session: %@", 68, 2, inited);
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, 1, v2);

    v17 = (uint64_t (*)(uint64_t))((char *)&dword_1013FED58 + dword_1013FED58);
    v12 = (_QWORD *)swift_task_alloc(unk_1013FED5C);
    *(_QWORD *)(v0 + 424) = v12;
    *v12 = v0;
    v12[1] = sub_100990314;
    return v17(v1);
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 392);
    v15 = *(_QWORD *)(v0 + 304);
    swift_unknownObjectRelease(*(_QWORD *)(v0 + 384));
    swift_unknownObjectRelease(v14);
    v16 = swift_release(v15);
    return (*(uint64_t (**)(__n128))(v0 + 8))(v16);
  }
}

uint64_t sub_100990314()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 424));
  return swift_task_switch(sub_100990368, 0, 0);
}

uint64_t sub_100990368()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;

  v1 = *(_QWORD *)(v0 + 416);
  v2 = *(_QWORD *)(v0 + 392);
  v3 = *(_QWORD *)(v0 + 304);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 384));
  swift_unknownObjectRelease(v2);
  swift_release(v3);
  v4 = swift_release(v1);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v4);
}

uint64_t sub_1009903C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OBJC_IVAR____TtC8Freeform36CRLBoardOpportunisticActivityWrapper_sessionObserverTask;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform36CRLBoardOpportunisticActivityWrapper_sessionObserverTask);
  if (v2)
  {
    swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform36CRLBoardOpportunisticActivityWrapper_sessionObserverTask));
    Task.cancel()();
    swift_release(v2);
  }
  sub_1004B84A4(v0 + OBJC_IVAR____TtC8Freeform36CRLBoardOpportunisticActivityWrapper_globallyScopedBoardIdentifier, type metadata accessor for CRLGloballyScopedBoardIdentifier);
  swift_unknownObjectRelease(*(_QWORD *)(v0
                                       + OBJC_IVAR____TtC8Freeform36CRLBoardOpportunisticActivityWrapper_groupSessionProvider));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform36CRLBoardOpportunisticActivityWrapper_session));
  sub_1004CBB0C(v0 + OBJC_IVAR____TtC8Freeform36CRLBoardOpportunisticActivityWrapper_sessionConfiguring);
  swift_release(*(_QWORD *)(v0 + v1));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100990480()
{
  return type metadata accessor for CRLBoardOpportunisticActivityWrapper(0);
}

uint64_t type metadata accessor for CRLBoardOpportunisticActivityWrapper(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1013FE950, (uint64_t)&nominal type descriptor for CRLBoardOpportunisticActivityWrapper);
}

uint64_t sub_10099049C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  result = type metadata accessor for CRLBoardIdentifierStorage(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100F1E520;
    v4[2] = "\b";
    v4[3] = &unk_100F1E5C0;
    v4[4] = "\b";
    result = swift_updateClassMetadata2(a1, 256, 5, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_100990528(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[24];

  swift_beginAccess(v2 + 64, v13, 0, 0);
  v5 = *(_QWORD *)(v2 + 64);
  v6 = *(_QWORD *)(v5 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain(v5);
    v7 = sub_100843584(a1);
    if ((v8 & 1) != 0)
    {
      v9 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v7);
      swift_retain(v9);
      swift_bridgeObjectRelease();
      v10 = *(_QWORD *)(v9 + OBJC_IVAR____TtC8Freeform36CRLBoardOpportunisticActivityWrapper_groupSessionProvider);
      v11 = sub_1004B804C(&qword_1013FE7F8);
      LOBYTE(v10) = swift_dynamicCastClass(v10, v11) != 0;
      swift_release(v9);
      LOBYTE(v6) = v10 ^ a2;
    }
    else
    {
      swift_bridgeObjectRelease();
      LOBYTE(v6) = 0;
    }
  }
  return v6 & 1;
}

uint64_t sub_1009905F0(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v3 + 632) = v2;
  *(_BYTE *)(v3 + 744) = a2;
  *(_QWORD *)(v3 + 624) = a1;
  v4 = type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  *(_QWORD *)(v3 + 640) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v3 + 648) = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  *(_QWORD *)(v3 + 656) = v6;
  *(_QWORD *)(v3 + 664) = v7;
  return swift_task_switch(sub_100990688, v6, v7);
}

uint64_t sub_100990688()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t inited;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  __n128 v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  __n128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t (*v65)(uint64_t, char);
  uint64_t v66;

  v1 = (_QWORD *)(*(_QWORD *)(v0 + 632) + 88);
  swift_beginAccess(v1, v0 + 448, 0, 0);
  if (*(_QWORD *)(*v1 + 16))
  {
    v2 = *(_QWORD *)(v0 + 624);
    swift_bridgeObjectRetain(*v1);
    sub_100843584(v2);
    if ((v3 & 1) != 0)
    {
      v4 = *(_QWORD *)(v0 + 648);
      swift_bridgeObjectRelease();
      swift_release(v4);
      if (qword_1013DD888 != -1)
        swift_once(&qword_1013DD888, sub_100A05DE4);
      swift_beginAccess(&static OS_os_log.realTimeSync, v0 + 592, 0, 0);
      v5 = (void *)static OS_os_log.realTimeSync;
      v6 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v6, v0 + 16);
      *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
      v8 = v5;
      v9 = UUID.uuidString.getter(v8);
      v11 = v10;
      *(_QWORD *)(inited + 56) = &type metadata for String;
      v12 = sub_1004CFC2C();
      *(_QWORD *)(inited + 32) = v9;
      v13 = inited + 32;
      *(_QWORD *)(inited + 64) = v12;
      *(_QWORD *)(inited + 40) = v11;
      v15 = static os_log_type_t.default.getter(v14);
      v16 = "leavingOpportunisticActivity exists for %{public}@, don't need to call leave again.";
      v17 = (uint64_t)v8;
      v18 = 83;
LABEL_18:
      sub_100A06EBC(v17, &_mh_execute_header, v15, v16, v18, 2, inited);
      swift_setDeallocating(inited);
      v53 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(v13, 1, v53);

      swift_task_dealloc(*(_QWORD *)(v0 + 640));
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    swift_bridgeObjectRelease();
  }
  v19 = *(_QWORD *)(v0 + 632);
  swift_beginAccess(v19 + 64, v0 + 568, 0, 0);
  v20 = *(_QWORD *)(v19 + 64);
  if (!*(_QWORD *)(v20 + 16))
  {
    v45 = *(_QWORD *)(v0 + 648);
LABEL_15:
    swift_release(v45);
    if (qword_1013DD888 != -1)
      swift_once(&qword_1013DD888, sub_100A05DE4);
    swift_beginAccess(&static OS_os_log.realTimeSync, v0 + 424, 0, 0);
    v46 = (void *)static OS_os_log.realTimeSync;
    v47 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v47, v0 + 232);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v8 = v46;
    v48 = UUID.uuidString.getter(v8);
    v50 = v49;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v51 = sub_1004CFC2C();
    *(_QWORD *)(inited + 32) = v48;
    v13 = inited + 32;
    *(_QWORD *)(inited + 64) = v51;
    *(_QWORD *)(inited + 40) = v50;
    v15 = static os_log_type_t.default.getter(v52);
    v16 = "Missing opportunisticActivityWrappers for %{public}@, unexpected.";
    v17 = (uint64_t)v8;
    v18 = 65;
    goto LABEL_18;
  }
  v21 = *(_QWORD *)(v0 + 624);
  swift_bridgeObjectRetain(v20);
  v22 = sub_100843584(v21);
  if ((v23 & 1) == 0)
  {
    v45 = *(_QWORD *)(v0 + 648);
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  v24 = *(_QWORD *)(v0 + 640);
  v25 = *(_QWORD *)(v0 + 624);
  v26 = *(_QWORD *)(*(_QWORD *)(v20 + 56) + 8 * v22);
  *(_QWORD *)(v0 + 672) = v26;
  swift_retain(v26);
  swift_bridgeObjectRelease();
  sub_1004B8460(v25, v24, type metadata accessor for CRLGloballyScopedBoardIdentifier);
  v27 = OBJC_IVAR____TtC8Freeform36CRLBoardOpportunisticActivityWrapper_groupSessionProvider;
  *(_QWORD *)(v0 + 680) = OBJC_IVAR____TtC8Freeform36CRLBoardOpportunisticActivityWrapper_groupSessionProvider;
  v28 = *(_QWORD *)(v26 + v27);
  v29 = sub_1004B804C(&qword_1013FE7F8);
  LODWORD(v25) = swift_dynamicCastClass(v28, v29) != 0;
  swift_beginAccess(v1, v0 + 400, 33, 0);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v66 = *v1;
  *v1 = 0x8000000000000000;
  sub_100829750(v25, v24, isUniquelyReferenced_nonNull_native);
  *v1 = v66;
  swift_bridgeObjectRelease();
  sub_1004B84A4(v24, type metadata accessor for CRLGloballyScopedBoardIdentifier);
  swift_endAccess(v0 + 400);
  v31 = *(_QWORD *)(v26 + OBJC_IVAR____TtC8Freeform36CRLBoardOpportunisticActivityWrapper_session);
  *(_QWORD *)(v0 + 688) = v31;
  if (v31)
  {
    v32 = qword_1013DD888;
    swift_retain(v31);
    if (v32 != -1)
      swift_once(&qword_1013DD888, sub_100A05DE4);
    swift_beginAccess(&static OS_os_log.realTimeSync, v0 + 544, 0, 0);
    v33 = (void *)static OS_os_log.realTimeSync;
    v34 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v35 = swift_initStackObject(v34, v0 + 88);
    *(_OWORD *)(v35 + 16) = xmmword_100EF5E40;
    v36 = v33;
    v37 = UUID.uuidString.getter(v36);
    v39 = v38;
    *(_QWORD *)(v35 + 56) = &type metadata for String;
    *(_QWORD *)(v35 + 64) = sub_1004CFC2C();
    *(_QWORD *)(v35 + 32) = v37;
    *(_QWORD *)(v35 + 40) = v39;
    v41 = static os_log_type_t.default.getter(v40);
    sub_100A06EBC((uint64_t)v36, &_mh_execute_header, v41, "call leaveGroupSession() for %{public}@", 39, 2, v35);
    swift_setDeallocating(v35);
    v42 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v35 + 32, 1, v42);

    v65 = (uint64_t (*)(uint64_t, char))((char *)&dword_1013FEE00 + dword_1013FEE00);
    v43 = (_QWORD *)swift_task_alloc(unk_1013FEE04);
    *(_QWORD *)(v0 + 696) = v43;
    *v43 = v0;
    v43[1] = sub_100990CD0;
    return v65(v31, *(_BYTE *)(v0 + 744));
  }
  else
  {
    if (qword_1013DD888 != -1)
      swift_once(&qword_1013DD888, sub_100A05DE4);
    swift_beginAccess(&static OS_os_log.realTimeSync, v0 + 376, 0, 0);
    v54 = (void *)static OS_os_log.realTimeSync;
    v55 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    *(_QWORD *)(v0 + 704) = v55;
    v56 = swift_initStackObject(v55, v0 + 304);
    *(_OWORD *)(v56 + 16) = xmmword_100EF5E40;
    v57 = v54;
    v58 = UUID.uuidString.getter(v57);
    v60 = v59;
    *(_QWORD *)(v56 + 56) = &type metadata for String;
    v61 = sub_1004CFC2C();
    *(_QWORD *)(v0 + 712) = v61;
    *(_QWORD *)(v56 + 64) = v61;
    *(_QWORD *)(v56 + 32) = v58;
    *(_QWORD *)(v56 + 40) = v60;
    v63 = static os_log_type_t.default.getter(v62);
    sub_100A06EBC((uint64_t)v57, &_mh_execute_header, v63, "calling activityWrapper.leave() for %{public}@", 46, 2, v56);
    swift_setDeallocating(v56);
    v64 = sub_1004B804C(&qword_1013E0190);
    *(_QWORD *)(v0 + 720) = v64;
    swift_arrayDestroy(v56 + 32, 1, v64);

    return swift_task_switch(sub_100990E74, 0, 0);
  }
}

uint64_t sub_100990CD0()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 696));
  return swift_task_switch(sub_100990D20, *(_QWORD *)(v1 + 656), *(_QWORD *)(v1 + 664));
}

uint64_t sub_100990D20()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t inited;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;

  swift_release(v0[86]);
  if (qword_1013DD888 != -1)
    swift_once(&qword_1013DD888, sub_100A05DE4);
  swift_beginAccess(&static OS_os_log.realTimeSync, v0 + 47, 0, 0);
  v1 = (void *)static OS_os_log.realTimeSync;
  v2 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  v0[88] = v2;
  inited = swift_initStackObject(v2, v0 + 38);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v4 = v1;
  v5 = UUID.uuidString.getter(v4);
  v7 = v6;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v8 = sub_1004CFC2C();
  v0[89] = v8;
  *(_QWORD *)(inited + 64) = v8;
  *(_QWORD *)(inited + 32) = v5;
  *(_QWORD *)(inited + 40) = v7;
  v10 = static os_log_type_t.default.getter(v9);
  sub_100A06EBC((uint64_t)v4, &_mh_execute_header, v10, "calling activityWrapper.leave() for %{public}@", 46, 2, inited);
  swift_setDeallocating(inited);
  v11 = sub_1004B804C(&qword_1013E0190);
  v0[90] = v11;
  swift_arrayDestroy(inited + 32, 1, v11);

  return swift_task_switch(sub_100990E74, 0, 0);
}

uint64_t sub_100990E74()
{
  _QWORD *v0;
  _QWORD *v1;
  id v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  _QWORD *v7;
  uint64_t v8;

  v1 = (_QWORD *)(v0[84] + v0[85]);
  v2 = (id)static OS_os_log.realTimeSync;
  v4 = static os_log_type_t.default.getter(v3);
  sub_100A06EBC((uint64_t)v2, &_mh_execute_header, v4, "groupSessionProvider.leave() called", 35, 2, (uint64_t)_swiftEmptyArrayStorage);

  v5 = v1[1];
  ObjectType = swift_getObjectType(*v1);
  v7 = (_QWORD *)swift_task_alloc(async function pointer to GroupSessionProvider.leave()[1]);
  v0[91] = v7;
  v8 = *(_QWORD *)(v5 + 8);
  *v7 = v0;
  v7[1] = sub_100990F30;
  return GroupSessionProvider.leave()(ObjectType, v8);
}

uint64_t sub_100990F30()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 728);
  *(_QWORD *)(*v1 + 736) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_1009910AC;
  else
    v4 = sub_100990F94;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 656), *(_QWORD *)(v2 + 664));
}

uint64_t sub_100990F94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  swift_release(*(_QWORD *)(v0 + 648));
  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 632) + 64);
  if (*(_QWORD *)(v1 + 16))
  {
    v2 = *(_QWORD *)(v0 + 624);
    swift_bridgeObjectRetain(*(_QWORD *)(*(_QWORD *)(v0 + 632) + 64));
    v3 = sub_100843584(v2);
    if ((v4 & 1) != 0)
    {
      v5 = *(_QWORD *)(v0 + 672);
      v6 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * v3);
      swift_bridgeObjectRelease();
      if (v6 == v5)
      {
        v7 = *(_QWORD *)(v0 + 624);
        swift_beginAccess(*(_QWORD *)(v0 + 632) + 64, v0 + 520, 33, 0);
        v8 = sub_10084800C(v7);
        swift_endAccess(v0 + 520);
        swift_release(v8);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  v9 = *(_QWORD *)(v0 + 672);
  v10 = *(_QWORD *)(v0 + 624);
  swift_beginAccess(*(_QWORD *)(v0 + 632) + 88, v0 + 496, 33, 0);
  sub_100848028(v10);
  swift_endAccess(v0 + 496);
  swift_release(v9);
  swift_task_dealloc(*(_QWORD *)(v0 + 640));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009910AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t inited;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = *(_QWORD *)(v0 + 736);
  v2 = *(_QWORD *)(v0 + 720);
  v3 = *(_QWORD *)(v0 + 712);
  v4 = *(_QWORD *)(v0 + 704);
  swift_release(*(_QWORD *)(v0 + 648));
  v5 = (void *)static OS_os_log.realTimeSync;
  inited = swift_initStackObject(v4, v0 + 160);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  swift_getErrorValue(v1, v0 + 616, v0 + 472);
  v7 = *(_QWORD *)(v0 + 480);
  v8 = *(_QWORD *)(v0 + 488);
  v9 = v5;
  v10 = Error.publicDescription.getter(v7, v8);
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = v3;
  *(_QWORD *)(inited + 32) = v10;
  *(_QWORD *)(inited + 40) = v11;
  v13 = static os_log_type_t.default.getter(v12);
  sub_100A06EBC((uint64_t)v9, &_mh_execute_header, v13, "Caught error in activityWrapper.leave() call %{public}@", 55, 2, inited);
  swift_setDeallocating(inited);
  swift_arrayDestroy(inited + 32, 1, v2);

  swift_errorRelease(v1);
  v14 = *(_QWORD *)(*(_QWORD *)(v0 + 632) + 64);
  if (*(_QWORD *)(v14 + 16))
  {
    v15 = *(_QWORD *)(v0 + 624);
    swift_bridgeObjectRetain(*(_QWORD *)(*(_QWORD *)(v0 + 632) + 64));
    v16 = sub_100843584(v15);
    if ((v17 & 1) != 0)
    {
      v18 = *(_QWORD *)(v0 + 672);
      v19 = *(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * v16);
      swift_bridgeObjectRelease();
      if (v19 == v18)
      {
        v20 = *(_QWORD *)(v0 + 624);
        swift_beginAccess(*(_QWORD *)(v0 + 632) + 64, v0 + 520, 33, 0);
        v21 = sub_10084800C(v20);
        swift_endAccess(v0 + 520);
        swift_release(v21);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  v22 = *(_QWORD *)(v0 + 672);
  v23 = *(_QWORD *)(v0 + 624);
  swift_beginAccess(*(_QWORD *)(v0 + 632) + 88, v0 + 496, 33, 0);
  sub_100848028(v23);
  swift_endAccess(v0 + 496);
  swift_release(v22);
  swift_task_dealloc(*(_QWORD *)(v0 + 640));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009912AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3[88] = v2;
  v3[87] = a2;
  v3[86] = a1;
  v4 = sub_1004B804C(&qword_1013E01F0);
  v3[89] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for CRLGloballyScopedBoardIdentifier(0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[90] = swift_task_alloc(v5);
  v3[91] = swift_task_alloc(v5);
  v6 = type metadata accessor for MainActor(0);
  v3[92] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v3[93] = v7;
  v3[94] = v8;
  return swift_task_switch(sub_100991378, v7, v8);
}

uint64_t sub_100991378()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  int v7;
  void *v8;
  uint64_t v9;
  uint64_t inited;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  char isUniquelyReferenced_nonNull_native;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  void *v55;
  Swift::String v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  __n128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  id v93;
  __n128 v94;
  uint64_t v95;
  id v96;
  uint64_t v97;

  v1 = *(_QWORD *)(v0 + 696);
  v2 = *(_QWORD *)(v0 + 704) + 80;
  swift_beginAccess(v2, v0 + 488, 0, 0);
  v3 = *(_QWORD *)v2;
  if (*(_QWORD *)(*(_QWORD *)v2 + 16))
  {
    v4 = *(_QWORD *)(v0 + 688);
    swift_bridgeObjectRetain(v3);
    v5 = sub_100843584(v4);
    if ((v6 & 1) != 0)
    {
      v7 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 56) + v5);
      swift_bridgeObjectRelease();
      if ((((v1 == 0) ^ v7) & 1) == 0)
      {
        swift_release(*(_QWORD *)(v0 + 736));
        if (qword_1013DD888 != -1)
          swift_once(&qword_1013DD888, sub_100A05DE4);
        swift_beginAccess(&static OS_os_log.realTimeSync, v0 + 656, 0, 0);
        v8 = (void *)static OS_os_log.realTimeSync;
        v9 = sub_1004B804C((uint64_t *)&unk_1013E0180);
        inited = swift_initStackObject(v9, v0 + 128);
        *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
        v11 = v8;
        v12 = UUID.uuidString.getter(v11);
        v14 = v13;
        *(_QWORD *)(inited + 56) = &type metadata for String;
        v15 = sub_1004CFC2C();
        *(_QWORD *)(inited + 32) = v12;
        v16 = inited + 32;
        *(_QWORD *)(inited + 64) = v15;
        *(_QWORD *)(inited + 40) = v14;
        v18 = static os_log_type_t.default.getter(v17);
        v19 = "startingOpportunisticActivity exists for %{public}@, wait for current start to finish.";
        v20 = (uint64_t)v11;
        v21 = 86;
LABEL_13:
        sub_100A06EBC(v20, &_mh_execute_header, v18, v19, v21, 2, inited);
        swift_setDeallocating(inited);
        v33 = sub_1004B804C(&qword_1013E0190);
        swift_arrayDestroy(v16, 1, v33);

        v34 = *(_QWORD *)(v0 + 720);
        v35 = *(_QWORD *)(v0 + 712);
        swift_task_dealloc(*(_QWORD *)(v0 + 728));
        swift_task_dealloc(v34);
        swift_task_dealloc(v35);
        return (*(uint64_t (**)(void))(v0 + 8))();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  v22 = *(_QWORD *)(v0 + 704);
  swift_beginAccess(v22 + 88, v0 + 632, 0, 0);
  v23 = *(_QWORD *)(v22 + 88);
  if (*(_QWORD *)(v23 + 16))
  {
    v24 = *(_QWORD *)(v0 + 688);
    swift_bridgeObjectRetain(v23);
    sub_100843584(v24);
    if ((v25 & 1) != 0)
    {
      swift_release(*(_QWORD *)(v0 + 736));
      swift_bridgeObjectRelease();
      if (qword_1013DD888 != -1)
        swift_once(&qword_1013DD888, sub_100A05DE4);
      swift_beginAccess(&static OS_os_log.realTimeSync, v0 + 608, 0, 0);
      v26 = (void *)static OS_os_log.realTimeSync;
      v27 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v27, v0 + 200);
      *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
      v11 = v26;
      v28 = UUID.uuidString.getter(v11);
      v30 = v29;
      *(_QWORD *)(inited + 56) = &type metadata for String;
      v31 = sub_1004CFC2C();
      *(_QWORD *)(inited + 32) = v28;
      v16 = inited + 32;
      *(_QWORD *)(inited + 64) = v31;
      *(_QWORD *)(inited + 40) = v30;
      v18 = static os_log_type_t.default.getter(v32);
      v19 = "leavingOpportunisticActivity exists for %{public}@, wait for leave to finish first.";
      v20 = (uint64_t)v11;
      v21 = 83;
      goto LABEL_13;
    }
    swift_bridgeObjectRelease();
  }
  v37 = *(_QWORD *)(v0 + 728);
  v38 = *(_QWORD *)(v0 + 704);
  sub_1004B8460(*(_QWORD *)(v0 + 688), v37, type metadata accessor for CRLGloballyScopedBoardIdentifier);
  swift_beginAccess(v2, v0 + 584, 33, 0);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v97 = *(_QWORD *)v2;
  *(_QWORD *)v2 = 0x8000000000000000;
  sub_100829750(v1 == 0, v37, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)v2 = v97;
  swift_bridgeObjectRelease();
  sub_1004B84A4(v37, type metadata accessor for CRLGloballyScopedBoardIdentifier);
  swift_endAccess(v0 + 584);
  v40 = (uint64_t *)(v38 + 64);
  swift_beginAccess(v38 + 64, v0 + 440, 0, 0);
  v41 = *(_QWORD *)(v38 + 64);
  if (*(_QWORD *)(v41 + 16))
  {
    v42 = *(_QWORD *)(v0 + 688);
    swift_bridgeObjectRetain(*(_QWORD *)(v38 + 64));
    v43 = sub_100843584(v42);
    if ((v44 & 1) != 0)
    {
      v45 = *(_QWORD *)(*(_QWORD *)(v41 + 56) + 8 * v43);
      swift_retain(v45);
      swift_bridgeObjectRelease();
      v46 = OBJC_IVAR____TtC8Freeform36CRLBoardOpportunisticActivityWrapper_groupSessionProvider;
      v47 = *(_QWORD *)(v45 + OBJC_IVAR____TtC8Freeform36CRLBoardOpportunisticActivityWrapper_groupSessionProvider);
      v48 = sub_1004B804C(&qword_1013FE7F8);
      if (swift_dynamicCastClass(v47, v48))
      {
        if (v1)
        {
LABEL_19:
          if (qword_1013DD888 != -1)
            swift_once(&qword_1013DD888, sub_100A05DE4);
          swift_beginAccess(&static OS_os_log.realTimeSync, v0 + 560, 0, 0);
          v49 = (void *)static OS_os_log.realTimeSync;
          v50 = sub_1004B804C((uint64_t *)&unk_1013E0180);
          v51 = swift_initStackObject(v50, v0 + 16);
          *(_OWORD *)(v51 + 16) = xmmword_100EF5A10;
          v52 = swift_dynamicCastClass(*(_QWORD *)(v45 + v46), v48);
          if (v52)
            v53 = 1702195828;
          else
            v53 = 0x65736C6166;
          v54 = 0xE500000000000000;
          if (v52)
            v55 = (void *)0xE400000000000000;
          else
            v55 = (void *)0xE500000000000000;
          v96 = v49;
          v56._countAndFlagsBits = v53;
          v56._object = v55;
          String.append(_:)(v56);
          swift_bridgeObjectRelease();
          *(_QWORD *)(v51 + 56) = &type metadata for String;
          v57 = sub_1004CFC2C();
          *(_QWORD *)(v51 + 64) = v57;
          *(_QWORD *)(v51 + 32) = 0;
          *(_QWORD *)(v51 + 40) = 0xE000000000000000;
          if (v1)
            v58 = 0x65736C6166;
          else
            v58 = 1702195828;
          if (!v1)
            v54 = 0xE400000000000000;
          v59 = v54;
          String.append(_:)(*(Swift::String *)&v58);
          v60 = swift_bridgeObjectRelease();
          *(_QWORD *)(v51 + 96) = &type metadata for String;
          *(_QWORD *)(v51 + 104) = v57;
          *(_QWORD *)(v51 + 72) = 0;
          *(_QWORD *)(v51 + 80) = 0xE000000000000000;
          v61 = static os_log_type_t.default.getter(v60);
          sub_100A06EBC((uint64_t)v96, &_mh_execute_header, v61, "Switching from isMeToMe: %{public}@ to isMeToMe: %{public}@", 59, 2, v51);
          swift_release(v45);
          swift_setDeallocating(v51);
          v62 = sub_1004B804C(&qword_1013E0190);
          swift_arrayDestroy(v51 + 32, 2, v62);

          goto LABEL_39;
        }
      }
      else if (!v1)
      {
        goto LABEL_19;
      }
      v63 = *v40;
      if (*(_QWORD *)(*v40 + 16))
      {
        v64 = *(_QWORD *)(v0 + 688);
        swift_bridgeObjectRetain(v63);
        sub_100843584(v64);
        LOBYTE(v64) = v65;
        swift_bridgeObjectRelease();
        if ((v64 & 1) != 0)
        {
          sub_100757E04(&_mh_execute_header, (uint64_t)"startOpportunisticGroupActivity(globallyScopedBoardIdentifier:ckShare:)", 71, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLOpportunisticGroupSessionManager.swift", 109, 2, 267, "Attempting to instantiate opportunistic activity that is still connected.", 73, 2u, (uint64_t)_swiftEmptyArrayStorage);
          sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"startOpportunisticGroupActivity(globallyScopedBoardIdentifier:ckShare:)", 71, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLOpportunisticGroupSessionManager.swift", 109, 2u, 267, (uint64_t)"Attempting to instantiate opportunistic activity that is still connected.", 73, 2u);
        }
      }
      swift_release(v45);
      goto LABEL_39;
    }
    swift_bridgeObjectRelease();
  }
LABEL_39:
  if (qword_1013DD888 != -1)
    swift_once(&qword_1013DD888, sub_100A05DE4);
  v66 = *(_QWORD *)(v0 + 720);
  v67 = *(_QWORD *)(v0 + 704);
  v68 = *(void **)(v0 + 696);
  v69 = *(_QWORD *)(v0 + 688);
  swift_beginAccess(&static OS_os_log.realTimeSync, v0 + 416, 0, 0);
  v70 = (void *)static OS_os_log.realTimeSync;
  v71 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  *(_QWORD *)(v0 + 760) = v71;
  v72 = swift_initStackObject(v71, v0 + 344);
  *(_OWORD *)(v72 + 16) = xmmword_100EF5E40;
  v73 = v70;
  v74 = UUID.uuidString.getter(v73);
  v76 = v75;
  *(_QWORD *)(v72 + 56) = &type metadata for String;
  v77 = sub_1004CFC2C();
  *(_QWORD *)(v0 + 768) = v77;
  *(_QWORD *)(v72 + 64) = v77;
  *(_QWORD *)(v72 + 32) = v74;
  *(_QWORD *)(v72 + 40) = v76;
  v79 = static os_log_type_t.default.getter(v78);
  sub_100A06EBC((uint64_t)v73, &_mh_execute_header, v79, "startOpportunisticGroupActivity() for %{public}@", 48, 2, v72);
  swift_setDeallocating(v72);
  v80 = sub_1004B804C(&qword_1013E0190);
  *(_QWORD *)(v0 + 776) = v80;
  swift_arrayDestroy(v72 + 32, 1, v80);

  sub_1004B8460(v69, v66, type metadata accessor for CRLGloballyScopedBoardIdentifier);
  v81 = sub_1004B7878(&qword_1013FEEA0, type metadata accessor for CRLOpportunisticGroupSessionManager, (uint64_t)&unk_100EF76D8);
  v82 = type metadata accessor for CRLBoardOpportunisticActivityWrapper(0);
  v83 = swift_allocObject(v82, *(unsigned int *)(v82 + 48), *(unsigned __int16 *)(v82 + 52));
  *(_QWORD *)(v0 + 784) = v83;
  v84 = v68;
  swift_retain(v67);
  sub_10098F694(v66, v68, v67, v81);
  v85 = OBJC_IVAR____TtC8Freeform36CRLBoardOpportunisticActivityWrapper_sessionObserverTask;
  v86 = *(_QWORD *)(v83 + OBJC_IVAR____TtC8Freeform36CRLBoardOpportunisticActivityWrapper_sessionObserverTask);
  swift_retain(v83);
  if (v86)
  {
    swift_retain(v86);
    Task.cancel()();
    swift_release(v86);
  }
  v87 = *(_QWORD *)(v0 + 712);
  v88 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v88 - 8) + 56))(v87, 1, 1, v88);
  v89 = swift_allocObject(&unk_10128CD80, 24, 7);
  swift_weakInit(v89 + 16, v83);
  v90 = (_QWORD *)swift_allocObject(&unk_10128CF88, 40, 7);
  v90[2] = 0;
  v90[3] = 0;
  v90[4] = v89;
  v91 = sub_100521B98(v87, (uint64_t)&unk_1013FEEA8, (uint64_t)v90);
  v92 = *(_QWORD *)(v83 + v85);
  *(_QWORD *)(v83 + v85) = v91;
  swift_release(v83);
  swift_release(v92);
  v93 = (id)static OS_os_log.realTimeSync;
  v95 = static os_log_type_t.default.getter(v94);
  sub_100A06EBC((uint64_t)v93, &_mh_execute_header, v95, "will call activityWrapper.start()", 33, 2, (uint64_t)_swiftEmptyArrayStorage);

  swift_retain(v83);
  return swift_task_switch(sub_100991E28, 0, 0);
}

uint64_t sub_100991E28()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  _QWORD *v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 784);
  v2 = (id)static OS_os_log.realTimeSync;
  v4 = static os_log_type_t.default.getter(v3);
  sub_100A06EBC((uint64_t)v2, &_mh_execute_header, v4, "groupSessionProvider.join() called", 34, 2, (uint64_t)_swiftEmptyArrayStorage);

  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform36CRLBoardOpportunisticActivityWrapper_groupSessionProvider + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v1
                                             + OBJC_IVAR____TtC8Freeform36CRLBoardOpportunisticActivityWrapper_groupSessionProvider));
  v7 = (_QWORD *)swift_task_alloc(async function pointer to GroupSessionProvider.join()[1]);
  *(_QWORD *)(v0 + 792) = v7;
  v8 = *(_QWORD *)(v5 + 8);
  *v7 = v0;
  v7[1] = sub_100991EE8;
  return GroupSessionProvider.join()(ObjectType, v8);
}

uint64_t sub_100991EE8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 792);
  *(_QWORD *)(*v1 + 800) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 752);
    v5 = *(_QWORD *)(v2 + 744);
    v6 = sub_100991F54;
  }
  else
  {
    v6 = sub_1009920FC;
    v5 = 0;
    v4 = 0;
  }
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_100991F54()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t inited;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  swift_release(v0[98]);
  v1 = v0[100];
  v2 = v0[98];
  v0[102] = v2;
  v0[101] = v1;
  v3 = v0[97];
  v4 = v0[96];
  v5 = (void *)static OS_os_log.realTimeSync;
  inited = swift_initStackObject(v0[95], v0 + 34);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  swift_getErrorValue(v1, v0 + 85, v0 + 58);
  v7 = v0[59];
  v8 = v5;
  v9 = Error.fullDescription.getter(v7);
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = v4;
  *(_QWORD *)(inited + 32) = v9;
  *(_QWORD *)(inited + 40) = v10;
  v11 = static os_log_type_t.error.getter(v9);
  sub_100A06EBC((uint64_t)v8, &_mh_execute_header, v11, "Cannot instantiate opportunistic activity with error %@", 55, 2, inited);
  swift_setDeallocating(inited);
  swift_arrayDestroy(inited + 32, 1, v3);

  if (v2)
  {
    v12 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform36CRLBoardOpportunisticActivityWrapper_sessionObserverTask);
    if (v12)
    {
      swift_retain(v2);
      swift_retain(v12);
      Task.cancel()();
      swift_release(v12);
      swift_release(v2);
    }
  }
  v13 = (_QWORD *)swift_task_alloc(dword_1013FEAA4);
  v0[103] = v13;
  *v13 = v0;
  v13[1] = sub_1009922D0;
  return sub_1009905F0(v0[86], 1);
}

uint64_t sub_1009920FC()
{
  _QWORD *v0;

  swift_release(v0[98]);
  return swift_task_switch(sub_100992138, v0[93], v0[94]);
}

uint64_t sub_100992138()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  __n128 v6;
  uint64_t v7;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 784);
  v2 = *(_QWORD *)(v0 + 728);
  v3 = *(_QWORD *)(v0 + 704);
  v4 = *(_QWORD *)(v0 + 688);
  swift_release(*(_QWORD *)(v0 + 736));
  v5 = (id)static OS_os_log.realTimeSync;
  v7 = static os_log_type_t.default.getter(v6);
  sub_100A06EBC((uint64_t)v5, &_mh_execute_header, v7, "called activityWrapper.start()", 30, 2, (uint64_t)_swiftEmptyArrayStorage);

  sub_1004B8460(v4, v2, type metadata accessor for CRLGloballyScopedBoardIdentifier);
  swift_beginAccess(v3 + 64, v0 + 536, 33, 0);
  swift_retain(v1);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v14 = *(_QWORD *)(v3 + 64);
  *(_QWORD *)(v3 + 64) = 0x8000000000000000;
  sub_100829734(v1, v2, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v3 + 64) = v14;
  swift_bridgeObjectRelease();
  sub_1004B84A4(v2, type metadata accessor for CRLGloballyScopedBoardIdentifier);
  swift_endAccess(v0 + 536);
  v9 = *(_QWORD *)(v0 + 784);
  v10 = *(_QWORD *)(v0 + 688);
  swift_beginAccess(*(_QWORD *)(v0 + 704) + 80, v0 + 512, 33, 0);
  sub_100848028(v10);
  swift_endAccess(v0 + 512);
  swift_release(v9);
  v11 = *(_QWORD *)(v0 + 720);
  v12 = *(_QWORD *)(v0 + 712);
  swift_task_dealloc(*(_QWORD *)(v0 + 728));
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009922D0()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 824));
  return swift_task_switch(sub_100992320, *(_QWORD *)(v1 + 744), *(_QWORD *)(v1 + 752));
}

uint64_t sub_100992320()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 808);
  swift_release(*(_QWORD *)(v0 + 736));
  swift_errorRelease(v1);
  v2 = *(_QWORD *)(v0 + 816);
  v3 = *(_QWORD *)(v0 + 688);
  swift_beginAccess(*(_QWORD *)(v0 + 704) + 80, v0 + 512, 33, 0);
  sub_100848028(v3);
  swift_endAccess(v0 + 512);
  swift_release(v2);
  v4 = *(_QWORD *)(v0 + 720);
  v5 = *(_QWORD *)(v0 + 712);
  swift_task_dealloc(*(_QWORD *)(v0 + 728));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

char *sub_1009923C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t inited;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  __n128 v28;
  _BYTE v31[24];
  _BYTE v32[72];
  _QWORD v33[3];

  v2 = v1;
  v4 = type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  __chkstk_darwin(v4);
  v6 = &v31[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  GroupSession.activity.getter(v33, v7);
  v8 = v33[0];
  sub_10098EB14((uint64_t)v6);
  swift_release(v8);
  if (qword_1013DD888 != -1)
    swift_once(&qword_1013DD888, sub_100A05DE4);
  swift_beginAccess(&static OS_os_log.realTimeSync, v33, 0, 0);
  v9 = (void *)static OS_os_log.realTimeSync;
  v10 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v10, v32);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v12 = v9;
  v13 = UUID.uuidString.getter(v12);
  v15 = v14;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v13;
  *(_QWORD *)(inited + 40) = v15;
  v17 = static os_log_type_t.default.getter(v16);
  sub_100A06EBC((uint64_t)v12, &_mh_execute_header, v17, "createGroupSessionForConfiguration() for %{public}@", 51, 2, inited);
  swift_setDeallocating(inited);
  v18 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v18);

  v19 = type metadata accessor for CRLBoardOpportunisticGroupSession(0);
  swift_allocObject(v19, *(unsigned int *)(v19 + 48), *(unsigned __int16 *)(v19 + 52));
  swift_retain(a1);
  v21 = sub_100993438(v20);
  swift_beginAccess(v2 + 64, v31, 0, 0);
  v22 = *(_QWORD *)(v2 + 64);
  if (!*(_QWORD *)(v22 + 16))
    goto LABEL_7;
  swift_bridgeObjectRetain(*(_QWORD *)(v2 + 64));
  v23 = sub_100843584((uint64_t)v6);
  if ((v24 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    sub_100757E04(&_mh_execute_header, (uint64_t)"createGroupSessionForConfiguration(from:)", 41, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLOpportunisticGroupSessionManager.swift", 109, 2, 302, "Received an opportunistic group session that does not have a corresponding activity wrapper. This is a logic error", 114, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createGroupSessionForConfiguration(from:)", 41, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLOpportunisticGroupSessionManager.swift", 109, 2u, 302, (uint64_t)"Received an opportunistic group session that does not have a corresponding activity wrapper. This is a logic error", 114, 2u);
    v27 = sub_100997490();
    swift_allocError(&type metadata for CRLOpportunisticGroupSessionManagerError, v27, 0, 0);
    swift_willThrow(v28);
    swift_release(v21);
    sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLGloballyScopedBoardIdentifier);
    return v21;
  }
  v25 = *(_QWORD *)(*(_QWORD *)(v22 + 56) + 8 * v23);
  swift_retain(v25);
  swift_bridgeObjectRelease();
  sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLGloballyScopedBoardIdentifier);
  v26 = *(_QWORD *)(v25 + OBJC_IVAR____TtC8Freeform36CRLBoardOpportunisticActivityWrapper_session);
  *(_QWORD *)(v25 + OBJC_IVAR____TtC8Freeform36CRLBoardOpportunisticActivityWrapper_session) = v21;
  swift_retain(v21);
  swift_release(v25);
  swift_release(v26);
  return v21;
}

uint64_t sub_1009926F8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[15] = a1;
  v2[16] = v1;
  v3 = type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  v2[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for MainActor(0);
  v2[18] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  return swift_task_switch(sub_100992784, v5, v6);
}

uint64_t sub_100992784()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t inited;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;

  v1 = *(_QWORD *)(v0 + 136);
  swift_release(*(_QWORD *)(v0 + 144));
  GroupSession.activity.getter((_QWORD *)(v0 + 112), v2);
  v3 = *(_QWORD *)(v0 + 112);
  sub_10098EB14(v1);
  swift_release(v3);
  if (qword_1013DD888 != -1)
    swift_once(&qword_1013DD888, sub_100A05DE4);
  v5 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 136);
  swift_beginAccess(&static OS_os_log.realTimeSync, v0 + 88, 0, 0);
  v6 = (void *)static OS_os_log.realTimeSync;
  v7 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v7, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v9 = v6;
  v10 = UUID.uuidString.getter(v9);
  v12 = v11;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v10;
  *(_QWORD *)(inited + 40) = v12;
  v14 = static os_log_type_t.default.getter(v13);
  sub_100A06EBC((uint64_t)v9, &_mh_execute_header, v14, "didConfigureGroupSession() for %{public}@", 41, 2, inited);
  swift_setDeallocating(inited);
  v15 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v15);

  v16 = *(_QWORD *)(v5 + 72);
  v17 = swift_retain(v16);
  PassthroughSubject.send(_:)(v4, v17);
  swift_release(v16);
  sub_1004B84A4(v4, type metadata accessor for CRLGloballyScopedBoardIdentifier);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100992934(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[21] = a1;
  v2[22] = v1;
  v3 = type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  v2[23] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for MainActor(0);
  v2[24] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  return swift_task_switch(sub_1009929C0, v5, v6);
}

uint64_t sub_1009929C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t inited;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  __n128 v24;
  uint64_t v25;

  v1 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 176);
  swift_release(*(_QWORD *)(v0 + 192));
  GroupSession.activity.getter((_QWORD *)(v0 + 160), v3);
  v4 = *(_QWORD *)(v0 + 160);
  sub_10098EB14(v1);
  swift_release(v4);
  swift_beginAccess(v2 + 64, v0 + 88, 0, 0);
  v5 = *(_QWORD *)(v2 + 64);
  if (*(_QWORD *)(v5 + 16))
  {
    v6 = *(_QWORD *)(v0 + 184);
    swift_bridgeObjectRetain(*(_QWORD *)(v2 + 64));
    v7 = sub_100843584(v6);
    if ((v8 & 1) != 0)
    {
      v9 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v7);
      swift_retain(v9);
      swift_bridgeObjectRelease();
      if (qword_1013DD888 != -1)
        swift_once(&qword_1013DD888, sub_100A05DE4);
      v10 = *(_QWORD *)(v0 + 184);
      swift_beginAccess(&static OS_os_log.realTimeSync, v0 + 136, 0, 0);
      v11 = (void *)static OS_os_log.realTimeSync;
      v12 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v12, v0 + 16);
      *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
      v14 = v11;
      v15 = UUID.uuidString.getter(v14);
      v17 = v16;
      *(_QWORD *)(inited + 56) = &type metadata for String;
      v18 = sub_1004CFC2C();
      *(_QWORD *)(inited + 64) = v18;
      *(_QWORD *)(inited + 32) = v15;
      *(_QWORD *)(inited + 40) = v17;
      v19 = static os_log_type_t.error.getter(v18);
      sub_100A06EBC((uint64_t)v14, &_mh_execute_header, v19, "groupSessionConfigurationFailed() for activity on %{public}@", 60, 2, inited);
      swift_setDeallocating(inited);
      v20 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(inited + 32, 1, v20);

      sub_1004B84A4(v10, type metadata accessor for CRLGloballyScopedBoardIdentifier);
      v21 = *(_QWORD *)(v9 + OBJC_IVAR____TtC8Freeform36CRLBoardOpportunisticActivityWrapper_session);
      *(_QWORD *)(v9 + OBJC_IVAR____TtC8Freeform36CRLBoardOpportunisticActivityWrapper_session) = 0;
      swift_release(v9);
      swift_release(v21);
      goto LABEL_10;
    }
    swift_bridgeObjectRelease();
  }
  if (qword_1013DD888 != -1)
    swift_once(&qword_1013DD888, sub_100A05DE4);
  v22 = *(_QWORD *)(v0 + 184);
  swift_beginAccess(&static OS_os_log.realTimeSync, v0 + 112, 0, 0);
  v23 = (id)static OS_os_log.realTimeSync;
  v25 = static os_log_type_t.default.getter(v24);
  sub_100A06EBC((uint64_t)v23, &_mh_execute_header, v25, "groupSessionConfigurationFailed() on an activity we are not tracking", 68, 2, (uint64_t)_swiftEmptyArrayStorage);

  sub_1004B84A4(v22, type metadata accessor for CRLGloballyScopedBoardIdentifier);
LABEL_10:
  swift_task_dealloc(*(_QWORD *)(v0 + 184));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100992C70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t inited;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char v48[72];
  _BYTE v49[24];
  _QWORD v50[3];

  v1 = v0;
  v2 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v2);
  v4 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v45 - v13;
  GroupSession.activity.getter(v50, v15);
  v16 = v50[0];
  sub_10098EB14((uint64_t)v14);
  swift_release(v16);
  swift_beginAccess(v1 + 64, v50, 0, 0);
  v17 = *(_QWORD *)(v1 + 64);
  if (*(_QWORD *)(v17 + 16))
  {
    swift_bridgeObjectRetain(*(_QWORD *)(v1 + 64));
    v18 = sub_100843584((uint64_t)v14);
    if ((v19 & 1) != 0)
    {
      v46 = v4;
      v20 = *(_QWORD *)(*(_QWORD *)(v17 + 56) + 8 * v18);
      swift_retain(v20);
      swift_bridgeObjectRelease();
      if (qword_1013DD888 != -1)
        swift_once(&qword_1013DD888, sub_100A05DE4);
      swift_beginAccess(&static OS_os_log.realTimeSync, v49, 0, 0);
      v21 = (void *)static OS_os_log.realTimeSync;
      v22 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v22, v48);
      *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
      v24 = v21;
      GroupSession.activity.getter(&v47, v24);
      sub_10098EB14((uint64_t)v11);
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
      v25 = sub_1004B84A4((uint64_t)v11, type metadata accessor for CRLGloballyScopedBoardIdentifier);
      v26 = UUID.uuidString.getter(v25);
      v28 = v27;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      *(_QWORD *)(inited + 56) = &type metadata for String;
      *(_QWORD *)(inited + 64) = sub_1004CFC2C();
      *(_QWORD *)(inited + 32) = v26;
      *(_QWORD *)(inited + 40) = v28;
      v29 = swift_release(v47);
      v30 = static os_log_type_t.default.getter(v29);
      sub_100A06EBC((uint64_t)v24, &_mh_execute_header, v30, "didLeaveGroupSession() for %{public}@", 37, 2, inited);
      swift_setDeallocating(inited);
      v31 = *(_QWORD *)(inited + 16);
      v32 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(inited + 32, v31, v32);

      v33 = OBJC_IVAR____TtC8Freeform36CRLBoardOpportunisticActivityWrapper_sessionObserverTask;
      v34 = *(_QWORD *)(v20 + OBJC_IVAR____TtC8Freeform36CRLBoardOpportunisticActivityWrapper_sessionObserverTask);
      if (v34)
      {
        swift_retain(*(_QWORD *)(v20
                               + OBJC_IVAR____TtC8Freeform36CRLBoardOpportunisticActivityWrapper_sessionObserverTask));
        Task.cancel()();
        swift_release(v34);
      }
      v35 = type metadata accessor for TaskPriority(0);
      v36 = (uint64_t)v46;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v46, 1, 1, v35);
      v37 = swift_allocObject(&unk_10128CD80, 24, 7);
      swift_weakInit(v37 + 16, v20);
      v38 = (_QWORD *)swift_allocObject(&unk_10128CDA8, 40, 7);
      v38[2] = 0;
      v38[3] = 0;
      v38[4] = v37;
      v39 = sub_100521B98(v36, (uint64_t)&unk_1013FED48, (uint64_t)v38);
      v40 = *(_QWORD *)(v20 + v33);
      *(_QWORD *)(v20 + v33) = v39;
      swift_release(v20);
      swift_release(v40);
      return sub_1004B84A4((uint64_t)v14, type metadata accessor for CRLGloballyScopedBoardIdentifier);
    }
    swift_bridgeObjectRelease();
  }
  if (qword_1013DD888 != -1)
    swift_once(&qword_1013DD888, sub_100A05DE4);
  swift_beginAccess(&static OS_os_log.realTimeSync, v49, 0, 0);
  v41 = (id)static OS_os_log.realTimeSync;
  v43 = static os_log_type_t.default.getter(v42);
  sub_100A06EBC((uint64_t)v41, &_mh_execute_header, v43, "didLeaveGroupSession() on an activity we are not tracking", 57, 2, (uint64_t)_swiftEmptyArrayStorage);

  return sub_1004B84A4((uint64_t)v14, type metadata accessor for CRLGloballyScopedBoardIdentifier);
}

_QWORD *sub_1009930BC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  __n128 v3;
  id v4;
  __n128 v5;
  uint64_t v6;
  char v8[24];

  v1 = v0;
  v0[8] = _swiftEmptyDictionarySingleton;
  v2 = sub_1004B804C(&qword_1013FEED0);
  swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  v3 = swift_retain(v0);
  v0[9] = PassthroughSubject.init()(v3);
  v0[10] = _swiftEmptyDictionarySingleton;
  v0[11] = _swiftEmptyDictionarySingleton;
  swift_release(v0);
  v0[2] = &_swiftEmptySetSingleton;
  v0[4] = 0;
  swift_unknownObjectWeakInit(v0 + 3);
  v0[5] = _swiftEmptyDictionarySingleton;
  v0[6] = _swiftEmptyDictionarySingleton;
  v0[7] = _swiftEmptyDictionarySingleton;
  if (qword_1013DD888 != -1)
    swift_once(&qword_1013DD888, sub_100A05DE4);
  swift_beginAccess(&static OS_os_log.realTimeSync, v8, 0, 0);
  v4 = (id)static OS_os_log.realTimeSync;
  v6 = static os_log_type_t.default.getter(v5);
  sub_100A06EBC((uint64_t)v4, &_mh_execute_header, v6, "CRLGroupSessionManager: init.", 29, 2, (uint64_t)_swiftEmptyArrayStorage);

  return v1;
}

uint64_t sub_1009931D8()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[8]);
  swift_release(v0[9]);
  swift_bridgeObjectRelease(v0[10]);
  return swift_bridgeObjectRelease(v0[11]);
}

uint64_t sub_100993204()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1004CBB0C(v0 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release(*(_QWORD *)(v0 + 72));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_100993260()
{
  uint64_t v0;

  sub_100993204();
  return swift_deallocClassInstance(v0, 96, 7);
}

uint64_t type metadata accessor for CRLOpportunisticGroupSessionManager(uint64_t a1)
{
  return sub_1004BD408(a1, (uint64_t *)&unk_1013FEA90, (uint64_t)&nominal type descriptor for CRLOpportunisticGroupSessionManager);
}

uint64_t sub_100993294(uint64_t a1)
{
  _QWORD v2[4];

  v2[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
  return swift_initClassMetadata2(a1, 256, 4, v2, a1 + 376);
}

uint64_t sub_1009932E8()
{
  return sub_1004B7878(&qword_1013FED00, type metadata accessor for CRLOpportunisticGroupActivity, (uint64_t)&unk_100F1E64C);
}

uint64_t sub_100993314()
{
  return sub_1004B7878((unint64_t *)&unk_1013FED08, type metadata accessor for CRLOpportunisticGroupActivity, (uint64_t)&unk_100F1E624);
}

uint64_t sub_100993340(uint64_t a1)
{
  uint64_t result;

  result = sub_1004B7878(&qword_1013FED18, type metadata accessor for CRLOpportunisticGroupActivity, (uint64_t)&unk_100F1E6AC);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_10099337C()
{
  return sub_1004B7878(&qword_1013FED18, type metadata accessor for CRLOpportunisticGroupActivity, (uint64_t)&unk_100F1E6AC);
}

uint64_t sub_1009933A8()
{
  return sub_1004B7878(&qword_1013FED20, type metadata accessor for CRLOpportunisticGroupActivity, (uint64_t)&unk_100F1E674);
}

void *sub_1009933D4()
{
  return &protocol witness table for String;
}

void *sub_1009933E0()
{
  return &protocol witness table for String;
}

uint64_t sub_1009933EC(uint64_t (*a1)(void))
{
  return a1();
}

unint64_t sub_1009933F4()
{
  unint64_t result;

  result = qword_1013FED30;
  if (!qword_1013FED30)
  {
    result = swift_getWitnessTable(&unk_100F1E944, &type metadata for CRLOpportunisticGroupActivity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FED30);
  }
  return result;
}

char *sub_100993438(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  __n128 v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  __n128 v23;
  char *v24;
  _BYTE v27[24];

  v2 = v1;
  v4 = type metadata accessor for Participant(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v27[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = type metadata accessor for UUID(0);
  __chkstk_darwin(v8);
  v10 = &v27[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v11);
  v13 = &v27[-v12 - 8];
  v14 = v1 + qword_101404F00;
  *(_QWORD *)(v14 + 32) = 0;
  *(_OWORD *)v14 = 0u;
  *(_OWORD *)(v14 + 16) = 0u;
  v15 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 280);
  v16 = sub_1004B804C(&qword_1013FED60);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  v17 = qword_1013DD888;
  swift_retain(v2);
  if (v17 != -1)
    swift_once(&qword_1013DD888, sub_100A05DE4);
  swift_beginAccess(&static OS_os_log.realTimeSync, v27, 0, 0);
  v18 = (id)static OS_os_log.realTimeSync;
  v20 = static os_log_type_t.default.getter(v19);
  sub_100A06EBC((uint64_t)v18, &_mh_execute_header, v20, "CRLBoardShareSession: init.", 27, 2, (uint64_t)_swiftEmptyArrayStorage);

  *(_QWORD *)(v2 + qword_101480A40) = a1;
  swift_retain(a1);
  v21 = swift_release(v2);
  v22 = GroupSession.id.getter(v21);
  v23.n128_f64[0] = GroupSession.localParticipant.getter(v22);
  Participant.id.getter(v23);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v24 = sub_100A62A74((uint64_t)v13, (uint64_t)v10);
  swift_retain(v24);
  sub_10098E0F4();
  swift_release(v24);
  swift_release(a1);
  return v24;
}

uint64_t sub_100993658(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[14] = a4;
  v5 = type metadata accessor for UUID(0);
  v4[15] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[16] = v6;
  v4[17] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009936B8, 0, 0);
}

uint64_t sub_1009936B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t inited;
  id v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if (qword_1013DD888 != -1)
    swift_once(&qword_1013DD888, sub_100A05DE4);
  v2 = *(_QWORD *)(v0 + 128);
  v1 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 120);
  swift_beginAccess(&static OS_os_log.realTimeSync, v0 + 88, 0, 0);
  v4 = (void *)static OS_os_log.realTimeSync;
  v5 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v5, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v7 = v4;
  v9 = GroupSession.id.getter(v8);
  v10 = UUID.uuidString.getter(v9);
  v12 = v11;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v10;
  *(_QWORD *)(inited + 40) = v12;
  v14 = static os_log_type_t.default.getter(v13);
  sub_100A06EBC((uint64_t)v7, &_mh_execute_header, v14, "CRLBoardShareSession: Calling join on group session now %@", 58, 2, inited);
  swift_setDeallocating(inited);
  v15 = *(_QWORD *)(inited + 16);
  v16 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, v15, v16);

  GroupSession.join()();
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_10099382C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t Strong;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double result;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  char v46[24];

  v45 = a6;
  v42 = a3;
  v43 = a5;
  v39 = a1;
  v40 = a4;
  v7 = type metadata accessor for UUID(0);
  v44 = *(_QWORD *)(v7 - 8);
  v37 = v7;
  v8 = *(_QWORD *)(v44 + 64);
  __chkstk_darwin(v7);
  v38 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C(&qword_1013FED60);
  v10 = *(_QWORD *)(v9 - 8);
  v35 = v9;
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v36 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v12);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = v14;
  v15 = a2 + 16;
  v16 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v14, 1, 1, v16);
  v17 = swift_allocObject(&unk_10128CEC0, 24, 7);
  swift_beginAccess(v15, v46, 0, 0);
  Strong = swift_weakLoadStrong(v15);
  swift_weakInit(v17 + 16, Strong);
  v19 = swift_release(Strong);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))((char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v39, v9, v19);
  v20 = v44;
  (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))((char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v40, v7);
  type metadata accessor for MainActor(0);
  swift_retain(v17);
  swift_retain(v45);
  v22 = static MainActor.shared.getter(v21);
  v23 = *(unsigned __int8 *)(v10 + 80);
  v24 = v10;
  v25 = (v23 + 32) & ~v23;
  v26 = v25 + v11;
  v27 = *(unsigned __int8 *)(v20 + 80);
  v28 = (v27 + v25 + v11 + 1) & ~v27;
  v29 = v28 + v8;
  v30 = ((v29 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  v31 = swift_allocObject(&unk_10128CF38, v30 + 8, v23 | v27 | 7);
  *(_QWORD *)(v31 + 16) = v22;
  *(_QWORD *)(v31 + 24) = &protocol witness table for MainActor;
  (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v31 + v25, v36, v35);
  *(_BYTE *)(v31 + v26) = v42;
  (*(void (**)(uint64_t, char *, uint64_t))(v44 + 32))(v31 + v28, v38, v37);
  *(_BYTE *)(v31 + v29) = v43;
  *(_QWORD *)((v29 & 0xFFFFFFFFFFFFFFF8) + v31 + 8) = v17;
  *(_QWORD *)(v31 + v30) = v45;
  swift_release(v17);
  v32 = sub_100521B98((uint64_t)v41, (uint64_t)&unk_1013FEE78, v31);
  *(_QWORD *)&result = swift_release(v32).n128_u64[0];
  return result;
}

uint64_t sub_100993AC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  *(_QWORD *)(v8 + 1008) = v22;
  *(_QWORD *)(v8 + 1000) = a8;
  *(_BYTE *)(v8 + 1185) = a7;
  *(_QWORD *)(v8 + 992) = a6;
  *(_BYTE *)(v8 + 1184) = a5;
  *(_QWORD *)(v8 + 984) = a4;
  v9 = sub_1004B804C(&qword_1013E01F0);
  *(_QWORD *)(v8 + 1016) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (*(_QWORD *)(*(_QWORD *)(sub_1004B804C(&qword_1013F7360) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v8 + 1024) = swift_task_alloc(v10);
  *(_QWORD *)(v8 + 1032) = swift_task_alloc(v10);
  v11 = sub_1004B804C(&qword_1013FEDD8);
  *(_QWORD *)(v8 + 1040) = v11;
  *(_QWORD *)(v8 + 1048) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for UUID(0);
  *(_QWORD *)(v8 + 1056) = v12;
  v13 = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v8 + 1064) = v13;
  v14 = (*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v8 + 1072) = swift_task_alloc(v14);
  *(_QWORD *)(v8 + 1080) = swift_task_alloc(v14);
  v15 = sub_1004B804C(&qword_1013FED60);
  *(_QWORD *)(v8 + 1088) = v15;
  v16 = *(_QWORD *)(v15 - 8);
  *(_QWORD *)(v8 + 1096) = v16;
  v17 = (*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v8 + 1104) = swift_task_alloc(v17);
  *(_QWORD *)(v8 + 1112) = swift_task_alloc(v17);
  v18 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v8 + 1120) = static MainActor.shared.getter(v18);
  v19 = dispatch thunk of Actor.unownedExecutor.getter(v18, &protocol witness table for MainActor);
  *(_QWORD *)(v8 + 1128) = v19;
  *(_QWORD *)(v8 + 1136) = v20;
  return swift_task_switch(sub_100993C48, v19, v20);
}

uint64_t sub_100993C48()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, _QWORD, uint64_t);
  uint64_t (*v8)(uint64_t, uint64_t);
  int v9;
  uint64_t *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  int v21;
  void *v22;
  uint64_t v23;
  uint64_t inited;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  int v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  __n128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  const char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  int v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  __n128 v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t Strong;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  int v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t (*v94)();
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void *v103;
  uint64_t v104;
  uint64_t v105;
  id v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  __n128 v110;
  uint64_t v111;
  uint64_t v112;
  __n128 v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  void (*v125)(uint64_t, uint64_t, uint64_t);
  Swift::String v126;
  Swift::String v127;
  __n128 v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  id v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  int v149;
  uint64_t (*v150)(uint64_t, uint64_t);
  void (*v151)(uint64_t, _QWORD, uint64_t);
  uint64_t v152;

  v1 = (char *)(v0 + 1184);
  v2 = v0 + 904;
  v3 = *(_QWORD *)(v0 + 1112);
  v4 = *(_QWORD *)(v0 + 1096);
  v5 = *(_QWORD *)(v0 + 1088);
  v6 = *(_QWORD *)(v0 + 984);
  v7 = *(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 16);
  *(_QWORD *)(v0 + 1144) = v7;
  v151 = v7;
  v7(v3, v6, v5);
  v8 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 88);
  v9 = v8(v3, v5);
  v150 = v8;
  v149 = enum case for GroupSession.State.invalidated<A>(_:);
  if (v9 == enum case for GroupSession.State.invalidated<A>(_:))
  {
    v10 = *(uint64_t **)(v0 + 1112);
    v11 = *v1;
    (*(void (**)(uint64_t *, _QWORD))(*(_QWORD *)(v0 + 1096) + 96))(v10, *(_QWORD *)(v0 + 1088));
    v12 = *v10;
    *(_QWORD *)(v0 + 952) = 0;
    *(_QWORD *)(v0 + 960) = 0xE000000000000000;
    v148 = v12;
    *(_QWORD *)(v0 + 968) = v12;
    v13 = sub_1004B804C(&qword_1013E0210);
    _print_unlocked<A, B>(_:_:)(v0 + 968, v0 + 952, v13, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v14 = *(_QWORD *)(v0 + 952);
    v15 = *(_QWORD *)(v0 + 960);
    if ((v11 & 1) != 0)
      sub_100D4EAC0();
    v146 = v15;
    v147 = v14;
    v152 = v0 + 904;
    if (qword_1013DD888 != -1)
      swift_once(&qword_1013DD888, sub_100A05DE4);
    v16 = *(_QWORD *)(v0 + 1080);
    v17 = *(_QWORD *)(v0 + 1064);
    v18 = *(_QWORD *)(v0 + 1056);
    v19 = *(unsigned __int8 *)(v0 + 1185);
    v20 = *(_QWORD *)(v0 + 992);
    v21 = *v1;
    swift_beginAccess(&static OS_os_log.realTimeSync, v0 + 928, 0, 0);
    v22 = (void *)static OS_os_log.realTimeSync;
    v23 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v23, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100F05060;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v16, v20, v18);
    v25 = v22;
    v26 = String.init<A>(reflecting:)(v16, v18);
    v28 = v27;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v29 = sub_1004CFC2C();
    v30 = v29;
    *(_QWORD *)(inited + 32) = v26;
    *(_QWORD *)(inited + 40) = v28;
    v31 = 28526;
    if (v19)
      v32 = 7562617;
    else
      v32 = 28526;
    *(_QWORD *)(inited + 96) = &type metadata for String;
    *(_QWORD *)(inited + 104) = v29;
    if (v19)
      v33 = 0xE300000000000000;
    else
      v33 = 0xE200000000000000;
    *(_QWORD *)(inited + 64) = v29;
    *(_QWORD *)(inited + 72) = v32;
    *(_QWORD *)(inited + 80) = v33;
    if (v21)
    {
      v31 = 7562617;
      v34 = 0xE300000000000000;
    }
    else
    {
      v34 = 0xE200000000000000;
    }
    *(_QWORD *)(inited + 136) = &type metadata for String;
    *(_QWORD *)(inited + 144) = v29;
    *(_QWORD *)(inited + 112) = v31;
    *(_QWORD *)(inited + 120) = v34;
    *(_QWORD *)(inited + 176) = &type metadata for String;
    *(_QWORD *)(inited + 184) = v29;
    *(_QWORD *)(inited + 152) = v147;
    *(_QWORD *)(inited + 160) = v146;
    swift_getErrorValue(v148, v0 + 976, v0 + 880);
    v35 = Error.localizedDescription.getter(*(_QWORD *)(v0 + 888), *(_QWORD *)(v0 + 896));
    *(_QWORD *)(inited + 216) = &type metadata for String;
    *(_QWORD *)(inited + 224) = v30;
    *(_QWORD *)(inited + 192) = v35;
    *(_QWORD *)(inited + 200) = v36;
    v38 = static os_log_type_t.default.getter(v37);
    sub_100A06EBC((uint64_t)v25, &_mh_execute_header, v38, "CRLBoardShareSession: state changed to .invalidated. ID: %@, MeToMe: %{public}@, isFastSync: %@. Reason: '%{public}@': %{public}@", 129, 2, inited);
    swift_setDeallocating(inited);
    v39 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 5, v39);

    swift_errorRelease(v148);
    goto LABEL_43;
  }
  if (v9 == enum case for GroupSession.State.waiting<A>(_:))
  {
    v152 = v0 + 904;
    if (qword_1013DD888 != -1)
      swift_once(&qword_1013DD888, sub_100A05DE4);
    v40 = *(_QWORD *)(v0 + 1080);
    v41 = *(_QWORD *)(v0 + 1064);
    v42 = *(_QWORD *)(v0 + 1056);
    v43 = *(unsigned __int8 *)(v0 + 1185);
    v44 = *(_QWORD *)(v0 + 992);
    v45 = *v1;
    swift_beginAccess(&static OS_os_log.realTimeSync, v0 + 832, 0, 0);
    v46 = (void *)static OS_os_log.realTimeSync;
    v47 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v48 = swift_initStackObject(v47, v0 + 248);
    *(_OWORD *)(v48 + 16) = xmmword_100EF5550;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 16))(v40, v44, v42);
    v49 = v46;
    v50 = String.init<A>(reflecting:)(v40, v42);
    v52 = v51;
    *(_QWORD *)(v48 + 56) = &type metadata for String;
    v53 = sub_1004CFC2C();
    *(_QWORD *)(v48 + 32) = v50;
    v55 = v48 + 32;
    *(_QWORD *)(v48 + 40) = v52;
    v56 = 28526;
    if (v43)
      v57 = 7562617;
    else
      v57 = 28526;
    *(_QWORD *)(v48 + 96) = &type metadata for String;
    *(_QWORD *)(v48 + 104) = v53;
    if (v43)
      v58 = 0xE300000000000000;
    else
      v58 = 0xE200000000000000;
    *(_QWORD *)(v48 + 64) = v53;
    *(_QWORD *)(v48 + 72) = v57;
    *(_QWORD *)(v48 + 80) = v58;
    if (v45)
    {
      v56 = 7562617;
      v59 = 0xE300000000000000;
    }
    else
    {
      v59 = 0xE200000000000000;
    }
    *(_QWORD *)(v48 + 136) = &type metadata for String;
    *(_QWORD *)(v48 + 144) = v53;
    *(_QWORD *)(v48 + 112) = v56;
    *(_QWORD *)(v48 + 120) = v59;
    v60 = static os_log_type_t.default.getter(v54);
    v61 = "CRLBoardShareSession: state changed to .waiting. ID: %@, MeToMe: %{public}@, isFastSync: %@";
    v62 = (uint64_t)v49;
    v63 = 91;
LABEL_42:
    sub_100A06EBC(v62, &_mh_execute_header, v60, v61, v63, 2, v48);
    swift_setDeallocating(v48);
    v81 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v55, 3, v81);

LABEL_43:
    v2 = v152;
    goto LABEL_44;
  }
  if (v9 == enum case for GroupSession.State.joined<A>(_:))
  {
    v152 = v0 + 904;
    if (qword_1013DD888 != -1)
      swift_once(&qword_1013DD888, sub_100A05DE4);
    v64 = *(_QWORD *)(v0 + 1080);
    v65 = *(_QWORD *)(v0 + 1064);
    v66 = *(_QWORD *)(v0 + 1056);
    v67 = *(unsigned __int8 *)(v0 + 1185);
    v68 = *(_QWORD *)(v0 + 992);
    v69 = *v1;
    swift_beginAccess(&static OS_os_log.realTimeSync, v0 + 784, 0, 0);
    v70 = (void *)static OS_os_log.realTimeSync;
    v71 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v48 = swift_initStackObject(v71, v0 + 400);
    *(_OWORD *)(v48 + 16) = xmmword_100EF5550;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v65 + 16))(v64, v68, v66);
    v49 = v70;
    v72 = String.init<A>(reflecting:)(v64, v66);
    v74 = v73;
    *(_QWORD *)(v48 + 56) = &type metadata for String;
    v75 = sub_1004CFC2C();
    *(_QWORD *)(v48 + 32) = v72;
    v55 = v48 + 32;
    *(_QWORD *)(v48 + 40) = v74;
    v77 = 28526;
    if (v67)
      v78 = 7562617;
    else
      v78 = 28526;
    *(_QWORD *)(v48 + 96) = &type metadata for String;
    *(_QWORD *)(v48 + 104) = v75;
    if (v67)
      v79 = 0xE300000000000000;
    else
      v79 = 0xE200000000000000;
    *(_QWORD *)(v48 + 64) = v75;
    *(_QWORD *)(v48 + 72) = v78;
    *(_QWORD *)(v48 + 80) = v79;
    if (v69)
    {
      v77 = 7562617;
      v80 = 0xE300000000000000;
    }
    else
    {
      v80 = 0xE200000000000000;
    }
    *(_QWORD *)(v48 + 136) = &type metadata for String;
    *(_QWORD *)(v48 + 144) = v75;
    *(_QWORD *)(v48 + 112) = v77;
    *(_QWORD *)(v48 + 120) = v80;
    v60 = static os_log_type_t.default.getter(v76);
    v61 = "CRLBoardShareSession: state changed to .joined. ID: %@, MeToMe: %{public}@, isFastSync: %@";
    v62 = (uint64_t)v49;
    v63 = 90;
    goto LABEL_42;
  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 1096) + 8))(*(_QWORD *)(v0 + 1112), *(_QWORD *)(v0 + 1088));
LABEL_44:
  v82 = *(_QWORD *)(v0 + 1000) + 16;
  swift_beginAccess(v82, v2, 0, 0);
  Strong = swift_weakLoadStrong(v82);
  *(_QWORD *)(v0 + 1152) = Strong;
  if (!Strong)
  {
    v95 = *(_QWORD *)(v0 + 1008);
    swift_release(*(_QWORD *)(v0 + 1120));
    swift_beginAccess(v95 + 16, v0 + 856, 0, 0);
    v96 = *(_QWORD *)(v95 + 16);
    if (v96)
    {
      swift_retain(*(_QWORD *)(v95 + 16));
      AnyCancellable.cancel()();
      swift_release(v96);
    }
    v97 = *(_QWORD *)(v0 + 1008);
    swift_beginAccess(v97 + 16, v0 + 808, 1, 0);
    v98 = *(_QWORD *)(v97 + 16);
    *(_QWORD *)(v97 + 16) = 0;
    swift_release(v98);
    if (qword_1013DD888 != -1)
      swift_once(&qword_1013DD888, sub_100A05DE4);
    v99 = *(_QWORD *)(v0 + 1080);
    v100 = *(_QWORD *)(v0 + 1064);
    v101 = *(_QWORD *)(v0 + 1056);
    v102 = *(_QWORD *)(v0 + 992);
    swift_beginAccess(&static OS_os_log.realTimeSync, v0 + 736, 0, 0);
    v103 = (void *)static OS_os_log.realTimeSync;
    v104 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v105 = swift_initStackObject(v104, v0 + 552);
    *(_OWORD *)(v105 + 16) = xmmword_100EF5E40;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v100 + 16))(v99, v102, v101);
    v106 = v103;
    v107 = String.init<A>(reflecting:)(v99, v101);
    v109 = v108;
    *(_QWORD *)(v105 + 56) = &type metadata for String;
    *(_QWORD *)(v105 + 64) = sub_1004CFC2C();
    *(_QWORD *)(v105 + 32) = v107;
    *(_QWORD *)(v105 + 40) = v109;
    v111 = static os_log_type_t.default.getter(v110);
    sub_100A06EBC((uint64_t)v106, &_mh_execute_header, v111, "CRLBoardShareSession: Not doing anything because CRLBoardShareSession was deallocated. Session ID: %{public}@", 109, 2, v105);
    swift_setDeallocating(v105);
    v112 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v105 + 32, 1, v112);

    goto LABEL_68;
  }
  v84 = Strong;
  v85 = *(_QWORD *)(v0 + 1104);
  v86 = *(_QWORD *)(v0 + 1088);
  v151(v85, *(_QWORD *)(v0 + 984), v86);
  v87 = v150(v85, v86);
  if (v87 == v149)
  {
    v88 = *(_QWORD **)(v0 + 1104);
    v89 = *(_QWORD *)(v0 + 1008);
    (*(void (**)(_QWORD *, _QWORD))(*(_QWORD *)(v0 + 1096) + 96))(v88, *(_QWORD *)(v0 + 1088));
    swift_errorRelease(*v88);
    swift_beginAccess(v89 + 16, v0 + 688, 0, 0);
    v90 = *(_QWORD *)(v89 + 16);
    if (v90)
    {
      swift_retain(*(_QWORD *)(v89 + 16));
      AnyCancellable.cancel()();
      swift_release(v90);
    }
    v91 = *(_QWORD *)(v0 + 1008);
    swift_beginAccess(v91 + 16, v0 + 712, 1, 0);
    v92 = *(_QWORD *)(v91 + 16);
    *(_QWORD *)(v91 + 16) = 0;
    swift_release(v92);
    v93 = *(_QWORD *)(v84 + 32);
    *(_QWORD *)(v0 + 1176) = v93;
    if (v93)
    {
      swift_retain(v93);
      v94 = sub_1009949F0;
      return swift_task_switch(v94, v93, 0);
    }
    v114 = swift_release(*(_QWORD *)(v0 + 1120));
    v115 = *(_QWORD *)(v0 + 1152);
    v116 = *(_QWORD *)(v0 + 1048);
    v117 = *(_QWORD *)(v115 + 16);
    v118 = *(int *)(*(_QWORD *)(v0 + 1040) + 48);
    (*(void (**)(uint64_t, _QWORD, _QWORD, __n128))(*(_QWORD *)(v0 + 1064) + 16))(v116, *(_QWORD *)(v0 + 992), *(_QWORD *)(v0 + 1056), v114);
    *(_BYTE *)(v116 + v118) = 1;
    swift_retain(v117);
    CurrentValueSubject.value.setter(v116);
    swift_release(v117);
    *(_QWORD *)(v0 + 656) = 0;
    *(_OWORD *)(v0 + 624) = 0u;
    *(_OWORD *)(v0 + 640) = 0u;
    v119 = v115 + qword_101404F00;
    swift_beginAccess(v115 + qword_101404F00, v0 + 760, 33, 0);
    sub_100582338(v0 + 624, v119, &qword_1013EE2F8);
    swift_endAccess(v0 + 760);
    v120 = *(_QWORD *)(v115 + 32);
    *(_QWORD *)(v115 + 32) = 0;
  }
  else
  {
    if (v87 != enum case for GroupSession.State.waiting<A>(_:))
    {
      if (v87 != enum case for GroupSession.State.joined<A>(_:))
      {
        v121 = *(_QWORD *)(v0 + 1080);
        v122 = *(_QWORD *)(v0 + 1072);
        v123 = *(_QWORD *)(v0 + 1056);
        v124 = *(_QWORD *)(v0 + 992);
        v125 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 1064) + 16);
        v125(v122, v124, v123);
        _StringGuts.grow(_:)(59);
        v126._object = (void *)0x8000000100FE60C0;
        v126._countAndFlagsBits = 0xD000000000000039;
        String.append(_:)(v126);
        v125(v121, v122, v123);
        v127._countAndFlagsBits = String.init<A>(reflecting:)(v121, v123);
        String.append(_:)(v127);
        swift_bridgeObjectRelease();
        return _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLBoardGroupSession.swift", 35, 2, 168, 0);
      }
      v93 = *(_QWORD *)(v84 + 32);
      *(_QWORD *)(v0 + 1168) = v93;
      if (v93)
      {
        swift_retain(v93);
        v94 = sub_1009948F8;
        return swift_task_switch(v94, v93, 0);
      }
      swift_release(*(_QWORD *)(v0 + 1120));
      v145 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
      if (qword_1013DDB08 != -1)
        swift_once(&qword_1013DDB08, sub_100B117DC);
      objc_msgSend(v145, "postNotificationName:object:", qword_101480B18, *(_QWORD *)(v0 + 1152));

      goto LABEL_67;
    }
    v93 = *(_QWORD *)(v84 + 32);
    *(_QWORD *)(v0 + 1160) = v93;
    if (v93)
    {
      swift_retain(v93);
      v94 = sub_1009948A8;
      return swift_task_switch(v94, v93, 0);
    }
    v120 = *(_QWORD *)(v0 + 1120);
  }
  v128 = swift_release(v120);
LABEL_67:
  v129 = *(_QWORD *)(v0 + 1152);
  v130 = *(_QWORD *)(v0 + 1096);
  v131 = *(_QWORD *)(v0 + 1088);
  v132 = *(_QWORD *)(v0 + 1032);
  v133 = *(_QWORD *)(v0 + 1024);
  (*(void (**)(uint64_t, _QWORD, uint64_t, __n128))(v0 + 1144))(v132, *(_QWORD *)(v0 + 984), v131, v128);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v130 + 56))(v132, 0, 1, v131);
  sub_1004C4938(v132, v133, &qword_1013F7360);
  v134 = v129 + *(_QWORD *)(*(_QWORD *)v129 + 280);
  swift_beginAccess(v134, v0 + 664, 33, 0);
  sub_100582338(v133, v134, &qword_1013F7360);
  swift_endAccess(v0 + 664);
  v135 = sub_1004B804C(&qword_1013FEE80);
  v136 = sub_1004CBA30(&qword_1013FEE88, &qword_1013FEE80, (uint64_t)&unk_100F26E78);
  v137 = ObservableObject<>.objectWillChange.getter(v135, v136);
  ObservableObjectPublisher.send()();
  swift_release(v137);
  swift_release(v129);
LABEL_68:
  v138 = *(_QWORD *)(v0 + 1104);
  v139 = *(_QWORD *)(v0 + 1080);
  v140 = *(_QWORD *)(v0 + 1072);
  v141 = *(_QWORD *)(v0 + 1048);
  v142 = *(_QWORD *)(v0 + 1032);
  v143 = *(_QWORD *)(v0 + 1024);
  v144 = *(_QWORD *)(v0 + 1016);
  swift_task_dealloc(*(_QWORD *)(v0 + 1112));
  swift_task_dealloc(v138);
  swift_task_dealloc(v139);
  swift_task_dealloc(v140);
  swift_task_dealloc(v141);
  swift_task_dealloc(v142);
  swift_task_dealloc(v143);
  swift_task_dealloc(v144);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009948A8()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[145];
  if (*(_BYTE *)(v1 + 210) == 1)
  {
    *(_BYTE *)(v1 + 210) = 0;
    v1 = v0[145];
  }
  swift_release(v1);
  return swift_task_switch(sub_100994C78, v0[141], v0[142]);
}

uint64_t sub_1009948F8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  v1 = v0[146];
  if ((*(_BYTE *)(v1 + 210) & 1) == 0)
  {
    *(_BYTE *)(v1 + 210) = 1;
    v2 = v0[146];
    if (*(_BYTE *)(v1 + 208) == 1)
    {
      v3 = v0[127];
      *(_BYTE *)(v1 + 208) = 0;
      v4 = type metadata accessor for TaskPriority(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
      v5 = sub_1004B7878((unint64_t *)&qword_1013FEE90, (uint64_t (*)(uint64_t))type metadata accessor for CRLGroupSessionSyncController, (uint64_t)&unk_100F2ECA0);
      v6 = (_QWORD *)swift_allocObject(&unk_10128CF60, 40, 7);
      v6[2] = v2;
      v6[3] = v5;
      v6[4] = v2;
      swift_retain_n(v2, 2);
      v7 = sub_100521B98(v3, (uint64_t)&unk_1013FEE98, (uint64_t)v6);
      swift_release(v7);
    }
    v1 = v2;
  }
  swift_release(v1);
  return swift_task_switch(sub_100994E04, v0[141], v0[142]);
}

uint64_t sub_1009949F0()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[147];
  if (*(_BYTE *)(v1 + 210) == 1)
  {
    *(_BYTE *)(v1 + 210) = 0;
    v1 = v0[147];
  }
  swift_release(v1);
  return swift_task_switch(sub_100994A40, v0[141], v0[142]);
}

uint64_t sub_100994A40()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = swift_release(*(_QWORD *)(v0 + 1120));
  v2 = *(_QWORD *)(v0 + 1152);
  v3 = *(_QWORD *)(v0 + 1048);
  v4 = *(_QWORD *)(v2 + 16);
  v5 = *(int *)(*(_QWORD *)(v0 + 1040) + 48);
  (*(void (**)(uint64_t, _QWORD, _QWORD, __n128))(*(_QWORD *)(v0 + 1064) + 16))(v3, *(_QWORD *)(v0 + 992), *(_QWORD *)(v0 + 1056), v1);
  *(_BYTE *)(v3 + v5) = 1;
  swift_retain(v4);
  CurrentValueSubject.value.setter(v3);
  swift_release(v4);
  *(_QWORD *)(v0 + 656) = 0;
  *(_OWORD *)(v0 + 624) = 0u;
  *(_OWORD *)(v0 + 640) = 0u;
  v6 = v2 + qword_101404F00;
  swift_beginAccess(v2 + qword_101404F00, v0 + 760, 33, 0);
  sub_100582338(v0 + 624, v6, &qword_1013EE2F8);
  swift_endAccess(v0 + 760);
  v7 = *(_QWORD *)(v2 + 32);
  *(_QWORD *)(v2 + 32) = 0;
  v8 = swift_release(v7);
  v9 = *(_QWORD *)(v0 + 1152);
  v10 = *(_QWORD *)(v0 + 1096);
  v11 = *(_QWORD *)(v0 + 1088);
  v12 = *(_QWORD *)(v0 + 1032);
  v13 = *(_QWORD *)(v0 + 1024);
  (*(void (**)(uint64_t, _QWORD, uint64_t, __n128))(v0 + 1144))(v12, *(_QWORD *)(v0 + 984), v11, v8);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(v12, 0, 1, v11);
  sub_1004C4938(v12, v13, &qword_1013F7360);
  v14 = v9 + *(_QWORD *)(*(_QWORD *)v9 + 280);
  swift_beginAccess(v14, v0 + 664, 33, 0);
  sub_100582338(v13, v14, &qword_1013F7360);
  swift_endAccess(v0 + 664);
  v15 = sub_1004B804C(&qword_1013FEE80);
  v16 = sub_1004CBA30(&qword_1013FEE88, &qword_1013FEE80, (uint64_t)&unk_100F26E78);
  v17 = ObservableObject<>.objectWillChange.getter(v15, v16);
  ObservableObjectPublisher.send()();
  swift_release(v17);
  swift_release(v9);
  v18 = *(_QWORD *)(v0 + 1104);
  v19 = *(_QWORD *)(v0 + 1080);
  v20 = *(_QWORD *)(v0 + 1072);
  v21 = *(_QWORD *)(v0 + 1048);
  v22 = *(_QWORD *)(v0 + 1032);
  v23 = *(_QWORD *)(v0 + 1024);
  v24 = *(_QWORD *)(v0 + 1016);
  swift_task_dealloc(*(_QWORD *)(v0 + 1112));
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100994C78()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = swift_release(*(_QWORD *)(v0 + 1120));
  v2 = *(_QWORD *)(v0 + 1152);
  v3 = *(_QWORD *)(v0 + 1096);
  v4 = *(_QWORD *)(v0 + 1088);
  v5 = *(_QWORD *)(v0 + 1032);
  v6 = *(_QWORD *)(v0 + 1024);
  (*(void (**)(uint64_t, _QWORD, uint64_t, __n128))(v0 + 1144))(v5, *(_QWORD *)(v0 + 984), v4, v1);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v5, 0, 1, v4);
  sub_1004C4938(v5, v6, &qword_1013F7360);
  v7 = v2 + *(_QWORD *)(*(_QWORD *)v2 + 280);
  swift_beginAccess(v7, v0 + 664, 33, 0);
  sub_100582338(v6, v7, &qword_1013F7360);
  swift_endAccess(v0 + 664);
  v8 = sub_1004B804C(&qword_1013FEE80);
  v9 = sub_1004CBA30(&qword_1013FEE88, &qword_1013FEE80, (uint64_t)&unk_100F26E78);
  v10 = ObservableObject<>.objectWillChange.getter(v8, v9);
  ObservableObjectPublisher.send()();
  swift_release(v10);
  swift_release(v2);
  v11 = *(_QWORD *)(v0 + 1104);
  v12 = *(_QWORD *)(v0 + 1080);
  v13 = *(_QWORD *)(v0 + 1072);
  v14 = *(_QWORD *)(v0 + 1048);
  v15 = *(_QWORD *)(v0 + 1032);
  v16 = *(_QWORD *)(v0 + 1024);
  v17 = *(_QWORD *)(v0 + 1016);
  swift_task_dealloc(*(_QWORD *)(v0 + 1112));
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100994E04()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  swift_release(*(_QWORD *)(v0 + 1120));
  v1 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  if (qword_1013DDB08 != -1)
    swift_once(&qword_1013DDB08, sub_100B117DC);
  objc_msgSend(v1, "postNotificationName:object:", qword_101480B18, *(_QWORD *)(v0 + 1152));

  v2 = *(_QWORD *)(v0 + 1152);
  v3 = *(_QWORD *)(v0 + 1096);
  v4 = *(_QWORD *)(v0 + 1088);
  v5 = *(_QWORD *)(v0 + 1032);
  v6 = *(_QWORD *)(v0 + 1024);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 1144))(v5, *(_QWORD *)(v0 + 984), v4);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v5, 0, 1, v4);
  sub_1004C4938(v5, v6, &qword_1013F7360);
  v7 = v2 + *(_QWORD *)(*(_QWORD *)v2 + 280);
  swift_beginAccess(v7, v0 + 664, 33, 0);
  sub_100582338(v6, v7, &qword_1013F7360);
  swift_endAccess(v0 + 664);
  v8 = sub_1004B804C(&qword_1013FEE80);
  v9 = sub_1004CBA30(&qword_1013FEE88, &qword_1013FEE80, (uint64_t)&unk_100F26E78);
  v10 = ObservableObject<>.objectWillChange.getter(v8, v9);
  ObservableObjectPublisher.send()();
  swift_release(v10);
  swift_release(v2);
  v11 = *(_QWORD *)(v0 + 1104);
  v12 = *(_QWORD *)(v0 + 1080);
  v13 = *(_QWORD *)(v0 + 1072);
  v14 = *(_QWORD *)(v0 + 1048);
  v15 = *(_QWORD *)(v0 + 1032);
  v16 = *(_QWORD *)(v0 + 1024);
  v17 = *(_QWORD *)(v0 + 1016);
  swift_task_dealloc(*(_QWORD *)(v0 + 1112));
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_100994FFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t Strong;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  double result;
  _BYTE v16[24];

  v4 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v4);
  v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  v7 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v8 = swift_allocObject(&unk_10128CEC0, 24, 7);
  swift_beginAccess(a2, v16, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  swift_weakInit(v8 + 16, Strong);
  swift_release(Strong);
  type metadata accessor for MainActor(0);
  swift_retain(v8);
  swift_bridgeObjectRetain(a1);
  v11 = static MainActor.shared.getter(v10);
  v12 = (_QWORD *)swift_allocObject(&unk_10128CF10, 48, 7);
  v12[2] = v11;
  v12[3] = &protocol witness table for MainActor;
  v12[4] = v8;
  v12[5] = a1;
  swift_release(v8);
  v13 = sub_100521B98((uint64_t)v6, (uint64_t)&unk_1013FEE68, (uint64_t)v12);
  *(_QWORD *)&result = swift_release(v13).n128_u64[0];
  return result;
}

uint64_t sub_100995150(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5[10] = a4;
  v5[11] = a5;
  v6 = (*(_QWORD *)(*(_QWORD *)(sub_1004B804C(&qword_1013F7360) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[12] = swift_task_alloc(v6);
  v5[13] = swift_task_alloc(v6);
  v7 = type metadata accessor for MainActor(0);
  v5[14] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  return swift_task_switch(sub_1009951F0, v8, v9);
}

uint64_t sub_1009951F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;

  v1 = *(_QWORD *)(v0 + 80);
  swift_release(*(_QWORD *)(v0 + 112));
  v1 += 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v3 = (_QWORD *)Strong;
    v4 = *(_QWORD *)(v0 + 104);
    v5 = *(_QWORD *)(v0 + 88);
    v6 = *(_QWORD *)(Strong + 24);
    swift_retain(v6);
    CurrentValueSubject.value.getter((_QWORD *)(v0 + 64), v7);
    swift_release(v6);
    v8 = *(_QWORD *)(*(_QWORD *)(v0 + 64) + 16);
    swift_bridgeObjectRelease();
    v9 = v3[3];
    *(_QWORD *)(v0 + 72) = v5;
    swift_retain(v9);
    swift_bridgeObjectRetain(v5);
    CurrentValueSubject.value.setter(v0 + 72);
    swift_release(v9);
    v10 = (uint64_t)v3 + *(_QWORD *)(*v3 + 280);
    swift_beginAccess(v10, v0 + 40, 0, 0);
    sub_1004CB7BC(v10, v4, &qword_1013F7360);
    v11 = sub_1004B804C(&qword_1013FED60);
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v4, 1, v11) != 1)
    {
      v13 = *(_QWORD *)(v0 + 96);
      sub_1004CB7BC(*(_QWORD *)(v0 + 104), v13, &qword_1013F7360);
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 88))(v13, v11) != enum case for GroupSession.State.joined<A>(_:))
      {
        v15 = *(_QWORD *)(v0 + 96);
        v16 = swift_release(v3);
        (*(void (**)(uint64_t, uint64_t, __n128))(v12 + 8))(v15, v11, v16);
        goto LABEL_10;
      }
      if (v8 != *(_QWORD *)(*(_QWORD *)(v0 + 88) + 16))
      {
        v14 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
        if (qword_1013DDB08 != -1)
          swift_once(&qword_1013DDB08, sub_100B117DC);
        objc_msgSend(v14, "postNotificationName:object:", qword_101480B18, v3);

      }
    }
    swift_release(v3);
LABEL_10:
    sub_1004CB800(*(_QWORD *)(v0 + 104), &qword_1013F7360);
  }
  v17 = *(_QWORD *)(v0 + 96);
  swift_task_dealloc(*(_QWORD *)(v0 + 104));
  swift_task_dealloc(v17);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100995430()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100995458()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc(dword_1013FED44);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1004CFD00;
  v3[37] = v2;
  return swift_task_switch(sub_10098FB84, 0, 0);
}

uint64_t sub_1009954BC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1013FED7C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1004CFD00;
  return sub_100993658(a1, v4, v5, v6);
}

double sub_100995528(uint64_t a1)
{
  uint64_t v1;

  return sub_10098D8B4(a1, v1);
}

uint64_t sub_100995530()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_10099555C(uint64_t *a1)
{
  uint64_t v1;

  return sub_10098DC24(*a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_100995568(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v10;

  *(_QWORD *)(v6 + 16) = a1;
  v10 = (_QWORD *)swift_task_alloc(dword_1013FEDCC);
  *(_QWORD *)(v6 + 24) = v10;
  *v10 = v6;
  v10[1] = sub_100997D24;
  return sub_1009971BC(a4, a5, a6);
}

uint64_t sub_1009955D0()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_bridgeObjectRelease(v0[5]);
  swift_release(v0[6]);
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10099560C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_1013FEDBC);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1004CFD00;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1013FEDB8
                                                                                       + dword_1013FEDB8))(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1009956A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v8;

  *(_QWORD *)(v5 + 16) = a1;
  v8 = (_QWORD *)swift_task_alloc(dword_1013FEDF4);
  *(_QWORD *)(v5 + 24) = v8;
  *v8 = v5;
  v8[1] = sub_1009956F8;
  return sub_100995F88(a4, a5);
}

uint64_t sub_1009956F8(char a1)
{
  uint64_t *v1;
  _BYTE *v3;
  uint64_t v5;

  v3 = *(_BYTE **)(*v1 + 16);
  v5 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 24));
  *v3 = a1 & 1;
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_10099574C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2[24] = a1;
  v2[25] = a2;
  v3 = type metadata accessor for UUID(0);
  v2[26] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[27] = v4;
  v2[28] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for CRLGloballyScopedBoardIdentifier(0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[29] = swift_task_alloc(v5);
  v2[30] = swift_task_alloc(v5);
  v6 = sub_1004B804C(&qword_1013E0270);
  v2[31] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CRLBoardIdentifier(0);
  v2[32] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v2[33] = v8;
  v2[34] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MainActor(0);
  v2[35] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  v2[36] = v10;
  v2[37] = v11;
  return swift_task_switch(sub_10099585C, v10, v11);
}

uint64_t sub_10099585C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  __n128 v4;
  uint64_t v5;
  void (*v6)(void);
  _QWORD *v7;

  if (qword_1013DD888 != -1)
    swift_once(&qword_1013DD888, sub_100A05DE4);
  v1 = v0[30];
  v2 = v0[24];
  swift_beginAccess(&static OS_os_log.realTimeSync, v0 + 21, 0, 0);
  v3 = (id)static OS_os_log.realTimeSync;
  v5 = static os_log_type_t.default.getter(v4);
  sub_100A06EBC((uint64_t)v3, &_mh_execute_header, v5, "willLeaveGroupSession called.", 29, 2, (uint64_t)_swiftEmptyArrayStorage);

  v6 = *(void (**)(void))(*(_QWORD *)v2 + 192);
  v0[38] = v6;
  v6();
  sub_1004BB5A4(v0 + 11, v0[14]);
  sub_10098EB14(v1);
  v7 = (_QWORD *)swift_task_alloc(dword_10140F0BC);
  v0[39] = v7;
  *v7 = v0;
  v7[1] = sub_100995988;
  return sub_100D2B0D0(v0[31], v0[30]);
}

uint64_t sub_100995988()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD **)v1;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 312));
  if (v0)
  {
    v3 = v2[30];
    swift_errorRelease(v0);
    sub_1004B84A4(v3, type metadata accessor for CRLGloballyScopedBoardIdentifier);
    v4 = v2[36];
    v5 = v2[37];
    v6 = sub_100995CB4;
  }
  else
  {
    sub_1004B84A4(v2[30], type metadata accessor for CRLGloballyScopedBoardIdentifier);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v2 + 11);
    v4 = v2[36];
    v5 = v2[37];
    v6 = sub_100995A28;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_100995A28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t Strong;
  uint64_t v6;
  uint64_t ObjectType;
  int *v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;

  v1 = *(_QWORD *)(v0 + 272);
  v2 = *(_QWORD *)(v0 + 248);
  v3 = *(_QWORD *)(v0 + 200);
  (*(void (**)(uint64_t, _QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 264) + 56))(v2, 0, 1, *(_QWORD *)(v0 + 256));
  sub_1004B84E0(v2, v1, type metadata accessor for CRLBoardIdentifier);
  v4 = v3 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_realTimeCollaborationDelegate;
  Strong = swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_realTimeCollaborationDelegate);
  *(_QWORD *)(v0 + 320) = Strong;
  v6 = *(_QWORD *)(v4 + 8);
  *(_QWORD *)(v0 + 328) = v6;
  if (Strong)
  {
    ObjectType = swift_getObjectType(Strong);
    *(_QWORD *)(v0 + 336) = ObjectType;
    v8 = *(int **)(v6 + 24);
    v16 = (int *)((char *)v8 + *v8);
    v9 = (_QWORD *)swift_task_alloc(v8[1]);
    *(_QWORD *)(v0 + 344) = v9;
    *v9 = v0;
    v9[1] = sub_100995B68;
    return ((uint64_t (*)(_QWORD, uint64_t, uint64_t))v16)(*(_QWORD *)(v0 + 192), ObjectType, v6);
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 280);
    sub_1004B84A4(*(_QWORD *)(v0 + 272), type metadata accessor for CRLBoardIdentifier);
    swift_release(v11);
    v12 = *(_QWORD *)(v0 + 240);
    v13 = *(_QWORD *)(v0 + 248);
    v15 = *(_QWORD *)(v0 + 224);
    v14 = *(_QWORD *)(v0 + 232);
    swift_task_dealloc(*(_QWORD *)(v0 + 272));
    swift_task_dealloc(v13);
    swift_task_dealloc(v12);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100995B68(char a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 344);
  *(_BYTE *)(*v1 + 360) = a1;
  swift_task_dealloc(v3);
  return swift_task_switch(sub_100995BC0, *(_QWORD *)(v2 + 288), *(_QWORD *)(v2 + 296));
}

uint64_t sub_100995BC0()
{
  uint64_t v0;
  int *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;

  if (*(_BYTE *)(v0 + 360) == 1)
  {
    v1 = *(int **)(*(_QWORD *)(v0 + 328) + 32);
    v10 = (int *)((char *)v1 + *v1);
    v2 = (_QWORD *)swift_task_alloc(v1[1]);
    *(_QWORD *)(v0 + 352) = v2;
    *v2 = v0;
    v2[1] = sub_100995EB8;
    return ((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))v10)(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 328));
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 320);
    v5 = *(_QWORD *)(v0 + 280);
    sub_1004B84A4(*(_QWORD *)(v0 + 272), type metadata accessor for CRLBoardIdentifier);
    swift_unknownObjectRelease(v4);
    swift_release(v5);
    v6 = *(_QWORD *)(v0 + 240);
    v7 = *(_QWORD *)(v0 + 248);
    v9 = *(_QWORD *)(v0 + 224);
    v8 = *(_QWORD *)(v0 + 232);
    swift_task_dealloc(*(_QWORD *)(v0 + 272));
    swift_task_dealloc(v7);
    swift_task_dealloc(v6);
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100995CB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t inited;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v24)(void);
  uint64_t v25;
  uint64_t v26;

  v1 = *(_QWORD *)(v0 + 280);
  v2 = *(_QWORD *)(v0 + 256);
  v3 = *(_QWORD *)(v0 + 264);
  v4 = *(_QWORD *)(v0 + 248);
  v5 = *(_QWORD *)(v0 + 224);
  v6 = *(_QWORD *)(v0 + 232);
  v24 = *(void (**)(void))(v0 + 304);
  v25 = *(_QWORD *)(v0 + 216);
  v26 = *(_QWORD *)(v0 + 208);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 88));
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(v4, 1, 1, v2);
  swift_release(v1);
  sub_1004CB800(v4, &qword_1013E0270);
  v7 = (void *)static OS_os_log.realTimeSync;
  v8 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v8, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v10 = v7;
  v24();
  sub_1004BB5A4((_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 152));
  sub_10098EB14(v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v5, v6, v26);
  v11 = sub_1004B84A4(v6, type metadata accessor for CRLGloballyScopedBoardIdentifier);
  v12 = UUID.uuidString.getter(v11);
  v14 = v13;
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v5, v26);
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v12;
  *(_QWORD *)(inited + 40) = v14;
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 128));
  v16 = static os_log_type_t.default.getter(v15);
  sub_100A06EBC((uint64_t)v10, &_mh_execute_header, v16, "Failed to derive the locally scoped board identifier from the group session. Board %{public}@", 93, 2, inited);
  swift_setDeallocating(inited);
  v17 = *(_QWORD *)(inited + 16);
  v18 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, v17, v18);

  v19 = *(_QWORD *)(v0 + 240);
  v20 = *(_QWORD *)(v0 + 248);
  v22 = *(_QWORD *)(v0 + 224);
  v21 = *(_QWORD *)(v0 + 232);
  swift_task_dealloc(*(_QWORD *)(v0 + 272));
  swift_task_dealloc(v20);
  swift_task_dealloc(v19);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100995EB8()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 352));
  return swift_task_switch(sub_100995F04, *(_QWORD *)(v1 + 288), *(_QWORD *)(v1 + 296));
}

uint64_t sub_100995F04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 320);
  v2 = *(_QWORD *)(v0 + 272);
  swift_release(*(_QWORD *)(v0 + 280));
  swift_unknownObjectRelease(v1);
  sub_1004B84A4(v2, type metadata accessor for CRLBoardIdentifier);
  v3 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 248);
  v6 = *(_QWORD *)(v0 + 224);
  v5 = *(_QWORD *)(v0 + 232);
  swift_task_dealloc(*(_QWORD *)(v0 + 272));
  swift_task_dealloc(v4);
  swift_task_dealloc(v3);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100995F88(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[5] = a1;
  v2[6] = a2;
  v3 = type metadata accessor for MainActor(0);
  v2[7] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  v2[8] = v4;
  v2[9] = v5;
  return swift_task_switch(sub_100995FF4, v4, v5);
}

uint64_t sub_100995FF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  _QWORD *v3;
  __n128 v5;

  v1 = *(_QWORD *)(v0 + 40) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  *(_QWORD *)(v0 + 80) = Strong;
  if (Strong)
  {
    v3 = (_QWORD *)swift_task_alloc(dword_1013FEDFC);
    *(_QWORD *)(v0 + 88) = v3;
    *v3 = v0;
    v3[1] = sub_10099609C;
    return sub_10098D460(*(_QWORD *)(v0 + 48), 0);
  }
  else
  {
    v5 = swift_release(*(_QWORD *)(v0 + 56));
    return (*(uint64_t (**)(BOOL, __n128))(v0 + 8))(*(_QWORD *)(v0 + 80) == 0, v5);
  }
}

uint64_t sub_10099609C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 80);
  swift_task_dealloc(*(_QWORD *)(*v0 + 88));
  swift_release(v2);
  return swift_task_switch(sub_1009960F0, *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72));
}

uint64_t sub_1009960F0()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_release(*(_QWORD *)(v0 + 56));
  return (*(uint64_t (**)(BOOL, __n128))(v0 + 8))(*(_QWORD *)(v0 + 80) == 0, v1);
}

uint64_t sub_10099612C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3[42] = a2;
  v3[43] = a3;
  v3[41] = a1;
  v4 = type metadata accessor for Date(0);
  v3[44] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[45] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[46] = swift_task_alloc(v6);
  v3[47] = swift_task_alloc(v6);
  v7 = type metadata accessor for CRLBoard.RealTimeSessionInfo(0);
  v3[48] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v3[49] = v8;
  v3[50] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (*(_QWORD *)(*(_QWORD *)(sub_1004B804C((uint64_t *)&unk_101405E90) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[51] = swift_task_alloc(v9);
  v3[52] = swift_task_alloc(v9);
  v10 = type metadata accessor for UUID(0);
  v3[53] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v3[54] = v11;
  v3[55] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  v3[56] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1004B804C(&qword_1013E0270);
  v3[57] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v13 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for CRLBoardIdentifier(0);
  v3[58] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v3[59] = v15;
  v3[60] = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for MainActor(0);
  v3[61] = static MainActor.shared.getter(v16);
  v17 = dispatch thunk of Actor.unownedExecutor.getter(v16, &protocol witness table for MainActor);
  v3[62] = v17;
  v3[63] = v18;
  return swift_task_switch(sub_1009962C4, v17, v18);
}

uint64_t sub_1009962C4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0 + 448);
  (*(void (**)(void))(**(_QWORD **)(v0 + 336) + 192))();
  sub_1004BB5A4((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
  sub_10098EB14(v1);
  v2 = (_QWORD *)swift_task_alloc(dword_10140F0BC);
  *(_QWORD *)(v0 + 512) = v2;
  *v2 = v0;
  v2[1] = sub_100996360;
  return sub_100D2B0D0(*(_QWORD *)(v0 + 456), *(_QWORD *)(v0 + 448));
}

uint64_t sub_100996360()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD **)v1;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 512));
  if (v0)
  {
    v3 = v2[56];
    swift_errorRelease(v0);
    sub_1004B84A4(v3, type metadata accessor for CRLGloballyScopedBoardIdentifier);
    v4 = v2[62];
    v5 = v2[63];
    v6 = sub_1009970DC;
  }
  else
  {
    sub_1004B84A4(v2[56], type metadata accessor for CRLGloballyScopedBoardIdentifier);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v2 + 2);
    v4 = v2[62];
    v5 = v2[63];
    v6 = sub_100996400;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_100996400()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  __n128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  char *v71;
  uint64_t *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  void *v78;
  void *v79;
  id v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  uint64_t v86;
  void *v87;
  void *v88;
  id v89;
  id v90;
  id v91;
  unint64_t v92;
  char v93;
  char v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  __n128 v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  void *v108;
  void *v109;
  void *v110;
  _QWORD *v111;
  uint64_t KeyPath;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  char v122;
  uint64_t v123;
  void *v124;
  void *v125;
  id v126;
  id v127;
  id v128;
  unint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  __n128 v137;
  void (*v138)(uint64_t, char *, uint64_t, __n128);
  char *v139;
  __n128 v140;
  char v141;
  void (*v142)(uint64_t, uint64_t);
  void *v143;
  unint64_t v144;
  char v145;
  char v146;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  __n128 v156;
  _QWORD *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t *v160;
  char *v161;
  uint64_t v162;
  uint64_t *v163;
  unint64_t v164;
  uint64_t v165;
  void *v166;
  uint64_t v167;
  _QWORD *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  _QWORD *v172;
  unint64_t v173;
  _QWORD *v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  unint64_t v178;
  _QWORD *v179;
  unint64_t v180;
  _QWORD *v181;
  uint64_t v182;
  uint64_t v183;

  v1 = v0;
  v2 = v0 + 7;
  v4 = v0[60];
  v3 = v0[61];
  v5 = v0[59];
  v7 = v1[57];
  v6 = v1[58];
  v8 = v1[43];
  v9 = swift_release(v3);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t, __n128))(v5 + 56))(v7, 0, 1, v6, v9);
  sub_1004B84E0(v7, v4, type metadata accessor for CRLBoardIdentifier);
  v10 = (uint64_t *)(v8 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_boardInfos);
  swift_beginAccess(v8 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_boardInfos, v2, 32, 0);
  v11 = *v10;
  if (!*(_QWORD *)(v11 + 16) || (v12 = sub_100843264(v1[60]), (v13 & 1) == 0))
  {
    v29 = v1[60];
    swift_endAccess(v2);
    goto LABEL_7;
  }
  v15 = v1[54];
  v14 = v1[55];
  v16 = v1[53];
  v17 = v1[42];
  v18 = *(_QWORD **)(*(_QWORD *)(v11 + 56) + 8 * v12);
  swift_endAccess(v2);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v14, v17 + OBJC_IVAR____TtC8Freeform20CRLBoardGroupSession_localParticipantUUID, v16);
  v19 = &OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard;
  v20 = *(void **)(*(_QWORD *)(*(_QWORD *)(v18[2] + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard)
                             + OBJC_IVAR____TtC8Freeform8CRLBoard_shareState)
                 + 16);
  v21 = (uint64_t)&OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo;
  v181 = v1;
  if (v20)
  {
    v22 = v1[52];
    v23 = v1[48];
    v24 = v1[49];
    v25 = objc_msgSend(v20, "participants", swift_retain(v18).n128_f64[0]);
    v26 = sub_1004B8930(0, (unint64_t *)&qword_1013FF620, CKShareParticipant_ptr);
    v27 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v25, v26);

    v28 = *(_QWORD *)(v18[2] + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard)
        + OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo;
    swift_beginAccess(v28, v1 + 34, 0, 0);
    sub_1004CB7BC(v28, v22, (uint64_t *)&unk_101405E90);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    {
      v29 = v1[60];
      v31 = v1[54];
      v30 = v1[55];
      v33 = v1[52];
      v32 = v1[53];
      swift_release(v18);
      swift_bridgeObjectRelease();
      sub_1004CB800(v33, (uint64_t *)&unk_101405E90);
      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v30, v32);
LABEL_7:
      sub_1004B84A4(v29, type metadata accessor for CRLBoardIdentifier);
      goto LABEL_8;
    }
    v157 = v18;
    v61 = v1[55];
    v62 = v1[52];
    v63 = v1[50];
    v64 = v1[48];
    v65 = v1[41];
    sub_1004B8460(v62, v63, type metadata accessor for CRLBoard.RealTimeSessionInfo);
    sub_1004CB800(v62, (uint64_t *)&unk_101405E90);
    v66 = *(char **)(v63 + *(int *)(v64 + 24));
    swift_retain(v66);
    sub_1004B84A4(v63, type metadata accessor for CRLBoard.RealTimeSessionInfo);
    v67 = v61;
    v47 = v66;
    sub_1006404D0(v65, v27, v67);
    v46 = v68;
    swift_bridgeObjectRelease();
    swift_release(v66);
    if ((unint64_t)v46 >> 62)
      goto LABEL_84;
    v69 = *(_QWORD *)((v46 & 0xFFFFFFFFFFFFF8) + 0x10);
    v70 = v18;
    if (v69)
      goto LABEL_14;
LABEL_88:
    v29 = v1[60];
    v57 = v1[54];
    v56 = v1[55];
    v58 = v1[53];
    swift_release(v70);
    v60 = swift_bridgeObjectRelease();
LABEL_89:
    (*(void (**)(uint64_t, uint64_t, __n128))(v57 + 8))(v56, v58, v60);
    goto LABEL_7;
  }
  v46 = (uint64_t)(v1 + 10);
  v47 = (char *)(v1 + 13);
  v48 = qword_1013DD888;
  swift_retain(v18);
  if (v48 != -1)
LABEL_82:
    swift_once(&qword_1013DD888, sub_100A05DE4);
  v49 = v1[51];
  v50 = v1[48];
  v51 = v1[49];
  swift_beginAccess(&static OS_os_log.realTimeSync, v46, 0, 0);
  v52 = (id)static OS_os_log.realTimeSync;
  v54 = static os_log_type_t.default.getter(v53);
  sub_100A06EBC((uint64_t)v52, &_mh_execute_header, v54, "Group Session activeParticipants updated, but we were unable to retrieve the ckShare's participants array, this could mean the owner ended the collaboration.", 157, 2, (uint64_t)_swiftEmptyArrayStorage);

  v55 = *(_QWORD *)(v18[2] + *v19) + *(_QWORD *)v21;
  swift_beginAccess(v55, v47, 0, 0);
  sub_1004CB7BC(v55, v49, (uint64_t *)&unk_101405E90);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
  {
    v29 = v1[60];
    v57 = v1[54];
    v56 = v1[55];
    v58 = v1[53];
    v59 = v1[51];
    swift_release(v18);
    sub_1004CB800(v59, (uint64_t *)&unk_101405E90);
    goto LABEL_89;
  }
  v102 = v1[50];
  v101 = v1[51];
  v103 = v1[48];
  sub_1004B8460(v101, v102, type metadata accessor for CRLBoard.RealTimeSessionInfo);
  sub_1004CB800(v101, (uint64_t *)&unk_101405E90);
  v104 = *(_QWORD *)(v102 + *(int *)(v103 + 24));
  swift_retain(v104);
  sub_1004B84A4(v102, type metadata accessor for CRLBoard.RealTimeSessionInfo);
  swift_beginAccess(v104 + 16, v1 + 16, 0, 0);
  v21 = *(_QWORD *)(v104 + 16);
  swift_bridgeObjectRetain(v21);
  swift_release(v104);
  v157 = v18;
  v47 = *(char **)(v18[2] + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_collaboratorCursorCoordinator);
  if ((unint64_t)v21 >> 62)
    goto LABEL_91;
  v105 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v21);
  v106 = v47;
  v165 = v105;
  if (!v105)
  {
LABEL_95:
    swift_release(v157);
    v152 = v1[60];
    v154 = v1[54];
    v153 = v1[55];
    v155 = v1[53];
    v156 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, __n128))(v154 + 8))(v153, v155, v156);
    sub_1004B84A4(v152, type metadata accessor for CRLBoardIdentifier);

    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  while (2)
  {
    v172 = v1 + 28;
    v174 = v1 + 25;
    v158 = v1[54];
    v168 = v1 + 31;
    v170 = v1[45];
    v19 = (uint64_t *)&v47[OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__collaboratorsToCursorsMap];
    v163 = v1 + 40;
    v164 = v21 & 0xC000000000000001;
    swift_beginAccess(&v47[OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__collaboratorsToCursorsMap], v1 + 19, 0, 0);
    v46 = 0;
    v159 = v21 + 32;
    v160 = v19;
    v161 = v47;
    v162 = v21;
    while (1)
    {
      if (v164)
        v111 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v46, v21);
      else
        v111 = *(id *)(v159 + 8 * v46);
      v18 = v111;
      if (__OFADD__(v46++, 1))
      {
        __break(1u);
LABEL_80:
        __break(1u);
LABEL_81:
        __break(1u);
        goto LABEL_82;
      }
      KeyPath = swift_getKeyPath(byte_100F1E760);
      v114 = swift_getKeyPath(byte_100F1E788);
      static Published.subscript.getter(v163, v18, KeyPath, v114);
      swift_release(v114);
      swift_release(KeyPath);
      v115 = *v163;
      if ((unint64_t)*v163 >> 62)
        break;
      v116 = *(_QWORD *)((v115 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(*v163);
      if (v116)
        goto LABEL_45;
LABEL_77:
      swift_bridgeObjectRelease_n(v115, 2);
LABEL_38:

      if (v46 == v165)
        goto LABEL_95;
    }
    if (v115 < 0)
      v149 = *v163;
    else
      v149 = v115 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v163);
    v116 = _CocoaArrayWrapper.endIndex.getter(v149);
    if (!v116)
      goto LABEL_77;
LABEL_45:
    v180 = v115 & 0xC000000000000001;
    if ((v115 & 0xC000000000000001) != 0)
    {
      v117 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v115);
    }
    else
    {
      if (!*(_QWORD *)((v115 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_80;
      v117 = (char *)*(id *)(v115 + 32);
    }
    v118 = v117;
    v178 = v116 - 1;
    v166 = v18;
    v167 = v46;
    if (v116 == 1)
    {
LABEL_49:
      swift_bridgeObjectRelease_n(v115, 2);
      v119 = (uint64_t)&v118[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_presenceUUID];
      v19 = v160;
      v120 = *v160;
      if (*(_QWORD *)(*v160 + 16))
      {
        swift_bridgeObjectRetain(*v160);
        v121 = sub_100842EFC(v119);
        v21 = v162;
        if ((v122 & 1) != 0)
        {
          v123 = *(_QWORD *)(v120 + 56) + 24 * v121;
          v124 = *(void **)(v123 + 8);
          v125 = *(void **)(v123 + 16);
          v126 = *(id *)v123;
          v127 = v124;
          v128 = v125;
          swift_bridgeObjectRelease();
          if (v126 != (id)1)
          {

LABEL_70:
            swift_beginAccess(v160, v168, 33, 0);
            swift_bridgeObjectRetain(*v160);
            v144 = sub_100842EFC(v119);
            v146 = v145;
            swift_bridgeObjectRelease();
            v108 = 0;
            v109 = 0;
            v110 = 0;
            if ((v146 & 1) != 0)
            {
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v160);
              v148 = *v160;
              v183 = *v160;
              *v160 = 0x8000000000000000;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                sub_10082D970();
                v148 = v183;
              }
              (*(void (**)(unint64_t, _QWORD))(v158 + 8))(*(_QWORD *)(v148 + 48) + *(_QWORD *)(v158 + 72) * v144, v181[53]);
              v107 = *(_QWORD *)(v148 + 56) + 24 * v144;
              v108 = *(void **)v107;
              v109 = *(void **)(v107 + 8);
              v110 = *(void **)(v107 + 16);
              sub_10051AA48(v144, v148);
              *v160 = v148;
              swift_bridgeObjectRelease();
            }
            swift_endAccess(v168);
            sub_100510E00(v108, v109, v110);
            v47 = v161;
            sub_100A0B3C4(v128, 0, (uint64_t)v118);

            v18 = v128;
            v1 = v181;
            v46 = v167;
            goto LABEL_38;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        v128 = 0;
        goto LABEL_70;
      }
      v128 = 0;
      v21 = v162;
      goto LABEL_70;
    }
    if (v116 < 2)
      goto LABEL_81;
    if (v180 || (v129 = *(_QWORD *)((v115 & 0xFFFFFFFFFFFFF8) + 0x10), v129 >= 2) && v178 < v129)
    {
      v130 = 0;
      v176 = v115;
      do
      {
        if (v180)
          v131 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v130 + 1, v115);
        else
          v131 = (char *)*(id *)(v115 + 8 * v130 + 40);
        v132 = v131;
        v134 = v181[46];
        v133 = v181[47];
        v135 = v181[44];
        v136 = &v118[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_lastCursorUpdateTime];
        v137 = swift_beginAccess(&v118[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_lastCursorUpdateTime], v174, 0, 0);
        v138 = *(void (**)(uint64_t, char *, uint64_t, __n128))(v170 + 16);
        v138(v133, v136, v135, v137);
        v139 = &v132[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_lastCursorUpdateTime];
        v140 = swift_beginAccess(&v132[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_lastCursorUpdateTime], v172, 0, 0);
        v138(v134, v139, v135, v140);
        v141 = static Date.< infix(_:_:)(v133, v134);
        v142 = *(void (**)(uint64_t, uint64_t))(v170 + 8);
        v142(v134, v135);
        v142(v133, v135);
        if ((v141 & 1) != 0)
          v143 = v118;
        else
          v143 = v132;
        if ((v141 & 1) != 0)
          v118 = v132;

        ++v130;
        v115 = v176;
      }
      while (v178 != v130);
      goto LABEL_49;
    }
    __break(1u);
LABEL_84:
    if (v46 < 0)
      v47 = (char *)v46;
    else
      v47 = (char *)(v46 & 0xFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain(v46);
    v69 = _CocoaArrayWrapper.endIndex.getter(v47);
    swift_bridgeObjectRelease();
    v70 = v157;
    if (!v69)
      goto LABEL_88;
LABEL_14:
    v169 = v46;
    if (v69 < 1)
    {
      __break(1u);
LABEL_91:
      if (v21 < 0)
        v150 = v21;
      else
        v150 = v21 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v21);
      v151 = v47;
      v165 = _CocoaArrayWrapper.endIndex.getter(v150);
      if (!v165)
        goto LABEL_95;
      continue;
    }
    break;
  }
  v179 = v1 + 22;
  v71 = *(char **)(v70[2] + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_collaboratorCursorCoordinator);
  v72 = (uint64_t *)&v71[OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__collaboratorsToCursorsMap];
  v171 = v1[54];
  v173 = v46 & 0xC000000000000001;
  swift_bridgeObjectRetain(v46);
  v73 = v71;
  v74 = v46;
  v177 = v73;
  swift_beginAccess(v72, v1 + 37, 0, 0);
  v75 = 0;
  v175 = v69;
  do
  {
    if (v173)
      v80 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v75, v74);
    else
      v80 = *(id *)(v74 + 8 * v75 + 32);
    v81 = v80;
    v82 = (uint64_t)v80 + OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_presenceUUID;
    v83 = *v72;
    if (*(_QWORD *)(*v72 + 16))
    {
      swift_bridgeObjectRetain(*v72);
      v84 = sub_100842EFC(v82);
      if ((v85 & 1) != 0)
      {
        v86 = *(_QWORD *)(v83 + 56) + 24 * v84;
        v87 = *(void **)(v86 + 8);
        v88 = *(void **)(v86 + 16);
        v89 = *(id *)v86;
        v90 = v87;
        v91 = v88;
        swift_bridgeObjectRelease();
        if (v89 == (id)1)
        {
          v91 = 0;
        }
        else
        {

        }
        v74 = v169;
      }
      else
      {
        swift_bridgeObjectRelease();
        v91 = 0;
      }
    }
    else
    {
      v91 = 0;
    }
    swift_beginAccess(v72, v179, 33, 0);
    swift_bridgeObjectRetain(*v72);
    v92 = sub_100842EFC(v82);
    v94 = v93;
    swift_bridgeObjectRelease();
    v77 = 0;
    v78 = 0;
    v79 = 0;
    if ((v94 & 1) != 0)
    {
      v95 = swift_isUniquelyReferenced_nonNull_native(*v72);
      v96 = *v72;
      v182 = *v72;
      *v72 = 0x8000000000000000;
      if ((v95 & 1) == 0)
      {
        sub_10082D970();
        v96 = v182;
      }
      (*(void (**)(unint64_t, _QWORD))(v171 + 8))(*(_QWORD *)(v96 + 48) + *(_QWORD *)(v171 + 72) * v92, v181[53]);
      v76 = *(_QWORD *)(v96 + 56) + 24 * v92;
      v77 = *(void **)v76;
      v78 = *(void **)(v76 + 8);
      v79 = *(void **)(v76 + 16);
      sub_10051AA48(v92, v96);
      *v72 = v96;
      swift_bridgeObjectRelease();
    }
    ++v75;
    swift_endAccess(v179);
    sub_100510E00(v77, v78, v79);
    sub_100A0B3C4(v91, 0, (uint64_t)v81);

  }
  while (v175 != v75);
  v1 = v181;
  v97 = v181[60];
  v98 = v181[55];
  v99 = v181[53];
  swift_bridgeObjectRelease();
  v100 = swift_release(v157);
  (*(void (**)(uint64_t, uint64_t, __n128))(v171 + 8))(v98, v99, v100);
  sub_1004B84A4(v97, type metadata accessor for CRLBoardIdentifier);

  swift_bridgeObjectRelease();
LABEL_8:
  v34 = v1[60];
  v35 = v1[56];
  v36 = v1[57];
  v37 = v1[55];
  v39 = v1[51];
  v38 = v1[52];
  v40 = v1[50];
  v41 = v1;
  v44 = v1 + 46;
  v43 = v1[46];
  v42 = v44[1];
  swift_task_dealloc(v34);
  swift_task_dealloc(v36);
  swift_task_dealloc(v35);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  return ((uint64_t (*)(void))v41[1])();
}

uint64_t sub_1009970DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 464);
  v2 = *(_QWORD *)(v0 + 472);
  v3 = *(_QWORD *)(v0 + 456);
  swift_release(*(_QWORD *)(v0 + 488));
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56))(v3, 1, 1, v1);
  sub_1004CB800(v3, &qword_1013E0270);
  v4 = *(_QWORD *)(v0 + 448);
  v5 = *(_QWORD *)(v0 + 456);
  v6 = *(_QWORD *)(v0 + 440);
  v8 = *(_QWORD *)(v0 + 408);
  v7 = *(_QWORD *)(v0 + 416);
  v9 = *(_QWORD *)(v0 + 400);
  v11 = *(_QWORD *)(v0 + 368);
  v10 = *(_QWORD *)(v0 + 376);
  swift_task_dealloc(*(_QWORD *)(v0 + 480));
  swift_task_dealloc(v5);
  swift_task_dealloc(v4);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009971BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v4 = type metadata accessor for MainActor(0);
  v3[5] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  v3[6] = v5;
  v3[7] = v6;
  return swift_task_switch(sub_10099722C, v5, v6);
}

uint64_t sub_10099722C()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  _QWORD *v3;
  __n128 v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t);

  Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + 16) + 24);
  *(_QWORD *)(v0 + 64) = Strong;
  if (Strong)
  {
    v2 = Strong;
    v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1013FEDD0 + dword_1013FEDD0);
    v3 = (_QWORD *)swift_task_alloc(unk_1013FEDD4);
    *(_QWORD *)(v0 + 72) = v3;
    *v3 = v0;
    v3[1] = sub_1009972D0;
    return v6(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), v2);
  }
  else
  {
    v5 = swift_release(*(_QWORD *)(v0 + 40));
    return (*(uint64_t (**)(BOOL, __n128))(v0 + 8))(*(_QWORD *)(v0 + 64) == 0, v5);
  }
}

uint64_t sub_1009972D0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 64);
  swift_task_dealloc(*(_QWORD *)(*v0 + 72));
  swift_unknownObjectRelease(v2);
  return swift_task_switch(sub_100997324, *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

uint64_t sub_100997324()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_release(*(_QWORD *)(v0 + 40));
  return (*(uint64_t (**)(BOOL, __n128))(v0 + 8))(*(_QWORD *)(v0 + 64) == 0, v1);
}

uint64_t sub_100997368()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(sub_1004B804C(&qword_1013FEDD8) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 40) & ~v2;
  v4 = v3 + *(_QWORD *)(v1 + 64);
  v5 = v2 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v0 + v3, v6);
  return swift_deallocObject(v0, v4, v5);
}

uint64_t sub_1009973EC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_1004B804C(&qword_1013FEDD8) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_1013FEDE4);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1004CF80C;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1013FEDE0
                                                                              + dword_1013FEDE0))(a1, v5, v6, v7, v8);
}

unint64_t sub_100997490()
{
  unint64_t result;

  result = qword_1013FEE18;
  if (!qword_1013FEE18)
  {
    result = swift_getWitnessTable(&unk_100F1E904, &type metadata for CRLOpportunisticGroupSessionManagerError);
    atomic_store(result, (unint64_t *)&qword_1013FEE18);
  }
  return result;
}

uint64_t sub_1009974D4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

unint64_t sub_1009974F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E4920;
  if (!qword_1013E4920)
  {
    v1 = sub_1004B8930(255, (unint64_t *)&qword_1013DE090, OS_dispatch_queue_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for OS_dispatch_queue, v1);
    atomic_store(result, (unint64_t *)&qword_1013E4920);
  }
  return result;
}

uint64_t sub_100997550()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __n128 v9;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 25) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = (v5 & 0xFFFFFFFFFFFFFFF8) + v0;
  v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 16;
  v9 = swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v9);
  swift_release(*(_QWORD *)(v7 + 8));
  return swift_deallocObject(v0, v8, v6);
}

double sub_1009975E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for UUID(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_10099382C(a1, *(_QWORD *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), v1 + v4, *(unsigned __int8 *)(v1 + v4 + *(_QWORD *)(v3 + 64)), *(_QWORD *)(((v4 + *(_QWORD *)(v3 + 64)) & 0xFFFFFFFFFFFFF8) + v1 + 8));
}

double sub_10099763C(uint64_t *a1)
{
  uint64_t v1;

  return sub_100994FFC(*a1, v1);
}

uint64_t sub_100997648()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_bridgeObjectRelease(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10099767C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1013FEE64);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1004CFD00;
  return sub_100995150(a1, v4, v5, v7, v6);
}

uint64_t sub_1009976F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  __n128 v13;
  uint64_t v15;

  v1 = sub_1004B804C(&qword_1013FED60);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v5 + v8 + v4 + 1) & ~v8;
  v10 = v9 + *(_QWORD *)(v7 + 64);
  v15 = v3 | v8 | 7;
  v11 = (v10 & 0xFFFFFFFFFFFFFFF8) + v0;
  v12 = ((v10 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  v13 = swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v13);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  swift_release(*(_QWORD *)(v11 + 8));
  swift_release(*(_QWORD *)(v0 + v12));
  return swift_deallocObject(v0, v12 + 8, v15);
}

uint64_t sub_1009977E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v4 = *(_QWORD *)(sub_1004B804C(&qword_1013FED60) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v5 + *(_QWORD *)(v4 + 64);
  v7 = *(_QWORD *)(type metadata accessor for UUID(0) - 8);
  v8 = (v6 + *(unsigned __int8 *)(v7 + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = v8 + *(_QWORD *)(v7 + 64);
  v10 = *(_QWORD *)(v1 + 16);
  v11 = *(_QWORD *)(v1 + 24);
  LOBYTE(v6) = *(_BYTE *)(v1 + v6);
  v12 = *(_BYTE *)(v1 + v9);
  v13 = v1 + v8;
  v14 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFFF8) + v1 + 8);
  v15 = (_QWORD *)swift_task_alloc(dword_1013FEE74);
  *(_QWORD *)(v2 + 16) = v15;
  *v15 = v2;
  v15[1] = sub_1004CFD00;
  return sub_100993AC8(a1, v10, v11, v1 + v5, v6, v13, v12, v14);
}

uint64_t sub_1009978F0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_10140AC54);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1004CFD00;
  return sub_100C149EC();
}

uint64_t sub_10099795C(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  char v8;

  if (a1 == 25705 && a2 == 0xE200000000000000)
  {
    v5 = 0xE200000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(25705, 0xE200000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x617461646174656DLL && a2 == 0xE800000000000000)
  {
    v7 = 0xE800000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x617461646174656DLL, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x654D6F54654D7369 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease(0xE800000000000000);
    return 2;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(0x654D6F54654D7369, 0xE800000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v8 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t storeEnumTagSinglePayload for CRLOpportunisticGroupSessionManagerError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_100997ADC + 4 * byte_100F1E490[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_100997AFC + 4 * byte_100F1E495[v4]))();
}

_BYTE *sub_100997ADC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_100997AFC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100997B04(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100997B0C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100997B14(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100997B1C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for CRLOpportunisticGroupSessionManagerError()
{
  return &type metadata for CRLOpportunisticGroupSessionManagerError;
}

uint64_t storeEnumTagSinglePayload for CRLOpportunisticGroupActivity.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100997B84 + 4 * byte_100F1E49F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100997BB8 + 4 * byte_100F1E49A[v4]))();
}

uint64_t sub_100997BB8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100997BC0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100997BC8);
  return result;
}

uint64_t sub_100997BD4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100997BDCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100997BE0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100997BE8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLOpportunisticGroupActivity.CodingKeys()
{
  return &type metadata for CRLOpportunisticGroupActivity.CodingKeys;
}

unint64_t sub_100997C08()
{
  unint64_t result;

  result = qword_1013FEED8;
  if (!qword_1013FEED8)
  {
    result = swift_getWitnessTable(&unk_100F1E874, &type metadata for CRLOpportunisticGroupActivity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FEED8);
  }
  return result;
}

unint64_t sub_100997C50()
{
  unint64_t result;

  result = qword_1013FEEE0;
  if (!qword_1013FEEE0)
  {
    result = swift_getWitnessTable(&unk_100F1E8DC, &type metadata for CRLOpportunisticGroupSessionManagerError);
    atomic_store(result, (unint64_t *)&qword_1013FEEE0);
  }
  return result;
}

unint64_t sub_100997C98()
{
  unint64_t result;

  result = qword_1013FEEE8;
  if (!qword_1013FEEE8)
  {
    result = swift_getWitnessTable(&unk_100F1E7E4, &type metadata for CRLOpportunisticGroupActivity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FEEE8);
  }
  return result;
}

unint64_t sub_100997CE0()
{
  unint64_t result;

  result = qword_1013FEEF0;
  if (!qword_1013FEEF0)
  {
    result = swift_getWitnessTable(&unk_100F1E80C, &type metadata for CRLOpportunisticGroupActivity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FEEF0);
  }
  return result;
}

id sub_100997D68(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  objc_super v11;

  v5 = (char *)objc_allocWithZone(v2);
  v6 = &v5[OBJC_IVAR____TtC8Freeform17CRLCommandSetMask_id];
  v7 = type metadata accessor for UUID(0);
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v7);
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform17CRLCommandSetMask_maskInfo] = a2;
  v11.receiver = v5;
  v11.super_class = v2;
  v9 = objc_msgSendSuper2(&v11, "init");
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
  return v9;
}

id sub_10099800C(char *a1, void *a2, void *a3)
{
  void *v3;
  void *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(__n128);
  __n128 v14;
  Class isa;
  id v16;
  id v17;
  uint64_t v19;

  v4 = v3;
  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)&a1[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
  v13 = *(void (**)(__n128))(*(_QWORD *)v12 + 256);
  v14 = swift_retain(v12);
  v13(v14);
  swift_release(v12);
  isa = UUID._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v16 = objc_msgSend(objc_allocWithZone((Class)CRLMaskInfo), "initWithImageItem:geometry:pathSource:", a1, a2, a3);
  v17 = objc_msgSend(v4, "initWithId:maskInfo:", isa, v16);

  return v17;
}

void sub_10099818C(void *a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Class isa;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  CKRecordID v17;
  Swift::String v18;

  v5 = v3;
  isa = UUID._bridgeToObjectiveC()().super.isa;
  v9 = objc_msgSend(a1, "getBoardItemForUUID:", isa);

  if (!v9)
    goto LABEL_7;
  v10 = type metadata accessor for CRLImageItem(0);
  v11 = swift_dynamicCastClass(v9, v10);
  if (!v11)
  {

LABEL_7:
    sub_100757E04(&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetMask.swift", 89, 2, 31, "Unable to retrieve image item", 29, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Unable to retrieve image item");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commit(with:transaction:undoable:)", 34, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetMask.swift", 89, 2u, 31, (uint64_t)"Unable to retrieve image item", 29, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v17, v18);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
    return;
  }
  v12 = v11;
  v13 = v9;
  sub_100DBEE64(v12, (uint64_t)&off_10127C5E0);

  if (v4)
  {

  }
  else
  {
    v14 = *(void **)(v5 + OBJC_IVAR____TtC8Freeform17CRLCommandSetMask_maskInfo);
    v15 = v14;
    sub_1008D3420(v14);

    v16 = v13;
    sub_100DB0D78(v12, (uint64_t)&off_10127C5E0, a3);

  }
}

void sub_1009983C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8Freeform17CRLCommandSetMask_id;
  v2 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

}

id sub_10099840C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCommandSetMask(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100998490()
{
  return type metadata accessor for CRLCommandSetMask(0);
}

uint64_t type metadata accessor for CRLCommandSetMask(uint64_t a1)
{
  uint64_t result;

  result = qword_1013FEF20;
  if (!qword_1013FEF20)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLCommandSetMask);
  return result;
}

uint64_t sub_1009984D4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = "\b";
    result = swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 200);
    if (!result)
      return 0;
  }
  return result;
}

id sub_100998548(void *a1)
{
  char *v1;
  char *v3;
  char *v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  void *v8;
  char *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  objc_super v17;

  v3 = &v1[OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_followCoordinator];
  swift_unknownObjectWeakInit(&v1[OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_followCoordinator], 0);
  v4 = &v1[OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_mostRecentViewportState];
  v5 = type metadata accessor for CRLFollowViewportState(0);
  v6 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
  v6(v4, 1, 1, v5);
  v6(&v1[OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_mostRecentAnnouncedViewportState], 1, 1, v5);
  swift_unknownObjectWeakInit(&v1[OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_lastFollowedParticipant], 0);
  v7 = OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_hosts;
  v8 = (void *)objc_opt_self(NSHashTable);
  v9 = v1;
  *(_QWORD *)&v1[v7] = objc_msgSend(v8, "weakObjectsHashTable");
  *(_QWORD *)&v9[OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_historyBuffer] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v9[OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_announcementTimers] = _swiftEmptyDictionarySingleton;
  *(_QWORD *)&v9[OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_historyLoggingTimers] = _swiftEmptyDictionarySingleton;
  *(_QWORD *)&v9[OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_viewportChangeDebounceTimer] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_voiceOverRepRefocusTimer] = 0;
  swift_unknownObjectWeakAssign(v3, a1);

  v17.receiver = v9;
  v17.super_class = (Class)type metadata accessor for CRLFollowAccessibilityExperienceCoordinator(0);
  v10 = objc_msgSendSuper2(&v17, "init");
  v11 = (void *)objc_opt_self(NSNotificationCenter);
  v12 = v10;
  v13 = objc_msgSend(v11, "defaultCenter");
  objc_msgSend(v13, "addObserver:selector:name:object:", v12, "accessibilityStatusDidChange", UIAccessibilityVoiceOverStatusDidChangeNotification, 0);

  v14 = objc_msgSend(v11, "defaultCenter");
  v15 = v12;
  objc_msgSend(v14, "addObserver:selector:name:object:", v15, "accessibilityStatusDidChange", UIAccessibilitySwitchControlStatusDidChangeNotification, 0);

  return v15;
}

id sub_10099879C()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  objc_super v5;

  v1 = (void *)objc_opt_self(NSNotificationCenter);
  v2 = objc_msgSend(v1, "defaultCenter");
  objc_msgSend(v2, "removeObserver:name:object:", v0, UIAccessibilityVoiceOverStatusDidChangeNotification, 0);

  v3 = objc_msgSend(v1, "defaultCenter");
  objc_msgSend(v3, "removeObserver:name:object:", v0, UIAccessibilitySwitchControlStatusDidChangeNotification, 0);

  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for CRLFollowAccessibilityExperienceCoordinator(0);
  return objc_msgSendSuper2(&v5, "dealloc");
}

void sub_1009989F4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void *Strong;
  uint64_t v6;
  void *v7;
  id v8;
  char v9;
  id v10;
  uint64_t *v11;
  uint64_t v12;
  _BYTE v13[24];

  v2 = v1;
  v4 = v1 + OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_lastFollowedParticipant;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v4);
  swift_unknownObjectWeakAssign(v4, a1);
  if (!Strong)
    goto LABEL_7;
  v6 = swift_unknownObjectWeakLoadStrong(v4);
  if (v6)
  {
    v7 = (void *)v6;
    type metadata accessor for CRLCollaborationParticipant(0);
    v8 = Strong;
    v9 = static NSObject.== infix(_:_:)(v8, v7);

    if ((v9 & 1) != 0)
    {

      goto LABEL_7;
    }
  }
  else
  {
    v10 = Strong;
  }
  sub_100999494();
  v11 = (uint64_t *)(v2 + OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_historyBuffer);
  swift_beginAccess(v2 + OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_historyBuffer, v13, 1, 0);
  v12 = *v11;
  *v11 = (uint64_t)_swiftEmptyArrayStorage;

  swift_bridgeObjectRelease(v12);
LABEL_7:
  if (objc_msgSend((id)objc_opt_self(CRLAccessibility), "isVoiceOverOrSwitchControlEnabled"))sub_100998FC8();
  else
    sub_100999494();

}

uint64_t sub_100998B20(void *a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  void *v18;
  uint64_t result;
  __n128 v20;
  void *v21;
  __n128 v22;
  uint64_t (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  id v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(char *, uint64_t);
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD aBlock[5];
  uint64_t v44;

  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v41 = *(_QWORD *)(v5 - 8);
  v42 = v5;
  __chkstk_darwin(v5);
  v38 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v39 = *(_QWORD *)(v7 - 8);
  v40 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchTime(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v15 = __chkstk_darwin(v14).n128_u64[0];
  v17 = (char *)&v35 - v16;
  v18 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_hosts);
  result = (uint64_t)objc_msgSend(v18, "containsObject:", a1, v15);
  if ((result & 1) == 0)
  {
    sub_100998ED4(a1);
    result = (uint64_t)objc_msgSend(v18, "addObject:", a1);
    if ((a2 & 1) != 0)
    {
      sub_1004B8930(0, (unint64_t *)&qword_1013DE090, OS_dispatch_queue_ptr);
      v21 = (void *)static OS_dispatch_queue.main.getter(v20);
      static DispatchTime.now()(v22);
      + infix(_:_:)(v13, 1.0);
      v23 = *(uint64_t (**)(char *, uint64_t))(v11 + 8);
      v36 = v10;
      v37 = v23;
      v23(v13, v10);
      v24 = swift_allocObject(&unk_10128D310, 24, 7);
      swift_unknownObjectWeakInit(v24 + 16);
      v25 = swift_allocObject(&unk_10128D540, 32, 7);
      *(_QWORD *)(v25 + 16) = v24;
      *(_QWORD *)(v25 + 24) = a1;
      aBlock[4] = sub_1009A3710;
      v44 = v25;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(_QWORD *)"";
      aBlock[2] = sub_1005D2FC0;
      aBlock[3] = &unk_10128D558;
      v26 = _Block_copy(aBlock);
      v27 = v44;
      v28 = a1;
      v29 = swift_release(v27);
      static DispatchQoS.unspecified.getter(v29);
      aBlock[0] = _swiftEmptyArrayStorage;
      v30 = sub_1004B7878((unint64_t *)&qword_1013E1D20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v31 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
      v32 = sub_100503E88();
      v33 = v38;
      v34 = v42;
      dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v31, v32, v42, v30);
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v17, v9, v33, v26);
      _Block_release(v26);

      (*(void (**)(char *, uint64_t))(v41 + 8))(v33, v34);
      (*(void (**)(char *, uint64_t))(v39 + 8))(v9, v40);
      return v37(v17, v36);
    }
  }
  return result;
}

void sub_100998E20(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    CRLAccessibilityPostLayoutChangedNotification(a2);

  }
}

void sub_100998ED4(void *a1)
{
  id v2;
  Class isa;

  if (objc_msgSend((id)objc_opt_self(CRLAccessibility), "isVoiceOverOrSwitchControlEnabled"))
  {
    sub_1009990DC(a1);
  }
  else
  {
    objc_msgSend(a1, "setAccessibilityHint:", 0);
    objc_msgSend(a1, "setAccessibilityCustomActions:", 0);
    objc_msgSend(a1, "setAccessibilityRespondsToUserInteraction:", 0);
    v2 = objc_msgSend(a1, "text");
    objc_msgSend(a1, "setAccessibilityLabel:", v2);

    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(a1, "setAccessibilityUserInputLabels:", isa);

  }
}

void sub_100998FC8()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  id v6;
  void *v7;
  uint64_t v8;

  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_hosts), "allObjects");
  v2 = sub_1004B8930(0, &qword_1013E79F8, UILabel_ptr);
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, v2);

  if (!((unint64_t)v3 >> 62))
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v3);
    if (v4)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease_n(v3, 2);
    return;
  }
  if (v3 < 0)
    v8 = v3;
  else
    v8 = v3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v3);
  v4 = _CocoaArrayWrapper.endIndex.getter(v8);
  if (!v4)
    goto LABEL_13;
LABEL_3:
  if (v4 >= 1)
  {
    for (i = 0; i != v4; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0)
        v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v3);
      else
        v6 = *(id *)(v3 + 8 * i + 32);
      v7 = v6;
      sub_1009990DC(v6);

    }
    goto LABEL_13;
  }
  __break(1u);
}

void sub_1009990DC(void *a1)
{
  id v2;
  NSString v3;
  NSString v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  NSString v12;
  uint64_t v13;
  uint64_t inited;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSString v25;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  unint64_t v37;
  _QWORD *v38;
  Class isa;
  _QWORD *v40;
  Class v41;
  _BYTE v42[64];
  _BYTE v43[72];

  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v3 = String._bridgeToObjectiveC()();
  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend(v2, "localizedStringForKey:value:table:", v3, v4, 0);

  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v8 = v7;

  sub_10099AFEC();
  if (v9)
  {
    v11 = v9;
    v12 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v10 = swift_bridgeObjectRelease(v11).n128_u64[0];
  }
  else
  {
    v12 = 0;
  }
  objc_msgSend(a1, "setAccessibilityHint:", v12, v10);

  objc_msgSend(a1, "setAccessibilityRespondsToUserInteraction:", 1);
  v13 = sub_1004B804C(&qword_1013FF100);
  inited = swift_initStackObject(v13, v43);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  v15 = inited + 32;
  v16 = objc_msgSend(a1, "text");
  if (v16)
  {
    v17 = v16;
    v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
    v20 = v19;

  }
  else
  {
    v18 = 0;
    v20 = 0;
  }
  *(_QWORD *)(inited + 32) = v18;
  *(_QWORD *)(inited + 40) = v20;
  *(_QWORD *)(inited + 48) = v6;
  *(_QWORD *)(inited + 56) = v8;
  swift_bridgeObjectRetain(v8);
  sub_1008858E4(inited);
  v22 = v21;
  swift_setDeallocating(inited);
  v23 = *(_QWORD *)(inited + 16);
  v24 = sub_1004B804C((uint64_t *)&unk_1013E1C80);
  swift_arrayDestroy(v15, v23, v24);
  v25 = String._bridgeToObjectiveC()();
  objc_msgSend(a1, "setAccessibilityLabel:", v25, swift_bridgeObjectRelease(v22).n128_f64[0]);

  v26 = swift_initStackObject(v13, v42);
  *(_OWORD *)(v26 + 16) = xmmword_100EF5A10;
  *(_QWORD *)(v26 + 32) = v6;
  *(_QWORD *)(v26 + 40) = v8;
  v27 = objc_msgSend(a1, "text");
  if (v27)
  {
    v28 = v27;
    v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
    v31 = v30;

  }
  else
  {
    v29 = 0;
    v31 = 0;
  }
  *(_QWORD *)(v26 + 48) = v29;
  *(_QWORD *)(v26 + 56) = v31;
  swift_bridgeObjectRetain(v8);
  v32 = sub_100D0EF94(0, 1, 1, _swiftEmptyArrayStorage);
  v34 = v32[2];
  v33 = v32[3];
  v35 = v34 + 1;
  if (v34 >= v33 >> 1)
    v32 = sub_100D0EF94((_QWORD *)(v33 > 1), v34 + 1, 1, v32);
  v32[2] = v35;
  v36 = &v32[2 * v34];
  v36[4] = v6;
  v36[5] = v8;
  if (v31)
  {
    v37 = v32[3];
    swift_bridgeObjectRetain(v31);
    if (v35 >= v37 >> 1)
      v32 = sub_100D0EF94((_QWORD *)(v37 > 1), v34 + 2, 1, v32);
    v32[2] = v34 + 2;
    v38 = &v32[2 * v35];
    v38[4] = v29;
    v38[5] = v31;
  }
  swift_release(v26);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(a1, "setAccessibilityUserInputLabels:", isa, swift_bridgeObjectRelease(v32).n128_f64[0]);

  sub_10099D508();
  v40 = sub_100999D08(a1);
  sub_1004B8930(0, &qword_1013E78E8, UIAccessibilityCustomAction_ptr);
  v41 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(a1, "setAccessibilityCustomActions:", v41, swift_bridgeObjectRelease(v40).n128_f64[0]);

}

void sub_100999494()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Class isa;
  id v7;
  void *v8;
  id v9;
  NSString v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_hosts), "allObjects");
  v2 = sub_1004B8930(0, &qword_1013E79F8, UILabel_ptr);
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, v2);

  if (!((unint64_t)v3 >> 62))
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v3);
    if (v4)
      goto LABEL_3;
LABEL_15:
    swift_bridgeObjectRelease_n(v3, 2);
    return;
  }
  if (v3 < 0)
    v13 = v3;
  else
    v13 = v3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v3);
  v4 = _CocoaArrayWrapper.endIndex.getter(v13);
  if (!v4)
    goto LABEL_15;
LABEL_3:
  if (v4 >= 1)
  {
    v5 = 0;
    do
    {
      if ((v3 & 0xC000000000000001) != 0)
        v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v3);
      else
        v7 = *(id *)(v3 + 8 * v5 + 32);
      v8 = v7;
      objc_msgSend(v7, "setAccessibilityHint:", 0);
      objc_msgSend(v8, "setAccessibilityCustomActions:", 0);
      objc_msgSend(v8, "setAccessibilityRespondsToUserInteraction:", 0);
      v9 = objc_msgSend(v8, "text");
      v10 = v9;
      if (v9)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
        v12 = v11;

        v10 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v12);
      }
      ++v5;
      objc_msgSend(v8, "setAccessibilityLabel:", v10);

      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v8, "setAccessibilityUserInputLabels:", isa);

    }
    while (v4 != v5);
    goto LABEL_15;
  }
  __break(1u);
}

void sub_100999688(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  void **v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  char v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  __n128 v19;
  _BYTE v20[24];
  _BYTE v21[24];

  v2 = v1;
  v4 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event(0);
  __chkstk_darwin(v8);
  v10 = (void **)&v20[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = v2 + OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_historyBuffer;
  swift_beginAccess(v2 + OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_historyBuffer, v21, 0, 0);
  if (*(_QWORD *)(*(_QWORD *)v11 + 16))
  {
    sub_1004B8460(*(_QWORD *)v11+ *(int *)(v4 + 20)+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), (uint64_t)v10, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
    if (swift_getEnumCaseMultiPayload(v10, v8))
    {
      sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
    }
    else
    {
      v12 = *v10;
      v13 = sub_1004B804C(&qword_1013FEFB0);
      sub_1004CB800((uint64_t)v10 + *(int *)(v13 + 48), &qword_1013EE2E0);
      sub_1004B8930(0, (unint64_t *)&qword_1013E56B0, off_101229828);
      v14 = static NSObject.== infix(_:_:)(v12, a1);

      if ((v14 & 1) != 0)
        return;
    }
  }
  v15 = &v7[*(int *)(v4 + 20)];
  v16 = (uint64_t)v15 + *(int *)(sub_1004B804C(&qword_1013FEFB0) + 48);
  *v15 = a1;
  v17 = v2 + OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_mostRecentViewportState;
  swift_beginAccess(v2 + OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_mostRecentViewportState, v20, 0, 0);
  sub_1004CB7BC(v17, v16, &qword_1013EE2E0);
  swift_storeEnumTagMultiPayload(v15, v8, 0);
  v18 = a1;
  static Date.now.getter(v19);
  sub_10099B5B8((uint64_t)v7);
  sub_10099C678((uint64_t)v7);
  sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
}

void sub_1009998F0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  void **v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  char v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  __n128 v19;
  _BYTE v20[24];
  _BYTE v21[24];

  v2 = v1;
  v4 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event(0);
  __chkstk_darwin(v8);
  v10 = (void **)&v20[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = v2 + OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_historyBuffer;
  swift_beginAccess(v2 + OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_historyBuffer, v21, 0, 0);
  if (!*(_QWORD *)(*(_QWORD *)v11 + 16))
    goto LABEL_6;
  sub_1004B8460(*(_QWORD *)v11+ *(int *)(v4 + 20)+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), (uint64_t)v10, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
  if (swift_getEnumCaseMultiPayload(v10, v8) != 1)
  {
    sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
    goto LABEL_6;
  }
  v12 = *v10;
  v13 = sub_1004B804C(&qword_1013FEFB0);
  sub_1004CB800((uint64_t)v10 + *(int *)(v13 + 48), &qword_1013EE2E0);
  sub_1004B8930(0, (unint64_t *)&qword_1013E56B0, off_101229828);
  v14 = static NSObject.== infix(_:_:)(v12, a1);

  if ((v14 & 1) == 0)
  {
LABEL_6:
    v15 = &v7[*(int *)(v4 + 20)];
    v16 = (uint64_t)v15 + *(int *)(sub_1004B804C(&qword_1013FEFB0) + 48);
    *v15 = a1;
    v17 = v2 + OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_mostRecentViewportState;
    swift_beginAccess(v2 + OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_mostRecentViewportState, v20, 0, 0);
    sub_1004CB7BC(v17, v16, &qword_1013EE2E0);
    swift_storeEnumTagMultiPayload(v15, v8, 1);
    v18 = a1;
    static Date.now.getter(v19);
    sub_10099B5B8((uint64_t)v7);
    sub_10099C678((uint64_t)v7);
    sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
  }
}

void sub_100999C38()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  qword_1013FEF30 = v4;
  *(_QWORD *)algn_1013FEF38 = v6;
}

_QWORD *sub_100999D08(void *a1)
{
  char *v1;
  uint64_t Strong;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  unint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  unint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  char v21;
  void *v22;
  id v23;
  NSString v24;
  id v25;
  char *v26;
  uint64_t v27;
  char *v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  char *v38;
  void *v39;
  void *v40;
  id v41;
  char v42[24];

  v41 = objc_msgSend(a1, "window");
  Strong = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_followCoordinator]);
  if (Strong)
  {
    v38 = v1;
    v40 = (void *)Strong;
    v4 = objc_msgSend(*(id *)(Strong + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_interactiveCanvasControllers), "allObjects");
    v5 = sub_1004B8930(0, &qword_1013E4890, off_101229918);
    v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);

    v39 = a1;
    if ((unint64_t)v6 >> 62)
      goto LABEL_23;
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    v8 = v41;
    swift_bridgeObjectRetain(v6);
    for (; v7; v7 = _CocoaArrayWrapper.endIndex.getter(v35))
    {
      v9 = v6 & 0xC000000000000001;
      v10 = 4;
      while (1)
      {
        v11 = v9
            ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v10 - 4, v6)
            : *(id *)(v6 + 8 * v10);
        v12 = v11;
        v13 = v10 - 3;
        if (__OFADD__(v10 - 4, 1))
          break;
        v14 = objc_msgSend(v11, "canvasView");
        if (v14
          && (v15 = v14, v16 = objc_msgSend(v14, "window"), v15, v16))
        {
          if (v41)
          {
            v17 = v9;
            v18 = v7;
            sub_1004B8930(0, &qword_1013E4C58, UIWindow_ptr);
            v19 = v41;
            v20 = v16;
            v21 = static NSObject.== infix(_:_:)(v20, v19);

            if ((v21 & 1) != 0)
            {

              goto LABEL_21;
            }
            v16 = v12;
            v7 = v18;
            v9 = v17;
          }
          else
          {

          }
        }
        else
        {
          if (!v41)
          {
            v19 = v40;
LABEL_21:

            swift_bridgeObjectRelease_n(v6, 2);
            v23 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:", 30.0);
            v24 = String._bridgeToObjectiveC()();
            v25 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v24, v23);

            v26 = &v38[OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_historyBuffer];
            swift_beginAccess(&v38[OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_historyBuffer], v42, 0, 0);
            v27 = *(_QWORD *)v26;
            v28 = v38;
            v29 = v39;
            v30 = v12;
            v31 = v25;
            swift_bridgeObjectRetain(v27);
            v33 = sub_1009A2860(v32, (uint64_t)v28, v29, v30, (uint64_t)v25);
            swift_bridgeObjectRelease(v27);

            v34 = sub_100C00430((unint64_t)v33);
            return (_QWORD *)v34;
          }
          v16 = v12;
        }

        ++v10;
        if (v13 == v7)
          goto LABEL_27;
      }
      __break(1u);
LABEL_23:
      if (v6 < 0)
        v35 = v6;
      else
        v35 = v6 & 0xFFFFFFFFFFFFFF8;
      v36 = v41;
      swift_bridgeObjectRetain(v6);
    }
LABEL_27:

    swift_bridgeObjectRelease_n(v6, 2);
    v22 = v40;
  }
  else
  {
    v22 = v41;
  }

  return _swiftEmptyArrayStorage;
}

BOOL sub_10099A0A4(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void **v23;
  uint64_t Strong;
  void *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  id v29;
  void *v30;
  id v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  void *v40;
  void *v41;
  uint64_t v42;
  Class isa;
  id v44;
  void *v45;
  id v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  Swift::Int v50;
  BOOL v51;
  void *v52;
  __n128 v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  _QWORD *v58;
  void *v59;
  void *v60;
  _QWORD *v61;
  id v62;
  __n128 v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char *v68;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  void *v82;
  void *v83;
  _QWORD aBlock[3];
  void *v85;
  uint64_t (*v86)();
  _QWORD *v87;
  char v88[24];
  char v89[32];

  v82 = a3;
  v83 = a4;
  v74 = type metadata accessor for DispatchWorkItemFlags(0);
  v81 = *(_QWORD *)(v74 - 8);
  __chkstk_darwin(v74);
  v80 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v78 = *(_QWORD *)(v7 - 8);
  v79 = v7;
  __chkstk_darwin(v7);
  v77 = (char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = type metadata accessor for DispatchTime(0);
  v9 = *(_QWORD *)(v76 - 8);
  v10 = __chkstk_darwin(v76);
  v12 = (char *)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v75 = (char *)&v70 - v13;
  v14 = sub_1004B804C(&qword_1013EE2E0);
  __chkstk_darwin(v14);
  v16 = (char *)&v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for CRLFollowViewportState(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v70 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event(0);
  __chkstk_darwin(v21);
  v23 = (void **)((char *)&v70 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  a1 += 16;
  swift_beginAccess(a1, v89, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v25 = (void *)Strong;
    v26 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb(0);
    sub_1004B8460(a2 + *(int *)(v26 + 20), (uint64_t)v23, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
    if (swift_getEnumCaseMultiPayload(v23, v21) > 1)
    {
      v39 = sub_10099ED90(v83, a2);

      sub_1004B84A4((uint64_t)v23, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
    }
    else
    {
      v72 = v9;
      v71 = a2;
      v27 = *v23;
      v28 = sub_1004B804C(&qword_1013FEFB0);
      sub_1004CB800((uint64_t)v23 + *(int *)(v28 + 48), &qword_1013EE2E0);
      v73 = v25;
      v29 = objc_msgSend(v27, "canvas");
      if (!v29)
        goto LABEL_9;
      v30 = v29;
      v31 = objc_msgSend(v29, "allReps");

      v32 = sub_1004B8930(0, (unint64_t *)&qword_1013E56B0, off_101229828);
      v33 = sub_1004F619C();
      v34 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v31, v32, v33);

      LOBYTE(v31) = sub_100623088(v27, v34);
      swift_bridgeObjectRelease(v34);
      if ((v31 & 1) != 0)
      {
        v70 = v33;
        v82 = v27;
        v35 = (uint64_t)&v73[OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_mostRecentViewportState];
        swift_beginAccess(&v73[OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_mostRecentViewportState], v88, 0, 0);
        sub_1004CB7BC(v35, (uint64_t)v16, &qword_1013EE2E0);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
        {
          sub_1004CB800((uint64_t)v16, &qword_1013EE2E0);
          v36 = 0.0;
          v37 = v74;
          v38 = v72;
        }
        else
        {
          sub_1004B84E0((uint64_t)v16, (uint64_t)v20, type metadata accessor for CRLFollowViewportState);
          v45 = v83;
          v46 = objc_msgSend(v83, "canvas");
          v47 = objc_msgSend(v46, "allReps");

          v48 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v47, v32, v70);
          __chkstk_darwin(v49);
          *(&v70 - 2) = (unint64_t)v20;
          v50 = sub_1009A0FF0((uint64_t (*)(id *))sub_1009A3718, (uint64_t)(&v70 - 4), v48);
          LOBYTE(v47) = sub_100623088(v82, v50);
          swift_release(v50);
          v37 = v74;
          v38 = v72;
          if ((v47 & 1) != 0)
          {
            sub_1004B84A4((uint64_t)v20, type metadata accessor for CRLFollowViewportState);
            v36 = 0.0;
          }
          else
          {
            v51 = sub_10099ED90(v45, v71);
            sub_1004B84A4((uint64_t)v20, type metadata accessor for CRLFollowViewportState);
            if (v51)
              v36 = 0.5;
            else
              v36 = 0.0;
          }
        }
        sub_1004B8930(0, (unint64_t *)&qword_1013DE090, OS_dispatch_queue_ptr);
        v52 = (void *)static OS_dispatch_queue.main.getter();
        static DispatchTime.now()(v53);
        v54 = v75;
        + infix(_:_:)(v12, v36);
        v83 = *(void **)(v38 + 8);
        v55 = v76;
        ((void (*)(char *, uint64_t))v83)(v12, v76);
        v56 = swift_allocObject(&unk_10128D310, 24, 7);
        v57 = v73;
        swift_unknownObjectWeakInit(v56 + 16, v73);
        v58 = (_QWORD *)swift_allocObject(&unk_10128D4F0, 40, 7);
        v59 = v82;
        v58[2] = v56;
        v58[3] = v59;
        v58[4] = v57;
        v86 = sub_1009A36D8;
        v87 = v58;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = *(_QWORD *)"";
        aBlock[2] = sub_1005D2FC0;
        v85 = &unk_10128D508;
        v60 = _Block_copy(aBlock);
        v61 = v87;
        v62 = v57;
        v63 = swift_release(v61);
        v64 = v77;
        static DispatchQoS.unspecified.getter(v63);
        aBlock[0] = _swiftEmptyArrayStorage;
        v65 = sub_1004B7878((unint64_t *)&qword_1013E1D20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
        v66 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
        v67 = sub_100503E88();
        v68 = v80;
        dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v66, v67, v37, v65);
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v54, v64, v68, v60);
        _Block_release(v60);

        (*(void (**)(char *, uint64_t))(v81 + 8))(v68, v37);
        (*(void (**)(char *, uint64_t))(v78 + 8))(v64, v79);
        ((void (*)(char *, uint64_t))v83)(v54, v55);
        return 1;
      }
      else
      {
LABEL_9:
        v40 = v73;
        sub_10099D508();
        v41 = v82;
        v42 = sub_100999D08(v82);
        sub_1004B8930(0, &qword_1013E78E8, UIAccessibilityCustomAction_ptr);
        isa = Array._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v41, "setAccessibilityCustomActions:", isa, swift_bridgeObjectRelease(v42).n128_f64[0]);

        v85 = (void *)type metadata accessor for CRLFollowAccessibilityExperienceCoordinator(0);
        aBlock[0] = v40;
        v44 = v40;
        sub_1009A3530(v27, (uint64_t)aBlock);

        sub_1004CB800((uint64_t)aBlock, &qword_1013E0230);
        return 0;
      }
    }
  }
  else
  {
    return 0;
  }
  return v39;
}

uint64_t sub_10099A830(uint64_t a1, void *a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t Strong;
  void *v15;
  uint64_t v16;
  CGFloat *v17;
  CGFloat v18;
  CGFloat v19;
  CGFloat v20;
  CGFloat v21;
  CGFloat v22;
  CGFloat v23;
  CGFloat v24;
  CGFloat v25;
  uint64_t result;
  void *v27;
  id v28;
  _QWORD v30[4];
  _BYTE v31[24];
  _BYTE v32[24];
  _BYTE v33[24];
  CGRect v34;
  CGRect v35;

  v6 = sub_1004B804C(&qword_1013EE2E0);
  __chkstk_darwin(v6);
  v8 = (char *)&v30[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CRLFollowViewportState(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v30[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1 + 16;
  swift_beginAccess(v13, v33, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v13);
  if (!Strong)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    goto LABEL_6;
  }
  v15 = (void *)Strong;
  v16 = Strong + OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_mostRecentViewportState;
  swift_beginAccess(Strong + OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_mostRecentViewportState, v32, 0, 0);
  sub_1004CB7BC(v16, (uint64_t)v8, &qword_1013EE2E0);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
LABEL_6:
    sub_1004CB800((uint64_t)v8, &qword_1013EE2E0);
    goto LABEL_7;
  }
  sub_1004B84E0((uint64_t)v8, (uint64_t)v12, type metadata accessor for CRLFollowViewportState);
  v17 = (CGFloat *)&v12[*(int *)(v9 + 28)];
  v18 = *v17;
  v19 = v17[1];
  v20 = v17[2];
  v21 = v17[3];
  objc_msgSend(a2, "frameInUnscaledCanvas");
  v35.origin.x = v22;
  v35.origin.y = v23;
  v35.size.width = v24;
  v35.size.height = v25;
  v34.origin.x = v18;
  v34.origin.y = v19;
  v34.size.width = v20;
  v34.size.height = v21;
  if (CGRectContainsRect(v34, v35))
  {
    CRLAccessibilityPostLayoutChangedNotification(a2);
    return sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLFollowViewportState);
  }
  sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLFollowViewportState);
LABEL_7:
  swift_beginAccess(v13, v31, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v13);
  if (result)
  {
    v27 = (void *)result;
    v30[3] = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator(0);
    v30[0] = a3;
    v28 = a3;
    sub_1009A3530(a2, (uint64_t)v30);

    return sub_1004CB800((uint64_t)v30, &qword_1013E0230);
  }
  return result;
}

uint64_t sub_10099AB00(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  void **v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  NSString v12;
  NSString v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  NSString v24;
  NSString v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;

  v2 = type metadata accessor for CRLFollowViewportState(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event(0);
  __chkstk_darwin(v5);
  v7 = (void **)((char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb(0);
  sub_1004B8460(a1 + *(int *)(v8 + 20), (uint64_t)v7, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
  if (swift_getEnumCaseMultiPayload(v7, v5) > 1)
  {
    sub_1004B84E0((uint64_t)v7, (uint64_t)v4, type metadata accessor for CRLFollowViewportState);
    v23 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v24 = String._bridgeToObjectiveC()();
    v25 = String._bridgeToObjectiveC()();
    v26 = objc_msgSend(v23, "localizedStringForKey:value:table:", v24, v25, 0);

    v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
    v17 = v27;

    v18 = sub_10099E494((uint64_t)v4);
    v20 = v28;
    sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLFollowViewportState);
    if (v20)
      goto LABEL_3;
LABEL_5:
    swift_bridgeObjectRelease(v17);
    return v18;
  }
  v9 = *v7;
  v10 = sub_1004B804C(&qword_1013FEFB0);
  sub_1004CB800((uint64_t)v7 + *(int *)(v10 + 48), &qword_1013EE2E0);
  v11 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v12 = String._bridgeToObjectiveC()();
  v13 = String._bridgeToObjectiveC()();
  v14 = objc_msgSend(v11, "localizedStringForKey:value:table:", v12, v13, 0);

  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  v17 = v16;

  v18 = sub_1004D1C54(v9, 0);
  v20 = v19;

  if (!v20)
    goto LABEL_5;
LABEL_3:
  v21 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  v22 = swift_allocObject(v21, 72, 7);
  *(_OWORD *)(v22 + 16) = xmmword_100EF5E40;
  *(_QWORD *)(v22 + 56) = &type metadata for String;
  *(_QWORD *)(v22 + 64) = sub_1004CFC2C();
  *(_QWORD *)(v22 + 32) = v18;
  *(_QWORD *)(v22 + 40) = v20;
  v18 = static String.localizedStringWithFormat(_:_:)(v15, v17, v22);
  swift_bridgeObjectRelease(v17);
  swift_bridgeObjectRelease(v22);
  return v18;
}

void sub_10099AE2C()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  qword_1014800F0 = v4;
  *(_QWORD *)algn_1014800F8 = v6;
}

uint64_t sub_10099AF6C()
{
  return type metadata accessor for CRLFollowAccessibilityExperienceCoordinator(0);
}

uint64_t type metadata accessor for CRLFollowAccessibilityExperienceCoordinator(uint64_t a1)
{
  return sub_1004BD408(a1, (uint64_t *)&unk_1013FEFA0, (uint64_t)&nominal type descriptor for CRLFollowAccessibilityExperienceCoordinator);
}

void *sub_10099AFEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  void *Strong;
  void *v9;
  Class isa;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  NSString v18;
  NSString v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t inited;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE v36[64];

  v1 = sub_1004B804C(&qword_1013F4270);
  __chkstk_darwin(v1);
  v3 = &v36[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for PersonNameComponents(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v36[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_lastFollowedParticipant);
  if (!Strong)
    return Strong;
  sub_10063ABC4((uint64_t)v3);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_1004CB800((uint64_t)v3, &qword_1013F4270);
LABEL_10:
    v12 = sub_10063B4E0();
    v14 = v16;
    goto LABEL_11;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 32))(v7, v3, v4);
  v9 = (void *)objc_opt_self(NSPersonNameComponentsFormatter);
  isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
  v11 = objc_msgSend(v9, "localizedStringFromPersonNameComponents:style:options:", isa, 1, 0);

  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v14 = v13;

  if ((v14 & 0x2000000000000000) != 0)
    v15 = HIBYTE(v14) & 0xF;
  else
    v15 = v12 & 0xFFFFFFFFFFFFLL;
  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  if (!v15)
  {
    swift_bridgeObjectRelease(v14);
    goto LABEL_10;
  }
LABEL_11:

  v17 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v18 = String._bridgeToObjectiveC()();
  v19 = String._bridgeToObjectiveC()();
  v20 = objc_msgSend(v17, "localizedStringForKey:value:table:", v18, v19, 0);

  v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
  v23 = v22;

  v24 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  v25 = swift_allocObject(v24, 72, 7);
  *(_OWORD *)(v25 + 16) = xmmword_100EF5E40;
  *(_QWORD *)(v25 + 56) = &type metadata for String;
  *(_QWORD *)(v25 + 64) = sub_1004CFC2C();
  *(_QWORD *)(v25 + 32) = v12;
  *(_QWORD *)(v25 + 40) = v14;
  v26 = static String.localizedStringWithFormat(_:_:)(v21, v23, v25);
  v28 = v27;
  swift_bridgeObjectRelease(v25);
  swift_bridgeObjectRelease(v23);
  v29 = sub_1004B804C(&qword_1013FF100);
  inited = swift_initStackObject(v29, v36);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  *(_QWORD *)(inited + 32) = v26;
  v31 = inited + 32;
  *(_QWORD *)(inited + 40) = v28;
  if (qword_1013DD608 != -1)
    swift_once(&qword_1013DD608, sub_10099AE2C);
  v32 = *(_QWORD *)algn_1014800F8;
  *(_QWORD *)(inited + 48) = qword_1014800F0;
  *(_QWORD *)(inited + 56) = v32;
  swift_bridgeObjectRetain(v32);
  Strong = (void *)sub_1008858E4(inited);
  swift_setDeallocating(inited);
  v33 = *(_QWORD *)(inited + 16);
  v34 = sub_1004B804C((uint64_t *)&unk_1013E1C80);
  swift_arrayDestroy(v31, v33, v34);
  return Strong;
}

uint64_t sub_10099B358()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  _QWORD v10[5];
  uint64_t v11;
  _OWORD v12[2];
  _QWORD v13[4];

  v1 = objc_msgSend((id)objc_opt_self(CRLAccessibility), "currentlyFocusedElement");
  _bridgeAnyObjectToAny(_:)(v13, v1);
  swift_unknownObjectRelease(v1);
  v2 = OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_voiceOverRepRefocusTimer;
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_voiceOverRepRefocusTimer), "invalidate");
  v3 = (void *)objc_opt_self(NSTimer);
  v4 = swift_allocObject(&unk_10128D310, 24, 7);
  swift_unknownObjectWeakInit(v4 + 16, v0);
  sub_1004CB6E8((uint64_t)v13, (uint64_t)v12);
  v5 = swift_allocObject(&unk_10128D428, 56, 7);
  *(_QWORD *)(v5 + 16) = v4;
  sub_10050CB14(v12, (_OWORD *)(v5 + 24));
  v10[4] = sub_1009A333C;
  v11 = v5;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = *(_QWORD *)"";
  v10[2] = sub_1004C6194;
  v10[3] = &unk_10128D440;
  v6 = _Block_copy(v10);
  swift_release(v11);
  v7 = objc_msgSend(v3, "scheduledTimerWithTimeInterval:repeats:block:", 0, v6, 0.25);
  _Block_release(v6);
  v8 = *(void **)(v0 + v2);
  *(_QWORD *)(v0 + v2) = v7;

  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v13);
}

uint64_t sub_10099B4CC(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t result;
  char *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  _BYTE v12[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v12, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v4);
  if (result)
  {
    v6 = (char *)result;
    v7 = OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_voiceOverRepRefocusTimer;
    objc_msgSend(*(id *)(result + OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_voiceOverRepRefocusTimer), "invalidate");
    v8 = *(void **)&v6[v7];
    *(_QWORD *)&v6[v7] = 0;

    LODWORD(v7) = UIAccessibilityLayoutChangedNotification;
    v9 = a3[3];
    v10 = sub_1004BB5A4(a3, v9);
    v11 = (void *)_bridgeAnythingToObjectiveC<A>(_:)(v10, v9);
    UIAccessibilityPostNotification(v7, v11);

    return swift_unknownObjectRelease(v11);
  }
  return result;
}

id sub_10099B5B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  id *v10;
  uint64_t v11;
  uint64_t v12;
  id *v13;
  id result;
  uint64_t v15;
  int EnumCaseMultiPayload;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  uint64_t v36;
  _QWORD aBlock[5];
  uint64_t v38;
  char v39[24];

  v2 = v1;
  v4 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = (char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event(0);
  __chkstk_darwin(v8);
  v10 = (id *)((char *)&aBlock[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  v13 = (id *)((char *)&aBlock[-1] - v12);
  result = objc_msgSend((id)objc_opt_self(CRLAccessibility), "isVoiceOverOrSwitchControlEnabled");
  if ((_DWORD)result)
  {
    v15 = a1 + *(int *)(v4 + 20);
    sub_1004B8460(v15, (uint64_t)v13, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v13, v8);
    v36 = a1;
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {

        v17 = sub_1004B804C(&qword_1013FEFB0);
        sub_1004CB800((uint64_t)v13 + *(int *)(v17 + 48), &qword_1013EE2E0);
        v18 = 1;
      }
      else
      {
        sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
        v18 = 2;
      }
    }
    else
    {

      v19 = sub_1004B804C(&qword_1013FEFB0);
      sub_1004CB800((uint64_t)v13 + *(int *)(v19 + 48), &qword_1013EE2E0);
      v18 = 0;
    }
    v20 = (uint64_t *)(v2 + OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_announcementTimers);
    swift_beginAccess(v2 + OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_announcementTimers, v39, 0, 0);
    v21 = *v20;
    if (*(_QWORD *)(*v20 + 16))
    {
      v22 = sub_1008436B4(v18);
      if ((v23 & 1) != 0)
        objc_msgSend(*(id *)(*(_QWORD *)(v21 + 56) + 8 * v22), "invalidate");
    }
    sub_1004B8460(v15, (uint64_t)v10, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
    v24 = swift_getEnumCaseMultiPayload(v10, v8);
    if (v24)
    {
      v25 = v36;
      if (v24 == 1)
      {

        v26 = sub_1004B804C(&qword_1013FEFB0);
        sub_1004CB800((uint64_t)v10 + *(int *)(v26 + 48), &qword_1013EE2E0);
        v27 = 1;
      }
      else
      {
        sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
        v27 = 2;
      }
    }
    else
    {

      v28 = sub_1004B804C(&qword_1013FEFB0);
      sub_1004CB800((uint64_t)v10 + *(int *)(v28 + 48), &qword_1013EE2E0);
      v27 = 0;
      v25 = v36;
    }
    v29 = (void *)objc_opt_self(NSTimer);
    v30 = swift_allocObject(&unk_10128D310, 24, 7);
    swift_unknownObjectWeakInit(v30 + 16, v2);
    sub_1004B8460(v25, (uint64_t)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
    v31 = *(unsigned __int8 *)(v5 + 80);
    v32 = (v31 + 24) & ~v31;
    v33 = swift_allocObject(&unk_10128D3D8, v32 + v6, v31 | 7);
    *(_QWORD *)(v33 + 16) = v30;
    sub_1004B84E0((uint64_t)v7, v33 + v32, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
    aBlock[4] = sub_1009A32D0;
    v38 = v33;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(_QWORD *)"";
    aBlock[2] = sub_1004C6194;
    aBlock[3] = &unk_10128D3F0;
    v34 = _Block_copy(aBlock);
    swift_release(v38);
    v35 = objc_msgSend(v29, "scheduledTimerWithTimeInterval:repeats:block:", 0, v34, 0.5);
    _Block_release(v34);
    swift_beginAccess(v20, aBlock, 33, 0);
    sub_10083EB98((uint64_t)v35, v27);
    return (id)swift_endAccess(aBlock);
  }
  return result;
}

void sub_10099B974(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  id *v7;
  uint64_t v8;
  uint64_t v9;
  id *v10;
  uint64_t Strong;
  char *v12;
  uint64_t v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE v34[24];
  char v35[24];
  char v36[24];

  v5 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event(0);
  __chkstk_darwin(v5);
  v7 = (id *)&v34[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v8);
  v10 = (id *)&v34[-v9 - 8];
  a2 += 16;
  swift_beginAccess(a2, v36, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v12 = (char *)Strong;
    v13 = a3
        + *(int *)(type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb(0) + 20);
    sub_1004B8460(v13, (uint64_t)v10, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v10, v5);
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {

        v15 = sub_1004B804C(&qword_1013FEFB0);
        sub_1004CB800((uint64_t)v10 + *(int *)(v15 + 48), &qword_1013EE2E0);
        v16 = 1;
      }
      else
      {
        sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
        v16 = 2;
      }
    }
    else
    {

      v17 = sub_1004B804C(&qword_1013FEFB0);
      sub_1004CB800((uint64_t)v10 + *(int *)(v17 + 48), &qword_1013EE2E0);
      v16 = 0;
    }
    v18 = (uint64_t *)&v12[OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_announcementTimers];
    swift_beginAccess(&v12[OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_announcementTimers], v35, 0, 0);
    v19 = *v18;
    if (*(_QWORD *)(*v18 + 16))
    {
      v20 = sub_1008436B4(v16);
      if ((v21 & 1) != 0)
        objc_msgSend(*(id *)(*(_QWORD *)(v19 + 56) + 8 * v20), "invalidate");
    }
    sub_1004B8460(v13, (uint64_t)v7, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
    v22 = swift_getEnumCaseMultiPayload(v7, v5);
    if (v22)
    {
      if (v22 == 1)
      {

        v23 = sub_1004B804C(&qword_1013FEFB0);
        sub_1004CB800((uint64_t)v7 + *(int *)(v23 + 48), &qword_1013EE2E0);
        v24 = 1;
      }
      else
      {
        sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
        v24 = 2;
      }
    }
    else
    {

      v25 = sub_1004B804C(&qword_1013FEFB0);
      sub_1004CB800((uint64_t)v7 + *(int *)(v25 + 48), &qword_1013EE2E0);
      v24 = 0;
    }
    swift_beginAccess(v18, v34, 33, 0);
    v26 = sub_1008436B4(v24);
    if ((v27 & 1) != 0)
    {
      v28 = v26;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v18);
      v30 = *v18;
      v33 = *v18;
      *v18 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_100833060();
        v30 = v33;
      }
      v31 = *(void **)(*(_QWORD *)(v30 + 56) + 8 * v28);
      sub_10051CDB0(v28, v30);
      v32 = *v18;
      *v18 = v30;

      swift_bridgeObjectRelease(v32);
    }
    swift_endAccess(v34);
    sub_10099DE18(a3);

  }
}

void sub_10099BC60(uint64_t a1)
{
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  char *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  void *v18;
  _QWORD aBlock[5];
  uint64_t v20;

  ObjectType = swift_getObjectType(v1);
  v4 = type metadata accessor for CRLFollowViewportState(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  *(_QWORD *)&v7 = __chkstk_darwin(v4).n128_u64[0];
  v8 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_viewportChangeDebounceTimer;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_viewportChangeDebounceTimer), "invalidate", v7);
  v10 = (void *)objc_opt_self(NSTimer);
  v11 = swift_allocObject(&unk_10128D310, 24, 7);
  swift_unknownObjectWeakInit(v11 + 16, v1);
  sub_1004B8460(a1, (uint64_t)v8, type metadata accessor for CRLFollowViewportState);
  v12 = *(unsigned __int8 *)(v5 + 80);
  v13 = (v12 + 24) & ~v12;
  v14 = (v6 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  v15 = swift_allocObject(&unk_10128D388, v14 + 8, v12 | 7);
  *(_QWORD *)(v15 + 16) = v11;
  sub_1004B84E0((uint64_t)v8, v15 + v13, type metadata accessor for CRLFollowViewportState);
  *(_QWORD *)(v15 + v14) = ObjectType;
  aBlock[4] = sub_1009A3134;
  v20 = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1004C6194;
  aBlock[3] = &unk_10128D3A0;
  v16 = _Block_copy(aBlock);
  swift_release(v20);
  v17 = objc_msgSend(v10, "scheduledTimerWithTimeInterval:repeats:block:", 0, v16, 0.5);
  _Block_release(v16);
  v18 = *(void **)(v1 + v9);
  *(_QWORD *)(v1 + v9) = v17;

}

uint64_t sub_10099BE18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t result;
  char *v30;
  uint64_t v31;
  void *v32;
  void (*v33)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int (*v41)(uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  double v45;
  double v46;
  uint64_t v47;
  uint64_t v48;
  BOOL v49;
  uint64_t Strong;
  void *v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  void *v58;
  uint64_t v59;
  id v60;
  id v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  Swift::Int v66;
  Swift::Int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __n128 v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  _BYTE v83[24];
  char v84[32];

  v80 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb(0);
  v5 = *(_QWORD *)(v80 - 8);
  __chkstk_darwin(v80);
  v7 = (char *)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLFollowViewportState(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v75 = (uint64_t)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v74 = (uint64_t)&v73 - v12;
  v78 = sub_1004B804C(&qword_1013EE2E8);
  __chkstk_darwin(v78);
  v14 = (char *)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event(0);
  __chkstk_darwin(v79);
  v16 = (id *)((char *)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = sub_1004B804C(&qword_1013EE2E0);
  __chkstk_darwin(v17);
  v77 = (uint64_t)&v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v76 = (uint64_t)&v73 - v20;
  __chkstk_darwin(v21);
  v23 = (char *)&v73 - v22;
  __chkstk_darwin(v24);
  v82 = (uint64_t)&v73 - v25;
  __chkstk_darwin(v26);
  v28 = (char *)&v73 - v27;
  a2 += 16;
  swift_beginAccess(a2, v84, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a2);
  if (result)
  {
    v30 = (char *)result;
    v73 = v7;
    v31 = OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_viewportChangeDebounceTimer;
    objc_msgSend(*(id *)(result + OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_viewportChangeDebounceTimer), "invalidate");
    v32 = *(void **)&v30[v31];
    *(_QWORD *)&v30[v31] = 0;

    v81 = (char *)a3;
    sub_1004B8460(a3, (uint64_t)v28, type metadata accessor for CRLFollowViewportState);
    v33 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56);
    v33(v28, 0, 1, v8);
    v34 = (uint64_t)&v30[OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_mostRecentViewportState];
    swift_beginAccess(&v30[OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_mostRecentViewportState], v83, 33, 0);
    sub_100582338((uint64_t)v28, v34, &qword_1013EE2E0);
    swift_endAccess(v83);
    v35 = &v30[OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_historyBuffer];
    swift_beginAccess(&v30[OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_historyBuffer], v83, 0, 0);
    v36 = *(_QWORD *)(*(_QWORD *)v35 + 16);
    if (!v36)
      goto LABEL_36;
    sub_1004B8460(*(_QWORD *)v35+ *(int *)(v80 + 20)+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), (uint64_t)v16, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
    if (swift_getEnumCaseMultiPayload(v16, v79) > 1)
    {
      v39 = (uint64_t)v16;
      v38 = v82;
      sub_1004B84E0(v39, v82, type metadata accessor for CRLFollowViewportState);
      v33((char *)v38, 0, 1, v8);
    }
    else
    {

      v37 = (uint64_t)v16 + *(int *)(sub_1004B804C(&qword_1013FEFB0) + 48);
      v38 = v82;
      sub_1009A27D8(v37, v82);
    }
    sub_1004B8460((uint64_t)v81, (uint64_t)v23, type metadata accessor for CRLFollowViewportState);
    v33(v23, 0, 1, v8);
    v40 = (uint64_t)&v14[*(int *)(v78 + 48)];
    sub_1004CB7BC(v38, (uint64_t)v14, &qword_1013EE2E0);
    sub_1004CB7BC((uint64_t)v23, v40, &qword_1013EE2E0);
    v41 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    if (v41((uint64_t)v14, 1, v8) == 1)
    {
      sub_1004CB800((uint64_t)v23, &qword_1013EE2E0);
      if (v41(v40, 1, v8) == 1)
      {
        sub_1004CB800((uint64_t)v14, &qword_1013EE2E0);
LABEL_18:

        return sub_1004CB800(v82, &qword_1013EE2E0);
      }
    }
    else
    {
      v42 = v76;
      sub_1004CB7BC((uint64_t)v14, v76, &qword_1013EE2E0);
      if (v41(v40, 1, v8) != 1)
      {
        v48 = v74;
        sub_1004B84E0(v40, v74, type metadata accessor for CRLFollowViewportState);
        v49 = sub_100929BB8(v42, v48);
        sub_1004B84A4(v48, type metadata accessor for CRLFollowViewportState);
        sub_1004CB800((uint64_t)v23, &qword_1013EE2E0);
        sub_1004B84A4(v42, type metadata accessor for CRLFollowViewportState);
        v38 = v82;
        sub_1004CB800((uint64_t)v14, &qword_1013EE2E0);
        if (v49)
          goto LABEL_18;
LABEL_12:
        v43 = v77;
        sub_1004CB7BC(v38, v77, &qword_1013EE2E0);
        if (v41(v43, 1, v8) == 1)
        {
          sub_1004CB800(v43, &qword_1013EE2E0);
          goto LABEL_36;
        }
        v44 = v75;
        sub_1004B84E0(v43, v75, type metadata accessor for CRLFollowViewportState);
        v45 = vabds_f32(*(float *)(v44 + *(int *)(v8 + 24)), *(float *)&v81[*(int *)(v8 + 24)]);
        v46 = sub_10006108C(*(double *)(v44 + *(int *)(v8 + 28)), *(double *)(v44 + *(int *)(v8 + 28) + 8), *(double *)&v81[*(int *)(v8 + 28)], *(double *)&v81[*(int *)(v8 + 28) + 8]);
        if (v45 >= 0.1 || v46 >= 50.0)
        {
          Strong = swift_unknownObjectWeakLoadStrong(&v30[OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_followCoordinator]);
          if (!Strong)
          {
LABEL_35:
            sub_1004B84A4(v44, type metadata accessor for CRLFollowViewportState);
LABEL_36:
            v69 = (uint64_t)v73;
            v70 = (uint64_t)&v73[*(int *)(v80 + 20)];
            sub_1004B8460((uint64_t)v81, v70, type metadata accessor for CRLFollowViewportState);
            swift_storeEnumTagMultiPayload(v70, v79, 2);
            static Date.now.getter(v71);
            sub_10099B5B8(v69);
            sub_10099C678(v69);

            result = sub_1004B84A4(v69, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
            if (!v36)
              return result;
            return sub_1004CB800(v82, &qword_1013EE2E0);
          }
          v51 = (void *)Strong;
          v52 = objc_msgSend(*(id *)(Strong + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_interactiveCanvasControllers), "allObjects");
          v53 = sub_1004B8930(0, &qword_1013E4890, off_101229918);
          v54 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v52, v53);

          if ((unint64_t)v54 >> 62)
            goto LABEL_40;
          v55 = *(_QWORD *)((v54 & 0xFFFFFFFFFFFFF8) + 0x10);
          while (v55)
          {
            v78 = v54 & 0xC000000000000001;
            v56 = 4;
            while (1)
            {
              v57 = v78
                  ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v56 - 4, v54)
                  : *(id *)(v54 + 8 * v56);
              v58 = v57;
              v59 = v56 - 3;
              if (__OFADD__(v56 - 4, 1))
                break;
              v60 = objc_msgSend(v57, "canvas");
              v61 = objc_msgSend(v60, "allReps");

              v62 = sub_1004B8930(0, (unint64_t *)&qword_1013E56B0, off_101229828);
              v63 = sub_1004F619C();
              v64 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v61, v62, v63);

              __chkstk_darwin(v65);
              *(&v73 - 2) = v81;
              v66 = sub_1009A0FF0((uint64_t (*)(id *))sub_1009A3718, (uint64_t)(&v73 - 4), v64);
              v67 = v66;
              if ((v66 & 0xC000000000000001) != 0)
                v68 = __CocoaSet.count.getter(v66);
              else
                v68 = *(_QWORD *)(v66 + 16);

              swift_release(v67);
              if (v68)
              {
                swift_bridgeObjectRelease(v54);
                v44 = v75;
                goto LABEL_35;
              }
              ++v56;
              if (v59 == v55)
                goto LABEL_32;
            }
            __break(1u);
LABEL_40:
            if (v54 < 0)
              v72 = v54;
            else
              v72 = v54 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v54);
            v55 = _CocoaArrayWrapper.endIndex.getter(v72);
            swift_bridgeObjectRelease(v54);
          }
LABEL_32:
          swift_bridgeObjectRelease(v54);

          v47 = v75;
        }
        else
        {

          v47 = v44;
        }
        sub_1004B84A4(v47, type metadata accessor for CRLFollowViewportState);
        return sub_1004CB800(v82, &qword_1013EE2E0);
      }
      sub_1004CB800((uint64_t)v23, &qword_1013EE2E0);
      sub_1004B84A4(v42, type metadata accessor for CRLFollowViewportState);
    }
    sub_1004CB800((uint64_t)v14, &qword_1013EE2E8);
    goto LABEL_12;
  }
  return result;
}

uint64_t sub_10099C678(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  id *v11;
  uint64_t v12;
  uint64_t v13;
  id *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD aBlock[5];
  uint64_t v43;
  _BYTE v44[24];

  v2 = v1;
  ObjectType = swift_getObjectType(v1);
  v5 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event(0);
  __chkstk_darwin(v9);
  v11 = (id *)((char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v12);
  v14 = (id *)((char *)&v39 - v13);
  v15 = *(int *)(v5 + 20);
  v40 = a1;
  v16 = a1 + v15;
  sub_1004B8460(v16, (uint64_t)&v39 - v13, v17);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v14, v9);
  v41 = ObjectType;
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {

      v19 = sub_1004B804C(&qword_1013FEFB0);
      sub_1004CB800((uint64_t)v14 + *(int *)(v19 + 48), &qword_1013EE2E0);
      v20 = 1;
    }
    else
    {
      sub_1004B84A4((uint64_t)v14, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
      v20 = 2;
    }
  }
  else
  {

    v21 = sub_1004B804C(&qword_1013FEFB0);
    sub_1004CB800((uint64_t)v14 + *(int *)(v21 + 48), &qword_1013EE2E0);
    v20 = 0;
  }
  v22 = (uint64_t *)(v2 + OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_historyLoggingTimers);
  swift_beginAccess(v2 + OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_historyLoggingTimers, v44, 0, 0);
  v23 = *v22;
  if (*(_QWORD *)(*v22 + 16))
  {
    v24 = sub_1008436B4(v20);
    if ((v25 & 1) != 0)
      objc_msgSend(*(id *)(*(_QWORD *)(v23 + 56) + 8 * v24), "invalidate");
  }
  sub_1004B8460(v16, (uint64_t)v11, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
  v26 = swift_getEnumCaseMultiPayload(v11, v9);
  if (v26)
  {
    if (v26 == 1)
    {

      v27 = sub_1004B804C(&qword_1013FEFB0);
      sub_1004CB800((uint64_t)v11 + *(int *)(v27 + 48), &qword_1013EE2E0);
      v28 = 1;
    }
    else
    {
      sub_1004B84A4((uint64_t)v11, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
      v28 = 2;
    }
  }
  else
  {

    v29 = sub_1004B804C(&qword_1013FEFB0);
    sub_1004CB800((uint64_t)v11 + *(int *)(v29 + 48), &qword_1013EE2E0);
    v28 = 0;
  }
  v30 = (void *)objc_opt_self(NSTimer);
  v31 = swift_allocObject(&unk_10128D310, 24, 7);
  swift_unknownObjectWeakInit(v31 + 16, v2);
  sub_1004B8460(v40, (uint64_t)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
  v32 = *(unsigned __int8 *)(v6 + 80);
  v33 = (v32 + 24) & ~v32;
  v34 = (v7 + v33 + 7) & 0xFFFFFFFFFFFFFFF8;
  v35 = swift_allocObject(&unk_10128D338, v34 + 8, v32 | 7);
  *(_QWORD *)(v35 + 16) = v31;
  sub_1004B84E0((uint64_t)v8, v35 + v33, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
  *(_QWORD *)(v35 + v34) = v41;
  aBlock[4] = sub_1009A3054;
  v43 = v35;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1004C6194;
  aBlock[3] = &unk_10128D350;
  v36 = _Block_copy(aBlock);
  swift_release(v43);
  v37 = objc_msgSend(v30, "scheduledTimerWithTimeInterval:repeats:block:", 0, v36, 1.0);
  _Block_release(v36);
  swift_beginAccess(v22, aBlock, 33, 0);
  sub_10083EB98((uint64_t)v37, v28);
  return swift_endAccess(aBlock);
}

void sub_10099CA34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  id *v10;
  uint64_t v11;
  uint64_t v12;
  id *v13;
  uint64_t Strong;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  unint64_t v32;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE v52[24];
  char v53[24];
  char v54[24];

  v5 = sub_1004B804C(&qword_1013FF108);
  __chkstk_darwin(v5);
  v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event(0);
  __chkstk_darwin(v8);
  v10 = (id *)((char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  v13 = (id *)((char *)&v50 - v12);
  a2 += 16;
  swift_beginAccess(a2, v54, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (!Strong)
    return;
  v15 = (char *)Strong;
  v16 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb(0);
  v17 = a3 + *(int *)(v16 + 20);
  sub_1004B8460(v17, (uint64_t)v13, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v13, v8);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {

      v19 = sub_1004B804C(&qword_1013FEFB0);
      sub_1004CB800((uint64_t)v13 + *(int *)(v19 + 48), &qword_1013EE2E0);
      v20 = 1;
    }
    else
    {
      sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
      v20 = 2;
    }
  }
  else
  {

    v21 = sub_1004B804C(&qword_1013FEFB0);
    sub_1004CB800((uint64_t)v13 + *(int *)(v21 + 48), &qword_1013EE2E0);
    v20 = 0;
  }
  v22 = (uint64_t *)&v15[OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_historyLoggingTimers];
  swift_beginAccess(&v15[OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_historyLoggingTimers], v53, 0, 0);
  v23 = *v22;
  if (*(_QWORD *)(*v22 + 16))
  {
    v24 = sub_1008436B4(v20);
    if ((v25 & 1) != 0)
      objc_msgSend(*(id *)(*(_QWORD *)(v23 + 56) + 8 * v24), "invalidate");
  }
  sub_1004B8460(v17, (uint64_t)v10, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
  v26 = swift_getEnumCaseMultiPayload(v10, v8);
  if (v26)
  {
    if (v26 == 1)
    {

      v27 = sub_1004B804C(&qword_1013FEFB0);
      sub_1004CB800((uint64_t)v10 + *(int *)(v27 + 48), &qword_1013EE2E0);
      v28 = 1;
    }
    else
    {
      sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
      v28 = 2;
    }
  }
  else
  {

    v29 = sub_1004B804C(&qword_1013FEFB0);
    sub_1004CB800((uint64_t)v10 + *(int *)(v29 + 48), &qword_1013EE2E0);
    v28 = 0;
  }
  swift_beginAccess(v22, v52, 33, 0);
  v30 = sub_1008436B4(v28);
  if ((v31 & 1) != 0)
  {
    v32 = v30;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v22);
    v34 = *v22;
    v51 = *v22;
    *v22 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_100833060();
      v34 = v51;
    }
    v35 = *(void **)(*(_QWORD *)(v34 + 56) + 8 * v32);
    sub_10051CDB0(v32, v34);
    v36 = *v22;
    *v22 = v34;

    swift_bridgeObjectRelease(v36);
  }
  v37 = swift_endAccess(v52);
  __chkstk_darwin(v37);
  *(&v50 - 2) = a3;
  v38 = (uint64_t *)&v15[OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_historyBuffer];
  swift_beginAccess(&v15[OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_historyBuffer], v52, 33, 0);
  v39 = (uint64_t)v38;
  sub_1009A1928((uint64_t (*)(unint64_t, __n128))sub_1009A3080, (uint64_t)(&v50 - 4), type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb, (uint64_t (*)(uint64_t))sub_100D150D8);
  v41 = *(_QWORD *)(*v38 + 16);
  if (v41 < v40)
  {
    __break(1u);
  }
  else
  {
    sub_100CFEBC0(v40, v41);
    swift_endAccess(v52);
    sub_10099D508();
    swift_beginAccess(v38, v52, 33, 0);
    sub_1004B8460(a3, (uint64_t)v7, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
    sub_100CFC450(0, 0, (uint64_t)v7);
    swift_endAccess(v52);
    v39 = *v38;
    if (*(uint64_t *)(*v38 + 16) >= 6)
      a3 = 6;
    else
      a3 = *(_QWORD *)(*v38 + 16);
    v42 = type metadata accessor for __ContiguousArrayStorageBase(0);
    swift_bridgeObjectRetain(v39);
    v44 = swift_unknownObjectRetain_n(v43, 2);
    v45 = (_QWORD *)swift_dynamicCastClass(v44, v42);
    if (!v45)
    {
      swift_bridgeObjectRelease(v39);
      v45 = _swiftEmptyArrayStorage;
    }
    v46 = v45[2];
    swift_release(v45);
    if (v46 == a3)
    {
      v47 = (_QWORD *)swift_dynamicCastClass(v39, v42);
      if (!v47)
      {
        swift_bridgeObjectRelease(v39);
        v47 = _swiftEmptyArrayStorage;
      }
      goto LABEL_28;
    }
  }
  swift_bridgeObjectRelease(v39);
  v49 = *(unsigned __int8 *)(*(_QWORD *)(v16 - 8) + 80);
  v47 = sub_100600098(v39, v39 + ((v49 + 32) & ~v49), 0, (2 * a3) | 1);
LABEL_28:
  swift_bridgeObjectRelease(v39);
  v48 = *v38;
  *v38 = (uint64_t)v47;
  swift_bridgeObjectRelease(v48);
  if ((objc_msgSend((id)objc_opt_self(CRLAccessibility), "isVoiceOverOrSwitchControlEnabled") & 1) != 0)sub_100998FC8();
  else
    sub_100999494();

}

BOOL sub_10099CF34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void **v30;
  void **v31;
  int EnumCaseMultiPayload;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  double v37;
  CGFloat v38;
  double v39;
  CGFloat v40;
  double v41;
  CGFloat v42;
  double v43;
  CGFloat v44;
  double v45;
  CGFloat v46;
  double v47;
  CGFloat v48;
  double v49;
  CGFloat v50;
  double v51;
  CGFloat v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unsigned int (*v59)(uint64_t, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  void **v72;
  CGRect v73;
  CGRect v74;

  v68 = sub_1004B804C(&qword_1013EE2E8);
  __chkstk_darwin(v68);
  v67 = (uint64_t)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = sub_1004B804C(&qword_1013FF0F8);
  __chkstk_darwin(v71);
  v72 = (void **)((char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v70 = type metadata accessor for CRLFollowViewportState(0);
  v66 = *(_QWORD *)(v70 - 8);
  __chkstk_darwin(v70);
  v64 = (uint64_t)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v69 = (char *)&v63 - v8;
  v9 = sub_1004B804C(&qword_1013EE2E0);
  __chkstk_darwin(v9);
  v65 = (uint64_t)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v63 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)&v63 - v15;
  v17 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event(0);
  __chkstk_darwin(v17);
  v19 = (char *)&v63 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v63 - v21;
  v23 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb(0);
  v24 = a1 + *(int *)(v23 + 20);
  sub_1004B8460(v24, (uint64_t)v22, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
  v25 = a2 + *(int *)(v23 + 20);
  sub_1004B8460(v25, (uint64_t)v19, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
  LOBYTE(v23) = sub_1009A1F48((uint64_t)v22, (uint64_t)v19);
  sub_1004B84A4((uint64_t)v19, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
  sub_1004B84A4((uint64_t)v22, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
  if ((v23 & 1) == 0)
  {
    v27 = (uint64_t)v13;
    v63 = v16;
    v29 = (uint64_t)v69;
    v28 = v70;
    v30 = v72;
    v31 = (void **)((char *)v72 + *(int *)(v71 + 48));
    sub_1004B8460(v25, (uint64_t)v72, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
    sub_1004B8460(v24, (uint64_t)v31, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v30, v17);
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload != 1)
      {
        sub_1004B84A4((uint64_t)v30, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
        sub_1004B84A4((uint64_t)v31, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
        return 0;
      }
      v33 = *v30;
      v34 = *(int *)(sub_1004B804C(&qword_1013FEFB0) + 48);
      v35 = (uint64_t)v30 + v34;
      if (swift_getEnumCaseMultiPayload(v31, v17) < 2)
      {
LABEL_6:
        v36 = *v31;
        sub_1004CB800((uint64_t)v31 + v34, &qword_1013EE2E0);
        sub_1004CB800(v35, &qword_1013EE2E0);
        objc_msgSend(v33, "frameInUnscaledCanvas");
        v38 = v37;
        v40 = v39;
        v42 = v41;
        v44 = v43;

        objc_msgSend(v36, "frameInUnscaledCanvas");
        v46 = v45;
        v48 = v47;
        v50 = v49;
        v52 = v51;

        v73.origin.x = v38;
        v73.origin.y = v40;
        v73.size.width = v42;
        v73.size.height = v44;
        v74.origin.x = v46;
        v74.origin.y = v48;
        v74.size.width = v50;
        v74.size.height = v52;
        return CGRectEqualToRect(v73, v74);
      }
    }
    else
    {
      v33 = *v30;
      v34 = *(int *)(sub_1004B804C(&qword_1013FEFB0) + 48);
      v35 = (uint64_t)v30 + v34;
      if (swift_getEnumCaseMultiPayload(v31, v17) <= 1)
        goto LABEL_6;
    }

    v53 = (uint64_t)v63;
    sub_1009A27D8(v35, (uint64_t)v63);
    sub_1004B84E0((uint64_t)v31, v29, type metadata accessor for CRLFollowViewportState);
    v54 = v27;
    sub_1004B84E0(v29, v27, type metadata accessor for CRLFollowViewportState);
    v55 = v66;
    v56 = v28;
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v66 + 56))(v54, 0, 1, v28);
    v57 = v67;
    v58 = v67 + *(int *)(v68 + 48);
    sub_1004CB7BC(v53, v67, &qword_1013EE2E0);
    sub_1004CB7BC(v54, v58, &qword_1013EE2E0);
    v59 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48);
    if (v59(v57, 1, v56) == 1)
    {
      sub_1004CB800(v54, &qword_1013EE2E0);
      sub_1004CB800(v53, &qword_1013EE2E0);
      if (v59(v58, 1, v56) == 1)
      {
        sub_1004CB800(v57, &qword_1013EE2E0);
        return 1;
      }
    }
    else
    {
      v60 = v65;
      sub_1004CB7BC(v57, v65, &qword_1013EE2E0);
      if (v59(v58, 1, v56) != 1)
      {
        v62 = v64;
        sub_1004B84E0(v58, v64, type metadata accessor for CRLFollowViewportState);
        v26 = sub_100929BB8(v60, v62);
        sub_1004B84A4(v62, type metadata accessor for CRLFollowViewportState);
        sub_1004CB800(v54, &qword_1013EE2E0);
        sub_1004CB800((uint64_t)v63, &qword_1013EE2E0);
        sub_1004B84A4(v60, type metadata accessor for CRLFollowViewportState);
        sub_1004CB800(v57, &qword_1013EE2E0);
        return v26;
      }
      sub_1004CB800(v54, &qword_1013EE2E0);
      sub_1004CB800((uint64_t)v63, &qword_1013EE2E0);
      sub_1004B84A4(v60, type metadata accessor for CRLFollowViewportState);
    }
    sub_1004CB800(v57, &qword_1013EE2E8);
    return 0;
  }
  return 1;
}

void sub_10099D508()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void **v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  unint64_t *v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  double v37;
  unint64_t v38;
  unint64_t v39;
  char isUniquelyReferenced_nonNull_native;
  BOOL v41;
  unint64_t *v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t (*v47)(uint64_t);
  void *v48;
  uint64_t v49;
  id v50;
  void *v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t (*v54)(uint64_t);
  uint64_t v55;
  char *v56;
  id v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  void **v68;
  void **v69;
  void *v70;
  uint64_t v71;
  id v72;
  void *v73;
  id v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void **v87;
  void **v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  unint64_t *v94;
  _BYTE v95[24];

  v89 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event(0);
  v1 = __chkstk_darwin(v89);
  v87 = (void **)((char *)&v82 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v1);
  v4 = (void **)((char *)&v82 - v3);
  v5 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v85 = (uint64_t)&v82 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v86 = (uint64_t)&v82 - v10;
  v11 = __chkstk_darwin(v9);
  v91 = (uint64_t)&v82 - v12;
  v13 = __chkstk_darwin(v11);
  v93 = (uint64_t)&v82 - v14;
  v15 = __chkstk_darwin(v13);
  v84 = (unint64_t)&v82 - v16;
  v17 = __chkstk_darwin(v15);
  v19 = (char *)&v82 - v18;
  __chkstk_darwin(v17);
  v21 = (char *)&v82 - v20;
  v22 = (unint64_t *)(v0 + OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_historyBuffer);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_historyBuffer, v95, 33, 0);
  v94 = v22;
  v23 = *v22;
  v24 = *(_QWORD *)(*v22 + 16);
  v90 = v5;
  v92 = v19;
  if (!v24)
  {
    v30 = 0;
    v31 = v89;
    goto LABEL_28;
  }
  v25 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v82 = v6;
  v26 = *(_QWORD *)(v6 + 72);
  swift_bridgeObjectRetain(v23);
  v27 = 0;
  v83 = v25;
  while (1)
  {
    v28 = sub_1004B8460(v23 + v25, (uint64_t)v21, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
    v29 = Date.timeIntervalSinceNow.getter(v28);
    sub_1004B84A4((uint64_t)v21, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
    if (v29 < -300.0)
      break;
    ++v27;
    v25 += v26;
    if (v24 == v27)
    {
      swift_bridgeObjectRelease(v23);
      v30 = *(_QWORD *)(*v94 + 16);
LABEL_10:
      v5 = v90;
      goto LABEL_27;
    }
  }
  swift_bridgeObjectRelease(v23);
  v30 = v27 + 1;
  if (__OFADD__(v27, 1))
    goto LABEL_85;
  v32 = *v94;
  v33 = *(_QWORD *)(*v94 + 16);
  if (v30 == v33)
  {
    v24 = v27;
    goto LABEL_10;
  }
  v34 = v26 + v25;
  v35 = v27 + 1;
  v5 = v90;
  do
  {
    if (v35 >= v33)
    {
      __break(1u);
LABEL_68:
      __break(1u);
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
LABEL_71:
      __break(1u);
LABEL_72:
      __break(1u);
LABEL_73:
      __break(1u);
LABEL_74:
      __break(1u);
LABEL_75:
      __break(1u);
LABEL_76:
      __break(1u);
LABEL_77:
      __break(1u);
LABEL_78:
      __break(1u);
LABEL_79:
      __break(1u);
LABEL_80:
      __break(1u);
LABEL_81:
      __break(1u);
LABEL_82:
      __break(1u);
      goto LABEL_83;
    }
    v36 = sub_1004B8460(v32 + v34, (uint64_t)v21, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
    v37 = Date.timeIntervalSinceNow.getter(v36);
    sub_1004B84A4((uint64_t)v21, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
    if (v37 >= -300.0)
    {
      if (v35 != v27)
      {
        if ((v27 & 0x8000000000000000) != 0)
          goto LABEL_78;
        v38 = *v94;
        v39 = *(_QWORD *)(*v94 + 16);
        if (v27 >= v39)
          goto LABEL_79;
        sub_1004B8460(v38 + v83 + v27 * v26, v84, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
        if (v35 >= v39)
          goto LABEL_80;
        sub_1004B8460(v38 + v34, v93, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v38);
        *v94 = v38;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v38 = sub_100D150D8(v38);
          *v94 = v38;
        }
        v5 = v90;
        if (v27 >= *(_QWORD *)(v38 + 16))
          goto LABEL_81;
        sub_100836E6C(v93, v38 + v83 + v27 * v26, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
        if (v35 >= *(_QWORD *)(*v94 + 16))
          goto LABEL_82;
        sub_100836E6C(v84, *v94 + v34, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
      }
      v41 = __OFADD__(v27++, 1);
      if (v41)
        goto LABEL_72;
    }
    v30 = v35 + 1;
    if (__OFADD__(v35, 1))
      goto LABEL_68;
    v32 = *v94;
    v33 = *(_QWORD *)(*v94 + 16);
    ++v35;
    v34 += v26;
  }
  while (v30 != v33);
  v24 = v27;
LABEL_27:
  v31 = v89;
  v19 = v92;
  v6 = v82;
  if (v30 < v24)
  {
LABEL_83:
    __break(1u);
    goto LABEL_84;
  }
LABEL_28:
  v42 = v94;
  sub_100CFEBC0(v24, v30);
  v43 = *v42;
  v44 = *(_QWORD *)(*v42 + 16);
  if (!v44)
  {
    v63 = 0;
    goto LABEL_43;
  }
  v45 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v93 = *(_QWORD *)(v6 + 72);
  swift_bridgeObjectRetain(v43);
  v46 = 0;
  v47 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb;
  v84 = v45;
  v88 = v4;
  while (2)
  {
    sub_1004B8460(v43 + v45, (uint64_t)v19, v47);
    sub_1004B8460((uint64_t)&v19[*(int *)(v5 + 20)], (uint64_t)v4, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
    if (swift_getEnumCaseMultiPayload(v4, v31) >= 2)
    {
      sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
      sub_1004B84A4((uint64_t)v19, v47);
      goto LABEL_31;
    }
    v48 = *v4;
    v49 = sub_1004B804C(&qword_1013FEFB0);
    sub_1004CB800((uint64_t)v4 + *(int *)(v49 + 48), &qword_1013EE2E0);
    v50 = objc_msgSend(v48, "canvas");
    if (v50)
    {
      v51 = v50;
      v52 = v44;
      v53 = v43;
      v54 = v47;
      v55 = v5;
      v56 = v19;
      v57 = objc_msgSend(v50, "allReps");

      v58 = sub_1004B8930(0, (unint64_t *)&qword_1013E56B0, off_101229828);
      v59 = sub_1004F619C();
      v60 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v57, v58, v59);

      LOBYTE(v57) = sub_100623088(v48, v60);
      swift_bridgeObjectRelease(v60);
      v61 = (uint64_t)v56;
      v5 = v55;
      v47 = v54;
      v43 = v53;
      v44 = v52;
      v4 = v88;
      sub_1004B84A4(v61, v47);
      v31 = v89;
      v62 = v91;
      if ((v57 & 1) == 0)
        goto LABEL_39;
LABEL_31:
      ++v46;
      v19 = v92;
      v45 += v93;
      if (v44 == v46)
      {
        swift_bridgeObjectRelease(v43);
        v63 = *(_QWORD *)(*v94 + 16);
        goto LABEL_42;
      }
      continue;
    }
    break;
  }

  sub_1004B84A4((uint64_t)v19, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
  v31 = v89;
  v62 = v91;
LABEL_39:
  swift_bridgeObjectRelease(v43);
  v63 = v46 + 1;
  if (__OFADD__(v46, 1))
    goto LABEL_86;
  v64 = *v94;
  v65 = *(_QWORD *)(*v94 + 16);
  if (v63 != v65)
  {
    v66 = v93 + v45;
    v67 = v46 + 1;
    v68 = v87;
    while (1)
    {
      if (v67 >= v65)
        goto LABEL_69;
      sub_1004B8460(v64 + v66, v62, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
      sub_1004B8460(v62 + *(int *)(v90 + 20), (uint64_t)v68, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
      if (swift_getEnumCaseMultiPayload(v68, v31) >= 2)
        break;
      v69 = v68;
      v70 = *v68;
      v71 = sub_1004B804C(&qword_1013FEFB0);
      sub_1004CB800((uint64_t)v69 + *(int *)(v71 + 48), &qword_1013EE2E0);
      v72 = objc_msgSend(v70, "canvas");
      if (v72)
      {
        v73 = v72;
        v74 = objc_msgSend(v72, "allReps");

        v75 = sub_1004B8930(0, (unint64_t *)&qword_1013E56B0, off_101229828);
        v76 = sub_1004F619C();
        v77 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v74, v75, v76);

        LOBYTE(v74) = sub_100623088(v70, v77);
        swift_bridgeObjectRelease(v77);
        v62 = v91;
        sub_1004B84A4(v91, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
        v68 = v87;
        if ((v74 & 1) != 0)
        {
          if (v67 == v46)
            goto LABEL_60;
LABEL_52:
          if ((v46 & 0x8000000000000000) != 0)
            goto LABEL_73;
          v78 = *v94;
          v79 = *(_QWORD *)(*v94 + 16);
          if (v46 >= v79)
            goto LABEL_74;
          v80 = v46 * v93;
          sub_1004B8460(v78 + v84 + v46 * v93, v86, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
          if (v67 >= v79)
            goto LABEL_75;
          sub_1004B8460(v78 + v66, v85, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
          v81 = swift_isUniquelyReferenced_nonNull_native(v78);
          *v94 = v78;
          if ((v81 & 1) == 0)
          {
            v78 = sub_100D150D8(v78);
            *v94 = v78;
          }
          v62 = v91;
          if (v46 >= *(_QWORD *)(v78 + 16))
            goto LABEL_76;
          sub_100836E6C(v85, v78 + v84 + v80, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
          if (v67 >= *(_QWORD *)(*v94 + 16))
            goto LABEL_77;
          sub_100836E6C(v86, *v94 + v66, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
          v68 = v87;
LABEL_60:
          v41 = __OFADD__(v46++, 1);
          if (v41)
            goto LABEL_71;
        }
        v63 = v67 + 1;
        if (__OFADD__(v67, 1))
          goto LABEL_70;
        goto LABEL_62;
      }

      v62 = v91;
      sub_1004B84A4(v91, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
      v68 = v87;
      v63 = v67 + 1;
      if (__OFADD__(v67, 1))
        goto LABEL_70;
LABEL_62:
      v64 = *v94;
      v65 = *(_QWORD *)(*v94 + 16);
      ++v67;
      v66 += v93;
      if (v63 == v65)
        goto LABEL_41;
    }
    sub_1004B84A4((uint64_t)v68, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
    sub_1004B84A4(v62, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
    if (v67 != v46)
      goto LABEL_52;
    goto LABEL_60;
  }
LABEL_41:
  v44 = v46;
LABEL_42:
  if (v63 >= v44)
  {
LABEL_43:
    sub_100CFEBC0(v44, v63);
    swift_endAccess(v95);
    return;
  }
LABEL_84:
  __break(1u);
LABEL_85:
  __break(1u);
LABEL_86:
  __break(1u);
}

void sub_10099DE18(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void **v18;
  uint64_t Strong;
  void *v20;
  uint64_t v21;
  int EnumCaseMultiPayload;
  void *v23;
  uint64_t v24;
  id v25;
  NSString v26;
  NSString v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  unsigned __int8 v32;
  id v33;
  NSString v34;
  NSString v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  NSString v47;
  NSString v48;
  id v49;
  uint64_t v50;
  void *v51;
  unint64_t v52;
  uint64_t v53;
  char *v54;
  void *v55;
  Class isa;
  id v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  NSString v67;
  uint64_t v68;
  void *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  _BYTE v73[24];

  v3 = sub_1004B804C(&qword_1013F4270);
  __chkstk_darwin(v3);
  v5 = (char *)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for PersonNameComponents(0);
  v7 = *(_QWORD *)(v6 - 8);
  v71 = v6;
  v72 = v7;
  __chkstk_darwin(v6);
  v70 = (char *)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C(&qword_1013EE2E0);
  __chkstk_darwin(v9);
  v11 = (char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for CRLFollowViewportState(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event(0);
  __chkstk_darwin(v16);
  v18 = (void **)((char *)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  Strong = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_lastFollowedParticipant]);
  if (Strong)
  {
    v20 = (void *)Strong;
    v21 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb(0);
    sub_1004B8460(a1 + *(int *)(v21 + 20), (uint64_t)v18, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v18, v16);
    v69 = v1;
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload != 1)
      {
        sub_1004B84E0((uint64_t)v18, (uint64_t)v15, type metadata accessor for CRLFollowViewportState);
        v46 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v47 = String._bridgeToObjectiveC()();
        v48 = String._bridgeToObjectiveC()();
        v49 = objc_msgSend(v46, "localizedStringForKey:value:table:", v47, v48, 0);

        v68 = static String._unconditionallyBridgeFromObjectiveC(_:)(v49);
        v30 = v50;

        v51 = v69;
        v38 = sub_10099E494((uint64_t)v15);
        v40 = v52;
        sub_1004B8460((uint64_t)v15, (uint64_t)v11, type metadata accessor for CRLFollowViewportState);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
        v53 = (uint64_t)v51
            + OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_mostRecentAnnouncedViewportState;
        swift_beginAccess(v53, v73, 33, 0);
        sub_100582338((uint64_t)v11, v53, &qword_1013EE2E0);
        swift_endAccess(v73);
        sub_1004B84A4((uint64_t)v15, type metadata accessor for CRLFollowViewportState);
        v41 = v72;
        if (v40)
          goto LABEL_7;
        goto LABEL_13;
      }
      v23 = *v18;
      v24 = (uint64_t)v18 + *(int *)(sub_1004B804C(&qword_1013FEFB0) + 48);
      v25 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v26 = String._bridgeToObjectiveC()();
      v27 = String._bridgeToObjectiveC()();
      v28 = objc_msgSend(v25, "localizedStringForKey:value:table:", v26, v27, 0);

      v68 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
      v30 = v29;

      v31 = v23;
      v32 = 0;
    }
    else
    {
      v23 = *v18;
      v24 = (uint64_t)v18 + *(int *)(sub_1004B804C(&qword_1013FEFB0) + 48);
      v33 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v34 = String._bridgeToObjectiveC()();
      v35 = String._bridgeToObjectiveC()();
      v36 = objc_msgSend(v33, "localizedStringForKey:value:table:", v34, v35, 0);

      v68 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
      v30 = v37;

      v31 = v23;
      v32 = 1;
    }
    v38 = sub_1004D1C54(v31, v32);
    v40 = v39;

    sub_1004CB800(v24, &qword_1013EE2E0);
    v41 = v72;
    if (v40)
    {
LABEL_7:
      v42 = HIBYTE(v40) & 0xF;
      if ((v40 & 0x2000000000000000) == 0)
        v42 = v38 & 0xFFFFFFFFFFFFLL;
      if (v42)
      {
        v43 = sub_1004B804C((uint64_t *)&unk_1013E0180);
        v44 = swift_allocObject(v43, 112, 7);
        *(_OWORD *)(v44 + 16) = xmmword_100EF5A10;
        sub_10063ABC4((uint64_t)v5);
        v45 = v71;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v5, 1, v71) == 1)
        {
          sub_1004CB800((uint64_t)v5, &qword_1013F4270);
        }
        else
        {
          v54 = v70;
          (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v70, v5, v45);
          v55 = (void *)objc_opt_self(NSPersonNameComponentsFormatter);
          isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
          v57 = objc_msgSend(v55, "localizedStringFromPersonNameComponents:style:options:", isa, 1, 0);

          v58 = static String._unconditionallyBridgeFromObjectiveC(_:)(v57);
          v60 = v59;

          v61 = v41;
          if ((v60 & 0x2000000000000000) != 0)
            v62 = HIBYTE(v60) & 0xF;
          else
            v62 = v58 & 0xFFFFFFFFFFFFLL;
          (*(void (**)(char *, uint64_t))(v61 + 8))(v54, v71);
          if (v62)
            goto LABEL_22;
          swift_bridgeObjectRelease(v60);
        }
        v58 = sub_10063B4E0();
        v60 = v63;
LABEL_22:
        *(_QWORD *)(v44 + 56) = &type metadata for String;
        v64 = sub_1004CFC2C();
        *(_QWORD *)(v44 + 32) = v58;
        *(_QWORD *)(v44 + 40) = v60;
        *(_QWORD *)(v44 + 96) = &type metadata for String;
        *(_QWORD *)(v44 + 104) = v64;
        *(_QWORD *)(v44 + 64) = v64;
        *(_QWORD *)(v44 + 72) = v38;
        *(_QWORD *)(v44 + 80) = v40;
        static String.localizedStringWithFormat(_:_:)(v68, v30, v44);
        v66 = v65;
        swift_bridgeObjectRelease(v30);
        swift_bridgeObjectRelease(v44);
        v67 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v66);
        CRLAccessibilityPostAnnouncementNotification(v69, v67);

        return;
      }

      swift_bridgeObjectRelease(v40);
LABEL_15:
      swift_bridgeObjectRelease(v30);
      return;
    }
LABEL_13:

    goto LABEL_15;
  }
}

uint64_t sub_10099E494(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t Strong;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  double *v15;
  CGFloat v16;
  CGFloat v17;
  CGFloat v18;
  CGFloat v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  float v30;
  uint64_t v31;
  id v32;
  NSString v33;
  NSString v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t result;
  float v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  float v47;
  uint64_t v48;
  uint64_t inited;
  uint64_t v50;
  uint64_t v51;
  _QWORD v52[8];
  _BYTE v53[32];

  v2 = v1;
  v4 = sub_1004B804C(&qword_1013EE2E0);
  __chkstk_darwin(v4);
  v6 = (char *)v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_followCoordinator);
  v8 = (void *)Strong;
  if (!Strong)
    return 0;
  v9 = objc_msgSend(*(id *)(Strong + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_interactiveCanvasControllers), "allObjects");
  v10 = sub_1004B8930(0, &qword_1013E4890, off_101229918);
  v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v9, v10);

  __chkstk_darwin(v12);
  v52[-2] = v2;
  v52[-1] = a1;
  v13 = sub_100C9D0C0((uint64_t (*)(id *))sub_1009A2844, (uint64_t)&v52[-4], v11);
  swift_bridgeObjectRelease(v11);
  if (!v13)
    return 0;
  type metadata accessor for CRLAccessibilitySceneDescriptionHelper();
  v14 = type metadata accessor for CRLFollowViewportState(0);
  v15 = (double *)(a1 + *(int *)(v14 + 28));
  v16 = *v15;
  v17 = v15[1];
  v18 = v15[2];
  v19 = v15[3];
  v20 = v13;
  v21 = objc_msgSend(v20, "canvas");
  v22 = objc_msgSend(v21, "allReps");

  v23 = sub_1004B8930(0, (unint64_t *)&qword_1013E56B0, off_101229828);
  v24 = sub_1004F619C();
  v25 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v22, v23, v24);

  v26 = sub_1004CFD10(v25, 1u, v16, v17, v18, v19);
  v28 = v27;
  swift_bridgeObjectRelease(v25);
  v29 = *(int *)(v14 + 24);
  v30 = *(float *)(a1 + v29);
  v31 = v2 + OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_mostRecentAnnouncedViewportState;
  swift_beginAccess(v31, v53, 0, 0);
  sub_1004CB7BC(v31, (uint64_t)v6, &qword_1013EE2E0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v6, 1, v14))
  {
    sub_1004CB800((uint64_t)v6, &qword_1013EE2E0);
  }
  else
  {
    v47 = *(float *)&v6[*(int *)(v14 + 24)];
    sub_1004CB800((uint64_t)v6, &qword_1013EE2E0);
    if (v30 == v47)
    {
      v43 = 0;
      v45 = 0;
      goto LABEL_13;
    }
  }
  v32 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v33 = String._bridgeToObjectiveC()();
  v34 = String._bridgeToObjectiveC()();
  v35 = objc_msgSend(v32, "localizedStringForKey:value:table:", v33, v34, 0);

  v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
  v38 = v37;

  v39 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  result = swift_allocObject(v39, 72, 7);
  *(_OWORD *)(result + 16) = xmmword_100EF5E40;
  v41 = roundf(*(float *)(a1 + v29) * 100.0);
  if ((~LODWORD(v41) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (v41 <= -9.2234e18)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v41 < 9.2234e18)
  {
    v42 = result;
    *(_QWORD *)(result + 56) = &type metadata for Int;
    *(_QWORD *)(result + 64) = &protocol witness table for Int;
    *(_QWORD *)(result + 32) = (uint64_t)v41;
    v43 = static String.localizedStringWithFormat(_:_:)(v36, v38, result);
    v45 = v44;
    swift_bridgeObjectRelease(v38);
    swift_bridgeObjectRelease(v42);
LABEL_13:
    v48 = sub_1004B804C(&qword_1013FF100);
    inited = swift_initStackObject(v48, v52);
    *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
    *(_QWORD *)(inited + 32) = v26;
    *(_QWORD *)(inited + 40) = v28;
    *(_QWORD *)(inited + 48) = v43;
    *(_QWORD *)(inited + 56) = v45;
    v46 = sub_1008858E4(inited);

    swift_setDeallocating(inited);
    v50 = *(_QWORD *)(inited + 16);
    v51 = sub_1004B804C((uint64_t *)&unk_1013E1C80);
    swift_arrayDestroy(inited + 32, v50, v51);
    return v46;
  }
LABEL_17:
  __break(1u);
  return result;
}

BOOL sub_10099E93C(id *a1, uint64_t a2, uint64_t a3)
{
  id v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  Swift::Int v9;
  Swift::Int v10;
  uint64_t v11;
  _QWORD v13[4];

  v4 = objc_msgSend(*a1, "canvas");
  v5 = objc_msgSend(v4, "allReps");

  v6 = sub_1004B8930(0, (unint64_t *)&qword_1013E56B0, off_101229828);
  v7 = sub_1004F619C();
  v8 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v5, v6, v7);

  v13[2] = a3;
  v9 = sub_1009A0FF0((uint64_t (*)(id *))sub_1009A3718, (uint64_t)v13, v8);
  v10 = v9;
  if ((v9 & 0xC000000000000001) != 0)
    v11 = __CocoaSet.count.getter(v9);
  else
    v11 = *(_QWORD *)(v9 + 16);
  swift_release(v10);
  return v11 != 0;
}

BOOL sub_10099EA30(id *a1, uint64_t a2)
{
  id v3;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  CGRect v13;
  CGRect v14;

  v3 = *a1;
  if ((objc_msgSend(*a1, "hasBeenRemoved") & 1) != 0)
    return 0;
  objc_msgSend(v3, "frameInUnscaledCanvas");
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v14 = *(CGRect *)(a2 + *(int *)(type metadata accessor for CRLFollowViewportState(0) + 28));
  v13.origin.x = v6;
  v13.origin.y = v8;
  v13.size.width = v10;
  v13.size.height = v12;
  return CGRectIntersectsRect(v13, v14);
}

uint64_t sub_10099EAD8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  __uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  int v18;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  double v23;
  CGFloat v24;
  double v25;
  CGFloat v26;
  double v27;
  __uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  double v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  double *v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;

  v45 = a3;
  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for CRLFollowViewportState(0);
  v44 = *((_QWORD *)v9 - 1);
  __chkstk_darwin(v9);
  v11 = (__uint64_t *)((char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v44 - v16;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v44 - v16, a2 + v9[5], v5);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v17, 0, 1, v5);
  v18 = *(_DWORD *)(a2 + v9[6]);
  objc_msgSend(a1, "frameInUnscaledCanvas");
  v20 = v19;
  v22 = v21;
  v24 = v23;
  v26 = v25;
  v27 = *(double *)(a2 + v9[7] + 16);
  v28 = clock_gettime_nsec_np(_CLOCK_MONOTONIC_RAW);
  sub_1004CB7BC((uint64_t)v17, (uint64_t)v15, (uint64_t *)&unk_1013E1A50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v15, 1, v5) == 1)
  {
    sub_1004CB800((uint64_t)v15, (uint64_t *)&unk_1013E1A50);
    sub_1004CB800((uint64_t)v17, (uint64_t *)&unk_1013E1A50);
    v29 = 1;
    v30 = v45;
  }
  else
  {
    v31 = sub_100061400(v20, v22, v24, v26);
    v33 = sub_10005FD98(v31, v32, v27);
    v35 = v34;
    v37 = v36;
    v39 = v38;
    v40 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v40(v8, v15, v5);
    sub_1004CB800((uint64_t)v17, (uint64_t *)&unk_1013E1A50);
    v40((char *)v11 + v9[5], v8, v5);
    *(_DWORD *)((char *)v11 + v9[6]) = v18;
    v41 = (double *)((char *)v11 + v9[7]);
    *v41 = v33;
    *((_QWORD *)v41 + 1) = v35;
    *((_QWORD *)v41 + 2) = v37;
    *((_QWORD *)v41 + 3) = v39;
    *v11 = v28;
    v42 = v45;
    sub_1004B84E0((uint64_t)v11, v45, type metadata accessor for CRLFollowViewportState);
    v29 = 0;
    v30 = v42;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v44 + 56))(v30, v29, 1, v9);
}

BOOL sub_10099ED90(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void **v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t Strong;
  void *v30;
  char v31;
  uint64_t KeyPath;
  uint64_t v33;
  id v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  void *v40;
  uint64_t v41;
  unsigned int (*v42)(char *, uint64_t, uint64_t);
  _BOOL8 v43;
  id v44;
  id v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  Swift::Int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v62;
  char *v63;
  id v64;
  uint64_t v65;
  void **v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73[32];
  char v74[24];
  id v75[6];

  v71 = a2;
  v4 = type metadata accessor for CRLFollowViewportState(0);
  v72 = *(_QWORD *)(v4 - 8);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v5);
  v65 = (uint64_t)&v62 - v9;
  __chkstk_darwin(v8);
  v66 = (void **)((char *)&v62 - v10);
  v11 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event(0);
  __chkstk_darwin(v11);
  v13 = (void **)((char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = sub_1004B804C(&qword_1013EE2E0);
  v15 = __chkstk_darwin(v14);
  v70 = (uint64_t)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v15);
  v69 = (uint64_t)&v62 - v18;
  v19 = __chkstk_darwin(v17);
  v68 = (uint64_t)&v62 - v20;
  v21 = __chkstk_darwin(v19);
  v23 = (char *)&v62 - v22;
  v24 = __chkstk_darwin(v21);
  v26 = (char *)&v62 - v25;
  __chkstk_darwin(v24);
  v28 = (char *)&v62 - v27;
  Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_followCoordinator);
  if (!Strong)
    return 0;
  v30 = (void *)Strong;
  v64 = a1;
  v67 = v2;
  v63 = v7;
  v75[3] = &type metadata for CRLFeatureFlags;
  v75[4] = (id)sub_1004DB6DC();
  LOBYTE(v75[0]) = 11;
  v31 = isFeatureEnabled(_:)(v75);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v75);
  if ((v31 & 1) != 0)
  {
    KeyPath = swift_getKeyPath(&unk_100F1EB18);
    v33 = swift_getKeyPath(&unk_100F1EB40);
    static Published.subscript.getter(v75, v30, KeyPath, v33);
    swift_release(KeyPath);
    swift_release(v33);
    if (v75[0])
    {

      if (qword_1013DD7C8 != -1)
        swift_once(&qword_1013DD7C8, sub_100A03AC0);
      swift_beginAccess(&static OS_os_log.crlFollow, v73, 0, 0);
      v34 = (id)static OS_os_log.crlFollow;
      v36 = static os_log_type_t.default.getter(v35);
      sub_100A06EBC((uint64_t)v34, &_mh_execute_header, v36, "Calling didEndFollowing because of the public endFollowSessionForLocalParticipant method was called", 99, 2, (uint64_t)_swiftEmptyArrayStorage);

      sub_1006F534C(1);
    }
  }

  v37 = v72;
  v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v72 + 56);
  v38(v28, 1, 1, v4);
  v39 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb(0);
  sub_1004B8460(v71 + *(int *)(v39 + 20), (uint64_t)v13, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
  if (swift_getEnumCaseMultiPayload(v13, v11) > 1)
  {
    sub_1004CB800((uint64_t)v28, &qword_1013EE2E0);
LABEL_14:
    sub_1004B84E0((uint64_t)v13, (uint64_t)v28, type metadata accessor for CRLFollowViewportState);
    v38(v28, 0, 1, v4);
    goto LABEL_19;
  }
  v40 = *v13;
  v41 = sub_1004B804C(&qword_1013FEFB0);
  sub_1009A27D8((uint64_t)v13 + *(int *)(v41 + 48), (uint64_t)v26);
  sub_1009A27D8((uint64_t)v26, (uint64_t)v23);
  v42 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48);
  if (v42(v23, 1, v4) == 1)
  {
    sub_1004CB800((uint64_t)v23, &qword_1013EE2E0);
    goto LABEL_16;
  }
  v13 = v66;
  sub_1004B84E0((uint64_t)v23, (uint64_t)v66, type metadata accessor for CRLFollowViewportState);
  v44 = objc_msgSend(v64, "canvas");
  v45 = objc_msgSend(v44, "allReps");

  v46 = sub_1004B8930(0, (unint64_t *)&qword_1013E56B0, off_101229828);
  v47 = sub_1004F619C();
  v48 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v45, v46, v47);

  __chkstk_darwin(v49);
  *(&v62 - 2) = (uint64_t)v13;
  v50 = sub_1009A0FF0((uint64_t (*)(id *))sub_1009A2820, (uint64_t)(&v62 - 4), v48);
  LOBYTE(v45) = sub_100623088(v40, v50);
  swift_release(v50);
  if ((v45 & 1) != 0)
  {
    sub_1004CB800((uint64_t)v28, &qword_1013EE2E0);

    goto LABEL_14;
  }
  sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLFollowViewportState);
LABEL_16:
  v51 = v67 + OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_mostRecentViewportState;
  swift_beginAccess(v67 + OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_mostRecentViewportState, v74, 0, 0);
  v52 = v68;
  sub_1004CB7BC(v51, v68, &qword_1013EE2E0);
  if (v42((char *)v52, 1, v4) == 1)
  {

    sub_1004CB800(v52, &qword_1013EE2E0);
  }
  else
  {
    v53 = v65;
    sub_1004B84E0(v52, v65, type metadata accessor for CRLFollowViewportState);
    v54 = v69;
    sub_10099EAD8(v40, v53, v69);

    sub_1004B84A4(v53, type metadata accessor for CRLFollowViewportState);
    sub_1004CB800((uint64_t)v28, &qword_1013EE2E0);
    sub_1009A27D8(v54, (uint64_t)v28);
  }
LABEL_19:
  v55 = v70;
  sub_1004CB7BC((uint64_t)v28, v70, &qword_1013EE2E0);
  v56 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v55, 1, v4);
  v43 = v56 != 1;
  if (v56 == 1)
  {
    sub_1004CB800((uint64_t)v28, &qword_1013EE2E0);
    v28 = (char *)v55;
  }
  else
  {
    v57 = (uint64_t)v63;
    sub_1004B84E0(v55, (uint64_t)v63, type metadata accessor for CRLFollowViewportState);
    v58 = v67;
    sub_10099B358();
    objc_msgSend(v64, "zoomWithAnimationToUnscaledRect:withDuration:", *(double *)(v57 + *(int *)(v4 + 28)), *(double *)(v57 + *(int *)(v4 + 28) + 8), *(double *)(v57 + *(int *)(v4 + 28) + 16), *(double *)(v57 + *(int *)(v4 + 28) + 24), 0.0);
    v59 = v69;
    sub_1004B8460(v57, v69, type metadata accessor for CRLFollowViewportState);
    v38((char *)v59, 0, 1, v4);
    v60 = v58 + OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_mostRecentViewportState;
    swift_beginAccess(v60, v75, 33, 0);
    sub_100582338(v59, v60, &qword_1013EE2E0);
    swift_endAccess(v75);
    sub_1004B84A4(v57, type metadata accessor for CRLFollowViewportState);
  }
  sub_1004CB800((uint64_t)v28, &qword_1013EE2E0);
  return v43;
}

void sub_10099F51C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  const char *v7;
  char *v8;
  char *v9;
  char *v10;
  char *v11;
  void *v12;
  void *v13;

  v4 = "\b";
  sub_10099F5C4(319);
  if (v3 <= 0x3F)
  {
    v5 = *(_QWORD *)(v2 - 8) + 64;
    v6 = v5;
    v7 = "\b";
    v8 = (char *)&value witness table for Builtin.UnknownObject + 64;
    v9 = (char *)&value witness table for Builtin.BridgeObject + 64;
    v10 = (char *)&value witness table for Builtin.BridgeObject + 64;
    v11 = (char *)&value witness table for Builtin.BridgeObject + 64;
    v12 = &unk_100F1EA28;
    v13 = &unk_100F1EA28;
    swift_updateClassMetadata2(a1, 256, 10, &v4, a1 + 80);
  }
}

void sub_10099F5C4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1013EE2C0)
  {
    v2 = type metadata accessor for CRLFollowViewportState(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1013EE2C0);
  }
}

char *sub_10099F618(char *a1, char **a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  char *v8;
  char *v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  int *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  _OWORD *v24;
  __int128 v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  _QWORD *v33;
  int *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  _OWORD *v43;
  __int128 v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  _OWORD *v51;
  __int128 v52;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v16[(v5 + 16) & ~(unint64_t)v5];
    swift_retain(v16);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      *(_QWORD *)a1 = *a2;
      v17 = (int *)type metadata accessor for CRLFollowViewportState(0);
      v18 = v17[5];
      v19 = &a1[v18];
      v20 = (char *)a2 + v18;
      v21 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
      *(_DWORD *)&a1[v17[6]] = *(_DWORD *)((char *)a2 + v17[6]);
      v22 = v17[7];
      v23 = &a1[v22];
      v24 = (_OWORD *)((char *)a2 + v22);
      v25 = v24[1];
      *(_OWORD *)v23 = *v24;
      *((_OWORD *)v23 + 1) = v25;
      v26 = a1;
      v27 = a3;
      v28 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v8 = *a2;
      *(_QWORD *)a1 = *a2;
      v9 = v8;
      v10 = *(int *)(sub_1004B804C(&qword_1013FEFB0) + 48);
      v11 = &a1[v10];
      v12 = (char **)((char *)a2 + v10);
      v13 = (int *)type metadata accessor for CRLFollowViewportState(0);
      v14 = *((_QWORD *)v13 - 1);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v14 + 48))(v12, 1, v13))
      {
        v15 = sub_1004B804C(&qword_1013EE2E0);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        *(_QWORD *)v11 = *v12;
        v37 = v13[5];
        v38 = &v11[v37];
        v39 = (char *)v12 + v37;
        v40 = type metadata accessor for UUID(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v38, v39, v40);
        *(_DWORD *)&v11[v13[6]] = *(_DWORD *)((char *)v12 + v13[6]);
        v41 = v13[7];
        v42 = &v11[v41];
        v43 = (_OWORD *)((char *)v12 + v41);
        v44 = v43[1];
        *(_OWORD *)v42 = *v43;
        *((_OWORD *)v42 + 1) = v44;
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v14 + 56))(v11, 0, 1, v13);
      }
      v26 = a1;
      v27 = a3;
      v28 = 1;
    }
    else
    {
      v29 = *a2;
      *(_QWORD *)a1 = *a2;
      v30 = v29;
      v31 = *(int *)(sub_1004B804C(&qword_1013FEFB0) + 48);
      v32 = &a1[v31];
      v33 = (char **)((char *)a2 + v31);
      v34 = (int *)type metadata accessor for CRLFollowViewportState(0);
      v35 = *((_QWORD *)v34 - 1);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v35 + 48))(v33, 1, v34))
      {
        v36 = sub_1004B804C(&qword_1013EE2E0);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        *(_QWORD *)v32 = *v33;
        v45 = v34[5];
        v46 = &v32[v45];
        v47 = (char *)v33 + v45;
        v48 = type metadata accessor for UUID(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v46, v47, v48);
        *(_DWORD *)&v32[v34[6]] = *(_DWORD *)((char *)v33 + v34[6]);
        v49 = v34[7];
        v50 = &v32[v49];
        v51 = (_OWORD *)((char *)v33 + v49);
        v52 = v51[1];
        *(_OWORD *)v50 = *v51;
        *((_OWORD *)v50 + 1) = v52;
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v35 + 56))(v32, 0, 1, v34);
      }
      v26 = a1;
      v27 = a3;
      v28 = 0;
    }
    swift_storeEnumTagMultiPayload(v26, v27, v28);
  }
  return a1;
}

uint64_t sub_10099F8E8(id *a1, uint64_t a2)
{
  id *v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v2 = a1;
  result = swift_getEnumCaseMultiPayload(a1, a2);
  if ((_DWORD)result == 2)
  {
    v5 = *(int *)(type metadata accessor for CRLFollowViewportState(0) + 20);
LABEL_7:
    v6 = (char *)v2 + v5;
    v7 = type metadata accessor for UUID(0);
    return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  if (result <= 1)
  {

    v2 = (id *)((char *)v2 + *(int *)(sub_1004B804C(&qword_1013FEFB0) + 48));
    v4 = type metadata accessor for CRLFollowViewportState(0);
    result = (*(uint64_t (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v2, 1, v4);
    if (!(_DWORD)result)
    {
      v5 = *(int *)(v4 + 20);
      goto LABEL_7;
    }
  }
  return result;
}

_QWORD *sub_10099F99C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t EnumCaseMultiPayload;
  void *v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  _OWORD *v22;
  __int128 v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD *v29;
  _OWORD *v30;
  __int128 v31;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if ((_DWORD)EnumCaseMultiPayload == 2)
  {
    *a1 = *a2;
    v15 = (int *)type metadata accessor for CRLFollowViewportState(0);
    v16 = v15[5];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = type metadata accessor for UUID(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    *(_DWORD *)((char *)a1 + v15[6]) = *(_DWORD *)((char *)a2 + v15[6]);
    v20 = v15[7];
    v21 = (_OWORD *)((char *)a1 + v20);
    v22 = (_OWORD *)((char *)a2 + v20);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
  }
  else
  {
    v7 = (void *)*a2;
    *a1 = *a2;
    v8 = v7;
    v9 = *(int *)(sub_1004B804C(&qword_1013FEFB0) + 48);
    v10 = (_QWORD *)((char *)a1 + v9);
    v11 = (_QWORD *)((char *)a2 + v9);
    v12 = (int *)type metadata accessor for CRLFollowViewportState(0);
    v13 = *((_QWORD *)v12 - 1);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v13 + 48))(v11, 1, v12))
    {
      v14 = sub_1004B804C(&qword_1013EE2E0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      *v10 = *v11;
      v24 = v12[5];
      v25 = (char *)v10 + v24;
      v26 = (char *)v11 + v24;
      v27 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
      *(_DWORD *)((char *)v10 + v12[6]) = *(_DWORD *)((char *)v11 + v12[6]);
      v28 = v12[7];
      v29 = (_OWORD *)((char *)v10 + v28);
      v30 = (_OWORD *)((char *)v11 + v28);
      v31 = v30[1];
      *v29 = *v30;
      v29[1] = v31;
      (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v13 + 56))(v10, 0, 1, v12);
    }
  }
  swift_storeEnumTagMultiPayload(a1, a3, EnumCaseMultiPayload);
  return a1;
}

_QWORD *sub_10099FB50(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t EnumCaseMultiPayload;
  void *v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  _OWORD *v22;
  __int128 v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD *v29;
  _OWORD *v30;
  __int128 v31;

  if (a1 != a2)
  {
    sub_1004B84A4((uint64_t)a1, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if ((_DWORD)EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      v15 = (int *)type metadata accessor for CRLFollowViewportState(0);
      v16 = v15[5];
      v17 = (char *)a1 + v16;
      v18 = (char *)a2 + v16;
      v19 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
      *(_DWORD *)((char *)a1 + v15[6]) = *(_DWORD *)((char *)a2 + v15[6]);
      v20 = v15[7];
      v21 = (_OWORD *)((char *)a1 + v20);
      v22 = (_OWORD *)((char *)a2 + v20);
      v23 = v22[1];
      *v21 = *v22;
      v21[1] = v23;
    }
    else
    {
      v7 = (void *)*a2;
      *a1 = *a2;
      v8 = v7;
      v9 = *(int *)(sub_1004B804C(&qword_1013FEFB0) + 48);
      v10 = (_QWORD *)((char *)a1 + v9);
      v11 = (_QWORD *)((char *)a2 + v9);
      v12 = (int *)type metadata accessor for CRLFollowViewportState(0);
      v13 = *((_QWORD *)v12 - 1);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v13 + 48))(v11, 1, v12))
      {
        v14 = sub_1004B804C(&qword_1013EE2E0);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        *v10 = *v11;
        v24 = v12[5];
        v25 = (char *)v10 + v24;
        v26 = (char *)v11 + v24;
        v27 = type metadata accessor for UUID(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
        *(_DWORD *)((char *)v10 + v12[6]) = *(_DWORD *)((char *)v11 + v12[6]);
        v28 = v12[7];
        v29 = (_OWORD *)((char *)v10 + v28);
        v30 = (_OWORD *)((char *)v11 + v28);
        v31 = v30[1];
        *v29 = *v30;
        v29[1] = v31;
        (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v13 + 56))(v10, 0, 1, v12);
      }
    }
    swift_storeEnumTagMultiPayload(a1, a3, EnumCaseMultiPayload);
  }
  return a1;
}

uint64_t type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1013FF028, (uint64_t)&nominal type descriptor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
}

_QWORD *sub_10099FD30(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t EnumCaseMultiPayload;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  __int128 v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _OWORD *v27;
  _OWORD *v28;
  __int128 v29;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if ((_DWORD)EnumCaseMultiPayload == 2)
  {
    *a1 = *a2;
    v13 = (int *)type metadata accessor for CRLFollowViewportState(0);
    v14 = v13[5];
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    v17 = type metadata accessor for UUID(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
    *(_DWORD *)((char *)a1 + v13[6]) = *(_DWORD *)((char *)a2 + v13[6]);
    v18 = v13[7];
    v19 = (_OWORD *)((char *)a1 + v18);
    v20 = (_OWORD *)((char *)a2 + v18);
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
  }
  else
  {
    *a1 = *a2;
    v7 = *(int *)(sub_1004B804C(&qword_1013FEFB0) + 48);
    v8 = (_QWORD *)((char *)a1 + v7);
    v9 = (_QWORD *)((char *)a2 + v7);
    v10 = (int *)type metadata accessor for CRLFollowViewportState(0);
    v11 = *((_QWORD *)v10 - 1);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v11 + 48))(v9, 1, v10))
    {
      v12 = sub_1004B804C(&qword_1013EE2E0);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      *v8 = *v9;
      v22 = v10[5];
      v23 = (char *)v8 + v22;
      v24 = (char *)v9 + v22;
      v25 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
      *(_DWORD *)((char *)v8 + v10[6]) = *(_DWORD *)((char *)v9 + v10[6]);
      v26 = v10[7];
      v27 = (_OWORD *)((char *)v8 + v26);
      v28 = (_OWORD *)((char *)v9 + v26);
      v29 = v28[1];
      *v27 = *v28;
      v27[1] = v29;
      (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
    }
  }
  swift_storeEnumTagMultiPayload(a1, a3, EnumCaseMultiPayload);
  return a1;
}

_QWORD *sub_10099FEE0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t EnumCaseMultiPayload;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  __int128 v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _OWORD *v27;
  _OWORD *v28;
  __int128 v29;

  if (a1 != a2)
  {
    sub_1004B84A4((uint64_t)a1, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if ((_DWORD)EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      v13 = (int *)type metadata accessor for CRLFollowViewportState(0);
      v14 = v13[5];
      v15 = (char *)a1 + v14;
      v16 = (char *)a2 + v14;
      v17 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
      *(_DWORD *)((char *)a1 + v13[6]) = *(_DWORD *)((char *)a2 + v13[6]);
      v18 = v13[7];
      v19 = (_OWORD *)((char *)a1 + v18);
      v20 = (_OWORD *)((char *)a2 + v18);
      v21 = v20[1];
      *v19 = *v20;
      v19[1] = v21;
    }
    else
    {
      *a1 = *a2;
      v7 = *(int *)(sub_1004B804C(&qword_1013FEFB0) + 48);
      v8 = (_QWORD *)((char *)a1 + v7);
      v9 = (_QWORD *)((char *)a2 + v7);
      v10 = (int *)type metadata accessor for CRLFollowViewportState(0);
      v11 = *((_QWORD *)v10 - 1);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v11 + 48))(v9, 1, v10))
      {
        v12 = sub_1004B804C(&qword_1013EE2E0);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        *v8 = *v9;
        v22 = v10[5];
        v23 = (char *)v8 + v22;
        v24 = (char *)v9 + v22;
        v25 = type metadata accessor for UUID(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
        *(_DWORD *)((char *)v8 + v10[6]) = *(_DWORD *)((char *)v9 + v10[6]);
        v26 = v10[7];
        v27 = (_OWORD *)((char *)v8 + v26);
        v28 = (_OWORD *)((char *)v9 + v26);
        v29 = v28[1];
        *v27 = *v28;
        v27[1] = v29;
        (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
      }
    }
    swift_storeEnumTagMultiPayload(a1, a3, EnumCaseMultiPayload);
  }
  return a1;
}

void sub_1009A00A8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _BYTE v7[32];
  _BYTE v8[32];
  _QWORD v9[3];

  sub_10099F5C4(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(v2 - 8) + 64;
    swift_getTupleTypeLayout2(v8, (char *)&value witness table for Builtin.UnknownObject + 64, v4);
    v9[0] = v8;
    swift_getTupleTypeLayout2(v7, (char *)&value witness table for Builtin.UnknownObject + 64, v4);
    v9[1] = v7;
    v5 = type metadata accessor for CRLFollowViewportState(319);
    if (v6 <= 0x3F)
    {
      v9[2] = *(_QWORD *)(v5 - 8) + 64;
      swift_initEnumMetadataMultiPayload(a1, 256, 3, v9);
    }
  }
}

uint64_t storeEnumTagSinglePayload for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event.EventType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1009A01B4 + 4 * byte_100F1E9D5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1009A01E8 + 4 * byte_100F1E9D0[v4]))();
}

uint64_t sub_1009A01E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1009A01F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1009A01F8);
  return result;
}

uint64_t sub_1009A0204(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1009A020CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1009A0210(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1009A0218(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event.EventType()
{
  return &type metadata for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event.EventType;
}

uint64_t *sub_1009A0234(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  void *v13;
  id v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _OWORD *v28;
  _OWORD *v29;
  __int128 v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  int *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  _OWORD *v47;
  _OWORD *v48;
  __int128 v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  _OWORD *v55;
  _OWORD *v56;
  __int128 v57;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v21);
  }
  else
  {
    v7 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v10, v11);
    if (EnumCaseMultiPayload == 2)
    {
      *v9 = *v10;
      v22 = (int *)type metadata accessor for CRLFollowViewportState(0);
      v23 = v22[5];
      v24 = (char *)v9 + v23;
      v25 = (char *)v10 + v23;
      v26 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
      *(_DWORD *)((char *)v9 + v22[6]) = *(_DWORD *)((char *)v10 + v22[6]);
      v27 = v22[7];
      v28 = (_OWORD *)((char *)v9 + v27);
      v29 = (_OWORD *)((char *)v10 + v27);
      v30 = v29[1];
      *v28 = *v29;
      v28[1] = v30;
      v31 = v9;
      v32 = v11;
      v33 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v13 = (void *)*v10;
      *v9 = *v10;
      v14 = v13;
      v15 = *(int *)(sub_1004B804C(&qword_1013FEFB0) + 48);
      v16 = (_QWORD *)((char *)v9 + v15);
      v17 = (_QWORD *)((char *)v10 + v15);
      v18 = (int *)type metadata accessor for CRLFollowViewportState(0);
      v19 = *((_QWORD *)v18 - 1);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v19 + 48))(v17, 1, v18))
      {
        v20 = sub_1004B804C(&qword_1013EE2E0);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        *v16 = *v17;
        v42 = v18[5];
        v43 = (char *)v16 + v42;
        v44 = (char *)v17 + v42;
        v45 = type metadata accessor for UUID(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v43, v44, v45);
        *(_DWORD *)((char *)v16 + v18[6]) = *(_DWORD *)((char *)v17 + v18[6]);
        v46 = v18[7];
        v47 = (_OWORD *)((char *)v16 + v46);
        v48 = (_OWORD *)((char *)v17 + v46);
        v49 = v48[1];
        *v47 = *v48;
        v47[1] = v49;
        (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v19 + 56))(v16, 0, 1, v18);
      }
      v31 = v9;
      v32 = v11;
      v33 = 1;
    }
    else
    {
      v34 = (void *)*v10;
      *v9 = *v10;
      v35 = v34;
      v36 = *(int *)(sub_1004B804C(&qword_1013FEFB0) + 48);
      v37 = (_QWORD *)((char *)v9 + v36);
      v38 = (_QWORD *)((char *)v10 + v36);
      v39 = (int *)type metadata accessor for CRLFollowViewportState(0);
      v40 = *((_QWORD *)v39 - 1);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v40 + 48))(v38, 1, v39))
      {
        v41 = sub_1004B804C(&qword_1013EE2E0);
        memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
      }
      else
      {
        *v37 = *v38;
        v50 = v39[5];
        v51 = (char *)v37 + v50;
        v52 = (char *)v38 + v50;
        v53 = type metadata accessor for UUID(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 16))(v51, v52, v53);
        *(_DWORD *)((char *)v37 + v39[6]) = *(_DWORD *)((char *)v38 + v39[6]);
        v54 = v39[7];
        v55 = (_OWORD *)((char *)v37 + v54);
        v56 = (_OWORD *)((char *)v38 + v54);
        v57 = v56[1];
        *v55 = *v56;
        v55[1] = v57;
        (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v40 + 56))(v37, 0, 1, v39);
      }
      v31 = v9;
      v32 = v11;
      v33 = 0;
    }
    swift_storeEnumTagMultiPayload(v31, v32, v33);
  }
  return a1;
}

uint64_t sub_1009A0544(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  id *v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;

  v4 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = (id *)(a1 + *(int *)(a2 + 20));
  v6 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event(0);
  result = swift_getEnumCaseMultiPayload(v5, v6);
  if ((_DWORD)result == 2)
  {
    v9 = *(int *)(type metadata accessor for CRLFollowViewportState(0) + 20);
LABEL_7:
    v10 = (char *)v5 + v9;
    v11 = type metadata accessor for UUID(0);
    return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  }
  if (result <= 1)
  {

    v5 = (id *)((char *)v5 + *(int *)(sub_1004B804C(&qword_1013FEFB0) + 48));
    v8 = type metadata accessor for CRLFollowViewportState(0);
    result = (*(uint64_t (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v5, 1, v8);
    if (!(_DWORD)result)
    {
      v9 = *(int *)(v8 + 20);
      goto LABEL_7;
    }
  }
  return result;
}

uint64_t sub_1009A0630(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t EnumCaseMultiPayload;
  void *v12;
  id v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD *v26;
  _OWORD *v27;
  __int128 v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  _OWORD *v34;
  _OWORD *v35;
  __int128 v36;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v9, v10);
  if ((_DWORD)EnumCaseMultiPayload == 2)
  {
    *v8 = *v9;
    v20 = (int *)type metadata accessor for CRLFollowViewportState(0);
    v21 = v20[5];
    v22 = (char *)v8 + v21;
    v23 = (char *)v9 + v21;
    v24 = type metadata accessor for UUID(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
    *(_DWORD *)((char *)v8 + v20[6]) = *(_DWORD *)((char *)v9 + v20[6]);
    v25 = v20[7];
    v26 = (_OWORD *)((char *)v8 + v25);
    v27 = (_OWORD *)((char *)v9 + v25);
    v28 = v27[1];
    *v26 = *v27;
    v26[1] = v28;
  }
  else
  {
    v12 = (void *)*v9;
    *v8 = *v9;
    v13 = v12;
    v14 = *(int *)(sub_1004B804C(&qword_1013FEFB0) + 48);
    v15 = (_QWORD *)((char *)v8 + v14);
    v16 = (_QWORD *)((char *)v9 + v14);
    v17 = (int *)type metadata accessor for CRLFollowViewportState(0);
    v18 = *((_QWORD *)v17 - 1);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v18 + 48))(v16, 1, v17))
    {
      v19 = sub_1004B804C(&qword_1013EE2E0);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      *v15 = *v16;
      v29 = v17[5];
      v30 = (char *)v15 + v29;
      v31 = (char *)v16 + v29;
      v32 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v30, v31, v32);
      *(_DWORD *)((char *)v15 + v17[6]) = *(_DWORD *)((char *)v16 + v17[6]);
      v33 = v17[7];
      v34 = (_OWORD *)((char *)v15 + v33);
      v35 = (_OWORD *)((char *)v16 + v33);
      v36 = v35[1];
      *v34 = *v35;
      v34[1] = v36;
      (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v18 + 56))(v15, 0, 1, v17);
    }
  }
  swift_storeEnumTagMultiPayload(v8, v10, EnumCaseMultiPayload);
  return a1;
}

uint64_t sub_1009A081C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t EnumCaseMultiPayload;
  void *v12;
  id v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD *v26;
  _OWORD *v27;
  __int128 v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  _OWORD *v34;
  _OWORD *v35;
  __int128 v36;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 20);
    v8 = (_QWORD *)(a1 + v7);
    v9 = (_QWORD *)(a2 + v7);
    sub_1004B84A4(a1 + v7, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
    v10 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v9, v10);
    if ((_DWORD)EnumCaseMultiPayload == 2)
    {
      *v8 = *v9;
      v20 = (int *)type metadata accessor for CRLFollowViewportState(0);
      v21 = v20[5];
      v22 = (char *)v8 + v21;
      v23 = (char *)v9 + v21;
      v24 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
      *(_DWORD *)((char *)v8 + v20[6]) = *(_DWORD *)((char *)v9 + v20[6]);
      v25 = v20[7];
      v26 = (_OWORD *)((char *)v8 + v25);
      v27 = (_OWORD *)((char *)v9 + v25);
      v28 = v27[1];
      *v26 = *v27;
      v26[1] = v28;
    }
    else
    {
      v12 = (void *)*v9;
      *v8 = *v9;
      v13 = v12;
      v14 = *(int *)(sub_1004B804C(&qword_1013FEFB0) + 48);
      v15 = (_QWORD *)((char *)v8 + v14);
      v16 = (_QWORD *)((char *)v9 + v14);
      v17 = (int *)type metadata accessor for CRLFollowViewportState(0);
      v18 = *((_QWORD *)v17 - 1);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v18 + 48))(v16, 1, v17))
      {
        v19 = sub_1004B804C(&qword_1013EE2E0);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        *v15 = *v16;
        v29 = v17[5];
        v30 = (char *)v15 + v29;
        v31 = (char *)v16 + v29;
        v32 = type metadata accessor for UUID(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v30, v31, v32);
        *(_DWORD *)((char *)v15 + v17[6]) = *(_DWORD *)((char *)v16 + v17[6]);
        v33 = v17[7];
        v34 = (_OWORD *)((char *)v15 + v33);
        v35 = (_OWORD *)((char *)v16 + v33);
        v36 = v35[1];
        *v34 = *v35;
        v34[1] = v36;
        (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v18 + 56))(v15, 0, 1, v17);
      }
    }
    swift_storeEnumTagMultiPayload(v8, v10, EnumCaseMultiPayload);
  }
  return a1;
}

uint64_t sub_1009A0A20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t EnumCaseMultiPayload;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  _OWORD *v25;
  __int128 v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  _OWORD *v32;
  _OWORD *v33;
  __int128 v34;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v9, v10);
  if ((_DWORD)EnumCaseMultiPayload == 2)
  {
    *v8 = *v9;
    v18 = (int *)type metadata accessor for CRLFollowViewportState(0);
    v19 = v18[5];
    v20 = (char *)v8 + v19;
    v21 = (char *)v9 + v19;
    v22 = type metadata accessor for UUID(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
    *(_DWORD *)((char *)v8 + v18[6]) = *(_DWORD *)((char *)v9 + v18[6]);
    v23 = v18[7];
    v24 = (_OWORD *)((char *)v8 + v23);
    v25 = (_OWORD *)((char *)v9 + v23);
    v26 = v25[1];
    *v24 = *v25;
    v24[1] = v26;
  }
  else
  {
    *v8 = *v9;
    v12 = *(int *)(sub_1004B804C(&qword_1013FEFB0) + 48);
    v13 = (_QWORD *)((char *)v8 + v12);
    v14 = (_QWORD *)((char *)v9 + v12);
    v15 = (int *)type metadata accessor for CRLFollowViewportState(0);
    v16 = *((_QWORD *)v15 - 1);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v16 + 48))(v14, 1, v15))
    {
      v17 = sub_1004B804C(&qword_1013EE2E0);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      *v13 = *v14;
      v27 = v15[5];
      v28 = (char *)v13 + v27;
      v29 = (char *)v14 + v27;
      v30 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
      *(_DWORD *)((char *)v13 + v15[6]) = *(_DWORD *)((char *)v14 + v15[6]);
      v31 = v15[7];
      v32 = (_OWORD *)((char *)v13 + v31);
      v33 = (_OWORD *)((char *)v14 + v31);
      v34 = v33[1];
      *v32 = *v33;
      v32[1] = v34;
      (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v16 + 56))(v13, 0, 1, v15);
    }
  }
  swift_storeEnumTagMultiPayload(v8, v10, EnumCaseMultiPayload);
  return a1;
}

uint64_t sub_1009A0C08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t EnumCaseMultiPayload;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  _OWORD *v25;
  __int128 v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  _OWORD *v32;
  _OWORD *v33;
  __int128 v34;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 20);
    v8 = (_QWORD *)(a1 + v7);
    v9 = (_QWORD *)(a2 + v7);
    sub_1004B84A4(a1 + v7, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
    v10 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v9, v10);
    if ((_DWORD)EnumCaseMultiPayload == 2)
    {
      *v8 = *v9;
      v18 = (int *)type metadata accessor for CRLFollowViewportState(0);
      v19 = v18[5];
      v20 = (char *)v8 + v19;
      v21 = (char *)v9 + v19;
      v22 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
      *(_DWORD *)((char *)v8 + v18[6]) = *(_DWORD *)((char *)v9 + v18[6]);
      v23 = v18[7];
      v24 = (_OWORD *)((char *)v8 + v23);
      v25 = (_OWORD *)((char *)v9 + v23);
      v26 = v25[1];
      *v24 = *v25;
      v24[1] = v26;
    }
    else
    {
      *v8 = *v9;
      v12 = *(int *)(sub_1004B804C(&qword_1013FEFB0) + 48);
      v13 = (_QWORD *)((char *)v8 + v12);
      v14 = (_QWORD *)((char *)v9 + v12);
      v15 = (int *)type metadata accessor for CRLFollowViewportState(0);
      v16 = *((_QWORD *)v15 - 1);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v16 + 48))(v14, 1, v15))
      {
        v17 = sub_1004B804C(&qword_1013EE2E0);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        *v13 = *v14;
        v27 = v15[5];
        v28 = (char *)v13 + v27;
        v29 = (char *)v14 + v27;
        v30 = type metadata accessor for UUID(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
        *(_DWORD *)((char *)v13 + v15[6]) = *(_DWORD *)((char *)v14 + v15[6]);
        v31 = v15[7];
        v32 = (_OWORD *)((char *)v13 + v31);
        v33 = (_OWORD *)((char *)v14 + v31);
        v34 = v33[1];
        *v32 = *v33;
        v32[1] = v34;
        (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v16 + 56))(v13, 0, 1, v15);
      }
    }
    swift_storeEnumTagMultiPayload(v8, v10, EnumCaseMultiPayload);
  }
  return a1;
}

uint64_t sub_1009A0E08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1009A0E14);
}

uint64_t sub_1009A0E14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event(0);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_1009A0E88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1009A0E94);
}

uint64_t sub_1009A0E94(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event(0);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1013FF0B8, (uint64_t)&nominal type descriptor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
}

uint64_t sub_1009A0F24(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[2];

  result = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event(319);
    if (v4 <= 0x3F)
    {
      v5[1] = *(_QWORD *)(result - 8) + 64;
      swift_initStructMetadata(a1, 256, 2, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

unint64_t sub_1009A0FAC()
{
  unint64_t result;

  result = qword_1013FF0F0;
  if (!qword_1013FF0F0)
  {
    result = swift_getWitnessTable(&unk_100F1EAA4, &type metadata for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event.EventType);
    atomic_store(result, (unint64_t *)&qword_1013FF0F0);
  }
  return result;
}

Swift::Int sub_1009A0FF0(uint64_t (*a1)(id *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::Int result;
  char v11;
  id v12;
  _QWORD *v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char v20;
  unint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  _QWORD *v27;

  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = &_swiftEmptySetSingleton;
    v27 = &_swiftEmptySetSingleton;
    if (a3 < 0)
      v6 = a3;
    else
      v6 = a3 & 0xFFFFFFFFFFFFFF8;
    v7 = __CocoaSet.makeIterator()(v6);
    v8 = __CocoaSet.Iterator.next()(v7);
    if (v8)
    {
      v9 = v8;
      v4 = (void *)sub_1004B8930(0, (unint64_t *)&qword_1013E56B0, off_101229828);
      do
      {
        v25 = v9;
        swift_dynamicCast(&v26, &v25, (char *)&type metadata for Swift.AnyObject + 8, v4, 7);
        v11 = a1(&v26);
        if (v3)
        {
          swift_release(v7);

          swift_release(v27);
          return (Swift::Int)v4;
        }
        v12 = v26;
        if ((v11 & 1) != 0)
        {
          v13 = v27;
          v14 = v27[2];
          if (v27[3] <= v14)
          {
            sub_100ADE28C(v14 + 1);
            v13 = v27;
          }
          result = NSObject._rawHashValue(seed:)(v13[5]);
          v15 = v13 + 7;
          v16 = -1 << *((_BYTE *)v13 + 32);
          v17 = result & ~v16;
          v18 = v17 >> 6;
          if (((-1 << v17) & ~v13[(v17 >> 6) + 7]) != 0)
          {
            v19 = __clz(__rbit64((-1 << v17) & ~v13[(v17 >> 6) + 7])) | v17 & 0x7FFFFFFFFFFFFFC0;
          }
          else
          {
            v20 = 0;
            v21 = (unint64_t)(63 - v16) >> 6;
            do
            {
              if (++v18 == v21 && (v20 & 1) != 0)
              {
                __break(1u);
                return result;
              }
              v22 = v18 == v21;
              if (v18 == v21)
                v18 = 0;
              v20 |= v22;
              v23 = v15[v18];
            }
            while (v23 == -1);
            v19 = __clz(__rbit64(~v23)) + (v18 << 6);
          }
          *(_QWORD *)((char *)v15 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
          *(_QWORD *)(v13[6] + 8 * v19) = v12;
          ++v13[2];
        }
        else
        {

        }
        v9 = __CocoaSet.Iterator.next()(result);
      }
      while (v9);
      v4 = v27;
    }
    swift_release(v7);
  }
  else
  {
    v24 = sub_1009A1234((uint64_t)a1, a2, a3);
    if (!v3)
      return v24;
  }
  return (Swift::Int)v4;
}

uint64_t sub_1009A1234(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t (*v5)(id *);
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  size_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  void *v14;
  uint64_t v15;
  uint64_t v17;

  v5 = (uint64_t (*)(id *))isStackAllocationSafe;
  v6 = *(_BYTE *)(a3 + 32);
  v7 = v6 & 0x3F;
  v8 = (1 << v6) + 63;
  v9 = v8 >> 6;
  v10 = 8 * (v8 >> 6);
  if (v7 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v8 >> 6), 8), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v17 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0), v10);
    sub_1009A13B0((unint64_t *)((char *)&v17 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0)), v9, a3, v5);
    v12 = v11;
    v13 = swift_release(a3);
    if (v3)
      swift_willThrow(v13);
  }
  else
  {
    v14 = (void *)swift_slowAlloc(v10, -1);
    bzero(v14, v10);
    sub_1009A13B0((unint64_t *)v14, v9, a3, v5);
    v12 = v15;
    swift_release(a3);
    swift_slowDealloc(v14, -1, -1);
  }
  return v12;
}

void sub_1009A13B0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(id *))
{
  uint64_t v4;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  BOOL v13;
  unint64_t v14;
  int64_t v15;
  id v16;
  char v17;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  id v23;

  v7 = 0;
  v20 = 0;
  v21 = a3 + 56;
  v8 = 1 << *(_BYTE *)(a3 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a3 + 56);
  v22 = (unint64_t)(v8 + 63) >> 6;
  while (v10)
  {
    v11 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    v12 = v11 | (v7 << 6);
LABEL_17:
    v23 = *(id *)(*(_QWORD *)(a3 + 48) + 8 * v12);
    v16 = v23;
    v17 = a4(&v23);

    if (v4)
      return;
    if ((v17 & 1) != 0)
    {
      *(unint64_t *)((char *)a1 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = __OFADD__(v20++, 1);
      if (v13)
        goto LABEL_30;
    }
  }
  v13 = __OFADD__(v7++, 1);
  if (v13)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v7 >= v22)
    goto LABEL_26;
  v14 = *(_QWORD *)(v21 + 8 * v7);
  if (v14)
  {
LABEL_16:
    v10 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v7 << 6);
    goto LABEL_17;
  }
  v15 = v7 + 1;
  if (v7 + 1 >= v22)
    goto LABEL_26;
  v14 = *(_QWORD *)(v21 + 8 * v15);
  if (v14)
    goto LABEL_15;
  v15 = v7 + 2;
  if (v7 + 2 >= v22)
    goto LABEL_26;
  v14 = *(_QWORD *)(v21 + 8 * v15);
  if (v14)
    goto LABEL_15;
  v15 = v7 + 3;
  if (v7 + 3 >= v22)
  {
LABEL_26:
    swift_retain(a3);
    sub_100CD7E7C(a1, a2, v20, a3);
    return;
  }
  v14 = *(_QWORD *)(v21 + 8 * v15);
  if (v14)
  {
LABEL_15:
    v7 = v15;
    goto LABEL_16;
  }
  while (1)
  {
    v7 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v7 >= v22)
      goto LABEL_26;
    v14 = *(_QWORD *)(v21 + 8 * v7);
    ++v15;
    if (v14)
      goto LABEL_16;
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
}

uint64_t sub_1009A15AC(uint64_t (*a1)(id *), uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  int isUniquelyReferenced_nonNull_bridgeObject;
  void *v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;

  v4 = v2;
  v7 = *v2;
  swift_bridgeObjectRetain(*v2);
  v8 = sub_100C1C21C(a1, a2, v7);
  v10 = v9;
  swift_bridgeObjectRelease(v7);
  if (v3)
    return v8;
  if ((v10 & 1) == 0)
  {
    v11 = v8 + 1;
    if (__OFADD__(v8, 1))
      goto LABEL_57;
    v10 = *v4;
    if ((unint64_t)*v4 >> 62)
    {
LABEL_58:
      if (v10 < 0)
        v31 = v10;
      else
        v31 = v10 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v10);
      v32 = _CocoaArrayWrapper.endIndex.getter(v31);
      swift_bridgeObjectRelease(v10);
      if (v11 != v32)
        goto LABEL_6;
    }
    else if (v11 != *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_6:
      v11 = v8 + 5;
      v35 = a2;
      while (1)
      {
        v12 = v11 - 4;
        v13 = *v4;
        if ((*v4 & 0xC000000000000001) != 0)
        {
          v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v11 - 4, v13);
        }
        else
        {
          if ((v12 & 0x8000000000000000) != 0)
          {
            __break(1u);
LABEL_48:
            __break(1u);
LABEL_49:
            __break(1u);
LABEL_50:
            __break(1u);
LABEL_51:
            __break(1u);
LABEL_52:
            __break(1u);
LABEL_53:
            __break(1u);
LABEL_54:
            __break(1u);
LABEL_55:
            __break(1u);
LABEL_56:
            __break(1u);
LABEL_57:
            __break(1u);
            goto LABEL_58;
          }
          if (v12 >= *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_48;
          v14 = *(id *)(v13 + 8 * v11);
        }
        v15 = v14;
        v36 = v14;
        v10 = a1(&v36);

        if ((v10 & 1) == 0)
          break;
LABEL_32:
        v26 = v11 - 3;
        if (__OFADD__(v12, 1))
          goto LABEL_49;
        v10 = *v4;
        if ((unint64_t)*v4 >> 62)
        {
          if (v10 < 0)
            v28 = *v4;
          else
            v28 = v10 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(*v4);
          v27 = _CocoaArrayWrapper.endIndex.getter(v28);
          swift_bridgeObjectRelease(v10);
        }
        else
        {
          v27 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        ++v11;
        if (v26 == v27)
          return v8;
      }
      if (v12 == v8)
      {
LABEL_31:
        if (__OFADD__(v8++, 1))
          goto LABEL_50;
        goto LABEL_32;
      }
      v10 = *v4;
      if ((*v4 & 0xC000000000000001) != 0)
      {
        v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, *v4);
        v10 = *v4;
        if ((*v4 & 0xC000000000000001) == 0)
        {
LABEL_17:
          if ((v12 & 0x8000000000000000) != 0)
            goto LABEL_53;
          if (v12 >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_54;
          v17 = *(id *)(v10 + 8 * v11);
          goto LABEL_20;
        }
      }
      else
      {
        if ((v8 & 0x8000000000000000) != 0)
          goto LABEL_51;
        if (v8 >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_52;
        v16 = *(id *)(v10 + 8 * v8 + 32);
        if ((v10 & 0xC000000000000001) == 0)
          goto LABEL_17;
      }
      v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v11 - 4, v10);
      v10 = *v4;
LABEL_20:
      isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(v10);
      *v4 = v10;
      if (!isUniquelyReferenced_nonNull_bridgeObject || v10 < 0 || (v10 & 0x4000000000000000) != 0)
      {
        v10 = sub_100D14ED8(v10);
        *v4 = v10;
      }
      v19 = *(void **)((v10 & 0xFFFFFFFFFFFFFF8) + 8 * v8 + 0x20);
      *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 8 * v8 + 0x20) = v17;

      specialized Array._endMutation()(v20);
      v10 = *v4;
      v21 = swift_isUniquelyReferenced_nonNull_bridgeObject(*v4);
      *v4 = v10;
      if (!v21 || v10 < 0 || (v10 & 0x4000000000000000) != 0)
      {
        v10 = sub_100D14ED8(v10);
        *v4 = v10;
      }
      a2 = v35;
      if ((v12 & 0x8000000000000000) != 0)
        goto LABEL_55;
      v22 = v10 & 0xFFFFFFFFFFFFFF8;
      if (v12 >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_56;
      v23 = *(void **)(v22 + 8 * v11);
      *(_QWORD *)(v22 + 8 * v11) = v16;

      v10 = (uint64_t)v4;
      specialized Array._endMutation()(v24);
      goto LABEL_31;
    }
    return v8;
  }
  v29 = *v4;
  if (!((unint64_t)*v4 >> 62))
    return *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v29 < 0)
    v33 = *v4;
  else
    v33 = v29 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v4);
  v34 = _CocoaArrayWrapper.endIndex.getter(v33);
  swift_bridgeObjectRelease(v29);
  return v34;
}

void sub_1009A1904(uint64_t (*a1)(unint64_t, __n128), uint64_t a2)
{
  sub_1009A1928(a1, a2, type metadata accessor for CRLBoardIdentifier, (uint64_t (*)(uint64_t))sub_100D15008);
}

void sub_1009A1928(uint64_t (*a1)(unint64_t, __n128), uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t (*a4)(uint64_t))
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  __n128 v19;
  unint64_t v20;
  char v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t (*v28)(_QWORD);
  char v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t (*v32)(_QWORD);
  char isUniquelyReferenced_nonNull_native;
  unint64_t v35;
  uint64_t *v36;
  uint64_t (*v37)(uint64_t);
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(_QWORD);
  uint64_t v43;
  uint64_t (*v44)(unint64_t, __n128);

  v7 = v4;
  v44 = a1;
  v42 = a3;
  v8 = a3(0);
  v9 = __chkstk_darwin(v8);
  v40 = (uint64_t)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v9);
  v39 = (uint64_t)&v36 - v12;
  __chkstk_darwin(v11);
  v41 = (uint64_t)&v36 - v14;
  v15 = *v4;
  v16 = *(_QWORD *)(*v4 + 16);
  if (v16)
  {
    v37 = a4;
    v17 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    v18 = *(_QWORD *)(v13 + 72);
    v19 = swift_bridgeObjectRetain(v15);
    v20 = 0;
    v38 = v17;
    while (1)
    {
      v21 = v44(v15 + v17, v19);
      if (v5)
      {
LABEL_6:
        swift_bridgeObjectRelease(v15);
        return;
      }
      if ((v21 & 1) != 0)
        break;
      ++v20;
      v17 += v18;
      if (v16 == v20)
        goto LABEL_6;
    }
    swift_bridgeObjectRelease(v15);
    if (!__OFADD__(v20, 1))
    {
      v22 = *(_QWORD *)(v15 + 16);
      if (v20 + 1 == v22)
        return;
      v23 = v18 + v17;
      v24 = v20 + 1;
      v36 = v4;
      while (v24 < v22)
      {
        v25 = v18;
        v26 = v7;
        v43 = v23;
        v27 = v41;
        v28 = v42;
        sub_1004B8460(v15 + v23, v41, v42);
        v29 = ((uint64_t (*)(uint64_t))v44)(v27);
        sub_1004B84A4(v27, v28);
        if ((v29 & 1) != 0)
        {
          v7 = v26;
          v18 = v25;
        }
        else
        {
          v7 = v26;
          v18 = v25;
          if (v24 != v20)
          {
            if ((v20 & 0x8000000000000000) != 0)
              goto LABEL_31;
            v30 = *v26;
            v31 = *(_QWORD *)(*v26 + 16);
            if (v20 >= v31)
              goto LABEL_32;
            v32 = v42;
            sub_1004B8460(v30 + v38 + v20 * v25, v39, v42);
            if (v24 >= v31)
              goto LABEL_33;
            sub_1004B8460(v30 + v43, v40, v32);
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v30);
            v7 = v36;
            *v36 = v30;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              v30 = v37(v30);
              *v7 = v30;
            }
            if (v20 >= *(_QWORD *)(v30 + 16))
              goto LABEL_34;
            sub_100836E6C(v40, v30 + v38 + v20 * v25, v32);
            if (v24 >= *(_QWORD *)(*v7 + 16))
              goto LABEL_35;
            sub_100836E6C(v39, *v7 + v43, v32);
          }
          if (__OFADD__(v20++, 1))
            goto LABEL_30;
        }
        v35 = v24 + 1;
        if (__OFADD__(v24, 1))
          goto LABEL_29;
        v15 = *v7;
        v22 = *(_QWORD *)(*v7 + 16);
        ++v24;
        v23 = v43 + v18;
        if (v35 == v22)
          return;
      }
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
    }
    __break(1u);
  }
}

void sub_1009A1C2C(uint64_t (*a1)(unint64_t, __n128))
{
  unint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  __n128 v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char v22;
  unint64_t *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;

  v4 = sub_1004B804C(&qword_1013FA540);
  __chkstk_darwin(v4);
  v35 = (uint64_t)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v34 = (uint64_t)&v31 - v7;
  __chkstk_darwin(v8);
  v37 = (uint64_t)&v31 - v10;
  v11 = *v1;
  v12 = *(_QWORD *)(*v1 + 16);
  if (v12)
  {
    v13 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v14 = *(_QWORD *)(v9 + 72);
    v15 = swift_bridgeObjectRetain(*v1);
    v16 = 0;
    v32 = v13;
    while (1)
    {
      v17 = a1(v11 + v13, v15);
      if (v2)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        return;
      }
      if ((v17 & 1) != 0)
        break;
      ++v16;
      v13 += v14;
      if (v12 == v16)
        goto LABEL_6;
    }
    swift_bridgeObjectRelease();
    if (!__OFADD__(v16, 1))
    {
      v18 = *(_QWORD *)(v11 + 16);
      if (v16 + 1 == v18)
        return;
      v19 = v14 + v13;
      v20 = v16 + 1;
      v36 = v1;
      v33 = v14;
      while (v20 < v18)
      {
        v38 = v20;
        v39 = v19;
        v21 = v37;
        sub_1004CB7BC(v11 + v19, v37, &qword_1013FA540);
        v22 = ((uint64_t (*)(uint64_t))a1)(v21);
        sub_1004CB800(v21, &qword_1013FA540);
        if ((v22 & 1) != 0)
        {
          v23 = v36;
          v24 = v33;
          v25 = v38;
        }
        else
        {
          v25 = v38;
          v23 = v36;
          v24 = v33;
          if (v38 != v16)
          {
            if ((v16 & 0x8000000000000000) != 0)
              goto LABEL_31;
            v26 = *v36;
            v27 = *(_QWORD *)(*v36 + 16);
            if (v16 >= v27)
              goto LABEL_32;
            v31 = v16 * v33;
            sub_1004CB7BC(v26 + v32 + v16 * v33, v34, &qword_1013FA540);
            if (v25 >= v27)
              goto LABEL_33;
            sub_1004CB7BC(v26 + v39, v35, &qword_1013FA540);
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v26);
            v23 = v36;
            *v36 = v26;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              v26 = sub_100D1510C(v26);
              *v23 = v26;
            }
            if (v16 >= *(_QWORD *)(v26 + 16))
              goto LABEL_34;
            sub_100582338(v35, v26 + v32 + v31, &qword_1013FA540);
            if (v25 >= *(_QWORD *)(*v23 + 16))
              goto LABEL_35;
            sub_100582338(v34, *v23 + v39, &qword_1013FA540);
          }
          if (__OFADD__(v16++, 1))
            goto LABEL_30;
        }
        v30 = v25 + 1;
        if (__OFADD__(v25, 1))
          goto LABEL_29;
        v11 = *v23;
        v18 = *(_QWORD *)(*v23 + 16);
        v20 = v25 + 1;
        v19 = v39 + v24;
        if (v30 == v18)
          return;
      }
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
    }
    __break(1u);
  }
}

BOOL sub_1009A1F48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void **v29;
  uint64_t v30;
  uint64_t v31;
  void **v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  void **v37;
  int EnumCaseMultiPayload;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unsigned int (*v49)(uint64_t, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  BOOL v58;
  void *v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  unsigned int (*v64)(uint64_t, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  BOOL v67;
  uint64_t v68;
  BOOL v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  char *v81;

  v80 = a1;
  v81 = (char *)a2;
  v2 = type metadata accessor for CRLFollowViewportState(0);
  v74 = *(_QWORD *)(v2 - 8);
  v75 = v2;
  __chkstk_darwin(v2);
  v76 = (uint64_t)&v70 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v70 = (uint64_t)&v70 - v5;
  v73 = sub_1004B804C(&qword_1013EE2E8);
  __chkstk_darwin(v73);
  v72 = (uint64_t)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v79 = (char *)&v70 - v8;
  v9 = sub_1004B804C(&qword_1013EE2E0);
  __chkstk_darwin(v9);
  v71 = (uint64_t)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v77 = (uint64_t)&v70 - v12;
  __chkstk_darwin(v13);
  v78 = (uint64_t)&v70 - v14;
  __chkstk_darwin(v15);
  v17 = (char *)&v70 - v16;
  __chkstk_darwin(v18);
  v20 = (char *)&v70 - v19;
  __chkstk_darwin(v21);
  v23 = (char *)&v70 - v22;
  v24 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event(0);
  __chkstk_darwin(v24);
  v26 = (char *)&v70 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v29 = (void **)((char *)&v70 - v28);
  __chkstk_darwin(v30);
  v32 = (void **)((char *)&v70 - v31);
  v33 = sub_1004B804C(&qword_1013FF0F8);
  __chkstk_darwin(v33);
  v35 = (char *)&v70 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = (void **)&v35[*(int *)(v36 + 48)];
  sub_1004B8460(v80, (uint64_t)v35, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
  sub_1004B8460((uint64_t)v81, (uint64_t)v37, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v35, v24);
  if (!EnumCaseMultiPayload)
  {
    v51 = (uint64_t)v23;
    v52 = (uint64_t)v17;
    v53 = (uint64_t)v79;
    v81 = v35;
    sub_1004B8460((uint64_t)v35, (uint64_t)v32, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
    v54 = *v32;
    v55 = *(int *)(sub_1004B804C(&qword_1013FEFB0) + 48);
    v56 = (uint64_t)v32 + v55;
    if (swift_getEnumCaseMultiPayload(v37, v24))
    {
      sub_1004CB800((uint64_t)v32 + v55, &qword_1013EE2E0);

      v35 = v81;
      goto LABEL_14;
    }
    v60 = *v37;
    sub_1009A27D8(v56, v51);
    sub_1009A27D8((uint64_t)v37 + v55, (uint64_t)v20);
    sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
    v61 = static NSObject.== infix(_:_:)(v54, v60);

    if ((v61 & 1) != 0)
    {
      v62 = v53 + *(int *)(v73 + 48);
      sub_1004CB7BC(v51, v53, &qword_1013EE2E0);
      sub_1004CB7BC((uint64_t)v20, v62, &qword_1013EE2E0);
      v63 = v75;
      v64 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v74 + 48);
      if (v64(v53, 1, v75) == 1)
      {
        sub_1004CB800((uint64_t)v20, &qword_1013EE2E0);
        sub_1004CB800(v51, &qword_1013EE2E0);
        if (v64(v62, 1, v63) == 1)
        {
          sub_1004CB800(v53, &qword_1013EE2E0);
LABEL_33:
          v50 = (uint64_t)v81;
          goto LABEL_34;
        }
        goto LABEL_29;
      }
      sub_1004CB7BC(v53, v52, &qword_1013EE2E0);
      if (v64(v62, 1, v63) == 1)
      {
        sub_1004CB800((uint64_t)v20, &qword_1013EE2E0);
        sub_1004CB800(v51, &qword_1013EE2E0);
        sub_1004B84A4(v52, type metadata accessor for CRLFollowViewportState);
LABEL_29:
        sub_1004CB800(v53, &qword_1013EE2E8);
        goto LABEL_35;
      }
      v68 = v70;
      sub_1004B84E0(v62, v70, type metadata accessor for CRLFollowViewportState);
      v69 = sub_100929BB8(v52, v68);
      sub_1004B84A4(v68, type metadata accessor for CRLFollowViewportState);
      sub_1004CB800((uint64_t)v20, &qword_1013EE2E0);
      sub_1004CB800(v51, &qword_1013EE2E0);
      sub_1004B84A4(v52, type metadata accessor for CRLFollowViewportState);
      sub_1004CB800(v53, &qword_1013EE2E0);
      if (v69)
        goto LABEL_33;
    }
    else
    {
      sub_1004CB800((uint64_t)v20, &qword_1013EE2E0);
      sub_1004CB800(v51, &qword_1013EE2E0);
    }
LABEL_35:
    sub_1004B84A4((uint64_t)v81, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
    return 0;
  }
  if (EnumCaseMultiPayload == 1)
  {
    v39 = (uint64_t)v35;
    sub_1004B8460((uint64_t)v35, (uint64_t)v29, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
    v40 = *v29;
    v41 = *(int *)(sub_1004B804C(&qword_1013FEFB0) + 48);
    if (swift_getEnumCaseMultiPayload(v37, v24) == 1)
    {
      v42 = *v37;
      v43 = v78;
      sub_1009A27D8((uint64_t)v29 + v41, v78);
      v44 = v77;
      sub_1009A27D8((uint64_t)v37 + v41, v77);
      sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
      v45 = static NSObject.== infix(_:_:)(v40, v42);

      if ((v45 & 1) != 0)
      {
        v46 = v72;
        v47 = v72 + *(int *)(v73 + 48);
        sub_1004CB7BC(v43, v72, &qword_1013EE2E0);
        sub_1004CB7BC(v44, v47, &qword_1013EE2E0);
        v48 = v75;
        v49 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v74 + 48);
        if (v49(v46, 1, v75) == 1)
        {
          sub_1004CB800(v44, &qword_1013EE2E0);
          sub_1004CB800(v43, &qword_1013EE2E0);
          if (v49(v47, 1, v48) == 1)
          {
            sub_1004CB800(v46, &qword_1013EE2E0);
            v50 = v39;
LABEL_34:
            sub_1004B84A4(v50, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
            return 1;
          }
        }
        else
        {
          v65 = v71;
          sub_1004CB7BC(v46, v71, &qword_1013EE2E0);
          if (v49(v47, 1, v48) != 1)
          {
            v66 = v70;
            sub_1004B84E0(v47, v70, type metadata accessor for CRLFollowViewportState);
            v67 = sub_100929BB8(v65, v66);
            sub_1004B84A4(v66, type metadata accessor for CRLFollowViewportState);
            sub_1004CB800(v44, &qword_1013EE2E0);
            sub_1004CB800(v43, &qword_1013EE2E0);
            sub_1004B84A4(v65, type metadata accessor for CRLFollowViewportState);
            sub_1004CB800(v46, &qword_1013EE2E0);
            v50 = v39;
            if (v67)
              goto LABEL_34;
            goto LABEL_26;
          }
          sub_1004CB800(v44, &qword_1013EE2E0);
          sub_1004CB800(v43, &qword_1013EE2E0);
          sub_1004B84A4(v65, type metadata accessor for CRLFollowViewportState);
        }
        sub_1004CB800(v46, &qword_1013EE2E8);
        v50 = v39;
LABEL_26:
        sub_1004B84A4(v50, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
        return 0;
      }
      sub_1004CB800(v44, &qword_1013EE2E0);
      sub_1004CB800(v43, &qword_1013EE2E0);
      sub_1004B84A4(v39, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
      return 0;
    }
    sub_1004CB800((uint64_t)v29 + v41, &qword_1013EE2E0);

    v35 = (char *)v39;
LABEL_14:
    sub_1004CB800((uint64_t)v35, &qword_1013FF0F8);
    return 0;
  }
  sub_1004B8460((uint64_t)v35, (uint64_t)v26, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
  if (swift_getEnumCaseMultiPayload(v37, v24) != 2)
  {
    sub_1004B84A4((uint64_t)v26, type metadata accessor for CRLFollowViewportState);
    goto LABEL_14;
  }
  v57 = v76;
  sub_1004B84E0((uint64_t)v37, v76, type metadata accessor for CRLFollowViewportState);
  v58 = sub_100929BB8((uint64_t)v26, v57);
  sub_1004B84A4(v57, type metadata accessor for CRLFollowViewportState);
  sub_1004B84A4((uint64_t)v26, type metadata accessor for CRLFollowViewportState);
  sub_1004B84A4((uint64_t)v35, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
  return v58;
}

uint64_t sub_1009A27D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013EE2E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

BOOL sub_1009A2820(id *a1)
{
  uint64_t v1;

  return sub_10099EA30(a1, *(_QWORD *)(v1 + 16));
}

BOOL sub_1009A2844(id *a1)
{
  uint64_t v1;

  return sub_10099E93C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

_QWORD *sub_1009A2860(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void **v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  Swift::String v26;
  uint64_t v27;
  id v28;
  NSString v29;
  id v30;
  uint64_t v31;
  uint64_t inited;
  void *v33;
  id v34;
  unint64_t v35;
  id v36;
  NSString v37;
  Class isa;
  id v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  void *v46;
  uint64_t v47;
  id v48;
  void *v49;
  id v50;
  id v51;
  void *v52;
  double v53;
  id v54;
  id v55;
  id v56;
  NSString v57;
  NSString v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  NSString v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  _QWORD v67[2];
  char *v68;
  char *v69;
  __int128 v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  void *v80;
  uint64_t v81;
  void **aBlock;
  uint64_t v83;
  uint64_t (*v84)(uint64_t, void *);
  void *v85;
  uint64_t (*v86)();
  uint64_t v87;
  char v88[72];
  unint64_t v89;

  v77 = a5;
  v79 = a3;
  v80 = a4;
  v81 = a2;
  v7 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb(0);
  v8 = __chkstk_darwin(v7);
  v78 = (uint64_t)v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v13 = (char *)v67 - v12;
  result = _swiftEmptyArrayStorage;
  v89 = (unint64_t)_swiftEmptyArrayStorage;
  v15 = *(_QWORD *)(a1 + 16);
  if (v15)
  {
    v67[1] = v5;
    v16 = *(unsigned __int8 *)(v11 + 80);
    v17 = a1 + ((v16 + 32) & ~v16);
    v75 = v16 | 7;
    v76 = (v16 + 24) & ~v16;
    v74 = (v10 + v76 + 7) & 0xFFFFFFFFFFFFFFF8;
    v73 = (v74 + 15) & 0xFFFFFFFFFFFFFFF8;
    v72 = v73 + 8;
    v18 = *(_QWORD *)(v11 + 72);
    v67[0] = a1;
    swift_bridgeObjectRetain(a1);
    v70 = xmmword_100EF5E40;
    v69 = (char *)&type metadata for Any + 8;
    v71 = v18;
    v68 = v13;
    while (1)
    {
      sub_1004B8460(v17, (uint64_t)v13, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
      v19 = sub_10099AB00((uint64_t)v13);
      if (v20)
      {
        v21 = (void **)v19;
        v22 = v20;
        _sSo15NSDateFormatterC8FreeformE37crlaxVoiceOverPronounceableTimeString3forSSSg10Foundation4DateV_tFZ_0();
        if (v23)
        {
          v24 = v23;
          v25 = v13;
          aBlock = v21;
          v83 = v22;
          swift_bridgeObjectRetain(v22);
          v26._countAndFlagsBits = 32;
          v26._object = (void *)0xE100000000000000;
          String.append(_:)(v26);
          swift_bridgeObjectRelease(v22);
          v27 = v83;
          v28 = objc_allocWithZone((Class)NSMutableAttributedString);
          v29 = String._bridgeToObjectiveC()();
          v30 = objc_msgSend(v28, "initWithString:", v29, swift_bridgeObjectRelease(v27).n128_f64[0]);

          v31 = sub_1004B804C((uint64_t *)&unk_1013F4250);
          inited = swift_initStackObject(v31, v88);
          *(_OWORD *)(inited + 16) = v70;
          if (qword_1013DD370 != -1)
            swift_once(&qword_1013DD370, sub_10088582C);
          v33 = (void *)static NSAttributedStringKey.crlaxLowPitch;
          *(_QWORD *)(inited + 32) = static NSAttributedStringKey.crlaxLowPitch;
          *(_QWORD *)(inited + 64) = &type metadata for Bool;
          *(_BYTE *)(inited + 40) = 1;
          v34 = v33;
          v35 = sub_1008D4FE0(inited);
          v36 = objc_allocWithZone((Class)NSAttributedString);
          v37 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v24);
          type metadata accessor for Key(0);
          sub_1004B7878((unint64_t *)&qword_1013DE6D0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_100EF1874);
          isa = Dictionary._bridgeToObjectiveC()().super.isa;
          v39 = objc_msgSend(v36, "initWithString:attributes:", v37, isa, swift_bridgeObjectRelease(v35).n128_f64[0]);

          objc_msgSend(v30, "appendAttributedString:", v39);
          v40 = swift_allocObject(&unk_10128D310, 24, 7);
          swift_unknownObjectWeakInit(v40 + 16, v81);
          v41 = (uint64_t)v25;
          v42 = v30;
          v43 = v78;
          sub_1004B8460(v41, v78, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
          v44 = swift_allocObject(&unk_10128D478, v72, v75);
          *(_QWORD *)(v44 + 16) = v40;
          sub_1004B84E0(v43, v44 + v76, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
          v46 = v79;
          v45 = v80;
          *(_QWORD *)(v44 + v74) = v79;
          *(_QWORD *)(v44 + v73) = v45;
          v47 = swift_allocObject(&unk_10128D4A0, 32, 7);
          *(_QWORD *)(v47 + 16) = sub_1009A3498;
          *(_QWORD *)(v47 + 24) = v44;
          v48 = objc_allocWithZone((Class)UIAccessibilityCustomAction);
          v86 = sub_1009A350C;
          v87 = v47;
          aBlock = _NSConcreteStackBlock;
          v83 = *(_QWORD *)"";
          v84 = sub_100BFF368;
          v85 = &unk_10128D4B8;
          v49 = _Block_copy(&aBlock);
          v50 = v46;
          v51 = v45;
          v52 = v42;
          *(_QWORD *)&v53 = swift_retain(v44).n128_u64[0];
          v54 = objc_msgSend(v48, "initWithAttributedName:image:actionHandler:", v42, v77, v49, v53);
          _Block_release(v49);
          swift_release(v87);
          v55 = objc_msgSend((id)objc_opt_self(CRLAccessibility), "sharedInstance");
          LOBYTE(v49) = objc_msgSend(v55, "accessibilitySupportLoaded");

          if ((v49 & 1) != 0)
          {
            v56 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
            v57 = String._bridgeToObjectiveC()();
            v58 = String._bridgeToObjectiveC()();
            v59 = objc_msgSend(v56, "localizedStringForKey:value:table:", v57, v58, 0);

            static String._unconditionallyBridgeFromObjectiveC(_:)(v59);
            v61 = v60;

            v62 = String._bridgeToObjectiveC()();
            objc_msgSend(v54, "setLocalizedActionRotorCategory:", v62, swift_bridgeObjectRelease(v61).n128_f64[0]);

            swift_release(v44);
            v13 = v68;
            v63 = sub_1004B84A4((uint64_t)v68, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
          }
          else
          {
            v13 = v68;
            sub_1004B84A4((uint64_t)v68, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
            swift_release(v44);

          }
          v18 = v71;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v63);
          v65 = *(_QWORD *)((v89 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v64 = *(_QWORD *)((v89 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v65 >= v64 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v64 > 1, v65 + 1, 1);
          v66 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v65, v54);
          specialized Array._endMutation()(v66);
          goto LABEL_5;
        }
        swift_bridgeObjectRelease(v22);
      }
      sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
LABEL_5:
      v17 += v18;
      if (!--v15)
      {
        swift_bridgeObjectRelease(v67[0]);
        return (_QWORD *)v89;
      }
    }
  }
  return result;
}

uint64_t sub_1009A2F00()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1009A2F24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id *v7;
  uint64_t v8;
  unsigned int EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;

  v1 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release(*(_QWORD *)(v0 + 16));
  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v0 + v4, v6);
  v7 = (id *)(v0 + v4 + *(int *)(v1 + 20));
  v8 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v7, v8);
  if (EnumCaseMultiPayload == 2)
  {
    v11 = *(int *)(type metadata accessor for CRLFollowViewportState(0) + 20);
    goto LABEL_6;
  }
  if (EnumCaseMultiPayload <= 1)
  {

    v7 = (id *)((char *)v7 + *(int *)(sub_1004B804C(&qword_1013FEFB0) + 48));
    v10 = type metadata accessor for CRLFollowViewportState(0);
    if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v7, 1, v10))
    {
      v11 = *(int *)(v10 + 20);
LABEL_6:
      v12 = (char *)v7 + v11;
      v13 = type metadata accessor for UUID(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
    }
  }
  return swift_deallocObject(v0, ((v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v3 | 7);
}

uint64_t sub_1009A3054(uint64_t a1)
{
  return sub_1009A3148(a1, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb, (uint64_t (*)(uint64_t, _QWORD, unint64_t, _QWORD))sub_10099CA34);
}

double sub_1009A3068(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

double sub_1009A3078(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

BOOL sub_1009A3080(uint64_t a1)
{
  uint64_t v1;

  return sub_10099CF34(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1009A309C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for CRLFollowViewportState(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = ((*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release(*(_QWORD *)(v0 + 16));
  v7 = v0 + *(int *)(v1 + 20) + v4;
  v8 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  return swift_deallocObject(v0, v6, v5);
}

uint64_t sub_1009A3134(uint64_t a1)
{
  return sub_1009A3148(a1, type metadata accessor for CRLFollowViewportState, (uint64_t (*)(uint64_t, _QWORD, unint64_t, _QWORD))sub_10099BE18);
}

uint64_t sub_1009A3148(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(uint64_t, _QWORD, unint64_t, _QWORD))
{
  uint64_t v3;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(a2(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return a3(a1, *(_QWORD *)(v3 + 16), v3 + v6, *(_QWORD *)(v3 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1009A31AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id *v7;
  uint64_t v8;
  unsigned int EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;

  v1 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release(*(_QWORD *)(v0 + 16));
  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v0 + v4, v6);
  v7 = (id *)(v0 + v4 + *(int *)(v1 + 20));
  v8 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v7, v8);
  if (EnumCaseMultiPayload == 2)
  {
    v11 = *(int *)(type metadata accessor for CRLFollowViewportState(0) + 20);
    goto LABEL_6;
  }
  if (EnumCaseMultiPayload <= 1)
  {

    v7 = (id *)((char *)v7 + *(int *)(sub_1004B804C(&qword_1013FEFB0) + 48));
    v10 = type metadata accessor for CRLFollowViewportState(0);
    if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v7, 1, v10))
    {
      v11 = *(int *)(v10 + 20);
LABEL_6:
      v12 = (char *)v7 + v11;
      v13 = type metadata accessor for UUID(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
    }
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

void sub_1009A32D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb(0)
                                      - 8)
                          + 80);
  sub_10099B974(a1, *(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

uint64_t sub_1009A3310()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1009A333C(uint64_t a1)
{
  uint64_t v1;

  return sub_10099B4CC(a1, *(_QWORD *)(v1 + 16), (_QWORD *)(v1 + 24));
}

uint64_t sub_1009A3348()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id *v7;
  uint64_t v8;
  unsigned int EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;

  v1 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release(*(_QWORD *)(v0 + 16));
  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v0 + v4, v6);
  v7 = (id *)(v0 + v4 + *(int *)(v1 + 20));
  v8 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v7, v8);
  if (EnumCaseMultiPayload == 2)
  {
    v11 = *(int *)(type metadata accessor for CRLFollowViewportState(0) + 20);
    goto LABEL_6;
  }
  if (EnumCaseMultiPayload <= 1)
  {

    v7 = (id *)((char *)v7 + *(int *)(sub_1004B804C(&qword_1013FEFB0) + 48));
    v10 = type metadata accessor for CRLFollowViewportState(0);
    if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v7, 1, v10))
    {
      v11 = *(int *)(v10 + 20);
LABEL_6:
      v12 = (char *)v7 + v11;
      v13 = type metadata accessor for UUID(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
    }
  }
  v14 = (v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v15 = (v14 + 15) & 0xFFFFFFFFFFFFFFF8;

  return swift_deallocObject(v0, v15 + 8, v3 | 7);
}

BOOL sub_1009A3498()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_10099A0A4(*(_QWORD *)(v0 + 16), v0 + v2, *(void **)(v0 + v3), *(void **)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1009A34E8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1009A350C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))() & 1;
}

uint64_t sub_1009A3530(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  NSString v16;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;

  sub_1004CB7BC(a2, (uint64_t)&v18, &qword_1013E0230);
  if (!v19)
    return sub_1004CB800((uint64_t)&v18, &qword_1013E0230);
  sub_10050CB14(&v18, &v20);
  v3 = sub_1004D1C54(a1, 0);
  if (v4)
  {
    v5 = v3;
    v6 = v4;
    if (qword_1013DD600 != -1)
      swift_once(&qword_1013DD600, sub_100999C38);
    v7 = qword_1013FEF30;
    v8 = *(_QWORD *)algn_1013FEF38;
    v9 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v10 = swift_allocObject(v9, 72, 7);
    *(_OWORD *)(v10 + 16) = xmmword_100EF5E40;
    *(_QWORD *)(v10 + 56) = &type metadata for String;
    *(_QWORD *)(v10 + 64) = sub_1004CFC2C();
    *(_QWORD *)(v10 + 32) = v5;
    *(_QWORD *)(v10 + 40) = v6;
    static String.localizedStringWithFormat(_:_:)(v7, v8, v10);
    v12 = v11;
    swift_bridgeObjectRelease(v10);
    v13 = v21;
    v14 = sub_1004BB5A4(&v20, v21);
    v15 = (void *)_bridgeAnythingToObjectiveC<A>(_:)(v14, v13);
    v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v12);
    CRLAccessibilityPostAnnouncementNotification(v15, v16);
    swift_unknownObjectRelease(v15);

  }
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v20);
}

uint64_t sub_1009A36A4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1009A36D8()
{
  uint64_t v0;

  return sub_10099A830(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1009A36E4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_1009A3710()
{
  uint64_t v0;

  sub_100998E20(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

BOOL sub_1009A3718(id *a1)
{
  return sub_1009A2820(a1);
}

_QWORD *sub_1009A3760(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t inited;
  unint64_t v14;
  unint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  _BYTE v21[112];
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25[3];
  _QWORD v26[6];

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v3 = a1 + 32;
    swift_bridgeObjectRetain(a1);
    v4 = _swiftEmptyArrayStorage;
    v20 = v1;
    do
    {
      sub_1004E90B0(v3, (uint64_t)v26);
      sub_1004E90B0((uint64_t)v26, (uint64_t)v25);
      v5 = sub_1004B804C(&qword_1013E8700);
      v6 = sub_1004B804C(&qword_1013FF110);
      if ((swift_dynamicCast(&v22, v25, v5, v6, 6) & 1) == 0)
      {
        v23 = 0u;
        v24 = 0u;
        v22 = 0u;
      }
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v26);
      if (*((_QWORD *)&v23 + 1))
      {
        sub_1009A3E14(&v22, v25);
        sub_1009A3E14(v25, &v22);
        if ((swift_isUniquelyReferenced_nonNull_native(v4) & 1) == 0)
          v4 = sub_100D10304(0, v4[2] + 1, 1, v4);
        v8 = v4[2];
        v7 = v4[3];
        if (v8 >= v7 >> 1)
          v4 = sub_100D10304((_QWORD *)(v7 > 1), v8 + 1, 1, v4);
        v4[2] = v8 + 1;
        sub_1009A3E14(&v22, &v4[6 * v8 + 4]);
      }
      else
      {
        sub_1004CB800((uint64_t)&v22, &qword_1013FF118);
      }
      v3 += 40;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease(a1);
    v1 = v20;
  }
  else
  {
    v4 = _swiftEmptyArrayStorage;
  }
  v9 = v4[2];
  v10 = v1 - v9;
  if (v1 != v9)
  {
    if (qword_1013DD808 != -1)
      swift_once(&qword_1013DD808, sub_100A04654);
    swift_beginAccess(&static OS_os_log.crlLayerAnimation, v25, 0, 0);
    v11 = (void *)static OS_os_log.crlLayerAnimation;
    v12 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v12, v21);
    *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
    *(_QWORD *)(inited + 56) = &type metadata for Int;
    *(_QWORD *)(inited + 64) = &protocol witness table for Int;
    *(_QWORD *)(inited + 32) = v10;
    v14 = sub_1004CFC2C();
    v15 = 0xEF6572657720736ELL;
    if (v10 == 1)
      v15 = 0xED0000736177206ELL;
    *(_QWORD *)(inited + 96) = &type metadata for String;
    *(_QWORD *)(inited + 104) = v14;
    *(_QWORD *)(inited + 72) = 0x6F6974616D696E61;
    *(_QWORD *)(inited + 80) = v15;
    v16 = v11;
    v17 = static os_log_type_t.error.getter();
    sub_100A06EBC((uint64_t)v16, &_mh_execute_header, v17, "timingModifiableLayerAnimations was called, but not all layerAnimations are timing-modifiable. Non-timing-modifiable animations should only be added after the animation has been fully processed(). %@ non-timing-modifiable %@ dropped on the floor.", 246, 2, inited);
    swift_setDeallocating(inited);
    v18 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 2, v18);

  }
  return v4;
}

double sub_1009A3A40(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
  {
    v17 = 0u;
    v18 = 0u;
    v19 = 0;
LABEL_6:
    sub_1004CB800((uint64_t)&v17, &qword_1013EA650);
    return 0.0;
  }
  sub_1004E90B0(a1 + 32, (uint64_t)&v14);
  swift_bridgeObjectRetain(a1);
  v3 = v1 - 1;
  if (v1 != 1)
  {
    v8 = a1 + 72;
    do
    {
      sub_1004E90B0(v8, (uint64_t)&v17);
      v10 = v15;
      v9 = v16;
      sub_1004BB5A4(&v14, v15);
      v11 = (*(double (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v9 + 24) + 8) + 40))(v10);
      v13 = *((_QWORD *)&v18 + 1);
      v12 = v19;
      sub_1004BB5A4(&v17, *((uint64_t *)&v18 + 1));
      if (v11 >= (*(double (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v12 + 24) + 8) + 40))(v13))
      {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v17);
      }
      else
      {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v14);
        sub_1004DB728(&v17, (uint64_t)&v14);
      }
      v8 += 40;
      --v3;
    }
    while (v3);
  }
  sub_1004DB728(&v14, (uint64_t)&v17);
  swift_bridgeObjectRelease(a1);
  v4 = *((_QWORD *)&v18 + 1);
  if (!*((_QWORD *)&v18 + 1))
    goto LABEL_6;
  v5 = v19;
  sub_1004BB5A4(&v17, *((uint64_t *)&v18 + 1));
  v6 = (*(double (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v5 + 24) + 8) + 40))(v4);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v17);
  return v6;
}

double sub_1009A3BB4()
{
  double *v0;
  double v1;

  v1 = v0[1];
  swift_bridgeObjectRetain(*(_QWORD *)v0);
  return v1;
}

double sub_1009A3BDC()
{
  uint64_t *v0;

  return sub_1009A3A40(*v0);
}

double sub_1009A3BE4(uint64_t a1, double a2)
{
  uint64_t v3;
  uint64_t v4;
  double *v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19[2];
  _BYTE v20[40];
  double *v21;

  v21 = _swiftEmptyArrayStorage;
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = a1 + 32;
    do
    {
      sub_1009A3D84(v4, (uint64_t)v20);
      sub_1009A3DCC((uint64_t)v20, (uint64_t)&v16);
      if (v17)
      {
        sub_1004DB728(&v16, (uint64_t)v19);
        sub_1004DB728(v19, (uint64_t)&v16);
        v5 = v21;
        if ((swift_isUniquelyReferenced_nonNull_native(v21) & 1) == 0)
        {
          v5 = (double *)sub_100D101C4(0, *((_QWORD *)v5 + 2) + 1, 1, v5);
          v21 = v5;
        }
        v7 = *((_QWORD *)v5 + 2);
        v6 = *((_QWORD *)v5 + 3);
        if (v7 >= v6 >> 1)
          v21 = (double *)sub_100D101C4((_QWORD *)(v6 > 1), v7 + 1, 1, v5);
        v8 = v17;
        v9 = v18;
        v10 = sub_1004CB9AC((uint64_t)&v16, v17);
        v11 = __chkstk_darwin(v10);
        v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, __n128))(v14 + 16))(v13, v11);
        sub_1005C46A8(v7, (uint64_t)v13, (uint64_t *)&v21, v8, v9);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v16);
      }
      else
      {
        sub_1004CB800((uint64_t)&v16, &qword_1013EA650);
      }
      v4 += 40;
      --v3;
    }
    while (v3);
  }
  return a2;
}

uint64_t sub_1009A3D84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013EA650);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1009A3DCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013EA650);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_OWORD *sub_1009A3E14(__int128 *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[2];
  a2[1] = a1[1];
  a2[2] = v3;
  *a2 = v2;
  return a2;
}

ValueMetadata *type metadata accessor for CRLLayerAnimationFlatGroup()
{
  return &type metadata for CRLLayerAnimationFlatGroup;
}

uint64_t *initializeBufferWithCopyOfBuffer for CRLAppIntentsBoardItemsImporterError(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  *a1 = *a2;
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t *assignWithCopy for CRLAppIntentsBoardItemsImporterError(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t *assignWithTake for CRLAppIntentsBoardItemsImporterError(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v3);
  return a1;
}

uint64_t _s11ClientSceneC22InternalAnimationStateOwet(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t _s11ClientSceneC22InternalAnimationStateOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLAppIntentsBoardItemsImporterError()
{
  return &type metadata for CRLAppIntentsBoardItemsImporterError;
}

uint64_t *CRLDeviceManagementRestrictionsManager.deviceManagementRestrictionsChangedNotificationName.unsafeMutableAddressor()
{
  if (qword_1013DD610 != -1)
    swift_once(&qword_1013DD610, sub_1009A3FC8);
  return &static CRLDeviceManagementRestrictionsManager.deviceManagementRestrictionsChangedNotificationName;
}

NSString sub_1009A3FC8()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  static CRLDeviceManagementRestrictionsManager.deviceManagementRestrictionsChangedNotificationName = (uint64_t)result;
  return result;
}

id static CRLDeviceManagementRestrictionsManager.deviceManagementRestrictionsChangedNotificationName.getter()
{
  return sub_1009A4484(&qword_1013DD610, (id *)&static CRLDeviceManagementRestrictionsManager.deviceManagementRestrictionsChangedNotificationName, (uint64_t)sub_1009A3FC8);
}

uint64_t CRLDeviceManagementRestrictionsManager.isMathPaperSolvingAllowed.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0
                         + OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager_isMathPaperSolvingAllowed);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager_isMathPaperSolvingAllowed, v3, 0, 0);
  return *v1;
}

uint64_t CRLDeviceManagementRestrictionsManager.isKeyboardMathSolvingAllowed.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0
                         + OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager_isKeyboardMathSolvingAllowed);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager_isKeyboardMathSolvingAllowed, v3, 0, 0);
  return *v1;
}

uint64_t CRLDeviceManagementRestrictionsManager.isDefinitionLookupAllowed.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0
                         + OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager_isDefinitionLookupAllowed);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager_isDefinitionLookupAllowed, v3, 0, 0);
  return *v1;
}

id sub_1009A42A4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  id v5;

  v1 = OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager____lazy_storage___connection;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager____lazy_storage___connection);
  v3 = v2;
  if (v2 == (void *)1)
  {
    v3 = objc_msgSend((id)objc_opt_self(MCProfileConnection), "sharedConnection");
    v4 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v3;
    v5 = v3;
    sub_1004CB49C(v4);
  }
  sub_1004CB968(v2);
  return v3;
}

id CRLDeviceManagementRestrictionsManager.__deallocating_deinit()
{
  void *v0;
  id v1;
  void *v2;
  objc_super v4;

  v1 = sub_1009A42A4();
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, "unregisterObserver:", v0);

  }
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for CRLDeviceManagementRestrictionsManager();
  return objc_msgSendSuper2(&v4, "dealloc");
}

uint64_t type metadata accessor for CRLDeviceManagementRestrictionsManager()
{
  return objc_opt_self(_TtC8Freeform38CRLDeviceManagementRestrictionsManager);
}

void sub_1009A4410()
{
  id v0;

  v0 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CRLDeviceManagementRestrictionsManager()), "init");
  CRLDeviceManagementRestrictionsManager.registerObserver()();
  qword_1013FF120 = (uint64_t)v0;
}

id static CRLDeviceManagementRestrictionsManager.shared.getter()
{
  return sub_1009A4484(&qword_1013DD618, (id *)&qword_1013FF120, (uint64_t)sub_1009A4410);
}

id sub_1009A4484(_QWORD *a1, id *a2, uint64_t a3)
{
  if (*a1 != -1)
    swift_once(a1, a3);
  return *a2;
}

Swift::Void __swiftcall CRLDeviceManagementRestrictionsManager.registerObserver()()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  unsigned __int8 v5;
  unsigned __int8 *v6;
  unsigned __int8 v7;
  id v8;
  void *v9;
  unsigned __int8 *v10;
  unsigned __int8 v11;
  id v12;
  void *v13;
  unsigned __int8 *v14;
  _BYTE v15[24];
  _BYTE v16[24];
  _BYTE v17[24];

  v1 = sub_1009A42A4();
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, "registerObserver:", v0);

  }
  v3 = sub_1009A42A4();
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v3, "isMathPaperSolvingAllowed");

  }
  else
  {
    v5 = 1;
  }
  v6 = (unsigned __int8 *)(v0
                         + OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager_isMathPaperSolvingAllowed);
  v7 = 1;
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager_isMathPaperSolvingAllowed, v17, 1, 0);
  *v6 = v5;
  v8 = sub_1009A42A4();
  if (v8)
  {
    v9 = v8;
    v7 = objc_msgSend(v8, "isKeyboardMathSolvingAllowed");

  }
  v10 = (unsigned __int8 *)(v0
                          + OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager_isKeyboardMathSolvingAllowed);
  v11 = 1;
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager_isKeyboardMathSolvingAllowed, v16, 1, 0);
  *v10 = v7;
  v12 = sub_1009A42A4();
  if (v12)
  {
    v13 = v12;
    v11 = objc_msgSend(v12, "isDefinitionLookupAllowed");

  }
  v14 = (unsigned __int8 *)(v0
                          + OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager_isDefinitionLookupAllowed);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager_isDefinitionLookupAllowed, v15, 1, 0);
  *v14 = v11;
}

id CRLDeviceManagementRestrictionsManager.init()()
{
  _BYTE *v0;
  objc_super v2;

  v0[OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager_isMathPaperSolvingAllowed] = 1;
  v0[OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager_isKeyboardMathSolvingAllowed] = 1;
  v0[OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager_isDefinitionLookupAllowed] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager____lazy_storage___connection] = 1;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLDeviceManagementRestrictionsManager();
  return objc_msgSendSuper2(&v2, "init");
}

void _s8Freeform38CRLDeviceManagementRestrictionsManagerC63profileConnectionDidReceiveEffectiveSettingsChangedNotification_8userInfoySo09MCProfileG0CSg_SDys11AnyHashableVypGSgtF_0(void *a1)
{
  uint64_t v1;
  unsigned __int8 v3;
  _BYTE *v4;
  double v5;
  char v6;
  unsigned int v7;
  _BYTE *v8;
  double v9;
  unsigned int v10;
  _BYTE *v11;
  double v12;
  id v13;
  _BYTE v14[24];
  _BYTE v15[24];
  _BYTE v16[24];

  if (!a1)
  {
    __break(1u);
    return;
  }
  v3 = objc_msgSend(a1, "isMathPaperSolvingAllowed");
  v4 = (_BYTE *)(v1 + OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager_isMathPaperSolvingAllowed);
  *(_QWORD *)&v5 = swift_beginAccess(v1 + OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager_isMathPaperSolvingAllowed, v16, 1, 0).n128_u64[0];
  v6 = v3 ^ *v4;
  if ((v6 & 1) != 0)
    *v4 = objc_msgSend(a1, "isMathPaperSolvingAllowed", v5);
  v7 = objc_msgSend(a1, "isKeyboardMathSolvingAllowed", v5);
  v8 = (_BYTE *)(v1 + OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager_isKeyboardMathSolvingAllowed);
  *(_QWORD *)&v9 = swift_beginAccess(v1 + OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager_isKeyboardMathSolvingAllowed, v15, 1, 0).n128_u64[0];
  if (v7 != *v8)
  {
    *v8 = objc_msgSend(a1, "isKeyboardMathSolvingAllowed", v9);
    v6 = 1;
  }
  v10 = objc_msgSend(a1, "isDefinitionLookupAllowed");
  v11 = (_BYTE *)(v1 + OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager_isDefinitionLookupAllowed);
  *(_QWORD *)&v12 = swift_beginAccess(v11, v14, 1, 0).n128_u64[0];
  if (v10 == *v11)
  {
    if ((v6 & 1) == 0)
      return;
  }
  else
  {
    *v11 = objc_msgSend(a1, "isDefinitionLookupAllowed", v12);
  }
  v13 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  if (qword_1013DD610 != -1)
    swift_once(&qword_1013DD610, sub_1009A3FC8);
  objc_msgSend(v13, "postNotificationName:object:userInfo:", static CRLDeviceManagementRestrictionsManager.deviceManagementRestrictionsChangedNotificationName, 0, 0);

}

uint64_t sub_1009A4914@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1009A4950(a1, &OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager_isMathPaperSolvingAllowed, a2);
}

uint64_t sub_1009A4920(char *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1009A49A8(a1, a2, a3, a4, &OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager_isMathPaperSolvingAllowed);
}

uint64_t sub_1009A492C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1009A4950(a1, &OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager_isKeyboardMathSolvingAllowed, a2);
}

uint64_t sub_1009A4938(char *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1009A49A8(a1, a2, a3, a4, &OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager_isKeyboardMathSolvingAllowed);
}

uint64_t sub_1009A4944@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1009A4950(a1, &OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager_isDefinitionLookupAllowed, a2);
}

uint64_t sub_1009A4950@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, _BYTE *a3@<X8>)
{
  _BYTE *v4;
  uint64_t result;
  _BYTE v6[24];

  v4 = (_BYTE *)(*a1 + *a2);
  result = swift_beginAccess(v4, v6, 0, 0);
  *a3 = *v4;
  return result;
}

uint64_t sub_1009A499C(char *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1009A49A8(a1, a2, a3, a4, &OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager_isDefinitionLookupAllowed);
}

uint64_t sub_1009A49A8(char *a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  char v5;
  _BYTE *v6;
  uint64_t result;
  _BYTE v8[24];

  v5 = *a1;
  v6 = (_BYTE *)(*a2 + *a5);
  result = swift_beginAccess(v6, v8, 1, 0);
  *v6 = v5;
  return result;
}

id sub_1009A49F0()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CRLWPObjcUserDefaults()), "init");
  static CRLWPObjcUserDefaults.shared = (uint64_t)result;
  return result;
}

uint64_t *CRLWPObjcUserDefaults.shared.unsafeMutableAddressor()
{
  if (qword_1013DD620 != -1)
    swift_once(&qword_1013DD620, sub_1009A49F0);
  return &static CRLWPObjcUserDefaults.shared;
}

id static CRLWPObjcUserDefaults.shared.getter()
{
  if (qword_1013DD620 != -1)
    swift_once(&qword_1013DD620, sub_1009A49F0);
  return (id)static CRLWPObjcUserDefaults.shared;
}

Swift::Bool __swiftcall CRLWPObjcUserDefaults.spellCheckingEnabled()()
{
  char v0;

  if (qword_1013DDF20 != -1)
    swift_once(&qword_1013DDF20, sub_100D42CC0);
  sub_1009A4CEC(2);
  return (v0 == 2) | v0 & 1;
}

uint64_t _s8Freeform21CRLWPObjcUserDefaultsC27automaticSpellingCorrectionSbyF_0()
{
  if (qword_1013DDF20 != -1)
    swift_once(&qword_1013DDF20, sub_100D42CC0);
  return 1;
}

id CRLWPObjcUserDefaults.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType(v0);
  return objc_msgSendSuper2(&v2, "init");
}

id sub_1009A4C9C@<X0>(_QWORD *a1@<X8>)
{
  void *v2;

  if (qword_1013DD620 != -1)
    swift_once(&qword_1013DD620, sub_1009A49F0);
  v2 = (void *)static CRLWPObjcUserDefaults.shared;
  *a1 = static CRLWPObjcUserDefaults.shared;
  return v2;
}

void sub_1009A4CEC(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1009A4D3C()
{
  void *v0;
  NSString v1;
  id v2;
  uint64_t v3;
  _OWORD v5[2];
  _OWORD v6[5];

  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "objectForKey:", v1, swift_bridgeObjectRelease().n128_f64[0]);

  if (v2)
  {
    _bridgeAnyObjectToAny(_:)(v5, v2);
    swift_unknownObjectRelease(v2);
    sub_10050CB14(v5, v6);
  }
  else
  {
    memset(v6, 0, 32);
  }
  v3 = sub_1004B804C(&qword_1013E0230);
  if (swift_dynamicCast(v5, v6, v3, &type metadata for Bool, 6))
    return LOBYTE(v5[0]);
  else
    return 2;
}

uint64_t type metadata accessor for CRLWPObjcUserDefaults()
{
  return objc_opt_self(_TtC8Freeform21CRLWPObjcUserDefaults);
}

uint64_t sub_1009A4E60(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v30)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain(v4);
  }
  else
  {
    v7 = a1;
    v8 = a2[1];
    v9 = a2[2];
    *(_QWORD *)(a1 + 8) = v8;
    *(_QWORD *)(a1 + 16) = v9;
    v10 = a2[3];
    v11 = a2[4];
    *(_QWORD *)(a1 + 24) = v10;
    *(_QWORD *)(a1 + 32) = v11;
    v13 = a2[5];
    v12 = a2[6];
    *(_QWORD *)(a1 + 40) = v13;
    *(_QWORD *)(a1 + 48) = v12;
    v32 = v12;
    v33 = a2[7];
    v34 = a2[8];
    *(_QWORD *)(a1 + 56) = v33;
    *(_QWORD *)(a1 + 64) = v34;
    v14 = a2[9];
    v31 = a2[10];
    *(_DWORD *)(a1 + 88) = *((_DWORD *)a2 + 22);
    v15 = a3[16];
    v35 = (uint64_t)a2 + v15;
    v36 = a1 + v15;
    *(_QWORD *)(a1 + 72) = v14;
    *(_QWORD *)(a1 + 80) = v31;
    v16 = type metadata accessor for Date(0);
    v30 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v16 - 8) + 16);
    swift_bridgeObjectRetain(v4);
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v9);
    swift_bridgeObjectRetain(v10);
    swift_bridgeObjectRetain(v11);
    swift_bridgeObjectRetain(v13);
    swift_bridgeObjectRetain(v32);
    swift_bridgeObjectRetain(v33);
    swift_bridgeObjectRetain(v34);
    v17 = swift_bridgeObjectRetain(v31);
    v30(v36, v35, v16, v17);
    v18 = a3[18];
    *(_DWORD *)(v7 + a3[17]) = *(_DWORD *)((char *)a2 + a3[17]);
    *(_DWORD *)(v7 + v18) = *(_DWORD *)((char *)a2 + v18);
    v19 = a3[19];
    v20 = (void *)(v7 + v19);
    v21 = (char *)a2 + v19;
    v22 = type metadata accessor for UUID(0);
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    {
      v24 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    }
    v25 = a3[20];
    v26 = a3[21];
    v27 = v7 + v25;
    v28 = (uint64_t)a2 + v25;
    *(_QWORD *)v27 = *(_QWORD *)v28;
    *(_BYTE *)(v27 + 8) = *(_BYTE *)(v28 + 8);
    *(_BYTE *)(v7 + v26) = *((_BYTE *)a2 + v26);
  }
  return v7;
}

uint64_t sub_1009A5064(_QWORD *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  swift_bridgeObjectRelease(*a1);
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[2]);
  swift_bridgeObjectRelease(a1[3]);
  swift_bridgeObjectRelease(a1[4]);
  swift_bridgeObjectRelease(a1[5]);
  swift_bridgeObjectRelease(a1[6]);
  swift_bridgeObjectRelease(a1[7]);
  swift_bridgeObjectRelease(a1[8]);
  swift_bridgeObjectRelease(a1[10]);
  v4 = (char *)a1 + *(int *)(a2 + 64);
  v5 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = (char *)a1 + *(int *)(a2 + 76);
  v7 = type metadata accessor for UUID(0);
  v8 = *(_QWORD *)(v7 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v6, v7);
  return result;
}

uint64_t sub_1009A514C(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v30)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v5 = *a2;
  v6 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = a2[2];
  v8 = a2[3];
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v8;
  v9 = a2[4];
  v10 = a2[5];
  *(_QWORD *)(a1 + 32) = v9;
  *(_QWORD *)(a1 + 40) = v10;
  v12 = a2[6];
  v11 = a2[7];
  *(_QWORD *)(a1 + 48) = v12;
  *(_QWORD *)(a1 + 56) = v11;
  v32 = v11;
  v33 = a2[8];
  v13 = a2[9];
  *(_QWORD *)(a1 + 64) = v33;
  *(_QWORD *)(a1 + 72) = v13;
  v31 = a2[10];
  *(_DWORD *)(a1 + 88) = *((_DWORD *)a2 + 22);
  v14 = a3[16];
  v34 = (uint64_t)a2 + v14;
  v35 = a1 + v14;
  *(_QWORD *)(a1 + 80) = v31;
  v15 = type metadata accessor for Date(0);
  v30 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v15 - 8) + 16);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRetain(v32);
  swift_bridgeObjectRetain(v33);
  v16 = swift_bridgeObjectRetain(v31);
  v30(v35, v34, v15, v16);
  v17 = a3[18];
  *(_DWORD *)(a1 + a3[17]) = *(_DWORD *)((char *)a2 + a3[17]);
  *(_DWORD *)(a1 + v17) = *(_DWORD *)((char *)a2 + v17);
  v18 = a3[19];
  v19 = (void *)(a1 + v18);
  v20 = (char *)a2 + v18;
  v21 = type metadata accessor for UUID(0);
  v22 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    v23 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  v24 = a3[20];
  v25 = a3[21];
  v26 = a1 + v24;
  v27 = (uint64_t)a2 + v24;
  *(_QWORD *)v26 = *(_QWORD *)v27;
  *(_BYTE *)(v26 + 8) = *(_BYTE *)(v27 + 8);
  *(_BYTE *)(a1 + v25) = *((_BYTE *)a2 + v25);
  return a1;
}

uint64_t sub_1009A5328(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(void *, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;

  v6 = *a2;
  *(_QWORD *)a1 = *a2;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease();
  v7 = a2[1];
  *(_QWORD *)(a1 + 8) = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease();
  v8 = a2[2];
  *(_QWORD *)(a1 + 16) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease();
  v9 = a2[3];
  *(_QWORD *)(a1 + 24) = v9;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRelease();
  v10 = a2[4];
  *(_QWORD *)(a1 + 32) = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease();
  v11 = a2[5];
  *(_QWORD *)(a1 + 40) = v11;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRelease();
  v12 = a2[6];
  *(_QWORD *)(a1 + 48) = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease();
  v13 = a2[7];
  *(_QWORD *)(a1 + 56) = v13;
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRelease();
  v14 = a2[8];
  *(_QWORD *)(a1 + 64) = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = a2[9];
  v15 = a2[10];
  *(_QWORD *)(a1 + 80) = v15;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 88) = *((_DWORD *)a2 + 22);
  v16 = a3[16];
  v17 = a1 + v16;
  v18 = (uint64_t)a2 + v16;
  v19 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 24))(v17, v18, v19);
  *(_DWORD *)(a1 + a3[17]) = *(_DWORD *)((char *)a2 + a3[17]);
  *(_DWORD *)(a1 + a3[18]) = *(_DWORD *)((char *)a2 + a3[18]);
  v20 = a3[19];
  v21 = (void *)(a1 + v20);
  v22 = (char *)a2 + v20;
  v23 = type metadata accessor for UUID(0);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v24 + 48);
  v26 = v25(v21, 1, v23);
  v27 = v25(v22, 1, v23);
  if (!v26)
  {
    if (!v27)
    {
      (*(void (**)(void *, char *, uint64_t))(v24 + 24))(v21, v22, v23);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v24 + 8))(v21, v23);
    goto LABEL_6;
  }
  if (v27)
  {
LABEL_6:
    v28 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
LABEL_7:
  v29 = a3[20];
  v30 = a1 + v29;
  v31 = (uint64_t *)((char *)a2 + v29);
  v32 = *v31;
  *(_BYTE *)(v30 + 8) = *((_BYTE *)v31 + 8);
  *(_QWORD *)v30 = v32;
  *(_BYTE *)(a1 + a3[21]) = *((_BYTE *)a2 + a3[21]);
  return a1;
}

uint64_t sub_1009A55A4(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  v8 = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  v9 = a3[16];
  v10 = a1 + v9;
  v11 = a2 + v9;
  *(_OWORD *)(a1 + 64) = v8;
  v12 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  v13 = a3[18];
  *(_DWORD *)(a1 + a3[17]) = *(_DWORD *)(a2 + a3[17]);
  *(_DWORD *)(a1 + v13) = *(_DWORD *)(a2 + v13);
  v14 = a3[19];
  v15 = (void *)(a1 + v14);
  v16 = (const void *)(a2 + v14);
  v17 = type metadata accessor for UUID(0);
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    v19 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v18 + 32))(v15, v16, v17);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  v20 = a3[20];
  v21 = a3[21];
  v22 = a1 + v20;
  v23 = a2 + v20;
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *(_BYTE *)(v22 + 8) = *(_BYTE *)(v23 + 8);
  *(_BYTE *)(a1 + v21) = *(_BYTE *)(a2 + v21);
  return a1;
}

uint64_t sub_1009A56F4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v6;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  v7 = a3[16];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[18];
  *(_DWORD *)(a1 + a3[17]) = *(_DWORD *)(a2 + a3[17]);
  *(_DWORD *)(a1 + v11) = *(_DWORD *)(a2 + v11);
  v12 = a3[19];
  v13 = (void *)(a1 + v12);
  v14 = (void *)(a2 + v12);
  v15 = type metadata accessor for UUID(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 40))(v13, v14, v15);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    v20 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 32))(v13, v14, v15);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
LABEL_7:
  v21 = a3[20];
  v22 = a3[21];
  v23 = a1 + v21;
  v24 = a2 + v21;
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *(_BYTE *)(v23 + 8) = *(_BYTE *)(v24 + 8);
  *(_BYTE *)(a1 + v22) = *(_BYTE *)(a2 + v22);
  return a1;
}

uint64_t sub_1009A5910(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1009A591C);
}

uint64_t sub_1009A591C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for Date(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 64);
    }
    else
    {
      v10 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 76);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t sub_1009A59C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1009A59CC);
}

char *sub_1009A59CC(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for Date(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 64);
    }
    else
    {
      v10 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 76);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for CRLPKStrokePathData(uint64_t a1)
{
  uint64_t result;

  result = qword_1013FF250;
  if (!qword_1013FF250)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLPKStrokePathData);
  return result;
}

void sub_1009A5AA8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[18];

  v6[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v6[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v6[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v6[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v6[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v6[5] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v6[6] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v6[7] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v6[8] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v6[9] = (char *)&value witness table for Builtin.Int64 + 64;
  v6[10] = "\b";
  v6[11] = (char *)&value witness table for Builtin.Int32 + 64;
  v2 = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v6[12] = *(_QWORD *)(v2 - 8) + 64;
    v6[13] = (char *)&value witness table for Builtin.Int32 + 64;
    v6[14] = (char *)&value witness table for Builtin.Int32 + 64;
    sub_1005E26CC(319);
    if (v5 <= 0x3F)
    {
      v6[15] = *(_QWORD *)(v4 - 8) + 64;
      v6[16] = &unk_100F1ED50;
      v6[17] = &unk_100F1ED68;
      swift_initStructMetadata(a1, 256, 18, v6, a1 + 16);
    }
  }
}

uint64_t sub_1009A5B88()
{
  return sub_1004B7878(&qword_1013FF2C8, type metadata accessor for CRLPKStrokePathData, (uint64_t)&unk_100F1EE58);
}

void sub_1009A5BB4(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  __int16 v26;
  __int16 v27;
  __int16 v28;
  uint64_t v29;
  double (*v30)(uint64_t, uint64_t, double, double, double, double, double, double);
  int v31;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  id v56;
  unint64_t v57;
  double v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  id v64;
  id v65;
  char *v66;
  int v67;
  int v68;
  id v69;
  void *v70;
  uint64_t v71;
  id v72;
  double v73;
  double v74;
  double v75;
  double v76;
  unsigned int v77;
  unsigned int v78;
  uint64_t v79;
  int *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v92;
  uint64_t v93;
  char *v94;
  id v95;
  _QWORD *v96;
  _QWORD *v97;
  int v98;
  int v99;
  _QWORD *v100;
  _QWORD *v101;
  _QWORD *v102;
  void **aBlock;
  uint64_t v104;
  double (*v105)(uint64_t, uint64_t, double, double, double, double, double, double);
  void *v106;
  void (*v107)(uint64_t, double, double, double, double, double, double);
  uint64_t v108;

  v6 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v6);
  v8 = (char *)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = type metadata accessor for Date(0);
  v89 = *(_QWORD *)(v90 - 8);
  __chkstk_darwin(v90);
  v88 = (char *)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)a3 = _swiftEmptyArrayStorage;
  *(_QWORD *)(a3 + 8) = _swiftEmptyArrayStorage;
  *(_QWORD *)(a3 + 16) = _swiftEmptyArrayStorage;
  *(_QWORD *)(a3 + 24) = _swiftEmptyArrayStorage;
  *(_QWORD *)(a3 + 32) = _swiftEmptyArrayStorage;
  *(_QWORD *)(a3 + 40) = _swiftEmptyArrayStorage;
  *(_QWORD *)(a3 + 48) = _swiftEmptyArrayStorage;
  *(_QWORD *)(a3 + 56) = _swiftEmptyArrayStorage;
  *(_QWORD *)(a3 + 64) = _swiftEmptyArrayStorage;
  *(_QWORD *)(a3 + 80) = 0;
  *(_DWORD *)(a3 + 88) = 0;
  v10 = (int *)type metadata accessor for CRLPKStrokePathData(0);
  v85 = a3 + v10[16];
  static Date.now.getter();
  v86 = v10[17];
  *(_DWORD *)(a3 + v86) = 1065353216;
  v87 = v10[18];
  *(_DWORD *)(a3 + v87) = 1065353216;
  v11 = a3 + v10[19];
  v12 = type metadata accessor for UUID(0);
  v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
  v92 = v12;
  v93 = v11;
  v91 = v13;
  ((void (*)(uint64_t, uint64_t, uint64_t))v13)(v11, 1, 1);
  v14 = a3 + v10[20];
  *(_QWORD *)v14 = 0;
  *(_BYTE *)(v14 + 8) = 1;
  v95 = a1;
  v94 = (char *)objc_msgSend(a1, "pointCount");
  if (v94)
  {
    v80 = v10;
    v81 = a3;
    v82 = v14;
    v83 = v8;
    v84 = a2;
    v15 = 0;
    v16 = _swiftEmptyArrayStorage;
    v17 = _swiftEmptyArrayStorage;
    v18 = _swiftEmptyArrayStorage;
    v19 = _swiftEmptyArrayStorage;
    v20 = _swiftEmptyArrayStorage;
    v21 = _swiftEmptyArrayStorage;
    v22 = _swiftEmptyArrayStorage;
    v101 = _swiftEmptyArrayStorage;
    v102 = _swiftEmptyArrayStorage;
    do
    {
      v100 = v22;
      v23 = v21;
      v96 = v20;
      v97 = v19;
      v24 = v18;
      v25 = v17;
      objc_msgSend(v95, "strokePointCompactDataAtIndex:", v15);
      v26 = (__int16)aBlock;
      v98 = WORD1(aBlock);
      v27 = WORD2(aBlock);
      v28 = HIWORD(aBlock);
      v29 = v104;
      v30 = v105;
      v31 = (unsigned __int16)v106;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v102);
      v99 = v31;
      v33 = v16;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        v102 = sub_100D0EE8C(0, v102[2] + 1, 1, v102);
      v35 = v102[2];
      v34 = v102[3];
      if (v35 >= v34 >> 1)
        v102 = sub_100D0EE8C((_QWORD *)(v34 > 1), v35 + 1, 1, v102);
      v36 = v102;
      v102[2] = v35 + 1;
      *((_WORD *)v36 + v35 + 16) = v28;
      v16 = v33;
      if ((swift_isUniquelyReferenced_nonNull_native(v33) & 1) == 0)
        v16 = sub_100D0EE8C(0, v33[2] + 1, 1, v33);
      v17 = v25;
      v38 = v16[2];
      v37 = v16[3];
      if (v38 >= v37 >> 1)
        v16 = sub_100D0EE8C((_QWORD *)(v37 > 1), v38 + 1, 1, v16);
      v16[2] = v38 + 1;
      *((_WORD *)v16 + v38 + 16) = v27;
      if ((swift_isUniquelyReferenced_nonNull_native(v25) & 1) == 0)
        v17 = sub_100D0EE8C(0, v25[2] + 1, 1, v25);
      v18 = v24;
      v21 = v23;
      v40 = v17[2];
      v39 = v17[3];
      v22 = v100;
      if (v40 >= v39 >> 1)
        v17 = sub_100D0EE8C((_QWORD *)(v39 > 1), v40 + 1, 1, v17);
      v17[2] = v40 + 1;
      *((_WORD *)v17 + v40 + 16) = v26;
      if ((swift_isUniquelyReferenced_nonNull_native(v24) & 1) == 0)
        v18 = sub_100D0EE8C(0, v24[2] + 1, 1, v24);
      v20 = v96;
      v19 = v97;
      v42 = v18[2];
      v41 = v18[3];
      if (v42 >= v41 >> 1)
        v18 = sub_100D0EE8C((_QWORD *)(v41 > 1), v42 + 1, 1, v18);
      v18[2] = v42 + 1;
      *((_WORD *)v18 + v42 + 16) = v98;
      if ((swift_isUniquelyReferenced_nonNull_native(v19) & 1) == 0)
        v19 = sub_100D0ED80(0, v19[2] + 1, 1, v19);
      v44 = v19[2];
      v43 = v19[3];
      if (v44 >= v43 >> 1)
        v19 = sub_100D0ED80((_QWORD *)(v43 > 1), v44 + 1, 1, v19);
      v19[2] = v44 + 1;
      *((_DWORD *)v19 + v44 + 8) = v29;
      if ((swift_isUniquelyReferenced_nonNull_native(v20) & 1) == 0)
        v20 = sub_100D0ED80(0, v20[2] + 1, 1, v20);
      v46 = v20[2];
      v45 = v20[3];
      if (v46 >= v45 >> 1)
        v20 = sub_100D0ED80((_QWORD *)(v45 > 1), v46 + 1, 1, v20);
      v20[2] = v46 + 1;
      *((_DWORD *)v20 + v46 + 8) = HIDWORD(v29);
      if ((swift_isUniquelyReferenced_nonNull_native(v21) & 1) == 0)
        v21 = sub_100D0ED80(0, v21[2] + 1, 1, v21);
      v48 = v21[2];
      v47 = v21[3];
      if (v48 >= v47 >> 1)
        v21 = sub_100D0ED80((_QWORD *)(v47 > 1), v48 + 1, 1, v21);
      v21[2] = v48 + 1;
      *((_DWORD *)v21 + v48 + 8) = (_DWORD)v30;
      if ((swift_isUniquelyReferenced_nonNull_native(v22) & 1) == 0)
        v22 = sub_100D0ED80(0, v22[2] + 1, 1, v22);
      v50 = v22[2];
      v49 = v22[3];
      if (v50 >= v49 >> 1)
        v22 = sub_100D0ED80((_QWORD *)(v49 > 1), v50 + 1, 1, v22);
      v22[2] = v50 + 1;
      *((_DWORD *)v22 + v50 + 8) = HIDWORD(v30);
      if ((swift_isUniquelyReferenced_nonNull_native(v101) & 1) == 0)
        v101 = sub_100D0EE8C(0, v101[2] + 1, 1, v101);
      v52 = v101[2];
      v51 = v101[3];
      if (v52 >= v51 >> 1)
        v101 = sub_100D0EE8C((_QWORD *)(v51 > 1), v52 + 1, 1, v101);
      ++v15;
      v53 = v101;
      v101[2] = v52 + 1;
      *((_WORD *)v53 + v52 + 16) = v99;
    }
    while (v94 != v15);
    a3 = v81;
    v54 = v101;
    *(_QWORD *)(v81 + 56) = v22;
    *(_QWORD *)(a3 + 64) = v54;
    *(_QWORD *)(a3 + 40) = v20;
    *(_QWORD *)(a3 + 48) = v21;
    *(_QWORD *)(a3 + 24) = v18;
    *(_QWORD *)(a3 + 32) = v19;
    *(_QWORD *)(a3 + 8) = v16;
    *(_QWORD *)(a3 + 16) = v17;
    *(_QWORD *)a3 = v102;
    a2 = v84;
    v8 = v83;
    v14 = v82;
    v10 = v80;
  }
  v55 = v10[21];
  v56 = v95;
  *(_BYTE *)(a3 + v55) = objc_msgSend(v95, "shouldSolveMath");
  v57 = (unint64_t)objc_msgSend(v56, "pointCount");
  if ((v57 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a3 + 72) = v57;
    sub_1009A64A8();
    if (a2)
    {
      v59 = swift_allocObject(&unk_10128D818, 24, 7);
      *(_QWORD *)(v59 + 16) = _swiftEmptyArrayStorage;
      v107 = sub_100786C04;
      v108 = v59;
      aBlock = _NSConcreteStackBlock;
      v104 = *(_QWORD *)"";
      v105 = sub_100933E14;
      v106 = &unk_10128D830;
      v60 = _Block_copy(&aBlock);
      v61 = v108;
      v62 = a2;
      swift_retain(v59);
      objc_msgSend(v62, "iteratePathElementsWithBlock:", v60, swift_release(v61).n128_f64[0]);

      _Block_release(v60);
      swift_beginAccess(v59 + 16, &aBlock, 0, 0);
      v63 = *(_QWORD *)(v59 + 16);
      swift_bridgeObjectRetain(v63);
      swift_release(v59);
      *(_QWORD *)&v58 = swift_bridgeObjectRelease(*(_QWORD *)(a3 + 80)).n128_u64[0];
    }
    else
    {
      v63 = 0;
    }
    *(_QWORD *)(a3 + 80) = v63;
    v64 = v95;
    *(_DWORD *)(a3 + 88) = objc_msgSend(v95, "randomSeed", v58);
    v65 = objc_msgSend(v64, "creationDate");
    v66 = v88;
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v65);

    (*(void (**)(uint64_t, char *, uint64_t))(v89 + 40))(v85, v66, v90);
    objc_msgSend(v64, "renderScaleX");
    *(_DWORD *)(a3 + v86) = v67;
    objc_msgSend(v64, "renderScaleY");
    *(_DWORD *)(a3 + v87) = v68;
    v69 = objc_msgSend(v64, "renderGroupID");
    if (v69)
    {
      v70 = v69;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)(v69);

      v71 = 0;
    }
    else
    {
      v71 = 1;
    }
    v91(v8, v71, 1, v92);
    sub_1005E388C((uint64_t)v8, v93);
    v72 = v95;
    objc_msgSend(v95, "anchorPointForTexture");
    v74 = v73;
    v76 = v75;

    if (v74 != 0.0 || v76 != 0.0)
    {
      *(float *)&v77 = v74;
      *(float *)&v78 = v76;
      *(_QWORD *)v14 = v77 | ((unint64_t)v78 << 32);
      *(_BYTE *)(v14 + 8) = 0;
    }
  }
}

void sub_1009A64A8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(_QWORD);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v1 = type metadata accessor for CRLPKStrokePathData(0);
  v2 = __chkstk_darwin(v1);
  v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v2);
  v7 = (char *)&v34 - v6;
  v8 = __chkstk_darwin(v5);
  v10 = (char *)&v34 - v9;
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v34 - v12;
  v14 = __chkstk_darwin(v11);
  v16 = (char *)&v34 - v15;
  __chkstk_darwin(v14);
  v18 = (char *)&v34 - v17;
  v19 = v0[9];
  v20 = *(_QWORD *)(*v0 + 16);
  sub_1004B8460((uint64_t)v0, (uint64_t)&v34 - v17, v21);
  if (v19 != v20)
  {
    sub_1004B84A4((uint64_t)v18, type metadata accessor for CRLPKStrokePathData);
    sub_1004B8460((uint64_t)v0, (uint64_t)v16, type metadata accessor for CRLPKStrokePathData);
    goto LABEL_10;
  }
  v22 = *((_QWORD *)v18 + 9);
  v23 = *(_QWORD *)(*((_QWORD *)v18 + 1) + 16);
  sub_1004B84A4((uint64_t)v18, type metadata accessor for CRLPKStrokePathData);
  sub_1004B8460((uint64_t)v0, (uint64_t)v16, type metadata accessor for CRLPKStrokePathData);
  if (v22 != v23)
  {
LABEL_10:
    sub_1004B84A4((uint64_t)v16, type metadata accessor for CRLPKStrokePathData);
    sub_1004B8460((uint64_t)v0, (uint64_t)v13, type metadata accessor for CRLPKStrokePathData);
    goto LABEL_11;
  }
  v24 = *((_QWORD *)v16 + 9);
  v25 = *(_QWORD *)(*((_QWORD *)v16 + 2) + 16);
  sub_1004B84A4((uint64_t)v16, type metadata accessor for CRLPKStrokePathData);
  sub_1004B8460((uint64_t)v0, (uint64_t)v13, type metadata accessor for CRLPKStrokePathData);
  if (v24 != v25)
  {
LABEL_11:
    sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLPKStrokePathData);
    sub_1004B8460((uint64_t)v0, (uint64_t)v10, type metadata accessor for CRLPKStrokePathData);
    goto LABEL_12;
  }
  v26 = *((_QWORD *)v13 + 9);
  v27 = *(_QWORD *)(*((_QWORD *)v13 + 3) + 16);
  sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLPKStrokePathData);
  sub_1004B8460((uint64_t)v0, (uint64_t)v10, type metadata accessor for CRLPKStrokePathData);
  if (v26 != v27)
  {
LABEL_12:
    sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLPKStrokePathData);
    sub_1004B8460((uint64_t)v0, (uint64_t)v7, type metadata accessor for CRLPKStrokePathData);
    goto LABEL_13;
  }
  v28 = *((_QWORD *)v10 + 9);
  v29 = *(_QWORD *)(*((_QWORD *)v10 + 4) + 16);
  sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLPKStrokePathData);
  sub_1004B8460((uint64_t)v0, (uint64_t)v7, type metadata accessor for CRLPKStrokePathData);
  if (v28 != v29)
  {
LABEL_13:
    sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLPKStrokePathData);
    sub_1004B8460((uint64_t)v0, (uint64_t)v4, type metadata accessor for CRLPKStrokePathData);
    goto LABEL_14;
  }
  v30 = *((_QWORD *)v7 + 9);
  v31 = *(_QWORD *)(*((_QWORD *)v7 + 5) + 16);
  sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLPKStrokePathData);
  sub_1004B8460((uint64_t)v0, (uint64_t)v4, type metadata accessor for CRLPKStrokePathData);
  if (v30 != v31)
  {
LABEL_14:
    sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLPKStrokePathData);
    goto LABEL_15;
  }
  v32 = *((_QWORD *)v4 + 9);
  v33 = *(_QWORD *)(*((_QWORD *)v4 + 6) + 16);
  sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLPKStrokePathData);
  if (v32 != v33)
  {
LABEL_15:
    sub_100757E04(&_mh_execute_header, (uint64_t)"verifyConsistentPointCount()", 28, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLPKStrokePathData.swift", 89, 2, 124, "The CRLPKStrokePathData object has inconsistent point counts.", 61, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"verifyConsistentPointCount()", 28, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLPKStrokePathData.swift", 89, 2u, 124, (uint64_t)"The CRLPKStrokePathData object has inconsistent point counts.", 61, 2u);
  }
}

uint64_t sub_1009A6868()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  id v8;
  Class isa;
  id v10;
  double v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  Class v15;
  float *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int16 v36;
  __int16 v37;
  __int16 v38;
  int v39;
  int v40;
  int v41;
  int v42;
  __int16 v43;
  uint64_t v44;
  uint64_t result;
  uint64_t v46;
  uint64_t v47;
  _WORD v48[4];
  int v49;
  int v50;
  int v51;
  int v52;
  __int16 v53;

  v1 = (_QWORD *)v0;
  v2 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v2);
  v4 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(v0 + 72);
  if (v5 < 0)
    goto LABEL_30;
  v6 = *(unsigned int *)(v0 + 88);
  v7 = (int *)type metadata accessor for CRLPKStrokePathData(0);
  v8 = objc_allocWithZone((Class)CRLPKStrokePathCompactData);
  isa = Date._bridgeToObjectiveC()().super.isa;
  v10 = objc_msgSend(v8, "initWithCapacity:randomSeed:creationDate:", v5, v6, isa);

  LODWORD(v11) = *(_DWORD *)((char *)v1 + v7[17]);
  objc_msgSend(v10, "setRenderScaleX:", v11);
  LODWORD(v12) = *(_DWORD *)((char *)v1 + v7[18]);
  objc_msgSend(v10, "setRenderScaleY:", v12);
  sub_1004CB7BC((uint64_t)v1 + v7[19], (uint64_t)v4, (uint64_t *)&unk_1013E1A50);
  v13 = type metadata accessor for UUID(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v4, 1, v13) != 1)
  {
    v15 = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v14 + 8))(v4, v13);
  }
  objc_msgSend(v10, "setRenderGroupID:", v15);

  objc_msgSend(v10, "setShouldSolveMath:", *((unsigned __int8 *)v1 + v7[21]));
  v16 = (float *)((char *)v1 + v7[20]);
  if (((_BYTE)v16[2] & 1) == 0)
    objc_msgSend(v10, "setAnchorPointForTexture:", *v16, v16[1]);
  v17 = v1[9];
  if (v17 < 0)
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (!v17)
    return (uint64_t)v10;
  v18 = v1[2];
  v19 = v17 - 1;
  if ((unint64_t)(v17 - 1) >= *(_QWORD *)(v18 + 16))
    goto LABEL_21;
  v20 = v1[3];
  if (v19 >= *(_QWORD *)(v20 + 16))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v21 = v1[1];
  if (v19 >= *(_QWORD *)(v21 + 16))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v22 = *v1;
  if (v19 >= *(_QWORD *)(*v1 + 16))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v23 = v1[4];
  if (v19 >= *(_QWORD *)(v23 + 16))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v24 = v1[5];
  if (v19 >= *(_QWORD *)(v24 + 16))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v25 = v1[6];
  if (v19 >= *(_QWORD *)(v25 + 16))
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v26 = v1[7];
  if (v19 < *(_QWORD *)(v26 + 16))
  {
    v27 = v1[8];
    if (v19 < *(_QWORD *)(v27 + 16))
    {
      v28 = 0;
      v47 = v18 + 32;
      v46 = v20 + 32;
      v29 = v21 + 32;
      v30 = v22 + 32;
      v31 = v23 + 32;
      v32 = v24 + 32;
      v33 = v25 + 32;
      v34 = v26 + 32;
      v35 = v27 + 32;
      do
      {
        v36 = *(_WORD *)(v46 + 2 * v28);
        v37 = *(_WORD *)(v29 + 2 * v28);
        v38 = *(_WORD *)(v30 + 2 * v28);
        v39 = *(_DWORD *)(v31 + 4 * v28);
        v40 = *(_DWORD *)(v32 + 4 * v28);
        v41 = *(_DWORD *)(v33 + 4 * v28);
        v42 = *(_DWORD *)(v34 + 4 * v28);
        v43 = *(_WORD *)(v35 + 2 * v28);
        v48[0] = *(_WORD *)(v47 + 2 * v28);
        v44 = v28 + 1;
        v48[1] = v36;
        v48[2] = v37;
        v48[3] = v38;
        v49 = v39;
        v50 = v40;
        v51 = v41;
        v52 = v42;
        v53 = v43;
        objc_msgSend(v10, "appendStrokePointCompactData:", v48, v46, v47);
        v28 = v44;
      }
      while (v17 != v44);
      return (uint64_t)v10;
    }
    goto LABEL_29;
  }
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Negative value is not representable", 35, 2, "Swift/Integers.swift", 20, 2, 3451, 0);
  __break(1u);
  return result;
}

void sub_1009A6BEC(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1009A6C28()
{
  uint64_t v0;

  return v0;
}

void sub_1009A6D08(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

float sub_1009A6D48()
{
  float v0;

  return v0;
}

uint64_t sub_1009A6E2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int *v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  int *v53;
  uint64_t (*v54)(uint64_t);
  uint64_t v55;
  char *v57;
  char *v58;
  int *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t (*v62)(uint64_t, uint64_t, uint64_t);
  uint64_t v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  double *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  double v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t (*v84)(uint64_t, uint64_t, uint64_t);
  int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t (*v97)(uint64_t, uint64_t, uint64_t);
  uint64_t v98;
  int v99;
  uint64_t v100;
  BOOL v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t *v108;
  uint64_t v109;
  int v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t (*v116)(uint64_t, uint64_t, uint64_t);
  uint64_t v117;
  int v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  _QWORD *v122;
  double *v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t (*v128)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  _QWORD *v134;
  uint64_t *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  double *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  int *v160;
  char *v161;
  uint64_t v162;
  char *v163;
  char *v164;
  _QWORD *v165;
  uint64_t v166;
  uint64_t v167;
  _OWORD v168[2];
  uint64_t v169;

  v166 = a1;
  v146 = type metadata accessor for CRLProto_Path(0);
  v159 = *(_QWORD *)(v146 - 8);
  __chkstk_darwin(v146);
  v134 = (unint64_t *)((char *)&v126 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = type metadata accessor for CRLProto_PKStrokePathData.StrokePoint(0);
  v162 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v164 = (char *)&v126 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C(&qword_1013FF2E8);
  __chkstk_darwin(v6);
  v133 = (uint64_t)&v126 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v161 = (char *)&v126 - v9;
  v149 = type metadata accessor for CRLProto_Point(0);
  v148 = *(_QWORD *)(v149 - 8);
  __chkstk_darwin(v149);
  v135 = (uint64_t *)((char *)&v126 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = sub_1004B804C(&qword_1013FA7B0);
  __chkstk_darwin(v11);
  v136 = (uint64_t)&v126 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v147 = (uint64_t)&v126 - v14;
  v15 = type metadata accessor for CRLProto_Data(0);
  v156 = *(_QWORD *)(v15 - 8);
  v157 = v15;
  __chkstk_darwin(v15);
  v144 = (uint64_t *)((char *)&v126 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v17);
  v145 = (char *)&v126 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  __chkstk_darwin(v19);
  v143 = (uint64_t)&v126 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v155 = (char *)&v126 - v22;
  v154 = type metadata accessor for CRLProto_Date(0);
  v153 = *(_QWORD *)(v154 - 8);
  __chkstk_darwin(v154);
  v140 = (double *)((char *)&v126 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  v142 = type metadata accessor for Date(0);
  v141 = *(_QWORD *)(v142 - 8);
  __chkstk_darwin(v142);
  v139 = (char *)&v126 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_1004B804C(&qword_1013FF2D8);
  __chkstk_darwin(v25);
  v138 = (uint64_t)&v126 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __chkstk_darwin(v27);
  v150 = (uint64_t)&v126 - v29;
  v30 = type metadata accessor for BinaryDecodingOptions(0, v28);
  __chkstk_darwin(v30);
  v158 = (char *)&v126 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v160 = (int *)type metadata accessor for CRLProto_PKStrokePathData(0);
  __chkstk_darwin(v160);
  v163 = (char *)&v126 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)a2 = _swiftEmptyArrayStorage;
  *(_QWORD *)(a2 + 8) = _swiftEmptyArrayStorage;
  *(_QWORD *)(a2 + 16) = _swiftEmptyArrayStorage;
  *(_QWORD *)(a2 + 24) = _swiftEmptyArrayStorage;
  *(_QWORD *)(a2 + 32) = _swiftEmptyArrayStorage;
  *(_QWORD *)(a2 + 40) = _swiftEmptyArrayStorage;
  *(_QWORD *)(a2 + 48) = _swiftEmptyArrayStorage;
  *(_QWORD *)(a2 + 56) = _swiftEmptyArrayStorage;
  *(_QWORD *)(a2 + 64) = _swiftEmptyArrayStorage;
  v33 = (int *)type metadata accessor for CRLPKStrokePathData(0);
  *(_QWORD *)(a2 + 72) = 0;
  *(_QWORD *)(a2 + 80) = 0;
  *(_DWORD *)(a2 + 88) = 0;
  v137 = a2 + v33[16];
  static Date.now.getter(v34);
  v151 = v33[17];
  *(_DWORD *)(a2 + v151) = 1065353216;
  v152 = v33[18];
  *(_DWORD *)(a2 + v152) = 1065353216;
  v35 = a2 + v33[19];
  v36 = type metadata accessor for UUID(0);
  v37 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56);
  v38 = v37(v35, 1, 1, v36);
  v39 = a2 + v33[20];
  *(_QWORD *)v39 = 0;
  *(_BYTE *)(v39 + 8) = 1;
  v40 = v165;
  v41 = v166;
  v42 = v33[21];
  v167 = a2;
  *(_BYTE *)(a2 + v42) = 0;
  v43 = dispatch thunk of CRDecoder.valueContainer()(v38);
  if (v40)
  {
    swift_release(v41);
LABEL_4:
    v54 = type metadata accessor for CRLPKStrokePathData;
    v55 = v167;
    return sub_1004B84A4(v55, v54);
  }
  v44 = v43;
  v128 = v37;
  v129 = v36;
  v130 = v35;
  v131 = v39;
  v132 = v42;
  v165 = (_QWORD *)(a2 + 72);
  v45 = dispatch thunk of CRDecoder.CRValueContainer.decode(_:)();
  v47 = v46;
  swift_release(v44);
  v169 = 0;
  memset(v168, 0, sizeof(v168));
  v48 = sub_1004BE310(v45, v47);
  v49 = v158;
  BinaryDecodingOptions.init()(v48);
  v50 = sub_1004B7878(&qword_1013FF2E0, type metadata accessor for CRLProto_PKStrokePathData, (uint64_t)&unk_100F25CC0);
  v51 = v163;
  v52 = v49;
  v53 = v160;
  Message.init(serializedData:extensions:partial:options:)(v45, v47, v168, 0, v52, v160, v50);
  v127 = v45;
  v126 = v47;
  v57 = &v51[v53[7]];
  v58 = v51;
  if ((v57[4] & 1) == 0)
    *(_DWORD *)(v167 + 88) = *(_DWORD *)v57;
  v59 = v160;
  v60 = (uint64_t)&v58[v160[8]];
  v61 = v150;
  sub_1004CB7BC(v60, v150, &qword_1013FF2D8);
  v62 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v153 + 48);
  v63 = v154;
  v64 = v62(v61, 1, v154);
  sub_1004CB800(v61, &qword_1013FF2D8);
  v65 = v162;
  v66 = v157;
  v67 = v151;
  if (v64 != 1)
  {
    v68 = v60;
    v69 = v138;
    sub_1004CB7BC(v68, v138, &qword_1013FF2D8);
    v70 = v62(v69, 1, v63);
    v71 = v140;
    if ((_DWORD)v70 == 1)
    {
      *v140 = 0.0;
      UnknownStorage.init()(v70);
      sub_1004CB800(v69, &qword_1013FF2D8);
    }
    else
    {
      sub_1004B84E0(v69, (uint64_t)v140, type metadata accessor for CRLProto_Date);
    }
    v72 = v142;
    v73 = v141;
    v74 = v139;
    v75 = *v71;
    v76 = sub_1004B84A4((uint64_t)v71, type metadata accessor for CRLProto_Date);
    Date.init(timeIntervalSinceReferenceDate:)(v76, v75);
    (*(void (**)(uint64_t, char *, uint64_t))(v73 + 40))(v137, v74, v72);
  }
  v150 = 0;
  v77 = (uint64_t)v163;
  v78 = &v163[v59[9]];
  v79 = v167;
  if ((v78[4] & 1) == 0)
    *(_DWORD *)(v167 + v67) = *(_DWORD *)v78;
  v80 = v77 + v59[10];
  v81 = v156;
  v82 = (uint64_t)v155;
  if ((*(_BYTE *)(v80 + 4) & 1) == 0)
    *(_DWORD *)(v79 + v152) = *(_DWORD *)v80;
  v83 = v77 + v59[12];
  sub_1004CB7BC(v83, v82, (uint64_t *)&unk_1013E16F0);
  v84 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v81 + 48);
  v85 = v84(v82, 1, v66);
  sub_1004CB800(v82, (uint64_t *)&unk_1013E16F0);
  if (v85 != 1)
  {
    v86 = v143;
    sub_1004CB7BC(v83, v143, (uint64_t *)&unk_1013E16F0);
    v87 = v84(v86, 1, v66);
    v88 = v144;
    if ((_DWORD)v87 == 1)
    {
      *(_OWORD *)v144 = xmmword_100EF78C0;
      UnknownStorage.init()(v87);
      sub_1004CB800(v86, (uint64_t *)&unk_1013E16F0);
    }
    else
    {
      sub_1004B84E0(v86, (uint64_t)v144, type metadata accessor for CRLProto_Data);
    }
    v89 = v127;
    v90 = (uint64_t)v145;
    v92 = *v88;
    v91 = v88[1];
    sub_1004BE310(*v88, v91);
    sub_1004B84A4((uint64_t)v88, type metadata accessor for CRLProto_Data);
    v93 = v150;
    UUID.init(crl_data:)(v92, v91);
    if (v93)
    {
      sub_1004BBBC8(v89, v126);
      swift_release(v166);
      sub_1004B84A4(v77, type metadata accessor for CRLProto_PKStrokePathData);
      goto LABEL_4;
    }
    v150 = 0;
    v128(v90, 0, 1, v129);
    sub_1005E388C(v90, v130);
  }
  v94 = v148;
  v95 = v147;
  v96 = v77 + v59[11];
  sub_1004CB7BC(v96, v147, &qword_1013FA7B0);
  v97 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v94 + 48);
  v98 = v149;
  v99 = v97(v95, 1, v149);
  v100 = v95;
  LODWORD(v95) = v99;
  sub_1004CB800(v100, &qword_1013FA7B0);
  v101 = (_DWORD)v95 == 1;
  v102 = (uint64_t)v164;
  v103 = v159;
  v104 = v131;
  if (!v101)
  {
    v105 = v96;
    v106 = v136;
    sub_1004CB7BC(v105, v136, &qword_1013FA7B0);
    v107 = v97(v106, 1, v98);
    v108 = v135;
    if ((_DWORD)v107 == 1)
    {
      *v135 = 0;
      UnknownStorage.init()(v107);
      sub_1004CB800(v106, &qword_1013FA7B0);
    }
    else
    {
      sub_1004B84E0(v106, (uint64_t)v135, type metadata accessor for CRLProto_Point);
    }
    v109 = *v108;
    sub_1004B84A4((uint64_t)v108, type metadata accessor for CRLProto_Point);
    *(_QWORD *)v104 = v109;
    *(_BYTE *)(v104 + 8) = 0;
  }
  v110 = *(unsigned __int8 *)(v77 + v160[13]);
  if (v110 != 2)
    *(_BYTE *)(v167 + v132) = v110 & 1;
  v111 = static Array._allocateBufferUninitialized(minimumCapacity:)(2, &type metadata for Float);
  *(_QWORD *)(v111 + 16) = 2;
  *(_QWORD *)(v111 + 32) = 0;
  v153 = *(_QWORD *)(*(_QWORD *)v77 + 16);
  v112 = v103;
  if (v153)
  {
    LODWORD(v158) = 0;
    LODWORD(v154) = 0;
    LODWORD(v155) = 0;
    LODWORD(v156) = 0;
    LODWORD(v157) = 0;
    if (*(_QWORD *)(*(_QWORD *)v77 + 16))
    {
      sub_1004B8460(*(_QWORD *)v77 + ((*(unsigned __int8 *)(v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80)), v102, type metadata accessor for CRLProto_PKStrokePathData.StrokePoint);
      __asm { BR              X9 }
    }
    __break(1u);
    JUMPOUT(0x1009A89E8);
  }
  v113 = v165;
  v114 = (uint64_t)v161;
  swift_bridgeObjectRelease();
  *v113 = *(_QWORD *)(*(_QWORD *)v77 + 16);
  v115 = v77 + v160[6];
  sub_1004CB7BC(v115, v114, &qword_1013FF2E8);
  v116 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v112 + 48);
  v117 = v146;
  v118 = v116(v114, 1, v146);
  sub_1004CB800(v114, &qword_1013FF2E8);
  v101 = v118 == 1;
  v119 = v166;
  if (!v101)
  {
    v120 = v133;
    sub_1004CB7BC(v115, v133, &qword_1013FF2E8);
    v121 = v116(v120, 1, v117);
    v122 = v134;
    if ((_DWORD)v121 == 1)
    {
      *v134 = _swiftEmptyArrayStorage;
      UnknownStorage.init()(v121);
      sub_1004CB800(v120, &qword_1013FF2E8);
    }
    else
    {
      sub_1004B84E0(v120, (uint64_t)v134, type metadata accessor for CRLProto_Path);
    }
    v123 = sub_100943AC4((uint64_t)v122);
    v124 = v167;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v124 + 80) = v123;
  }
  v125 = *(_QWORD *)(v167 + 72);
  if (v125 != *(_QWORD *)(*(_QWORD *)v167 + 16)
    || v125 != *(_QWORD *)(*(_QWORD *)(v167 + 8) + 16)
    || v125 != *(_QWORD *)(*(_QWORD *)(v167 + 16) + 16)
    || v125 != *(_QWORD *)(*(_QWORD *)(v167 + 24) + 16)
    || v125 != *(_QWORD *)(*(_QWORD *)(v167 + 48) + 16)
    || v125 != *(_QWORD *)(*(_QWORD *)(v167 + 56) + 16)
    || v125 != *(_QWORD *)(*(_QWORD *)(v167 + 64) + 16)
    || v125 != *(_QWORD *)(*(_QWORD *)(v167 + 32) + 16)
    || v125 != *(_QWORD *)(*(_QWORD *)(v167 + 40) + 16))
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"init(from:)", 11, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLPKStrokePathData.swift", 89, 2, 237, "The CRLPKStrokePathData object has inconsistent point counts.", 61, 2u, (uint64_t)_swiftEmptyArrayStorage);
    v119 = v166;
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(from:)", 11, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLPKStrokePathData.swift", 89, 2u, 237, (uint64_t)"The CRLPKStrokePathData object has inconsistent point counts.", 61, 2u);
  }
  swift_release(v119);
  sub_1004BBBC8(v127, v126);
  v54 = type metadata accessor for CRLProto_PKStrokePathData;
  v55 = v77;
  return sub_1004B84A4(v55, v54);
}

uint64_t sub_1009A8B04(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  int *v44;
  uint64_t v45;
  unint64_t *v46;
  uint64_t v47;
  void (*v48)(void);
  char *v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v52;
  char *v53;
  void (*v54)(void);
  uint64_t (*v55)(void);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  double v60;
  uint64_t v61;
  double *v62;
  _DWORD *v63;
  int *v64;
  _DWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __int128 *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  __int128 v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  int v98;
  int v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  int v107;
  int v108;
  uint64_t v109;
  unint64_t v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  int v116;
  int v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  int v126;
  int v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  float v137;
  float v138;
  uint64_t v139;
  unint64_t v140;
  uint64_t v141;
  unint64_t v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  uint64_t v146;
  uint64_t v147;
  float v148;
  float v149;
  uint64_t v150;
  unint64_t v151;
  uint64_t v152;
  unint64_t v153;
  uint64_t v154;
  uint64_t v155;
  unint64_t v156;
  uint64_t v157;
  int v158;
  int v159;
  uint64_t v160;
  unint64_t v161;
  uint64_t v162;
  unint64_t v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  float v170;
  float v171;
  uint64_t v172;
  unint64_t v173;
  uint64_t v174;
  float v175;
  float v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  unint64_t v180;
  unint64_t v181;
  uint64_t v182;
  uint64_t v183;
  unint64_t v184;
  unint64_t v185;
  unint64_t v186;
  unint64_t v187;
  unint64_t v188;
  uint64_t v189;
  uint64_t v190;
  _QWORD *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  unint64_t v199;
  unint64_t v200;
  int *v202;
  uint64_t v203;
  void (*v204)(void);
  uint64_t v205;
  uint64_t v206;
  void (*v207)(void);
  _OWORD *v208;
  uint64_t v209;
  __int128 *v210;
  char *v211;
  uint64_t v212;
  _QWORD *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  _DWORD *v218;
  void (*v219)(uint64_t, uint64_t, uint64_t, uint64_t);
  _DWORD *v220;
  double *v221;
  uint64_t v222;
  uint64_t (*v223)(void);
  __int128 v224;
  char *v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  char *v239;
  uint64_t v240;
  __int128 v241;
  uint64_t v242;
  unint64_t *v243;
  int *v244;
  int v245;
  uint64_t v246;

  v2 = v1;
  v212 = a1;
  v3 = type metadata accessor for CRLProto_Path(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v213 = (int **)((char *)&v202 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v244 = (int *)type metadata accessor for CRLPKStrokePathData(0);
  __chkstk_darwin(v244);
  v231 = (uint64_t)&v202 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v240 = (uint64_t)&v202 - v8;
  __chkstk_darwin(v9);
  v232 = (uint64_t)&v202 - v10;
  __chkstk_darwin(v11);
  v233 = (uint64_t)&v202 - v12;
  __chkstk_darwin(v13);
  v234 = (uint64_t)&v202 - v14;
  __chkstk_darwin(v15);
  v235 = (uint64_t)&v202 - v16;
  __chkstk_darwin(v17);
  v236 = (uint64_t)&v202 - v18;
  __chkstk_darwin(v19);
  v237 = (uint64_t)&v202 - v20;
  __chkstk_darwin(v21);
  v239 = (char *)&v202 - v22;
  v238 = type metadata accessor for CRLProto_PKStrokePathData.StrokePoint(0);
  v230 = *(_QWORD *)(v238 - 8);
  __chkstk_darwin(v238);
  v242 = (uint64_t)&v202 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v26 = (char *)&v202 - v25;
  *(_QWORD *)&v241 = type metadata accessor for CRLProto_Point(0);
  v243 = *(unint64_t **)(v241 - 8);
  __chkstk_darwin(v241);
  v211 = (char *)&v202 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  __chkstk_darwin(v28);
  v209 = (uint64_t)&v202 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v227 = type metadata accessor for CRLProto_Data(0);
  v228 = *(_QWORD *)(v227 - 8);
  __chkstk_darwin(v227);
  v210 = (__int128 *)((char *)&v202 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v31);
  v208 = (_OWORD *)((char *)&v202 - v32);
  v33 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v33);
  *(_QWORD *)&v224 = (char *)&v202 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v226 = type metadata accessor for UUID(0);
  v229 = *(_QWORD *)(v226 - 8);
  __chkstk_darwin(v226);
  v225 = (char *)&v202 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_1004B804C(&qword_1013FF2D8);
  __chkstk_darwin(v36);
  v217 = (char *)&v202 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = type metadata accessor for CRLProto_Date(0);
  v215 = *(_QWORD *)(v38 - 8);
  v39 = v215;
  __chkstk_darwin(v38);
  v221 = (double *)((char *)&v202 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v41);
  v43 = (int **)((char *)&v202 - v42);
  v44 = (int *)type metadata accessor for CRLProto_PKStrokePathData(0);
  __chkstk_darwin(v44);
  v46 = (unint64_t *)((char *)&v202 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v46 = (unint64_t)_swiftEmptyArrayStorage;
  UnknownStorage.init()(v47);
  v48 = *(void (**)(void))(v4 + 56);
  v203 = (uint64_t)v46 + v44[6];
  v205 = v3;
  v204 = v48;
  v48();
  v49 = (char *)v46 + v44[7];
  *(_DWORD *)v49 = 0;
  v220 = v49;
  v49[4] = 1;
  v50 = (uint64_t)v46 + v44[8];
  v51 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 56);
  v51(v50, 1, 1, v38);
  v52 = (char *)v46 + v44[9];
  *(_DWORD *)v52 = 0;
  v218 = v52;
  v52[4] = 1;
  v53 = (char *)v46 + v44[10];
  *(_DWORD *)v53 = 0;
  v53[4] = 1;
  v54 = (void (*)(void))v243[7];
  v206 = (uint64_t)v46 + v44[11];
  v207 = v54;
  v54();
  v55 = *(uint64_t (**)(void))(v228 + 56);
  v222 = (uint64_t)v46 + v44[12];
  v223 = v55;
  v56 = v55();
  v202 = v44;
  v57 = v44[13];
  v243 = v46;
  v216 = v57;
  *((_BYTE *)v46 + v57) = 2;
  v58 = (uint64_t)v217;
  *v43 = 0;
  UnknownStorage.init()(v56);
  sub_1004CB800(v50, &qword_1013FF2D8);
  sub_1004B84E0((uint64_t)v43, v50, type metadata accessor for CRLProto_Date);
  v219 = v51;
  v59 = ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v51)(v50, 0, 1, v38);
  v60 = Date.timeIntervalSinceReferenceDate.getter(v59);
  sub_1004CB7BC(v50, v58, &qword_1013FF2D8);
  v61 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v215 + 48))(v58, 1, v38);
  v62 = v221;
  if ((_DWORD)v61 == 1)
  {
    *v221 = 0.0;
    UnknownStorage.init()(v61);
    sub_1004CB800(v58, &qword_1013FF2D8);
  }
  else
  {
    sub_1004B84E0(v58, (uint64_t)v221, type metadata accessor for CRLProto_Date);
  }
  *v62 = v60;
  sub_1004CB800(v50, &qword_1013FF2D8);
  sub_1004B84E0((uint64_t)v62, v50, type metadata accessor for CRLProto_Date);
  v219(v50, 0, 1, v38);
  v63 = v220;
  *v220 = *(_DWORD *)(v2 + 88);
  *((_BYTE *)v63 + 4) = 0;
  v64 = v244;
  v65 = v218;
  *v218 = *(_DWORD *)(v2 + v244[17]);
  *((_BYTE *)v65 + 4) = 0;
  *(_DWORD *)v53 = *(_DWORD *)(v2 + v64[18]);
  v53[4] = 0;
  *((_BYTE *)v243 + v216) = *(_BYTE *)(v2 + v64[21]);
  v66 = v224;
  sub_1004CB7BC(v2 + v64[19], v224, (uint64_t *)&unk_1013E1A50);
  v67 = v229;
  v68 = v226;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v229 + 48))(v66, 1, v226) == 1)
  {
    v69 = sub_1004CB800(v66, (uint64_t *)&unk_1013E1A50);
    v70 = (uint64_t)v239;
  }
  else
  {
    v71 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v67 + 32))(v225, v66, v68);
    v72 = (uint64_t)v208;
    v224 = xmmword_100EF78C0;
    *v208 = xmmword_100EF78C0;
    v73 = v227;
    UnknownStorage.init()(v71);
    v74 = v222;
    sub_1004CB800(v222, (uint64_t *)&unk_1013E16F0);
    sub_1004B84E0(v72, v74, type metadata accessor for CRLProto_Data);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v223)(v74, 0, 1, v73);
    v75 = UUID.crl_data()();
    v77 = v76;
    v78 = v74;
    v79 = v209;
    v80 = v73;
    sub_1004CB7BC(v78, v209, (uint64_t *)&unk_1013E16F0);
    v81 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v228 + 48))(v79, 1, v73);
    v70 = (uint64_t)v239;
    if ((_DWORD)v81 == 1)
    {
      v82 = v79;
      v83 = v210;
      *v210 = v224;
      UnknownStorage.init()(v81);
      v84 = v82;
      v68 = v226;
      sub_1004CB800(v84, (uint64_t *)&unk_1013E16F0);
    }
    else
    {
      v85 = v79;
      v83 = v210;
      sub_1004B84E0(v85, (uint64_t)v210, type metadata accessor for CRLProto_Data);
    }
    sub_1004BBBC8(*(_QWORD *)v83, *((_QWORD *)v83 + 1));
    *(_QWORD *)v83 = v75;
    *((_QWORD *)v83 + 1) = v77;
    v86 = v222;
    sub_1004CB800(v222, (uint64_t *)&unk_1013E16F0);
    sub_1004B84E0((uint64_t)v83, v86, type metadata accessor for CRLProto_Data);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v223)(v86, 0, 1, v80);
    v69 = (*(uint64_t (**)(char *, uint64_t))(v229 + 8))(v225, v68);
  }
  v87 = v2 + v244[20];
  if ((*(_BYTE *)(v87 + 8) & 1) == 0)
  {
    v88 = *(_QWORD *)v87;
    v89 = v241;
    v90 = v211;
    UnknownStorage.init()(v69);
    *v90 = v88;
    v91 = v206;
    sub_1004CB800(v206, &qword_1013FA7B0);
    sub_1004B84E0((uint64_t)v90, v91, type metadata accessor for CRLProto_Point);
    v69 = ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v207)(v91, 0, 1, v89);
  }
  v92 = *(_QWORD *)(v2 + 72);
  if (v92 < 0)
    goto LABEL_127;
  if (v92)
  {
    v93 = 0;
    v244 = (int *)&v246;
    v241 = xmmword_100EF78C0;
    v229 = v92;
    while (1)
    {
      v94 = v241;
      *(_OWORD *)v26 = v241;
      *((_OWORD *)v26 + 1) = v94;
      *((_OWORD *)v26 + 2) = v94;
      *((_OWORD *)v26 + 3) = v94;
      *((_OWORD *)v26 + 4) = v94;
      *((_OWORD *)v26 + 5) = v94;
      *((_OWORD *)v26 + 6) = v94;
      *((_OWORD *)v26 + 7) = v94;
      UnknownStorage.init()(v69);
      sub_1004B8460(v2, v70, type metadata accessor for CRLPKStrokePathData);
      if (v93)
      {
        v95 = *(_QWORD *)(v70 + 8);
        v96 = *(_QWORD *)(v95 + 16);
        if (v93 >= v96)
          goto LABEL_107;
        if (v93 - 1 >= v96)
          goto LABEL_108;
        v97 = v95 + 2 * v93;
        v98 = *(unsigned __int16 *)(v97 + 32);
        v99 = *(unsigned __int16 *)(v97 + 30);
        sub_1004B84A4(v70, type metadata accessor for CRLPKStrokePathData);
        if (v98 == v99)
        {
          v100 = 0;
          v101 = 0xC000000000000000;
          goto LABEL_23;
        }
      }
      else
      {
        sub_1004B84A4(v70, type metadata accessor for CRLPKStrokePathData);
      }
      v102 = *(_QWORD *)(v2 + 8);
      if (v93 >= *(_QWORD *)(v102 + 16))
        goto LABEL_102;
      LOWORD(v245) = *(_WORD *)(v102 + 2 * v93 + 32);
      v100 = sub_10086A35C((uint64_t)&v245, (uint64_t)&v245 + 2);
      v101 = v103;
LABEL_23:
      sub_1004BBBC8(*(_QWORD *)v26, *((_QWORD *)v26 + 1));
      *(_QWORD *)v26 = v100;
      *((_QWORD *)v26 + 1) = v101;
      v104 = v237;
      sub_1004B8460(v2, v237, type metadata accessor for CRLPKStrokePathData);
      if (v93)
      {
        v105 = *(_QWORD *)(*(_QWORD *)v104 + 16);
        if (v93 >= v105)
          goto LABEL_109;
        if (v93 - 1 >= v105)
          goto LABEL_110;
        v106 = *(_QWORD *)v104 + 2 * v93;
        v107 = *(unsigned __int16 *)(v106 + 32);
        v108 = *(unsigned __int16 *)(v106 + 30);
        sub_1004B84A4(v104, type metadata accessor for CRLPKStrokePathData);
        if (v107 == v108)
        {
          v109 = 0;
          v110 = 0xC000000000000000;
          goto LABEL_31;
        }
      }
      else
      {
        sub_1004B84A4(v104, type metadata accessor for CRLPKStrokePathData);
      }
      if (v93 >= *(_QWORD *)(*(_QWORD *)v2 + 16))
        goto LABEL_103;
      LOWORD(v245) = *(_WORD *)(*(_QWORD *)v2 + 2 * v93 + 32);
      v109 = sub_10086A35C((uint64_t)&v245, (uint64_t)&v245 + 2);
      v110 = v111;
LABEL_31:
      sub_1004BBBC8(*((_QWORD *)v26 + 2), *((_QWORD *)v26 + 3));
      *((_QWORD *)v26 + 2) = v109;
      *((_QWORD *)v26 + 3) = v110;
      v112 = v236;
      sub_1004B8460(v2, v236, type metadata accessor for CRLPKStrokePathData);
      if (v93)
      {
        v113 = *(_QWORD *)(v112 + 16);
        v114 = *(_QWORD *)(v113 + 16);
        if (v93 >= v114)
          goto LABEL_111;
        if (v93 - 1 >= v114)
          goto LABEL_112;
        v115 = v113 + 2 * v93;
        v116 = *(unsigned __int16 *)(v115 + 32);
        v117 = *(unsigned __int16 *)(v115 + 30);
        sub_1004B84A4(v112, type metadata accessor for CRLPKStrokePathData);
        if (v116 == v117)
        {
          v118 = 0;
          v119 = 0xC000000000000000;
          goto LABEL_39;
        }
      }
      else
      {
        sub_1004B84A4(v112, type metadata accessor for CRLPKStrokePathData);
      }
      v120 = *(_QWORD *)(v2 + 16);
      if (v93 >= *(_QWORD *)(v120 + 16))
        goto LABEL_104;
      LOWORD(v245) = *(_WORD *)(v120 + 2 * v93 + 32);
      v118 = sub_10086A35C((uint64_t)&v245, (uint64_t)&v245 + 2);
      v119 = v121;
LABEL_39:
      sub_1004BBBC8(*((_QWORD *)v26 + 4), *((_QWORD *)v26 + 5));
      *((_QWORD *)v26 + 4) = v118;
      *((_QWORD *)v26 + 5) = v119;
      v122 = v235;
      sub_1004B8460(v2, v235, type metadata accessor for CRLPKStrokePathData);
      if (v93)
      {
        v123 = *(_QWORD *)(v122 + 24);
        v124 = *(_QWORD *)(v123 + 16);
        if (v93 >= v124)
          goto LABEL_113;
        if (v93 - 1 >= v124)
          goto LABEL_114;
        v125 = v123 + 2 * v93;
        v126 = *(unsigned __int16 *)(v125 + 32);
        v127 = *(unsigned __int16 *)(v125 + 30);
        sub_1004B84A4(v122, type metadata accessor for CRLPKStrokePathData);
        if (v126 == v127)
        {
          v128 = 0;
          v129 = 0xC000000000000000;
          goto LABEL_47;
        }
      }
      else
      {
        sub_1004B84A4(v122, type metadata accessor for CRLPKStrokePathData);
      }
      v130 = *(_QWORD *)(v2 + 24);
      if (v93 >= *(_QWORD *)(v130 + 16))
        goto LABEL_105;
      LOWORD(v245) = *(_WORD *)(v130 + 2 * v93 + 32);
      v128 = sub_10086A35C((uint64_t)&v245, (uint64_t)&v245 + 2);
      v129 = v131;
LABEL_47:
      sub_1004BBBC8(*((_QWORD *)v26 + 6), *((_QWORD *)v26 + 7));
      *((_QWORD *)v26 + 6) = v128;
      *((_QWORD *)v26 + 7) = v129;
      v132 = v234;
      sub_1004B8460(v2, v234, type metadata accessor for CRLPKStrokePathData);
      if (v93)
      {
        v133 = *(_QWORD *)(v132 + 48);
        v134 = *(_QWORD *)(v133 + 16);
        v135 = (uint64_t)v244;
        if (v93 >= v134)
          goto LABEL_115;
        if (v93 - 1 >= v134)
          goto LABEL_116;
        v136 = v133 + 4 * v93;
        v138 = *(float *)(v136 + 28);
        v137 = *(float *)(v136 + 32);
        sub_1004B84A4(v132, type metadata accessor for CRLPKStrokePathData);
        if (v137 == v138)
        {
          v139 = 0;
          v140 = 0xC000000000000000;
          goto LABEL_55;
        }
      }
      else
      {
        sub_1004B84A4(v132, type metadata accessor for CRLPKStrokePathData);
        v135 = (uint64_t)v244;
      }
      v141 = *(_QWORD *)(v2 + 48);
      if (v93 >= *(_QWORD *)(v141 + 16))
        goto LABEL_123;
      v245 = *(_DWORD *)(v141 + 4 * v93 + 32);
      v139 = sub_10086A35C((uint64_t)&v245, v135);
      v140 = v142;
LABEL_55:
      sub_1004BBBC8(*((_QWORD *)v26 + 10), *((_QWORD *)v26 + 11));
      *((_QWORD *)v26 + 10) = v139;
      *((_QWORD *)v26 + 11) = v140;
      v143 = v233;
      sub_1004B8460(v2, v233, type metadata accessor for CRLPKStrokePathData);
      if (v93)
      {
        v144 = *(_QWORD *)(v143 + 56);
        v145 = *(_QWORD *)(v144 + 16);
        v146 = (uint64_t)v244;
        if (v93 >= v145)
          goto LABEL_117;
        if (v93 - 1 >= v145)
          goto LABEL_118;
        v147 = v144 + 4 * v93;
        v149 = *(float *)(v147 + 28);
        v148 = *(float *)(v147 + 32);
        sub_1004B84A4(v143, type metadata accessor for CRLPKStrokePathData);
        if (v148 == v149)
        {
          v150 = 0;
          v151 = 0xC000000000000000;
          goto LABEL_63;
        }
      }
      else
      {
        sub_1004B84A4(v143, type metadata accessor for CRLPKStrokePathData);
        v146 = (uint64_t)v244;
      }
      v152 = *(_QWORD *)(v2 + 56);
      if (v93 >= *(_QWORD *)(v152 + 16))
        goto LABEL_124;
      v245 = *(_DWORD *)(v152 + 4 * v93 + 32);
      v150 = sub_10086A35C((uint64_t)&v245, v146);
      v151 = v153;
LABEL_63:
      sub_1004BBBC8(*((_QWORD *)v26 + 12), *((_QWORD *)v26 + 13));
      *((_QWORD *)v26 + 12) = v150;
      *((_QWORD *)v26 + 13) = v151;
      v154 = v232;
      sub_1004B8460(v2, v232, type metadata accessor for CRLPKStrokePathData);
      if (v93)
      {
        v155 = *(_QWORD *)(v154 + 64);
        v156 = *(_QWORD *)(v155 + 16);
        if (v93 >= v156)
          goto LABEL_119;
        if (v93 - 1 >= v156)
          goto LABEL_120;
        v157 = v155 + 2 * v93;
        v158 = *(unsigned __int16 *)(v157 + 32);
        v159 = *(unsigned __int16 *)(v157 + 30);
        sub_1004B84A4(v154, type metadata accessor for CRLPKStrokePathData);
        if (v158 == v159)
        {
          v160 = 0;
          v161 = 0xC000000000000000;
          goto LABEL_71;
        }
      }
      else
      {
        sub_1004B84A4(v154, type metadata accessor for CRLPKStrokePathData);
      }
      v162 = *(_QWORD *)(v2 + 64);
      if (v93 >= *(_QWORD *)(v162 + 16))
        goto LABEL_106;
      LOWORD(v245) = *(_WORD *)(v162 + 2 * v93 + 32);
      v160 = sub_10086A35C((uint64_t)&v245, (uint64_t)&v245 + 2);
      v161 = v163;
LABEL_71:
      sub_1004BBBC8(*((_QWORD *)v26 + 14), *((_QWORD *)v26 + 15));
      *((_QWORD *)v26 + 14) = v160;
      *((_QWORD *)v26 + 15) = v161;
      v164 = v240;
      sub_1004B8460(v2, v240, type metadata accessor for CRLPKStrokePathData);
      if (v93)
      {
        v165 = *(_QWORD *)(v164 + 32);
        v166 = *(_QWORD *)(v165 + 16);
        v167 = v231;
        v168 = (uint64_t)v244;
        if (v93 >= v166)
          goto LABEL_121;
        if (v93 - 1 >= v166)
          goto LABEL_122;
        v169 = v165 + 4 * v93;
        v171 = *(float *)(v169 + 28);
        v170 = *(float *)(v169 + 32);
        sub_1004B84A4(v240, type metadata accessor for CRLPKStrokePathData);
        sub_1004B8460(v2, v167, type metadata accessor for CRLPKStrokePathData);
        if (v170 == v171)
        {
          v172 = *(_QWORD *)(v167 + 40);
          v173 = *(_QWORD *)(v172 + 16);
          if (v93 >= v173)
            goto LABEL_125;
          if (v93 - 1 >= v173)
            goto LABEL_126;
          v174 = v172 + 4 * v93;
          v176 = *(float *)(v174 + 28);
          v175 = *(float *)(v174 + 32);
          sub_1004B84A4(v167, type metadata accessor for CRLPKStrokePathData);
          sub_1004BBBC8(*((_QWORD *)v26 + 8), *((_QWORD *)v26 + 9));
          *((_OWORD *)v26 + 4) = v241;
          if (v175 == v176)
            goto LABEL_84;
          goto LABEL_81;
        }
      }
      else
      {
        sub_1004B84A4(v164, type metadata accessor for CRLPKStrokePathData);
        v167 = v231;
        sub_1004B8460(v2, v231, type metadata accessor for CRLPKStrokePathData);
        v168 = (uint64_t)v244;
      }
      sub_1004B84A4(v167, type metadata accessor for CRLPKStrokePathData);
      sub_1004BBBC8(*((_QWORD *)v26 + 8), *((_QWORD *)v26 + 9));
      *((_OWORD *)v26 + 4) = v241;
LABEL_81:
      v177 = *(_QWORD *)(v2 + 32);
      if (v93 >= *(_QWORD *)(v177 + 16))
      {
        __break(1u);
LABEL_101:
        __break(1u);
LABEL_102:
        __break(1u);
LABEL_103:
        __break(1u);
LABEL_104:
        __break(1u);
LABEL_105:
        __break(1u);
LABEL_106:
        __break(1u);
LABEL_107:
        __break(1u);
LABEL_108:
        __break(1u);
LABEL_109:
        __break(1u);
LABEL_110:
        __break(1u);
LABEL_111:
        __break(1u);
LABEL_112:
        __break(1u);
LABEL_113:
        __break(1u);
LABEL_114:
        __break(1u);
LABEL_115:
        __break(1u);
LABEL_116:
        __break(1u);
LABEL_117:
        __break(1u);
LABEL_118:
        __break(1u);
LABEL_119:
        __break(1u);
LABEL_120:
        __break(1u);
LABEL_121:
        __break(1u);
LABEL_122:
        __break(1u);
LABEL_123:
        __break(1u);
LABEL_124:
        __break(1u);
LABEL_125:
        __break(1u);
LABEL_126:
        __break(1u);
LABEL_127:
        __break(1u);
      }
      v245 = *(_DWORD *)(v177 + 4 * v93 + 32);
      v178 = sub_10086A35C((uint64_t)&v245, v168);
      v179 = v168;
      v181 = v180;
      Data.append(_:)(v178, v180);
      sub_1004BBBC8(v178, v181);
      v182 = *(_QWORD *)(v2 + 40);
      if (v93 >= *(_QWORD *)(v182 + 16))
        goto LABEL_101;
      v245 = *(_DWORD *)(v182 + 4 * v93 + 32);
      v183 = sub_10086A35C((uint64_t)&v245, v179);
      v185 = v184;
      Data.append(_:)(v183, v184);
      sub_1004BBBC8(v183, v185);
LABEL_84:
      sub_1004B8460((uint64_t)v26, v242, type metadata accessor for CRLProto_PKStrokePathData.StrokePoint);
      v186 = *v243;
      if ((swift_isUniquelyReferenced_nonNull_native(*v243) & 1) == 0)
        v186 = sub_100D117B8(0, *(_QWORD *)(v186 + 16) + 1, 1, v186);
      v188 = *(_QWORD *)(v186 + 16);
      v187 = *(_QWORD *)(v186 + 24);
      if (v188 >= v187 >> 1)
        v186 = sub_100D117B8(v187 > 1, v188 + 1, 1, v186);
      ++v93;
      *(_QWORD *)(v186 + 16) = v188 + 1;
      sub_1004B84E0(v242, v186+ ((*(unsigned __int8 *)(v230 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v230 + 80))+ *(_QWORD *)(v230 + 72) * v188, type metadata accessor for CRLProto_PKStrokePathData.StrokePoint);
      *v243 = v186;
      v69 = sub_1004B84A4((uint64_t)v26, type metadata accessor for CRLProto_PKStrokePathData.StrokePoint);
      v70 = (uint64_t)v239;
      if (v229 == v93)
      {
        v189 = *(_QWORD *)(v2 + 72);
        goto LABEL_91;
      }
    }
  }
  v189 = 0;
LABEL_91:
  if (v189 != *(_QWORD *)(*v243 + 16))
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"encode(to:)", 11, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLPKStrokePathData.swift", 89, 2, 301, "Encoded inconsistent point counts.", 34, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"encode(to:)", 11, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLPKStrokePathData.swift", 89, 2u, 301, (uint64_t)"Encoded inconsistent point counts.", 34, 2u);
  }
  v190 = *(_QWORD *)(v2 + 80);
  if (v190)
  {
    v191 = v213;
    v192 = v214;
    sub_100942A58(v190, v213);
    v193 = v192;
    if (v192)
      return sub_1004B84A4((uint64_t)v243, type metadata accessor for CRLProto_PKStrokePathData);
    v194 = v203;
    sub_1004CB800(v203, &qword_1013FF2E8);
    sub_1004B84E0((uint64_t)v191, v194, type metadata accessor for CRLProto_Path);
    v190 = ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v204)(v194, 0, 1, v205);
  }
  else
  {
    v193 = v214;
  }
  v195 = dispatch thunk of CREncoder.valueContainer()(v190);
  if (!v193)
  {
    v196 = v195;
    v197 = sub_1004B7878(&qword_1013FF2E0, type metadata accessor for CRLProto_PKStrokePathData, (uint64_t)&unk_100F25CC0);
    v198 = Message.serializedData(partial:)(0, v202, v197);
    v200 = v199;
    dispatch thunk of CREncoder.CRValueContainer.encode(_:)(v198, v199);
    sub_1004BBBC8(v198, v200);
    swift_release(v196);
  }
  return sub_1004B84A4((uint64_t)v243, type metadata accessor for CRLProto_PKStrokePathData);
}

uint64_t sub_1009A9E9C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1009A9ED8 + 4 * aQ_2[a1]))(0x446874756D697A61, 0xEB00000000617461);
}

uint64_t sub_1009A9ED8()
{
  return 0x6564757469746C61;
}

uint64_t sub_1009A9FD4()
{
  return 0x65536D6F646E6172;
}

uint64_t sub_1009A9FF0()
{
  return 0x6E6F697461657263;
}

uint64_t sub_1009AA010()
{
  return 0x63537265646E6572;
}

uint64_t sub_1009AA03C()
{
  return 0x72477265646E6572;
}

unint64_t sub_1009AA060()
{
  return 0xD000000000000015;
}

uint64_t sub_1009AA07C()
{
  return 0x6F53646C756F6873;
}

uint64_t sub_1009AA0A0(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  float v25;
  float v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;

  v3 = v1;
  v5 = sub_1004B804C(&qword_1013FF310);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_1009AB42C();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLPKStrokePathData.CodingKeys, &type metadata for CRLPKStrokePathData.CodingKeys, v11, v9, v10);
  v37 = *v3;
  v39 = 0;
  v12 = sub_1004B804C(&qword_1013FF300);
  v13 = sub_1009AB470(&qword_1013FF318, &qword_1013FF300, (uint64_t)&protocol witness table for UInt16, (uint64_t)&protocol conformance descriptor for <A> [A]);
  KeyedEncodingContainer.encode<A>(_:forKey:)(&v37, &v39, v5, v12, v13);
  if (!v2)
  {
    v37 = v3[1];
    v39 = 1;
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v37, &v39, v5, v12, v13);
    v37 = v3[2];
    v39 = 2;
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v37, &v39, v5, v12, v13);
    v37 = v3[3];
    v39 = 3;
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v37, &v39, v5, v12, v13);
    v37 = v3[4];
    v39 = 4;
    v14 = sub_1004B804C(&qword_1013F86B0);
    v15 = sub_1009AB470(&qword_1013F86C8, &qword_1013F86B0, (uint64_t)&protocol witness table for Float, (uint64_t)&protocol conformance descriptor for <A> [A]);
    v36 = v14;
    v16 = v14;
    v17 = v15;
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v37, &v39, v5, v16, v15);
    v37 = v3[5];
    v39 = 5;
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v37, &v39, v5, v36, v17);
    v37 = v3[6];
    v39 = 6;
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v37, &v39, v5, v36, v17);
    v37 = v3[7];
    v39 = 7;
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v37, &v39, v5, v36, v17);
    v37 = v3[8];
    v39 = 8;
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v37, &v39, v5, v12, v13);
    v18 = v3[9];
    LOBYTE(v37) = 9;
    KeyedEncodingContainer.encode(_:forKey:)(v18);
    v37 = v3[10];
    v39 = 10;
    v19 = sub_100786A6C();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(&v37, &v39, v5, &type metadata for CRLBezierPathData, v19);
    v20 = *((unsigned int *)v3 + 22);
    LOBYTE(v37) = 11;
    KeyedEncodingContainer.encode(_:forKey:)(v20, &v37, v5);
    v21 = (int *)type metadata accessor for CRLPKStrokePathData(0);
    v22 = (uint64_t)v3 + v21[16];
    LOBYTE(v37) = 12;
    v23 = type metadata accessor for Date(0);
    v24 = sub_1004B7878(&qword_1013FE1A0, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
    KeyedEncodingContainer.encode<A>(_:forKey:)(v22, &v37, v5, v23, v24);
    v25 = *(float *)((char *)v3 + v21[17]);
    LOBYTE(v37) = 13;
    KeyedEncodingContainer.encode(_:forKey:)(&v37, v5, v25);
    v26 = *(float *)((char *)v3 + v21[18]);
    LOBYTE(v37) = 14;
    KeyedEncodingContainer.encode(_:forKey:)(&v37, v5, v26);
    v27 = (uint64_t)v3 + v21[19];
    LOBYTE(v37) = 15;
    v28 = type metadata accessor for UUID(0);
    v29 = sub_1004B7878(&qword_1013E4860, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v27, &v37, v5, v28, v29);
    v30 = (uint64_t *)((char *)v3 + v21[20]);
    v31 = *v30;
    LOBYTE(v30) = *((_BYTE *)v30 + 8);
    v37 = v31;
    v38 = (char)v30;
    v39 = 16;
    v32 = sub_100786B14();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(&v37, &v39, v5, &type metadata for CRLPointData, v32);
    v33 = *((unsigned __int8 *)v3 + v21[21]);
    LOBYTE(v37) = 17;
    KeyedEncodingContainer.encode(_:forKey:)(v33, &v37, v5);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1009AA608@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  char *v21;
  unint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  int v33;
  uint64_t v34;
  int v35;
  int v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char *v40;
  uint64_t v41;
  char v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  char *v63;
  uint64_t *v64;
  char *v65;
  uint64_t v66;
  char v67;
  char v68;

  v52 = a2;
  v3 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v3);
  v54 = (uint64_t)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = type metadata accessor for Date(0);
  v57 = *(_QWORD *)(v59 - 8);
  __chkstk_darwin(v59);
  v58 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C(&qword_1013FF2F0);
  v60 = *(_QWORD *)(v6 - 8);
  v61 = v6;
  __chkstk_darwin(v6);
  v63 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (int *)type metadata accessor for CRLPKStrokePathData(0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v11 = _swiftEmptyArrayStorage;
  *((_QWORD *)v11 + 1) = _swiftEmptyArrayStorage;
  *((_QWORD *)v11 + 2) = _swiftEmptyArrayStorage;
  *((_QWORD *)v11 + 3) = _swiftEmptyArrayStorage;
  *((_QWORD *)v11 + 4) = _swiftEmptyArrayStorage;
  *((_QWORD *)v11 + 5) = _swiftEmptyArrayStorage;
  *((_QWORD *)v11 + 6) = _swiftEmptyArrayStorage;
  *((_QWORD *)v11 + 7) = _swiftEmptyArrayStorage;
  *((_QWORD *)v11 + 8) = _swiftEmptyArrayStorage;
  *((_QWORD *)v11 + 9) = 0;
  v12 = v11 + 72;
  *((_QWORD *)v11 + 10) = 0;
  *((_DWORD *)v11 + 22) = 0;
  v56 = &v11[*(int *)(v13 + 64)];
  static Date.now.getter(v9);
  v55 = v8[17];
  *(_DWORD *)&v11[v55] = 1065353216;
  v53 = v8[18];
  *(_DWORD *)&v11[v53] = 1065353216;
  v14 = (uint64_t)&v11[v8[19]];
  v15 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v16 = &v11[v8[20]];
  *(_QWORD *)v16 = 0;
  v16[8] = 1;
  v17 = v8[21];
  v65 = v11;
  v11[v17] = 0;
  v19 = a1[3];
  v18 = a1[4];
  v62 = a1;
  v20 = a1;
  v21 = v63;
  sub_1004BB5A4(v20, v19);
  v22 = sub_1009AB42C();
  v23 = v64;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLPKStrokePathData.CodingKeys, &type metadata for CRLPKStrokePathData.CodingKeys, v22, v19, v18);
  if (v23)
  {
    v44 = (uint64_t)v65;
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v62);
  }
  else
  {
    v64 = (uint64_t *)v12;
    v50 = v14;
    v51 = v15;
    v48 = v17;
    v49 = v16;
    v24 = v60;
    v25 = sub_1004B804C(&qword_1013FF300);
    v68 = 0;
    v26 = sub_1009AB470(&qword_1013FF308, &qword_1013FF300, (uint64_t)&protocol witness table for UInt16, (uint64_t)&protocol conformance descriptor for <A> [A]);
    v27 = v61;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v25, &v68, v61, v25, v26);
    v29 = v65;
    *(_QWORD *)v65 = v66;
    v68 = 1;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v25, &v68, v27, v25, v26);
    v29[1] = v66;
    v68 = 2;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v25, &v68, v27, v25, v26);
    v29[2] = v66;
    v68 = 3;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v25, &v68, v27, v25, v26);
    v46 = v26;
    v29[3] = v66;
    v30 = sub_1004B804C(&qword_1013F86B0);
    v68 = 4;
    v47 = sub_1009AB470(&qword_1013F86B8, &qword_1013F86B0, (uint64_t)&protocol witness table for Float, (uint64_t)&protocol conformance descriptor for <A> [A]);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v30, &v68, v27, v30, v47);
    v29[4] = v66;
    v68 = 5;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v30, &v68, v27, v30, v47);
    v29[5] = v66;
    v68 = 6;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v30, &v68, v27, v30, v47);
    v29[6] = v66;
    v68 = 7;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v30, &v68, v27, v30, v47);
    v29[7] = v66;
    v68 = 8;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v25, &v68, v27, v25, v46);
    v29[8] = v66;
    LOBYTE(v66) = 9;
    v31 = KeyedDecodingContainer.decode(_:forKey:)(&v66, v27);
    *v64 = v31;
    v68 = 10;
    v32 = sub_1007869E4();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&type metadata for CRLBezierPathData, &v68, v61, &type metadata for CRLBezierPathData, v32);
    *((_QWORD *)v65 + 10) = v66;
    LOBYTE(v66) = 11;
    v33 = KeyedDecodingContainer.decode(_:forKey:)(&v66, v61);
    *((_DWORD *)v65 + 22) = v33;
    LOBYTE(v66) = 12;
    v34 = sub_1004B7878(&qword_1013E95C0, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v59, &v66, v61, v59, v34);
    (*(void (**)(char *, char *, uint64_t))(v57 + 40))(v56, v58, v59);
    LOBYTE(v66) = 13;
    KeyedDecodingContainer.decode(_:forKey:)(&v66, v61);
    *(_DWORD *)&v65[v55] = v35;
    LOBYTE(v66) = 14;
    KeyedDecodingContainer.decode(_:forKey:)(&v66, v61);
    *(_DWORD *)&v65[v53] = v36;
    LOBYTE(v66) = 15;
    v37 = sub_1004B7878(&qword_1013E4810, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v51, &v66, v61, v51, v37);
    sub_1005E388C(v54, v50);
    v68 = 16;
    v38 = sub_100786A28();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&type metadata for CRLPointData, &v68, v61, &type metadata for CRLPointData, v38);
    v39 = v67;
    v40 = v49;
    *(_QWORD *)v49 = v66;
    v40[8] = v39;
    LOBYTE(v66) = 17;
    v41 = v61;
    v42 = KeyedDecodingContainer.decode(_:forKey:)(&v66, v61);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v21, v41);
    v43 = v62;
    v44 = (uint64_t)v65;
    v65[v48] = v42 & 1;
    sub_1004B8460(v44, v52, type metadata accessor for CRLPKStrokePathData);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v43);
  }
  return sub_1004B84A4(v44, type metadata accessor for CRLPKStrokePathData);
}

uint64_t sub_1009AADC8()
{
  unsigned __int8 *v0;

  return sub_1009A9E9C(*v0);
}

uint64_t sub_1009AADD0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1009AB73C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1009AADF4(_BYTE *a1@<X8>)
{
  *a1 = 18;
}

uint64_t sub_1009AAE00(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1009AB42C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1009AAE28(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1009AB42C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1009AAE50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1009A6E2C(a1, a2);
}

uint64_t sub_1009AAE64(uint64_t a1)
{
  return sub_1009A8B04(a1);
}

uint64_t sub_1009AAE78@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1009AA608(a1, a2);
}

uint64_t sub_1009AAE8C(_QWORD *a1)
{
  return sub_1009AA0A0(a1);
}

uint64_t sub_1009AAEA0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1004B8460(v1, a1, type metadata accessor for CRLPKStrokePathData);
}

uint64_t sub_1009AAEC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1004B7878(&qword_1013FF320, type metadata accessor for CRLPKStrokePathData, (uint64_t)&unk_100F1EEA0);
  v7 = sub_1004B7878(&qword_1013FF328, type metadata accessor for CRLPKStrokePathData, (uint64_t)&unk_100F1EDE0);
  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_1009AAF58()
{
  return sub_1004B7878(&qword_1013FF2D0, type metadata accessor for CRLPKStrokePathData, (uint64_t)&unk_100F1ED80);
}

uint64_t sub_1009AAF84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  int *v23;
  uint64_t v24;
  unsigned int (*v25)(uint64_t, uint64_t, uint64_t);
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  float *v28;
  char v29;
  uint64_t *v30;
  int v31;
  uint64_t v33;
  int *v34;
  uint64_t v35;

  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C((uint64_t *)&unk_1013F62D0);
  __chkstk_darwin(v8);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v11);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v34 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v34 - v18;
  if (!sub_10054610C(*(_QWORD *)a1, *(_QWORD *)a2)
    || !sub_10054610C(*(_QWORD *)(a1 + 8), *(_QWORD *)(a2 + 8))
    || !sub_10054610C(*(_QWORD *)(a1 + 16), *(_QWORD *)(a2 + 16))
    || !sub_10054610C(*(_QWORD *)(a1 + 24), *(_QWORD *)(a2 + 24))
    || !sub_100544DA0(*(_QWORD *)(a1 + 32), *(_QWORD *)(a2 + 32))
    || !sub_100544DA0(*(_QWORD *)(a1 + 40), *(_QWORD *)(a2 + 40))
    || !sub_100544DA0(*(_QWORD *)(a1 + 48), *(_QWORD *)(a2 + 48))
    || !sub_100544DA0(*(_QWORD *)(a1 + 56), *(_QWORD *)(a2 + 56))
    || !sub_10054610C(*(_QWORD *)(a1 + 64), *(_QWORD *)(a2 + 64))
    || *(_QWORD *)(a1 + 72) != *(_QWORD *)(a2 + 72))
  {
    goto LABEL_31;
  }
  v20 = *(_QWORD *)(a1 + 80);
  v21 = *(_QWORD *)(a2 + 80);
  if (v20)
  {
    if (!v21 || (sub_100544C38(v20, v21) & 1) == 0)
      goto LABEL_31;
  }
  else if (v21)
  {
    goto LABEL_31;
  }
  if (*(_DWORD *)(a1 + 88) != *(_DWORD *)(a2 + 88))
    goto LABEL_31;
  v35 = v8;
  v22 = (int *)type metadata accessor for CRLPKStrokePathData(0);
  if ((static Date.== infix(_:_:)(a1 + v22[16], a2 + v22[16]) & 1) == 0)
    goto LABEL_31;
  if (*(float *)(a1 + v22[17]) != *(float *)(a2 + v22[17]))
    goto LABEL_31;
  v34 = v22;
  if (*(float *)(a1 + v22[18]) != *(float *)(a2 + v22[18]))
    goto LABEL_31;
  v23 = v34;
  sub_1004CB7BC(a1 + v34[19], (uint64_t)v19, (uint64_t *)&unk_1013E1A50);
  sub_1004CB7BC(a2 + v23[19], (uint64_t)v16, (uint64_t *)&unk_1013E1A50);
  v24 = (uint64_t)&v10[*(int *)(v35 + 48)];
  sub_1004CB7BC((uint64_t)v19, (uint64_t)v10, (uint64_t *)&unk_1013E1A50);
  v35 = v24;
  sub_1004CB7BC((uint64_t)v16, v24, (uint64_t *)&unk_1013E1A50);
  v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v25((uint64_t)v10, 1, v4) == 1)
  {
    sub_1004CB800((uint64_t)v16, (uint64_t *)&unk_1013E1A50);
    sub_1004CB800((uint64_t)v19, (uint64_t *)&unk_1013E1A50);
    if (v25(v35, 1, v4) == 1)
    {
      sub_1004CB800((uint64_t)v10, (uint64_t *)&unk_1013E1A50);
      goto LABEL_27;
    }
LABEL_25:
    sub_1004CB800((uint64_t)v10, (uint64_t *)&unk_1013F62D0);
    goto LABEL_31;
  }
  sub_1004CB7BC((uint64_t)v10, (uint64_t)v13, (uint64_t *)&unk_1013E1A50);
  if (v25(v35, 1, v4) == 1)
  {
    sub_1004CB800((uint64_t)v16, (uint64_t *)&unk_1013E1A50);
    sub_1004CB800((uint64_t)v19, (uint64_t *)&unk_1013E1A50);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v4);
    goto LABEL_25;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v35, v4);
  sub_1004B7878((unint64_t *)&qword_1013E4880, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  LODWORD(v35) = dispatch thunk of static Equatable.== infix(_:_:)(v13, v7);
  v26 = *(void (**)(char *, uint64_t))(v5 + 8);
  v26(v7, v4);
  sub_1004CB800((uint64_t)v16, (uint64_t *)&unk_1013E1A50);
  sub_1004CB800((uint64_t)v19, (uint64_t *)&unk_1013E1A50);
  v26(v13, v4);
  sub_1004CB800((uint64_t)v10, (uint64_t *)&unk_1013E1A50);
  if ((v35 & 1) == 0)
    goto LABEL_31;
LABEL_27:
  v27 = v34[20];
  v28 = (float *)(a1 + v27);
  v29 = *(_BYTE *)(a1 + v27 + 8);
  v30 = (uint64_t *)(a2 + v27);
  v31 = *(unsigned __int8 *)(a2 + v27 + 8);
  if ((v29 & 1) == 0)
  {
    if ((v31 & 1) == 0)
    {
      LOBYTE(v31) = 0;
      v33 = *v30;
      if (*v28 == *(float *)&v33 && v28[1] == *((float *)&v33 + 1))
        goto LABEL_35;
      return v31 & 1;
    }
LABEL_31:
    LOBYTE(v31) = 0;
    return v31 & 1;
  }
  if (v31)
LABEL_35:
    LOBYTE(v31) = *(_BYTE *)(a1 + v34[21]) ^ *(_BYTE *)(a2 + v34[21]) ^ 1;
  return v31 & 1;
}

unint64_t sub_1009AB42C()
{
  unint64_t result;

  result = qword_1013FF2F8;
  if (!qword_1013FF2F8)
  {
    result = swift_getWitnessTable(&unk_100F1EF9C, &type metadata for CRLPKStrokePathData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FF2F8);
  }
  return result;
}

uint64_t sub_1009AB470(unint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = sub_1004CB6A4(a2);
    result = swift_getWitnessTable(a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1009AB4CC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

double sub_1009AB4F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

double sub_1009AB500(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t getEnumTagSinglePayload for CRLPKStrokePathData.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xEF)
    goto LABEL_17;
  if (a2 + 17 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 17) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 17;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 17;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 17;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x12;
  v8 = v6 - 18;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLPKStrokePathData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 17 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 17) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEE)
    return ((uint64_t (*)(void))((char *)&loc_1009AB5E4 + 4 * byte_100F1ED17[v4]))();
  *a1 = a2 + 17;
  return ((uint64_t (*)(void))((char *)sub_1009AB618 + 4 * byte_100F1ED12[v4]))();
}

uint64_t sub_1009AB618(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1009AB620(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1009AB628);
  return result;
}

uint64_t sub_1009AB634(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1009AB63CLL);
  *(_BYTE *)result = a2 + 17;
  return result;
}

uint64_t sub_1009AB640(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1009AB648(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLPKStrokePathData.CodingKeys()
{
  return &type metadata for CRLPKStrokePathData.CodingKeys;
}

unint64_t sub_1009AB668()
{
  unint64_t result;

  result = qword_1013FF330;
  if (!qword_1013FF330)
  {
    result = swift_getWitnessTable(&unk_100F1EF74, &type metadata for CRLPKStrokePathData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FF330);
  }
  return result;
}

unint64_t sub_1009AB6B0()
{
  unint64_t result;

  result = qword_1013FF338;
  if (!qword_1013FF338)
  {
    result = swift_getWitnessTable(&unk_100F1EEE4, &type metadata for CRLPKStrokePathData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FF338);
  }
  return result;
}

unint64_t sub_1009AB6F8()
{
  unint64_t result;

  result = qword_1013FF340;
  if (!qword_1013FF340)
  {
    result = swift_getWitnessTable(&unk_100F1EF0C, &type metadata for CRLPKStrokePathData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FF340);
  }
  return result;
}

uint64_t sub_1009AB73C(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;

  if (a1 == 0x446874756D697A61 && a2 == 0xEB00000000617461)
  {
    v5 = 0xEB00000000617461;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x446874756D697A61, 0xEB00000000617461, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x6564757469746C61 && a2 == 0xEC00000061746144)
  {
    v7 = 0xEC00000061746144;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6564757469746C61, 0xEC00000061746144, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x7461446563726F66 && a2 == 0xE900000000000061)
  {
    v8 = 0xE900000000000061;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7461446563726F66, 0xE900000000000061, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 0x447974696361706FLL && a2 == 0xEB00000000617461)
  {
    v9 = 0xEB00000000617461;
LABEL_26:
    swift_bridgeObjectRelease(v9);
    return 3;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x447974696361706FLL, 0xEB00000000617461, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
    goto LABEL_26;
  }
  if (a1 == 0x74614458657A6973 && a2 == 0xE900000000000061)
  {
    v10 = 0xE900000000000061;
LABEL_32:
    swift_bridgeObjectRelease(v10);
    return 4;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x74614458657A6973, 0xE900000000000061, a1, a2, 0) & 1) != 0)
  {
    v10 = a2;
    goto LABEL_32;
  }
  if (a1 == 0x74614459657A6973 && a2 == 0xE900000000000061)
  {
    v11 = 0xE900000000000061;
LABEL_38:
    swift_bridgeObjectRelease(v11);
    return 5;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x74614459657A6973, 0xE900000000000061, a1, a2, 0) & 1) != 0)
  {
    v11 = a2;
    goto LABEL_38;
  }
  if (a1 == 0x7366664F656D6974 && a2 == 0xEE00617461447465)
  {
    v12 = 0xEE00617461447465;
LABEL_44:
    swift_bridgeObjectRelease(v12);
    return 6;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7366664F656D6974, 0xEE00617461447465, a1, a2, 0) & 1) != 0)
  {
    v12 = a2;
    goto LABEL_44;
  }
  if (a1 == 0x4432737569646172 && a2 == 0xEB00000000617461)
  {
    v13 = 0xEB00000000617461;
LABEL_50:
    swift_bridgeObjectRelease(v13);
    return 7;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x4432737569646172, 0xEB00000000617461, a1, a2, 0) & 1) != 0)
  {
    v13 = a2;
    goto LABEL_50;
  }
  if (a1 == 0x7464695765676465 && a2 == 0xED00006174614468)
  {
    v14 = 0xED00006174614468;
LABEL_56:
    swift_bridgeObjectRelease(v14);
    return 8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7464695765676465, 0xED00006174614468, a1, a2, 0) & 1) != 0)
  {
    v14 = a2;
    goto LABEL_56;
  }
  if (a1 == 0x756F43746E696F70 && a2 == 0xEA0000000000746ELL)
  {
    v15 = 0xEA0000000000746ELL;
LABEL_62:
    swift_bridgeObjectRelease(v15);
    return 9;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x756F43746E696F70, 0xEA0000000000746ELL, a1, a2, 0) & 1) != 0)
  {
    v15 = a2;
    goto LABEL_62;
  }
  if (a1 == 0x687461506B73616DLL && a2 == 0xEC00000061746144)
  {
    v16 = 0xEC00000061746144;
LABEL_68:
    swift_bridgeObjectRelease(v16);
    return 10;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x687461506B73616DLL, 0xEC00000061746144, a1, a2, 0) & 1) != 0)
  {
    v16 = a2;
    goto LABEL_68;
  }
  if (a1 == 0x65536D6F646E6172 && a2 == 0xEA00000000006465)
  {
    v17 = 0xEA00000000006465;
LABEL_74:
    swift_bridgeObjectRelease(v17);
    return 11;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x65536D6F646E6172, 0xEA00000000006465, a1, a2, 0) & 1) != 0)
  {
    v17 = a2;
    goto LABEL_74;
  }
  if (a1 == 0x6E6F697461657263 && a2 == 0xEC00000065746144)
  {
    v18 = 0xEC00000065746144;
LABEL_80:
    swift_bridgeObjectRelease(v18);
    return 12;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E6F697461657263, 0xEC00000065746144, a1, a2, 0) & 1) != 0)
  {
    v18 = a2;
    goto LABEL_80;
  }
  if (a1 == 0x63537265646E6572 && a2 == 0xEC00000058656C61)
  {
    v19 = 0xEC00000058656C61;
LABEL_86:
    swift_bridgeObjectRelease(v19);
    return 13;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x63537265646E6572, 0xEC00000058656C61, a1, a2, 0) & 1) != 0)
  {
    v19 = a2;
    goto LABEL_86;
  }
  if (a1 == 0x63537265646E6572 && a2 == 0xEC00000059656C61)
  {
    v20 = 0xEC00000059656C61;
LABEL_92:
    swift_bridgeObjectRelease(v20);
    return 14;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x63537265646E6572, 0xEC00000059656C61, a1, a2, 0) & 1) != 0)
  {
    v20 = a2;
    goto LABEL_92;
  }
  if (a1 == 0x72477265646E6572 && a2 == 0xED0000444970756FLL)
  {
    v21 = 0xED0000444970756FLL;
LABEL_98:
    swift_bridgeObjectRelease(v21);
    return 15;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x72477265646E6572, 0xED0000444970756FLL, a1, a2, 0) & 1) != 0)
  {
    v21 = a2;
    goto LABEL_98;
  }
  if (a1 == 0xD000000000000015)
  {
    v22 = 0x8000000100FE7180;
    if (a2 == 0x8000000100FE7180)
      goto LABEL_103;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000015, 0x8000000100FE7180, a1, a2, 0) & 1) != 0)
  {
    v22 = a2;
LABEL_103:
    swift_bridgeObjectRelease(v22);
    return 16;
  }
  if (a1 == 0x6F53646C756F6873 && a2 == 0xEF6874614D65766CLL)
  {
    swift_bridgeObjectRelease(0xEF6874614D65766CLL);
    return 17;
  }
  else
  {
    v23 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6F53646C756F6873, 0xEF6874614D65766CLL, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v23 & 1) != 0)
      return 17;
    else
      return 18;
  }
}

void sub_1009ABFBC(void *a1, double a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;
  void *v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  char *v33;
  id v34;
  void *v35;
  id v36;
  void *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char *v51;
  char *v52;
  __n128 v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  void (**v59)(_QWORD, _QWORD, _QWORD);
  uint64_t v60;
  void *v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  id v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  id v73;
  char v74;
  uint64_t v75;
  void (*v76)(char *, char *, uint64_t);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(uint64_t, char *, uint64_t);
  uint64_t v84;
  void *v85;
  void *v86;
  uint64_t v87;
  void *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(uint64_t, char *, uint64_t);
  id v93;
  char *v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  void (**v100)(_QWORD, _QWORD, _QWORD);
  uint64_t v101;
  void **aBlock;
  uint64_t v103;
  void *v104;
  void *v105;
  void *v106;
  uint64_t v107;

  v6 = sub_1004B804C((uint64_t *)&unk_1013E8570);
  v100 = *(void (***)(_QWORD, _QWORD, _QWORD))(v6 - 8);
  __chkstk_darwin(v6);
  v99 = (char *)&v92 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v8);
  v98 = (char *)&v92 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v92 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v13);
  v15 = (char *)&v92 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for URL(0);
  v101 = *(_QWORD *)(v16 - 8);
  v17 = *(_QWORD *)(v101 + 64);
  __chkstk_darwin(v16);
  __chkstk_darwin(v18);
  v20 = (char *)&v92 - v19;
  v21 = (char *)objc_msgSend(a1, "smartFieldAtPoint:", a2, a3);
  if (!v21)
    return;
  v22 = v21;
  v96 = v6;
  v23 = objc_opt_self(CRLWPHyperlinkField);
  v24 = (void *)swift_dynamicCastObjCClass(v22, v23);
  if (!v24)
  {
LABEL_33:

    return;
  }
  v25 = v24;
  v97 = v16;
  v26 = objc_msgSend(v24, "url");
  if (!v26)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v101 + 56))(v15, 1, 1, v97);
    goto LABEL_31;
  }
  v27 = v26;
  v95 = v25;
  v28 = v20;
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v26);

  v29 = v101;
  v30 = *(void (**)(char *, char *, uint64_t))(v101 + 32);
  v94 = (char *)&v92 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = v30;
  v32 = v97;
  v30(v15, v94, v97);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v15, 0, 1, v32);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v15, 1, v32) == 1)
  {
LABEL_31:

    sub_1005534BC((uint64_t)v15);
    return;
  }
  v33 = v28;
  v31(v28, v15, v32);
  if ((sub_10057EC2C() & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v101 + 8))(v28, v32);
    goto LABEL_33;
  }
  v34 = objc_msgSend(a1, "interactiveCanvasController");
  if (!v34)
  {
LABEL_37:
    sub_100757E04(&_mh_execute_header, (uint64_t)"contextMenuConfiguration(at:)", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPHyperlinkHostWPRep.swift", 89, 2, 29, "Unable to build context menu configuration", 42, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"contextMenuConfiguration(at:)", 29, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPHyperlinkHostWPRep.swift", 89, 2u, 29, (uint64_t)"Unable to build context menu configuration", 42, 2u);

LABEL_38:
    (*(void (**)(char *, uint64_t))(v101 + 8))(v33, v97);
    return;
  }
  v35 = v34;
  if (!objc_msgSend(v34, "allowedToShowHyperlinkContextMenuForRep:", a1)
    || (v36 = objc_msgSend(v35, "editorController")) == 0)
  {
LABEL_36:

    goto LABEL_37;
  }
  v37 = v36;
  v38 = objc_msgSend(v36, "currentEditors");

  v39 = sub_1004B804C((uint64_t *)&unk_1013EFDD0);
  v40 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v38, v39);

  if (!((unint64_t)v40 >> 62))
  {
    v41 = *(_QWORD *)((v40 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v41)
      goto LABEL_11;
LABEL_56:

    swift_bridgeObjectRelease();
    goto LABEL_37;
  }
  if (v40 < 0)
    v90 = v40;
  else
    v90 = v40 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v40);
  v41 = _CocoaArrayWrapper.endIndex.getter(v90);
  swift_bridgeObjectRelease();
  if (!v41)
    goto LABEL_56;
LABEL_11:
  v42 = v41 - 1;
  if (__OFSUB__(v41, 1))
  {
    __break(1u);
  }
  else if ((v40 & 0xC000000000000001) == 0)
  {
    if ((v42 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v42 < *(_QWORD *)((v40 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v43 = *(_QWORD *)(v40 + 8 * v42 + 32);
      swift_unknownObjectRetain(v43);
      goto LABEL_16;
    }
    __break(1u);
    goto LABEL_53;
  }
  v43 = specialized _ArrayBuffer._getElementSlowPath(_:)(v42, v40);
LABEL_16:
  swift_bridgeObjectRelease();
  v44 = objc_opt_self(CRLWPShapeEditor);
  v45 = (void *)swift_dynamicCastObjCClass(v43, v44);
  if (!v45)
  {
    swift_unknownObjectRelease(v43);
    goto LABEL_36;
  }
  v46 = objc_msgSend(v45, "wpEditors");
  swift_unknownObjectRelease(v43);
  v47 = type metadata accessor for CRLWPEditor(0);
  v41 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v46, v47);

  if (!((unint64_t)v41 >> 62))
  {
    v48 = v41;
    v49 = *(_QWORD *)((v41 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v49)
      goto LABEL_19;
    goto LABEL_56;
  }
LABEL_53:
  v91 = v41;
  if (v41 >= 0)
    v41 &= 0xFFFFFFFFFFFFFF8uLL;
  v48 = v91;
  swift_bridgeObjectRetain(v91);
  v49 = _CocoaArrayWrapper.endIndex.getter(v41);
  swift_bridgeObjectRelease();
  if (!v49)
    goto LABEL_56;
LABEL_19:
  v50 = v49 - 1;
  if (__OFSUB__(v49, 1))
  {
    __break(1u);
  }
  else
  {
    v49 = v48;
    if ((v48 & 0xC000000000000001) == 0)
    {
      if ((v50 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v50 < *(_QWORD *)((v48 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v51 = (char *)*(id *)(v48 + 8 * v50 + 32);
        goto LABEL_24;
      }
      __break(1u);
      goto LABEL_61;
    }
  }
  v51 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v50, v49);
LABEL_24:
  v52 = v51;
  v53 = swift_bridgeObjectRelease();
  v93 = v52;
  v54 = *(char **)(*(_QWORD *)&v52[OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape]
                 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v54)
  {
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  v92 = (void (*)(uint64_t, char *, uint64_t))v31;
  v55 = *(_QWORD *)&v54[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
  if (!v55)
  {
LABEL_62:
    __break(1u);
    return;
  }
  v56 = (uint64_t)v98;
  (*(void (**)(__n128))(*(_QWORD *)v55 + 760))(v53);
  sub_1004D29BC(v56 + *(int *)(v8 + 20), (uint64_t)v12);
  v57 = v54;
  sub_1004B84A4(v56, type metadata accessor for CRLWPShapeItemCRDTData);
  v58 = v99;
  v59 = v100;
  v60 = v96;
  ((void (**)(char *, char *, uint64_t))v100)[2](v99, v12, v96);
  sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLWPStorageCRDTData);
  v61 = (void *)CRAttributedString.attributedString.getter(v60);
  ((void (*)(char *, uint64_t))v59[1])(v58, v60);
  v62 = objc_msgSend(v61, "string");

  v63 = static String._unconditionallyBridgeFromObjectiveC(_:)(v62);
  v65 = v64;

  v66 = objc_msgSend(v95, "parentStorage");
  if (v66)
  {
    v67 = v66;
    v68 = objc_msgSend(v66, "string");
    swift_unknownObjectRelease(v67);
    v69 = static String._unconditionallyBridgeFromObjectiveC(_:)(v68);
    v71 = v70;

    v72 = v94;
    if (v63 == v69 && v65 == v71)
    {
      swift_bridgeObjectRelease_n(v65, 2);
      v73 = v93;
LABEL_42:
      sub_100757E04(&_mh_execute_header, (uint64_t)"contextMenuConfiguration(at:)", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPHyperlinkHostWPRep.swift", 89, 2, 35, "The hyperlink content should not be edited while generating preview.", 68, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"contextMenuConfiguration(at:)", 29, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPHyperlinkHostWPRep.swift", 89, 2u, 35, (uint64_t)"The hyperlink content should not be edited while generating preview.", 68, 2u);

      goto LABEL_38;
    }
    v74 = _stringCompareWithSmolCheck(_:_:expecting:)(v63, v65, v69, v71, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v73 = v93;
    if ((v74 & 1) != 0)
      goto LABEL_42;
  }
  else
  {
    swift_bridgeObjectRelease();
    v73 = v93;
    v72 = v94;
  }
  if ((sub_1009AC9D8(v95) & 1) != 0)
    goto LABEL_42;
  v99 = v22;
  v100 = (void (**)(_QWORD, _QWORD, _QWORD))v35;
  v75 = v101;
  v76 = *(void (**)(char *, char *, uint64_t))(v101 + 16);
  v77 = v97;
  v76(v72, v33, v97);
  v78 = *(unsigned __int8 *)(v75 + 80);
  v79 = (v78 + 16) & ~v78;
  v80 = v79 + v17;
  v81 = v78 | 7;
  v82 = swift_allocObject(&unk_10128DA40, v79 + v17, v78 | 7);
  v83 = v92;
  v92(v82 + v79, v72, v77);
  v76(v72, v33, v77);
  v84 = swift_allocObject(&unk_10128DA68, v80, v81);
  v83(v84 + v79, v72, v77);
  v85 = (void *)objc_opt_self(UIContextMenuConfiguration);
  v106 = sub_1009AD5B4;
  v107 = v82;
  aBlock = _NSConcreteStackBlock;
  v103 = *(_QWORD *)"";
  v104 = sub_100528418;
  v105 = &unk_10128DA80;
  v86 = _Block_copy(&aBlock);
  v87 = v107;
  swift_retain_n(v82, 2);
  swift_retain(v84);
  swift_release(v87);
  v106 = sub_1009AD5E4;
  v107 = v84;
  aBlock = _NSConcreteStackBlock;
  v103 = *(_QWORD *)"";
  v104 = sub_100524AAC;
  v105 = &unk_10128DAA8;
  v88 = _Block_copy(&aBlock);
  v89 = v107;
  swift_retain(v84);
  objc_msgSend(v85, "configurationWithIdentifier:previewProvider:actionProvider:", 0, v86, v88, swift_release(v89).n128_f64[0]);
  swift_release(v82);
  swift_release(v84);
  _Block_release(v88);
  _Block_release(v86);

  swift_release(v82);
  swift_release(v84);

  (*(void (**)(char *, uint64_t))(v75 + 8))(v33, v77);
}

id sub_1009AC9D8(void *a1)
{
  uint64_t v1;
  id result;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  void *v13;
  uint64_t v14;
  void *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  result = (id)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc);
  if (!result)
    return result;
  v4 = result;
  v5 = objc_msgSend(result, "editorController");

  if (!v5)
    return 0;
  v6 = type metadata accessor for CRLWPEditor(0);
  v8 = objc_msgSend(v5, "currentEditorsOfClass:", swift_getObjCClassFromMetadata(v6, v7));

  v9 = sub_1004B804C((uint64_t *)&unk_1013EFDD0);
  v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, v9);

  if ((unint64_t)v10 >> 62)
  {
    v23 = v10 < 0 ? v10 : v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v10);
    v11 = _CocoaArrayWrapper.endIndex.getter(v23);
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  *(_QWORD *)&v12 = swift_bridgeObjectRelease().n128_u64[0];
  if (v11 < 1)
    return 0;
  result = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_editorController), "selectionForEditor:", v1, v12);
  if (!result)
    return result;
  v13 = result;
  v14 = objc_opt_self(CRLWPSelection);
  v15 = (void *)swift_dynamicCastObjCClass(v13, v14);
  if (!v15)
  {

    return 0;
  }
  v16 = (char *)objc_msgSend(v15, "range");
  v18 = v17;
  v19 = (char *)objc_msgSend(a1, "range");
  v21 = v20;

  return (id)(v16 <= v19 && &v16[v18] >= &v19[v21]);
}

id sub_1009ACB74()
{
  id v0;
  NSURL *v1;
  void *v2;
  void *v3;
  id v4;

  v0 = objc_allocWithZone((Class)CRLSelectionAwareSafariViewController);
  URL._bridgeToObjectiveC()(v1);
  v3 = v2;
  v4 = objc_msgSend(v0, "initWithURL:", v2);

  return v4;
}

UIMenu sub_1009ACBC8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  NSString v9;
  NSString v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  Swift::String v21;
  Swift::OpaquePointer v23;
  _QWORD v24[3];
  UIMenuElementSize v25;
  UIImage_optional v26;

  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v24[2] = sub_1004B8930(0, &qword_1013E1090, UIMenu_ptr);
  v6 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v7 = swift_allocObject(v6, 40, 7);
  *(_OWORD *)(v7 + 16) = xmmword_100EEF400;
  v24[1] = sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
  v8 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v9 = String._bridgeToObjectiveC()();
  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend(v8, "localizedStringForKey:value:table:", v9, v10, 0);

  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v14 = v13;

  v15 = String._bridgeToObjectiveC()();
  v16 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v15);

  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v3);
  v17 = *(unsigned __int8 *)(v4 + 80);
  v18 = (v17 + 16) & ~v17;
  v19 = swift_allocObject(&unk_10128DAE0, v18 + v5, v17 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v19 + v18, (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  v20 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v12, v14, 0, 0, v16, 0, 0, 0, 0, 0, 0, sub_1009AD69C, v19);
  *(_QWORD *)(v7 + 32) = v20;
  v25 = v7;
  specialized Array._endMutation()(v20);
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  v26.value.super.isa = 0;
  v26.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v21, (Swift::String_optional)0, v26, 0, 0xFFFFFFFFFFFFFFFFLL, v25, v23);
}

double sub_1009ACE64(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double result;
  uint64_t v15;

  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v6 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v3);
  v10 = *(unsigned __int8 *)(v4 + 80);
  v11 = (v10 + 32) & ~v10;
  v12 = swift_allocObject(&unk_10128DB08, v11 + v5, v10 | 7);
  *(_QWORD *)(v12 + 16) = 0;
  *(_QWORD *)(v12 + 24) = 0;
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v12 + v11, (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  v13 = sub_100521B98((uint64_t)v8, (uint64_t)&unk_1013FF358, v12);
  *(_QWORD *)&result = swift_release(v13).n128_u64[0];
  return result;
}

uint64_t sub_1009ACF98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch(sub_1009ACFB0, 0, 0);
}

uint64_t sub_1009ACFB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 24) = static MainActor.shared.getter(v1);
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_1009AD018, v2, v3);
}

uint64_t sub_1009AD018()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 24));
  sub_10069C328(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_1009AD050(uint64_t a1, id a2, double a3, double a4)
{
  id v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  id v21;
  void *v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  id v31;
  double v33;
  CGFloat v34;
  double v35;
  CGFloat v36;
  double v37;
  CGFloat v38;
  double v39;
  CGFloat v40;
  id v41;
  void *v42;
  double v43;
  double v44;
  id v45;
  id v46;
  id v47;
  id v48;
  void *v49;
  id v50;
  char v51;

  v8 = objc_msgSend(a2, "interactiveCanvasController");
  if (!v8)
    return 0;
  v9 = v8;
  v10 = objc_msgSend(v8, "layerHost");
  if (!v10)
    goto LABEL_13;
  v11 = v10;
  if ((objc_msgSend(v10, "respondsToSelector:", "asiOSCVC") & 1) != 0)
  {
    v12 = objc_msgSend(v11, "asiOSCVC");
    v13 = objc_msgSend(v12, "canvasView", swift_unknownObjectRelease(v11).n128_f64[0]);

    if (v13)
    {
      v14 = objc_msgSend(a2, "smartFieldAtPoint:", a3, a4);
      if (v14)
      {
        v15 = v14;
        v16 = objc_opt_self(CRLWPHyperlinkField);
        v17 = swift_dynamicCastObjCClass(v15, v16);
        if (v17)
        {
          v18 = (void *)v17;
          if ((sub_10057EC2C() & 1) == 0)
          {

            return 0;
          }
          v19 = objc_msgSend(v18, "range");
          v21 = objc_msgSend(objc_allocWithZone((Class)CRLWPSelection), "initWithRange:", v19, v20);
          if (v21)
          {
            v22 = v21;
            objc_msgSend(a2, "rectForSelection:includeRuby:includePaginatedAttachments:", v21, 0, 0);
            v24 = v23;
            v26 = v25;
            v28 = v27;
            v30 = v29;

          }
          else
          {
            v24 = 0.0;
            v26 = 0.0;
            v28 = 0.0;
            v30 = 0.0;
          }
          objc_msgSend(a2, "convertNaturalRectToUnscaledCanvas:", v24, v26, v28, v30);
          objc_msgSend(v9, "convertUnscaledToBoundsRect:");
          v34 = v33;
          v36 = v35;
          v38 = v37;
          v40 = v39;
          v41 = objc_msgSend(v13, "resizableSnapshotViewFromRect:afterScreenUpdates:withCapInsets:", 1);
          if (v41)
          {
            v42 = v41;
            v43 = sub_100061400(v34, v36, v38, v40);
            v45 = objc_msgSend(objc_allocWithZone((Class)UIPreviewTarget), "initWithContainer:center:", v13, v43, v44);
            v46 = objc_msgSend(objc_allocWithZone((Class)UIPreviewParameters), "init");
            v47 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
            objc_msgSend(v46, "setBackgroundColor:", v47);

            v31 = objc_msgSend(objc_allocWithZone((Class)UITargetedPreview), "initWithView:parameters:target:", v42, v46, v45);
            return v31;
          }
          v48 = objc_msgSend(a2, "repForSelecting");
          if (v48)
          {
            v49 = v48;
            sub_1004B8930(0, (unint64_t *)&qword_1013E56B0, off_101229828);
            v50 = a2;
            v51 = static NSObject.== infix(_:_:)(v49, v50);

            if ((v51 & 1) == 0)
            {
              objc_msgSend(v50, "convertNaturalPointToUnscaledCanvas:", a3, a4);
              objc_msgSend(v49, "convertNaturalPointFromUnscaledCanvas:");
              v31 = objc_msgSend(v49, "contextMenuPreviewForHighlightingMenuAtPoint:withConfiguration:", a1);

              return v31;
            }

          }
          goto LABEL_13;
        }

      }
    }
LABEL_13:

    return 0;
  }

  swift_unknownObjectRelease(v11);
  return 0;
}

uint64_t CRLWPRep.contextMenuConfiguration(at:)(double a1, double a2)
{
  void *v2;
  id v5;
  uint64_t v6;
  uint64_t v7;

  v5 = v2;
  sub_1009ABFBC(v5, a1, a2);
  v7 = v6;

  return v7;
}

id CRLWPRep.contextMenuPreviewForHighlightingMenu(at:with:)(uint64_t a1, double a2, double a3)
{
  void *v3;
  id v7;
  id v8;

  v7 = v3;
  v8 = sub_1009AD050(a1, v7, a2, a3);

  return v8;
}

id sub_1009AD5B4()
{
  type metadata accessor for URL(0);
  return sub_1009ACB74();
}

UIMenu sub_1009AD5E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for URL(0) - 8) + 80);
  return sub_1009ACBC8(a1, v1 + ((v3 + 16) & ~v3));
}

double sub_1009AD620(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

double sub_1009AD630(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_1009AD63C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

double sub_1009AD69C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for URL(0) - 8) + 80);
  return sub_1009ACE64(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_1009AD6D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1009AD74C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for URL(0) - 8) + 80);
  v3 = v0 + ((v2 + 32) & ~v2);
  v4 = (_QWORD *)swift_task_alloc(dword_1013FF354);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1004CF80C;
  v4[2] = v3;
  return swift_task_switch(sub_1009ACFB0, 0, 0);
}

uint64_t sub_1009AD7CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(_QWORD, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  _QWORD v22[2];

  v0 = sub_1004B804C(&qword_1013E1118);
  __chkstk_darwin(v0);
  v22[0] = (char *)v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v9);
  v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LocalizedStringResource(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for TypeDisplayRepresentation(0, v14);
  sub_100501DE0(v17, qword_101480128);
  sub_1004F2A1C(v17, (uint64_t)qword_101480128);
  v18 = String.LocalizationValue.init(stringLiteral:)(0x696C696269736956, 0xEA00000000007974);
  static Locale.current.getter(v18);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v2);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v11, 0x6E497070414C5243, 0xED000073746E6574, v8, v5, "Entity type name", 16, 2);
  v19 = *(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v13 + 56);
  v20 = v22[0];
  v19(v22[0], 1, 1, v12);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v16, v20);
}

unint64_t sub_1009ADA00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(_BYTE *);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(_BYTE *, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  _BYTE *v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE *v46;
  _BYTE *v47;
  _BYTE *v48;
  uint64_t v49;
  unint64_t result;
  _BYTE v51[12];
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _BYTE *v63;
  uint64_t v64;
  __int128 v65;
  void (*v66)(_BYTE *, uint64_t, uint64_t, uint64_t);
  uint64_t v67;
  void (*v68)(_BYTE *, uint64_t, uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _BYTE *v72;
  _BYTE *v73;

  v0 = sub_1004B804C(&qword_1013E9A70);
  __chkstk_darwin(v0);
  v73 = &v51[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v2 = sub_1004B804C(&qword_1013E1118);
  __chkstk_darwin(v2);
  v72 = &v51[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v53 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v4 = *(_QWORD *)(v53 - 8);
  __chkstk_darwin(v53);
  v6 = &v51[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for Locale(0);
  __chkstk_darwin(v7);
  v9 = &v51[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v10);
  v12 = &v51[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for LocalizedStringResource(0);
  v14 = *(_QWORD *)(v13 - 8);
  v69 = v13;
  __chkstk_darwin(v13);
  v63 = &v51[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = sub_1004B804C(&qword_1013FF3C8);
  v17 = sub_1004B804C(&qword_1013F92C8);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = v17;
  v71 = v17;
  v20 = *(_QWORD *)(v18 + 72);
  v21 = *(unsigned __int8 *)(v18 + 80);
  v22 = (v21 + 32) & ~v21;
  v60 = v20;
  v61 = 2 * v20;
  v23 = swift_allocObject(v16, v22 + 3 * v20, v21 | 7);
  v65 = xmmword_100EF5550;
  v62 = v23;
  *(_OWORD *)(v23 + 16) = xmmword_100EF5550;
  v70 = v23 + v22;
  v59 = v23 + v22 + *(int *)(v19 + 48);
  *(_BYTE *)(v23 + v22) = 0;
  v24 = String.LocalizationValue.init(stringLiteral:)(2003789907, 0xE400000000000000);
  static Locale.current.getter(v24);
  v52 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v25 = *(void (**)(_BYTE *))(v4 + 104);
  v26 = v53;
  v25(v6);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0x6E497070414C5243, 0xED000073746E6574, v9, v6, 0, 0, 256);
  v68 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  v68(v72, 1, 1, v13);
  v27 = type metadata accessor for DisplayRepresentation.Image(0);
  v66 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56);
  v67 = v27;
  v66(v73, 1, 1, v27);
  v58 = sub_1004B804C(&qword_1013EDDA0);
  v28 = *(_QWORD *)(v14 + 72);
  v29 = *(unsigned __int8 *)(v14 + 80);
  v64 = 2 * v28;
  v54 = v28;
  v56 = ((v29 + 32) & ~v29) + 3 * v28;
  v57 = (v29 + 32) & ~v29;
  v55 = v29 | 7;
  v30 = swift_allocObject(v58, v56, v29 | 7);
  *(_OWORD *)(v30 + 16) = v65;
  v31 = String.LocalizationValue.init(stringLiteral:)(0x656C62616E45, 0xE600000000000000);
  static Locale.current.getter(v31);
  v32 = v52;
  v33 = v26;
  ((void (*)(_BYTE *, _QWORD, uint64_t))v25)(v6, v52, v26);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0x6E497070414C5243, 0xED000073746E6574, v9, v6, "Show operation name synonym", 27, 2);
  v34 = String.LocalizationValue.init(stringLiteral:)(0x79616C70736944, 0xE700000000000000);
  static Locale.current.getter(v34);
  ((void (*)(_BYTE *, uint64_t, uint64_t))v25)(v6, v32, v26);
  v35 = (void (*)(_BYTE *, uint64_t, uint64_t))v25;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0x6E497070414C5243, 0xED000073746E6574, v9, v6, "Show operation name synonym", 27, 2);
  v36 = String.LocalizationValue.init(stringLiteral:)(0x6E6F206E727554, 0xE700000000000000);
  static Locale.current.getter(v36);
  v37 = v32;
  ((void (*)(_BYTE *, uint64_t, uint64_t))v25)(v6, v32, v33);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0x6E497070414C5243, 0xED000073746E6574, v9, v6, "Show operation name synonym", 27, 2);
  v39 = v72;
  v38 = v73;
  DisplayRepresentation.init(title:subtitle:image:synonyms:)(v63, v72, v73, v30);
  v40 = (_BYTE *)(v70 + v60);
  v60 += v70 + *(int *)(v71 + 48);
  *v40 = 1;
  v41 = String.LocalizationValue.init(stringLiteral:)(1701079368, 0xE400000000000000);
  static Locale.current.getter(v41);
  v35(v6, v32, v33);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0x6E497070414C5243, 0xED000073746E6574, v9, v6, 0, 0, 256);
  v68(v39, 1, 1, v69);
  v66(v38, 1, 1, v67);
  v42 = swift_allocObject(v58, v56, v55);
  *(_OWORD *)(v42 + 16) = v65;
  v43 = String.LocalizationValue.init(stringLiteral:)(0x656C6261736944, 0xE700000000000000);
  static Locale.current.getter(v43);
  v35(v6, v32, v33);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0x6E497070414C5243, 0xED000073746E6574, v9, v6, "Hide operation name synonym", 27, 2);
  v44 = String.LocalizationValue.init(stringLiteral:)(0x65766F6D6552, 0xE600000000000000);
  static Locale.current.getter(v44);
  v35(v6, v32, v33);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0x6E497070414C5243, 0xED000073746E6574, v9, v6, "Hide operation name synonym", 27, 2);
  v45 = String.LocalizationValue.init(stringLiteral:)(0x66666F206E727554, 0xE800000000000000);
  static Locale.current.getter(v45);
  v35(v6, v32, v33);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0x6E497070414C5243, 0xED000073746E6574, v9, v6, "Hide operation name synonym", 27, 2);
  v46 = v63;
  v48 = v72;
  v47 = v73;
  DisplayRepresentation.init(title:subtitle:image:synonyms:)(v63, v72, v73, v42);
  *(_BYTE *)(v70 + v61) = 2;
  v49 = String.LocalizationValue.init(stringLiteral:)(0x656C67676F54, 0xE600000000000000);
  static Locale.current.getter(v49);
  v35(v6, v37, v33);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0x6E497070414C5243, 0xED000073746E6574, v9, v6, 0, 0, 256);
  v68(v48, 1, 1, v69);
  v66(v47, 1, 1, v67);
  DisplayRepresentation.init(title:subtitle:image:)(v46, v48, v47);
  result = sub_1008D7D0C(v62);
  qword_101480140 = result;
  return result;
}

uint64_t sub_1009AE248(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_10083C20C(*a1, *a2);
}

unint64_t sub_1009AE258()
{
  unint64_t result;

  result = qword_1013FF360;
  if (!qword_1013FF360)
  {
    result = swift_getWitnessTable(&unk_100F1EFFC, &type metadata for CRLVisibilityOperation);
    atomic_store(result, (unint64_t *)&qword_1013FF360);
  }
  return result;
}

Swift::Int sub_1009AE29C()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[9];

  v1 = *v0;
  Hasher.init(_seed:)(v7, 0);
  v2 = 0xE400000000000000;
  v3 = 1701079400;
  if (v1 != 1)
  {
    v3 = 0x656C67676F74;
    v2 = 0xE600000000000000;
  }
  if (v1)
    v4 = v3;
  else
    v4 = 2003789939;
  if (v1)
    v5 = v2;
  else
    v5 = 0xE400000000000000;
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

uint64_t sub_1009AE328(uint64_t a1)
{
  _BYTE *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v2 = 0xE400000000000000;
  v3 = 1701079400;
  if (*v1 != 1)
  {
    v3 = 0x656C67676F74;
    v2 = 0xE600000000000000;
  }
  if (*v1)
    v4 = v3;
  else
    v4 = 2003789939;
  if (*v1)
    v5 = v2;
  else
    v5 = 0xE400000000000000;
  String.hash(into:)(a1, v4, v5);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_1009AE390(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD v8[9];

  v2 = *v1;
  Hasher.init(_seed:)(v8, a1);
  v3 = 0xE400000000000000;
  v4 = 1701079400;
  if (v2 != 1)
  {
    v4 = 0x656C67676F74;
    v3 = 0xE600000000000000;
  }
  if (v2)
    v5 = v4;
  else
    v5 = 2003789939;
  if (v2)
    v6 = v3;
  else
    v6 = 0xE400000000000000;
  String.hash(into:)(v8, v5, v6);
  swift_bridgeObjectRelease(v6);
  return Hasher._finalize()();
}

unint64_t sub_1009AE418@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_1009AE9EC(*a1);
  *a2 = result;
  return result;
}

void sub_1009AE444(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE400000000000000;
  v4 = 0xE400000000000000;
  v5 = 1701079400;
  if (v2 != 1)
  {
    v5 = 0x656C67676F74;
    v4 = 0xE600000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 2003789939;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

unint64_t sub_1009AE494()
{
  unint64_t result;

  result = qword_1013FF368;
  if (!qword_1013FF368)
  {
    result = swift_getWitnessTable(&unk_100F1F0DC, &type metadata for CRLVisibilityOperation);
    atomic_store(result, (unint64_t *)&qword_1013FF368);
  }
  return result;
}

unint64_t sub_1009AE4DC()
{
  unint64_t result;

  result = qword_1013FF370;
  if (!qword_1013FF370)
  {
    result = swift_getWitnessTable(&unk_100F1F114, &type metadata for CRLVisibilityOperation);
    atomic_store(result, (unint64_t *)&qword_1013FF370);
  }
  return result;
}

unint64_t sub_1009AE524()
{
  unint64_t result;

  result = qword_1013FF378;
  if (!qword_1013FF378)
  {
    result = swift_getWitnessTable(&unk_100F1F064, &type metadata for CRLVisibilityOperation);
    atomic_store(result, (unint64_t *)&qword_1013FF378);
  }
  return result;
}

unint64_t sub_1009AE56C()
{
  unint64_t result;

  result = qword_1013FF380;
  if (!qword_1013FF380)
  {
    result = swift_getWitnessTable(&unk_100F1F144, &type metadata for CRLVisibilityOperation);
    atomic_store(result, (unint64_t *)&qword_1013FF380);
  }
  return result;
}

unint64_t sub_1009AE5B4()
{
  unint64_t result;

  result = qword_1013FF388;
  if (!qword_1013FF388)
  {
    result = swift_getWitnessTable(&unk_100F1F16C, &type metadata for CRLVisibilityOperation);
    atomic_store(result, (unint64_t *)&qword_1013FF388);
  }
  return result;
}

unint64_t sub_1009AE5FC()
{
  unint64_t result;

  result = qword_1013FF390;
  if (!qword_1013FF390)
  {
    result = swift_getWitnessTable(&unk_100F1F194, &type metadata for CRLVisibilityOperation);
    atomic_store(result, (unint64_t *)&qword_1013FF390);
  }
  return result;
}

unint64_t sub_1009AE644()
{
  unint64_t result;

  result = qword_1013FF398;
  if (!qword_1013FF398)
  {
    result = swift_getWitnessTable(&unk_100F1F1EC, &type metadata for CRLVisibilityOperation);
    atomic_store(result, (unint64_t *)&qword_1013FF398);
  }
  return result;
}

uint64_t sub_1009AE688@<X0>(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t v3;
  uint64_t v4;

  if (qword_1013DD628 != -1)
    swift_once(&qword_1013DD628, sub_1009AD7CC);
  v3 = type metadata accessor for TypeDisplayRepresentation(0, a2);
  v4 = sub_1004F2A1C(v3, (uint64_t)qword_101480128);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v4, v3);
}

uint64_t sub_1009AE6F8(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = sub_100606E68();
  return swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of static AppEnum.defaultResolverSpecification>>, 1);
}

uint64_t sub_1009AE738(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100606E68();
  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_1009AE774()
{
  unint64_t result;

  result = qword_1013FF3A0;
  if (!qword_1013FF3A0)
  {
    result = swift_getWitnessTable(&unk_100F1F22C, &type metadata for CRLVisibilityOperation);
    atomic_store(result, (unint64_t *)&qword_1013FF3A0);
  }
  return result;
}

unint64_t sub_1009AE7BC()
{
  unint64_t result;

  result = qword_1013FF3A8;
  if (!qword_1013FF3A8)
  {
    result = swift_getWitnessTable(&unk_100F1F254, &type metadata for CRLVisibilityOperation);
    atomic_store(result, (unint64_t *)&qword_1013FF3A8);
  }
  return result;
}

unint64_t sub_1009AE804()
{
  unint64_t result;

  result = qword_1013FF3B0;
  if (!qword_1013FF3B0)
  {
    result = swift_getWitnessTable(&unk_100F1F024, &type metadata for CRLVisibilityOperation);
    atomic_store(result, (unint64_t *)&qword_1013FF3B0);
  }
  return result;
}

double sub_1009AE848()
{
  double result;

  if (qword_1013DD630 != -1)
    swift_once(&qword_1013DD630, sub_1009ADA00);
  *(_QWORD *)&result = swift_bridgeObjectRetain(qword_101480140).n128_u64[0];
  return result;
}

uint64_t sub_1009AE888(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1009AE644();
  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_1009AE8C4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013FF3B8;
  if (!qword_1013FF3B8)
  {
    v1 = sub_1004CB6A4(&qword_1013FF3C0);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1013FF3B8);
  }
  return result;
}

void sub_1009AE910(_QWORD *a1@<X8>)
{
  *a1 = &off_1012640F0;
}

uint64_t storeEnumTagSinglePayload for CRLVisibilityOperation(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1009AE96C + 4 * byte_100F1EFF5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1009AE9A0 + 4 * byte_100F1EFF0[v4]))();
}

uint64_t sub_1009AE9A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1009AE9A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1009AE9B0);
  return result;
}

uint64_t sub_1009AE9BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1009AE9C4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1009AE9C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1009AE9D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLVisibilityOperation()
{
  return &type metadata for CRLVisibilityOperation;
}

unint64_t sub_1009AE9EC(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_101265558, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 3)
    return 3;
  else
    return v3;
}

uint64_t destroy for CRLImagePresetData(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a1[12];
  if (v2)
  {
    swift_bridgeObjectRelease(a1[6]);
    swift_bridgeObjectRelease(a1[9]);
    v3 = a1[11];
    swift_bridgeObjectRelease(v2);
    swift_bridgeObjectRelease(v3);
    v4 = a1[18];
    if (v4)
    {
      swift_bridgeObjectRelease(v4);
      swift_bridgeObjectRelease(a1[20]);
    }
    swift_bridgeObjectRelease(a1[23]);
    v5 = a1[25];
    if (v5)
    {
      swift_bridgeObjectRelease(v5);
      swift_bridgeObjectRelease(a1[27]);
    }
    swift_bridgeObjectRelease(a1[28]);
  }
  v6 = a1[39];
  if (v6)
  {
    swift_bridgeObjectRelease(a1[33]);
    swift_bridgeObjectRelease(a1[36]);
    v7 = a1[38];
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(v7);
    swift_bridgeObjectRelease(a1[43]);
    swift_bridgeObjectRelease(a1[44]);
  }
  swift_bridgeObjectRelease(a1[46]);
  return swift_bridgeObjectRelease(a1[47]);
}

uint64_t initializeWithCopy for CRLImagePresetData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  _DWORD *v23;
  _DWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;

  v4 = *(_QWORD *)(a2 + 96);
  if (v4)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
    *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
    *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
    *(_QWORD *)(a1 + 36) = *(_QWORD *)(a2 + 36);
    *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
    v5 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 48) = v5;
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    v6 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 72) = v6;
    *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
    v7 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 88) = v7;
    *(_QWORD *)(a1 + 96) = v4;
    *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
    *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_DWORD *)(a1 + 140) = *(_DWORD *)(a2 + 140);
    v9 = (_OWORD *)(a2 + 144);
    v8 = *(_QWORD *)(a2 + 144);
    swift_bridgeObjectRetain(v5);
    swift_bridgeObjectRetain(v6);
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v4);
    if (v8)
    {
      *(_QWORD *)(a1 + 144) = v8;
      *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
      v10 = *(_QWORD *)(a2 + 160);
      *(_QWORD *)(a1 + 160) = v10;
      swift_bridgeObjectRetain(v8);
      swift_bridgeObjectRetain(v10);
    }
    else
    {
      *(_OWORD *)(a1 + 144) = *v9;
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    }
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
    *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
    v18 = *(_QWORD *)(a2 + 184);
    *(_QWORD *)(a1 + 184) = v18;
    v19 = *(_QWORD *)(a2 + 200);
    swift_bridgeObjectRetain(v18);
    if (v19)
    {
      *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
      *(_QWORD *)(a1 + 200) = v19;
      *(_DWORD *)(a1 + 208) = *(_DWORD *)(a2 + 208);
      *(_BYTE *)(a1 + 212) = *(_BYTE *)(a2 + 212);
      v20 = *(_QWORD *)(a2 + 216);
      *(_QWORD *)(a1 + 216) = v20;
      swift_bridgeObjectRetain(v19);
      swift_bridgeObjectRetain(v20);
    }
    else
    {
      v21 = *(_OWORD *)(a2 + 208);
      *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
      *(_OWORD *)(a1 + 208) = v21;
    }
    v22 = *(_QWORD *)(a2 + 224);
    *(_QWORD *)(a1 + 224) = v22;
    swift_bridgeObjectRetain(v22);
  }
  else
  {
    v11 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v11;
    *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
    v12 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v12;
    v13 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v13;
    v14 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v14;
    v15 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v15;
    v16 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v16;
    v17 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v17;
  }
  v23 = (_DWORD *)(a1 + 232);
  v24 = (_DWORD *)(a2 + 232);
  v25 = *(_QWORD *)(a2 + 312);
  if (v25)
  {
    *v23 = *v24;
    *(_BYTE *)(a1 + 236) = *(_BYTE *)(a2 + 236);
    *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
    *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
    *(_QWORD *)(a1 + 252) = *(_QWORD *)(a2 + 252);
    *(_DWORD *)(a1 + 260) = *(_DWORD *)(a2 + 260);
    v26 = *(_QWORD *)(a2 + 264);
    *(_QWORD *)(a1 + 264) = v26;
    *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
    v27 = *(_QWORD *)(a2 + 288);
    *(_QWORD *)(a1 + 288) = v27;
    *(_DWORD *)(a1 + 296) = *(_DWORD *)(a2 + 296);
    v28 = *(_QWORD *)(a2 + 304);
    *(_QWORD *)(a1 + 304) = v28;
    *(_QWORD *)(a1 + 312) = v25;
    *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
    *(_DWORD *)(a1 + 336) = *(_DWORD *)(a2 + 336);
    v29 = *(_QWORD *)(a2 + 344);
    v30 = *(_QWORD *)(a2 + 352);
    *(_QWORD *)(a1 + 344) = v29;
    *(_QWORD *)(a1 + 352) = v30;
    swift_bridgeObjectRetain(v26);
    swift_bridgeObjectRetain(v27);
    swift_bridgeObjectRetain(v28);
    swift_bridgeObjectRetain(v25);
    swift_bridgeObjectRetain(v29);
    swift_bridgeObjectRetain(v30);
  }
  else
  {
    v31 = *(_OWORD *)(a2 + 312);
    *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
    *(_OWORD *)(a1 + 312) = v31;
    v32 = *(_OWORD *)(a2 + 344);
    *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
    *(_OWORD *)(a1 + 344) = v32;
    v33 = *(_OWORD *)(a2 + 248);
    *(_OWORD *)v23 = *(_OWORD *)v24;
    *(_OWORD *)(a1 + 248) = v33;
    v34 = *(_OWORD *)(a2 + 280);
    *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
    *(_OWORD *)(a1 + 280) = v34;
  }
  *(_DWORD *)(a1 + 360) = *(_DWORD *)(a2 + 360);
  v35 = *(_QWORD *)(a2 + 368);
  v36 = *(_QWORD *)(a2 + 376);
  *(_QWORD *)(a1 + 368) = v35;
  *(_QWORD *)(a1 + 376) = v36;
  swift_bridgeObjectRetain(v35);
  swift_bridgeObjectRetain(v36);
  return a1;
}

uint64_t assignWithCopy for CRLImagePresetData(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 *v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  uint64_t v60;
  __int128 v61;
  uint64_t v62;
  uint64_t v63;
  _OWORD *v64;
  _OWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  __int128 v72;
  uint64_t v73;
  _DWORD *v74;
  int *v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  uint64_t v105;
  uint64_t v106;

  v4 = a2[12];
  if (*(_QWORD *)(a1 + 96))
  {
    if (v4)
    {
      v5 = *a2;
      *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
      *(_QWORD *)a1 = v5;
      LODWORD(v5) = *((_DWORD *)a2 + 4);
      *(_BYTE *)(a1 + 20) = *((_BYTE *)a2 + 20);
      *(_DWORD *)(a1 + 16) = v5;
      v6 = a2[3];
      *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
      *(_QWORD *)(a1 + 24) = v6;
      *(_DWORD *)(a1 + 36) = *((_DWORD *)a2 + 9);
      *(_DWORD *)(a1 + 40) = *((_DWORD *)a2 + 10);
      *(_DWORD *)(a1 + 44) = *((_DWORD *)a2 + 11);
      v7 = a2[6];
      *(_QWORD *)(a1 + 48) = v7;
      swift_bridgeObjectRetain(v7);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 56) = *((_DWORD *)a2 + 14);
      *(_DWORD *)(a1 + 60) = *((_DWORD *)a2 + 15);
      *(_DWORD *)(a1 + 64) = *((_DWORD *)a2 + 16);
      *(_DWORD *)(a1 + 68) = *((_DWORD *)a2 + 17);
      v8 = a2[9];
      *(_QWORD *)(a1 + 72) = v8;
      swift_bridgeObjectRetain(v8);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 80) = *((_DWORD *)a2 + 20);
      v9 = a2[11];
      *(_QWORD *)(a1 + 88) = v9;
      swift_bridgeObjectRetain(v9);
      swift_bridgeObjectRelease();
      v10 = a2[12];
      *(_QWORD *)(a1 + 96) = v10;
      swift_bridgeObjectRetain(v10);
      swift_bridgeObjectRelease();
      v11 = (_OWORD *)(a1 + 144);
      v12 = *(_QWORD *)(a1 + 144);
      *(_DWORD *)(a1 + 104) = *((_DWORD *)a2 + 26);
      v13 = a2[14];
      *(_BYTE *)(a1 + 120) = *((_BYTE *)a2 + 120);
      *(_QWORD *)(a1 + 112) = v13;
      v14 = a2[16];
      *(_BYTE *)(a1 + 136) = *((_BYTE *)a2 + 136);
      *(_QWORD *)(a1 + 128) = v14;
      *(_DWORD *)(a1 + 140) = *((_DWORD *)a2 + 35);
      v16 = a2 + 18;
      v15 = a2[18];
      if (v12)
      {
        if (v15)
        {
          *(_QWORD *)(a1 + 144) = v15;
          swift_bridgeObjectRetain(v15);
          swift_bridgeObjectRelease();
          *(_DWORD *)(a1 + 152) = *((_DWORD *)a2 + 38);
          v17 = a2[20];
          *(_QWORD *)(a1 + 160) = v17;
          swift_bridgeObjectRetain(v17);
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_1008BAD90((_QWORD *)(a1 + 144));
          v52 = a2[20];
          *v11 = *v16;
          *(_QWORD *)(a1 + 160) = v52;
        }
      }
      else if (v15)
      {
        *(_QWORD *)(a1 + 144) = v15;
        *(_DWORD *)(a1 + 152) = *((_DWORD *)a2 + 38);
        v40 = a2[20];
        *(_QWORD *)(a1 + 160) = v40;
        swift_bridgeObjectRetain(v15);
        swift_bridgeObjectRetain(v40);
      }
      else
      {
        v61 = *v16;
        *(_QWORD *)(a1 + 160) = a2[20];
        *v11 = v61;
      }
      v62 = a2[21];
      *(_BYTE *)(a1 + 176) = *((_BYTE *)a2 + 176);
      *(_QWORD *)(a1 + 168) = v62;
      v63 = a2[23];
      *(_QWORD *)(a1 + 184) = v63;
      swift_bridgeObjectRetain(v63);
      swift_bridgeObjectRelease();
      v64 = (_OWORD *)(a1 + 192);
      v65 = a2 + 24;
      v66 = a2[25];
      if (*(_QWORD *)(a1 + 200))
      {
        if (v66)
        {
          *(_QWORD *)(a1 + 192) = a2[24];
          v67 = a2[25];
          *(_QWORD *)(a1 + 200) = v67;
          swift_bridgeObjectRetain(v67);
          swift_bridgeObjectRelease();
          *(_DWORD *)(a1 + 208) = *((_DWORD *)a2 + 52);
          *(_BYTE *)(a1 + 212) = *((_BYTE *)a2 + 212);
          v68 = a2[27];
          *(_QWORD *)(a1 + 216) = v68;
          swift_bridgeObjectRetain(v68);
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_1008BADC0(a1 + 192);
          v71 = *((_OWORD *)a2 + 13);
          *v64 = *v65;
          *(_OWORD *)(a1 + 208) = v71;
        }
      }
      else if (v66)
      {
        *(_QWORD *)(a1 + 192) = a2[24];
        v69 = a2[25];
        *(_QWORD *)(a1 + 200) = v69;
        *(_DWORD *)(a1 + 208) = *((_DWORD *)a2 + 52);
        *(_BYTE *)(a1 + 212) = *((_BYTE *)a2 + 212);
        v70 = a2[27];
        *(_QWORD *)(a1 + 216) = v70;
        swift_bridgeObjectRetain(v69);
        swift_bridgeObjectRetain(v70);
      }
      else
      {
        v72 = *((_OWORD *)a2 + 13);
        *v64 = *v65;
        *(_OWORD *)(a1 + 208) = v72;
      }
      v73 = a2[28];
      *(_QWORD *)(a1 + 224) = v73;
      swift_bridgeObjectRetain(v73);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1009AF5B4((_QWORD *)a1);
      v30 = *((_OWORD *)a2 + 1);
      v29 = *((_OWORD *)a2 + 2);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v30;
      *(_OWORD *)(a1 + 32) = v29;
      v31 = *((_OWORD *)a2 + 6);
      v33 = *((_OWORD *)a2 + 3);
      v32 = *((_OWORD *)a2 + 4);
      *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
      *(_OWORD *)(a1 + 96) = v31;
      *(_OWORD *)(a1 + 48) = v33;
      *(_OWORD *)(a1 + 64) = v32;
      v34 = *((_OWORD *)a2 + 10);
      v36 = *((_OWORD *)a2 + 7);
      v35 = *((_OWORD *)a2 + 8);
      *(_OWORD *)(a1 + 144) = *((_OWORD *)a2 + 9);
      *(_OWORD *)(a1 + 160) = v34;
      *(_OWORD *)(a1 + 112) = v36;
      *(_OWORD *)(a1 + 128) = v35;
      v38 = *((_OWORD *)a2 + 12);
      v37 = *((_OWORD *)a2 + 13);
      v39 = *((_OWORD *)a2 + 11);
      *(_QWORD *)(a1 + 224) = a2[28];
      *(_OWORD *)(a1 + 192) = v38;
      *(_OWORD *)(a1 + 208) = v37;
      *(_OWORD *)(a1 + 176) = v39;
    }
  }
  else if (v4)
  {
    v18 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    *(_QWORD *)a1 = v18;
    LODWORD(v18) = *((_DWORD *)a2 + 4);
    *(_BYTE *)(a1 + 20) = *((_BYTE *)a2 + 20);
    *(_DWORD *)(a1 + 16) = v18;
    v19 = a2[3];
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    *(_QWORD *)(a1 + 24) = v19;
    *(_DWORD *)(a1 + 36) = *((_DWORD *)a2 + 9);
    *(_DWORD *)(a1 + 40) = *((_DWORD *)a2 + 10);
    *(_DWORD *)(a1 + 44) = *((_DWORD *)a2 + 11);
    v20 = a2[6];
    *(_QWORD *)(a1 + 48) = v20;
    *(_DWORD *)(a1 + 56) = *((_DWORD *)a2 + 14);
    *(_DWORD *)(a1 + 60) = *((_DWORD *)a2 + 15);
    *(_DWORD *)(a1 + 64) = *((_DWORD *)a2 + 16);
    *(_DWORD *)(a1 + 68) = *((_DWORD *)a2 + 17);
    v21 = a2[9];
    *(_QWORD *)(a1 + 72) = v21;
    *(_DWORD *)(a1 + 80) = *((_DWORD *)a2 + 20);
    v22 = a2[11];
    *(_QWORD *)(a1 + 88) = v22;
    v23 = a2[12];
    *(_QWORD *)(a1 + 96) = v23;
    *(_DWORD *)(a1 + 104) = *((_DWORD *)a2 + 26);
    v24 = a2[14];
    *(_BYTE *)(a1 + 120) = *((_BYTE *)a2 + 120);
    *(_QWORD *)(a1 + 112) = v24;
    v25 = a2[16];
    *(_BYTE *)(a1 + 136) = *((_BYTE *)a2 + 136);
    *(_QWORD *)(a1 + 128) = v25;
    *(_DWORD *)(a1 + 140) = *((_DWORD *)a2 + 35);
    v27 = (__int128 *)(a2 + 18);
    v26 = a2[18];
    swift_bridgeObjectRetain(v20);
    swift_bridgeObjectRetain(v21);
    swift_bridgeObjectRetain(v22);
    swift_bridgeObjectRetain(v23);
    if (v26)
    {
      *(_QWORD *)(a1 + 144) = v26;
      *(_DWORD *)(a1 + 152) = *((_DWORD *)a2 + 38);
      v28 = a2[20];
      *(_QWORD *)(a1 + 160) = v28;
      swift_bridgeObjectRetain(v26);
      swift_bridgeObjectRetain(v28);
    }
    else
    {
      v53 = *v27;
      *(_QWORD *)(a1 + 160) = a2[20];
      *(_OWORD *)(a1 + 144) = v53;
    }
    v54 = a2[21];
    *(_BYTE *)(a1 + 176) = *((_BYTE *)a2 + 176);
    *(_QWORD *)(a1 + 168) = v54;
    v55 = a2[23];
    *(_QWORD *)(a1 + 184) = v55;
    v56 = a2[25];
    swift_bridgeObjectRetain(v55);
    if (v56)
    {
      *(_QWORD *)(a1 + 192) = a2[24];
      v57 = a2[25];
      *(_QWORD *)(a1 + 200) = v57;
      *(_DWORD *)(a1 + 208) = *((_DWORD *)a2 + 52);
      *(_BYTE *)(a1 + 212) = *((_BYTE *)a2 + 212);
      v58 = a2[27];
      *(_QWORD *)(a1 + 216) = v58;
      swift_bridgeObjectRetain(v57);
      swift_bridgeObjectRetain(v58);
    }
    else
    {
      v59 = *((_OWORD *)a2 + 13);
      *(_OWORD *)(a1 + 192) = *((_OWORD *)a2 + 12);
      *(_OWORD *)(a1 + 208) = v59;
    }
    v60 = a2[28];
    *(_QWORD *)(a1 + 224) = v60;
    swift_bridgeObjectRetain(v60);
  }
  else
  {
    v41 = *(_OWORD *)a2;
    v42 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    *(_OWORD *)(a1 + 32) = v42;
    *(_OWORD *)a1 = v41;
    v43 = *((_OWORD *)a2 + 3);
    v44 = *((_OWORD *)a2 + 4);
    v45 = *((_OWORD *)a2 + 6);
    *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
    *(_OWORD *)(a1 + 96) = v45;
    *(_OWORD *)(a1 + 48) = v43;
    *(_OWORD *)(a1 + 64) = v44;
    v46 = *((_OWORD *)a2 + 7);
    v47 = *((_OWORD *)a2 + 8);
    v48 = *((_OWORD *)a2 + 10);
    *(_OWORD *)(a1 + 144) = *((_OWORD *)a2 + 9);
    *(_OWORD *)(a1 + 160) = v48;
    *(_OWORD *)(a1 + 112) = v46;
    *(_OWORD *)(a1 + 128) = v47;
    v49 = *((_OWORD *)a2 + 11);
    v50 = *((_OWORD *)a2 + 12);
    v51 = *((_OWORD *)a2 + 13);
    *(_QWORD *)(a1 + 224) = a2[28];
    *(_OWORD *)(a1 + 192) = v50;
    *(_OWORD *)(a1 + 208) = v51;
    *(_OWORD *)(a1 + 176) = v49;
  }
  v74 = (_DWORD *)(a1 + 232);
  v75 = (int *)(a2 + 29);
  v76 = a2[39];
  if (*(_QWORD *)(a1 + 312))
  {
    if (v76)
    {
      v77 = *v75;
      *(_BYTE *)(a1 + 236) = *((_BYTE *)a2 + 236);
      *v74 = v77;
      v78 = a2[30];
      *(_BYTE *)(a1 + 248) = *((_BYTE *)a2 + 248);
      *(_QWORD *)(a1 + 240) = v78;
      *(_DWORD *)(a1 + 252) = *((_DWORD *)a2 + 63);
      *(_DWORD *)(a1 + 256) = *((_DWORD *)a2 + 64);
      *(_DWORD *)(a1 + 260) = *((_DWORD *)a2 + 65);
      v79 = a2[33];
      *(_QWORD *)(a1 + 264) = v79;
      swift_bridgeObjectRetain(v79);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 272) = *((_DWORD *)a2 + 68);
      *(_DWORD *)(a1 + 276) = *((_DWORD *)a2 + 69);
      *(_DWORD *)(a1 + 280) = *((_DWORD *)a2 + 70);
      *(_DWORD *)(a1 + 284) = *((_DWORD *)a2 + 71);
      v80 = a2[36];
      *(_QWORD *)(a1 + 288) = v80;
      swift_bridgeObjectRetain(v80);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 296) = *((_DWORD *)a2 + 74);
      v81 = a2[38];
      *(_QWORD *)(a1 + 304) = v81;
      swift_bridgeObjectRetain(v81);
      swift_bridgeObjectRelease();
      v82 = a2[39];
      *(_QWORD *)(a1 + 312) = v82;
      swift_bridgeObjectRetain(v82);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 320) = *((_DWORD *)a2 + 80);
      *(_DWORD *)(a1 + 324) = *((_DWORD *)a2 + 81);
      *(_DWORD *)(a1 + 328) = *((_DWORD *)a2 + 82);
      *(_DWORD *)(a1 + 332) = *((_DWORD *)a2 + 83);
      *(_DWORD *)(a1 + 336) = *((_DWORD *)a2 + 84);
      v83 = a2[43];
      *(_QWORD *)(a1 + 344) = v83;
      swift_bridgeObjectRetain(v83);
      swift_bridgeObjectRelease();
      v84 = a2[44];
      *(_QWORD *)(a1 + 352) = v84;
      swift_bridgeObjectRetain(v84);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1009AF5E8((_QWORD *)(a1 + 232));
      v93 = *(_OWORD *)(a2 + 35);
      v95 = *(_OWORD *)v75;
      v94 = *(_OWORD *)(a2 + 31);
      *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 33);
      *(_OWORD *)(a1 + 280) = v93;
      *(_OWORD *)v74 = v95;
      *(_OWORD *)(a1 + 248) = v94;
      v96 = *(_OWORD *)(a2 + 43);
      v98 = *(_OWORD *)(a2 + 37);
      v97 = *(_OWORD *)(a2 + 39);
      *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 41);
      *(_OWORD *)(a1 + 344) = v96;
      *(_OWORD *)(a1 + 296) = v98;
      *(_OWORD *)(a1 + 312) = v97;
    }
  }
  else if (v76)
  {
    v85 = *v75;
    *(_BYTE *)(a1 + 236) = *((_BYTE *)a2 + 236);
    *v74 = v85;
    v86 = a2[30];
    *(_BYTE *)(a1 + 248) = *((_BYTE *)a2 + 248);
    *(_QWORD *)(a1 + 240) = v86;
    *(_DWORD *)(a1 + 252) = *((_DWORD *)a2 + 63);
    *(_DWORD *)(a1 + 256) = *((_DWORD *)a2 + 64);
    *(_DWORD *)(a1 + 260) = *((_DWORD *)a2 + 65);
    v87 = a2[33];
    *(_QWORD *)(a1 + 264) = v87;
    *(_DWORD *)(a1 + 272) = *((_DWORD *)a2 + 68);
    *(_DWORD *)(a1 + 276) = *((_DWORD *)a2 + 69);
    *(_DWORD *)(a1 + 280) = *((_DWORD *)a2 + 70);
    *(_DWORD *)(a1 + 284) = *((_DWORD *)a2 + 71);
    v88 = a2[36];
    *(_QWORD *)(a1 + 288) = v88;
    *(_DWORD *)(a1 + 296) = *((_DWORD *)a2 + 74);
    v89 = a2[38];
    *(_QWORD *)(a1 + 304) = v89;
    v90 = a2[39];
    *(_QWORD *)(a1 + 312) = v90;
    *(_DWORD *)(a1 + 320) = *((_DWORD *)a2 + 80);
    *(_DWORD *)(a1 + 324) = *((_DWORD *)a2 + 81);
    *(_DWORD *)(a1 + 328) = *((_DWORD *)a2 + 82);
    *(_DWORD *)(a1 + 332) = *((_DWORD *)a2 + 83);
    *(_DWORD *)(a1 + 336) = *((_DWORD *)a2 + 84);
    v91 = a2[43];
    *(_QWORD *)(a1 + 344) = v91;
    v92 = a2[44];
    *(_QWORD *)(a1 + 352) = v92;
    swift_bridgeObjectRetain(v87);
    swift_bridgeObjectRetain(v88);
    swift_bridgeObjectRetain(v89);
    swift_bridgeObjectRetain(v90);
    swift_bridgeObjectRetain(v91);
    swift_bridgeObjectRetain(v92);
  }
  else
  {
    v99 = *(_OWORD *)v75;
    v100 = *(_OWORD *)(a2 + 31);
    v101 = *(_OWORD *)(a2 + 35);
    *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 33);
    *(_OWORD *)(a1 + 280) = v101;
    *(_OWORD *)v74 = v99;
    *(_OWORD *)(a1 + 248) = v100;
    v102 = *(_OWORD *)(a2 + 37);
    v103 = *(_OWORD *)(a2 + 39);
    v104 = *(_OWORD *)(a2 + 43);
    *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 41);
    *(_OWORD *)(a1 + 344) = v104;
    *(_OWORD *)(a1 + 296) = v102;
    *(_OWORD *)(a1 + 312) = v103;
  }
  *(_DWORD *)(a1 + 360) = *((_DWORD *)a2 + 90);
  v105 = a2[46];
  *(_QWORD *)(a1 + 368) = v105;
  swift_bridgeObjectRetain(v105);
  swift_bridgeObjectRelease();
  v106 = a2[47];
  *(_QWORD *)(a1 + 376) = v106;
  swift_bridgeObjectRetain(v106);
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *sub_1009AF5B4(_QWORD *a1)
{
  destroy for CRLStrokeData(a1);
  return a1;
}

_QWORD *sub_1009AF5E8(_QWORD *a1)
{
  destroy for CRLShadowData(a1);
  return a1;
}

void *initializeWithTake for CRLImagePresetData(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x180uLL);
}

uint64_t assignWithTake for CRLImagePresetData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  _OWORD *v15;
  _OWORD *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;

  if (!*(_QWORD *)(a1 + 96))
    goto LABEL_7;
  if (!*(_QWORD *)(a2 + 96))
  {
    sub_1009AF5B4((_QWORD *)a1);
LABEL_7:
    v6 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v6;
    *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
    v7 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v7;
    v8 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v8;
    v9 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v9;
    v10 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v10;
    v11 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v11;
    v12 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v12;
    goto LABEL_16;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 36) = *(_QWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 144);
  v5 = *(_QWORD *)(a1 + 144);
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_DWORD *)(a1 + 140) = *(_DWORD *)(a2 + 140);
  if (v5)
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 144) = v4;
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
    sub_1008BAD90((_QWORD *)(a1 + 144));
  }
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
LABEL_10:
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(a1 + 200))
  {
LABEL_14:
    v14 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v14;
    goto LABEL_15;
  }
  v13 = *(_QWORD *)(a2 + 200);
  if (!v13)
  {
    sub_1008BADC0(a1 + 192);
    goto LABEL_14;
  }
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = v13;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 208) = *(_DWORD *)(a2 + 208);
  *(_BYTE *)(a1 + 212) = *(_BYTE *)(a2 + 212);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  swift_bridgeObjectRelease();
LABEL_15:
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  swift_bridgeObjectRelease();
LABEL_16:
  v15 = (_OWORD *)(a1 + 232);
  v16 = (_OWORD *)(a2 + 232);
  if (!*(_QWORD *)(a1 + 312))
  {
LABEL_20:
    v17 = *(_OWORD *)(a2 + 312);
    *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
    *(_OWORD *)(a1 + 312) = v17;
    v18 = *(_OWORD *)(a2 + 344);
    *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
    *(_OWORD *)(a1 + 344) = v18;
    v19 = *(_OWORD *)(a2 + 248);
    *v15 = *v16;
    *(_OWORD *)(a1 + 248) = v19;
    v20 = *(_OWORD *)(a2 + 280);
    *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
    *(_OWORD *)(a1 + 280) = v20;
    goto LABEL_21;
  }
  if (!*(_QWORD *)(a2 + 312))
  {
    sub_1009AF5E8((_QWORD *)(a1 + 232));
    goto LABEL_20;
  }
  *(_DWORD *)v15 = *(_DWORD *)v16;
  *(_BYTE *)(a1 + 236) = *(_BYTE *)(a2 + 236);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
  *(_QWORD *)(a1 + 252) = *(_QWORD *)(a2 + 252);
  *(_DWORD *)(a1 + 260) = *(_DWORD *)(a2 + 260);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 296) = *(_DWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  *(_DWORD *)(a1 + 336) = *(_DWORD *)(a2 + 336);
  *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  swift_bridgeObjectRelease();
LABEL_21:
  *(_DWORD *)(a1 + 360) = *(_DWORD *)(a2 + 360);
  *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLImagePresetData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 384))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 368);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLImagePresetData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 376) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 384) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 368) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 384) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLImagePresetData()
{
  return &type metadata for CRLImagePresetData;
}

uint64_t sub_1009AFA60()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000010;
  else
    return 0x746144616964656DLL;
}

uint64_t sub_1009AFAA4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1009B04DC(a1, a2);
  *a3 = result;
  return result;
}

void sub_1009AFAC8(_QWORD *a1@<X8>)
{
  *a1 = &off_101263DD8;
}

uint64_t sub_1009AFAD8(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = sub_1009B02E0();
  v5 = sub_1009B0328();
  return static CodingKey<>.intCases.getter(a1, a2, v4, v5);
}

uint64_t sub_1009AFB1C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1009B0328();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1009AFB44(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1009B0328();
  return CodingKey.debugDescription.getter(a1, v2);
}

id sub_1009AFB6C()
{
  const void *v0;
  id v1;
  CGColorSpace *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  id v7;
  _BYTE __dst[376];
  _BYTE v10[128];
  _OWORD v11[5];
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  _OWORD v27[2];
  _OWORD v28[5];
  uint64_t v29;
  _BYTE v30[16];
  float v31;
  uint64_t v32;

  memcpy(__dst, v0, sizeof(__dst));
  sub_1004C4938((uint64_t)&__dst[232], (uint64_t)v10, (uint64_t *)&unk_1013F02D0);
  sub_1004C4938((uint64_t)v10, (uint64_t)&v13, (uint64_t *)&unk_1013F02D0);
  if (sub_1005E3F34((uint64_t)&v13) == 1)
    return 0;
  v25 = v17;
  v26 = v18;
  v27[0] = v19;
  v27[1] = v20;
  v21 = v13;
  v22 = v14;
  v23 = v15;
  v24 = v16;
  sub_1005E40F4();
  v28[2] = v15;
  v28[3] = v16;
  v28[4] = v17;
  v29 = v18;
  v28[0] = v13;
  v28[1] = v14;
  v11[0] = v13;
  v11[1] = v14;
  v11[3] = v16;
  v11[4] = v17;
  v11[2] = v15;
  v12 = v18;
  sub_1005E4130(v28);
  v2 = sub_1006C52C0((uint64_t)v11);
  v3 = *((float *)&v26 + 2);
  v4 = *((float *)&v26 + 3);
  v5 = *(float *)v27;
  v6 = *((float *)v27 + 1);
  sub_1004C4938((uint64_t)v27 + 8, (uint64_t)v30, &qword_1013E6B28);
  sub_1004C4938((uint64_t)v30, (uint64_t)&v31, &qword_1013E6B28);
  if (v32)
    v7 = objc_msgSend(objc_allocWithZone((Class)CRLCurvedShadow), "initWithOffset:angle:radius:curve:opacity:color:enabled:", v2, 1, v4, v3, v5, v31, v6);
  else
    v7 = objc_msgSend(objc_allocWithZone((Class)CRLDropShadow), "initWithAngle:offset:radius:opacity:color:enabled:", v2, 1, v3, v4, v5, v6);
  v1 = v7;

  return v1;
}

uint64_t sub_1009AFD44(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD v16[48];
  char v17;

  v3 = v1;
  v5 = sub_1004B804C(&qword_1013FF448);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_1009B0328();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLImagePresetData.CodingKeys, &type metadata for CRLImagePresetData.CodingKeys, v11, v9, v10);
  memcpy(v16, v3, 0x178uLL);
  v17 = 0;
  v12 = sub_1009B0BB8();
  KeyedEncodingContainer.encode<A>(_:forKey:)(v16, &v17, v5, &type metadata for CRLMediaPresetData, v12);
  if (!v2)
  {
    v16[0] = v3[47];
    v17 = 1;
    v13 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    v14 = sub_1004F31B4();
    KeyedEncodingContainer.encode<A>(_:forKey:)(v16, &v17, v5, v13, v14);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1009AFEA8()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + 376));
}

uint64_t sub_1009AFEB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease(*(_QWORD *)(v1 + 376));
  *(_QWORD *)(v1 + 376) = a1;
  return result;
}

Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *sub_1009AFED8())(CKRecordID recordID, Swift::String recordType)
{
  return SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
}

uint64_t sub_1009AFEE8(uint64_t *__src, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[376];
  _BYTE __dst[376];

  memcpy(v7, __src, sizeof(v7));
  v4 = __src[47];
  memcpy(__dst, a2, sizeof(__dst));
  v5 = a2[47];
  if ((sub_100CEEC7C(v7, __dst) & 1) != 0)
    return sub_100C9E04C(v4, v5);
  else
    return 0;
}

void sub_1009AFF70(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  _BYTE v4[384];

  sub_1009B05D4(a1, v4);
  if (!v2)
    memcpy(a2, v4, 0x180uLL);
}

uint64_t sub_1009AFFC0(_QWORD *a1)
{
  return sub_1009AFD44(a1);
}

uint64_t sub_1009AFFD4(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_10089D170();
  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_1009B0014(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t v7;

  v6 = sub_10089D27C();
  v7 = sub_1009B0BFC();
  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_1009B0070(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_10089D170();
  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_1009B00A8(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_1009B0450();
  return CRValueStruct.init(from:)(a1, a2, v4);
}

uint64_t sub_1009B00F4(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_1009B0450();
  return CRValueStruct.encode(to:)(a1, a2, v4);
}

uint64_t sub_1009B0138(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1009B0450();
  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

unint64_t sub_1009B0174()
{
  unint64_t result;

  result = qword_1013FF3D0;
  if (!qword_1013FF3D0)
  {
    result = swift_getWitnessTable(&unk_100F1F2D4, &type metadata for CRLImagePresetData);
    atomic_store(result, (unint64_t *)&qword_1013FF3D0);
  }
  return result;
}

unint64_t sub_1009B01C0()
{
  unint64_t result;

  result = qword_1013FF3D8;
  if (!qword_1013FF3D8)
  {
    result = swift_getWitnessTable(&unk_100F1F3A4, &type metadata for CRLImagePresetData);
    atomic_store(result, (unint64_t *)&qword_1013FF3D8);
  }
  return result;
}

unint64_t sub_1009B0208()
{
  unint64_t result;

  result = qword_1013FF3E0;
  if (!qword_1013FF3E0)
  {
    result = swift_getWitnessTable(&unk_100F1F37C, &type metadata for CRLImagePresetData);
    atomic_store(result, (unint64_t *)&qword_1013FF3E0);
  }
  return result;
}

unint64_t sub_1009B0250()
{
  unint64_t result;

  result = qword_1013FF3E8;
  if (!qword_1013FF3E8)
  {
    result = swift_getWitnessTable(&unk_100F1F414, &type metadata for CRLImagePresetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FF3E8);
  }
  return result;
}

unint64_t sub_1009B0298()
{
  unint64_t result;

  result = qword_1013FF3F0;
  if (!qword_1013FF3F0)
  {
    result = swift_getWitnessTable(&unk_100F1F524, &type metadata for CRLImagePresetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FF3F0);
  }
  return result;
}

unint64_t sub_1009B02E0()
{
  unint64_t result;

  result = qword_1013FF3F8;
  if (!qword_1013FF3F8)
  {
    result = swift_getWitnessTable(&unk_100F1F4EC, &type metadata for CRLImagePresetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FF3F8);
  }
  return result;
}

unint64_t sub_1009B0328()
{
  unint64_t result;

  result = qword_1013FF400;
  if (!qword_1013FF400)
  {
    result = swift_getWitnessTable(&unk_100F1F44C, &type metadata for CRLImagePresetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FF400);
  }
  return result;
}

unint64_t sub_1009B0370()
{
  unint64_t result;

  result = qword_1013FF408;
  if (!qword_1013FF408)
  {
    result = swift_getWitnessTable(&unk_100F1F4C4, &type metadata for CRLImagePresetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FF408);
  }
  return result;
}

unint64_t sub_1009B03B8()
{
  unint64_t result;

  result = qword_1013FF410;
  if (!qword_1013FF410)
  {
    result = swift_getWitnessTable(&unk_100F1F49C, &type metadata for CRLImagePresetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FF410);
  }
  return result;
}

unint64_t sub_1009B0400()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013FF418;
  if (!qword_1013FF418)
  {
    v1 = sub_1004CB6A4(&qword_1013FF420);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1013FF418);
  }
  return result;
}

unint64_t sub_1009B0450()
{
  unint64_t result;

  result = qword_1013FF428;
  if (!qword_1013FF428)
  {
    result = swift_getWitnessTable(&unk_100F1F3CC, &type metadata for CRLImagePresetData);
    atomic_store(result, (unint64_t *)&qword_1013FF428);
  }
  return result;
}

unint64_t sub_1009B0498()
{
  unint64_t result;

  result = qword_1013FF430;
  if (!qword_1013FF430)
  {
    result = swift_getWitnessTable(&unk_100F1F31C, &type metadata for CRLImagePresetData);
    atomic_store(result, (unint64_t *)&qword_1013FF430);
  }
  return result;
}

uint64_t sub_1009B04DC(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v7;

  if (a1 == 0x746144616964656DLL && a2 == 0xE900000000000061)
  {
    v5 = 0xE900000000000061;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x746144616964656DLL, 0xE900000000000061, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0xD000000000000010 && a2 == 0x8000000100FAF1E0)
  {
    swift_bridgeObjectRelease(0x8000000100FAF1E0);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x8000000100FAF1E0, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

void sub_1009B05D4(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  void *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[48];
  _BYTE v19[376];
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[376];
  _BYTE v23[376];
  _BYTE v24[376];
  char v25;
  char v26;

  v17 = sub_1004B804C(&qword_1013FF438);
  v5 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v7 = (char *)&v18[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1[3];
  v9 = a1[4];
  sub_1004BB5A4(a1, v8);
  v10 = sub_1009B0328();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLImagePresetData.CodingKeys, &type metadata for CRLImagePresetData.CodingKeys, v10, v8, v9);
  if (v2)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = a2;
    v26 = 0;
    v12 = sub_1009B0844();
    v13 = v17;
    KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for CRLMediaPresetData, &v26, v17, &type metadata for CRLMediaPresetData, v12);
    memcpy(v22, v23, sizeof(v22));
    memcpy(v24, v23, sizeof(v24));
    v14 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    v25 = 1;
    sub_1009B0888((uint64_t)v22);
    v15 = sub_1004F3130();
    KeyedDecodingContainer.decode<A>(_:forKey:)(v14, &v25, v13, v14, v15);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v13);
    v16 = v21;
    swift_bridgeObjectRetain(v21);
    swift_bridgeObjectRelease();
    memcpy(v18, v22, 0x178uLL);
    v18[47] = v16;
    sub_1009B0AA0((uint64_t)v18);
    swift_bridgeObjectRelease();
    sub_1009B0994((uint64_t)v22);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
    memcpy(v19, v24, sizeof(v19));
    v20 = v16;
    sub_1007848D0((uint64_t)v19);
    memcpy(v11, v18, 0x180uLL);
  }
}

unint64_t sub_1009B0844()
{
  unint64_t result;

  result = qword_1013FF440;
  if (!qword_1013FF440)
  {
    result = swift_getWitnessTable(&unk_100F32654, &type metadata for CRLMediaPresetData);
    atomic_store(result, (unint64_t *)&qword_1013FF440);
  }
  return result;
}

uint64_t sub_1009B0888(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;

  v2 = *(_QWORD *)(a1 + 248);
  v15 = *(_QWORD *)(a1 + 240);
  v16 = *(_QWORD *)(a1 + 232);
  v3 = *(_QWORD *)(a1 + 256);
  v4 = *(_QWORD *)(a1 + 264);
  v5 = *(_QWORD *)(a1 + 272);
  v6 = *(_QWORD *)(a1 + 280);
  v7 = *(_QWORD *)(a1 + 288);
  v13 = *(_OWORD *)(a1 + 312);
  v14 = *(_OWORD *)(a1 + 296);
  v12 = *(_OWORD *)(a1 + 328);
  v8 = *(_QWORD *)(a1 + 344);
  v9 = *(_QWORD *)(a1 + 352);
  v10 = *(_QWORD *)(a1 + 368);
  sub_1004C3830(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    *(_QWORD *)(a1 + 224));
  sub_1004C396C(v16, v15, v2, v3, v4, v5, v6, v7, v14, *((uint64_t *)&v14 + 1), v13, *((uint64_t *)&v13 + 1), v12, *((uint64_t *)&v12 + 1), v8, v9);
  swift_bridgeObjectRetain(v10);
  return a1;
}

uint64_t sub_1009B0994(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 248);
  v14 = *(_QWORD *)(a1 + 240);
  v15 = *(_QWORD *)(a1 + 232);
  v3 = *(_QWORD *)(a1 + 256);
  v4 = *(_QWORD *)(a1 + 264);
  v5 = *(_QWORD *)(a1 + 272);
  v6 = *(_QWORD *)(a1 + 280);
  v7 = *(_QWORD *)(a1 + 288);
  v12 = *(_OWORD *)(a1 + 312);
  v13 = *(_OWORD *)(a1 + 296);
  v11 = *(_OWORD *)(a1 + 328);
  v8 = *(_QWORD *)(a1 + 344);
  v9 = *(_QWORD *)(a1 + 352);
  sub_1004C35DC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    *(_QWORD *)(a1 + 224));
  sub_1004C3718(v15, v14, v2, v3, v4, v5, v6, v7, v13, *((uint64_t *)&v13 + 1), v12, *((uint64_t *)&v12 + 1), v11, *((uint64_t *)&v11 + 1), v8, v9);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1009B0AA0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = *(_QWORD *)(a1 + 248);
  v15 = *(_QWORD *)(a1 + 240);
  v16 = *(_QWORD *)(a1 + 232);
  v3 = *(_QWORD *)(a1 + 256);
  v4 = *(_QWORD *)(a1 + 264);
  v5 = *(_QWORD *)(a1 + 272);
  v6 = *(_QWORD *)(a1 + 280);
  v7 = *(_QWORD *)(a1 + 288);
  v13 = *(_OWORD *)(a1 + 312);
  v14 = *(_OWORD *)(a1 + 296);
  v12 = *(_OWORD *)(a1 + 328);
  v8 = *(_QWORD *)(a1 + 344);
  v9 = *(_QWORD *)(a1 + 352);
  v10 = *(_QWORD *)(a1 + 368);
  v17 = *(_QWORD *)(a1 + 376);
  sub_1004C3830(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    *(_QWORD *)(a1 + 224));
  sub_1004C396C(v16, v15, v2, v3, v4, v5, v6, v7, v14, *((uint64_t *)&v14 + 1), v13, *((uint64_t *)&v13 + 1), v12, *((uint64_t *)&v12 + 1), v8, v9);
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v17);
  return a1;
}

unint64_t sub_1009B0BB8()
{
  unint64_t result;

  result = qword_1013FF450;
  if (!qword_1013FF450)
  {
    result = swift_getWitnessTable(&unk_100F3262C, &type metadata for CRLMediaPresetData);
    atomic_store(result, (unint64_t *)&qword_1013FF450);
  }
  return result;
}

unint64_t sub_1009B0BFC()
{
  unint64_t result;

  result = qword_1013FF458;
  if (!qword_1013FF458)
  {
    result = swift_getWitnessTable(&unk_100F1F54C, &type metadata for CRLImagePresetData);
    atomic_store(result, (unint64_t *)&qword_1013FF458);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CRLImagePresetData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1009B0C8C + 4 * byte_100F1F2B5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1009B0CC0 + 4 * asc_100F1F2B0[v4]))();
}

uint64_t sub_1009B0CC0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1009B0CC8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1009B0CD0);
  return result;
}

uint64_t sub_1009B0CDC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1009B0CE4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1009B0CE8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1009B0CF0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLImagePresetData.CodingKeys()
{
  return &type metadata for CRLImagePresetData.CodingKeys;
}

unint64_t sub_1009B0D10()
{
  unint64_t result;

  result = qword_1013FF460;
  if (!qword_1013FF460)
  {
    result = swift_getWitnessTable(&unk_100F1F670, &type metadata for CRLImagePresetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013FF460);
  }
  return result;
}

void *sub_1009B0D58(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  id v4;

  v2 = (void *)(*(uint64_t (**)(void))(a2 + 24))();
  v3 = v2;
  if (v2)
  {
    v4 = objc_msgSend(v2, "title");

    if (v4)
    {
      v3 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v4);

    }
    else
    {
      return 0;
    }
  }
  return v3;
}

uint64_t sub_1009B0DD8(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;

  v2 = (void *)(*(uint64_t (**)(void))(a2 + 32))();
  v3 = sub_1009B0E24((uint64_t)v2);

  return v3;
}

uint64_t sub_1009B0E24(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v1 = (_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage);
  v2 = v1[3];
  v3 = v1[4];
  sub_1004BB5A4(v1, v2);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 32))(v2, v3);
  v6 = 0;
  if (v5 >> 60 != 15)
  {
    v7 = v4;
    v8 = v5;
    sub_1004B8930(0, &qword_1013FF470, NSKeyedUnarchiver_ptr);
    v9 = sub_1004B8930(0, (unint64_t *)&unk_1013FA430, LPLinkMetadata_ptr);
    v6 = static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)(v9, v7, v8, v9);
    sub_1004BE2FC(v7, v8);
  }
  return v6;
}

uint64_t static PHPickerViewController.crl_makePicker(delegate:allowMultiSelect:filter:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType(a1);
  return sub_1009B1328(a1, a3, a4, v4, ObjectType, a2);
}

id PHPickerViewController.crl_loadFileRepresentations(for:supportedTypeIdentifiers:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __n128 a5)
{
  void *v5;
  void *v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  Class isa;
  Class v25;
  void *v26;
  uint64_t v27;
  id v28;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  _QWORD aBlock[5];
  uint64_t v35;

  v6 = v5;
  v33 = a3;
  v10 = type metadata accessor for PHPickerResult(0, a5);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = _swiftEmptyArrayStorage;
  if (v14)
  {
    v30 = a2;
    v31 = a4;
    v32 = v5;
    aBlock[0] = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v14);
    v16 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    v17 = *(_QWORD *)(v11 + 72);
    v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 16);
    do
    {
      v19 = v18(v13, v16, v10);
      v20 = PHPickerResult.itemProvider.getter(v19);
      v21 = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v21);
      v22 = *(_QWORD *)(aBlock[0] + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v22);
      v23 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v22, v20);
      specialized ContiguousArray._endMutation()(v23);
      v16 += v17;
      --v14;
    }
    while (v14);
    v15 = (_QWORD *)aBlock[0];
    a4 = v31;
    v6 = v32;
  }
  sub_1004B8930(0, &qword_10140B7E0, NSItemProvider_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v15);
  v25 = Array._bridgeToObjectiveC()().super.isa;
  aBlock[4] = v33;
  v35 = a4;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1009B1290;
  aBlock[3] = &unk_10128E040;
  v26 = _Block_copy(aBlock);
  v27 = v35;
  swift_retain(a4);
  v28 = objc_msgSend(v6, "crl_loadFileRepresentationsForResultItemProviders:supportedTypeIdentifiers:completionHandler:", isa, v25, v26, swift_release(v27).n128_f64[0]);
  _Block_release(v26);

  return v28;
}

uint64_t sub_1009B1290(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v5;
  uint64_t v7;
  void (*v8)(void *, uint64_t, void *);
  uint64_t v9;
  id v10;
  id v11;

  v5 = a3;
  v8 = *(void (**)(void *, uint64_t, void *))(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (a3)
  {
    v9 = type metadata accessor for URL(0);
    v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v9);
  }
  swift_retain(v7);
  v10 = a2;
  v11 = a4;
  v8(a2, v5, a4);
  swift_release(v7);

  return swift_bridgeObjectRelease(v5);
}

uint64_t sub_1009B1328(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;

  v26 = a3;
  v27 = a6;
  v8 = sub_1004B804C(&qword_1013E1B38);
  __chkstk_darwin(v8);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for PHPickerConfiguration.AssetRepresentationMode(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for PHPickerConfiguration(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v19);
  v22 = (char *)&v26 - v21;
  PHPickerConfiguration.init()(v20);
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, enum case for PHPickerConfiguration.AssetRepresentationMode.current(_:), v11);
  PHPickerConfiguration.preferredAssetRepresentationMode.setter(v14);
  if ((a2 & 1) != 0)
    PHPickerConfiguration.selectionLimit.setter(20);
  sub_1009B1508(v26, (uint64_t)v10);
  PHPickerConfiguration.filter.setter(v10);
  sub_1004B8930(0, &qword_1013E1948, PHPickerViewController_ptr);
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v18, v22, v15);
  v23 = PHPickerViewController.init(configuration:)(v18);
  swift_unknownObjectRetain(a1);
  PHPickerViewController.delegate.setter(v24, v27);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v22, v15);
  return v23;
}

double sub_1009B14F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

double sub_1009B1500(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_1009B1508(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013E1B38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id sub_1009B15DC()
{
  return sub_1004C3370(type metadata accessor for CRLShadowView);
}

uint64_t type metadata accessor for CRLShadowView()
{
  return objc_opt_self(_TtC8Freeform13CRLShadowView);
}

id sub_1009B162C(void *a1, uint64_t a2, SEL *a3)
{
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for CRLShadowLayer();
  return objc_msgSendSuper2(&v5, *a3);
}

void sub_1009B1674(void *a1, double a2, double a3, double a4, double a5, uint64_t a6, const char **a7)
{
  const char *v12;
  id v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  id v23;
  id v24;
  objc_super v25;

  v25.receiver = a1;
  v25.super_class = (Class)type metadata accessor for CRLShadowLayer();
  v12 = *a7;
  v13 = v25.receiver;
  objc_msgSendSuper2(&v25, v12, a2, a3, a4, a5);
  objc_msgSend(v13, "bounds", v25.receiver, v25.super_class);
  v15 = v14;
  v17 = v16;
  v19 = v18;
  v21 = v20;
  objc_msgSend(v13, "cornerRadius");
  v23 = objc_msgSend((id)objc_opt_self(CRLBezierPath), "bezierPathWithContinuousCornerRoundedRect:cornerRadius:", v15, v17, v19, v21, v22);
  v24 = objc_msgSend(v23, "CGPath");

  objc_msgSend(v13, "setShadowPath:", v24);
}

id sub_1009B19CC(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  objc_super v6;

  v6.receiver = a1;
  v6.super_class = (Class)a4();
  return objc_msgSendSuper2(&v6, "initWithCoder:", a3);
}

id sub_1009B1A10()
{
  return sub_1004C3370(type metadata accessor for CRLShadowLayer);
}

uint64_t type metadata accessor for CRLShadowLayer()
{
  return objc_opt_self(_TtC8Freeform14CRLShadowLayer);
}

void sub_1009B1CAC(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  objc_class *v20;
  uint64_t v21;
  objc_super v22;
  _BYTE v23[24];

  v3 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v3);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t)&v1[OBJC_IVAR____TtC8Freeform21CRLFileRepPlaceHolder_previewItemURL];
  v7 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform21CRLFileRepPlaceHolder_fileRep] = a1;
  v8 = v1;
  v9 = a1;
  sub_1008C6824();
  v11 = v10;
  v13 = v12;
  v14 = (uint64_t *)&v8[OBJC_IVAR____TtC8Freeform21CRLFileRepPlaceHolder_previewItemTitle];
  *v14 = v10;
  v14[1] = v12;
  v15 = objc_msgSend(v9, "layout");
  v16 = objc_msgSend(v15, "info");

  if (!v16)
    goto LABEL_10;
  v17 = type metadata accessor for CRLFileItem(0);
  if (!swift_dynamicCastClass(v16, v17))
  {
    swift_unknownObjectRelease(v16);
LABEL_10:
    sub_100757E04(&_mh_execute_header, (uint64_t)"item", 4, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFileRep.swift", 81, 2, 78, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"item", 4, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFileRep.swift", 81, 2u, 78, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    __break(1u);
    return;
  }
  if (v13)
  {
    v18 = v13;
  }
  else
  {
    v11 = 1701603686;
    v18 = 0xE400000000000000;
  }
  swift_bridgeObjectRetain(v13);
  v19 = (void *)sub_100D44AF4((uint64_t)v5, v11, v18);
  swift_unknownObjectRelease(v16);
  swift_bridgeObjectRelease();
  swift_beginAccess(v6, v23, 33, 0);
  sub_10054F3F0((uint64_t)v5, v6);
  swift_endAccess(v23);

  v20 = (objc_class *)type metadata accessor for CRLFileRepPlaceHolder(0);
  v22.receiver = v8;
  v22.super_class = v20;
  objc_msgSendSuper2(&v22, "init");
  if (v19)
  {
    objc_msgSend(v19, "setAssociatedLifetimeObject:", v9);

  }
  sub_1005534BC((uint64_t)v5);
}

id sub_1009B1F7C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLFileRepPlaceHolder(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1009B1FFC()
{
  return type metadata accessor for CRLFileRepPlaceHolder(0);
}

uint64_t type metadata accessor for CRLFileRepPlaceHolder(uint64_t a1)
{
  uint64_t result;

  result = qword_1013FF4F8;
  if (!qword_1013FF4F8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLFileRepPlaceHolder);
  return result;
}

void sub_1009B2040(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  sub_10067E7A0(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = &unk_100F1F6F8;
    v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 80);
  }
}

void sub_1009B20C4(double a1)
{
  void *v1;
  NSString v3;
  id v4;
  Class isa;
  id v6;

  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend((id)objc_opt_self(CABasicAnimation), "animationWithKeyPath:", v3);

  objc_msgSend(v4, "setDuration:", a1);
  isa = Double._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v4, "setToValue:", isa);

  objc_msgSend(v4, "setRemovedOnCompletion:", 0);
  objc_msgSend(v4, "setFillMode:", kCAFillModeForwards);
  v6 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "addAnimation:forKey:", v4, v6);

}

void sub_1009B21E4(double a1)
{
  void *v1;
  NSString v3;
  id v4;
  Class isa;
  Class v6;
  NSString v7;
  id v8;

  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend((id)objc_opt_self(CABasicAnimation), "animationWithKeyPath:", v3);

  objc_msgSend(v4, "setDuration:", a1);
  isa = Double._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v4, "setFromValue:", isa);

  objc_msgSend(v4, "setRemovedOnCompletion:", 1);
  objc_msgSend(v1, "opacity");
  v6 = Float._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v4, "setToValue:", v6);

  v7 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "addAnimation:forKey:", v4, v7);

  v8 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "removeAnimationForKey:", v8);

}

void sub_1009B2348(void *a1, void *a2, void *a3)
{
  uint64_t v3;
  id v6;
  id v7;
  uint64_t v8;
  id v9;
  char *v10;
  char *v11;
  id v12;
  id v13;
  char *v14;
  id v15;
  char *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  char *v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  char *v27;
  id v28;
  uint64_t v29;
  char *v30;
  id v31;
  uint64_t v32;

  *(_QWORD *)(v3
            + OBJC_IVAR____TtC8Freeform51CRLiOSMiniFormatterTextEditingAccessoryStateManager_textEditingAccessoryViewController) = 0;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform51CRLiOSMiniFormatterTextEditingAccessoryStateManager_icc) = a1;
  v6 = a1;
  v7 = objc_msgSend(v6, "layerHost");
  if (!v7)
  {
    __break(1u);
    goto LABEL_9;
  }
  v8 = (uint64_t)v7;
  v9 = a3;
  v10 = sub_1005D2FEC(v8, v9);
  objc_allocWithZone((Class)type metadata accessor for CRLiOSMiniFormatterTextEditingAccessoryViewController());
  v11 = v10;
  v12 = v6;
  v13 = v9;
  v14 = v11;
  v15 = a2;
  v16 = sub_100C54098(v12, a2, v13, v14);
  v17 = OBJC_IVAR____TtC8Freeform51CRLiOSMiniFormatterTextEditingAccessoryStateManager_textEditingAccessoryViewController;
  v18 = *(void **)&v14[OBJC_IVAR____TtC8Freeform51CRLiOSMiniFormatterTextEditingAccessoryStateManager_textEditingAccessoryViewController];
  *(_QWORD *)&v14[OBJC_IVAR____TtC8Freeform51CRLiOSMiniFormatterTextEditingAccessoryStateManager_textEditingAccessoryViewController] = v16;

  v19 = *(_QWORD *)&v14[v17];
  if (!v19)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v20 = *(void **)(v19 + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_textBuilder);
  if (!v20)
  {
LABEL_10:
    __break(1u);
    return;
  }
  v21 = v14;
  v22 = v20;
  v23 = sub_1004FEA50();

  v24 = OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_observedObjects;
  v25 = *(_QWORD *)&v21[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_observedObjects];
  *(_QWORD *)&v21[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_observedObjects] = v23;
  v26 = *(void **)&v21[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_changeNotifier];
  if (v26)
  {
    v27 = v21;
    v28 = v26;
    sub_1005C4B64(v25, v28, (uint64_t)v27);

    v29 = *(_QWORD *)&v21[v24];
    v30 = v27;
    v31 = v28;
    swift_bridgeObjectRetain(v29);
    sub_1005C4B80(v32, v31, (uint64_t)v30);

    swift_bridgeObjectRelease(v25);
    swift_bridgeObjectRelease(v29);

  }
  else
  {

    swift_bridgeObjectRelease(v25);
  }

}

double *sub_1009B2544(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  double *v8;

  sub_1009B2C0C();
  v5 = v4;
  v6 = a1;
  v7 = a2;
  v8 = sub_1009B311C(v5, (uint64_t)v6, (uint64_t)v7);
  swift_bridgeObjectRelease();

  return v8;
}

uint64_t sub_1009B25B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD v6[6];

  sub_1009B2C0C();
  v6[2] = a1;
  v6[3] = a2;
  return sub_100767C1C((uint64_t)sub_1009B30B8, (uint64_t)v6, v4);
}

void sub_1009B2608()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  double *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  __int128 v10[2];
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  double *v14;

  sub_1009B2C0C();
  v1 = v0;
  v14 = _swiftEmptyArrayStorage;
  v2 = *(_QWORD *)(v0 + 16);
  if (v2)
  {
    v3 = 0;
    v4 = v0 + 32;
    v5 = _swiftEmptyArrayStorage;
    while (v3 < *(_QWORD *)(v1 + 16))
    {
      sub_1004E90B0(v4, (uint64_t)&v11);
      v6 = v12;
      v7 = v13;
      sub_1004BB5A4(&v11, v12);
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v7 + 32))(v6, v7) & 1) != 0)
      {
        sub_1004DB728(&v11, (uint64_t)v10);
        if ((swift_isUniquelyReferenced_nonNull_native(v5) & 1) == 0)
          sub_100600A50(0, *((_QWORD *)v5 + 2) + 1, 1);
        v5 = v14;
        v9 = *((_QWORD *)v14 + 2);
        v8 = *((_QWORD *)v14 + 3);
        if (v9 >= v8 >> 1)
        {
          sub_100600A50(v8 > 1, v9 + 1, 1);
          v5 = v14;
        }
        *((_QWORD *)v5 + 2) = v9 + 1;
        sub_1004DB728(v10, (uint64_t)&v5[5 * v9 + 4]);
      }
      else
      {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v11);
      }
      ++v3;
      v4 += 40;
      if (v2 == v3)
        goto LABEL_12;
    }
    __break(1u);
  }
  else
  {
LABEL_12:
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1009B2764@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjCClassFromMetadata;
  uint64_t result;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  _QWORD v19[3];
  uint64_t v20;
  uint64_t v21;

  sub_1009B2F28((uint64_t)&v17);
  if (v18)
  {
    sub_1004DB728(&v17, (uint64_t)v19);
    v7 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_editorController);
    v8 = type metadata accessor for CRLWPEditor(0);
    v10 = v8;
    if (v8)
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v8, v9);
    else
      ObjCClassFromMetadata = 0;
    v13 = objc_msgSend(v7, "mostSpecificCurrentEditorOfClass:", ObjCClassFromMetadata);
    v14 = swift_dynamicCastClass(v13, v10);
    swift_unknownObjectRelease(v13);
    if (v14
      && (v15 = v20,
          v16 = v21,
          sub_1004BB5A4(v19, v20),
          ((*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 8))(a1, a2, v15, v16) & 1) == 0))
    {
      *(_QWORD *)(a3 + 32) = 0;
      *(_OWORD *)a3 = 0u;
      *(_OWORD *)(a3 + 16) = 0u;
    }
    else
    {
      sub_1004E90B0((uint64_t)v19, a3);
    }
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v19);
  }
  else
  {
    result = sub_1004CB800((uint64_t)&v17, &qword_1013E6278);
    *(_QWORD *)(a3 + 32) = 0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1009B2898@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  __int128 v9;
  uint64_t v10;
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;

  sub_1009B2F28((uint64_t)&v9);
  if (v10)
  {
    sub_1004DB728(&v9, (uint64_t)v11);
    v6 = v12;
    v7 = v13;
    sub_1004BB5A4(v11, v12);
    if (((*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 16))(a1, a2, v6, v7) & 1) != 0)
    {
      sub_1004E90B0((uint64_t)v11, a3);
    }
    else
    {
      *(_QWORD *)(a3 + 32) = 0;
      *(_OWORD *)a3 = 0u;
      *(_OWORD *)(a3 + 16) = 0u;
    }
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v11);
  }
  else
  {
    result = sub_1004CB800((uint64_t)&v9, &qword_1013E6278);
    *(_QWORD *)(a3 + 32) = 0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

void sub_1009B2964(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  unint64_t v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  char v12;
  id v13;
  uint64_t v14;
  double v15;
  void *v16;
  _BYTE v17[40];

  v2 = *(_QWORD *)(v1
                 + OBJC_IVAR____TtC8Freeform51CRLiOSMiniFormatterTextEditingAccessoryStateManager_textEditingAccessoryViewController);
  if (v2)
  {
    v3 = *(void **)(v2
                  + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedNavigationController);
    if (v3)
    {
      sub_1004E90B0(a1, (uint64_t)v17);
      v4 = v3;
      v5 = sub_1004B804C((uint64_t *)&unk_1013E56E8);
      v6 = sub_10085B6E4();
      if ((swift_dynamicCast(&v16, v17, v5, v6, 6) & 1) != 0)
      {
        v7 = v16;
        v8 = objc_msgSend(v4, "topViewController");
        if (v8
          && (v9 = v8,
              v10 = v7,
              v11 = v9,
              v12 = static NSObject.== infix(_:_:)(v11, v10),
              v11,
              v11,
              v10,
              (v12 & 1) != 0))
        {
          objc_msgSend(v4, "dismissViewControllerAnimated:completion:", 1, 0);

        }
        else
        {
          v13 = objc_msgSend(v4, "viewControllers");
          v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v13, v6);

          LOBYTE(v13) = sub_100C9DB5C((uint64_t)v7, v14);
          *(_QWORD *)&v15 = swift_bridgeObjectRelease().n128_u64[0];
          if ((v13 & 1) != 0)
          {

          }
        }
      }
      else
      {

      }
    }
  }
  else
  {
    __break(1u);
  }
}

id sub_1009B2B14()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  id result;
  id v5;

  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Freeform51CRLiOSMiniFormatterTextEditingAccessoryStateManager_icc), "layerHost");
  if (!v1)
    return 0;
  v2 = v1;
  if ((objc_msgSend(v1, "respondsToSelector:", "asiOSCVC") & 1) == 0)
  {
LABEL_7:
    swift_unknownObjectRelease(v2);
    return 0;
  }
  v3 = objc_msgSend(v2, "asiOSCVC");
  swift_unknownObjectRelease(v2);
  result = objc_msgSend(v3, "delegate");
  if (result)
  {
    v2 = result;
    if ((objc_msgSend(result, "respondsToSelector:", "viewControllerForMiniFormatterForCanvasViewController:") & 1) != 0)
    {
      v5 = objc_msgSend(v2, "viewControllerForMiniFormatterForCanvasViewController:", v3);

      swift_unknownObjectRelease(v2);
      return v5;
    }

    goto LABEL_7;
  }
  __break(1u);
  return result;
}

void sub_1009B2C0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void *v6;
  unint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  id v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t i;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double *v26;
  uint64_t v27;
  _QWORD *v28;
  id v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33[2];
  uint64_t v34;

  v1 = sub_1004B804C((uint64_t *)&unk_1013E5700);
  v2 = swift_allocObject(v1, 72, 7);
  *(_OWORD *)(v2 + 16) = xmmword_100EF5E40;
  v3 = OBJC_IVAR____TtC8Freeform51CRLiOSMiniFormatterTextEditingAccessoryStateManager_textEditingAccessoryViewController;
  v4 = *(char **)(v0
                + OBJC_IVAR____TtC8Freeform51CRLiOSMiniFormatterTextEditingAccessoryStateManager_textEditingAccessoryViewController);
  if (!v4)
  {
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    return;
  }
  v5 = v2;
  *(_QWORD *)(v2 + 56) = type metadata accessor for CRLiOSMiniFormatterTextEditingAccessoryViewController();
  *(_QWORD *)(v5 + 64) = &off_10129D068;
  *(_QWORD *)(v5 + 32) = v4;
  v34 = v5;
  v6 = *(void **)&v4[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedAuxiliaryViewController];
  if (v6)
  {
    v29 = *(id *)&v4[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedAuxiliaryViewController];
    v7 = sub_10085B6E4();
    v8 = v4;
    v9 = v6;
    v10 = sub_1004B804C(&qword_1013E56C8);
    if ((swift_dynamicCast(&v30, &v29, v7, v10, 6) & 1) != 0)
    {
      if (*((_QWORD *)&v31 + 1))
      {
        swift_bridgeObjectRelease();
        sub_1004DB728(&v30, (uint64_t)v33);
        v11 = swift_allocObject(v1, 72, 7);
        *(_OWORD *)(v11 + 16) = xmmword_100EF5E40;
        sub_1004DB728(v33, v11 + 32);
        return;
      }
    }
    else
    {
      v32 = 0;
      v30 = 0u;
      v31 = 0u;
    }
  }
  else
  {
    v32 = 0;
    v30 = 0u;
    v31 = 0u;
    v12 = v4;
  }
  sub_1004CB800((uint64_t)&v30, (uint64_t *)&unk_1013E56D0);
  v13 = *(_QWORD *)(v0 + v3);
  if (!v13)
    goto LABEL_32;
  v14 = *(void **)(v13
                 + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedNavigationController);
  if (!v14)
    return;
  v15 = objc_msgSend(v14, "viewControllers");
  v16 = sub_10085B6E4();
  v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v15, v16);

  *(_QWORD *)&v30 = _swiftEmptyArrayStorage;
  if ((unint64_t)v17 >> 62)
  {
    if (v17 < 0)
      v27 = v17;
    else
      v27 = v17 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v17);
    v18 = _CocoaArrayWrapper.endIndex.getter(v27);
    swift_bridgeObjectRelease();
    if (v18)
      goto LABEL_12;
  }
  else
  {
    v18 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v18)
    {
LABEL_12:
      if (v18 >= 1)
      {
        for (i = 0; i != v18; ++i)
        {
          if ((v17 & 0xC000000000000001) != 0)
            v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v17);
          else
            v20 = *(id *)(v17 + 8 * i + 32);
          v29 = v20;
          v21 = v20;
          v22 = sub_1004B804C(&qword_1013E56C8);
          if ((swift_dynamicCast(v33, &v29, v16, v22, 6) & 1) != 0)
          {
            v23 = _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v33);
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v23);
            v24 = *(_QWORD *)(v30 + 16);
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v24);
            v25 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v24, v21);
            specialized ContiguousArray._endMutation()(v25);
          }
          else
          {

          }
        }
        swift_bridgeObjectRelease();
        v26 = (double *)v30;
        goto LABEL_27;
      }
      __break(1u);
      goto LABEL_31;
    }
  }
  swift_bridgeObjectRelease();
  v26 = _swiftEmptyArrayStorage;
LABEL_27:
  v28 = sub_1005B99AC((uint64_t)v26);
  swift_release(v26);
  if (v28)
    sub_10061FFF4((uint64_t)v28);
}

void sub_1009B2F28(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  id v5;
  unint64_t v6;
  uint64_t v7;
  id v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;

  v3 = *(_QWORD *)(v1
                 + OBJC_IVAR____TtC8Freeform51CRLiOSMiniFormatterTextEditingAccessoryStateManager_textEditingAccessoryViewController);
  if (v3)
  {
    v4 = *(void **)(v3
                  + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedNavigationController);
    if (v4
      && (v5 = objc_msgSend(v4, "visibleViewController")) != 0
      && (v8 = v5,
          v6 = sub_10085B6E4(),
          v7 = sub_1004B804C((uint64_t *)&unk_1013E56E8),
          (swift_dynamicCast(&v9, &v8, v6, v7, 6) & 1) != 0))
    {
      if (*((_QWORD *)&v10 + 1))
      {
        sub_1004DB728(&v9, a1);
        return;
      }
    }
    else
    {
      v11 = 0;
      v9 = 0u;
      v10 = 0u;
    }
    sub_1004CB800((uint64_t)&v9, &qword_1013E6278);
    *(_QWORD *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  else
  {
    __break(1u);
  }
}

void sub_1009B3004()
{
  uint64_t v0;

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC8Freeform51CRLiOSMiniFormatterTextEditingAccessoryStateManager_textEditingAccessoryViewController));

}

id sub_1009B3030()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSMiniFormatterTextEditingAccessoryStateManager();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLiOSMiniFormatterTextEditingAccessoryStateManager()
{
  return objc_opt_self(_TtC8Freeform51CRLiOSMiniFormatterTextEditingAccessoryStateManager);
}

uint64_t sub_1009B30B8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(v1 + 16);
  v2 = *(_QWORD *)(v1 + 24);
  v4 = a1[3];
  v5 = a1[4];
  sub_1004BB5A4(a1, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 16))(v3, v2, v4, v5) & 1;
}

double *sub_1009B311C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double *result;
  uint64_t v5;
  uint64_t v8;
  double *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  __int128 v14[2];
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  double *v18;

  result = _swiftEmptyArrayStorage;
  v18 = _swiftEmptyArrayStorage;
  v5 = *(_QWORD *)(a1 + 16);
  if (v5)
  {
    v8 = a1 + 32;
    v9 = _swiftEmptyArrayStorage;
    do
    {
      sub_1004E90B0(v8, (uint64_t)&v15);
      v10 = v16;
      v11 = v17;
      sub_1004BB5A4(&v15, v16);
      if (((*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 24))(a2, a3, v10, v11) & 1) != 0)
      {
        sub_1004DB728(&v15, (uint64_t)v14);
        if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) == 0)
          sub_100600A50(0, *((_QWORD *)v9 + 2) + 1, 1);
        v9 = v18;
        v13 = *((_QWORD *)v18 + 2);
        v12 = *((_QWORD *)v18 + 3);
        if (v13 >= v12 >> 1)
        {
          sub_100600A50(v12 > 1, v13 + 1, 1);
          v9 = v18;
        }
        *((_QWORD *)v9 + 2) = v13 + 1;
        sub_1004DB728(v14, (uint64_t)&v9[5 * v13 + 4]);
      }
      else
      {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v15);
      }
      v8 += 40;
      --v5;
    }
    while (v5);
    return v18;
  }
  return result;
}

uint64_t sub_1009B3268()
{
  uint64_t v0;
  uint64_t result;

  v0 = type metadata accessor for CRLCloudKitShareNameHelper();
  swift_allocObject(v0, 32, 7);
  result = sub_1009B382C();
  qword_1013FF540 = result;
  return result;
}

uint64_t sub_1009B32A4(char a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  id v20;
  id v21;
  id v22;
  void (*v23)(char *, char *, uint64_t);
  void (*v24)(char *, _QWORD, uint64_t, uint64_t);
  Class isa;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  void *v43;
  double v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  Class v68;
  id v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(char *, _QWORD, uint64_t, uint64_t);
  char *v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;

  v2 = v1;
  v4 = type metadata accessor for CharacterSet(0);
  v94 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v93 = (char *)&v82 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C(&qword_1013F4270);
  v7 = __chkstk_darwin(v6);
  v91 = (char *)&v82 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v10 = (char *)&v82 - v9;
  v11 = type metadata accessor for PersonNameComponents(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v92 = (char *)&v82 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v82 - v16;
  __chkstk_darwin(v15);
  v19 = (char *)&v82 - v18;
  v20 = objc_msgSend(objc_allocWithZone((Class)NSPersonNameComponentsFormatter), "init");
  objc_msgSend(v20, "setStyle:", a1 & 1);
  v21 = objc_msgSend(v2, "userIdentity");
  v22 = objc_msgSend(v21, "nameComponents");

  v95 = v4;
  if (v22)
  {
    static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)(v22);

    v23 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v23(v10, v17, v11);
    v24 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56);
    v24(v10, 0, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
    {
      v90 = v24;
      v23(v19, v10, v11);
      isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
      v26 = v20;
      v27 = objc_msgSend(v20, "stringFromPersonNameComponents:", isa);

      v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
      v30 = v29;

      v96 = v28;
      v97 = v30;
      v31 = v93;
      static CharacterSet.whitespaces.getter(v32);
      v33 = sub_1004D292C();
      v34 = StringProtocol.trimmingCharacters(in:)(v31, &type metadata for String, v33);
      v36 = v35;
      (*(void (**)(char *, uint64_t))(v94 + 8))(v31, v95);
      v37 = swift_bridgeObjectRelease(v97);
      if ((v36 & 0x2000000000000000) != 0)
        v38 = HIBYTE(v36) & 0xF;
      else
        v38 = v34 & 0xFFFFFFFFFFFFLL;
      (*(void (**)(char *, uint64_t, __n128))(v12 + 8))(v19, v11, v37);
      if (v38)
      {

        return v34;
      }
      swift_bridgeObjectRelease(v36);
      v24 = v90;
      goto LABEL_10;
    }
  }
  else
  {
    v24 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56);
    v24(v10, 1, 1, v11);
  }
  v26 = v20;
  sub_1009B5DD0((uint64_t)v10);
LABEL_10:
  v39 = (uint64_t)sub_1009B4458();
  if (!v40)
    goto LABEL_21;
  v41 = v40;
  v42 = HIBYTE(v40) & 0xF;
  if ((v40 & 0x2000000000000000) == 0)
    v42 = v39 & 0xFFFFFFFFFFFFLL;
  if (!v42)
  {
    swift_bridgeObjectRelease(v40);
    goto LABEL_21;
  }
  v43 = sub_1009B555C(v39, v40);
  *(_QWORD *)&v44 = swift_bridgeObjectRelease(v41).n128_u64[0];
  if (!v43)
  {
LABEL_21:

    return 0;
  }
  v45 = objc_msgSend(v43, "namePrefix", v44);
  v46 = static String._unconditionallyBridgeFromObjectiveC(_:)(v45);
  v89 = v47;
  v90 = (void (*)(char *, _QWORD, uint64_t, uint64_t))v46;

  v48 = objc_msgSend(v43, "givenName");
  v49 = static String._unconditionallyBridgeFromObjectiveC(_:)(v48);
  v87 = v50;
  v88 = v49;

  v51 = objc_msgSend(v43, "middleName");
  v52 = static String._unconditionallyBridgeFromObjectiveC(_:)(v51);
  v85 = v53;
  v86 = v52;

  v54 = objc_msgSend(v43, "familyName");
  v84 = v26;
  v55 = v54;
  v56 = static String._unconditionallyBridgeFromObjectiveC(_:)(v54);
  v82 = v57;
  v83 = v56;

  v58 = objc_msgSend(v43, "nameSuffix");
  v59 = static String._unconditionallyBridgeFromObjectiveC(_:)(v58);
  v61 = v60;

  v62 = objc_msgSend(v43, "nickname");
  v63 = static String._unconditionallyBridgeFromObjectiveC(_:)(v62);
  v65 = v64;

  v66 = v91;
  v24(v91, 1, 1, v11);
  v81 = v66;
  v67 = v92;
  PersonNameComponents.init(namePrefix:givenName:middleName:familyName:nameSuffix:nickname:phoneticRepresentation:)(v90, v89, v88, v87, v86, v85, v83, v82, v59, v61, v63, v65, v81);
  v68 = PersonNameComponents._bridgeToObjectiveC()().super.isa;
  v69 = v84;
  v70 = objc_msgSend(v84, "stringFromPersonNameComponents:", v68);

  v71 = static String._unconditionallyBridgeFromObjectiveC(_:)(v70);
  v73 = v72;

  v96 = v71;
  v97 = v73;
  v74 = v93;
  static CharacterSet.whitespaces.getter(v75);
  v76 = sub_1004D292C();
  v34 = StringProtocol.trimmingCharacters(in:)(v74, &type metadata for String, v76);
  v78 = v77;
  (*(void (**)(char *, uint64_t))(v94 + 8))(v74, v95);
  swift_bridgeObjectRelease(v97);

  if ((v78 & 0x2000000000000000) != 0)
    v79 = HIBYTE(v78) & 0xF;
  else
    v79 = v34 & 0xFFFFFFFFFFFFLL;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v67, v11);
  if (!v79)
  {
    swift_bridgeObjectRelease(v78);
    return 0;
  }
  return v34;
}

uint64_t sub_1009B382C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[5];
  uint64_t v24;

  v22 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v1 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v0 + 16) = sub_1008D5700((uint64_t)_swiftEmptyArrayStorage);
  sub_1004B8930(0, (unint64_t *)&qword_1013DE090, OS_dispatch_queue_ptr);
  static DispatchQoS.unspecified.getter(v10);
  aBlock[0] = _swiftEmptyArrayStorage;
  v11 = sub_1004B7878((unint64_t *)&qword_1013E3A70, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v12 = sub_1004B804C(&qword_1013FF6B0);
  v13 = sub_1005FC154((unint64_t *)&qword_1013E3A78, &qword_1013FF6B0);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v12, v13, v4, v11);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v22);
  v14 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000025, 0x8000000100FE76D0, v9, v6, v3, 0);
  v15 = v21;
  *(_QWORD *)(v21 + 24) = v14;
  v16 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v17 = swift_allocObject(&unk_10128E1A0, 24, 7);
  swift_weakInit(v17 + 16, v15);
  aBlock[4] = sub_1009B5EA4;
  v24 = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_100568280;
  aBlock[3] = &unk_10128E1B8;
  v18 = _Block_copy(aBlock);
  v19 = objc_msgSend(v16, "addObserverForName:object:queue:usingBlock:", CNContactStoreDidChangeNotification, 0, 0, v18, swift_release(v24).n128_f64[0]);
  _Block_release(v18);
  swift_unknownObjectRelease(v19);

  return v15;
}

double sub_1009B3AF0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t Strong;
  double result;
  uint64_t v13;
  id v14;
  void *v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD aBlock[5];
  uint64_t v26;
  _BYTE v27[24];

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess(a2 + 16, v27, 0, 0);
  Strong = swift_weakLoadStrong(a2 + 16);
  if (Strong)
  {
    v13 = Strong;
    v14 = *(id *)(Strong + 24);
    swift_release(v13);
    aBlock[4] = sub_1009B5EC4;
    v26 = a2;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(_QWORD *)"";
    aBlock[2] = sub_1005D2FC0;
    aBlock[3] = &unk_10128E1E0;
    v15 = _Block_copy(aBlock);
    v16 = swift_retain(a2);
    static DispatchQoS.unspecified.getter(v16);
    v24 = _swiftEmptyArrayStorage;
    v17 = sub_1004B7878((unint64_t *)&qword_1013E1D20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v23 = v7;
    v18 = v4;
    v19 = v17;
    v20 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
    v21 = sub_1005FC154((unint64_t *)&qword_1013E1D30, (uint64_t *)&unk_1013DFBF0);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v24, v20, v21, v3, v19);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v6, v15);
    _Block_release(v15);

    (*(void (**)(char *, uint64_t))(v18 + 8))(v6, v3);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v23);
    *(_QWORD *)&result = swift_release(v26).n128_u64[0];
  }
  return result;
}

double sub_1009B3CF8(uint64_t a1)
{
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[24];
  _BYTE v9[24];
  _BYTE v10[24];

  v1 = a1 + 16;
  if (qword_1013DD8C8 != -1)
    swift_once(&qword_1013DD8C8, sub_100A069BC);
  swift_beginAccess(&static OS_os_log.shareState, v10, 0, 0);
  v2 = (id)static OS_os_log.shareState;
  v3 = static os_log_type_t.default.getter();
  sub_100A06EBC((uint64_t)v2, &_mh_execute_header, v3, "Received CNContactStoreDidChange notification, clearing cache", 61, 2, (uint64_t)_swiftEmptyArrayStorage);

  swift_beginAccess(v1, v9, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v6 = Strong;
    swift_beginAccess(Strong + 16, v8, 1, 0);
    v7 = *(_QWORD *)(v6 + 16);
    *(_QWORD *)(v6 + 16) = &_swiftEmptyDictionarySingleton;
    swift_release(v6);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v7).n128_u64[0];
  }
  return result;
}

void sub_1009B3DF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v6;
  _QWORD *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  _QWORD aBlock[5];
  uint64_t v12;
  uint64_t v13;

  v3 = v2;
  v13 = 1;
  v6 = *(NSObject **)(v2 + 24);
  v7 = (_QWORD *)swift_allocObject(&unk_10128E268, 48, 7);
  v7[2] = &v13;
  v7[3] = v3;
  v7[4] = a1;
  v7[5] = a2;
  v8 = swift_allocObject(&unk_10128E290, 32, 7);
  *(_QWORD *)(v8 + 16) = sub_1009B69C8;
  *(_QWORD *)(v8 + 24) = v7;
  aBlock[4] = sub_1005B71BC;
  v12 = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_100618D24;
  aBlock[3] = &unk_10128E2A8;
  v9 = _Block_copy(aBlock);
  v10 = v12;
  swift_retain(v3);
  swift_bridgeObjectRetain(a2);
  swift_retain(v8);
  swift_release(v10);
  dispatch_sync(v6, v9);
  _Block_release(v9);
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation(v8, "", 91, 44, 25, 1);
  swift_release(v8);
  if ((v6 & 1) != 0)
    __break(1u);
  else
    swift_release(v7);
}

void sub_1009B3F50(void **a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  id v12;
  void *v13;
  _BYTE v14[24];

  swift_beginAccess(a2 + 16, v14, 0, 0);
  v8 = *(_QWORD *)(a2 + 16);
  if (*(_QWORD *)(v8 + 16))
  {
    swift_bridgeObjectRetain(a4);
    swift_bridgeObjectRetain(v8);
    v9 = sub_100842E98(a3, a4);
    if ((v10 & 1) != 0)
    {
      v11 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v9);
      v12 = (id)v11;
    }
    else
    {
      v11 = 1;
    }
    swift_bridgeObjectRelease(a4);
    swift_bridgeObjectRelease(v8);
  }
  else
  {
    v11 = 1;
  }
  v13 = *a1;
  *a1 = (void *)v11;
  sub_1004CB49C(v13);
}

double sub_1009B4000(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  void *v15;
  id v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double result;
  _QWORD v22[2];
  uint64_t v23;
  _QWORD *v24;
  _QWORD aBlock[5];
  _QWORD *v26;

  v7 = type metadata accessor for DispatchWorkItemFlags(0);
  v23 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22[1] = *(_QWORD *)(v3 + 24);
  v14 = (_QWORD *)swift_allocObject(&unk_10128E218, 48, 7);
  v14[2] = v3;
  v14[3] = a2;
  v14[4] = a3;
  v14[5] = a1;
  aBlock[4] = sub_1009B6990;
  v26 = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1005D2FC0;
  aBlock[3] = &unk_10128E230;
  v15 = _Block_copy(aBlock);
  v16 = a1;
  swift_retain(v3);
  v17 = swift_bridgeObjectRetain(a3);
  static DispatchQoS.unspecified.getter(v17);
  v24 = _swiftEmptyArrayStorage;
  v18 = sub_1004B7878((unint64_t *)&qword_1013E1D20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v19 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
  v20 = sub_1005FC154((unint64_t *)&qword_1013E1D30, (uint64_t *)&unk_1013DFBF0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v24, v19, v20, v7, v18);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v9, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v7);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  *(_QWORD *)&result = swift_release(v26).n128_u64[0];
  return result;
}

uint64_t sub_1009B4208(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v8;
  uint64_t v9;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v13;
  _BYTE v14[24];

  swift_beginAccess(a1 + 16, v14, 33, 0);
  v8 = a4;
  v9 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain(a3);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v9);
  v13 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = 0x8000000000000000;
  sub_1008298A0((uint64_t)a4, a2, a3, isUniquelyReferenced_nonNull_native);
  v11 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v13;
  swift_bridgeObjectRelease(a3);
  swift_bridgeObjectRelease(v11);
  return swift_endAccess(v14);
}

uint64_t sub_1009B42C0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for CRLCloudKitShareNameHelper()
{
  return objc_opt_self(_TtC8FreeformP33_4A8EC9F3667525C64F457F19778A3AC626CRLCloudKitShareNameHelper);
}

void **initializeBufferWithCopyOfBuffer for CRLCloudKitShareNameHelperCacheEntry(void **a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  *a1 = *a2;
  v4 = v3;
  return a1;
}

void **assignWithCopy for CRLCloudKitShareNameHelperCacheEntry(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *a1;
  v4 = *a2;
  *a1 = *a2;
  v5 = v4;

  return a1;
}

void **assignWithTake for CRLCloudKitShareNameHelperCacheEntry(void **a1, void **a2)
{
  void *v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for CRLCloudKitShareNameHelperCacheEntry(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLCloudKitShareNameHelperCacheEntry(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLCloudKitShareNameHelperCacheEntry()
{
  return &type metadata for CRLCloudKitShareNameHelperCacheEntry;
}

id sub_1009B4458()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v1 = type metadata accessor for CharacterSet(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend(v0, "userIdentity");
  v6 = objc_msgSend(v5, "lookupInfo");

  if (v6)
  {
    v7 = objc_msgSend(v6, "emailAddress");

    if (v7)
    {
      v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
      v10 = v9;

      v14 = v8;
      v15 = v10;
      static CharacterSet.whitespaces.getter(v11);
      v12 = sub_1004D292C();
      v6 = (id)StringProtocol.trimmingCharacters(in:)(v4, &type metadata for String, v12);
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      swift_bridgeObjectRelease(v15);
    }
    else
    {
      return 0;
    }
  }
  return v6;
}

uint64_t sub_1009B4594(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v5 = a1[3];
  v6 = sub_1004BB5A4(a1, v5);
  v7 = _bridgeAnythingToObjectiveC<A>(_:)(v6, v5);
  v8 = a2[3];
  v9 = sub_1004BB5A4(a2, v8);
  v10 = _bridgeAnythingToObjectiveC<A>(_:)(v9, v8);
  v11 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a3 + 16))(a3, v7, v10);
  swift_unknownObjectRelease(v7);
  swift_unknownObjectRelease(v10);
  return v11;
}

uint64_t sub_1009B461C(void *a1, void *a2, char a3, uint64_t a4, uint64_t (*a5)(_QWORD *, _QWORD *))
{
  id v8;
  id v9;
  uint64_t v10;
  _QWORD v12[3];
  uint64_t v13;
  _QWORD v14[3];
  uint64_t v15;

  if ((a3 & 1) != 0)
  {
    v15 = sub_1004B8930(0, (unint64_t *)&qword_1013E8EB0, CNContact_ptr);
    v13 = v15;
    v14[0] = a2;
    v12[0] = a1;
  }
  else
  {
    v15 = sub_1004B8930(0, (unint64_t *)&qword_1013E8EB0, CNContact_ptr);
    v13 = v15;
    v14[0] = a1;
    v12[0] = a2;
  }
  v8 = a1;
  v9 = a2;
  v10 = a5(v14, v12);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v12);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v14);
  return v10;
}

uint64_t sub_1009B46C8(void **a1, void **a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1009B461C(*a1, *a2, *(_BYTE *)v4, a4, *(uint64_t (**)(_QWORD *, _QWORD *))(v4 + 16));
}

uint64_t sub_1009B46DC()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t sub_1009B46E4(uint64_t result)
{
  _BYTE *v1;

  *v1 = result & 1;
  return result;
}

Swift::Int sub_1009B46F0()
{
  unsigned __int8 *v0;
  uint64_t v1;
  Swift::UInt v2;
  _QWORD v4[9];

  v1 = *v0;
  v2 = *((_QWORD *)v0 + 1);
  Hasher.init(_seed:)(v4, 0);
  Hasher._combine(_:)(v2);
  SortOrder.hash(into:)(v4, v1);
  return Hasher._finalize()();
}

uint64_t sub_1009B474C(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v3;

  v3 = *v1;
  Hasher._combine(_:)(*((_QWORD *)v1 + 1));
  return SortOrder.hash(into:)(a1, v3);
}

Swift::Int sub_1009B4788(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  Swift::UInt v3;
  _QWORD v5[9];

  v2 = *v1;
  v3 = *((_QWORD *)v1 + 1);
  Hasher.init(_seed:)(v5, a1);
  Hasher._combine(_:)(v3);
  SortOrder.hash(into:)(v5, v2);
  return Hasher._finalize()();
}

uint64_t sub_1009B47E0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*((_QWORD *)a1 + 1) == *((_QWORD *)a2 + 1))
    return static SortOrder.== infix(_:_:)(*a1, *a2);
  else
    return 0;
}

void sub_1009B4804(uint64_t a1)
{
  uint64_t *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t object;
  int64_t v5;
  int64_t v6;
  uint64_t *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  NSString v12;
  NSString v13;
  uint64_t *v14;
  uint64_t countAndFlagsBits;
  uint64_t v16;
  uint64_t v17;
  uint64_t i;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  Swift::String v24;
  Swift::String v25;
  Swift::String v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  Swift::String v51;
  Swift::String v52;
  Swift::String v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  id v57;
  Swift::String v58;
  Swift::String v59;
  Swift::String v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  void *v68;
  uint64_t v69;
  int64_t v70;
  id v71;
  Swift::String v72;
  Swift::String v73;
  Swift::String v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  NSString v80;
  NSString v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  id v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  id v95;
  NSString v96;
  NSString v97;
  uint64_t v98;
  id v99;
  void *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  id v104;
  int64_t v105;
  void *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  Swift::String v117;
  Swift::String v118;
  Swift::String v119;
  Swift::String v120;

  object = a1;
  sub_1009B5AEC(a1);
  v6 = v5;
  v7 = (uint64_t *)objc_msgSend(v1, "currentUserParticipant");
  if (v7)
  {
    v1 = v7;
    v8 = objc_msgSend(v7, "role");

    if (v8 == (id)1)
    {
      v9 = (unint64_t)v6 >> 62;
      if ((unint64_t)v6 >> 62)
      {
        if (v6 < 0)
          v94 = v6;
        else
          v94 = v6 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v6);
        v10 = _CocoaArrayWrapper.endIndex.getter(v94);
        swift_bridgeObjectRelease(v6);
        if (v10 != 2)
          goto LABEL_5;
      }
      else
      {
        v10 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v10 != 2)
        {
LABEL_5:
          v3 = v10 - 1;
          if (v10 == 1)
          {
            v11 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
            v12 = String._bridgeToObjectiveC()();
            v13 = String._bridgeToObjectiveC()();
            v14 = (uint64_t *)objc_msgSend(v11, "localizedStringForKey:value:table:", v12, v13, 0);

            countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
            object = v16;

            if (v9)
            {
              if (v6 < 0)
                v36 = v6;
              else
                v36 = v6 & 0xFFFFFFFFFFFFFF8;
              swift_bridgeObjectRetain(v6);
              v37 = _CocoaArrayWrapper.endIndex.getter(v36);
              swift_bridgeObjectRelease(v6);
              if (!v37)
                goto LABEL_99;
            }
            else if (!*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              goto LABEL_99;
            }
            if ((v6 & 0xC000000000000001) == 0)
            {
              if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
              {
                v38 = *(id *)(v6 + 32);
                goto LABEL_35;
              }
              __break(1u);
              goto LABEL_119;
            }
LABEL_117:
            v38 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v6);
LABEL_35:
            v39 = v38;
            swift_bridgeObjectRelease(v6);
            v40 = sub_1009B32A4(0);
            v42 = v41;

            if (v42)
            {
              v43 = sub_1004B804C((uint64_t *)&unk_1013E0180);
              v44 = swift_allocObject(v43, 72, 7);
              *(_OWORD *)(v44 + 16) = xmmword_100EF5E40;
              *(_QWORD *)(v44 + 56) = &type metadata for String;
              *(_QWORD *)(v44 + 64) = sub_1004CFC2C();
              *(_QWORD *)(v44 + 32) = v40;
              *(_QWORD *)(v44 + 40) = v42;
              v45 = countAndFlagsBits;
              v46 = object;
              v47 = v44;
LABEL_104:
              String.init(format:_:)(v45, v46, v47);
              goto LABEL_105;
            }
            goto LABEL_114;
          }
          if (v10 < 3)
          {
            swift_bridgeObjectRelease(v6);
            if (!((unint64_t)object >> 62))
            {
              v48 = *(_QWORD *)((object & 0xFFFFFFFFFFFFF8) + 0x10);
              v49 = v48 - 1;
              if (!__OFSUB__(v48, 1))
              {
LABEL_39:
                v50 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
                v51._countAndFlagsBits = 0xD000000000000015;
                v118._object = (void *)0x8000000100FE7540;
                v51._object = (void *)0x8000000100FE7660;
                v52._countAndFlagsBits = 0;
                v52._object = (void *)0xE000000000000000;
                v118._countAndFlagsBits = 0xD000000000000062;
                v53 = NSLocalizedString(_:tableName:bundle:value:comment:)(v51, (Swift::String_optional)0, (NSBundle)v50, v52, v118);
                object = (uint64_t)v53._object;

                v54 = sub_1004B804C((uint64_t *)&unk_1013E0180);
                v55 = swift_allocObject(v54, 72, 7);
                *(_OWORD *)(v55 + 16) = xmmword_100EF5E40;
                *(_QWORD *)(v55 + 56) = &type metadata for Int;
                *(_QWORD *)(v55 + 64) = &protocol witness table for Int;
                *(_QWORD *)(v55 + 32) = v49;
                static String.localizedStringWithFormat(_:_:)(v53._countAndFlagsBits, v53._object, v55);
                v35 = v55;
                goto LABEL_40;
              }
              goto LABEL_128;
            }
LABEL_123:
            if (object < 0)
              v114 = object;
            else
              v114 = object & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(object);
            v115 = _CocoaArrayWrapper.endIndex.getter(v114);
            swift_bridgeObjectRelease(object);
            v49 = v115 - 1;
            if (!__OFSUB__(v115, 1))
              goto LABEL_39;
LABEL_128:
            __break(1u);
            goto LABEL_129;
          }
          v23 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
          v24._countAndFlagsBits = 0xD000000000000014;
          v117._countAndFlagsBits = 0xD0000000000000A0;
          v117._object = (void *)0x8000000100FE75B0;
          v24._object = (void *)0x8000000100FE7680;
          v25._countAndFlagsBits = 0;
          v25._object = (void *)0xE000000000000000;
          v26 = NSLocalizedString(_:tableName:bundle:value:comment:)(v24, (Swift::String_optional)0, (NSBundle)v23, v25, v117);
          countAndFlagsBits = v26._countAndFlagsBits;
          object = (uint64_t)v26._object;

          if ((v6 & 0xC000000000000001) == 0)
          {
            if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              v27 = *(id *)(v6 + 32);
              goto LABEL_26;
            }
            __break(1u);
            goto LABEL_123;
          }
LABEL_121:
          v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v6);
LABEL_26:
          v28 = v27;
          v29 = sub_1009B32A4(1);
          v31 = v30;

          if (v31)
          {
            swift_bridgeObjectRelease(v6);
            v32 = sub_1004B804C((uint64_t *)&unk_1013E0180);
            v33 = swift_allocObject(v32, 112, 7);
            *(_OWORD *)(v33 + 16) = xmmword_100EF5A10;
            *(_QWORD *)(v33 + 56) = &type metadata for String;
            v34 = sub_1004CFC2C();
            *(_QWORD *)(v33 + 32) = v29;
            *(_QWORD *)(v33 + 40) = v31;
            *(_QWORD *)(v33 + 96) = &type metadata for Int;
            *(_QWORD *)(v33 + 104) = &protocol witness table for Int;
            *(_QWORD *)(v33 + 64) = v34;
            *(_QWORD *)(v33 + 72) = v3;
            static String.localizedStringWithFormat(_:_:)(countAndFlagsBits, object, v33);
            v35 = v33;
LABEL_40:
            swift_bridgeObjectRelease(v35);
LABEL_105:
            swift_bridgeObjectRelease(object);
            return;
          }
LABEL_99:
          swift_bridgeObjectRelease(object);
          v105 = v6;
LABEL_115:
          swift_bridgeObjectRelease(v105);
          return;
        }
      }
      v95 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v96 = String._bridgeToObjectiveC()();
      v97 = String._bridgeToObjectiveC()();
      v14 = (uint64_t *)objc_msgSend(v95, "localizedStringForKey:value:table:", v96, v97, 0);

      countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
      object = v98;

      v2 = v6 & 0xC000000000000001;
      if ((v6 & 0xC000000000000001) != 0)
      {
        v99 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v6);
LABEL_96:
        v100 = v99;
        v101 = sub_1009B32A4(1);
        v103 = v102;

        if (!v103)
          goto LABEL_99;
        if (v2)
        {
          v104 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(1, v6);
        }
        else
        {
          if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10) < 2uLL)
          {
LABEL_129:
            __break(1u);
            return;
          }
          v104 = *(id *)(v6 + 40);
        }
        v106 = v104;
        swift_bridgeObjectRelease(v6);
        v107 = sub_1009B32A4(1);
        v109 = v108;

        if (v109)
        {
          v110 = sub_1004B804C((uint64_t *)&unk_1013E0180);
          v111 = swift_allocObject(v110, 112, 7);
          *(_OWORD *)(v111 + 16) = xmmword_100EF5A10;
          *(_QWORD *)(v111 + 56) = &type metadata for String;
          v112 = sub_1004CFC2C();
          *(_QWORD *)(v111 + 32) = v101;
          *(_QWORD *)(v111 + 40) = v103;
          *(_QWORD *)(v111 + 96) = &type metadata for String;
          *(_QWORD *)(v111 + 104) = v112;
          *(_QWORD *)(v111 + 64) = v112;
          *(_QWORD *)(v111 + 72) = v107;
          *(_QWORD *)(v111 + 80) = v109;
          v45 = countAndFlagsBits;
          v46 = object;
          v47 = v111;
          goto LABEL_104;
        }
        swift_bridgeObjectRelease(v103);
LABEL_114:
        v105 = object;
        goto LABEL_115;
      }
      if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v99 = *(id *)(v6 + 32);
        goto LABEL_96;
      }
      __break(1u);
LABEL_109:
      if (object < 0)
        v113 = object;
      else
        v113 = object & 0xFFFFFFFFFFFFFF8;
      if (!_CocoaArrayWrapper.endIndex.getter(v113))
        goto LABEL_113;
      goto LABEL_81;
    }
  }
  v116 = (uint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)object >> 62)
  {
    if (object < 0)
      v1 = (uint64_t *)object;
    else
      v1 = (uint64_t *)(object & 0xFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain(object);
    v17 = _CocoaArrayWrapper.endIndex.getter(v1);
    if (v17)
    {
LABEL_11:
      if (v17 < 1)
      {
        __break(1u);
        goto LABEL_72;
      }
      for (i = 0; i != v17; ++i)
      {
        if ((object & 0xC000000000000001) != 0)
          v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, object);
        else
          v21 = *(id *)(object + 8 * i + 32);
        v22 = v21;
        if (objc_msgSend(v21, "role") == (id)1)
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(1);
          v19 = *(_QWORD *)(v116 + 16);
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v19);
          v20 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v19, v22);
          v1 = &v116;
          specialized ContiguousArray._endMutation()(v20);
        }
        else
        {

        }
      }
      swift_bridgeObjectRelease(object);
      v17 = v116;
      if (v116 < 0)
        goto LABEL_69;
      goto LABEL_46;
    }
  }
  else
  {
    v17 = *(_QWORD *)((object & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(object);
    if (v17)
      goto LABEL_11;
  }
  swift_bridgeObjectRelease(object);
  v17 = (uint64_t)_swiftEmptyArrayStorage;
  if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
    goto LABEL_69;
LABEL_46:
  if ((v17 & 0x4000000000000000) != 0)
  {
LABEL_69:
    swift_bridgeObjectRetain(v17);
    v1 = (uint64_t *)_CocoaArrayWrapper.endIndex.getter(v77);
    swift_release(v17);
    if (!v1)
      goto LABEL_70;
    goto LABEL_48;
  }
  if (!*(_QWORD *)(v17 + 16))
  {
LABEL_70:
    swift_bridgeObjectRelease(v6);
    swift_release(v17);
    return;
  }
LABEL_48:
  if ((v17 & 0xC000000000000001) != 0)
  {
LABEL_72:
    v56 = (uint64_t *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v17);
    goto LABEL_51;
  }
  if (!*(_QWORD *)(v17 + 16))
  {
    __break(1u);
    goto LABEL_74;
  }
  v56 = (uint64_t *)*(id *)(v17 + 32);
LABEL_51:
  v1 = v56;
  swift_release(v17);
  if (!((unint64_t)v6 >> 62))
  {
    countAndFlagsBits = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (countAndFlagsBits != 2)
      goto LABEL_53;
    goto LABEL_78;
  }
LABEL_74:
  if (v6 < 0)
    v78 = v6;
  else
    v78 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v6);
  countAndFlagsBits = _CocoaArrayWrapper.endIndex.getter(v78);
  swift_bridgeObjectRelease(v6);
  if (countAndFlagsBits != 2)
  {
LABEL_53:
    if (countAndFlagsBits == 1)
    {
      swift_bridgeObjectRelease(v6);
      sub_1009B32A4(0);
    }
    else
    {
      if (countAndFlagsBits < 3)
      {
        swift_bridgeObjectRelease(v6);
        if ((unint64_t)object >> 62)
        {
          if (object < 0)
            v69 = object;
          else
            v69 = object & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(object);
          v6 = _CocoaArrayWrapper.endIndex.getter(v69);
          swift_bridgeObjectRelease(object);
        }
        else
        {
          v6 = *(_QWORD *)((object & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        v70 = v6 - 1;
        if (__OFSUB__(v6, 1))
        {
          __break(1u);
          goto LABEL_117;
        }
        v71 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v72._countAndFlagsBits = 0xD000000000000010;
        v120._object = (void *)0x8000000100FE7540;
        v72._object = (void *)0x8000000100FE7520;
        v73._countAndFlagsBits = 0;
        v73._object = (void *)0xE000000000000000;
        v120._countAndFlagsBits = 0xD000000000000062;
        v74 = NSLocalizedString(_:tableName:bundle:value:comment:)(v72, (Swift::String_optional)0, (NSBundle)v71, v73, v120);

        v75 = sub_1004B804C((uint64_t *)&unk_1013E0180);
        v76 = swift_allocObject(v75, 72, 7);
        *(_OWORD *)(v76 + 16) = xmmword_100EF5E40;
        *(_QWORD *)(v76 + 56) = &type metadata for Int;
        *(_QWORD *)(v76 + 64) = &protocol witness table for Int;
        *(_QWORD *)(v76 + 32) = v70;
        static String.localizedStringWithFormat(_:_:)(v74._countAndFlagsBits, v74._object, v76);
        swift_bridgeObjectRelease(v76);
        v68 = v74._object;
      }
      else
      {
        v57 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v119._countAndFlagsBits = 0xD0000000000000A0;
        v119._object = (void *)0x8000000100FE75B0;
        v58._countAndFlagsBits = 0x756C252026204025;
        v58._object = (void *)0xEF73726568744F20;
        v59._countAndFlagsBits = 0;
        v59._object = (void *)0xE000000000000000;
        v60 = NSLocalizedString(_:tableName:bundle:value:comment:)(v58, (Swift::String_optional)0, (NSBundle)v57, v59, v119);

        v61 = sub_1009B32A4(1);
        v63 = v62;
        if (!v62)
        {
          swift_bridgeObjectRelease(v60._object);
          swift_bridgeObjectRelease(v6);

          return;
        }
        v64 = v61;
        swift_bridgeObjectRelease(v6);
        v65 = sub_1004B804C((uint64_t *)&unk_1013E0180);
        v66 = swift_allocObject(v65, 112, 7);
        *(_OWORD *)(v66 + 16) = xmmword_100EF5A10;
        *(_QWORD *)(v66 + 56) = &type metadata for String;
        v67 = sub_1004CFC2C();
        *(_QWORD *)(v66 + 32) = v64;
        *(_QWORD *)(v66 + 40) = v63;
        *(_QWORD *)(v66 + 96) = &type metadata for Int;
        *(_QWORD *)(v66 + 104) = &protocol witness table for Int;
        *(_QWORD *)(v66 + 64) = v67;
        *(_QWORD *)(v66 + 72) = countAndFlagsBits - 1;
        static String.localizedStringWithFormat(_:_:)(v60._countAndFlagsBits, v60._object, v66);
        swift_bridgeObjectRelease(v66);
        v68 = v60._object;
      }
      swift_bridgeObjectRelease(v68);
    }

    return;
  }
LABEL_78:
  v79 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v80 = String._bridgeToObjectiveC()();
  v81 = String._bridgeToObjectiveC()();
  v82 = objc_msgSend(v79, "localizedStringForKey:value:table:", v80, v81, 0);

  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v82);
  countAndFlagsBits = v83;

  v84 = sub_1009B32A4(1);
  if (!v85)
  {
    swift_bridgeObjectRelease(countAndFlagsBits);
    swift_bridgeObjectRelease(v6);

    return;
  }
  v3 = v84;
  v2 = v85;
  v14 = v1;
  object = (uint64_t)sub_1009B5C44(v6, (uint64_t)v14);
  swift_bridgeObjectRelease(v6);

  if ((unint64_t)object >> 62)
    goto LABEL_109;
  if (!*(_QWORD *)((object & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_113:
    swift_bridgeObjectRelease(v2);
    swift_bridgeObjectRelease(countAndFlagsBits);

    goto LABEL_114;
  }
LABEL_81:
  if ((object & 0xC000000000000001) != 0)
  {
LABEL_119:
    v86 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, object);
    goto LABEL_84;
  }
  if (!*(_QWORD *)((object & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_121;
  }
  v86 = *(id *)(object + 32);
LABEL_84:
  v87 = v86;
  swift_bridgeObjectRelease(object);
  v88 = sub_1009B32A4(1);
  v90 = v89;

  if (v90)
  {
    v91 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v92 = swift_allocObject(v91, 112, 7);
    *(_OWORD *)(v92 + 16) = xmmword_100EF5A10;
    *(_QWORD *)(v92 + 56) = &type metadata for String;
    v93 = sub_1004CFC2C();
    *(_QWORD *)(v92 + 32) = v3;
    *(_QWORD *)(v92 + 40) = v2;
    *(_QWORD *)(v92 + 96) = &type metadata for String;
    *(_QWORD *)(v92 + 104) = v93;
    *(_QWORD *)(v92 + 64) = v93;
    *(_QWORD *)(v92 + 72) = v88;
    *(_QWORD *)(v92 + 80) = v90;
    String.init(format:_:)(v9, countAndFlagsBits, v92);
  }
  else
  {
    swift_bridgeObjectRelease(v2);
  }
  swift_bridgeObjectRelease(countAndFlagsBits);

}

void *sub_1009B555C(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  id v7;
  NSString *v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  NSString v15;
  id v16;
  id v17;
  _QWORD *v18;
  id v19;
  Class isa;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  __n128 v32;
  void *v33;
  uint64_t v34;
  uint64_t inited;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v47;
  id v48;
  id v49;
  id v50;
  uint64_t v51;
  void *v52;
  NSString *v53;
  _QWORD v54[3];
  _BYTE v55[16];
  id v56[4];
  _BYTE v57[112];

  if (qword_1013DD638 != -1)
    swift_once(&qword_1013DD638, sub_1009B3268);
  sub_1009B3DF8(a1, a2);
  v5 = v4;
  if (v4 == (void *)1)
  {
    v6 = (void *)objc_opt_self(CNContactFormatter);
    v7 = objc_msgSend(v6, "descriptorForRequiredKeysForStyle:", 0);
    v8 = CNContactEmailAddressesKey;
    v9 = objc_msgSend(v6, "descriptorForRequiredKeysForNameOrder");
    v10 = (void *)objc_opt_self(CNContact);
    v11 = objc_msgSend(v10, "descriptorForAllComparatorKeys");
    v12 = sub_1004B804C((uint64_t *)&unk_1013E4180);
    v13 = swift_allocObject(v12, 64, 7);
    *(_OWORD *)(v13 + 16) = xmmword_100EF7310;
    *(_QWORD *)(v13 + 32) = v7;
    *(_QWORD *)(v13 + 40) = v8;
    *(_QWORD *)(v13 + 48) = v9;
    *(_QWORD *)(v13 + 56) = v11;
    v56[0] = (id)v13;
    specialized Array._endMutation()(v13);
    v14 = v56[0];
    v53 = v8;
    swift_unknownObjectRetain(v7);
    swift_unknownObjectRetain(v9);
    swift_unknownObjectRetain(v11);
    v51 = a1;
    v15 = String._bridgeToObjectiveC()();
    v16 = objc_msgSend(v10, "predicateForContactsMatchingEmailAddress:", v15);

    v17 = objc_msgSend(v10, "comparatorForNameSortOrder:", 1);
    v18 = (_QWORD *)swift_allocObject(&unk_10128E178, 24, 7);
    v18[2] = v17;
    v19 = objc_msgSend(objc_allocWithZone((Class)CNContactStore), "init");
    sub_1004B804C(&qword_1013FF690);
    isa = Array._bridgeToObjectiveC()().super.isa;
    v56[0] = 0;
    v52 = v16;
    v21 = objc_msgSend(v19, "unifiedContactsMatchingPredicate:keysToFetch:error:", v16, isa, v56, swift_bridgeObjectRelease(v14).n128_f64[0]);

    v22 = v56[0];
    if (!v21)
    {
      v47 = v18;
      v48 = v11;
      v49 = v9;
      v50 = v7;
      v31 = v56[0];
      v18 = (_QWORD *)_convertNSErrorToError(_:)(v22);

      swift_willThrow(v32);
      if (qword_1013DD6B8 == -1)
      {
LABEL_12:
        swift_beginAccess(&static OS_os_log.crlDefault, v56, 0, 0);
        v33 = (void *)static OS_os_log.crlDefault;
        v34 = sub_1004B804C((uint64_t *)&unk_1013E0180);
        inited = swift_initStackObject(v34, v57);
        *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
        *(_QWORD *)(inited + 56) = &type metadata for String;
        v36 = sub_1004CFC2C();
        *(_QWORD *)(inited + 64) = v36;
        v37 = v51;
        *(_QWORD *)(inited + 32) = v51;
        *(_QWORD *)(inited + 40) = a2;
        swift_getErrorValue(v18, v55, v54);
        v38 = v54[1];
        v39 = v54[2];
        v40 = v33;
        swift_bridgeObjectRetain(a2);
        v41 = Error.localizedDescription.getter(v38, v39);
        *(_QWORD *)(inited + 96) = &type metadata for String;
        *(_QWORD *)(inited + 104) = v36;
        *(_QWORD *)(inited + 72) = v41;
        *(_QWORD *)(inited + 80) = v42;
        v43 = static os_log_type_t.error.getter();
        sub_100A06EBC((uint64_t)v40, &_mh_execute_header, v43, "Error getting contacts for email (%@): %@", 41, 2, inited);
        swift_setDeallocating(inited);
        v44 = sub_1004B804C(&qword_1013E0190);
        swift_arrayDestroy(inited + 32, 2, v44);

        swift_errorRelease(v18);
        v5 = 0;
        v9 = v49;
        v7 = v50;
        v18 = v47;
        v11 = v48;
LABEL_19:
        sub_1009B4000(v5, v37, a2);

        swift_release(v18);
        swift_unknownObjectRelease(v11);
        swift_unknownObjectRelease(v9);

        swift_unknownObjectRelease(v7);
        return v5;
      }
LABEL_23:
      swift_once(&qword_1013DD6B8, sub_100A00A6C);
      goto LABEL_12;
    }
    v50 = (id)a2;
    v23 = sub_1004B8930(0, (unint64_t *)&qword_1013E8EB0, CNContact_ptr);
    v24 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v21, v23);
    v25 = v22;

    LOBYTE(v56[0]) = 0;
    v56[1] = (id)1;
    v56[2] = sub_1009B5E34;
    v56[3] = v18;
    v26 = sub_1004B804C(&qword_1013FF698);
    v27 = sub_1005FC154(&qword_1013FF6A0, &qword_1013FF698);
    v28 = sub_1009B5E3C();
    v29 = Sequence.sorted<A>(using:)(v56, v26, &type metadata for CRLContactNameSortComparator, v27, v28);
    swift_bridgeObjectRelease(v24);
    if ((unint64_t)v29 >> 62)
    {
      if (v29 < 0)
        v45 = v29;
      else
        v45 = v29 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v29);
      v5 = (void *)_CocoaArrayWrapper.endIndex.getter(v45);
      swift_bridgeObjectRelease(v29);
      if (v5)
        goto LABEL_7;
    }
    else
    {
      v5 = *(void **)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v5)
      {
LABEL_7:
        if ((v29 & 0xC000000000000001) != 0)
        {
          v30 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v29);
          goto LABEL_10;
        }
        if (*(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          v30 = *(id *)(v29 + 32);
LABEL_10:
          v5 = v30;
          swift_bridgeObjectRelease(v29);
LABEL_18:
          v37 = v51;
          goto LABEL_19;
        }
        __break(1u);
        goto LABEL_23;
      }
    }
    swift_bridgeObjectRelease(v29);
    goto LABEL_18;
  }
  return v5;
}

void sub_1009B5AEC(uint64_t a1)
{
  uint64_t v2;
  uint64_t i;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (!((unint64_t)a1 >> 62))
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v2)
      goto LABEL_3;
LABEL_18:
    swift_bridgeObjectRelease(a1);
    return;
  }
  if (a1 < 0)
    v11 = a1;
  else
    v11 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v2 = _CocoaArrayWrapper.endIndex.getter(v11);
  if (!v2)
    goto LABEL_18;
LABEL_3:
  if (v2 < 1)
  {
    __break(1u);
  }
  else
  {
    for (i = 0; i != v2; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
      else
        v4 = *(id *)(a1 + 8 * i + 32);
      v5 = v4;
      if ((objc_msgSend(v4, "isCurrentUser") & 1) != 0
        || (sub_1009B32A4(0), v7 = v6, swift_bridgeObjectRelease(v6), !v7))
      {

      }
      else
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v8);
        v9 = _swiftEmptyArrayStorage[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v9);
        v10 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v9, v5);
        specialized ContiguousArray._endMutation()(v10);
      }
    }
    swift_bridgeObjectRelease(a1);
  }
}

_QWORD *sub_1009B5C44(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v2 = a1;
  if (a1 >> 62)
    goto LABEL_16;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      v4 = 0;
      v5 = v2 & 0xC000000000000001;
      v6 = v2 & 0xFFFFFFFFFFFFFF8;
      v7 = (unint64_t *)&qword_1013FF620;
      v21 = v2 & 0xFFFFFFFFFFFFFF8;
      while (v5)
      {
        v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v2);
LABEL_9:
        v16 = v15;
        v17 = v4 + 1;
        if (__OFADD__(v4, 1))
          goto LABEL_15;
        sub_1004B8930(0, v7, CKShareParticipant_ptr);
        v18 = static NSObject.== infix(_:_:)(v16, a2);
        if ((v18 & 1) != 0)
        {

        }
        else
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v18);
          v8 = v5;
          v9 = v3;
          v10 = v2;
          v11 = v7;
          v12 = _swiftEmptyArrayStorage[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v12);
          v13 = v12;
          v7 = v11;
          v2 = v10;
          v3 = v9;
          v5 = v8;
          v6 = v21;
          v14 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, v16);
          specialized ContiguousArray._endMutation()(v14);
        }
        ++v4;
        if (v17 == v3)
          return _swiftEmptyArrayStorage;
      }
      if (v4 < *(_QWORD *)(v6 + 16))
        break;
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      if (v2 < 0)
        v20 = v2;
      else
        v20 = v2 & 0xFFFFFFFFFFFFFF8;
      v3 = _CocoaArrayWrapper.endIndex.getter(v20);
      if (!v3)
        return _swiftEmptyArrayStorage;
    }
    v15 = *(id *)(v2 + 8 * v4 + 32);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1009B5DD0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B804C(&qword_1013F4270);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1009B5E10()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1009B5E34(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  return sub_1009B4594(a1, a2, *(_QWORD *)(v2 + 16));
}

unint64_t sub_1009B5E3C()
{
  unint64_t result;

  result = qword_1013FF6A8;
  if (!qword_1013FF6A8)
  {
    result = swift_getWitnessTable(&unk_100F1F888, &type metadata for CRLContactNameSortComparator);
    atomic_store(result, (unint64_t *)&qword_1013FF6A8);
  }
  return result;
}

uint64_t sub_1009B5E80()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_1009B5EA4(uint64_t a1)
{
  uint64_t v1;

  return sub_1009B3AF0(a1, v1);
}

double sub_1009B5EAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

double sub_1009B5EBC(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

double sub_1009B5EC4()
{
  uint64_t v0;

  return sub_1009B3CF8(v0);
}

_QWORD *sub_1009B5ECC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  id v4;
  void *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  if ((unint64_t)a1 >> 62)
    goto LABEL_19;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v2)
  {
    while (1)
    {
      v3 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v3, a1);
LABEL_9:
        v5 = v4;
        v6 = v3 + 1;
        if (__OFADD__(v3, 1))
          goto LABEL_18;
        v7 = CKShareParticipant.participantID.getter();
        v9 = v8;
        v11 = CKShareParticipant.participantID.getter();
        v12 = v10;
        if (v7 == v11 && v9 == v10)
        {
          v13 = swift_bridgeObjectRelease_n(v9, 2);
LABEL_14:
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v13);
          v15 = _swiftEmptyArrayStorage[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v15);
          v16 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v5);
          specialized ContiguousArray._endMutation()(v16);
          goto LABEL_5;
        }
        v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9, v11, v10, 0);
        swift_bridgeObjectRelease(v9);
        v13 = swift_bridgeObjectRelease(v12);
        if ((v14 & 1) != 0)
          goto LABEL_14;

LABEL_5:
        ++v3;
        if (v6 == v2)
          return _swiftEmptyArrayStorage;
      }
      if (v3 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      if (a1 < 0)
        v18 = a1;
      else
        v18 = a1 & 0xFFFFFFFFFFFFFF8;
      v2 = _CocoaArrayWrapper.endIndex.getter(v18);
      if (!v2)
        return _swiftEmptyArrayStorage;
    }
    v4 = *(id *)(a1 + 8 * v3 + 32);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

BOOL sub_1009B6070(void *a1, void *a2)
{
  id v4;
  id v5;
  id v6;
  id v7;
  char v8;
  id v9;
  id v10;
  char v11;
  char **v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  void *v44;
  char v45;
  char **v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  char v64;
  char v65;
  char **v66;
  id v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  double v72;
  id v73;
  uint64_t v74;
  id v75;
  void *v76;
  uint64_t v77;
  id v78;
  uint64_t v79;
  id v80;
  uint64_t v81;
  id v82;
  void *v83;
  id v84;
  id v85;
  char **v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char **v92;
  char **v93;
  unint64_t v94;
  id v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  _QWORD v99[2];

  if (!a1)
    return !a2;
  if (!a2)
    return 0;
  sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
  v4 = a1;
  v5 = a2;
  v6 = objc_msgSend(v4, "recordID");
  v7 = objc_msgSend(v5, "recordID");
  v8 = static NSObject.== infix(_:_:)(v6, v7);

  if ((v8 & 1) == 0)
    goto LABEL_31;
  v9 = objc_msgSend(v4, "owner");
  v10 = objc_msgSend(v5, "owner");
  v11 = static NSObject.== infix(_:_:)(v9, v10);

  if ((v11 & 1) == 0)
    goto LABEL_31;
  v12 = &selRef_parentMapOfItemsFrom_;
  v13 = objc_msgSend(v4, "permission");
  if (v13 != objc_msgSend(v5, "permission"))
    goto LABEL_31;
  v14 = objc_msgSend(v4, "publicPermission");
  if (v14 != objc_msgSend(v5, "publicPermission"))
    goto LABEL_31;
  v15 = objc_msgSend(v4, "recordChangeTag");
  if (v15)
  {
    v16 = v15;
    v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
    v19 = v18;

  }
  else
  {
    v17 = 0;
    v19 = 0;
  }
  v21 = objc_msgSend(v5, "recordChangeTag");
  if (!v21)
  {
    if (!v19)
      goto LABEL_24;
    goto LABEL_19;
  }
  v22 = v21;
  v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  v25 = v24;

  if (!v19)
  {
    if (v25)
    {

LABEL_47:
      v26 = v25;
LABEL_48:
      swift_bridgeObjectRelease(v26);
      return 0;
    }
    goto LABEL_24;
  }
  if (!v25)
  {
LABEL_19:

LABEL_20:
    v26 = (uint64_t)v19;
    goto LABEL_48;
  }
  if (v17 == v23 && v19 == (id)v25)
  {
    swift_bridgeObjectRelease(v19);
    swift_bridgeObjectRelease(v25);
    goto LABEL_24;
  }
  v27 = _stringCompareWithSmolCheck(_:_:expecting:)(v17, v19, v23, v25, 0);
  swift_bridgeObjectRelease(v19);
  swift_bridgeObjectRelease(v25);
  if ((v27 & 1) == 0)
  {
LABEL_31:

    return 0;
  }
LABEL_24:
  v28 = v4;
  v29 = static CKShare.SystemFieldKey.title.getter();
  v31 = v30;
  v32 = CKRecord.subscript.getter(v29);

  swift_bridgeObjectRelease(v31);
  if (v32)
  {
    v99[0] = v32;
    v33 = sub_1004B804C((uint64_t *)&unk_1013E0510);
    v34 = swift_dynamicCast(&v97, v99, v33, &type metadata for String, 6);
    if (v34)
      v35 = v97;
    else
      v35 = 0;
    if (v34)
      v25 = v98;
    else
      v25 = 0;
  }
  else
  {
    v35 = 0;
    v25 = 0;
  }
  v36 = v5;
  v37 = static CKShare.SystemFieldKey.title.getter();
  v39 = v38;
  v40 = CKRecord.subscript.getter(v37);

  swift_bridgeObjectRelease(v39);
  if (!v40)
  {
    if (!v25)
      goto LABEL_52;
LABEL_46:

    goto LABEL_47;
  }
  v99[0] = v40;
  v41 = sub_1004B804C((uint64_t *)&unk_1013E0510);
  v42 = swift_dynamicCast(&v97, v99, v41, &type metadata for String, 6);
  if (v42)
    v43 = v97;
  else
    v43 = 0;
  if (v42)
    v44 = (void *)v98;
  else
    v44 = 0;
  if (!v25)
  {
    if (!v44)
      goto LABEL_52;

    v26 = (uint64_t)v44;
    goto LABEL_48;
  }
  if (!v44)
    goto LABEL_46;
  if (v35 == v43 && (void *)v25 == v44)
  {
    swift_bridgeObjectRelease(v25);
    swift_bridgeObjectRelease(v44);
    goto LABEL_52;
  }
  v45 = _stringCompareWithSmolCheck(_:_:expecting:)(v35, v25, v43, v44, 0);
  swift_bridgeObjectRelease(v25);
  swift_bridgeObjectRelease(v44);
  if ((v45 & 1) != 0)
  {
LABEL_52:
    v46 = (char **)v28;
    v47 = static CKShare.SystemFieldKey.thumbnailImageData.getter();
    v49 = v48;
    v50 = CKRecord.subscript.getter(v47);

    swift_bridgeObjectRelease(v49);
    v51 = 0xF000000000000000;
    if (v50)
    {
      v99[0] = v50;
      v52 = sub_1004B804C((uint64_t *)&unk_1013E0510);
      v53 = swift_dynamicCast(&v97, v99, v52, &type metadata for Data, 6);
      if (v53)
        v54 = v97;
      else
        v54 = 0;
      if (v53)
        v51 = v98;
    }
    else
    {
      v54 = 0;
    }
    v19 = v36;
    v55 = static CKShare.SystemFieldKey.thumbnailImageData.getter();
    v57 = v56;
    v58 = CKRecord.subscript.getter(v55);

    swift_bridgeObjectRelease(v57);
    if (v58)
    {
      v99[0] = v58;
      v59 = sub_1004B804C((uint64_t *)&unk_1013E0510);
      v60 = swift_dynamicCast(&v97, v99, v59, &type metadata for Data, 6);
      if (v60)
        v61 = v97;
      else
        v61 = 0;
      if (v60)
        v62 = v98;
      else
        v62 = 0xF000000000000000;
      if (v51 >> 60 == 15)
      {
        v63 = v62 >> 60;
        v62 = v98;
        if (v63 > 0xE)
        {
LABEL_75:
          v66 = &selRef_p_didReceiveMemoryWarning_;
          v67 = objc_msgSend(v46, "participants");
          v96 = sub_1004B8930(0, (unint64_t *)&qword_1013FF620, CKShareParticipant_ptr);
          v25 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v67, v96);

          if ((unint64_t)v25 >> 62)
            goto LABEL_109;
          v68 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
          while (1)
          {
            v69 = objc_msgSend(v19, v66[336], swift_bridgeObjectRelease(v25).n128_f64[0]);
            v70 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v69, v96);

            if ((unint64_t)v70 >> 62)
            {
              v90 = v70 < 0 ? v70 : v70 & 0xFFFFFFFFFFFFFF8;
              swift_bridgeObjectRetain(v70);
              v71 = _CocoaArrayWrapper.endIndex.getter(v90);
              swift_bridgeObjectRelease(v70);
            }
            else
            {
              v71 = *(_QWORD *)((v70 & 0xFFFFFFFFFFFFF8) + 0x10);
            }
            *(_QWORD *)&v72 = swift_bridgeObjectRelease(v70).n128_u64[0];
            if (v68 != v71)
              goto LABEL_102;
            v73 = objc_msgSend(v46, v66[336], v72);
            v25 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v73, v96);

            v92 = v46;
            v95 = v19;
            if ((unint64_t)v25 >> 62)
            {
              if (v25 < 0)
                v91 = v25;
              else
                v91 = v25 & 0xFFFFFFFFFFFFFF8;
              swift_bridgeObjectRetain(v25);
              v46 = (char **)_CocoaArrayWrapper.endIndex.getter(v91);
              swift_bridgeObjectRelease(v25);
              if (!v46)
              {
LABEL_121:

                swift_bridgeObjectRelease(v25);
                return 1;
              }
            }
            else
            {
              v46 = *(char ***)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
              if (!v46)
                goto LABEL_121;
            }
            v93 = v46;
            v94 = v25 & 0xC000000000000001;
            v74 = 4;
            while (1)
            {
              v75 = v94
                  ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v74 - 4, v25)
                  : *(id *)(v25 + 8 * v74);
              v76 = v75;
              v77 = v74 - 3;
              if (__OFADD__(v74 - 4, 1))
                break;
              v46 = v66;
              v78 = objc_msgSend(v95, v66[336]);
              v79 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v78, v96);

              v80 = v76;
              v81 = (uint64_t)sub_1009B5ECC(v79);
              swift_bridgeObjectRelease(v79);

              if ((unint64_t)v81 >> 62)
              {
                if (v81 < 0)
                  v88 = v81;
                else
                  v88 = v81 & 0xFFFFFFFFFFFFFF8;
                swift_bridgeObjectRetain(v81);
                v66 = (char **)_CocoaArrayWrapper.endIndex.getter(v88);
                swift_bridgeObjectRelease(v81);
                if (!v66)
                {
LABEL_104:

                  swift_bridgeObjectRelease(v25);
                  v26 = v81;
                  goto LABEL_48;
                }
              }
              else
              {
                v66 = *(char ***)((v81 & 0xFFFFFFFFFFFFF8) + 0x10);
                if (!v66)
                  goto LABEL_104;
              }
              if ((v81 & 0xC000000000000001) != 0)
              {
                v82 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v81);
              }
              else
              {
                if (!*(_QWORD *)((v81 & 0xFFFFFFFFFFFFF8) + 0x10))
                  goto LABEL_108;
                v82 = *(id *)(v81 + 32);
              }
              v83 = v82;
              v84 = objc_msgSend(v80, "acceptanceStatus", swift_bridgeObjectRelease(v81).n128_f64[0]);
              if (v84 != objc_msgSend(v83, "acceptanceStatus"))
              {

                goto LABEL_47;
              }
              v19 = (id)v25;
              v85 = objc_msgSend(v80, v12[125]);
              v86 = v12;
              v87 = objc_msgSend(v83, v12[125]);

              if (v85 != v87)
              {

                goto LABEL_20;
              }
              ++v74;
              v12 = v86;
              v66 = v46;
              v25 = (uint64_t)v19;
              if ((char **)v77 == v93)
                goto LABEL_121;
            }
            __break(1u);
LABEL_108:
            __break(1u);
LABEL_109:
            if (v25 < 0)
              v89 = v25;
            else
              v89 = v25 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v25);
            v68 = _CocoaArrayWrapper.endIndex.getter(v89);
            swift_bridgeObjectRelease(v25);
          }
        }
      }
      else if (v62 >> 60 != 15)
      {
        sub_1004BE310(v54, v51);
        sub_1007B38CC(v54, v51);
        v65 = v64;
        sub_1004BE2FC(v61, v62);
        sub_1004BE2FC(v54, v51);
        sub_1004BE2FC(v54, v51);
        if ((v65 & 1) != 0)
          goto LABEL_75;
LABEL_102:

        return 0;
      }
    }
    else
    {
      if (v51 >> 60 == 15)
        goto LABEL_75;
      v61 = 0;
      v62 = 0xF000000000000000;
    }
    sub_1004BE2FC(v54, v51);
    sub_1004BE2FC(v61, v62);
    goto LABEL_102;
  }

  return 0;
}

uint64_t sub_1009B695C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1009B6990()
{
  uint64_t v0;

  return sub_1009B4208(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_1009B699C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_1009B69C8()
{
  uint64_t v0;

  sub_1009B3F50(*(void ***)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1009B69D4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

double destroy for CRLContactNameSortComparator(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 24)).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for CRLContactNameSortComparator(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  swift_retain(v4);
  return a1;
}

uint64_t assignWithCopy for CRLContactNameSortComparator(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  swift_retain(v3);
  swift_release(v4);
  return a1;
}

uint64_t assignWithTake for CRLContactNameSortComparator(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLContactNameSortComparator(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLContactNameSortComparator(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLContactNameSortComparator()
{
  return &type metadata for CRLContactNameSortComparator;
}

unint64_t sub_1009B6B4C()
{
  unint64_t result;

  result = qword_1013FF6B8;
  if (!qword_1013FF6B8)
  {
    result = swift_getWitnessTable(&unk_100F1F820, &type metadata for CRLContactNameSortComparator);
    atomic_store(result, (unint64_t *)&qword_1013FF6B8);
  }
  return result;
}

unint64_t sub_1009B6B94()
{
  unint64_t result;

  result = qword_1013FF6C0;
  if (!qword_1013FF6C0)
  {
    result = swift_getWitnessTable(&unk_100F1F848, &type metadata for CRLContactNameSortComparator);
    atomic_store(result, (unint64_t *)&qword_1013FF6C0);
  }
  return result;
}

void sub_1009B6BF4(uint64_t a1)
{
  int64_t v1;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  double v12;
  double v13;
  double *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_100600B30(0, v1, 0);
    v4 = sub_10051FA44(a1);
    v5 = 0;
    v6 = a1 + 64;
    v20 = v1;
    v21 = v3;
    v22 = a1 + 64;
    while ((v4 & 0x8000000000000000) == 0 && v4 < 1 << *(_BYTE *)(a1 + 32))
    {
      v9 = (unint64_t)v4 >> 6;
      if ((*(_QWORD *)(v6 + 8 * ((unint64_t)v4 >> 6)) & (1 << v4)) == 0)
        goto LABEL_23;
      if (*(_DWORD *)(a1 + 36) != v3)
        goto LABEL_24;
      v10 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 16 * v4);
      v11 = v10[1];
      v23 = *v10;
      v13 = _swiftEmptyArrayStorage[2];
      v12 = _swiftEmptyArrayStorage[3];
      swift_bridgeObjectRetain(v11);
      if (*(_QWORD *)&v13 >= *(_QWORD *)&v12 >> 1)
        sub_100600B30(*(_QWORD *)&v12 > 1uLL, *(_QWORD *)&v13 + 1, 1);
      *(_QWORD *)&_swiftEmptyArrayStorage[2] = *(_QWORD *)&v13 + 1;
      v14 = &_swiftEmptyArrayStorage[4 * *(_QWORD *)&v13];
      v14[4] = 2.85762095e161;
      v14[5] = -3.91910665e202;
      *((_QWORD *)v14 + 6) = v23;
      *((_QWORD *)v14 + 7) = v11;
      v7 = 1 << *(_BYTE *)(a1 + 32);
      if (v4 >= v7)
        goto LABEL_25;
      v6 = a1 + 64;
      v15 = *(_QWORD *)(v22 + 8 * v9);
      if ((v15 & (1 << v4)) == 0)
        goto LABEL_26;
      v3 = v21;
      if (*(_DWORD *)(a1 + 36) != v21)
        goto LABEL_27;
      v16 = v15 & (-2 << (v4 & 0x3F));
      if (v16)
      {
        v7 = __clz(__rbit64(v16)) | v4 & 0xFFFFFFFFFFFFFFC0;
        v8 = v20;
      }
      else
      {
        v17 = v9 + 1;
        v18 = (unint64_t)(v7 + 63) >> 6;
        v8 = v20;
        if (v9 + 1 < v18)
        {
          v19 = *(_QWORD *)(v22 + 8 * v17);
          if (v19)
          {
LABEL_20:
            v7 = __clz(__rbit64(v19)) + (v17 << 6);
          }
          else
          {
            while (v18 - 2 != v9)
            {
              v19 = *(_QWORD *)(a1 + 80 + 8 * v9++);
              if (v19)
              {
                v17 = v9 + 1;
                goto LABEL_20;
              }
            }
          }
        }
      }
      ++v5;
      v4 = v7;
      if (v5 == v8)
        return;
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
  }
}

double sub_1009B6E1C()
{
  double result;

  *(_QWORD *)&result = 1060439283;
  xmmword_1013FF6D0 = xmmword_100F1F8E0;
  return result;
}

uint64_t sub_1009B6E30(char a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v3 + 72) = v2;
  *(_BYTE *)(v3 + 112) = a1;
  *(double *)(v3 + 64) = a2;
  v4 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v3 + 80) = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  *(_QWORD *)(v3 + 88) = v5;
  *(_QWORD *)(v3 + 96) = v6;
  return swift_task_switch(sub_1009B6EA4, v5, v6);
}

void sub_1009B6EA4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  __n128 v21;
  __n128 v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v28;
  _QWORD *v29;
  char v30;
  unint64_t v31;
  uint64_t v32;
  _BOOL8 v33;
  uint64_t v34;
  char v35;
  unint64_t v36;
  char v37;
  uint64_t *v38;
  _QWORD *v39;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  int64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  int64_t v50;
  uint64_t v51;
  _QWORD *v52;

  v1 = v0 + 40;
  v2 = (_QWORD *)(*(_QWORD *)(v0 + 72) + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_animations);
  swift_beginAccess(v2, v0 + 16, 0, 0);
  v45 = *v2 + 64;
  v3 = -1;
  v4 = -1 << *(_BYTE *)(*v2 + 32);
  if (-v4 < 64)
    v3 = ~(-1 << -(char)v4);
  v5 = v3 & *(_QWORD *)(*v2 + 64);
  v46 = (unint64_t)(63 - v4) >> 6;
  v48 = *v2;
  swift_bridgeObjectRetain(*v2);
  v6 = 0;
  v44 = v1;
  while (1)
  {
    if (v5)
    {
      v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v12 = v11 | (v6 << 6);
      goto LABEL_23;
    }
    v13 = v6 + 1;
    if (__OFADD__(v6, 1))
      goto LABEL_43;
    if (v13 >= v46)
    {
LABEL_40:
      swift_release(v48);
      v43 = (_QWORD *)swift_task_alloc(dword_1013FF754);
      *(_QWORD *)(v47 + 104) = v43;
      *v43 = v47;
      v43[1] = sub_1009B7304;
      sub_1009B846C();
      return;
    }
    v14 = *(_QWORD *)(v45 + 8 * v13);
    ++v6;
    if (!v14)
    {
      v6 = v13 + 1;
      if (v13 + 1 >= v46)
        goto LABEL_40;
      v14 = *(_QWORD *)(v45 + 8 * v6);
      if (!v14)
      {
        v6 = v13 + 2;
        if (v13 + 2 >= v46)
          goto LABEL_40;
        v14 = *(_QWORD *)(v45 + 8 * v6);
        if (!v14)
          break;
      }
    }
LABEL_22:
    v5 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v6 << 6);
LABEL_23:
    v16 = 16 * v12;
    v17 = (uint64_t *)(*(_QWORD *)(v48 + 48) + v16);
    v18 = v17[1];
    v51 = *v17;
    v19 = (uint64_t *)(*(_QWORD *)(v48 + 56) + v16);
    v10 = *v19;
    v20 = v19[1];
    if (!v20)
    {
      swift_bridgeObjectRetain(v18);
      swift_retain(v10);
LABEL_29:
      v49 = v5;
      v50 = v6;
      v23 = *(unsigned __int8 *)(v47 + 112);
      v24 = *(double *)(v47 + 64);
      v25 = AnimationResource.repeat(duration:)(INFINITY);
      v26 = Entity.playAnimation(_:transitionDuration:startsPaused:)(v25, v23, v24);
      swift_beginAccess(v2, v1, 33, 0);
      swift_retain(v10);
      swift_retain(v26);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
      v28 = (_QWORD *)*v2;
      v52 = (_QWORD *)*v2;
      v29 = v2;
      *v2 = 0x8000000000000000;
      v31 = sub_100842E98(v51, v18);
      v32 = v28[2];
      v33 = (v30 & 1) == 0;
      v34 = v32 + v33;
      if (__OFADD__(v32, v33))
      {
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
        goto LABEL_45;
      }
      v35 = v30;
      if (v28[3] < v34)
      {
        sub_10081D238(v34, isUniquelyReferenced_nonNull_native);
        v28 = v52;
        v36 = sub_100842E98(v51, v18);
        if ((v35 & 1) != (v37 & 1))
        {
          KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
          return;
        }
        v31 = v36;
        if ((v35 & 1) == 0)
          goto LABEL_36;
LABEL_4:
        v7 = (_QWORD *)(v28[7] + 16 * v31);
        v8 = v7[1];
        swift_release(*v7);
        swift_release(v8);
        *v7 = v10;
        v7[1] = v26;
LABEL_5:
        v1 = v44;
        v2 = v29;
        v5 = v49;
        v6 = v50;
        v9 = *v2;
        *v2 = v28;
        swift_bridgeObjectRelease(v9);
        swift_bridgeObjectRelease(v18);
        swift_endAccess(v44);
        swift_release(v26);
        swift_release(v25);
        swift_release(v10);
        v10 = v20;
        goto LABEL_6;
      }
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v30 & 1) != 0)
          goto LABEL_4;
      }
      else
      {
        sub_100830664();
        v28 = v52;
        if ((v35 & 1) != 0)
          goto LABEL_4;
      }
LABEL_36:
      v28[(v31 >> 6) + 8] |= 1 << v31;
      v38 = (uint64_t *)(v28[6] + 16 * v31);
      *v38 = v51;
      v38[1] = v18;
      v39 = (_QWORD *)(v28[7] + 16 * v31);
      *v39 = v10;
      v39[1] = v26;
      v40 = v28[2];
      v41 = __OFADD__(v40, 1);
      v42 = v40 + 1;
      if (v41)
        goto LABEL_44;
      v28[2] = v42;
      swift_bridgeObjectRetain(v18);
      goto LABEL_5;
    }
    swift_bridgeObjectRetain(v18);
    swift_retain(v10);
    v21 = swift_retain(v20);
    if ((AnimationPlaybackController.isValid.getter(v21) & 1) == 0)
      goto LABEL_29;
    v22 = swift_bridgeObjectRelease(v18);
    if ((dispatch thunk of AnimationPlaybackController.isPaused.getter(v22) & 1) != 0)
      dispatch thunk of AnimationPlaybackController.resume()();
    swift_release(v20);
LABEL_6:
    swift_release(v10);
  }
  v15 = v13 + 3;
  if (v15 >= v46)
    goto LABEL_40;
  v14 = *(_QWORD *)(v45 + 8 * v15);
  if (v14)
  {
    v6 = v15;
    goto LABEL_22;
  }
  while (1)
  {
    v6 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v6 >= v46)
      goto LABEL_40;
    v14 = *(_QWORD *)(v45 + 8 * v6);
    ++v15;
    if (v14)
      goto LABEL_22;
  }
LABEL_45:
  __break(1u);
}

uint64_t sub_1009B7304()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 104));
  return swift_task_switch(sub_1009B7350, *(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 96));
}

uint64_t sub_1009B7350()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_release(*(_QWORD *)(v0 + 80));
  return (*(uint64_t (**)(__n128))(v0 + 8))(v1);
}

uint64_t sub_1009B7380()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[5] = v0;
  v2 = type metadata accessor for MainActor(0);
  v1[6] = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[7] = v3;
  v1[8] = v4;
  return swift_task_switch(sub_1009B73EC, v3, v4);
}

void sub_1009B73EC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  _QWORD *v18;

  v1 = (_QWORD *)(*(_QWORD *)(v0 + 40) + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_animations);
  swift_beginAccess(v1, v0 + 16, 0, 0);
  v2 = *v1;
  v3 = *v1 + 64;
  v4 = -1;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  if (-v5 < 64)
    v4 = ~(-1 << -(char)v5);
  v6 = v4 & *(_QWORD *)(*v1 + 64);
  v7 = (unint64_t)(63 - v5) >> 6;
  swift_bridgeObjectRetain(*v1);
  v8 = 0;
  while (v6)
  {
    v9 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    v10 = v9 | (v8 << 6);
LABEL_21:
    v14 = (_QWORD *)(*(_QWORD *)(v2 + 56) + 16 * v10);
    v15 = v14[1];
    if (v15)
    {
      v16 = *v14;
      swift_retain(*v14);
      v17 = swift_retain(v15);
      if ((AnimationPlaybackController.isValid.getter(v17) & 1) != 0)
        dispatch thunk of AnimationPlaybackController.pause()();
      swift_release(v16);
      swift_release(v15);
    }
  }
  v11 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v11 >= v7)
    goto LABEL_24;
  v12 = *(_QWORD *)(v3 + 8 * v11);
  ++v8;
  if (v12)
    goto LABEL_20;
  v8 = v11 + 1;
  if (v11 + 1 >= v7)
    goto LABEL_24;
  v12 = *(_QWORD *)(v3 + 8 * v8);
  if (v12)
    goto LABEL_20;
  v8 = v11 + 2;
  if (v11 + 2 >= v7)
    goto LABEL_24;
  v12 = *(_QWORD *)(v3 + 8 * v8);
  if (v12)
  {
LABEL_20:
    v6 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v8 << 6);
    goto LABEL_21;
  }
  v13 = v11 + 3;
  if (v13 >= v7)
  {
LABEL_24:
    swift_release(v2);
    v18 = (_QWORD *)swift_task_alloc(dword_1013FF754);
    *(_QWORD *)(v0 + 72) = v18;
    *v18 = v0;
    v18[1] = sub_1009B75B8;
    sub_1009B846C();
    return;
  }
  v12 = *(_QWORD *)(v3 + 8 * v13);
  if (v12)
  {
    v8 = v13;
    goto LABEL_20;
  }
  while (1)
  {
    v8 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v8 >= v7)
      goto LABEL_24;
    v12 = *(_QWORD *)(v3 + 8 * v8);
    ++v13;
    if (v12)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
}

uint64_t sub_1009B75B8()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 72));
  return swift_task_switch(sub_1009B7604, *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64));
}

uint64_t sub_1009B7604()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_release(*(_QWORD *)(v0 + 48));
  return (*(uint64_t (**)(__n128))(v0 + 8))(v1);
}

uint64_t sub_1009B7634()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[5] = v0;
  v2 = type metadata accessor for MainActor(0);
  v1[6] = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[7] = v3;
  v1[8] = v4;
  return swift_task_switch(sub_1009B76A0, v3, v4);
}

void sub_1009B76A0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  _QWORD *v18;

  v1 = (_QWORD *)(*(_QWORD *)(v0 + 40) + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_animations);
  swift_beginAccess(v1, v0 + 16, 0, 0);
  v2 = *v1;
  v3 = *v1 + 64;
  v4 = -1;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  if (-v5 < 64)
    v4 = ~(-1 << -(char)v5);
  v6 = v4 & *(_QWORD *)(*v1 + 64);
  v7 = (unint64_t)(63 - v5) >> 6;
  swift_bridgeObjectRetain(*v1);
  v8 = 0;
  while (v6)
  {
    v9 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    v10 = v9 | (v8 << 6);
LABEL_21:
    v14 = (_QWORD *)(*(_QWORD *)(v2 + 56) + 16 * v10);
    v15 = v14[1];
    if (v15)
    {
      v16 = *v14;
      swift_retain(*v14);
      v17 = swift_retain(v15);
      if ((AnimationPlaybackController.isValid.getter(v17) & 1) != 0)
        dispatch thunk of AnimationPlaybackController.resume()();
      swift_release(v16);
      swift_release(v15);
    }
  }
  v11 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v11 >= v7)
    goto LABEL_24;
  v12 = *(_QWORD *)(v3 + 8 * v11);
  ++v8;
  if (v12)
    goto LABEL_20;
  v8 = v11 + 1;
  if (v11 + 1 >= v7)
    goto LABEL_24;
  v12 = *(_QWORD *)(v3 + 8 * v8);
  if (v12)
    goto LABEL_20;
  v8 = v11 + 2;
  if (v11 + 2 >= v7)
    goto LABEL_24;
  v12 = *(_QWORD *)(v3 + 8 * v8);
  if (v12)
  {
LABEL_20:
    v6 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v8 << 6);
    goto LABEL_21;
  }
  v13 = v11 + 3;
  if (v13 >= v7)
  {
LABEL_24:
    swift_release(v2);
    v18 = (_QWORD *)swift_task_alloc(dword_1013FF754);
    *(_QWORD *)(v0 + 72) = v18;
    *v18 = v0;
    v18[1] = sub_1009B786C;
    sub_1009B846C();
    return;
  }
  v12 = *(_QWORD *)(v3 + 8 * v13);
  if (v12)
  {
    v8 = v13;
    goto LABEL_20;
  }
  while (1)
  {
    v8 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v8 >= v7)
      goto LABEL_24;
    v12 = *(_QWORD *)(v3 + 8 * v8);
    ++v13;
    if (v12)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
}

uint64_t sub_1009B786C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 72));
  return swift_task_switch(sub_1009BAD70, *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64));
}

uint64_t sub_1009B78B8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[8] = v0;
  v2 = type metadata accessor for MainActor(0);
  v1[9] = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[10] = v3;
  v1[11] = v4;
  return swift_task_switch(sub_1009B7924, v3, v4);
}

void sub_1009B7924()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v26;
  char v27;
  unint64_t v28;
  uint64_t v29;
  _BOOL8 v30;
  uint64_t v31;
  char v32;
  unint64_t v33;
  char v34;
  uint64_t *v35;
  _QWORD *v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  int64_t v43;
  uint64_t v44;
  unint64_t v45;
  int64_t v46;
  _QWORD *v47;

  v1 = v0 + 40;
  v2 = (_QWORD *)(*(_QWORD *)(v0 + 64) + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_animations);
  swift_beginAccess(v2, v0 + 16, 0, 0);
  v42 = *v2 + 64;
  v3 = -1;
  v4 = -1 << *(_BYTE *)(*v2 + 32);
  if (-v4 < 64)
    v3 = ~(-1 << -(char)v4);
  v5 = v3 & *(_QWORD *)(*v2 + 64);
  v43 = (unint64_t)(63 - v4) >> 6;
  v44 = *v2;
  swift_bridgeObjectRetain(*v2);
  v6 = 0;
  while (1)
  {
    if (v5)
    {
      v10 = __clz(__rbit64(v5));
      v11 = (v5 - 1) & v5;
      v12 = v10 | (v6 << 6);
    }
    else
    {
      v13 = v6 + 1;
      if (__OFADD__(v6, 1))
        goto LABEL_42;
      if (v13 >= v43)
      {
LABEL_38:
        swift_release(v44);
        v40 = (_QWORD *)swift_task_alloc(dword_1013FF754);
        *(_QWORD *)(v41 + 96) = v40;
        *v40 = v41;
        v40[1] = sub_1009B7CF4;
        sub_1009B846C();
        return;
      }
      v14 = *(_QWORD *)(v42 + 8 * v13);
      ++v6;
      if (!v14)
      {
        v6 = v13 + 1;
        if (v13 + 1 >= v43)
          goto LABEL_38;
        v14 = *(_QWORD *)(v42 + 8 * v6);
        if (!v14)
        {
          v6 = v13 + 2;
          if (v13 + 2 >= v43)
            goto LABEL_38;
          v14 = *(_QWORD *)(v42 + 8 * v6);
          if (!v14)
          {
            v15 = v13 + 3;
            if (v15 >= v43)
              goto LABEL_38;
            v14 = *(_QWORD *)(v42 + 8 * v15);
            if (!v14)
            {
              while (1)
              {
                v6 = v15 + 1;
                if (__OFADD__(v15, 1))
                  goto LABEL_43;
                if (v6 >= v43)
                  goto LABEL_38;
                v14 = *(_QWORD *)(v42 + 8 * v6);
                ++v15;
                if (v14)
                  goto LABEL_21;
              }
            }
            v6 = v15;
          }
        }
      }
LABEL_21:
      v11 = (v14 - 1) & v14;
      v12 = __clz(__rbit64(v14)) + (v6 << 6);
    }
    v16 = 16 * v12;
    v17 = (uint64_t *)(*(_QWORD *)(v44 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = (uint64_t *)(*(_QWORD *)(v44 + 56) + v16);
    v22 = *v20;
    v21 = v20[1];
    v45 = v11;
    v46 = v6;
    if (v21)
    {
      swift_retain_n(v21, 2);
      swift_bridgeObjectRetain(v18);
      v23 = swift_retain(v22);
      if ((AnimationPlaybackController.isValid.getter(v23) & 1) != 0)
        dispatch thunk of AnimationPlaybackController.stop()();
      swift_release(v21);
    }
    else
    {
      swift_bridgeObjectRetain(v18);
      swift_retain(v22);
    }
    v24 = v1;
    swift_beginAccess(v2, v1, 33, 0);
    swift_retain(v22);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
    v26 = (_QWORD *)*v2;
    v47 = (_QWORD *)*v2;
    *v2 = 0x8000000000000000;
    v28 = sub_100842E98(v19, v18);
    v29 = v26[2];
    v30 = (v27 & 1) == 0;
    v31 = v29 + v30;
    if (__OFADD__(v29, v30))
      break;
    v32 = v27;
    if (v26[3] >= v31)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v27 & 1) != 0)
          goto LABEL_4;
      }
      else
      {
        sub_100830664();
        v26 = v47;
        if ((v32 & 1) != 0)
          goto LABEL_4;
      }
    }
    else
    {
      sub_10081D238(v31, isUniquelyReferenced_nonNull_native);
      v26 = v47;
      v33 = sub_100842E98(v19, v18);
      if ((v32 & 1) != (v34 & 1))
      {
        KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
        return;
      }
      v28 = v33;
      if ((v32 & 1) != 0)
      {
LABEL_4:
        v7 = (_QWORD *)(v26[7] + 16 * v28);
        v8 = v7[1];
        swift_release(*v7);
        swift_release(v8);
        *v7 = v22;
        v7[1] = 0;
        goto LABEL_5;
      }
    }
    v26[(v28 >> 6) + 8] |= 1 << v28;
    v35 = (uint64_t *)(v26[6] + 16 * v28);
    *v35 = v19;
    v35[1] = v18;
    v36 = (_QWORD *)(v26[7] + 16 * v28);
    *v36 = v22;
    v36[1] = 0;
    v37 = v26[2];
    v38 = __OFADD__(v37, 1);
    v39 = v37 + 1;
    if (v38)
      goto LABEL_41;
    v26[2] = v39;
    swift_bridgeObjectRetain(v18);
LABEL_5:
    v1 = v24;
    v5 = v45;
    v6 = v46;
    v9 = *v2;
    *v2 = v26;
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(v18);
    swift_endAccess(v1);
    swift_release(v22);
    swift_release(v21);
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
}

uint64_t sub_1009B7CF4()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 96));
  return swift_task_switch(sub_1009B7D40, *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88));
}

uint64_t sub_1009B7D40()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_release(*(_QWORD *)(v0 + 72));
  return (*(uint64_t (**)(__n128))(v0 + 8))(v1);
}

uint64_t sub_1009B7D70()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[5] = v0;
  v2 = type metadata accessor for MainActor(0);
  v1[6] = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[7] = v3;
  v1[8] = v4;
  return swift_task_switch(sub_1009B7DDC, v3, v4);
}

void sub_1009B7DDC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  _QWORD *v19;

  v1 = (_QWORD *)(*(_QWORD *)(v0 + 40) + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_animations);
  swift_beginAccess(v1, v0 + 16, 0, 0);
  v2 = *v1;
  v3 = *v1 + 64;
  v4 = -1;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  if (-v5 < 64)
    v4 = ~(-1 << -(char)v5);
  v6 = v4 & *(_QWORD *)(*v1 + 64);
  v7 = (unint64_t)(63 - v5) >> 6;
  swift_bridgeObjectRetain(*v1);
  v8 = 0;
  while (v6)
  {
    v9 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    v10 = v9 | (v8 << 6);
LABEL_21:
    v14 = (_QWORD *)(*(_QWORD *)(v2 + 56) + 16 * v10);
    v15 = v14[1];
    if (v15)
    {
      v16 = *v14;
      swift_retain(*v14);
      v17 = swift_retain(v15);
      if ((AnimationPlaybackController.isValid.getter(v17) & 1) != 0)
      {
        v18 = AnimationPlaybackController.time.setter(0.0);
        dispatch thunk of AnimationPlaybackController.pause()(v18);
      }
      swift_release(v16);
      swift_release(v15);
    }
  }
  v11 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v11 >= v7)
    goto LABEL_24;
  v12 = *(_QWORD *)(v3 + 8 * v11);
  ++v8;
  if (v12)
    goto LABEL_20;
  v8 = v11 + 1;
  if (v11 + 1 >= v7)
    goto LABEL_24;
  v12 = *(_QWORD *)(v3 + 8 * v8);
  if (v12)
    goto LABEL_20;
  v8 = v11 + 2;
  if (v11 + 2 >= v7)
    goto LABEL_24;
  v12 = *(_QWORD *)(v3 + 8 * v8);
  if (v12)
  {
LABEL_20:
    v6 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v8 << 6);
    goto LABEL_21;
  }
  v13 = v11 + 3;
  if (v13 >= v7)
  {
LABEL_24:
    swift_release(v2);
    v19 = (_QWORD *)swift_task_alloc(dword_1013FF754);
    *(_QWORD *)(v0 + 72) = v19;
    *v19 = v0;
    v19[1] = sub_1009B786C;
    sub_1009B846C();
    return;
  }
  v12 = *(_QWORD *)(v3 + 8 * v13);
  if (v12)
  {
    v8 = v13;
    goto LABEL_20;
  }
  while (1)
  {
    v8 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v8 >= v7)
      goto LABEL_24;
    v12 = *(_QWORD *)(v3 + 8 * v8);
    ++v13;
    if (v12)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
}

uint64_t sub_1009B7FB0(float a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v2 + 24) = v1;
  *(float *)(v2 + 96) = a1;
  v3 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v2 + 32) = v3;
  *(_QWORD *)(v2 + 40) = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  *(_QWORD *)(v2 + 48) = v4;
  *(_QWORD *)(v2 + 56) = v5;
  return swift_task_switch(sub_1009B8024, v4, v5);
}

uint64_t sub_1009B8024(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  double v3;
  double v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  v2 = *(_QWORD *)(v1 + 24);
  v3 = *(float *)(v1 + 96);
  v4 = *(double *)(v2 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_configuration + 48) * v3;
  v5 = *(double *)(v2 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_configuration + 56) * v3;
  v6 = static MainActor.shared.getter(a1);
  *(_QWORD *)(v1 + 64) = v6;
  v7 = swift_task_alloc(48);
  *(_QWORD *)(v1 + 72) = v7;
  *(_QWORD *)(v7 + 16) = v2;
  *(double *)(v7 + 24) = v4;
  *(double *)(v7 + 32) = v5;
  v8 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v1 + 80) = v8;
  type metadata accessor for CGImage(0);
  *v8 = v1;
  v8[1] = sub_1009B810C;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v1 + 16, v6, &protocol witness table for MainActor, 0xD000000000000011, 0x8000000100FC16C0, sub_1009BAD60, v7, v9);
}

uint64_t sub_1009B810C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = v2[6];
    v5 = v2[7];
    v6 = sub_1009B81B4;
  }
  else
  {
    v7 = v2[9];
    swift_release(v2[8]);
    swift_task_dealloc(v7);
    v4 = v2[6];
    v5 = v2[7];
    v6 = sub_1009B8180;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_1009B8180()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_release(*(_QWORD *)(v0 + 40));
  return (*(uint64_t (**)(_QWORD, __n128))(v0 + 8))(*(_QWORD *)(v0 + 16), v1);
}

uint64_t sub_1009B81B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 72);
  swift_release(*(_QWORD *)(v0 + 40));
  swift_release(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009B81FC(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t result;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (qword_1013DD118 != -1)
    swift_once(&qword_1013DD118, sub_1007B5120);
  result = sub_1007B5E20(a2, a1, a3, a4);
  if ((result & 1) == 0)
  {
    v9 = sub_100694FA8();
    v10 = swift_allocError(&type metadata for CRLUSDRendering.RendererError, v9, 0, 0);
    *(_QWORD *)v11 = 0xD000000000000018;
    *(_QWORD *)(v11 + 8) = 0x8000000100FE78B0;
    *(_BYTE *)(v11 + 16) = 5;
    v13 = v10;
    v12 = sub_1004B804C(&qword_1013FF9E0);
    return CheckedContinuation.resume(throwing:)(&v13, v12);
  }
  return result;
}

__n128 sub_1009B82E4@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t Strong;
  uint64_t v4;
  void *v5;
  _BYTE *v6;
  char v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  __n128 result;
  __n128 v22;
  __int128 v23;
  _QWORD *v24;
  char v25[24];

  Strong = swift_weakLoadStrong(v1 + 16);
  if (Strong && (v4 = Strong, v5 = *(void **)(Strong + 32), v6 = v5, swift_release(v4), v5))
  {
    v7 = v6[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_hasDrawnFrame];

  }
  else
  {
    v7 = 1;
  }
  v22 = *(__n128 *)(v1 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_modelBounds + 16);
  v23 = *(_OWORD *)(v1 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_modelBounds);
  v8 = (_QWORD *)(v1 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_animations);
  swift_beginAccess(v1 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_animations, v25, 0, 0);
  v9 = *v8;
  swift_bridgeObjectRetain(*v8);
  sub_1009B9F18(v10);
  v12 = v11;
  swift_bridgeObjectRelease(v9);
  v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_metadata);
  swift_bridgeObjectRetain(v13);
  sub_1009B6BF4(v14);
  v16 = v15;
  swift_bridgeObjectRelease(v13);
  v17 = *(_QWORD *)(v16 + 16);
  if (v17)
  {
    sub_1004B804C(&qword_1013F5010);
    v18 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v17);
  }
  else
  {
    v18 = _swiftEmptyDictionarySingleton;
  }
  v24 = v18;
  swift_bridgeObjectRetain(v16);
  sub_1009B97C8(v19, 1, &v24);
  swift_bridgeObjectRelease(v16);
  v20 = v24;
  result = v22;
  *(_OWORD *)a1 = v23;
  *(__n128 *)(a1 + 16) = v22;
  *(_QWORD *)(a1 + 32) = v12;
  *(_BYTE *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v20;
  return result;
}

uint64_t sub_1009B846C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[11] = v0;
  v2 = type metadata accessor for MainActor(0);
  v1[12] = v2;
  v1[13] = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[14] = v3;
  v1[15] = v4;
  return swift_task_switch(sub_1009B84DC, v3, v4);
}

uint64_t sub_1009B84DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v13;

  v1 = *(_QWORD *)(v0 + 88);
  sub_1009B82E4(v0 + 16);
  *(_QWORD *)(v0 + 72) = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 64);
  *(_QWORD *)(v0 + 80) = v2;
  v3 = v1 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_sceneDescription;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_sceneDescription + 32);
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_sceneDescription + 48);
  v6 = *(_OWORD *)(v0 + 32);
  v7 = *(_OWORD *)(v0 + 48);
  *(_OWORD *)v3 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v3 + 16) = v6;
  *(_OWORD *)(v3 + 32) = v7;
  *(_QWORD *)(v3 + 48) = v2;
  sub_1006CD6A4((_QWORD *)(v0 + 72));
  sub_1006CD6A4((_QWORD *)(v0 + 80));
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v5);
  sub_10051FD74((_QWORD *)(v0 + 72));
  sub_10051FD74((_QWORD *)(v0 + 80));
  Strong = swift_weakLoadStrong(v1 + 16);
  *(_QWORD *)(v0 + 128) = Strong;
  if (Strong)
  {
    v9 = *(_QWORD *)(v0 + 96);
    *(_QWORD *)(v0 + 136) = static MainActor.shared.getter(Strong);
    v10 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
    *(_QWORD *)(v0 + 144) = v10;
    *(_QWORD *)(v0 + 152) = v11;
    return swift_task_switch(sub_1009B8600, v10, v11);
  }
  else
  {
    v13 = swift_release(*(_QWORD *)(v0 + 104));
    return (*(uint64_t (**)(__n128))(v0 + 8))(v13);
  }
}

uint64_t sub_1009B8600()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v6;
  _QWORD *v7;

  v1 = (_QWORD *)v0[16];
  v2 = v1[6];
  v0[20] = v2;
  v0[21] = v1[7];
  v0[22] = v1[8];
  v3 = v1[9];
  v0[23] = v3;
  v0[24] = v1[10];
  v0[25] = v1[11];
  v0[26] = v1[12];
  v0[27] = v1[13];
  v0[28] = v1[14];
  v0[29] = v1[15];
  v0[30] = v1[16];
  if (v3 >> 62 == 1 && (v4 = v0[11], v4 == v2))
  {
    v6 = dword_1013EB30C;
    swift_retain(v4);
    v7 = (_QWORD *)swift_task_alloc(v6);
    v0[31] = v7;
    *v7 = v0;
    v7[1] = sub_1009B86F0;
    return sub_100690FE8();
  }
  else
  {
    swift_release(v0[17]);
    swift_release(v1);
    return swift_task_switch(sub_1009B87EC, v0[14], v0[15]);
  }
}

uint64_t sub_1009B86F0()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 248));
  return swift_task_switch(sub_1009B873C, *(_QWORD *)(v1 + 144), *(_QWORD *)(v1 + 152));
}

uint64_t sub_1009B873C()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = v0[22];
  v1 = v0[23];
  v4 = v0[20];
  v3 = v0[21];
  v5 = v0[16];
  swift_release(v0[17]);
  sub_100690688(v4, v3, v2, v1);
  swift_release(v5);
  return swift_task_switch(sub_1009B87EC, v0[14], v0[15]);
}

uint64_t sub_1009B87EC()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_release(*(_QWORD *)(v0 + 104));
  return (*(uint64_t (**)(__n128))(v0 + 8))(v1);
}

uint64_t sub_1009B881C()
{
  uint64_t v0;
  float v1;
  float v2;
  float v3;
  float v4;
  uint64_t v5;
  uint64_t inited;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(_BYTE *, _QWORD);
  __n128 v11;
  __n128 v13;
  __n128 v14;
  _BYTE v15[32];
  _BYTE v16[48];

  v1 = *(float *)(v0 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_configuration);
  v14 = *(__n128 *)(v0 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_configuration + 16);
  v2 = BoundingBox.boundingRadius.getter(*(__n128 *)(v0 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_modelBounds), *(__n128 *)(v0 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_modelBounds + 16));
  v3 = (float)((float)(v1 * 0.5) * 3.1416) / 180.0;
  if (v1 <= 0.0)
    v3 = 0.0087266;
  v4 = v2 / sinf(v3);
  v5 = sub_1004B804C((uint64_t *)&unk_1013FF9C0);
  inited = swift_initStackObject(v5, v16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5550;
  *(_QWORD *)(inited + 32) = 0;
  *(float *)(inited + 40) = v4;
  sub_1009BA1D0(inited);
  v13 = v7;
  swift_setDeallocating(inited);
  v8 = type metadata accessor for AnchorEntity(0);
  HasTransform.position.setter(v8, &protocol witness table for Entity, v13);
  v9 = type metadata accessor for PerspectiveCamera(0);
  v10 = (void (*)(_BYTE *, _QWORD))HasPerspectiveCamera.camera.modify(v15, v9, &protocol witness table for PerspectiveCamera);
  PerspectiveCameraComponent.fieldOfViewInDegrees.setter(v1);
  v10(v15, 0);
  HasTransform.orientation.setter(v8, &protocol witness table for Entity, v14);
  sub_1009BA1D0((uint64_t)&off_101264C38);
  return HasTransform.position.setter(v8, &protocol witness table for Entity, v11);
}

void sub_1009B89A8()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  float v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(_BYTE *, _QWORD);
  uint64_t v10;
  uint64_t v11;
  void (*v12)(_BYTE *, _QWORD);
  _BYTE v13[32];

  v1 = sub_1004B804C(&qword_1013FF9B8);
  v2 = __chkstk_darwin(v1);
  v4 = &v13[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_lighting);
  if (v5)
  {
    v6 = *(float *)(v0 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_lighting + 8);
    v7 = swift_retain_n(v5, 2);
    __ImageBasedLightComponent.init(environment:intensityExponent:)(v7, v6);
    v8 = type metadata accessor for __ImageBasedLightComponent(0);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v4, 0, 1, v8);
    v9 = (void (*)(_BYTE *, _QWORD))dispatch thunk of Entity.components.modify(v13);
    Entity.ComponentSet.subscript.setter(v4, v8, v8, &protocol witness table for __ImageBasedLightComponent);
    v9(v13, 0);
    swift_release(v5);
  }
  else
  {
    type metadata accessor for EnvironmentResource(0, v2);
    v10 = static EnvironmentResource.defaultObject()();
    __ImageBasedLightComponent.init(environment:intensityExponent:)(v10, 0.0);
    v11 = type metadata accessor for __ImageBasedLightComponent(0);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v4, 0, 1, v11);
    v12 = (void (*)(_BYTE *, _QWORD))dispatch thunk of Entity.components.modify(v13);
    Entity.ComponentSet.subscript.setter(v4, v11, v11, &protocol witness table for __ImageBasedLightComponent);
    v12(v13, 0);
  }
}

void sub_1009B8B44()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  char v17;
  _BYTE v18[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_animations);
  swift_beginAccess(v0 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_animations, v18, 0, 0);
  v2 = *v1;
  v3 = v2 + 64;
  v4 = 1 << *(_BYTE *)(v2 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(v2 + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain(v2);
  v8 = 0;
  while (v6)
  {
    v9 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    v10 = v9 | (v8 << 6);
LABEL_21:
    v14 = *(_QWORD *)(v2 + 56) + 16 * v10;
    v15 = *(_QWORD *)(v14 + 8);
    if (v15)
    {
      v16 = swift_retain(*(_QWORD *)(v14 + 8));
      if ((AnimationPlaybackController.isValid.getter(v16) & 1) != 0)
      {
        v17 = AnimationPlaybackController.isPlaying.getter();
        swift_release(v15);
        if ((v17 & 1) != 0)
        {
LABEL_24:
          swift_release(v2);
          return;
        }
      }
      else
      {
        swift_release(v15);
      }
    }
  }
  v11 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v11 >= v7)
    goto LABEL_24;
  v12 = *(_QWORD *)(v3 + 8 * v11);
  ++v8;
  if (v12)
    goto LABEL_20;
  v8 = v11 + 1;
  if (v11 + 1 >= v7)
    goto LABEL_24;
  v12 = *(_QWORD *)(v3 + 8 * v8);
  if (v12)
    goto LABEL_20;
  v8 = v11 + 2;
  if (v11 + 2 >= v7)
    goto LABEL_24;
  v12 = *(_QWORD *)(v3 + 8 * v8);
  if (v12)
  {
LABEL_20:
    v6 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v8 << 6);
    goto LABEL_21;
  }
  v13 = v11 + 3;
  if (v13 >= v7)
    goto LABEL_24;
  v12 = *(_QWORD *)(v3 + 8 * v13);
  if (v12)
  {
    v8 = v13;
    goto LABEL_20;
  }
  while (1)
  {
    v8 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v8 >= v7)
      goto LABEL_24;
    v12 = *(_QWORD *)(v3 + 8 * v8);
    ++v13;
    if (v12)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
}

void sub_1009B8CE8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  __n128 v9;
  char v10;
  char v11;
  char v12;
  char v13;
  float v14;
  Swift::UInt32 v15;
  double v16;
  Swift::UInt64 v17;
  float v18;
  Swift::UInt32 v19;
  double v20;
  Swift::UInt64 v21;
  __n128 v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  Swift::UInt *v32;
  Swift::UInt v33;
  Swift::UInt v34;
  uint64_t v35;
  _OWORD v36[4];
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;

  Hasher.init()(v36);
  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_animations);
  swift_beginAccess(v0 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_animations, &v35, 0, 0);
  v2 = *v1;
  v3 = v2 + 64;
  v4 = 1 << *(_BYTE *)(v2 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(v2 + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain(v2);
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v23 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v24 = v23 | (v8 << 6);
      goto LABEL_34;
    }
    v25 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_38;
    }
    if (v25 >= v7)
      goto LABEL_36;
    v26 = *(_QWORD *)(v3 + 8 * v25);
    ++v8;
    if (!v26)
    {
      v8 = v25 + 1;
      if (v25 + 1 >= v7)
        goto LABEL_36;
      v26 = *(_QWORD *)(v3 + 8 * v8);
      if (!v26)
      {
        v8 = v25 + 2;
        if (v25 + 2 >= v7)
          goto LABEL_36;
        v26 = *(_QWORD *)(v3 + 8 * v8);
        if (!v26)
          break;
      }
    }
LABEL_33:
    v6 = (v26 - 1) & v26;
    v24 = __clz(__rbit64(v26)) + (v8 << 6);
LABEL_34:
    v28 = 16 * v24;
    v29 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v28);
    v30 = *v29;
    v31 = v29[1];
    v32 = (Swift::UInt *)(*(_QWORD *)(v2 + 56) + v28);
    v33 = *v32;
    v34 = v32[1];
    swift_retain(v34);
    swift_bridgeObjectRetain(v31);
    swift_retain(v33);
    String.hash(into:)(v36, v30, v31);
    swift_bridgeObjectRelease(v31);
    Hasher._combine(_:)(v33);
    if (v34)
    {
      Hasher._combine(_:)(1u);
      Hasher._combine(_:)(v34);
      v9 = swift_retain(v34);
      v10 = AnimationPlaybackController.isValid.getter(v9);
      Hasher._combine(_:)(v10 & 1);
      v11 = AnimationPlaybackController.isPlaying.getter();
      Hasher._combine(_:)(v11 & 1);
      v12 = dispatch thunk of AnimationPlaybackController.isPaused.getter();
      Hasher._combine(_:)(v12 & 1);
      v13 = AnimationPlaybackController.isStopped.getter();
      Hasher._combine(_:)(v13 & 1);
      v14 = AnimationPlaybackController.speed.getter();
      if ((LODWORD(v14) & 0x7FFFFFFF) != 0)
        v15 = LODWORD(v14);
      else
        v15 = 0;
      Hasher._combine(_:)(v15);
      v16 = AnimationPlaybackController.time.getter();
      if ((*(_QWORD *)&v16 & 0x7FFFFFFFFFFFFFFFLL) != 0)
        v17 = *(_QWORD *)&v16;
      else
        v17 = 0;
      Hasher._combine(_:)(v17);
      v18 = AnimationPlaybackController.blendFactor.getter();
      if ((LODWORD(v18) & 0x7FFFFFFF) != 0)
        v19 = LODWORD(v18);
      else
        v19 = 0;
      Hasher._combine(_:)(v19);
      v20 = AnimationPlaybackController.duration.getter();
      if ((*(_QWORD *)&v20 & 0x7FFFFFFFFFFFFFFFLL) != 0)
        v21 = *(_QWORD *)&v20;
      else
        v21 = 0;
      Hasher._combine(_:)(v21);
      swift_release_n(v34, 2, v22);
    }
    else
    {
      Hasher._combine(_:)(0);
    }
    swift_release(v33);
  }
  v27 = v25 + 3;
  if (v27 >= v7)
  {
LABEL_36:
    swift_release(v2);
    v40 = v36[2];
    v41 = v36[3];
    v42 = v37;
    v38 = v36[0];
    v39 = v36[1];
    Hasher.finalize()();
    return;
  }
  v26 = *(_QWORD *)(v3 + 8 * v27);
  if (v26)
  {
    v8 = v27;
    goto LABEL_33;
  }
  while (1)
  {
    v8 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v8 >= v7)
      goto LABEL_36;
    v26 = *(_QWORD *)(v3 + 8 * v8);
    ++v27;
    if (v26)
      goto LABEL_33;
  }
LABEL_38:
  __break(1u);
}

Swift::Int sub_1009B8FD0()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  String.hash(into:)(v1, 0x617453656B617761, 0xEA00000000006574);
  return Hasher._finalize()();
}

uint64_t sub_1009B9024(uint64_t a1)
{
  return String.hash(into:)(a1, 0x617453656B617761, 0xEA00000000006574);
}

Swift::Int sub_1009B9040(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  String.hash(into:)(v2, 0x617453656B617761, 0xEA00000000006574);
  return Hasher._finalize()();
}

uint64_t sub_1009B9090@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1012655C0, v3);
  result = swift_bridgeObjectRelease(v4);
  *a2 = v5 != 0;
  return result;
}

void sub_1009B90E0(_QWORD *a1@<X8>)
{
  *a1 = 0x617453656B617761;
  a1[1] = 0xEA00000000006574;
}

double sub_1009B9100(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  double result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;

  v2 = v1;
  v4 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v4);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v2 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_metadata);
  *(_QWORD *)(v2 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_metadata) = a1;
  swift_bridgeObjectRetain(a1);
  sub_100C9F2C8(v8, v7);
  v10 = v9;
  swift_bridgeObjectRelease(a1);
  if ((v10 & 1) != 0)
  {
    *(_QWORD *)&result = swift_bridgeObjectRelease(v7).n128_u64[0];
  }
  else
  {
    v12 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v6, 1, 1, v12);
    type metadata accessor for MainActor(0);
    swift_retain(v2);
    v14 = static MainActor.shared.getter(v13);
    v15 = (_QWORD *)swift_allocObject(&unk_10128E578, 40, 7);
    v15[2] = v14;
    v15[3] = &protocol witness table for MainActor;
    v15[4] = v2;
    v16 = sub_100521B98((uint64_t)v6, (uint64_t)&unk_1013FF9B0, (uint64_t)v15);
    swift_bridgeObjectRelease(v7);
    *(_QWORD *)&result = swift_release(v16).n128_u64[0];
  }
  return result;
}

uint64_t sub_1009B9244()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  swift_weakDestroy(v0 + 16);
  v1 = v0 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_uuid;
  v2 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_scene));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_objectEntity));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_modelAnchor));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_cameraAnchor));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_cameraEntity));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_environmentEntity));
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_sceneDescription + 32);
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_sceneDescription
                                      + 48));
  swift_bridgeObjectRelease(v3);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_loadReceipt));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_lighting));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_animations));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_metadata));
  return v0;
}

uint64_t sub_1009B9350()
{
  uint64_t v0;

  sub_1009B9244();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1009B9374()
{
  return _s11ClientSceneCMa(0);
}

uint64_t _s11ClientSceneCMa(uint64_t a1)
{
  uint64_t result;

  result = qword_1013FF710;
  if (!qword_1013FF710)
    return swift_getSingletonMetadata(a1, &_s11ClientSceneCMn);
  return result;
}

uint64_t sub_1009B93B8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[15];

  v4[0] = "\b";
  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[3] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[4] = &unk_100F1F930;
    v4[5] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[6] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[7] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[8] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[9] = &unk_100F1F948;
    v4[10] = &unk_100F1F960;
    v4[11] = &unk_100F1F978;
    v4[12] = &unk_100F1F990;
    v4[13] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[14] = (char *)&value witness table for Builtin.BridgeObject + 64;
    return swift_updateClassMetadata2(a1, 256, 15, v4, a1 + 80);
  }
  return result;
}

uint64_t _s11ClientSceneC11MetadataKeyOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1009B94C4 + 4 * byte_100F1F8F0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1009B94E4 + 4 * byte_100F1F8F5[v4]))();
}

_BYTE *sub_1009B94C4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1009B94E4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1009B94EC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1009B94F4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1009B94FC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1009B9504(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s11ClientSceneC11MetadataKeyOMa()
{
  return &_s11ClientSceneC11MetadataKeyON;
}

uint64_t *_s11ClientSceneC22InternalAnimationStateOwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  *a1 = *a2;
  swift_retain(v3);
  return a1;
}

uint64_t *_s11ClientSceneC22InternalAnimationStateOwca(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *a1;
  *a1 = *a2;
  swift_retain(v3);
  swift_release(v4);
  return a1;
}

uint64_t *_s11ClientSceneC22InternalAnimationStateOwta(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a1;
  *a1 = *a2;
  swift_release(v3);
  return a1;
}

ValueMetadata *_s11ClientSceneC22InternalAnimationStateOMa()
{
  return &_s11ClientSceneC22InternalAnimationStateON;
}

uint64_t _s11ClientSceneC15ImageBasedLightVwCP(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  *(_QWORD *)a1 = *a2;
  *(_DWORD *)(a1 + 8) = *((_DWORD *)a2 + 2);
  swift_retain(v3);
  return a1;
}

uint64_t *_s11ClientSceneC15ImageBasedLightVwca(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a1;
  v5 = *a2;
  *a1 = *a2;
  swift_retain(v5);
  swift_release(v4);
  *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
  return a1;
}

uint64_t _s11ClientSceneC15ImageBasedLightVwtk(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_DWORD *)(result + 8) = *((_DWORD *)a2 + 2);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t *_s11ClientSceneC15ImageBasedLightVwta(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;

  v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
  return a1;
}

uint64_t _s11ClientSceneC15ImageBasedLightVwet(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 12))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s11ClientSceneC15ImageBasedLightVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_DWORD *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 12) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 12) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *_s11ClientSceneC15ImageBasedLightVMa()
{
  return &_s11ClientSceneC15ImageBasedLightVN;
}

unint64_t sub_1009B9758()
{
  unint64_t result;

  result = qword_1013FF978;
  if (!qword_1013FF978)
  {
    result = swift_getWitnessTable(&unk_100F1FA60, &_s11ClientSceneC11MetadataKeyON);
    atomic_store(result, (unint64_t *)&qword_1013FF978);
  }
  return result;
}

uint64_t sub_1009B979C()
{
  return sub_1004B7878(&qword_1013FF980, _s11ClientSceneCMa, (uint64_t)&unk_100F1FA88);
}

void sub_1009B97C8(_QWORD *a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  _QWORD *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  _BOOL8 v35;
  uint64_t v36;
  char v37;
  char v38;
  _QWORD *v39;
  uint64_t *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  Swift::String v44;
  Swift::String v45;
  uint64_t v46;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v3 = a1[2];
  if (!v3)
  {
    swift_bridgeObjectRelease(a1);
    return;
  }
  v7 = a1[4];
  v6 = a1[5];
  v8 = a1[7];
  v46 = a1[6];
  swift_bridgeObjectRetain(a1);
  v50 = v7;
  v51 = v6;
  v9 = (_QWORD *)*a3;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v8);
  v11 = sub_100842E98(v7, v6);
  v12 = v9[2];
  v13 = (v10 & 1) == 0;
  v14 = v12 + v13;
  if (__OFADD__(v12, v13))
    goto LABEL_23;
  v15 = v10;
  if (v9[3] >= v14)
  {
    if ((a2 & 1) != 0)
    {
      if ((v10 & 1) != 0)
        goto LABEL_10;
    }
    else
    {
      sub_1008304AC();
      if ((v15 & 1) != 0)
        goto LABEL_10;
    }
LABEL_13:
    v21 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    v22 = (uint64_t *)(v21[6] + 16 * v11);
    *v22 = v7;
    v22[1] = v6;
    v23 = (_QWORD *)(v21[7] + 16 * v11);
    *v23 = v46;
    v23[1] = v8;
    v24 = v21[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (v25)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v21[2] = v26;
    v27 = v3 - 1;
    if (v3 == 1)
    {
LABEL_22:
      swift_bridgeObjectRelease_n(a1, 2);
      return;
    }
    v28 = a1 + 11;
    while (1)
    {
      v6 = *(v28 - 2);
      v30 = *(v28 - 1);
      v8 = *v28;
      v50 = *(v28 - 3);
      v29 = v50;
      v51 = v6;
      v31 = (_QWORD *)*a3;
      swift_bridgeObjectRetain(v6);
      swift_bridgeObjectRetain(v8);
      v32 = sub_100842E98(v50, v6);
      v34 = v31[2];
      v35 = (v33 & 1) == 0;
      v25 = __OFADD__(v34, v35);
      v36 = v34 + v35;
      if (v25)
        break;
      v37 = v33;
      if (v31[3] < v36)
      {
        sub_10081CF14(v36, 1);
        v32 = sub_100842E98(v50, v6);
        if ((v37 & 1) != (v38 & 1))
          goto LABEL_25;
      }
      if ((v37 & 1) != 0)
        goto LABEL_10;
      v39 = (_QWORD *)*a3;
      *(_QWORD *)(*a3 + 8 * (v32 >> 6) + 64) |= 1 << v32;
      v40 = (uint64_t *)(v39[6] + 16 * v32);
      *v40 = v29;
      v40[1] = v6;
      v41 = (_QWORD *)(v39[7] + 16 * v32);
      *v41 = v30;
      v41[1] = v8;
      v42 = v39[2];
      v25 = __OFADD__(v42, 1);
      v43 = v42 + 1;
      if (v25)
        goto LABEL_24;
      v28 += 4;
      v39[2] = v43;
      if (!--v27)
        goto LABEL_22;
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_10081CF14(v14, a2 & 1);
  v16 = sub_100842E98(v7, v6);
  if ((v15 & 1) == (v17 & 1))
  {
    v11 = v16;
    if ((v15 & 1) == 0)
      goto LABEL_13;
LABEL_10:
    v18 = swift_allocError(&type metadata for _MergeError, &protocol witness table for _MergeError, 0, 0);
    swift_willThrow(v19);
    v52 = v18;
    swift_errorRetain(v18);
    v20 = sub_1004B804C(&qword_1013E0210);
    if ((swift_dynamicCast(v20, &v52, v20, &type metadata for _MergeError, 0) & 1) == 0)
    {
      swift_bridgeObjectRelease(v6);
      swift_bridgeObjectRelease(v8);
      swift_bridgeObjectRelease_n(a1, 2);
      swift_errorRelease(v52);
      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
LABEL_26:
  v48 = 0;
  v49 = 0xE000000000000000;
  _StringGuts.grow(_:)(30);
  v44._object = (void *)0x8000000100FE7890;
  v44._countAndFlagsBits = 0xD00000000000001BLL;
  String.append(_:)(v44);
  _print_unlocked<A, B>(_:_:)(&v50, &v48, &type metadata for String, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v45._countAndFlagsBits = 39;
  v45._object = (void *)0xE100000000000000;
  String.append(_:)(v45);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v48, v49, "Swift/NativeDictionary.swift", 28, 2, 783, 0);
  __break(1u);
}

void sub_1009B9B64(_QWORD *a1, char a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  _QWORD *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  _QWORD *v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  _BOOL8 v34;
  uint64_t v35;
  char v36;
  char v37;
  _QWORD *v38;
  uint64_t *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  Swift::String v43;
  Swift::String v44;
  uint64_t v45;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  if (!a1[2])
  {
    swift_bridgeObjectRelease(a1);
    return;
  }
  v45 = a1[2];
  v6 = a1[4];
  v5 = a1[5];
  v7 = a1[6];
  v8 = a1[7];
  swift_bridgeObjectRetain(a1);
  v49 = v6;
  v50 = v5;
  v9 = (_QWORD *)*a3;
  swift_retain(v8);
  swift_bridgeObjectRetain(v5);
  swift_retain(v7);
  v11 = sub_100842E98(v6, v5);
  v12 = v9[2];
  v13 = (v10 & 1) == 0;
  v14 = v12 + v13;
  if (__OFADD__(v12, v13))
    goto LABEL_23;
  v15 = v10;
  if (v9[3] >= v14)
  {
    if ((a2 & 1) != 0)
    {
      if ((v10 & 1) != 0)
        goto LABEL_10;
    }
    else
    {
      sub_100830664();
      if ((v15 & 1) != 0)
        goto LABEL_10;
    }
LABEL_13:
    v21 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    v22 = (uint64_t *)(v21[6] + 16 * v11);
    *v22 = v6;
    v22[1] = v5;
    v23 = (_QWORD *)(v21[7] + 16 * v11);
    *v23 = v7;
    v23[1] = v8;
    v24 = v21[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (v25)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v21[2] = v26;
    v27 = v45 - 1;
    if (v45 == 1)
    {
LABEL_22:
      swift_bridgeObjectRelease_n(a1, 2);
      return;
    }
    v28 = a1 + 11;
    while (1)
    {
      v5 = *(v28 - 2);
      v7 = *(v28 - 1);
      v8 = *v28;
      v49 = *(v28 - 3);
      v29 = v49;
      v50 = v5;
      v30 = (_QWORD *)*a3;
      swift_retain(v8);
      swift_bridgeObjectRetain(v5);
      swift_retain(v7);
      v31 = sub_100842E98(v49, v5);
      v33 = v30[2];
      v34 = (v32 & 1) == 0;
      v25 = __OFADD__(v33, v34);
      v35 = v33 + v34;
      if (v25)
        break;
      v36 = v32;
      if (v30[3] < v35)
      {
        sub_10081D238(v35, 1);
        v31 = sub_100842E98(v49, v5);
        if ((v36 & 1) != (v37 & 1))
          goto LABEL_25;
      }
      if ((v36 & 1) != 0)
        goto LABEL_10;
      v38 = (_QWORD *)*a3;
      *(_QWORD *)(*a3 + 8 * (v31 >> 6) + 64) |= 1 << v31;
      v39 = (uint64_t *)(v38[6] + 16 * v31);
      *v39 = v29;
      v39[1] = v5;
      v40 = (_QWORD *)(v38[7] + 16 * v31);
      *v40 = v7;
      v40[1] = v8;
      v41 = v38[2];
      v25 = __OFADD__(v41, 1);
      v42 = v41 + 1;
      if (v25)
        goto LABEL_24;
      v28 += 4;
      v38[2] = v42;
      if (!--v27)
        goto LABEL_22;
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_10081D238(v14, a2 & 1);
  v16 = sub_100842E98(v6, v5);
  if ((v15 & 1) == (v17 & 1))
  {
    v11 = v16;
    if ((v15 & 1) == 0)
      goto LABEL_13;
LABEL_10:
    v18 = swift_allocError(&type metadata for _MergeError, &protocol witness table for _MergeError, 0, 0);
    swift_willThrow(v19);
    v51 = v18;
    swift_errorRetain(v18);
    v20 = sub_1004B804C(&qword_1013E0210);
    if ((swift_dynamicCast(v20, &v51, v20, &type metadata for _MergeError, 0) & 1) == 0)
    {
      swift_bridgeObjectRelease(v5);
      swift_release(v8);
      swift_release(v7);
      swift_bridgeObjectRelease_n(a1, 2);
      swift_errorRelease(v51);
      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
LABEL_26:
  v47 = 0;
  v48 = 0xE000000000000000;
  _StringGuts.grow(_:)(30);
  v43._object = (void *)0x8000000100FE7890;
  v43._countAndFlagsBits = 0xD00000000000001BLL;
  String.append(_:)(v43);
  _print_unlocked<A, B>(_:_:)(&v49, &v47, &type metadata for String, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v44._countAndFlagsBits = 39;
  v44._object = (void *)0xE100000000000000;
  String.append(_:)(v44);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v47, v48, "Swift/NativeDictionary.swift", 28, 2, 783, 0);
  __break(1u);
}

void sub_1009B9F18(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  char v23;
  char v24;
  uint64_t v25;
  char v26;
  float v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  int64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  int64_t v45;

  sub_1004B804C((uint64_t *)&unk_1013FF9D0);
  v2 = static _DictionaryStorage.copy(original:)(a1);
  v3 = (_QWORD *)v2;
  v4 = 0;
  v43 = a1;
  v7 = *(_QWORD *)(a1 + 64);
  v6 = a1 + 64;
  v5 = v7;
  v8 = 1 << *(_BYTE *)(v6 - 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & v5;
  v40 = v6;
  v41 = (unint64_t)(v8 + 63) >> 6;
  v42 = v2 + 64;
  v39 = (_QWORD *)v2;
  if ((v9 & v5) == 0)
    goto LABEL_5;
LABEL_4:
  v11 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (i = v11 | (v4 << 6); ; i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    v16 = *(_QWORD *)(v43 + 56);
    v17 = (uint64_t *)(*(_QWORD *)(v43 + 48) + 16 * i);
    v18 = *v17;
    v19 = v17[1];
    v20 = *(_QWORD *)(v16 + 16 * i + 8);
    if (v20)
    {
      v45 = v4;
      v21 = *(_QWORD *)(v16 + 16 * i);
      swift_bridgeObjectRetain(v19);
      swift_retain(v21);
      v22 = swift_retain(v20);
      v44 = dispatch thunk of AnimationPlaybackController.isPaused.getter(v22);
      v23 = dispatch thunk of AnimationPlaybackController.isComplete.getter();
      v24 = AnimationPlaybackController.isPlaying.getter();
      v25 = v18;
      v26 = AnimationPlaybackController.isStopped.getter();
      v27 = AnimationPlaybackController.speed.getter();
      swift_release(v20);
      v28 = v21;
      v4 = v45;
      swift_release(v28);
      v3 = v39;
      v29 = 256;
      if ((v23 & 1) == 0)
        v29 = 0;
      v30 = v29 & 0xFFFFFFFFFFFFFFFELL | v44 & 1;
      v31 = 0x10000;
      if ((v24 & 1) == 0)
        v31 = 0;
      v32 = (v26 & 1) == 0;
      v18 = v25;
      v33 = 0x1000000;
      if (v32)
        v33 = 0;
      v34 = v30 | v31 | v33 | ((unint64_t)LODWORD(v27) << 32);
    }
    else
    {
      swift_bridgeObjectRetain(v19);
      v34 = 2;
    }
    *(_QWORD *)(v42 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v35 = (_QWORD *)(v3[6] + 16 * i);
    *v35 = v18;
    v35[1] = v19;
    *(_QWORD *)(v3[7] + 8 * i) = v34;
    v36 = v3[2];
    v37 = __OFADD__(v36, 1);
    v38 = v36 + 1;
    if (v37)
    {
      __break(1u);
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    v3[2] = v38;
    if (v10)
      goto LABEL_4;
LABEL_5:
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_34;
    if (v13 >= v41)
      return;
    v14 = *(_QWORD *)(v40 + 8 * v13);
    ++v4;
    if (!v14)
    {
      v4 = v13 + 1;
      if (v13 + 1 >= v41)
        return;
      v14 = *(_QWORD *)(v40 + 8 * v4);
      if (!v14)
      {
        v4 = v13 + 2;
        if (v13 + 2 >= v41)
          return;
        v14 = *(_QWORD *)(v40 + 8 * v4);
        if (!v14)
          break;
      }
    }
LABEL_18:
    v10 = (v14 - 1) & v14;
  }
  v15 = v13 + 3;
  if (v15 >= v41)
    return;
  v14 = *(_QWORD *)(v40 + 8 * v15);
  if (v14)
  {
    v4 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    v4 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v4 >= v41)
      return;
    v14 = *(_QWORD *)(v40 + 8 * v4);
    ++v15;
    if (v14)
      goto LABEL_18;
  }
LABEL_35:
  __break(1u);
}

uint64_t sub_1009BA1D0(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  __int128 v4;
  int v5;
  __int128 v6;

  v1 = *(_QWORD *)(result + 16);
  if (v1)
  {
    v2 = 0;
    v3 = 3;
    if ((unint64_t)(v1 - 1) < 3)
      v3 = v1 - 1;
    v4 = 0uLL;
    do
    {
      if ((unint64_t)(v1 - 1) > 2)
      {
        __break(1u);
        goto LABEL_10;
      }
      v5 = *(_DWORD *)(result + 32 + 4 * v2);
      v6 = v4;
      *(_DWORD *)((unint64_t)&v6 & 0xFFFFFFFFFFFFFFF3 | (4 * (v2 & 3))) = v5;
      v4 = v6;
      ++v2;
    }
    while (v1 != v2);
    if (v3 < 2)
      goto LABEL_10;
  }
  else
  {
LABEL_10:
    __break(1u);
  }
  return result;
}

double sub_1009BA240()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  __int128 v24;
  uint64_t v25;
  uint64_t v26;

  v0 = sub_1004B804C(&qword_1013FF988);
  v1 = __chkstk_darwin(v0);
  v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for __REAnchoringType.Alignment(0, v1);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v24 - v10;
  v12 = type metadata accessor for Entity(0, v9);
  *(double *)&v13 = HasTransform.orientation.getter(v12, &protocol witness table for Entity);
  v24 = v13;
  Scene.__anchoringType.getter();
  v14 = type metadata accessor for __REAnchoringType(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v3, 1, v14) == 1)
  {
    sub_1009BAC10((uint64_t)v3);
  }
  else if ((*(unsigned int (**)(char *, uint64_t))(v15 + 88))(v3, v14) == enum case for __REAnchoringType.surface(_:))
  {
    (*(void (**)(char *, uint64_t))(v15 + 96))(v3, v14);
    v16 = &v3[*(int *)(sub_1004B804C(&qword_1013FF990) + 48)];
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v11, v3, v4);
    v17 = type metadata accessor for __REAnchoringType.Classification(0);
    v18 = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
    static __REAnchoringType.Alignment.vertical.getter(v18);
    v19 = sub_1004B7878((unint64_t *)&unk_1013FF998, (uint64_t (*)(uint64_t))&type metadata accessor for __REAnchoringType.Alignment, (uint64_t)&protocol conformance descriptor for __REAnchoringType.Alignment);
    dispatch thunk of RawRepresentable.rawValue.getter(&v26, v4, v19);
    dispatch thunk of RawRepresentable.rawValue.getter(&v25, v4, v19);
    v21 = v25;
    v20 = v26;
    v22 = *(void (**)(char *, uint64_t))(v5 + 8);
    v22(v7, v4);
    if (v20 == v21)
    {
      if (qword_1013DD640 != -1)
        swift_once(&qword_1013DD640, sub_1009B6E1C);
      v24 = xmmword_1013FF6D0;
    }
    v22(v11, v4);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v3, v14);
  }
  return *(double *)&v24;
}

uint64_t sub_1009BA4A4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  __int128 v25;
  _OWORD *v26;
  __int128 v27;
  __n128 v28;
  __n128 v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  __n128 v43;
  __int128 v44;
  uint64_t v45;
  BOOL v46;
  float v47;
  float v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  uint64_t v52;
  __n128 v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  double *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  Swift::String v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  double *v69;
  double v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  __int128 v77;
  uint64_t v78;
  uint64_t v79;
  __int128 v80;
  uint64_t result;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  __n128 v87;
  char *v88;
  __int128 v89;
  uint64_t v90;
  __int128 v91;
  __n128 v92;
  __int128 v93;
  uint64_t v94;
  double *v95;
  _OWORD v96[3];
  uint64_t v97;

  v5 = v4;
  *(_QWORD *)&v91 = type metadata accessor for Scene.AnchorCollection(0);
  *(_QWORD *)&v89 = *(_QWORD *)(v91 - 8);
  __chkstk_darwin(v91);
  v88 = (char *)&v83 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_weakInit(v5 + 16, 0);
  *(_QWORD *)(v5 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_loadReceipt) = 0;
  v11 = v5 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_lighting;
  *(_QWORD *)v11 = 0;
  *(_DWORD *)(v11 + 8) = 0;
  v12 = OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_metadata;
  *(_QWORD *)(v5 + v12) = sub_1008D6D1C((uint64_t)_swiftEmptyArrayStorage);
  v13 = a1 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10RepBackend_uuid;
  v14 = v5 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_uuid;
  v15 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v14, v13, v15);
  v84 = a1;
  swift_weakAssign(v5 + 16, a1);
  v90 = a2;
  *(_QWORD *)(v5 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_scene) = a2;
  *(_QWORD *)(v5 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_objectEntity) = a3;
  v16 = v5 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_configuration;
  v17 = *(_OWORD *)(a4 + 48);
  *(_OWORD *)(v16 + 32) = *(_OWORD *)(a4 + 32);
  *(_OWORD *)(v16 + 48) = v17;
  *(_QWORD *)(v16 + 64) = *(_QWORD *)(a4 + 64);
  v18 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)v16 = *(_OWORD *)a4;
  *(_OWORD *)(v16 + 16) = v18;
  v19 = type metadata accessor for AnchorEntity(0);
  sub_1009BA1D0((uint64_t)&off_101264C68);
  v87 = v20;
  swift_retain(a2);
  swift_retain(a3);
  v21 = AnchorEntity.__allocating_init(world:)(v87);
  v22 = OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_modelAnchor;
  *(_QWORD *)(v5 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_modelAnchor) = v21;
  v24 = type metadata accessor for Entity(0, v23);
  *(double *)&v25 = HasTransform.visualBounds(recursive:relativeTo:excludeInactive:)(1, 0, 0, v24, &protocol witness table for Entity);
  v26 = (_OWORD *)(v5 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_modelBounds);
  *v26 = v25;
  v26[1] = v27;
  v28 = BoundingBox.center.getter();
  v29.n128_u64[0] = (unint64_t)vsub_f32(0, (float32x2_t)v28.n128_u64[0]);
  v29.n128_f32[2] = 0.0 - v28.n128_f32[2];
  v29.n128_u32[3] = 0;
  HasTransform.position.setter(v24, &protocol witness table for Entity, v29);
  v30 = swift_retain(v21);
  HasHierarchy.addChild(_:preservingWorldTransform:)(a3, 0, v19, &protocol witness table for Entity, v30);
  swift_release(v21);
  v31 = type metadata accessor for PerspectiveCamera(0);
  swift_allocObject(v31, *(unsigned int *)(v31 + 48), *(unsigned __int16 *)(v31 + 52));
  v32 = PerspectiveCamera.init()();
  *(_QWORD *)(v5 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_cameraEntity) = v32;
  sub_1009BA1D0((uint64_t)&off_101264C98);
  v34 = AnchorEntity.__allocating_init(world:)(v33);
  v35 = OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_cameraAnchor;
  *(_QWORD *)(v5 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_cameraAnchor) = v34;
  swift_retain(v34);
  v36 = swift_retain(v32);
  HasHierarchy.addChild(_:preservingWorldTransform:)(v37, 0, v19, &protocol witness table for Entity, v36);
  swift_release(v34);
  swift_release(v32);
  v38 = *(_QWORD *)(v5 + v22);
  v39 = swift_retain(v38);
  dispatch thunk of Scene.addAnchor(_:)(v38, &protocol witness table for AnchorEntity, v39);
  swift_release(v38);
  v40 = *(_QWORD *)(v5 + v35);
  v41 = swift_retain(v40);
  dispatch thunk of Scene.addAnchor(_:)(v42, &protocol witness table for AnchorEntity, v41);
  swift_release(v40);
  v43.n128_f64[0] = sub_1009BA240();
  v87 = v43;
  *(double *)&v44 = HasTransform.orientation.getter(v24, &protocol witness table for Entity);
  v45 = 0;
  while (1)
  {
    v92 = v87;
    v47 = *(float *)((unint64_t)&v92 & 0xFFFFFFFFFFFFFFF3 | (4 * (v45 & 3)));
    v93 = v44;
    v48 = *(float *)((unint64_t)&v93 & 0xFFFFFFFFFFFFFFF3 | (4 * (v45 & 3)));
    v46 = v47 == v48;
    if (v45 == 3)
      break;
    while (1)
    {
      ++v45;
      if (v46)
        break;
      if (v45 == 3)
        goto LABEL_8;
      v46 = 0;
    }
  }
  if (v47 != v48)
LABEL_8:
    HasTransform.orientation.setter(v24, &protocol witness table for Entity, v87);
  swift_allocObject(v24, *(unsigned int *)(v24 + 48), *(unsigned __int16 *)(v24 + 52));
  v49 = Entity.init()();
  *(_QWORD *)(v5 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_environmentEntity) = v49;
  v50 = OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_environmentEntity;
  v51 = swift_retain(v49);
  dispatch thunk of Entity.name.setter(0xD000000000000019, 0x8000000100FE7830, v51);
  swift_release(v49);
  v52 = *(_QWORD *)(v5 + v50);
  swift_retain(v52);
  Entity.turnIntoNinja()();
  v53 = swift_release(v52);
  v54 = v88;
  dispatch thunk of Scene.anchors.getter(v53);
  Scene.AnchorCollection.appendNinja(_:)(*(_QWORD *)(v5 + v50));
  v55 = (*(uint64_t (**)(char *, _QWORD))(v89 + 8))(v54, v91);
  v56 = Entity.availableAnimations.getter(v55);
  if ((unint64_t)v56 >> 62)
  {
LABEL_30:
    if (v56 < 0)
      v82 = v56;
    else
      v82 = v56 & 0xFFFFFFFFFFFFFF8;
    v57 = _CocoaArrayWrapper.endIndex.getter(v82);
  }
  else
  {
    v57 = *(_QWORD *)((v56 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v86 = v5;
  v85 = a3;
  if (!v57)
  {
    swift_bridgeObjectRelease(v56);
    v58 = _swiftEmptyArrayStorage;
    v70 = _swiftEmptyArrayStorage[2];
    if (v70 == 0.0)
    {
LABEL_27:
      v71 = _swiftEmptyDictionarySingleton;
      goto LABEL_28;
    }
LABEL_25:
    sub_1004B804C(&qword_1013F4E80);
    v71 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(*(_QWORD *)&v70);
LABEL_28:
    *(_QWORD *)&v96[0] = v71;
    swift_bridgeObjectRetain(v58);
    sub_1009B9B64(v72, 1, v96);
    swift_bridgeObjectRelease(v58);
    v73 = v86;
    *(_QWORD *)(v86 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_animations) = *(_QWORD *)&v96[0];
    v91 = *(_OWORD *)(v73 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_modelBounds);
    v89 = *(_OWORD *)(v73 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_modelBounds + 16);
    v74 = sub_1008D6E10((uint64_t)_swiftEmptyArrayStorage);
    v75 = sub_1008D6BFC((uint64_t)_swiftEmptyArrayStorage);
    v76 = v73 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_sceneDescription;
    v77 = v89;
    *(_OWORD *)v76 = v91;
    *(_OWORD *)(v76 + 16) = v77;
    *(_QWORD *)(v76 + 32) = v74;
    *(_BYTE *)(v76 + 40) = 0;
    *(_QWORD *)(v76 + 48) = v75;
    sub_1009B881C();
    sub_1009B89A8();
    sub_1009B82E4((uint64_t)v96);
    swift_release(v84);
    swift_release(v90);
    swift_release(v85);
    v78 = *(_QWORD *)(v76 + 32);
    v79 = *(_QWORD *)(v76 + 48);
    v80 = v96[1];
    *(_OWORD *)v76 = v96[0];
    *(_OWORD *)(v76 + 16) = v80;
    *(_OWORD *)(v76 + 32) = v96[2];
    *(_QWORD *)(v76 + 48) = v97;
    swift_bridgeObjectRelease(v79);
    swift_bridgeObjectRelease(v78);
    return v73;
  }
  v95 = _swiftEmptyArrayStorage;
  sub_100600B4C(0, v57 & ~(v57 >> 63), 0);
  if ((v57 & 0x8000000000000000) == 0)
  {
    v54 = 0;
    v58 = v95;
    *(_QWORD *)&v91 = v56 & 0xC000000000000001;
    v59 = v56;
    do
    {
      if ((char *)v57 == v54)
      {
        __break(1u);
        goto LABEL_30;
      }
      if ((_QWORD)v91)
      {
        v60 = specialized _ArrayBuffer._getElementSlowPath(_:)(v54, v56);
      }
      else
      {
        v60 = *(_QWORD *)(v56 + 8 * (_QWORD)v54 + 32);
        swift_retain(v60);
      }
      v94 = ObjectIdentifier.hashValue.getter(v60);
      *(_QWORD *)&v96[0] = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
      *((_QWORD *)&v96[0] + 1) = v61;
      v62._countAndFlagsBits = 47;
      v62._object = (void *)0xE100000000000000;
      String.append(_:)(v62);
      v63 = AnimationResource.name.getter();
      if (v64)
      {
        v65 = v64;
      }
      else
      {
        v63 = 0x64656D616E6E75;
        v65 = 0xE700000000000000;
      }
      v66 = v65;
      String.append(_:)(*(Swift::String *)&v63);
      swift_bridgeObjectRelease(v65);
      v67 = *((_QWORD *)&v96[0] + 1);
      v5 = *(_QWORD *)&v96[0];
      v95 = v58;
      a3 = *((_QWORD *)v58 + 2);
      v68 = *((_QWORD *)v58 + 3);
      if (a3 >= v68 >> 1)
      {
        sub_100600B4C(v68 > 1, a3 + 1, 1);
        v58 = v95;
      }
      ++v54;
      *((_QWORD *)v58 + 2) = a3 + 1;
      v69 = &v58[4 * a3];
      *((_QWORD *)v69 + 4) = v5;
      *((_QWORD *)v69 + 5) = v67;
      *((_QWORD *)v69 + 6) = v60;
      v69[7] = 0.0;
      v56 = v59;
    }
    while ((char *)v57 != v54);
    swift_bridgeObjectRelease(v59);
    v70 = v58[2];
    if (v70 == 0.0)
      goto LABEL_27;
    goto LABEL_25;
  }
  __break(1u);
  result = swift_unexpectedError(v54, "Swift/Dictionary.swift", 22, 1, 489);
  __break(1u);
  return result;
}

uint64_t sub_1009BAC10(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B804C(&qword_1013FF988);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1009BAC50(uint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  __int128 v4;
  int v5;
  uint64_t v6;
  __int128 v7;

  if (a3 >> 1 == a2)
    goto LABEL_10;
  if ((uint64_t)(a3 >> 1) <= a2)
  {
LABEL_9:
    __break(1u);
LABEL_10:
    __break(1u);
    return result;
  }
  v3 = 0;
  v4 = 0uLL;
  do
  {
    if ((a3 >> 1) + ~a2 > 3)
    {
      __break(1u);
      goto LABEL_9;
    }
    v5 = *(_DWORD *)(result + 4 * a2 + 4 * v3);
    v6 = v3 + 1;
    v7 = v4;
    *(_DWORD *)((unint64_t)&v7 & 0xFFFFFFFFFFFFFFF3 | (4 * (v3 & 3))) = v5;
    v4 = v7;
    v3 = v6;
  }
  while ((a3 >> 1) - a2 != v6);
  if ((unint64_t)(v6 - 1) < 3)
    goto LABEL_10;
  return result;
}

uint64_t sub_1009BACC8()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1009BACF4()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1013FF9AC);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1004CF80C;
  return sub_1006901C4();
}

uint64_t sub_1009BAD60(uint64_t a1)
{
  uint64_t v1;

  return sub_1009B81FC(a1, *(_QWORD *)(v1 + 16), *(double *)(v1 + 24), *(double *)(v1 + 32));
}

id sub_1009BAD78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  objc_class *v4;
  char *v9;
  id v10;

  v9 = (char *)objc_allocWithZone(v4);
  swift_getObjectType(a4);
  v10 = sub_1009BDB18(a1, a2, a3, a4, v9);
  swift_unknownObjectRelease(a4);
  return v10;
}

id sub_1009BAF98(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  char *v5;
  char *v6;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t *v18;
  uint64_t v19;
  char *v20;
  _QWORD *v21;
  uint64_t v22;
  unint64_t v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  char *v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t inited;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  __n128 v41;
  id v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  objc_class *v48;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  objc_super v57;
  id v58;
  char v59[72];

  v51 = a5;
  v6 = v5;
  v55 = a1;
  v56 = a2;
  v9 = type metadata accessor for URL(0);
  v53 = *(_QWORD *)(v9 - 8);
  v54 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v52 = (char *)&v50 - v13;
  v14 = type metadata accessor for UUID(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (uint64_t *)&v6[OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__filename];
  *v18 = a3;
  v18[1] = a4;
  if ((a4 & 0x2000000000000000) != 0)
    v19 = HIBYTE(a4) & 0xF;
  else
    v19 = a3 & 0xFFFFFFFFFFFFLL;
  v20 = v6;
  v21 = v20;
  if (v19)
  {
    swift_bridgeObjectRetain(a4);
  }
  else
  {
    v22 = UUID.init()(v20);
    a3 = UUID.uuidString.getter(v22);
    a4 = v23;
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
  v24 = objc_allocWithZone((Class)CRLTemporaryDirectory);
  v58 = 0;
  v25 = objc_msgSend(v24, "initWithError:", &v58);
  v26 = v58;
  if (v25)
  {
    v27 = v25;
    *(_QWORD *)((char *)v21 + OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__tempDir) = v25;
    v28 = v26;
    v29 = v27;
    v30 = objc_msgSend(v29, "URL");
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v30);

    v31 = v52;
    URL.appendingPathComponent(_:isDirectory:)(a3, a4, 0);
    v32 = swift_bridgeObjectRelease(a4);
    (*(void (**)(char *, uint64_t, __n128))(v53 + 8))(v11, v54, v32);
    v33 = v50;
    Data.write(to:options:)(v31, 0, v55, v56);
    if (v33)
    {
      v34 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v34, v59);
      *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
      v36 = URL.absoluteString.getter(inited);
      v38 = v37;
      *(_QWORD *)(inited + 56) = &type metadata for String;
      *(_QWORD *)(inited + 64) = sub_1004CFC2C();
      *(_QWORD *)(inited + 32) = v36;
      *(_QWORD *)(inited + 40) = v38;
      sub_100757E04(&_mh_execute_header, (uint64_t)"init(data:filename:owner:)", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLPreinsertionAssetWrapper.swift", 99, 2, 60, "Failed to create temporary file '%s' for writing asset data", 59, 2u, inited);
      v31 = v52;
      sub_1004F5394(inited, (uint64_t)"init(data:filename:owner:)", 26, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLPreinsertionAssetWrapper.swift", 99, 2u, 60, (uint64_t)"Failed to create temporary file '%s' for writing asset data", 59, 2u);

      swift_setDeallocating(inited);
      v39 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(inited + 32, 1, v39);
      swift_errorRelease(v33);
    }
    else
    {

    }
    v44 = (char *)v21 + OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__url;
    v46 = v53;
    v45 = v54;
    (*(void (**)(uint64_t, char *, uint64_t))(v53 + 32))((uint64_t)v21 + OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__url, v31, v54);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v44, 0, 1, v45);
    v47 = v51;
    *(_QWORD *)((char *)v21 + OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__owner) = v51;
    *(_QWORD *)((char *)v21 + OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__alreadyInsertedAsset) = 0;
    swift_unknownObjectRetain(v47);

    v48 = (objc_class *)type metadata accessor for CRLPreinsertionAssetWrapper(0);
    v57.receiver = v21;
    v57.super_class = v48;
    v42 = objc_msgSendSuper2(&v57, "init");
    swift_unknownObjectRelease(v47);
    sub_1004BBBC8(v55, v56);
  }
  else
  {
    v40 = v58;
    _convertNSErrorToError(_:)(v26);

    swift_willThrow(v41);
    swift_unknownObjectRelease(v51);
    sub_1004BBBC8(v55, v56);
    swift_bridgeObjectRelease(a4);
    v42 = (id)v18[1];

    swift_bridgeObjectRelease(v42);
    v43 = type metadata accessor for CRLPreinsertionAssetWrapper(0);
    swift_deallocPartialClassInstance(v21, v43, *(unsigned int *)((swift_isaMask & *v21) + 0x30), *(unsigned __int16 *)((swift_isaMask & *v21) + 0x34));
  }
  return v42;
}

uint64_t sub_1009BB53C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[8] = a1;
  v2[9] = v1;
  v3 = sub_1004B804C((uint64_t *)&unk_1013E9BE0);
  v2[10] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRLAssetData(0);
  v2[11] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[12] = v5;
  v2[13] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009BB5C0, 0, 0);
}

uint64_t sub_1009BB5C0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__alreadyInsertedAsset);
  if (!v2)
    goto LABEL_7;
  sub_1004E90B0((uint64_t)v2 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage, v0 + 16);
  v3 = v2;
  v4 = sub_1004B804C(&qword_101400020);
  v5 = type metadata accessor for CRLAssetBackedAssetStorage(0);
  v6 = swift_dynamicCast(v0 + 56, v0 + 16, v4, v5, 6);
  v8 = *(_QWORD *)(v0 + 88);
  v9 = *(_QWORD *)(v0 + 96);
  v10 = *(_QWORD *)(v0 + 80);
  if (v6)
  {
    v11 = *(_QWORD *)(v0 + 56);
    sub_10069BF0C(v11 + OBJC_IVAR____TtC8Freeform26CRLAssetBackedAssetStorage_assetData, *(_QWORD *)(v0 + 80));
    v12 = swift_release(v11);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t, __n128))(v9 + 56))(v10, 0, 1, v8, v12);
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t, __n128))(v9 + 56))(*(_QWORD *)(v0 + 80), 1, 1, v8, v7);
  }

  v13 = *(_QWORD *)(v0 + 80);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 96) + 48))(v13, 1, *(_QWORD *)(v0 + 88)) == 1)
  {
    sub_1004CB800(v13, (uint64_t *)&unk_1013E9BE0);
    v1 = *(_QWORD *)(v0 + 72);
LABEL_7:
    v14 = swift_task_alloc(32);
    *(_QWORD *)(v0 + 112) = v14;
    *(_QWORD *)(v14 + 16) = v1;
    v15 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
    *(_QWORD *)(v0 + 120) = v15;
    *v15 = v0;
    v15[1] = sub_1009BB7B0;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(*(_QWORD *)(v0 + 64), 0, 0, 0xD000000000000012, 0x8000000100FE7B10, sub_1009BE00C, v14, *(_QWORD *)(v0 + 88));
  }
  v17 = *(_QWORD *)(v0 + 104);
  v18 = *(_QWORD *)(v0 + 64);
  sub_10078DF08(v13, v17);
  sub_10078DF08(v17, v18);
  v19 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 104));
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009BB7B0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = *(_QWORD *)(*v1 + 120);
  v3 = *v1;
  *(_QWORD *)(v3 + 128) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_1009BB83C, 0, 0);
  swift_task_dealloc(*(_QWORD *)(v3 + 112));
  v5 = *(_QWORD *)(v3 + 80);
  swift_task_dealloc(*(_QWORD *)(v3 + 104));
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_1009BB83C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 112));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009BB884()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[2] = v0;
  v2 = type metadata accessor for CRLAssetData(0);
  v1[3] = v2;
  v1[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009BB8E0, 0, 0);
}

uint64_t sub_1009BB8E0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  uint64_t v6;
  _QWORD *v7;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__alreadyInsertedAsset);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 32);
    v4 = v2;
    swift_task_dealloc(v3);
    return (*(uint64_t (**)(id))(v0 + 8))(v4);
  }
  else
  {
    v6 = swift_task_alloc(32);
    *(_QWORD *)(v0 + 40) = v6;
    *(_QWORD *)(v6 + 16) = v1;
    v7 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
    *(_QWORD *)(v0 + 48) = v7;
    *v7 = v0;
    v7[1] = sub_1009BB9B4;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(*(_QWORD *)(v0 + 32), 0, 0, 0xD000000000000012, 0x8000000100FE7B10, sub_1009BDC78, v6, *(_QWORD *)(v0 + 24));
  }
}

uint64_t sub_1009BB9B4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 48);
  *(_QWORD *)(*v1 + 56) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1009BBA8C;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 40));
    v4 = sub_1009BBA20;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1009BBA20()
{
  uint64_t v0;
  uint64_t v1;
  id v2;

  v1 = *(_QWORD *)(v0 + 32);
  swift_getObjectType(*(_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__owner));
  v2 = sub_1007B2368(v1);
  sub_1005CC194(v1);
  swift_task_dealloc(*(_QWORD *)(v0 + 32));
  return (*(uint64_t (**)(id))(v0 + 8))(v2);
}

uint64_t sub_1009BBA8C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_task_dealloc(*(_QWORD *)(v0 + 40));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009BBBE4(const void *a1, void *a2)
{
  _QWORD *v2;
  uint64_t v4;
  _QWORD *v5;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  v4 = dword_1013FFA54;
  a2;
  v5 = (_QWORD *)swift_task_alloc(v4);
  v2[4] = v5;
  *v5 = v2;
  v5[1] = sub_1005B3DFC;
  return sub_1009BB884();
}

uint64_t sub_1009BBC44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  void (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  char *v45;
  id v46;
  char *v47;
  id v48;
  void *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  os_unfair_lock_s *v53;
  id v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, char *, _QWORD *);
  char *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t Strong;
  void *v72;
  _QWORD *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  void *v77;
  char *v78;
  id v79;
  id v80;
  __n128 v81;
  char *v82;
  unint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char *v86;
  uint64_t v87;
  char *v88;
  _QWORD *v89;
  __n128 v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  _QWORD *v119;
  uint64_t v120;
  double *v121;
  _QWORD aBlock[5];
  _QWORD *v123;

  v114 = a2;
  v120 = a1;
  v2 = type metadata accessor for CRLAssetData(0);
  __chkstk_darwin(v2);
  v113 = (char *)&v97 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = sub_1004B804C(&qword_1013FFA58);
  __chkstk_darwin(v118);
  v119 = (char **)((char *)&v97 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  v117 = (char *)&v97 - v6;
  v103 = sub_1004B804C(&qword_1013FFA60);
  __chkstk_darwin(v103);
  v104 = (uint64_t *)((char *)&v97 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v109 = *(_QWORD *)(v8 - 8);
  v110 = v8;
  __chkstk_darwin(v8);
  v108 = (char *)&v97 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = type metadata accessor for DispatchQoS(0);
  v106 = *(_QWORD *)(v107 - 8);
  __chkstk_darwin(v107);
  v105 = (char *)&v97 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1004B804C(&qword_1013FFA68);
  v116 = *(_QWORD *)(v11 - 8);
  v12 = *(_QWORD *)(v116 + 64);
  __chkstk_darwin(v11);
  v115 = (char *)&v97 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v97 - v14;
  v16 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v16);
  v18 = (char *)&v97 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for URL(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(_QWORD *)(v20 + 64);
  __chkstk_darwin(v19);
  __chkstk_darwin(v22);
  v24 = (char *)&v97 - v23;
  v26 = __chkstk_darwin(v25);
  v28 = (char *)&v97 - v27;
  if ((static Task<>.isCancelled.getter(v26) & 1) != 0)
  {
LABEL_6:
    v33 = objc_msgSend((id)objc_opt_self(NSError), "crl_errorWithCode:userInfo:", 4, 0);
    v35 = (uint64_t)v117;
    v34 = v118;
    *(_QWORD *)v117 = v33;
    swift_storeEnumTagMultiPayload(v35, v34, 1);
    v36 = v119;
    sub_1004CB7BC(v35, (uint64_t)v119, &qword_1013FFA58);
    if (swift_getEnumCaseMultiPayload(v36, v34) == 1)
    {
      aBlock[0] = *v36;
      CheckedContinuation.resume(throwing:)(aBlock, v11);
    }
    else
    {
      v37 = (uint64_t)v113;
      sub_10078DF08((uint64_t)v36, (uint64_t)v113);
      CheckedContinuation.resume(returning:)(v37, v11);
    }
    return sub_1004CB800(v35, &qword_1013FFA58);
  }
  v102 = v18;
  v97 = v24;
  v98 = v21;
  v99 = v12;
  v100 = v15;
  v101 = (char *)&v97 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = v28;
  v112 = v11;
  v29 = v114;
  v30 = v114 + OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__url;
  v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48);
  if (v31(v114 + OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__url, 1, v19) == 1)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"_createAssetData()", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLPreinsertionAssetWrapper.swift", 99, 2, 99, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_createAssetData()", 18, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLPreinsertionAssetWrapper.swift", 99, 2u, 99, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  }
  v32 = (uint64_t)v102;
  sub_1004CB7BC(v30, (uint64_t)v102, &qword_1013E04D0);
  if (v31(v32, 1, v19) == 1)
  {
    sub_1004CB800(v32, &qword_1013E04D0);
    v11 = v112;
    goto LABEL_6;
  }
  v39 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 32);
  v119 = (_QWORD *)v19;
  v39(v111, v32, v19);
  v40 = *(_QWORD *)(v29 + OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__filename + 8);
  v113 = *(char **)(v29 + OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__filename);
  v41 = (char *)objc_msgSend(*(id *)(v29 + OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__owner), "store", swift_bridgeObjectRetain(v40).n128_f64[0]);
  v42 = *(_QWORD *)&v41[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v42 + 16));
  v43 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
  v44 = *(void **)&v41[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  if (v44)
  {
    v45 = *(char **)&v41[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  }
  else
  {
    v46 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager(0));
    v47 = v41;
    v48 = sub_100C7EE84((uint64_t)v47);

    v49 = *(void **)&v41[v43];
    *(_QWORD *)&v41[v43] = v48;
    v45 = (char *)v48;

    v44 = 0;
  }
  v50 = v100;
  v51 = v99;
  v52 = v97;
  v53 = *(os_unfair_lock_s **)(v42 + 16);
  v54 = v44;
  os_unfair_lock_unlock(v53);

  v55 = v116;
  v56 = *(void (**)(char *, uint64_t, uint64_t))(v116 + 16);
  v57 = v112;
  v56(v50, v120, v112);
  v56(v115, (uint64_t)v50, v57);
  v58 = *(unsigned __int8 *)(v55 + 80);
  v59 = (v58 + 16) & ~v58;
  v117 = (char *)swift_allocObject(&unk_10128E658, v59 + v51, v58 | 7);
  (*(void (**)(char *, char *, uint64_t))(v55 + 32))(&v117[v59], v50, v57);
  v60 = *(void (**)(char *, char *, _QWORD *))(v20 + 16);
  v61 = v52;
  v62 = v52;
  v63 = v111;
  v64 = (uint64_t)v119;
  v60(v61, v111, v119);
  v118 = v20;
  v65 = *(unsigned __int8 *)(v20 + 80);
  v66 = (v65 + 16) & ~v65;
  v67 = v66 + v98;
  v68 = v65 | 7;
  v120 = swift_allocObject(&unk_10128E680, v66 + v98, v65 | 7);
  v39((char *)(v120 + v66), (uint64_t)v62, v64);
  v69 = v101;
  v60(v101, v63, (_QWORD *)v64);
  v70 = swift_allocObject(&unk_10128E6A8, v67, v68);
  v39((char *)(v70 + v66), (uint64_t)v69, v64);
  Strong = swift_unknownObjectWeakLoadStrong(&v45[OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_store]);
  if (Strong)
  {
    v72 = (void *)Strong;
    v114 = *(_QWORD *)&v45[OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_writeAssetFileQueue];
    v73 = (_QWORD *)swift_allocObject(&unk_10128E6D0, 96, 7);
    v74 = v120;
    v73[2] = sub_1009BDC3C;
    v73[3] = v74;
    v73[4] = v113;
    v73[5] = v40;
    v73[6] = v45;
    v73[7] = sub_1009BDC5C;
    v73[8] = v70;
    v73[9] = v72;
    v75 = v117;
    v73[10] = sub_1009BDCE4;
    v73[11] = v75;
    aBlock[4] = sub_1009BDE20;
    v123 = v73;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(_QWORD *)"";
    aBlock[2] = sub_1005D2FC0;
    aBlock[3] = &unk_10128E6E8;
    v76 = v40;
    v77 = _Block_copy(aBlock);
    swift_bridgeObjectRetain_n(v76, 2);
    swift_retain(v74);
    v78 = v45;
    swift_retain(v70);
    v79 = v72;
    v113 = v45;
    v80 = v79;
    v81 = swift_retain(v75);
    v82 = v105;
    static DispatchQoS.unspecified.getter(v81);
    v121 = _swiftEmptyArrayStorage;
    v83 = sub_1004CB65C();
    v84 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
    v85 = sub_100503E88();
    v86 = v108;
    v87 = v110;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v121, v84, v85, v110, v83);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v82, v86, v77);
    _Block_release(v77);

    (*(void (**)(char *, uint64_t))(v109 + 8))(v86, v87);
    v88 = v82;
    v45 = v113;
    (*(void (**)(char *, uint64_t))(v106 + 8))(v88, v107);
    v89 = v123;
    swift_release(v75);
    swift_release(v70);
    swift_bridgeObjectRelease();
    swift_release(v120);
    v90 = swift_release(v89);
    v91 = (uint64_t)v115;
  }
  else
  {
    swift_bridgeObjectRetain(v40);
    sub_100757E04(&_mh_execute_header, (uint64_t)"_saveAsset(filename:assetUUIDProvider:assetPersistenceProvider:completion:)", 75, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLAssetFileManager.swift", 91, 2, 422, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_saveAsset(filename:assetUUIDProvider:assetPersistenceProvider:completion:)", 75, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLAssetFileManager.swift", 91, 2u, 422, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    v92 = sub_1005D2A0C();
    v93 = swift_allocError(&type metadata for CRLAssetError, v92, 0, 0);
    *v94 = 0xD000000000000028;
    v94[1] = 0x8000000100FE7BE0;
    v95 = (uint64_t)v104;
    *v104 = v93;
    swift_storeEnumTagMultiPayload(v95, v103, 1);
    v96 = (uint64_t)v115;
    sub_1009BC640(v95, (uint64_t)v115);
    sub_1004CB800(v95, &qword_1013FFA60);
    swift_release(v117);
    swift_release(v70);
    swift_bridgeObjectRelease();
    v90 = swift_release(v120);
    v91 = v96;
  }
  (*(void (**)(uint64_t, uint64_t, __n128))(v116 + 8))(v91, v112, v90);
  swift_bridgeObjectRelease();

  return (*(uint64_t (**)(char *, _QWORD *))(v118 + 8))(v111, v119);
}

uint64_t sub_1009BC640(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  char *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v53 = a1;
  v3 = type metadata accessor for CRLAssetData(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = sub_1004B804C(&qword_1013FFA58);
  __chkstk_darwin(v54);
  v7 = (uint64_t *)((char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v8);
  v10 = (uint64_t *)((char *)&v48 - v9);
  __chkstk_darwin(v11);
  v52 = (uint64_t *)((char *)&v48 - v12);
  __chkstk_darwin(v13);
  v51 = (uint64_t)&v48 - v14;
  v15 = sub_1004B804C(&qword_1013FFA70);
  __chkstk_darwin(v15);
  v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v48 - v19;
  v21 = sub_1004B804C(&qword_1013FFA60);
  __chkstk_darwin(v21);
  v23 = (uint64_t *)((char *)&v48 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1004CB7BC(v53, (uint64_t)v23, &qword_1013FFA60);
  if (swift_getEnumCaseMultiPayload(v23, v21) == 1)
  {
    *v10 = *v23;
    v24 = v54;
    swift_storeEnumTagMultiPayload(v10, v54, 1);
    sub_1004CB7BC((uint64_t)v10, (uint64_t)v7, &qword_1013FFA58);
    if (swift_getEnumCaseMultiPayload(v7, v24) == 1)
    {
      v55 = *v7;
      v25 = sub_1004B804C(&qword_1013FFA68);
      CheckedContinuation.resume(throwing:)(&v55, v25);
    }
    else
    {
      sub_10078DF08((uint64_t)v7, (uint64_t)v5);
      v42 = sub_1004B804C(&qword_1013FFA68);
      CheckedContinuation.resume(returning:)(v5, v42);
    }
    v43 = &qword_1013FFA58;
    v44 = (uint64_t)v10;
  }
  else
  {
    v53 = a2;
    v26 = *(int *)(v15 + 48);
    v27 = (uint64_t *)&v20[v26];
    v28 = *(int *)(v15 + 64);
    v29 = &v20[v28];
    v30 = (_QWORD *)((char *)v23 + v26);
    v49 = v5;
    v50 = (char *)v23 + v28;
    v31 = type metadata accessor for UUID(0);
    v32 = *(_QWORD *)(v31 - 8);
    (*(void (**)(char *, _QWORD *, uint64_t))(v32 + 32))(v20, v23, v31);
    v33 = *v30;
    v34 = v30[1];
    *v27 = v33;
    v27[1] = v34;
    v35 = type metadata accessor for URL(0);
    v36 = *(_QWORD *)(v35 - 8);
    (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v29, v50, v35);
    v37 = (uint64_t)&v17[*(int *)(v15 + 64)];
    (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v17, v20, v31);
    (*(void (**)(uint64_t, char *, uint64_t))(v36 + 16))(v37, v29, v35);
    swift_bridgeObjectRetain(v34);
    v38 = v51;
    sub_100C7634C((uint64_t)v17, v33, v34, v37, v51);
    v39 = v54;
    swift_storeEnumTagMultiPayload(v38, v54, 0);
    v40 = v52;
    sub_1004CB7BC(v38, (uint64_t)v52, &qword_1013FFA58);
    if (swift_getEnumCaseMultiPayload(v40, v39) == 1)
    {
      v55 = *v40;
      v41 = sub_1004B804C(&qword_1013FFA68);
      CheckedContinuation.resume(throwing:)(&v55, v41);
    }
    else
    {
      v45 = (uint64_t)v49;
      sub_10078DF08((uint64_t)v40, (uint64_t)v49);
      v46 = sub_1004B804C(&qword_1013FFA68);
      CheckedContinuation.resume(returning:)(v45, v46);
    }
    sub_1004CB800(v38, &qword_1013FFA58);
    v43 = &qword_1013FFA70;
    v44 = (uint64_t)v20;
  }
  return sub_1004CB800(v44, v43);
}

id sub_1009BCA2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  __n128 v21;
  void *v22;
  id v23;
  uint64_t v24;
  unsigned int (*v25)(uint64_t, uint64_t, uint64_t, __n128);
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  void *v28;
  double v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  char *v36;
  id v37;
  void *v38;
  id v39;
  os_unfair_lock_s *v40;
  id v41;
  void (*v42)(char *, char *, uint64_t);
  _QWORD *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  void (*v50)(uint64_t, uint64_t, uint64_t);
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  _QWORD v64[2];
  _QWORD *v65;
  void *v66;
  id v67;
  char *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;

  v1 = type metadata accessor for UUID(0);
  __chkstk_darwin(v1);
  v3 = (char *)v64 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRLAssetData(0);
  __chkstk_darwin(v4);
  v6 = (char *)v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v7);
  v9 = (char *)v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD **)(v10 - 8);
  v12 = v11[8];
  __chkstk_darwin(v10);
  __chkstk_darwin(v13);
  v15 = (char *)v64 - v14;
  __chkstk_darwin(v16);
  v21 = __chkstk_darwin(v17);
  v22 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__alreadyInsertedAsset);
  v23 = v22;
  if (!v22)
  {
    v71 = v20;
    v72 = v19;
    v73 = v3;
    v74 = (char *)v64 - v18;
    v70 = v6;
    v24 = v0 + OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__url;
    v25 = (unsigned int (*)(uint64_t, uint64_t, uint64_t, __n128))v11[6];
    if (v25(v0 + OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__url, 1, v10, v21) == 1)
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"synchronouslyCreateAsset()", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLPreinsertionAssetWrapper.swift", 99, 2, 124, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"synchronouslyCreateAsset()", 26, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLPreinsertionAssetWrapper.swift", 99, 2u, 124, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    }
    sub_1004CB7BC(v24, (uint64_t)v9, &qword_1013E04D0);
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v25)(v9, 1, v10) == 1)
    {
      sub_1004CB800((uint64_t)v9, &qword_1013E04D0);
      sub_100757E04(&_mh_execute_header, (uint64_t)"synchronouslyCreateAsset()", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLPreinsertionAssetWrapper.swift", 99, 2, 129, "Preinsertion asset wrapper missing necessary data from init", 59, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"synchronouslyCreateAsset()", 26, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLPreinsertionAssetWrapper.swift", 99, 2u, 129, (uint64_t)"Preinsertion asset wrapper missing necessary data from init", 59, 2u);
      v23 = 0;
    }
    else
    {
      v26 = (void (*)(char *, char *, uint64_t))v11[4];
      v26(v74, v9, v10);
      v27 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__filename + 8);
      v68 = *(char **)(v0 + OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__filename);
      v28 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__owner);
      v64[0] = swift_getObjectType(v28);
      *(_QWORD *)&v29 = swift_bridgeObjectRetain(v27).n128_u64[0];
      v64[1] = v28;
      v30 = (char *)objc_msgSend(v28, "store", v29);
      v31 = *(_QWORD *)&v30[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v31 + 16));
      v32 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
      v33 = *(void **)&v30[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
      v66 = 0;
      v69 = v27;
      if (v33)
      {
        v67 = v33;
      }
      else
      {
        v34 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager(0));
        v35 = v31;
        v36 = v30;
        v37 = sub_100C7EE84((uint64_t)v36);

        v38 = *(void **)&v30[v32];
        *(_QWORD *)&v30[v32] = v37;
        v39 = v37;
        v31 = v35;
        v67 = v39;

        v33 = 0;
      }
      v40 = *(os_unfair_lock_s **)(v31 + 16);
      v41 = v33;
      os_unfair_lock_unlock(v40);

      v42 = (void (*)(char *, char *, uint64_t))v11[2];
      v43 = v11;
      v44 = v74;
      v42(v15, v74, v10);
      v65 = v43;
      v45 = *((unsigned __int8 *)v43 + 80);
      v46 = (v45 + 16) & ~v45;
      v47 = v46 + v12;
      v48 = v45 | 7;
      v49 = (void (*)(char *, char *, uint64_t))swift_allocObject(&unk_10128E608, v46 + v12, v45 | 7);
      v26((char *)v49 + v46, v15, v10);
      v50 = (void (*)(uint64_t, uint64_t, uint64_t))v26;
      v51 = v71;
      v42(v71, v44, v10);
      v52 = swift_allocObject(&unk_10128E630, v47, v48);
      v50(v52 + v46, (uint64_t)v51, v10);
      v53 = v69;
      swift_bridgeObjectRetain(v69);
      v55 = v72;
      v54 = (uint64_t)v73;
      v56 = v67;
      sub_100C7A2FC((uint64_t)v73, v72, v68, v53, (void (*)(uint64_t, char *, uint64_t))sub_1009BDC3C, v49, (char *)sub_1009BDC5C, v52);
      v58 = v57;
      v60 = v59;

      swift_release(v52);
      swift_bridgeObjectRelease_n(v53, 2);
      swift_release(v49);
      v61 = (uint64_t)v70;
      sub_100C7634C(v54, v58, v60, v55, (uint64_t)v70);
      v23 = sub_1007B2368(v61);
      sub_1005CC194(v61);
      ((void (*)(char *, uint64_t))v65[1])(v74, v10);
      v22 = v66;
    }
  }
  v62 = v22;
  return v23;
}

CGDataProviderRef sub_1009BD3C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  char *v12;
  uint64_t v13;
  CGDataProviderRef v15;
  NSURL *v16;
  const __CFURL *v17;
  const __CFURL *v18;
  uint64_t v19;

  v1 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v1);
  v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(char **)(v0 + OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__alreadyInsertedAsset);
  if (v8)
  {
    v9 = *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 24];
    v10 = *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 32];
    sub_1004BB5A4(&v8[OBJC_IVAR____TtC8Freeform8CRLAsset_storage], v9);
    v11 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 40);
    v12 = v8;
    v13 = v11(v9, v10);

    return (CGDataProviderRef)v13;
  }
  else
  {
    sub_1004CB7BC(v0 + OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__url, (uint64_t)v3, &qword_1013E04D0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
    {
      sub_1004CB800((uint64_t)v3, &qword_1013E04D0);
      return 0;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
      URL._bridgeToObjectiveC()(v16);
      v18 = v17;
      v15 = CGDataProviderCreateWithURL(v17);

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
    return v15;
  }
}

CGImageSourceRef sub_1009BD574()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  char *v12;
  CGDataProvider *v13;
  NSURL *v14;
  const __CFURL *v15;
  const __CFURL *v16;
  CGImageSourceRef v17;
  uint64_t v19;

  v1 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v1);
  v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(char **)(v0 + OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__alreadyInsertedAsset);
  if (!v8)
  {
    sub_1004CB7BC(v0 + OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__url, (uint64_t)v3, &qword_1013E04D0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
    {
      sub_1004CB800((uint64_t)v3, &qword_1013E04D0);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
      URL._bridgeToObjectiveC()(v14);
      v16 = v15;
      v13 = CGDataProviderCreateWithURL(v15);

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      if (v13)
        goto LABEL_7;
    }
    return 0;
  }
  v9 = *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 24];
  v10 = *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 32];
  sub_1004BB5A4(&v8[OBJC_IVAR____TtC8Freeform8CRLAsset_storage], v9);
  v11 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 40);
  v12 = v8;
  v13 = (CGDataProvider *)v11(v9, v10);

  if (!v13)
    return 0;
LABEL_7:
  v17 = CGImageSourceCreateWithDataProvider(v13, 0);

  return v17;
}

CGDataProvider *sub_1009BD740()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  char *v12;
  CGDataProvider *ImageAtIndex;
  NSURL *v14;
  const __CFURL *v15;
  const __CFURL *v16;
  CGImageSource *v17;
  uint64_t v19;

  v1 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v1);
  v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(char **)(v0 + OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__alreadyInsertedAsset);
  if (v8)
  {
    v9 = *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 24];
    v10 = *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 32];
    sub_1004BB5A4(&v8[OBJC_IVAR____TtC8Freeform8CRLAsset_storage], v9);
    v11 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 40);
    v12 = v8;
    ImageAtIndex = (CGDataProvider *)v11(v9, v10);

    if (!ImageAtIndex)
      return ImageAtIndex;
    goto LABEL_7;
  }
  sub_1004CB7BC(v0 + OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__url, (uint64_t)v3, &qword_1013E04D0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_1004CB800((uint64_t)v3, &qword_1013E04D0);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
  URL._bridgeToObjectiveC()(v14);
  v16 = v15;
  ImageAtIndex = CGDataProviderCreateWithURL(v15);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (ImageAtIndex)
  {
LABEL_7:
    v17 = CGImageSourceCreateWithDataProvider(ImageAtIndex, 0);

    if (v17)
    {
      ImageAtIndex = CGImageSourceCreateImageAtIndex(v17, 0, 0);

      return ImageAtIndex;
    }
    return 0;
  }
  return ImageAtIndex;
}

id sub_1009BD9A0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLPreinsertionAssetWrapper(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1009BDA48()
{
  return type metadata accessor for CRLPreinsertionAssetWrapper(0);
}

uint64_t type metadata accessor for CRLPreinsertionAssetWrapper(uint64_t a1)
{
  uint64_t result;

  result = qword_1013FFA38;
  if (!qword_1013FFA38)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLPreinsertionAssetWrapper);
  return result;
}

void sub_1009BDA8C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  sub_10067E7A0(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = &unk_100F1FB10;
    v4[2] = &unk_100F1FB28;
    v4[3] = &unk_100F1FB40;
    v4[4] = &unk_100F1FB40;
    swift_updateClassMetadata2(a1, 256, 5, v4, a1 + 80);
  }
}

id sub_1009BDB18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5)
{
  char *v8;
  char *v9;
  char *v10;
  __n128 v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  objc_super v20;

  if (a3)
  {
    v8 = &a5[OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__filename];
    *(_QWORD *)v8 = a2;
    *((_QWORD *)v8 + 1) = a3;
    v9 = a5;
  }
  else
  {
    v10 = a5;
    v12 = URL.lastPathComponent.getter(v11);
    v13 = (uint64_t *)&v10[OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__filename];
    *v13 = v12;
    v13[1] = v14;
  }
  v15 = &a5[OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__url];
  v16 = type metadata accessor for URL(0);
  v17 = *(_QWORD *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v15, a1, v16);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v16);
  *(_QWORD *)&a5[OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__owner] = a4;
  *(_QWORD *)&a5[OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__alreadyInsertedAsset] = 0;
  *(_QWORD *)&a5[OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__tempDir] = 0;
  swift_unknownObjectRetain(a4);

  v20.receiver = a5;
  v20.super_class = (Class)type metadata accessor for CRLPreinsertionAssetWrapper(0);
  v18 = objc_msgSendSuper2(&v20, "init");
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(a1, v16);
  return v18;
}

uint64_t sub_1009BDC3C()
{
  return sub_1009BDD28((uint64_t (*)(uint64_t))sub_100C7ABD8);
}

uint64_t sub_1009BDC5C(uint64_t a1)
{
  return sub_1009BDD80(a1, (uint64_t (*)(uint64_t, uint64_t))sub_100C7ABEC);
}

uint64_t sub_1009BDC78(uint64_t a1)
{
  uint64_t v1;

  return sub_1009BBC44(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1009BDC80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_1004B804C(&qword_1013FFA68);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1009BDCE4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_1004B804C(&qword_1013FFA68) - 8) + 80);
  return sub_1009BC640(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_1009BDD28(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for URL(0) - 8) + 80);
  return a1(v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_1009BDD80(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for URL(0) - 8) + 80);
  return a2(a1, v2 + ((v5 + 16) & ~v5));
}

uint64_t sub_1009BDDD4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));

  swift_release(*(_QWORD *)(v0 + 64));
  swift_release(*(_QWORD *)(v0 + 88));
  return swift_deallocObject(v0, 96, 7);
}

uint64_t sub_1009BDE20()
{
  uint64_t v0;

  return sub_100C7AFD4(*(void (**)(__n128))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(void **)(v0 + 48), *(void (**)(char *))(v0 + 56), *(_QWORD *)(v0 + 64), *(void **)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88));
}

double sub_1009BDE54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

double sub_1009BDE64(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_1009BDE6C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1009BDE98()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc(dword_1013FFA7C);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1004CF80C;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_1013FFA78 + dword_1013FFA78))(v2, v3);
}

id sub_1009BDF04(char *a1, uint64_t a2)
{
  char *v2;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  objc_super v17;

  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__alreadyInsertedAsset] = a1;
  v5 = &a1[OBJC_IVAR____TtC8Freeform8CRLAsset_storage];
  v6 = *((_QWORD *)v5 + 3);
  v7 = *((_QWORD *)v5 + 4);
  sub_1004BB5A4(v5, v6);
  v8 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 16);
  v9 = v2;
  v10 = a1;
  v11 = v8(v6, v7);
  v12 = (uint64_t *)&v9[OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__filename];
  *v12 = v11;
  v12[1] = v13;
  v14 = &v9[OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__url];
  v15 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  *(_QWORD *)&v9[OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__owner] = a2;
  *(_QWORD *)&v9[OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__tempDir] = 0;
  swift_unknownObjectRetain(a2);

  v17.receiver = v9;
  v17.super_class = (Class)type metadata accessor for CRLPreinsertionAssetWrapper(0);
  return objc_msgSendSuper2(&v17, "init");
}

double sub_1009BE010()
{
  char *v0;
  char *v1;
  id v2;
  uint64_t v3;
  id v4;
  simd_float4 *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  NSString v10;
  NSString v11;
  NSString v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double result;
  __n128 v18;

  v1 = v0;
  v2 = objc_msgSend(v0, "layout");
  v3 = type metadata accessor for CRLUSDZLayout();
  swift_dynamicCastClassUnconditional(v2, v3, 0, 0, 0);
  sub_1006D0768();

  v4 = objc_msgSend(v0, "layout");
  v5 = (simd_float4 *)(swift_dynamicCastClassUnconditional(v4, v3, 0, 0, 0)
                     + OBJC_IVAR____TtC8Freeform13CRLUSDZLayout_orientationSource);
  v18 = (__n128)matrix_identity_float4x4.columns[3];
  if ((v5[1].i8[0] & 1) != 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"dynamicPoseChangeDidUpdateToValue(_:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZLayout.swift", 84, 2, 323, "Unexpected dynamic pose change.", 31, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"dynamicPoseChangeDidUpdateToValue(_:)", 37, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZLayout.swift", 84, 2u, 323, (uint64_t)"Unexpected dynamic pose change.", 31, 2u);
  }
  else
  {
    *v5 = matrix_identity_float4x4.columns[3];
    v5[1].i8[0] = 0;
    v6 = sub_1006CF414();
    if (v6)
    {
      v7 = v6;
      objc_msgSend(v6, "processChangedProperty:", 50);

      v4 = v7;
    }
  }

  if ((*(unsigned __int8 *)(*(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_knobController]
                           + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_visibilityState) | 4) != 4)
    sub_100BD5AEC(1);
  v8 = objc_msgSend(v1, "interactiveCanvasController");
  objc_msgSend(v8, "layoutIfNeeded");

  v9 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v10 = String._bridgeToObjectiveC()();
  v11 = String._bridgeToObjectiveC()();
  v12 = String._bridgeToObjectiveC()();
  v13 = objc_msgSend(v9, "localizedStringForKey:value:table:", v10, v11, v12);

  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v16 = v15;

  sub_1009D22A4(v14, v16, v18);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

id sub_1009BE300(void *a1, void *a2)
{
  _BYTE *v2;
  uint64_t v5;
  id v6;
  _BYTE *v7;
  uint64_t v8;
  id v9;
  char v10;
  char v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  objc_class *v17;
  id v18;
  _QWORD v20[5];
  objc_super v21;

  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_errorRecoveryAttempts] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_maxErrorRecoveryAttempts] = 10;
  v2[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_suppressInvalidateForRenderingStateChange] = 0;
  v2[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_hideKnobsDueToBoundsUpdate] = 0;
  v5 = OBJC_IVAR____TtC8Freeform10CRLUSDZRep_knobController;
  v6 = objc_allocWithZone((Class)type metadata accessor for CRLUSDZKnobController());
  v7 = v2;
  *(_QWORD *)&v2[v5] = objc_msgSend(v6, "init");
  v7[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_waitingToHideMiniFormatter] = 0;
  v7[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_animationIsPaused] = 0;
  v7[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_rendererHasBeenSuspended] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_cachedContentPlatformView] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_externallySetAlpha] = 0x3FF0000000000000;
  *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_spinnerViewXConstraint] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_spinnerViewYConstraint] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform10CRLUSDZRep____lazy_storage___spinnerView] = 0;
  *(int64x2_t *)&v7[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_spinnerViewSize] = vdupq_n_s64(0x4049000000000000uLL);
  v7[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_spinnerViewHiddenBecauseTooSmall] = 0;
  v7[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_isZooming] = 0;
  v7[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_isResizing] = 0;
  v7[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_knobsWereVisibleBeforeDynamicOperation] = 0;
  v7[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_shouldUpdateRenderingStateForSceneCapture] = 0;
  v7[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_didAddNotificationCenterAddObservers] = 0;
  v8 = OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingStrategy;
  v7[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingStrategy] = 4;
  if (!a2)
    goto LABEL_9;
  v9 = a2;
  if (!objc_msgSend(v9, "isCanvasInteractive"))
  {

LABEL_9:
    v7[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_isInteractive] = 0;
    goto LABEL_10;
  }
  v7[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_isInteractive] = 1;
  v20[3] = &type metadata for CRLFeatureFlags;
  v20[4] = sub_1004DB6DC();
  LOBYTE(v20[0]) = 20;
  v10 = isFeatureEnabled(_:)(v20);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v20);
  if ((v10 & 1) != 0)
  {
    if (qword_1013DD120 != -1)
      swift_once(&qword_1013DD120, sub_1007B58D0);
    v11 = byte_10147F5F8;

    if ((v11 & 1) != 0)
      v7[v8] = 3;
    else
      v7[v8] = 1;
  }
  else
  {

  }
LABEL_10:
  v12 = &v7[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_posterLoadingState];
  v13 = type metadata accessor for CRLUSDZRep.PosterLoadingState(0);
  swift_storeEnumTagMultiPayload(v12, v13, 3);
  v14 = &v7[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_assetLoadingState];
  v15 = type metadata accessor for CRLUSDZRep.AssetLoadingState(0);
  swift_storeEnumTagMultiPayload(v14, v15, 4);
  v16 = &v7[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState];
  *(_QWORD *)v16 = 0;
  v16[8] = -64;

  v17 = (objc_class *)type metadata accessor for CRLUSDZRep(0);
  v21.receiver = v7;
  v21.super_class = v17;
  v18 = objc_msgSendSuper2(&v21, "initWithLayout:canvas:", a1, a2);
  sub_1009BFA40();
  sub_1009BFC4C();
  sub_1009CFF0C();

  return v18;
}

BOOL sub_1009BE62C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  int v3;

  v2 = *a1;
  v3 = *a2;
  if (v2 == 4)
    return v3 == 4;
  if (v3 == 4)
    return 0;
  return v2 == v3;
}

uint64_t sub_1009BE668@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  void **v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t (*v10)(_QWORD);
  void *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;

  v2 = v1;
  v4 = type metadata accessor for CRLUSDZRep.PosterLoadingState(0);
  __chkstk_darwin(v4);
  v6 = (void **)((char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  v9 = (char *)&v17 - v8;
  sub_1004B8460(v2, (uint64_t)&v17 - v8, v10);
  if (swift_getEnumCaseMultiPayload(v9, v4) == 2)
  {
    sub_1004B8460((uint64_t)v9, (uint64_t)v6, type metadata accessor for CRLUSDZRep.PosterLoadingState);
    v11 = *v6;
    v12 = (uint64_t)v6 + *(int *)(sub_1004B804C(&qword_1013FFCE8) + 48);
    v13 = type metadata accessor for CRLUSDZRep.PosterLoadingState.LoadingError(0);
    if (!swift_getEnumCaseMultiPayload(v12, v13))
    {
      v14 = (char *)a1 + *(int *)(sub_1004B804C(&qword_1013FFB78) + 48);
      v15 = type metadata accessor for UUID(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v14, v12, v15);
      *a1 = v11;
      swift_storeEnumTagMultiPayload(a1, v4, 0);
      return sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLUSDZRep.PosterLoadingState);
    }
    sub_1004B84A4(v12, type metadata accessor for CRLUSDZRep.PosterLoadingState.LoadingError);

  }
  sub_1004B8460(v2, (uint64_t)a1, type metadata accessor for CRLUSDZRep.PosterLoadingState);
  return sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLUSDZRep.PosterLoadingState);
}

uint64_t sub_1009BE7E0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  void **v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t (*v10)(_QWORD);
  void *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;

  v2 = v1;
  v4 = type metadata accessor for CRLUSDZRep.AssetLoadingState(0);
  __chkstk_darwin(v4);
  v6 = (void **)((char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  v9 = (char *)&v17 - v8;
  sub_1004B8460(v2, (uint64_t)&v17 - v8, v10);
  if (swift_getEnumCaseMultiPayload(v9, v4) == 3)
  {
    sub_1004B8460((uint64_t)v9, (uint64_t)v6, type metadata accessor for CRLUSDZRep.AssetLoadingState);
    v11 = *v6;
    v12 = (uint64_t)v6 + *(int *)(sub_1004B804C(&qword_1013FFB90) + 48);
    v13 = type metadata accessor for CRLUSDZRep.AssetLoadingState.LoadingError(0);
    if (!swift_getEnumCaseMultiPayload(v12, v13))
    {
      v14 = (char *)a1 + *(int *)(sub_1004B804C(&qword_1013FFB78) + 48);
      v15 = type metadata accessor for UUID(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v14, v12, v15);
      *a1 = v11;
      swift_storeEnumTagMultiPayload(a1, v4, 0);
      return sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLUSDZRep.AssetLoadingState);
    }
    sub_1004B84A4(v12, type metadata accessor for CRLUSDZRep.AssetLoadingState.LoadingError);

  }
  sub_1004B8460(v2, (uint64_t)a1, type metadata accessor for CRLUSDZRep.AssetLoadingState);
  return sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLUSDZRep.AssetLoadingState);
}

uint64_t sub_1009BE958()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t (*v4)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  id v8;
  NSString v9;
  NSString v10;
  id v11;
  id v12;
  NSString v13;
  NSString v14;
  id v15;
  _QWORD v17[3];
  _BYTE v18[8];

  v1 = type metadata accessor for CRLUSDZRep.AssetLoadingState.LoadingError(0);
  __chkstk_darwin(v1);
  v3 = (_QWORD *)((char *)v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1004B8460(v0, (uint64_t)v3, v4);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v3, v1);
  if ((EnumCaseMultiPayload - 1) >= 2)
  {
    if (EnumCaseMultiPayload)
    {
      v12 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v13 = String._bridgeToObjectiveC()();
      v14 = String._bridgeToObjectiveC()();
      v15 = objc_msgSend(v12, "localizedStringForKey:value:table:", v13, v14, 0);

      v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
    }
    else
    {
      v8 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v9 = String._bridgeToObjectiveC()();
      v10 = String._bridgeToObjectiveC()();
      v11 = objc_msgSend(v8, "localizedStringForKey:value:table:", v9, v10, 0);

      v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
      sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLUSDZRep.AssetLoadingState.LoadingError);
    }
  }
  else
  {
    v6 = *v3;
    swift_getErrorValue(v6, v18, v17);
    v7 = Error.localizedDescription.getter(v17[1], v17[2]);
    swift_errorRelease(v6);
  }
  return v7;
}

uint64_t sub_1009BEB88(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2;
  int v3;
  void *v4;
  uint64_t v5;
  double v6;

  v2 = a1;
  if ((a2 & 0xC0) == 0x40 && (v3 = *(unsigned __int8 *)(a1 + 48), (v3 & 0x30) == 0x10))
  {
    v4 = *(void **)(a1 + 40);
    v5 = v3 & 0xFFFFFFCF;
    v6 = sub_1009D3B34(v4, v3 & 0xCF);
    v2 = sub_1009BEB88(v4, v5, v6);
    sub_1009D3B68(v4, v5);
  }
  else
  {
    sub_1009D3B34((id)a1, a2);
  }
  return v2;
}

id sub_1009BEC18()
{
  char *v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  char *v4;
  id result;
  uint64_t v6;
  char *v7;
  char v9[24];

  v1 = type metadata accessor for CRLUSDZRep.PosterLoadingState(0);
  *(_QWORD *)&v2 = __chkstk_darwin(v1).n128_u64[0];
  v4 = &v9[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  result = objc_msgSend(v0, "hasBeenRemoved", v2);
  if ((result & 1) == 0)
  {
    v6 = (uint64_t)&v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_posterLoadingState];
    swift_beginAccess(&v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_posterLoadingState], v9, 0, 0);
    sub_1004B8460(v6, (uint64_t)v4, type metadata accessor for CRLUSDZRep.PosterLoadingState);
    v7 = (char *)&loc_1009BECC4 + dword_1009BEE14[swift_getEnumCaseMultiPayload(v4, v1)];
    __asm { BR              X10 }
  }
  return result;
}

void sub_1009BEE24()
{
  char *v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t inited;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  char v21[112];
  char v22[24];

  v1 = *(void **)&v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_cachedContentPlatformView];
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_cachedContentPlatformView] = 0;

  if ((v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_suppressInvalidateForRenderingStateChange] & 1) == 0
    && v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_isInteractive] == 1)
  {
    v2 = objc_msgSend(v0, "interactiveCanvasController");
    objc_msgSend(v2, "invalidateContentLayersForRep:", v0);

    objc_msgSend(v0, "setNeedsDisplay");
    if (qword_1013DD7E8 != -1)
      swift_once(&qword_1013DD7E8, sub_100A04074);
    swift_beginAccess(&static OS_os_log.crlThreeDimensionalObjects, v22, 0, 0);
    v3 = (void *)static OS_os_log.crlThreeDimensionalObjects;
    v4 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v4, v21);
    *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
    v6 = v3;
    v7 = objc_msgSend(v0, "debugDescription");
    v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
    v10 = v9;

    *(_QWORD *)(inited + 56) = &type metadata for String;
    v11 = sub_1004CFC2C();
    *(_QWORD *)(inited + 64) = v11;
    *(_QWORD *)(inited + 32) = v8;
    *(_QWORD *)(inited + 40) = v10;
    v12 = &v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState];
    v13 = *(void **)&v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState];
    LOBYTE(v8) = v12[8];
    sub_1009D3B34(v13, v8);
    sub_1009BF03C((uint64_t)v13, v8);
    v15 = v14;
    v17 = v16;
    v18.n128_f64[0] = sub_1009D3B68(v13, v8);
    *(_QWORD *)(inited + 96) = &type metadata for String;
    *(_QWORD *)(inited + 104) = v11;
    *(_QWORD *)(inited + 72) = v15;
    *(_QWORD *)(inited + 80) = v17;
    v19 = static os_log_type_t.debug.getter(v18);
    sub_100A06EBC((uint64_t)v6, &_mh_execute_header, v19, "(USDZRep) [%{public}@] rendering state: %{public}@", 50, 2, inited);
    swift_setDeallocating(inited);
    v20 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 2, v20);

  }
}

void sub_1009BF03C(uint64_t a1, char a2)
{
  uint64_t v3;

  v3 = type metadata accessor for UUID(0);
  __chkstk_darwin(v3);
  __asm { BR              X10 }
}

uint64_t sub_1009BF0D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  unsigned int v10;
  int v11;
  int v12;
  uint64_t v13;
  Swift::String v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  void *v31;
  void *v32;
  __n128 v33;
  Swift::String v34;
  Swift::String v35;
  void *v36;
  id v37;
  uint64_t v38;
  void *v39;
  void *v40;
  Swift::String v41;
  Swift::String v42;
  int v43;
  Swift::String v44;
  Swift::String v45;
  uint64_t ObjectType;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  __n128 v60;
  uint64_t v61;
  void *v62;
  void *v63;
  __n128 v64;
  Swift::String v65;
  Swift::String v66;
  id v67;
  uint64_t v68;
  void *v69;
  void *v70;
  Swift::String v71;
  Swift::String v72;
  void *v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __n128 v91;
  uint64_t v92;
  void *v93;
  void *v94;
  __n128 v95;
  Swift::String v96;
  Swift::String v97;
  id v98;
  uint64_t v99;
  void *v100;
  void *v101;
  Swift::String v102;
  Swift::String v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  __n128 v119;
  uint64_t v120;
  void *v121;
  void *v122;
  __n128 v123;
  Swift::String v124;
  Swift::String v125;
  void *v126;
  id v127;
  id v128;
  uint64_t v129;
  void *v130;
  void *v131;
  Swift::String v132;
  Swift::String v133;

  v6 = *(_QWORD *)(v0 + 16);
  v7 = *(_QWORD *)(v0 + 24);
  v9 = *(void **)(v0 + 32);
  v8 = *(void **)(v0 + 40);
  v10 = *(unsigned __int8 *)(v0 + 48);
  v11 = (v10 >> 4) & 3;
  if (!v11)
  {
    *(_QWORD *)(v5 - 96) = 0;
    *(_QWORD *)(v5 - 88) = 0xE000000000000000;
    swift_unknownObjectRetain(v6);
    sub_1009D6A08(v9, v8, v10);
    _StringGuts.grow(_:)(32);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v5 - 96) = v1;
    *(_QWORD *)(v5 - 88) = 0x8000000100FE8280;
    ObjectType = swift_getObjectType(v6);
    v47 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(ObjectType, v7);
    v48 = UUID.uuidString.getter(v47);
    *(_QWORD *)(v5 - 104) = v6;
    v50 = v49;
    v51 = String.index(_:offsetBy:)(15, 8, v48, v49);
    v52 = String.subscript.getter(15, v51, v48, v50);
    v54 = v53;
    *(_QWORD *)(v5 - 112) = v8;
    v56 = v55;
    v57 = v9;
    v59 = v58;
    v60 = swift_bridgeObjectRelease();
    v61 = static String._fromSubstring(_:)(v52, v54, v56, v59, v60);
    v63 = v62;
    v64 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v4, v3, v64);
    v65._countAndFlagsBits = v61;
    v65._object = v63;
    String.append(_:)(v65);
    swift_bridgeObjectRelease();
    v66._countAndFlagsBits = 0x203A77656976202CLL;
    v66._object = (void *)0xE800000000000000;
    String.append(_:)(v66);
    v67 = objc_msgSend(v57, "description");
    v68 = static String._unconditionallyBridgeFromObjectiveC(_:)(v67);
    v70 = v69;

    v71._countAndFlagsBits = v68;
    v71._object = v70;
    String.append(_:)(v71);
    swift_bridgeObjectRelease();
    v72._countAndFlagsBits = 41;
    v72._object = (void *)0xE100000000000000;
    String.append(_:)(v72);
    v73 = v57;
    goto LABEL_7;
  }
  if (v11 != 1)
  {
    swift_unknownObjectRetain(*(_QWORD *)(v0 + 16));
    v74 = objc_msgSend(v9, "layer", sub_1009D6A08(v9, v8, v10));
    v75 = _s10MetalLayerCMa();
    v76 = swift_dynamicCastClass(v74, v75);
    *(_QWORD *)(v5 - 120) = v9;
    *(_QWORD *)(v5 - 112) = v8;
    if (!v76)
    {

      *(_QWORD *)(v5 - 96) = 0;
      *(_QWORD *)(v5 - 88) = 0xE000000000000000;
      _StringGuts.grow(_:)(33);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v5 - 96) = v1;
      *(_QWORD *)(v5 - 88) = 0x8000000100FE8280;
      v105 = swift_getObjectType(v6);
      v106 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v105, v7);
      v107 = UUID.uuidString.getter(v106);
      v108 = v6;
      v110 = v109;
      v111 = String.index(_:offsetBy:)(15, 8, v107, v109);
      v112 = String.subscript.getter(15, v111, v107, v110);
      v114 = v113;
      v116 = v115;
      v118 = v117;
      v119 = swift_bridgeObjectRelease();
      v120 = static String._fromSubstring(_:)(v112, v114, v116, v118, v119);
      v122 = v121;
      v123 = swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v4, v3, v123);
      v124._countAndFlagsBits = v120;
      v124._object = v122;
      String.append(_:)(v124);
      swift_bridgeObjectRelease();
      v125._countAndFlagsBits = 0x3A726579616C202CLL;
      v125._object = (void *)0xE900000000000020;
      String.append(_:)(v125);
      v126 = *(void **)(v5 - 120);
      v127 = objc_msgSend(v126, "layer");
      v128 = objc_msgSend(v127, "description");
      v129 = static String._unconditionallyBridgeFromObjectiveC(_:)(v128);
      v131 = v130;

      v132._countAndFlagsBits = v129;
      v132._object = v131;
      String.append(_:)(v132);

      swift_bridgeObjectRelease();
      v133._countAndFlagsBits = 41;
      v133._object = (void *)0xE100000000000000;
      String.append(_:)(v133);
      sub_1009D6A54(v126, *(void **)(v5 - 112), v10);
      v104 = v108;
      goto LABEL_9;
    }
    v77 = (void *)v76;
    *(_QWORD *)(v5 - 96) = 0;
    *(_QWORD *)(v5 - 88) = 0xE000000000000000;
    *(_QWORD *)(v5 - 128) = v74;
    _StringGuts.grow(_:)(39);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v5 - 96) = v1;
    *(_QWORD *)(v5 - 88) = 0x8000000100FE8280;
    v78 = swift_getObjectType(v6);
    v79 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v78, v7);
    v80 = UUID.uuidString.getter(v79);
    *(_QWORD *)(v5 - 104) = v6;
    v82 = v81;
    v83 = String.index(_:offsetBy:)(15, 8, v80, v81);
    v84 = String.subscript.getter(15, v83, v80, v82);
    v86 = v85;
    v88 = v87;
    v90 = v89;
    v91 = swift_bridgeObjectRelease();
    v92 = static String._fromSubstring(_:)(v84, v86, v88, v90, v91);
    v94 = v93;
    v95 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v4, v3, v95);
    v96._countAndFlagsBits = v92;
    v96._object = v94;
    String.append(_:)(v96);
    swift_bridgeObjectRelease();
    v97._countAndFlagsBits = 0x206C6174656D202CLL;
    v97._object = (void *)0xEF203A726579616CLL;
    String.append(_:)(v97);
    v98 = objc_msgSend(v77, "description");
    v99 = static String._unconditionallyBridgeFromObjectiveC(_:)(v98);
    v101 = v100;

    v102._countAndFlagsBits = v99;
    v102._object = v101;
    String.append(_:)(v102);
    swift_bridgeObjectRelease();
    v103._countAndFlagsBits = 41;
    v103._object = (void *)0xE100000000000000;
    String.append(_:)(v103);

    v73 = *(void **)(v5 - 120);
LABEL_7:
    sub_1009D6A54(v73, *(void **)(v5 - 112), v10);
    v104 = *(_QWORD *)(v5 - 104);
LABEL_9:
    swift_unknownObjectRelease(v104);
    return *(_QWORD *)(v5 - 96);
  }
  v12 = v10 & 0xCF;
  *(_DWORD *)(v5 - 112) = v12;
  *(_QWORD *)(v5 - 96) = 0;
  *(_QWORD *)(v5 - 88) = 0xE000000000000000;
  swift_unknownObjectRetain(v6);
  *(_QWORD *)(v5 - 120) = v9;
  sub_1009D3B34(v8, v12);
  _StringGuts.grow(_:)(55);
  v13 = *(_QWORD *)(v5 - 88);
  *(_QWORD *)(v5 - 96) = *(_QWORD *)(v5 - 96);
  *(_QWORD *)(v5 - 88) = v13;
  v14._object = (void *)0x8000000100FE8280;
  v14._countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v14);
  v15 = swift_getObjectType(v6);
  v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v15, v7);
  v17 = UUID.uuidString.getter(v16);
  v19 = v18;
  v20 = String.index(_:offsetBy:)(15, 8, v17, v18);
  v21 = String.subscript.getter(15, v20, v17, v19);
  v22 = v8;
  v24 = v23;
  v26 = v25;
  *(_QWORD *)(v5 - 104) = v6;
  v28 = v27;
  v29 = swift_bridgeObjectRelease();
  v30 = static String._fromSubstring(_:)(v21, v24, v26, v28, v29);
  v32 = v31;
  v33 = swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v4, v3, v33);
  v34._countAndFlagsBits = v30;
  v34._object = v32;
  String.append(_:)(v34);
  swift_bridgeObjectRelease();
  v35._countAndFlagsBits = v1 - 1;
  v35._object = (void *)0x8000000100FE82A0;
  String.append(_:)(v35);
  v36 = *(void **)(v5 - 120);
  v37 = objc_msgSend(v36, "description");
  v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
  v40 = v39;

  v41._countAndFlagsBits = v38;
  v41._object = v40;
  String.append(_:)(v41);
  swift_bridgeObjectRelease();
  v42._countAndFlagsBits = 0x6E69776F6873202CLL;
  v42._object = (void *)0xEB00000000203A67;
  String.append(_:)(v42);
  v43 = *(_DWORD *)(v5 - 112);
  sub_1009BF03C((uint64_t)v22, v43);
  String.append(_:)(v44);
  swift_bridgeObjectRelease();
  v45._countAndFlagsBits = 41;
  v45._object = (void *)0xE100000000000000;
  String.append(_:)(v45);
  sub_1009D3B68(v22, v43);
  swift_unknownObjectRelease(*(_QWORD *)(v5 - 104));

  return *(_QWORD *)(v5 - 96);
}

uint64_t sub_1009BF868()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t inited;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  _BYTE v20[40];

  v1 = v0;
  LODWORD(v2) = objc_msgSend(v0, "isSelected");
  if ((_DWORD)v2)
  {
    v2 = sub_1009CF4B4();
    if (v2)
    {
      v3 = v2;
      v4 = objc_msgSend(v2, "boardItems");
      v5 = type metadata accessor for CRLBoardItem(0);
      v6 = sub_1004B7878((unint64_t *)&qword_1013E4190, type metadata accessor for CRLBoardItem, (uint64_t)&protocol conformance descriptor for NSObject);
      v7 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v4, v5, v6);

      v8 = sub_1004B804C((uint64_t *)&unk_1013E4180);
      inited = swift_initStackObject(v8, v20);
      *(_OWORD *)(inited + 16) = xmmword_100EEF400;
      v10 = objc_msgSend(v1, "info");
      v11 = type metadata accessor for CRLUSDZItem(0);
      v12 = swift_dynamicCastClassUnconditional(v10, v11, 0, 0, 0);
      *(_QWORD *)(inited + 32) = v12;
      specialized Array._endMutation()(v12);
      if ((unint64_t)inited >> 62)
      {
        if (inited < 0)
          v15 = inited;
        else
          v15 = inited & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(inited);
        v16 = _CocoaArrayWrapper.endIndex.getter(v15);
        swift_bridgeObjectRelease();
        if (v16)
          goto LABEL_5;
      }
      else if (*(_QWORD *)((inited & 0xFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_5:
        sub_1004B5FB0(inited);
        v14 = v13;
        goto LABEL_11;
      }
      v14 = &_swiftEmptySetSingleton;
LABEL_11:
      swift_bridgeObjectRelease();
      sub_1008D8A00(v7, (uint64_t)v14);
      v18 = v17;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v18 & 1) != 0)
      {
        if (byte_1013DDFA0 == 1)
          LOBYTE(v2) = sub_1009D0508();
        else
          LOBYTE(v2) = 1;
      }
      else
      {
        LOBYTE(v2) = 0;
      }
    }
  }
  return v2 & 1;
}

id sub_1009BFA40()
{
  char *v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  char *v4;
  id result;
  uint64_t v6;
  char *v7;
  char v9[24];

  v1 = type metadata accessor for CRLUSDZRep.PosterLoadingState(0);
  *(_QWORD *)&v2 = __chkstk_darwin(v1).n128_u64[0];
  v4 = &v9[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  result = objc_msgSend(v0, "hasBeenRemoved", v2);
  if ((result & 1) == 0)
  {
    v6 = (uint64_t)&v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_posterLoadingState];
    swift_beginAccess(&v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_posterLoadingState], v9, 0, 0);
    sub_1004B8460(v6, (uint64_t)v4, type metadata accessor for CRLUSDZRep.PosterLoadingState);
    v7 = (char *)&loc_1009BFAEC + dword_1009BFC3C[swift_getEnumCaseMultiPayload(v4, v1)];
    __asm { BR              X10 }
  }
  return result;
}

id sub_1009BFC4C()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  id result;
  uint64_t v18;
  char *v19;
  _QWORD v20[12];
  uint64_t v21;
  char *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  char v26[32];

  v1 = v0;
  v21 = type metadata accessor for CRLUSDZRep.AssetLoadingState.LoadingError(0);
  __chkstk_darwin(v21);
  v2 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v2);
  v3 = type metadata accessor for URL(0);
  v24 = *(_QWORD *)(v3 - 8);
  v25 = v3;
  __chkstk_darwin(v3);
  v20[11] = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  __chkstk_darwin(v6);
  __chkstk_darwin(v7);
  __chkstk_darwin(v8);
  v9 = type metadata accessor for CRLUSDZRep.AssetLoadingState(0);
  __chkstk_darwin(v9);
  v20[10] = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v22 = (char *)v20 - v12;
  *(_QWORD *)&v14 = __chkstk_darwin(v13).n128_u64[0];
  v16 = (char *)v20 - v15;
  result = objc_msgSend(v1, "hasBeenRemoved", v14);
  if ((result & 1) == 0)
  {
    v23 = v1;
    v18 = (uint64_t)v1 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_assetLoadingState;
    swift_beginAccess(v18, v26, 0, 0);
    sub_1004B8460(v18, (uint64_t)v16, type metadata accessor for CRLUSDZRep.AssetLoadingState);
    v20[9] = v9;
    v19 = (char *)&loc_1009BFE74 + dword_1009C10D4[swift_getEnumCaseMultiPayload(v16, v9)];
    __asm { BR              X10 }
  }
  return result;
}

id sub_1009C10FC()
{
  unsigned __int8 *v0;
  unsigned __int8 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  char *v21;
  id result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[14];
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char v32[24];
  char v33[32];

  v1 = v0;
  v29 = type metadata accessor for CRLUSDZRep.AssetLoadingState(0);
  __chkstk_darwin(v29);
  v30 = (char *)v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  __chkstk_darwin(v4);
  v6 = (char *)v28 - v5;
  __chkstk_darwin(v7);
  v9 = (char *)v28 - v8;
  v31 = sub_1004B804C(&qword_1013FFF28);
  __chkstk_darwin(v31);
  v11 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for CRLUSDZRep.PosterLoadingState(0);
  __chkstk_darwin(v12);
  v14 = (char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)v28 - v16;
  *(_QWORD *)&v19 = __chkstk_darwin(v18).n128_u64[0];
  v21 = (char *)v28 - v20;
  result = objc_msgSend(v1, "hasBeenRemoved", v19);
  if ((result & 1) == 0)
  {
    v28[10] = v9;
    v28[11] = v14;
    v28[8] = v17;
    v28[9] = v6;
    v28[12] = v12;
    v23 = v1[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingStrategy];
    v24 = (uint64_t)&v1[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_posterLoadingState];
    swift_beginAccess(&v1[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_posterLoadingState], v33, 0, 0);
    sub_1004B8460(v24, (uint64_t)v21, type metadata accessor for CRLUSDZRep.PosterLoadingState);
    v28[13] = v1;
    v25 = (uint64_t)&v1[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_assetLoadingState];
    swift_beginAccess(&v1[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_assetLoadingState], v32, 0, 0);
    v26 = (uint64_t)&v11[*(int *)(v31 + 48)];
    v27 = (uint64_t)&v11[*(int *)(v31 + 64)];
    *v11 = v23;
    sub_1004B84E0((uint64_t)v21, v26, type metadata accessor for CRLUSDZRep.PosterLoadingState);
    sub_1004B8460(v25, v27, type metadata accessor for CRLUSDZRep.AssetLoadingState);
    __asm { BR              X9 }
  }
  return result;
}

void sub_1009C219C()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  objc_class *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  char *v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t inited;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  Class v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t, double (*)(uint64_t), uint64_t, uint64_t, uint64_t, __n128);
  __n128 v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  id v61;
  Class v62;
  char *v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  id v67;
  char *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __n128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  Class v80;
  void (*v81)(char *, Class);
  void *v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  _UNKNOWN ****v89;
  uint64_t v90;
  uint64_t v91;
  __n128 v92;
  Class v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  __n128 v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _UNKNOWN ****v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  void *v109;
  id v110;
  uint64_t v111;
  uint64_t v112;
  CGDataProvider *v113;
  CGDataProvider *v114;
  CGImageSource *v115;
  CGImageRef ImageAtIndex;
  id v117;
  Class v118;
  uint64_t v119;
  id v120;
  CGImage *v121;
  void *v122;
  _UNKNOWN ****v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  void *v130;
  id v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  _DWORD *v137;
  uint64_t v138;
  char *v139;
  id v140;
  void *v141;
  uint64_t v142;
  uint64_t *v143;
  char *v144;
  os_unfair_lock_s *v145;
  id v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  char *v156;
  _DWORD *v157;
  uint64_t v158;
  id v159;
  void *v160;
  uint64_t v161;
  uint64_t *v162;
  char *v163;
  os_unfair_lock_s *v164;
  id v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  _QWORD v169[2];
  id v170;
  uint64_t *v171;
  char *v172;
  uint64_t v173;
  char *v174;
  Class v175;
  char *v176;
  id v177;
  uint64_t v178;
  char *v179;
  char *v180;
  Class v181;
  uint64_t v182;
  uint64_t v183;
  objc_super v184;
  objc_super v185;
  _BYTE v186[24];
  char v187[72];
  _BYTE v188[24];
  char v189[32];

  v1 = v0;
  v2 = type metadata accessor for CRLUSDZAssetDataStruct(0);
  __chkstk_darwin(v2);
  v4 = (char *)v169 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CRLAssetData(0);
  __chkstk_darwin(v5);
  v7 = (char *)v169 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v176 = (char *)v169 - v9;
  __chkstk_darwin(v10);
  v173 = (uint64_t)v169 - v11;
  v12 = (objc_class *)type metadata accessor for UUID(0);
  v180 = (char *)*((_QWORD *)v12 - 1);
  v181 = v12;
  v13 = *((_QWORD *)v180 + 8);
  __chkstk_darwin(v12);
  v14 = (char *)v169 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v172 = (char *)v169 - v16;
  __chkstk_darwin(v17);
  v179 = (char *)v169 - v18;
  v19 = (void *)type metadata accessor for CRLUSDZRep.PosterLoadingState(0);
  __chkstk_darwin(v19);
  v174 = (char *)v169 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v171 = (_QWORD *)((char *)v169 - v22);
  __chkstk_darwin(v23);
  v175 = (Class)((char *)v169 - v24);
  __chkstk_darwin(v25);
  v27 = (char *)v169 - v26;
  v28 = (uint64_t)&v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_posterLoadingState];
  swift_beginAccess(&v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_posterLoadingState], v189, 0, 0);
  v178 = v28;
  sub_1004B8460(v28, (uint64_t)v27, type metadata accessor for CRLUSDZRep.PosterLoadingState);
  v177 = v19;
  LODWORD(v28) = swift_getEnumCaseMultiPayload(v27, v19);
  sub_1004B84A4((uint64_t)v27, type metadata accessor for CRLUSDZRep.PosterLoadingState);
  if ((_DWORD)v28 == 3)
  {
    v29 = objc_msgSend(v0, "info");
    v30 = type metadata accessor for CRLUSDZItem(0);
    v170 = v29;
    v31 = (char *)swift_dynamicCastClassUnconditional(v29, v30, 0, 0, 0);
    v32 = (char *)sub_10065FB20();
    if (v32)
    {
      v174 = v31;
      v176 = v32;
      v33 = &v32[OBJC_IVAR____TtC8Freeform8CRLAsset_storage];
      v34 = *(_QWORD *)&v32[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 24];
      v35 = *(_QWORD *)&v32[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 32];
      sub_1004BB5A4(&v32[OBJC_IVAR____TtC8Freeform8CRLAsset_storage], v34);
      (*(void (**)(uint64_t, uint64_t))(v35 + 24))(v34, v35);
      v36 = *((_QWORD *)v33 + 3);
      v37 = *((_QWORD *)v33 + 4);
      sub_1004BB5A4(v33, v36);
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v37 + 64))(v36, v37) & 1) != 0)
      {
        if (qword_1013DD7E8 != -1)
          swift_once(&qword_1013DD7E8, sub_100A04074);
        swift_beginAccess(&static OS_os_log.crlThreeDimensionalObjects, v188, 0, 0);
        v38 = (void *)static OS_os_log.crlThreeDimensionalObjects;
        v173 = sub_1004B804C((uint64_t *)&unk_1013E0180);
        inited = swift_initStackObject(v173, &v183);
        *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
        v40 = v38;
        v41 = UUID.uuidString.getter(v40);
        v43 = v42;
        *(_QWORD *)(inited + 56) = &type metadata for String;
        v174 = (char *)sub_1004CFC2C();
        *(_QWORD *)(inited + 64) = v174;
        *(_QWORD *)(inited + 32) = v41;
        *(_QWORD *)(inited + 40) = v43;
        v45 = static os_log_type_t.default.getter(v44);
        sub_100A06EBC((uint64_t)v40, &_mh_execute_header, v45, "USDZ poster asset needs download. Adding download observer to assetUUID %{public}@", 82, 2, inited);
        swift_setDeallocating(inited);
        v171 = (uint64_t *)sub_1004B804C(&qword_1013E0190);
        swift_arrayDestroy(inited + 32, 1, v171);

        v46 = v172;
        UUID.init()(v47);
        v48 = swift_allocObject(&unk_10128EA80, 24, 7);
        v169[1] = v1;
        swift_unknownObjectWeakInit(v48 + 16);
        v49 = v180;
        v50 = v181;
        v169[0] = *((_QWORD *)v180 + 2);
        ((void (*)(char *, char *, Class))v169[0])(v14, v46, v181);
        v51 = v49[80];
        v52 = (v51 + 24) & ~v51;
        v53 = swift_allocObject(&unk_10128EAF8, v52 + v13, v51 | 7);
        *(_QWORD *)(v53 + 16) = v48;
        (*((void (**)(uint64_t, char *, Class))v49 + 4))(v53 + v52, v14, v50);
        v54 = *((_QWORD *)v33 + 3);
        v55 = *((_QWORD *)v33 + 4);
        sub_1004BB5A4(v33, v54);
        v56 = *(void (**)(char *, uint64_t, double (*)(uint64_t), uint64_t, uint64_t, uint64_t, __n128))(v55 + 72);
        v57 = swift_retain(v48);
        v56(v46, 6, sub_1009D7B6C, v53, v54, v55, v57);
        swift_release(v53);
        v58 = v48;
        v59 = v46;
        swift_release(v58);
        v60 = sub_1004B804C(&qword_1013FFB78);
        v62 = v175;
        v61 = v176;
        v63 = (char *)v175 + *(int *)(v60 + 48);
        *(_QWORD *)v175 = v176;
        ((void (*)(char *, char *, Class))v169[0])(v63, v46, v50);
        swift_storeEnumTagMultiPayload(v62, v177, 0);
        v64 = v178;
        swift_beginAccess(v178, v186, 33, 0);
        v177 = v61;
        sub_1009D7AB0((uint64_t)v62, v64, type metadata accessor for CRLUSDZRep.PosterLoadingState);
        swift_endAccess(v186);
        sub_1009BEC18();
        sub_1004B84A4((uint64_t)v62, type metadata accessor for CRLUSDZRep.PosterLoadingState);
        if (qword_1013DD8C0 != -1)
          swift_once(&qword_1013DD8C0, sub_100A0685C);
        swift_beginAccess(&static OS_os_log.assetManagement, v186, 0, 0);
        v65 = (void *)static OS_os_log.assetManagement;
        v66 = swift_initStackObject(v173, &v182);
        *(_OWORD *)(v66 + 16) = xmmword_100EF5A10;
        v67 = v65;
        v68 = v179;
        v69 = UUID.uuidString.getter(v67);
        v70 = v174;
        *(_QWORD *)(v66 + 56) = &type metadata for String;
        *(_QWORD *)(v66 + 64) = v70;
        *(_QWORD *)(v66 + 32) = v69;
        *(_QWORD *)(v66 + 40) = v71;
        v72 = UUID.uuidString.getter(v69);
        *(_QWORD *)(v66 + 96) = &type metadata for String;
        *(_QWORD *)(v66 + 104) = v70;
        *(_QWORD *)(v66 + 72) = v72;
        *(_QWORD *)(v66 + 80) = v73;
        v75 = static os_log_type_t.info.getter(v74);
        sub_100A06EBC((uint64_t)v67, &_mh_execute_header, v75, "Triggering poster asset download for asset UUID %{public}@, observerID %{public}@", 81, 2, v66);
        swift_setDeallocating(v66);
        swift_arrayDestroy(v66 + 32, 2, v171);

        v76 = *((_QWORD *)v33 + 3);
        v77 = *((_QWORD *)v33 + 4);
        sub_1004BB5A4(v33, v76);
        if (((*(uint64_t (**)(uint64_t, uint64_t))(v77 + 64))(v76, v77) & 1) != 0)
        {
          v78 = *((_QWORD *)v33 + 3);
          v79 = *((_QWORD *)v33 + 4);
          sub_1004BB5A4(v33, v78);
          (*(void (**)(uint64_t, uint64_t))(v79 + 88))(v78, v79);
        }
        swift_unknownObjectRelease(v170);

        v80 = v181;
        v81 = (void (*)(char *, Class))*((_QWORD *)v180 + 1);
        v81(v59, v181);
        v81(v68, v80);
      }
      else
      {
        v111 = *((_QWORD *)v33 + 3);
        v112 = *((_QWORD *)v33 + 4);
        sub_1004BB5A4(v33, v111);
        v113 = (CGDataProvider *)(*(uint64_t (**)(uint64_t, uint64_t))(v112 + 40))(v111, v112);
        if (v113
          && (v114 = v113, v115 = CGImageSourceCreateWithDataProvider(v113, 0), v114, v115)
          && (ImageAtIndex = CGImageSourceCreateImageAtIndex(v115, 0, 0), v115, ImageAtIndex))
        {
          v118 = v175;
          v117 = v176;
          *(_QWORD *)v175 = v176;
          *((_QWORD *)v118 + 1) = ImageAtIndex;
          swift_storeEnumTagMultiPayload(v118, v177, 1);
          v119 = v178;
          swift_beginAccess(v178, v188, 33, 0);
          v120 = v117;
          v121 = ImageAtIndex;
          sub_1009D7AB0((uint64_t)v118, v119, type metadata accessor for CRLUSDZRep.PosterLoadingState);
          swift_endAccess(v188);
          sub_1009BEC18();
          sub_1004B84A4((uint64_t)v118, type metadata accessor for CRLUSDZRep.PosterLoadingState);
          swift_unknownObjectRelease(v170);

        }
        else
        {
          v122 = v174;
          v123 = *(_UNKNOWN *****)&v174[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
          if (*v123 == &off_10140F528)
            v124 = *(_QWORD *)&v174[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
          else
            v124 = 0;
          swift_beginAccess(v124 + qword_101481450, v188, 32, 0);
          swift_retain(v123);
          v125 = sub_1004B804C((uint64_t *)&unk_1013E9BD0);
          CRRegister.wrappedValue.getter(v125);
          swift_endAccess(v188);
          swift_release(v123);
          v126 = v173;
          sub_1004B8460((uint64_t)v4, v173, type metadata accessor for CRLAssetData);
          sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLUSDZAssetDataStruct);
          v127 = (char *)objc_msgSend(v122, "store");
          v128 = *(_QWORD *)&v127[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManagerLock];
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v128 + 16));
          v129 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager;
          v130 = *(void **)&v127[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
          if (v130)
          {
            v131 = *(id *)&v127[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
          }
          else
          {
            v175 = (Class)type metadata accessor for CRLAssetManager();
            v151 = (char *)objc_allocWithZone(v175);
            v172 = &v151[OBJC_IVAR____TtC8Freeform15CRLAssetManager_store];
            swift_unknownObjectWeakInit(&v151[OBJC_IVAR____TtC8Freeform15CRLAssetManager_store]);
            v152 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_lock;
            v153 = type metadata accessor for CRLUnfairLock();
            v154 = swift_allocObject(v153, 24, 7);
            v155 = v127;
            v156 = v151;
            v157 = (_DWORD *)swift_slowAlloc(4, -1);
            *v157 = 0;
            *(_QWORD *)(v154 + 16) = v157;
            atomic_thread_fence(memory_order_acq_rel);
            *(_QWORD *)&v151[v152] = v154;
            v126 = v173;
            *(_QWORD *)&v156[OBJC_IVAR____TtC8Freeform15CRLAssetManager_assets] = _swiftEmptyDictionarySingleton;
            v158 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_owners;
            *(_QWORD *)&v156[v158] = objc_msgSend((id)objc_opt_self(NSMapTable), "mapTableWithKeyOptions:valueOptions:", 517, 0);
            *(_QWORD *)&v156[OBJC_IVAR____TtC8Freeform15CRLAssetManager_garbageCollectionWorkItem] = 0;
            swift_unknownObjectWeakAssign(v172, v155);

            v184.receiver = v156;
            v184.super_class = v175;
            v159 = objc_msgSendSuper2(&v184, "init");

            v160 = *(void **)&v127[v129];
            *(_QWORD *)&v127[v129] = v159;
            v131 = v159;

            v130 = 0;
          }
          v161 = sub_1004B804C(&qword_1013FFCE8);
          v162 = v171;
          v163 = (char *)v171 + *(int *)(v161 + 48);
          v164 = *(os_unfair_lock_s **)(v128 + 16);
          v165 = v130;
          os_unfair_lock_unlock(v164);

          v166 = sub_100CF7F90(v126, v174, v131);
          sub_1004B84A4(v126, type metadata accessor for CRLAssetData);
          *v162 = v166;
          v167 = type metadata accessor for CRLUSDZRep.PosterLoadingState.LoadingError(0);
          swift_storeEnumTagMultiPayload(v163, v167, 2);
          swift_storeEnumTagMultiPayload(v162, v177, 2);
          v168 = v178;
          swift_beginAccess(v178, v188, 33, 0);
          sub_1009D7AB0((uint64_t)v162, v168, type metadata accessor for CRLUSDZRep.PosterLoadingState);
          swift_endAccess(v188);
          sub_1009BEC18();
          sub_1004B84A4((uint64_t)v162, type metadata accessor for CRLUSDZRep.PosterLoadingState);
          swift_unknownObjectRelease(v170);

        }
        (*((void (**)(char *, Class))v180 + 1))(v179, v181);
      }
    }
    else
    {
      v103 = *(_UNKNOWN *****)&v31[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
      if (*v103 == &off_10140F528)
        v104 = *(_QWORD *)&v31[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
      else
        v104 = 0;
      swift_beginAccess(v104 + qword_101481450, v188, 32, 0);
      swift_retain(v103);
      v105 = sub_1004B804C((uint64_t *)&unk_1013E9BD0);
      CRRegister.wrappedValue.getter(v105);
      swift_endAccess(v188);
      swift_release(v103);
      sub_1004B8460((uint64_t)v4, (uint64_t)v176, type metadata accessor for CRLAssetData);
      sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLUSDZAssetDataStruct);
      v106 = (char *)objc_msgSend(v31, "store");
      v107 = *(_QWORD *)&v106[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManagerLock];
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v107 + 16));
      v108 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager;
      v109 = *(void **)&v106[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
      if (v109)
      {
        v110 = *(id *)&v106[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
      }
      else
      {
        v181 = (Class)type metadata accessor for CRLAssetManager();
        v132 = (char *)objc_allocWithZone(v181);
        v180 = &v132[OBJC_IVAR____TtC8Freeform15CRLAssetManager_store];
        swift_unknownObjectWeakInit(&v132[OBJC_IVAR____TtC8Freeform15CRLAssetManager_store]);
        v133 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_lock;
        v134 = type metadata accessor for CRLUnfairLock();
        v135 = swift_allocObject(v134, 24, 7);
        v179 = v106;
        v136 = v132;
        v137 = (_DWORD *)swift_slowAlloc(4, -1);
        *v137 = 0;
        *(_QWORD *)(v135 + 16) = v137;
        atomic_thread_fence(memory_order_acq_rel);
        *(_QWORD *)&v132[v133] = v135;
        *(_QWORD *)&v136[OBJC_IVAR____TtC8Freeform15CRLAssetManager_assets] = _swiftEmptyDictionarySingleton;
        v138 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_owners;
        *(_QWORD *)&v136[v138] = objc_msgSend((id)objc_opt_self(NSMapTable), "mapTableWithKeyOptions:valueOptions:", 517, 0);
        *(_QWORD *)&v136[OBJC_IVAR____TtC8Freeform15CRLAssetManager_garbageCollectionWorkItem] = 0;
        v139 = v179;
        swift_unknownObjectWeakAssign(v180, v179);

        v185.receiver = v136;
        v185.super_class = v181;
        v140 = objc_msgSendSuper2(&v185, "init");

        v141 = *(void **)&v106[v108];
        *(_QWORD *)&v106[v108] = v140;
        v110 = v140;

        v109 = 0;
      }
      v142 = sub_1004B804C(&qword_1013FFCE8);
      v143 = (uint64_t *)v174;
      v144 = &v174[*(int *)(v142 + 48)];
      v145 = *(os_unfair_lock_s **)(v107 + 16);
      v146 = v109;
      os_unfair_lock_unlock(v145);

      v147 = (uint64_t)v176;
      v148 = sub_100CF7F90(v176, v31, v110);

      sub_1004B84A4(v147, type metadata accessor for CRLAssetData);
      *v143 = v148;
      v149 = type metadata accessor for CRLUSDZRep.PosterLoadingState.LoadingError(0);
      swift_storeEnumTagMultiPayload(v144, v149, 2);
      swift_storeEnumTagMultiPayload(v143, v177, 2);
      v150 = v178;
      swift_beginAccess(v178, v188, 33, 0);
      sub_1009D7AB0((uint64_t)v143, v150, type metadata accessor for CRLUSDZRep.PosterLoadingState);
      swift_endAccess(v188);
      sub_1009BEC18();
      sub_1004B84A4((uint64_t)v143, type metadata accessor for CRLUSDZRep.PosterLoadingState);
      swift_unknownObjectRelease(v170);
    }
  }
  else
  {
    if (qword_1013DD7E8 != -1)
      swift_once(&qword_1013DD7E8, sub_100A04074);
    swift_beginAccess(&static OS_os_log.crlThreeDimensionalObjects, v188, 0, 0);
    v82 = (void *)static OS_os_log.crlThreeDimensionalObjects;
    v83 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v84 = swift_initStackObject(v83, v187);
    *(_OWORD *)(v84 + 16) = xmmword_100EF5E40;
    v85 = v82;
    v86 = objc_msgSend(v1, "info");
    v87 = type metadata accessor for CRLUSDZItem(0);
    v88 = swift_dynamicCastClassUnconditional(v86, v87, 0, 0, 0);
    v89 = *(_UNKNOWN *****)(v88 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (*v89 == &off_10140F528)
      v90 = *(_QWORD *)(v88 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    else
      v90 = 0;
    swift_beginAccess(v90 + qword_101481450, v186, 32, 0);
    swift_retain(v89);
    v91 = sub_1004B804C((uint64_t *)&unk_1013E9BD0);
    CRRegister.wrappedValue.getter(v91);
    swift_endAccess(v186);
    swift_release(v89);
    sub_1004B8460((uint64_t)v4, (uint64_t)v7, type metadata accessor for CRLAssetData);
    sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLUSDZAssetDataStruct);
    v92 = swift_unknownObjectRelease(v86);
    v94 = v180;
    v93 = v181;
    (*((void (**)(char *, char *, Class, __n128))v180 + 2))(v14, v7, v181, v92);
    v95 = sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLAssetData);
    v96 = UUID.uuidString.getter(v95);
    v98 = v97;
    (*((void (**)(char *, Class))v94 + 1))(v14, v93);
    *(_QWORD *)(v84 + 56) = &type metadata for String;
    *(_QWORD *)(v84 + 64) = sub_1004CFC2C();
    *(_QWORD *)(v84 + 32) = v96;
    *(_QWORD *)(v84 + 40) = v98;
    v100 = static os_log_type_t.default.getter(v99);
    sub_100A06EBC((uint64_t)v85, &_mh_execute_header, v100, "Unexpected USDZ asset loading state for asset %{public}@", 56, 2, v84);
    swift_setDeallocating(v84);
    v101 = *(_QWORD *)(v84 + 16);
    v102 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v84 + 32, v101, v102);

  }
}

uint64_t sub_1009C3168(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  v7 = type metadata accessor for MainActor(0);
  v6[5] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  return swift_task_switch(sub_1009C31D8, v8, v9);
}

uint64_t sub_1009C31D8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 24);
  swift_release(*(_QWORD *)(v0 + 40));
  sub_1009C3220(v2, v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1009C3220(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void **v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void *v20;
  uint64_t inited;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  id v37;
  char v38;
  double (*v39)(char *, uint64_t);
  char *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  void *v50;
  uint64_t v51;
  id v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  _UNKNOWN ****v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __n128 v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __n128 v67;
  unint64_t v68;
  uint64_t v69;
  void *v70;
  char *v71;
  void *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  CGDataProvider *v76;
  CGDataProvider *v77;
  CGImageSource *v78;
  CGImageRef ImageAtIndex;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  CGImage *v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t (*v89)(uint64_t, uint64_t);
  id v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  __n128 v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  id v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  id v120;
  uint64_t v121;
  _BYTE v122[24];
  uint64_t v123;
  _QWORD v124[3];
  char v125[24];
  char v126[112];
  char v127[32];

  v120 = a2;
  v3 = type metadata accessor for CRLUSDZAssetDataStruct(0);
  __chkstk_darwin(v3);
  v112 = (char *)&v106 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CRLAssetData(0);
  __chkstk_darwin(v5);
  v111 = (uint64_t)&v106 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UUID(0);
  v117 = *(_QWORD *)(v7 - 8);
  v118 = v7;
  __chkstk_darwin(v7);
  v116 = (char *)&v106 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v106 - v10;
  v12 = type metadata accessor for CRLUSDZRep.PosterLoadingState(0);
  __chkstk_darwin(v12);
  v109 = (uint64_t *)((char *)&v106 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v14);
  v16 = (void **)((char *)&v106 - v15);
  __chkstk_darwin(v17);
  v19 = (char *)&v106 - v18;
  if (qword_1013DD8C0 != -1)
    swift_once(&qword_1013DD8C0, sub_100A0685C);
  swift_beginAccess(&static OS_os_log.assetManagement, v127, 0, 0);
  v20 = (void *)static OS_os_log.assetManagement;
  v113 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v113, v126);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  *(_QWORD *)(inited + 56) = &type metadata for Int;
  *(_QWORD *)(inited + 64) = &protocol witness table for Int;
  *(_QWORD *)(inited + 32) = a1;
  v22 = v20;
  v110 = a1;
  v23 = v22;
  v24 = UUID.uuidString.getter(v22);
  v26 = v25;
  *(_QWORD *)(inited + 96) = &type metadata for String;
  v114 = sub_1004CFC2C();
  *(_QWORD *)(inited + 104) = v114;
  *(_QWORD *)(inited + 72) = v24;
  *(_QWORD *)(inited + 80) = v26;
  v28 = static os_log_type_t.info.getter(v27);
  sub_100A06EBC((uint64_t)v23, &_mh_execute_header, v28, "posterDownloadComplete with status %d, observerID %{public}@", 60, 2, inited);
  swift_setDeallocating(inited);
  v115 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 2, v115);

  v29 = v119;
  v30 = (uint64_t)&v119[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_posterLoadingState];
  swift_beginAccess(&v119[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_posterLoadingState], v125, 0, 0);
  sub_1004B8460(v30, (uint64_t)v19, type metadata accessor for CRLUSDZRep.PosterLoadingState);
  sub_1009BE668(v16);
  sub_1004B84A4((uint64_t)v19, type metadata accessor for CRLUSDZRep.PosterLoadingState);
  v31 = v29;
  if (swift_getEnumCaseMultiPayload(v16, v12))
  {
    sub_1004B84A4((uint64_t)v16, type metadata accessor for CRLUSDZRep.PosterLoadingState);
    v33 = v117;
    v32 = v118;
LABEL_9:
    if (qword_1013DD7E8 != -1)
      swift_once(&qword_1013DD7E8, sub_100A04074);
    swift_beginAccess(&static OS_os_log.crlThreeDimensionalObjects, v124, 0, 0);
    v50 = (void *)static OS_os_log.crlThreeDimensionalObjects;
    v51 = swift_initStackObject(v113, &v123);
    *(_OWORD *)(v51 + 16) = xmmword_100EF5E40;
    v52 = v50;
    v53 = objc_msgSend(v31, "info");
    v54 = type metadata accessor for CRLUSDZItem(0);
    v55 = swift_dynamicCastClassUnconditional(v53, v54, 0, 0, 0);
    v56 = *(_UNKNOWN *****)(v55 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (*v56 == &off_10140F528)
      v57 = *(_QWORD *)(v55 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    else
      v57 = 0;
    swift_beginAccess(v57 + qword_101481450, v122, 32, 0);
    swift_retain(v56);
    v58 = sub_1004B804C((uint64_t *)&unk_1013E9BD0);
    v59 = (uint64_t)v112;
    CRRegister.wrappedValue.getter(v58);
    swift_endAccess(v122);
    swift_release(v56);
    v60 = v111;
    sub_1004B8460(v59, v111, type metadata accessor for CRLAssetData);
    sub_1004B84A4(v59, type metadata accessor for CRLUSDZAssetDataStruct);
    v61 = swift_unknownObjectRelease(v53);
    v62 = v116;
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v33 + 16))(v116, v60, v32, v61);
    v63 = sub_1004B84A4(v60, type metadata accessor for CRLAssetData);
    v64 = UUID.uuidString.getter(v63);
    v66 = v65;
    v67.n128_f64[0] = (*(double (**)(char *, uint64_t))(v33 + 8))(v62, v32);
    v68 = v114;
    *(_QWORD *)(v51 + 56) = &type metadata for String;
    *(_QWORD *)(v51 + 64) = v68;
    *(_QWORD *)(v51 + 32) = v64;
    *(_QWORD *)(v51 + 40) = v66;
    v69 = static os_log_type_t.default.getter(v67);
    sub_100A06EBC((uint64_t)v52, &_mh_execute_header, v69, "Unexpected USDZ asset loading state for asset %{public}@", 56, 2, v51);
    swift_setDeallocating(v51);
    swift_arrayDestroy(v51 + 32, *(_QWORD *)(v51 + 16), v115);

    return;
  }
  v107 = v30;
  v108 = v12;
  v34 = v110;
  v35 = (char *)*v16;
  v36 = sub_1004B804C(&qword_1013FFB78);
  v33 = v117;
  v32 = v118;
  (*(void (**)(char *, char *, uint64_t))(v117 + 32))(v11, (char *)v16 + *(int *)(v36 + 48), v118);
  sub_1004B7878((unint64_t *)&qword_1013E4880, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v37 = v120;
  v38 = dispatch thunk of static Equatable.== infix(_:_:)(v120, v11);
  v39 = *(double (**)(char *, uint64_t))(v33 + 8);
  v39(v11, v32);
  if ((v38 & 1) == 0)
  {

    goto LABEL_9;
  }
  v40 = v35;
  v41 = objc_msgSend(v31, "info");
  v42 = type metadata accessor for CRLUSDZItem(0);
  swift_dynamicCastClassUnconditional(v41, v42, 0, 0, 0);
  if ((unint64_t)(v34 - 2) < 2)
  {
    v43 = sub_1004B804C(&qword_1013FFCE8);
    v44 = v33;
    v45 = (uint64_t)v109;
    v46 = (char *)v109 + *(int *)(v43 + 48);
    *v109 = v40;
    (*(void (**)(char *, id, uint64_t))(v44 + 16))(v46, v37, v32);
    v47 = type metadata accessor for CRLUSDZRep.PosterLoadingState.LoadingError(0);
    swift_storeEnumTagMultiPayload(v46, v47, 0);
    swift_storeEnumTagMultiPayload(v45, v108, 2);
    v48 = v107;
    swift_beginAccess(v107, v124, 33, 0);
    v49 = v40;
    sub_1009D7AB0(v45, v48, type metadata accessor for CRLUSDZRep.PosterLoadingState);
    swift_endAccess(v124);
    sub_1009BEC18();
    sub_1004B84A4(v45, type metadata accessor for CRLUSDZRep.PosterLoadingState);

LABEL_17:
    swift_unknownObjectRelease(v41);
    return;
  }
  if (!v34)
  {

    goto LABEL_17;
  }
  if (v34 != 1)
  {
    type metadata accessor for CRLAssetDownloadObserverStatus(0);
    v124[0] = v34;
    _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v105, v124, v105, &type metadata for Int);
    __break(1u);
    return;
  }
  v70 = v40;
  v71 = (char *)sub_10065FB20();
  if (v71)
  {
    v72 = v71;
    v73 = &v71[OBJC_IVAR____TtC8Freeform8CRLAsset_storage];
    v74 = *((_QWORD *)v73 + 3);
    v75 = *((_QWORD *)v73 + 4);
    sub_1004BB5A4(v73, v74);
    v76 = (CGDataProvider *)(*(uint64_t (**)(uint64_t, uint64_t))(v75 + 40))(v74, v75);
    if (v76 && (v77 = v76, v78 = CGImageSourceCreateWithDataProvider(v76, 0), v77, v78))
    {
      ImageAtIndex = CGImageSourceCreateImageAtIndex(v78, 0, 0);

      if (ImageAtIndex)
      {
        v80 = v108;
        v81 = (uint64_t)v109;
        *v109 = v40;
        *(_QWORD *)(v81 + 8) = ImageAtIndex;
        swift_storeEnumTagMultiPayload(v81, v80, 1);
        v82 = v107;
        swift_beginAccess(v107, v124, 33, 0);
        v83 = v40;
        v84 = ImageAtIndex;
        sub_1009D7AB0(v81, v82, type metadata accessor for CRLUSDZRep.PosterLoadingState);
        swift_endAccess(v124);
        sub_1009BEC18();
        sub_1004B84A4(v81, type metadata accessor for CRLUSDZRep.PosterLoadingState);

        goto LABEL_17;
      }
    }
    else
    {

    }
  }
  v120 = v41;
  if (qword_1013DD7E8 != -1)
    swift_once(&qword_1013DD7E8, sub_100A04074);
  swift_beginAccess(&static OS_os_log.crlThreeDimensionalObjects, v124, 0, 0);
  v85 = (void *)static OS_os_log.crlThreeDimensionalObjects;
  v86 = swift_initStackObject(v113, &v121);
  *(_OWORD *)(v86 + 16) = xmmword_100EF5E40;
  v87 = *(_QWORD *)&v40[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 24];
  v88 = *(_QWORD *)&v40[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 32];
  sub_1004BB5A4(&v40[OBJC_IVAR____TtC8Freeform8CRLAsset_storage], v87);
  v89 = *(uint64_t (**)(uint64_t, uint64_t))(v88 + 24);
  v90 = v85;
  v91 = v116;
  v92 = v89(v87, v88);
  v93 = UUID.uuidString.getter(v92);
  v95 = v94;
  v96.n128_f64[0] = v39(v91, v118);
  v97 = v114;
  *(_QWORD *)(v86 + 56) = &type metadata for String;
  *(_QWORD *)(v86 + 64) = v97;
  *(_QWORD *)(v86 + 32) = v93;
  *(_QWORD *)(v86 + 40) = v95;
  v98 = static os_log_type_t.default.getter(v96);
  sub_100A06EBC((uint64_t)v90, &_mh_execute_header, v98, "Asset downloaded but poster image missing for asset %{public}@", 62, 2, v86);
  swift_setDeallocating(v86);
  swift_arrayDestroy(v86 + 32, *(_QWORD *)(v86 + 16), v115);

  v99 = sub_1004B804C(&qword_1013FFCE8);
  v100 = (uint64_t)v109;
  v101 = (char *)v109 + *(int *)(v99 + 48);
  *v109 = v70;
  v102 = type metadata accessor for CRLUSDZRep.PosterLoadingState.LoadingError(0);
  swift_storeEnumTagMultiPayload(v101, v102, 2);
  swift_storeEnumTagMultiPayload(v100, v108, 2);
  v103 = v107;
  swift_beginAccess(v107, v122, 33, 0);
  v104 = v70;
  sub_1009D7AB0(v100, v103, type metadata accessor for CRLUSDZRep.PosterLoadingState);
  swift_endAccess(v122);
  sub_1009BEC18();
  sub_1004B84A4(v100, type metadata accessor for CRLUSDZRep.PosterLoadingState);

  swift_unknownObjectRelease(v120);
}

void sub_1009C3BD4()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  _UNKNOWN ****v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  id v52;
  void *v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  _UNKNOWN ****v61;
  uint64_t v62;
  uint64_t v63;
  __n128 v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __n128 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  _DWORD *v81;
  uint64_t v82;
  id v83;
  void *v84;
  os_unfair_lock_s *v85;
  id v86;
  char *v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  uint64_t v96;
  uint64_t inited;
  id v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  id v105;
  uint64_t v106;
  uint64_t v107;
  __n128 v108;
  uint64_t v109;
  id v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  void (*v122)(char *, uint64_t, double (*)(uint64_t), uint64_t, uint64_t, uint64_t, __n128);
  __n128 v123;
  id v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  void *v130;
  uint64_t v131;
  id v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  __n128 v138;
  void (*v139)(id, uint64_t, __n128);
  _UNKNOWN ****v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  os_unfair_lock_s *v144;
  char *v145;
  uint64_t v146;
  void *v147;
  id v148;
  id v149;
  char *v150;
  id v151;
  void *v152;
  uint64_t v153;
  char *v154;
  _QWORD *v155;
  os_unfair_lock_s *v156;
  id v157;
  char *v158;
  uint64_t v159;
  uint64_t (*v160)(uint64_t, uint64_t, char *);
  id v161;
  NSString v162;
  id v163;
  char *v164;
  void (*v165)(char *, char *, char *);
  uint64_t v166;
  int v167;
  void *v168;
  char v169;
  uint64_t v170;
  char v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  __n128 v180;
  void *v181;
  uint64_t v182;
  uint64_t v183;
  id v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  unint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  double (*v196)(char *, uint64_t);
  uint64_t v197;
  __n128 v198;
  uint64_t v199;
  id v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  char *v205;
  void *v206;
  uint64_t v207;
  uint64_t v208;
  id v209;
  uint64_t v210;
  __n128 v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  char *v215;
  uint64_t v216;
  uint64_t v217;
  __n128 v218;
  uint64_t v219;
  Class v220;
  char *v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  id v225;
  char *v226;
  uint64_t v227;
  uint64_t v228;
  _QWORD *v229;
  uint64_t v230;
  id v231;
  char *v232;
  char *v233;
  char *v234;
  uint64_t v235;
  uint64_t v236;
  char *v237;
  uint64_t v238;
  char *v239;
  char *v240;
  id v241;
  char *v242;
  char *v243;
  char *v244;
  char *v245;
  char *v246;
  uint64_t v247;
  uint64_t v248;
  objc_super v249;
  _BYTE v250[24];
  char v251[72];
  _BYTE v252[24];
  char v253[32];

  v1 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v1);
  v234 = (char *)&v219 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v239 = (char *)&v219 - v4;
  v5 = (char *)type metadata accessor for URL(0);
  v241 = (id)*((_QWORD *)v5 - 1);
  v242 = v5;
  __chkstk_darwin(v5);
  v232 = (char *)&v219 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v233 = (char *)&v219 - v8;
  __chkstk_darwin(v9);
  v240 = (char *)&v219 - v10;
  v11 = type metadata accessor for UUID(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin(v11);
  v246 = (char *)&v219 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v245 = (char *)&v219 - v15;
  __chkstk_darwin(v16);
  v18 = (char *)&v219 - v17;
  v19 = type metadata accessor for CRLUSDZAssetDataStruct(0);
  __chkstk_darwin(v19);
  v21 = (char *)&v219 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v235 = type metadata accessor for CRLAssetData(0);
  __chkstk_darwin(v235);
  v23 = (char *)&v219 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v244 = (char *)&v219 - v25;
  __chkstk_darwin(v26);
  v28 = (char *)&v219 - v27;
  v29 = type metadata accessor for CRLUSDZRep.AssetLoadingState(0);
  __chkstk_darwin(v29);
  __chkstk_darwin(v30);
  __chkstk_darwin(v31);
  __chkstk_darwin(v32);
  v38 = (char *)&v219 - v37;
  if (v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingStrategy] != 4)
  {
    v227 = v35;
    v228 = v36;
    v229 = v34;
    v243 = v28;
    v236 = v11;
    v237 = v18;
    v39 = (uint64_t)&v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_assetLoadingState];
    v40 = v33;
    swift_beginAccess(&v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_assetLoadingState], v253, 0, 0);
    sub_1004B8460(v39, (uint64_t)v38, type metadata accessor for CRLUSDZRep.AssetLoadingState);
    v230 = v40;
    LODWORD(v40) = swift_getEnumCaseMultiPayload(v38, v40);
    sub_1004B84A4((uint64_t)v38, type metadata accessor for CRLUSDZRep.AssetLoadingState);
    v238 = v12;
    if ((_DWORD)v40 == 4)
    {
      v224 = v39;
      v231 = v0;
      v41 = objc_msgSend(v0, "info");
      v42 = type metadata accessor for CRLUSDZItem(0);
      v225 = v41;
      v43 = swift_dynamicCastClassUnconditional(v41, v42, 0, 0, 0);
      v44 = (char *)v43;
      v223 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
      v45 = *(_UNKNOWN *****)(v43 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
      if (*v45 == &off_10140F528)
        v46 = *(_QWORD *)(v43 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
      else
        v46 = 0;
      swift_beginAccess(v46 + qword_101481450, v252, 32, 0);
      swift_retain(v45);
      v222 = sub_1004B804C((uint64_t *)&unk_1013E9BD0);
      CRRegister.wrappedValue.getter(v222);
      swift_endAccess(v252);
      swift_release(v45);
      v47 = (uint64_t)v243;
      sub_1004B8460((uint64_t)v21, (uint64_t)v243, type metadata accessor for CRLAssetData);
      sub_1004B84A4((uint64_t)v21, type metadata accessor for CRLUSDZAssetDataStruct);
      v226 = v44;
      v48 = (char *)objc_msgSend(v44, "store");
      v49 = *(_QWORD *)&v48[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManagerLock];
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v49 + 16));
      v50 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager;
      v51 = *(void **)&v48[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
      if (v51)
      {
        v52 = *(id *)&v48[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
      }
      else
      {
        v220 = (Class)type metadata accessor for CRLAssetManager();
        v76 = (char *)objc_allocWithZone(v220);
        v221 = &v76[OBJC_IVAR____TtC8Freeform15CRLAssetManager_store];
        swift_unknownObjectWeakInit(&v76[OBJC_IVAR____TtC8Freeform15CRLAssetManager_store]);
        v219 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_lock;
        v77 = type metadata accessor for CRLUnfairLock();
        v78 = swift_allocObject(v77, 24, 7);
        v79 = v48;
        v80 = v76;
        v81 = (_DWORD *)swift_slowAlloc(4, -1);
        *v81 = 0;
        *(_QWORD *)(v78 + 16) = v81;
        atomic_thread_fence(memory_order_acq_rel);
        *(_QWORD *)&v76[v219] = v78;
        *(_QWORD *)&v80[OBJC_IVAR____TtC8Freeform15CRLAssetManager_assets] = _swiftEmptyDictionarySingleton;
        v82 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_owners;
        *(_QWORD *)&v80[v82] = objc_msgSend((id)objc_opt_self(NSMapTable), "mapTableWithKeyOptions:valueOptions:", 517, 0);
        *(_QWORD *)&v80[OBJC_IVAR____TtC8Freeform15CRLAssetManager_garbageCollectionWorkItem] = 0;
        swift_unknownObjectWeakAssign(v221, v79);

        v249.receiver = v80;
        v249.super_class = v220;
        v83 = objc_msgSendSuper2(&v249, "init");

        v84 = *(void **)&v48[v50];
        *(_QWORD *)&v48[v50] = v83;
        v52 = v83;

        v47 = (uint64_t)v243;
        v51 = 0;
      }
      v85 = *(os_unfair_lock_s **)(v49 + 16);
      v86 = v51;
      os_unfair_lock_unlock(v85);

      v87 = v226;
      v88 = (char *)sub_100CF7F90(v47, v226, v52);

      v89 = &v88[OBJC_IVAR____TtC8Freeform8CRLAsset_storage];
      v90 = *(_QWORD *)&v88[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 24];
      v91 = *(_QWORD *)&v88[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 32];
      sub_1004BB5A4(&v88[OBJC_IVAR____TtC8Freeform8CRLAsset_storage], v90);
      (*(void (**)(uint64_t, uint64_t))(v91 + 24))(v90, v91);
      v92 = *((_QWORD *)v89 + 3);
      v93 = *((_QWORD *)v89 + 4);
      sub_1004BB5A4(v89, v92);
      v94 = (*(uint64_t (**)(uint64_t, uint64_t))(v93 + 64))(v92, v93);
      if ((v94 & 1) != 0)
      {
        v242 = v89;
        v244 = v88;
        UUID.init()(v94);
        if (qword_1013DD7E8 != -1)
          swift_once(&qword_1013DD7E8, sub_100A04074);
        swift_beginAccess(&static OS_os_log.crlThreeDimensionalObjects, v252, 0, 0);
        v95 = (void *)static OS_os_log.crlThreeDimensionalObjects;
        v96 = sub_1004B804C((uint64_t *)&unk_1013E0180);
        inited = swift_initStackObject(v96, &v247);
        *(_OWORD *)(inited + 16) = xmmword_100EF5550;
        v241 = v95;
        v98 = objc_msgSend(v231, "debugDescription");
        v99 = static String._unconditionallyBridgeFromObjectiveC(_:)(v98);
        v101 = v100;

        *(_QWORD *)(inited + 56) = &type metadata for String;
        v102 = sub_1004CFC2C();
        *(_QWORD *)(inited + 64) = v102;
        *(_QWORD *)(inited + 32) = v99;
        *(_QWORD *)(inited + 40) = v101;
        v103 = UUID.uuidString.getter(v102);
        *(_QWORD *)(inited + 96) = &type metadata for String;
        *(_QWORD *)(inited + 104) = v102;
        *(_QWORD *)(inited + 72) = v103;
        *(_QWORD *)(inited + 80) = v104;
        v105 = v245;
        v106 = UUID.uuidString.getter(v103);
        *(_QWORD *)(inited + 136) = &type metadata for String;
        *(_QWORD *)(inited + 144) = v102;
        *(_QWORD *)(inited + 112) = v106;
        *(_QWORD *)(inited + 120) = v107;
        v109 = static os_log_type_t.debug.getter(v108);
        v110 = v241;
        sub_100A06EBC((uint64_t)v241, &_mh_execute_header, v109, "(USDZRep) [%{public}@] USDZ asset needs download. Adding download observer to assetUUID %{public}@ observerUUID %{public}@", 122, 2, inited);
        swift_setDeallocating(inited);
        v111 = sub_1004B804C(&qword_1013E0190);
        swift_arrayDestroy(inited + 32, 3, v111);

        v112 = swift_allocObject(&unk_10128EA80, 24, 7);
        swift_unknownObjectWeakInit(v112 + 16);
        v113 = v238;
        v241 = *(id *)(v238 + 16);
        v114 = v246;
        v115 = v236;
        ((void (*)(char *, id, uint64_t))v241)(v246, v105, v236);
        v116 = *(unsigned __int8 *)(v113 + 80);
        v117 = (v116 + 24) & ~v116;
        v118 = swift_allocObject(&unk_10128EAA8, v117 + v13, v116 | 7);
        *(_QWORD *)(v118 + 16) = v112;
        (*(void (**)(uint64_t, char *, uint64_t))(v113 + 32))(v118 + v117, v114, v115);
        v119 = v242;
        v120 = *((_QWORD *)v242 + 3);
        v121 = *((_QWORD *)v242 + 4);
        sub_1004BB5A4(v242, v120);
        v122 = *(void (**)(char *, uint64_t, double (*)(uint64_t), uint64_t, uint64_t, uint64_t, __n128))(v121 + 72);
        v123 = swift_retain(v112);
        v124 = v245;
        v125 = v121;
        v126 = v115;
        v122(v245, 6, sub_1009D7A00, v118, v120, v125, v123);
        swift_release(v118);
        swift_release(v112);
        v127 = sub_1004B804C(&qword_1013FFB78);
        v128 = (uint64_t)v229;
        v129 = (char *)v229 + *(int *)(v127 + 48);
        v130 = v244;
        *v229 = v244;
        ((void (*)(char *, id, uint64_t))v241)(v129, v124, v126);
        swift_storeEnumTagMultiPayload(v128, v230, 0);
        v131 = v224;
        swift_beginAccess(v224, v250, 33, 0);
        v132 = v130;
        sub_1009D7AB0(v128, v131, type metadata accessor for CRLUSDZRep.AssetLoadingState);
        v133 = swift_endAccess(v250);
        sub_1009BFC4C(v133);
        sub_1004B84A4(v128, type metadata accessor for CRLUSDZRep.AssetLoadingState);
        v134 = *((_QWORD *)v119 + 3);
        v135 = *((_QWORD *)v119 + 4);
        sub_1004BB5A4(v119, v134);
        if (((*(uint64_t (**)(uint64_t, uint64_t))(v135 + 64))(v134, v135) & 1) != 0)
        {
          v136 = *((_QWORD *)v119 + 3);
          v137 = *((_QWORD *)v119 + 4);
          sub_1004BB5A4(v119, v136);
          (*(void (**)(uint64_t, uint64_t))(v137 + 88))(v136, v137);
        }

        v138 = swift_unknownObjectRelease(v225);
        v139 = *(void (**)(id, uint64_t, __n128))(v238 + 8);
        v139(v124, v126, v138);
        ((void (*)(char *, uint64_t))v139)(v237, v126);
        goto LABEL_42;
      }
      v140 = *(_UNKNOWN *****)&v87[v223];
      if (*v140 == &off_10140F528)
        v141 = *(_QWORD *)&v87[v223];
      else
        v141 = 0;
      swift_beginAccess(v141 + qword_101481450, v252, 32, 0);
      swift_retain(v140);
      CRRegister.wrappedValue.getter(v222);
      swift_endAccess(v252);
      swift_release(v140);
      sub_1004B8460((uint64_t)v21, (uint64_t)v244, type metadata accessor for CRLAssetData);
      sub_1004B84A4((uint64_t)v21, type metadata accessor for CRLUSDZAssetDataStruct);
      v142 = *(char **)&v87[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store];
      v143 = *(_QWORD *)&v142[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
      v144 = *(os_unfair_lock_s **)(v143 + 16);
      v145 = v142;
      os_unfair_lock_lock(v144);
      v146 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
      v147 = *(void **)&v145[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
      if (v147)
      {
        v148 = *(id *)&v145[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
      }
      else
      {
        v149 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager(0));
        v150 = v145;
        v151 = sub_100C7EE84((uint64_t)v150);

        v152 = *(void **)&v145[v146];
        *(_QWORD *)&v145[v146] = v151;
        v148 = v151;

        v147 = 0;
      }
      v153 = v236;
      v155 = v241;
      v154 = v242;
      v156 = *(os_unfair_lock_s **)(v143 + 16);
      v157 = v147;
      os_unfair_lock_unlock(v156);
      v158 = v239;
      v159 = (uint64_t)v244;
      sub_100C7857C((uint64_t)v244, 0, 3, 0, v239);

      sub_1004B84A4(v159, type metadata accessor for CRLAssetData);
      v160 = (uint64_t (*)(uint64_t, uint64_t, char *))v155[6];
      if (v160((uint64_t)v158, 1, v154) == 1)
      {
        v244 = v88;
        sub_1004CB800((uint64_t)v158, &qword_1013E04D0);
        v161 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        swift_bridgeObjectRetain(*(_QWORD *)&v243[*(int *)(v235 + 20) + 8]);
        v162 = String._bridgeToObjectiveC()();
        v163 = objc_msgSend(v161, "URLForResource:withExtension:", v162, 0, swift_bridgeObjectRelease().n128_f64[0]);

        if (v163)
        {
          v164 = v232;
          static URL._unconditionallyBridgeFromObjectiveC(_:)(v163);

          v165 = (void (*)(char *, char *, char *))v155[4];
          v166 = (uint64_t)v234;
          v165(v234, v164, v154);
          ((void (*)(uint64_t, _QWORD, uint64_t, char *))v155[7])(v166, 0, 1, v154);
          v167 = v160(v166, 1, v154);
          v168 = v244;
          if (v167 != 1)
          {
            v165(v233, (char *)v166, v154);
            *(_QWORD *)v227 = v168;
            v246 = v168;
            if (byte_1013DDFA0 == 1)
              v169 = sub_1009D0508();
            else
              v169 = 1;
            v170 = v238;
            v212 = sub_1004B804C(&qword_1013FFB80);
            v213 = v227;
            v214 = v227 + *(int *)(v212 + 64);
            *(_BYTE *)(v227 + 8) = v169 & 1;
            v215 = v233;
            ((void (*)(uint64_t, char *, char *))v155[2])(v214, v233, v154);
            swift_storeEnumTagMultiPayload(v213, v230, 1);
            v216 = v224;
            swift_beginAccess(v224, v252, 33, 0);
            sub_1009D7AB0(v213, v216, type metadata accessor for CRLUSDZRep.AssetLoadingState);
            v217 = swift_endAccess(v252);
            sub_1009BFC4C(v217);
            sub_1004B84A4(v213, type metadata accessor for CRLUSDZRep.AssetLoadingState);

            v218 = swift_unknownObjectRelease(v225);
            ((void (*)(char *, char *, __n128))v155[1])(v215, v154, v218);
            (*(void (**)(char *, uint64_t))(v170 + 8))(v237, v153);
LABEL_42:
            sub_1004B84A4((uint64_t)v243, type metadata accessor for CRLAssetData);
            return;
          }
        }
        else
        {
          v166 = (uint64_t)v234;
          ((void (*)(char *, uint64_t, uint64_t, char *))v155[7])(v234, 1, 1, v154);
        }
        sub_1004CB800(v166, &qword_1013E04D0);
        if (qword_1013DD7E8 != -1)
          swift_once(&qword_1013DD7E8, sub_100A04074);
        swift_beginAccess(&static OS_os_log.crlThreeDimensionalObjects, v252, 0, 0);
        v181 = (void *)static OS_os_log.crlThreeDimensionalObjects;
        v182 = sub_1004B804C((uint64_t *)&unk_1013E0180);
        v183 = swift_initStackObject(v182, &v248);
        *(_OWORD *)(v183 + 16) = xmmword_100EF5A10;
        v245 = v181;
        v184 = objc_msgSend(v231, "debugDescription");
        v185 = static String._unconditionallyBridgeFromObjectiveC(_:)(v184);
        v187 = v186;

        *(_QWORD *)(v183 + 56) = &type metadata for String;
        v188 = sub_1004CFC2C();
        *(_QWORD *)(v183 + 64) = v188;
        *(_QWORD *)(v183 + 32) = v185;
        *(_QWORD *)(v183 + 40) = v187;
        v189 = *((_QWORD *)v89 + 3);
        v190 = *((_QWORD *)v89 + 4);
        sub_1004BB5A4(v89, v189);
        v191 = v246;
        v192 = (*(uint64_t (**)(uint64_t, uint64_t))(v190 + 24))(v189, v190);
        v193 = UUID.uuidString.getter(v192);
        v195 = v194;
        v196 = *(double (**)(char *, uint64_t))(v238 + 8);
        v197 = v236;
        v198.n128_f64[0] = v196(v191, v236);
        *(_QWORD *)(v183 + 96) = &type metadata for String;
        *(_QWORD *)(v183 + 104) = v188;
        *(_QWORD *)(v183 + 72) = v193;
        *(_QWORD *)(v183 + 80) = v195;
        v199 = static os_log_type_t.debug.getter(v198);
        v200 = v245;
        sub_100A06EBC((uint64_t)v245, &_mh_execute_header, v199, "(USDZRep) [%{public}@] Asset downloaded but URL missing for asset %{public}@", 76, 2, v183);
        swift_setDeallocating(v183);
        v201 = *(_QWORD *)(v183 + 16);
        v202 = sub_1004B804C(&qword_1013E0190);
        swift_arrayDestroy(v183 + 32, v201, v202);

        v203 = sub_1004B804C(&qword_1013FFB90);
        v204 = (uint64_t)v229;
        v205 = (char *)v229 + *(int *)(v203 + 48);
        v206 = v244;
        *v229 = v244;
        v207 = type metadata accessor for CRLUSDZRep.AssetLoadingState.LoadingError(0);
        swift_storeEnumTagMultiPayload(v205, v207, 3);
        swift_storeEnumTagMultiPayload(v204, v230, 3);
        v208 = v224;
        swift_beginAccess(v224, v250, 33, 0);
        v209 = v206;
        sub_1009D7AB0(v204, v208, type metadata accessor for CRLUSDZRep.AssetLoadingState);
        v210 = swift_endAccess(v250);
        sub_1009BFC4C(v210);
        sub_1004B84A4(v204, type metadata accessor for CRLUSDZRep.AssetLoadingState);

        v211 = swift_unknownObjectRelease(v225);
        ((void (*)(char *, uint64_t, __n128))v196)(v237, v197, v211);
        goto LABEL_42;
      }
      ((void (*)(char *, char *, char *))v155[4])(v240, v158, v154);
      *(_QWORD *)v228 = v88;
      v246 = v88;
      if (byte_1013DDFA0 == 1)
        v171 = sub_1009D0508();
      else
        v171 = 1;
      v172 = v238;
      v173 = v237;
      v174 = sub_1004B804C(&qword_1013FFB80);
      v175 = v228;
      v176 = v228 + *(int *)(v174 + 64);
      *(_BYTE *)(v228 + 8) = v171 & 1;
      v177 = v240;
      ((void (*)(uint64_t, char *, char *))v155[2])(v176, v240, v154);
      swift_storeEnumTagMultiPayload(v175, v230, 1);
      v178 = v224;
      swift_beginAccess(v224, v252, 33, 0);
      sub_1009D7AB0(v175, v178, type metadata accessor for CRLUSDZRep.AssetLoadingState);
      v179 = swift_endAccess(v252);
      sub_1009BFC4C(v179);
      sub_1004B84A4(v175, type metadata accessor for CRLUSDZRep.AssetLoadingState);

      v180 = swift_unknownObjectRelease(v225);
      ((void (*)(char *, char *, __n128))v155[1])(v177, v154, v180);
      (*(void (**)(char *, uint64_t))(v172 + 8))(v173, v236);
      goto LABEL_42;
    }
    v53 = v0;
    if (qword_1013DD7E8 != -1)
      swift_once(&qword_1013DD7E8, sub_100A04074);
    swift_beginAccess(&static OS_os_log.crlThreeDimensionalObjects, v252, 0, 0);
    v54 = (void *)static OS_os_log.crlThreeDimensionalObjects;
    v55 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v56 = swift_initStackObject(v55, v251);
    *(_OWORD *)(v56 + 16) = xmmword_100EF5E40;
    v57 = v54;
    v58 = objc_msgSend(v53, "info");
    v59 = type metadata accessor for CRLUSDZItem(0);
    v60 = swift_dynamicCastClassUnconditional(v58, v59, 0, 0, 0);
    v61 = *(_UNKNOWN *****)(v60 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (*v61 == &off_10140F528)
      v62 = *(_QWORD *)(v60 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    else
      v62 = 0;
    swift_beginAccess(v62 + qword_101481450, v250, 32, 0);
    swift_retain(v61);
    v63 = sub_1004B804C((uint64_t *)&unk_1013E9BD0);
    CRRegister.wrappedValue.getter(v63);
    swift_endAccess(v250);
    swift_release(v61);
    sub_1004B8460((uint64_t)v21, (uint64_t)v23, type metadata accessor for CRLAssetData);
    sub_1004B84A4((uint64_t)v21, type metadata accessor for CRLUSDZAssetDataStruct);
    v64 = swift_unknownObjectRelease(v58);
    v65 = v238;
    v66 = v246;
    v67 = v236;
    (*(void (**)(char *, char *, uint64_t, __n128))(v238 + 16))(v246, v23, v236, v64);
    v68 = sub_1004B84A4((uint64_t)v23, type metadata accessor for CRLAssetData);
    v69 = UUID.uuidString.getter(v68);
    v71 = v70;
    (*(void (**)(char *, uint64_t))(v65 + 8))(v66, v67);
    *(_QWORD *)(v56 + 56) = &type metadata for String;
    *(_QWORD *)(v56 + 64) = sub_1004CFC2C();
    *(_QWORD *)(v56 + 32) = v69;
    *(_QWORD *)(v56 + 40) = v71;
    v73 = static os_log_type_t.default.getter(v72);
    sub_100A06EBC((uint64_t)v57, &_mh_execute_header, v73, "Unexpected USDZ asset loading state for asset %{public}@", 56, 2, v56);
    swift_setDeallocating(v56);
    v74 = *(_QWORD *)(v56 + 16);
    v75 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v56 + 32, v74, v75);

  }
}

double sub_1009C4E7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t Strong;
  double result;
  void *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char v27[24];

  v10 = type metadata accessor for UUID(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v10);
  v13 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v13);
  v15 = &v27[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v27, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v18 = (void *)Strong;
    v19 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v15, 1, 1, v19);
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(&v27[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8], a3, v10);
    type metadata accessor for MainActor(0);
    v20 = v18;
    v21 = static MainActor.shared.getter(v20);
    v22 = *(unsigned __int8 *)(v11 + 80);
    v26 = a5;
    v23 = (v22 + 48) & ~v22;
    v24 = (char *)swift_allocObject(a4, v23 + v12, v22 | 7);
    *((_QWORD *)v24 + 2) = v21;
    *((_QWORD *)v24 + 3) = &protocol witness table for MainActor;
    *((_QWORD *)v24 + 4) = v20;
    *((_QWORD *)v24 + 5) = a1;
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v24[v23], &v27[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8], v10);
    v25 = sub_100521B98((uint64_t)v15, v26, (uint64_t)v24);

    *(_QWORD *)&result = swift_release(v25).n128_u64[0];
  }
  return result;
}

uint64_t sub_1009C5024(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  v7 = type metadata accessor for MainActor(0);
  v6[5] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  return swift_task_switch(sub_1009C5094, v8, v9);
}

uint64_t sub_1009C5094()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 24);
  swift_release(*(_QWORD *)(v0 + 40));
  sub_1009C50DC(v2, v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1009C50DC(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  _QWORD *v32;
  char *v33;
  uint64_t v34;
  char v35;
  double (*v36)(char *, uint64_t);
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  void *v49;
  uint64_t v50;
  uint64_t inited;
  id v52;
  id v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  _UNKNOWN ****v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  __n128 v67;
  double (**v68)(_QWORD, _QWORD);
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __n128 v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _UNKNOWN ****v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  os_unfair_lock_s *v86;
  char *v87;
  uint64_t v88;
  void *v89;
  id v90;
  id v91;
  char *v92;
  id v93;
  void *v94;
  os_unfair_lock_s *v95;
  id v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  int v100;
  void *v101;
  uint64_t v102;
  uint64_t v103;
  id v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  id v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  __n128 v117;
  uint64_t v118;
  id v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  id v127;
  void *v128;
  uint64_t v129;
  uint64_t v130;
  id v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  id v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  __n128 v147;
  uint64_t v148;
  id v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  double (*v161)(char *, uint64_t);
  _QWORD *v162;
  _QWORD *v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  char *v176;
  char *v177;
  id v178;
  id v179;
  uint64_t v180;
  uint64_t v181;
  _BYTE v182[24];
  char v183[112];
  _QWORD v184[3];
  char v185[32];

  v173 = a2;
  v170 = a1;
  v3 = type metadata accessor for CRLUSDZAssetDataStruct(0);
  __chkstk_darwin(v3);
  v176 = (char *)&v161 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CRLAssetData(0);
  __chkstk_darwin(v5);
  v175 = (char *)&v161 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v169 = (uint64_t)&v161 - v8;
  v9 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v9);
  v166 = (char *)&v161 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v171 = type metadata accessor for URL(0);
  v168 = *(_QWORD *)(v171 - 8);
  __chkstk_darwin(v171);
  v167 = (char *)&v161 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for UUID(0);
  v179 = *(id *)(v12 - 8);
  __chkstk_darwin(v12);
  v177 = (char *)&v161 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v172 = (char *)&v161 - v15;
  v16 = type metadata accessor for CRLUSDZRep.AssetLoadingState(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v161 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v161 - v20;
  __chkstk_darwin(v22);
  v24 = (char *)&v161 - v23;
  __chkstk_darwin(v25);
  v27 = (char *)&v161 - v26;
  v178 = v2;
  v28 = (uint64_t)&v2[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_assetLoadingState];
  swift_beginAccess(&v2[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_assetLoadingState], v185, 0, 0);
  sub_1004B8460(v28, (uint64_t)v27, type metadata accessor for CRLUSDZRep.AssetLoadingState);
  sub_1009BE7E0(v24);
  sub_1004B84A4((uint64_t)v27, type metadata accessor for CRLUSDZRep.AssetLoadingState);
  if (swift_getEnumCaseMultiPayload(v24, v16))
  {
    v174 = v12;
    sub_1004B84A4((uint64_t)v24, type metadata accessor for CRLUSDZRep.AssetLoadingState);
LABEL_7:
    if (qword_1013DD7E8 != -1)
      swift_once(&qword_1013DD7E8, sub_100A04074);
    swift_beginAccess(&static OS_os_log.crlThreeDimensionalObjects, v184, 0, 0);
    v49 = (void *)static OS_os_log.crlThreeDimensionalObjects;
    v50 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v50, v183);
    *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
    v52 = v49;
    v53 = v178;
    v54 = objc_msgSend(v178, "debugDescription");
    v55 = static String._unconditionallyBridgeFromObjectiveC(_:)(v54);
    v57 = v56;

    *(_QWORD *)(inited + 56) = &type metadata for String;
    v58 = sub_1004CFC2C();
    *(_QWORD *)(inited + 64) = v58;
    *(_QWORD *)(inited + 32) = v55;
    *(_QWORD *)(inited + 40) = v57;
    v59 = objc_msgSend(v53, "info");
    v60 = type metadata accessor for CRLUSDZItem(0);
    v61 = swift_dynamicCastClassUnconditional(v59, v60, 0, 0, 0);
    v62 = *(_UNKNOWN *****)(v61 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (*v62 == &off_10140F528)
      v63 = *(_QWORD *)(v61 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    else
      v63 = 0;
    swift_beginAccess(v63 + qword_101481450, v182, 32, 0);
    swift_retain(v62);
    v64 = sub_1004B804C((uint64_t *)&unk_1013E9BD0);
    v65 = (uint64_t)v176;
    CRRegister.wrappedValue.getter(v64);
    swift_endAccess(v182);
    swift_release(v62);
    v66 = v175;
    sub_1004B8460(v65, (uint64_t)v175, type metadata accessor for CRLAssetData);
    sub_1004B84A4(v65, type metadata accessor for CRLUSDZAssetDataStruct);
    v67 = swift_unknownObjectRelease(v59);
    v68 = (double (**)(_QWORD, _QWORD))v179;
    v69 = v177;
    v70 = v174;
    (*((void (**)(char *, id, uint64_t, __n128))v179 + 2))(v177, v66, v174, v67);
    v71 = sub_1004B84A4((uint64_t)v66, type metadata accessor for CRLAssetData);
    v72 = UUID.uuidString.getter(v71);
    v74 = v73;
    v75.n128_f64[0] = ((double (**)(char *, uint64_t))v68)[1](v69, v70);
    *(_QWORD *)(inited + 96) = &type metadata for String;
    *(_QWORD *)(inited + 104) = v58;
    *(_QWORD *)(inited + 72) = v72;
    *(_QWORD *)(inited + 80) = v74;
    v76 = static os_log_type_t.debug.getter(v75);
    sub_100A06EBC((uint64_t)v52, &_mh_execute_header, v76, "(USDZRep) [%{public}@] Unexpected USDZ asset loading state for asset %{public}@", 79, 2, inited);
    swift_setDeallocating(inited);
    v77 = *(_QWORD *)(inited + 16);
    v78 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, v77, v78);

    return;
  }
  v164 = v16;
  v165 = v28;
  v162 = v21;
  v163 = v18;
  v29 = v171;
  v30 = *(char **)v24;
  v31 = sub_1004B804C(&qword_1013FFB78);
  v32 = v179;
  v33 = v172;
  (*((void (**)(char *, char *, uint64_t))v179 + 4))(v172, &v24[*(int *)(v31 + 48)], v12);
  sub_1004B7878((unint64_t *)&qword_1013E4880, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v34 = v173;
  v35 = dispatch thunk of static Equatable.== infix(_:_:)(v173, v33);
  v36 = (double (*)(char *, uint64_t))v32[1];
  v36(v33, v12);
  if ((v35 & 1) == 0)
  {
    v174 = v12;

    goto LABEL_7;
  }
  v175 = v30;
  v37 = (char *)objc_msgSend(v178, "info");
  v38 = type metadata accessor for CRLUSDZItem(0);
  v39 = swift_dynamicCastClassUnconditional(v37, v38, 0, 0, 0);
  v40 = v170;
  if ((unint64_t)(v170 - 2) < 2)
  {
    v41 = sub_1004B804C(&qword_1013FFB90);
    v42 = v34;
    v43 = (uint64_t)v163;
    v44 = (char *)v163 + *(int *)(v41 + 48);
    v45 = v175;
    *v163 = v175;
    (*((void (**)(char *, uint64_t, uint64_t))v179 + 2))(v44, v42, v12);
    v46 = type metadata accessor for CRLUSDZRep.AssetLoadingState.LoadingError(0);
    swift_storeEnumTagMultiPayload(v44, v46, 0);
    swift_storeEnumTagMultiPayload(v43, v164, 3);
    v47 = v165;
    swift_beginAccess(v165, v184, 33, 0);
    v48 = v45;
    sub_1009D7AB0(v43, v47, type metadata accessor for CRLUSDZRep.AssetLoadingState);
    swift_endAccess(v184);
    sub_1009BFC4C();
    sub_1004B84A4(v43, type metadata accessor for CRLUSDZRep.AssetLoadingState);

LABEL_15:
    swift_unknownObjectRelease(v37);
    return;
  }
  if (!v170)
  {

    goto LABEL_15;
  }
  if (v170 == 1)
  {
    v79 = v39;
    v80 = *(_UNKNOWN *****)(v39 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (*v80 == &off_10140F528)
      v81 = *(_QWORD *)(v39 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    else
      v81 = 0;
    swift_beginAccess(v81 + qword_101481450, v184, 32, 0);
    swift_retain(v80);
    v82 = sub_1004B804C((uint64_t *)&unk_1013E9BD0);
    v83 = (uint64_t)v176;
    CRRegister.wrappedValue.getter(v82);
    swift_endAccess(v184);
    swift_release(v80);
    sub_1004B8460(v83, v169, type metadata accessor for CRLAssetData);
    sub_1004B84A4(v83, type metadata accessor for CRLUSDZAssetDataStruct);
    v84 = *(char **)(v79 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
    v85 = *(_QWORD *)&v84[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
    v86 = *(os_unfair_lock_s **)(v85 + 16);
    v87 = v84;
    os_unfair_lock_lock(v86);
    v88 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
    v89 = *(void **)&v87[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
    if (v89)
    {
      v90 = *(id *)&v87[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
    }
    else
    {
      v91 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager(0));
      v92 = v87;
      v93 = sub_100C7EE84((uint64_t)v92);

      v94 = *(void **)&v87[v88];
      *(_QWORD *)&v87[v88] = v93;
      v90 = v93;

      v89 = 0;
    }
    v95 = *(os_unfair_lock_s **)(v85 + 16);
    v96 = v89;
    os_unfair_lock_unlock(v95);
    v97 = v166;
    v98 = v169;
    sub_100C7857C(v169, 0, 3, 0, v166);

    sub_1004B84A4(v98, type metadata accessor for CRLAssetData);
    v99 = v168;
    v100 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v168 + 48))(v97, 1, v29);
    v174 = v12;
    v172 = v37;
    v161 = v36;
    if (v100 == 1)
    {
      sub_1004CB800((uint64_t)v97, &qword_1013E04D0);
      if (qword_1013DD7E8 != -1)
        swift_once(&qword_1013DD7E8, sub_100A04074);
      swift_beginAccess(&static OS_os_log.crlThreeDimensionalObjects, v184, 0, 0);
      v101 = (void *)static OS_os_log.crlThreeDimensionalObjects;
      v102 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v103 = swift_initStackObject(v102, &v181);
      *(_OWORD *)(v103 + 16) = xmmword_100EF5A10;
      v179 = v101;
      v104 = objc_msgSend(v178, "debugDescription");
      v105 = static String._unconditionallyBridgeFromObjectiveC(_:)(v104);
      v107 = v106;

      *(_QWORD *)(v103 + 56) = &type metadata for String;
      v108 = sub_1004CFC2C();
      *(_QWORD *)(v103 + 64) = v108;
      *(_QWORD *)(v103 + 32) = v105;
      *(_QWORD *)(v103 + 40) = v107;
      v109 = v175;
      v110 = *(_QWORD *)&v175[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 24];
      v111 = *(_QWORD *)&v175[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 32];
      sub_1004BB5A4(&v175[OBJC_IVAR____TtC8Freeform8CRLAsset_storage], v110);
      v112 = v177;
      v113 = (*(uint64_t (**)(uint64_t, uint64_t))(v111 + 24))(v110, v111);
      v114 = UUID.uuidString.getter(v113);
      v116 = v115;
      v117.n128_f64[0] = v161(v112, v174);
      *(_QWORD *)(v103 + 96) = &type metadata for String;
      *(_QWORD *)(v103 + 104) = v108;
      *(_QWORD *)(v103 + 72) = v114;
      *(_QWORD *)(v103 + 80) = v116;
      v118 = static os_log_type_t.debug.getter(v117);
      v119 = v179;
      sub_100A06EBC((uint64_t)v179, &_mh_execute_header, v118, "(USDZRep) [%{public}@] Asset downloaded but URL missing for asset %{public}@", 76, 2, v103);
      swift_setDeallocating(v103);
      v120 = *(_QWORD *)(v103 + 16);
      v121 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(v103 + 32, v120, v121);

      v122 = sub_1004B804C(&qword_1013FFB90);
      v123 = (uint64_t)v163;
      v124 = (char *)v163 + *(int *)(v122 + 48);
      *v163 = v109;
      v125 = type metadata accessor for CRLUSDZRep.AssetLoadingState.LoadingError(0);
      swift_storeEnumTagMultiPayload(v124, v125, 3);
      swift_storeEnumTagMultiPayload(v123, v164, 3);
      v126 = v165;
      swift_beginAccess(v165, v182, 33, 0);
      v127 = v109;
      sub_1009D7AB0(v123, v126, type metadata accessor for CRLUSDZRep.AssetLoadingState);
      swift_endAccess(v182);
      sub_1009BFC4C();
      sub_1004B84A4(v123, type metadata accessor for CRLUSDZRep.AssetLoadingState);

      swift_unknownObjectRelease(v172);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v99 + 32))(v167, v97, v29);
      if (qword_1013DD7E8 != -1)
        swift_once(&qword_1013DD7E8, sub_100A04074);
      swift_beginAccess(&static OS_os_log.crlThreeDimensionalObjects, v184, 0, 0);
      v128 = (void *)static OS_os_log.crlThreeDimensionalObjects;
      v129 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v130 = swift_initStackObject(v129, &v180);
      *(_OWORD *)(v130 + 16) = xmmword_100EF5550;
      v179 = v128;
      v131 = objc_msgSend(v178, "debugDescription");
      v132 = static String._unconditionallyBridgeFromObjectiveC(_:)(v131);
      v134 = v133;

      *(_QWORD *)(v130 + 56) = &type metadata for String;
      v135 = sub_1004CFC2C();
      *(_QWORD *)(v130 + 64) = v135;
      *(_QWORD *)(v130 + 32) = v132;
      *(_QWORD *)(v130 + 40) = v134;
      v136 = v175;
      v137 = *(_QWORD *)&v175[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 24];
      v138 = *(_QWORD *)&v175[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 32];
      sub_1004BB5A4(&v175[OBJC_IVAR____TtC8Freeform8CRLAsset_storage], v137);
      v139 = v177;
      v140 = (*(uint64_t (**)(uint64_t, uint64_t))(v138 + 24))(v137, v138);
      v141 = UUID.uuidString.getter(v140);
      v143 = v142;
      v144 = ((uint64_t (*)(char *, uint64_t))v161)(v139, v174);
      *(_QWORD *)(v130 + 96) = &type metadata for String;
      *(_QWORD *)(v130 + 104) = v135;
      *(_QWORD *)(v130 + 72) = v141;
      *(_QWORD *)(v130 + 80) = v143;
      v145 = UUID.uuidString.getter(v144);
      *(_QWORD *)(v130 + 136) = &type metadata for String;
      *(_QWORD *)(v130 + 144) = v135;
      *(_QWORD *)(v130 + 112) = v145;
      *(_QWORD *)(v130 + 120) = v146;
      v148 = static os_log_type_t.debug.getter(v147);
      v149 = v179;
      sub_100A06EBC((uint64_t)v179, &_mh_execute_header, v148, "(USDZRep) [%{public}@] USDZ asset downloaded %@, observerUUID %@", 64, 2, v130);
      swift_setDeallocating(v130);
      v150 = *(_QWORD *)(v130 + 16);
      v151 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(v130 + 32, v150, v151);

      v152 = (uint64_t)v162;
      *v162 = v136;
      v179 = v136;
      if (byte_1013DDFA0 == 1)
        v153 = sub_1009D0508();
      else
        v153 = 1;
      v155 = v164;
      v154 = v165;
      v156 = v172;
      v157 = v167;
      v158 = v152 + *(int *)(sub_1004B804C(&qword_1013FFB80) + 64);
      *(_BYTE *)(v152 + 8) = v153 & 1;
      v159 = v168;
      (*(void (**)(uint64_t, char *, uint64_t))(v168 + 16))(v158, v157, v29);
      swift_storeEnumTagMultiPayload(v152, v155, 1);
      swift_beginAccess(v154, v182, 33, 0);
      sub_1009D7AB0(v152, v154, type metadata accessor for CRLUSDZRep.AssetLoadingState);
      swift_endAccess(v182);
      sub_1009BFC4C();
      sub_1004B84A4(v152, type metadata accessor for CRLUSDZRep.AssetLoadingState);
      swift_unknownObjectRelease(v156);

      (*(void (**)(char *, uint64_t))(v159 + 8))(v157, v29);
    }
  }
  else
  {
    type metadata accessor for CRLAssetDownloadObserverStatus(0);
    v184[0] = v40;
    _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v160, v184, v160, &type metadata for Int);
    __break(1u);
  }
}

void sub_1009C5E5C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void *v23;
  char v24;
  char *v25;
  void (*v26)(char *, char *, uint64_t);
  char *v27;
  void *v28;
  uint64_t v29;
  uint64_t inited;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  int *v43;
  uint64_t v44;
  char *v45;
  uint64_t *v46;
  char *v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  _UNKNOWN ****v60;
  uint64_t v61;
  uint64_t v62;
  __n128 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __n128 v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char v80[72];
  char v81[24];
  _BYTE v82[24];
  char v83[72];
  _BYTE v84[16];

  v1 = v0;
  v78 = type metadata accessor for UUID(0);
  v77 = *(_QWORD *)(v78 - 8);
  __chkstk_darwin(v78);
  v3 = (char *)&v74 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRLUSDZAssetDataStruct(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CRLAssetData(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CRLUSDZRep.AssetLoadingState(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v74 - v14;
  v16 = type metadata accessor for URL(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = v1;
  if (v1[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingStrategy] == 2)
  {
    v20 = &v79[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_assetLoadingState];
    swift_beginAccess(&v79[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_assetLoadingState], v81, 0, 0);
    sub_1004B8460((uint64_t)v20, (uint64_t)v15, type metadata accessor for CRLUSDZRep.AssetLoadingState);
    v76 = v10;
    if (swift_getEnumCaseMultiPayload(v15, v10) == 1)
    {
      v75 = v12;
      v21 = v19;
      v22 = v16;
      v23 = *(void **)v15;
      v24 = v15[8];
      v25 = &v15[*(int *)(sub_1004B804C(&qword_1013FFB80) + 64)];
      if ((v24 & 1) != 0)
      {
        v74 = v23;
        v78 = (uint64_t)v20;
        v77 = v17;
        v26 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
        v27 = v21;
        v26(v21, v25, v22);
        if (qword_1013DD7E8 != -1)
          swift_once(&qword_1013DD7E8, sub_100A04074);
        swift_beginAccess(&static OS_os_log.crlThreeDimensionalObjects, v84, 0, 0);
        v28 = (void *)static OS_os_log.crlThreeDimensionalObjects;
        v29 = sub_1004B804C((uint64_t *)&unk_1013E0180);
        inited = swift_initStackObject(v29, v80);
        *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
        v31 = v28;
        v32 = v79;
        v33 = objc_msgSend(v79, "debugDescription");
        v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
        v36 = v35;

        *(_QWORD *)(inited + 56) = &type metadata for String;
        *(_QWORD *)(inited + 64) = sub_1004CFC2C();
        *(_QWORD *)(inited + 32) = v34;
        *(_QWORD *)(inited + 40) = v36;
        v38 = static os_log_type_t.debug.getter(v37);
        sub_100A06EBC((uint64_t)v31, &_mh_execute_header, v38, "(USDZRep) [%{public}@] loadInProcessRenderer()", 46, 2, inited);
        swift_setDeallocating(inited);
        v39 = sub_1004B804C(&qword_1013E0190);
        swift_arrayDestroy(inited + 32, 1, v39);

        v40 = _s13ARViewBackendCMa(0);
        v41 = swift_allocObject(v40, *(unsigned int *)(v40 + 48), *(unsigned __int16 *)(v40 + 52));
        *(_QWORD *)(v41 + 24) = 0;
        swift_unknownObjectWeakInit(v41 + 16);
        v42 = v32;
        UUID.init()(v42);
        *(_QWORD *)(v41 + 24) = &off_10128E8E8;
        swift_unknownObjectWeakAssign(v41 + 16, v42);

        *(_QWORD *)(v41 + 32) = 0;
        *(_QWORD *)(v41 + 48) = 0;
        *(_QWORD *)(v41 + 56) = 0;
        *(_QWORD *)(v41 + 64) = 0;
        *(_QWORD *)(v41 + 72) = 0xC000000000000000;
        *(_OWORD *)(v41 + 80) = 0u;
        *(_OWORD *)(v41 + 96) = 0u;
        *(_OWORD *)(v41 + 112) = 0u;
        *(_QWORD *)(v41 + 128) = 0;
        v43 = (int *)sub_1004B804C(&qword_1013FFB88);
        v44 = (uint64_t)v75;
        v45 = (char *)v75 + v43[12];
        v46 = (_QWORD *)((char *)v75 + v43[16]);
        v47 = (char *)v75 + v43[20];
        v48 = v74;
        *v75 = v74;
        v49 = v77;
        (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v45, v27, v22);
        *v46 = v41;
        v46[1] = (uint64_t)&off_1012A3DB0;
        *(_OWORD *)v47 = 0u;
        *((_OWORD *)v47 + 1) = 0u;
        *((_QWORD *)v47 + 4) = 0;
        *(_OWORD *)(v47 + 40) = xmmword_100F02BE0;
        swift_storeEnumTagMultiPayload(v44, v76, 2);
        v50 = v78;
        swift_beginAccess(v78, v82, 33, 0);
        v51 = v48;
        swift_retain(v41);
        sub_1009D7AB0(v44, v50, type metadata accessor for CRLUSDZRep.AssetLoadingState);
        v52 = swift_endAccess(v82);
        sub_1009BFC4C(v52);
        sub_1004B84A4(v44, type metadata accessor for CRLUSDZRep.AssetLoadingState);
        swift_release(v41);

        (*(void (**)(char *, uint64_t))(v49 + 8))(v27, v22);
        return;
      }

      (*(void (**)(char *, uint64_t))(v17 + 8))(v25, v22);
    }
    else
    {
      sub_1004B84A4((uint64_t)v15, type metadata accessor for CRLUSDZRep.AssetLoadingState);
    }
  }
  if (qword_1013DD7E8 != -1)
    swift_once(&qword_1013DD7E8, sub_100A04074);
  swift_beginAccess(&static OS_os_log.crlThreeDimensionalObjects, v84, 0, 0);
  v53 = (void *)static OS_os_log.crlThreeDimensionalObjects;
  v54 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  v55 = swift_initStackObject(v54, v83);
  *(_OWORD *)(v55 + 16) = xmmword_100EF5E40;
  v56 = v53;
  v57 = objc_msgSend(v79, "info");
  v58 = type metadata accessor for CRLUSDZItem(0);
  v59 = swift_dynamicCastClassUnconditional(v57, v58, 0, 0, 0);
  v60 = *(_UNKNOWN *****)(v59 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*v60 == &off_10140F528)
    v61 = *(_QWORD *)(v59 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  else
    v61 = 0;
  swift_beginAccess(v61 + qword_101481450, v82, 32, 0);
  swift_retain(v60);
  v62 = sub_1004B804C((uint64_t *)&unk_1013E9BD0);
  CRRegister.wrappedValue.getter(v62);
  swift_endAccess(v82);
  swift_release(v60);
  sub_1004B8460((uint64_t)v6, (uint64_t)v9, type metadata accessor for CRLAssetData);
  sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLUSDZAssetDataStruct);
  v63 = swift_unknownObjectRelease(v57);
  v64 = v77;
  v65 = v78;
  (*(void (**)(char *, char *, uint64_t, __n128))(v77 + 16))(v3, v9, v78, v63);
  v66 = sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLAssetData);
  v67 = UUID.uuidString.getter(v66);
  v69 = v68;
  (*(void (**)(char *, uint64_t))(v64 + 8))(v3, v65);
  *(_QWORD *)(v55 + 56) = &type metadata for String;
  *(_QWORD *)(v55 + 64) = sub_1004CFC2C();
  *(_QWORD *)(v55 + 32) = v67;
  *(_QWORD *)(v55 + 40) = v69;
  v71 = static os_log_type_t.default.getter(v70);
  sub_100A06EBC((uint64_t)v56, &_mh_execute_header, v71, "Cannot load USD renderer with unexpected loading state for asset %{public}@", 75, 2, v55);
  swift_setDeallocating(v55);
  v72 = *(_QWORD *)(v55 + 16);
  v73 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v55 + 32, v72, v73);

}

void sub_1009C65A0()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  char v25;
  char *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t inited;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int *v42;
  uint64_t v43;
  char *v44;
  uint64_t *v45;
  char *v46;
  void *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  _UNKNOWN ****v60;
  uint64_t v61;
  uint64_t v62;
  __n128 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __n128 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  _QWORD *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char v81[72];
  char v82[24];
  _BYTE v83[24];
  char v84[72];
  char v85[8];

  v80 = type metadata accessor for UUID(0);
  v1 = *(_QWORD *)(v80 - 8);
  __chkstk_darwin(v80);
  v3 = (char *)&v73 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRLUSDZAssetDataStruct(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CRLAssetData(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v10);
  v12 = (char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for CRLUSDZRep.AssetLoadingState(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v73 - v17;
  v19 = type metadata accessor for URL(0);
  __chkstk_darwin(v19);
  if (!v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingStrategy])
  {
    v76 = v12;
    v78 = (char *)&v73 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
    v77 = v15;
    v79 = v21;
    v22 = (uint64_t)&v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_assetLoadingState];
    swift_beginAccess(&v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_assetLoadingState], v82, 0, 0);
    sub_1004B8460(v22, (uint64_t)v18, type metadata accessor for CRLUSDZRep.AssetLoadingState);
    if (swift_getEnumCaseMultiPayload(v18, v13) == 1)
    {
      v23 = v13;
      v75 = v19;
      v24 = *(void **)v18;
      v25 = v18[8];
      v26 = &v18[*(int *)(sub_1004B804C(&qword_1013FFB80) + 64)];
      if ((v25 & 1) != 0)
      {
        v73 = v24;
        v74 = v22;
        v27 = v75;
        (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v78, v26, v75);
        if (qword_1013DD7E8 != -1)
          swift_once(&qword_1013DD7E8, sub_100A04074);
        swift_beginAccess(&static OS_os_log.crlThreeDimensionalObjects, v85, 0, 0);
        v28 = (void *)static OS_os_log.crlThreeDimensionalObjects;
        v29 = sub_1004B804C((uint64_t *)&unk_1013E0180);
        inited = swift_initStackObject(v29, v81);
        *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
        v31 = v28;
        v32 = objc_msgSend(v0, "debugDescription");
        v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
        v35 = v34;

        *(_QWORD *)(inited + 56) = &type metadata for String;
        *(_QWORD *)(inited + 64) = sub_1004CFC2C();
        *(_QWORD *)(inited + 32) = v33;
        *(_QWORD *)(inited + 40) = v35;
        v37 = static os_log_type_t.debug.getter(v36);
        sub_100A06EBC((uint64_t)v31, &_mh_execute_header, v37, "(USDZRep) [%{public}@] loadInProcessCoreRERenderer()", 52, 2, inited);
        swift_setDeallocating(inited);
        v38 = sub_1004B804C(&qword_1013E0190);
        swift_arrayDestroy(inited + 32, 1, v38);

        v39 = (uint64_t)v76;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56))(v76, 1, 1, v80);
        v40 = _s10RepBackendCMa(0);
        swift_allocObject(v40, *(unsigned int *)(v40 + 48), *(unsigned __int16 *)(v40 + 52));
        v0;
        v41 = sub_10068FBF0(v39, (uint64_t)v0, (uint64_t)&off_10128E8E8, 2);
        v42 = (int *)sub_1004B804C(&qword_1013FFB88);
        v43 = (uint64_t)v77;
        v44 = (char *)v77 + v42[12];
        v45 = (_QWORD *)((char *)v77 + v42[16]);
        v46 = (char *)v77 + v42[20];
        v47 = v73;
        *v77 = v73;
        v48 = v79;
        v49 = v78;
        (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v44, v78, v27);
        *v45 = v41;
        v45[1] = (uint64_t)&off_101275C60;
        *(_OWORD *)v46 = 0u;
        *((_OWORD *)v46 + 1) = 0u;
        *((_QWORD *)v46 + 4) = 0;
        *(_OWORD *)(v46 + 40) = xmmword_100F02BE0;
        swift_storeEnumTagMultiPayload(v43, v23, 2);
        v50 = v74;
        swift_beginAccess(v74, v83, 33, 0);
        v51 = v47;
        swift_retain(v41);
        sub_1009D7AB0(v43, v50, type metadata accessor for CRLUSDZRep.AssetLoadingState);
        v52 = swift_endAccess(v83);
        sub_1009BFC4C(v52);
        sub_1004B84A4(v43, type metadata accessor for CRLUSDZRep.AssetLoadingState);
        swift_release(v41);

        (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v27);
        return;
      }

      (*(void (**)(char *, uint64_t))(v79 + 8))(v26, v75);
    }
    else
    {
      sub_1004B84A4((uint64_t)v18, type metadata accessor for CRLUSDZRep.AssetLoadingState);
    }
  }
  if (qword_1013DD7E8 != -1)
    swift_once(&qword_1013DD7E8, sub_100A04074);
  swift_beginAccess(&static OS_os_log.crlThreeDimensionalObjects, v85, 0, 0);
  v53 = (void *)static OS_os_log.crlThreeDimensionalObjects;
  v54 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  v55 = swift_initStackObject(v54, v84);
  *(_OWORD *)(v55 + 16) = xmmword_100EF5E40;
  v56 = v53;
  v57 = objc_msgSend(v0, "info");
  v58 = type metadata accessor for CRLUSDZItem(0);
  v59 = swift_dynamicCastClassUnconditional(v57, v58, 0, 0, 0);
  v60 = *(_UNKNOWN *****)(v59 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*v60 == &off_10140F528)
    v61 = *(_QWORD *)(v59 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  else
    v61 = 0;
  swift_beginAccess(v61 + qword_101481450, v83, 32, 0);
  swift_retain(v60);
  v62 = sub_1004B804C((uint64_t *)&unk_1013E9BD0);
  CRRegister.wrappedValue.getter(v62);
  swift_endAccess(v83);
  swift_release(v60);
  sub_1004B8460((uint64_t)v6, (uint64_t)v9, type metadata accessor for CRLAssetData);
  sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLUSDZAssetDataStruct);
  v63 = swift_unknownObjectRelease(v57);
  v64 = v80;
  (*(void (**)(char *, char *, uint64_t, __n128))(v1 + 16))(v3, v9, v80, v63);
  v65 = sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLAssetData);
  v66 = UUID.uuidString.getter(v65);
  v68 = v67;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v64);
  *(_QWORD *)(v55 + 56) = &type metadata for String;
  *(_QWORD *)(v55 + 64) = sub_1004CFC2C();
  *(_QWORD *)(v55 + 32) = v66;
  *(_QWORD *)(v55 + 40) = v68;
  v70 = static os_log_type_t.default.getter(v69);
  sub_100A06EBC((uint64_t)v56, &_mh_execute_header, v70, "Cannot load USD renderer with unexpected loading state for asset %{public}@", 75, 2, v55);
  swift_setDeallocating(v55);
  v71 = *(_QWORD *)(v55 + 16);
  v72 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v55 + 32, v71, v72);

}

void sub_1009C6CF4()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  char *v24;
  int v25;
  _QWORD *v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t inited;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  char *v42;
  id v43;
  int *v44;
  char *v45;
  _QWORD *v46;
  char *v47;
  id v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  id v52;
  id v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  _UNKNOWN ****v62;
  uint64_t v63;
  uint64_t v64;
  __n128 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __n128 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  char *v79;
  uint64_t v80;
  char v81[72];
  char v82[24];
  _BYTE v83[24];
  char v84[72];
  _BYTE v85[16];

  v80 = type metadata accessor for UUID(0);
  v1 = *(_QWORD *)(v80 - 8);
  __chkstk_darwin(v80);
  v3 = (char *)&v75 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRLUSDZAssetDataStruct(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CRLAssetData(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v75 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CRLUSDZRep.AssetLoadingState(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v75 - v14;
  v16 = type metadata accessor for URL(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  if (v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingStrategy] == 1)
  {
    v78 = v12;
    v79 = (char *)&v75 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
    v19 = v10;
    v20 = &v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_assetLoadingState];
    swift_beginAccess(&v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_assetLoadingState], v82, 0, 0);
    v77 = (uint64_t)v20;
    v21 = (uint64_t)v20;
    v22 = v19;
    sub_1004B8460(v21, (uint64_t)v15, type metadata accessor for CRLUSDZRep.AssetLoadingState);
    if (swift_getEnumCaseMultiPayload(v15, v19) == 1)
    {
      v76 = v16;
      v75 = *(id *)v15;
      v23 = v15[8];
      v24 = &v15[*(int *)(sub_1004B804C(&qword_1013FFB80) + 64)];
      if (byte_1013DDFA0 == 1)
      {
        v25 = sub_1009D0508();
        v26 = v78;
        if (((v23 ^ v25) & 1) == 0)
        {
LABEL_5:
          v80 = v17;
          v27 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
          v28 = v76;
          v27(v79, v24, v76);
          if (qword_1013DD7E8 != -1)
            swift_once(&qword_1013DD7E8, sub_100A04074);
          swift_beginAccess(&static OS_os_log.crlThreeDimensionalObjects, v85, 0, 0);
          v29 = (void *)static OS_os_log.crlThreeDimensionalObjects;
          v30 = sub_1004B804C((uint64_t *)&unk_1013E0180);
          inited = swift_initStackObject(v30, v81);
          *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
          v32 = v29;
          v33 = objc_msgSend(v0, "debugDescription");
          v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
          v36 = v35;

          *(_QWORD *)(inited + 56) = &type metadata for String;
          *(_QWORD *)(inited + 64) = sub_1004CFC2C();
          *(_QWORD *)(inited + 32) = v34;
          *(_QWORD *)(inited + 40) = v36;
          v38 = static os_log_type_t.debug.getter(v37);
          sub_100A06EBC((uint64_t)v32, &_mh_execute_header, v38, "(USDZRep) [%{public}@] loadOutOfProcessCoreRERenderer()", 55, 2, inited);
          swift_setDeallocating(inited);
          v39 = sub_1004B804C(&qword_1013E0190);
          swift_arrayDestroy(inited + 32, 1, v39);

          if (byte_1013DDFA0)
            v40 = 8;
          else
            v40 = 0;
          v41 = objc_allocWithZone((Class)_s15AppExRepBackendCMa(0));
          v42 = v0;
          v43 = sub_10068C5C4((uint64_t)v0, (uint64_t)&off_10128E8E8, v40);

          v44 = (int *)sub_1004B804C(&qword_1013FFB88);
          v45 = (char *)v26 + v44[12];
          v46 = (_QWORD *)((char *)v26 + v44[16]);
          v47 = (char *)v26 + v44[20];
          v48 = v75;
          *v26 = v75;
          v49 = v80;
          v50 = v79;
          (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v45, v79, v28);
          *v46 = v43;
          v46[1] = &off_1012756C0;
          *(_OWORD *)v47 = 0u;
          *((_OWORD *)v47 + 1) = 0u;
          *((_QWORD *)v47 + 4) = 0;
          *(_OWORD *)(v47 + 40) = xmmword_100F02BE0;
          swift_storeEnumTagMultiPayload(v26, v22, 2);
          v51 = v77;
          swift_beginAccess(v77, v83, 33, 0);
          v52 = v48;
          v53 = v43;
          sub_1009D7AB0((uint64_t)v26, v51, type metadata accessor for CRLUSDZRep.AssetLoadingState);
          v54 = swift_endAccess(v83);
          sub_1009BFC4C(v54);
          sub_1004B84A4((uint64_t)v26, type metadata accessor for CRLUSDZRep.AssetLoadingState);

          (*(void (**)(char *, uint64_t))(v49 + 8))(v50, v28);
          return;
        }
      }
      else
      {
        v26 = v78;
        if ((v23 & 1) != 0)
          goto LABEL_5;
      }

      (*(void (**)(char *, uint64_t))(v17 + 8))(v24, v76);
    }
    else
    {
      sub_1004B84A4((uint64_t)v15, type metadata accessor for CRLUSDZRep.AssetLoadingState);
    }
  }
  if (qword_1013DD7E8 != -1)
    swift_once(&qword_1013DD7E8, sub_100A04074);
  swift_beginAccess(&static OS_os_log.crlThreeDimensionalObjects, v85, 0, 0);
  v55 = (void *)static OS_os_log.crlThreeDimensionalObjects;
  v56 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  v57 = swift_initStackObject(v56, v84);
  *(_OWORD *)(v57 + 16) = xmmword_100EF5E40;
  v58 = v55;
  v59 = objc_msgSend(v0, "info");
  v60 = type metadata accessor for CRLUSDZItem(0);
  v61 = swift_dynamicCastClassUnconditional(v59, v60, 0, 0, 0);
  v62 = *(_UNKNOWN *****)(v61 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*v62 == &off_10140F528)
    v63 = *(_QWORD *)(v61 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  else
    v63 = 0;
  swift_beginAccess(v63 + qword_101481450, v83, 32, 0);
  swift_retain(v62);
  v64 = sub_1004B804C((uint64_t *)&unk_1013E9BD0);
  CRRegister.wrappedValue.getter(v64);
  swift_endAccess(v83);
  swift_release(v62);
  sub_1004B8460((uint64_t)v6, (uint64_t)v9, type metadata accessor for CRLAssetData);
  sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLUSDZAssetDataStruct);
  v65 = swift_unknownObjectRelease(v59);
  v66 = v80;
  (*(void (**)(char *, char *, uint64_t, __n128))(v1 + 16))(v3, v9, v80, v65);
  v67 = sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLAssetData);
  v68 = UUID.uuidString.getter(v67);
  v70 = v69;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v66);
  *(_QWORD *)(v57 + 56) = &type metadata for String;
  *(_QWORD *)(v57 + 64) = sub_1004CFC2C();
  *(_QWORD *)(v57 + 32) = v68;
  *(_QWORD *)(v57 + 40) = v70;
  v72 = static os_log_type_t.default.getter(v71);
  sub_100A06EBC((uint64_t)v58, &_mh_execute_header, v72, "Cannot load USD renderer with unexpected loading state for asset %{public}@", 75, 2, v57);
  swift_setDeallocating(v57);
  v73 = *(_QWORD *)(v57 + 16);
  v74 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v57 + 32, v73, v74);

}

void sub_1009C7410()
{
  char *v0;
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (**v19)(char *, char *, uint64_t, __n128);
  char *v20;
  void (**v21)(char *, char *, uint64_t, __n128);
  uint64_t v22;
  void *v23;
  char v24;
  char *v25;
  void (*v26)(void (**)(char *, char *, uint64_t, __n128), char *, uint64_t);
  void *v27;
  uint64_t v28;
  uint64_t inited;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64x2_t *v40;
  __int8 *v41;
  id v42;
  __int8 *v43;
  uint64_t v44;
  int *v45;
  uint64_t v46;
  char *v47;
  int64x2_t **v48;
  char *v49;
  void *v50;
  void (**v51)(char *, char *, uint64_t, __n128);
  uint64_t v52;
  id v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  _UNKNOWN ****v64;
  uint64_t v65;
  uint64_t v66;
  __n128 v67;
  void (**v68)(char *, char *, uint64_t, __n128);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __n128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  _QWORD *v79;
  uint64_t v80;
  void (**v81)(char *, char *, uint64_t, __n128);
  uint64_t v82;
  char *v83;
  char v84[72];
  char v85[24];
  _BYTE v86[24];
  char v87[72];
  _BYTE v88[16];

  v1 = v0;
  v82 = type metadata accessor for UUID(0);
  v81 = *(void (***)(char *, char *, uint64_t, __n128))(v82 - 8);
  __chkstk_darwin(v82);
  v3 = (char *)&v78 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRLUSDZAssetDataStruct(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v78 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CRLAssetData(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CRLUSDZRep.AssetLoadingState(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v78 - v14;
  v16 = type metadata accessor for URL(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (void (**)(char *, char *, uint64_t, __n128))((char *)&v78 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v83 = v1;
  if (v1[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingStrategy] == 3)
  {
    v20 = &v83[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_assetLoadingState];
    swift_beginAccess(&v83[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_assetLoadingState], v85, 0, 0);
    sub_1004B8460((uint64_t)v20, (uint64_t)v15, type metadata accessor for CRLUSDZRep.AssetLoadingState);
    v80 = v10;
    if (swift_getEnumCaseMultiPayload(v15, v10) == 1)
    {
      v79 = v12;
      v21 = v19;
      v22 = v16;
      v23 = *(void **)v15;
      v24 = v15[8];
      v25 = &v15[*(int *)(sub_1004B804C(&qword_1013FFB80) + 64)];
      if ((v24 & 1) != 0)
      {
        v78 = v23;
        v82 = (uint64_t)v20;
        v26 = *(void (**)(void (**)(char *, char *, uint64_t, __n128), char *, uint64_t))(v17 + 32);
        v81 = v21;
        v26(v21, v25, v22);
        if (qword_1013DD7E8 != -1)
          swift_once(&qword_1013DD7E8, sub_100A04074);
        swift_beginAccess(&static OS_os_log.crlThreeDimensionalObjects, v88, 0, 0);
        v27 = (void *)static OS_os_log.crlThreeDimensionalObjects;
        v28 = sub_1004B804C((uint64_t *)&unk_1013E0180);
        inited = swift_initStackObject(v28, v84);
        *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
        v30 = v27;
        v31 = v83;
        v32 = objc_msgSend(v83, "debugDescription");
        v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
        v35 = v34;

        *(_QWORD *)(inited + 56) = &type metadata for String;
        *(_QWORD *)(inited + 64) = sub_1004CFC2C();
        *(_QWORD *)(inited + 32) = v33;
        *(_QWORD *)(inited + 40) = v35;
        v37 = static os_log_type_t.debug.getter(v36);
        sub_100A06EBC((uint64_t)v30, &_mh_execute_header, v37, "(USDZRep) [%{public}@] loadQLRenderer()", 39, 2, inited);
        swift_setDeallocating(inited);
        v38 = sub_1004B804C(&qword_1013E0190);
        swift_arrayDestroy(inited + 32, 1, v38);

        v39 = _s17QLSnapshotBackendCMa(0);
        v40 = (int64x2_t *)swift_allocObject(v39, *(unsigned int *)(v39 + 48), *(unsigned __int16 *)(v39 + 52));
        v40[1] = vdupq_n_s64(0x408F400000000000uLL);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56))((uint64_t)v40->i64 + OBJC_IVAR____TtCO8Freeform15CRLUSDRendering17QLSnapshotBackend_modelURL, 1, 1, v22);
        v41 = &v40->i8[OBJC_IVAR____TtCO8Freeform15CRLUSDRendering17QLSnapshotBackend_delegate];
        *((_QWORD *)v41 + 1) = 0;
        swift_unknownObjectWeakInit(v41);
        v42 = v31;
        UUID.init()(v42);
        *((_QWORD *)v41 + 1) = &off_10128E8E8;
        swift_unknownObjectWeakAssign(v41, v42);

        v43 = &v40->i8[OBJC_IVAR____TtCO8Freeform15CRLUSDRendering17QLSnapshotBackend_backendState];
        v44 = _s17QLSnapshotBackendC12BackendStateOMa(0);
        swift_storeEnumTagMultiPayload(v43, v44, 2);
        v45 = (int *)sub_1004B804C(&qword_1013FFB88);
        v46 = (uint64_t)v79;
        v47 = (char *)v79 + v45[12];
        v48 = (int64x2_t **)((char *)v79 + v45[16]);
        v49 = (char *)v79 + v45[20];
        v50 = v78;
        *v79 = v78;
        v51 = v81;
        (*(void (**)(char *, void (**)(char *, char *, uint64_t, __n128), uint64_t))(v17 + 16))(v47, v81, v22);
        *v48 = v40;
        v48[1] = (int64x2_t *)&off_101279820;
        *(_OWORD *)v49 = 0u;
        *((_OWORD *)v49 + 1) = 0u;
        *((_QWORD *)v49 + 4) = 0;
        *(_OWORD *)(v49 + 40) = xmmword_100F02BE0;
        swift_storeEnumTagMultiPayload(v46, v80, 2);
        v52 = v82;
        swift_beginAccess(v82, v86, 33, 0);
        v53 = v50;
        v54 = v22;
        v55 = v53;
        swift_retain(v40);
        sub_1009D7AB0(v46, v52, type metadata accessor for CRLUSDZRep.AssetLoadingState);
        v56 = swift_endAccess(v86);
        sub_1009BFC4C(v56);
        sub_1004B84A4(v46, type metadata accessor for CRLUSDZRep.AssetLoadingState);
        swift_release(v40);

        (*(void (**)(void (**)(char *, char *, uint64_t, __n128), uint64_t))(v17 + 8))(v51, v54);
        return;
      }

      (*(void (**)(char *, uint64_t))(v17 + 8))(v25, v22);
    }
    else
    {
      sub_1004B84A4((uint64_t)v15, type metadata accessor for CRLUSDZRep.AssetLoadingState);
    }
  }
  if (qword_1013DD7E8 != -1)
    swift_once(&qword_1013DD7E8, sub_100A04074);
  swift_beginAccess(&static OS_os_log.crlThreeDimensionalObjects, v88, 0, 0);
  v57 = (void *)static OS_os_log.crlThreeDimensionalObjects;
  v58 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  v59 = swift_initStackObject(v58, v87);
  *(_OWORD *)(v59 + 16) = xmmword_100EF5E40;
  v60 = v57;
  v61 = objc_msgSend(v83, "info");
  v62 = type metadata accessor for CRLUSDZItem(0);
  v63 = swift_dynamicCastClassUnconditional(v61, v62, 0, 0, 0);
  v64 = *(_UNKNOWN *****)(v63 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*v64 == &off_10140F528)
    v65 = *(_QWORD *)(v63 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  else
    v65 = 0;
  swift_beginAccess(v65 + qword_101481450, v86, 32, 0);
  swift_retain(v64);
  v66 = sub_1004B804C((uint64_t *)&unk_1013E9BD0);
  CRRegister.wrappedValue.getter(v66);
  swift_endAccess(v86);
  swift_release(v64);
  sub_1004B8460((uint64_t)v6, (uint64_t)v9, type metadata accessor for CRLAssetData);
  sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLUSDZAssetDataStruct);
  v67 = swift_unknownObjectRelease(v61);
  v68 = v81;
  v69 = v82;
  v81[2](v3, v9, v82, v67);
  v70 = sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLAssetData);
  v71 = UUID.uuidString.getter(v70);
  v73 = v72;
  ((void (*)(char *, uint64_t))v68[1])(v3, v69);
  *(_QWORD *)(v59 + 56) = &type metadata for String;
  *(_QWORD *)(v59 + 64) = sub_1004CFC2C();
  *(_QWORD *)(v59 + 32) = v71;
  *(_QWORD *)(v59 + 40) = v73;
  v75 = static os_log_type_t.default.getter(v74);
  sub_100A06EBC((uint64_t)v60, &_mh_execute_header, v75, "Cannot load USD renderer with unexpected loading state for asset %{public}@", 75, 2, v59);
  swift_setDeallocating(v59);
  v76 = *(_QWORD *)(v59 + 16);
  v77 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v59 + 32, v76, v77);

}

void sub_1009C7B98()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  int *v14;
  char *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  __int128 v38;
  char *v39;
  char v40[24];

  v1 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v1);
  v39 = (char *)&v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for CRLUSDZRep.AssetLoadingState(0);
  __chkstk_darwin(v3);
  v5 = (id *)((char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v38 - v11;
  v13 = (uint64_t)&v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_assetLoadingState];
  swift_beginAccess(&v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_assetLoadingState], v40, 0, 0);
  sub_1004B8460(v13, (uint64_t)v5, type metadata accessor for CRLUSDZRep.AssetLoadingState);
  if (swift_getEnumCaseMultiPayload(v5, v3) == 2)
  {

    v14 = (int *)sub_1004B804C(&qword_1013FFB88);
    v15 = (char *)v5 + v14[12];
    v16 = v14[16];
    v17 = (uint64_t *)((char *)v5 + v14[20]);
    v18 = *v17;
    v19 = v17[1];
    v20 = v17[2];
    v21 = v17[3];
    v22 = v17[4];
    v23 = v17[5];
    v24 = v17[6];
    v38 = *(_OWORD *)((char *)v5 + v16);
    sub_100689EAC(v18, v19, v20, v21, v22, v23, v24);
    v25 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v25(v12, v15, v6);
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v12, v6);
    v26 = *(unsigned __int8 *)(v7 + 80);
    v27 = (v26 + 24) & ~v26;
    v28 = swift_allocObject(&unk_10128EA30, v27 + v8, v26 | 7);
    *(_QWORD *)(v28 + 16) = v0;
    v25((char *)(v28 + v27), v9, v6);
    v29 = type metadata accessor for TaskPriority(0);
    v30 = (uint64_t)v39;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v39, 1, 1, v29);
    type metadata accessor for MainActor(0);
    v31 = v0;
    v32 = v38;
    swift_unknownObjectRetain(v38);
    swift_retain(v28);
    v34 = static MainActor.shared.getter(v33);
    v35 = swift_allocObject(&unk_10128EA58, 72, 7);
    *(_QWORD *)(v35 + 16) = v34;
    *(_QWORD *)(v35 + 24) = &protocol witness table for MainActor;
    *(_QWORD *)(v35 + 32) = v31;
    *(_OWORD *)(v35 + 40) = v38;
    *(_QWORD *)(v35 + 56) = &unk_1013FFEF0;
    *(_QWORD *)(v35 + 64) = v28;
    v36 = sub_100521B98(v30, (uint64_t)&unk_1013FFEF8, v35);
    swift_release(v36);
    swift_release(v28);
    v37 = swift_unknownObjectRelease(v32);
    (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v12, v6, v37);
  }
  else
  {
    sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLUSDZRep.AssetLoadingState);
    sub_100757E04(&_mh_execute_header, (uint64_t)"loadSceneInRenderer()", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZRep.swift", 81, 2, 1267, "Unexpected loading state for USD scene loading.", 47, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"loadSceneInRenderer()", 21, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZRep.swift", 81, 2u, 1267, (uint64_t)"Unexpected loading state for USD scene loading.", 47, 2u);
  }
}

uint64_t sub_1009C7F10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4[16] = a3;
  v4[17] = a4;
  v4[14] = a1;
  v4[15] = a2;
  v5 = sub_1004B804C(&qword_1013E04D0);
  v4[18] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for URL(0);
  v4[19] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v4[20] = v7;
  v4[21] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLUSDRendering.SceneRequest(0);
  v4[22] = v8;
  v9 = (*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[23] = swift_task_alloc(v9);
  v4[24] = swift_task_alloc(v9);
  v10 = type metadata accessor for MainActor(0);
  v4[25] = static MainActor.shared.getter(v10);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v10, &protocol witness table for MainActor);
  v4[26] = v11;
  v4[27] = v12;
  return swift_task_switch(sub_1009C8000, v11, v12);
}

uint64_t sub_1009C8000()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t inited;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  id v17;
  uint64_t v18;
  __int128 v19;
  CGFloat width;
  CGFloat height;
  double v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  double v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  _OWORD *v47;
  uint64_t ObjectType;
  int *v49;
  _QWORD *v50;
  uint64_t v52;
  __int128 v53;
  int *v54;
  CGRect v55;
  CGRect v56;

  if (qword_1013DD7E8 != -1)
    swift_once(&qword_1013DD7E8, sub_100A04074);
  v1 = v0[20];
  v52 = v0[21];
  v2 = v0[19];
  v3 = (void *)v0[16];
  v4 = v0[17];
  swift_beginAccess(&static OS_os_log.crlThreeDimensionalObjects, v0 + 11, 0, 0);
  v5 = (void *)static OS_os_log.crlThreeDimensionalObjects;
  v6 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v6, v0 + 2);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v8 = v5;
  v9 = objc_msgSend(v3, "debugDescription");
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v12 = v11;

  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v10;
  *(_QWORD *)(inited + 40) = v12;
  v14 = static os_log_type_t.debug.getter(v13);
  sub_100A06EBC((uint64_t)v8, &_mh_execute_header, v14, "(USDZRep) [%{public}@] loadSceneInRenderer()", 44, 2, inited);
  swift_setDeallocating(inited);
  v15 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v15);

  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16);
  v16(v52, v4, v2);
  v17 = objc_msgSend(v3, "layout");
  v18 = type metadata accessor for CRLUSDZLayout();
  swift_dynamicCastClassUnconditional(v17, v18, 0, 0, 0);
  sub_1006CF2A8();
  v53 = v19;

  objc_msgSend(v3, "layerFrameInScaledCanvas");
  v56 = CGRectIntegral(v55);
  width = v56.size.width;
  height = v56.size.height;
  objc_msgSend(v3, "layerFrameInScaledCanvas", v56.origin.x, v56.origin.y);
  sub_1009CF580(v22, v23);
  v25 = v24;
  v27 = v26;
  v28 = objc_msgSend(v3, "canvas");
  if (v28)
  {
    v29 = v28;
    objc_msgSend(v28, "contentsScale");
    v31 = v30;

  }
  else
  {
    v31 = 2.0;
  }
  v33 = v0[20];
  v32 = v0[21];
  v35 = v0[18];
  v34 = v0[19];
  v16(v0[23], v32, v34);
  v16(v35, v32, v34);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v33 + 56))(v35, 0, 1, v34);
  v36 = URL.bookmarkData(options:includingResourceValuesForKeys:relativeTo:)(0, 0, v35);
  v38 = v37;
  v40 = v0[23];
  v39 = v0[24];
  v41 = (int *)v0[22];
  v42 = v0[18];
  v43 = v0[14];
  v44 = v0[15];
  (*(void (**)(_QWORD, _QWORD))(v0[20] + 8))(v0[21], v0[19]);
  sub_1004CB800(v42, &qword_1013E04D0);
  v45 = (uint64_t *)(v40 + v41[5]);
  *v45 = v36;
  v45[1] = v38;
  v46 = v40 + v41[6];
  *(_DWORD *)v46 = 1103626240;
  *(_OWORD *)(v46 + 16) = v53;
  *(CGFloat *)(v46 + 32) = width;
  *(CGFloat *)(v46 + 40) = height;
  *(_QWORD *)(v46 + 48) = v25;
  *(_QWORD *)(v46 + 56) = v27;
  *(double *)(v46 + 64) = v31;
  v47 = (_OWORD *)(v40 + v41[7]);
  *v47 = 0u;
  v47[1] = 0u;
  sub_1004B84E0(v40, v39, type metadata accessor for CRLUSDRendering.SceneRequest);
  ObjectType = swift_getObjectType(v43);
  v49 = *(int **)(v44 + 16);
  v54 = (int *)((char *)v49 + *v49);
  v50 = (_QWORD *)swift_task_alloc(v49[1]);
  v0[28] = v50;
  *v50 = v0;
  v50[1] = sub_1009C842C;
  return ((uint64_t (*)(_QWORD, uint64_t, _QWORD))v54)(v0[24], ObjectType, v0[15]);
}

uint64_t sub_1009C842C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 224);
  *(_QWORD *)(*v1 + 232) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_1009C8504;
  else
    v4 = sub_1009C848C;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 208), *(_QWORD *)(v2 + 216));
}

uint64_t sub_1009C848C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 144);
  swift_release(*(_QWORD *)(v0 + 200));
  sub_1004B84A4(v1, type metadata accessor for CRLUSDRendering.SceneRequest);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009C8504()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 192);
  swift_release(*(_QWORD *)(v0 + 200));
  sub_1004B84A4(v1, type metadata accessor for CRLUSDRendering.SceneRequest);
  v2 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 144);
  swift_task_dealloc(*(_QWORD *)(v0 + 192));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009C8578(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[12] = a2;
  v3[13] = a3;
  v3[11] = a1;
  v4 = type metadata accessor for MainActor(0);
  v3[14] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  v3[15] = v5;
  v3[16] = v6;
  return swift_task_switch(sub_1009C85E8, v5, v6);
}

uint64_t sub_1009C85E8()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  __int128 v4;
  CGFloat width;
  CGFloat height;
  double v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  double v15;
  double v16;
  uint64_t v17;
  uint64_t ObjectType;
  int *v19;
  _QWORD *v20;
  __int128 v22;
  int *v23;
  CGRect v24;
  CGRect v25;

  v1 = *(void **)(v0 + 104);
  v2 = objc_msgSend(v1, "layout");
  v3 = type metadata accessor for CRLUSDZLayout();
  swift_dynamicCastClassUnconditional(v2, v3, 0, 0, 0);
  sub_1006CF2A8();
  v22 = v4;

  objc_msgSend(v1, "layerFrameInScaledCanvas");
  v25 = CGRectIntegral(v24);
  width = v25.size.width;
  height = v25.size.height;
  objc_msgSend(v1, "layerFrameInScaledCanvas", v25.origin.x, v25.origin.y);
  sub_1009CF580(v7, v8);
  v10 = v9;
  v12 = v11;
  v13 = objc_msgSend(v1, "canvas");
  if (v13)
  {
    v14 = v13;
    objc_msgSend(v13, "contentsScale");
    v16 = v15;

  }
  else
  {
    v16 = 2.0;
  }
  v17 = *(_QWORD *)(v0 + 96);
  ObjectType = swift_getObjectType(*(_QWORD *)(v0 + 88));
  *(_DWORD *)(v0 + 16) = 1103626240;
  *(_OWORD *)(v0 + 32) = v22;
  *(CGFloat *)(v0 + 48) = width;
  *(CGFloat *)(v0 + 56) = height;
  *(_QWORD *)(v0 + 64) = v10;
  *(_QWORD *)(v0 + 72) = v12;
  *(double *)(v0 + 80) = v16;
  v19 = *(int **)(v17 + 24);
  v23 = (int *)((char *)v19 + *v19);
  v20 = (_QWORD *)swift_task_alloc(v19[1]);
  *(_QWORD *)(v0 + 136) = v20;
  *v20 = v0;
  v20[1] = sub_1009C8760;
  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))v23)(v0 + 16, ObjectType, *(_QWORD *)(v0 + 96));
}

uint64_t sub_1009C8760()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 136);
  *(_QWORD *)(*v1 + 144) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_1009C87F4;
  else
    v4 = sub_1009C87C0;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 120), *(_QWORD *)(v2 + 128));
}

uint64_t sub_1009C87C0()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_release(*(_QWORD *)(v0 + 112));
  return (*(uint64_t (**)(__n128))(v0 + 8))(v1);
}

uint64_t sub_1009C87F4()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_release(*(_QWORD *)(v0 + 112));
  return (*(uint64_t (**)(__n128))(v0 + 8))(v1);
}

id sub_1009C8828(unsigned __int8 *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unsigned int v18;
  char *v19;
  char *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  char *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int (*v33)(uint64_t, uint64_t, uint64_t);
  unsigned __int8 *v34;
  char *v35;
  char v36;
  double v37;
  void (*v38)(char *, uint64_t, double);
  id v39;
  id v40;
  unsigned __int8 *v41;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  unsigned __int8 *v47;
  unsigned __int8 *v48;
  uint64_t v49;
  id v50;
  unsigned int v51;
  char *v52;

  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C((uint64_t *)&unk_1013F62D0);
  __chkstk_darwin(v6);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v9);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v43 - v13;
  __chkstk_darwin(v15);
  v17 = (char *)&v43 - v16;
  v52 = (char *)sub_1009CF138();
  v18 = a1[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState + 8];
  if (v18 > 0x3F)
    goto LABEL_13;
  v48 = a1;
  v49 = v6;
  v51 = v18;
  v45 = v5;
  v47 = &a1[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState];
  v19 = *(char **)&a1[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState];
  v20 = *(char **)&v19[OBJC_IVAR____TtC8Freeform33CRLUndownloadedAssetDrawingHelper_asset];
  v21 = &qword_1013FC000;
  v50 = v19;
  if (v20)
  {
    v23 = *(_QWORD *)&v20[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 24];
    v22 = *(_QWORD *)&v20[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 32];
    sub_1004BB5A4(&v20[OBJC_IVAR____TtC8Freeform8CRLAsset_storage], v23);
    v46 = v11;
    v44 = v2;
    v24 = *(void (**)(uint64_t, uint64_t))(v22 + 24);
    sub_1009D3B34(v19, v51);
    v25 = v20;
    v26 = v22;
    v21 = &qword_1013FC000;
    v24(v23, v26);
    v2 = v44;
    v11 = v46;

    v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    v27(v17, 0, 1, v2);
  }
  else
  {
    v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    v27(v17, 1, 1, v2);
    v28 = v19;
  }
  v29 = &v52[v21[210]];
  v30 = *((_QWORD *)v29 + 3);
  v31 = *((_QWORD *)v29 + 4);
  sub_1004BB5A4(v29, v30);
  (*(void (**)(uint64_t, uint64_t))(v31 + 24))(v30, v31);
  v27(v14, 0, 1, v2);
  v32 = (uint64_t)&v8[*(int *)(v49 + 48)];
  sub_1004CB7BC((uint64_t)v17, (uint64_t)v8, (uint64_t *)&unk_1013E1A50);
  sub_1004CB7BC((uint64_t)v14, v32, (uint64_t *)&unk_1013E1A50);
  v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (v33((uint64_t)v8, 1, v2) != 1)
  {
    sub_1004CB7BC((uint64_t)v8, (uint64_t)v11, (uint64_t *)&unk_1013E1A50);
    if (v33(v32, 1, v2) != 1)
    {
      v35 = v45;
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v45, v32, v2);
      sub_1004B7878((unint64_t *)&qword_1013E4880, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v36 = dispatch thunk of static Equatable.== infix(_:_:)(v11, v35);
      v37 = sub_1009D3B68(v50, v51);
      v38 = *(void (**)(char *, uint64_t, double))(v3 + 8);
      v38(v35, v2, v37);
      sub_1004CB800((uint64_t)v14, (uint64_t *)&unk_1013E1A50);
      sub_1004CB800((uint64_t)v17, (uint64_t *)&unk_1013E1A50);
      ((void (*)(char *, uint64_t))v38)(v11, v2);
      sub_1004CB800((uint64_t)v8, (uint64_t *)&unk_1013E1A50);
      v34 = v47;
      a1 = v48;
      if ((v36 & 1) != 0)
        goto LABEL_12;
LABEL_13:
      v40 = objc_allocWithZone((Class)type metadata accessor for CRLUndownloadedAssetDrawingHelper());
      v41 = a1;
      return sub_100D3ED9C(v41, v52);
    }
    sub_1009D3B68(v50, v51);
    sub_1004CB800((uint64_t)v14, (uint64_t *)&unk_1013E1A50);
    sub_1004CB800((uint64_t)v17, (uint64_t *)&unk_1013E1A50);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v11, v2);
LABEL_10:
    sub_1004CB800((uint64_t)v8, (uint64_t *)&unk_1013F62D0);
    a1 = v48;
    goto LABEL_13;
  }
  sub_1009D3B68(v50, v51);
  sub_1004CB800((uint64_t)v14, (uint64_t *)&unk_1013E1A50);
  sub_1004CB800((uint64_t)v17, (uint64_t *)&unk_1013E1A50);
  if (v33(v32, 1, v2) != 1)
    goto LABEL_10;
  sub_1004CB800((uint64_t)v8, (uint64_t *)&unk_1013E1A50);
  v34 = v47;
LABEL_12:

  v39 = *(id *)v34;
  sub_1009D3B34(*(id *)v34, v34[8]);
  return v39;
}

uint64_t sub_1009C8C94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v8[25] = a7;
  v8[26] = a8;
  v8[23] = a5;
  v8[24] = a6;
  v8[22] = a4;
  v9 = type metadata accessor for URL(0);
  v8[27] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v8[28] = v10;
  v8[29] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for CRLUSDZRep.AssetLoadingState(0);
  v8[30] = v11;
  v12 = (*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[31] = swift_task_alloc(v12);
  v8[32] = swift_task_alloc(v12);
  v8[33] = swift_task_alloc(v12);
  v8[34] = swift_task_alloc(v12);
  v13 = type metadata accessor for MainActor(0);
  v8[35] = static MainActor.shared.getter(v13);
  v14 = dispatch thunk of Actor.unownedExecutor.getter(v13, &protocol witness table for MainActor);
  v8[36] = v14;
  v8[37] = v15;
  return swift_task_switch(sub_1009C8D7C, v14, v15);
}

uint64_t sub_1009C8D7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void **v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  int *v11;
  char *v12;
  uint64_t v13;
  uint64_t *v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v23;
  _QWORD *v24;
  int *v25;

  v1 = *(_QWORD *)(v0 + 272);
  v2 = *(_QWORD *)(v0 + 240);
  v3 = *(_QWORD *)(v0 + 176);
  v4 = OBJC_IVAR____TtC8Freeform10CRLUSDZRep_assetLoadingState;
  *(_QWORD *)(v0 + 304) = OBJC_IVAR____TtC8Freeform10CRLUSDZRep_assetLoadingState;
  v5 = v3 + v4;
  swift_beginAccess(v3 + v4, v0 + 16, 0, 0);
  sub_1004B8460(v5, v1, type metadata accessor for CRLUSDZRep.AssetLoadingState);
  if (swift_getEnumCaseMultiPayload(v1, v2) != 2)
  {
    v17 = *(_QWORD *)(v0 + 272);
    swift_release(*(_QWORD *)(v0 + 280));
    sub_1004B84A4(v17, type metadata accessor for CRLUSDZRep.AssetLoadingState);
    goto LABEL_5;
  }
  v6 = *(void ***)(v0 + 272);
  v7 = *(_QWORD *)(v0 + 216);
  v8 = *(_QWORD *)(v0 + 224);
  v9 = *(_QWORD *)(v0 + 184);
  v10 = *v6;
  *(_QWORD *)(v0 + 312) = *v6;
  v11 = (int *)sub_1004B804C(&qword_1013FFB88);
  *(_QWORD *)(v0 + 320) = v11;
  v12 = (char *)v6 + v11[12];
  v13 = *(uint64_t *)((char *)v6 + v11[16]);
  v14 = (uint64_t *)((char *)v6 + v11[20]);
  sub_100689EAC(*v14, v14[1], v14[2], v14[3], v14[4], v14[5], v14[6]);
  v15 = *(void (**)(char *, uint64_t))(v8 + 8);
  *(_QWORD *)(v0 + 328) = v15;
  v15(v12, v7);
  if (v13 != v9)
  {
    v16 = *(_QWORD *)(v0 + 280);

    swift_unknownObjectRelease(v13);
    swift_release(v16);
LABEL_5:
    v18 = *(_QWORD *)(v0 + 264);
    v20 = *(_QWORD *)(v0 + 248);
    v19 = *(_QWORD *)(v0 + 256);
    v21 = *(_QWORD *)(v0 + 232);
    swift_task_dealloc(*(_QWORD *)(v0 + 272));
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v23 = *(int **)(v0 + 200);
  v25 = (int *)((char *)v23 + *v23);
  v24 = (_QWORD *)swift_task_alloc(v23[1]);
  *(_QWORD *)(v0 + 336) = v24;
  *v24 = v0;
  v24[1] = sub_1009C8F3C;
  return ((uint64_t (*)(_QWORD, _QWORD))v25)(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 192));
}

uint64_t sub_1009C8F3C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 336);
  *(_QWORD *)(*v1 + 344) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_1009C901C;
  else
    v4 = sub_1009C8F9C;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 288), *(_QWORD *)(v2 + 296));
}

uint64_t sub_1009C8F9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 280);
  v2 = *(_QWORD *)(v0 + 184);

  swift_release(v1);
  swift_unknownObjectRelease(v2);
  v3 = *(_QWORD *)(v0 + 264);
  v5 = *(_QWORD *)(v0 + 248);
  v4 = *(_QWORD *)(v0 + 256);
  v6 = *(_QWORD *)(v0 + 232);
  swift_task_dealloc(*(_QWORD *)(v0 + 272));
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009C901C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  char *v13;
  uint64_t *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v44;
  void (*v45)(uint64_t, uint64_t);
  id v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;

  v1 = *(_QWORD *)(v0 + 304);
  v2 = *(_QWORD *)(v0 + 240);
  v3 = *(_QWORD *)(v0 + 248);
  v4 = *(_QWORD *)(v0 + 176);
  swift_release(*(_QWORD *)(v0 + 280));
  sub_1004B8460(v4 + v1, v3, type metadata accessor for CRLUSDZRep.AssetLoadingState);
  if (swift_getEnumCaseMultiPayload(v3, v2) == 2)
  {
    v47 = v0 + 88;
    v5 = *(_QWORD *)(v0 + 344);
    v6 = *(int **)(v0 + 320);
    v7 = *(_QWORD **)(v0 + 264);
    v8 = *(void ***)(v0 + 248);
    v10 = *(_QWORD *)(v0 + 224);
    v9 = *(_QWORD *)(v0 + 232);
    v11 = *(_QWORD *)(v0 + 216);
    v12 = *v8;
    v13 = (char *)v8 + v6[12];
    v14 = (uint64_t *)((char *)v8 + v6[20]);
    v48 = *(_OWORD *)((char *)v8 + v6[16]);
    sub_100689EAC(*v14, v14[1], v14[2], v14[3], v14[4], v14[5], v14[6]);
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v9, v13, v11);
    v15 = (char *)v7 + v6[12];
    v16 = v6[16];
    *v7 = v12;
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v15, v9, v11);
    *(_OWORD *)((char *)v7 + v16) = v48;
    *(_QWORD *)(v0 + 160) = v5;
    v46 = v12;
    swift_unknownObjectRetain(v48);
    swift_errorRetain(v5);
    v17 = sub_1004B804C(&qword_1013E0210);
    if (swift_dynamicCast(v0 + 112, v0 + 160, v17, &type metadata for CRLUSDRendering.RendererError, 6))
    {
      v18 = *(_QWORD *)(v0 + 112);
      v19 = *(_QWORD *)(v0 + 120);
      v20 = *(unsigned __int8 *)(v0 + 128);
    }
    else
    {
      v30 = *(_QWORD *)(v0 + 344);
      *(_QWORD *)(v0 + 168) = v30;
      swift_errorRetain(v30);
      if ((swift_dynamicCast(v0 + 136, v0 + 168, v17, &type metadata for CRLUSDRendererExtensionShared.ExtensionError, 6) & 1) != 0)
      {
        v18 = *(_QWORD *)(v0 + 136);
        v19 = *(_QWORD *)(v0 + 144);
        v20 = 4;
      }
      else
      {
        swift_getErrorValue(*(_QWORD *)(v0 + 344), v0 + 152, v0 + 64);
        v18 = Error.localizedDescription.getter(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
        v20 = 5;
      }
    }
    v31 = *(_QWORD *)(v0 + 344);
    v44 = *(void **)(v0 + 312);
    v45 = *(void (**)(uint64_t, uint64_t))(v0 + 328);
    v32 = *(_QWORD *)(v0 + 264);
    v34 = *(_QWORD *)(v0 + 232);
    v33 = *(_QWORD *)(v0 + 240);
    v35 = *(_QWORD *)(v0 + 216);
    v36 = *(_QWORD *)(v0 + 184);
    v37 = *(_QWORD *)(v0 + 176) + *(_QWORD *)(v0 + 304);
    v38 = v32 + *(int *)(*(_QWORD *)(v0 + 320) + 80);
    *(_QWORD *)v38 = v18;
    *(_QWORD *)(v38 + 8) = v19;
    *(_QWORD *)(v38 + 24) = 0;
    *(_QWORD *)(v38 + 32) = 0;
    *(_QWORD *)(v38 + 16) = v20;
    *(_OWORD *)(v38 + 40) = xmmword_100EEF410;
    swift_storeEnumTagMultiPayload(v32, v33, 2);
    swift_beginAccess(v37, v47, 33, 0);
    sub_1009D7AB0(v32, v37, type metadata accessor for CRLUSDZRep.AssetLoadingState);
    swift_endAccess(v47);
    sub_1009BFC4C();
    sub_1004B84A4(v32, type metadata accessor for CRLUSDZRep.AssetLoadingState);

    swift_unknownObjectRelease(v48);
    swift_unknownObjectRelease(v36);
    swift_errorRelease(v31);

    v45(v34, v35);
  }
  else
  {
    v21 = *(_QWORD *)(v0 + 344);
    v22 = *(void **)(v0 + 312);
    v23 = *(_QWORD **)(v0 + 256);
    v49 = *(_QWORD *)(v0 + 248);
    v24 = *(_QWORD *)(v0 + 240);
    v25 = *(_QWORD *)(v0 + 184);
    v26 = *(_QWORD *)(v0 + 176) + *(_QWORD *)(v0 + 304);
    v27 = (_QWORD *)((char *)v23 + *(int *)(sub_1004B804C(&qword_1013FFB90) + 48));
    *v23 = v22;
    *v27 = v21;
    v28 = type metadata accessor for CRLUSDZRep.AssetLoadingState.LoadingError(0);
    swift_storeEnumTagMultiPayload(v27, v28, 1);
    swift_storeEnumTagMultiPayload(v23, v24, 3);
    swift_beginAccess(v26, v0 + 40, 33, 0);
    swift_errorRetain(v21);
    v29 = v22;
    sub_1009D7AB0((uint64_t)v23, v26, type metadata accessor for CRLUSDZRep.AssetLoadingState);
    swift_endAccess(v0 + 40);
    sub_1009BFC4C();
    sub_1004B84A4((uint64_t)v23, type metadata accessor for CRLUSDZRep.AssetLoadingState);

    swift_errorRelease(v21);
    swift_unknownObjectRelease(v25);
    sub_1004B84A4(v49, type metadata accessor for CRLUSDZRep.AssetLoadingState);
  }
  v39 = *(_QWORD *)(v0 + 264);
  v41 = *(_QWORD *)(v0 + 248);
  v40 = *(_QWORD *)(v0 + 256);
  v42 = *(_QWORD *)(v0 + 232);
  swift_task_dealloc(*(_QWORD *)(v0 + 272));
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1009C93E4()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unsigned __int8 v4;
  _OWORD *v5;
  uint64_t v6;
  void (*v7)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  __int128 v15;

  v1 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v1);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState + 8];
  if ((v4 & 0xC0) == 0x40)
  {
    v5 = *(_OWORD **)&v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState];
    v6 = type metadata accessor for TaskPriority(0);
    v7 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
    v15 = v5[1];
    v7(v3, 1, 1, v6);
    type metadata accessor for MainActor(0);
    v8 = v15;
    swift_unknownObjectRetain_n(v15, 2);
    sub_1009D3B34(v5, v4);
    v9 = v0;
    v10 = static MainActor.shared.getter(v9);
    v11 = swift_allocObject(&unk_10128EA08, 72, 7);
    *(_QWORD *)(v11 + 16) = v10;
    *(_QWORD *)(v11 + 24) = &protocol witness table for MainActor;
    *(_QWORD *)(v11 + 32) = v9;
    *(_OWORD *)(v11 + 40) = v15;
    *(_QWORD *)(v11 + 56) = &unk_1013FFED8;
    *(_QWORD *)(v11 + 64) = 0;
    v12 = sub_100521B98((uint64_t)v3, (uint64_t)&unk_1013FFEE0, v11);
    swift_release(v12);
    swift_unknownObjectRelease(v8);
    sub_1009D3B68(v5, v4);
  }
  else
  {
    sub_1004B8930(0, (unint64_t *)&qword_1013E7C00, OS_os_log_ptr);
    *(_QWORD *)&v15 = static OS_os_log.default.getter();
    v14 = static os_log_type_t.default.getter(v13);
    sub_100A06EBC(v15, &_mh_execute_header, v14, "Incorrect renderingState to start playback.", 43, 2, (uint64_t)_swiftEmptyArrayStorage);

  }
}

uint64_t sub_1009C95B8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t ObjectType;
  int *v7;
  _QWORD *v8;
  int *v10;

  v5 = type metadata accessor for MainActor(0);
  v2[2] = v5;
  v2[3] = static MainActor.shared.getter(v5);
  ObjectType = swift_getObjectType(a1);
  v7 = *(int **)(a2 + 32);
  v10 = (int *)((char *)v7 + *v7);
  v8 = (_QWORD *)swift_task_alloc(v7[1]);
  v2[4] = v8;
  *v8 = v2;
  v8[1] = sub_100688BDC;
  return ((uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t))v10)(0, 0, ObjectType, a2);
}

void sub_1009C9658(char a1)
{
  _BYTE *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unsigned __int8 v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  __int128 v18;

  v3 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v3);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v1[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState + 8];
  if ((v6 & 0xC0) == 0x40)
  {
    v7 = *(_OWORD **)&v1[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState];
    v8 = swift_allocObject(&unk_10128E9B8, 17, 7);
    v9 = type metadata accessor for TaskPriority(0);
    v18 = v7[1];
    *(_BYTE *)(v8 + 16) = a1 & 1;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v5, 1, 1, v9);
    type metadata accessor for MainActor(0);
    v10 = v18;
    swift_unknownObjectRetain_n(v18, 2);
    sub_1009D3B34(v7, v6);
    v11 = v1;
    swift_retain(v8);
    v13 = static MainActor.shared.getter(v12);
    v14 = swift_allocObject(&unk_10128E9E0, 72, 7);
    *(_QWORD *)(v14 + 16) = v13;
    *(_QWORD *)(v14 + 24) = &protocol witness table for MainActor;
    *(_QWORD *)(v14 + 32) = v11;
    *(_OWORD *)(v14 + 40) = v18;
    *(_QWORD *)(v14 + 56) = &unk_1013FFEC8;
    *(_QWORD *)(v14 + 64) = v8;
    v15 = sub_100521B98((uint64_t)v5, (uint64_t)&unk_1013FFED0, v14);
    swift_release(v15);
    swift_release(v8);
    swift_unknownObjectRelease(v10);
    sub_1009D3B68(v7, v6);
  }
  else
  {
    sub_1004B8930(0, (unint64_t *)&qword_1013E7C00, OS_os_log_ptr);
    *(_QWORD *)&v18 = static OS_os_log.default.getter();
    v17 = static os_log_type_t.default.getter(v16);
    sub_100A06EBC(v18, &_mh_execute_header, v17, "Incorrect renderingState to stop playback.", 42, 2, (uint64_t)_swiftEmptyArrayStorage);

  }
}

uint64_t sub_1009C9860(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  uint64_t v7;
  uint64_t ObjectType;
  int *v9;
  _QWORD *v10;
  uint64_t v11;
  int *v13;

  v7 = type metadata accessor for MainActor(0);
  v3[2] = v7;
  v3[3] = static MainActor.shared.getter(v7);
  ObjectType = swift_getObjectType(a1);
  v9 = *(int **)(a2 + 32);
  v13 = (int *)((char *)v9 + *v9);
  v10 = (_QWORD *)swift_task_alloc(v9[1]);
  v3[4] = v10;
  *v10 = v3;
  if ((a3 & 1) != 0)
  {
    v10[1] = sub_1009C992C;
    v11 = 4;
  }
  else
  {
    v10[1] = sub_1009C99B4;
    v11 = 5;
  }
  return ((uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))v13)(0, v11, ObjectType, a2);
}

uint64_t sub_1009C992C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc(v2);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  if (v0)
    v6 = sub_1009C9A3C;
  else
    v6 = sub_100689858;
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_1009C99B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc(v2);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  if (v0)
    v6 = sub_1005B3828;
  else
    v6 = sub_10068F0C0;
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_1009C9A3C()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_release(*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(__n128))(v0 + 8))(v1);
}

void sub_1009C9A70()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unsigned __int8 v4;
  _OWORD *v5;
  uint64_t v6;
  void (*v7)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  __int128 v15;

  v1 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v1);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState + 8];
  if ((v4 & 0xC0) == 0x40)
  {
    v5 = *(_OWORD **)&v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState];
    v6 = type metadata accessor for TaskPriority(0);
    v7 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
    v15 = v5[1];
    v7(v3, 1, 1, v6);
    type metadata accessor for MainActor(0);
    v8 = v15;
    swift_unknownObjectRetain_n(v15, 2);
    sub_1009D3B34(v5, v4);
    v9 = v0;
    v10 = static MainActor.shared.getter(v9);
    v11 = swift_allocObject(&unk_10128E990, 72, 7);
    *(_QWORD *)(v11 + 16) = v10;
    *(_QWORD *)(v11 + 24) = &protocol witness table for MainActor;
    *(_QWORD *)(v11 + 32) = v9;
    *(_OWORD *)(v11 + 40) = v15;
    *(_QWORD *)(v11 + 56) = &unk_1013FFEB0;
    *(_QWORD *)(v11 + 64) = 0;
    v12 = sub_100521B98((uint64_t)v3, (uint64_t)&unk_1013FFEB8, v11);
    swift_release(v12);
    swift_unknownObjectRelease(v8);
    sub_1009D3B68(v5, v4);
  }
  else
  {
    sub_1004B8930(0, (unint64_t *)&qword_1013E7C00, OS_os_log_ptr);
    *(_QWORD *)&v15 = static OS_os_log.default.getter();
    v14 = static os_log_type_t.default.getter(v13);
    sub_100A06EBC(v15, &_mh_execute_header, v14, "Incorrect renderingState to resume playback.", 44, 2, (uint64_t)_swiftEmptyArrayStorage);

  }
}

uint64_t sub_1009C9C44(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t ObjectType;
  int *v7;
  _QWORD *v8;
  int *v10;

  v5 = type metadata accessor for MainActor(0);
  v2[2] = v5;
  v2[3] = static MainActor.shared.getter(v5);
  ObjectType = swift_getObjectType(a1);
  v7 = *(int **)(a2 + 32);
  v10 = (int *)((char *)v7 + *v7);
  v8 = (_QWORD *)swift_task_alloc(v7[1]);
  v2[4] = v8;
  *v8 = v2;
  v8[1] = sub_100688BDC;
  return ((uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))v10)(0, 3, ObjectType, a2);
}

void sub_1009C9CE4()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unsigned __int8 v4;
  _OWORD *v5;
  uint64_t v6;
  void (*v7)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  __int128 v15;

  v1 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v1);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState + 8];
  if ((v4 & 0xC0) == 0x40)
  {
    v5 = *(_OWORD **)&v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState];
    v6 = type metadata accessor for TaskPriority(0);
    v7 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
    v15 = v5[1];
    v7(v3, 1, 1, v6);
    type metadata accessor for MainActor(0);
    v8 = v15;
    swift_unknownObjectRetain_n(v15, 2);
    sub_1009D3B34(v5, v4);
    v9 = v0;
    v10 = static MainActor.shared.getter(v9);
    v11 = swift_allocObject(&unk_10128E968, 72, 7);
    *(_QWORD *)(v11 + 16) = v10;
    *(_QWORD *)(v11 + 24) = &protocol witness table for MainActor;
    *(_QWORD *)(v11 + 32) = v9;
    *(_OWORD *)(v11 + 40) = v15;
    *(_QWORD *)(v11 + 56) = &unk_1013FFE90;
    *(_QWORD *)(v11 + 64) = 0;
    v12 = sub_100521B98((uint64_t)v3, (uint64_t)&unk_1013FFEA0, v11);
    swift_release(v12);
    swift_unknownObjectRelease(v8);
    sub_1009D3B68(v5, v4);
  }
  else
  {
    sub_1004B8930(0, (unint64_t *)&qword_1013E7C00, OS_os_log_ptr);
    *(_QWORD *)&v15 = static OS_os_log.default.getter();
    v14 = static os_log_type_t.default.getter(v13);
    sub_100A06EBC(v15, &_mh_execute_header, v14, "Incorrect renderingState to pause playback.", 43, 2, (uint64_t)_swiftEmptyArrayStorage);

  }
}

uint64_t sub_1009C9EB8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t ObjectType;
  int *v7;
  _QWORD *v8;
  int *v10;

  v5 = type metadata accessor for MainActor(0);
  v2[2] = v5;
  v2[3] = static MainActor.shared.getter(v5);
  ObjectType = swift_getObjectType(a1);
  v7 = *(int **)(a2 + 32);
  v10 = (int *)((char *)v7 + *v7);
  v8 = (_QWORD *)swift_task_alloc(v7[1]);
  v2[4] = v8;
  *v8 = v2;
  v8[1] = sub_1009C9F58;
  return ((uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))v10)(0, 2, ObjectType, a2);
}

uint64_t sub_1009C9F58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc(v2);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  if (v0)
    v6 = sub_10068988C;
  else
    v6 = sub_10068F0C0;
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_1009CA33C(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char v7;
  objc_class *v9;
  _BYTE v10[24];
  objc_super v11;

  v3 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_knobController];
  v4 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_playPauseKnob);
  if (v4)
  {
    if (*(_BYTE *)(v4 + OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_isPlaying) == 1)
    {
      v5 = (uint64_t *)(v3 + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_currentKnobs);
      swift_beginAccess(v3 + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_currentKnobs, v10, 0, 0);
      v6 = *v5;
      swift_bridgeObjectRetain(v6);
      v7 = sub_100C9DDD8(a1, v6);
      swift_bridgeObjectRelease();
      if ((v7 & 1) != 0)
        return 1;
    }
  }
  v9 = (objc_class *)type metadata accessor for CRLUSDZRep(0);
  v11.receiver = v1;
  v11.super_class = v9;
  return (uint64_t)objc_msgSendSuper2(&v11, "directlyManagesVisibilityOfKnob:", a1);
}

void sub_1009CA490(char a1)
{
  void *v1;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  id v12;

  v3 = objc_msgSend(v1, "interactiveCanvasController");
  if (v3)
  {
    v12 = v3;
    v4 = objc_msgSend(v3, "layerHost");
    if (!v4
      || (v5 = v4,
          v6 = objc_msgSend(v4, "miniFormatterPresenter"),
          swift_unknownObjectRelease(v5),
          !v6))
    {
LABEL_11:

      return;
    }
    v7 = objc_msgSend(v1, "interactiveCanvasController");
    if (v7)
    {
      v8 = v7;
      v9 = objc_msgSend(v7, "editorController");

      if (v9)
      {
        v10 = objc_msgSend(v9, "selectionPath");

        if (v10)
        {
          objc_msgSend(v6, "presentMiniFormatterForSelectionPath:", v10);
          if ((a1 & 1) != 0)
          {
            v11 = OBJC_IVAR____TtC8Freeform10CRLUSDZRep_waitingToHideMiniFormatter;
            if ((*((_BYTE *)v1 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_waitingToHideMiniFormatter) & 1) == 0)
            {
              objc_msgSend(v1, "performSelector:withObject:afterDelay:", "hideMiniFormatterIfNecessary", 0, 3.25);
              *((_BYTE *)v1 + v11) = 1;
            }
          }
          swift_unknownObjectRelease(v6);

          goto LABEL_11;
        }
      }
    }

    swift_unknownObjectRelease(v6);
  }
}

void sub_1009CA620()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  unsigned __int8 v10;

  v1 = objc_msgSend(v0, "interactiveCanvasController");
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v1, "layerHost");

    if (v3)
    {
      v4 = objc_msgSend(v3, "miniFormatterPresenter");
      swift_unknownObjectRelease(v3);
      if (v4)
      {
        v5 = OBJC_IVAR____TtC8Freeform10CRLUSDZRep_waitingToHideMiniFormatter;
        if (*((_BYTE *)v0 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_waitingToHideMiniFormatter) == 1)
        {
          objc_msgSend((id)objc_opt_self(NSObject), "cancelPreviousPerformRequestsWithTarget:selector:object:", v0, "hideMiniFormatterIfNecessary", 0);
          *((_BYTE *)v0 + v5) = 0;
        }
        v6 = objc_msgSend(v0, "interactiveCanvasController");
        if (!v6
          || (v7 = v6, v8 = objc_msgSend(v6, "layerHost"), v7, !v8)
          || (v9 = objc_msgSend(v8, "miniFormatterPresenter"),
              swift_unknownObjectRelease(v8),
              !v9)
          || (v10 = objc_msgSend(v9, "isPresentingSecondLayerPopover"),
              swift_unknownObjectRelease(v9),
              (v10 & 1) == 0))
        {
          objc_msgSend(v4, "dismissMiniFormatterForRep:", v0);
        }
        swift_unknownObjectRelease(v4);
      }
    }
  }
}

uint64_t sub_1009CA7CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  id *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  int *v12;
  char *v13;
  __n128 v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE v30[24];
  char v31[24];

  v1 = type metadata accessor for CRLUSDZRep.AssetLoadingState(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (id *)((char *)&v24 - v5);
  v7 = type metadata accessor for URL(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v0 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_assetLoadingState;
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_assetLoadingState, v31, 0, 0);
  sub_1004B8460(v11, (uint64_t)v6, type metadata accessor for CRLUSDZRep.AssetLoadingState);
  if (swift_getEnumCaseMultiPayload(v6, v1) != 2)
    return sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLUSDZRep.AssetLoadingState);
  v29 = v0;

  v12 = (int *)sub_1004B804C(&qword_1013FFB88);
  v13 = (char *)v6 + v12[12];
  v14 = swift_unknownObjectRelease(*(id *)((char *)v6 + v12[16]));
  v15 = (uint64_t *)((char *)v6 + v12[20]);
  v16 = *v15;
  v27 = v15[1];
  v28 = v16;
  v17 = v15[2];
  v18 = v15[4];
  v25 = v15[3];
  v26 = v17;
  v19 = v15[5];
  v20 = v15[6];
  (*(void (**)(char *, char *, uint64_t, __n128))(v8 + 32))(v10, v13, v7, v14);
  if (v19 >> 62)
  {
    sub_100689EAC(v28, v27, v26, v25, v18, v19, v20);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v21 = &v3[*(int *)(sub_1004B804C(&qword_1013FFB80) + 64)];
    v22 = v29;
    *(_QWORD *)v3 = sub_1009CF138();
    v3[8] = 0;
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v21, v10, v7);
    swift_storeEnumTagMultiPayload(v3, v1, 1);
    swift_beginAccess(v11, v30, 33, 0);
    sub_1009D7AB0((uint64_t)v3, v11, type metadata accessor for CRLUSDZRep.AssetLoadingState);
    swift_endAccess(v30);
    sub_1009BFC4C();
    sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLUSDZRep.AssetLoadingState);
    result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    *(_BYTE *)(v22 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_rendererHasBeenSuspended) = 1;
  }
  return result;
}

void sub_1009CAA84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  void **v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  char v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  _BYTE v22[24];
  char v23[24];

  v1 = v0;
  v2 = type metadata accessor for CRLUSDZRep.AssetLoadingState(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (void **)((char *)&v18 - v6);
  v8 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = OBJC_IVAR____TtC8Freeform10CRLUSDZRep_rendererHasBeenSuspended;
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_rendererHasBeenSuspended) == 1)
  {
    v13 = v1 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_assetLoadingState;
    swift_beginAccess(v1 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_assetLoadingState, v23, 0, 0);
    sub_1004B8460(v13, (uint64_t)v7, type metadata accessor for CRLUSDZRep.AssetLoadingState);
    if (swift_getEnumCaseMultiPayload(v7, v2) == 1)
    {
      v20 = v12;
      v14 = *v7;
      v19 = sub_1004B804C(&qword_1013FFB80);
      v21 = (char *)v7 + *(int *)(v19 + 64);
      v15 = (void *)sub_1009CF138();
      type metadata accessor for CRLAsset();
      v16 = static NSObject.== infix(_:_:)(v15, v14);

      if ((v16 & 1) != 0)
      {
        (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v21, v8);
        v17 = &v4[*(int *)(v19 + 64)];
        *(_QWORD *)v4 = sub_1009CF138();
        v4[8] = 1;
        (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v17, v11, v8);
        swift_storeEnumTagMultiPayload(v4, v2, 1);
        swift_beginAccess(v13, v22, 33, 0);
        sub_1009D7AB0((uint64_t)v4, v13, type metadata accessor for CRLUSDZRep.AssetLoadingState);
        swift_endAccess(v22);
        sub_1009BFC4C();
        sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLUSDZRep.AssetLoadingState);
        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
        *(_BYTE *)(v1 + v20) = 0;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v9 + 8))(v21, v8);
      }
    }
    else
    {
      sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLUSDZRep.AssetLoadingState);
    }
  }
}

void sub_1009CAD74()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  double v26;
  int64_t v27;
  unint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t i;
  id v37;
  void *v38;
  id v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  int64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  _QWORD *v50;
  _QWORD v51[5];

  if (*((_BYTE *)v0 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_isInteractive) == 1)
  {
    v1 = objc_msgSend(v0, "interactiveCanvasController");
    if (v1)
    {
      v2 = v1;
      v3 = objc_msgSend(v1, "editorController");
      if (v3
        && (v4 = v3, v5 = objc_msgSend(v3, "selectionPath"), v4, v5))
      {
        v6 = objc_msgSend(v2, "selectionModelTranslator");
        if (v6)
        {
          v7 = v6;
          v8 = objc_msgSend(v6, "boardItemsForSelectionPath:", v5);

          v9 = type metadata accessor for CRLBoardItem(0);
          v10 = (_QWORD *)sub_1004B7878((unint64_t *)&qword_1013E4190, type metadata accessor for CRLBoardItem, (uint64_t)&protocol conformance descriptor for NSObject);
          v42 = v9;
          v11 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v8, v9, v10);

          v41 = v5;
          if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
          {
LABEL_69:
            if (_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
            {
              sub_1004B6DB8((uint64_t)_swiftEmptyArrayStorage);
              goto LABEL_8;
            }
          }
          v12 = &_swiftEmptySetSingleton;
LABEL_8:
          v50 = v12;
          if ((v11 & 0xC000000000000001) != 0)
          {
            if (v11 < 0)
              v13 = v11;
            else
              v13 = v11 & 0xFFFFFFFFFFFFFF8;
            v14 = __CocoaSet.makeIterator()(v13);
            v12 = Set.Iterator.init(_cocoa:)(v51, v14, v42, v10);
            v11 = v51[0];
            v44 = v51[1];
            v15 = v51[2];
            v16 = v51[3];
            v17 = v51[4];
          }
          else
          {
            v16 = 0;
            v18 = -1 << *(_BYTE *)(v11 + 32);
            v44 = v11 + 56;
            v15 = ~v18;
            v19 = -v18;
            if (v19 < 64)
              v20 = ~(-1 << v19);
            else
              v20 = -1;
            v17 = v20 & *(_QWORD *)(v11 + 56);
          }
          v40 = v15;
          v43 = (unint64_t)(v15 + 64) >> 6;
          v45 = v11;
          while (1)
          {
            if (v11 < 0)
            {
              v24 = __CocoaSet.Iterator.next()(v12);
              if (!v24)
                goto LABEL_64;
              v10 = (_QWORD *)v24;
              v48 = v24;
              swift_unknownObjectRetain(v24);
              swift_dynamicCast(&v49, &v48, (char *)&type metadata for Swift.AnyObject + 8, v42, 7);
              v25 = v49;
              *(_QWORD *)&v26 = swift_unknownObjectRelease(v10).n128_u64[0];
              v23 = v16;
              v21 = v17;
            }
            else
            {
              if (v17)
              {
                v21 = (v17 - 1) & v17;
                v22 = __clz(__rbit64(v17)) | (v16 << 6);
                v23 = v16;
              }
              else
              {
                v27 = v16 + 1;
                if (__OFADD__(v16, 1))
                {
                  __break(1u);
                  goto LABEL_69;
                }
                if (v27 >= v43)
                  goto LABEL_64;
                v28 = *(_QWORD *)(v44 + 8 * v27);
                v23 = v16 + 1;
                if (!v28)
                {
                  v23 = v16 + 2;
                  if (v16 + 2 >= v43)
                    goto LABEL_64;
                  v28 = *(_QWORD *)(v44 + 8 * v23);
                  if (!v28)
                  {
                    v23 = v16 + 3;
                    if (v16 + 3 >= v43)
                      goto LABEL_64;
                    v28 = *(_QWORD *)(v44 + 8 * v23);
                    if (!v28)
                    {
                      v23 = v16 + 4;
                      if (v16 + 4 >= v43)
                        goto LABEL_64;
                      v28 = *(_QWORD *)(v44 + 8 * v23);
                      if (!v28)
                      {
                        v29 = v16 + 5;
                        while (v43 != v29)
                        {
                          v28 = *(_QWORD *)(v44 + 8 * v29++);
                          if (v28)
                          {
                            v23 = v29 - 1;
                            goto LABEL_43;
                          }
                        }
LABEL_64:
                        sub_1004D284C(v11);

                        return;
                      }
                    }
                  }
                }
LABEL_43:
                v21 = (v28 - 1) & v28;
                v22 = __clz(__rbit64(v28)) + (v23 << 6);
              }
              v25 = *(id *)(*(_QWORD *)(v11 + 48) + 8 * v22);
            }
            if (!v25)
              goto LABEL_64;
            v30 = objc_msgSend(v2, "repForInfo:", v25, v26);
            if (v30)
            {
              v10 = &v50;
              sub_100AD7828((Swift::Int *)&v49, v30);

            }
            v31 = type metadata accessor for CRLGroupItem(0);
            v32 = swift_dynamicCastClass(v25, v31);
            if (v32)
              break;
LABEL_24:

            v16 = v23;
            v17 = v21;
          }
          v10 = (_QWORD *)v32;
          v47 = v21;
          v46 = v25;
          sub_1004E36C0();
          v34 = v33;
          if ((unint64_t)v33 >> 62)
          {
            if (v33 >= 0)
              v33 &= 0xFFFFFFFFFFFFFF8uLL;
            v35 = _CocoaArrayWrapper.endIndex.getter(v33);
            if (v35)
              goto LABEL_51;
          }
          else
          {
            v35 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
            if (v35)
            {
LABEL_51:
              if (v35 < 1)
              {
                __break(1u);
                goto LABEL_66;
              }
              for (i = 0; i != v35; ++i)
              {
                if ((v34 & 0xC000000000000001) != 0)
                  v37 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v34);
                else
                  v37 = *(id *)(v34 + 8 * i + 32);
                v38 = v37;
                v39 = objc_msgSend(v2, "repForInfo:", v37, v40, v41);
                if (v39)
                {
                  v10 = &v50;
                  sub_100AD7828((Swift::Int *)&v49, v39);

                }
                else
                {

                }
              }
            }
          }

          swift_bridgeObjectRelease();
          v11 = v45;
          v21 = v47;
          goto LABEL_24;
        }

      }
      else
      {
        v5 = v2;
      }

    }
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
    {
LABEL_66:
      if (_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
        sub_1004B6DB8((uint64_t)_swiftEmptyArrayStorage);
    }
  }
}

void sub_1009CB2C4()
{
  void *v0;
  id v1;
  void *v2;
  unsigned __int8 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  double v23;
  int64_t v24;
  unint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  unsigned __int8 v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  _QWORD v35[5];

  v1 = objc_msgSend(v0, "repForSelecting");
  if (!v1 || (v2 = v1, v3 = objc_msgSend(v1, "isSelected"), v2, (v3 & 1) == 0))
  {
    sub_1009CAD74();
    v5 = v4;
    if ((v4 & 0xC000000000000001) != 0)
    {
      if (v4 >= 0)
        v4 &= 0xFFFFFFFFFFFFFF8uLL;
      v6 = __CocoaSet.makeIterator()(v4);
      v7 = sub_1004B8930(0, (unint64_t *)&qword_1013E56B0, off_101229828);
      v8 = sub_1004F619C();
      v4 = (uint64_t)Set.Iterator.init(_cocoa:)(v35, v6, v7, v8);
      v5 = v35[0];
      v32 = v35[1];
      v9 = v35[2];
      v10 = v35[3];
      v11 = v35[4];
    }
    else
    {
      v10 = 0;
      v12 = -1 << *(_BYTE *)(v4 + 32);
      v32 = v4 + 56;
      v9 = ~v12;
      v13 = -v12;
      if (v13 < 64)
        v14 = ~(-1 << v13);
      else
        v14 = -1;
      v11 = v14 & *(_QWORD *)(v4 + 56);
    }
    v15 = (unint64_t)(v9 + 64) >> 6;
    while (1)
    {
      while (1)
      {
        v16 = v10;
        if (v5 < 0)
        {
          v19 = __CocoaSet.Iterator.next()(v4);
          if (!v19)
            goto LABEL_38;
          v20 = v19;
          v33 = v19;
          v21 = sub_1004B8930(0, (unint64_t *)&qword_1013E56B0, off_101229828);
          swift_unknownObjectRetain(v20);
          swift_dynamicCast(&v34, &v33, (char *)&type metadata for Swift.AnyObject + 8, v21, 7);
          v22 = v34;
          *(_QWORD *)&v23 = swift_unknownObjectRelease(v20).n128_u64[0];
          if (!v22)
            goto LABEL_38;
        }
        else
        {
          if (v11)
          {
            v17 = __clz(__rbit64(v11));
            v11 &= v11 - 1;
            v18 = v17 | (v10 << 6);
          }
          else
          {
            v24 = v10 + 1;
            if (__OFADD__(v10, 1))
            {
              __break(1u);
              return;
            }
            if (v24 >= v15)
              goto LABEL_38;
            v25 = *(_QWORD *)(v32 + 8 * v24);
            ++v10;
            if (!v25)
            {
              v10 = v16 + 2;
              if (v16 + 2 >= v15)
                goto LABEL_38;
              v25 = *(_QWORD *)(v32 + 8 * v10);
              if (!v25)
              {
                v10 = v16 + 3;
                if (v16 + 3 >= v15)
                  goto LABEL_38;
                v25 = *(_QWORD *)(v32 + 8 * v10);
                if (!v25)
                {
                  v10 = v16 + 4;
                  if (v16 + 4 >= v15)
                    goto LABEL_38;
                  v25 = *(_QWORD *)(v32 + 8 * v10);
                  if (!v25)
                  {
                    v26 = v16 + 5;
                    while (v15 != v26)
                    {
                      v25 = *(_QWORD *)(v32 + 8 * v26++);
                      if (v25)
                      {
                        v10 = v26 - 1;
                        goto LABEL_33;
                      }
                    }
LABEL_38:
                    sub_1004D284C(v5);
                    return;
                  }
                }
              }
            }
LABEL_33:
            v11 = (v25 - 1) & v25;
            v18 = __clz(__rbit64(v25)) + (v10 << 6);
          }
          v22 = *(id *)(*(_QWORD *)(v5 + 48) + 8 * v18);
          if (!v22)
            goto LABEL_38;
        }
        v27 = objc_msgSend(v22, "repForSelecting", v23);
        if (v27)
          break;
LABEL_13:

      }
      v28 = v27;
      v29 = type metadata accessor for CRLUSDZRep(0);
      if (swift_dynamicCastClass(v28, v29))
      {

        goto LABEL_13;
      }
      objc_msgSend(v28, "frameInUnscaledCanvas");
      v30 = objc_msgSend(v31, "intersectsUnscaledRect:");

      if ((v30 & 1) != 0)
        goto LABEL_38;
    }
  }
}

uint64_t sub_1009CB634()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  __objc2_prot *v6;
  unsigned __int8 v7;

  v1 = objc_msgSend(v0, "interactiveCanvasController");
  if (v1)
  {
    v2 = v1;
    if (objc_msgSend(v1, "isInDynamicOperation")
      && objc_msgSend(v0, "isSelected")
      && (v3 = objc_msgSend(v2, "tmCoordinator"),
          v4 = objc_msgSend(v3, "controllingTM"),
          v3,
          v4)
      && (v5 = objc_msgSend(v4, "tracker"), swift_unknownObjectRelease(v4), v5))
    {
      v6 = &OBJC_PROTOCOL___CRLCanvasRepRotateTracking;
      v7 = objc_msgSend(v5, "conformsToProtocol:", v6);

      swift_unknownObjectRelease(v5);
      if ((v7 & 1) != 0)
        return 1;
    }
    else
    {

    }
  }
  return 0;
}

id sub_1009CB778()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  void *v9;
  unsigned __int8 v10;
  id v11;
  double v12;
  double v13;
  double v14;
  double v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  char *v22;
  char *v23;
  id v24;
  id v25;
  id v26;
  char v27;
  char *v28;
  char *v29;
  char *v30;
  void *v31;
  id v32;
  id v33;
  id v35;
  unsigned __int8 v36;

  v1 = OBJC_IVAR____TtC8Freeform10CRLUSDZRep_cachedContentPlatformView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_cachedContentPlatformView);
  v3 = v2;
  if (!v2)
  {
    v4 = v0;
    v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState);
    v6 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState + 8);
    if (v6 >> 6 == 2)
    {
      v20 = objc_allocWithZone((Class)UIImage);
      sub_1009D3B34((id)v5, v6);
      v21 = objc_msgSend(v20, "initWithCGImage:", (id)v5);
      v3 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v21);

      objc_msgSend(v3, "setContentMode:", 2);
      if ((v6 & 1) != 0)
      {
        v22 = sub_1009CBDC0();
        sub_10085BFB8();

        v23 = sub_1009CBDC0();
        v24 = objc_msgSend(v23, "superview");

        if (!v24
          || (sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr),
              v25 = v3,
              v26 = v24,
              v27 = static NSObject.== infix(_:_:)(v26, v25),
              v26,
              v26,
              v25,
              (v27 & 1) == 0))
        {
          v28 = sub_1009CBDC0();
          objc_msgSend(v28, "removeFromSuperview");

          v29 = sub_1009CBDC0();
          objc_msgSend(v3, "addSubview:", v29);

          sub_1009CBC14();
        }
        v30 = sub_1009CBDC0();
        objc_msgSend(v30, "setHidden:", 0);

      }
      v31 = *(void **)(v4 + v1);
      *(_QWORD *)(v4 + v1) = v3;
      v32 = v3;

      sub_1009D3B68((id)v5, v6);
      goto LABEL_15;
    }
    if (v6 >> 6 == 1)
    {
      v3 = *(id *)(v5 + 32);
      v7 = *(unsigned __int8 *)(v5 + 48);
      v8 = (v7 >> 4) & 3;
      if (!v8)
      {
        objc_msgSend(v3, "setAutoresizingMask:", 0);
        goto LABEL_16;
      }
      if (v8 == 1)
      {
        if ((v7 & 0xC0) == 0x80)
        {
          v9 = *(void **)(v5 + 40);
          v10 = v7 & 0xCF;
          v36 = v7 & 0xCF;
          sub_1009D3B34((id)v5, v6);
          v11 = v3;
          objc_msgSend(v11, "frame", sub_1009D3B34(v9, v10));
          v13 = v12;
          v15 = v14;
          v3 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, v12, v14);
          v16 = objc_msgSend(objc_allocWithZone((Class)UIImage), "initWithCGImage:", v9);
          v17 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v16);

          objc_msgSend(v11, "setAlpha:", 0.0);
          objc_msgSend(v11, "setFrame:", 0.0, 0.0, v13, v15);
          objc_msgSend(v17, "setFrame:", 0.0, 0.0, v13, v15);
          objc_msgSend(v3, "addSubview:", v11);
          objc_msgSend(v3, "addSubview:", v17);
          objc_msgSend(v11, "setAutoresizingMask:", 18);
          objc_msgSend(v17, "setAutoresizingMask:", 18);
          v18 = *(void **)(v4 + v1);
          *(_QWORD *)(v4 + v1) = v3;
          v19 = v3;

          sub_1009D3B68(v9, v36);
        }
        else
        {
          sub_1009D3B34(*(id *)(v0 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState), *(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState + 8));
          v35 = v3;
          objc_msgSend(v35, "setAlpha:", 0.0);
          objc_msgSend(v35, "setAutoresizingMask:", 0);
        }
LABEL_15:
        sub_1009D3B68((id)v5, v6);
        goto LABEL_16;
      }
    }
    sub_100757E04(&_mh_execute_header, (uint64_t)"contentPlatformView", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZRep.swift", 81, 2, 1794, "Unexpectedly returning nil from contentPlatformView.", 52, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"contentPlatformView", 19, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZRep.swift", 81, 2u, 1794, (uint64_t)"Unexpectedly returning nil from contentPlatformView.", 52, 2u);
    v3 = 0;
  }
LABEL_16:
  v33 = v2;
  return v3;
}

void sub_1009CBC14()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  double v4;
  double v5;
  CGFloat v6;
  CGFloat v7;
  CGFloat v8;
  CGFloat v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  char *v15;
  char *v16;
  id v17;

  v1 = sub_1009CBDC0();
  v17 = objc_msgSend(v1, "superview");

  if (v17)
  {
    v2 = objc_msgSend(v0, "canvas");
    if (v2)
    {
      v3 = v2;
      objc_msgSend(v2, "viewScale");
      v5 = v4;

      objc_msgSend(v0, "boundsForStandardKnobs");
      v10 = sub_100061400(v6, v7, v8, v9);
      v12 = sub_1000603DC(v10, v11, v5);
      v14 = v13;
      v15 = sub_1009CBDC0();
      objc_msgSend(v15, "setFrame:", v12 - *(double *)&v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_spinnerViewSize] * 0.5, v14 - *(double *)&v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_spinnerViewSize + 8] * 0.5);

      v16 = v15;
    }
    else
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"updateSpinnerViewConstraints()", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZRep.swift", 81, 2, 2026, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateSpinnerViewConstraints()", 30, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZRep.swift", 81, 2u, 2026, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
      v16 = (char *)v17;
    }

  }
}

char *sub_1009CBDC0()
{
  char *v0;
  uint64_t v1;
  void *v2;
  char *v3;
  char *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  id v12;
  char *v13;
  void *v14;
  id v15;

  v1 = OBJC_IVAR____TtC8Freeform10CRLUSDZRep____lazy_storage___spinnerView;
  v2 = *(void **)&v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep____lazy_storage___spinnerView];
  if (v2)
  {
    v3 = *(char **)&v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep____lazy_storage___spinnerView];
  }
  else
  {
    v4 = v0;
    v5 = sub_10005FDDC();
    v7 = v6;
    v9 = v8;
    v11 = v10;
    v12 = objc_allocWithZone((Class)type metadata accessor for CRLIndeterminateRoundSpinnerView());
    v13 = sub_10085B760((uint64_t)v0, (uint64_t)"handleSpinnerTapWithSender:", v5, v7, v9, v11);
    objc_msgSend(v13, "setHidden:", 1);
    objc_msgSend(v13, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v14 = *(void **)&v4[v1];
    *(_QWORD *)&v4[v1] = v13;
    v3 = v13;

    v2 = 0;
  }
  v15 = v2;
  return v3;
}

void sub_1009CBF18()
{
  char *v0;
  id v1;
  void *v2;
  double v3;
  double v4;
  CGFloat Width;
  double *v6;
  char *v7;
  char *v8;
  CGRect v9;
  CGRect v10;

  v1 = objc_msgSend(v0, "canvas");
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, "viewScale");
    v4 = v3;

    objc_msgSend(v0, "boundsForStandardKnobs");
    Width = CGRectGetWidth(v9);
    v6 = (double *)&v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_spinnerViewSize];
    if (*(double *)&v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_spinnerViewSize] + 10.0 >= v4 * Width
      || (objc_msgSend(v0, "boundsForStandardKnobs"), v6[1] + 10.0 >= v4 * CGRectGetHeight(v10)))
    {
      v7 = sub_1009CBDC0();
      objc_msgSend(v7, "setHidden:", 1);

      v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_spinnerViewHiddenBecauseTooSmall] = 1;
    }
    else
    {
      sub_1009CBC14();
      if (v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_spinnerViewHiddenBecauseTooSmall] == 1)
      {
        v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_spinnerViewHiddenBecauseTooSmall] = 0;
        if ((v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_isZooming] & 1) == 0
          && (v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_isResizing] & 1) == 0)
        {
          v8 = sub_1009CBDC0();
          objc_msgSend(v8, "setHidden:", 0);

        }
      }
    }
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"updateSpinnerView()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZRep.swift", 81, 2, 2080, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateSpinnerView()", 19, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZRep.swift", 81, 2u, 2080, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  }
}

void sub_1009CC174()
{
  _BYTE *v0;
  char *v1;
  id v2;
  id v3;
  objc_super v4;

  v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_isZooming] = 0;
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for CRLUSDZRep(0);
  objc_msgSendSuper2(&v4, "handleFadeInForZoom");
  if ((v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState + 8] & 0xC1) == 0x81)
  {
    v1 = sub_1009CBDC0();
    v2 = objc_msgSend(v1, "layer");

    if (v2)
    {
      v3 = v2;
      sub_1009B21E4(0.15);

    }
    else
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"fadeSpinnerIn()", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZRep.swift", 81, 2, 2136, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"fadeSpinnerIn()", 15, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZRep.swift", 81, 2u, 2136, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    }
  }
}

void sub_1009CC2FC()
{
  uint64_t v0;
  char *v1;
  unsigned int v2;
  char *v3;
  id v4;
  id v5;

  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState + 8) & 0xC1) == 0x81)
  {
    v1 = sub_1009CBDC0();
    v2 = objc_msgSend(v1, "isHidden");

    if (v2)
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"fadeSpinnerOut()", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZRep.swift", 81, 2, 2144, "Trying to fade out while spinner view is hidden.", 48, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"fadeSpinnerOut()", 16, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZRep.swift", 81, 2u, 2144, (uint64_t)"Trying to fade out while spinner view is hidden.", 48, 2u);
    }
    v3 = sub_1009CBDC0();
    v4 = objc_msgSend(v3, "layer");

    if (v4)
    {
      v5 = v4;
      sub_1009B20C4(0.15);

    }
    else
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"fadeSpinnerOut()", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZRep.swift", 81, 2, 2146, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"fadeSpinnerOut()", 16, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZRep.swift", 81, 2u, 2146, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    }
  }
}

double *sub_1009CC5C0()
{
  uint64_t v0;
  double *result;
  uint64_t v2;
  unsigned __int8 v3;
  _QWORD *v4;
  unsigned int v5;
  void *v6;
  void *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;

  result = _swiftEmptyArrayStorage;
  v2 = v0 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState;
  v3 = *(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState + 8);
  if ((v3 & 0xC0) == 0x40)
  {
    v4 = *(_QWORD **)v2;
    v5 = *(unsigned __int8 *)(*(_QWORD *)v2 + 48);
    if ((v5 & 0x30) == 0x20)
    {
      v6 = (void *)v4[4];
      v7 = (void *)v4[5];
      sub_1009D6A08(v6, v7, v5);
      sub_1009D6A08(v6, v7, v5);
      sub_1009D3B34(v4, v3);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v8);
      v9 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
      v10 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v9 >= v10 >> 1)
      {
        v12 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v10 > 1, v9 + 1, 1);
        v9 = v12;
      }
      v11 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v9, v6);
      specialized Array._endMutation()(v11);
      sub_1009D6A54(v6, v7, v5);
      sub_1009D3B68(v4, v3);
      return _swiftEmptyArrayStorage;
    }
  }
  return result;
}

void sub_1009CC6D4(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  objc_class *v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  _BYTE v14[24];
  objc_super v15;

  v3 = type metadata accessor for CRLUSDZRep.PosterLoadingState(0);
  __chkstk_darwin(v3);
  v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = (objc_class *)type metadata accessor for CRLUSDZRep(0);
  v15.receiver = v1;
  v15.super_class = v6;
  objc_msgSendSuper2(&v15, "processChangedProperty:", a1);
  if (a1 == 40)
  {
    swift_storeEnumTagMultiPayload(v5, v3, 3);
    v7 = (uint64_t)&v1[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_posterLoadingState];
    swift_beginAccess(&v1[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_posterLoadingState], v14, 33, 0);
    sub_1009D7AB0((uint64_t)v5, v7, type metadata accessor for CRLUSDZRep.PosterLoadingState);
    swift_endAccess(v14);
    sub_1009BEC18();
    sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLUSDZRep.PosterLoadingState);
  }
  v8 = objc_msgSend(v1, "layout");
  objc_msgSend(v8, "invalidateFrame");

  v9 = objc_msgSend(v1, "layout");
  objc_msgSend(v9, "invalidateExteriorWrap");

  objc_msgSend(v1, "invalidateKnobPositions");
  objc_msgSend(v1, "setNeedsDisplay");
  v10 = objc_msgSend(v1, "canvas");
  if (v10)
  {
    v11 = v10;
    v12 = objc_msgSend(v1, "layout");
    objc_msgSend(v11, "canvasInvalidatedForLayout:", v12);

  }
}

void sub_1009CC8C8(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  objc_class *v6;
  char *v7;
  unsigned __int8 v8;
  char *v9;
  unsigned __int8 v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  void *v15;
  void *v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  __int128 v44;
  objc_super v45;

  v3 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v3);
  v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (objc_class *)type metadata accessor for CRLUSDZRep(0);
  v45.receiver = v1;
  v45.super_class = v6;
  objc_msgSendSuper2(&v45, "updateRenderableGeometryFromLayout:", a1);
  if ((v1[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_isResizing] & 1) == 0)
  {
    v7 = sub_1009CBDC0();
    v8 = objc_msgSend(v7, "isHidden");

    if ((v8 & 1) == 0)
      sub_1009CBC14();
  }
  v9 = &v1[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState];
  v10 = v1[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState + 8];
  if ((v10 & 0xC0) == 0x40)
  {
    v11 = *(_QWORD **)v9;
    v12 = *(_QWORD *)(*(_QWORD *)v9 + 16);
    v13 = *(_QWORD *)(*(_QWORD *)v9 + 24);
    v14 = *(unsigned __int8 *)(*(_QWORD *)v9 + 48);
    if ((v14 & 0x30) == 0x20)
    {
      v16 = (void *)v11[4];
      v43 = (void *)v11[5];
      v15 = v43;
      sub_1009D3B34(v11, v10);
      swift_unknownObjectRetain(v12);
      objc_msgSend(v1, "layerFrameInScaledCanvasRelativeToParent", sub_1009D6A08(v16, v15, v14));
      v18 = v17;
      v20 = v19;
      v22 = v21;
      v24 = v23;
      objc_msgSend(v1, "i_layerTransform");
      objc_msgSend(v16, "setIfDifferentFrame:orTransform:", &v44, v18, v20, v22, v24);
      v25 = swift_allocObject(&unk_10128EC38, 24, 7);
      v42 = v13;
      v26 = v25;
      *(_QWORD *)(v25 + 16) = v1;
      v27 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v5, 1, 1, v27);
      type metadata accessor for MainActor(0);
      v28 = v1;
      swift_unknownObjectRetain(v12);
      v29 = v28;
      swift_retain(v26);
      v31 = static MainActor.shared.getter(v30);
      v32 = (_QWORD *)swift_allocObject(&unk_10128EC60, 72, 7);
      v32[2] = v31;
      v32[3] = &protocol witness table for MainActor;
      v32[4] = v29;
      v32[5] = v12;
      v32[6] = v42;
      v32[7] = &unk_1013FFF78;
      v32[8] = v26;
      v33 = sub_100521B98((uint64_t)v5, (uint64_t)&unk_1013FFF80, (uint64_t)v32);
      swift_release(v33);
      swift_release(v26);
      sub_1009D6A54(v16, v43, v14);
    }
    else
    {
      v34 = swift_allocObject(&unk_10128EBE8, 24, 7);
      *(_QWORD *)(v34 + 16) = v1;
      v35 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v5, 1, 1, v35);
      type metadata accessor for MainActor(0);
      swift_unknownObjectRetain(v12);
      v36 = v1;
      sub_1009D3B34(v11, v10);
      swift_unknownObjectRetain(v12);
      v37 = v36;
      swift_retain(v34);
      v39 = static MainActor.shared.getter(v38);
      v40 = (_QWORD *)swift_allocObject(&unk_10128EC10, 72, 7);
      v40[2] = v39;
      v40[3] = &protocol witness table for MainActor;
      v40[4] = v37;
      v40[5] = v12;
      v40[6] = v13;
      v40[7] = &unk_1013FFF68;
      v40[8] = v34;
      v41 = sub_100521B98((uint64_t)v5, (uint64_t)&unk_1013FFF70, (uint64_t)v40);
      swift_release(v41);
      swift_release(v34);
    }
    swift_unknownObjectRelease(v12);
    sub_1009D3B68(v11, v10);
  }
}

uint64_t sub_1009CCC4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[12] = a2;
  v3[13] = a3;
  v3[11] = a1;
  v4 = type metadata accessor for MainActor(0);
  v3[14] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  v3[15] = v5;
  v3[16] = v6;
  return swift_task_switch(sub_1009CCCBC, v5, v6);
}

uint64_t sub_1009CCCBC()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  __int128 v4;
  CGFloat width;
  CGFloat height;
  double v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  double v15;
  double v16;
  uint64_t v17;
  uint64_t ObjectType;
  int *v19;
  _QWORD *v20;
  __int128 v22;
  int *v23;
  CGRect v24;
  CGRect v25;

  v1 = *(void **)(v0 + 104);
  v2 = objc_msgSend(v1, "layout");
  v3 = type metadata accessor for CRLUSDZLayout();
  swift_dynamicCastClassUnconditional(v2, v3, 0, 0, 0);
  sub_1006CF2A8();
  v22 = v4;

  objc_msgSend(v1, "layerFrameInScaledCanvas");
  v25 = CGRectIntegral(v24);
  width = v25.size.width;
  height = v25.size.height;
  objc_msgSend(v1, "layerFrameInScaledCanvas", v25.origin.x, v25.origin.y);
  sub_1009CF580(v7, v8);
  v10 = v9;
  v12 = v11;
  v13 = objc_msgSend(v1, "canvas");
  if (v13)
  {
    v14 = v13;
    objc_msgSend(v13, "contentsScale");
    v16 = v15;

  }
  else
  {
    v16 = 2.0;
  }
  v17 = *(_QWORD *)(v0 + 96);
  ObjectType = swift_getObjectType(*(_QWORD *)(v0 + 88));
  *(_DWORD *)(v0 + 16) = 1103626240;
  *(_OWORD *)(v0 + 32) = v22;
  *(CGFloat *)(v0 + 48) = width;
  *(CGFloat *)(v0 + 56) = height;
  *(_QWORD *)(v0 + 64) = v10;
  *(_QWORD *)(v0 + 72) = v12;
  *(double *)(v0 + 80) = v16;
  v19 = *(int **)(v17 + 24);
  v23 = (int *)((char *)v19 + *v19);
  v20 = (_QWORD *)swift_task_alloc(v19[1]);
  *(_QWORD *)(v0 + 136) = v20;
  *v20 = v0;
  v20[1] = sub_1009CCE34;
  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))v23)(v0 + 16, ObjectType, *(_QWORD *)(v0 + 96));
}

uint64_t sub_1009CCE34()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 136);
  *(_QWORD *)(*v1 + 144) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_1009D8468;
  else
    v4 = sub_1009D8478;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 120), *(_QWORD *)(v2 + 128));
}

void sub_1009CCF88(CGFloat *a1)
{
  void *v1;
  CGFloat v2;
  CGFloat v3;
  CGFloat v4;
  CGFloat v5;
  CGFloat v6;
  CGFloat v7;
  id v8;
  id v9;
  CGFloat tx;
  CGFloat ty;
  id v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  CGAffineTransform v23;
  CGAffineTransform t2;
  CGAffineTransform t1;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = a1[4];
  v7 = a1[5];
  v8 = objc_msgSend(v1, "layout");
  v9 = objc_msgSend(v8, "originalPureGeometry");

  if (!v9)
  {
    __break(1u);
    goto LABEL_5;
  }
  objc_msgSend(v9, "fullTransform");
  v19 = *(_OWORD *)&t1.c;
  v21 = *(_OWORD *)&t1.a;
  v18 = *(_OWORD *)&t1.tx;

  *(_OWORD *)&t1.a = v21;
  *(_OWORD *)&t1.c = v19;
  *(_OWORD *)&t1.tx = v18;
  t2.a = v2;
  t2.b = v3;
  t2.c = v4;
  t2.d = v5;
  t2.tx = v6;
  t2.ty = v7;
  CGAffineTransformConcat(&v23, &t1, &t2);
  v20 = *(_OWORD *)&v23.c;
  v22 = *(_OWORD *)&v23.a;
  tx = v23.tx;
  ty = v23.ty;
  v12 = objc_msgSend(v1, "layout");
  v13 = type metadata accessor for CRLUSDZLayout();
  v14 = (void *)swift_dynamicCastClassUnconditional(v12, v13, 0, 0, 0);
  v15 = (void *)objc_opt_self(CRLCanvasLayoutGeometry);
  *(_OWORD *)&t1.a = v22;
  *(_OWORD *)&t1.c = v20;
  t1.tx = tx;
  t1.ty = ty;
  v16 = objc_msgSend(v15, "geometryFromFullTransform:", &t1);
  v17 = objc_msgSend(v14, "computeInfoGeometryFromPureLayoutGeometry:", v16);

  if (!v17)
LABEL_5:
    __break(1u);
}

id sub_1009CD1E8()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  objc_class *v9;
  void *v10;
  uint64_t v11;
  uint64_t inited;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  int v23;
  uint64_t v24;
  char *v25;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  id v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  _BYTE v36[24];
  char v37[24];
  char v38[72];
  char v39[24];
  objc_super v40;

  v1 = type metadata accessor for CRLUSDZRep.AssetLoadingState(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v33 - v5;
  v35 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35);
  v34 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (objc_class *)type metadata accessor for CRLUSDZRep(0);
  v40.receiver = v0;
  v40.super_class = v9;
  objc_msgSendSuper2(&v40, "becameSelected");
  if (qword_1013DD7E8 != -1)
    swift_once(&qword_1013DD7E8, sub_100A04074);
  swift_beginAccess(&static OS_os_log.crlThreeDimensionalObjects, v39, 0, 0);
  v10 = (void *)static OS_os_log.crlThreeDimensionalObjects;
  v11 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v11, v38);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v13 = v10;
  v14 = objc_msgSend(v0, "debugDescription");
  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  v17 = v16;

  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v15;
  *(_QWORD *)(inited + 40) = v17;
  v19 = static os_log_type_t.debug.getter(v18);
  sub_100A06EBC((uint64_t)v13, &_mh_execute_header, v19, "(USDZRep) [%{public}@] becameSelected()", 39, 2, inited);
  swift_setDeallocating(inited);
  v20 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v20);

  v21 = (uint64_t)&v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_assetLoadingState];
  swift_beginAccess(&v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_assetLoadingState], v37, 0, 0);
  sub_1004B8460(v21, (uint64_t)v6, type metadata accessor for CRLUSDZRep.AssetLoadingState);
  if (swift_getEnumCaseMultiPayload(v6, v1) != 1)
  {
    sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLUSDZRep.AssetLoadingState);
    return sub_1009BFC4C();
  }
  v22 = *(void **)v6;
  v23 = v6[8];
  v24 = sub_1004B804C(&qword_1013FFB80);
  v25 = &v6[*(int *)(v24 + 64)];
  if (v23 == 1)
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v25, v35);
    return sub_1009BFC4C();
  }
  v27 = v24;
  v28 = v34;
  v29 = v25;
  v30 = v35;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v34, v29, v35);
  v31 = &v3[*(int *)(v27 + 64)];
  *(_QWORD *)v3 = v22;
  v3[8] = 1;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v31, v28, v30);
  swift_storeEnumTagMultiPayload(v3, v1, 1);
  swift_beginAccess(v21, v36, 33, 0);
  v32 = v22;
  sub_1009D7AB0((uint64_t)v3, v21, type metadata accessor for CRLUSDZRep.AssetLoadingState);
  swift_endAccess(v36);
  sub_1009BFC4C();
  sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLUSDZRep.AssetLoadingState);

  return (id)(*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v28, v30);
}

id sub_1009CD574()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void **v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  objc_class *v10;
  void *v11;
  uint64_t v12;
  uint64_t inited;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  int *v24;
  char *v25;
  uint64_t *v26;
  uint64_t v27;
  id result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  id v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  _BYTE v37[24];
  char v38[24];
  char v39[72];
  char v40[24];
  objc_super v41;

  v1 = v0;
  v2 = type metadata accessor for CRLUSDZRep.AssetLoadingState(0);
  __chkstk_darwin(v2);
  v35 = (uint64_t *)((char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v4);
  v6 = (void **)((char *)&v34 - v5);
  v36 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin(v36);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (objc_class *)type metadata accessor for CRLUSDZRep(0);
  v41.receiver = v0;
  v41.super_class = v10;
  objc_msgSendSuper2(&v41, "becameNotSelected");
  if (qword_1013DD7E8 != -1)
    swift_once(&qword_1013DD7E8, sub_100A04074);
  swift_beginAccess(&static OS_os_log.crlThreeDimensionalObjects, v40, 0, 0);
  v11 = (void *)static OS_os_log.crlThreeDimensionalObjects;
  v12 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v12, v39);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v14 = v11;
  v15 = objc_msgSend(v1, "debugDescription");
  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v18 = v17;

  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v16;
  *(_QWORD *)(inited + 40) = v18;
  v20 = static os_log_type_t.debug.getter(v19);
  sub_100A06EBC((uint64_t)v14, &_mh_execute_header, v20, "(USDZRep) [%{public}@] becameNotSelected()", 42, 2, inited);
  swift_setDeallocating(inited);
  v21 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v21);

  sub_1009C9658(1);
  sub_100BD56E4(0);
  v22 = (uint64_t)&v1[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_assetLoadingState];
  swift_beginAccess(&v1[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_assetLoadingState], v38, 0, 0);
  sub_1004B8460(v22, (uint64_t)v6, type metadata accessor for CRLUSDZRep.AssetLoadingState);
  if (swift_getEnumCaseMultiPayload(v6, v2) != 2)
  {
    sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLUSDZRep.AssetLoadingState);
    goto LABEL_8;
  }
  v23 = *v6;
  v24 = (int *)sub_1004B804C(&qword_1013FFB88);
  v25 = (char *)v6 + v24[12];
  swift_unknownObjectRelease(*(void **)((char *)v6 + v24[16]));
  v26 = (uint64_t *)((char *)v6 + v24[20]);
  sub_100689EAC(*v26, v26[1], v26[2], v26[3], v26[4], v26[5], v26[6]);
  v27 = v36;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v25, v36);
  if (byte_1013DDFA0 != 1 || (sub_1009D0508() & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v27);

LABEL_8:
    result = sub_1009BFC4C();
    goto LABEL_9;
  }
  v30 = sub_1004B804C(&qword_1013FFB80);
  v31 = (uint64_t)v35;
  v32 = (char *)v35 + *(int *)(v30 + 64);
  *v35 = v23;
  *(_BYTE *)(v31 + 8) = 0;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v32, v9, v27);
  swift_storeEnumTagMultiPayload(v31, v2, 1);
  swift_beginAccess(v22, v37, 33, 0);
  v33 = v23;
  sub_1009D7AB0(v31, v22, type metadata accessor for CRLUSDZRep.AssetLoadingState);
  swift_endAccess(v37);
  sub_1009BFC4C();
  sub_1004B84A4(v31, type metadata accessor for CRLUSDZRep.AssetLoadingState);
  sub_1009C10FC();

  result = (id)(*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v27);
LABEL_9:
  v1[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_animationIsPaused] = 0;
  v29 = OBJC_IVAR____TtC8Freeform10CRLUSDZRep_waitingToHideMiniFormatter;
  if (v1[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_waitingToHideMiniFormatter] == 1)
  {
    result = objc_msgSend((id)objc_opt_self(NSObject), "cancelPreviousPerformRequestsWithTarget:selector:object:", v1, "hideMiniFormatterIfNecessary", 0);
    v1[v29] = 0;
  }
  return result;
}

void sub_1009CD9BC()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  objc_class *v4;
  void *v5;
  uint64_t v6;
  uint64_t inited;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  double v18;
  char *v19;
  unsigned __int8 v20;
  uint64_t v21;
  unsigned int v22;
  void *v23;
  void *v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  id v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  double v38;
  id v39;
  void *v40;
  id v41;
  id v42;
  double v43;
  char v45[24];
  char v46[72];
  char v47[24];
  objc_super v48;

  v1 = type metadata accessor for CRLUSDZRep.PosterLoadingState(0);
  __chkstk_darwin(v1);
  v3 = &v45[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = (objc_class *)type metadata accessor for CRLUSDZRep(0);
  v48.receiver = v0;
  v48.super_class = v4;
  objc_msgSendSuper2(&v48, "prepareForPencilKitSnapshotting");
  if (qword_1013DD7E8 != -1)
    swift_once(&qword_1013DD7E8, sub_100A04074);
  swift_beginAccess(&static OS_os_log.crlThreeDimensionalObjects, v47, 0, 0);
  v5 = (void *)static OS_os_log.crlThreeDimensionalObjects;
  v6 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v6, v46);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v8 = v5;
  v9 = objc_msgSend(v0, "debugDescription");
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v12 = v11;

  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v10;
  *(_QWORD *)(inited + 40) = v12;
  v14 = static os_log_type_t.debug.getter(v13);
  sub_100A06EBC((uint64_t)v8, &_mh_execute_header, v14, "(USDZRep) [%{public}@] prepareForPencilKitSnapshotting()", 56, 2, inited);
  swift_setDeallocating(inited);
  v15 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v15);

  if (v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingStrategy] != 4)
  {
    v16 = (uint64_t)&v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_posterLoadingState];
    swift_beginAccess(&v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_posterLoadingState], v45, 0, 0);
    sub_1004B8460(v16, (uint64_t)v3, type metadata accessor for CRLUSDZRep.PosterLoadingState);
    if (swift_getEnumCaseMultiPayload(v3, v1) == 1)
    {
      v17 = (void *)*((_QWORD *)v3 + 1);

      v19 = &v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState];
      v20 = v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState + 8];
      if ((v20 & 0xC0) == 0x40)
      {
        v21 = *(_QWORD *)v19;
        v22 = *(unsigned __int8 *)(*(_QWORD *)v19 + 48);
        if ((v22 & 0x30) == 0)
        {
          v24 = *(void **)(v21 + 32);
          v23 = *(void **)(v21 + 40);
          v25 = swift_allocObject(&unk_10128EB48, 49, 7);
          v26 = *(_OWORD *)(v21 + 16);
          *(_OWORD *)(v25 + 16) = v26;
          *(_QWORD *)(v25 + 32) = v24;
          *(_QWORD *)(v25 + 40) = v17;
          *(_BYTE *)(v25 + 48) = -112;
          *(_QWORD *)v19 = v25;
          v19[8] = 64;
          v27 = v26;
          swift_unknownObjectRetain(v26);
          sub_1009D6A08(v24, v23, v22);
          swift_unknownObjectRetain(v27);
          sub_1009D6A08(v24, v23, v22);
          sub_1009D3B34((id)v21, v20);
          v28 = v17;
          swift_retain(v25);
          sub_1009D3B68((id)v21, v20);
          sub_1009BEE24();
          swift_release(v25);
          sub_1009D6A54(v24, v23, v22);
          swift_unknownObjectRelease(v27);
          v18 = sub_1009D3B68((id)v21, v20);
        }
      }
      v29 = objc_msgSend(v0, "layout", v18);
      objc_msgSend(v29, "invalidateFrame");

      v30 = objc_msgSend(v0, "layout");
      objc_msgSend(v30, "invalidateExteriorWrap");

      objc_msgSend(v0, "invalidateKnobPositions");
      objc_msgSend(v0, "setNeedsDisplay");
      v31 = objc_msgSend(v0, "canvas");
      if (v31)
      {
        v32 = v31;
        v33 = objc_msgSend(v0, "layout");
        objc_msgSend(v32, "canvasInvalidatedForLayout:", v33);

      }
      v34 = objc_msgSend(v0, "interactiveCanvasController");
      if (v34)
      {
        v35 = v34;
        v36 = objc_msgSend(v34, "layerHost");

        if (v36)
        {
          v37 = objc_msgSend(v36, "canvasLayer");
          *(_QWORD *)&v38 = swift_unknownObjectRelease(v36).n128_u64[0];
          if (v37)
          {
            objc_msgSend(v37, "setNeedsLayout", v38);

          }
        }
      }
      v39 = objc_msgSend(v0, "interactiveCanvasController");
      if (v39
        && (v40 = v39, v41 = objc_msgSend(v39, "layerHost"), v40, v41)
        && (v42 = objc_msgSend(v41, "canvasLayer"),
            *(_QWORD *)&v43 = swift_unknownObjectRelease(v41).n128_u64[0],
            v42))
      {
        objc_msgSend(v42, "layoutIfNeeded", v43);

      }
      else
      {

      }
    }
    else
    {
      sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLUSDZRep.PosterLoadingState);
    }
  }
}

id sub_1009CDEC4(char a1, CGFloat a2, CGFloat a3)
{
  void *v3;
  void *v4;
  char v8;
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v15;
  uint64_t v16;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  id result;
  id v22;
  void *v23;
  double v24;
  double v25;
  double v26;
  double v27;
  objc_super v28;
  objc_super v29;
  CGRect v30;
  unint64_t v31;
  _BYTE v32[40];
  CGPoint v33;
  CGRect v34;

  v4 = v3;
  *(_QWORD *)&v30.size.height = &type metadata for CRLFeatureFlags;
  v31 = sub_1004DB6DC();
  LOBYTE(v30.origin.x) = 20;
  v8 = isFeatureEnabled(_:)(&v30);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v30);
  if ((v8 & 1) == 0)
  {
    v29.super_class = (Class)type metadata accessor for CRLUSDZRep(0);
    return objc_msgSendSuper2(&v29, "containsPoint:withPrecision:", a1 & 1, a2, a3, v28.receiver, v28.super_class, v4, v29.super_class);
  }
  v9 = objc_msgSend(v4, "layout");
  v10 = type metadata accessor for CRLUSDZLayout();
  swift_dynamicCastClassUnconditional(v9, v10, 0, 0, 0);
  v11 = sub_1006D0A58();
  v12 = v11;

  if (v11)
  {
    v13 = objc_msgSend(v12, "containsPoint:withPrecision:", a1 & 1, a2, a3);

    return v13;
  }
  v15 = objc_msgSend(v4, "info");
  v16 = type metadata accessor for CRLUSDZItem(0);
  swift_dynamicCastClassUnconditional(v15, v16, 0, 0, 0);
  sub_100660120((uint64_t)v32);
  swift_unknownObjectRelease(v15);
  sub_1004C4938((uint64_t)v32, (uint64_t)&v30, &qword_1013E1B30);
  if ((v31 & 1) != 0
    || (x = v30.origin.x, y = v30.origin.y, width = v30.size.width, height = v30.size.height, CGRectIsEmpty(v30)))
  {
    v28.super_class = (Class)type metadata accessor for CRLUSDZRep(0);
    return objc_msgSendSuper2(&v28, "containsPoint:withPrecision:", a1 & 1, a2, a3, v4, v28.super_class, v29.receiver, v29.super_class);
  }
  v22 = objc_msgSend(v4, "layout");
  result = objc_msgSend((id)swift_dynamicCastClassUnconditional(v22, v10, 0, 0, 0), "geometry");
  if (result)
  {
    v23 = result;
    objc_msgSend(result, "size");

    v24 = sub_10005FDDC();
    sub_1000626D8(v24, v25, v26, v27, x, y, width, height);
    v33.x = a2;
    v33.y = a3;
    return (id)CGRectContainsPoint(v34, v33);
  }
  __break(1u);
  return result;
}

double sub_1009CE1C8(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  objc_class *v6;
  double result;
  uint64_t v8;
  unsigned int v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t inited;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  char v31[72];
  char v32[24];
  objc_super v33;

  v3 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v3);
  v5 = &v31[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 16];
  v6 = (objc_class *)type metadata accessor for CRLUSDZRep(0);
  v33.receiver = v1;
  v33.super_class = v6;
  objc_msgSendSuper2(&v33, "didUpdateRenderable:", a1);
  if ((v1[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState + 8] & 0xC0) == 0x40)
  {
    v8 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState];
    v9 = *(unsigned __int8 *)(v8 + 48);
    if ((v9 & 0x30) == 0x10)
    {
      v10 = *(void **)(v8 + 32);
      v11 = *(void **)(v8 + 40);
      v30 = *(_OWORD *)(v8 + 16);
      v12 = v30;
      swift_unknownObjectRetain(v30);
      sub_1009D6A08(v10, v11, v9);
      sub_1009D3B68(v11, v9 & 0xCF);
      if (qword_1013DD7E8 != -1)
        swift_once(&qword_1013DD7E8, sub_100A04074);
      swift_beginAccess(&static OS_os_log.crlThreeDimensionalObjects, v32, 0, 0);
      v13 = (void *)static OS_os_log.crlThreeDimensionalObjects;
      v14 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v14, v31);
      *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
      v16 = v13;
      v17 = objc_msgSend(v1, "debugDescription");
      v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
      v20 = v19;

      *(_QWORD *)(inited + 56) = &type metadata for String;
      *(_QWORD *)(inited + 64) = sub_1004CFC2C();
      *(_QWORD *)(inited + 32) = v18;
      *(_QWORD *)(inited + 40) = v20;
      v22 = static os_log_type_t.debug.getter(v21);
      sub_100A06EBC((uint64_t)v16, &_mh_execute_header, v22, "(USDZRep) [%{public}@] showing pending view content, triggering another canvas layout...", 88, 2, inited);
      swift_setDeallocating(inited);
      v23 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(inited + 32, 1, v23);

      v24 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v5, 1, 1, v24);
      type metadata accessor for MainActor(0);
      swift_unknownObjectRetain(v12);
      v25 = v10;
      v26 = v1;
      v27 = static MainActor.shared.getter(v26);
      v28 = swift_allocObject(&unk_10128EBC0, 64, 7);
      *(_QWORD *)(v28 + 16) = v27;
      *(_QWORD *)(v28 + 24) = &protocol witness table for MainActor;
      *(_QWORD *)(v28 + 32) = v25;
      *(_QWORD *)(v28 + 40) = v26;
      *(_OWORD *)(v28 + 48) = v30;
      v29 = sub_100521B98((uint64_t)v5, (uint64_t)&unk_1013FFF58, v28);
      swift_unknownObjectRelease(v12);

      *(_QWORD *)&result = swift_release(v29).n128_u64[0];
    }
  }
  return result;
}

uint64_t sub_1009CE48C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v7[7] = a6;
  v7[8] = a7;
  v7[5] = a4;
  v7[6] = a5;
  v8 = type metadata accessor for CRLUSDZRep.AssetLoadingState(0);
  v7[9] = v8;
  v7[10] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ContinuousClock(0);
  v7[11] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v7[12] = v10;
  v7[13] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MainActor(0);
  v7[14] = static MainActor.shared.getter(v11);
  v12 = dispatch thunk of Actor.unownedExecutor.getter(v11, &protocol witness table for MainActor);
  v7[15] = v12;
  v7[16] = v13;
  return swift_task_switch(sub_1009CE548, v12, v13);
}

uint64_t sub_1009CE548()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  ContinuousClock.init()();
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_1013F2740 + dword_1013F2740);
  v1 = (_QWORD *)swift_task_alloc(unk_1013F2744);
  *(_QWORD *)(v0 + 136) = v1;
  *v1 = v0;
  v1[1] = sub_1009CE5C8;
  return v3(50000000000000000, 0, 0, 0, 1);
}

uint64_t sub_1009CE5C8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v2 = *(_QWORD **)v1;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 136));
  v4 = v2[12];
  v3 = v2[13];
  v5 = v2[11];
  if (v0)
  {
    swift_errorRelease(v0);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    v6 = v2[15];
    v7 = v2[16];
    v8 = sub_1009D8474;
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v4 + 8))(v2[13], v2[11]);
    v6 = v2[15];
    v7 = v2[16];
    v8 = sub_1009CE668;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_1009CE668()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;
  _QWORD *v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int EnumCaseMultiPayload;
  id *v15;
  int *v16;
  char *v17;
  uint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  __int128 v29;
  id v30;
  unsigned __int8 v31;
  uint64_t v32;
  id v33;

  v1 = *(_QWORD *)(v0 + 48);
  swift_release(*(_QWORD *)(v0 + 112));
  v2 = v1 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState;
  v3 = *(_BYTE *)(v1 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState + 8);
  if ((v3 & 0xC0) == 0x40)
  {
    v4 = *(_QWORD **)v2;
    v5 = *(unsigned __int8 *)(*(_QWORD *)v2 + 48);
    if ((v5 & 0x30) == 0x10)
    {
      v6 = v4[2];
      v7 = *(_QWORD *)(v0 + 40);
      v9 = (void *)v4[4];
      v8 = (void *)v4[5];
      sub_1009D3B34(*(id *)v2, v3);
      swift_unknownObjectRetain(v6);
      sub_1009D6A08(v9, v8, v5);
      sub_1009D3B68(v8, v5 & 0xCF);
      sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
      v10 = static NSObject.== infix(_:_:)(v7, v9);

      sub_1009D3B68(v4, v3);
      if ((v10 & 1) == 0)
        goto LABEL_7;
      v12 = *(_QWORD *)(v0 + 72);
      v11 = *(_QWORD *)(v0 + 80);
      v13 = *(_QWORD *)(v0 + 48) + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_assetLoadingState;
      swift_beginAccess(v13, v0 + 16, 0, 0);
      sub_1004B8460(v13, v11, type metadata accessor for CRLUSDZRep.AssetLoadingState);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v11, v12);
      v15 = *(id **)(v0 + 80);
      if (EnumCaseMultiPayload != 2)
      {
        swift_unknownObjectRelease(v6);
        sub_1004B84A4((uint64_t)v15, type metadata accessor for CRLUSDZRep.AssetLoadingState);
        goto LABEL_11;
      }

      v16 = (int *)sub_1004B804C(&qword_1013FFB88);
      v17 = (char *)v15 + v16[12];
      swift_unknownObjectRelease(*(id *)((char *)v15 + v16[16]));
      v18 = (uint64_t *)((char *)v15 + v16[20]);
      v19 = v18[5];
      if (v19 >> 62)
      {
        sub_100689EAC(*v18, v18[1], v18[2], v18[3], v18[4], v19, v18[6]);
        swift_unknownObjectRelease(v6);
        v23 = type metadata accessor for URL(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v17, v23);
        goto LABEL_11;
      }
      v20 = *(_QWORD *)(v0 + 56);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v21 = type metadata accessor for URL(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v17, v21);
      if (v6 == v20)
      {
        v27 = *(void **)(v0 + 40);
        v26 = *(_QWORD *)(v0 + 48);
        v28 = swift_allocObject(&unk_10128EB48, 49, 7);
        v29 = *(_OWORD *)(v0 + 56);
        *(_OWORD *)(v28 + 16) = v29;
        *(_QWORD *)(v28 + 32) = v27;
        *(_QWORD *)(v28 + 40) = 0;
        *(_BYTE *)(v28 + 48) = 0;
        v30 = *(id *)v2;
        *(_QWORD *)v2 = v28;
        v31 = *(_BYTE *)(v2 + 8);
        *(_BYTE *)(v2 + 8) = 64;
        v32 = v29;
        swift_unknownObjectRetain(v29);
        v33 = v27;
        swift_retain(v28);
        sub_1009D3B68(v30, v31);
        sub_1009BEE24();
        swift_release(v28);
        objc_msgSend(v33, "setAlpha:", *(double *)(v26 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_externallySetAlpha));
        v22 = v32;
      }
      else
      {
LABEL_7:
        v22 = v6;
      }
      swift_unknownObjectRelease(v22);
    }
  }
LABEL_11:
  v24 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 104));
  swift_task_dealloc(v24);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1009CE9B8(void *a1, uint64_t a2, const char **a3, char a4, void (*a5)(_QWORD))
{
  const char *v8;
  char *v9;
  uint64_t v10;
  objc_super v11;

  v11.receiver = a1;
  v11.super_class = (Class)type metadata accessor for CRLUSDZRep(0);
  v8 = *a3;
  v9 = (char *)v11.receiver;
  objc_msgSendSuper2(&v11, v8);
  sub_1009C10FC();
  v10 = *(_QWORD *)(*(_QWORD *)&v9[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_knobController]
                  + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_playPauseKnob);
  if (v10 && (*(_BYTE *)(v10 + OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_isPlaying) & 1) != 0)
    a5(a4 & 1);

}

id sub_1009CEA5C()
{
  _BYTE *v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  objc_super v5;

  v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_isResizing] = 1;
  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_knobController];
  v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_knobsWereVisibleBeforeDynamicOperation] = (*(_BYTE *)(v1
                                                                                               + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_visibilityState) & 0xFB) != 0;
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for CRLUSDZRep(0);
  v2 = objc_msgSendSuper2(&v5, "dynamicResizeDidBegin");
  sub_1009C10FC();
  sub_1009CC2FC();
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_playPauseKnob);
  if (v3 && *(_BYTE *)(v3 + OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_isPlaying) == 1)
    sub_100BD5AEC(0);
  return v2;
}

void sub_1009CEB64(uint64_t a1)
{
  _BYTE *v1;
  _BYTE *v2;
  id v4;
  char *v5;
  id v6;
  id v7;
  uint64_t v8;
  objc_super v9;

  v2 = v1;
  v2[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_isResizing] = 0;
  v9.receiver = v2;
  v9.super_class = (Class)type metadata accessor for CRLUSDZRep(0);
  objc_msgSendSuper2(&v9, "dynamicResizeDidEndWithTracker:", a1);
  v4 = objc_msgSend(v2, "layout");
  objc_msgSend(v4, "invalidateExteriorWrap");

  sub_1009C10FC();
  if ((v2[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState + 8] & 0xC1) == 0x81)
  {
    v5 = sub_1009CBDC0();
    v6 = objc_msgSend(v5, "layer");

    if (v6)
    {
      v7 = v6;
      sub_1009B21E4(0.15);

    }
    else
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"fadeSpinnerIn()", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZRep.swift", 81, 2, 2136, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"fadeSpinnerIn()", 15, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZRep.swift", 81, 2u, 2136, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    }
  }
  v8 = *(_QWORD *)(*(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_knobController]
                 + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_playPauseKnob);
  if (v8
    && *(_BYTE *)(v8 + OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_isPlaying) == 1
    && v2[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_knobsWereVisibleBeforeDynamicOperation] == 1)
  {
    sub_100BD59F8();
  }
}

void sub_1009CEDA0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  objc_super v4;

  v1 = v0;
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for CRLUSDZRep(0);
  objc_msgSendSuper2(&v4, "willBeginZooming");
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_knobController];
  v1[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_knobsWereVisibleBeforeDynamicOperation] = (*(_BYTE *)(v2
                                                                                               + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_visibilityState) & 0xFB) != 0;
  v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_playPauseKnob);
  if (v3)
  {
    if (*(_BYTE *)(v3 + OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_isPlaying) == 1)
      sub_100BD5AEC(0);
  }
}

void sub_1009CEE7C()
{
  char *v0;
  uint64_t v1;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLUSDZRep(0);
  objc_msgSendSuper2(&v2, "didEndZooming");
  v1 = *(_QWORD *)(*(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_knobController]
                 + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_playPauseKnob);
  if (v1
    && *(_BYTE *)(v1 + OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_isPlaying) == 1
    && v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_knobsWereVisibleBeforeDynamicOperation] == 1)
  {
    sub_100BD59F8();
  }
}

void sub_1009CEFBC(void *a1, uint64_t a2, const char **a3, void (*a4)(id))
{
  const char *v6;
  id v7;
  id v8;
  objc_super v9;

  v9.receiver = a1;
  v9.super_class = (Class)type metadata accessor for CRLUSDZRep(0);
  v6 = *a3;
  v7 = v9.receiver;
  v8 = objc_msgSendSuper2(&v9, v6);
  a4(v8);

}

id sub_1009CF0E8(void *a1, uint64_t a2, SEL *a3, uint64_t (*a4)(_QWORD))
{
  id v5;
  uint64_t v6;

  v5 = objc_msgSend(a1, *a3);
  v6 = a4(0);
  return (id)swift_dynamicCastClassUnconditional(v5, v6, 0, 0, 0);
}

uint64_t sub_1009CF138()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  _UNKNOWN ****v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char *v29;
  _DWORD *v30;
  uint64_t v31;
  id v32;
  void *v33;
  os_unfair_lock_s *v34;
  id v35;
  uint64_t v36;
  char *v38;
  Class v39;
  void *v40;
  objc_super v41;
  _BYTE v42[24];

  v1 = type metadata accessor for CRLUSDZAssetDataStruct(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRLAssetData(0);
  *(_QWORD *)&v5 = __chkstk_darwin(v4).n128_u64[0];
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(v0, "info", v5);
  v9 = type metadata accessor for CRLUSDZItem(0);
  v10 = (void *)swift_dynamicCastClassUnconditional(v8, v9, 0, 0, 0);
  v11 = objc_msgSend(v0, "info");
  v12 = swift_dynamicCastClassUnconditional(v11, v9, 0, 0, 0);
  v13 = *(_UNKNOWN *****)(v12 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*v13 == &off_10140F528)
    v14 = *(_QWORD *)(v12 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  else
    v14 = 0;
  swift_beginAccess(v14 + qword_101481450, v42, 32, 0);
  swift_retain(v13);
  v15 = sub_1004B804C((uint64_t *)&unk_1013E9BD0);
  CRRegister.wrappedValue.getter(v15);
  swift_endAccess(v42);
  swift_release(v13);
  v16 = v10;
  sub_1004B8460((uint64_t)v3, (uint64_t)v7, type metadata accessor for CRLAssetData);
  sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLUSDZAssetDataStruct);
  v17 = (char *)objc_msgSend(v10, "store", swift_unknownObjectRelease(v11).n128_f64[0]);
  v18 = *(_QWORD *)&v17[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManagerLock];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v18 + 16));
  v19 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager;
  v20 = *(void **)&v17[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
  if (v20)
  {
    v21 = *(id *)&v17[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
  }
  else
  {
    v39 = (Class)type metadata accessor for CRLAssetManager();
    v22 = (char *)objc_allocWithZone(v39);
    v38 = &v22[OBJC_IVAR____TtC8Freeform15CRLAssetManager_store];
    swift_unknownObjectWeakInit(&v22[OBJC_IVAR____TtC8Freeform15CRLAssetManager_store]);
    v23 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_lock;
    v24 = type metadata accessor for CRLUnfairLock();
    v25 = v8;
    v26 = swift_allocObject(v24, 24, 7);
    v27 = v17;
    v40 = v16;
    v28 = v27;
    v29 = v22;
    v30 = (_DWORD *)swift_slowAlloc(4, -1);
    *v30 = 0;
    *(_QWORD *)(v26 + 16) = v30;
    atomic_thread_fence(memory_order_acq_rel);
    *(_QWORD *)&v22[v23] = v26;
    v8 = v25;
    *(_QWORD *)&v29[OBJC_IVAR____TtC8Freeform15CRLAssetManager_assets] = _swiftEmptyDictionarySingleton;
    v31 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_owners;
    *(_QWORD *)&v29[v31] = objc_msgSend((id)objc_opt_self(NSMapTable), "mapTableWithKeyOptions:valueOptions:", 517, 0);
    *(_QWORD *)&v29[OBJC_IVAR____TtC8Freeform15CRLAssetManager_garbageCollectionWorkItem] = 0;
    swift_unknownObjectWeakAssign(v38, v28);

    v41.receiver = v29;
    v41.super_class = v39;
    v32 = objc_msgSendSuper2(&v41, "init");

    v16 = v40;
    v33 = *(void **)&v17[v19];
    *(_QWORD *)&v17[v19] = v32;
    v21 = v32;

    v20 = 0;
  }
  v34 = *(os_unfair_lock_s **)(v18 + 16);
  v35 = v20;
  os_unfair_lock_unlock(v34);

  v36 = sub_100CF7F90(v7, v16, v21);
  swift_unknownObjectRelease(v8);

  sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLAssetData);
  return v36;
}

void *sub_1009CF4B4()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjCClassFromMetadata;
  id v8;

  v1 = objc_msgSend(v0, "interactiveCanvasController");
  v2 = v1;
  if (v1)
  {
    v3 = objc_msgSend(v1, "editorController");

    if (v3)
    {
      v4 = type metadata accessor for CRLUSDZEditor();
      v6 = v4;
      if (v4)
        ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v4, v5);
      else
        ObjCClassFromMetadata = 0;
      v8 = objc_msgSend(v3, "mostSpecificCurrentEditorOfClass:", ObjCClassFromMetadata);
      v2 = (void *)swift_dynamicCastClass(v8, v6);

      if (!v2)
        swift_unknownObjectRelease(v8);
    }
    else
    {
      return 0;
    }
  }
  return v2;
}

void sub_1009CF580(double a1, double a2)
{
  void *v2;
  id v5;
  double v6;
  double v7;
  void *v8;
  double v9;
  double v10;
  id v11;
  void *v12;
  double v13;
  double v14;
  double v15;
  double v16;

  v5 = objc_msgSend(v2, "canvas");
  v6 = 1.0;
  v7 = 1.0;
  if (v5)
  {
    v8 = v5;
    objc_msgSend(v5, "viewScale");
    v7 = v9;

  }
  v10 = 1.0 / v7 * a1;
  v11 = objc_msgSend(v2, "canvas");
  if (v11)
  {
    v12 = v11;
    objc_msgSend(v11, "viewScale");
    v6 = v13;

  }
  v14 = 1.0 / v6 * a2;
  if (v10 * v14 >= 262144.0)
  {
    v16 = sub_100062E58(v10, v14, 4194304.0);
    sub_100061064(v16);
  }
  else
  {
    v15 = sub_100062DDC(v10, v14, 512.0, 512.0);
    sub_100063090(v15);
  }
}

uint64_t sub_1009CF6DC()
{
  objc_class *v0;
  objc_class *v1;
  uint64_t v2;
  id *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  id *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  int EnumCaseMultiPayload;
  uint64_t v25;
  char *v26;
  char *v27;
  void (*v28)(char *, char *, uint64_t);
  id v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  char *v35;
  objc_class *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  _DWORD *v43;
  uint64_t v44;
  id v45;
  void *v46;
  os_unfair_lock_s *v47;
  id v48;
  uint64_t Strong;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  char *v59;
  uint64_t v60;
  Class v61;
  char *v62;
  uint64_t v63;
  char *v65;
  char *v66;
  id v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  char *v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  char *v82;
  _DWORD *v83;
  uint64_t v84;
  id v85;
  void *v86;
  os_unfair_lock_s *v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  char *v107;
  uint64_t v108;
  void (*v109)(char *, char *, uint64_t);
  Class v110;
  objc_super v111;
  objc_super v112;
  char v113[24];
  char v114[32];

  v1 = v0;
  v109 = (void (*)(char *, char *, uint64_t))type metadata accessor for CRLUSDZRep.PosterLoadingState(0);
  __chkstk_darwin(v109);
  v3 = (id *)((char *)&v98 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v4);
  v108 = (uint64_t)&v98 - v5;
  v6 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v6);
  v106 = (char *)&v98 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v107 = (char *)&v98 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v104 = v13;
  v105 = (char *)&v98 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)&v98 - v15;
  v17 = type metadata accessor for CRLUSDZRep.AssetLoadingState(0);
  __chkstk_darwin(v17);
  v19 = (id *)((char *)&v98 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v20);
  v22 = (char *)&v98 - v21;
  v23 = (uint64_t)v1 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_assetLoadingState;
  swift_beginAccess((char *)v1 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_assetLoadingState, v114, 0, 0);
  sub_1004B8460(v23, (uint64_t)v22, type metadata accessor for CRLUSDZRep.AssetLoadingState);
  sub_1009BE7E0(v19);
  sub_1004B84A4((uint64_t)v22, type metadata accessor for CRLUSDZRep.AssetLoadingState);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v19, v17);
  v110 = v1;
  if (EnumCaseMultiPayload)
  {
    sub_1004B84A4((uint64_t)v19, type metadata accessor for CRLUSDZRep.AssetLoadingState);
    v25 = v8;
  }
  else
  {

    v26 = (char *)v19 + *(int *)(sub_1004B804C(&qword_1013FFB78) + 48);
    v102 = v16;
    v103 = v9;
    v27 = v16;
    v28 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v28(v27, v26, v8);
    v29 = -[objc_class info](v1, "info");
    v30 = type metadata accessor for CRLUSDZItem(0);
    v31 = (char *)objc_retain(*(id *)(swift_dynamicCastClassUnconditional(v29, v30, 0, 0, 0)
                                    + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store));
    swift_unknownObjectRelease(v29);
    v32 = *(_QWORD *)&v31[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManagerLock];
    os_unfair_lock_lock(*(os_unfair_lock_t *)(v32 + 16));
    v33 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager;
    v34 = *(void **)&v31[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
    v25 = v8;
    if (v34)
    {
      v35 = *(char **)&v31[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
    }
    else
    {
      v36 = (objc_class *)type metadata accessor for CRLAssetManager();
      v37 = (char *)objc_allocWithZone(v36);
      v100 = &v37[OBJC_IVAR____TtC8Freeform15CRLAssetManager_store];
      swift_unknownObjectWeakInit(&v37[OBJC_IVAR____TtC8Freeform15CRLAssetManager_store]);
      v99 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_lock;
      v38 = type metadata accessor for CRLUnfairLock();
      v39 = swift_allocObject(v38, 24, 7);
      v40 = v31;
      v41 = v37;
      v101 = v25;
      v42 = v41;
      v43 = (_DWORD *)swift_slowAlloc(4, -1);
      *v43 = 0;
      *(_QWORD *)(v39 + 16) = v43;
      atomic_thread_fence(memory_order_acq_rel);
      *(_QWORD *)&v37[v99] = v39;
      *(_QWORD *)&v42[OBJC_IVAR____TtC8Freeform15CRLAssetManager_assets] = _swiftEmptyDictionarySingleton;
      v44 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_owners;
      *(_QWORD *)&v42[v44] = objc_msgSend((id)objc_opt_self(NSMapTable), "mapTableWithKeyOptions:valueOptions:", 517, 0);
      *(_QWORD *)&v42[OBJC_IVAR____TtC8Freeform15CRLAssetManager_garbageCollectionWorkItem] = 0;
      swift_unknownObjectWeakAssign(v100, v40);

      v111.receiver = v42;
      v111.super_class = v36;
      v45 = objc_msgSendSuper2(&v111, "init");

      v46 = *(void **)&v31[v33];
      *(_QWORD *)&v31[v33] = v45;
      v35 = (char *)v45;

      v25 = v101;
      v34 = 0;
    }
    v47 = *(os_unfair_lock_s **)(v32 + 16);
    v48 = v34;
    os_unfair_lock_unlock(v47);

    Strong = swift_unknownObjectWeakLoadStrong(&v35[OBJC_IVAR____TtC8Freeform15CRLAssetManager_store]);
    v50 = v102;
    v9 = v103;
    if (Strong)
    {
      v51 = Strong;
      v52 = type metadata accessor for TaskPriority(0);
      v53 = (uint64_t)v106;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v106, 1, 1, v52);
      v54 = v105;
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v105, v50, v25);
      v55 = *(unsigned __int8 *)(v9 + 80);
      v56 = v25;
      v57 = (v55 + 40) & ~v55;
      v58 = (_QWORD *)swift_allocObject(&unk_10128E940, v57 + v104, v55 | 7);
      v58[2] = 0;
      v58[3] = 0;
      v58[4] = v51;
      v59 = (char *)v58 + v57;
      v25 = v56;
      v9 = v103;
      v28(v59, v54, v25);
      v60 = sub_100521B98(v53, (uint64_t)&unk_1013FFE88, (uint64_t)v58);
      swift_release(v60);
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v50, v25);
  }
  v61 = v110;
  v62 = (char *)v110 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_posterLoadingState;
  swift_beginAccess((char *)v110 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_posterLoadingState, v113, 0, 0);
  v63 = v108;
  sub_1004B8460((uint64_t)v62, v108, type metadata accessor for CRLUSDZRep.PosterLoadingState);
  sub_1009BE668(v3);
  sub_1004B84A4(v63, type metadata accessor for CRLUSDZRep.PosterLoadingState);
  if (swift_getEnumCaseMultiPayload(v3, v109))
    return sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLUSDZRep.PosterLoadingState);

  v65 = (char *)v3 + *(int *)(sub_1004B804C(&qword_1013FFB78) + 48);
  v66 = v107;
  v109 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v109(v107, v65, v25);
  v67 = -[objc_class info](v61, "info");
  v68 = type metadata accessor for CRLUSDZItem(0);
  v69 = (char *)objc_retain(*(id *)(swift_dynamicCastClassUnconditional(v67, v68, 0, 0, 0)
                                  + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store));
  swift_unknownObjectRelease(v67);
  v70 = *(_QWORD *)&v69[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManagerLock];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v70 + 16));
  v71 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager;
  v72 = *(void **)&v69[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
  if (v72)
  {
    v73 = *(char **)&v69[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
  }
  else
  {
    v110 = (Class)type metadata accessor for CRLAssetManager();
    v74 = (char *)objc_allocWithZone(v110);
    v75 = &v74[OBJC_IVAR____TtC8Freeform15CRLAssetManager_store];
    swift_unknownObjectWeakInit(&v74[OBJC_IVAR____TtC8Freeform15CRLAssetManager_store]);
    v76 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_lock;
    v77 = type metadata accessor for CRLUnfairLock();
    v78 = swift_allocObject(v77, 24, 7);
    v79 = v9;
    v80 = v69;
    v81 = v74;
    v101 = v25;
    v82 = v81;
    v83 = (_DWORD *)swift_slowAlloc(4, -1);
    *v83 = 0;
    *(_QWORD *)(v78 + 16) = v83;
    atomic_thread_fence(memory_order_acq_rel);
    *(_QWORD *)&v74[v76] = v78;
    v66 = v107;
    *(_QWORD *)&v82[OBJC_IVAR____TtC8Freeform15CRLAssetManager_assets] = _swiftEmptyDictionarySingleton;
    v84 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_owners;
    *(_QWORD *)&v82[v84] = objc_msgSend((id)objc_opt_self(NSMapTable), "mapTableWithKeyOptions:valueOptions:", 517, 0);
    *(_QWORD *)&v82[OBJC_IVAR____TtC8Freeform15CRLAssetManager_garbageCollectionWorkItem] = 0;
    swift_unknownObjectWeakAssign(v75, v80);

    v112.receiver = v82;
    v25 = v101;
    v112.super_class = v110;
    v85 = objc_msgSendSuper2(&v112, "init");

    v9 = v79;
    v86 = *(void **)&v69[v71];
    *(_QWORD *)&v69[v71] = v85;
    v73 = (char *)v85;

    v72 = 0;
  }
  v87 = *(os_unfair_lock_s **)(v70 + 16);
  v88 = v72;
  os_unfair_lock_unlock(v87);

  v89 = swift_unknownObjectWeakLoadStrong(&v73[OBJC_IVAR____TtC8Freeform15CRLAssetManager_store]);
  if (v89)
  {
    v90 = v89;
    v91 = type metadata accessor for TaskPriority(0);
    v92 = (uint64_t)v106;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 56))(v106, 1, 1, v91);
    v93 = v105;
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v105, v66, v25);
    v94 = *(unsigned __int8 *)(v9 + 80);
    v95 = (v94 + 40) & ~v94;
    v96 = (char *)swift_allocObject(&unk_10128E918, v95 + v104, v94 | 7);
    *((_QWORD *)v96 + 2) = 0;
    *((_QWORD *)v96 + 3) = 0;
    *((_QWORD *)v96 + 4) = v90;
    v109(&v96[v95], v93, v25);
    v97 = sub_100521B98(v92, (uint64_t)&unk_1013FFE80, (uint64_t)v96);
    swift_release(v97);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v66, v25);
}

void sub_1009CFF0C()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;

  if (*((_BYTE *)v0 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_isInteractive) == 1)
  {
    v1 = objc_msgSend(v0, "interactiveCanvasController");
    if (v1)
    {
      v2 = v1;
      *((_BYTE *)v0 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_didAddNotificationCenterAddObservers) = 1;
      v4 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
      objc_msgSend(v4, "addObserver:selector:name:object:", v0, "canvasWillScroll:", CFSTR("CRLCanvasWillScrollNotification"), v2);
      objc_msgSend(v4, "addObserver:selector:name:object:", v0, "canvasDidScroll:", CFSTR("CRLCanvasDidScrollNotification"), v2);
      objc_msgSend(v4, "addObserver:selector:name:object:", v0, "canvasWillScroll:", CFSTR("CRLCanvasWillZoomNotification"), v2);
      v3 = objc_msgSend(v2, "editorController");
      objc_msgSend(v4, "addObserver:selector:name:object:", v0, "selectionPathDidChangeWithNotification:", CFSTR("CRLEditorControllerSelectionPathDidChangeNotification"), v3);

      objc_msgSend(v4, "addObserver:selector:name:object:", v0, "applicationDidEnterBackground", UIApplicationDidEnterBackgroundNotification, 0);
      objc_msgSend(v4, "addObserver:selector:name:object:", v0, "resumeRendering", UIApplicationWillEnterForegroundNotification, 0);
      objc_msgSend(v4, "addObserver:selector:name:object:", v0, "interruptRendering", UIApplicationProtectedDataWillBecomeUnavailable, 0);

    }
  }
}

void sub_1009D0104()
{
  _BYTE *v0;
  id v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  if (v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_didAddNotificationCenterAddObservers] == 1)
  {
    v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_didAddNotificationCenterAddObservers] = 0;
    v1 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    v2 = objc_msgSend(v0, "interactiveCanvasController");
    objc_msgSend(v1, "removeObserver:name:object:", v0, CFSTR("CRLCanvasWillScrollNotification"), v2);
    objc_msgSend(v1, "removeObserver:name:object:", v0, CFSTR("CRLCanvasDidScrollNotification"), v2);
    objc_msgSend(v1, "removeObserver:name:object:", v0, CFSTR("CRLCanvasWillZoomNotification"), v2);
    if (v2 && (v3 = objc_msgSend(v2, "editorController")) != 0)
    {
      v6 = v3;
      v4 = sub_1004B8930(0, (unint64_t *)&unk_1013FFE70, off_101229890);
      v5 = _bridgeAnythingToObjectiveC<A>(_:)(&v6, v4);

    }
    else
    {
      v5 = 0;
    }
    objc_msgSend(v1, "removeObserver:name:object:", v0, CFSTR("CRLEditorControllerSelectionPathDidChangeNotification"), v5);
    objc_msgSend(v1, "removeObserver:name:object:", v0, UIApplicationDidEnterBackgroundNotification, 0, swift_unknownObjectRelease(v5).n128_f64[0]);
    objc_msgSend(v1, "removeObserver:name:object:", v0, UIApplicationWillEnterForegroundNotification, 0);
    objc_msgSend(v1, "removeObserver:name:object:", v0, UIApplicationProtectedDataDidBecomeAvailable, 0);

  }
}

uint64_t sub_1009D02E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  void **v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  int *v13;
  char *v14;
  uint64_t *v15;
  char *v16;
  id v17;
  _QWORD v19[2];
  _BYTE v20[24];
  char v21[24];

  v1 = type metadata accessor for CRLUSDZRep.AssetLoadingState(0);
  __chkstk_darwin(v1);
  v3 = (char *)v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (void **)((char *)v19 - v5);
  v7 = type metadata accessor for URL(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v0 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_assetLoadingState;
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_assetLoadingState, v21, 0, 0);
  sub_1004B8460(v11, (uint64_t)v6, type metadata accessor for CRLUSDZRep.AssetLoadingState);
  if (swift_getEnumCaseMultiPayload(v6, v1) != 2)
    return sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLUSDZRep.AssetLoadingState);
  v19[1] = v0;
  v12 = *v6;
  v13 = (int *)sub_1004B804C(&qword_1013FFB88);
  v14 = (char *)v6 + v13[12];
  swift_unknownObjectRelease(*(void **)((char *)v6 + v13[16]));
  v15 = (uint64_t *)((char *)v6 + v13[20]);
  sub_100689EAC(*v15, v15[1], v15[2], v15[3], v15[4], v15[5], v15[6]);
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v14, v7);
  v16 = &v3[*(int *)(sub_1004B804C(&qword_1013FFB80) + 64)];
  *(_QWORD *)v3 = v12;
  v3[8] = 0;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v16, v10, v7);
  swift_storeEnumTagMultiPayload(v3, v1, 1);
  swift_beginAccess(v11, v20, 33, 0);
  v17 = v12;
  sub_1009D7AB0((uint64_t)v3, v11, type metadata accessor for CRLUSDZRep.AssetLoadingState);
  swift_endAccess(v20);
  sub_1009BFC4C();
  sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLUSDZRep.AssetLoadingState);

  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1009D0508()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v11;
  _BYTE v12[40];

  v1 = v0;
  if (!objc_msgSend(v0, "isSelectedIgnoringLocking"))
    goto LABEL_6;
  v2 = objc_msgSend(v0, "interactiveCanvasController");
  if (!v2)
    goto LABEL_6;
  v3 = v2;
  v4 = objc_msgSend(v2, "infosForCurrentSelectionPath");
  v5 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v4, &type metadata for AnyHashable, &protocol witness table for AnyHashable);

  if (*(_QWORD *)(v5 + 16) != 1)
  {
    swift_bridgeObjectRelease();

LABEL_6:
    v9 = 0;
    return v9 & 1;
  }
  v6 = objc_msgSend(v1, "info");
  v7 = type metadata accessor for CRLUSDZItem(0);
  v11 = swift_dynamicCastClassUnconditional(v6, v7, 0, 0, 0);
  v8 = sub_1004B7878(&qword_1013FFE68, type metadata accessor for CRLUSDZItem, (uint64_t)&protocol conformance descriptor for NSObject);
  AnyHashable.init<A>(_:)(&v11, v7, v8);
  v9 = sub_10062309C((uint64_t)v12, v5);
  swift_bridgeObjectRelease();

  sub_1004B89A4((uint64_t)v12);
  return v9 & 1;
}

double sub_1009D06C0(CGContext *a1)
{
  char *v1;
  double result;
  void *v4;
  unsigned __int8 v5;
  void *v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  char v9;
  CGImage *v10;
  id v11;
  objc_super v12;

  v12.receiver = v1;
  v12.super_class = (Class)type metadata accessor for CRLUSDZRep(0);
  -[CGContext drawInContext:](&v12, "drawInContext:", a1);
  if ((objc_msgSend(v1, "directlyManagesContentPlatformView") & 1) == 0)
  {
    v4 = *(void **)&v1[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState];
    v5 = v1[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState + 8];
    sub_1009D3B34(v4, v5);
    v6 = (void *)sub_1009BEB88((uint64_t)v4, v5);
    v8 = v7;
    sub_1009D3B68(v4, v5);
    if (v8 >> 6)
    {
      if (v8 >> 6 != 2)
        return sub_1009D3B68(v6, v8);
      v9 = v1[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_isInteractive];
      v10 = v6;
      if ((v9 & 1) != 0)
      {
        sub_100757E04(&_mh_execute_header, (uint64_t)"draw(in:)", 9, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZRep.swift", 81, 2, 2785, "Should only try to draw the poster image if canvas is not interactive.", 70, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"draw(in:)", 9, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZRep.swift", 81, 2u, 2785, (uint64_t)"Should only try to draw the poster image if canvas is not interactive.", 70, 2u);
      }
      sub_1009D08A8(v10, a1);
    }
    else
    {
      v11 = v6;
      sub_100D3F0FC(a1);
    }
    sub_1009D3B68(v6, v8);
    return sub_1009D3B68(v6, v8);
  }
  return result;
}

void sub_1009D08A8(CGImage *a1, CGContextRef c)
{
  void *v2;
  void *v3;
  CGFloat Height;
  double v7;
  double v8;
  double v9;
  double v10;
  CGFloat Width;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  CGRect v17;
  CGRect v18;
  CGRect v19;
  CGRect v20;
  CGRect v21;

  v3 = v2;
  CGContextSaveGState(c);
  objc_msgSend(v3, "naturalBounds");
  Height = CGRectGetHeight(v17);
  CGContextTranslateCTM(c, 0.0, Height);
  CGContextScaleCTM(c, 1.0, -1.0);
  objc_msgSend(v3, "naturalBounds");
  v8 = v7;
  objc_msgSend(v3, "naturalBounds");
  v10 = v9;
  Width = (double)(uint64_t)CGImageGetWidth(a1);
  v12 = (double)(uint64_t)CGImageGetHeight(a1);
  objc_msgSend(v3, "naturalBounds");
  v13 = CGRectGetWidth(v18);
  v19.origin.x = v8;
  v19.origin.y = v10;
  v19.size.width = Width;
  v19.size.height = v12;
  v14 = v13 / CGRectGetWidth(v19);
  objc_msgSend(v3, "naturalBounds");
  v15 = CGRectGetHeight(v20);
  v21.origin.x = v8;
  v21.origin.y = v10;
  v21.size.width = Width;
  v21.size.height = v12;
  v16 = v15 / CGRectGetHeight(v21);
  CGContextSaveGState(c);
  CGContextScaleCTM(c, v14, v16);
  CGContextRef.draw(_:in:byTiling:)(a1, 0, v8, v10, Width, v12);
  CGContextRestoreGState(c);
  CGContextRestoreGState(c);
}

uint64_t sub_1009D09F8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1[8] = v0;
  v2 = type metadata accessor for CRLUSDZRep.AssetLoadingState(0);
  v1[9] = v2;
  v3 = (*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[10] = swift_task_alloc(v3);
  v1[11] = swift_task_alloc(v3);
  v4 = type metadata accessor for MainActor(0);
  v1[12] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  v1[13] = v5;
  v1[14] = v6;
  return swift_task_switch(sub_1009D0A98, v5, v6);
}

uint64_t sub_1009D0A98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  int *v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t ObjectType;
  int *v15;
  _QWORD *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t, float);

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 72);
  v4 = OBJC_IVAR____TtC8Freeform10CRLUSDZRep_assetLoadingState;
  *(_QWORD *)(v0 + 120) = OBJC_IVAR____TtC8Freeform10CRLUSDZRep_assetLoadingState;
  v5 = v2 + v4;
  swift_beginAccess(v2 + v4, v0 + 16, 0, 0);
  sub_1004B8460(v5, v1, type metadata accessor for CRLUSDZRep.AssetLoadingState);
  if (swift_getEnumCaseMultiPayload(v1, v3) == 2)
  {
    v6 = *(_QWORD **)(v0 + 88);
    *(_QWORD *)(v0 + 128) = *v6;
    v7 = (int *)sub_1004B804C(&qword_1013FFB88);
    v8 = (char *)v6 + v7[12];
    v9 = (_QWORD *)((char *)v6 + v7[16]);
    v10 = *v9;
    *(_QWORD *)(v0 + 136) = *v9;
    v11 = v9[1];
    v12 = (_QWORD *)((char *)v6 + v7[20]);
    sub_100689EAC(*v12, v12[1], v12[2], v12[3], v12[4], v12[5], v12[6]);
    v13 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v8, v13);
    ObjectType = swift_getObjectType(v10);
    v15 = *(int **)(v11 + 48);
    v20 = (uint64_t (*)(uint64_t, uint64_t, float))((char *)v15 + *v15);
    v16 = (_QWORD *)swift_task_alloc(v15[1]);
    *(_QWORD *)(v0 + 144) = v16;
    *v16 = v0;
    v16[1] = sub_1009D0CB0;
    return v20(ObjectType, v11, 1.0);
  }
  else
  {
    v18 = *(_QWORD *)(v0 + 88);
    swift_release(*(_QWORD *)(v0 + 96));
    sub_1004B84A4(v18, type metadata accessor for CRLUSDZRep.AssetLoadingState);
    sub_100757E04(&_mh_execute_header, (uint64_t)"generatePosterImage()", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZRep.swift", 81, 2, 2836, "Attempted to generate poster image with invalid rendering state.", 64, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"generatePosterImage()", 21, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZRep.swift", 81, 2u, 2836, (uint64_t)"Attempted to generate poster image with invalid rendering state.", 64, 2u);
    v19 = *(_QWORD *)(v0 + 80);
    swift_task_dealloc(*(_QWORD *)(v0 + 88));
    swift_task_dealloc(v19);
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
}

uint64_t sub_1009D0CB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 144);
  *(_QWORD *)(*(_QWORD *)v2 + 152) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = v4[13];
    v7 = v4[14];
    v8 = sub_1009D0D80;
  }
  else
  {
    v4[20] = a1;
    v6 = v4[13];
    v7 = v4[14];
    v8 = sub_1009D0D24;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_1009D0D24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 96);

  swift_release(v2);
  swift_unknownObjectRelease(v1);
  v3 = *(_QWORD *)(v0 + 160);
  v4 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 88));
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v3);
}

uint64_t sub_1009D0D80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 152);
  v3 = *(void **)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 136);
  v4 = *(_QWORD *)(v0 + 120);
  v6 = *(_QWORD *)(v0 + 72);
  v5 = *(_QWORD **)(v0 + 80);
  v7 = *(_QWORD *)(v0 + 64);
  swift_release(*(_QWORD *)(v0 + 96));
  v8 = v7 + v4;
  v9 = (_QWORD *)((char *)v5 + *(int *)(sub_1004B804C(&qword_1013FFB90) + 48));
  *v5 = v3;
  *v9 = v1;
  v10 = type metadata accessor for CRLUSDZRep.AssetLoadingState.LoadingError(0);
  swift_storeEnumTagMultiPayload(v9, v10, 1);
  swift_storeEnumTagMultiPayload(v5, v6, 3);
  swift_beginAccess(v8, v0 + 40, 33, 0);
  v11 = v3;
  swift_errorRetain(v1);
  sub_1009D7AB0((uint64_t)v5, v8, type metadata accessor for CRLUSDZRep.AssetLoadingState);
  swift_endAccess(v0 + 40);
  sub_1009BFC4C();
  sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLUSDZRep.AssetLoadingState);

  swift_errorRelease(v1);
  swift_unknownObjectRelease(v2);
  v12 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 88));
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

id sub_1009D0EAC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLUSDZRep(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1009D0F90()
{
  return type metadata accessor for CRLUSDZRep(0);
}

uint64_t type metadata accessor for CRLUSDZRep(uint64_t a1)
{
  return sub_1004BD408(a1, (uint64_t *)&unk_1013FFB60, (uint64_t)&nominal type descriptor for CRLUSDZRep);
}

uint64_t sub_1009D0FAC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[25];

  v5[0] = &unk_100F1FBD0;
  v5[1] = (char *)&value witness table for Builtin.Int64 + 64;
  v5[2] = (char *)&value witness table for Builtin.Int64 + 64;
  v5[3] = &unk_100F1FBE8;
  result = type metadata accessor for CRLUSDZRep.PosterLoadingState(319);
  if (v3 <= 0x3F)
  {
    v5[4] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for CRLUSDZRep.AssetLoadingState(319);
    if (v4 <= 0x3F)
    {
      v5[5] = *(_QWORD *)(result - 8) + 64;
      v5[6] = &unk_100F1FC00;
      v5[7] = &unk_100F1FBD0;
      v5[8] = &unk_100F1FBD0;
      v5[9] = (char *)&value witness table for Builtin.UnknownObject + 64;
      v5[10] = &unk_100F1FBD0;
      v5[11] = &unk_100F1FBD0;
      v5[12] = &unk_100F1FBD0;
      v5[13] = &unk_100F1FC18;
      v5[14] = (char *)&value witness table for Builtin.Int64 + 64;
      v5[15] = &unk_100F1FC18;
      v5[16] = &unk_100F1FC18;
      v5[17] = &unk_100F1FC18;
      v5[18] = &unk_100F1FC30;
      v5[19] = &unk_100F1FBD0;
      v5[20] = &unk_100F1FBD0;
      v5[21] = &unk_100F1FBD0;
      v5[22] = &unk_100F1FBD0;
      v5[23] = &unk_100F1FBD0;
      v5[24] = &unk_100F1FBD0;
      return swift_updateClassMetadata2(a1, 256, 25, v5, a1 + 80);
    }
  }
  return result;
}

uint64_t type metadata accessor for CRLUSDZRep.PosterLoadingState(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1013FFD60, (uint64_t)&nominal type descriptor for CRLUSDZRep.PosterLoadingState);
}

uint64_t type metadata accessor for CRLUSDZRep.AssetLoadingState(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1013FFC08, (uint64_t)&nominal type descriptor for CRLUSDZRep.AssetLoadingState);
}

uint64_t sub_1009D10D0(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  char *v29;
  uint64_t v30;
  uint64_t ObjectType;
  uint64_t v32;
  char *v33;
  _QWORD *v34;
  uint64_t v35;
  id v36;
  uint64_t *v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t inited;
  id v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __n128 v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v56;
  id v57;
  char *v58;
  char *v59;
  uint64_t v60;
  void *v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  _BYTE v66[56];
  char v67[112];
  char v68[8];
  char v69[8];

  v62 = (uint64_t *)a2;
  v64 = a1;
  v65 = (_QWORD *)type metadata accessor for UUID(0);
  v63 = *(v65 - 1);
  __chkstk_darwin(v65);
  v4 = (char *)&v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CRLUSDZRep.AssetLoadingState(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (id *)((char *)&v56 - v13);
  __chkstk_darwin(v15);
  v61 = v2;
  v16 = (uint64_t)v2 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_assetLoadingState;
  v18 = (char *)&v56 - v17;
  swift_beginAccess(v16, v69, 0, 0);
  sub_1004B8460(v16, (uint64_t)v18, type metadata accessor for CRLUSDZRep.AssetLoadingState);
  if (swift_getEnumCaseMultiPayload(v18, v9) == 2)
  {
    v56 = v11;
    v58 = v18;
    sub_1004B8460((uint64_t)v18, (uint64_t)v14, type metadata accessor for CRLUSDZRep.AssetLoadingState);
    v57 = *v14;
    v19 = (int *)sub_1004B804C(&qword_1013FFB88);
    v20 = v6;
    v21 = v5;
    v22 = (char *)v14 + v19[12];
    v23 = (uint64_t *)((char *)v14 + v19[16]);
    v24 = *v23;
    v25 = v23[1];
    v26 = (uint64_t *)((char *)v14 + v19[20]);
    v27 = v24;
    sub_100689EAC(*v26, v26[1], v26[2], v26[3], v26[4], v26[5], v26[6]);
    v60 = v20;
    v28 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
    v59 = v8;
    v29 = v22;
    v30 = v21;
    v28(v8, v29, v21);
    ObjectType = swift_getObjectType(v27);
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(ObjectType, v25);
    LOBYTE(v20) = static UUID.== infix(_:_:)(v4);
    (*(void (**)(char *, _QWORD *))(v63 + 8))(v4, v65);
    if ((v20 & 1) != 0)
    {
      v32 = (uint64_t)v56;
      v33 = (char *)v56 + v19[12];
      v34 = (_QWORD *)((char *)v56 + v19[16]);
      v35 = (uint64_t)v56 + v19[20];
      v36 = v57;
      *v56 = v57;
      (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v33, v59, v30);
      *v34 = v27;
      v34[1] = v25;
      v37 = v62;
      sub_10068EAAC((uint64_t)v62, v35);
      swift_storeEnumTagMultiPayload(v32, v9, 2);
      swift_beginAccess(v16, v66, 33, 0);
      v65 = v36;
      swift_unknownObjectRetain(v27);
      sub_1009D69D4(v37);
      sub_1009D7AB0(v32, v16, type metadata accessor for CRLUSDZRep.AssetLoadingState);
      swift_endAccess(v66);
      v38 = v27;
      v39 = v61;
      sub_1009BFC4C();
      sub_1004B84A4(v32, type metadata accessor for CRLUSDZRep.AssetLoadingState);
      v40 = v30;
      if (qword_1013DD7E8 != -1)
        swift_once(&qword_1013DD7E8, sub_100A04074);
      swift_beginAccess(&static OS_os_log.crlThreeDimensionalObjects, v68, 0, 0);
      v41 = (void *)static OS_os_log.crlThreeDimensionalObjects;
      v42 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v42, v67);
      *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
      v44 = v41;
      v45 = objc_msgSend(v39, "debugDescription");
      v46 = static String._unconditionallyBridgeFromObjectiveC(_:)(v45);
      v48 = v47;

      *(_QWORD *)(inited + 56) = &type metadata for String;
      v49 = sub_1004CFC2C();
      *(_QWORD *)(inited + 64) = v49;
      *(_QWORD *)(inited + 32) = v46;
      *(_QWORD *)(inited + 40) = v48;
      sub_10068EAAC((uint64_t)v37, (uint64_t)v66);
      sub_1009D69D4(v37);
      v50 = String.init<A>(describing:)(v66, &type metadata for CRLUSDRendering.RendererState);
      *(_QWORD *)(inited + 96) = &type metadata for String;
      *(_QWORD *)(inited + 104) = v49;
      *(_QWORD *)(inited + 72) = v50;
      *(_QWORD *)(inited + 80) = v51;
      v53 = static os_log_type_t.debug.getter(v52);
      sub_100A06EBC((uint64_t)v44, &_mh_execute_header, v53, "(USDZRep) [%{public}@] renderer state changed %{public}@", 56, 2, inited);
      swift_setDeallocating(inited);
      v54 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(inited + 32, 2, v54);

      swift_unknownObjectRelease(v38);
      (*(void (**)(char *, uint64_t))(v60 + 8))(v59, v40);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v60 + 8))(v59, v21);

      swift_unknownObjectRelease(v27);
    }
    v18 = v58;
  }
  return sub_1004B84A4((uint64_t)v18, type metadata accessor for CRLUSDZRep.AssetLoadingState);
}

uint64_t sub_1009D1600(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v4 = type metadata accessor for MainActor(0);
  v3[5] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  return swift_task_switch(sub_1009D1670, v5, v6);
}

uint64_t sub_1009D1670()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  swift_release(*(_QWORD *)(v0 + 40));
  sub_1009D10D0(v2, v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1009D16BC(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id *v22;
  objc_class *v23;
  char v24;
  uint64_t v25;
  int *v26;
  uint64_t *v27;
  unint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  unsigned int v36;
  int v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  NSString v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  unsigned int (*v50)(uint64_t, uint64_t, uint64_t);
  char v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t);
  uint64_t *v54;
  char v55;
  unsigned int v56;
  id v57;
  uint64_t v58;
  id *v59;
  int *v60;
  char *v61;
  uint64_t *v62;
  unint64_t v63;
  uint64_t v64;
  __n128 v65;
  unsigned __int8 v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  Class isa;
  uint64_t v71;
  void (*v72)(char *);
  uint64_t v73;
  int *v74;
  id v75;
  unsigned int v76;
  uint64_t v77;
  char *v78;
  id *v79;
  void *v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  _QWORD v85[5];
  objc_super v86;

  v3 = type metadata accessor for UTType(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_1013FFE58);
  __chkstk_darwin(v7);
  v83 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C((uint64_t *)&unk_1013E3620);
  __chkstk_darwin(v9);
  v82 = (uint64_t)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v71 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)&v71 - v15;
  v84 = type metadata accessor for CRLUSDZRep.AssetLoadingState(0);
  __chkstk_darwin(v84);
  v79 = (id *)((char *)&v71 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v18);
  v81 = (char *)&v71 - v19;
  __chkstk_darwin(v20);
  v22 = (id *)((char *)&v71 - v21);
  v23 = (objc_class *)type metadata accessor for CRLUSDZRep(0);
  v86.receiver = v1;
  v86.super_class = v23;
  v80 = a1;
  objc_msgSendSuper2(&v86, "addKnobsToArray:", a1);
  v85[3] = &type metadata for CRLFeatureFlags;
  v85[4] = sub_1004DB6DC();
  LOBYTE(v85[0]) = 20;
  v24 = isFeatureEnabled(_:)(v85);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v85);
  if ((v24 & 1) != 0 && v1[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingStrategy] != 3)
  {
    v25 = (uint64_t)&v1[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_assetLoadingState];
    swift_beginAccess(&v1[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_assetLoadingState], v85, 0, 0);
    sub_1004B8460(v25, (uint64_t)v22, type metadata accessor for CRLUSDZRep.AssetLoadingState);
    if (swift_getEnumCaseMultiPayload(v22, v84) != 2)
    {
      sub_1004B84A4((uint64_t)v22, type metadata accessor for CRLUSDZRep.AssetLoadingState);
      return;
    }
    v77 = v25;

    v26 = (int *)sub_1004B804C(&qword_1013FFB88);
    v78 = (char *)v22 + v26[12];
    swift_unknownObjectRelease(*(id *)((char *)v22 + v26[16]));
    v27 = (uint64_t *)((char *)v22 + v26[20]);
    v28 = v27[5];
    if (v28 >> 62)
    {
      sub_100689EAC(*v27, v27[1], v27[2], v27[3], v27[4], v28, v27[6]);
      v38 = type metadata accessor for URL(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v38 - 8) + 8))(v78, v38);
      return;
    }
    v74 = v26;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v29 = type metadata accessor for URL(0);
    v72 = *(void (**)(char *))(*(_QWORD *)(v29 - 8) + 8);
    v73 = v29;
    v72(v78);
    v30 = objc_msgSend(v1, "interactiveCanvasController");
    if (v30)
    {
      v31 = v30;
      v76 = objc_msgSend(v30, "documentIsSharedReadOnly");

      if ((sub_1009D0508() & 1) != 0)
      {
LABEL_7:
        v32 = objc_msgSend(v1, "interactiveCanvasController");
        if (v32)
        {
          v33 = v32;
          v34 = objc_msgSend(v32, "layerHost");

          if (v34)
          {
            if ((objc_msgSend(v34, "respondsToSelector:", "asiOSCVC") & 1) != 0)
            {
              v35 = objc_msgSend(v34, "asiOSCVC");
              v36 = objc_msgSend(v35, "isCurrentlyInQuickSelectMode");
              swift_unknownObjectRelease(v34);

              v37 = v36 ^ 1;
LABEL_17:
              LODWORD(v78) = v37;
LABEL_18:
              v75 = v1;
              v39 = (char *)sub_1009CF138();
              v41 = *(_QWORD *)&v39[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 24];
              v40 = *(_QWORD *)&v39[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 32];
              sub_1004BB5A4(&v39[OBJC_IVAR____TtC8Freeform8CRLAsset_storage], v41);
              (*(void (**)(uint64_t, uint64_t))(v40 + 16))(v41, v40);
              v42 = String._bridgeToObjectiveC()();
              v43 = objc_msgSend(v42, "crl_pathUTI", swift_bridgeObjectRelease().n128_f64[0]);

              if (v43)
              {
                v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(v43);
                v46 = v45;

                UTType.init(_:)(v44, v46, v47);
              }
              else
              {
                (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v16, 1, 1, v3);
              }
              v48 = (uint64_t)v83;

              static UTType.realityFile.getter();
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v13, 0, 1, v3);
              v49 = v48 + *(int *)(v7 + 48);
              sub_1004CB7BC((uint64_t)v16, v48, (uint64_t *)&unk_1013E3620);
              sub_1004CB7BC((uint64_t)v13, v49, (uint64_t *)&unk_1013E3620);
              v50 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
              if (v50(v48, 1, v3) == 1)
              {
                sub_1004CB800((uint64_t)v13, (uint64_t *)&unk_1013E3620);
                sub_1004CB800((uint64_t)v16, (uint64_t *)&unk_1013E3620);
                if (v50(v49, 1, v3) == 1)
                {
                  sub_1004CB800(v48, (uint64_t *)&unk_1013E3620);
                  if (!(_DWORD)v78)
                    return;
                  v51 = 1;
                  goto LABEL_31;
                }
                v51 = 0;
                v54 = &qword_1013FFE58;
                v55 = (char)v78;
              }
              else
              {
                v52 = v82;
                sub_1004CB7BC(v48, v82, (uint64_t *)&unk_1013E3620);
                if (v50(v49, 1, v3) == 1)
                {
                  sub_1004CB800((uint64_t)v13, (uint64_t *)&unk_1013E3620);
                  sub_1004CB800((uint64_t)v16, (uint64_t *)&unk_1013E3620);
                  v51 = 0;
                  v53 = *(void (**)(char *, uint64_t))(v4 + 8);
                  v54 = &qword_1013FFE58;
                }
                else
                {
                  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v6, v49, v3);
                  sub_1004B7878((unint64_t *)&qword_1013FFE60, (uint64_t (*)(uint64_t))&type metadata accessor for UTType, (uint64_t)&protocol conformance descriptor for UTType);
                  v51 = dispatch thunk of static Equatable.== infix(_:_:)(v52, v6);
                  v53 = *(void (**)(char *, uint64_t))(v4 + 8);
                  v53(v6, v3);
                  v54 = (uint64_t *)&unk_1013E3620;
                  sub_1004CB800((uint64_t)v13, (uint64_t *)&unk_1013E3620);
                  sub_1004CB800((uint64_t)v16, (uint64_t *)&unk_1013E3620);
                }
                v55 = (char)v78;
                v53((char *)v52, v3);
              }
              sub_1004CB800(v48, v54);
              if ((v55 & 1) == 0)
                return;
LABEL_31:
              if ((v76 & 1) != 0)
              {
                v56 = 0;
                v57 = v75;
                v58 = (uint64_t)v81;
              }
              else
              {
                v57 = v75;
                v58 = (uint64_t)v81;
                v56 = objc_msgSend(v75, "isLocked") ^ 1;
              }
              sub_1004B8460(v77, v58, type metadata accessor for CRLUSDZRep.AssetLoadingState);
              if (swift_getEnumCaseMultiPayload(v58, v84) == 2)
              {
                v59 = v79;
                sub_1004B8460(v58, (uint64_t)v79, type metadata accessor for CRLUSDZRep.AssetLoadingState);

                v60 = v74;
                v61 = (char *)v59 + v74[12];
                swift_unknownObjectRelease(*(id *)((char *)v59 + v74[16]));
                v62 = (uint64_t *)((char *)v59 + v60[20]);
                v63 = v62[5];
                if (!(v63 >> 62))
                {
                  v64 = *(_QWORD *)(v62[4] + 16);
                  swift_bridgeObjectRelease();
                  v65 = swift_bridgeObjectRelease();
                  ((void (*)(char *, uint64_t, __n128))v72)(v61, v73, v65);
                  sub_1004B84A4(v58, type metadata accessor for CRLUSDZRep.AssetLoadingState);
                  if (!((v64 == 0) | v51 & 1))
                  {
                    if (v56)
                      v66 = 2;
                    else
                      v66 = 1;
                    goto LABEL_45;
                  }
                  if (!v56)
                    return;
LABEL_41:
                  v66 = 0;
LABEL_45:
                  v67 = v80;
                  v68 = sub_100BD69D4(v57, v66);
                  swift_bridgeObjectRetain(v68);
                  sub_1005215BC(v69);
                  swift_bridgeObjectRelease();
                  isa = Array._bridgeToObjectiveC()().super.isa;
                  objc_msgSend(v67, "addObjectsFromArray:", isa, swift_bridgeObjectRelease().n128_f64[0]);

                  return;
                }
                sub_100689EAC(*v62, v62[1], v62[2], v62[3], v62[4], v63, v62[6]);
                ((void (*)(char *, uint64_t))v72)(v61, v73);
              }
              sub_1004B84A4(v58, type metadata accessor for CRLUSDZRep.AssetLoadingState);
              if ((v56 & 1) == 0)
                return;
              goto LABEL_41;
            }
            swift_unknownObjectRelease(v34);
          }
        }
        v37 = 1;
        goto LABEL_17;
      }
    }
    else
    {
      v76 = 0;
      if ((sub_1009D0508() & 1) != 0)
        goto LABEL_7;
    }
    LODWORD(v78) = 0;
    goto LABEL_18;
  }
}

void sub_1009D1FD4(char *a1, uint64_t a2)
{
  void *v2;
  void *v3;
  id v6;
  NSString v7;
  NSString v8;
  NSString v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t inited;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  _BYTE v30[112];
  _BYTE v31[24];

  v3 = v2;
  sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
  if ((static NSObject.== infix(_:_:)(a2, v3) & 1) != 0)
  {
    v29 = *(__n128 *)&a1[OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_currentOrientationForRotateSession];
    v6 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v7 = String._bridgeToObjectiveC()();
    v8 = String._bridgeToObjectiveC()();
    v9 = String._bridgeToObjectiveC()();
    v10 = objc_msgSend(v6, "localizedStringForKey:value:table:", v7, v8, v9);

    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v13 = v12;

    sub_1009D22A4(v11, v13, v29);
    swift_bridgeObjectRelease(v13);
    if (qword_1013DD7E8 != -1)
      swift_once(&qword_1013DD7E8, sub_100A04074);
    swift_beginAccess(&static OS_os_log.crlThreeDimensionalObjects, v31, 0, 0);
    v14 = (void *)static OS_os_log.crlThreeDimensionalObjects;
    v15 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v15, v30);
    *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
    v17 = v14;
    v18 = objc_msgSend(v3, "debugDescription");
    v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    v21 = v20;

    *(_QWORD *)(inited + 56) = &type metadata for String;
    v22 = sub_1004CFC2C();
    *(_QWORD *)(inited + 64) = v22;
    *(_QWORD *)(inited + 32) = v19;
    *(_QWORD *)(inited + 40) = v21;
    v23 = objc_msgSend(a1, "description");
    v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
    v26 = v25;

    *(_QWORD *)(inited + 96) = &type metadata for String;
    *(_QWORD *)(inited + 104) = v22;
    *(_QWORD *)(inited + 72) = v24;
    *(_QWORD *)(inited + 80) = v26;
    v27 = static os_log_type_t.debug.getter();
    sub_100A06EBC((uint64_t)v17, &_mh_execute_header, v27, "(USDZRep) [%{public}@] committed rotation (%@)", 46, 2, inited);
    swift_setDeallocating(inited);
    v28 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 2, v28);

  }
}

void sub_1009D22A4(uint64_t a1, uint64_t a2, __n128 a3)
{
  void *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjCClassFromMetadata;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;

  v24 = a3;
  v6 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v6);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend(v3, "interactiveCanvasController");
  if (v9)
  {
    v10 = v9;
    v11 = objc_msgSend(v9, "editorController");

    if (v11)
    {
      v12 = type metadata accessor for CRLUSDZEditor();
      v14 = v12;
      if (v12)
        ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v12, v13);
      else
        ObjCClassFromMetadata = 0;
      v16 = objc_msgSend(v11, "mostSpecificCurrentEditorOfClass:", ObjCClassFromMetadata, *(_OWORD *)&v24);
      v17 = swift_dynamicCastClass(v16, v14);

      if (v17)
      {
        *((_BYTE *)v3 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_hideKnobsDueToBoundsUpdate) = 1;
        v18 = type metadata accessor for TaskPriority(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v8, 1, 1, v18);
        type metadata accessor for MainActor(0);
        v19 = v3;
        swift_unknownObjectRetain(v16);
        swift_bridgeObjectRetain(a2);
        v21 = static MainActor.shared.getter(v20);
        v22 = swift_allocObject(&unk_10128EC88, 80, 15);
        *(_QWORD *)(v22 + 16) = v21;
        *(_QWORD *)(v22 + 24) = &protocol witness table for MainActor;
        *(_QWORD *)(v22 + 32) = v19;
        *(_QWORD *)(v22 + 40) = v17;
        *(__n128 *)(v22 + 48) = v24;
        *(_QWORD *)(v22 + 64) = a1;
        *(_QWORD *)(v22 + 72) = a2;
        v23 = sub_100618920((uint64_t)v8, (uint64_t)&unk_1013FFFF8, v22);
        swift_release(v23);
        swift_unknownObjectRelease(v16);
      }
      else
      {
        swift_unknownObjectRelease(v16);
      }
    }
  }
}

uint64_t sub_1009D2488(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7, unint64_t a8)
{
  __n128 *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 **v13;

  v8[3].n128_u64[0] = a7;
  v8[3].n128_u64[1] = a8;
  v8[1] = a1;
  v8[2].n128_u64[0] = a5;
  v8[2].n128_u64[1] = a6;
  v9 = sub_1004B804C(&qword_101400000);
  v10 = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8[4].n128_u64[0] = v10;
  v11 = type metadata accessor for CRLAssetData(0);
  v8[4].n128_u64[1] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MainActor(0);
  v8[5].n128_u64[0] = v12;
  v8[5].n128_u64[1] = static MainActor.shared.getter(v12);
  v13 = (__n128 **)swift_task_alloc(dword_10140000C);
  v8[6].n128_u64[0] = (unint64_t)v13;
  *v13 = v8;
  v13[1] = (__n128 *)sub_1009D2550;
  return sub_1009D2A1C(v10);
}

uint64_t sub_1009D2550()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 96);
  v4 = *(_QWORD *)(*v1 + 80);
  *(_QWORD *)(*v1 + 104) = v0;
  swift_task_dealloc(v3);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  *(_QWORD *)(v2 + 112) = v6;
  *(_QWORD *)(v2 + 120) = v5;
  if (v0)
    v7 = sub_1009D2980;
  else
    v7 = sub_1009D25DC;
  return swift_task_switch(v7, v6, v5);
}

uint64_t sub_1009D25DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v5;
  void *v6;
  double *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD *v15;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = sub_1004B804C((uint64_t *)&unk_101400010);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(v1, 1, v2) == 1)
  {
    swift_release(*(_QWORD *)(v0 + 88));
    sub_1004CB800(v1, &qword_101400000);
    v3 = *(_QWORD *)(v0 + 64);
    swift_task_dealloc(*(_QWORD *)(v0 + 72));
    swift_task_dealloc(v3);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 56);
    v6 = *(void **)(v0 + 32);
    v7 = (double *)(v1 + *(int *)(v2 + 48));
    v8 = *v7;
    v9 = v7[1];
    v10 = v7[2];
    v11 = v7[3];
    sub_1004B84E0(v1, *(_QWORD *)(v0 + 72), type metadata accessor for CRLAssetData);
    v12 = objc_msgSend(v6, "info");
    *(_QWORD *)(v0 + 128) = v12;
    v13 = type metadata accessor for CRLUSDZItem(0);
    v14 = swift_dynamicCastClassUnconditional(v12, v13, 0, 0, 0);
    v15 = (_QWORD *)swift_task_alloc(dword_1013EDF14);
    *(_QWORD *)(v0 + 136) = v15;
    *v15 = v0;
    v15[1] = sub_1009D275C;
    return sub_1006EC18C(*(_QWORD *)(v0 + 72), v14, *(_QWORD *)(v0 + 48), v5, *(__n128 *)(v0 + 16), v8, v9, v10, v11);
  }
}

uint64_t sub_1009D275C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v2 = *v1;
  v4 = *(_QWORD *)(*v1 + 128);
  v3 = *(_QWORD *)(*v1 + 136);
  *(_QWORD *)(*v1 + 144) = v0;
  swift_task_dealloc(v3);
  swift_unknownObjectRelease(v4);
  if (v0)
    v5 = sub_1009D29C4;
  else
    v5 = sub_1009D27CC;
  return swift_task_switch(v5, *(_QWORD *)(v2 + 112), *(_QWORD *)(v2 + 120));
}

uint64_t sub_1009D27CC()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = objc_msgSend(*(id *)(v0 + 32), "layout", swift_release(*(_QWORD *)(v0 + 88)).n128_f64[0]);
  v2 = type metadata accessor for CRLUSDZLayout();
  v3 = swift_dynamicCastClassUnconditional(v1, v2, 0, 0, 0)
     + OBJC_IVAR____TtC8Freeform13CRLUSDZLayout_orientationSource;
  if ((*(_BYTE *)(v3 + 16) & 1) != 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"dynamicPoseChangeDidEnd()", 25, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZLayout.swift", 84, 2, 334, "Unexpected dynamic pose end.", 28, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"dynamicPoseChangeDidEnd()", 25, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZLayout.swift", 84, 2u, 334, (uint64_t)"Unexpected dynamic pose end.", 28, 2u);
  }
  else
  {
    *(_QWORD *)v3 = 0;
    *(_QWORD *)(v3 + 8) = 0;
    *(_BYTE *)(v3 + 16) = 1;
  }

  sub_100BD57A4();
  v4 = *(_QWORD *)(v0 + 72);
  v5 = *(_QWORD *)(v0 + 32);
  sub_100BD59F8();
  sub_1004B84A4(v4, type metadata accessor for CRLAssetData);
  *(_BYTE *)(v5 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_hideKnobsDueToBoundsUpdate) = 0;
  v6 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 72));
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009D2980()
{
  uint64_t v0;
  uint64_t v1;

  swift_release(*(_QWORD *)(v0 + 88));
  v1 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 72));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009D29C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 72);
  swift_release(*(_QWORD *)(v0 + 88));
  sub_1004B84A4(v1, type metadata accessor for CRLAssetData);
  v2 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 72));
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009D2A1C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2[37] = a1;
  v2[38] = v1;
  v3 = type metadata accessor for CRLUSDZAssetDataStruct(0);
  v2[39] = v3;
  v2[40] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1004B804C((uint64_t *)&unk_1013E9BE0);
  v2[41] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CRLAssetData(0);
  v2[42] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[43] = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[44] = swift_task_alloc(v7);
  v2[45] = swift_task_alloc(v7);
  v2[46] = swift_task_alloc(v7);
  v8 = sub_1004B804C(&qword_101400000);
  v2[47] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MainActor(0);
  v2[48] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  v2[49] = v10;
  v2[50] = v11;
  return swift_task_switch(sub_1009D2B38, v10, v11);
}

uint64_t sub_1009D2B38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t inited;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t, uint64_t);
  id v17;
  uint64_t v18;
  uint64_t v19;
  _UNKNOWN ****v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  _OWORD *v29;
  __int128 v30;
  _QWORD *v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  if (qword_1013DD7E8 != -1)
    swift_once(&qword_1013DD7E8, sub_100A04074);
  v1 = *(_QWORD *)(v0 + 376);
  v35 = *(_QWORD *)(v0 + 344);
  v36 = *(_QWORD *)(v0 + 336);
  v2 = *(_QWORD *)(v0 + 320);
  v3 = *(void **)(v0 + 304);
  v33 = *(_QWORD *)(v0 + 312);
  v34 = *(_QWORD *)(v0 + 328);
  swift_beginAccess(&static OS_os_log.crlThreeDimensionalObjects, v0 + 264, 0, 0);
  v4 = (void *)static OS_os_log.crlThreeDimensionalObjects;
  v5 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v5, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v7 = v4;
  v8 = objc_msgSend(v3, "debugDescription");
  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v11 = v10;

  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v9;
  *(_QWORD *)(inited + 40) = v11;
  v13 = static os_log_type_t.debug.getter(v12);
  sub_100A06EBC((uint64_t)v7, &_mh_execute_header, v13, "(USDZRep) [%{public}@] calculatePosterImageAndBoundingRect()", 60, 2, inited);
  swift_setDeallocating(inited);
  v14 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v14);

  v15 = sub_1004B804C((uint64_t *)&unk_101400010);
  *(_QWORD *)(v0 + 408) = v15;
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56);
  *(_QWORD *)(v0 + 416) = v16;
  v16(v1, 1, 1, v15);
  v17 = objc_msgSend(v3, "info");
  v18 = type metadata accessor for CRLUSDZItem(0);
  *(_QWORD *)(v0 + 424) = v18;
  v19 = swift_dynamicCastClassUnconditional(v17, v18, 0, 0, 0);
  v20 = *(_UNKNOWN *****)(v19 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*v20 == &off_10140F528)
    v21 = *(_QWORD *)(v19 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  else
    v21 = 0;
  swift_beginAccess(v21 + qword_101481450, v0 + 240, 32, 0);
  swift_retain(v20);
  v22 = sub_1004B804C((uint64_t *)&unk_1013E9BD0);
  CRRegister.wrappedValue.getter(v22);
  swift_endAccess(v0 + 240);
  swift_release(v20);
  sub_1004CB7BC(v2 + *(int *)(v33 + 20), v34, (uint64_t *)&unk_1013E9BE0);
  sub_1004B84A4(v2, type metadata accessor for CRLUSDZAssetDataStruct);
  v23 = swift_unknownObjectRelease(v17);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v35 + 48))(v34, 1, v36, v23) == 1)
  {
    sub_1004CB800(*(_QWORD *)(v0 + 328), (uint64_t *)&unk_1013E9BE0);
  }
  else
  {
    v24 = *(void **)(v0 + 304);
    sub_1004B84E0(*(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 368), type metadata accessor for CRLAssetData);
    v25 = objc_msgSend(v24, "info");
    swift_dynamicCastClassUnconditional(v25, v18, 0, 0, 0);
    sub_100660120(v0 + 168);
    swift_unknownObjectRelease(v25);
    sub_1004C4938(v0 + 168, v0 + 128, &qword_1013E1B30);
    if (*(_BYTE *)(v0 + 160) == 1)
    {
      sub_1004B84A4(*(_QWORD *)(v0 + 368), type metadata accessor for CRLAssetData);
    }
    else
    {
      v27 = *(_QWORD *)(v0 + 368);
      v26 = *(_QWORD *)(v0 + 376);
      v28 = *(_OWORD *)(v0 + 144);
      *(_OWORD *)(v0 + 208) = *(_OWORD *)(v0 + 128);
      *(_OWORD *)(v0 + 224) = v28;
      sub_1004CB800(v26, &qword_101400000);
      v29 = (_OWORD *)(v26 + *(int *)(v15 + 48));
      sub_1004B84E0(v27, v26, type metadata accessor for CRLAssetData);
      v30 = *(_OWORD *)(v0 + 224);
      *v29 = *(_OWORD *)(v0 + 208);
      v29[1] = v30;
      v16(v26, 0, 1, v15);
    }
  }
  v31 = (_QWORD *)swift_task_alloc(dword_1013FFB74);
  *(_QWORD *)(v0 + 432) = v31;
  *v31 = v0;
  v31[1] = sub_1009D2F1C;
  return sub_1009D09F8();
}

uint64_t sub_1009D2F1C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 432);
  *(_QWORD *)(*v1 + 440) = a1;
  swift_task_dealloc(v3);
  return swift_task_switch(sub_1009D2F74, *(_QWORD *)(v2 + 392), *(_QWORD *)(v2 + 400));
}

uint64_t sub_1009D2F74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 440);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 424);
    v3 = objc_msgSend(*(id *)(v0 + 304), "info");
    *(_QWORD *)(v0 + 448) = v3;
    v4 = swift_dynamicCastClassUnconditional(v3, v2, 0, 0, 0);
    v14 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1013FE4F8 + dword_1013FE4F8);
    v5 = (_QWORD *)swift_task_alloc(unk_1013FE4FC);
    *(_QWORD *)(v0 + 456) = v5;
    *v5 = v0;
    v5[1] = sub_1009D3138;
    return v14(v1, v4);
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 376);
    v8 = *(_QWORD *)(v0 + 296);
    swift_release(*(_QWORD *)(v0 + 384));
    sub_100757E04(&_mh_execute_header, (uint64_t)"calculatePosterImageAndBoundingRect()", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZRep.swift", 81, 2, 3058, "Unable to generate poster image.", 32, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"calculatePosterImageAndBoundingRect()", 37, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZRep.swift", 81, 2u, 3058, (uint64_t)"Unable to generate poster image.", 32, 2u);
    sub_1004C4938(v7, v8, &qword_101400000);
    v9 = *(_QWORD *)(v0 + 368);
    v11 = *(_QWORD *)(v0 + 352);
    v10 = *(_QWORD *)(v0 + 360);
    v13 = *(_QWORD *)(v0 + 320);
    v12 = *(_QWORD *)(v0 + 328);
    swift_task_dealloc(*(_QWORD *)(v0 + 376));
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1009D3138(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v3 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 448);
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 456);
  v3[58] = a1;
  v3[59] = v1;
  swift_task_dealloc(v4);
  swift_unknownObjectRelease(v5);
  if (v1)
    v6 = sub_1009D35A4;
  else
    v6 = sub_1009D31B0;
  return swift_task_switch(v6, v3[49], v3[50]);
}

uint64_t sub_1009D31B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  id v12;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  BOOL v17;
  void *v18;
  void *v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  CGRect v51;
  CGRect v52;

  v1 = *(_QWORD *)(v0 + 464);
  swift_release(*(_QWORD *)(v0 + 384));
  sub_1004E90B0(v1 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage, v0 + 88);
  v2 = sub_1004B804C(&qword_101400020);
  v3 = type metadata accessor for CRLAssetBackedAssetStorage(0);
  v4 = swift_dynamicCast(v0 + 288, v0 + 88, v2, v3, 6);
  v5 = *(void **)(v0 + 464);
  if (v4)
  {
    v7 = *(_QWORD *)(v0 + 352);
    v6 = *(_QWORD *)(v0 + 360);
    v8 = *(void **)(v0 + 304);
    v9 = *(_QWORD *)(v0 + 288);
    sub_1004B8460(v9 + OBJC_IVAR____TtC8Freeform26CRLAssetBackedAssetStorage_assetData, v7, type metadata accessor for CRLAssetData);
    swift_release(v9);
    sub_1004B84E0(v7, v6, type metadata accessor for CRLAssetData);
    v10 = objc_msgSend(v8, "layout");
    v11 = type metadata accessor for CRLUSDZLayout();
    swift_dynamicCastClassUnconditional(v10, v11, 0, 0, 0);
    v12 = sub_1006CF4E0(v5);

    if (v12)
    {
      objc_msgSend(v12, "visibleBounds");
      x = v51.origin.x;
      y = v51.origin.y;
      width = v51.size.width;
      height = v51.size.height;
      v52.origin.x = CGRectNull.origin.x;
      v52.origin.y = CGRectNull.origin.y;
      v52.size.width = CGRectNull.size.width;
      v52.size.height = CGRectNull.size.height;
      v17 = CGRectEqualToRect(v51, v52);
      v18 = *(void **)(v0 + 464);
      v19 = *(void **)(v0 + 440);
      v20 = *(_QWORD *)(v0 + 408);
      v21 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 416);
      v22 = *(_QWORD *)(v0 + 376);
      v23 = *(_QWORD *)(v0 + 360);
      if (v17)
      {
        v50 = *(_QWORD *)(v0 + 296);
        sub_100757E04(&_mh_execute_header, (uint64_t)"calculatePosterImageAndBoundingRect()", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZRep.swift", 81, 2, 3073, "Unable to calculate bounding rect of object from given pose values.", 67, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"calculatePosterImageAndBoundingRect()", 37, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZRep.swift", 81, 2u, 3073, (uint64_t)"Unable to calculate bounding rect of object from given pose values.", 67, 2u);

        sub_1004B84A4(v23, type metadata accessor for CRLAssetData);
        sub_1004CB800(v22, &qword_101400000);
        v21(v50, 1, 1, v20);
      }
      else
      {
        v34 = *(_QWORD *)(v0 + 296);
        objc_msgSend(*(id *)(v0 + 304), "naturalBounds");
        sub_100062790(x, y, width, height);
        v36 = v35;
        v38 = v37;
        v40 = v39;
        v42 = v41;

        sub_1004CB800(v22, &qword_101400000);
        v43 = (_QWORD *)(v34 + *(int *)(v20 + 48));
        sub_1004B84E0(v23, v34, type metadata accessor for CRLAssetData);
        *v43 = v36;
        v43[1] = v38;
        v43[2] = v40;
        v43[3] = v42;
        v21(v34, 0, 1, v20);
      }
    }
    else
    {
      v28 = *(void **)(v0 + 440);
      v29 = *(_QWORD *)(v0 + 408);
      v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 416);
      v31 = *(_QWORD *)(v0 + 376);
      v32 = *(_QWORD *)(v0 + 360);
      v33 = *(_QWORD *)(v0 + 296);

      sub_1004B84A4(v32, type metadata accessor for CRLAssetData);
      sub_1004CB800(v31, &qword_101400000);
      v30(v33, 1, 1, v29);
    }
  }
  else
  {
    v24 = *(void **)(v0 + 440);
    v25 = *(_QWORD *)(v0 + 408);
    v26 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 416);
    v27 = *(_QWORD *)(v0 + 296);
    sub_1004CB800(*(_QWORD *)(v0 + 376), &qword_101400000);

    v26(v27, 1, 1, v25);
  }
  v44 = *(_QWORD *)(v0 + 368);
  v46 = *(_QWORD *)(v0 + 352);
  v45 = *(_QWORD *)(v0 + 360);
  v48 = *(_QWORD *)(v0 + 320);
  v47 = *(_QWORD *)(v0 + 328);
  swift_task_dealloc(*(_QWORD *)(v0 + 376));
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009D35A4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(void **)(v0 + 440);
  v2 = *(_QWORD *)(v0 + 376);
  v4 = *(_QWORD *)(v0 + 360);
  v3 = *(_QWORD *)(v0 + 368);
  v5 = *(_QWORD *)(v0 + 352);
  v7 = *(_QWORD *)(v0 + 320);
  v6 = *(_QWORD *)(v0 + 328);
  swift_release(*(_QWORD *)(v0 + 384));

  sub_1004CB800(v2, &qword_101400000);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009D36A8()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  id v21;
  uint64_t v22;
  uint64_t (*v23)(__n128);
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  unint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  id v32;
  uint64_t v33;
  _UNKNOWN ****v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  _QWORD v48[3];

  v1 = v0;
  v2 = type metadata accessor for CRLUSDZAssetDataStruct(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v48[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CRLAssetData(0);
  *(_QWORD *)&v6 = __chkstk_darwin(v5).n128_u64[0];
  v8 = (char *)&v48[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend(v0, "info", v6);
  v10 = type metadata accessor for CRLUSDZItem(0);
  v11 = swift_dynamicCastClassUnconditional(v9, v10, 0, 0, 0);
  v12 = (*(uint64_t (**)(void))(**(_QWORD **)(v11 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData) + 408))();
  v14 = sub_1007776BC(v12, v13 & 1);
  v16 = v15;
  swift_unknownObjectRelease(v9);
  v17 = sub_100D0EF94(0, 1, 1, _swiftEmptyArrayStorage);
  v19 = v17[2];
  v18 = v17[3];
  if (v19 >= v18 >> 1)
    v17 = sub_100D0EF94((_QWORD *)(v18 > 1), v19 + 1, 1, v17);
  v17[2] = v19 + 1;
  v20 = &v17[2 * v19];
  v20[4] = v14;
  v20[5] = v16;
  v21 = objc_msgSend(v1, "info");
  v22 = *(_QWORD *)(swift_dynamicCastClassUnconditional(v21, v10, 0, 0, 0)
                  + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v23 = *(uint64_t (**)(__n128))(*(_QWORD *)v22 + 360);
  v24 = swift_retain(v22);
  v25 = v23(v24);
  v27 = v26;
  swift_unknownObjectRelease(v21);
  swift_release(v22);
  if (String.count.getter(v25, v27) < 1)
  {
    *(_QWORD *)&v28 = swift_bridgeObjectRelease().n128_u64[0];
  }
  else
  {
    v30 = v17[2];
    v29 = v17[3];
    if (v30 >= v29 >> 1)
      v17 = sub_100D0EF94((_QWORD *)(v29 > 1), v30 + 1, 1, v17);
    v17[2] = v30 + 1;
    v31 = &v17[2 * v30];
    v31[4] = v25;
    v31[5] = v27;
  }
  v32 = objc_msgSend(v1, "info", v28);
  v33 = swift_dynamicCastClassUnconditional(v32, v10, 0, 0, 0);
  v34 = *(_UNKNOWN *****)(v33 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*v34 == &off_10140F528)
    v35 = *(_QWORD *)(v33 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  else
    v35 = 0;
  swift_beginAccess(v35 + qword_101481450, v48, 32, 0);
  swift_retain(v34);
  v36 = sub_1004B804C((uint64_t *)&unk_1013E9BD0);
  CRRegister.wrappedValue.getter(v36);
  swift_endAccess(v48);
  swift_release(v34);
  sub_1004B8460((uint64_t)v4, (uint64_t)v8, type metadata accessor for CRLAssetData);
  sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLUSDZAssetDataStruct);
  swift_unknownObjectRelease(v32);
  v37 = &v8[*(int *)(v5 + 20)];
  v39 = *(_QWORD *)v37;
  v38 = *((_QWORD *)v37 + 1);
  swift_bridgeObjectRetain(v38);
  sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLAssetData);
  v41 = v17[2];
  v40 = v17[3];
  if (v41 >= v40 >> 1)
    v17 = sub_100D0EF94((_QWORD *)(v40 > 1), v41 + 1, 1, v17);
  v17[2] = v41 + 1;
  v42 = &v17[2 * v41];
  v42[4] = v39;
  v42[5] = v38;
  v48[0] = v17;
  v43 = sub_1004B804C((uint64_t *)&unk_1013E4970);
  v44 = sub_100500464();
  v45 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v43, v44);
  swift_bridgeObjectRelease();
  return v45;
}

uint64_t initializeBufferWithCopyOfBuffer for CRLUSDZRep.RenderingState(uint64_t a1, uint64_t a2)
{
  id v3;
  unsigned __int8 v4;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1009D3B34(*(id *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

double sub_1009D3B34(id a1, unsigned __int8 a2)
{
  int v2;
  id v3;
  double result;

  v2 = a2 >> 6;
  if (v2 == 2)
  {
LABEL_4:
    v3 = a1;
    return result;
  }
  if (v2 != 1)
  {
    if (a2 >> 6)
      return result;
    goto LABEL_4;
  }
  *(_QWORD *)&result = swift_retain(a1).n128_u64[0];
  return result;
}

double destroy for CRLUSDZRep.RenderingState(uint64_t a1)
{
  return sub_1009D3B68(*(id *)a1, *(_BYTE *)(a1 + 8));
}

double sub_1009D3B68(id a1, unsigned __int8 a2)
{
  int v2;
  double result;

  v2 = a2 >> 6;
  if (v2 == 2)
  {
LABEL_4:

    return result;
  }
  if (v2 != 1)
  {
    if (a2 >> 6)
      return result;
    goto LABEL_4;
  }
  *(_QWORD *)&result = swift_release(a1).n128_u64[0];
  return result;
}

uint64_t assignWithCopy for CRLUSDZRep.RenderingState(uint64_t a1, uint64_t a2)
{
  id v3;
  unsigned __int8 v4;
  void *v5;
  unsigned __int8 v6;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1009D3B34(*(id *)a2, v4);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_1009D3B68(v5, v6);
  return a1;
}

uint64_t assignWithTake for CRLUSDZRep.RenderingState(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  unsigned __int8 v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_1009D3B68(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLUSDZRep.RenderingState(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7D && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 125);
  v3 = ((*(unsigned __int8 *)(a1 + 8) >> 6) & 0xFFFFFF83 | (4 * ((*(unsigned __int8 *)(a1 + 8) >> 1) & 0x1F))) ^ 0x7F;
  if (v3 >= 0x7C)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for CRLUSDZRep.RenderingState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7C)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 125;
    if (a3 >= 0x7D)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0x7D)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_BYTE *)(result + 8) = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
    }
  }
  return result;
}

uint64_t sub_1009D3CC0(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 8) >> 6;
  if (v1 == 3)
    return (*(_DWORD *)a1 + 3);
  else
    return v1;
}

uint64_t sub_1009D3CDC(uint64_t result, unsigned int a2)
{
  if (a2 < 3)
  {
    *(_BYTE *)(result + 8) = *(_BYTE *)(result + 8) & 1 | ((_BYTE)a2 << 6);
  }
  else
  {
    *(_QWORD *)result = a2 - 3;
    *(_BYTE *)(result + 8) = -64;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLUSDZRep.RenderingState()
{
  return &type metadata for CRLUSDZRep.RenderingState;
}

uint64_t getEnumTagSinglePayload for CRLUSDZRep.RenderingStrategy(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  BOOL v7;
  unsigned int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
  {
    v6 = *a1;
    v7 = v6 >= 4;
    v8 = v6 - 4;
    if (!v7)
      v8 = -1;
    if (v8 + 1 >= 2)
      return v8;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 4;
    if (a2 + 4 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1009D3D68 + 4 * byte_100F1FB6E[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for CRLUSDZRep.RenderingStrategy(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 4;
  if (a3 + 4 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFC)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1009D3E10 + 4 * byte_100F1FB78[v5]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1009D3E44 + 4 * byte_100F1FB73[v5]))();
}

uint64_t sub_1009D3E44(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1009D3E4C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1009D3E54);
  return result;
}

uint64_t sub_1009D3E60(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1009D3E68);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1009D3E6C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1009D3E74(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1009D3E80(unsigned __int8 *a1)
{
  unsigned int v1;

  v1 = *a1;
  if (v1 >= 4)
    return v1 - 3;
  else
    return 0;
}

_BYTE *sub_1009D3E94(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 3;
  return result;
}

ValueMetadata *type metadata accessor for CRLUSDZRep.RenderingStrategy()
{
  return &type metadata for CRLUSDZRep.RenderingStrategy;
}

char *sub_1009D3EB4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  void *v8;
  id v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  void *v16;
  id v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  void *v35;
  id v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  int EnumCaseMultiPayload;
  uint64_t v42;
  void *v43;
  id v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v14 = *(char **)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = &v14[(v6 + 16) & ~(unint64_t)v6];
    swift_retain(v14);
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload(a2, a3))
    {
      case 0u:
        v8 = *(void **)a2;
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v9 = v8;
        v10 = *(int *)(sub_1004B804C(&qword_1013FFB78) + 48);
        v11 = &a1[v10];
        v12 = &a2[v10];
        v13 = type metadata accessor for UUID(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
        swift_storeEnumTagMultiPayload(a1, a3, 0);
        break;
      case 1u:
        v43 = *(void **)a2;
        *(_QWORD *)a1 = *(_QWORD *)a2;
        a1[8] = a2[8];
        v44 = v43;
        v45 = *(int *)(sub_1004B804C(&qword_1013FFB80) + 64);
        v46 = &a1[v45];
        v47 = &a2[v45];
        v48 = type metadata accessor for URL(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v46, v47, v48);
        swift_storeEnumTagMultiPayload(a1, a3, 1);
        break;
      case 2u:
        v16 = *(void **)a2;
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v17 = v16;
        v18 = (int *)sub_1004B804C(&qword_1013FFB88);
        v19 = v18[12];
        v20 = &a1[v19];
        v21 = &a2[v19];
        v22 = type metadata accessor for URL(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
        v23 = v18[16];
        v24 = *(_OWORD *)&a2[v23];
        *(_OWORD *)&a1[v23] = v24;
        v25 = v18[20];
        v26 = (uint64_t *)&a1[v25];
        v27 = (uint64_t *)&a2[v25];
        v28 = *v27;
        v29 = v27[1];
        v30 = v27[2];
        v31 = v27[3];
        v32 = v27[4];
        v33 = v27[5];
        v34 = v27[6];
        swift_unknownObjectRetain(v24);
        sub_100689CF4(v28, v29, v30, v31, v32, v33, v34);
        *v26 = v28;
        v26[1] = v29;
        v26[2] = v30;
        v26[3] = v31;
        v26[4] = v32;
        v26[5] = v33;
        v26[6] = v34;
        swift_storeEnumTagMultiPayload(a1, a3, 2);
        break;
      case 3u:
        v35 = *(void **)a2;
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v36 = v35;
        v37 = *(int *)(sub_1004B804C(&qword_1013FFB90) + 48);
        v38 = &a1[v37];
        v39 = &a2[v37];
        v40 = type metadata accessor for CRLUSDZRep.AssetLoadingState.LoadingError(0);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v39, v40);
        if (EnumCaseMultiPayload == 2)
        {
          v49 = *(_QWORD *)v39;
          swift_errorRetain(v49);
          *(_QWORD *)v38 = v49;
          swift_storeEnumTagMultiPayload(v38, v40, 2);
        }
        else if (EnumCaseMultiPayload == 1)
        {
          v50 = *(_QWORD *)v39;
          swift_errorRetain(v50);
          *(_QWORD *)v38 = v50;
          swift_storeEnumTagMultiPayload(v38, v40, 1);
        }
        else if (EnumCaseMultiPayload)
        {
          memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
        }
        else
        {
          v42 = type metadata accessor for UUID(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v38, v39, v42);
          swift_storeEnumTagMultiPayload(v38, v40, 0);
        }
        swift_storeEnumTagMultiPayload(a1, a3, 3);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

uint64_t type metadata accessor for CRLUSDZRep.AssetLoadingState.LoadingError(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1013FFCB0, (uint64_t)&nominal type descriptor for CRLUSDZRep.AssetLoadingState.LoadingError);
}

void sub_1009D41E4(id *a1, uint64_t a2)
{
  _QWORD *v3;
  uint64_t v4;
  int *v5;
  char *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  int EnumCaseMultiPayload;

  switch(swift_getEnumCaseMultiPayload(a1, a2))
  {
    case 0u:

      v3 = (id *)((char *)a1 + *(int *)(sub_1004B804C(&qword_1013FFB78) + 48));
      goto LABEL_8;
    case 1u:

      v3 = (id *)((char *)a1 + *(int *)(sub_1004B804C(&qword_1013FFB80) + 64));
      v4 = type metadata accessor for URL(0);
      goto LABEL_9;
    case 2u:

      v5 = (int *)sub_1004B804C(&qword_1013FFB88);
      v6 = (char *)a1 + v5[12];
      v7 = type metadata accessor for URL(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
      swift_unknownObjectRelease(*(id *)((char *)a1 + v5[16]));
      v8 = (uint64_t *)((char *)a1 + v5[20]);
      sub_100689EAC(*v8, v8[1], v8[2], v8[3], v8[4], v8[5], v8[6]);
      return;
    case 3u:

      v3 = (id *)((char *)a1 + *(int *)(sub_1004B804C(&qword_1013FFB90) + 48));
      v9 = type metadata accessor for CRLUSDZRep.AssetLoadingState.LoadingError(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v3, v9);
      if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
      {
        swift_errorRelease(*v3);
      }
      else if (!EnumCaseMultiPayload)
      {
LABEL_8:
        v4 = type metadata accessor for UUID(0);
LABEL_9:
        (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
      }
      return;
    default:
      return;
  }
}

char *sub_1009D4368(char *a1, char *a2, uint64_t a3)
{
  void *v6;
  id v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void *v21;
  id v22;
  int *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  void *v40;
  id v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  int EnumCaseMultiPayload;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  switch(swift_getEnumCaseMultiPayload(a2, a3))
  {
    case 0u:
      v6 = *(void **)a2;
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v7 = v6;
      v8 = *(int *)(sub_1004B804C(&qword_1013FFB78) + 48);
      v9 = &a1[v8];
      v10 = &a2[v8];
      v11 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      v12 = a1;
      v13 = a3;
      v14 = 0;
      goto LABEL_14;
    case 1u:
      v15 = *(void **)a2;
      *(_QWORD *)a1 = *(_QWORD *)a2;
      a1[8] = a2[8];
      v16 = v15;
      v17 = *(int *)(sub_1004B804C(&qword_1013FFB80) + 64);
      v18 = &a1[v17];
      v19 = &a2[v17];
      v20 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
      v12 = a1;
      v13 = a3;
      v14 = 1;
      goto LABEL_14;
    case 2u:
      v21 = *(void **)a2;
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v22 = v21;
      v23 = (int *)sub_1004B804C(&qword_1013FFB88);
      v24 = v23[12];
      v25 = &a1[v24];
      v26 = &a2[v24];
      v27 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
      v28 = v23[16];
      v29 = *(_OWORD *)&a2[v28];
      *(_OWORD *)&a1[v28] = v29;
      v30 = v23[20];
      v31 = (uint64_t *)&a1[v30];
      v32 = (uint64_t *)&a2[v30];
      v33 = *v32;
      v34 = v32[1];
      v35 = v32[2];
      v36 = v32[3];
      v37 = v32[4];
      v38 = v32[5];
      v39 = v32[6];
      swift_unknownObjectRetain(v29);
      sub_100689CF4(v33, v34, v35, v36, v37, v38, v39);
      *v31 = v33;
      v31[1] = v34;
      v31[2] = v35;
      v31[3] = v36;
      v31[4] = v37;
      v31[5] = v38;
      v31[6] = v39;
      v12 = a1;
      v13 = a3;
      v14 = 2;
      goto LABEL_14;
    case 3u:
      v40 = *(void **)a2;
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v41 = v40;
      v42 = *(int *)(sub_1004B804C(&qword_1013FFB90) + 48);
      v43 = &a1[v42];
      v44 = &a2[v42];
      v45 = type metadata accessor for CRLUSDZRep.AssetLoadingState.LoadingError(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v44, v45);
      if (EnumCaseMultiPayload == 2)
      {
        v48 = *(_QWORD *)v44;
        swift_errorRetain(v48);
        *(_QWORD *)v43 = v48;
        swift_storeEnumTagMultiPayload(v43, v45, 2);
      }
      else if (EnumCaseMultiPayload == 1)
      {
        v49 = *(_QWORD *)v44;
        swift_errorRetain(v49);
        *(_QWORD *)v43 = v49;
        swift_storeEnumTagMultiPayload(v43, v45, 1);
      }
      else if (EnumCaseMultiPayload)
      {
        memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
      }
      else
      {
        v47 = type metadata accessor for UUID(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v43, v44, v47);
        swift_storeEnumTagMultiPayload(v43, v45, 0);
      }
      v12 = a1;
      v13 = a3;
      v14 = 3;
LABEL_14:
      swift_storeEnumTagMultiPayload(v12, v13, v14);
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *sub_1009D4650(char *a1, char *a2, uint64_t a3)
{
  void *v6;
  id v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void *v21;
  id v22;
  int *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  void *v40;
  id v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  int EnumCaseMultiPayload;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  if (a1 != a2)
  {
    sub_1004B84A4((uint64_t)a1, type metadata accessor for CRLUSDZRep.AssetLoadingState);
    switch(swift_getEnumCaseMultiPayload(a2, a3))
    {
      case 0u:
        v6 = *(void **)a2;
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v7 = v6;
        v8 = *(int *)(sub_1004B804C(&qword_1013FFB78) + 48);
        v9 = &a1[v8];
        v10 = &a2[v8];
        v11 = type metadata accessor for UUID(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
        v12 = a1;
        v13 = a3;
        v14 = 0;
        goto LABEL_15;
      case 1u:
        v15 = *(void **)a2;
        *(_QWORD *)a1 = *(_QWORD *)a2;
        a1[8] = a2[8];
        v16 = v15;
        v17 = *(int *)(sub_1004B804C(&qword_1013FFB80) + 64);
        v18 = &a1[v17];
        v19 = &a2[v17];
        v20 = type metadata accessor for URL(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
        v12 = a1;
        v13 = a3;
        v14 = 1;
        goto LABEL_15;
      case 2u:
        v21 = *(void **)a2;
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v22 = v21;
        v23 = (int *)sub_1004B804C(&qword_1013FFB88);
        v24 = v23[12];
        v25 = &a1[v24];
        v26 = &a2[v24];
        v27 = type metadata accessor for URL(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
        v28 = v23[16];
        v29 = *(_OWORD *)&a2[v28];
        *(_OWORD *)&a1[v28] = v29;
        v30 = v23[20];
        v31 = (uint64_t *)&a1[v30];
        v32 = (uint64_t *)&a2[v30];
        v33 = *v32;
        v34 = v32[1];
        v35 = v32[2];
        v36 = v32[3];
        v37 = v32[4];
        v38 = v32[5];
        v39 = v32[6];
        swift_unknownObjectRetain(v29);
        sub_100689CF4(v33, v34, v35, v36, v37, v38, v39);
        *v31 = v33;
        v31[1] = v34;
        v31[2] = v35;
        v31[3] = v36;
        v31[4] = v37;
        v31[5] = v38;
        v31[6] = v39;
        v12 = a1;
        v13 = a3;
        v14 = 2;
        goto LABEL_15;
      case 3u:
        v40 = *(void **)a2;
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v41 = v40;
        v42 = *(int *)(sub_1004B804C(&qword_1013FFB90) + 48);
        v43 = &a1[v42];
        v44 = &a2[v42];
        v45 = type metadata accessor for CRLUSDZRep.AssetLoadingState.LoadingError(0);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v44, v45);
        if (EnumCaseMultiPayload == 2)
        {
          v48 = *(_QWORD *)v44;
          swift_errorRetain(v48);
          *(_QWORD *)v43 = v48;
          swift_storeEnumTagMultiPayload(v43, v45, 2);
        }
        else if (EnumCaseMultiPayload == 1)
        {
          v49 = *(_QWORD *)v44;
          swift_errorRetain(v49);
          *(_QWORD *)v43 = v49;
          swift_storeEnumTagMultiPayload(v43, v45, 1);
        }
        else if (EnumCaseMultiPayload)
        {
          memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
        }
        else
        {
          v47 = type metadata accessor for UUID(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v43, v44, v47);
          swift_storeEnumTagMultiPayload(v43, v45, 0);
        }
        v12 = a1;
        v13 = a3;
        v14 = 3;
LABEL_15:
        swift_storeEnumTagMultiPayload(v12, v13, v14);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

char *sub_1009D4950(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;

  switch(swift_getEnumCaseMultiPayload(a2, a3))
  {
    case 0u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v6 = *(int *)(sub_1004B804C(&qword_1013FFB78) + 48);
      v7 = &a1[v6];
      v8 = &a2[v6];
      v9 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
      v10 = a1;
      v11 = a3;
      v12 = 0;
      goto LABEL_10;
    case 1u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      a1[8] = a2[8];
      v13 = *(int *)(sub_1004B804C(&qword_1013FFB80) + 64);
      v14 = &a1[v13];
      v15 = &a2[v13];
      v16 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
      v10 = a1;
      v11 = a3;
      v12 = 1;
      goto LABEL_10;
    case 2u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v17 = (int *)sub_1004B804C(&qword_1013FFB88);
      v18 = v17[12];
      v19 = &a1[v18];
      v20 = &a2[v18];
      v21 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
      *(_OWORD *)&a1[v17[16]] = *(_OWORD *)&a2[v17[16]];
      v22 = v17[20];
      v23 = &a1[v22];
      v24 = &a2[v22];
      *((_QWORD *)v23 + 6) = *((_QWORD *)v24 + 6);
      v25 = *((_OWORD *)v24 + 2);
      v26 = *(_OWORD *)v24;
      *((_OWORD *)v23 + 1) = *((_OWORD *)v24 + 1);
      *((_OWORD *)v23 + 2) = v25;
      *(_OWORD *)v23 = v26;
      v10 = a1;
      v11 = a3;
      v12 = 2;
      goto LABEL_10;
    case 3u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v27 = *(int *)(sub_1004B804C(&qword_1013FFB90) + 48);
      v28 = &a1[v27];
      v29 = &a2[v27];
      v30 = type metadata accessor for CRLUSDZRep.AssetLoadingState.LoadingError(0);
      if (swift_getEnumCaseMultiPayload(v29, v30))
      {
        memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        v31 = type metadata accessor for UUID(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v28, v29, v31);
        swift_storeEnumTagMultiPayload(v28, v30, 0);
      }
      v10 = a1;
      v11 = a3;
      v12 = 3;
LABEL_10:
      swift_storeEnumTagMultiPayload(v10, v11, v12);
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *sub_1009D4B90(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;

  if (a1 != a2)
  {
    sub_1004B84A4((uint64_t)a1, type metadata accessor for CRLUSDZRep.AssetLoadingState);
    switch(swift_getEnumCaseMultiPayload(a2, a3))
    {
      case 0u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v6 = *(int *)(sub_1004B804C(&qword_1013FFB78) + 48);
        v7 = &a1[v6];
        v8 = &a2[v6];
        v9 = type metadata accessor for UUID(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
        v10 = a1;
        v11 = a3;
        v12 = 0;
        goto LABEL_11;
      case 1u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        a1[8] = a2[8];
        v13 = *(int *)(sub_1004B804C(&qword_1013FFB80) + 64);
        v14 = &a1[v13];
        v15 = &a2[v13];
        v16 = type metadata accessor for URL(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
        v10 = a1;
        v11 = a3;
        v12 = 1;
        goto LABEL_11;
      case 2u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v17 = (int *)sub_1004B804C(&qword_1013FFB88);
        v18 = v17[12];
        v19 = &a1[v18];
        v20 = &a2[v18];
        v21 = type metadata accessor for URL(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
        *(_OWORD *)&a1[v17[16]] = *(_OWORD *)&a2[v17[16]];
        v22 = v17[20];
        v23 = &a1[v22];
        v24 = &a2[v22];
        *((_QWORD *)v23 + 6) = *((_QWORD *)v24 + 6);
        v25 = *((_OWORD *)v24 + 2);
        v26 = *(_OWORD *)v24;
        *((_OWORD *)v23 + 1) = *((_OWORD *)v24 + 1);
        *((_OWORD *)v23 + 2) = v25;
        *(_OWORD *)v23 = v26;
        v10 = a1;
        v11 = a3;
        v12 = 2;
        goto LABEL_11;
      case 3u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v27 = *(int *)(sub_1004B804C(&qword_1013FFB90) + 48);
        v28 = &a1[v27];
        v29 = &a2[v27];
        v30 = type metadata accessor for CRLUSDZRep.AssetLoadingState.LoadingError(0);
        if (swift_getEnumCaseMultiPayload(v29, v30))
        {
          memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
        }
        else
        {
          v31 = type metadata accessor for UUID(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v28, v29, v31);
          swift_storeEnumTagMultiPayload(v28, v30, 0);
        }
        v10 = a1;
        v11 = a3;
        v12 = 3;
LABEL_11:
        swift_storeEnumTagMultiPayload(v10, v11, v12);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1009D4DE8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _BYTE v7[32];
  _QWORD v8[4];
  _BYTE v9[32];
  _BYTE v10[32];
  _BYTE v11[32];
  _QWORD v12[4];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout2(v11, (char *)&value witness table for Builtin.UnknownObject + 64, *(_QWORD *)(result - 8) + 64);
    v12[0] = v11;
    result = type metadata accessor for URL(319);
    if (v4 <= 0x3F)
    {
      v5 = *(_QWORD *)(result - 8) + 64;
      swift_getTupleTypeLayout3(v10, (char *)&value witness table for Builtin.UnknownObject + 64, &unk_100F1FBD0, v5);
      v12[1] = v10;
      v8[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
      v8[1] = v5;
      v8[2] = &unk_100F1FC98;
      v8[3] = &unk_100F1FCB0;
      swift_getTupleTypeLayout(v9, 0, 4, v8);
      v12[2] = v9;
      result = type metadata accessor for CRLUSDZRep.AssetLoadingState.LoadingError(319);
      if (v6 <= 0x3F)
      {
        swift_getTupleTypeLayout2(v7, (char *)&value witness table for Builtin.UnknownObject + 64, *(_QWORD *)(result - 8) + 64);
        v12[3] = v7;
        swift_initEnumMetadataMultiPayload(a1, 256, 4, v12);
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_1009D4F10(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain(v10);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      v11 = *a2;
      swift_errorRetain(v11);
      *a1 = v11;
      swift_storeEnumTagMultiPayload(a1, a3, 2);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v12 = *a2;
      swift_errorRetain(v12);
      *a1 = v12;
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v9 = type metadata accessor for UUID(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

uint64_t sub_1009D5018(_QWORD *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload(a1, a2);
  if ((_DWORD)result == 2 || (_DWORD)result == 1)
    return swift_errorRelease(*a1);
  if (!(_DWORD)result)
  {
    v4 = type metadata accessor for UUID(0);
    return (*(uint64_t (**)(_QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  return result;
}

_QWORD *sub_1009D5080(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 2)
  {
    v8 = *a2;
    swift_errorRetain(v8);
    *a1 = v8;
    swift_storeEnumTagMultiPayload(a1, a3, 2);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v9 = *a2;
    swift_errorRetain(v9);
    *a1 = v9;
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(_QWORD *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

uint64_t *sub_1009D5160(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_1004B84A4((uint64_t)a1, type metadata accessor for CRLUSDZRep.AssetLoadingState.LoadingError);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      v8 = *a2;
      swift_errorRetain(v8);
      *a1 = v8;
      swift_storeEnumTagMultiPayload(a1, a3, 2);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v9 = *a2;
      swift_errorRetain(v9);
      *a1 = v9;
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v7 = type metadata accessor for UUID(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

void *sub_1009D525C(void *a1, const void *a2, uint64_t a3)
{
  return sub_1009D5FC4(a1, a2, a3, type metadata accessor for CRLUSDZRep.AssetLoadingState.LoadingError);
}

uint64_t sub_1009D5268(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = "\b";
    v4[2] = "\b";
    swift_initEnumMetadataMultiPayload(a1, 256, 3, v4);
    return 0;
  }
  return result;
}

char *sub_1009D52D8(char *a1, char **a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  char *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t *v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char *v29;
  char *v30;
  uint64_t v31;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v18 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v18[(v6 + 16) & ~(unint64_t)v6];
    swift_retain(v18);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    switch(EnumCaseMultiPayload)
    {
      case 2:
        v19 = *a2;
        *(_QWORD *)a1 = *a2;
        v20 = v19;
        v21 = *(int *)(sub_1004B804C(&qword_1013FFCE8) + 48);
        v22 = &a1[v21];
        v23 = (uint64_t *)((char *)a2 + v21);
        v24 = type metadata accessor for CRLUSDZRep.PosterLoadingState.LoadingError(0);
        v25 = swift_getEnumCaseMultiPayload(v23, v24);
        if (v25 == 1)
        {
          v31 = *v23;
          swift_errorRetain(v31);
          *(_QWORD *)v22 = v31;
          swift_storeEnumTagMultiPayload(v22, v24, 1);
        }
        else if (v25)
        {
          memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
        }
        else
        {
          v26 = type metadata accessor for UUID(0);
          (*(void (**)(char *, uint64_t *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v22, v23, v26);
          swift_storeEnumTagMultiPayload(v22, v24, 0);
        }
        v15 = a1;
        v16 = a3;
        v17 = 2;
        goto LABEL_15;
      case 1:
        v27 = *a2;
        v28 = a2[1];
        *(_QWORD *)a1 = v27;
        *((_QWORD *)a1 + 1) = v28;
        v29 = v27;
        v30 = v28;
        v15 = a1;
        v16 = a3;
        v17 = 1;
        goto LABEL_15;
      case 0:
        v9 = *a2;
        *(_QWORD *)a1 = *a2;
        v10 = v9;
        v11 = *(int *)(sub_1004B804C(&qword_1013FFB78) + 48);
        v12 = &a1[v11];
        v13 = (char *)a2 + v11;
        v14 = type metadata accessor for UUID(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
        v15 = a1;
        v16 = a3;
        v17 = 0;
LABEL_15:
        swift_storeEnumTagMultiPayload(v15, v16, v17);
        return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t type metadata accessor for CRLUSDZRep.PosterLoadingState.LoadingError(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1013FFE08, (uint64_t)&nominal type descriptor for CRLUSDZRep.PosterLoadingState.LoadingError);
}

void sub_1009D54BC(id *a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  _QWORD *v4;
  uint64_t v5;
  int v6;
  uint64_t v7;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1, a2);
  switch(EnumCaseMultiPayload)
  {
    case 2:

      v4 = (id *)((char *)a1 + *(int *)(sub_1004B804C(&qword_1013FFCE8) + 48));
      v5 = type metadata accessor for CRLUSDZRep.PosterLoadingState.LoadingError(0);
      v6 = swift_getEnumCaseMultiPayload(v4, v5);
      if (v6 == 1)
      {
        swift_errorRelease(*v4);
      }
      else if (!v6)
      {
        goto LABEL_7;
      }
      break;
    case 1:

      break;
    case 0:

      v4 = (id *)((char *)a1 + *(int *)(sub_1004B804C(&qword_1013FFB78) + 48));
LABEL_7:
      v7 = type metadata accessor for UUID(0);
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v4, v7);
      break;
  }
}

void **sub_1009D5598(void **a1, void **a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void **v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  uint64_t v28;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v16 = *a2;
      *a1 = *a2;
      v17 = v16;
      v18 = *(int *)(sub_1004B804C(&qword_1013FFCE8) + 48);
      v19 = (void **)((char *)a1 + v18);
      v20 = (uint64_t *)((char *)a2 + v18);
      v21 = type metadata accessor for CRLUSDZRep.PosterLoadingState.LoadingError(0);
      v22 = swift_getEnumCaseMultiPayload(v20, v21);
      if (v22 == 1)
      {
        v28 = *v20;
        swift_errorRetain(v28);
        *v19 = v28;
        swift_storeEnumTagMultiPayload(v19, v21, 1);
      }
      else if (v22)
      {
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        v23 = type metadata accessor for UUID(0);
        (*(void (**)(_QWORD *, uint64_t *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v19, v20, v23);
        swift_storeEnumTagMultiPayload(v19, v21, 0);
      }
      v13 = a1;
      v14 = a3;
      v15 = 2;
      goto LABEL_13;
    case 1:
      v24 = *a2;
      v25 = a2[1];
      *a1 = v24;
      a1[1] = v25;
      v26 = v24;
      v27 = v25;
      v13 = a1;
      v14 = a3;
      v15 = 1;
      goto LABEL_13;
    case 0:
      v7 = *a2;
      *a1 = *a2;
      v8 = v7;
      v9 = *(int *)(sub_1004B804C(&qword_1013FFB78) + 48);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
      v13 = a1;
      v14 = a3;
      v15 = 0;
LABEL_13:
      swift_storeEnumTagMultiPayload(v13, v14, v15);
      return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

void **sub_1009D5740(void **a1, void **a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void **v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  uint64_t v28;

  if (a1 != a2)
  {
    sub_1004B84A4((uint64_t)a1, type metadata accessor for CRLUSDZRep.PosterLoadingState);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    switch(EnumCaseMultiPayload)
    {
      case 2:
        v16 = *a2;
        *a1 = *a2;
        v17 = v16;
        v18 = *(int *)(sub_1004B804C(&qword_1013FFCE8) + 48);
        v19 = (void **)((char *)a1 + v18);
        v20 = (uint64_t *)((char *)a2 + v18);
        v21 = type metadata accessor for CRLUSDZRep.PosterLoadingState.LoadingError(0);
        v22 = swift_getEnumCaseMultiPayload(v20, v21);
        if (v22 == 1)
        {
          v28 = *v20;
          swift_errorRetain(v28);
          *v19 = v28;
          swift_storeEnumTagMultiPayload(v19, v21, 1);
        }
        else if (v22)
        {
          memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
        }
        else
        {
          v23 = type metadata accessor for UUID(0);
          (*(void (**)(_QWORD *, uint64_t *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v19, v20, v23);
          swift_storeEnumTagMultiPayload(v19, v21, 0);
        }
        v13 = a1;
        v14 = a3;
        v15 = 2;
        goto LABEL_14;
      case 1:
        v24 = *a2;
        *a1 = *a2;
        v25 = a2[1];
        a1[1] = v25;
        v26 = v24;
        v27 = v25;
        v13 = a1;
        v14 = a3;
        v15 = 1;
        goto LABEL_14;
      case 0:
        v7 = *a2;
        *a1 = *a2;
        v8 = v7;
        v9 = *(int *)(sub_1004B804C(&qword_1013FFB78) + 48);
        v10 = (char *)a1 + v9;
        v11 = (char *)a2 + v9;
        v12 = type metadata accessor for UUID(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
        v13 = a1;
        v14 = a3;
        v15 = 0;
LABEL_14:
        swift_storeEnumTagMultiPayload(v13, v14, v15);
        return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_1009D5908(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 2)
  {
    *a1 = *a2;
    v14 = *(int *)(sub_1004B804C(&qword_1013FFCE8) + 48);
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    v17 = type metadata accessor for CRLUSDZRep.PosterLoadingState.LoadingError(0);
    if (swift_getEnumCaseMultiPayload(v16, v17))
    {
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      v18 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v15, v16, v18);
      swift_storeEnumTagMultiPayload(v15, v17, 0);
    }
    v11 = a1;
    v12 = a3;
    v13 = 2;
    goto LABEL_9;
  }
  if (!EnumCaseMultiPayload)
  {
    *a1 = *a2;
    v7 = *(int *)(sub_1004B804C(&qword_1013FFB78) + 48);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for UUID(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    v11 = a1;
    v12 = a3;
    v13 = 0;
LABEL_9:
    swift_storeEnumTagMultiPayload(v11, v12, v13);
    return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_QWORD *sub_1009D5A54(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  if (a1 != a2)
  {
    sub_1004B84A4((uint64_t)a1, type metadata accessor for CRLUSDZRep.PosterLoadingState);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      v14 = *(int *)(sub_1004B804C(&qword_1013FFCE8) + 48);
      v15 = (char *)a1 + v14;
      v16 = (char *)a2 + v14;
      v17 = type metadata accessor for CRLUSDZRep.PosterLoadingState.LoadingError(0);
      if (swift_getEnumCaseMultiPayload(v16, v17))
      {
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        v18 = type metadata accessor for UUID(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v15, v16, v18);
        swift_storeEnumTagMultiPayload(v15, v17, 0);
      }
      v11 = a1;
      v12 = a3;
      v13 = 2;
      goto LABEL_10;
    }
    if (!EnumCaseMultiPayload)
    {
      *a1 = *a2;
      v7 = *(int *)(sub_1004B804C(&qword_1013FFB78) + 48);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
      v11 = a1;
      v12 = a3;
      v13 = 0;
LABEL_10:
      swift_storeEnumTagMultiPayload(v11, v12, v13);
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1009D5BB8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _BYTE v5[32];
  _BYTE v6[32];
  _QWORD v7[3];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout2(v6, (char *)&value witness table for Builtin.UnknownObject + 64, *(_QWORD *)(result - 8) + 64);
    v7[0] = v6;
    v7[1] = &unk_100F1FC98;
    result = type metadata accessor for CRLUSDZRep.PosterLoadingState.LoadingError(319);
    if (v4 <= 0x3F)
    {
      swift_getTupleTypeLayout2(v5, (char *)&value witness table for Builtin.UnknownObject + 64, *(_QWORD *)(result - 8) + 64);
      v7[2] = v5;
      swift_initEnumMetadataMultiPayload(a1, 256, 3, v7);
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1009D5C74(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain(v10);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      v11 = *a2;
      swift_errorRetain(v11);
      *a1 = v11;
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v9 = type metadata accessor for UUID(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

uint64_t sub_1009D5D50(_QWORD *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload(a1, a2);
  if ((_DWORD)result == 1)
    return swift_errorRelease(*a1);
  if (!(_DWORD)result)
  {
    v4 = type metadata accessor for UUID(0);
    return (*(uint64_t (**)(_QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  return result;
}

_QWORD *sub_1009D5DB0(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 1)
  {
    v8 = *a2;
    swift_errorRetain(v8);
    *a1 = v8;
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(_QWORD *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

uint64_t *sub_1009D5E64(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_1004B84A4((uint64_t)a1, type metadata accessor for CRLUSDZRep.PosterLoadingState.LoadingError);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      v8 = *a2;
      swift_errorRetain(v8);
      *a1 = v8;
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v7 = type metadata accessor for UUID(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

void *sub_1009D5F30(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload(a2, a3))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = type metadata accessor for UUID(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

void *sub_1009D5FB8(void *a1, const void *a2, uint64_t a3)
{
  return sub_1009D5FC4(a1, a2, a3, type metadata accessor for CRLUSDZRep.PosterLoadingState.LoadingError);
}

void *sub_1009D5FC4(void *a1, const void *a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v7;

  if (a1 != a2)
  {
    sub_1004B84A4((uint64_t)a1, a4);
    if (swift_getEnumCaseMultiPayload(a2, a3))
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v7 = type metadata accessor for UUID(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

uint64_t sub_1009D6060(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = "\b";
    swift_initEnumMetadataMultiPayload(a1, 256, 2, v4);
    return 0;
  }
  return result;
}

void sub_1009D60CC()
{
  uint64_t v1;
  uint64_t v2;

  v1 = type metadata accessor for UUID(0);
  __chkstk_darwin(v1);
  v2 = type metadata accessor for CRLUSDZRep.AssetLoadingState(0);
  __chkstk_darwin(v2);
  __asm { BR              X11 }
}

uint64_t sub_1009D6190()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int EnumCaseMultiPayload;

  v4 = v0 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_assetLoadingState;
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_assetLoadingState, v3 - 104, 0, 0);
  sub_1004B8460(v4, v1, type metadata accessor for CRLUSDZRep.AssetLoadingState);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v1, v2);
  return ((uint64_t (*)())((char *)sub_1009D6238 + 4 * word_100F1FBA6[EnumCaseMultiPayload]))();
}

uint64_t sub_1009D6238()
{
  uint64_t v0;
  uint64_t v1;
  void **v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  Swift::String v9;
  char *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  void *v28;
  void *v29;
  __n128 v30;
  void (*v31)(uint64_t, uint64_t, __n128);
  Swift::String v32;
  Swift::String v33;
  uint64_t v34;

  v7 = (char *)*v2;
  v8 = (char *)v2 + *(int *)(sub_1004B804C(&qword_1013FFB78) + 48);
  *(_QWORD *)(v6 - 120) = v3;
  *(_QWORD *)(v6 - 112) = v5;
  v9._countAndFlagsBits = 3825967;
  v9._object = (void *)0xE300000000000000;
  String.append(_:)(v9);
  v10 = &v7[OBJC_IVAR____TtC8Freeform8CRLAsset_storage];
  v11 = v7;
  v12 = *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 24];
  v13 = *((_QWORD *)v10 + 4);
  sub_1004BB5A4(v10, v12);
  v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 24))(v12, v13);
  v15 = UUID.uuidString.getter(v14);
  v17 = v16;
  v18 = String.index(_:offsetBy:)(15, 8, v15, v16);
  v19 = String.subscript.getter(15, v18, v15, v17);
  v21 = v20;
  v23 = v22;
  v25 = v24;
  v26 = swift_bridgeObjectRelease();
  v27 = static String._fromSubstring(_:)(v19, v21, v23, v25, v26);
  v29 = v28;
  v30 = swift_bridgeObjectRelease();
  v31 = *(void (**)(uint64_t, uint64_t, __n128))(v4 + 8);
  v31(v1, v0, v30);
  v32._countAndFlagsBits = v27;
  v32._object = v29;
  String.append(_:)(v32);
  swift_bridgeObjectRelease();
  v33._countAndFlagsBits = 7103535;
  v33._object = (void *)0xE300000000000000;
  String.append(_:)(v33);

  v34 = *(_QWORD *)(v6 - 120);
  ((void (*)(char *, uint64_t))v31)(v8, v0);
  return v34;
}

void sub_1009D69C8()
{
  uint64_t v0;

  sub_1009BF03C(*(_QWORD *)v0, *(_BYTE *)(v0 + 8));
}

uint64_t *sub_1009D69D4(uint64_t *a1)
{
  sub_100689CF4(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6]);
  return a1;
}

double sub_1009D6A08(void *a1, void *a2, unsigned int a3)
{
  int v3;
  id v4;
  double result;
  unsigned __int8 v7;
  id v8;

  v3 = (a3 >> 4) & 3;
  if (v3 == 2)
  {
LABEL_4:
    v4 = a1;
    return result;
  }
  if (v3 != 1)
  {
    if (v3)
      return result;
    goto LABEL_4;
  }
  v7 = a3 & 0xCF;
  v8 = a1;
  return sub_1009D3B34(a2, v7);
}

double sub_1009D6A54(void *a1, void *a2, unsigned int a3)
{
  int v3;
  double result;
  unsigned __int8 v6;

  v3 = (a3 >> 4) & 3;
  if (v3 == 2)
  {
LABEL_4:

    return result;
  }
  if (v3 != 1)
  {
    if (v3)
      return result;
    goto LABEL_4;
  }
  v6 = a3 & 0xCF;

  return sub_1009D3B68(a2, v6);
}

uint64_t sub_1009D6AA0(uint64_t a1, id a2, uint64_t a3, char a4)
{
  uint64_t v6;
  unsigned int v7;
  BOOL v8;
  void *v9;
  void *v10;
  id v11;
  id v12;

  if ((a4 & 0xC0) != 0x40)
    goto LABEL_8;
  v6 = a3;
  v7 = *(unsigned __int8 *)(a3 + 48);
  v8 = (v7 & 0x30) == 0x20 && *(_QWORD *)(a3 + 16) == a1;
  if (v8
    && (v10 = *(void **)(a3 + 32),
        v9 = *(void **)(a3 + 40),
        swift_unknownObjectRetain(a1),
        v11 = objc_msgSend(v10, "layer", sub_1009D6A08(v10, v9, v7)),
        sub_1009D6A54(v10, v9, v7),
        swift_unknownObjectRelease(a1),
        v11,
        v11 == a2))
  {
    swift_retain(v6);
  }
  else
  {
LABEL_8:
    v12 = objc_msgSend(objc_allocWithZone((Class)CRLCanvasRenderable), "initWithCALayer:", a2);
    v6 = swift_allocObject(&unk_10128EB48, 49, 7);
    *(_QWORD *)(v6 + 16) = a1;
    *(_QWORD *)(v6 + 24) = &off_1012756C0;
    *(_QWORD *)(v6 + 32) = v12;
    *(_QWORD *)(v6 + 40) = 0;
    *(_BYTE *)(v6 + 48) = 32;
    swift_unknownObjectRetain(a1);
  }
  return v6;
}

uint64_t sub_1009D6BD0(uint64_t a1, id a2, uint64_t a3, char a4)
{
  uint64_t v6;
  unsigned int v7;
  BOOL v8;
  void *v9;
  void *v10;
  id v11;
  id v12;

  if ((a4 & 0xC0) != 0x40)
    goto LABEL_8;
  v6 = a3;
  v7 = *(unsigned __int8 *)(a3 + 48);
  v8 = (v7 & 0x30) == 0x20 && *(_QWORD *)(a3 + 16) == a1;
  if (v8
    && (v10 = *(void **)(a3 + 32),
        v9 = *(void **)(a3 + 40),
        swift_unknownObjectRetain(a1),
        v11 = objc_msgSend(v10, "layer", sub_1009D6A08(v10, v9, v7)),
        sub_1009D6A54(v10, v9, v7),
        swift_unknownObjectRelease(a1),
        v11,
        v11 == a2))
  {
    swift_retain(v6);
  }
  else
  {
LABEL_8:
    v12 = objc_msgSend(objc_allocWithZone((Class)CRLCanvasRenderable), "initWithCALayer:", a2);
    v6 = swift_allocObject(&unk_10128EB48, 49, 7);
    *(_QWORD *)(v6 + 16) = a1;
    *(_QWORD *)(v6 + 24) = &off_101275C60;
    *(_QWORD *)(v6 + 32) = v12;
    *(_QWORD *)(v6 + 40) = 0;
    *(_BYTE *)(v6 + 48) = 32;
    swift_unknownObjectRetain(a1);
  }
  return v6;
}

uint64_t sub_1009D6D00(uint64_t a1, void *a2, uint64_t a3, unsigned __int8 a4)
{
  uint64_t v8;
  void *v9;
  unsigned int v10;
  int v11;
  id v12;
  char v13;
  void *v14;
  char v15;
  uint64_t v16;
  id v17;

  if ((a4 & 0xC0) != 0x40)
    goto LABEL_8;
  v8 = *(_QWORD *)(a3 + 16);
  v9 = *(void **)(a3 + 32);
  v10 = *(unsigned __int8 *)(a3 + 48);
  v11 = (v10 >> 4) & 3;
  if (v11)
  {
    if (v11 != 1)
      goto LABEL_8;
    sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
    v12 = v9;
    v13 = static NSObject.== infix(_:_:)(a2, v12);

    if ((v13 & 1) == 0)
      goto LABEL_8;
  }
  else
  {
    v14 = *(void **)(a3 + 40);
    sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
    v15 = static NSObject.== infix(_:_:)(a2, v9);
    sub_1009D6A54(v9, v14, v10);
    if ((v15 & 1) == 0)
    {
LABEL_8:
      v16 = swift_allocObject(&unk_10128EB48, 49, 7);
      *(_QWORD *)(v16 + 16) = a1;
      *(_QWORD *)(v16 + 24) = &off_1012A3DB0;
      *(_QWORD *)(v16 + 32) = a2;
      *(_QWORD *)(v16 + 40) = a3;
      *(_BYTE *)(v16 + 48) = a4 | 0x10;
      swift_retain(a1);
      v17 = a2;
      goto LABEL_9;
    }
  }
  v16 = a3;
  if (v8 != a1)
    goto LABEL_8;
LABEL_9:
  sub_1009D3B34((id)a3, a4);
  return v16;
}

id sub_1009D6E5C(uint64_t a1, void *a2, uint64_t a3)
{
  void *v6;
  id v7;
  objc_class *v8;
  id v9;
  id v10;
  void *v11;
  char *v12;
  id v13;
  objc_super v15;
  __int128 v16;
  uint64_t ObjectType;
  _UNKNOWN **v18;

  v6 = *(void **)(a3 + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_playPauseKnob);
  if (!v6)
  {
LABEL_5:
    v11 = *(void **)(a3 + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_rotationKnob);
    if (v11)
    {
      sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
      v7 = v11;
      if ((static NSObject.== infix(_:_:)(a1, v7) & 1) != 0)
      {
        v12 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLUSDZRotationKnobTracker());
        v13 = a2;
        v10 = sub_1009D7650(v13, (uint64_t)v7, v12);

        goto LABEL_8;
      }

    }
    return 0;
  }
  sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
  v7 = v6;
  if ((static NSObject.== infix(_:_:)(a1, v7) & 1) == 0)
  {

    goto LABEL_5;
  }
  v8 = (objc_class *)type metadata accessor for CRLUSDZPlayPauseKnobTracker();
  v9 = objc_allocWithZone(v8);
  ObjectType = swift_getObjectType(a2);
  v18 = &off_10128E8D8;
  *(_QWORD *)&v16 = a2;
  sub_1004DB728(&v16, (uint64_t)v9 + OBJC_IVAR____TtC8Freeform27CRLUSDZPlayPauseKnobTracker_delegate);
  v15.receiver = v9;
  v15.super_class = v8;
  v10 = objc_msgSendSuper2(&v15, "initWithRep:knob:", a2, v7);
LABEL_8:

  return v10;
}

void sub_1009D6FD8(void *a1)
{
  char *v1;
  char *v2;
  void *v4;
  uint64_t v5;
  uint64_t inited;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24[112];
  char v25[24];

  v2 = v1;
  if (qword_1013DD7E8 != -1)
    swift_once(&qword_1013DD7E8, sub_100A04074);
  swift_beginAccess(&static OS_os_log.crlThreeDimensionalObjects, v25, 0, 0);
  v4 = (void *)static OS_os_log.crlThreeDimensionalObjects;
  v5 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v5, v24);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  v7 = v4;
  v8 = objc_msgSend(v2, "debugDescription");
  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v11 = v10;

  *(_QWORD *)(inited + 56) = &type metadata for String;
  v12 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v12;
  *(_QWORD *)(inited + 32) = v9;
  *(_QWORD *)(inited + 40) = v11;
  v13 = objc_msgSend(a1, "description");
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v16 = v15;

  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v12;
  *(_QWORD *)(inited + 72) = v14;
  *(_QWORD *)(inited + 80) = v16;
  v17 = static os_log_type_t.debug.getter();
  sub_100A06EBC((uint64_t)v7, &_mh_execute_header, v17, "(USDZRep) [%{public}@] begin rotation (%@)", 42, 2, inited);
  swift_setDeallocating(inited);
  v18 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 2, v18);

  v19 = objc_msgSend(v2, "layout");
  v20 = type metadata accessor for CRLUSDZLayout();
  swift_dynamicCastClassUnconditional(v19, v20, 0, 0, 0);
  sub_1006D0768();

  v21 = *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_knobController];
  v22 = *(unsigned __int8 *)(v21 + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_visibilityState);
  if ((v22 | 4) == 4)
  {
    v23 = *(_QWORD *)(v21 + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_playPauseKnob);
    if (!v23 || *(_BYTE *)(v23 + OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_isPlaying) != 1)
      __asm { BR              X10 }
    sub_100BD59F8();
    sub_1009CA490(1);
  }
}

void sub_1009D72B4(uint64_t a1)
{
  char *v1;
  char *v2;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;

  v2 = v1;
  v4 = objc_msgSend(v2, "layout");
  v5 = type metadata accessor for CRLUSDZLayout();
  v6 = swift_dynamicCastClassUnconditional(v4, v5, 0, 0, 0)
     + OBJC_IVAR____TtC8Freeform13CRLUSDZLayout_orientationSource;
  if ((*(_BYTE *)(v6 + 16) & 1) != 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"dynamicPoseChangeDidUpdateToValue(_:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZLayout.swift", 84, 2, 323, "Unexpected dynamic pose change.", 31, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"dynamicPoseChangeDidUpdateToValue(_:)", 37, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZLayout.swift", 84, 2u, 323, (uint64_t)"Unexpected dynamic pose change.", 31, 2u);
  }
  else
  {
    v7 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_currentOrientationForRotateSession + 8);
    *(_QWORD *)v6 = *(_QWORD *)(a1
                              + OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_currentOrientationForRotateSession);
    *(_QWORD *)(v6 + 8) = v7;
    *(_BYTE *)(v6 + 16) = 0;
    v8 = sub_1006CF414();
    if (v8)
    {
      v9 = v8;
      objc_msgSend(v8, "processChangedProperty:", 50);

      v4 = v9;
    }
  }

  v10 = *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_knobController];
  if ((*(unsigned __int8 *)(v10 + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_visibilityState) | 4) != 4)
  {
    sub_100BD5AEC(1);
    v11 = *(_QWORD *)(v10 + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_playPauseKnob);
    if (v11)
    {
      if (*(_BYTE *)(v11 + OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_isPlaying) == 1)
        sub_1009CA620();
    }
  }
  v12 = objc_msgSend(v2, "interactiveCanvasController");
  objc_msgSend(v12, "layoutIfNeeded");

}

void sub_1009D74A8(char a1)
{
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v3;

  if ((a1 & 1) != 0)
  {
    v2 = &v1[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_animationIsPaused];
    if (v1[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_animationIsPaused] == 1)
      sub_1009C9A70();
    else
      sub_1009C93E4();
    v3 = OBJC_IVAR____TtC8Freeform10CRLUSDZRep_waitingToHideMiniFormatter;
    if ((v1[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_waitingToHideMiniFormatter] & 1) == 0)
    {
      objc_msgSend(v1, "performSelector:withObject:afterDelay:", "hideMiniFormatterIfNecessary", 0, 3.25);
      v1[v3] = 1;
    }
    goto LABEL_9;
  }
  sub_1009C9CE4();
  v1[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_animationIsPaused] = 1;
  v2 = &v1[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_waitingToHideMiniFormatter];
  if (v1[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_waitingToHideMiniFormatter] == 1)
  {
    objc_msgSend((id)objc_opt_self(NSObject), "cancelPreviousPerformRequestsWithTarget:selector:object:", v1, "hideMiniFormatterIfNecessary", 0);
LABEL_9:
    *v2 = 0;
  }
  sub_100BD59F8();
}

uint64_t sub_1009D759C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_knobController);
  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_playPauseKnob);
  if (!v2 || *(_BYTE *)(v2 + OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_isPlaying) != 1)
    return 0;
  if ((*(unsigned __int8 *)(v1 + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_visibilityState) | 4) == 4)
  {
    v3 = 1;
    sub_100BD59F8();
    sub_1009CA490(1);
  }
  else
  {
    sub_100BD5AEC(0);
    sub_1009CA620();
    return 1;
  }
  return v3;
}

