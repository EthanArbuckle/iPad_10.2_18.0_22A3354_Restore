void sub_1001B0118(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

id sub_1001B0148(unint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  NSObject *v19;
  void *v20;
  void *v21;
  void *v22;
  uint8_t buf[4];
  unsigned int v24;
  __int16 v25;
  const char *v26;
  __int16 v27;
  const char *v28;
  __int16 v29;
  int v30;
  __int16 v31;
  int v32;
  __int16 v33;
  unsigned int v34;

  v3 = a2;
  if (!v3)
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101240C88);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E066FC();
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101240CA8);
    v4 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)v4, OS_LOG_TYPE_ERROR))
    {
      objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
      sub_100DFF474();
    }

    v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "UTF32Char CRLWPComposedCharacterAtIndexForString(NSUInteger, NSString *__strong)"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPUtilities.mm"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v5, v6, 1426, 0, "invalid nil value for '%{public}s'", "str");

  }
  v7 = objc_msgSend(v3, "length");
  if ((unint64_t)v7 <= a1)
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101240CC8);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E0667C();
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101240CE8);
    v12 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)v12, OS_LOG_TYPE_ERROR))
    {
      objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
      sub_100DFF474();
    }

    v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "UTF32Char CRLWPComposedCharacterAtIndexForString(NSUInteger, NSString *__strong)"));
    v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPUtilities.mm"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v13, v14, 1428, 0, "index out of bounds");

    v8 = 0;
  }
  else
  {
    v8 = objc_msgSend(v3, "characterAtIndex:", a1);
    if (((unsigned __int16)v8 & 0xFC00) == 0xDC00)
    {
      +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101240D08);
      if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
        sub_100E065FC();
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101240D28);
      v9 = off_1013D9070;
      if (os_log_type_enabled((os_log_t)v9, OS_LOG_TYPE_ERROR))
      {
        objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
        sub_100DFF474();
      }

      v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "UTF32Char CRLWPComposedCharacterAtIndexForString(NSUInteger, NSString *__strong)"));
      v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPUtilities.mm"));
      +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v10, v11, 1432, 0, "index inside surrogate pair");

    }
    else if (a1 + 1 < (unint64_t)v7 && ((unsigned __int16)v8 & 0xFC00) == 0xD800)
    {
      v16 = objc_msgSend(v3, "characterAtIndex:");
      v17 = v16;
      if (v16 >> 10 == 55)
      {
        v8 = (id)(v16 + ((_DWORD)v8 << 10) - 56613888);
      }
      else
      {
        v18 = +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
        if (qword_10147E370 != -1)
          dispatch_once(&qword_10147E370, &stru_101240D48);
        v19 = off_1013D9070;
        if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 67110402;
          v24 = v18;
          v25 = 2082;
          v26 = "UTF32Char CRLWPComposedCharacterAtIndexForString(NSUInteger, NSString *__strong)";
          v27 = 2082;
          v28 = "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPUtilities.mm";
          v29 = 1024;
          v30 = 1436;
          v31 = 1024;
          v32 = (int)v8;
          v33 = 1024;
          v34 = v17;
          _os_log_error_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d invalid surrogate pair: %x:%x", buf, 0x2Eu);
        }
        if (qword_10147E370 != -1)
          dispatch_once(&qword_10147E370, &stru_101240D68);
        v20 = off_1013D9070;
        if (os_log_type_enabled((os_log_t)v20, OS_LOG_TYPE_ERROR))
        {
          objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
          sub_100DFF474();
        }

        v21 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "UTF32Char CRLWPComposedCharacterAtIndexForString(NSUInteger, NSString *__strong)"));
        v22 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPUtilities.mm"));
        +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v21, v22, 1436, 0, "invalid surrogate pair: %x:%x", v8, v17);

      }
    }
  }

  return v8;
}

void sub_1001B074C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001B080C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001B083C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001B086C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001B089C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001B08CC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001B08FC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001B092C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001B095C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

char *sub_1001B098C(char *a1, uint64_t a2, void *a3)
{
  id v5;
  void *v6;
  char *v7;
  void *v9;
  void *v10;
  void *v11;
  char *v12;
  void *v13;
  char *v14;

  v5 = a3;
  v6 = v5;
  v7 = &a1[a2];
  if (a1 == (char *)0x7FFFFFFFFFFFFFFFLL && a2 == 0)
  {
    v14 = a1;
  }
  else
  {
    if (!v5)
    {
      +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101240D88);
      if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
        sub_100E06788();
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101240DA8);
      v9 = off_1013D9070;
      if (os_log_type_enabled((os_log_t)v9, OS_LOG_TYPE_ERROR))
      {
        objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
        sub_100DFF474();
      }

      v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "NSRange CRLWPRangeByExtendingRangeToWhitespaceForTextSource(NSRange, __strong id<CRLWPTextSource>)"));
      v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPUtilities.mm"));
      +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v10, v11, 1451, 0, "invalid nil value for '%{public}s'", "textSource");

    }
    v12 = (char *)objc_msgSend(v6, "length");
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "string"));
    do
    {
      v14 = a1;
      if (!a1)
        break;
      --a1;
    }
    while ((sub_1001AE368((uint64_t)objc_msgSend(v13, "characterAtIndex:", v14 - 1)) & 1) == 0);
    if (v7 < v12)
    {
      while ((sub_1001AE368((uint64_t)objc_msgSend(v13, "characterAtIndex:", v7)) & 1) == 0)
      {
        if (++v7 >= v12)
        {
          v7 = v12;
          break;
        }
      }
    }

  }
  if (v14 < v7)
    v7 = v14;

  return v7;
}

void sub_1001B0BD8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001B0C30(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001B0C60(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

uint64_t sub_1001B0C90(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  unsigned int v9;

  v3 = a2;
  v4 = v3;
  if (a1 == 0x7FFFFFFFFFFFFFFFLL)
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101240DC8);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E06814();
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101240DE8);
    v5 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)v5, OS_LOG_TYPE_ERROR))
    {
      objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
      sub_100DFF474();
    }

    v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "BOOL CRLWPHasWideBreakingCharacter(CRLWPCharIndex, __strong id<CRLWPTextSource>)"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPUtilities.mm"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v6, v7, 1472, 0, "bad charIndex");

    v8 = 0;
  }
  else
  {
    v9 = objc_msgSend(v3, "characterAtIndex:", a1);
    if (v9 >= 0xD)
      v8 = 0;
    else
      v8 = (0x1030u >> v9) & 1;
  }

  return v8;
}

void sub_1001B0E54(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  v3 = v2;

  _Unwind_Resume(a1);
}

void sub_1001B0E9C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001B0ECC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

uint64_t sub_1001B0EFC(UChar32 a1)
{
  UCharDirection v2;
  unsigned int v3;

  v2 = u_charDirection(a1);
  if (v2 > U_BOUNDARY_NEUTRAL)
    v3 = 0;
  else
    v3 = dword_100EEE1E8[v2];
  if (a1 == 65532)
    return 7;
  else
    return v3;
}

uint64_t sub_1001B0F48(void *a1)
{
  return sub_1001B0F50(a1, 0);
}

uint64_t sub_1001B0F50(void *a1, int a2)
{
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  UChar32 v7;
  int v8;
  uint64_t v9;

  v3 = a1;
  v4 = objc_msgSend(v3, "length");
  if (v4)
  {
    v5 = 0;
    v6 = 1;
    while (1)
    {
      v7 = objc_msgSend(v3, "crlwp_utf32CharacterAtIndex:", v5);
      v8 = sub_1001B0EFC(v7);
      if (v8 == 1)
        break;
      if (v8 == 2 || a2 && v8 == 3 && u_charDirection(v7) == U_ARABIC_NUMBER)
        goto LABEL_14;
      if ((v7 & 0xFFFF0000) != 0)
        v9 = v5 + 1;
      else
        v9 = v5;
      v5 = v9 + 1;
      if (v9 + 1 >= (unint64_t)v4)
        goto LABEL_12;
    }
    v6 = 0;
  }
  else
  {
LABEL_12:
    v6 = -1;
  }
LABEL_14:

  return v6;
}

void sub_1001B1000(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id sub_1001B1018(void *a1, unint64_t a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  unsigned int i;
  unsigned int v8;
  void *v9;
  void *v10;
  void *v11;

  v3 = a1;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "firstObject"));
  v5 = v4;
  if (v4 && objc_msgSend(v4, "wantsCustomResolveLogicForProperty:forStyles:", a2, v3))
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "resolvedValueForProperty:inStyles:", a2, v3));
  }
  else
  {
    for (i = 0; ; i = v8 + 1)
    {
      v8 = i;
      if ((unint64_t)objc_msgSend(v3, "count") <= i)
      {
        v6 = 0;
        goto LABEL_14;
      }
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectAtIndexedSubscript:", i));
      v10 = v9;
      if (v9)
      {
        v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "boxedValueForProperty:", a2));
        if (v6)
        {
          v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSNull null](NSNull, "null"));

          if (v6 != v11)
            goto LABEL_13;

          if (((a2 < 0x33) & (0x40001049405D0uLL >> a2)) != 0)
            break;
        }
      }

    }
    v6 = 0;
LABEL_13:

  }
LABEL_14:

  return v6;
}

void sub_1001B115C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

id sub_1001B1190(void *a1, void *a2, unint64_t a3)
{
  id v5;
  id v6;
  void *v7;
  id v8;
  void *v9;

  v5 = a1;
  v6 = a2;
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
  objc_msgSend(v7, "crl_addNonNilObject:", v5);
  objc_msgSend(v7, "crl_addNonNilObject:", v6);
  v8 = sub_1001B1018(v7, a3);
  v9 = (void *)objc_claimAutoreleasedReturnValue(v8);

  return v9;
}

void sub_1001B1214(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

uint64_t sub_1001B1234(void *a1, void *a2, uint64_t a3, int a4)
{
  id v7;
  id v8;
  void *v9;
  uint64_t v10;

  v7 = a1;
  v8 = a2;
  v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
  objc_msgSend(v9, "crl_addNonNilObject:", v7);
  objc_msgSend(v9, "crl_addNonNilObject:", v8);
  v10 = sub_1001B12E4(v9, a3, a4);

  return v10;
}

void sub_1001B12C4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

uint64_t sub_1001B12E4(void *a1, uint64_t a2, int a3)
{
  uint64_t v3;
  id v5;
  void *v6;
  unsigned int v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _BYTE v17[128];

  LODWORD(v3) = a3;
  v5 = a1;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "firstObject"));
  if (objc_msgSend(v6, "wantsCustomResolveLogicForProperty:forStyles:", a2, v5))
  {
    LODWORD(v3) = objc_msgSend(v6, "resolvedIntForProperty:inStyles:", a2, v5);
    v7 = 0x80000000;
  }
  else
  {
    v15 = 0u;
    v16 = 0u;
    v13 = 0u;
    v14 = 0u;
    v8 = v5;
    v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
    if (v9)
    {
      v10 = *(_QWORD *)v14;
LABEL_5:
      v11 = 0;
      while (1)
      {
        if (*(_QWORD *)v14 != v10)
          objc_enumerationMutation(v8);
        v7 = objc_msgSend(*(id *)(*((_QWORD *)&v13 + 1) + 8 * v11), "intValueForProperty:", a2, (_QWORD)v13);
        if (v7 != 0x80000000)
          break;
        if (v9 == (id)++v11)
        {
          v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
          if (v9)
            goto LABEL_5;
          goto LABEL_11;
        }
      }
    }
    else
    {
LABEL_11:
      v7 = 0x80000000;
    }

  }
  if (v7 == 0x80000000)
    v3 = v3;
  else
    v3 = v7;

  return v3;
}

void sub_1001B1454(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

double sub_1001B148C(void *a1, void *a2, uint64_t a3, double a4)
{
  id v7;
  id v8;
  void *v9;
  double v10;

  v7 = a1;
  v8 = a2;
  v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
  objc_msgSend(v9, "crl_addNonNilObject:", v7);
  objc_msgSend(v9, "crl_addNonNilObject:", v8);
  v10 = sub_1001B153C(v9, a3, a4);

  return v10;
}

void sub_1001B151C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

double sub_1001B153C(void *a1, uint64_t a2, double a3)
{
  id v5;
  void *v6;
  float v7;
  double v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  float v13;
  float v14;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];

  v5 = a1;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "firstObject"));
  if (objc_msgSend(v6, "wantsCustomResolveLogicForProperty:forStyles:", a2, v5))
  {
    objc_msgSend(v6, "resolvedFloatForProperty:inStyles:", a2, v5);
    a3 = v7;
    v8 = INFINITY;
  }
  else
  {
    v18 = 0u;
    v19 = 0u;
    v16 = 0u;
    v17 = 0u;
    v9 = v5;
    v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
    v8 = INFINITY;
    if (v10)
    {
      v11 = *(_QWORD *)v17;
LABEL_5:
      v12 = 0;
      while (1)
      {
        if (*(_QWORD *)v17 != v11)
          objc_enumerationMutation(v9);
        objc_msgSend(*(id *)(*((_QWORD *)&v16 + 1) + 8 * v12), "floatValueForProperty:", a2, (_QWORD)v16);
        v14 = v13;
        if (v13 != INFINITY)
          break;
        if (v10 == (id)++v12)
        {
          v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
          if (v10)
            goto LABEL_5;
          break;
        }
      }
      v8 = v14;
    }

  }
  if (v8 != INFINITY)
    a3 = v8;

  return a3;
}

void sub_1001B16BC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

CFTypeRef sub_1001B16F4(void *a1, void *a2, unint64_t a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  CFTypeRef v11;
  void *v12;
  void *v13;
  void *v14;

  v5 = a1;
  v6 = a2;
  if (!v6)
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101240E08);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E06920();
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101240E28);
    v7 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)v7, OS_LOG_TYPE_ERROR))
    {
      objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
      sub_100DFF474();
    }

    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "CTFontRef  _Nonnull CRLWPFastCreateFontForStyle(CRLWPCharacterStyle * _Nullable __strong, CRLWPParagraphStyle * _Nonnull __strong, NSUInteger)"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPUtilities.mm"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v8, v9, 1807, 0, "paragraphStyle is not allowed to be nil");

  }
  v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
  objc_msgSend(v10, "crl_addNonNilObject:", v5);
  objc_msgSend(v10, "crl_addNonNilObject:", v6);
  v11 = sub_1001B1B00(v10, a3);

  if (!v11)
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101240E48);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E06894();
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101240E68);
    v12 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)v12, OS_LOG_TYPE_ERROR))
    {
      objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
      sub_100DFF474();
    }

    v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "CTFontRef  _Nonnull CRLWPFastCreateFontForStyle(CRLWPCharacterStyle * _Nullable __strong, CRLWPParagraphStyle * _Nonnull __strong, NSUInteger)"));
    v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPUtilities.mm"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v13, v14, 1820, 0, "invalid nil value for '%{public}s'", "font");

    v11 = sub_1001ADC68(CFSTR("TimesNewRomanPSMT"), 13.0);
  }

  return v11;
}

void sub_1001B1A20(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1001B1AA0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001B1AD0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

CFTypeRef sub_1001B1B00(void *a1, unint64_t a2)
{
  id v3;
  id v4;
  CFTypeRef v5;
  id v6;
  __CFString *v7;
  void *v8;
  void *v9;
  void *v10;
  int v11;
  int v12;
  double v13;
  int v14;
  id v15;
  void *v16;
  double v17;

  v3 = a1;
  v4 = sub_1001B1018(v3, 0x11uLL);
  v5 = (CFTypeRef)objc_claimAutoreleasedReturnValue(v4);
  if (!v5)
  {
    v6 = sub_1001B1018(v3, 9uLL);
    v7 = (__CFString *)objc_claimAutoreleasedReturnValue(v6);
    if (!v7)
    {
      +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101240E88);
      if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
        sub_100E069A0();
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101240EA8);
      v8 = off_1013D9070;
      if (os_log_type_enabled((os_log_t)v8, OS_LOG_TYPE_ERROR))
      {
        objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
        sub_100DFF474();
      }

      v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "CTFontRef  _Nonnull CRLWPCreateFontForStylesWithScale(NSArray<id<CRLWPStyleProxy>> * _Nonnull __strong, NSUInteger)"));
      v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPUtilities.mm"));
      +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v9, v10, 1849, 0, "Failed to resolve font name");

      v7 = CFSTR("Helvetica");
    }
    v11 = sub_1001B12E4(v3, 1, 0);
    v12 = sub_1001B12E4(v3, 13, 0);
    v13 = sub_1001B153C(v3, 11, 12.0);
    v14 = sub_1001B12E4(v3, 22, 0);
    v15 = sub_1001B1018(v3, 0xAuLL);
    v16 = (void *)objc_claimAutoreleasedReturnValue(v15);
    v17 = v13 * (double)a2 / 100.0;
    if (v14)
      v17 = v17 * 0.666666687;
    v5 = sub_1001B1E7C(v7, v11 != 0, v12 != 0, v16, v17);

  }
  return v5;
}

void sub_1001B1D88(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001B1E1C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001B1E4C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

CFTypeRef sub_1001B1E7C(void *a1, uint64_t a2, uint64_t a3, void *a4, double a5)
{
  id v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  CFTypeRef v14;

  v9 = a1;
  v10 = a4;
  v11 = (void *)objc_claimAutoreleasedReturnValue(+[CRLWPFontList sharedInstance](CRLWPFontList, "sharedInstance"));
  if (objc_msgSend(v10, "count"))
  {
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "fontForPostscriptName:", v9));
    v13 = objc_msgSend(v12, "copyWithSize:bold:italic:traits:", a2, a3, v10, a5);
    v14 = CFRetain(objc_msgSend(v13, "ctFont"));

  }
  else
  {
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "fontForPostscriptName:atSize:bold:italic:", v9, a2, a3, a5));
    v14 = CFRetain(objc_msgSend(v12, "ctFont"));
  }

  return v14;
}

void sub_1001B1F6C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1001B1FAC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001B1FDC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

double sub_1001B200C(const __CTFont *a1)
{
  double Ascent;
  double Descent;
  double Leading;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double v9;
  double v10;
  CGFloat v11;
  _BOOL4 v12;
  double v13;
  CGFloat v14;
  CGFloat v15;
  CGFloat v16;
  CGFloat v17;
  double v19;
  UniChar characters;
  CGGlyph glyphs;
  CGRect BoundingBox;
  CGRect v23;
  CGRect BoundingRectsForGlyphs;
  CGRect v25;

  Ascent = CTFontGetAscent(a1);
  Descent = CTFontGetDescent(a1);
  Leading = CTFontGetLeading(a1);
  BoundingBox = CTFontGetBoundingBox(a1);
  x = BoundingBox.origin.x;
  y = BoundingBox.origin.y;
  width = BoundingBox.size.width;
  height = BoundingBox.size.height;
  v9 = floor(Leading + 0.5);
  if (Leading <= 0.0)
    v10 = 0.0;
  else
    v10 = v9;
  v19 = floor(Ascent + 0.5) + floor(Descent + 0.5);
  v11 = y;
  if (CGRectGetMaxY(BoundingBox) <= Ascent)
  {
    v23.origin.x = x;
    v23.origin.y = y;
    v23.size.width = width;
    v23.size.height = height;
    v12 = CGRectGetMinY(v23) < -(Descent + Leading);
  }
  else
  {
    v12 = 1;
  }
  v13 = v19 + v10;
  glyphs = 0;
  characters = 192;
  if (v12 && v10 == 0.0 && CTFontGetGlyphsForCharacters(a1, &characters, &glyphs, 1))
  {
    BoundingRectsForGlyphs = CTFontGetBoundingRectsForGlyphs(a1, kCTFontOrientationDefault, &glyphs, 0, 1);
    v14 = BoundingRectsForGlyphs.origin.x;
    v15 = BoundingRectsForGlyphs.origin.y;
    v16 = BoundingRectsForGlyphs.size.width;
    v17 = BoundingRectsForGlyphs.size.height;
    if (CGRectGetMaxY(BoundingRectsForGlyphs) > Ascent
      || (v25.origin.x = v14,
          v25.origin.y = v15,
          v25.size.width = v16,
          v25.size.height = v17,
          CGRectGetMinY(v25) < -Descent))
    {
      v13 = v13 + floor(v19 * 0.200000003 + 0.5);
    }
  }
  return fmax(v13, 1.0);
}

void sub_1001B21AC(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  void *v4;
  id v5;

  v4 = (void *)objc_claimAutoreleasedReturnValue(+[CRLWPFontMetricsCache sharedCache](CRLWPFontMetricsCache, "sharedCache"));
  v5 = v4;
  if (v4)
  {
    objc_msgSend(v4, "fontHeightInfoForFont:", a1);
  }
  else
  {
    a2[4] = 0u;
    a2[5] = 0u;
    a2[2] = 0u;
    a2[3] = 0u;
    *a2 = 0u;
    a2[1] = 0u;
  }

}

void sub_1001B2210(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

const __CTFont *sub_1001B2224(void *a1, void *a2, double a3)
{
  id v5;
  double v6;
  const __CTFont *v7;
  double Size;
  double v9;
  CTFontRef CopyWithAttributes;

  v5 = a1;
  v6 = sub_1001B148C(a2, v5, 11, 0.0);
  v7 = (const __CTFont *)sub_1001B16F4(0, v5, (unint64_t)a3);
  Size = CTFontGetSize(v7);
  v9 = a3 / 100.0 * v6;
  if (v9 != Size)
  {
    CopyWithAttributes = CTFontCreateCopyWithAttributes(v7, v9, 0, 0);
    CFRelease(v7);
    v7 = CopyWithAttributes;
  }

  return v7;
}

void sub_1001B22D0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void *sub_1001B22E8(const void *a1, void *a2, double a3)
{
  id v5;
  void *v6;
  void *CopyWithAttributes;
  void *v8;

  v5 = a2;
  v6 = v5;
  if (v5)
  {
    CopyWithAttributes = (void *)sub_1001ADC68(v5, a3);
  }
  else if (CTFontGetSize((CTFontRef)a1) == a3)
  {
    CopyWithAttributes = (void *)CFRetain(a1);
  }
  else
  {
    CopyWithAttributes = CTFontCreateCopyWithAttributes((CTFontRef)a1, a3, 0, 0);
  }
  v8 = CopyWithAttributes;

  return v8;
}

void sub_1001B2368(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

double sub_1001B2378(void *a1)
{
  id v1;
  double v2;
  double v3;
  double v4;

  v1 = a1;
  v2 = 1.0;
  if (objc_msgSend(v1, "scaleWithText"))
  {
    objc_msgSend(v1, "scale");
    if (v3 != 1.0)
    {
      objc_msgSend(v1, "scale");
      v2 = v4;
    }
  }

  return v2;
}

void sub_1001B23D0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void *sub_1001B23E0(void *a1, void *a2, void *a3, void *a4, double a5)
{
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  const __CTFont *v15;
  double Size;
  double v17;
  void *v18;
  unsigned int v19;
  double v20;

  v9 = a1;
  v10 = a2;
  v11 = a3;
  v12 = a4;
  v13 = sub_1001B1190(0, v9, 0x11uLL);
  v14 = (void *)objc_claimAutoreleasedReturnValue(v13);
  if (!v14)
  {
    v15 = sub_1001B2224(v9, v10, a5);
    Size = CTFontGetSize(v15);
    v17 = sub_1001B2378(v12);
    v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSNull null](NSNull, "null"));
    v19 = objc_msgSend(v11, "isEqual:", v18);
    v20 = Size * v17;

    if (v19)
    {

      v11 = 0;
    }
    v14 = sub_1001B22E8(v15, v11, v20);
    CFRelease(v15);
  }

  return v14;
}

void sub_1001B24F4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

double sub_1001B2528(double a1)
{
  return fmax(a1, 1.75);
}

double sub_1001B2534(double a1)
{
  return fmin(a1, 1.0);
}

double sub_1001B2540()
{
  return 0.174999997;
}

void sub_1001B254C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, unint64_t a5, int a6, double a7)
{
  double v14;
  _OWORD v15[6];
  _OWORD v16[5];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;

  v22 = 0u;
  v23 = 0u;
  v20 = 0u;
  v21 = 0u;
  v18 = 0u;
  v19 = 0u;
  sub_1001B21AC(a1, &v18);
  if (a1 != a2 && *(double *)&v23 == 0.0)
  {
    v17 = 0u;
    memset(v16, 0, sizeof(v16));
    sub_1001B21AC(a2, v16);
    *(_QWORD *)&v23 = v17;
  }
  v14 = sub_1001B2658(a1);
  *(double *)&v21 = *(double *)&v21
                  + v14
                  - (*((double *)&v20 + 1)
                   + *(double *)&v19
                   + *(double *)&v20
                   + *((double *)&v20 + 1));
  v15[4] = v22;
  v15[5] = v23;
  v15[0] = v18;
  v15[1] = v19;
  v15[2] = v20;
  v15[3] = v21;
  sub_1001B26D0((double *)v15, a3, a4, a5, a6, a7);
}

double sub_1001B2658(uint64_t a1)
{
  double v1;
  double result;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  v7 = 0u;
  v8 = 0u;
  v5 = 0u;
  v6 = 0u;
  v3 = 0u;
  v4 = 0u;
  sub_1001B21AC(a1, &v3);
  v1 = rint(*(double *)&v5 + *((double *)&v6 + 1)) * 5.3636991;
  result = *((double *)&v6 + 1)
         + *(double *)&v3
         + *(double *)&v6
         + *(double *)&v5
         + *((double *)&v5 + 1)
         + fmax(*(double *)&v4, *((double *)&v3 + 1));
  if (result >= v1)
    return v1;
  return result;
}

double sub_1001B26D0(double *a1, uint64_t a2, int a3, unint64_t a4, int a5, double a6)
{
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;

  v6 = a1[2];
  v7 = a1[4];
  v8 = a1[5];
  v9 = v6 + v7;
  v10 = (v6 + v7 + v8 + a1[6]) * 0.0440277313;
  if (a1[11] != 0.0)
    v10 = a1[11];
  v11 = fmax(v10, 1.0);
  if (a5 == 1)
  {
    v12 = -v6;
    v13 = -(v7 + v8 - (v12 - v10) - (v8 + v9 * 0.5));
    if (!a3)
      v13 = v12;
    v14 = -0.0;
    if (a2 == 2)
      v14 = v10;
    v15 = v14 + v13;
    if (a2 && !a3 && a4 <= 3)
      v15 = v15 - v11;
  }
  else
  {
    if (a3)
    {
      v16 = -(v7 + v8 - (v7 + v10) - (v8 + v9 * 0.5));
    }
    else
    {
      if (!a2 || (v16 = a1[4], a4 >= 4))
        v16 = -a1[10];
      if (v16 < 1.0)
        v16 = floor(v7 + a1[7]) * 5.3636991 * 0.0880554625;
    }
    v17 = fmax(fmax(v10, 1.75) - v10, 0.0) + v16;
    if ((a3 & 1) != 0)
      v17 = v16;
    v18 = v16 - v10;
    if (a2 != 2)
      v18 = v16;
    if (a2 == 3)
      v15 = v17;
    else
      v15 = v18;
  }
  return v15 + a6;
}

BOOL sub_1001B284C(unint64_t a1)
{
  return a1 < 4;
}

void sub_1001B2858(uint64_t a1, int a2, int a3, double a4)
{
  double v8;
  _OWORD v9[6];
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  v8 = sub_1001B2658(a1);
  v14 = 0u;
  v15 = 0u;
  v12 = 0u;
  v13 = 0u;
  v10 = 0u;
  v11 = 0u;
  sub_1001B21AC(a1, &v10);
  *(double *)&v13 = *(double *)&v13 + v8 - (*(double *)&v11 + *(double *)&v12 + *((double *)&v12 + 1) + *(double *)&v13);
  v9[4] = v14;
  v9[5] = v15;
  v9[0] = v10;
  v9[1] = v11;
  v9[2] = v12;
  v9[3] = v13;
  sub_1001B290C((double *)v9, a2, a3, a4);
}

double sub_1001B290C(double *a1, int a2, int a3, double a4)
{
  double result;

  result = a4 + a1[9] * -0.5;
  if (a2 && !a3)
    return -(a1[4] + a1[5] - result - (a1[5] + (a1[2] + a1[4]) * 0.5));
  if (a2)
    return 0.0;
  return result;
}

BOOL sub_1001B2980(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v5 = (unint64_t)(a5 & 2) >> 1;
  if ((a5 & 2) != 0)
    v6 = 0;
  else
    v6 = -1;
  v7 = a3 + !(a5 & 1);
  if ((a5 & 1) == 0)
    v5 = v6;
  v8 = a4 + v5;
  return a1 >= v7 && a1 - v7 < v8;
}

void sub_1001B29B0(CGRect **a1)
{
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  CGRect *v5;
  CGRect *v6;

  x = CGRectNull.origin.x;
  y = CGRectNull.origin.y;
  width = CGRectNull.size.width;
  height = CGRectNull.size.height;
  v5 = *a1;
  v6 = a1[1];
  while (v5 != v6)
    *(CGRect *)&x = CGRectUnion(*(CGRect *)&x, *v5++);
}

uint64_t sub_1001B29F8(uint64_t a1, int a2, int a3)
{
  uint64_t v3;
  int *i;

  v3 = 0;
  for (i = &dword_100EEE018; *((_QWORD *)i - 2) != a1 || (((0x33333uLL >> v3) & 1) == 0) == a2 || *(i - 1) != a3; i += 6)
  {
    if (++v3 == 20)
      return 0;
  }
  return *i;
}

BOOL sub_1001B2A58()
{
  id v0;
  void *v1;
  _BOOL8 v2;

  v0 = -[CRLWPEditorHelper editorKeyboardLanguage]_0();
  v1 = (void *)objc_claimAutoreleasedReturnValue(v0);
  v2 = (id)+[NSLocale characterDirectionForLanguage:](NSLocale, "characterDirectionForLanguage:", v1) == (id)2;

  return v2;
}

void sub_1001B2A9C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001B2E94(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001B2F38(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001B2F68(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001B2F98(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001B2FC8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

BOOL sub_1001B2FF8(uint64_t a1)
{
  return a1 == 1;
}

uint64_t sub_1001B3004(unint64_t a1)
{
  return (a1 < 0x31) & (0x1249249248000uLL >> a1);
}

uint64_t sub_1001B3024(unint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;

  if (a1 >= 5)
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101240F48);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E06B2C();
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101240F68);
    v2 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)v2, OS_LOG_TYPE_ERROR))
    {
      objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
      sub_100DFF474();
    }

    v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "CRLWPParagraphAlignment CRLWPParagraphAlignmentFromNSTextAlignment(NSTextAlignment)"));
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPUtilities.mm"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v3, v4, 3271, 0, "Bad text alignment (%lu).", a1);

  }
  if (a1 - 1 > 3)
    return 0;
  else
    return qword_100EEE238[a1 - 1];
}

void sub_1001B31D4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001B31FC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001B322C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

id sub_1001B325C(void *a1, void *a2)
{
  id v3;
  uint64_t (**v4)(_QWORD);
  id v5;
  id v6;
  void *v7;
  uint64_t v8;

  v3 = a1;
  v4 = a2;
  v5 = sub_1001B3338();
  v6 = (id)objc_claimAutoreleasedReturnValue(v5);
  objc_sync_enter(v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "objectForKey:", v3));
  if (!v7)
  {
    v8 = v4[2](v4);
    v7 = (void *)objc_claimAutoreleasedReturnValue(v8);
    objc_msgSend(v6, "setObject:forKey:", v7, v3);
  }
  objc_sync_exit(v6);

  return v7;
}

void sub_1001B3310(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  objc_sync_exit(v3);

  _Unwind_Resume(a1);
}

id sub_1001B3338()
{
  if (qword_101414FD0 != -1)
    dispatch_once(&qword_101414FD0, &stru_101240F88);
  return (id)qword_101414FD8;
}

void sub_1001B3378(id a1)
{
  id v1;
  void *v2;

  v1 = objc_alloc_init((Class)NSCache);
  v2 = (void *)qword_101414FD8;
  qword_101414FD8 = (uint64_t)v1;

  objc_msgSend((id)qword_101414FD8, "setName:", CFSTR("CRLWPObjectCache"));
}

void sub_1001B379C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001B37CC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001B3F4C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001B3F7C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001B3FAC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001B3FDC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

CGColorRef sub_1001B4168()
{
  return sub_100011C1C(0.996078432, 0.956862748, 0.611764729, 1.0);
}

CGColorRef sub_1001B4188()
{
  return sub_100011C1C(1.0, 1.0, 1.0, 1.0);
}

void sub_1001B4534(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001B4564(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001B4594(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001B45C4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001B55F4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001B5624(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001B5AA8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001B5AD8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001B5D7C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001B5DAC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001B6080(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001B60B0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001B639C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001B63CC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001B6C28(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001B6C58(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001B6C88(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001B6CB8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001B6CE8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001B6D18(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001B71F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  uint64_t v33;

  _Block_object_dispose(&a25, 8);
  _Block_object_dispose(&a29, 8);
  _Block_object_dispose(&a33, 8);
  _Block_object_dispose((const void *)(v33 - 192), 8);
  _Unwind_Resume(a1);
}

id sub_1001B7240(uint64_t a1, CGFloat a2, CGFloat a3, double a4)
{
  id result;
  uint64_t v7;
  char v8;
  double v9;
  double v10;
  CGPoint v11;

  v11.y = a3;
  v11.x = a2;
  result = (id)CGRectContainsPoint(*(CGRect *)(a1 + 80), v11);
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  if ((_DWORD)result)
  {
    if (*(_BYTE *)(v7 + 24))
      goto LABEL_11;
    *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = a4;
    v8 = 1;
    goto LABEL_9;
  }
  if (!*(_BYTE *)(v7 + 24))
    goto LABEL_11;
  v9 = *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24);
  v10 = *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24);
  if (v9 != v10 && vabdd_f64(v9, v10) >= fabs(v10 * 0.000000999999997))
  {
    result = objc_msgSend(*(id *)(a1 + 112), "p_appendPath:fromStartPercent:toEndPercent:toPath:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
    v8 = 0;
LABEL_9:
    v7 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    goto LABEL_10;
  }
  v8 = 0;
LABEL_10:
  *(_BYTE *)(v7 + 24) = v8;
LABEL_11:
  if (!*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 24))
  {
    **(_BYTE **)(a1 + 120) = *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) ^ 1;
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 24) = 1;
  }
  *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) = a4;
  return result;
}

void sub_1001B7348(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001B7378(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001B8BA8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001B8BD8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001B8C08(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001B8C38(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001B8C68(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001B8C98(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001B8CC8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001B8CF8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001B8D28(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001B8D58(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001B9018(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001B9048(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

uint64_t sub_1001B92E0(uint64_t result)
{
  *(_BYTE *)(*(_QWORD *)(result + 32) + 16) = *(_BYTE *)(*(_QWORD *)(result + 40) + 16);
  return result;
}

uint64_t sub_1001B936C(uint64_t result)
{
  uint64_t v1;

  v1 = *(_QWORD *)(result + 32);
  if (!*(_BYTE *)(v1 + 16))
  {
    *(_BYTE *)(v1 + 16) = 1;
    return (*(uint64_t (**)(void))(*(_QWORD *)(result + 40) + 16))();
  }
  return result;
}

void sub_1001BA190(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,char a60)
{
  _Block_object_dispose(&a60, 8);
  _Block_object_dispose(&STACK[0x240], 8);
  _Unwind_Resume(a1);
}

void sub_1001BA254(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001BA284(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001BA2B4(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  double v6;
  double v7;
  void *v8;
  id v9;
  _BOOL8 v10;
  void *v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  void *v20;
  void *v21;
  id v22;
  CGRect v23;

  v22 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectAtIndexedSubscript:", a2));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v22, "first"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v22, "second"));
  objc_msgSend(v5, "crl_CGFloatValue");
  v7 = v6;

  if (v7 <= 0.0)
  {
    v10 = 0;
  }
  else
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "mask"));
    if (v8)
    {
      v9 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "mask")));
      v10 = (unint64_t)sub_1000C9440((const CGPath *)objc_msgSend(v9, "CGPath")) > 0x3E8;

    }
    else
    {
      v10 = 0;
    }

  }
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "crl_strokeForTracingWithOutset:shouldIgnoreMask:", v10, v7));
  objc_msgSend(v11, "renderBounds");
  v13 = v12;
  v15 = v14;
  v17 = v16;
  v19 = v18;
  os_unfair_lock_lock((os_unfair_lock_t)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 32));
  v23.origin.x = v13;
  v23.origin.y = v15;
  v23.size.width = v17;
  v23.size.height = v19;
  *(CGRect *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 32) = CGRectUnion(*(CGRect *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8)+ 32), v23);
  v20 = *(void **)(a1 + 40);
  v21 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedLong:](NSNumber, "numberWithUnsignedLong:", a2));
  objc_msgSend(v20, "setObject:forKeyedSubscript:", v11, v21);

  os_unfair_lock_unlock((os_unfair_lock_t)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 32));
}

void sub_1001BA44C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001BA47C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

_QWORD *sub_1001BA4AC(_QWORD *a1)
{
  uint64_t i;
  void *v3;
  uint64_t v4;

  *a1 = off_101241588;
  for (i = 1; i != 257; ++i)
  {
    v3 = (void *)a1[i];
    a1[i] = 0;

  }
  v4 = 256;
  do

  while (v4 * 8);
  return a1;
}

void sub_1001BA50C(_QWORD *a1)
{
  sub_1001BA4AC(a1);
  operator delete();
}

uint64_t sub_1001BA530(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = 0;
  while (!*(_QWORD *)(a1 + 8 + 8 * v2))
  {
    if (++v2 == 256)
      return 0x7FFFFFFFFFFFFFFFLL;
  }
  return a2 + v2;
}

uint64_t sub_1001BA55C(uint64_t a1, uint64_t a2)
{
  unsigned int i;
  unsigned int v3;

  for (i = 255; ; --i)
  {
    v3 = i;
    if (*(_QWORD *)(a1 + 8 * i + 8))
      break;
    if (!v3)
      return 0x7FFFFFFFFFFFFFFFLL;
  }
  return i + a2;
}

id sub_1001BA58C(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableIndexSet indexSet](NSMutableIndexSet, "indexSet"));
  v5 = 0;
  v6 = a1 + 8;
  do
  {
    if (*(_QWORD *)(v6 + 8 * v5))
      objc_msgSend(v4, "addIndex:", a2 + v5);
    ++v5;
  }
  while (v5 != 256);
  v7 = objc_msgSend(objc_alloc((Class)NSIndexSet), "initWithIndexSet:", v4);

  return v7;
}

void sub_1001BA610(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001BA624(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (**v10)(id, uint64_t, uint64_t, _BYTE *);

  v10 = a2;
  v7 = 0;
  v8 = a1 + 8;
  do
  {
    if (*a4)
      break;
    v9 = *(_QWORD *)(v8 + 8 * v7);
    if (v9)
      v10[2](v10, v9, a3 + v7, a4);
    ++v7;
  }
  while (v7 != 256);

}

void sub_1001BA69C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001BA6B0()
{
  operator new();
}

_QWORD *sub_1001BA724(_QWORD *a1)
{
  uint64_t i;
  uint64_t v3;

  *a1 = off_1012415D0;
  for (i = 1; i != 257; ++i)
  {
    v3 = a1[i];
    if (v3)
    {
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
      a1[i] = 0;
    }
  }
  return a1;
}

void sub_1001BA778(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = off_1012415D0;
  v2 = 1;
  while (1)
  {
    v3 = a1[v2];
    if (v3)
    {
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
      a1[v2] = 0;
    }
    if (++v2 == 257)
      operator delete();
  }
}

void sub_1001BA7DC()
{
  operator new();
}

uint64_t sub_1001BA85C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v2 = 0;
  v3 = a2 << 8;
  v4 = a1 + 8;
  while (1)
  {
    v5 = *(_QWORD *)(v4 + v2);
    if (v5)
    {
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v5 + 16))(v5, v3);
      if (result != 0x7FFFFFFFFFFFFFFFLL)
        break;
    }
    v3 += 256;
    v2 += 8;
    if (v2 == 2048)
      return 0x7FFFFFFFFFFFFFFFLL;
  }
  return result;
}

uint64_t sub_1001BA8C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = (a2 << 8) + 65280;
  v4 = 2048;
  while (1)
  {
    v5 = *(_QWORD *)(a1 + v4);
    if (v5)
    {
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v5 + 24))(v5, v3);
      if (result != 0x7FFFFFFFFFFFFFFFLL)
        break;
    }
    v3 -= 256;
    v4 -= 8;
    if (!v4)
      return 0x7FFFFFFFFFFFFFFFLL;
  }
  return result;
}

id sub_1001BA924(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;

  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableIndexSet indexSet](NSMutableIndexSet, "indexSet"));
  v5 = 0;
  v6 = a2 << 8;
  v7 = a1 + 8;
  do
  {
    v8 = *(_QWORD *)(v7 + v5);
    if (v8)
    {
      v9 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v8 + 32))(v8, v6);
      v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
      objc_msgSend(v4, "addIndexes:", v10);

    }
    v6 += 256;
    v5 += 8;
  }
  while (v5 != 2048);
  v11 = objc_msgSend(objc_alloc((Class)NSIndexSet), "initWithIndexSet:", v4);

  return v11;
}

void sub_1001BA9D4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001BA9F4(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;

  v11 = a2;
  v7 = 0;
  v8 = a3 << 8;
  v9 = a1 + 8;
  do
  {
    if (*a4)
      break;
    v10 = *(_QWORD *)(v9 + v7);
    if (v10)
      (*(void (**)(uint64_t, id, uint64_t, _BYTE *))(*(_QWORD *)v10 + 40))(v10, v11, v8, a4);
    v8 += 256;
    v7 += 8;
  }
  while (v7 != 2048);

}

void sub_1001BAA78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001BABDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22)
{
  _Block_object_dispose(&a17, 8);

  _Unwind_Resume(a1);
}

uint64_t sub_1001BABFC(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1001BAC0C(uint64_t a1)
{

}

void sub_1001BAC14(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;

  v8 = a2;
  v5 = objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%@\n   [%lu] = %@"), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), a3, v8));
  v6 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v7 = *(void **)(v6 + 40);
  *(_QWORD *)(v6 + 40) = v5;

}

void sub_1001BAC88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12)
{

  _Unwind_Resume(a1);
}

void sub_1001BAE40(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001BAE68(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001BAE98(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001BB1E4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001BB20C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001BB23C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001BB428(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Unwind_Resume(a1);
}

uint64_t sub_1001BB440(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4;
  id *v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;

  v4 = a1 + 8 * a3;
  v7 = *(_QWORD *)(v4 + 8);
  v5 = (id *)(v4 + 8);
  v6 = v7;
  if (a2)
    v8 = 0;
  else
    v8 = -1;
  if (v6)
    v9 = v8;
  else
    v9 = a2 != 0;
  objc_storeStrong(v5, a2);

  return v9;
}

void sub_1001BB518(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id sub_1001BB584(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return objc_msgSend(*(id *)(a1 + 32), "setObject:forKey:", a2, a3);
}

void sub_1001BB6A8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

intptr_t sub_1001BB6C0()
{
  const section_64 *v0;
  uint64_t addr;
  uint64_t offset;
  intptr_t image_vmaddr_slide;
  uint32_t v4;
  const char *image_name;
  uint32_t bufsize;
  char buf[1024];

  v0 = getsectbyname("__TEXT", "__text");
  addr = v0->addr;
  offset = v0->offset;
  bufsize = 1024;
  if (_NSGetExecutablePath(buf, &bufsize))
  {
    image_vmaddr_slide = -1;
  }
  else if (_dyld_image_count())
  {
    v4 = 0;
    while (1)
    {
      image_name = _dyld_get_image_name(v4);
      if (!strcmp(image_name, buf))
        break;
      if (++v4 >= _dyld_image_count())
        goto LABEL_7;
    }
    image_vmaddr_slide = _dyld_get_image_vmaddr_slide(v4);
  }
  else
  {
LABEL_7:
    image_vmaddr_slide = 0;
  }
  return addr - offset + image_vmaddr_slide;
}

void sub_1001BBA38(uint64_t a1, void *a2, char a3)
{
  id v5;
  NSObject *v6;
  void *v7;
  id v8;
  void *v9;

  v5 = a2;
  if (qword_10147E370 != -1)
    dispatch_once(&qword_10147E370, &stru_101241718);
  v6 = off_1013D9070;
  if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
  {
    sub_100E076C8(v6);
    if ((a3 & 1) != 0)
      goto LABEL_5;
  }
  else if ((a3 & 1) != 0)
  {
LABEL_5:
    v7 = *(void **)(a1 + 32);
    v8 = (id)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("Terminating application due to %@"), v5));
LABEL_9:
    v9 = v8;
    objc_msgSend(v7, "addObject:", v8);

    goto LABEL_10;
  }
  if (!*(_BYTE *)(a1 + 40))
  {
    v7 = *(void **)(a1 + 32);
    v8 = objc_msgSend(v5, "copy");
    goto LABEL_9;
  }
LABEL_10:

}

void sub_1001BBB18(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001BBBC8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001BBC90(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001BC398(id a1)
{
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;

  v1 = objc_claimAutoreleasedReturnValue(+[NSDictionary sharedKeySetForKeys:](NSDictionary, "sharedKeySetForKeys:", &off_1012CB548));
  v2 = (void *)qword_101414FF0;
  qword_101414FF0 = v1;

  v3 = objc_alloc_init((Class)NSMutableDictionary);
  v4 = (void *)qword_101414FF8;
  qword_101414FF8 = (uint64_t)v3;

  dword_101415000 = 0;
}

void sub_1001BC46C(id a1)
{
  void *v1;

  v1 = dlopen("/System/Library/PrivateFrameworks/CrashReporterSupport.framework/CrashReporterSupport", 2);
  if (v1)
    v1 = dlsym(v1, "SimulateCrash");
  off_101415008 = v1;
}

void sub_1001BC744(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v3;
  const char *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;

  v7 = a2;
  v8 = a2;
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", a1));
  v3 = objc_retainAutorelease(objc_msgSend(objc_alloc((Class)NSString), "crl_initRedactedWithFormat:arguments:", v2, v7));
  v4 = (const char *)objc_msgSend(v3, "UTF8String");
  v6 = 0;
  if (v4)
  {
    asprintf(&v6, "%s", v4);
    v5 = v6;
  }
  else
  {
    v5 = 0;
  }
  if (!v5)
    v5 = "CRLSetCrashReporterInfo: unknown reason";
  qword_10147E5A8 = (uint64_t)v5;

}

void sub_1001BC7E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1001BC744(a1, (uint64_t)&a9);
}

void sub_1001BD448(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001BD478(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001BD4A8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001BD4D8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001BD508(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001BD538(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001BDA44(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001BDA74(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001BDEC0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001BDEF0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001BDF20(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001BDF50(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001BE0C8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1001BE380(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1001BE3D8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001BE408(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001BE608(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001BE650(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001BE680(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001BE720(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1001BEA24(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001BEABC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001BEAEC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001BEB1C(uint64_t a1, void *a2, void *a3)
{
  id v6;
  id v7;
  void *v8;
  uint64_t v9;
  Class v10;
  NSString *v11;
  id v12;
  void *v13;
  int v14;
  id v15;
  __int16 v16;
  void *v17;
  __int16 v18;
  id v19;
  __int16 v20;
  id v21;

  v6 = a2;
  v7 = a3;
  if (v7)
  {
    if (qword_10147E368 != -1)
      dispatch_once(&qword_10147E368, &stru_101241A20);
    v8 = off_1013D9068;
    if (os_log_type_enabled((os_log_t)v8, OS_LOG_TYPE_ERROR))
    {
      objc_opt_class(v7, v9);
      v11 = NSStringFromClass(v10);
      v12 = (id)objc_claimAutoreleasedReturnValue(v11);
      v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "domain"));
      v14 = 138544130;
      v15 = v12;
      v16 = 2114;
      v17 = v13;
      v18 = 2048;
      v19 = objc_msgSend(v7, "code");
      v20 = 2112;
      v21 = v7;
      _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)v8, OS_LOG_TYPE_ERROR, "Failed to serialize pasteboard object - Error: errorClass=%{public}@, domain=%{public}@, code=%zd (%@) ", (uint8_t *)&v14, 0x2Au);

    }
  }
  else
  {
    objc_storeStrong((id *)(*(_QWORD *)(a1 + 32) + 48), *(id *)(a1 + 40));
    objc_storeStrong((id *)(*(_QWORD *)(a1 + 32) + 56), a2);
    *(_BYTE *)(*(_QWORD *)(a1 + 32) + 66) = 1;
  }
  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 65) = 1;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 48));

}

void sub_1001BECCC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1001BED08(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_1001BEF6C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001BEFA0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001BEFD0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001BF1B8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1001BF6D0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001BF79C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_1001BF7CC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001BF7FC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001BF8E8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001BF918(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001BF948(float a1, uint64_t a2, uint64_t a3, int a4)
{
  *(float *)a3 = a1;
  *(_DWORD *)(a3 + 4) = a4;
  *(_WORD *)(a3 + 8) = 2082;
}

uint64_t sub_1001BF95C(uint64_t result, uint64_t a2)
{
  int v2;

  *(_DWORD *)(a2 + 30) = v2;
  *(_WORD *)(a2 + 34) = 2114;
  *(_QWORD *)(a2 + 36) = result;
  return result;
}

void sub_1001BFE48(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001BFE78(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C01B4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C01E4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C043C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C046C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

id sub_1001C05C0(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "appendBezierPath:", a2);
}

id sub_1001C05CC(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "appendBezierPath:", a2);
}

void sub_1001C0764(uint64_t a1, void *a2, unint64_t a3)
{
  id v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v9;
  BOOL v10;
  int v11;
  void *v12;
  unsigned int v13;
  int v14;
  id v15;

  v5 = a2;
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(_QWORD *)(a1 + 56);
  if (v6 == 0x7FFFFFFFFFFFFFFFLL && v7 == 0)
  {
    v11 = 0;
  }
  else
  {
    v10 = a3 >= v6;
    v9 = a3 - v6;
    v10 = !v10 || v9 >= v7;
    v11 = !v10;
  }
  v12 = *(void **)(a1 + 32);
  v15 = v5;
  if (v12)
  {
    v13 = objc_msgSend(v12, "containsCharacterAtIndex:", a3);
    v5 = v15;
    v14 = v13 ^ 1;
  }
  else
  {
    v14 = 0;
  }
  if (((v11 | v14) & 1) == 0)
  {
    objc_msgSend(*(id *)(a1 + 40), "appendBezierPath:", v15);
    v5 = v15;
  }

}

void sub_1001C0808(uint64_t a1, void *a2, unint64_t a3)
{
  id v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v9;
  BOOL v10;
  int v11;
  void *v12;
  unsigned int v13;
  int v14;
  id v16;
  id v17;

  v5 = a2;
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(_QWORD *)(a1 + 56);
  if (v6 == 0x7FFFFFFFFFFFFFFFLL && v7 == 0)
  {
    v11 = 0;
  }
  else
  {
    v10 = a3 >= v6;
    v9 = a3 - v6;
    v10 = !v10 || v9 >= v7;
    v11 = !v10;
  }
  v12 = *(void **)(a1 + 32);
  if (v12)
  {
    v16 = v5;
    v13 = objc_msgSend(v12, "containsCharacterAtIndex:", a3);
    v5 = v16;
    v14 = v13 ^ 1;
  }
  else
  {
    v14 = 0;
  }
  if (((v11 | v14) & 1) == 0 && (*(_QWORD *)(a1 + 64) != 0x7FFFFFFFFFFFFFFFLL || *(_QWORD *)(a1 + 72) != 0))
  {
    v17 = v5;
    objc_msgSend(*(id *)(a1 + 40), "appendBezierPath:", v5);
    v5 = v17;
  }

}

void sub_1001C0CA0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C0CD0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C0D00(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C0D30(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C0FA0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C0FD0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C1170(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C11A0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C2264(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C2294(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C22C4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C22F4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C2324(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C2354(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C2384(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C23B4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C23E4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C2414(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C26DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1001C26F4(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1001C2704(uint64_t a1)
{

}

void sub_1001C270C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "p_repsForStorage:", *(_QWORD *)(a1 + 40)));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_1001C3274(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C32A4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C32D4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C3304(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C3334(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C3364(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C37DC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C380C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C383C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C386C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

id sub_1001C389C(uint64_t a1)
{
  void *v2;
  CRLMetalShader *v3;
  void *v4;
  id v5;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "p_blendingColorAttachmentWithContext:", *(_QWORD *)(a1 + 32)));
  v3 = [CRLMetalShader alloc];
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "device"));
  v5 = -[CRLMetalShader initDefaultTextureAndOpacityShaderWithDevice:colorAttachment:](v3, "initDefaultTextureAndOpacityShaderWithDevice:colorAttachment:", v4, v2);

  return v5;
}

void sub_1001C3C44(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C3C74(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C3CA4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C3CD4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

id sub_1001C3D04(uint64_t a1)
{
  void *v2;
  void *v3;
  CRLMetalShader *v4;
  void *v5;
  id v6;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[CRLMetalShader p_blendingColorAttachmentWithContext:](CRLMetalShader, "p_blendingColorAttachmentWithContext:", *(_QWORD *)(a1 + 32)));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[CRLMetalShader p_motionBlurVelocityColorAttachmentWithContext:](CRLMetalShader, "p_motionBlurVelocityColorAttachmentWithContext:", *(_QWORD *)(a1 + 32)));
  v4 = [CRLMetalShader alloc];
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "device"));
  v6 = -[CRLMetalShader initDefaultTextureAndOpacityMotionBlurShaderWithDevice:colorAttachment:velocityAttachment:motionBlur:](v4, "initDefaultTextureAndOpacityMotionBlurShaderWithDevice:colorAttachment:velocityAttachment:motionBlur:", v5, v2, v3, 1);

  return v6;
}

void sub_1001C40CC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C40FC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C412C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C415C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

id sub_1001C418C(uint64_t a1)
{
  void *v2;
  CRLMetalShader *v3;
  void *v4;
  id v5;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[CRLMetalShader p_blendingColorAttachmentWithContext:](CRLMetalShader, "p_blendingColorAttachmentWithContext:", *(_QWORD *)(a1 + 32)));
  v3 = [CRLMetalShader alloc];
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "device"));
  v5 = -[CRLMetalShader initDefaultBlendShaderWithDevice:colorAttachment:velocityAttachment:motionBlur:](v3, "initDefaultBlendShaderWithDevice:colorAttachment:velocityAttachment:motionBlur:", v4, v2, 0, 0);

  return v5;
}

void sub_1001C453C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C456C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C459C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C45CC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

id sub_1001C45FC(uint64_t a1)
{
  void *v2;
  void *v3;
  CRLMetalShader *v4;
  void *v5;
  id v6;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[CRLMetalShader p_blendingColorAttachmentWithContext:](CRLMetalShader, "p_blendingColorAttachmentWithContext:", *(_QWORD *)(a1 + 32)));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[CRLMetalShader p_motionBlurVelocityColorAttachmentWithContext:](CRLMetalShader, "p_motionBlurVelocityColorAttachmentWithContext:", *(_QWORD *)(a1 + 32)));
  v4 = [CRLMetalShader alloc];
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "device"));
  v6 = -[CRLMetalShader initDefaultBlendShaderWithDevice:colorAttachment:velocityAttachment:motionBlur:](v4, "initDefaultBlendShaderWithDevice:colorAttachment:velocityAttachment:motionBlur:", v5, v2, v3, 1);

  return v6;
}

void sub_1001C49C4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C49F4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C4A24(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C4A54(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

id sub_1001C4A84(uint64_t a1)
{
  void *v2;
  CRLMetalShader *v3;
  void *v4;
  id v5;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[CRLMetalShader p_blendingColorAttachmentWithContext:](CRLMetalShader, "p_blendingColorAttachmentWithContext:", *(_QWORD *)(a1 + 32)));
  v3 = [CRLMetalShader alloc];
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "device"));
  v5 = -[CRLMetalShader initDefaultColorShaderWithDevice:colorAttachment:](v3, "initDefaultColorShaderWithDevice:colorAttachment:", v4, v2);

  return v5;
}

void sub_1001C4CC4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C4CF4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C50D8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C5108(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C5138(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C5168(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C5B48(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C5B78(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C5BA8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C5BD8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C5C08(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C5C38(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C5C68(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C5C98(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C7080(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C70B0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C70E0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C7110(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C7140(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C7170(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C792C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C795C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C7E3C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C7E6C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C7E9C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C7ECC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C84DC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C850C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C8C7C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C8CAC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C8CDC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C8D0C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C91C8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001C91F8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001CB368(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001CB398(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001CB3C8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001CB3F8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001CB9E8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001CBA18(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001CBB00(uint64_t a1, int a2)
{
  void *v3;
  void *v4;
  void *v5;
  id v6;

  if (a2)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "interactiveCanvasController"));
    v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "commandController"));

    objc_msgSend(v6, "openGroup");
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "localizedStringForKey:value:table:", CFSTR("Delete"), 0, CFSTR("UndoStrings")));
    objc_msgSend(v6, "setCurrentGroupActionString:", v5);

    objc_msgSend(*(id *)(a1 + 32), "perform_delete");
    objc_msgSend(v6, "closeGroup");

  }
}

void sub_1001CBEA0(uint64_t a1, int a2)
{
  void *v3;
  void *v4;
  void *v5;
  id v6;

  if (a2)
  {
    v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "canvasEditor"));
    if (objc_msgSend(v6, "canvasEditorCanPasteAsPlainTextWithSender:", *(_QWORD *)(a1 + 40)))
    {
      v3 = (void *)objc_claimAutoreleasedReturnValue(+[CRLPasteboard generalPasteboard](CRLPasteboard, "generalPasteboard"));
      v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "editorController"));
      v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "selectionPath"));
      objc_msgSend(v6, "pasteWithPasteboard:selectionPath:forceMatchStyle:sender:", v3, v5, 1, *(_QWORD *)(a1 + 40));

    }
  }
}

void sub_1001CBFF0(uint64_t a1, int a2)
{
  void *v3;
  void *v4;
  void *v5;
  id v6;

  if (a2)
  {
    v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "canvasEditor"));
    if (objc_msgSend(v6, "canvasEditorCanPasteValuesWithSender:", *(_QWORD *)(a1 + 40)))
    {
      v3 = (void *)objc_claimAutoreleasedReturnValue(+[CRLPasteboard generalPasteboard](CRLPasteboard, "generalPasteboard"));
      v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "editorController"));
      v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "selectionPath"));
      objc_msgSend(v6, "pasteWithPasteboard:selectionPath:forceMatchStyle:sender:", v3, v5, 0, *(_QWORD *)(a1 + 40));

    }
  }
}

void sub_1001CC140(uint64_t a1, int a2)
{
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;

  if (a2)
  {
    v14 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "canvasEditor"));
    if (objc_msgSend(v14, "canvasEditorCanCopyWithSender:", *(_QWORD *)(a1 + 40)))
    {
      v3 = objc_autoreleasePoolPush();
      v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "interactiveCanvasController"));
      v5 = objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "commandController"));

      objc_msgSend((id)v5, "openGroup");
      v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "localizedStringForKey:value:table:", CFSTR("Duplicate"), 0, CFSTR("UndoStrings")));
      objc_msgSend((id)v5, "setCurrentGroupActionString:", v7);

      v8 = (void *)objc_claimAutoreleasedReturnValue(+[CRLPasteboard pasteboardWithUniqueName](CRLPasteboard, "pasteboardWithUniqueName"));
      v9 = objc_autoreleasePoolPush();
      objc_msgSend(v14, "copyToPasteboard:asPDF:nativeOnly:withSender:", v8, 0, 1, *(_QWORD *)(a1 + 40));
      objc_autoreleasePoolPop(v9);
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "editorController"));
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "selectionPath"));
      objc_msgSend(v14, "pasteWithPasteboard:selectionPath:forceMatchStyle:sender:", v8, v11, 0, *(_QWORD *)(a1 + 40));

      objc_msgSend((id)v5, "closeGroup");
      objc_msgSend(v8, "invalidate");

      objc_autoreleasePoolPop(v3);
      v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "canvasEditor"));
      LOBYTE(v5) = objc_opt_respondsToSelector(v12, "hideLassoSelectionEditMenuInDrawingModeIfLassoToolIsSelected");

      if ((v5 & 1) != 0)
      {
        v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "canvasEditor"));
        objc_msgSend(v13, "hideLassoSelectionEditMenuInDrawingModeIfLassoToolIsSelected");

      }
    }

  }
}

id sub_1001CC80C(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "endEditing");
  return _objc_msgSend(*(id *)(a1 + 40), "p_setLockStatusOfSelectedDrawables:", 1);
}

uint64_t sub_1001CC838(uint64_t result, int a2)
{
  if (a2)
    return (*(uint64_t (**)(void))(*(_QWORD *)(result + 32) + 16))();
  return result;
}

void sub_1001CD170(id *a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  void *i;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  void *j;
  uint64_t v17;
  void *v18;
  void *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _BYTE v28[128];
  _BYTE v29[128];

  v3 = a2;
  v24 = 0u;
  v25 = 0u;
  v26 = 0u;
  v27 = 0u;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "keyEnumerator"));
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v24, v29, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v25;
    do
    {
      for (i = 0; i != v6; i = (char *)i + 1)
      {
        if (*(_QWORD *)v25 != v7)
          objc_enumerationMutation(v4);
        v9 = *(_QWORD *)(*((_QWORD *)&v24 + 1) + 8 * (_QWORD)i);
        v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "objectForKey:", v9));
        v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "p_commandForUpdatingMagnetAfterGroupingForCline:withPosition:withGroupLayout:forMagnet:", v9, v10, v3, 1));
        objc_msgSend(a1[6], "enqueueCommand:", v11);

      }
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v24, v29, 16);
    }
    while (v6);
  }

  v22 = 0u;
  v23 = 0u;
  v20 = 0u;
  v21 = 0u;
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[7], "keyEnumerator", 0));
  v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v20, v28, 16);
  if (v13)
  {
    v14 = v13;
    v15 = *(_QWORD *)v21;
    do
    {
      for (j = 0; j != v14; j = (char *)j + 1)
      {
        if (*(_QWORD *)v21 != v15)
          objc_enumerationMutation(v12);
        v17 = *(_QWORD *)(*((_QWORD *)&v20 + 1) + 8 * (_QWORD)j);
        v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[7], "objectForKey:", v17));
        v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "p_commandForUpdatingMagnetAfterGroupingForCline:withPosition:withGroupLayout:forMagnet:", v17, v18, v3, 0));
        objc_msgSend(a1[6], "enqueueCommand:", v19);

      }
      v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v20, v28, 16);
    }
    while (v14);
  }

}

void sub_1001CE164(_Unwind_Exception *a1)
{
  _Block_object_dispose(&STACK[0x2F0], 8);
  _Unwind_Resume(a1);
}

BOOL sub_1001CE1D0(id a1, _TtC8Freeform12CRLBoardItem *a2)
{
  _TtC8Freeform12CRLBoardItem *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  unsigned int v7;

  v2 = a2;
  objc_opt_class(_TtC8Freeform12CRLGroupItem, v3);
  v5 = sub_100221D0C(v4, v2);
  v6 = (void *)objc_claimAutoreleasedReturnValue(v5);

  if (v6)
    v7 = objc_msgSend(v6, "isEffectivelyEmpty") ^ 1;
  else
    LOBYTE(v7) = 1;

  return v7;
}

__n128 sub_1001CE234(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  _OWORD *v5;
  __n128 result;
  __int128 v7;
  __int128 v8;
  __int128 v9;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "geometry"));
  v4 = v3;
  if (v3)
  {
    objc_msgSend(v3, "transform");
  }
  else
  {
    v8 = 0u;
    v9 = 0u;
    v7 = 0u;
  }
  v5 = *(_OWORD **)(*(_QWORD *)(a1 + 32) + 8);
  v5[2] = v7;
  v5[3] = v8;
  v5[4] = v9;

  return result;
}

void sub_1001CE2A4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001CE2D4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001CEBDC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001CEC0C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

id sub_1001CEF70(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "repForSelecting"));
  v4 = v3;
  if (v3)
  {
    v5 = *(void **)(a1 + 32);
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "layout"));
    v7 = objc_msgSend(v5, "isValidConnectionDestination:forLineEnd:", v6, *(_QWORD *)(a1 + 40));

  }
  else
  {
    v7 = 0;
  }

  return v7;
}

_TtC8Freeform12CRLBoardItem *__cdecl sub_1001CF6A8(id a1, _TtC8Freeform12CRLBoardItem *a2)
{
  _TtC8Freeform12CRLBoardItem *v2;
  uint64_t v3;
  uint64_t v4;
  char isKindOfClass;
  uint64_t v6;
  __objc2_class **v7;
  uint64_t v8;
  id v9;
  void *v10;

  v2 = a2;
  objc_opt_class(_TtC8Freeform27CRLFreehandDrawingShapeItem, v3);
  isKindOfClass = objc_opt_isKindOfClass(v2, v4);
  v7 = off_10122A4D0;
  if ((isKindOfClass & 1) != 0)
    v7 = off_10122A4D8;
  objc_opt_class(*v7, v6);
  v9 = sub_100221D0C(v8, v2);
  v10 = (void *)objc_claimAutoreleasedReturnValue(v9);

  return (_TtC8Freeform12CRLBoardItem *)v10;
}

void sub_1001CFDE4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001CFE14(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001CFE44(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001CFE74(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001D0150(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001D0180(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001D14C8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001D14F8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001D1528(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001D1558(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001D1B4C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001D1B7C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001D24AC(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  void *i;
  void *v11;
  void *v12;
  void *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  CGAffineTransform v18;
  CGAffineTransform v19;
  CGAffineTransform v20;
  _BYTE v21[128];

  v3 = a2;
  v4 = v3;
  memset(&v20, 0, sizeof(v20));
  if (v3)
  {
    objc_msgSend(v3, "transformInRoot");
  }
  else
  {
    v5 = *(void **)(a1 + 32);
    if (v5)
      objc_msgSend(v5, "transformInRoot");
    else
      memset(&v19, 0, sizeof(v19));
    v20 = v19;
  }
  v18 = v20;
  CGAffineTransformInvert(&v19, &v18);
  v20 = v19;
  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v6 = *(id *)(a1 + 40);
  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v14, v21, 16);
  if (v7)
  {
    v8 = v7;
    v9 = *(_QWORD *)v15;
    do
    {
      for (i = 0; i != v8; i = (char *)i + 1)
      {
        if (*(_QWORD *)v15 != v9)
          objc_enumerationMutation(v6);
        v11 = *(void **)(*((_QWORD *)&v14 + 1) + 8 * (_QWORD)i);
        v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "geometry", (_QWORD)v14));
        v19 = v20;
        v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "geometryByAppendingTransform:", &v19));
        objc_msgSend(v11, "setGeometry:", v13);

      }
      v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v14, v21, 16);
    }
    while (v8);
  }

}

void sub_1001D2C34(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001D2C64(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001D2E58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1001D2E70(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1001D2E80(uint64_t a1)
{

}

void sub_1001D2E88(_QWORD *a1, void *a2, _BYTE *a3)
{
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id obj;

  v5 = a2;
  objc_opt_class(NSObject, v6);
  v13 = sub_10022209C(v5, v7, 1, v8, v9, v10, v11, v12, (uint64_t)&OBJC_PROTOCOL___CRLBoardItemInsertionEditor);
  obj = (id)objc_claimAutoreleasedReturnValue(v13);

  if (objc_msgSend(obj, "canHandleInsertionOfBoardItems:insertionContext:", a1[4], a1[5]))
  {
    objc_storeStrong((id *)(*(_QWORD *)(a1[6] + 8) + 40), obj);
    *a3 = 1;
  }

}

uint64_t sub_1001D3274(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;

  v3 = a2;
  objc_opt_class(_TtC8Freeform21CRLConnectionLineItem, v4);
  v6 = sub_100221D0C(v5, v3);
  v7 = (void *)objc_claimAutoreleasedReturnValue(v6);

  if (!v7)
    goto LABEL_6;
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "getConnectedToWithBoardItemOwner:", *(_QWORD *)(a1 + 32)));
  if (!v8)
  {
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "getConnectedFromWithBoardItemOwner:", *(_QWORD *)(a1 + 32)));

    if (v9)
      goto LABEL_5;
LABEL_6:
    v10 = 1;
    goto LABEL_7;
  }

LABEL_5:
  v10 = 0;
LABEL_7:

  return v10;
}

uint64_t sub_1001D3E00(uint64_t a1, void *a2, void *a3)
{
  int v5;
  id v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;

  v5 = *(unsigned __int8 *)(a1 + 36);
  v6 = a3;
  if (v5)
  {
    objc_msgSend(a2, "alignmentFrameInRoot");
    v8 = v7;
    v10 = v9;
    v12 = v11;
    v14 = v13;
    objc_msgSend(v6, "alignmentFrameInRoot");
  }
  else
  {
    objc_msgSend(a2, "alignmentFrame");
    v8 = v19;
    v10 = v20;
    v12 = v21;
    v14 = v22;
    objc_msgSend(v6, "alignmentFrame");
  }
  v23 = v15;
  v24 = v16;
  v25 = v17;
  v26 = v18;

  v27 = sub_10005FD50(*(_DWORD *)(a1 + 32), v8, v10, v12, v14);
  v28 = sub_10005FD50(*(_DWORD *)(a1 + 32), v23, v24, v25, v26);
  if (v27 < v28)
    return -1;
  else
    return v27 > v28;
}

int64_t sub_1001D474C(id a1, CRLPair *a2, CRLPair *a3)
{
  CRLPair *v4;
  void *v5;
  double v6;
  double v7;
  void *v8;
  double v9;
  int64_t v10;

  v4 = a3;
  v5 = (void *)objc_claimAutoreleasedReturnValue(-[CRLPair second](a2, "second"));
  objc_msgSend(v5, "CGPointValue");
  v7 = v6;
  v8 = (void *)objc_claimAutoreleasedReturnValue(-[CRLPair second](v4, "second"));

  objc_msgSend(v8, "CGPointValue");
  if (v7 < v9)
    v10 = -1;
  else
    v10 = v7 > v9;

  return v10;
}

BOOL sub_1001D76EC(id a1, UIMenuElement *a2, unint64_t a3, BOOL *a4)
{
  UIMenuElement *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  __CFString *v9;

  v4 = a2;
  objc_opt_class(UIMenu, v5);
  v7 = sub_100221D0C(v6, v4);
  v8 = (void *)objc_claimAutoreleasedReturnValue(v7);

  v9 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "identifier"));
  LOBYTE(v4) = v9 == CFSTR("CRLDescriptionMenuIdentifier");

  return (char)v4;
}

void sub_1001D8584(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1001D85A0(uint64_t a1, void *a2, _BYTE *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  id v10;
  id obj;

  v10 = sub_100221DDC(a2, 1, (uint64_t)a3, a4, a5, a6, a7, a8, (uint64_t)&OBJC_PROTOCOL____TtP8Freeform18CRLTextInputEditor_);
  obj = (id)objc_claimAutoreleasedReturnValue(v10);
  if (objc_msgSend(obj, "wantsToReceiveTextInput"))
  {
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), obj);
    *a3 = 1;
  }

}

void sub_1001D877C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001D87FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001D88D4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  v3 = v2;

  _Unwind_Resume(a1);
}

void sub_1001D8B98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v12;
  va_list va;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  va_list va1;

  va_start(va1, a7);
  va_start(va, a7);
  v12 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);

  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);

  _Unwind_Resume(a1);
}

__n128 sub_1001D8C34(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)(a2 + 48);
  v3 = *(_OWORD *)(a2 + 64);
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v3;
  return result;
}

void sub_1001D8C44(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;

  v3 = a2;
  if (v3)
  {
    v10 = v3;
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "pureGeometryInRoot"));
    objc_msgSend(v4, "frame");
    v5 = *(_QWORD **)(*(_QWORD *)(a1 + 32) + 8);
    v5[6] = v6;
    v5[7] = v7;
    v5[8] = v8;
    v5[9] = v9;

    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 1;
    v3 = v10;
  }

}

void sub_1001D8CAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1001D8F3C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001D9240(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1001D92C8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001D92F8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

id sub_1001D9328(id a1, CRLCanvasElementInfo *a2)
{
  CRLCanvasElementInfo *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;

  v2 = a2;
  objc_opt_class(_TtC8Freeform12CRLBoardItem, v3);
  v5 = sub_100221D0C(v4, v2);
  v6 = (void *)objc_claimAutoreleasedReturnValue(v5);

  return v6;
}

void sub_1001D936C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001D965C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1001D9B8C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1001D9C50(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001D9C80(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001D9E70(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001DA69C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,void **a26)
{
  void *v26;
  void *v27;
  void *v28;
  void *v29;

  a26 = (void **)&a23;
  sub_1001DAD50(&a26);

  _Unwind_Resume(a1);
}

uint64_t sub_1001DA7F8(char **a1, unint64_t a2)
{
  uint64_t result;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  __int128 v12;
  int64x2_t v13;
  char *v14;
  uint64_t v15;
  int64x2_t v16;
  char *v17;
  uint64_t v18;

  v4 = a1[2];
  result = (uint64_t)(a1 + 2);
  if (0xCCCCCCCCCCCCCCCDLL * ((v4 - *a1) >> 3) < a2)
  {
    if (a2 >= 0x666666666666667)
      sub_100007810();
    v5 = a1[1] - *a1;
    v18 = result;
    v6 = (char *)sub_10014A874(result, a2);
    v9 = *a1;
    v8 = (unint64_t)a1[1];
    if ((char *)v8 == *a1)
    {
      v13 = vdupq_n_s64(v8);
      v10 = &v6[v5];
    }
    else
    {
      v10 = &v6[v5];
      do
      {
        v11 = *(_QWORD *)(v8 - 40);
        v8 -= 40;
        *(_QWORD *)v8 = 0;
        *((_QWORD *)v10 - 5) = v11;
        v10 -= 40;
        v12 = *(_OWORD *)(v8 + 8);
        *(_OWORD *)(v10 + 24) = *(_OWORD *)(v8 + 24);
        *(_OWORD *)(v10 + 8) = v12;
      }
      while ((char *)v8 != v9);
      v13 = *(int64x2_t *)a1;
    }
    *a1 = v10;
    a1[1] = &v6[v5];
    v16 = v13;
    v14 = a1[2];
    a1[2] = &v6[40 * v7];
    v17 = v14;
    v15 = v13.i64[0];
    return sub_1001DADBC((uint64_t)&v15);
  }
  return result;
}

void sub_1001DA8DC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001DA90C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001DAC64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void **a28)
{
  void *v28;

  a28 = (void **)&a20;
  sub_1001DAD50(&a28);

  _Unwind_Resume(a1);
}

void sub_1001DAD50(void ***a1)
{
  void **v1;
  char *v2;
  char *v4;
  void *v5;
  void *v6;

  v1 = *a1;
  v2 = (char *)**a1;
  if (v2)
  {
    v4 = (char *)v1[1];
    v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        v6 = (void *)*((_QWORD *)v4 - 5);
        v4 -= 40;

      }
      while (v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

uint64_t sub_1001DADBC(uint64_t a1)
{
  uint64_t i;
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 8);
  for (i = *(_QWORD *)(a1 + 16); i != v3; i = *(_QWORD *)(a1 + 16))
  {
    *(_QWORD *)(a1 + 16) = i - 40;

  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

void sub_1001DB468(id a1)
{
  id v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v12;

  v1 = objc_alloc_init((Class)NSMutableCharacterSet);
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSCharacterSet illegalCharacterSet](NSCharacterSet, "illegalCharacterSet"));
  objc_msgSend(v1, "formUnionWithCharacterSet:", v2);

  objc_msgSend(v1, "addCharactersInRange:", 14, 1);
  objc_msgSend(v1, "addCharactersInRange:", 65533, 1);
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSCharacterSet controlCharacterSet](NSCharacterSet, "controlCharacterSet"));
  objc_msgSend(v1, "formUnionWithCharacterSet:", v3);

  objc_msgSend(v1, "removeCharactersInRange:", 917504, 196608);
  objc_msgSend(v1, "removeCharactersInRange:", 10, 1);
  objc_msgSend(v1, "removeCharactersInRange:", 11, 1);
  objc_msgSend(v1, "removeCharactersInRange:", 8233, 1);
  objc_msgSend(v1, "removeCharactersInRange:", 8232, 1);
  objc_msgSend(v1, "removeCharactersInRange:", 13, 1);
  objc_msgSend(v1, "removeCharactersInRange:", 9, 1);
  objc_msgSend(v1, "removeCharactersInRange:", 173, 1);
  objc_msgSend(v1, "removeCharactersInRange:", 8203, 1);
  objc_msgSend(v1, "removeCharactersInRange:", 65279, 1);
  objc_msgSend(v1, "removeCharactersInRange:", 8204, 1);
  objc_msgSend(v1, "removeCharactersInRange:", 8205, 1);
  objc_msgSend(v1, "removeCharactersInRange:", 12, 1);
  objc_msgSend(v1, "removeCharactersInRange:", 78896, 16);
  v4 = objc_msgSend(v1, "copy");
  v5 = (void *)qword_101415020;
  qword_101415020 = (uint64_t)v4;

  objc_msgSend(v1, "removeCharactersInRange:", 1564, 1);
  objc_msgSend(v1, "removeCharactersInRange:", 8203, 5);
  objc_msgSend(v1, "removeCharactersInRange:", 8234, 5);
  objc_msgSend(v1, "removeCharactersInRange:", 8288, 5);
  objc_msgSend(v1, "removeCharactersInRange:", 8294, 4);
  v6 = (void *)qword_101415030;
  qword_101415030 = (uint64_t)v1;
  v12 = v1;

  v7 = objc_msgSend((id)qword_101415020, "mutableCopy");
  objc_msgSend(v7, "addCharactersInRange:", 65532, 1);
  v8 = (void *)qword_101415028;
  qword_101415028 = (uint64_t)v7;
  v9 = v7;

  v10 = objc_msgSend((id)qword_101415030, "mutableCopy");
  objc_msgSend(v10, "addCharactersInRange:", 65532, 1);
  v11 = (void *)qword_101415038;
  qword_101415038 = (uint64_t)v10;

}

void sub_1001DB6C8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001DB6F8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

uint64_t sub_1001DB728(uint64_t a1, void *a2, unint64_t a3, uint64_t a4, unint64_t a5, unint64_t a6)
{
  __CFString *v10;
  uint64_t v11;
  const char *CStringPtr;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  UniChar v18;
  BOOL v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  CFRange v26;
  uint64_t v27;
  UniChar buffer[8];
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  CFStringRef theString;
  const UniChar *CharactersPtr;
  const char *v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v10 = a2;
  v11 = 0x7FFFFFFFFFFFFFFFLL;
  theString = v10;
  v40 = a3;
  v41 = a4;
  CharactersPtr = CFStringGetCharactersPtr(v10);
  if (CharactersPtr)
    CStringPtr = 0;
  else
    CStringPtr = CFStringGetCStringPtr(v10, 0x600u);
  v35 = 0u;
  v36 = 0u;
  v33 = 0u;
  v34 = 0u;
  v31 = 0u;
  v32 = 0u;
  *(_OWORD *)buffer = 0u;
  v30 = 0u;
  v42 = 0;
  v43 = 0;
  v39 = CStringPtr;
  if (a3 < a3 + a4)
  {
    v13 = 0;
    v14 = 0;
    v15 = 0;
    v16 = 64;
    while (1)
    {
      v17 = (unint64_t)v14 >= 4 ? 4 : v14;
      if (v14 < 0 || v41 <= v14)
      {
        v18 = 0;
      }
      else if (CharactersPtr)
      {
        v18 = CharactersPtr[v14 + v40];
      }
      else if (v39)
      {
        v18 = v39[v40 + v14];
      }
      else
      {
        if (v43 <= v14 || v15 > v14)
        {
          v21 = -v17;
          v22 = v17 + v13;
          v23 = v16 - v17;
          v24 = v14 + v21;
          v25 = v24 + 64;
          if (v24 + 64 >= v41)
            v25 = v41;
          v42 = v24;
          v43 = v25;
          v26.location = v24 + v40;
          if (v41 >= v23)
            v27 = v23;
          else
            v27 = v41;
          v26.length = v27 + v22;
          CFStringGetCharacters(theString, v26, buffer);
          v15 = v42;
        }
        v18 = buffer[v14 - v15];
      }
      v19 = v18 >= a5;
      v20 = v18 - a5;
      if (v19 && v20 < a6)
        break;
      ++v14;
      --v13;
      ++v16;
      if (a4 == v14)
      {
        v11 = 0x7FFFFFFFFFFFFFFFLL;
        goto LABEL_31;
      }
    }
    v11 = a3 + v14;
  }
LABEL_31:

  return v11;
}

void sub_1001DB8F4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001DB924(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001DBE9C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001DBECC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001DBEFC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001DBF2C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001DC290(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001DC2C0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001DC65C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001DC68C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001DC94C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001DC97C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001DCC20(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001DCC50(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001DCEA4(uint64_t a1)
{
  double *v2;
  double v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;

  +[NSDate timeIntervalSinceReferenceDate](NSDate, "timeIntervalSinceReferenceDate");
  v2 = *(double **)(a1 + 32);
  if (v3 - v2[9] > 0.190000003)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "p_delegate"));
    objc_msgSend(v4, "removeCollaboratorHUDController:", *(_QWORD *)(a1 + 32));

    v5 = *(_QWORD *)(a1 + 32);
    v6 = *(void **)(v5 + 56);
    *(_QWORD *)(v5 + 56) = 0;

    v7 = *(_QWORD *)(a1 + 32);
    v8 = *(void **)(v7 + 280);
    *(_QWORD *)(v7 + 280) = 0;

    v9 = *(_QWORD *)(a1 + 32);
    v10 = *(void **)(v9 + 288);
    *(_QWORD *)(v9 + 288) = 0;

  }
}

id sub_1001DCF38(uint64_t a1)
{
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 280), "setAlpha:", 0.0);
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 288), "setAlpha:", 0.0);
}

void sub_1001DD92C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001DD95C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001DD98C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001DD9BC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001DE5D4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001DE604(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001DE634(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001DE664(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001DE694(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLCollaboratorCursorCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D91E0;
  off_1013D91E0 = v2;

}

void sub_1001DEF08(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001DEF38(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001DEF68(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001DEF98(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001DEFC8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001DEFF8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001DF028(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001DF058(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001DF200(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001DF230(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001DF3C8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001DF3F8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001DFB54(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;

  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "p_fontForFollowButtonString"));
  objc_msgSend(*(id *)(a1 + 32), "p_sizeForString:font:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 120), v5);
  v2 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(v2 + 192) = v3;
  *(_QWORD *)(v2 + 200) = v4;

}

void sub_1001DFCBC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;

  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "p_fontForDisplayString"));
  objc_msgSend(*(id *)(a1 + 32), "p_sizeForString:font:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 104), v5);
  v2 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(v2 + 160) = v3;
  *(_QWORD *)(v2 + 168) = v4;

}

void sub_1001DFD0C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;

  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "p_fontForDisplayString"));
  objc_msgSend(*(id *)(a1 + 32), "p_sizeForString:font:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 112), v5);
  v2 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(v2 + 176) = v3;
  *(_QWORD *)(v2 + 184) = v4;

}

void sub_1001E0444(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001E0474(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001E069C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001E06CC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

double sub_1001E0924()
{
  double v0;

  return v0;
}

id sub_1001E0944(id a1)
{
  return a1;
}

void sub_1001E0F68(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001E0F98(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001E13B0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001E13E0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001E1410(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001E1440(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001E17D4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001E1804(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001E1834(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001E1864(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

id sub_1001E1A5C(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_accessibilityUnregister");
}

id sub_1001E1E14(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "addObject:", a2);
}

uint64_t sub_1001E24E8(uint64_t a1)
{
  uint64_t result;

  result = objc_opt_respondsToSelector(*(_QWORD *)(a1 + 32), "_accessibilitySetIsSpeakThisElement:");
  if ((result & 1) != 0)
    return (uint64_t)_objc_msgSend(*(id *)(a1 + 32), "_accessibilitySetIsSpeakThisElement:", *(unsigned __int8 *)(a1 + 40));
  return result;
}

void sub_1001E26D0(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "crlaxTarget"));
  objc_msgSend(v1, "setNeedsInputViewsReloaded");

}

id sub_1001E291C(uint64_t a1)
{
  uint64_t v1;
  objc_super v3;

  v1 = *(_QWORD *)(a1 + 32);
  v3.receiver = *(id *)(a1 + 40);
  v3.super_class = (Class)CRLTextInputResponderAccessibility;
  return objc_msgSendSuper2(&v3, "forwardInvocation:", v1);
}

BOOL sub_1001E3920(id a1, _TtC8Freeform12CRLBoardItem *a2)
{
  _TtC8Freeform12CRLBoardItem *v2;
  uint64_t v3;
  uint64_t v4;
  char isKindOfClass;

  v2 = a2;
  v4 = objc_opt_class(_TtC8Freeform21CRLConnectionLineItem, v3);
  isKindOfClass = objc_opt_isKindOfClass(v2, v4);

  return isKindOfClass & 1;
}

BOOL sub_1001E3BEC(id a1, _TtC8Freeform12CRLBoardItem *a2)
{
  _TtC8Freeform12CRLBoardItem *v2;
  uint64_t v3;
  uint64_t v4;
  char isKindOfClass;

  v2 = a2;
  v4 = objc_opt_class(_TtC8Freeform21CRLConnectionLineItem, v3);
  isKindOfClass = objc_opt_isKindOfClass(v2, v4);

  return isKindOfClass & 1;
}

id sub_1001E3DBC(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "p_didEnterBackground");
  if ((result & 1) == 0)
    return objc_msgSend(*(id *)(a1 + 32), "p_reloadAllPresetCollectionViewControllers");
  return result;
}

id sub_1001E41C8(uint64_t a1, void *a2)
{
  void *v2;
  id v3;
  void *v4;
  id v5;

  v2 = *(void **)(a1 + 32);
  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "childItems"));
  v5 = objc_msgSend(v4, "containsObject:", v3);

  return v5;
}

void sub_1001E421C(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  void *v6;
  void *v7;
  unsigned int v8;
  id v9;

  v9 = a2;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "details"));
  if (objc_msgSend(v6, "containsProperty:", 7))
  {

LABEL_4:
    objc_msgSend(*(id *)(a1 + 32), "dismissViewControllerAnimated:completion:", 1, 0);
    *a4 = 1;
    goto LABEL_5;
  }
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "details"));
  v8 = objc_msgSend(v7, "containsProperty:", 6);

  if (v8)
    goto LABEL_4;
LABEL_5:

}

void sub_1001E4584(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001E45B4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001E47F4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001E4824(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001E4A04(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001E4A34(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001E4C30(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001E4C60(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001E4E40(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001E4E70(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001E5008(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001E5038(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001E5228(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001E5258(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001E53EC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001E541C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001E55CC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001E55FC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001E579C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001E57CC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001E5ACC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;

  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1001E5AF0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001E5B20(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001E5B50(uint64_t a1, uint64_t a2)
{
  objc_class *v3;
  id v4;
  void *v5;
  uint64_t v6;
  objc_class *v7;
  id v8;
  void *v9;
  id v10;
  id *v11;
  id WeakRetained;
  void *v13;
  void *v14;
  _QWORD v15[4];
  id v16;

  if ((a2 & 1) != 0 || *(_BYTE *)(a1 + 80))
  {
    objc_opt_class(CRLiOSPresetCollectionViewController, a2);
    v4 = sub_1002223BC(v3, *(void **)(a1 + 32));
    v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
    objc_msgSend(v5, "reloadData");
    if (*(_QWORD *)(a1 + 64) == 2 && *(_QWORD *)(a1 + 72) == 1)
    {
      objc_opt_class(CRLiOSPresetCollectionViewController, v6);
      v8 = sub_1002223BC(v7, *(void **)(a1 + 40));
      v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
      objc_msgSend(v9, "scrollToTop");

    }
    v10 = objc_msgSend(*(id *)(a1 + 48), "length");
    v11 = (id *)(a1 + 56);
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "p_announcementTimer"));
    v14 = v13;
    if (v10)
    {
      v15[0] = _NSConcreteStackBlock;
      v15[1] = 3221225472;
      v15[2] = sub_1001E5CA0;
      v15[3] = &unk_10122D4C0;
      objc_copyWeak(&v16, v11);
      objc_msgSend(v14, "afterDelay:processBlock:", v15, 1.0);

      objc_destroyWeak(&v16);
    }
    else
    {
      objc_msgSend(v13, "cancel");

    }
  }
}

void sub_1001E5C8C(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1001E5CA0(uint64_t a1)
{
  void *v2;
  id WeakRetained;
  void *v4;
  void *v5;
  id v6;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "localizedStringForKey:value:table:", CFSTR("%lu match(es) found"), 0, 0));

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "p_shapeSearchResultsCollection"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSString localizedStringWithFormat:](NSString, "localizedStringWithFormat:", v6, objc_msgSend(v4, "numberOfShapes")));

  UIAccessibilityPostNotification(UIAccessibilityAnnouncementNotification, v5);
}

void sub_1001E5F0C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001E5F3C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001E6108(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001E6138(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001E62F0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001E6320(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001E653C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001E656C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001E6728(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001E6758(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001E69E8(uint64_t a1, char a2)
{
  void *v3;
  unsigned int v4;
  void *v5;
  void *v6;
  id v7;

  v3 = *(void **)(a1 + 32);
  if ((a2 & 1) != 0)
  {
    v4 = objc_msgSend(v3, "p_shouldChangeSelectedShapes");
    v5 = *(void **)(a1 + 32);
    if (v4)
    {
      _objc_msgSend(v5, "p_changeSelectedShapesToItemAtIndexPath:forPresetCollectionViewController:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
    }
    else
    {
      v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "p_delegate"));
      objc_msgSend(v6, "willInsertBoardItemsFromShapeLibraryViewController:", *(_QWORD *)(a1 + 32));

      v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "contextWithPresetCollectionViewController:", *(_QWORD *)(a1 + 48)));
      if (!objc_msgSend(*(id *)(a1 + 48), "presetCollectionType"))
        objc_msgSend(*(id *)(a1 + 32), "p_insertShapeAtIndexPath:context:", *(_QWORD *)(a1 + 40), v7);
      objc_msgSend(*(id *)(a1 + 32), "p_dismissIfNeededWithBlock:", 0);

    }
  }
  else
  {
    objc_msgSend(v3, "dismissViewControllerAnimated:completion:", 1, 0);
  }
}

void sub_1001E71A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  _Block_object_dispose(&a34, 8);
  _Unwind_Resume(a1);
}

void sub_1001E71E0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001E7210(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

uint64_t sub_1001E7240(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1001E7250(uint64_t a1)
{

}

void sub_1001E7258(_QWORD *a1, void *a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  void *v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  CGFloat v42;
  double v43;
  CGFloat v44;
  double v45;
  double v46;
  double v47;
  CGFloat v48;
  double v49;
  CGFloat v50;
  double v51;
  double v52;
  CGFloat v53;
  double v54;
  double v55;
  double v56;
  double v57;
  double v58;
  double v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  double v65;
  double v66;
  double v67;
  double v68;
  double v69;
  double v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  double y;
  double x;
  CGFloat v77;
  double v78;
  CGFloat v79;
  double v80;
  CGFloat v81;
  CGFloat v82;
  CGFloat v83;
  double height;
  CGFloat v85;
  double width;
  CGAffineTransform v87;
  CGAffineTransform v88;
  CGAffineTransform v89;
  _OWORD v90[3];
  CGRect v91;
  CGRect v92;
  CGRect v93;
  CGRect v94;
  CGRect v95;
  CGRect v96;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "layoutForInfo:", a1[4]));
  v4 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "i_wrapPath"));
  v5 = *(_QWORD *)(a1[5] + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v4;

  v7 = *(void **)(*(_QWORD *)(a1[5] + 8) + 40);
  if (v3)
    objc_msgSend(v3, "transform");
  else
    memset(v90, 0, sizeof(v90));
  objc_msgSend(v7, "transformUsingAffineTransform:", v90);
  v9 = a1[6];
  if (v9 <= 0x13 && ((1 << v9) & 0xC0004) != 0)
  {
    objc_opt_class(CRLConnectionLineAbstractLayout, v8);
    v11 = sub_100221D0C(v10, v3);
    v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
    objc_msgSend(v12, "tailPoint");
    v14 = v13;
    v16 = v15;
    objc_msgSend(v12, "getControlKnobPosition:", 12);
    v18 = v17;
    v20 = v19;
    objc_msgSend(v12, "headPoint");
    v22 = v21;
    v24 = v23;
    objc_msgSend(v12, "pathBounds");
    v26 = v25;
    v27 = sub_1000603B8(v14, v16, v25);
    v29 = v28;
    v30 = sub_1000603B8(v18, v20, v26);
    v32 = v31;
    v33 = sub_1000603B8(v22, v24, v26);
    v35 = v34;
    v36 = (void *)objc_claimAutoreleasedReturnValue(+[CRLCanvasKnob defaultSelectionKnobImage](CRLCanvasKnob, "defaultSelectionKnobImage"));
    objc_msgSend(v36, "size");
    v38 = v37;

    v39 = sub_10005FD98(v30, v32, v38);
    v83 = v40;
    v85 = v39;
    v42 = v41;
    v44 = v43;
    v45 = sub_10005FD98(v27, v29, v38);
    v77 = v46;
    v79 = v45;
    v48 = v47;
    v50 = v49;
    v51 = sub_10005FD98(v33, v35, v38);
    v53 = v52;
    v81 = v55;
    v82 = v54;
    if (v3)
      objc_msgSend(v3, "transform");
    else
      memset(&v89, 0, sizeof(v89));
    v91.origin.y = v83;
    v91.origin.x = v85;
    v91.size.width = v42;
    v91.size.height = v44;
    v92 = CGRectApplyAffineTransform(v91, &v89);
    y = v92.origin.y;
    x = v92.origin.x;
    height = v92.size.height;
    width = v92.size.width;
    if (v3)
      objc_msgSend(v3, "transform", *(_QWORD *)&v92.origin.y, *(_QWORD *)&v92.origin.x);
    else
      memset(&v88, 0, sizeof(v88));
    v93.origin.y = v77;
    v93.origin.x = v79;
    v93.size.width = v48;
    v93.size.height = v50;
    v94 = CGRectApplyAffineTransform(v93, &v88);
    v56 = v94.origin.x;
    v57 = v94.origin.y;
    v78 = v94.size.height;
    v80 = v94.size.width;
    if (v3)
      objc_msgSend(v3, "transform");
    else
      memset(&v87, 0, sizeof(v87));
    v95.origin.x = v51;
    v95.origin.y = v53;
    v95.size.height = v81;
    v95.size.width = v82;
    v96 = CGRectApplyAffineTransform(v95, &v87);
    v58 = v96.origin.x;
    v59 = v96.origin.y;
    v60 = v96.size.width;
    v61 = v96.size.height;
    v62 = sub_1000630C4(x, y);
    v64 = v63;
    v65 = sub_1000630C4(v56, v57);
    v67 = v66;
    v68 = sub_1000630C4(v58, v59);
    v70 = v69;
    objc_msgSend(*(id *)(*(_QWORD *)(a1[5] + 8) + 40), "appendBezierPathWithOvalInRect:", v62, v64, width, height);
    objc_msgSend(*(id *)(*(_QWORD *)(a1[5] + 8) + 40), "appendBezierPathWithOvalInRect:", v65, v67, v80, v78);
    objc_msgSend(*(id *)(*(_QWORD *)(a1[5] + 8) + 40), "appendBezierPathWithOvalInRect:", v68, v70, v60, v61);
    v71 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1[5] + 8) + 40), "arrayOfSubpathsWithEffectivelyEmptySubpathsRemoved:", 0));
    v72 = objc_claimAutoreleasedReturnValue(+[CRLBezierPath uniteBezierPaths:](CRLBezierPath, "uniteBezierPaths:", v71));
    v73 = *(_QWORD *)(a1[5] + 8);
    v74 = *(void **)(v73 + 40);
    *(_QWORD *)(v73 + 40) = v72;

  }
}

id sub_1001E760C(uint64_t a1)
{
  id v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;

  v2 = objc_alloc_init((Class)UIDragPreviewParameters);
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor clearColor](UIColor, "clearColor"));
  objc_msgSend(v2, "setBackgroundColor:", v3);

  v4 = (void *)objc_claimAutoreleasedReturnValue(+[UIBezierPath bezierPathWithCGPath:](UIBezierPath, "bezierPathWithCGPath:", objc_msgSend(objc_retainAutorelease(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40)), "CGPath")));
  objc_msgSend(v2, "setVisiblePath:", v4);

  v5 = objc_alloc((Class)UIImageView);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), "image"));
  v7 = objc_msgSend(v5, "initWithImage:", v6);

  v8 = objc_msgSend(objc_alloc((Class)UIDragPreview), "initWithView:parameters:", v7, v2);
  return v8;
}

void sub_1001E800C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001E803C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001E82C8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001E82F8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001E9028(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001E9058(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001E9088(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001E90B8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

NSUInteger sub_1001E966C(NSRange a1, NSRange a2, int a3)
{
  NSUInteger length;
  NSUInteger location;
  NSUInteger v6;
  NSUInteger v7;
  NSRange v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  NSUInteger v12;
  NSUInteger v13;
  NSUInteger v14;

  length = a2.length;
  location = a2.location;
  v6 = a1.length;
  v7 = a1.location;
  v8 = NSIntersectionRange(a1, a2);
  if (length)
    v9 = v6 == 0;
  else
    v9 = 1;
  if (v9)
    v10 = 0;
  else
    v10 = 0x7FFFFFFFFFFFFFFFLL;
  if (v7 | location)
    v11 = 0x7FFFFFFFFFFFFFFFLL;
  else
    v11 = v10;
  if (v8 == 0uLL)
    v12 = v11;
  else
    v12 = v8.location;
  if (location + length == v7)
    v13 = v7;
  else
    v13 = v12;
  if (v7 + v6 == location)
    v14 = location;
  else
    v14 = v13;
  if (a3)
    return v14;
  else
    return v12;
}

NSUInteger sub_1001E9700(NSRange a1, NSRange range1)
{
  if (a1.location != range1.location + range1.length)
  {
    if (a1.location + a1.length == range1.location)
      a1.location = range1.location;
    else
      a1.location = NSIntersectionRange(a1, range1).location;
  }
  return a1.location;
}

uint64_t sub_1001E9730()
{
  return 0x3000000000001;
}

BOOL sub_1001E973C(unint64_t a1)
{
  return a1 > 0x3000000000001;
}

BOOL sub_1001E9750(unint64_t a1)
{
  return a1 < 0x3000000000002;
}

uint64_t sub_1001E9764(uint64_t result, _WORD *a2, _WORD *a3, _DWORD *a4)
{
  if (a2)
    *a2 = HIWORD(result);
  if (a3)
    *a3 = WORD2(result);
  if (a4)
    *a4 = result;
  return result;
}

uint64_t sub_1001E9788(uint64_t a1, uint64_t a2, unsigned int a3)
{
  return (a1 << 48) | (a2 << 32) | a3;
}

NSString *sub_1001E979C(unint64_t a1)
{
  return +[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%u.%u.%u"), HIWORD(a1), WORD2(a1), a1);
}

uint64_t sub_1001E97DC(double a1)
{
  return (uint64_t)a1;
}

double sub_1001E97E8(double a1, double a2, double a3)
{
  return a2 * a3;
}

BOOL sub_1001E97FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a1 == a3 && a2 == a4;
}

uint64_t sub_1001E980C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

CGFloat sub_1001E9818@<D0>(uint64_t *a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  CGFloat result;
  CGRect v14;

  v10 = (uint64_t)a2;
  v11 = (uint64_t)a3;
  v12 = (uint64_t)(CGRectGetMaxX(*(CGRect *)&a2) - (double)(uint64_t)a2);
  v14.origin.x = a2;
  v14.origin.y = a3;
  v14.size.width = a4;
  v14.size.height = a5;
  result = CGRectGetMaxY(v14) - (double)(uint64_t)a3;
  *a1 = v10;
  a1[1] = v11;
  a1[2] = v12;
  a1[3] = (uint64_t)result;
  return result;
}

CGFloat sub_1001E98A4@<D0>(uint64_t *a1@<X8>, double a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>, double a6@<D4>)
{
  double v7;
  CGFloat v8;
  CGFloat v9;
  CGFloat v10;

  v7 = sub_100060FD8(a2, a3, a4, a5, a6);
  return sub_1001E9818(a1, v7, v8, v9, v10);
}

uint64_t sub_1001E98C8(_QWORD *a1)
{
  return a1[2] + *a1;
}

uint64_t sub_1001E98D8(uint64_t a1)
{
  return *(_QWORD *)(a1 + 8);
}

uint64_t sub_1001E98E0(uint64_t a1)
{
  return *(_QWORD *)(a1 + 24) + *(_QWORD *)(a1 + 8);
}

BOOL sub_1001E98F0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  if (a2 <= *a1)
    return 0;
  if (a2 >= a1[2] + *a1)
    return 0;
  v3 = a1[1];
  return a3 > v3 && a3 < a1[3] + v3;
}

int64x2_t sub_1001E9934@<Q0>(int64x2_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int64x2_t *a4@<X8>)
{
  uint64_t v4;
  int64x2_t v5;
  int64x2_t result;

  v4 = a1->i64[1] + a3;
  v5.i64[0] = a2;
  v5.i64[1] = a3;
  a4->i64[0] = a1->i64[0] + a2;
  a4->i64[1] = v4;
  result = vsubq_s64(a1[1], vaddq_s64(v5, v5));
  a4[1] = result;
  return result;
}

uint64_t sub_1001E9960(uint64_t a1)
{
  return qword_100EEE4A8[2 * a1];
}

uint64_t sub_1001E9974(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1 - a3;
}

uint64_t sub_1001E9980(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a4 * a2 + a3 * a1;
}

uint64_t sub_1001E998C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 - a3;
  if (a1 - a3 < 0)
    v4 = a3 - a1;
  v5 = a2 - a4;
  if (a2 - a4 < 0)
    v5 = a4 - a2;
  return v4 + v5;
}

void sub_1001E9D90(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001E9DC0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001E9DF0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001E9E20(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001E9E50(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001E9E80(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001EA4C8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001EA4F8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001EB268(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001EB298(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001EB424(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001EB454(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001EC388(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001EC3B8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001EC550(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001EC580(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001EC998(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001EC9C8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001ECEB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,id location)
{
  id *v27;

  objc_destroyWeak(v27);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1001ECED8(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;

  v2 = *(void **)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:"));
  v8 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "combineUUIDWithUUID:mixValue:", v3, objc_msgSend(v4, "unsignedIntValue") + 500));

  os_unfair_lock_lock((os_unfair_lock_t)(*(_QWORD *)(a1 + 48) + 148));
  v5 = *(void **)(*(_QWORD *)(a1 + 48) + 104);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "id"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectForKeyedSubscript:", v6));

  if (v7)
  {
    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 48) + 120), "setObject:forKeyedSubscript:", 0, v7);
    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 48) + 128), "setObject:forKeyedSubscript:", 0, v7);
    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 48) + 136), "setObject:forKeyedSubscript:", 0, v7);
  }
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 48) + 120), "setObject:forKeyedSubscript:", *(_QWORD *)(a1 + 64), v8);
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 48) + 128), "setObject:forKeyedSubscript:", *(_QWORD *)(a1 + 56), v8);
  os_unfair_lock_unlock((os_unfair_lock_t)(*(_QWORD *)(a1 + 48) + 148));

}

void sub_1001ECFEC(uint64_t a1)
{
  id WeakRetained;
  _QWORD block[4];
  id v4;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    objc_msgSend(*(id *)(a1 + 32), "p_updatePKStrokesForShapeItemsIfNeeded:boardIdentifier:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1001ED07C;
    block[3] = &unk_10122D110;
    v4 = WeakRetained;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  }
}

id sub_1001ED07C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_updateObservers");
}

void sub_1001ED808(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001ED838(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

id sub_1001EDBC4(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "containsObject:", a2);
}

void sub_1001EEDEC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001EEE44(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001EEE74(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001EEF4C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1001EF048(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1001EF2E4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001EF348(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001EF378(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001EF618(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001EF67C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001EF6AC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001EF7C4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1001EF868(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001EFC34(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001EFC64(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001EFC94(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_1001EFCC4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_1001EFF5C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001EFF8C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

BOOL sub_1001F020C(uint64_t a1, void *a2)
{
  void *v3;
  _BOOL8 v4;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "observerIgnoringCount"));
  v4 = v3 == *(void **)(a1 + 32);

  return v4;
}

void sub_1001F035C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001F055C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24)
{
  void *v24;

  objc_sync_exit(v24);
  _Unwind_Resume(a1);
}

uint64_t sub_1001F0590(uint64_t result)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(result + 40) + 8) + 24) = *(_QWORD *)(*(_QWORD *)(result + 32) + 32) > 0;
  return result;
}

id sub_1001F05AC(uint64_t a1)
{
  uint64_t v1;

  v1 = 48;
  if (!*(_BYTE *)(a1 + 56))
    v1 = 40;
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + v1), "setObject:forKey:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
}

void sub_1001F0CC4()
{
  objc_end_catch();
  JUMPOUT(0x1001F0EF4);
}

void sub_1001F0CD0(uint64_t a1, int a2)
{
  if (a2)
    objc_terminate();
  JUMPOUT(0x1001F0EF4);
}

void sub_1001F0CD8(void *a1, int a2)
{
  const char *v2;
  id v3;
  uint64_t v4;
  void *v5;
  NSString *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  NSString *v12;
  void *v13;

  if (a2)
  {
    if (a2 != 2)
    {
      objc_begin_catch(a1);
      JUMPOUT(0x1001F0C08);
    }
    v3 = objc_begin_catch(a1);
    v4 = +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101243FC0);
    v5 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)v5, OS_LOG_TYPE_ERROR))
    {
      v6 = NSStringFromSelector(v2);
      v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
      sub_100E0BA4C(v7, (uint64_t)&STACK[0x230], v4, v5);
    }

    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101243FE0);
    v8 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)v8, OS_LOG_TYPE_ERROR))
    {
      v9 = (void *)objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
      sub_100E02830(v9, (uint8_t *)&STACK[0x210], v4, (os_log_t)v8);
    }

    v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLChangeNotifier p_processChanges:preprocessing:]"));
    v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLChangeNotifier.m"));
    v12 = NSStringFromSelector(v2);
    v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v10, v11, 310, 0, "Exception thrown during %@; some observers may not have been notified.");

    objc_exception_rethrow();
  }
  JUMPOUT(0x1001F0EF4);
}

void sub_1001F0EB8(uint64_t a1, int a2)
{
  if (a2)
  {
    objc_end_catch();
    JUMPOUT(0x1001F0D40);
  }
  JUMPOUT(0x1001F0EF4);
}

void sub_1001F0EE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id obj)
{
  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

void sub_1001F0EFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  CKRecordID v25;
  Swift::String v26;
  uint64_t v27;

  v2 = (uint64_t *)(a1 + 32);
  v1 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(v1 + 32);
  if (v3 < 0)
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101243F00);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E0BC0C();
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101243F20);
    v15 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100DE7468(v15);
    v27 = *(_QWORD *)(*v2 + 32);
    sub_1001BC7E8((uint64_t)"Fatal Assertion failure: %{public}s %{public}s:%d _currentlyNotifyingCount managed to get negative! %zi", v16, v17, v18, v19, v20, v21, v22, (uint64_t)"-[CRLChangeNotifier p_processChanges:preprocessing:]_block_invoke");
    v23 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLChangeNotifier p_processChanges:preprocessing:]_block_invoke"));
    v24 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLChangeNotifier.m"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v23, v24, 238, 1, "_currentlyNotifyingCount managed to get negative! %zi", *(_QWORD *)(*v2 + 32), "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLChangeNotifier.m", 238, v27);

    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v25, v26);
    abort();
  }
  *(_QWORD *)(v1 + 32) = v3 + 1;
  v4 = *v2;
  if (*(_QWORD *)(*v2 + 32) == 1)
  {
    if (*(_QWORD *)(v4 + 48))
    {
      +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101243F40);
      if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
        sub_100E0BB74();
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101243F60);
      v5 = off_1013D9070;
      if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
        sub_100DE7468(v5);
      v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLChangeNotifier p_processChanges:preprocessing:]_block_invoke"));
      v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLChangeNotifier.m"));
      +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v6, v7, 242, 0, "expected nil value for '%{public}s'", "_classObserversToCheckForRemovalAfterNotifications");

      v4 = *v2;
    }
    if (*(_QWORD *)(v4 + 40))
    {
      +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101243F80);
      if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
        sub_100E0BADC();
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101243FA0);
      v8 = off_1013D9070;
      if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
        sub_100DE7468(v8);
      v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLChangeNotifier p_processChanges:preprocessing:]_block_invoke"));
      v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLChangeNotifier.m"));
      +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v9, v10, 243, 0, "expected nil value for '%{public}s'", "_objectObserversToCheckForRemovalAfterNotifications");

    }
    v11 = objc_msgSend(objc_alloc((Class)NSMapTable), "initWithKeyOptions:valueOptions:capacity:", 512, 517, 0);
    v12 = *(void **)(*v2 + 48);
    *(_QWORD *)(*v2 + 48) = v11;

    v13 = objc_msgSend(objc_alloc((Class)NSMapTable), "initWithKeyOptions:valueOptions:capacity:", 512, 517, 0);
    v14 = *(void **)(*v2 + 40);
    *(_QWORD *)(*v2 + 40) = v13;

  }
}

void sub_1001F133C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001F136C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001F139C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001F13CC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001F13FC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001F142C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001F145C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001F148C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

_QWORD *sub_1001F14BC(uint64_t a1)
{
  uint64_t v1;
  id *v2;
  uint64_t v3;
  _QWORD *result;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  CKRecordID v17;
  Swift::String v18;
  uint64_t v19;

  v2 = (id *)(a1 + 32);
  v1 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(v1 + 32);
  if (v3 <= 0)
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101244000);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E0BCA0();
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101244020);
    v7 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100DE7468(v7);
    v19 = *((_QWORD *)*v2 + 4);
    sub_1001BC7E8((uint64_t)"Fatal Assertion failure: %{public}s %{public}s:%d _currentlyNotifyingCount should be > 0! %zi", v8, v9, v10, v11, v12, v13, v14, (uint64_t)"-[CRLChangeNotifier p_processChanges:preprocessing:]_block_invoke");
    v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLChangeNotifier p_processChanges:preprocessing:]_block_invoke"));
    v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLChangeNotifier.m"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v15, v16, 321, 1, "_currentlyNotifyingCount should be > 0! %zi", *((_QWORD *)*v2 + 4), "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLChangeNotifier.m", 321, v19);

    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v17, v18);
    abort();
  }
  *(_QWORD *)(v1 + 32) = v3 - 1;
  result = *v2;
  if (!*((_QWORD *)*v2 + 4))
  {
    objc_msgSend(result, "p_removeZeroCountObserversInMap:fromCountedObserversByChangeSourceMap:", result[6], result[2]);
    v5 = (void *)*((_QWORD *)*v2 + 6);
    *((_QWORD *)*v2 + 6) = 0;

    objc_msgSend(*v2, "p_removeZeroCountObserversInMap:fromCountedObserversByChangeSourceMap:", *((_QWORD *)*v2 + 5), *((_QWORD *)*v2 + 1));
    v6 = (void *)*((_QWORD *)*v2 + 5);
    *((_QWORD *)*v2 + 5) = 0;

    objc_msgSend(*v2, "p_trimChangeSourceToCountedObserversMap:", *((_QWORD *)*v2 + 2));
    return objc_msgSend(*v2, "p_trimChangeSourceToCountedObserversMap:", *((_QWORD *)*v2 + 1));
  }
  return result;
}

void sub_1001F16C4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001F16F4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001F188C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL sub_1001F190C(id a1, CRLCountedObserver *a2, NSDictionary *a3)
{
  void *v3;
  BOOL v4;

  v3 = (void *)objc_claimAutoreleasedReturnValue(-[CRLCountedObserver observerIgnoringCount](a2, "observerIgnoringCount", a3));
  v4 = v3 != 0;

  return v4;
}

void sub_1001F26D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  void *v16;
  void *v17;
  void *v18;

  _Unwind_Resume(a1);
}

void sub_1001F281C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001F284C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001F287C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001F28AC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001F28DC(uint64_t a1, _BYTE *a2)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  if (v4 == v5 << 6)
  {
    if ((uint64_t)(v4 + 1) < 0)
      sub_100007810();
    v6 = v5 << 7;
    if (v6 <= (v4 & 0xFFFFFFFFFFFFFFC0) + 64)
      v6 = (v4 & 0xFFFFFFFFFFFFFFC0) + 64;
    if (v4 <= 0x3FFFFFFFFFFFFFFELL)
      v7 = v6;
    else
      v7 = 0x7FFFFFFFFFFFFFFFLL;
    sub_1001F466C((char **)a1, v7);
    v4 = *(_QWORD *)(a1 + 8);
  }
  *(_QWORD *)(a1 + 8) = v4 + 1;
  v8 = *(char **)a1;
  v9 = v4 >> 6;
  v10 = 1 << v4;
  if (*a2)
    v11 = *(_QWORD *)&v8[8 * v9] | v10;
  else
    v11 = *(_QWORD *)&v8[8 * v9] & ~v10;
  *(_QWORD *)&v8[8 * v9] = v11;
}

void sub_1001F2980(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001F29B0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001F29E0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001F2A10(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001F38A4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001F3A7C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001F3AAC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001F3ADC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001F3B0C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001F3B3C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001F3B6C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001F3B9C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001F3BCC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001F3BFC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001F3C2C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001F3C5C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001F3C8C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001F3ED8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001F4018(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001F40C8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001F4154(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001F4320(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001F466C(char **a1, unint64_t a2)
{
  unint64_t v3;
  char *v4;
  __int128 v5;
  char *v6;
  int v7;
  char *v8;
  int v9;
  char *v10;
  __int128 v11;

  if (a2 > (_QWORD)a1[2] << 6)
  {
    if ((a2 & 0x8000000000000000) != 0)
      sub_100007810();
    v10 = 0;
    v11 = 0uLL;
    sub_1001F4728(&v10, a2);
    v3 = (unint64_t)a1[1];
    v8 = *a1;
    v9 = 0;
    v6 = &v8[8 * (v3 >> 6)];
    v7 = v3 & 0x3F;
    sub_1001F476C(&v10, (uint64_t)&v8, (uint64_t)&v6, v3);
    v4 = *a1;
    *a1 = v10;
    v10 = v4;
    v5 = *(_OWORD *)(a1 + 1);
    *(_OWORD *)(a1 + 1) = v11;
    v11 = v5;
    if (v4)
      operator delete(v4);
  }
}

void sub_1001F4710(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void *sub_1001F4728(_QWORD *a1, uint64_t a2)
{
  void *result;
  uint64_t v4;

  if (a2 < 0)
    sub_100007810();
  result = sub_10002BA34((uint64_t)(a1 + 2), ((unint64_t)(a2 - 1) >> 6) + 1);
  *a1 = result;
  a1[1] = 0;
  a1[2] = v4;
  return result;
}

void sub_1001F476C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  int v17;

  v4 = a1[1];
  v5 = v4 + a4;
  a1[1] = v4 + a4;
  if (!v4 || ((v5 - 1) ^ (v4 - 1)) >= 0x40)
  {
    if (v5 >= 0x41)
      v6 = (v5 - 1) >> 6;
    else
      v6 = 0;
    *(_QWORD *)(*a1 + 8 * v6) = 0;
  }
  v7 = *(_DWORD *)(a2 + 8);
  v8 = *(_QWORD *)a3;
  v9 = *(_DWORD *)(a3 + 8);
  v10 = *a1 + 8 * (v4 >> 6);
  v16 = *(_QWORD *)a2;
  v17 = v7;
  v14 = v8;
  v15 = v9;
  v12 = v10;
  v13 = v4 & 0x3F;
  sub_1001F480C(&v16, &v14, &v12, (uint64_t)&v11);
}

void sub_1001F480C(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  int v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  int v21;

  v5 = *((_DWORD *)a1 + 2);
  v6 = *a2;
  v7 = *((_DWORD *)a2 + 2);
  v16 = *a1;
  v17 = v5;
  v14 = v6;
  v15 = v7;
  v8 = *((_DWORD *)a3 + 2);
  v12 = *a3;
  v13 = v8;
  sub_1001F4898((uint64_t)&v16, (uint64_t)&v14, (uint64_t)&v12, (uint64_t)&v18);
  v9 = v19;
  v10 = v20;
  v11 = v21;
  *(_QWORD *)a4 = v18;
  *(_DWORD *)(a4 + 8) = v9;
  *(_QWORD *)(a4 + 16) = v10;
  *(_DWORD *)(a4 + 24) = v11;
}

void sub_1001F4898(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  _QWORD *v4;
  int v5;
  int i;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;

  v4 = *(_QWORD **)a1;
  v5 = *(_DWORD *)(a1 + 8);
  for (i = *(_DWORD *)(a3 + 8); *(_QWORD *)a1 != *(_QWORD *)a2 || v5 != *(_DWORD *)(a2 + 8); v5 = *(_DWORD *)(a1 + 8))
  {
    v8 = *(uint64_t **)a3;
    v9 = 1 << i;
    if (((*v4 >> v5) & 1) != 0)
      v10 = *v8 | v9;
    else
      v10 = *v8 & ~v9;
    *v8 = v10;
    if (v5 == 63)
    {
      v11 = 0;
      *(_QWORD *)a1 = v4 + 1;
    }
    else
    {
      v11 = v5 + 1;
    }
    *(_DWORD *)(a1 + 8) = v11;
    v12 = *(_DWORD *)(a3 + 8);
    if (v12 == 63)
    {
      i = 0;
      *(_QWORD *)a3 += 8;
    }
    else
    {
      i = v12 + 1;
    }
    *(_DWORD *)(a3 + 8) = i;
    v4 = *(_QWORD **)a1;
  }
  *(_QWORD *)a4 = v4;
  *(_DWORD *)(a4 + 8) = v5;
  *(_QWORD *)(a4 + 16) = *(_QWORD *)a3;
  *(_DWORD *)(a4 + 24) = i;
}

void sub_1001F8160(id a1, CRLPathEditableRep *a2)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(-[CRLPathEditableRep editablePathSource](a2, "editablePathSource"));
  objc_msgSend(v2, "sharpenAllNodes");

}

BOOL sub_1001F8190(id a1, CRLPathEditableRep *a2)
{
  void *v2;
  unsigned __int8 v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(-[CRLPathEditableRep editablePathSource](a2, "editablePathSource"));
  v3 = objc_msgSend(v2, "hasSelectedNode");

  return v3;
}

void sub_1001F8284(id a1, CRLPathEditableRep *a2)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(-[CRLPathEditableRep editablePathSource](a2, "editablePathSource"));
  objc_msgSend(v2, "smoothAllNodes");

}

BOOL sub_1001F82B4(id a1, CRLPathEditableRep *a2)
{
  void *v2;
  unsigned __int8 v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(-[CRLPathEditableRep editablePathSource](a2, "editablePathSource"));
  v3 = objc_msgSend(v2, "hasSelectedNode");

  return v3;
}

void sub_1001F8784(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001F87B4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001F8F3C(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  _OWORD v12[3];

  v3 = a2;
  objc_opt_class(CRLShapeLayout, v4);
  v6 = sub_100221D0C(v5, v3);
  v7 = (void *)objc_claimAutoreleasedReturnValue(v6);

  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "path"));
  v9 = objc_msgSend(v8, "copy");

  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "pureGeometry"));
  v11 = v10;
  if (v10)
    objc_msgSend(v10, "transform");
  else
    memset(v12, 0, sizeof(v12));
  objc_msgSend(v9, "transformUsingAffineTransform:", v12);

  objc_msgSend(*(id *)(a1 + 32), "addObject:", v9);
}

void sub_1001F9004(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "selectionModelTranslator"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithObject:](NSSet, "setWithObject:", *(_QWORD *)(a1 + 40)));
  v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "selectionPathForInfos:", v3));

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "layerHost"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "miniFormatterPresenter"));
  objc_msgSend(v5, "presentMiniFormatterForSelectionPath:", v6);

}

void sub_1001F9718(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,char a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,char a62)
{
  _Block_object_dispose(&a52, 8);
  _Block_object_dispose(&a62, 8);
  _Block_object_dispose(&STACK[0x220], 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1001F9788(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1001F9798(uint64_t a1)
{

}

void sub_1001F97A0(uint64_t a1, void *a2)
{
  CRLBezierPath *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;

  v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "geometry"));
  objc_msgSend(v7, "size");
  v3 = +[CRLBezierPath bezierPathWithRect:](CRLBezierPath, "bezierPathWithRect:", sub_10005FDDC());
  v4 = objc_claimAutoreleasedReturnValue(v3);
  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v4;

}

__n128 sub_1001F9808(uint64_t a1, void *a2)
{
  _OWORD *v3;
  void *v4;
  void *v5;
  __int128 v6;
  _OWORD *v7;
  __int128 v8;
  __int128 v9;
  __n128 result;
  CGAffineTransform v11;
  CGAffineTransform t2;
  CGAffineTransform v13;

  v3 = *(_OWORD **)(*(_QWORD *)(a1 + 32) + 8);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "pureGeometry"));
  v5 = v4;
  if (v4)
    objc_msgSend(v4, "transform");
  else
    memset(&t2, 0, sizeof(t2));
  v6 = v3[3];
  *(_OWORD *)&v11.a = v3[2];
  *(_OWORD *)&v11.c = v6;
  *(_OWORD *)&v11.tx = v3[4];
  CGAffineTransformConcat(&v13, &v11, &t2);
  v7 = *(_OWORD **)(*(_QWORD *)(a1 + 32) + 8);
  v9 = *(_OWORD *)&v13.c;
  v8 = *(_OWORD *)&v13.tx;
  v7[2] = *(_OWORD *)&v13.a;
  v7[3] = v9;
  v7[4] = v8;

  return result;
}

__n128 sub_1001F98A8(uint64_t a1, void *a2)
{
  _OWORD *v3;
  id v4;
  void *v5;
  void *v6;
  __int128 v7;
  _OWORD *v8;
  __int128 v9;
  __int128 v10;
  _OWORD *v11;
  void *v12;
  __int128 v13;
  _OWORD *v14;
  __int128 v15;
  __int128 v16;
  __n128 result;
  CGAffineTransform v18;
  CGAffineTransform v19;
  CGAffineTransform t1;
  CGAffineTransform t2;
  CGAffineTransform v22;

  v3 = (_OWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 32);
  v4 = a2;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "pureGeometry"));
  v6 = v5;
  if (v5)
    objc_msgSend(v5, "transform");
  else
    memset(&t2, 0, sizeof(t2));
  v7 = v3[1];
  *(_OWORD *)&t1.a = *v3;
  *(_OWORD *)&t1.c = v7;
  *(_OWORD *)&t1.tx = v3[2];
  CGAffineTransformConcat(&v22, &t1, &t2);
  v8 = *(_OWORD **)(*(_QWORD *)(a1 + 32) + 8);
  v10 = *(_OWORD *)&v22.c;
  v9 = *(_OWORD *)&v22.tx;
  v8[2] = *(_OWORD *)&v22.a;
  v8[3] = v10;
  v8[4] = v9;

  v11 = *(_OWORD **)(*(_QWORD *)(a1 + 40) + 8);
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "pureGeometry"));

  if (v12)
    objc_msgSend(v12, "transform");
  else
    memset(&v18, 0, sizeof(v18));
  v13 = v11[3];
  *(_OWORD *)&t1.a = v11[2];
  *(_OWORD *)&t1.c = v13;
  *(_OWORD *)&t1.tx = v11[4];
  CGAffineTransformConcat(&v19, &t1, &v18);
  v14 = *(_OWORD **)(*(_QWORD *)(a1 + 40) + 8);
  v16 = *(_OWORD *)&v19.c;
  v15 = *(_OWORD *)&v19.tx;
  v14[2] = *(_OWORD *)&v19.a;
  v14[3] = v16;
  v14[4] = v15;

  return result;
}

void sub_1001F9BF4(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  int v12;
  CRLConnectionLineMagnet *v13;
  void *v14;
  float64x2_t v15;
  CGAffineTransform v16;
  CGAffineTransform v17;

  v3 = a2;
  v4 = v3;
  if (v3)
    objc_msgSend(v3, "pureTransformInRoot");
  else
    memset(&v16, 0, sizeof(v16));
  CGAffineTransformInvert(&v17, &v16);
  v15 = vaddq_f64(*(float64x2_t *)&v17.tx, vmlaq_n_f64(vmulq_n_f64(*(float64x2_t *)&v17.c, *(double *)(a1 + 56)), *(float64x2_t *)&v17.a, *(double *)(a1 + 48)));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "pureGeometry"));
  objc_msgSend(v5, "size");
  v6 = sub_10005FDDC();
  v9 = sub_1000626B8(v15.f64[0], v15.f64[1], v6, v7, v8);
  v11 = v10;

  v12 = *(unsigned __int8 *)(a1 + 64);
  v13 = -[CRLConnectionLineMagnet initWithType:normalizedPosition:]([CRLConnectionLineMagnet alloc], "initWithType:normalizedPosition:", objc_msgSend(*(id *)(a1 + 40), "magnetType"), v9, v11);
  v14 = *(void **)(a1 + 32);
  if (v12)
    objc_msgSend(v14, "setHeadMagnet:", v13);
  else
    objc_msgSend(v14, "setTailMagnet:", v13);

}

void sub_1001FA4FC(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  objc_class *v5;
  id v6;
  void *v7;
  void *v8;
  uint64_t v9;

  v3 = a2;
  objc_opt_class(CRLShapeLayout, v4);
  v6 = sub_1002223BC(v5, v3);
  v7 = (void *)objc_claimAutoreleasedReturnValue(v6);

  if (v7)
  {
    v8 = *(void **)(a1 + 32);
    objc_msgSend(v7, "transformInRoot");
    objc_msgSend(v8, "transformUsingAffineTransform:", &v9);
  }

}

BOOL sub_1001FA800(id a1, id a2, BOOL *a3)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  char isKindOfClass;

  v3 = a2;
  v5 = objc_opt_class(_TtC8Freeform12CRLShapeItem, v4);
  isKindOfClass = objc_opt_isKindOfClass(v3, v5);

  return isKindOfClass & 1;
}

BOOL sub_1001FA89C(id a1, id a2, BOOL *a3)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;

  v3 = a2;
  objc_opt_class(CRLShapeLayout, v4);
  v6 = sub_100221D0C(v5, v3);
  v7 = (void *)objc_claimAutoreleasedReturnValue(v6);

  LOBYTE(v3) = objc_msgSend(v7, "pathIsOpen");
  return (char)v3;
}

void sub_1001FC26C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001FC29C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001FC2CC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001FC2FC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001FC32C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001FC35C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001FC518(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1001FC544(_QWORD *a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  float64x2_t v16;
  CGAffineTransform v17;
  CGAffineTransform v18;

  v3 = a2;
  v4 = v3;
  if (a1[7] == 6)
  {
    objc_msgSend(v3, "findNewEdgeMagnetCanvasPositionForConnectionLine:forLineEnd:withCanvasPosition:", a1[4], a1[8], *(double *)(*(_QWORD *)(a1[5] + 8) + 32), *(double *)(*(_QWORD *)(a1[5] + 8) + 40));
    v5 = *(_QWORD *)(a1[5] + 8);
    *(_QWORD *)(v5 + 32) = v6;
    *(_QWORD *)(v5 + 40) = v7;
  }
  v8 = *(_QWORD *)(a1[5] + 8);
  if (v4)
    objc_msgSend(v4, "pureTransformInRoot");
  else
    memset(&v17, 0, sizeof(v17));
  CGAffineTransformInvert(&v18, &v17);
  v16 = vaddq_f64(*(float64x2_t *)&v18.tx, vmlaq_n_f64(vmulq_n_f64(*(float64x2_t *)&v18.c, *(double *)(v8 + 40)), *(float64x2_t *)&v18.a, *(double *)(v8 + 32)));
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "pureGeometry"));
  objc_msgSend(v9, "size");
  v10 = sub_10005FDDC();
  v13 = sub_1000626B8(v16.f64[0], v16.f64[1], v10, v11, v12);
  v14 = *(_QWORD *)(a1[6] + 8);
  *(double *)(v14 + 32) = v13;
  *(_QWORD *)(v14 + 40) = v15;

}

void sub_1001FCD10(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_1001FCF70(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001FCFA0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001FD210(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001FD240(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

id sub_1001FD4E0()
{
  if (qword_101415068 != -1)
    dispatch_once(&qword_101415068, &stru_101244600);
  return (id)qword_101415060;
}

void sub_1001FD520(id a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  CKRecordID v13;
  Swift::String v14;
  uint64_t v15;

  v1 = objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "group.com.apple.freeform"));
  v2 = (void *)qword_101415060;
  qword_101415060 = v1;

  if ((objc_msgSend((id)qword_101415060, "hasPrefix:", CFSTR("group.com.apple.")) & 1) == 0)
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101244620);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E0C2EC();
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101244640);
    v3 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100DE8358(v3);
    v15 = qword_101415060;
    sub_1001BC7E8((uint64_t)"Fatal Assertion failure: %{public}s %{public}s:%d App group identifier (%@) has unexpected prefix.", v4, v5, v6, v7, v8, v9, v10, (uint64_t)"NSString *CRLAppGroupIdentifier()_block_invoke");
    v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "NSString *CRLAppGroupIdentifier()_block_invoke"));
    v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLBundleUtilities.m"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v11, v12, 51, 1, "App group identifier (%@) has unexpected prefix.", qword_101415060, "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLBundleUtilities.m", 51, v15);

    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v13, v14);
    abort();
  }
}

void sub_1001FD6CC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001FD6FC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

BOOL sub_1001FD938(void *a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  id v6;
  _BOOL8 v7;

  v3 = a1;
  v4 = a2;
  v5 = objc_msgSend(v3, "encodedLength");
  if (v5 == objc_msgSend(v4, "encodedLength"))
  {
    v6 = objc_msgSend(v3, "decodedLength");
    v7 = v6 == objc_msgSend(v4, "decodedLength");
  }
  else
  {
    v7 = 0;
  }

  return v7;
}

void sub_1001FE060(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001FE090(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001FE308(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001FE338(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001FE588(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1001FE720(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001FE9FC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1001FF010(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1001FF0E4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001FF114(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1001FFFC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20)
{
  void *v20;
  void *v21;

  _Unwind_Resume(a1);
}

void sub_1002000F0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100200120(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100200150(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100200180(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002004A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_100200A9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_100200D48(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10020125C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1002012FC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10020132C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10020135C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10020138C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002015C8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10020178C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1002018D0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100201BB4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_100201C74(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100201DA0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_100202168(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1002021D0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100202200(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002022F0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100202528(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11)
{
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1002027D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  void *v9;

  _Unwind_Resume(a1);
}

void sub_100202B88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16)
{
  void *v16;

  _Unwind_Resume(a1);
}

void sub_100202C08(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100202C38(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100202D1C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_100202E5C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_100202E70(uint64_t a1, uint64_t a2)
{
  __int128 v2;

  sub_100133D70(&v2, a2);
}

void sub_100202F84(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_100202FE0(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = (std::__shared_weak_count *)a1[1];
  *a1 = 0;
  a1[1] = 0;
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_100203270(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100203298(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002032C8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002034A4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002034CC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002034FC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100203774(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100203B98(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002041C4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100204798(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100204820(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100204850(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100204AC8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100204C34(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100205544(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_100205654(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100205684(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002056B4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002056E4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100205714(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100205744(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100205C1C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_100205F0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  void *v29;

  _Block_object_dispose(&a29, 8);
  _Unwind_Resume(a1);
}

const __CFDictionary *sub_100205F70(uint64_t a1, CTRunRef run)
{
  const __CFDictionary *result;
  uint64_t v4;
  int v5;

  result = CTRunGetAttributes(run);
  if (result)
  {
    result = (const __CFDictionary *)CFDictionaryGetValue(result, kCTFontAttributeName);
    if (result)
    {
      result = (const __CFDictionary *)CTFontGetSymbolicTraits(result);
      v4 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
      v5 = *(_DWORD *)(v4 + 24);
      if (v5)
      {
        if (v5 == (_DWORD)result)
          return result;
        result = (const __CFDictionary *)((v5 | result) & 0xFFFFFFF);
      }
      *(_DWORD *)(v4 + 24) = (_DWORD)result;
    }
  }
  return result;
}

void sub_100206304(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002066A0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_100206700(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100206730(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002068E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_100206BA4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_100206C1C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100206DAC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1002079E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,void *a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,void *__p,uint64_t a45)
{
  void *v45;

  _Unwind_Resume(a1);
}

void sub_100207B7C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100207BAC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100207CD0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100207E90(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_100207F38(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100207FF4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002080B0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1002086D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, void *a18)
{
  void *v18;
  void *v19;

  _Unwind_Resume(a1);
}

void sub_100208C0C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100208C3C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100208C6C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10020917C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002091A4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002091D4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10020A184(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16, void *a17, void *a18, void *a19, void *a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,id a54)
{
  void *v54;
  void *v55;

  sub_10020A2D0(&a54);
  _Unwind_Resume(a1);
}

void sub_10020A270(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10020A2A0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

id *sub_10020A2D0(id *a1)
{

  return a1;
}

void sub_10020A394(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10020A420(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{

  _Unwind_Resume(a1);
}

void sub_10020A43C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v6;
  uint64_t v7;
  id v8;
  void *v9;
  void *v10;
  id v11;

  v6 = a2;
  v7 = *(_QWORD *)(a1 + 32);
  v11 = v6;
  v8 = objc_msgSend(v6, "type");
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "stroke"));
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "fill"));
  objc_msgSend(v11, "rect");
  (*(void (**)(uint64_t, id, void *, void *, uint64_t))(v7 + 16))(v7, v8, v9, v10, a4);

}

void sub_10020A4D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_10020A9F4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10020AA24(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10020AA54(uint64_t a1, void *a2, unint64_t a3)
{
  id v5;
  CRLCanvasSubview *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  id v29;
  void *v30;
  unsigned __int8 v31;
  id v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  double v36;
  void *v37;
  void *v38;
  void *v39;
  uint64_t v40;
  id v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  id v47;
  void *v48;
  unsigned __int8 v49;
  void *v50;
  CRLInteractiveCanvasRepContentSubviewReuser *v51;
  void *v52;
  void *v53;
  id v54;
  uint64_t v55;

  v5 = a2;
  if (*(_QWORD *)(a1 + 72) <= a3)
  {
    v6 = objc_alloc_init(CRLCanvasSubview);
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 8), "layerDelegate"));
    -[CRLCanvasSubview setLayerDelegate:](v6, "setLayerDelegate:", v7);

  }
  else
  {
    v6 = (CRLCanvasSubview *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectAtIndexedSubscript:", a3));
  }
  -[CRLCanvasSubview setFrame:](v6, "setFrame:", *(double *)(a1 + 80), *(double *)(a1 + 88), *(double *)(a1 + 96), *(double *)(a1 + 104));
  -[CRLCanvasSubview setBounds:](v6, "setBounds:", *(double *)(a1 + 80), *(double *)(a1 + 88), *(double *)(a1 + 96), *(double *)(a1 + 104));
  v8 = (void *)objc_claimAutoreleasedReturnValue(-[CRLCanvasSubview layer](v6, "layer"));
  objc_msgSend(*(id *)(a1 + 48), "addObject:", v6);
  v15 = sub_100221DDC(v5, 1, v9, v10, v11, v12, v13, v14, (uint64_t)&OBJC_PROTOCOL___CRLInteractiveCanvasRepLayerPile);
  v16 = (void *)objc_claimAutoreleasedReturnValue(v15);
  v23 = v16;
  if (v16)
  {
    v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "contentLayers"));
    if (!v24)
    {
      +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101244BF0);
      if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
        sub_100E0CC4C();
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101244C10);
      v25 = off_1013D9070;
      if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
        sub_100DE7468(v25);
      v26 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLInteractiveCanvasRepContentSubviewUpdater p_mainThreadUpdateSubviewsFromRepContentPiles:]_block_invoke"));
      v27 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLInteractiveCanvasRepContentSubviewUpdater.m"));
      +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v26, v27, 138, 0, "invalid nil value for '%{public}s'", "contentLayers");

    }
    v28 = (void *)objc_claimAutoreleasedReturnValue(-[CRLCanvasSubview subviews](v6, "subviews"));
    v29 = objc_msgSend(v28, "count");

    if (v29)
      -[CRLCanvasSubview setSubviews:](v6, "setSubviews:", &__NSArray0__struct);
    v30 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "sublayers"));
    v31 = objc_msgSend(v24, "isEqualToArray:", v30);

    if ((v31 & 1) == 0)
      objc_msgSend(v8, "setSublayers:", v24);
  }
  else
  {
    v32 = sub_100221DDC(v5, 1, v17, v18, v19, v20, v21, v22, (uint64_t)&OBJC_PROTOCOL___CRLInteractiveCanvasRepContentPlatformViewPile);
    v33 = objc_claimAutoreleasedReturnValue(v32);
    if (v33)
    {
      v24 = (void *)v33;
      v34 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 32), "objectForKeyedSubscript:", v6));
      *(_QWORD *)&v36 = objc_opt_class(*(_QWORD *)(a1 + 40), v35).n128_u64[0];
      v38 = v37;
      v39 = (void *)objc_claimAutoreleasedReturnValue(-[CRLCanvasSubview layerDelegate](v6, "layerDelegate", v36));
      v54 = v34;
      v40 = objc_claimAutoreleasedReturnValue(objc_msgSend(v38, "p_contentPlatformViewForRepContentPlatformViewPile:layerDelegate:reusableMaskView:", v24, v39, &v54));
      v41 = v54;

      if (v41)
        objc_msgSend(*(id *)(a1 + 56), "setObject:forKeyedSubscript:", v41, v6);
      if (v40)
      {
        v55 = v40;
        v42 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v55, 1));
      }
      else
      {
        v42 = &__NSArray0__struct;
      }
      v52 = v41;
      v53 = (void *)v40;
      v45 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "sublayers"));
      if (objc_msgSend(v45, "count"))
      {
        v46 = (void *)objc_claimAutoreleasedReturnValue(-[CRLCanvasSubview subviews](v6, "subviews"));
        v47 = objc_msgSend(v46, "count");

        if (!v47)
          objc_msgSend(v8, "setSublayers:", &__NSArray0__struct);
      }
      else
      {

      }
      v48 = (void *)objc_claimAutoreleasedReturnValue(-[CRLCanvasSubview subviews](v6, "subviews"));
      v49 = objc_msgSend(v42, "isEqualToArray:", v48);

      if ((v49 & 1) == 0)
        -[CRLCanvasSubview setSubviews:](v6, "setSubviews:", v42);

    }
    else
    {
      +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101244C30);
      if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
        sub_100E0CBB8();
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101244C50);
      v43 = off_1013D9070;
      if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
        sub_100DE7468(v43);
      v24 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLInteractiveCanvasRepContentSubviewUpdater p_mainThreadUpdateSubviewsFromRepContentPiles:]_block_invoke"));
      v44 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLInteractiveCanvasRepContentSubviewUpdater.m"));
      +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v24, v44, 178, 0, "Rep content pile did not implement either CRLInteractiveCanvasRepLayerPile or CRLInteractiveCanvasRepContentPlatformViewPile: %@", v5);

    }
  }

  v50 = *(void **)(a1 + 64);
  v51 = -[CRLInteractiveCanvasRepContentSubviewReuser initWithSubview:originalRepContentPile:]([CRLInteractiveCanvasRepContentSubviewReuser alloc], "initWithSubview:originalRepContentPile:", v6, v5);
  objc_msgSend(v50, "addObject:", v51);

}

void sub_10020AFEC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10020B01C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10020B04C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10020B07C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10020BEB4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10020BEE4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10020BF14(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10020BF44(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10020BF74(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10020BFA4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10020BFD4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10020C004(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10020C034(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10020C064(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10020C094(uint64_t a1)
{
  id v1;
  id v2;
  id v3;
  uint64_t v4;
  void *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];

  if (*(_QWORD *)(*(_QWORD *)(a1 + 32) + 24) == *(_QWORD *)(a1 + 48))
  {
    v8 = 0u;
    v9 = 0u;
    v6 = 0u;
    v7 = 0u;
    v1 = *(id *)(a1 + 40);
    v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    if (v2)
    {
      v3 = v2;
      v4 = *(_QWORD *)v7;
      do
      {
        v5 = 0;
        do
        {
          if (*(_QWORD *)v7 != v4)
            objc_enumerationMutation(v1);
          objc_msgSend(*(id *)(*((_QWORD *)&v6 + 1) + 8 * (_QWORD)v5), "removeRepContentPlatformViews", (_QWORD)v6);
          v5 = (char *)v5 + 1;
        }
        while (v3 != v5);
        v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
      }
      while (v3);
    }

  }
}

void sub_10020C3FC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10020C42C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10020C6A8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10020C6D8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10020C8A8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10020C8D8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10020CB2C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10020CB5C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10020D314(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10020D344(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10020D600(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10020D630(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10020E520(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10020E550(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10020E738(uint64_t a1)
{
  void *v1;
  id v2;

  v1 = *(void **)(a1 + 32);
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "_crlaxStoredLabel"));
  objc_msgSend(v1, "_crlaxSetStoredLabel:", v2);

}

void sub_10020F368(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  _Block_object_dispose(&a35, 8);
  _Unwind_Resume(a1);
}

void sub_10020F3B8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10020F3E8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10020F418(uint64_t a1, void *a2, _BYTE *a3)
{
  id v5;

  v5 = a2;
  if ((objc_opt_respondsToSelector(v5, "wantsAlternateContextMenuBehaviorAtPoint:") & 1) != 0
    && objc_msgSend(v5, "wantsAlternateContextMenuBehaviorAtPoint:", *(double *)(a1 + 40), *(double *)(a1 + 48)))
  {
    *a3 = 1;
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = 1;
  }

}

UIMenu *sub_10020F480(uint64_t a1)
{
  return +[UIMenu menuWithTitle:children:](UIMenu, "menuWithTitle:children:", &stru_1012A72B0, *(_QWORD *)(a1 + 32));
}

void sub_10020F950(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10020F980(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10021000C(id a1)
{
  int v1;
  NSObject *v2;
  void *v3;
  void *v4;
  void *v5;

  v1 = +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
  if (qword_10147E370 != -1)
    dispatch_once(&qword_10147E370, &stru_101245060);
  v2 = off_1013D9070;
  if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
    sub_100E0D498(v1, v2);
  if (qword_10147E370 != -1)
    dispatch_once(&qword_10147E370, &stru_101245080);
  v3 = off_1013D9070;
  if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
    sub_100DE81F0(v3, v1);
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLBezierPath(CRLCanvasAdditions) boundsIncludingCRLStroke:]_block_invoke"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLBezierPath_CRLCanvasAdditions.m"));

}

void sub_100210144(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100210174(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

uint64_t sub_1002101A4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_100210B58(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100210B88(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

uint64_t sub_100211160(uint64_t a1, void *a2, BOOL *a3, BOOL *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, id, char *, char *);
  id v9;
  char v11;
  char v12;

  v6 = a1;
  v12 = 0;
  v11 = 1;
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(uint64_t (**)(uint64_t, id, char *, char *))(v7 + 16);
  v9 = a2;
  LODWORD(v7) = v8(v7, v9, &v12, &v11);
  LODWORD(v6) = (*(uint64_t (**)(void))(*(_QWORD *)(v6 + 40) + 16))();

  *a3 = v12 != 0;
  *a4 = v11 != 0;
  return v7 & v6;
}

void sub_100212B80(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100212BB0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100212BE0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100212C10(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100212C40(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100212C70(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100212CA0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100212CD0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100212D00(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100212D30(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100212D60(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100212D90(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100212DC0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100212DF0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100212E20(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100212E50(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100214184(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002141B4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002141E4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100214214(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100214244(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100214274(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100214560(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0x2Cu);
}

id sub_100214580()
{
  void *v0;

  return objc_msgSend(v0, "delay");
}

id sub_10021458C@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 40) = a2;
  return a1;
}

void sub_100215944(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100215974(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100215B0C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100215B3C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100217040(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100217070(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002170A0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002170D0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002171E4(id a1)
{
  CRLWPFontMetricsCache *v1;
  void *v2;

  v1 = objc_opt_new(CRLWPFontMetricsCache);
  v2 = (void *)qword_101415088;
  qword_101415088 = (uint64_t)v1;

}

void sub_100217270(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100217320(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  a9.super_class = (Class)CRLWPFontMetricsCache;
  -[_Unwind_Exception dealloc](&a9, "dealloc");
  _Unwind_Resume(a1);
}

void sub_1002177E8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100217838(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100217868(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100217898(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002178C8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002187D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1002189AC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002189DC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100218A0C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100218A3C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100218A6C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100218A9C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100218ACC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100218AFC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100218B2C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100218B5C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100218B8C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100218BBC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100218BEC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100218C1C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100218C4C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100218C7C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100218CAC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100218CDC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100218D0C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100218D3C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100218D6C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100218D9C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

_QWORD *sub_100219098(_QWORD *result)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  if (result[2])
  {
    v1 = result;
    result = (_QWORD *)result[1];
    v2 = *v1;
    v3 = *result;
    *(_QWORD *)(v3 + 8) = *(_QWORD *)(*v1 + 8);
    **(_QWORD **)(v2 + 8) = v3;
    v1[2] = 0;
    if (result != v1)
    {
      do
      {
        v4 = (_QWORD *)result[1];
        operator delete(result);
        result = v4;
      }
      while (v4 != v1);
    }
  }
  return result;
}

uint64_t **sub_1002190F8(uint64_t **a1, unint64_t *a2, uint64_t a3, _QWORD **a4)
{
  uint64_t *v6;
  uint64_t **v7;
  unint64_t v8;
  uint64_t **v9;
  unint64_t v10;
  char *v11;

  v7 = a1 + 1;
  v6 = a1[1];
  if (v6)
  {
    v8 = *a2;
    while (1)
    {
      while (1)
      {
        v9 = (uint64_t **)v6;
        v10 = v6[4];
        if (v8 >= v10)
          break;
        v6 = *v9;
        v7 = v9;
        if (!*v9)
          goto LABEL_10;
      }
      if (v10 >= v8)
        break;
      v6 = v9[1];
      if (!v6)
      {
        v7 = v9 + 1;
        goto LABEL_10;
      }
    }
  }
  else
  {
    v9 = a1 + 1;
LABEL_10:
    v11 = (char *)operator new(0x98uLL);
    *((_QWORD *)v11 + 4) = **a4;
    *(_OWORD *)(v11 + 136) = 0u;
    *(_OWORD *)(v11 + 120) = 0u;
    *(_OWORD *)(v11 + 104) = 0u;
    *(_OWORD *)(v11 + 88) = 0u;
    *(_OWORD *)(v11 + 72) = 0u;
    *(_OWORD *)(v11 + 56) = 0u;
    *(_OWORD *)(v11 + 40) = 0u;
    sub_10001D650(a1, (uint64_t)v9, v7, (uint64_t *)v11);
    return (uint64_t **)v11;
  }
  return v9;
}

uint64_t sub_1002191D4(uint64_t a1, unint64_t *a2)
{
  _QWORD *v2;
  unint64_t v3;
  uint64_t *v4;
  unint64_t v5;
  BOOL v6;
  _QWORD *v7;

  v2 = *(_QWORD **)(a1 + 8);
  if (!v2)
    return 0;
  v3 = *a2;
  v4 = (uint64_t *)(a1 + 8);
  do
  {
    v5 = v2[4];
    v6 = v5 >= v3;
    if (v5 >= v3)
      v7 = v2;
    else
      v7 = v2 + 1;
    if (v6)
      v4 = v2;
    v2 = (_QWORD *)*v7;
  }
  while (*v7);
  if (v4 == (uint64_t *)(a1 + 8) || v3 < v4[4])
    return 0;
  sub_10001DAF0((uint64_t **)a1, v4);
  operator delete(v4);
  return 1;
}

void sub_1002192D4(id a1)
{
  id v1;
  void *v2;

  v1 = -[CRLInsertionContext initSubclass]([CRLNonInteractiveInsertionContext alloc], "initSubclass");
  v2 = (void *)qword_101415090;
  qword_101415090 = (uint64_t)v1;

}

void sub_100219340(id a1)
{
  id v1;
  void *v2;

  v1 = -[CRLInsertionContext initSubclass]([CRLNonInteractiveFloatingInsertionContext alloc], "initSubclass");
  v2 = (void *)qword_1014150A0;
  qword_1014150A0 = (uint64_t)v1;

}

void sub_1002193AC(id a1)
{
  id v1;
  void *v2;

  v1 = -[CRLInsertionContext initSubclass]([CRLIosDragFloatingInsertionContext alloc], "initSubclass");
  v2 = (void *)qword_1014150B0;
  qword_1014150B0 = (uint64_t)v1;

}

void sub_100219418(id a1)
{
  id v1;
  void *v2;

  v1 = -[CRLInsertionContext initSubclass]([CRLNonInteractiveNonEditingEndingFloatingInsertionContext alloc], "initSubclass");
  v2 = (void *)qword_1014150C0;
  qword_1014150C0 = (uint64_t)v1;

}

void sub_100219484(id a1)
{
  id v1;
  void *v2;

  v1 = -[CRLInsertionContext initSubclass]([CRLNonInteractiveInlineInsertionContext alloc], "initSubclass");
  v2 = (void *)qword_1014150D0;
  qword_1014150D0 = (uint64_t)v1;

}

void sub_100219718(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100219748(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100219BCC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100219BFC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100219FF0(uint64_t a1)
{
  id v1;
  id v2;
  void *v3;
  id v4;

  v1 = objc_alloc(*(Class *)(a1 + 32));
  v4 = (id)objc_claimAutoreleasedReturnValue(+[CRLAsset null](_TtC8Freeform8CRLAsset, "null"));
  v2 = objc_msgSend(v1, "initWithImageData:", v4);
  v3 = (void *)qword_1014150E0;
  qword_1014150E0 = (uint64_t)v2;

}

void sub_10021A2F4(id a1)
{
  void *v1;
  void *v2;
  CRLPDFImageProvider *v3;
  void *v4;
  id v5;

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "URLForResource:withExtension:", CFSTR("CRLErrorImageIcon"), CFSTR("pdf")));

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[CRLAssetManager readonlyAssetFromURL:](_TtC8Freeform15CRLAssetManager, "readonlyAssetFromURL:", v5));
  v3 = -[CRLImageProvider initWithImageData:]([CRLPDFImageProvider alloc], "initWithImageData:", v2);
  v4 = (void *)qword_1014150F0;
  qword_1014150F0 = (uint64_t)v3;

}

void sub_10021A5DC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10021A60C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

BOOL sub_10021ACCC(id a1, NSString *a2, int64_t a3, NSDictionary *a4)
{
  NSString *v6;
  NSDictionary *v7;
  const NSErrorDomain *v8;
  const __CFString *v9;
  unsigned __int8 v10;

  v6 = a2;
  v7 = a4;
  if (a3 == 2)
  {
    v9 = CFSTR("com.apple.freeform");
  }
  else
  {
    if (a3 == 28)
    {
      v8 = &NSPOSIXErrorDomain;
    }
    else
    {
      if (a3 != 640)
      {
        v10 = 0;
        goto LABEL_10;
      }
      v8 = &NSCocoaErrorDomain;
    }
    v9 = (const __CFString *)*v8;
  }
  v10 = -[NSString isEqualToString:](v6, "isEqualToString:", v9);
LABEL_10:

  return v10;
}

BOOL sub_10021AD6C(id a1, NSString *a2, int64_t a3, NSDictionary *a4)
{
  NSString *v6;
  NSDictionary *v7;
  const NSErrorDomain *v8;
  unsigned __int8 v9;

  v6 = a2;
  v7 = a4;
  switch(a3)
  {
    case -999:
      v8 = &NSURLErrorDomain;
      break;
    case 104:
      v8 = (const NSErrorDomain *)&off_101253C70;
      break;
    case 3072:
      v8 = &NSCocoaErrorDomain;
      break;
    default:
      v9 = 0;
      goto LABEL_9;
  }
  v9 = -[NSString isEqualToString:](v6, "isEqualToString:", *v8);
LABEL_9:

  return v9;
}

BOOL sub_10021AE0C(id a1, NSString *a2, int64_t a3, NSDictionary *a4)
{
  NSString *v6;
  NSDictionary *v7;
  const NSErrorDomain *v8;
  unsigned __int8 v9;

  v6 = a2;
  v7 = a4;
  if (a3 == 17)
  {
    v8 = &NSPOSIXErrorDomain;
  }
  else
  {
    if (a3 != 516)
    {
      v9 = 0;
      goto LABEL_7;
    }
    v8 = &NSCocoaErrorDomain;
  }
  v9 = -[NSString isEqualToString:](v6, "isEqualToString:", *v8);
LABEL_7:

  return v9;
}

BOOL sub_10021AE98(id a1, NSString *a2, int64_t a3, NSDictionary *a4)
{
  NSString *v6;
  NSDictionary *v7;
  const NSErrorDomain *v8;
  unsigned __int8 v9;

  v6 = a2;
  v7 = a4;
  if (a3 == 2)
  {
    v8 = &NSPOSIXErrorDomain;
  }
  else
  {
    if (a3 != 260 && a3 != 4)
    {
      v9 = 0;
      goto LABEL_8;
    }
    v8 = &NSCocoaErrorDomain;
  }
  v9 = -[NSString isEqualToString:](v6, "isEqualToString:", *v8);
LABEL_8:

  return v9;
}

BOOL sub_10021AF2C(id a1, NSString *a2, int64_t a3, NSDictionary *a4)
{
  NSString *v6;
  NSDictionary *v7;
  unsigned __int8 v8;
  const NSErrorDomain *v9;

  v6 = a2;
  v7 = a4;
  v8 = 0;
  if (a3 <= 512)
  {
    if (a3 == 1)
    {
      v9 = &NSPOSIXErrorDomain;
      goto LABEL_9;
    }
    if (a3 != 257)
      goto LABEL_10;
LABEL_7:
    v9 = &NSCocoaErrorDomain;
LABEL_9:
    v8 = -[NSString isEqualToString:](v6, "isEqualToString:", *v9);
    goto LABEL_10;
  }
  if (a3 == 513 || a3 == 5124)
    goto LABEL_7;
LABEL_10:

  return v8;
}

BOOL sub_10021AFD4(id a1, NSString *a2, int64_t a3, NSDictionary *a4)
{
  if (a3 == 3328)
    return -[NSString isEqualToString:](a2, "isEqualToString:", NSCocoaErrorDomain, a4);
  else
    return 0;
}

void sub_10021B1A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10021B1C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _BYTE *a5)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  if ((_DWORD)result)
  {
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 1;
    *a5 = 1;
  }
  return result;
}

void sub_10021B600(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10021B68C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10021BA00(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10021BA30(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10021BCA0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10021BCD0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10021C1D4(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_10021C1EC(_QWORD *a1)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[128];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1[4] + 144), "objectForKey:", a1[6]));
  v3 = v2;
  if (v2)
  {
    *(_BYTE *)(*(_QWORD *)(a1[5] + 8) + 24) = objc_msgSend(v2, "BOOLValue");
  }
  else
  {
    v16 = 0u;
    v17 = 0u;
    v14 = 0u;
    v15 = 0u;
    v4 = *(id *)(a1[4] + 8);
    v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
    if (v5)
    {
      v6 = v5;
      v7 = *(_QWORD *)v15;
LABEL_5:
      v8 = 0;
      while (1)
      {
        if (*(_QWORD *)v15 != v7)
          objc_enumerationMutation(v4);
        *(_BYTE *)(*(_QWORD *)(a1[5] + 8) + 24) = objc_msgSend(*(id *)(*((_QWORD *)&v14 + 1) + 8 * v8), "canLoadObjectOfClass:", a1[6], (_QWORD)v14);
        if (*(_BYTE *)(*(_QWORD *)(a1[5] + 8) + 24))
          break;
        if (v6 == (id)++v8)
        {
          v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
          if (v6)
            goto LABEL_5;
          break;
        }
      }
    }

    v9 = *(void **)(a1[4] + 144);
    if (!v9)
    {
      v10 = objc_msgSend(objc_alloc((Class)NSMapTable), "initWithKeyOptions:valueOptions:capacity:", 0, 0, 0);
      v11 = a1[4];
      v12 = *(void **)(v11 + 144);
      *(_QWORD *)(v11 + 144) = v10;

      v9 = *(void **)(a1[4] + 144);
    }
    v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", *(unsigned __int8 *)(*(_QWORD *)(a1[5] + 8) + 24), (_QWORD)v14));
    objc_msgSend(v9, "setObject:forKey:", v13, a1[6]);

  }
}

void sub_10021C414(uint64_t a1)
{
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  void *i;
  void *v7;
  void *v8;
  unsigned __int8 v9;
  void *v10;
  unsigned __int8 v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _BYTE v17[128];

  v15 = 0u;
  v16 = 0u;
  v13 = 0u;
  v14 = 0u;
  v2 = *(id *)(*(_QWORD *)(a1 + 32) + 16);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v14;
    while (2)
    {
      for (i = 0; i != v4; i = (char *)i + 1)
      {
        if (*(_QWORD *)v14 != v5)
          objc_enumerationMutation(v2);
        v7 = *(void **)(*((_QWORD *)&v13 + 1) + 8 * (_QWORD)i);
        v8 = (void *)objc_claimAutoreleasedReturnValue(+[CRLBoardItemImporter supportedFileTypes](CRLBoardItemImporter, "supportedFileTypes", (_QWORD)v13));
        v9 = objc_msgSend(v7, "crl_conformsToAnyUTI:", v8);

        if ((v9 & 1) != 0)
        {
          v12 = 2;
          goto LABEL_16;
        }
        v10 = (void *)objc_claimAutoreleasedReturnValue(+[CRLIngestionTypes supportedRichTextTypes](CRLIngestionTypes, "supportedRichTextTypes"));
        v11 = objc_msgSend(v7, "crl_conformsToAnyUTI:", v10);

        if ((v11 & 1) != 0)
        {
          v12 = 1;
          goto LABEL_16;
        }
        if (+[CRLIngestionTypes isValidPlainTextUTI:](CRLIngestionTypes, "isValidPlainTextUTI:", v7))
        {
          v12 = 4;
          goto LABEL_16;
        }
      }
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
      v12 = 0;
      if (v4)
        continue;
      break;
    }
  }
  else
  {
    v12 = 0;
  }
LABEL_16:

  *(_QWORD *)(*(_QWORD *)(a1 + 32) + 32) = v12;
}

void sub_10021C610(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 32);
  v3 = (id)objc_claimAutoreleasedReturnValue(+[CRLIngestionTypes supportedImageTypes](CRLIngestionTypes, "supportedImageTypes"));
  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 48) = objc_msgSend(v2, "p_containsAnyUTIFromList:", v3);

}

void sub_10021CD8C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  _QWORD block[2];
  void (*v20)(uint64_t);
  void *v21;
  id v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;

  v5 = a2;
  v6 = a3;
  v7 = v6;
  if (v5)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    v20 = sub_10021D074;
    v21 = &unk_101245BD0;
    v8 = v5;
    v9 = *(_QWORD *)(a1 + 32);
    v10 = *(void **)(a1 + 40);
    v22 = v8;
    v23 = v9;
    v24 = v10;
    v25 = *(id *)(a1 + 48);
    v11 = *(id *)(a1 + 56);
    v12 = *(_QWORD *)(a1 + 80);
    v26 = v11;
    v29 = v12;
    v27 = *(id *)(a1 + 64);
    v28 = *(id *)(a1 + 72);
    if (+[NSThread isMainThread](NSThread, "isMainThread"))
      v20((uint64_t)block);
    else
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  }
  else
  {
    if (v6)
    {
      v13 = *(void **)(a1 + 64);
      v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", *(_QWORD *)(a1 + 80)));
      objc_msgSend(v13, "setObject:forKey:", v7, v14);

      if (qword_10147E368 != -1)
        dispatch_once(&qword_10147E368, &stru_101245C30);
      v15 = off_1013D9068;
      if (os_log_type_enabled((os_log_t)off_1013D9068, OS_LOG_TYPE_ERROR))
        sub_100E0E850(v15);
    }
    else
    {
      +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101245BF0);
      if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
        sub_100E0E7C0();
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101245C10);
      v16 = off_1013D9070;
      if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
        sub_100DE7468(v16);
      v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLiOSItemProviderItemSource loadImportedImagesForAssetOwner:compatibilityAlertPresenter:withHandler:]_block_invoke"));
      v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLiOSItemProviderItemSource.m"));
      +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v17, v18, 219, 0, "invalid nil value for '%{public}s'", "itemProviderError");

    }
    dispatch_group_leave(*(dispatch_group_t *)(a1 + 72));
  }

}

void sub_10021D074(uint64_t a1)
{
  CRLImageFillProvider *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  _QWORD v7[4];
  id v8;
  id v9;
  id v10;
  uint64_t v11;

  v2 = -[CRLImageFillProvider initWithData:type:]([CRLImageFillProvider alloc], "initWithData:type:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
  v3 = *(_QWORD *)(a1 + 48);
  v4 = *(_QWORD *)(a1 + 56);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_10021D144;
  v7[3] = &unk_101245BA8;
  v5 = *(id *)(a1 + 64);
  v6 = *(_QWORD *)(a1 + 88);
  v8 = v5;
  v11 = v6;
  v9 = *(id *)(a1 + 72);
  v10 = *(id *)(a1 + 80);
  -[CRLImageFillProvider provideImageDataForAssetOwner:compatibilityAlertPresenter:completionHandler:](v2, "provideImageDataForAssetOwner:compatibilityAlertPresenter:completionHandler:", v3, v4, v7);

}

void sub_10021D144(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;

  v5 = a2;
  v6 = a3;
  v7 = v6;
  if (v5)
  {
    v8 = *(void **)(a1 + 32);
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", *(_QWORD *)(a1 + 56)));
    v10 = v8;
    v11 = v5;
LABEL_5:
    objc_msgSend(v10, "setObject:forKey:", v11, v9);
    goto LABEL_6;
  }
  if (v6)
  {
    v12 = *(void **)(a1 + 40);
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", *(_QWORD *)(a1 + 56)));
    v10 = v12;
    v11 = v7;
    goto LABEL_5;
  }
  +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
  if (qword_10147E370 != -1)
    dispatch_once(&qword_10147E370, &stru_101245B60);
  if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
    sub_100E0E8E4();
  if (qword_10147E370 != -1)
    dispatch_once(&qword_10147E370, &stru_101245B80);
  v13 = off_1013D9070;
  if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
    sub_100DE7468(v13);
  v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLiOSItemProviderItemSource loadImportedImagesForAssetOwner:compatibilityAlertPresenter:withHandler:]_block_invoke"));
  v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLiOSItemProviderItemSource.m"));
  +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v9, v14, 210, 0, "invalid nil value for '%{public}s'", "imageFillError");

LABEL_6:
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 48));

}

void sub_10021D320(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10021D350(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10021D380(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10021D3B0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10021D3E0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_10021D410(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10021D440(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10021D470(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_10021D4A0(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _BYTE v29[128];
  _BYTE v30[128];

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "allKeys"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "sortedArrayUsingSelector:", "compare:"));

  v27 = 0u;
  v28 = 0u;
  v25 = 0u;
  v26 = 0u;
  v5 = v4;
  v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v25, v30, 16);
  if (v6)
  {
    v7 = v6;
    v8 = *(_QWORD *)v26;
    do
    {
      v9 = 0;
      do
      {
        if (*(_QWORD *)v26 != v8)
          objc_enumerationMutation(v5);
        v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", *(_QWORD *)(*((_QWORD *)&v25 + 1) + 8 * (_QWORD)v9)));
        objc_msgSend(v2, "addObject:", v10);

        v9 = (char *)v9 + 1;
      }
      while (v7 != v9);
      v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v25, v30, 16);
    }
    while (v7);
  }

  v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "allKeys"));
  v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "sortedArrayUsingSelector:", "compare:"));

  v23 = 0u;
  v24 = 0u;
  v21 = 0u;
  v22 = 0u;
  v14 = v13;
  v15 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v21, v29, 16);
  if (v15)
  {
    v16 = v15;
    v17 = *(_QWORD *)v22;
    do
    {
      v18 = 0;
      do
      {
        if (*(_QWORD *)v22 != v17)
          objc_enumerationMutation(v14);
        v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "objectForKeyedSubscript:", *(_QWORD *)(*((_QWORD *)&v21 + 1) + 8 * (_QWORD)v18), (_QWORD)v21));
        objc_msgSend(v11, "addObject:", v19);

        v18 = (char *)v18 + 1;
      }
      while (v16 != v18);
      v16 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v21, v29, 16);
    }
    while (v16);
  }

  v20 = *(_QWORD *)(a1 + 48);
  if (v20)
    (*(void (**)(uint64_t, void *, void *))(v20 + 16))(v20, v2, v11);

}

void sub_10021D758(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;

  if (objc_msgSend(*(id *)(a1 + 32), "hasImportableImages"))
  {
    *(_BYTE *)(*(_QWORD *)(a1 + 32) + 64) = 1;
  }
  else
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(+[CRLIngestionTypes supportedMovieTypes](CRLIngestionTypes, "supportedMovieTypes"));
    v3 = (void *)objc_claimAutoreleasedReturnValue(+[CRLIngestionTypes supportedGenericFileTypes](CRLIngestionTypes, "supportedGenericFileTypes"));
    v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "arrayByAddingObjectsFromArray:", v3));

    if (sub_1001E9750(0x2000000000000uLL))
    {
      v4 = (void *)objc_claimAutoreleasedReturnValue(+[CRLIngestionTypes supported3DFileTypes](CRLIngestionTypes, "supported3DFileTypes"));
      v5 = objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "arrayByAddingObjectsFromArray:", v4));

      v6 = (id)v5;
    }
    else
    {
      v6 = v7;
    }
    v8 = v6;
    *(_BYTE *)(*(_QWORD *)(a1 + 32) + 64) = objc_msgSend(*(id *)(a1 + 32), "p_containsAnyUTIFromList:", v6);

  }
}

void sub_10021D8C8(uint64_t a1)
{
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  void *i;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];

  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v2 = *(id *)(*(_QWORD *)(a1 + 32) + 16);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v8;
    while (2)
    {
      for (i = 0; i != v4; i = (char *)i + 1)
      {
        if (*(_QWORD *)v8 != v5)
          objc_enumerationMutation(v2);
        if (+[CRLIngestionTypes isValidPlainTextUTI:](CRLIngestionTypes, "isValidPlainTextUTI:", *(_QWORD *)(*((_QWORD *)&v7 + 1) + 8 * (_QWORD)i), (_QWORD)v7))
        {
          *(_BYTE *)(*(_QWORD *)(a1 + 32) + 80) = 1;
          goto LABEL_11;
        }
      }
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
      if (v4)
        continue;
      break;
    }
  }
LABEL_11:

}

void sub_10021DA40(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 32);
  v3 = (id)objc_claimAutoreleasedReturnValue(+[CRLIngestionTypes supportedRichTextTypes](CRLIngestionTypes, "supportedRichTextTypes"));
  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 96) = objc_msgSend(v2, "p_containsAnyUTIFromList:", v3);

}

void sub_10021DD68(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  Class v16;
  NSString *v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  id v22;
  NSAttributedStringDocumentAttributeKey v23;
  NSAttributedStringDocumentType v24;

  v5 = a2;
  v6 = a3;
  if (v5)
  {
    v7 = objc_alloc((Class)NSMutableAttributedString);
    v23 = NSDocumentTypeDocumentAttribute;
    v24 = NSRTFDTextDocumentType;
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v24, &v23, 1));
    v22 = 0;
    v9 = objc_msgSend(v7, "initWithURL:options:documentAttributes:error:", v5, v8, 0, &v22);
    v10 = v22;

    if (!v9)
    {
      +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101245CD8);
      v11 = off_1013D9070;
      if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
        sub_100E0EA08(v11, v10);
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101245CF8);
      v12 = off_1013D9070;
      if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
        sub_100DE7468(v12);
      v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLiOSItemProviderItemSource loadImportedRichTextStringWithHandler:]_block_invoke"));
      v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLiOSItemProviderItemSource.m"));
      objc_opt_class(v10, v15);
      v17 = NSStringFromClass(v16);
      v18 = (void *)objc_claimAutoreleasedReturnValue(v17);
      v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "domain"));
      +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v13, v14, 326, 0, "Error creating attributed string. Error: errorClass=%{public}@, domain=%{public}@, code=%zd (%@) ", v18, v19, objc_msgSend(v10, "code"), v10);

    }
  }
  else
  {
    if (qword_10147E368 != -1)
      dispatch_once(&qword_10147E368, &stru_101245D18);
    v20 = off_1013D9068;
    if (os_log_type_enabled((os_log_t)off_1013D9068, OS_LOG_TYPE_ERROR))
      sub_100E0E974(v20);
    v9 = 0;
  }
  v21 = *(_QWORD *)(a1 + 32);
  if (v21)
    (*(void (**)(uint64_t, id, _QWORD))(v21 + 16))(v21, v9, 0);

}

void sub_10021E04C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10021E07C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10021E0AC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_10021E0DC(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  Class v15;
  NSString *v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  id v21;

  v5 = a2;
  v6 = a3;
  if (v5)
  {
    v7 = *(_QWORD *)(a1 + 32);
    v21 = 0;
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSAttributedString objectWithItemProviderData:typeIdentifier:error:](NSAttributedString, "objectWithItemProviderData:typeIdentifier:error:", v5, v7, &v21));
    v9 = v21;
    if (!v8)
    {
      +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101245D60);
      v10 = off_1013D9070;
      if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
        sub_100E0EB68(v10, v9);
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101245D80);
      v11 = off_1013D9070;
      if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
        sub_100DE7468(v11);
      v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLiOSItemProviderItemSource loadImportedRichTextStringWithHandler:]_block_invoke"));
      v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLiOSItemProviderItemSource.m"));
      objc_opt_class(v9, v14);
      v16 = NSStringFromClass(v15);
      v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
      v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "domain"));
      +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v12, v13, 338, 0, "Error creating attributed string. Error: errorClass=%{public}@, domain=%{public}@, code=%zd (%@) ", v17, v18, objc_msgSend(v9, "code"), v9);

    }
  }
  else
  {
    if (qword_10147E368 != -1)
      dispatch_once(&qword_10147E368, &stru_101245DA0);
    v19 = off_1013D9068;
    if (os_log_type_enabled((os_log_t)off_1013D9068, OS_LOG_TYPE_ERROR))
      sub_100E0EAD4(v19);
    v8 = 0;
  }
  v20 = *(_QWORD *)(a1 + 40);
  if (v20)
    (*(void (**)(uint64_t, void *, _QWORD))(v20 + 16))(v20, v8, 0);

}

void sub_10021E344(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10021E374(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10021E3A4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_10021E5F8(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  int v16;
  id v17;

  v5 = a2;
  v6 = a3;
  if (v6)
  {
    v7 = v6;
    if (qword_10147E368 != -1)
      dispatch_once(&qword_10147E368, &stru_101245DE8);
    v8 = off_1013D9068;
    if (os_log_type_enabled((os_log_t)off_1013D9068, OS_LOG_TYPE_ERROR))
      sub_100E0ED70(v8);
    v9 = 0;
  }
  else
  {
    v10 = *(_QWORD *)(a1 + 32);
    v17 = 0;
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSString crl_stringWithItemProviderData:typeIdentifier:error:](NSString, "crl_stringWithItemProviderData:typeIdentifier:error:", v5, v10, &v17));
    v7 = v17;
    if (!v9)
    {
      v16 = +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101245E08);
      if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
        sub_100E0ECC8(a1 + 32, v16);
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101245E28);
      v11 = off_1013D9070;
      if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
        sub_100DE7468(v11);
      v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLiOSItemProviderItemSource loadImportedTextStringWithHandler:]_block_invoke"));
      v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLiOSItemProviderItemSource.m"));
      +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v12, v13, 374, 0, "Unable to make a string out of data with UTI %@", *(_QWORD *)(a1 + 32));

    }
    if (v7)
    {
      if (qword_10147E368 != -1)
        dispatch_once(&qword_10147E368, &stru_101245E48);
      v14 = off_1013D9068;
      if (os_log_type_enabled((os_log_t)off_1013D9068, OS_LOG_TYPE_ERROR))
        sub_100E0EC34(v14);
    }
  }
  v15 = *(_QWORD *)(a1 + 40);
  if (v15)
    (*(void (**)(uint64_t, void *, _QWORD))(v15 + 16))(v15, v9, 0);

}

void sub_10021E884(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_10021E8B4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10021E8E4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10021E914(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_10021E9AC(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  double v27;
  objc_class *v28;
  objc_class *v29;
  void *v30;
  id v31;
  id v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  void *v36;
  id v37;

  if (objc_msgSend(*(id *)(a1 + 32), "hasNativeTypes"))
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "firstObject"));
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "teamData"));
    if (v4)
    {
      objc_opt_class(NSDictionary, v3);
      v6 = v5;
      objc_opt_class(NSString, v7);
      v9 = v8;
      objc_opt_class(NSValue, v10);
      v12 = v11;
      objc_opt_class(NSMutableArray, v13);
      v15 = v14;
      objc_opt_class(NSArray, v16);
      v18 = v17;
      objc_opt_class(NSSet, v19);
      v21 = v20;
      *(_QWORD *)&v23 = objc_opt_class(NSMutableSet, v22).n128_u64[0];
      v25 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithObjects:](NSSet, "setWithObjects:", v6, v23, v9, v12, v15, v18, v21, v24, 0));
      *(_QWORD *)&v27 = objc_opt_class(NSSet, v26).n128_u64[0];
      v29 = v28;
      v37 = 0;
      v30 = (void *)objc_claimAutoreleasedReturnValue(+[NSKeyedUnarchiver unarchivedObjectOfClasses:fromData:error:](NSKeyedUnarchiver, "unarchivedObjectOfClasses:fromData:error:", v25, v4, &v37, v27));
      v31 = v37;
      v32 = sub_1002223BC(v29, v30);
      v33 = objc_claimAutoreleasedReturnValue(v32);

      if (!v33)
      {
        if (qword_10147E368 != -1)
          dispatch_once(&qword_10147E368, &stru_101245E68);
        v34 = off_1013D9068;
        if (os_log_type_enabled((os_log_t)off_1013D9068, OS_LOG_TYPE_ERROR))
          sub_100E0EE04(v34);
      }

    }
    else
    {
      v33 = 0;
    }

  }
  else
  {
    v33 = 0;
  }
  v35 = *(_QWORD *)(a1 + 32);
  v36 = *(void **)(v35 + 128);
  *(_QWORD *)(v35 + 128) = v33;

}

void sub_10021EB9C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_10021EC30(uint64_t a1)
{
  void *v2;
  void *v3;
  _QWORD v4[2];

  v2 = *(void **)(a1 + 32);
  v4[0] = CFSTR("com.apple.freeform.CRLNativeMetadata");
  v4[1] = CFSTR("com.apple.freeform.CRLNativeData");
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v4, 2));
  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 112) = objc_msgSend(v2, "p_containsAnyUTIFromList:", v3);

}

void sub_10021F18C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10021F1BC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10021F1EC(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  int v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  Class v22;
  NSString *v23;
  void *v24;
  uint64_t v25;

  v5 = a2;
  v6 = a3;
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
  if (v6)
  {
    if (qword_10147E368 != -1)
      dispatch_once(&qword_10147E368, &stru_101245EC8);
    v9 = off_1013D9068;
    if (os_log_type_enabled((os_log_t)off_1013D9068, OS_LOG_TYPE_ERROR))
      sub_100E0F070(v9);
    objc_msgSend(v8, "addObject:", v6);
    v10 = 0;
  }
  else
  {
    objc_opt_class(_TtC8Freeform19CRLPasteboardObject, v7);
    v12 = sub_100221D0C(v11, v5);
    v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
    if (v13)
    {
      v14 = objc_msgSend(*(id *)(a1 + 32), "p_shouldKeepHighlights");
      v15 = (void *)objc_claimAutoreleasedReturnValue(+[CRLPasteboardController descriptionsForBoardItemsOnPasteboardObject:](CRLPasteboardController, "descriptionsForBoardItemsOnPasteboardObject:", v13));
      v10 = (void *)objc_claimAutoreleasedReturnValue(+[CRLPasteboardController providersForBoardItemsAndTextWithBoardItemFactory:keepHighlights:fromPasteboardObject:descriptionsForBoardItems:validGeometries:](CRLPasteboardController, "providersForBoardItemsAndTextWithBoardItemFactory:keepHighlights:fromPasteboardObject:descriptionsForBoardItems:validGeometries:", *(_QWORD *)(a1 + 40), v14, v13, v15, 0));

    }
    else
    {
      v16 = +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101245EE8);
      v17 = off_1013D9070;
      if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
        sub_100E0EFA8(v17, (uint64_t)v5, v16);
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101245F08);
      v18 = off_1013D9070;
      if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
        sub_100DE7468(v18);
      v19 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLiOSItemProviderItemSource loadProvidersForNativeBoardItemsWithBoardItemFactory:loadHandler:]_block_invoke"));
      v20 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLiOSItemProviderItemSource.m"));
      objc_opt_class(v5, v21);
      v23 = NSStringFromClass(v22);
      v24 = (void *)objc_claimAutoreleasedReturnValue(v23);
      +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v19, v20, 541, 0, "Native object provided was not a pasteboard object! Got %{public}@", v24);

      v10 = 0;
    }

  }
  v25 = *(_QWORD *)(a1 + 48);
  if (v25)
    (*(void (**)(uint64_t, void *, void *))(v25 + 16))(v25, v10, v8);

}

void sub_10021F498(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_10021F4C8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10021F4F8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10021F528(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10021F558(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10022032C(_Unwind_Exception *a1)
{
  _Block_object_dispose(&STACK[0x330], 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1002203A8(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1002203B8(uint64_t a1)
{

}

void sub_1002203C0(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  void *v11;
  int v12;
  void *v13;
  void *v14;
  void *v15;
  void **v16;
  uint64_t v17;
  void (*v18)(uint64_t, void *, void *);
  void *v19;
  id v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;

  v3 = a2;
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 24) = 1;
  dispatch_group_enter(*(dispatch_group_t *)(a1 + 32));
  v4 = *(void **)(a1 + 40);
  v16 = _NSConcreteStackBlock;
  v17 = 3221225472;
  v18 = sub_1002205E0;
  v19 = &unk_101246038;
  v5 = v3;
  v6 = *(_QWORD *)(a1 + 40);
  v7 = *(void **)(a1 + 48);
  v20 = v5;
  v21 = v6;
  v8 = *(_QWORD *)(a1 + 88);
  v25 = *(_QWORD *)(a1 + 80);
  v26 = v8;
  v9 = v7;
  v10 = *(_QWORD *)(a1 + 56);
  v22 = v9;
  v23 = v10;
  v24 = *(id *)(a1 + 32);
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "loadDataRepresentationForTypeIdentifier:completionHandler:", v5, &v16));
  if (v11)
  {
    objc_msgSend(*(id *)(a1 + 64), "addObject:", v11);
  }
  else
  {
    v12 = +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101246058);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E0F104((uint64_t)v5, v12);
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101246078);
    v13 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100DE7468(v13);
    v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLiOSItemProviderItemSource loadProvidersForImportedBoardItemsUsingBoardItemFactory:maximumStringLength:WithLoadHandler:]_block_invoke"));
    v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLiOSItemProviderItemSource.m"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v14, v15, 609, 0, "No progress provided for UTI %@", v5, v16, v17, v18, v19, v20, v21, v22, v23);

  }
}

void sub_1002205E0(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  CRLURLBoardItemProvider *v14;
  void *v15;
  CRLBoardItemProviderFactory *v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  void *v21;
  id v22;
  void *v23;
  void *v24;
  uint64_t v25;
  void *v26;
  void *v27;
  void *v28;
  int v29;
  void *v30;
  id v31;
  uint64_t v32;
  void *v33;
  id v34;
  id v35;
  void *v36;

  v5 = a2;
  v6 = a3;
  if (v5)
  {
    v7 = *(_QWORD *)(a1 + 32);
    v35 = 0;
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSString crl_stringWithItemProviderData:typeIdentifier:error:](NSString, "crl_stringWithItemProviderData:typeIdentifier:error:", v5, v7, &v35));
    v9 = v35;
    if (v9)
    {
      +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101245F90);
      if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
        sub_100E0F2B8();
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101245FB0);
      v10 = off_1013D9070;
      if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
        sub_100DE7468(v10);
      v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLiOSItemProviderItemSource loadProvidersForImportedBoardItemsUsingBoardItemFactory:maximumStringLength:WithLoadHandler:]_block_invoke"));
      v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLiOSItemProviderItemSource.m"));
      +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v11, v12, 572, 0, "expected nil value for '%{public}s'", "stringError");

    }
    v13 = (void *)objc_claimAutoreleasedReturnValue(+[CRLPasteboardController detectedImportableURLForPasteboardString:canTrimWhitespace:](CRLPasteboardController, "detectedImportableURLForPasteboardString:canTrimWhitespace:", v8, 1));
    if (v13)
    {
      v14 = [CRLURLBoardItemProvider alloc];
      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "suggestedName"));
      v16 = -[CRLURLBoardItemProvider initWithURL:fallbackBoardItemProvider:isDetectedURL:suggestedName:](v14, "initWithURL:fallbackBoardItemProvider:isDetectedURL:suggestedName:", v13, 0, 0, v15);

    }
    else
    {
      if ((unint64_t)objc_msgSend(v8, "length") > *(_QWORD *)(a1 + 80))
      {
        v16 = -[CRLBoardItemProviderFactory initWithBoardItemFactory:]([CRLBoardItemProviderFactory alloc], "initWithBoardItemFactory:", *(_QWORD *)(a1 + 48));
        v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "defaultTextFileName"));
        v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "suggestedName"));

        if (v19)
        {
          v20 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "suggestedName"));

          v18 = (void *)v20;
        }
        v34 = 0;
        v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "crl_writeToFileUsingName:error:", v18, &v34));
        v22 = v34;
        v23 = v22;
        v33 = v18;
        if (v22)
        {
          v31 = v22;
          v29 = +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
          v30 = v21;
          if (qword_10147E370 != -1)
            dispatch_once(&qword_10147E370, &stru_101245FD0);
          if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
            sub_100E0F228((uint64_t)v6, v29);
          if (qword_10147E370 != -1)
            dispatch_once(&qword_10147E370, &stru_101245FF0);
          v24 = off_1013D9070;
          if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
            sub_100DE7468(v24);
          v25 = objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLiOSItemProviderItemSource loadProvidersForImportedBoardItemsUsingBoardItemFactory:maximumStringLength:WithLoadHandler:]_block_invoke"));
          v26 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLiOSItemProviderItemSource.m"));
          +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v25, v26, 591, 0, "Failed to create a temporary file for oversize string: %@", v6);

          v27 = (void *)v25;
          v23 = v31;
          v21 = v30;
        }
        else
        {
          v36 = v21;
          v28 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v36, 1));
          v32 = objc_claimAutoreleasedReturnValue(-[CRLBoardItemProviderFactory providersForBoardItemsFromURLs:](v16, "providersForBoardItemsFromURLs:", v28));

          v27 = (void *)v32;
          objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40), "crl_addObjectsFromNonNilArray:", v32);
        }

        goto LABEL_33;
      }
      v16 = (CRLBoardItemProviderFactory *)objc_claimAutoreleasedReturnValue(+[CRLTextBoxingBoardItemProvider objectWithItemProviderData:typeIdentifier:error:](CRLTextBoxingBoardItemProvider, "objectWithItemProviderData:typeIdentifier:error:", v5, *(_QWORD *)(a1 + 32), 0));
    }
    objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40), "crl_addNonNilObject:", v16);
LABEL_33:

    goto LABEL_34;
  }
  if (qword_10147E368 != -1)
    dispatch_once(&qword_10147E368, &stru_101246010);
  v17 = off_1013D9068;
  if (os_log_type_enabled((os_log_t)off_1013D9068, OS_LOG_TYPE_ERROR))
    sub_100E0F194(v17);
LABEL_34:
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 64));

}

void sub_100220B10(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100220B40(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100220B70(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100220BA0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100220BD0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_100220C00(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100220C30(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100220C60(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  id v7;
  void *v8;
  int v9;
  void *v10;
  void *v11;
  void *v12;
  int8x16_t v13;
  _QWORD v14[4];
  id v15;
  int8x16_t v16;
  uint64_t v17;

  v3 = a2;
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = 1;
  dispatch_group_enter(*(dispatch_group_t *)(a1 + 32));
  v4 = *(void **)(a1 + 40);
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  v14[2] = sub_100220E78;
  v14[3] = &unk_101246168;
  v5 = v3;
  v6 = *(_QWORD *)(a1 + 64);
  v15 = v5;
  v17 = v6;
  v13 = *(int8x16_t *)(a1 + 32);
  v7 = (id)v13.i64[0];
  v16 = vextq_s8(v13, v13, 8uLL);
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "loadDataRepresentationForTypeIdentifier:completionHandler:", v5, v14));
  if (v8)
  {
    objc_msgSend(*(id *)(a1 + 48), "addObject:", v8);
  }
  else
  {
    v9 = +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101246188);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E0F348((uint64_t)v5, v9);
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_1012461A8);
    v10 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100DE7468(v10);
    v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLiOSItemProviderItemSource loadProvidersForImportedBoardItemsUsingBoardItemFactory:maximumStringLength:WithLoadHandler:]_block_invoke"));
    v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLiOSItemProviderItemSource.m"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v11, v12, 634, 0, "No progress provided for UTI %@", v5);

  }
}

void sub_100220E78(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  CRLURLBoardItemProvider *v17;
  void *v18;
  CRLURLBoardItemProvider *v19;
  void *v20;
  id v21;

  v5 = a2;
  v6 = a3;
  if (v5)
  {
    v7 = *(_QWORD *)(a1 + 32);
    v21 = 0;
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSString crl_stringWithItemProviderData:typeIdentifier:error:](NSString, "crl_stringWithItemProviderData:typeIdentifier:error:", v5, v7, &v21));
    v9 = v21;
    if (v9)
    {
      +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_1012460C0);
      if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
        sub_100E0F4FC();
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_1012460E0);
      v10 = off_1013D9070;
      if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
        sub_100DE7468(v10);
      v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLiOSItemProviderItemSource loadProvidersForImportedBoardItemsUsingBoardItemFactory:maximumStringLength:WithLoadHandler:]_block_invoke"));
      v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLiOSItemProviderItemSource.m"));
      +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v11, v12, 620, 0, "expected nil value for '%{public}s'", "stringError");

    }
    v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL URLWithString:](NSURL, "URLWithString:", v8));
    if (!v13)
    {
      +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101246100);
      if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
        sub_100E0F46C();
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101246120);
      v14 = off_1013D9070;
      if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
        sub_100DE7468(v14);
      v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLiOSItemProviderItemSource loadProvidersForImportedBoardItemsUsingBoardItemFactory:maximumStringLength:WithLoadHandler:]_block_invoke"));
      v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLiOSItemProviderItemSource.m"));
      +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v15, v16, 623, 0, "invalid nil value for '%{public}s'", "url");

    }
    v17 = [CRLURLBoardItemProvider alloc];
    v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "suggestedName"));
    v19 = -[CRLURLBoardItemProvider initWithURL:fallbackBoardItemProvider:isDetectedURL:suggestedName:](v17, "initWithURL:fallbackBoardItemProvider:isDetectedURL:suggestedName:", v13, 0, 0, v18);

    objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), "crl_addNonNilObject:", v19);
  }
  else
  {
    if (qword_10147E368 != -1)
      dispatch_once(&qword_10147E368, &stru_101246140);
    v20 = off_1013D9068;
    if (os_log_type_enabled((os_log_t)off_1013D9068, OS_LOG_TYPE_ERROR))
      sub_100E0F3D8(v20);
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 48));

}

void sub_10022123C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10022126C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10022129C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002212CC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002212FC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_10022132C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10022135C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10022138C(uint64_t a1, uint64_t a2)
{
  objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), "crl_addObjectsFromNonNilArray:", a2);
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_1002213C0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002213F0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100221420(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  CRLInfoImporterBoardItemProvider *v8;
  void *v9;

  v5 = a2;
  v6 = a3;
  v7 = v6;
  if (!*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24))
  {
    if (!v5 || v6)
    {
      if (qword_10147E368 != -1)
        dispatch_once(&qword_10147E368, &stru_101246258);
      v9 = off_1013D9068;
      if (os_log_type_enabled((os_log_t)off_1013D9068, OS_LOG_TYPE_ERROR))
        sub_100E0F58C((uint64_t)v5, v9, v7);
    }
    else
    {
      v8 = -[CRLInfoImporterBoardItemProvider initWithURL:type:boardItemFactory:]([CRLInfoImporterBoardItemProvider alloc], "initWithURL:type:boardItemFactory:", v5, *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
      objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), "addObject:", v8);

    }
    dispatch_group_leave(*(dispatch_group_t *)(a1 + 48));
  }

}

void sub_100221514(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_100221544(uint64_t a1)
{
  void *v2;
  void (**v3)(void);

  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = 0;
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = 1;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "cancellationHandler"));

  if (v2)
  {
    v3 = (void (**)(void))objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "cancellationHandler"));
    v3[2]();

  }
}

void sub_1002215D0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100221600(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100221630(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_100221660(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = *(_QWORD *)(a1 + 32);
  if (v2)
    (*(void (**)(uint64_t, _QWORD))(v2 + 16))(v2, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = 0;

}

void sub_100221934(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100221964(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100221994(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;

  v5 = a2;
  v6 = a3;
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
  if (v6)
  {
    if (qword_10147E368 != -1)
      dispatch_once(&qword_10147E368, &stru_101246368);
    v9 = off_1013D9068;
    if (os_log_type_enabled((os_log_t)off_1013D9068, OS_LOG_TYPE_ERROR))
      sub_100E0F070(v9);
    objc_msgSend(v8, "addObject:", v6);
  }
  else
  {
    objc_opt_class(_TtC8Freeform19CRLPasteboardObject, v7);
    v11 = sub_100221D0C(v10, v5);
    v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
    v13 = v12;
    if (v12)
    {
      v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "makeTextboxFromCopiedTextWith:", *(_QWORD *)(a1 + 32)));
      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "textStorage"));
      (*(void (**)(_QWORD, void *, id))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), v15, objc_msgSend(v13, "isSmartCopyPaste"));

    }
  }

}

void sub_100221AD4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

id sub_100221D04@<X0>(id a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 40) = a2;
  return a1;
}

id sub_100221D0C(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;

  v3 = a2;
  v4 = v3;
  if (v3 && (objc_opt_isKindOfClass(v3, a1) & 1) != 0)
    v5 = v4;
  else
    v5 = 0;

  return v5;
}

id sub_100221D5C(void *a1, uint64_t a2, _QWORD *a3)
{
  id v5;
  _QWORD *v6;
  id v7;
  _QWORD *v9;

  v5 = a1;
  v9 = a3;
  if (!v5)
  {
LABEL_6:
    v7 = 0;
    goto LABEL_7;
  }
  if (a2)
  {
    do
    {
      v6 = v9++;
      if ((objc_msgSend(v5, "conformsToProtocol:", *v6) & 1) == 0)
        goto LABEL_6;
    }
    while (--a2);
  }
  v7 = v5;
LABEL_7:

  return v7;
}

id sub_100221DDC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  id v9;

  v9 = sub_100221D5C(a1, a2, &a9);
  return (id)objc_claimAutoreleasedReturnValue(v9);
}

id sub_100221E08(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  int v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  objc_class *v20;
  NSString *v21;
  void *v22;

  v10 = a1;
  v11 = sub_100221D5C(v10, a2, &a9);
  v12 = objc_claimAutoreleasedReturnValue(v11);
  v13 = (void *)v12;
  if (v10 && !v12)
  {
    v14 = +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_1012463B0);
    v15 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E0F708(v15, (uint64_t)v10, v14);
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_1012463D0);
    v16 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100DE7468(v16);
    v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "id CRLCheckedProtocolCast(__strong id<NSObject>, NSUInteger, ...)"));
    v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLCast.m"));
    v20 = (objc_class *)objc_opt_class(v10, v19);
    v21 = NSStringFromClass(v20);
    v22 = (void *)objc_claimAutoreleasedReturnValue(v21);
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v17, v18, 65, 0, "Unexpected object type %{public}@ in checked cast to multiple protocols", v22, &a9);

  }
  return v13;
}

void sub_100221FA8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100221FD8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

id sub_100222008(void *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  id v7;
  void *v8;
  _QWORD *v9;
  id v10;
  _QWORD *v12;

  v7 = a1;
  v8 = v7;
  v12 = a4;
  if (!v7 || (objc_opt_isKindOfClass(v7, a2) & 1) == 0)
  {
LABEL_7:
    v10 = 0;
    goto LABEL_8;
  }
  if (a3)
  {
    do
    {
      v9 = v12++;
      if ((objc_msgSend(v8, "conformsToProtocol:", *v9) & 1) == 0)
        goto LABEL_7;
    }
    while (--a3);
  }
  v10 = v8;
LABEL_8:

  return v10;
}

id sub_10022209C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  id v9;

  v9 = sub_100222008(a1, a2, a3, &a9);
  return (id)objc_claimAutoreleasedReturnValue(v9);
}

id sub_1002220C8(void *a1, objc_class *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  id v11;
  id v12;
  uint64_t v13;
  void *v14;
  unsigned int v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  objc_class *v21;
  NSString *v22;
  void *v23;
  NSString *v24;
  void *v25;
  NSObject *v27;
  uint64_t v28;
  objc_class *v29;
  NSString *v30;
  void *v31;
  NSString *v32;
  void *v33;
  uint8_t buf[4];
  unsigned int v35;
  __int16 v36;
  const char *v37;
  __int16 v38;
  const char *v39;
  __int16 v40;
  int v41;
  __int16 v42;
  void *v43;
  __int16 v44;
  void *v45;

  v11 = a1;
  v12 = sub_100222008(v11, (uint64_t)a2, a3, &a9);
  v13 = objc_claimAutoreleasedReturnValue(v12);
  v14 = (void *)v13;
  if (v11 && !v13)
  {
    v15 = +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_1012463F0);
    v16 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
    {
      v27 = v16;
      v29 = (objc_class *)objc_opt_class(v11, v28);
      v30 = NSStringFromClass(v29);
      v31 = (void *)objc_claimAutoreleasedReturnValue(v30);
      v32 = NSStringFromClass(a2);
      v33 = (void *)objc_claimAutoreleasedReturnValue(v32);
      *(_DWORD *)buf = 67110402;
      v35 = v15;
      v36 = 2082;
      v37 = "id CRLCheckedClassAndProtocolCast(__strong id<NSObject>, __unsafe_unretained Class, NSUInteger, ...)";
      v38 = 2082;
      v39 = "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLCast.m";
      v40 = 1024;
      v41 = 106;
      v42 = 2114;
      v43 = v31;
      v44 = 2114;
      v45 = v33;
      _os_log_error_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Unexpected object type %{public}@ in checked dynamic cast to class %{public}@ and 1 or more protocols", buf, 0x36u);

    }
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101246410);
    v17 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100DE7468(v17);
    v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "id CRLCheckedClassAndProtocolCast(__strong id<NSObject>, __unsafe_unretained Class, NSUInteger, ...)"));
    v19 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLCast.m"));
    v21 = (objc_class *)objc_opt_class(v11, v20);
    v22 = NSStringFromClass(v21);
    v23 = (void *)objc_claimAutoreleasedReturnValue(v22);
    v24 = NSStringFromClass(a2);
    v25 = (void *)objc_claimAutoreleasedReturnValue(v24);
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v18, v19, 106, 0, "Unexpected object type %{public}@ in checked dynamic cast to class %{public}@ and 1 or more protocols", v23, v25);

  }
  return v14;
}

void sub_10022235C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10022238C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

id sub_1002223BC(objc_class *a1, void *a2)
{
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  unsigned int v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  objc_class *v13;
  NSString *v14;
  void *v15;
  NSString *v16;
  void *v17;
  NSObject *v19;
  uint64_t v20;
  objc_class *v21;
  NSString *v22;
  void *v23;
  NSString *v24;
  void *v25;
  uint8_t buf[4];
  unsigned int v27;
  __int16 v28;
  const char *v29;
  __int16 v30;
  const char *v31;
  __int16 v32;
  int v33;
  __int16 v34;
  void *v35;
  __int16 v36;
  void *v37;

  v3 = a2;
  v4 = sub_100221D0C((uint64_t)a1, v3);
  v5 = objc_claimAutoreleasedReturnValue(v4);
  v6 = (void *)v5;
  if (v3 && !v5)
  {
    v7 = +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101246430);
    v8 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
    {
      v19 = v8;
      v21 = (objc_class *)objc_opt_class(v3, v20);
      v22 = NSStringFromClass(v21);
      v23 = (void *)objc_claimAutoreleasedReturnValue(v22);
      v24 = NSStringFromClass(a1);
      v25 = (void *)objc_claimAutoreleasedReturnValue(v24);
      *(_DWORD *)buf = 67110402;
      v27 = v7;
      v28 = 2082;
      v29 = "id CRLCheckedDynamicCast(__unsafe_unretained Class, __strong id<NSObject>)";
      v30 = 2082;
      v31 = "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLCast.m";
      v32 = 1024;
      v33 = 131;
      v34 = 2114;
      v35 = v23;
      v36 = 2114;
      v37 = v25;
      _os_log_error_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Unexpected object type %{public}@ in checked dynamic cast to %{public}@", buf, 0x36u);

    }
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101246450);
    v9 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100DE7468(v9);
    v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "id CRLCheckedDynamicCast(__unsafe_unretained Class, __strong id<NSObject>)"));
    v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLCast.m"));
    v13 = (objc_class *)objc_opt_class(v3, v12);
    v14 = NSStringFromClass(v13);
    v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
    v16 = NSStringFromClass(a1);
    v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v10, v11, 131, 0, "Unexpected object type %{public}@ in checked dynamic cast to %{public}@", v15, v17);

  }
  return v6;
}

void sub_100222640(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100222670(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10022272C(id a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  __int16 v4;

  v3 = 0x3F00A10021002ELL;
  v4 = 191;
  v1 = objc_claimAutoreleasedReturnValue(+[NSCharacterSet crlwp_characterSetWithCharactersInArray:length:](NSCharacterSet, "crlwp_characterSetWithCharactersInArray:length:", &v3, 5));
  v2 = (void *)qword_101415100;
  qword_101415100 = v1;

}

void sub_1002227F0(id a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[NSCharacterSet crlwp_characterSetWithCharactersInArray:length:](NSCharacterSet, "crlwp_characterSetWithCharactersInArray:length:", &unk_100EEE548, 15));
  v2 = (void *)qword_101415110;
  qword_101415110 = v1;

}

void sub_100222868(id a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[NSCharacterSet crlwp_characterSetWithCharactersInArray:length:](NSCharacterSet, "crlwp_characterSetWithCharactersInArray:length:", &unk_100EEE566, 31));
  v2 = (void *)qword_101415120;
  qword_101415120 = v1;

}

void sub_1002228E0(id a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[NSCharacterSet crlwp_characterSetWithCharactersInArray:length:](NSCharacterSet, "crlwp_characterSetWithCharactersInArray:length:", &unk_100EEE5A4, 19));
  v2 = (void *)qword_101415130;
  qword_101415130 = v1;

}

void sub_100222958(id a1)
{
  uint64_t v1;
  void *v2;
  int v3;

  v3 = 538517528;
  v1 = objc_claimAutoreleasedReturnValue(+[NSCharacterSet crlwp_characterSetWithCharactersInArray:length:](NSCharacterSet, "crlwp_characterSetWithCharactersInArray:length:", &v3, 2));
  v2 = (void *)qword_101415140;
  qword_101415140 = v1;

}

void sub_1002229E4(id a1)
{
  uint64_t v1;
  void *v2;
  int v3;

  v3 = 538443815;
  v1 = objc_claimAutoreleasedReturnValue(+[NSCharacterSet crlwp_characterSetWithCharactersInArray:length:](NSCharacterSet, "crlwp_characterSetWithCharactersInArray:length:", &v3, 2));
  v2 = (void *)qword_101415150;
  qword_101415150 = v1;

}

void sub_100222A70(id a1)
{
  uint64_t v1;
  void *v2;
  int v3;

  v3 = 538509351;
  v1 = objc_claimAutoreleasedReturnValue(+[NSCharacterSet crlwp_characterSetWithCharactersInArray:length:](NSCharacterSet, "crlwp_characterSetWithCharactersInArray:length:", &v3, 2));
  v2 = (void *)qword_101415160;
  qword_101415160 = v1;

}

void sub_100222AFC(id a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;

  v3 = 0x201D201C20192018;
  v1 = objc_claimAutoreleasedReturnValue(+[NSCharacterSet crlwp_characterSetWithCharactersInArray:length:](NSCharacterSet, "crlwp_characterSetWithCharactersInArray:length:", &v3, 4));
  v2 = (void *)qword_101415170;
  qword_101415170 = v1;

}

void sub_100222BBC(id a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[NSCharacterSet characterSetWithRange:](NSCharacterSet, "characterSetWithRange:", 65024, 16));
  v2 = (void *)qword_101415180;
  qword_101415180 = v1;

}

void sub_100222C30(id a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;

  v3 = 0x270022201D2019;
  v1 = objc_claimAutoreleasedReturnValue(+[NSCharacterSet crlwp_characterSetWithCharactersInArray:length:](NSCharacterSet, "crlwp_characterSetWithCharactersInArray:length:", &v3, 4));
  v2 = (void *)qword_101415190;
  qword_101415190 = v1;

}

void sub_100222CF0(id a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;

  v3 = 0x270022201C2018;
  v1 = objc_claimAutoreleasedReturnValue(+[NSCharacterSet crlwp_characterSetWithCharactersInArray:length:](NSCharacterSet, "crlwp_characterSetWithCharactersInArray:length:", &v3, 4));
  v2 = (void *)qword_1014151A0;
  qword_1014151A0 = v1;

}

id sub_100222D84(id a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v8;
  __int16 v9;

  v8 = 0xEFFFC00050004;
  v9 = 6;
  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithCharacters:length:](NSString, "stringWithCharacters:length:", &v8, 5));
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableCharacterSet characterSetWithCharactersInString:](NSMutableCharacterSet, "characterSetWithCharactersInString:", v1));
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSCharacterSet whitespaceAndNewlineCharacterSet](NSCharacterSet, "whitespaceAndNewlineCharacterSet"));
  objc_msgSend(v3, "formUnionWithCharacterSet:", v4);

  objc_msgSend(v3, "formUnionWithCharacterSet:", v2);
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSCharacterSet crlwp_allQuotesCharacterSetExcludingRight](NSCharacterSet, "crlwp_allQuotesCharacterSetExcludingRight"));
  objc_msgSend(v3, "formUnionWithCharacterSet:", v5);

  v6 = objc_msgSend(v3, "copy");
  return v6;
}

id sub_100222EC4(id a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v9;
  __int16 v10;

  v9 = 0xEFFFC00050004;
  v10 = 6;
  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithCharacters:length:](NSString, "stringWithCharacters:length:", &v9, 5));
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableCharacterSet characterSetWithCharactersInString:](NSMutableCharacterSet, "characterSetWithCharactersInString:", v1));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableCharacterSet characterSetWithCharactersInString:](NSMutableCharacterSet, "characterSetWithCharactersInString:", CFSTR(")].,;:?'!\"%*-/}")));
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSCharacterSet whitespaceAndNewlineCharacterSet](NSCharacterSet, "whitespaceAndNewlineCharacterSet"));
  objc_msgSend(v3, "formUnionWithCharacterSet:", v4);

  objc_msgSend(v3, "formUnionWithCharacterSet:", v2);
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSCharacterSet crlwp_allQuotesCharacterSetExcludingLeft](NSCharacterSet, "crlwp_allQuotesCharacterSetExcludingLeft"));
  objc_msgSend(v3, "formUnionWithCharacterSet:", v5);

  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSCharacterSet punctuationCharacterSet](NSCharacterSet, "punctuationCharacterSet"));
  objc_msgSend(v3, "formUnionWithCharacterSet:", v6);

  v7 = objc_msgSend(v3, "copy");
  return v7;
}

NSCharacterSet *__cdecl sub_100223024(id a1)
{
  void *v1;
  void *v2;
  __int128 v4;
  int v5;

  v4 = xmmword_100EEE5DE;
  v5 = 539492356;
  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithCharacters:length:](NSString, "stringWithCharacters:length:", &v4, 10));
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSCharacterSet characterSetWithCharactersInString:](NSCharacterSet, "characterSetWithCharactersInString:", v1));

  return (NSCharacterSet *)v2;
}

void sub_100223558(uint64_t a1, void *a2, _BYTE *a3)
{
  void *v5;
  id v6;

  v6 = a2;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "repForInfo:"));
  if (+[CRLConnectionLineRep canConnectToRep:](CRLConnectionLineRep, "canConnectToRep:", v5))
  {
    objc_msgSend(*(id *)(a1 + 40), "addObject:", v6);
    if ((unint64_t)objc_msgSend(*(id *)(a1 + 40), "count") >= 3)
      *a3 = 1;
  }

}

void sub_10022413C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10022416C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100225128(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1002251B0(id a1)
{
  uint64_t v1;
  void *v2;

  if (!qword_1014151B0)
  {
    v1 = objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](NSSet, "setWithArray:", &off_1012CB590));
    v2 = (void *)qword_1014151B0;
    qword_1014151B0 = v1;

  }
}

void sub_100225294(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_10022533C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1002254D0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1002255C8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10022580C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_100225864(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100225894(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002259B4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_100225A8C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_100225AF4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100225BF4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100225C6C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100225CFC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_100225E4C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_100225F10(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

double sub_100226AB4(double *a1, double *a2, double *a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  double v18;
  double v19;
  double v20;
  double v21;
  double result;

  v18 = sub_1000603B8(a4, a5, a8);
  v20 = sub_1000603C4(a6, a7, v18, v19);
  v21 = sub_10031357C(a1, a4, a5) * a10 / v20;
  *a2 = fmax(*a2, v21);
  result = fmin(*a3, v21);
  *a3 = result;
  return result;
}

void sub_100228590(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1002285A8(uint64_t a1)
{
  id result;
  uint64_t v3;
  uint64_t v4;

  result = objc_msgSend(*(id *)(a1 + 32), "crlax_rangeOfLineFragmentAtCharIndex:", *(_QWORD *)(a1 + 48));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  *(_QWORD *)(v3 + 32) = result;
  *(_QWORD *)(v3 + 40) = v4;
  return result;
}

void sub_100228814(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_10022882C(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "wpSelectionClass");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = result;
  return result;
}

void sub_10022895C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100228974(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_100228984(uint64_t a1)
{

}

void sub_10022898C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "_crlaxWPSelectionClass"), "selectionWithRange:", *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56)));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_100228D40(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100228D70(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100229058(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 96), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100229090(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1002290A0(uint64_t a1)
{

}

id sub_1002290A8(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[CRLImageProviderPool sharedPool](CRLImageProviderPool, "sharedPool"));
  v5 = objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "temporaryProviderForAsset:shouldValidate:", v3, 1));

  v6 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v7 = *(void **)(v6 + 40);
  *(_QWORD *)(v6 + 40) = v5;

  if (objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), "isValid")
    && (objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), "isError") & 1) == 0)
  {
    objc_opt_class(CRLBitmapImageProvider, v8);
    v10 = sub_100221D0C(v9, *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40));
    v11 = objc_claimAutoreleasedReturnValue(v10);
    v12 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v13 = *(void **)(v12 + 40);
    *(_QWORD *)(v12 + 40) = v11;

  }
  v14 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40);
  if (!v14)
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101246778);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E0FA04();
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101246798);
    v15 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100DE8358(v15);
    v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLImageFaceAnalyzer p_analyzeFaceRectsIfNeeded]_block_invoke"));
    v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLImageFaceAnalyzer.m"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v16, v17, 87, 0, "invalid nil value for '%{public}s'", "bitmapProvider");

    v14 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40);
  }
  return objc_msgSend(*(id *)(a1 + 32), "p_analyzeFaceRectsWithProvider:", v14);
}

void sub_1002292C8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002292F8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100229574(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

BOOL sub_100229648(uint64_t a1, void *a2)
{
  double v3;
  double v4;

  objc_msgSend(a2, "CGRectValue");
  return v3 * v4 > *(double *)(a1 + 32) * 0.699999988;
}

void sub_100229D90(uint64_t a1)
{
  CRLAccessibilityPostAnnouncementNotification(*(void **)(a1 + 32), *(void **)(a1 + 40));
}

void sub_100229F9C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100229FCC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10022A328(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10022A358(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10022ABA8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10022AC2C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10022AC5C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10022B010(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10022B094(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10022B0C4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10022B29C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  void *v26;

  _Block_object_dispose(&a26, 8);

  _Unwind_Resume(a1);
}

__n128 sub_10022B2DC(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)(a2 + 48);
  v3 = *(_OWORD *)(a2 + 64);
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v3;
  return result;
}

void sub_10022B2EC(uint64_t a1, uint64_t a2)
{
  double v4;
  double v5;
  void *v6;
  void *v7;
  double *v8;
  CGFloat v9;
  CGFloat v10;
  CGFloat v11;
  CGFloat v12;
  double v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;

  v19 = (id)objc_claimAutoreleasedReturnValue(+[CRLBezierPath bezierPath](CRLBezierPath, "bezierPath"));
  objc_msgSend(v19, "moveToPoint:", *(double *)(a1 + 64), *(double *)(a1 + 72));
  v4 = sub_10040EB7C(a2);
  objc_msgSend(v19, "relativeLineToPoint:", sub_1000603DC(v4, v5, *(double *)(a1 + 80)));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "clipPath:onLayout:outset:reversed:isValid:", v19, *(_QWORD *)(a1 + 40), 0, *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24, *(double *)(a1 + 88)));
  v7 = v6;
  if (v6 && *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24))
  {
    v8 = *(double **)(*(_QWORD *)(a1 + 56) + 8);
    v9 = v8[6];
    v10 = v8[7];
    v11 = v8[8];
    v12 = v8[9];
    objc_msgSend(v6, "point");
    v14 = sub_1000615D8(v9, v10, v11, v12, v13);
    v15 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    *(double *)(v15 + 48) = v14;
    *(_QWORD *)(v15 + 56) = v16;
    *(_QWORD *)(v15 + 64) = v17;
    *(_QWORD *)(v15 + 72) = v18;
  }

}

void sub_10022B3E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

__n128 sub_10022B408@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  uint64_t v7;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __n128 result;
  __int128 v16;
  _OWORD v17[2];
  _OWORD v18[2];
  _OWORD v19[2];
  _OWORD v20[2];

  v7 = *(_QWORD *)(a1 + 24);
  if (!v7)
  {
    if (!*(_QWORD *)(a1 + 16))
      goto LABEL_13;
    goto LABEL_9;
  }
  v9 = *(_OWORD *)(a1 + 16);
  v20[0] = *(_OWORD *)a1;
  v20[1] = v9;
  v10 = sub_10019FA78((uint64_t)v20);
  v11 = *(_QWORD *)(a1 + 16);
  if (a2 == v10)
  {
    --*(_QWORD *)a1;
    *(_QWORD *)(a1 + 16) = ++v11;
  }
  v12 = *(_OWORD *)(a1 + 16);
  v19[0] = *(_OWORD *)a1;
  v19[1] = v12;
  if (a2 == sub_1001E98C8(v19))
    *(_QWORD *)(a1 + 16) = ++v11;
  if (v11)
  {
LABEL_9:
    v13 = *(_OWORD *)(a1 + 16);
    v18[0] = *(_OWORD *)a1;
    v18[1] = v13;
    if (a3 == sub_1001E98D8((uint64_t)v18))
    {
      --*(_QWORD *)(a1 + 8);
      *(_QWORD *)(a1 + 24) = ++v7;
    }
    v14 = *(_OWORD *)(a1 + 16);
    v17[0] = *(_OWORD *)a1;
    v17[1] = v14;
    if (a3 == sub_1001E98E0((uint64_t)v17))
      *(_QWORD *)(a1 + 24) = v7 + 1;
  }
LABEL_13:
  result = *(__n128 *)a1;
  v16 = *(_OWORD *)(a1 + 16);
  *a4 = *(_OWORD *)a1;
  a4[1] = v16;
  return result;
}

void sub_10022C11C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,void *a31,uint64_t a32,uint64_t a33,void *a34,uint64_t a35,uint64_t a36,void *__p,uint64_t a38,uint64_t a39,void *a40,uint64_t a41)
{
  void *v41;
  void *v42;
  void *v43;

  if (__p)
    operator delete(__p);
  if (a40)
    operator delete(a40);

  _Unwind_Resume(a1);
}

void sub_10022C220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int128 *a5)
{
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;

  v12 = 0;
  v5 = a5[3];
  v9 = a5[2];
  v10 = v5;
  v11 = *((_QWORD *)a5 + 8);
  v6 = a5[1];
  v7 = *a5;
  v8 = v6;
  sub_10022FC20();
}

void sub_10022C900(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,char a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,void *__p,uint64_t a62,uint64_t a63)
{
  char a64;
  void *a70;
  uint64_t a71;
  void *v71;
  uint64_t v72;

  _Block_object_dispose(&a41, 8);
  _Block_object_dispose((const void *)(v72 - 224), 8);
  _Block_object_dispose(&a55, 8);
  if (__p)
  {
    a62 = (uint64_t)__p;
    operator delete(__p);
  }
  _Block_object_dispose(&a64, 8);
  if (a70)
  {
    a71 = (uint64_t)a70;
    operator delete(a70);
  }
  _Unwind_Resume(a1);
}

void sub_10022CB5C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10022CD78(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10022CFE4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10022DA48(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10022DE3C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10022DF1C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10022DFB8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10022E2EC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;

  _Unwind_Resume(a1);
}

void sub_10022E460(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10022EAC8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_10022ED64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *__p,uint64_t a26,uint64_t a27,void *a28,uint64_t a29)
{
  void *v29;
  void *v30;
  uint64_t v31;
  void *v33;
  void *v34;

  v33 = *(void **)(v31 - 144);
  if (v33)
  {
    *(_QWORD *)(v31 - 136) = v33;
    operator delete(v33);
  }
  v34 = *(void **)(v31 - 120);
  if (v34)
  {
    *(_QWORD *)(v31 - 112) = v34;
    operator delete(v34);
  }

  _Unwind_Resume(a1);
}

void sub_10022F484(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,void *a31,uint64_t a32,uint64_t a33,void *a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,void *__p,uint64_t a56,uint64_t a57,void *a58,uint64_t a59)
{
  void *v59;

  if (__p)
    operator delete(__p);
  if (a58)
    operator delete(a58);

  _Unwind_Resume(a1);
}

BOOL sub_10022F788(uint64_t a1, uint64_t a2)
{
  return sub_10022F798((unsigned __int8 *)(a2 + 128), (unsigned __int8 *)(a1 + 128));
}

BOOL sub_10022F798(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  double v9;
  BOOL v10;
  double v11;
  double v12;
  double v14;
  double v15;

  v2 = *a1;
  if (v2 != *a2)
    return v2 == 0;
  v2 = a1[1];
  if (v2 != a2[1])
    return v2 == 0;
  v3 = *((_QWORD *)a1 + 1);
  v4 = *((_QWORD *)a2 + 1);
  v5 = v3 < v4;
  if (v3 != v4)
    return v5;
  v6 = *((_QWORD *)a1 + 2);
  v7 = *((_QWORD *)a2 + 2);
  v5 = v6 < v7;
  if (v6 != v7)
    return v5;
  v8 = *((double *)a1 + 3);
  v9 = *((double *)a2 + 3);
  v10 = v8 < v9;
  if (v8 != v9)
    return v10;
  v11 = *((double *)a1 + 4);
  v12 = *((double *)a2 + 4);
  v10 = v11 < v12;
  if (v11 != v12)
    return v10;
  v14 = *((double *)a1 + 5);
  v15 = *((double *)a2 + 5);
  return v14 != v15 && v14 < v15;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_10022F82C(uint64_t a1, uint64_t a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a2;
  sub_100231954(a3, &v6, &v6);
  sub_100231954(a4, &v5, &v5);
}

unint64_t sub_10022F87C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  _OWORD v13[2];
  _OWORD v14[2];
  _OWORD v15[2];
  _OWORD v16[2];

  switch(a2)
  {
    case 0:
      v3 = *(_QWORD *)(a1 + 32);
      v4 = *(_OWORD *)(a1 + 16);
      v16[0] = *(_OWORD *)a1;
      v16[1] = v4;
      v5 = sub_1001E98E0((uint64_t)v16);
      goto LABEL_5;
    case 1:
      v3 = *(_QWORD *)(a1 + 32);
      v8 = *(_OWORD *)(a1 + 16);
      v15[0] = *(_OWORD *)a1;
      v15[1] = v8;
      v5 = sub_1001E98D8((uint64_t)v15);
LABEL_5:
      v9 = v5;
      v10 = v3;
      goto LABEL_9;
    case 2:
      v11 = *(_OWORD *)(a1 + 16);
      v14[0] = *(_OWORD *)a1;
      v14[1] = v11;
      v10 = sub_10019FA78((uint64_t)v14);
      goto LABEL_8;
    case 3:
      v12 = *(_OWORD *)(a1 + 16);
      v13[0] = *(_OWORD *)a1;
      v13[1] = v12;
      v10 = sub_1001E98C8(v13);
LABEL_8:
      v9 = *(_QWORD *)(a1 + 40);
LABEL_9:
      result = (unint64_t)SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)((CKRecordID)v10, *(Swift::String *)(&v6 - 1));
      break;
    default:
      result = 0;
      break;
  }
  return result;
}

uint64_t sub_10022F934(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  BOOL v9;
  _QWORD v10[2];
  uint64_t (*v11)(uint64_t, uint64_t);
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;

  v6 = 0;
  v10[0] = _NSConcreteStackBlock;
  v11 = sub_10022F9C8;
  v12 = &unk_1012469B8;
  v10[1] = 3221225472;
  v13 = a2;
  v14 = a3;
  v17 = a5;
  v15 = a1;
  v16 = a6;
  v18 = a4;
  do
  {
    v7 = qword_100EEE668[v6];
    v19 = 0;
    result = ((uint64_t (*)(_QWORD *, uint64_t, char *))v11)(v10, v7, &v19);
    if (v19)
      v9 = 1;
    else
      v9 = v6 == 3;
    ++v6;
  }
  while (!v9);
  return result;
}

uint64_t sub_10022F9C8(uint64_t a1, uint64_t a2)
{
  __int128 *v4;
  uint64_t v5;
  __int128 v6;
  uint64_t result;
  __int128 v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void **v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  __int16 v31;
  __int128 v32;
  __int128 v33;

  v5 = *(_QWORD *)(a1 + 32);
  v4 = *(__int128 **)(a1 + 40);
  v6 = v4[1];
  v32 = *v4;
  v33 = v6;
  result = sub_1001E98F0(&v32, *(_QWORD *)v5, *(_QWORD *)(v5 + 8));
  if ((_DWORD)result)
  {
    do
    {
      v5 = *(_QWORD *)(v5 + 8 * a2 + 16);
      v8 = v4[1];
      v32 = *v4;
      v33 = v8;
      result = sub_1001E98F0(&v32, *(_QWORD *)v5, *(_QWORD *)(v5 + 8));
    }
    while ((result & 1) != 0);
  }
  if (*(_BYTE *)(a1 + 64))
  {
    v5 = *(_QWORD *)(a1 + 56);
  }
  else
  {
    v9 = sub_10022F87C((uint64_t)v4, a2);
    v11 = v10;
    result = sub_1001E97FC(v9, v10, *(_QWORD *)v5, *(_QWORD *)(v5 + 8));
    if ((result & 1) == 0)
    {
      v12 = *(void ***)(a1 + 48);
      v13 = (char *)v12[1];
      v14 = (char *)v12[2];
      if (v13 >= v14)
      {
        v16 = 0x2E8BA2E8BA2E8BA3 * ((v13 - (_BYTE *)*v12) >> 3);
        v17 = v16 + 1;
        if ((unint64_t)(v16 + 1) > 0x2E8BA2E8BA2E8BALL)
          sub_100007810();
        v18 = 0x2E8BA2E8BA2E8BA3 * ((v14 - (_BYTE *)*v12) >> 3);
        if (2 * v18 > v17)
          v17 = 2 * v18;
        if (v18 >= 0x1745D1745D1745DLL)
          v19 = 0x2E8BA2E8BA2E8BALL;
        else
          v19 = v17;
        if (v19)
          v20 = (char *)sub_100007898((uint64_t)(v12 + 2), v19);
        else
          v20 = 0;
        v21 = &v20[88 * v16];
        v22 = &v20[88 * v19];
        *(_QWORD *)v21 = v9;
        *((_QWORD *)v21 + 1) = v11;
        *((_OWORD *)v21 + 1) = 0u;
        *((_OWORD *)v21 + 2) = 0u;
        *((_OWORD *)v21 + 3) = 0u;
        *((_OWORD *)v21 + 4) = 0u;
        *((_WORD *)v21 + 40) = 0;
        v15 = v21 + 88;
        v24 = (char *)*v12;
        v23 = (char *)v12[1];
        if (v23 != *v12)
        {
          do
          {
            v25 = *(_OWORD *)(v23 - 88);
            *(_OWORD *)(v21 - 72) = *(_OWORD *)(v23 - 72);
            *(_OWORD *)(v21 - 88) = v25;
            v26 = *(_OWORD *)(v23 - 56);
            v27 = *(_OWORD *)(v23 - 40);
            v28 = *(_OWORD *)(v23 - 24);
            *((_DWORD *)v21 - 2) = *((_DWORD *)v23 - 2);
            *(_OWORD *)(v21 - 24) = v28;
            *(_OWORD *)(v21 - 40) = v27;
            *(_OWORD *)(v21 - 56) = v26;
            v21 -= 88;
            v23 -= 88;
          }
          while (v23 != v24);
          v23 = (char *)*v12;
        }
        *v12 = v21;
        v12[1] = v15;
        v12[2] = v22;
        if (v23)
          operator delete(v23);
      }
      else
      {
        *(_QWORD *)v13 = v9;
        *((_QWORD *)v13 + 1) = v11;
        *((_OWORD *)v13 + 1) = 0u;
        *((_OWORD *)v13 + 2) = 0u;
        *((_OWORD *)v13 + 3) = 0u;
        *((_OWORD *)v13 + 4) = 0u;
        v15 = v13 + 88;
        *((_WORD *)v13 + 40) = 0;
      }
      v12[1] = v15;
      v29 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
      result = sub_10040EB6C(a2);
      *(_QWORD *)(v29 - 72 + 8 * a2) = v5;
      v30 = v5 + 8 * result;
      *(_QWORD *)(v29 - 72 + 8 * result) = *(_QWORD *)(v30 + 16);
      *(_QWORD *)(*(_QWORD *)(v30 + 16) + 8 * a2 + 16) = v29 - 88;
      *(_QWORD *)(v30 + 16) = v29 - 88;
      v5 = v29 - 88;
    }
  }
  v31 = *(_WORD *)(v5 + 80) | 2;
  *(_WORD *)(v5 + 80) = v31;
  *(_WORD *)(v5 + 80) = v31 & 0xFFBF | ((*(_BYTE *)(a1 + 65) & 3) << 6);
  *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8 * a2 + 56) = v5;
  return result;
}

void sub_10022FC20()
{
  operator new();
}

void sub_100230668(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,void *__p,uint64_t a53)
{
  uint64_t v53;

  if (__p)
    operator delete(__p);
  sub_10001CE40(v53 - 232, *(_QWORD **)(v53 - 224));
  sub_10001CE40(v53 - 208, *(_QWORD **)(v53 - 200));
  _Unwind_Resume(a1);
}

void sub_1002306D8(void **a1, unint64_t a2)
{
  uint64_t v3;
  _BYTE *v4;
  int64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  v4 = a1[2];
  v3 = (uint64_t)(a1 + 2);
  if (0x2E8BA2E8BA2E8BA3 * ((v4 - (_BYTE *)*a1) >> 3) < a2)
  {
    if (a2 >= 0x2E8BA2E8BA2E8BBLL)
      sub_100007810();
    v5 = (_BYTE *)a1[1] - (_BYTE *)*a1;
    v6 = (char *)sub_100007898(v3, a2);
    v7 = &v6[v5];
    v9 = &v6[88 * v8];
    v11 = (char *)*a1;
    v10 = (char *)a1[1];
    v12 = v7;
    if (v10 != *a1)
    {
      do
      {
        v13 = *(_OWORD *)(v10 - 88);
        *(_OWORD *)(v12 - 72) = *(_OWORD *)(v10 - 72);
        *(_OWORD *)(v12 - 88) = v13;
        v14 = *(_OWORD *)(v10 - 56);
        v15 = *(_OWORD *)(v10 - 40);
        v16 = *(_OWORD *)(v10 - 24);
        *((_DWORD *)v12 - 2) = *((_DWORD *)v10 - 2);
        *(_OWORD *)(v12 - 24) = v16;
        *(_OWORD *)(v12 - 40) = v15;
        *(_OWORD *)(v12 - 56) = v14;
        v12 -= 88;
        v10 -= 88;
      }
      while (v10 != v11);
      v10 = (char *)*a1;
    }
    *a1 = v12;
    a1[1] = v7;
    a1[2] = v9;
    if (v10)
      operator delete(v10);
  }
}

void sub_1002307C8(uint64_t a1, unint64_t a2)
{
  unint64_t v2;

  v2 = (uint64_t)(*(_QWORD *)(a1 + 8) - *(_QWORD *)a1) >> 3;
  if (a2 <= v2)
  {
    if (a2 < v2)
      *(_QWORD *)(a1 + 8) = *(_QWORD *)a1 + 8 * a2;
  }
  else
  {
    sub_100231A0C((void **)a1, a2 - v2);
  }
}

double sub_1002307F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  double v4;
  double v5;
  double v6;
  double v7;
  char v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  double v13;
  double v14;
  double v15;

  v1 = *(_QWORD *)(a1 + 24);
  if (v1)
  {
    v2 = a1;
    v3 = *(uint64_t **)a1;
    v4 = 0.0;
    v5 = 0.0;
    v6 = 0.0;
    v7 = 0.0;
    do
    {
      v8 = *(_BYTE *)(v2 + 176);
      v2 = v1;
      v9 = *(uint64_t **)v1;
      if ((v8 & 2) == 0 || (*(_BYTE *)(v1 + 176) & 2) == 0)
      {
        v10 = sub_1001E9974(*v3, v3[1], *v9);
        v12 = (double)v11;
        v13 = -0.0;
        if (v10 == 0 && v11 > 0)
          v14 = (double)v11;
        else
          v14 = -0.0;
        v4 = v4 + v14;
        if (v10 != 0 || v11 >= 0)
          v12 = 0.0;
        v5 = v5 - v12;
        v15 = (double)v10;
        if (v11 == 0 && v10 > 0)
          v13 = (double)v10;
        v7 = v7 + v13;
        if (v11 != 0 || v10 >= 0)
          v15 = 0.0;
        v6 = v6 - v15;
      }
      v1 = *(_QWORD *)(v2 + 24);
      v3 = v9;
    }
    while (v1);
  }
  else
  {
    v7 = 0.0;
    v6 = 0.0;
    v5 = 0.0;
    v4 = 0.0;
  }
  return fmin(v6, v7) + fmin(v4, v5);
}

uint64_t sub_100230904(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t **v7;

  if (a2)
  {
    sub_1001E998C(**(_QWORD **)a1, *(_QWORD *)(*(_QWORD *)a1 + 8), *a2, a2[1]);
    v6 = *(_QWORD *)(a1 + 8);
    if (v6 != a3)
      sub_10040EB6C(v6);
    v7 = (uint64_t **)a1;
    do
    {
      if (*v7 == a2)
        break;
      v7 = (uint64_t **)v7[3];
    }
    while (v7);
    operator new();
  }
  return 0;
}

_QWORD *sub_100230B00(uint64_t a1, uint64_t a2, uint64_t a3, void **a4)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t v22;

  v7 = (_QWORD *)a1;
  *(_BYTE *)(a1 + 176) |= 2u;
  v8 = (uint64_t)(a4 + 2);
  do
  {
    if (*v7 == a3)
      break;
    v9 = sub_100230904((uint64_t)v7, *(uint64_t **)(*v7 + 8 * a2 + 16), a2);
    if ((_QWORD *)v9 != v7)
    {
      v10 = (_QWORD *)v9;
      v12 = a4[1];
      v11 = (unint64_t)a4[2];
      if ((unint64_t)v12 >= v11)
      {
        v14 = ((char *)v12 - (_BYTE *)*a4) >> 3;
        if ((unint64_t)(v14 + 1) >> 61)
          sub_100007810();
        v15 = v11 - (_QWORD)*a4;
        v16 = v15 >> 2;
        if (v15 >> 2 <= (unint64_t)(v14 + 1))
          v16 = v14 + 1;
        if ((unint64_t)v15 >= 0x7FFFFFFFFFFFFFF8)
          v17 = 0x1FFFFFFFFFFFFFFFLL;
        else
          v17 = v16;
        if (v17)
          v18 = (char *)sub_10002BA34(v8, v17);
        else
          v18 = 0;
        v19 = &v18[8 * v14];
        *(_QWORD *)v19 = v7;
        v13 = v19 + 8;
        v21 = (char *)*a4;
        v20 = (char *)a4[1];
        if (v20 != *a4)
        {
          do
          {
            v22 = *((_QWORD *)v20 - 1);
            v20 -= 8;
            *((_QWORD *)v19 - 1) = v22;
            v19 -= 8;
          }
          while (v20 != v21);
          v20 = (char *)*a4;
        }
        *a4 = v19;
        a4[1] = v13;
        a4[2] = &v18[8 * v17];
        if (v20)
          operator delete(v20);
      }
      else
      {
        *v12 = v7;
        v13 = v12 + 1;
      }
      a4[1] = v13;
      v7 = v10;
    }
  }
  while (v7);
  return v7;
}

uint64_t sub_100230C44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  unsigned int v13;
  BOOL v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  double v22;
  double v23;
  double v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v12 = sub_10040EB6C(a6);
  if (a1 == a4 && a2 == a5)
  {
    if (a3 == a6)
      v13 = 4;
    else
      v13 = 1;
    v14 = v12 == a3;
LABEL_7:
    if (v14)
      return 0;
    else
      return v13;
  }
  if (v12 == a3)
  {
    v16 = sub_1001E9960(a3);
    v18 = v17;
    v19 = sub_1001E9974(a4, a5, a1);
    if (sub_1001E9980(v16, v18, v19, v20) < 0)
      return 4;
    v21 = sub_10040EB7C(a3);
    if (a1 == a4 && v21 == 0.0)
      return 0;
    v14 = a2 == a5 && v22 == 0.0;
    v13 = 2;
    goto LABEL_7;
  }
  if (a3 == a6)
  {
    v23 = sub_10040EB7C(a6);
    result = 4;
    if (a1 != a4 || v23 != 0.0)
    {
      if (a2 == a5 && v24 == 0.0)
        return 4;
      else
        return 2;
    }
  }
  else
  {
    v26 = sub_1001E9960(a3);
    v28 = v27;
    v29 = sub_1001E9974(a4, a5, a1);
    v31 = sub_1001E9980(v26, v28, v29, v30);
    v32 = sub_1001E9960(a6);
    v34 = v33;
    v35 = sub_1001E9974(a1, a2, a4);
    if ((v31 | sub_1001E9980(v32, v34, v35, v36)) >= 0)
      return 1;
    else
      return 3;
  }
  return result;
}

void sub_100230DFC(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[2];
  uint64_t (*v25)(uint64_t, uint64_t);
  void *v26;
  uint64_t *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  char v36;

  *(_OWORD *)(a5 + 16) = 0u;
  *(_OWORD *)(a5 + 32) = 0u;
  *(_OWORD *)a5 = 0u;
  v9 = *(_QWORD *)(a3 + 8 * a4 + 88);
  v10 = *((unsigned __int8 *)a1 + 16);
  v11 = *a1;
  if (*((_BYTE *)a1 + 16) || (*(_WORD *)(v11 + 80) & 8) != 0)
  {
    v19 = *(_QWORD *)v11;
    v20 = *(_QWORD *)(v11 + 8);
    v21 = *(_QWORD *)v9;
    v22 = *(_QWORD *)(v9 + 8);
    *(double *)(a5 + 32) = (double)sub_1001E998C(*(_QWORD *)v11, v20, *(_QWORD *)v9, v22);
    *(_QWORD *)(a5 + 8) = sub_100230C44(v19, v20, a1[1], v21, v22, a4);
    if (v10)
      goto LABEL_13;
  }
  else
  {
    v12 = *(_QWORD *)a2;
    v13 = *(_QWORD *)(a2 + 8);
    v14 = (double)sub_1001E998C(*(_QWORD *)v11, *(_QWORD *)(v11 + 8), *(_QWORD *)a2, v13);
    v15 = sub_1001E998C(v12, v13, *(_QWORD *)v9, *(_QWORD *)(v9 + 8));
    v16 = 0;
    *(double *)(a5 + 32) = v14 + (double)v15;
    v35 = 0x7FFFFFFFFFFFFFFFLL;
    v24[0] = _NSConcreteStackBlock;
    v25 = sub_100230FF8;
    v26 = &unk_1012469E0;
    v32 = 0;
    v33 = &v32;
    v34 = 0x2020000000;
    v24[1] = 3221225472;
    v29 = a2;
    v30 = v9;
    v31 = a4;
    v27 = &v32;
    v28 = a1;
    do
    {
      v17 = qword_100EEE668[v16];
      v36 = 0;
      ((void (*)(_QWORD *, uint64_t, char *))v25)(v24, v17, &v36);
      if (v36)
        v18 = 1;
      else
        v18 = v16 == 3;
      ++v16;
    }
    while (!v18);
    *(_QWORD *)(a5 + 8) = v33[3];
    _Block_object_dispose(&v32, 8);
    if (*((_BYTE *)a1 + 16))
      goto LABEL_13;
  }
  if ((*(_WORD *)(a2 + 80) & 0x10) != 0)
  {
LABEL_15:
    *(_BYTE *)(a5 + 1) = 1;
    return;
  }
LABEL_13:
  if ((*(_WORD *)(v9 + 80) & 0x10) != 0 || (*(_WORD *)(*(_QWORD *)(a3 + 8 * a4 + 56) + 80) & 0x10) != 0)
    goto LABEL_15;
}

void sub_100230FE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_list va;

  va_start(va, a12);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100230FF8(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;

  v4 = *(uint64_t **)(a1 + 48);
  v5 = *v4;
  v6 = v4[1];
  v7 = sub_100230C44(***(_QWORD ***)(a1 + 40), *(_QWORD *)(**(_QWORD **)(a1 + 40) + 8), *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8), *v4, v6, a2);
  v8 = sub_10040EB6C(a2);
  result = sub_100230C44(v5, v6, v8, **(_QWORD **)(a1 + 56), *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8), *(_QWORD *)(a1 + 64));
  v10 = (result + v7);
  v11 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  if (*(_QWORD *)(v11 + 24) < v10)
    v10 = *(_QWORD *)(v11 + 24);
  *(_QWORD *)(v11 + 24) = v10;
  return result;
}

void sub_100231088(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t *v8;
  __int128 v9;
  _QWORD v10[2];
  double (*v11)(uint64_t, uint64_t);
  void *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  __n128 (*v20)(uint64_t, uint64_t);
  uint64_t (*v21)();
  void *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  char v26;

  v5 = 0;
  v19 = 0x6012000000;
  v20 = sub_1002311A8;
  v21 = nullsub_35;
  v22 = &unk_1010E66AB;
  v23 = xmmword_100EEE638;
  v24 = unk_100EEE648;
  v25 = xmmword_100EEE658;
  v10[0] = _NSConcreteStackBlock;
  v11 = sub_1002311C0;
  v12 = &unk_101246A08;
  v17 = 0;
  v18 = &v17;
  v10[1] = 3221225472;
  v13 = &v17;
  v14 = a1;
  v15 = a2;
  v16 = a3;
  do
  {
    v6 = qword_100EEE668[v5];
    v26 = 0;
    ((void (*)(_QWORD *, uint64_t, char *))v11)(v10, v6, &v26);
    if (v26)
      v7 = 1;
    else
      v7 = v5 == 3;
    ++v5;
  }
  while (!v7);
  v8 = v18;
  v9 = *((_OWORD *)v18 + 4);
  *a4 = *((_OWORD *)v18 + 3);
  a4[1] = v9;
  a4[2] = *((_OWORD *)v8 + 5);
  _Block_object_dispose(&v17, 8);
}

void sub_100231190(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

__n128 sub_1002311A8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)(a2 + 48);
  v3 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v3;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

double sub_1002311C0(uint64_t a1, uint64_t a2)
{
  unsigned __int8 *v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  double result;
  unsigned __int8 v9[48];
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v4 = (unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 48);
  sub_100230DFC(*(uint64_t **)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), a2, (uint64_t)v9);
  if (sub_10022F798(v4, v9))
  {
    v5 = *(_OWORD **)(*(_QWORD *)(a1 + 32) + 8);
    v6 = v5[4];
    v10 = v5[3];
    v11 = v6;
    v12 = v5[5];
  }
  else
  {
    sub_100230DFC(*(uint64_t **)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), a2, (uint64_t)&v10);
    v5 = *(_OWORD **)(*(_QWORD *)(a1 + 32) + 8);
  }
  v7 = v11;
  v5[3] = v10;
  v5[4] = v7;
  result = *(double *)&v12;
  v5[5] = v12;
  return result;
}

__n128 sub_100231264(__n128 *a1, __n128 *a2)
{
  __n128 result;

  a1[3].n128_u64[0] = 0;
  a1[3].n128_u64[1] = 0;
  a1[4].n128_u64[0] = 0;
  result = a2[3];
  a1[3] = result;
  a1[4].n128_u64[0] = a2[4].n128_u64[0];
  a2[3].n128_u64[0] = 0;
  a2[3].n128_u64[1] = 0;
  a2[4].n128_u64[0] = 0;
  return result;
}

void sub_100231288(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 48);
  if (v2)
  {
    *(_QWORD *)(a1 + 56) = v2;
    operator delete(v2);
  }
}

void sub_1002312A0()
{
  operator new();
}

void sub_100231488(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

uint64_t sub_1002314B8(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  _QWORD *v6;
  uint64_t result;

  v6 = *(_QWORD **)(a1 + 40);
  result = sub_10040EB6C(v6[1]);
  if (result != a2)
  {
    if (*(_QWORD *)(*v6 + 8 * a2 + 16))
    {
      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = 0;
      *a3 = 1;
    }
  }
  return result;
}

void sub_10023151C(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t *v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  int64x2_t v13;
  float64x2_t v14;
  double v15;
  BOOL v16;
  BOOL v17;
  double v18;
  _QWORD *v19;
  _QWORD *v20;
  unint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  BOOL (*v37)(uint64_t, uint64_t);
  int64x2_t v38;
  float64x2_t v39;
  double v40;
  _QWORD v41[2];
  _QWORD *(*v42)(_QWORD *, uint64_t, BOOL (**)(uint64_t, uint64_t));
  void *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;

  v4 = *(_QWORD **)(a1 + 64);
  if (sub_10040EB6C(v4[1]) != a2 || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    v48 = 0;
    v49 = &v48;
    v50 = 0x2020000000;
    v51 = 0;
    v51 = sub_100230904((uint64_t)v4, *(uint64_t **)(*v4 + 8 * a2 + 16), a2);
    v5 = v49;
    v6 = (_BYTE *)v49[3];
    if (v6)
    {
      if (v6[16] || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24))
      {
        if (*(_BYTE *)(a1 + 73) && (*(_WORD *)(*(_QWORD *)v6 + 80) & 0x100) != 0)
        {
          v6[176] |= 1u;
        }
        else if ((*(_WORD *)(*(_QWORD *)v6 + 80) & 4) != 0)
        {
          v7 = 0;
          v41[0] = _NSConcreteStackBlock;
          v41[1] = 3221225472;
          v42 = (_QWORD *(*)(_QWORD *, uint64_t, BOOL (**)(uint64_t, uint64_t)))sub_100231834;
          v43 = &unk_101246AA0;
          v8 = *(_QWORD *)(a1 + 144);
          v46 = a2;
          v47 = v8;
          v9 = *(_QWORD *)(a1 + 48);
          v44 = &v48;
          v45 = v9;
          do
          {
            v10 = qword_100EEE668[v7];
            LOBYTE(v37) = 0;
            v42(v41, v10, &v37);
            if ((_BYTE)v37)
              v11 = 1;
            else
              v11 = v7 == 3;
            ++v7;
          }
          while (!v11);
          v5 = v49;
        }
      }
      v12 = v5[3];
      if ((*(_BYTE *)(v12 + 176) & 1) != 0)
      {
        v17 = 0;
        v16 = 0;
        v13 = 0uLL;
        v14 = 0uLL;
        v15 = 0.0;
      }
      else
      {
        sub_100231088(v12, *(_QWORD *)(a1 + 152), *(_QWORD *)(a1 + 144), &v37);
        v13 = v38;
        v14 = v39;
        v15 = v40;
        v16 = (_BYTE)v37 != 0;
        v17 = BYTE1(v37) != 0;
        v5 = v49;
        v12 = v49[3];
      }
      if (*(_BYTE *)(v12 + 80))
        v16 = 1;
      if (*(_BYTE *)(v12 + 81))
        v17 = 1;
      v18 = v15 + *(double *)(v12 + 120);
      *(_BYTE *)(v12 + 128) = v16;
      *(_BYTE *)(v12 + 129) = v17;
      *(int64x2_t *)(v12 + 136) = vaddq_s64(*(int64x2_t *)(v12 + 88), v13);
      *(float64x2_t *)(v12 + 152) = vaddq_f64(v14, *(float64x2_t *)(v12 + 104));
      *(double *)(v12 + 168) = v18;
      v19 = *(_QWORD **)(*(_QWORD *)(a1 + 56) + 8);
      v20 = (_QWORD *)v19[7];
      v21 = v19[8];
      if ((unint64_t)v20 >= v21)
      {
        v23 = v19[6];
        v24 = ((uint64_t)v20 - v23) >> 3;
        if ((unint64_t)(v24 + 1) >> 61)
          sub_100007810();
        v25 = v21 - v23;
        v26 = v25 >> 2;
        if (v25 >> 2 <= (unint64_t)(v24 + 1))
          v26 = v24 + 1;
        if ((unint64_t)v25 >= 0x7FFFFFFFFFFFFFF8)
          v27 = 0x1FFFFFFFFFFFFFFFLL;
        else
          v27 = v26;
        if (v27)
          v28 = (char *)sub_10002BA34((uint64_t)(v19 + 8), v27);
        else
          v28 = 0;
        v29 = &v28[8 * v24];
        v30 = &v28[8 * v27];
        *(_QWORD *)v29 = v5[3];
        v22 = v29 + 8;
        v32 = (char *)v19[6];
        v31 = (char *)v19[7];
        if (v31 != v32)
        {
          do
          {
            v33 = *((_QWORD *)v31 - 1);
            v31 -= 8;
            *((_QWORD *)v29 - 1) = v33;
            v29 -= 8;
          }
          while (v31 != v32);
          v31 = (char *)v19[6];
        }
        v19[6] = v29;
        v19[7] = v22;
        v19[8] = v30;
        if (v31)
          operator delete(v31);
      }
      else
      {
        *v20 = v5[3];
        v22 = v20 + 1;
      }
      v19[7] = v22;
      v34 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
      v35 = *(_QWORD *)(v34 + 48);
      v36 = *(_QWORD *)(v34 + 56);
      v37 = sub_10022F788;
      sub_100231C7C(v35, v36, (uint64_t (**)(uint64_t, uint64_t))&v37, (v36 - v35) >> 3);
    }
    _Block_object_dispose(&v48, 8);
  }
}

void sub_100231814(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

_QWORD *sub_100231834(_QWORD *result, uint64_t a2, _BYTE *a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  if (result[6] != a2)
  {
    v3 = result;
    v4 = *(_QWORD **)(*(_QWORD *)(result[4] + 8) + 24);
    v5 = result[7] + 8 * a2;
    if (*v4 == *(_QWORD *)(v5 + 88))
    {
      v7 = sub_10040EB6C(a2);
      result = sub_100230B00((uint64_t)v4, v7, *(_QWORD *)(v5 + 56), (void **)(*(_QWORD *)(v3[5] + 8) + 48));
      *(_QWORD *)(*(_QWORD *)(v3[4] + 8) + 24) = result;
      v8 = *(_QWORD *)(*(_QWORD *)(v3[4] + 8) + 24);
      *(_BYTE *)(v8 + 176) |= 1u;
      *a3 = 1;
    }
  }
  return result;
}

_QWORD *sub_1002318DC(_QWORD *result, const void *a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;
  uint64_t v7;
  size_t v8;

  if (a4)
  {
    v6 = result;
    result = sub_10002B9F4(result, a4);
    v7 = v6[1];
    v8 = a3 - (_QWORD)a2;
    if (v8)
      result = memmove((void *)v6[1], a2, v8);
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_100231938(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_100231954(uint64_t **a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t *v5;
  uint64_t **v6;
  uint64_t v7;
  uint64_t **v8;
  uint64_t v9;
  uint64_t *v10;

  v6 = a1 + 1;
  v5 = a1[1];
  if (v5)
  {
    v7 = *a2;
    while (1)
    {
      while (1)
      {
        v8 = (uint64_t **)v5;
        v9 = v5[4];
        if (v7 >= v9)
          break;
        v5 = *v8;
        v6 = v8;
        if (!*v8)
          goto LABEL_10;
      }
      if (v9 >= v7)
        break;
      v5 = v8[1];
      if (!v5)
      {
        v6 = v8 + 1;
        goto LABEL_10;
      }
    }
  }
  else
  {
    v8 = a1 + 1;
LABEL_10:
    v10 = (uint64_t *)operator new(0x28uLL);
    v10[4] = *a3;
    sub_10001D650(a1, (uint64_t)v8, v6, v10);
    return v10;
  }
  return (uint64_t *)v8;
}

void sub_100231A0C(void **a1, unint64_t a2)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v6 = a1[2];
  v4 = (uint64_t)(a1 + 2);
  v5 = v6;
  v7 = *(char **)(v4 - 8);
  if (a2 <= (v6 - v7) >> 3)
  {
    if (a2)
    {
      bzero(*(void **)(v4 - 8), 8 * a2);
      v7 += 8 * a2;
    }
    a1[1] = v7;
  }
  else
  {
    v8 = v7 - (_BYTE *)*a1;
    v9 = a2 + (v8 >> 3);
    if (v9 >> 61)
      sub_100007810();
    v10 = v8 >> 3;
    v11 = v5 - (_BYTE *)*a1;
    if (v11 >> 2 > v9)
      v9 = v11 >> 2;
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8)
      v12 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v12 = v9;
    if (v12)
      v13 = (char *)sub_10002BA34(v4, v12);
    else
      v13 = 0;
    v14 = &v13[8 * v10];
    v15 = &v13[8 * v12];
    bzero(v14, 8 * a2);
    v16 = &v14[8 * a2];
    v18 = (char *)*a1;
    v17 = (char *)a1[1];
    if (v17 != *a1)
    {
      do
      {
        v19 = *((_QWORD *)v17 - 1);
        v17 -= 8;
        *((_QWORD *)v14 - 1) = v19;
        v14 -= 8;
      }
      while (v17 != v18);
      v17 = (char *)*a1;
    }
    *a1 = v14;
    a1[1] = v16;
    a1[2] = v15;
    if (v17)
      operator delete(v17);
  }
}

uint64_t sub_100231B0C(uint64_t result, uint64_t a2, uint64_t a3, unint64_t *a4)
{
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if (a3 >= 2)
  {
    v4 = (uint64_t)a4 - result;
    v5 = (unint64_t)(a3 - 2) >> 1;
    if (v5 >= ((uint64_t)a4 - result) >> 3)
    {
      v6 = v4 >> 2;
      v7 = (v4 >> 2) | 1;
      v8 = (unint64_t *)(result + 8 * v7);
      v9 = v6 + 2;
      if (v9 >= a3)
      {
        v10 = *v8;
      }
      else
      {
        v10 = *v8;
        if (*v8 < v8[1])
        {
          v10 = v8[1];
          ++v8;
          v7 = v9;
        }
      }
      v11 = *a4;
      if (v10 >= *a4)
      {
        do
        {
          *a4 = v10;
          a4 = v8;
          if (v5 < v7)
            break;
          v12 = (2 * v7) | 1;
          v8 = (unint64_t *)(result + 8 * v12);
          v7 = 2 * v7 + 2;
          if (v7 >= a3)
          {
            v10 = *v8;
            v7 = v12;
          }
          else
          {
            v10 = *v8;
            if (*v8 >= v8[1])
            {
              v7 = v12;
            }
            else
            {
              v10 = v8[1];
              ++v8;
            }
          }
        }
        while (v10 >= v11);
        *a4 = v11;
      }
    }
  }
  return result;
}

_QWORD *sub_100231BD0(_QWORD *a1, unsigned int (**a2)(_QWORD, _QWORD), uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = 0;
  v7 = a3 - 2;
  if (a3 < 2)
    v7 = a3 - 1;
  v8 = v7 >> 1;
  do
  {
    v9 = &a1[v6 + 1];
    v10 = (2 * v6) | 1;
    v11 = 2 * v6 + 2;
    if (v11 < a3 && (*a2)(a1[v6 + 1], a1[v6 + 2]))
    {
      ++v9;
      v10 = v11;
    }
    *a1 = *v9;
    a1 = v9;
    v6 = v10;
  }
  while (v10 <= v8);
  return v9;
}

uint64_t sub_100231C7C(uint64_t result, uint64_t a2, uint64_t (**a3)(uint64_t, uint64_t), uint64_t a4)
{
  unint64_t v4;
  uint64_t v6;
  unint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t *v11;

  v4 = a4 - 2;
  if (a4 >= 2)
  {
    v6 = result;
    v7 = v4 >> 1;
    v8 = (uint64_t *)(result + 8 * (v4 >> 1));
    v9 = (uint64_t *)(a2 - 8);
    result = (*a3)(*v8, *(_QWORD *)(a2 - 8));
    if ((_DWORD)result)
    {
      v10 = *v9;
      do
      {
        v11 = v8;
        *v9 = *v8;
        if (!v7)
          break;
        v7 = (v7 - 1) >> 1;
        v8 = (uint64_t *)(v6 + 8 * v7);
        result = (*a3)(*v8, v10);
        v9 = v11;
      }
      while ((result & 1) != 0);
      *v11 = v10;
    }
  }
  return result;
}

void sub_10023212C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10023215C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10023246C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10023249C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100232FAC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(a1 + 32);
  v2 = *(void **)(v1 + 144);
  *(_QWORD *)(v1 + 144) = 0;

}

void sub_100233168(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100233198(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100233DC4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100233DF4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

double sub_100234614(uint64_t a1)
{
  return *(double *)(a1 + 32);
}

void sub_1002356FC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10023572C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10023575C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10023578C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100235FA4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100235FD4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100236F34(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100236F64(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100237CF4(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 32);
  v3 = (id)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", a2));
  objc_msgSend(v2, "addObject:", v3);

}

void sub_100238930(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100238960(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100238990(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002389C0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002389F0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100238A20(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100238EF4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100238F24(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100239208(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100239238(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100239704(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLCollaboratorCursorCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D91E0;
  off_1013D91E0 = v2;

}

void sub_100239810(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLCollaboratorCursorCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D91E0;
  off_1013D91E0 = v2;

}

void sub_10023A3C0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLCollaboratorCursorCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D91E0;
  off_1013D91E0 = v2;

}

void sub_10023A3F0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLCollaboratorCursorCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D91E0;
  off_1013D91E0 = v2;

}

void sub_10023A420(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10023A450(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10023A480(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLCollaboratorCursorCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D91E0;
  off_1013D91E0 = v2;

}

void sub_10023A8FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,char a53)
{
  uint64_t v53;

  _Block_object_dispose(&a40, 8);
  _Block_object_dispose(&a53, 8);
  _Block_object_dispose((const void *)(v53 - 256), 8);
  _Block_object_dispose((const void *)(v53 - 128), 8);
  _Unwind_Resume(a1);
}

_QWORD *sub_10023A94C(uint64_t a1)
{
  _QWORD *result;

  result = *(_QWORD **)(a1 + 32);
  if (!result[18])
  {
    result = objc_msgSend(result, "shouldCreateKnobs");
    if ((_DWORD)result)
      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 1;
  }
  return result;
}

void sub_10023A98C(uint64_t a1)
{
  objc_storeStrong((id *)(*(_QWORD *)(a1 + 32) + 144), *(id *)(a1 + 40));
}

uint64_t sub_10023A998(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_10023A9A8(uint64_t a1)
{

}

void sub_10023A9B0(_QWORD *a1)
{
  uint64_t v2;
  id v3;
  char v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a1[4];
  if (*(_BYTE *)(v2 + 152))
  {
    v3 = objc_msgSend(*(id *)(v2 + 144), "count");
    v4 = (unint64_t)v3 > 1;
    if (v3 == (id)1)
    {
      v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1[4] + 144), "firstObject"));
      objc_opt_class(CRLCanvasPlaceholderInvisibleKnob, v6);
      v4 = objc_opt_isKindOfClass(v5, v7) ^ 1;

    }
    *(_BYTE *)(*(_QWORD *)(a1[5] + 8) + 24) = v4 & 1;
    v2 = a1[4];
  }
  objc_storeStrong((id *)(*(_QWORD *)(a1[6] + 8) + 40), *(id *)(v2 + 144));
}

void sub_10023AA4C(uint64_t a1)
{
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), *(id *)(*(_QWORD *)(a1 + 32) + 144));
}

uint64_t sub_10023AA60(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char isKindOfClass;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = a2;
  if ((*(_QWORD *)(a1 + 40) & sub_100260884((char)objc_msgSend(v3, "tag"))) != 0
    || objc_msgSend(*(id *)(a1 + 32), "directlyManagesVisibilityOfKnob:", v3))
  {
    WeakRetained = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 32) + 32));
    objc_opt_class(_TtC8Freeform33CRLShapeConnectionLineKnobTracker, v5);
    if ((objc_opt_isKindOfClass(WeakRetained, v6) & 1) != 0
      || (objc_opt_class(_TtC8Freeform21CRLConnectionLineKnob, v7),
          (objc_opt_isKindOfClass(v3, v8) & 1) == 0))
    {
      v10 = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 32) + 32));
      objc_opt_class(_TtC8Freeform33CRLShapeConnectionLineKnobTracker, v11);
      if ((objc_opt_isKindOfClass(v10, v12) & 1) != 0)
      {
        objc_opt_class(CRLCanvasButtonKnob, v13);
        isKindOfClass = objc_opt_isKindOfClass(v3, v14);
      }
      else
      {
        isKindOfClass = 1;
      }

    }
    else
    {
      isKindOfClass = 0;
    }

  }
  else
  {
    isKindOfClass = 0;
  }

  return isKindOfClass & 1;
}

id sub_10023AB64(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "directlyManagesVisibilityOfKnob:", a2);
}

void sub_10023AB70(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id *v5;
  void *v6;
  uint64_t v7;
  void *v8;

  v3 = a1 + 32;
  v2 = *(_QWORD *)(a1 + 32);
  v4 = *(void **)(*(_QWORD *)(*(_QWORD *)(v3 + 8) + 8) + 40);
  v6 = *(void **)(v2 + 144);
  v5 = (id *)(v2 + 144);
  if (v4 != v6)
  {
    objc_storeStrong(v5, v4);
    v4 = *(void **)(*(_QWORD *)(a1 + 32) + 144);
  }
  if (!objc_msgSend(v4, "count"))
  {
    v7 = *(_QWORD *)(a1 + 32);
    v8 = *(void **)(v7 + 144);
    *(_QWORD *)(v7 + 144) = 0;

  }
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), *(id *)(*(_QWORD *)(a1 + 32) + 144));
}

void sub_10023AC5C(uint64_t a1)
{
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[128];

  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v2 = *(id *)(*(_QWORD *)(a1 + 32) + 144);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v11;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v11 != v5)
          objc_enumerationMutation(v2);
        v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*((_QWORD *)&v10 + 1) + 8 * (_QWORD)v6), "renderable", (_QWORD)v10));
        objc_msgSend(v7, "setDelegate:", 0);

        v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
    }
    while (v4);
  }

  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(void **)(v8 + 144);
  *(_QWORD *)(v8 + 144) = 0;

}

void sub_10023B914(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10023B944(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10023BBA4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10023BBD4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10023C160(uint64_t a1)
{
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  void *i;
  void *v7;
  void *v8;
  float v9;
  unsigned __int8 v10;
  double v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];

  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  v2 = *(id *)(*(_QWORD *)(a1 + 32) + 144);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v13;
    do
    {
      for (i = 0; i != v4; i = (char *)i + 1)
      {
        if (*(_QWORD *)v13 != v5)
          objc_enumerationMutation(v2);
        v7 = *(void **)(*((_QWORD *)&v12 + 1) + 8 * (_QWORD)i);
        v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "renderable", (_QWORD)v12));
        objc_msgSend(v8, "opacity");
        if (v9 != 1.0)
        {
          v10 = objc_msgSend(*(id *)(a1 + 32), "directlyManagesVisibilityOfKnob:", v7);

          if ((v10 & 1) != 0)
            continue;
          v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "renderable"));
          LODWORD(v11) = 1.0;
          objc_msgSend(v8, "setOpacity:", v11);
        }

      }
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
    }
    while (v4);
  }

}

void sub_10023C39C(uint64_t a1)
{
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  void *i;
  void *v7;
  void *v8;
  float v9;
  unsigned __int8 v10;
  void *v11;
  void *v12;
  void *v13;
  double v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _BYTE v19[128];

  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v2 = *(id *)(*(_QWORD *)(a1 + 32) + 144);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v16;
    do
    {
      for (i = 0; i != v4; i = (char *)i + 1)
      {
        if (*(_QWORD *)v16 != v5)
          objc_enumerationMutation(v2);
        v7 = *(void **)(*((_QWORD *)&v15 + 1) + 8 * (_QWORD)i);
        v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "renderable", (_QWORD)v15));
        objc_msgSend(v8, "opacity");
        if (v9 != 1.0)
        {
          v10 = objc_msgSend(*(id *)(a1 + 32), "directlyManagesVisibilityOfKnob:", v7);

          if ((v10 & 1) != 0)
            continue;
          v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "renderable"));
          objc_msgSend(v11, "opacity");
          v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithFloat:](NSNumber, "numberWithFloat:"));
          objc_msgSend(*(id *)(a1 + 40), "setFromValue:", v12);

          v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "renderable"));
          LODWORD(v14) = 1.0;
          objc_msgSend(v13, "setOpacity:", v14);

          v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "renderable"));
          objc_msgSend(v8, "addAnimation:forKey:", *(_QWORD *)(a1 + 40), CFSTR("fade in"));
        }

      }
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
    }
    while (v4);
  }

}

void sub_10023C660(uint64_t a1)
{
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  void *i;
  void *v7;
  void *v8;
  float v9;
  unsigned __int8 v10;
  void *v11;
  double v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _BYTE v17[128];

  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  v2 = *(id *)(*(_QWORD *)(a1 + 32) + 144);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v14;
    do
    {
      for (i = 0; i != v4; i = (char *)i + 1)
      {
        if (*(_QWORD *)v14 != v5)
          objc_enumerationMutation(v2);
        v7 = *(void **)(*((_QWORD *)&v13 + 1) + 8 * (_QWORD)i);
        v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "renderable", (_QWORD)v13));
        objc_msgSend(v8, "opacity");
        if (v9 == 1.0)
        {
          v10 = objc_msgSend(*(id *)(a1 + 32), "directlyManagesVisibilityOfKnob:", v7);

          if ((v10 & 1) != 0)
            continue;
          v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "renderable"));
          LODWORD(v12) = 0;
          objc_msgSend(v11, "setOpacity:", v12);

          v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "renderable"));
          objc_msgSend(v8, "addAnimation:forKey:", *(_QWORD *)(a1 + 40), CFSTR("fade out"));
        }

      }
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
    }
    while (v4);
  }

}

void sub_10023C900(id a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[CRLColor colorWithRed:green:blue:alpha:](CRLColor, "colorWithRed:green:blue:alpha:", 0.682352941, 0.682352941, 0.698039216, 1.0));
  v2 = (void *)qword_1014151D0;
  qword_1014151D0 = v1;

}

void sub_10023CFBC(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  unsigned int v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  Class v15;
  NSString *v16;
  void *v17;
  int v18;
  float v19;
  void *v20;
  float v21;
  NSObject *v22;
  uint64_t v23;
  Class v24;
  NSString *v25;
  void *v26;
  NSObject *v27;
  char *v28;
  unsigned int v29;
  void (**v30)(id, void *, void *);
  id obj;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint8_t buf[4];
  unsigned int v38;
  __int16 v39;
  const char *v40;
  __int16 v41;
  const char *v42;
  __int16 v43;
  int v44;
  __int16 v45;
  void *v46;
  _BYTE v47[128];

  v30 = a2;
  v33 = 0u;
  v34 = 0u;
  v35 = 0u;
  v36 = 0u;
  v32 = a1;
  obj = *(id *)(a1 + 32);
  v3 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v33, v47, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v34;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v34 != v5)
          objc_enumerationMutation(obj);
        v7 = *(void **)(*((_QWORD *)&v33 + 1) + 8 * (_QWORD)v6);
        v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "renderable"));
        if ((objc_opt_respondsToSelector(v7, "layer") & 1) != 0)
        {
          v9 = +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
          if (qword_10147E370 != -1)
            dispatch_once(&qword_10147E370, &stru_101247090);
          v10 = off_1013D9070;
          if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
          {
            v22 = v10;
            objc_opt_class(v7, v23);
            v25 = NSStringFromClass(v24);
            v26 = (void *)objc_claimAutoreleasedReturnValue(v25);
            *(_DWORD *)buf = 67110146;
            v38 = v9;
            v39 = 2082;
            v40 = "-[CRLCanvasRep p_addRenderablesForKnobsToArray:withDelegate:isOverlay:]_block_invoke";
            v41 = 2082;
            v42 = "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLCanvasRep.m";
            v43 = 1024;
            v44 = 2694;
            v45 = 2114;
            v46 = v26;
            _os_log_error_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Knob class %{public}@ is trying to vend a layer directly!", buf, 0x2Cu);

          }
          if (qword_10147E370 != -1)
            dispatch_once(&qword_10147E370, &stru_1012470B0);
          v11 = off_1013D9070;
          if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
          {
            v27 = v11;
            v28 = (char *)objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
            *(_DWORD *)buf = 67109378;
            v38 = v9;
            v39 = 2114;
            v40 = v28;
            _os_log_error_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: Assertion backtrace: >>%{public}@<<", buf, 0x12u);

          }
          v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLCanvasRep p_addRenderablesForKnobsToArray:withDelegate:isOverlay:]_block_invoke"));
          v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLCanvasRep.m"));
          objc_opt_class(v7, v14);
          v16 = NSStringFromClass(v15);
          v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
          +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v12, v13, 2694, 0, "Knob class %{public}@ is trying to vend a layer directly!", v17);

        }
        if (v8)
        {
          v18 = *(unsigned __int8 *)(v32 + 48);
          if (v18 != objc_msgSend(v7, "shouldDisplayDirectlyOverRep"))
          {
            if (!*(_BYTE *)(*(_QWORD *)(v32 + 40) + 154))
            {
              objc_msgSend(v8, "opacity");
              if (v19 == 0.0)
              {
                v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "presentationRenderable"));
                objc_msgSend(v20, "opacity");
                if (v21 == 0.0)
                {
                  v29 = objc_msgSend(*(id *)(v32 + 40), "directlyManagesVisibilityOfKnob:", v7);

                  if (!v29)
                    goto LABEL_24;
                }
                else
                {

                }
              }
            }
            v30[2](v30, v7, v8);
          }
        }
LABEL_24:

        v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      v4 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v33, v47, 16);
    }
    while (v4);
  }

}

void sub_10023D3C4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10023D3F4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10023D424(uint64_t a1, void *a2)
{
  uint64_t v3;
  double v4;
  uint64_t v5;
  unsigned int v6;
  void *v7;
  void *v8;
  id v9;

  v9 = a2;
  *(_QWORD *)&v4 = objc_opt_class(CRLPathKnob, v3).n128_u64[0];
  v6 = objc_msgSend(v9, "isMemberOfClass:", v5, v4);
  v7 = v9;
  if (v6)
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "underlayRenderableForRep:", *(_QWORD *)(a1 + 32)));
    if (v8)
      objc_msgSend(*(id *)(a1 + 40), "addObject:", v8);

    v7 = v9;
  }

}

void sub_10023D49C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  unsigned int v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  Class v20;
  NSString *v21;
  void *v22;
  uint64_t v23;
  Class v24;
  NSString *v25;
  void *v26;
  NSObject *v27;
  uint64_t v28;
  Class v29;
  NSString *v30;
  void *v31;
  uint64_t v32;
  Class v33;
  NSString *v34;
  void *v35;
  uint8_t buf[4];
  unsigned int v37;
  __int16 v38;
  const char *v39;
  __int16 v40;
  const char *v41;
  __int16 v42;
  int v43;
  __int16 v44;
  void *v45;
  __int16 v46;
  void *v47;

  v5 = a2;
  v6 = a3;
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "delegate"));

  if (!v7)
  {
    v8 = *(_QWORD *)(a1 + 32);
    if (!v8)
      v8 = *(_QWORD *)(a1 + 40);
    objc_msgSend(v6, "setDelegate:", v8);
  }
  objc_msgSend(v5, "position");
  objc_msgSend(v5, "pixelAlignedScaledCanvasCenterPositionFromKnobPosition:");
  v11 = v10;
  v12 = v9;
  if (fabs(v10) == INFINITY || (v13 = fabs(v9), v13 >= INFINITY) && v13 <= INFINITY)
  {
    v14 = +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101247120);
    v15 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
    {
      v27 = v15;
      objc_opt_class(v5, v28);
      v30 = NSStringFromClass(v29);
      v31 = (void *)objc_claimAutoreleasedReturnValue(v30);
      objc_opt_class(*(_QWORD *)(a1 + 48), v32);
      v34 = NSStringFromClass(v33);
      v35 = (void *)objc_claimAutoreleasedReturnValue(v34);
      *(_DWORD *)buf = 67110402;
      v37 = v14;
      v38 = 2082;
      v39 = "-[CRLCanvasRep p_addRenderablesForKnobsToArray:withDelegate:isOverlay:]_block_invoke_3";
      v40 = 2082;
      v41 = "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLCanvasRep.m";
      v42 = 1024;
      v43 = 2725;
      v44 = 2114;
      v45 = v31;
      v46 = 2114;
      v47 = v35;
      _os_log_error_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Knob type %{public}@ layer position must be finite for rep class %{public}@", buf, 0x36u);

    }
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101247140);
    v16 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100DE7468(v16);
    v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLCanvasRep p_addRenderablesForKnobsToArray:withDelegate:isOverlay:]_block_invoke"));
    v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLCanvasRep.m"));
    objc_opt_class(v5, v19);
    v21 = NSStringFromClass(v20);
    v22 = (void *)objc_claimAutoreleasedReturnValue(v21);
    objc_opt_class(*(_QWORD *)(a1 + 48), v23);
    v25 = NSStringFromClass(v24);
    v26 = (void *)objc_claimAutoreleasedReturnValue(v25);
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v17, v18, 2725, 0, "Knob type %{public}@ layer position must be finite for rep class %{public}@", v22, v26);

  }
  else
  {
    +[CATransaction begin](CATransaction, "begin");
    +[CATransaction setDisableActions:](CATransaction, "setDisableActions:", 1);
    objc_msgSend(v6, "setPosition:", v11, v12);
    +[CATransaction commit](CATransaction, "commit");
    objc_msgSend(*(id *)(a1 + 56), "addObject:", v6);
  }

}

void sub_10023D7CC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10023D7FC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10023DBE4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10023DC14(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10023DDBC(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_10023DDE0(uint64_t a1)
{
  _BYTE *WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
    WeakRetained[155] = 0;

}

void sub_10023E570(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10023E5A0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10023E5D0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10023E600(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10023ED38(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10023ED68(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10023F270(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10023F2A0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10023F4D0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10023F500(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10023FA88(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10023FAB8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10023FAE8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10023FB18(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10023FCC8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10023FCF8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100240060(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100240090(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100240258(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100240288(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100241BF8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100241C28(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100242118(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 216), 8);
  _Unwind_Resume(a1);
}

intptr_t sub_100242144(uint64_t a1)
{
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  double v9;
  CGFloat v10;
  CGFloat v11;
  void *v12;
  double v13;
  double v14;
  double v15;
  CGFloat v16;
  double v17;
  double v18;
  double v19;
  void *v20;
  id v21;
  CGAffineTransform v23;
  CGAffineTransform v24;
  CGAffineTransform v25;

  v2 = objc_msgSend(*(id *)(a1 + 32), "count");
  v3 = objc_msgSend(*(id *)(a1 + 40), "count");
  v4 = objc_claimAutoreleasedReturnValue(+[CRLBezierPath uniteBezierPaths:](CRLBezierPath, "uniteBezierPaths:", *(_QWORD *)(a1 + 32)));
  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 72) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v4;

  v7 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40);
  CGAffineTransformMakeTranslation(&v25, -*(double *)(a1 + 80), -*(double *)(a1 + 88));
  objc_msgSend(v7, "transformUsingAffineTransform:", &v25);
  v8 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40);
  objc_msgSend(*(id *)(a1 + 48), "viewScale");
  v10 = v9;
  objc_msgSend(*(id *)(a1 + 48), "viewScale");
  CGAffineTransformMakeScale(&v24, v10, v11);
  objc_msgSend(v8, "transformUsingAffineTransform:", &v24);
  if (v2 < v3)
  {
    v12 = (void *)objc_claimAutoreleasedReturnValue(+[CRLBezierPath tracedPathForImage:alphaThreshold:pointSpacing:](CRLBezierPath, "tracedPathForImage:alphaThreshold:pointSpacing:", *(_QWORD *)(a1 + 112), 0.5, 0.0));
    objc_msgSend(*(id *)(a1 + 48), "viewScale");
    v14 = v13;
    objc_msgSend(*(id *)(a1 + 56), "viewScale");
    v16 = v14 / v15;
    objc_msgSend(*(id *)(a1 + 48), "viewScale");
    v18 = v17;
    objc_msgSend(*(id *)(a1 + 56), "viewScale");
    CGAffineTransformMakeScale(&v23, v16, v18 / v19);
    objc_msgSend(v12, "transformUsingAffineTransform:", &v23);
    v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "bezierPathByOffsettingPath:joinStyle:", 1, 2.0));

    v21 = objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40), "uniteWithBezierPath:", v20);
  }
  CGImageRelease(*(CGImageRef *)(a1 + 112));
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 64));
}

void sub_1002422E0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100242310(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

id sub_100242340(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  CGFloat v5;
  CGFloat v6;
  CGFloat v7;
  CGFloat v8;
  double v9;
  double v10;
  double v11;
  CGFloat v12;
  CGFloat v13;
  CGFloat v14;
  CGFloat v15;
  double v16;
  double x;
  id v18;
  id v19;
  void *v20;
  void *v21;
  double v22;
  double v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;

  v3 = a2;
  if (*(_QWORD *)(a1 + 32))
  {
    dispatch_semaphore_wait(*(dispatch_semaphore_t *)(a1 + 40), 0xFFFFFFFFFFFFFFFFLL);
    if (objc_msgSend(objc_retainAutorelease(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 80) + 8) + 40)), "CGPath"))
    {
      v4 = (void *)objc_claimAutoreleasedReturnValue(+[UIBezierPath bezierPathWithCGPath:](UIBezierPath, "bezierPathWithCGPath:", objc_msgSend(objc_retainAutorelease(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 80) + 8) + 40)), "CGPath")));
      objc_msgSend(v4, "bounds");
      v9 = sub_100061400(v5, v6, v7, v8);
      v11 = v10;
      objc_msgSend(*(id *)(a1 + 32), "bounds");
      v16 = sub_100061400(v12, v13, v14, v15);
      x = sub_1000603B8(v9, v11, v16);
    }
    else
    {
      v4 = 0;
      x = CGPointZero.x;
    }
    v19 = objc_alloc((Class)UIDragPreviewTarget);
    v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "canvasView"));
    v21 = *(void **)(a1 + 56);
    objc_msgSend(*(id *)(a1 + 32), "frame");
    objc_msgSend(v21, "p_centerForPreviewFrame:");
    v24 = objc_msgSend(v19, "initWithContainer:center:", v20, sub_1000603D0(v22, v23, x));

    v25 = objc_alloc_init((Class)UIDragPreviewParameters);
    objc_msgSend(v25, "setBackgroundColor:", *(_QWORD *)(a1 + 64));
    if (v4)
      objc_msgSend(v25, "setVisiblePath:", v4);
    v18 = objc_msgSend(objc_alloc((Class)UITargetedDragPreview), "initWithView:parameters:target:", *(_QWORD *)(a1 + 32), v25, v24);

  }
  else
  {
    v18 = 0;
  }
  v26 = *(_QWORD *)(a1 + 72);
  if (v26)
  {
    v27 = (*(uint64_t (**)(void))(v26 + 16))();
    v28 = (void *)objc_claimAutoreleasedReturnValue(v27);
    objc_msgSend(v3, "setLocalObject:", v28);

  }
  return v18;
}

void sub_100242C98(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100242CC8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100243310(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100243340(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100243370(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002433A0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002433D0(id a1)
{
  id v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  void *v20;

  v1 = objc_msgSend(objc_alloc((Class)NSSet), "initWithArray:", &off_1012CB5A8);
  v2 = (void *)qword_1014151D8;
  qword_1014151D8 = (uint64_t)v1;

  v3 = objc_msgSend(objc_alloc((Class)NSSet), "initWithArray:", &off_1012CB5C0);
  v4 = (void *)qword_1014151E0;
  qword_1014151E0 = (uint64_t)v3;

  v5 = objc_msgSend(objc_alloc((Class)NSSet), "initWithArray:", &off_1012CB5D8);
  v6 = (void *)qword_1014151E8;
  qword_1014151E8 = (uint64_t)v5;

  v7 = objc_msgSend(objc_alloc((Class)NSSet), "initWithArray:", &off_1012CB5F0);
  v8 = (void *)qword_1014151F0;
  qword_1014151F0 = (uint64_t)v7;

  v9 = objc_msgSend(objc_alloc((Class)NSSet), "initWithArray:", &off_1012CB608);
  v10 = (void *)qword_1014151F8;
  qword_1014151F8 = (uint64_t)v9;

  v11 = objc_msgSend(objc_alloc((Class)NSSet), "initWithArray:", &off_1012CB620);
  v12 = (void *)qword_101415200;
  qword_101415200 = (uint64_t)v11;

  v13 = objc_msgSend(objc_alloc((Class)NSSet), "initWithArray:", &off_1012CB638);
  v14 = (void *)qword_101415208;
  qword_101415208 = (uint64_t)v13;

  v15 = objc_msgSend(objc_alloc((Class)NSSet), "initWithArray:", &off_1012CB650);
  v16 = (void *)qword_101415210;
  qword_101415210 = (uint64_t)v15;

  v17 = objc_msgSend(objc_alloc((Class)NSSet), "initWithArray:", &off_1012CB668);
  v18 = (void *)qword_101415218;
  qword_101415218 = (uint64_t)v17;

  v19 = objc_msgSend(objc_alloc((Class)NSSet), "initWithArray:", &off_1012CB680);
  v20 = (void *)qword_101415220;
  qword_101415220 = (uint64_t)v19;

}

void sub_100243550(id a1)
{
  id v1;
  void *v2;

  v1 = objc_msgSend(objc_alloc((Class)NSSet), "initWithArray:", &off_1012CB698);
  v2 = (void *)qword_101415230;
  qword_101415230 = (uint64_t)v1;

}

void sub_100243584(id a1)
{
  id v1;
  void *v2;

  v1 = objc_msgSend(objc_alloc((Class)NSSet), "initWithArray:", &off_1012CB6B0);
  v2 = (void *)qword_101415240;
  qword_101415240 = (uint64_t)v1;

}

void sub_1002437BC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_100243804(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100243834(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100243A10(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100243A38(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100243A68(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100243C98(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100243CC4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100243CF4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

uint64_t sub_100243D38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = 3;
  if (a1 == a2)
    v2 = a1;
  if (!a2)
    v2 = a1;
  if (a1)
    return v2;
  else
    return a2;
}

uint64_t sub_100243D58(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  if ((objc_msgSend(v1, "isEqualToString:", AVAssetExportPresetPassthrough) & 1) != 0)
  {
    v2 = 1;
    goto LABEL_13;
  }
  if ((objc_msgSend(v1, "isEqualToString:", AVAssetExportPreset1920x1080) & 1) != 0)
  {
    v2 = 2;
    goto LABEL_13;
  }
  if ((objc_msgSend(v1, "isEqualToString:", AVAssetExportPreset3840x2160) & 1) != 0)
  {
    v2 = 3;
    goto LABEL_13;
  }
  if ((objc_msgSend(v1, "isEqualToString:", AVAssetExportPresetHEVC1920x1080WithAlpha) & 1) != 0)
  {
LABEL_10:
    v2 = 4;
    goto LABEL_13;
  }
  if ((objc_msgSend(v1, "isEqualToString:", AVAssetExportPresetHEVC3840x2160WithAlpha) & 1) != 0)
    goto LABEL_12;
  if ((objc_msgSend(v1, "isEqualToString:", AVAssetExportPresetHEVC1920x1080) & 1) != 0)
    goto LABEL_10;
  if ((objc_msgSend(v1, "isEqualToString:", AVAssetExportPresetHEVC3840x2160) & 1) != 0)
  {
LABEL_12:
    v2 = 5;
    goto LABEL_13;
  }
  if (objc_msgSend(v1, "isEqualToString:", AVAssetExportPresetMediumQuality))
    v2 = 6;
  else
    v2 = 0;
LABEL_13:

  return v2;
}

id sub_100243E6C(id a1, int a2)
{
  id *v2;
  NSString *const *v4;

  v2 = (id *)&AVAssetExportPresetPassthrough;
  switch((unint64_t)a1)
  {
    case 0uLL:
    case 2uLL:
      v2 = (id *)&AVAssetExportPreset1920x1080;
      goto LABEL_10;
    case 1uLL:
      goto LABEL_10;
    case 3uLL:
      v2 = (id *)&AVAssetExportPreset3840x2160;
      goto LABEL_10;
    case 4uLL:
      v2 = (id *)&AVAssetExportPresetHEVC1920x1080;
      v4 = &AVAssetExportPresetHEVC1920x1080WithAlpha;
      goto LABEL_8;
    case 5uLL:
      v2 = (id *)&AVAssetExportPresetHEVC3840x2160;
      v4 = &AVAssetExportPresetHEVC3840x2160WithAlpha;
LABEL_8:
      if (a2)
        v2 = (id *)v4;
      goto LABEL_10;
    case 6uLL:
      v2 = (id *)&AVAssetExportPresetMediumQuality;
LABEL_10:
      a1 = *v2;
      break;
    default:
      return a1;
  }
  return a1;
}

uint64_t sub_100243F00(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  if ((objc_msgSend(v1, "isEqualToString:", AVAssetExportPresetPassthrough) & 1) != 0
    || (objc_msgSend(v1, "isEqualToString:", AVAssetExportPresetHEVCHighestQualityWithAlpha) & 1) != 0
    || (objc_msgSend(v1, "isEqualToString:", AVAssetExportPresetHEVC1920x1080WithAlpha) & 1) != 0)
  {
    v2 = 1;
  }
  else
  {
    v2 = (uint64_t)objc_msgSend(v1, "isEqualToString:", AVAssetExportPresetHEVC3840x2160WithAlpha);
  }

  return v2;
}

uint64_t sub_100243F8C(unint64_t a1)
{
  return (a1 < 7) & (0x4Cu >> a1);
}

BOOL sub_100243FA4(uint64_t a1)
{
  return (a1 & 0xFFFFFFFFFFFFFFFELL) == 4;
}

BOOL sub_100243FB4(uint64_t a1)
{
  return ((a1 - 3) & 0xFFFFFFFFFFFFFFFDLL) == 0;
}

BOOL sub_1002445B4(id a1, CRLCanvasElementInfo *a2, BOOL *a3)
{
  CRLCanvasElementInfo *v3;
  uint64_t v4;
  uint64_t v5;
  char isKindOfClass;

  v3 = a2;
  v5 = objc_opt_class(_TtC8Freeform14CRLWPShapeItem, v4);
  isKindOfClass = objc_opt_isKindOfClass(v3, v5);

  return isKindOfClass & 1;
}

void sub_1002445FC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10024462C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100244E54(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100244E84(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

id sub_100244EB4(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  CGFloat v8;
  CGFloat v9;
  CGFloat v10;
  CGFloat v11;
  id v12;
  id v13;

  v3 = a2;
  v4 = objc_alloc_init((Class)UIDragPreviewParameters);
  objc_msgSend(v4, "setVisiblePath:", *(_QWORD *)(a1 + 32));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "UIColor"));
  objc_msgSend(v4, "setBackgroundColor:", v5);

  v6 = objc_alloc((Class)UIDragPreviewTarget);
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "canvasView"));
  objc_msgSend(*(id *)(a1 + 56), "frame");
  v12 = objc_msgSend(v6, "initWithContainer:center:", v7, sub_100061400(v8, v9, v10, v11));

  v13 = objc_msgSend(objc_alloc((Class)UITargetedDragPreview), "initWithView:parameters:target:", *(_QWORD *)(a1 + 56), v4, v12);
  objc_msgSend(v3, "setLocalObject:", *(_QWORD *)(a1 + 64));

  return v13;
}

void sub_1002450EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100245104(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_100245114(uint64_t a1)
{

}

void sub_10024511C(uint64_t a1, void *a2, _BYTE *a3)
{
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  void *v10;
  id obj;

  v5 = a2;
  objc_opt_class(_TtC8Freeform11CRLWPEditor, v6);
  v8 = sub_100221D0C(v7, v5);
  obj = (id)objc_claimAutoreleasedReturnValue(v8);

  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(obj, "storage"));
  v10 = *(void **)(a1 + 32);

  if (v9 == v10)
  {
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), obj);
    *a3 = 1;
  }

}

void sub_100245620(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100245650(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10024571C(id a1)
{
  CRLDisplayLinkManager *v1;
  void *v2;

  v1 = objc_alloc_init(CRLDisplayLinkManager);
  v2 = (void *)qword_101415250;
  qword_101415250 = (uint64_t)v1;

}

void sub_100245B1C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100245B4C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100245CE8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100245D18(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100245EC4(id a1)
{
  void *v1;
  id v2;
  id v3;

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v2 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "bundleIdentifier")));
  v3 = objc_msgSend(v2, "UTF8String");

  byte_101415260 = os_variant_has_internal_content(v3);
}

void sub_100246488(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002464B8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100246DCC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100246DFC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100246FA0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100246FD0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100247964(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100247994(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100247DF4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100247E24(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002492B4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002492E4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10024AE60(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10024AE90(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10024B0B0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10024B0E0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10024B2BC(uint64_t a1)
{
  id v1;
  void *v2;

  v1 = objc_alloc_init(*(Class *)(a1 + 32));
  v2 = (void *)qword_101415270;
  qword_101415270 = (uint64_t)v1;

}

void sub_10024BBD0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10024BC00(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10024BC30(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10024BC60(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10024C2D0(uint64_t a1)
{
  double v1;
  double v2;
  double v3;
  double v4;
  id v5;

  v1 = *(double *)(a1 + 40);
  v2 = *(double *)(a1 + 48);
  v3 = *(double *)(a1 + 56);
  v4 = *(double *)(a1 + 64);
  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  objc_msgSend(v5, "setFrame:", v1, v2, v3, v4);

}

void sub_10024CFE4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10024D014(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10024D28C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10024D2BC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10024D4B4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10024D4E4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10024D5D0(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  void *v21;
  id v22;
  id v23;
  void *v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  id *v31;
  uint64_t v32;
  void *v33;
  void *v34;
  uint64_t v35;
  _QWORD v36[5];
  _QWORD v37[3];
  _QWORD v38[5];
  _QWORD v39[3];
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  NSErrorUserInfoKey v47;
  void *v48;

  v43 = 0;
  v44 = &v43;
  v45 = 0x2020000000;
  v46 = 0;
  v2 = *(void **)(*(_QWORD *)(a1 + 32) + 16);
  v42 = 0;
  v3 = objc_msgSend(v2, "statusOfValueForKey:error:", CFSTR("hasProtectedContent"), &v42);
  v4 = v42;
  if (v3 == (id)2)
  {
    if (objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "hasProtectedContent"))
    {
      objc_opt_class(AVURLAsset, v8);
      v10 = sub_100221D0C(v9, *(void **)(*(_QWORD *)(a1 + 32) + 16));
      v7 = (void *)objc_claimAutoreleasedReturnValue(v10);
      if (!v7)
      {
        +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
        if (qword_10147E370 != -1)
          dispatch_once(&qword_10147E370, &stru_101247C28);
        if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
          sub_100E118A4();
        if (qword_10147E370 != -1)
          dispatch_once(&qword_10147E370, &stru_101247C48);
        v11 = off_1013D9070;
        if (os_log_type_enabled((os_log_t)v11, OS_LOG_TYPE_ERROR))
        {
          objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
          sub_100E11864();
        }

        v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLMovieCompatibilityChecker p_checkCompatibilityOfAVAssetUpToLevel:completionHandler:]_block_invoke"));
        v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLMovieCompatibilityChecker.m"));
        +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v12, v13, 111, 0, "invalid nil value for '%{public}s'", "URLAsset");

      }
      v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "URL"));
      v41 = 0;
      objc_msgSend(v14, "getResourceValue:forKey:error:", &v41, NSURLLocalizedNameKey, 0);
      v15 = v41;
      if (!v15)
      {
        v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "URL"));
        v15 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "lastPathComponent"));

      }
      v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
      v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "localizedStringForKey:value:table:", CFSTR("The media file “%@” is copy protected. You don’t have permission to use it."), 0, 0));
      v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", v18, v15));

      v47 = NSLocalizedDescriptionKey;
      v48 = v6;
      v19 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v48, &v47, 1));
      v20 = objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", CFSTR("com.apple.freeform.CRLErrorDomainMediaCompatibility"), 99, v19));

      v4 = (id)v20;
      goto LABEL_27;
    }
    v44[3] = 1;
    v21 = *(void **)(*(_QWORD *)(a1 + 32) + 16);
    v40 = 0;
    v22 = objc_msgSend(v21, "statusOfValueForKey:error:", CFSTR("playable"), &v40);
    v23 = v40;
    if (v22 != (id)2)
    {
      if (v22 == (id)4)
      {
        if ((objc_msgSend(*(id *)(a1 + 32), "isCancelled") & 1) == 0)
        {
          +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
          if (qword_10147E370 != -1)
            dispatch_once(&qword_10147E370, &stru_101247D50);
          if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
            sub_100E11938();
          if (qword_10147E370 != -1)
            dispatch_once(&qword_10147E370, &stru_101247D70);
          v24 = off_1013D9070;
          if (os_log_type_enabled((os_log_t)v24, OS_LOG_TYPE_ERROR))
          {
            objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
            sub_100E11864();
          }

          v25 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLMovieCompatibilityChecker p_checkCompatibilityOfAVAssetUpToLevel:completionHandler:]_block_invoke"));
          v26 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLMovieCompatibilityChecker.m"));
          +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v25, v26, 238, 0, "Movie validation cancelled itself without the checker knowing about it.");

        }
      }
      else
      {
        v44[3] = 0;
      }
      goto LABEL_46;
    }
    if (objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "crl_isPlayable"))
    {
      v44[3] = 2;
      v27 = *(_QWORD *)(a1 + 48);
      if (v27 < 3)
      {
LABEL_46:
        objc_msgSend(*(id *)(a1 + 32), "p_didFinishCheckingCompatibilityUpToLevel:actualLevel:error:completionHandler:", *(_QWORD *)(a1 + 48), v44[3], v23, *(_QWORD *)(a1 + 40));
LABEL_49:

        goto LABEL_29;
      }
      v28 = *(_QWORD *)(a1 + 32);
      v29 = *(void **)(a1 + 40);
      v30 = *(void **)(v28 + 16);
      v38[0] = _NSConcreteStackBlock;
      v38[1] = 3221225472;
      v38[2] = sub_10024DE20;
      v38[3] = &unk_101247CF0;
      v38[4] = v28;
      v39[1] = &v43;
      v39[2] = v27;
      v39[0] = v29;
      objc_msgSend(v30, "loadValuesAsynchronouslyForKeys:completionHandler:", &off_1012CB6E0, v38);
      v31 = (id *)v39;
    }
    else
    {
      v32 = *(_QWORD *)(a1 + 32);
      v33 = *(void **)(a1 + 40);
      v34 = *(void **)(v32 + 16);
      v36[0] = _NSConcreteStackBlock;
      v36[1] = 3221225472;
      v36[2] = sub_10024E0D8;
      v36[3] = &unk_101247CF0;
      v36[4] = v32;
      v35 = *(_QWORD *)(a1 + 48);
      v37[1] = &v43;
      v37[2] = v35;
      v37[0] = v33;
      objc_msgSend(v34, "loadValuesAsynchronouslyForKeys:completionHandler:", &off_1012CB6F8, v36);
      v31 = (id *)v37;
    }

    goto LABEL_49;
  }
  if (v3 != (id)4 || (objc_msgSend(*(id *)(a1 + 32), "isCancelled") & 1) != 0)
    goto LABEL_28;
  +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
  if (qword_10147E370 != -1)
    dispatch_once(&qword_10147E370, &stru_101247C68);
  if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
    sub_100E119B8();
  if (qword_10147E370 != -1)
    dispatch_once(&qword_10147E370, &stru_101247C88);
  v5 = off_1013D9070;
  if (os_log_type_enabled((os_log_t)v5, OS_LOG_TYPE_ERROR))
  {
    objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
    sub_100E11864();
  }

  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLMovieCompatibilityChecker p_checkCompatibilityOfAVAssetUpToLevel:completionHandler:]_block_invoke"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLMovieCompatibilityChecker.m"));
  +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v6, v7, 130, 0, "Movie validation cancelled itself without the checker knowing about it.");
LABEL_27:

LABEL_28:
  objc_msgSend(*(id *)(a1 + 32), "p_didFinishCheckingCompatibilityUpToLevel:actualLevel:error:completionHandler:", *(_QWORD *)(a1 + 48), v44[3], v4, *(_QWORD *)(a1 + 40));
LABEL_29:

  _Block_object_dispose(&v43, 8);
}

void sub_10024DD10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a29, 8);
  _Unwind_Resume(a1);
}

void sub_10024DD60(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10024DD90(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10024DDC0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10024DDF0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10024DE20(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;

  v2 = *(void **)(*(_QWORD *)(a1 + 32) + 16);
  v14 = 0;
  v3 = objc_msgSend(v2, "statusOfValueForKey:error:", CFSTR("tracks"), &v14);
  v4 = v14;
  if (v3 == (id)4)
  {
    if ((objc_msgSend(*(id *)(a1 + 32), "isCancelled") & 1) == 0)
    {
      +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101247CA8);
      if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
        sub_100E11A38();
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101247CC8);
      v11 = off_1013D9070;
      if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
        sub_100DE7468(v11);
      v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLMovieCompatibilityChecker p_checkCompatibilityOfAVAssetUpToLevel:completionHandler:]_block_invoke"));
      v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLMovieCompatibilityChecker.m"));
      +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v12, v13, 182, 0, "Movie validation cancelled itself without the checker knowing about it.");

    }
  }
  else if (v3 == (id)2)
  {
    *(_BYTE *)(*(_QWORD *)(a1 + 32) + 48) = objc_msgSend(*(id *)(a1 + 32), "p_doesLoadedAssetHaveHEVCTracks");
    *(_BYTE *)(*(_QWORD *)(a1 + 32) + 49) = objc_msgSend(*(id *)(a1 + 32), "p_doesLoadedAssetHaveProResTracks");
    v6 = *(_QWORD *)(a1 + 32);
    if (*(_BYTE *)(v6 + 49)
      && (*(_QWORD *)&v7 = objc_opt_class(v6, v5).n128_u64[0],
          (objc_msgSend(v8, "platformSupportsProRes", v7) & 1) == 0))
    {
      v9 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
      v10 = 2;
    }
    else if (*(uint64_t *)(a1 + 56) >= 4
           && objc_msgSend(*(id *)(a1 + 32), "p_isLoadedAssetPlayableOnSupportedDevices"))
    {
      v9 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
      if (*(_BYTE *)(*(_QWORD *)(a1 + 32) + 48))
        v10 = 4;
      else
        v10 = 5;
    }
    else
    {
      v9 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
      v10 = 3;
    }
    *(_QWORD *)(v9 + 24) = v10;
  }
  else
  {
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = 0;
  }
  objc_msgSend(*(id *)(a1 + 32), "p_didFinishCheckingCompatibilityUpToLevel:actualLevel:error:completionHandler:", *(_QWORD *)(a1 + 56), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24), v4, *(_QWORD *)(a1 + 40));

}

void sub_10024E078(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10024E0A8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10024E0D8(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;

  v2 = *(void **)(*(_QWORD *)(a1 + 32) + 16);
  v12 = 0;
  v3 = objc_msgSend(v2, "statusOfValueForKey:error:", CFSTR("tracks"), &v12);
  v4 = v12;
  if (v3 == (id)4)
  {
    if ((objc_msgSend(*(id *)(a1 + 32), "isCancelled") & 1) == 0)
    {
      +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101247D10);
      if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
        sub_100E11AB8();
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101247D30);
      v9 = off_1013D9070;
      if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
        sub_100DE7468(v9);
      v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLMovieCompatibilityChecker p_checkCompatibilityOfAVAssetUpToLevel:completionHandler:]_block_invoke"));
      v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLMovieCompatibilityChecker.m"));
      +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v10, v11, 220, 0, "Movie validation cancelled itself without the checker knowing about it.");

    }
  }
  else if (v3 == (id)2)
  {
    *(_BYTE *)(*(_QWORD *)(a1 + 32) + 48) = objc_msgSend(*(id *)(a1 + 32), "p_doesLoadedAssetHaveHEVCTracks");
    *(_BYTE *)(*(_QWORD *)(a1 + 32) + 49) = objc_msgSend(*(id *)(a1 + 32), "p_doesLoadedAssetHaveProResTracks");
    v6 = *(_QWORD *)(a1 + 32);
    if (*(_BYTE *)(v6 + 49))
    {
      *(_QWORD *)&v7 = objc_opt_class(v6, v5).n128_u64[0];
      objc_msgSend(v8, "platformSupportsProRes", v7);
    }
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = 2;
  }
  else
  {
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = 0;
  }
  objc_msgSend(*(id *)(a1 + 32), "p_didFinishCheckingCompatibilityUpToLevel:actualLevel:error:completionHandler:", *(_QWORD *)(a1 + 56), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24), v4, *(_QWORD *)(a1 + 40));

}

void sub_10024E2E0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10024E310(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10024E340(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10024E370(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10024E644(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10024E674(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10024F054(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10024F084(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10024F21C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10024F24C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10024F67C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10024F6AC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100251720(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100251750(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100252430(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100252460(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002529BC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002529EC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100253138(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100253168(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100253348(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v7;
  void *v8;
  id v9;

  v9 = a3;
  v7 = a4;
  objc_msgSend(*(id *)(a1 + 32), "setGeometry:", a2);
  if (v9)
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "maskInfo"));
    objc_msgSend(v8, "setGeometry:", v9);
    objc_msgSend(v8, "setPathSource:", v7);

  }
}

void sub_100253490(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1002534A8(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1002534B8(uint64_t a1)
{

}

void sub_1002534C0(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  void *v9;
  void *v10;
  unsigned __int8 v11;
  unsigned __int8 v12;
  void *v13;
  void *v14;
  void *v15;
  unsigned __int8 v16;
  _TtC8Freeform25CRLCommandSetInfoGeometry *v17;
  void *v18;
  _TtC8Freeform30CRLCommandSetImageItemGeometry *v19;
  _TtC8Freeform30CRLCommandSetImageItemGeometry *v20;
  uint64_t v21;
  void *v22;
  id v23;

  v23 = a2;
  v7 = a3;
  v8 = a4;
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "imageInfo"));
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "geometry"));
  v11 = objc_msgSend(v10, "isEqual:", v23);
  v12 = v11;
  if (v7)
  {
    if ((v11 & 1) != 0)
    {
      v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "imageInfo"));
      v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "maskInfo"));
      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "geometry"));
      v16 = objc_msgSend(v15, "isEqual:", v7);

      if ((v16 & 1) != 0)
        goto LABEL_10;
    }
    else
    {

    }
    v20 = [_TtC8Freeform30CRLCommandSetImageItemGeometry alloc];
    v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "imageInfo"));
    v19 = -[CRLCommandSetImageItemGeometry initWithImageItem:imageGeometry:maskGeometry:maskPathSource:](v20, "initWithImageItem:imageGeometry:maskGeometry:maskPathSource:", v18, v23, v7, v8);
    goto LABEL_9;
  }

  if ((v12 & 1) == 0)
  {
    v17 = [_TtC8Freeform25CRLCommandSetInfoGeometry alloc];
    v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "imageInfo"));
    v19 = -[CRLCommandSetInfoGeometry initWithBoardItem:geometry:](v17, "initWithBoardItem:geometry:", v18, v23);
LABEL_9:
    v21 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
    v22 = *(void **)(v21 + 40);
    *(_QWORD *)(v21 + 40) = v19;

  }
LABEL_10:

}

void sub_100253A1C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100253A4C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100253BD0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100253C00(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100253EE4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100253F14(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100253F44(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100253F74(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100254134(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100254164(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100254890(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002548C0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100254FD0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100255000(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10025531C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10025534C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10025537C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002553AC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100255574(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002555A4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100255884(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002558B4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002558E4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100255914(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100255CBC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100255CEC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100256154(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100256184(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002561B4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002561E4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002569B0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002569E0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

id sub_10025717C(uint64_t a1)
{
  void *v1;
  __int128 v2;
  _OWORD v4[3];

  v1 = *(void **)(a1 + 32);
  v2 = *(_OWORD *)&CGAffineTransformIdentity.c;
  v4[0] = *(_OWORD *)&CGAffineTransformIdentity.a;
  v4[1] = v2;
  v4[2] = *(_OWORD *)&CGAffineTransformIdentity.tx;
  return objc_msgSend(v1, "setTransform:", v4);
}

void sub_10025723C(uint64_t a1, uint64_t a2)
{
  double x;
  double y;
  double width;
  double height;
  double v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  void *v27;
  double v28;
  double v29;
  double v30;
  double v31;
  CGFloat MaxY;
  CGAffineTransform v33;
  CGAffineTransform v34;
  CGAffineTransform v35;
  CGRect v36;
  CGRect v37;

  x = CGRectNull.origin.x;
  y = CGRectNull.origin.y;
  width = CGRectNull.size.width;
  height = CGRectNull.size.height;
  *(_QWORD *)&v7 = objc_opt_class(CRLWPRep, a2).n128_u64[0];
  v9 = v8;
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "target", v7));
  v11 = sub_100221D0C(v9, v10);
  v12 = (void *)objc_claimAutoreleasedReturnValue(v11);

  v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "selection"));
  if (objc_msgSend(v13, "isInsertionPoint"))
  {
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "selection"));
    if (objc_msgSend(v14, "type") != (id)3)
    {
      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "selection"));
      v16 = objc_msgSend(v15, "type");

      if (v16 == (id)5)
        goto LABEL_7;
      v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "interactiveCanvasController"));
      v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "layerHost"));
      v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "canvasView"));
      v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "interactiveCanvasController"));
      objc_msgSend(v12, "caretRect");
      objc_msgSend(v18, "convertUnscaledToBoundsRect:");
      v20 = v19;
      v22 = v21;
      v24 = v23;
      v26 = v25;
      v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "superview"));
      objc_msgSend(v17, "convertRect:toView:", v27, v20, v22, v24, v26);
      x = v28;
      y = v29;
      width = v30;
      height = v31;

    }
  }

LABEL_7:
  v36.origin.x = x;
  v36.origin.y = y;
  v36.size.width = width;
  v36.size.height = height;
  if (CGRectIsEmpty(v36))
  {
    memset(&v35, 0, sizeof(v35));
    objc_msgSend(*(id *)(a1 + 32), "bounds");
    MaxY = CGRectGetMaxY(v37);
    CGAffineTransformMakeTranslation(&v35, 0.0, MaxY * 0.5);
    v33 = v35;
    CGAffineTransformScale(&v34, &v33, 0.25, 0.25);
    v35 = v34;
    objc_msgSend(*(id *)(a1 + 32), "setTransform:", &v34);
  }
  else
  {
    objc_msgSend(*(id *)(a1 + 32), "setFrame:", x, y, width, height);
  }

}

id sub_100257480(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "remove");
  return objc_msgSend(*(id *)(a1 + 32), "setTarget:", 0);
}

void sub_100258104(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100258134(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

double sub_100258234(uint64_t a1)
{
  return *(double *)(a1 + 40);
}

id sub_1002582C8(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  CGFloat v7;
  CGFloat v8;
  CGFloat v9;
  CGFloat v10;
  double v11;
  double v12;
  double v13;
  double v14;
  UIPointerShape *v15;
  void *v16;
  void *v17;

  v5 = a3;
  v6 = a2;
  objc_msgSend(v6, "frame");
  v11 = sub_100061400(v7, v8, v9, v10);
  v13 = v12;
  v14 = *(double *)(a1 + 40);
  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();

  v15 = +[UIPointerShape shapeWithRoundedRect:cornerRadius:](UIPointerShape, "shapeWithRoundedRect:cornerRadius:", sub_10005FD98(v11, v13, v14));
  v16 = (void *)objc_claimAutoreleasedReturnValue(v15);
  v17 = (void *)objc_claimAutoreleasedReturnValue(+[UIPointerStyle styleWithEffect:shape:](UIPointerStyle, "styleWithEffect:shape:", v5, v16));

  return v17;
}

void sub_100258DB0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100258DE0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100259098(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002590C8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100259590(uint64_t a1)
{
  id v1;
  void *v2;

  v1 = objc_alloc_init(*(Class *)(a1 + 32));
  v2 = (void *)qword_101415280;
  qword_101415280 = (uint64_t)v1;

}

void sub_10025A87C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  uint64_t v35;

  _Block_object_dispose(&a29, 8);
  _Block_object_dispose(&a35, 8);
  _Block_object_dispose((const void *)(v35 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_10025A8B4(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  CGFloat v26;
  CGFloat v27;
  CGFloat v28;
  uint64_t v29;
  double v30;
  double v31;
  __int128 v32;
  __int128 v33;
  CGFloat v34;
  CGFloat v35;
  uint64_t v36;
  double v37;
  double v38;
  CGFloat v39;
  CGFloat v40;
  uint64_t v41;
  double v42;
  double v43;
  CGFloat v44;
  CGFloat v45;
  CGAffineTransform v46;
  CGAffineTransform t1;
  CGAffineTransform t2;
  CGAffineTransform v49;
  CGAffineTransform v50;

  v3 = a2;
  objc_opt_class(CRLConnectionLineAbstractLayout, v4);
  v6 = sub_100221D0C(v5, v3);
  v7 = (void *)objc_claimAutoreleasedReturnValue(v6);

  objc_msgSend(v7, "tailPoint");
  v8 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  *(_QWORD *)(v8 + 32) = v9;
  *(_QWORD *)(v8 + 40) = v10;
  objc_msgSend(v7, "getControlKnobPosition:", 12);
  v11 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  *(_QWORD *)(v11 + 32) = v12;
  *(_QWORD *)(v11 + 40) = v13;
  objc_msgSend(v7, "headPoint");
  v14 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  *(_QWORD *)(v14 + 32) = v15;
  *(_QWORD *)(v14 + 40) = v16;
  objc_msgSend(v7, "pathBounds");
  v18 = v17;
  v19 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  *(double *)(v19 + 32) = sub_1000603B8(*(double *)(v19 + 32), *(double *)(v19 + 40), v17);
  *(_QWORD *)(v19 + 40) = v20;
  v21 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  *(double *)(v21 + 32) = sub_1000603B8(*(double *)(v21 + 32), *(double *)(v21 + 40), v18);
  *(_QWORD *)(v21 + 40) = v22;
  v23 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  *(double *)(v23 + 32) = sub_1000603B8(*(double *)(v23 + 32), *(double *)(v23 + 40), v18);
  *(_QWORD *)(v23 + 40) = v24;
  memset(&v50, 0, sizeof(v50));
  if (v7)
    objc_msgSend(v7, "transformInRoot");
  CGAffineTransformMakeScale(&t2, *(CGFloat *)(a1 + 56), *(CGFloat *)(a1 + 56));
  t1 = v50;
  CGAffineTransformConcat(&v49, &t1, &t2);
  v50 = v49;
  v25 = sub_10005FDDC();
  sub_10007942C(0, 1, (uint64_t)&v46, v25, v26, v27, v28);
  t1 = v50;
  CGAffineTransformConcat(&v49, &t1, &v46);
  v50 = v49;
  v29 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v30 = *(double *)(v29 + 32);
  v31 = *(double *)(v29 + 40);
  v32 = *(_OWORD *)&v49.a;
  v33 = *(_OWORD *)&v49.c;
  v34 = v49.tx + v31 * v49.c + v49.a * v30;
  v35 = v49.ty + v31 * v49.d + v49.b * v30;
  *(CGFloat *)(v29 + 32) = v34;
  *(CGFloat *)(v29 + 40) = v35;
  v36 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v37 = *(double *)(v36 + 32);
  v38 = *(double *)(v36 + 40);
  v39 = v50.tx + *(double *)&v33 * v38 + *(double *)&v32 * v37;
  v40 = v50.ty + *((double *)&v33 + 1) * v38 + *((double *)&v32 + 1) * v37;
  *(CGFloat *)(v36 + 32) = v39;
  *(CGFloat *)(v36 + 40) = v40;
  v41 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v42 = *(double *)(v41 + 32);
  v43 = *(double *)(v41 + 40);
  v44 = v50.tx + *(double *)&v33 * v43 + *(double *)&v32 * v42;
  v45 = v50.ty + *((double *)&v33 + 1) * v43 + *((double *)&v32 + 1) * v42;
  *(CGFloat *)(v41 + 32) = v44;
  *(CGFloat *)(v41 + 40) = v45;

}

id sub_10025AC3C(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;

  v3 = *(void **)(a1 + 32);
  v4 = a2;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "posterImageAssetPayload"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "boardItemFactory"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "movieAssetPayload"));
  objc_msgSend(*(id *)(a1 + 32), "posterTime");
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "makeMovieItemWithGeometry:movieData:posterImageData:posterTime:", v4, v7, v5));

  return v8;
}

void sub_10025B374(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10025B3A4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10025BD80(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10025BDB0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

uint64_t sub_10025BDE0(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "repForSelecting"));
  v4 = v3;
  if (v3)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "layout"));
    if (v5 == *(void **)(a1 + 32))
    {
      v11 = 0;
    }
    else
    {
      v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "layout"));
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "info"));
      if (v7 == *(void **)(a1 + 40))
      {
        v11 = 0;
      }
      else
      {
        v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "layout"));
        objc_opt_class(CRLConnectionLineAbstractLayout, v9);
        v11 = objc_opt_isKindOfClass(v8, v10) ^ 1;

      }
    }

  }
  else
  {
    v11 = 0;
  }

  return v11 & 1;
}

void sub_10025C378(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  uint64_t v11;
  va_list va;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  va_list va1;

  va_start(va1, a10);
  va_start(va, a10);
  v11 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10025C3A4(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_10025C3B4(uint64_t a1)
{

}

void sub_10025C3BC(_QWORD *a1, void *a2)
{
  id v3;
  uint64_t v4;
  double v5;
  objc_class *v6;
  objc_class *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;

  v3 = a2;
  *(_QWORD *)&v5 = objc_opt_class(CRLConnectionLineAbstractLayout, v4).n128_u64[0];
  v7 = v6;
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "layoutForInfo:", a1[4], v5));

  v9 = sub_1002223BC(v7, v8);
  v10 = (void *)objc_claimAutoreleasedReturnValue(v9);

  if (!v10)
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_1012485E0);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E12B10();
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101248600);
    v11 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100DE8358(v11);
    v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "+[CRLConnectionLineAdjustmentHelper p_computeLayoutInfoGeometry:andPathSource:forConnectionLine:withBoardItemOwner:]_block_invoke"));
    v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLConnectionLineAdjustmentHelper.m"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v12, v13, 239, 0, "invalid nil value for '%{public}s'", "layout");

  }
  objc_msgSend(v10, "invalidateConnections");
  v14 = objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "layoutInfoGeometry"));
  v15 = *(_QWORD *)(a1[5] + 8);
  v16 = *(void **)(v15 + 40);
  *(_QWORD *)(v15 + 40) = v14;

  v17 = objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "pathSource"));
  v18 = *(_QWORD *)(a1[6] + 8);
  v19 = *(void **)(v18 + 40);
  *(_QWORD *)(v18 + 40) = v17;

}

void sub_10025C5B0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10025C5E0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10025C8BC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10025C8EC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10025C91C(uint64_t a1)
{
  void *v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  void *v21;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "boardItems"));
  v3 = objc_msgSend(v2, "count");

  if (v3 != (id)1)
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101248688);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E12C2C();
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_1012486A8);
    v4 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100DE7468(v4);
    v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLMediaReplacingHelper showMediaReplaceUI:]_block_invoke"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLMediaReplacingHelper.m"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v5, v6, 68, 0, "Showing replace media UI when more than one image is selected!");

  }
  v7 = *(void **)(a1 + 40);
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "boardItems"));
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "anyObject"));
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "repForInfo:", v9));

  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "repForSelecting"));
  objc_opt_class(CRLCanvasRep, v12);
  v19 = sub_10022209C(v11, v13, 1, v14, v15, v16, v17, v18, (uint64_t)&OBJC_PROTOCOL___CRLMediaReplacingRep);
  v20 = (void *)objc_claimAutoreleasedReturnValue(v19);

  v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "mediaReplacer"));
  objc_msgSend(v21, "showMediaReplacerForMediaReplacingRep:", v20);

}

void sub_10025CB24(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10025CB54(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

uint64_t sub_10025CB84(uint64_t result, char a2)
{
  if ((a2 & 1) == 0)
    return (*(uint64_t (**)(void))(*(_QWORD *)(result + 32) + 16))();
  return result;
}

void sub_10025D1F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_10025D224(_QWORD *a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  float64x2_t v16;
  CGAffineTransform v17;
  CGAffineTransform v18;

  v3 = a2;
  v4 = v3;
  if (a1[7] == 6)
  {
    objc_msgSend(v3, "findNewEdgeMagnetCanvasPositionForConnectionLine:forLineEnd:withCanvasPosition:", a1[4], a1[8], *(double *)(*(_QWORD *)(a1[5] + 8) + 32), *(double *)(*(_QWORD *)(a1[5] + 8) + 40));
    v5 = *(_QWORD *)(a1[5] + 8);
    *(_QWORD *)(v5 + 32) = v6;
    *(_QWORD *)(v5 + 40) = v7;
  }
  v8 = *(_QWORD *)(a1[5] + 8);
  if (v4)
    objc_msgSend(v4, "pureTransformInRoot");
  else
    memset(&v17, 0, sizeof(v17));
  CGAffineTransformInvert(&v18, &v17);
  v16 = vaddq_f64(*(float64x2_t *)&v18.tx, vmlaq_n_f64(vmulq_n_f64(*(float64x2_t *)&v18.c, *(double *)(v8 + 40)), *(float64x2_t *)&v18.a, *(double *)(v8 + 32)));
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "pureGeometry"));
  objc_msgSend(v9, "size");
  v10 = sub_10005FDDC();
  v13 = sub_1000626B8(v16.f64[0], v16.f64[1], v10, v11, v12);
  v14 = *(_QWORD *)(a1[6] + 8);
  *(double *)(v14 + 32) = v13;
  *(_QWORD *)(v14 + 40) = v15;

}

void sub_10025D574(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10025D5A4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10025D5D4(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  void (**v6)(_QWORD);
  uint64_t v7;
  id v8;

  v8 = a3;
  v6 = a4;
  v7 = *(_QWORD *)(a1 + 32);
  if (v7)
    (*(void (**)(void))(v7 + 16))();
  if (v6)
    v6[2](v6);

}

void sub_10025DA28(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10025DA58(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10025DA88(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  void (**v7)(_QWORD);
  uint64_t v8;
  id v9;

  v9 = a3;
  v7 = a4;
  v8 = *(_QWORD *)(a1 + 32);
  if (v8)
    (*(void (**)(uint64_t, uint64_t, id))(v8 + 16))(v8, a2, v9);
  if (v7)
    v7[2](v7);

}

void sub_10025DE28(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10025DE58(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10025E510(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,char a52)
{
  uint64_t v52;

  _Block_object_dispose(&a52, 8);
  _Block_object_dispose((const void *)(v52 - 248), 8);
  _Block_object_dispose((const void *)(v52 - 216), 8);
  _Block_object_dispose((const void *)(v52 - 184), 8);
  _Unwind_Resume(a1);
}

void sub_10025E558(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10025E588(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

uint64_t sub_10025E5B8(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_10025E5C8(uint64_t a1)
{

}

void sub_10025E5D0(uint64_t a1)
{
  uint64_t v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  NSObject *v8;
  id v9;
  id v10;
  _QWORD block[4];
  id v12;
  id v13;
  id v14;
  uint64_t v15;

  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) = 1;
  objc_msgSend(*(id *)(a1 + 32), "cancel");
  os_unfair_lock_lock((os_unfair_lock_t)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 32));
  if (*(_QWORD *)(a1 + 56))
  {
    v2 = *(_QWORD *)(*(_QWORD *)(a1 + 80) + 8);
    if (!*(_BYTE *)(v2 + 24))
    {
      *(_BYTE *)(v2 + 24) = 1;
      v3 = objc_alloc((Class)NSError);
      v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
      v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "localizedStringForKey:value:table:", CFSTR("The user cancelled the import."), 0, 0));
      v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjectsAndKeys:](NSDictionary, "dictionaryWithObjectsAndKeys:", v5, NSLocalizedFailureReasonErrorKey, &off_1012CC5B0, CFSTR("CRLBoardItemImporterErrorMediaTypeKey"), 0));
      v7 = objc_msgSend(v3, "initWithDomain:code:userInfo:", CFSTR("com.apple.freeform.CRLErrorDomainInfoImporter"), 104, v6);

      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_10025E78C;
      block[3] = &unk_101248818;
      v15 = *(_QWORD *)(a1 + 88);
      v8 = *(NSObject **)(a1 + 40);
      v12 = *(id *)(a1 + 48);
      v9 = *(id *)(a1 + 56);
      v13 = v7;
      v14 = v9;
      v10 = v7;
      dispatch_async(v8, block);

    }
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 32));
}

uint64_t sub_10025E78C(uint64_t a1)
{
  void *v2;

  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40))
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "layerHost"));
    objc_msgSend(v2, "endModalOperationWithToken:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40));

  }
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
}

void sub_10025E7F4(uint64_t a1)
{
  NSObject *v2;
  id v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  _QWORD block[4];
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10025E900;
  block[3] = &unk_1012489A8;
  v16 = *(_OWORD *)(a1 + 96);
  v17 = *(_QWORD *)(a1 + 112);
  v2 = *(NSObject **)(a1 + 32);
  v8 = *(id *)(a1 + 40);
  v3 = *(id *)(a1 + 48);
  v4 = *(_QWORD *)(a1 + 56);
  v9 = v3;
  v10 = v4;
  v5 = *(id *)(a1 + 88);
  v19 = *(_BYTE *)(a1 + 128);
  v6 = *(_QWORD *)(a1 + 120);
  v15 = v5;
  v18 = v6;
  v11 = *(id *)(a1 + 64);
  v12 = *(id *)(a1 + 72);
  v13 = *(id *)(a1 + 32);
  v14 = *(id *)(a1 + 80);
  dispatch_async(v2, block);

}

void sub_10025E900(uint64_t a1)
{
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  Block_layout *v19;
  _QWORD *v20;
  __CFRunLoop *Main;
  void *v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  void *i;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  unsigned int v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  void *v41;
  int v42;
  NSObject *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  id v50;
  uint64_t v51;
  void *v52;
  void *v53;
  id v54;
  void *v55;
  _QWORD v56[5];
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  _QWORD v66[4];
  id v67;
  id v68;
  _QWORD v69[4];
  id v70;
  id v71;
  char v72;
  _BYTE v73[128];
  _QWORD v74[2];
  _QWORD v75[2];

  os_unfair_lock_lock((os_unfair_lock_t)(*(_QWORD *)(*(_QWORD *)(a1 + 96) + 8) + 32));
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 104) + 8) + 40)
    && !*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 112) + 8) + 24))
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "layerHost"));
    objc_msgSend(v2, "endModalOperationWithToken:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 104) + 8) + 40));

  }
  os_unfair_lock_unlock((os_unfair_lock_t)(*(_QWORD *)(*(_QWORD *)(a1 + 96) + 8) + 32));
  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "error"));
  if (v3)
    goto LABEL_5;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "boardItem"));

  if (v6)
  {
    *(_QWORD *)&v8 = objc_opt_class(_TtC8Freeform12CRLMovieItem, v7).n128_u64[0];
    v10 = v9;
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "boardItem", v8));
    v12 = sub_100221D0C(v10, v11);
    v13 = (void *)objc_claimAutoreleasedReturnValue(v12);

    if (!objc_msgSend(v13, "isAudioOnly"))
      goto LABEL_12;
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "boardItems"));
    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "objectsPassingTest:", &stru_101248880));
    v16 = objc_msgSend(v15, "count");

    v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "boardItems"));
    v18 = objc_msgSend(v17, "count");

    if (v16 != v18)
    {
      v47 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
      v48 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v47, "localizedStringForKey:value:table:", CFSTR("The movie couldn’t be inserted."), 0, 0));

      v74[0] = NSLocalizedDescriptionKey;
      v74[1] = CFSTR("CRLBoardItemImporterErrorMediaTypeKey");
      v75[0] = v48;
      v75[1] = &off_1012CC5C8;
      v49 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v75, v74, 2));
      v50 = objc_msgSend(v49, "mutableCopy");
      v3 = objc_msgSend(objc_alloc((Class)NSError), "initWithDomain:code:userInfo:", CFSTR("com.apple.freeform.CRLErrorDomainInfoImporter"), 100, v50);

      if (v3)
      {
LABEL_5:
        if (*(_QWORD *)(a1 + 88))
        {
          os_unfair_lock_lock((os_unfair_lock_t)(*(_QWORD *)(*(_QWORD *)(a1 + 96) + 8) + 32));
          v4 = *(_QWORD *)(*(_QWORD *)(a1 + 112) + 8);
          if (!*(_BYTE *)(v4 + 24))
          {
            *(_BYTE *)(v4 + 24) = 1;
            v5 = *(_QWORD *)(a1 + 88);
            v69[0] = _NSConcreteStackBlock;
            v69[1] = 3221225472;
            v69[2] = sub_10025F1AC;
            v69[3] = &unk_1012488A8;
            v72 = *(_BYTE *)(a1 + 128);
            v70 = *(id *)(a1 + 32);
            v71 = v3;
            (*(void (**)(uint64_t, _QWORD, id, _QWORD *))(v5 + 16))(v5, 0, v71, v69);

          }
          os_unfair_lock_unlock((os_unfair_lock_t)(*(_QWORD *)(*(_QWORD *)(a1 + 96) + 8) + 32));
        }
        else if (*(_BYTE *)(a1 + 128))
        {
          v66[0] = _NSConcreteStackBlock;
          v66[1] = 3221225472;
          v66[2] = sub_10025F264;
          v66[3] = &unk_10122D3D8;
          v67 = *(id *)(a1 + 32);
          v3 = v3;
          v68 = v3;
          v20 = v66;
          Main = CFRunLoopGetMain();
          CFRunLoopPerformBlock(Main, kCFRunLoopDefaultMode, v20);
          CFRunLoopWakeUp(Main);

        }
        goto LABEL_59;
      }
    }
    else
    {
LABEL_12:

    }
  }
  v55 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "boardItem"));
  if (v55 && !*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 120) + 8) + 24))
  {
    v54 = objc_msgSend(objc_alloc((Class)NSMapTable), "initWithKeyOptions:valueOptions:capacity:", 0, 0, 0);
    v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "editingCoordinator"));
    v53 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v22, "boardItemFactory"));

    v64 = 0u;
    v65 = 0u;
    v62 = 0u;
    v63 = 0u;
    v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "boardItems"));
    v24 = objc_msgSend(v23, "countByEnumeratingWithState:objects:count:", &v62, v73, 16);
    if (v24)
    {
      v25 = v24;
      v26 = *(_QWORD *)v63;
      do
      {
        for (i = 0; i != v25; i = (char *)i + 1)
        {
          if (*(_QWORD *)v63 != v26)
            objc_enumerationMutation(v23);
          v28 = *(void **)(*((_QWORD *)&v62 + 1) + 8 * (_QWORD)i);
          if (!*(_QWORD *)(a1 + 56)
            || objc_msgSend(*(id *)(*((_QWORD *)&v62 + 1) + 8 * (_QWORD)i), "isEqual:"))
          {
            v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "interactiveCanvasController"));
            v30 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v29, "canvasEditor"));
            v31 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v30, "canvasEditorHelper"));
            v32 = objc_msgSend(v31, "canReplaceBoardItem:", v28);

            if (v32)
            {
              v33 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v53, "makeDuplicateOfBoardItem:", v55));
              objc_msgSend(v33, "takePropertiesFromReplacedBoardItem:", v28);
              objc_opt_class(_TtC8Freeform12CRLMovieItem, v34);
              v36 = sub_100221D0C(v35, v33);
              v37 = (void *)objc_claimAutoreleasedReturnValue(v36);
              if (objc_msgSend(v37, "isAnimatedImage"))
                objc_msgSend(v37, "setShadow:", 0);
              objc_opt_class(_TtC8Freeform12CRLMovieItem, v38);
              v40 = sub_100221D0C(v39, v28);
              v41 = (void *)objc_claimAutoreleasedReturnValue(v40);
              if (objc_msgSend(v37, "isAnimatedImage")
                && (objc_msgSend(v41, "isAnimatedImage") & 1) == 0)
              {
                objc_msgSend(v37, "setIsLooping:", 1);
              }
              objc_msgSend(v54, "setObject:forKey:", v33, v28);

            }
          }
        }
        v25 = objc_msgSend(v23, "countByEnumeratingWithState:objects:count:", &v62, v73, 16);
      }
      while (v25);
    }

    if (objc_msgSend(v54, "count"))
    {
      v56[0] = _NSConcreteStackBlock;
      v56[1] = 3221225472;
      v56[2] = sub_10025F274;
      v56[3] = &unk_101248920;
      v56[4] = *(_QWORD *)(a1 + 48);
      v57 = v54;
      v58 = *(id *)(a1 + 56);
      v59 = *(id *)(a1 + 32);
      v60 = *(id *)(a1 + 64);
      v61 = v55;
      v19 = (Block_layout *)objc_msgSend(v56, "copy");
      if (!*(_QWORD *)(a1 + 88))
      {
        if (*(_UNKNOWN **)(a1 + 72) != &_dispatch_main_q)
        {
          v42 = +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
          if (qword_10147E370 != -1)
            dispatch_once(&qword_10147E370, &stru_101248940);
          v43 = off_1013D9070;
          if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
            sub_100E12F9C(v42, v43);
          if (qword_10147E370 != -1)
            dispatch_once(&qword_10147E370, &stru_101248960);
          v44 = off_1013D9070;
          if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
            sub_100DE7468(v44);
          v45 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLMediaReplacingHelper p_replaceCanvasElementInfo:withInfoFromInfoImporter:interactively:allowedTypes:actionString:queue:completion:]_block_invoke"));
          v46 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLMediaReplacingHelper.m"));
          +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v45, v46, 445, 0, "expected equality between %{public}s and %{public}s", "dispatch_get_main_queue()", "queue");

        }
        v19->invoke(v19);
      }

    }
    else
    {
      v19 = 0;
    }

  }
  else
  {
    v19 = 0;
  }
  if (*(_QWORD *)(a1 + 88))
  {
    os_unfair_lock_lock((os_unfair_lock_t)(*(_QWORD *)(*(_QWORD *)(a1 + 96) + 8) + 32));
    v51 = *(_QWORD *)(*(_QWORD *)(a1 + 112) + 8);
    if (!*(_BYTE *)(v51 + 24))
    {
      *(_BYTE *)(v51 + 24) = 1;
      if (!v19)
        v19 = &stru_101248980;
      (*(void (**)(void))(*(_QWORD *)(a1 + 88) + 16))();
    }
    os_unfair_lock_unlock((os_unfair_lock_t)(*(_QWORD *)(*(_QWORD *)(a1 + 96) + 8) + 32));
  }

  v3 = 0;
LABEL_59:
  v52 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "editingCoordinator"));
  objc_msgSend(v52, "resumeCollaborationWithReason:", *(_QWORD *)(a1 + 80));

}

BOOL sub_10025F154(id a1, _TtC8Freeform12CRLBoardItem *a2, BOOL *a3)
{
  _TtC8Freeform12CRLBoardItem *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;

  v3 = a2;
  objc_opt_class(_TtC8Freeform12CRLMovieItem, v4);
  v6 = sub_100221D0C(v5, v3);
  v7 = (void *)objc_claimAutoreleasedReturnValue(v6);

  LOBYTE(v3) = objc_msgSend(v7, "isAudioOnly");
  return (char)v3;
}

void sub_10025F1AC(uint64_t a1)
{
  __CFRunLoop *Main;
  _QWORD v3[4];
  id v4;
  id v5;

  if (*(_BYTE *)(a1 + 48))
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    v3[2] = sub_10025F254;
    v3[3] = &unk_10122D3D8;
    v4 = *(id *)(a1 + 32);
    v5 = *(id *)(a1 + 40);
    Main = CFRunLoopGetMain();
    CFRunLoopPerformBlock(Main, kCFRunLoopDefaultMode, v3);
    CFRunLoopWakeUp(Main);

  }
}

id sub_10025F254(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "presentError:completionHandler:", *(_QWORD *)(a1 + 40), 0);
}

id sub_10025F264(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "presentError:completionHandler:", *(_QWORD *)(a1 + 40), 0);
}

void sub_10025F274(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  CRLCanvasCommandSelectionBehavior *v13;
  void *v14;
  void *v15;
  CRLCanvasCommandSelectionBehavior *v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  void *i;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  void *j;
  void *v28;
  uint64_t v29;
  _TtC8Freeform15CRLCommandGroup *v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;
  const __CFString *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  unsigned int v44;
  void *v45;
  void *v46;
  const __CFString *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  CRLCanvasCommandSelectionBehavior *v53;
  void *v54;
  void *v55;
  _QWORD v56[5];
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  _QWORD v65[4];
  id v66;
  _BYTE v67[128];
  _BYTE v68[128];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "interactiveCanvasController"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "canvasEditor"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "boardItems"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "selectionPathWithInfos:", v4));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "interactiveCanvasController"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "editorController"));
  objc_msgSend(v7, "setSelectionPath:", v5);

  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "crl_allObjects"));
  v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableSet setWithArray:](NSMutableSet, "setWithArray:", v8));

  if (*(_QWORD *)(a1 + 48))
  {
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "boardItems"));
    v65[0] = _NSConcreteStackBlock;
    v65[1] = 3221225472;
    v65[2] = sub_10025F7D8;
    v65[3] = &unk_1012488D0;
    v66 = *(id *)(a1 + 48);
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "objectsPassingTest:", v65));

    objc_msgSend(v9, "unionSet:", v11);
  }
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "commandController"));
  v13 = [CRLCanvasCommandSelectionBehavior alloc];
  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "interactiveCanvasController"));
  v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "canvasEditor"));
  v55 = v9;
  v16 = -[CRLCanvasCommandSelectionBehavior initWithCanvasEditor:type:constructedInfos:](v13, "initWithCanvasEditor:type:constructedInfos:", v15, 3, v9);

  v53 = v16;
  v54 = v12;
  objc_msgSend(v12, "openGroupWithSelectionBehavior:", v16);
  v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
  v61 = 0u;
  v62 = 0u;
  v63 = 0u;
  v64 = 0u;
  v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "boardItems"));
  v19 = objc_msgSend(v18, "countByEnumeratingWithState:objects:count:", &v61, v68, 16);
  if (v19)
  {
    v20 = v19;
    v21 = *(_QWORD *)v62;
    do
    {
      for (i = 0; i != v20; i = (char *)i + 1)
      {
        if (*(_QWORD *)v62 != v21)
          objc_enumerationMutation(v18);
        v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "p_commandsToSwapConnectionsFromInfo:infoMap:", *(_QWORD *)(*((_QWORD *)&v61 + 1) + 8 * (_QWORD)i), *(_QWORD *)(a1 + 40)));
        v57 = 0u;
        v58 = 0u;
        v59 = 0u;
        v60 = 0u;
        v24 = objc_msgSend(v23, "countByEnumeratingWithState:objects:count:", &v57, v67, 16);
        if (v24)
        {
          v25 = v24;
          v26 = *(_QWORD *)v58;
          do
          {
            for (j = 0; j != v25; j = (char *)j + 1)
            {
              if (*(_QWORD *)v58 != v26)
                objc_enumerationMutation(v23);
              objc_msgSend(v17, "addObject:", *(_QWORD *)(*((_QWORD *)&v57 + 1) + 8 * (_QWORD)j));
            }
            v25 = objc_msgSend(v23, "countByEnumeratingWithState:objects:count:", &v57, v67, 16);
          }
          while (v25);
        }

      }
      v20 = objc_msgSend(v18, "countByEnumeratingWithState:objects:count:", &v61, v68, 16);
    }
    while (v20);
  }

  v56[0] = _NSConcreteStackBlock;
  v56[1] = 3221225472;
  v56[2] = sub_10025F7F8;
  v56[3] = &unk_1012488F8;
  v28 = *(void **)(a1 + 40);
  v56[4] = *(_QWORD *)(a1 + 32);
  objc_msgSend(v28, "crl_enumerateKeysAndObjectsUsingBlock:", v56);
  if (objc_msgSend(v17, "count"))
  {
    v30 = -[CRLCommandGroup initWithCommands:]([_TtC8Freeform15CRLCommandGroup alloc], "initWithCommands:", v17);
    objc_msgSend(v54, "enqueueCommand:", v30);

  }
  v31 = *(void **)(a1 + 64);
  if (v31)
  {
    v32 = v31;
LABEL_34:
    objc_msgSend(v54, "setCurrentGroupActionString:", v32);

    goto LABEL_35;
  }
  v33 = *(_QWORD *)(a1 + 72);
  objc_opt_class(_TtC8Freeform12CRLImageItem, v29);
  if ((objc_opt_isKindOfClass(v33, v34) & 1) != 0)
  {
    v36 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
    v37 = v36;
    v38 = CFSTR("Replace with Image");
LABEL_32:
    v32 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v36, "localizedStringForKey:value:table:", v38, 0, CFSTR("UndoStrings")));
    goto LABEL_33;
  }
  v39 = *(_QWORD *)(a1 + 72);
  objc_opt_class(_TtC8Freeform12CRLMovieItem, v35);
  if ((objc_opt_isKindOfClass(v39, v40) & 1) == 0)
  {
    v48 = *(_QWORD *)(a1 + 72);
    objc_opt_class(_TtC8Freeform11CRLFileItem, v41);
    if ((objc_opt_isKindOfClass(v48, v49) & 1) != 0)
    {
      v36 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
      v37 = v36;
      v38 = CFSTR("Replace with File");
    }
    else
    {
      v51 = *(_QWORD *)(a1 + 72);
      objc_opt_class(_TtC8Freeform11CRLUSDZItem, v50);
      if ((objc_opt_isKindOfClass(v51, v52) & 1) == 0)
        goto LABEL_35;
      v36 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
      v37 = v36;
      v38 = CFSTR("Replace with 3D Object");
    }
    goto LABEL_32;
  }
  objc_opt_class(_TtC8Freeform12CRLMovieItem, v41);
  v43 = sub_100221D0C(v42, *(void **)(a1 + 72));
  v37 = (void *)objc_claimAutoreleasedReturnValue(v43);
  v44 = objc_msgSend(v37, "isAudioOnly");
  v45 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v46 = v45;
  if (v44)
    v47 = CFSTR("Replace with Audio");
  else
    v47 = CFSTR("Replace with Video");
  v32 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v45, "localizedStringForKey:value:table:", v47, 0, CFSTR("UndoStrings")));

LABEL_33:
  if (v32)
    goto LABEL_34;
LABEL_35:
  objc_msgSend(v54, "closeGroup");

}

uint64_t sub_10025F7D8(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "isEqual:", *(_QWORD *)(a1 + 32)) ^ 1;
}

void sub_10025F7F8(uint64_t a1, void *a2, void *a3)
{
  void *v4;
  id v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)(a1 + 32);
  v5 = a3;
  v6 = a2;
  v9 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "interactiveCanvasController"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "canvasEditor"));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "canvasEditorHelper"));
  objc_msgSend(v8, "replaceBoardItem:withBoardItem:", v6, v5);

}

void sub_10025F880(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10025F8B0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

uint64_t sub_10025F8E4(uint64_t a1)
{
  __CFRunLoop *Main;
  _QWORD v4[4];
  id v5;
  id v6;

  if (*(_BYTE *)(a1 + 56))
  {
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 3221225472;
    v4[2] = sub_10025F9AC;
    v4[3] = &unk_10122D3D8;
    v5 = *(id *)(a1 + 32);
    v6 = *(id *)(a1 + 40);
    Main = CFRunLoopGetMain();
    CFRunLoopPerformBlock(Main, kCFRunLoopDefaultMode, v4);
    CFRunLoopWakeUp(Main);

  }
  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, Block_layout *))(*(_QWORD *)(a1 + 48) + 16))(*(_QWORD *)(a1 + 48), 0, *(_QWORD *)(a1 + 40), &stru_1012489F0);
}

id sub_10025F9AC(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "presentError:completionHandler:", *(_QWORD *)(a1 + 40), 0);
}

uint64_t sub_10025FAA4(uint64_t a1, int a2)
{
  if (a2)
    objc_msgSend(*(id *)(a1 + 32), "cancel");
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

uint64_t sub_100260884(char a1)
{
  return 1 << a1;
}

uint64_t sub_100260890(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;

  v1 = a1 - 1;
  if ((unint64_t)(a1 - 1) < 9 && ((0x1EFu >> v1) & 1) != 0)
    return qword_100EEE7E0[v1];
  +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
  if (qword_10147E370 != -1)
    dispatch_once(&qword_10147E370, &stru_101248A80);
  if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
    sub_100E13064();
  if (qword_10147E370 != -1)
    dispatch_once(&qword_10147E370, &stru_101248AA0);
  v2 = off_1013D9070;
  if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
    sub_100DE7468(v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "CRLCanvasKnobTag CRLCanvasKnobTagByRotating270Degrees(CRLCanvasKnobTag)"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLCanvasKnob.m"));
  +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v3, v4, 59, 0, "Unexpected knob tag");

  return 0;
}

void sub_1002609F4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100260A24(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

uint64_t sub_100260A54(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 0xA)
    return 0;
  else
    return qword_100EEE870[a1 - 1];
}

uint64_t sub_100260A78(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;

  v1 = a1 - 1;
  if ((unint64_t)(a1 - 1) < 9 && ((0x1EFu >> v1) & 1) != 0)
    return qword_100EEE828[v1];
  +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
  if (qword_10147E370 != -1)
    dispatch_once(&qword_10147E370, &stru_101248AC0);
  if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
    sub_100E130E8();
  if (qword_10147E370 != -1)
    dispatch_once(&qword_10147E370, &stru_101248AE0);
  v2 = off_1013D9070;
  if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
    sub_100DE7468(v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "CRLCanvasKnobTag CRLCanvasKnobTagByRotating90Degrees(CRLCanvasKnobTag)"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLCanvasKnob.m"));
  +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v3, v4, 88, 0, "Unexpected knob tag");

  return 0;
}

void sub_100260BDC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100260C0C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

uint64_t sub_100260C3C(double a1)
{
  if (a1 > 22.5 && a1 <= 67.5)
    return 7;
  if (a1 > 67.5 && a1 <= 112.5)
    return 4;
  if (a1 > 112.5 && a1 <= 157.5)
    return 1;
  if (a1 > 157.5 && a1 <= 202.5)
    return 2;
  if (a1 > 202.5 && a1 <= 247.5)
    return 3;
  if (a1 > 247.5 && a1 <= 292.5)
    return 6;
  if (a1 > 292.5 && a1 <= 337.5)
    return 9;
  if (a1 >= 22.5 && a1 <= 337.5)
    return 0;
  else
    return 8;
}

uint64_t sub_100260D54(uint64_t a1, double a2)
{
  double v3;
  double v4;

  v3 = sub_1003C65A0(a2 / 90.0);
  sub_1000618C4(v3 * 90.0);
  if (v4 == 90.0 || fabs(v4 + -90.0) < 0.00999999978)
    return sub_100260A78(a1);
  if (v4 == 180.0 || fabs(v4 + -180.0) < 0.00999999978)
  {
    if ((unint64_t)(a1 - 1) >= 0xB)
      return 0;
    else
      return qword_100EEE870[a1 - 1];
  }
  else if (v4 == 270.0 || fabs(v4 + -270.0) < 0.00999999978)
  {
    return sub_100260890(a1);
  }
  return a1;
}

double sub_100260E54(uint64_t a1, double a2, double a3, double a4, double a5)
{
  uint64_t v9;
  uint64_t v10;
  double v11;

  if ((unint64_t)(a1 - 1) > 8)
    return CGPointZero.x;
  v9 = 2 - (a1 - 1) % 3u;
  if (a4 >= 0.0)
    v9 = (a1 - 1) % 3u;
  if (a5 >= 0.0)
    v10 = (a1 - 1) / 3u;
  else
    v10 = 2 - (a1 - 1) / 3u;
  v11 = ((double (*)(void))*(&off_101248B00 + v9))();
  ((void (*)(double, double, double, double))*(&off_101248B18 + v10))(a2, a3, a4, a5);
  return v11;
}

BOOL sub_100260F28(char a1)
{
  return ((1 << a1) & 0x28A) != 0;
}

uint64_t sub_100260F40(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;

  v1 = a1;
  v2 = a1 - 1;
  if ((unint64_t)(a1 - 1) < 0xC && ((0xFEFu >> v2) & 1) != 0)
    return qword_100EEE8C8[v2];
  +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
  if (qword_10147E370 != -1)
    dispatch_once(&qword_10147E370, &stru_101248B30);
  if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
    sub_100E1316C();
  if (qword_10147E370 != -1)
    dispatch_once(&qword_10147E370, &stru_101248B50);
  v3 = off_1013D9070;
  if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
    sub_100DE7468(v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "CRLCanvasKnobTag CRLCanvasKnobTagWithFlip(CRLCanvasKnobTag)"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLCanvasKnob.m"));
  +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v4, v5, 238, 0, "don't know how to flip knob tag %tu", v1);

  return v1;
}

void sub_1002610B8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002610E8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100261318(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100261348(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100262C68(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100262C98(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100263288(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_1002632A4(uint64_t a1, void *a2)
{
  id *v3;
  id v4;
  id WeakRetained;
  void *v6;

  v3 = (id *)(a1 + 40);
  v4 = a2;
  WeakRetained = objc_loadWeakRetained(v3);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "crlaxCustomRotorResultForRotorName:predicate:", *(_QWORD *)(a1 + 32), v4));

  return v6;
}

void sub_100263464(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location, id a16)
{
  id *v16;
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a16);
  _Unwind_Resume(a1);
}

UIAccessibilityCustomRotorItemResult *__cdecl sub_100263490(id a1, UIAccessibilityCustomRotorSearchPredicate *a2)
{
  return 0;
}

id sub_100263498(uint64_t a1, void *a2)
{
  id *v3;
  id v4;
  id WeakRetained;
  id v6;
  void *v7;

  v3 = (id *)(a1 + 32);
  v4 = a2;
  WeakRetained = objc_loadWeakRetained(v3);
  v6 = objc_loadWeakRetained((id *)(a1 + 40));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "crlaxCustomRotorResultForRotor:predicate:", v6, v4));

  return v7;
}

void sub_10026367C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_100263698(uint64_t a1, void *a2)
{
  id *v3;
  id v4;
  id WeakRetained;
  void *v6;

  v3 = (id *)(a1 + 40);
  v4 = a2;
  WeakRetained = objc_loadWeakRetained(v3);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "crlaxCustomRotorResultForRotorName:predicate:", *(_QWORD *)(a1 + 32), v4));

  return v6;
}

void sub_100263EE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100263EF8(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_100263F08(uint64_t a1)
{

}

void sub_100263F10(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;

  v3 = *(void **)(a1 + 32);
  v4 = a2;
  v8 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "canvas"));
  v5 = objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "repForLayout:", v4));

  v6 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v7 = *(void **)(v6 + 40);
  *(_QWORD *)(v6 + 40) = v5;

}

double sub_1002642F0(char a1, uint64_t a2, double a3)
{
  BOOL v3;
  BOOL v4;
  float v6;

  if (a2)
    v3 = 0;
  else
    v3 = a3 < 0.02;
  v4 = v3 || a2 == 3;
  if (v4 && (a1 & 1) != 0)
    return 0.05;
  v6 = a3;
  return (fminf(fmaxf(v6, 0.0), 2.0) * 1.25 * 0.5 + 0.25) * 14.0;
}

void sub_1002645AC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002645DC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100264850(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100264880(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100264C78(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDragGRCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DAFA8;
  off_1013DAFA8 = v2;

}

void sub_100264CA4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100264CD4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100264F38(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDragGRCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DAFA8;
  off_1013DAFA8 = v2;

}

void sub_100264F64(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100264F94(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100265DF0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDragGRCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DAFA8;
  off_1013DAFA8 = v2;

}

void sub_100265E1C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDragGRCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DAFA8;
  off_1013DAFA8 = v2;

}

void sub_100265E48(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDragGRCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DAFA8;
  off_1013DAFA8 = v2;

}

void sub_100265E74(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDragGRCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DAFA8;
  off_1013DAFA8 = v2;

}

void sub_100265EA0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100265ED0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100265F00(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDragGRCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DAFA8;
  off_1013DAFA8 = v2;

}

void sub_1002666B0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDragGRCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DAFA8;
  off_1013DAFA8 = v2;

}

void sub_1002666DC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDragGRCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DAFA8;
  off_1013DAFA8 = v2;

}

void sub_100266D20(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDragGRCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DAFA8;
  off_1013DAFA8 = v2;

}

void sub_100266D4C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDragGRCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DAFA8;
  off_1013DAFA8 = v2;

}

void sub_100267BF8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDragGRCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DAFA8;
  off_1013DAFA8 = v2;

}

void sub_100267C24(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDragGRCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DAFA8;
  off_1013DAFA8 = v2;

}

void sub_100267EB0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDragGRCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DAFA8;
  off_1013DAFA8 = v2;

}

void sub_100268334(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDragGRCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DAFA8;
  off_1013DAFA8 = v2;

}

void sub_10026879C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002687CC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100268C50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_100268C68(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "p_allowedToEditChildren");
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = (_BYTE)result;
  return result;
}

void sub_100269240(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100269270(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100269850(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100269880(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100269F50(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100269F80(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10026A590(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10026A5C0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10026A820(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10026AA8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;

  if (v11 != v12)
  {

  }
  _Unwind_Resume(a1);
}

uint64_t sub_10026AC2C(uint64_t a1, void *a2, uint64_t a3, void *a4, char a5, char a6)
{
  id v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;

  v11 = a4;
  *(_QWORD *)a1 = &off_101249148;
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 256) = 0;
  *(_QWORD *)(a1 + 104) = 0;
  *(_QWORD *)(a1 + 112) = 0;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_OWORD *)(a1 + 232) = 0u;
  *(_QWORD *)(a1 + 16) = a2;
  v12 = a2;
  *(_BYTE *)(a1 + 24) = objc_msgSend(v12, "wpKind");
  *(_QWORD *)(a1 + 8) = a3;
  *(_BYTE *)(a1 + 30) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  *(_BYTE *)(a1 + 27) = a5;
  *(_BYTE *)(a1 + 28) = a6;
  v13 = *(void **)(a1 + 216);
  *(_QWORD *)(a1 + 216) = 0;

  v14 = *(void **)(a1 + 224);
  *(_QWORD *)(a1 + 224) = v11;
  v15 = v11;

  v16 = *(void **)(a1 + 256);
  *(_QWORD *)(a1 + 248) = 0;
  *(_QWORD *)(a1 + 256) = 0;

  return a1;
}

void sub_10026ACF4(_Unwind_Exception *a1)
{
  id *v1;
  void *v2;
  void *v3;

  sub_100038CC0((uint64_t)(v1 + 29));
  _Unwind_Resume(a1);
}

uint64_t sub_10026AD48(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;

  *(_QWORD *)a1 = &off_101249148;
  if (*(_BYTE *)(a1 + 31))
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101249170);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E13B5C();
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101249190);
    v2 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)v2, OS_LOG_TYPE_ERROR))
    {
      objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
      sub_100DE7E60();
    }

    v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "virtual CRLWPCoreTextTypesetter::~CRLWPCoreTextTypesetter()"));
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v3, v4, 392, 0, "Didn't end paragraph layout");

  }
  if (*(_BYTE *)(a1 + 30))
    (*(void (**)(uint64_t))(*(_QWORD *)a1 + 24))(a1);

  sub_100038CC0(a1 + 232);
  return a1;
}

void sub_10026AF38(_Unwind_Exception *a1, int a2)
{
  if (a2)
    sub_10000E444(a1);
  _Unwind_Resume(a1);
}

void sub_10026AF44(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10026AF74(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10026AFA8(uint64_t a1)
{
  sub_10026AD48(a1);
  operator delete();
}

uint64_t sub_10026AFCC(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;

  if (!*(_BYTE *)(a1 + 31))
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_1012491B0);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E13BDC();
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_1012491D0);
    v2 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)v2, OS_LOG_TYPE_ERROR))
    {
      objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
      sub_100DE7E60();
    }

    v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "CTTypesetterRef CRLWPCoreTextTypesetter::pCTTypesetter() const"));
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v3, v4, 399, 0, "paragraph must be set up before requesting typesetter");

  }
  return sub_1004B16C8(*(_QWORD *)(a1 + 232));
}

void sub_10026B15C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10026B184(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10026B1B4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

uint64_t sub_10026B1E4(uint64_t result)
{
  *(_WORD *)(result + 30) = 1;
  return result;
}

void sub_10026B1F0(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 31))
    sub_10026B220(a1);
  *(_BYTE *)(a1 + 30) = 0;
}

void sub_10026B220(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *v3;
  unint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  __int128 v8;

  if (*(_BYTE *)(a1 + 31))
  {
    v8 = 0uLL;
    sub_1001339E8(a1 + 232, &v8);
    v2 = (std::__shared_weak_count *)*((_QWORD *)&v8 + 1);
    if (*((_QWORD *)&v8 + 1))
    {
      v3 = (unint64_t *)(*((_QWORD *)&v8 + 1) + 8);
      do
        v4 = __ldaxr(v3);
      while (__stlxr(v4 - 1, v3));
      if (!v4)
      {
        ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
        std::__shared_weak_count::__release_weak(v2);
      }
    }
    v5 = *(void **)(a1 + 112);
    *(_QWORD *)(a1 + 112) = 0;

    *(_BYTE *)(a1 + 31) = 0;
    v6 = *(void **)(a1 + 56);
    *(_QWORD *)(a1 + 56) = 0;

    v7 = *(void **)(a1 + 216);
    *(_QWORD *)(a1 + 216) = 0;

  }
}

uint64_t sub_10026B2BC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 31);
}

uint64_t sub_10026B2C4(uint64_t a1)
{
  return *(_QWORD *)(a1 + 32);
}

uint64_t sub_10026B2D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  CRLWPTypesetterTextSource *v16;
  void *v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  void *v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  void *v36;
  unint64_t v37;
  void *v38;
  id v39;
  void *v40;
  BOOL v41;
  id v42;
  id v43;
  void *v44;
  uint64_t v45;
  id v46;
  void *v47;
  _BOOL4 v48;
  unsigned int v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  id v54;
  void *v55;
  id v56;
  void *v57;
  id v58;
  unint64_t v59;
  unint64_t v60;
  void *v61;
  id v62;
  void *v63;
  BOOL v64;
  uint64_t v65;
  id v66;
  void *v67;
  void *v68;
  int v69;
  uint64_t v70;
  void *v71;
  id v72;
  void *v73;
  unsigned int v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  void *v80;
  void *v81;
  id v82;
  void *v83;
  id v84;
  void *v85;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  void *v89;
  uint64_t v90;
  uint64_t v91;
  CRLWPStyleRun *v92;
  void *v93;
  unsigned int v94;
  void *v95;
  void *v96;
  void *v97;
  void *v98;
  void *v99;
  unsigned __int8 v100;
  id v101;
  void *v102;
  int v103;
  CFIndex v104;
  id v105;
  void *v106;
  _BOOL4 v107;
  unint64_t v108;
  unsigned int v109;
  void *v110;
  void *v111;
  void *v112;
  void *v113;
  id v114;
  id v115;
  id v116;
  void *v117;
  uint64_t v118;
  std::__shared_weak_count *v120;
  unint64_t *v121;
  unint64_t v122;
  void *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  void *v131;
  void *v132;
  CKRecordID v133;
  Swift::String v134;
  uint64_t *v136;
  void *v137;
  id v138;
  uint64_t v139;
  void *v140;
  void *v141;
  unint64_t v142;
  unint64_t v143;
  _QWORD v146[5];
  _OWORD v147[6];
  _OWORD v148[6];
  unint64_t v149;
  unint64_t v150;
  void *v151;
  uint8_t buf[8];
  _BYTE v153[10];
  __int16 v154;
  const char *v155;
  __int16 v156;
  int v157;
  __int16 v158;
  const char *v159;

  if (!a2)
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_1012491F0);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E13C5C();
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101249210);
    v123 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)v123, OS_LOG_TYPE_ERROR))
    {
      objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
      sub_100DE7E60();
    }

    sub_1001BC7E8((uint64_t)"Fatal Assertion failure: %{public}s %{public}s:%d nil state in paragraph layout", v124, v125, v126, v127, v128, v129, v130, (uint64_t)"CRLWPTypesetterParagraphSetupResult CRLWPCoreTextTypesetter::beginParagraphLayout(const CRLWPLayoutState *, CRLWPAttributeIndex)");
    v131 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "CRLWPTypesetterParagraphSetupResult CRLWPCoreTextTypesetter::beginParagraphLayout(const CRLWPLayoutState *, CRLWPAttributeIndex)"));
    v132 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v131, v132, 430, 1, "nil state in paragraph layout");

    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v133, v134);
    abort();
  }
  v3 = sub_10005DD08(a2);
  v4 = (void *)objc_claimAutoreleasedReturnValue(v3);

  if (!v4)
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101249230);
    v5 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)v5, OS_LOG_TYPE_ERROR))
      sub_100E13DE8();

    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101249250);
    v6 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)v6, OS_LOG_TYPE_ERROR))
    {
      v7 = (void *)objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
      sub_100DFC2A8(v7);
    }

    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "CRLWPTypesetterParagraphSetupResult CRLWPCoreTextTypesetter::beginParagraphLayout(const CRLWPLayoutState *, CRLWPAttributeIndex)"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v8, v9, 431, 0, "invalid nil value for '%{public}s'", "state->paragraphStyle()");

  }
  if (*(_BYTE *)(a1 + 31))
    sub_10026B220(a1);
  *(_BYTE *)(a1 + 31) = 1;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 96);
  v10 = *(_QWORD *)(a2 + 16) - *(_QWORD *)(a1 + 32);
  if (v10 >= *(_QWORD *)(a1 + 40))
    v10 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v10;
  v11 = *(_BYTE *)(a2 + 351);
  if (v11)
  {
    if (*(_BYTE *)(a2 + 349))
      v11 = 0;
    else
      v11 = *(_BYTE *)(a2 + 352) != 0;
  }
  *(_BYTE *)(a1 + 72) = v11;
  *(_BYTE *)(a1 + 29) = 0;
  v139 = a2 + 24;
  v12 = variable initialization expression of CRLDocumentSessionAnalyticsManager.totalEventKeyCount();
  *(_QWORD *)(a1 + 80) = v12;
  *(_BYTE *)(a1 + 88) = sub_1001B284C(v12);
  v13 = *(_QWORD *)(a1 + 80);
  if (v13 == 6)
    *(_BYTE *)(a1 + 72) = 0;
  *(_QWORD *)(a1 + 248) = 0;
  *(_QWORD *)(a1 + 96) = v13;
  v14 = sub_10005DD18(a2);
  v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
  v138 = objc_msgSend(v15, "scaleTextPercent");

  v16 = -[CRLWPTypesetterTextSource initWithSource:subRange:]([CRLWPTypesetterTextSource alloc], "initWithSource:subRange:", *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
  v17 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v16;

  *(_QWORD *)(a1 + 48) = objc_msgSend(*(id *)(a1 + 56), "length");
  *(_QWORD *)buf = 0;
  *(_QWORD *)v153 = 0;
  v136 = (uint64_t *)(a1 + 232);
  sub_1001339E8(a1 + 232, (__int128 *)buf);
  v18 = *(std::__shared_weak_count **)v153;
  if (*(_QWORD *)v153)
  {
    v19 = (unint64_t *)(*(_QWORD *)v153 + 8);
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
    }
  }
  v21 = *(void **)(a1 + 224);
  if (v21)
  {
    if (v138 == (id)100 && !*(_BYTE *)(a1 + 24) && *(_QWORD *)(a2 + 16) == 0x7FFFFFFFFFFFFFFFLL)
    {
      objc_msgSend(v21, "cachedTypesetterForParagraphIdentifier:", a3);
      sub_1001339E8((uint64_t)v136, (__int128 *)buf);
      v22 = *(std::__shared_weak_count **)v153;
      if (*(_QWORD *)v153)
      {
        v23 = (unint64_t *)(*(_QWORD *)v153 + 8);
        do
          v24 = __ldaxr(v23);
        while (__stlxr(v24 - 1, v23));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
          std::__shared_weak_count::__release_weak(v22);
        }
      }
    }
  }
  v25 = *v136;
  if (!*v136)
    goto LABEL_49;
  v26 = a1;
  if (*(_QWORD *)(a1 + 48) == (uint64_t)(*(_QWORD *)(v25 + 40) - *(_QWORD *)(v25 + 32)) >> 1)
    goto LABEL_47;
  +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
  if (qword_10147E370 != -1)
    dispatch_once(&qword_10147E370, &stru_101249270);
  v27 = off_1013D9070;
  if (os_log_type_enabled((os_log_t)v27, OS_LOG_TYPE_ERROR))
    sub_100E13D68();

  if (qword_10147E370 != -1)
    dispatch_once(&qword_10147E370, &stru_101249290);
  v28 = off_1013D9070;
  if (os_log_type_enabled((os_log_t)v28, OS_LOG_TYPE_ERROR))
  {
    v29 = (void *)objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
    sub_100DFC2A8(v29);
  }

  v30 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "CRLWPTypesetterParagraphSetupResult CRLWPCoreTextTypesetter::beginParagraphLayout(const CRLWPLayoutState *, CRLWPAttributeIndex)"));
  v31 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm"));
  +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v30, v31, 486, 0, "cached paragraph typesetter has wrong char count");

  v26 = a1;
  v25 = *(_QWORD *)(a1 + 232);
  if (*(_QWORD *)(a1 + 48) == (uint64_t)(*(_QWORD *)(v25 + 40) - *(_QWORD *)(v25 + 32)) >> 1)
  {
LABEL_47:
    sub_1004B18F8(v25, *(void **)(v26 + 56));
  }
  else
  {
    objc_msgSend(*(id *)(a1 + 224), "clearCache");
    *(_QWORD *)buf = 0;
    *(_QWORD *)v153 = 0;
    sub_1001339E8((uint64_t)v136, (__int128 *)buf);
    v120 = *(std::__shared_weak_count **)v153;
    if (*(_QWORD *)v153)
    {
      v121 = (unint64_t *)(*(_QWORD *)v153 + 8);
      do
        v122 = __ldaxr(v121);
      while (__stlxr(v122 - 1, v121));
      if (!v122)
      {
        ((void (*)(std::__shared_weak_count *))v120->__on_zero_shared)(v120);
        std::__shared_weak_count::__release_weak(v120);
      }
    }
  }
  v32 = *v136;
  if (!*v136)
LABEL_49:
    operator new();
  v34 = v32 + 32;
  v33 = *(_QWORD *)(v32 + 32);
  if (*(_QWORD *)(v34 + 8) == v33)
    v33 = 0;
  *(_QWORD *)(a1 + 64) = v33;
  v142 = *(_QWORD *)(a1 + 48);
  v35 = objc_msgSend(objc_alloc((Class)NSMutableArray), "initWithCapacity:", 100);
  v36 = *(void **)(a1 + 104);
  *(_QWORD *)(a1 + 104) = v35;

  objc_storeStrong((id *)(a1 + 112), *(id *)(a1 + 104));
  v137 = (void *)objc_claimAutoreleasedReturnValue(+[CRLWPRangeArray rangeArray](CRLWPMutableRangeArray, "rangeArray"));
  v37 = 0;
  do
  {
    v38 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "characterStyleAtCharIndex:effectiveRange:", v37, &v149));
    v143 = v37;
    v39 = sub_1001722C4(v139);
    v40 = (void *)objc_claimAutoreleasedReturnValue(v39);
    v41 = v40 == 0;

    if (!v41)
    {
      v42 = objc_msgSend(*(id *)(a1 + 56), "charRangeMappedToStorage:", v143, 0);
      v43 = sub_1001722C4(v139);
      v44 = (void *)objc_claimAutoreleasedReturnValue(v43);
      v45 = objc_claimAutoreleasedReturnValue(objc_msgSend(v44, "characterStyleAtCharIndex:effectiveRange:", v42, 0));

      v38 = (void *)v45;
    }
    v46 = sub_10005DD08(a2);
    v47 = (void *)objc_claimAutoreleasedReturnValue(v46);
    v48 = v47 == 0;

    if (v48)
    {
      v49 = +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_1012492F0);
      v50 = off_1013D9070;
      if (os_log_type_enabled((os_log_t)v50, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 67110146;
        *(_DWORD *)&buf[4] = v49;
        *(_WORD *)v153 = 2082;
        *(_QWORD *)&v153[2] = "CRLWPTypesetterParagraphSetupResult CRLWPCoreTextTypesetter::beginParagraphLayout(const CR"
                              "LWPLayoutState *, CRLWPAttributeIndex)";
        v154 = 2082;
        v155 = "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm";
        v156 = 1024;
        v157 = 555;
        v158 = 2082;
        v159 = "state->paragraphStyle()";
        _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)v50, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d invalid nil value for '%{public}s'", buf, 0x2Cu);
      }

      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101249310);
      v51 = off_1013D9070;
      if (os_log_type_enabled((os_log_t)v51, OS_LOG_TYPE_ERROR))
      {
        v115 = (id)objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
        *(_DWORD *)buf = 67109378;
        *(_DWORD *)&buf[4] = v49;
        *(_WORD *)v153 = 2114;
        *(_QWORD *)&v153[2] = v115;
        _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)v51, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: Assertion backtrace: >>%{public}@<<", buf, 0x12u);

      }
      v52 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "CRLWPTypesetterParagraphSetupResult CRLWPCoreTextTypesetter::beginParagraphLayout(const CRLWPLayoutState *, CRLWPAttributeIndex)"));
      v53 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm"));
      +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v52, v53, 555, 0, "invalid nil value for '%{public}s'", "state->paragraphStyle()");

    }
    v54 = sub_10005DD08(a2);
    v55 = (void *)objc_claimAutoreleasedReturnValue(v54);
    v56 = sub_10026CF48(v55, v38, (unint64_t)v138, *(unsigned __int8 *)(a2 + 349), 1);
    v57 = (void *)objc_claimAutoreleasedReturnValue(v56);
    v58 = objc_msgSend(v57, "mutableCopy");

    v59 = v149;
    v60 = v150 + v149;
    if (v142 < v150 + v149)
      v60 = v142;
    if (v149 <= v143)
      v59 = v143;
    v149 = v59;
    v150 = v60 - v59;
    v61 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v58, "objectForKeyedSubscript:", kCTFontAttributeName));

    v62 = sub_10005DD84(a2);
    v63 = (void *)objc_claimAutoreleasedReturnValue(v62);
    v64 = v63 == 0;

    if (v64)
    {
      v68 = 0;
      if (!v38)
        goto LABEL_89;
    }
    else
    {
      v66 = sub_10005DD84(a2);
      v67 = (void *)objc_claimAutoreleasedReturnValue(v66);
      v68 = v67;
      if (v67)
      {
        objc_msgSend(v58, "setObject:forKeyedSubscript:", objc_msgSend(v67, "CGColor"), kCTForegroundColorAttributeName);
        objc_msgSend(v58, "removeObjectForKey:", CFSTR("CRLWPCharacterFillAttribute"));
        objc_msgSend(v58, "removeObjectForKey:", CFSTR("CRLWPCharacterStrokeAttribute"));
        objc_msgSend(v58, "removeObjectForKey:", kCTForegroundColorFromContextAttributeName);
      }
      if (!v38)
        goto LABEL_89;
    }
    v69 = *(unsigned __int8 *)(a2 + 349);
    v70 = objc_opt_class(NSNumber, v65);
    v71 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v38, "valueForProperty:", 28));
    v72 = sub_100221D0C(v70, v71);
    v73 = (void *)objc_claimAutoreleasedReturnValue(v72);
    v74 = objc_msgSend(v73, "intValue");

    if (v74 != -1 && v74 != v69)
    {
      if (v150)
      {
        v75 = 0;
        v76 = v149;
        v77 = 2 * v149;
        while (sub_1001AE368(*(unsigned __int16 *)(*(_QWORD *)(a1 + 64) + v77 + 2 * v75)))
        {
          if (++v75 >= v150)
            goto LABEL_83;
        }
        if (v75)
        {
LABEL_83:
          v150 = v75;
          goto LABEL_89;
        }
        v78 = v150;
        if (v150 >= 2)
        {
          v79 = v76 - 1;
          do
          {
            if (!sub_1001AE368(*(unsigned __int16 *)(*(_QWORD *)(a1 + 64) + 2 * (v79 + v78))))
              break;
            v78 = v150 - 1;
            v150 = v78;
          }
          while (v78 > 1);
        }
      }
      v80 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](NSNumber, "numberWithInt:", v74 == 1));
      v151 = v80;
      v81 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v151, 1));

      objc_msgSend(v58, "setObject:forKeyedSubscript:", v81, kCTWritingDirectionAttributeName);
    }
LABEL_89:
    v82 = sub_10005DD08(a2);
    v83 = (void *)objc_claimAutoreleasedReturnValue(v82);
    v140 = v68;
    v84 = sub_1001B1190(v38, v83, 0x12uLL);
    v85 = (void *)objc_claimAutoreleasedReturnValue(v84);

    if (v85)
    {
      if (objc_msgSend(v85, "isEnabled"))
        v86 = 4;
      else
        v86 = 0;
    }
    else
    {
      v86 = 0;
    }
    v141 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v58, "objectForKeyedSubscript:", CFSTR("CRLWPCharacterStrokeAttribute")));
    v87 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v58, "objectForKeyedSubscript:", CFSTR("CRLWPCharacterFillAttribute")));
    v88 = objc_claimAutoreleasedReturnValue(objc_msgSend(v58, "objectForKeyedSubscript:", CFSTR("CRLWPInvisibleTextAttribute")));
    v89 = (void *)v88;
    v90 = v86 | 8;
    if (!v141)
      v90 = v86;
    if (v87)
      v90 |= 0x10uLL;
    if (v88)
      v91 = v90 | 0x20;
    else
      v91 = v90;
    v92 = objc_opt_new(CRLWPStyleRun);
    -[CRLWPStyleRun setRunLength:](v92, "setRunLength:", v150);
    -[CRLWPStyleRun setCharIndex:](v92, "setCharIndex:", v143);
    -[CRLWPStyleRun setCharacterStyle:](v92, "setCharacterStyle:", v38);
    -[CRLWPStyleRun setCtFont:](v92, "setCtFont:", v61);
    -[CRLWPStyleRun setAttributes:](v92, "setAttributes:", v58);
    -[CRLWPStyleRun setFlags:](v92, "setFlags:", v91);
    sub_1001B21AC((uint64_t)v61, v148);
    v147[2] = v148[2];
    v147[3] = v148[3];
    v147[4] = v148[4];
    v147[5] = v148[5];
    v147[0] = v148[0];
    v147[1] = v148[1];
    -[CRLWPStyleRun setFontHeightInfo:](v92, "setFontHeightInfo:", v147);
    v93 = *(void **)(a1 + 104);
    if (!v93)
    {
      v94 = +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101249330);
      v95 = off_1013D9070;
      if (os_log_type_enabled((os_log_t)v95, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 67110146;
        *(_DWORD *)&buf[4] = v94;
        *(_WORD *)v153 = 2082;
        *(_QWORD *)&v153[2] = "CRLWPTypesetterParagraphSetupResult CRLWPCoreTextTypesetter::beginParagraphLayout(const CR"
                              "LWPLayoutState *, CRLWPAttributeIndex)";
        v154 = 2082;
        v155 = "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm";
        v156 = 1024;
        v157 = 830;
        v158 = 2082;
        v159 = "_mutableStyleRunArray";
        _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)v95, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d invalid nil value for '%{public}s'", buf, 0x2Cu);
      }

      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101249350);
      v96 = off_1013D9070;
      if (os_log_type_enabled((os_log_t)v96, OS_LOG_TYPE_ERROR))
      {
        v116 = (id)objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
        *(_DWORD *)buf = 67109378;
        *(_DWORD *)&buf[4] = v94;
        *(_WORD *)v153 = 2114;
        *(_QWORD *)&v153[2] = v116;
        _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)v96, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: Assertion backtrace: >>%{public}@<<", buf, 0x12u);

      }
      v97 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "CRLWPTypesetterParagraphSetupResult CRLWPCoreTextTypesetter::beginParagraphLayout(const CRLWPLayoutState *, CRLWPAttributeIndex)"));
      v98 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm"));
      +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v97, v98, 830, 0, "invalid nil value for '%{public}s'", "_mutableStyleRunArray");

      v93 = *(void **)(a1 + 104);
    }
    if (!objc_msgSend(v93, "count")
      || (v99 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 104), "lastObject")),
          v100 = objc_msgSend(v99, "coalesceWith:", v92),
          v99,
          (v100 & 1) == 0))
    {
      objc_msgSend(*(id *)(a1 + 104), "addObject:", v92);
    }
    v101 = sub_10005DD08(a2);
    v102 = (void *)objc_claimAutoreleasedReturnValue(v101);
    v103 = sub_1001B1234(v38, v102, 2, 0);

    v104 = v150;
    if (v103 == 1)
    {
      sub_10026DBAC(a1, v143, v150);
    }
    else if (v103 == 3)
    {
      v105 = sub_10005DD08(a2);
      v106 = (void *)objc_claimAutoreleasedReturnValue(v105);
      v107 = sub_1001B1234(v38, v106, 3, 0) == 1;

      if (v107)
        objc_msgSend(v137, "addRange:", v143, v104);
      else
        sub_10026E1D8(a1, v143, v104);
    }
    else if (v103 == 2 && (v91 & 1) == 0 && v150)
    {
      sub_10026D054(a1, v143, v150);
    }
    v108 = v150 + v149;
    if (v150 + v149 > v142)
    {
      v109 = +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101249370);
      v110 = off_1013D9070;
      if (os_log_type_enabled((os_log_t)v110, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 67109890;
        *(_DWORD *)&buf[4] = v109;
        *(_WORD *)v153 = 2082;
        *(_QWORD *)&v153[2] = "CRLWPTypesetterParagraphSetupResult CRLWPCoreTextTypesetter::beginParagraphLayout(const CR"
                              "LWPLayoutState *, CRLWPAttributeIndex)";
        v154 = 2082;
        v155 = "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm";
        v156 = 1024;
        v157 = 858;
        _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)v110, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Bad curCharIndex", buf, 0x22u);
      }

      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101249390);
      v111 = off_1013D9070;
      if (os_log_type_enabled((os_log_t)v111, OS_LOG_TYPE_ERROR))
      {
        v114 = (id)objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
        *(_DWORD *)buf = 67109378;
        *(_DWORD *)&buf[4] = v109;
        *(_WORD *)v153 = 2114;
        *(_QWORD *)&v153[2] = v114;
        _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)v111, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: Assertion backtrace: >>%{public}@<<", buf, 0x12u);

      }
      v112 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "CRLWPTypesetterParagraphSetupResult CRLWPCoreTextTypesetter::beginParagraphLayout(const CRLWPLayoutState *, CRLWPAttributeIndex)"));
      v113 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm"));
      +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v112, v113, 858, 0, "Bad curCharIndex");

    }
    v37 = v108;
  }
  while (v108 < v142);
  v117 = *(void **)(a1 + 104);
  *(_QWORD *)(a1 + 104) = 0;

  v146[0] = _NSConcreteStackBlock;
  v146[1] = 3221225472;
  v146[2] = sub_10026E708;
  v146[3] = &unk_1012493B0;
  v146[4] = a1;
  objc_msgSend(v137, "enumerateRanges:", v146);
  if (*(_QWORD *)(a2 + 400) == 4)
    v118 = *(unsigned __int8 *)(a2 + 349);
  else
    v118 = *(_QWORD *)(a2 + 400);

  return v118;
}

void sub_10026CAA8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10026CD68(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10026CD98(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10026CDC8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10026CDF8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10026CE28(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10026CE58(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10026CE88(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10026CEB8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10026CEE8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10026CF18(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

id sub_10026CF48(void *a1, void *a2, unint64_t a3, unsigned int a4, int a5)
{
  id v9;
  id v10;
  CTParagraphStyleRef v11;
  NSMutableDictionary *v12;
  void *v13;

  v9 = a1;
  v10 = a2;
  v11 = sub_10027C08C(v9, a4);
  v12 = sub_10027C800((uint64_t)v11, v9, v10, a5, a3);
  v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
  CFRelease(v11);

  return v13;
}

void sub_10026CFD0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_10026CFF4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10026D024(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10026D054(uint64_t a1, unint64_t a2, uint64_t a3)
{
  void *v6;
  char *v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  unsigned int v16;
  unint64_t v17;
  _BYTE *v18;
  unsigned int v19;
  _BYTE *v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  unsigned int v25;
  NSObject *v26;
  void *v27;
  void *v28;
  void *v29;
  id v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  unint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  void *v40;
  double Size;
  const __CTFontDescriptor *v42;
  const __CTFontDescriptor *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  CKRecordID v53;
  Swift::String v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  void *v59;
  CTFontRef cf;
  void *v61;
  id v62;
  _OWORD v63[6];
  _OWORD v64[6];
  _OWORD v65[6];
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  uint8_t buf[4];
  unsigned int v73;
  __int16 v74;
  const char *v75;
  __int16 v76;
  const char *v77;
  __int16 v78;
  int v79;
  __int16 v80;
  const char *v81;

  if (!objc_msgSend(*(id *)(a1 + 112), "count"))
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101249F58);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E13E74();
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101249F78);
    v58 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)v58, OS_LOG_TYPE_ERROR))
    {
      objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
      sub_100DE7E60();
    }

    sub_1001BC7E8((uint64_t)"Fatal Assertion failure: %{public}s %{public}s:%d Must have at least one style run", v45, v46, v47, v48, v49, v50, v51, (uint64_t)"void CRLWPCoreTextTypesetter::pChangeToSmallCapsForRange(const NSRange)");
    v59 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "void CRLWPCoreTextTypesetter::pChangeToSmallCapsForRange(const NSRange)"));
    v52 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v59, v52, 4074, 1, "Must have at least one style run");

    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v53, v54);
    abort();
  }
  if (!a3)
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101249F98);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E13F74();
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101249FB8);
    v55 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)v55, OS_LOG_TYPE_ERROR))
    {
      objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
      sub_100DE7E60();
    }

    v56 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "void CRLWPCoreTextTypesetter::pChangeToSmallCapsForRange(const NSRange)"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v56, v6, 4075, 0, "localRange.length must be >= 1");

  }
  v7 = (char *)objc_msgSend(*(id *)(a1 + 112), "count") - 1;
  v57 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 112), "objectAtIndexedSubscript:", v7));
  v8 = objc_msgSend(v57, "range");
  v10 = a2 + a3;
  if ((unint64_t)v8 > a2 || (unint64_t)v8 + v9 < v10)
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101249FD8);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E13EF4();
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101249FF8);
    v12 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)v12, OS_LOG_TYPE_ERROR))
    {
      objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
      sub_100DE7E60();
    }

    v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "void CRLWPCoreTextTypesetter::pChangeToSmallCapsForRange(const NSRange)"));
    v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v13, v14, 4080, 0, "Incorrect initial range");

    v10 = a2 + a3;
  }
  v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSCharacterSet lowercaseLetterCharacterSet](NSCharacterSet, "lowercaseLetterCharacterSet"));
  if (a2 < v10)
  {
    cf = 0;
    do
    {
      v16 = objc_msgSend(v15, "characterIsMember:", *(unsigned __int16 *)(*(_QWORD *)(a1 + 64) + 2 * a2));
      v17 = a2 + 1;
      do
      {
        v18 = (_BYTE *)v17;
        if (v17 >= v10)
          break;
        v19 = objc_msgSend(v15, "characterIsMember:", *(unsigned __int16 *)(*(_QWORD *)(a1 + 64) + 2 * v17));
        v17 = (unint64_t)(v18 + 1);
      }
      while (v16 == v19);
      if (a2 <= (unint64_t)v18)
        v20 = v18;
      else
        v20 = (_BYTE *)a2;
      if (a2 >= (unint64_t)v18)
        v21 = v18;
      else
        v21 = (_BYTE *)a2;
      v62 = v57;
      v22 = (uint64_t)v62;
      if (v7 + 1 == objc_msgSend(*(id *)(a1 + 112), "count"))
      {
        v22 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 112), "objectAtIndexedSubscript:", v7));

      }
      v61 = (void *)v22;
      v23 = v20 - v21;
      if (v7 == objc_msgSend(*(id *)(a1 + 112), "count") || v21 != objc_msgSend(v61, "range") || v23 != v33)
      {
        v24 = *(void **)(a1 + 104);
        if (!v24)
        {
          v25 = +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
          if (qword_10147E370 != -1)
            dispatch_once(&qword_10147E370, &stru_10124A018);
          v26 = off_1013D9070;
          if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = 67110146;
            v73 = v25;
            v74 = 2082;
            v75 = "void CRLWPCoreTextTypesetter::pChangeToSmallCapsForRange(const NSRange)";
            v76 = 2082;
            v77 = "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm";
            v78 = 1024;
            v79 = 4105;
            v80 = 2082;
            v81 = "_mutableStyleRunArray";
            _os_log_error_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d invalid nil value for '%{public}s'", buf, 0x2Cu);
          }
          if (qword_10147E370 != -1)
            dispatch_once(&qword_10147E370, &stru_10124A038);
          v27 = off_1013D9070;
          if (os_log_type_enabled((os_log_t)v27, OS_LOG_TYPE_ERROR))
          {
            v44 = (char *)objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
            *(_DWORD *)buf = 67109378;
            v73 = v25;
            v74 = 2114;
            v75 = v44;
            _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)v27, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: Assertion backtrace: >>%{public}@<<", buf, 0x12u);

          }
          v28 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "void CRLWPCoreTextTypesetter::pChangeToSmallCapsForRange(const NSRange)"));
          v29 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm"));
          +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v28, v29, 4105, 0, "invalid nil value for '%{public}s'", "_mutableStyleRunArray");

          v24 = *(void **)(a1 + 104);
        }
        v30 = objc_msgSend(v61, "copy");
        objc_msgSend(v24, "addObject:", v30);

        v7 = (char *)objc_msgSend(*(id *)(a1 + 112), "count") - 1;
        if (v61)
        {
          v31 = objc_msgSend(v61, "range");
          if (v21 < &v31[v32])
            objc_msgSend(v61, "setRunLength:", v21 - v31);
        }
      }
      v34 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 112), "objectAtIndexedSubscript:", v7));
      objc_msgSend(v34, "setRunLength:", v23);
      objc_msgSend(v34, "setCharIndex:", v21);
      v35 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v62, "characterStyle"));
      objc_msgSend(v34, "setCharacterStyle:", v35);

      v36 = (unint64_t)objc_msgSend(v34, "flags");
      v37 = 2;
      if (!v16)
        v37 = 0;
      objc_msgSend(v34, "setFlags:", v36 | v37);
      if ((v16 & 1) != 0)
      {
        sub_10026DBAC(a1, (uint64_t)v21, v23);
        if (cf
          || (Size = CTFontGetSize((CTFontRef)objc_msgSend(v62, "ctFont")),
              v42 = CTFontCopyFontDescriptor((CTFontRef)objc_msgSend(v62, "ctFont")),
              (v43 = v42) != 0)
          && (cf = CTFontCreateWithFontDescriptor(v42, Size * 0.800000012, 0), CFRelease(v43), cf))
        {
          v38 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v62, "attributes"));
          v39 = objc_msgSend(v38, "mutableCopy");

          objc_msgSend(v39, "setObject:forKeyedSubscript:", cf, kCTFontAttributeName);
          objc_msgSend(v34, "setAttributes:", v39);
          objc_msgSend(v34, "setCtFont:", cf);
          sub_1001B21AC((uint64_t)cf, v64);
          v63[2] = v64[2];
          v63[3] = v64[3];
          v63[4] = v64[4];
          v63[5] = v64[5];
          v63[0] = v64[0];
          v63[1] = v64[1];
          objc_msgSend(v34, "setFontHeightInfo:", v63);

        }
        else
        {
          cf = 0;
        }
      }
      else
      {
        v40 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v62, "attributes"));
        objc_msgSend(v34, "setAttributes:", v40);

        objc_msgSend(v34, "setCtFont:", objc_msgSend(v62, "ctFont"));
        if (v57)
        {
          objc_msgSend(v62, "fontHeightInfo");
        }
        else
        {
          v70 = 0u;
          v71 = 0u;
          v68 = 0u;
          v69 = 0u;
          v66 = 0u;
          v67 = 0u;
        }
        v65[2] = v68;
        v65[3] = v69;
        v65[4] = v70;
        v65[5] = v71;
        v65[0] = v66;
        v65[1] = v67;
        objc_msgSend(v34, "setFontHeightInfo:", v65);
      }

      ++v7;
      a2 = (unint64_t)v18;
    }
    while ((unint64_t)v18 < v10);
    if (cf)
      CFRelease(cf);
  }

}

void sub_10026DA90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19)
{
  void *v19;

  _Unwind_Resume(a1);
}

void sub_10026DBAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  UniChar *v13;
  uint64_t v14;
  UniChar v15;
  CFMutableStringRef MutableWithExternalCharactersNoCopy;
  const __CFLocale *v17;
  unsigned int v18;
  NSObject *v19;
  void *v20;
  void *v21;
  void *v22;
  char *v23;
  uint8_t buf[4];
  unsigned int v25;
  __int16 v26;
  const char *v27;
  __int16 v28;
  const char *v29;
  __int16 v30;
  int v31;

  if ((unint64_t)(a2 + a3) > *(_QWORD *)(a1 + 48))
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101249CB0);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E14080();
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101249CD0);
    v6 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)v6, OS_LOG_TYPE_ERROR))
    {
      objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
      sub_100DE7E60();
    }

    v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "void CRLWPCoreTextTypesetter::pChangeTextToUppercaseForRange(NSRange)"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v7, v8, 3914, 0, "Invalid local range");

  }
  v9 = (void *)objc_claimAutoreleasedReturnValue(+[CRLLocale currentLocale](CRLLocale, "currentLocale"));
  if (!v9)
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101249CF0);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E13FF4();
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101249D10);
    v10 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)v10, OS_LOG_TYPE_ERROR))
    {
      objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
      sub_100DE7E60();
    }

    v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "void CRLWPCoreTextTypesetter::pChangeTextToUppercaseForRange(NSRange)"));
    v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v11, v12, 3917, 0, "invalid nil value for '%{public}s'", "locale");

  }
  if (a3 >= 1)
  {
    v13 = (UniChar *)(*(_QWORD *)(a1 + 64) + 2 * a2);
    v14 = a3 + 1;
    do
    {
      v15 = *v13;
      MutableWithExternalCharactersNoCopy = CFStringCreateMutableWithExternalCharactersNoCopy(0, v13, 1, 1, kCFAllocatorNull);
      if (MutableWithExternalCharactersNoCopy)
      {
        v17 = (const __CFLocale *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "locale"));
        CFStringUppercase(MutableWithExternalCharactersNoCopy, v17);

        if (CFStringGetLength(MutableWithExternalCharactersNoCopy) != 1)
          *v13 = v15;
        CFRelease(MutableWithExternalCharactersNoCopy);
      }
      else
      {
        v18 = +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
        if (qword_10147E370 != -1)
          dispatch_once(&qword_10147E370, &stru_101249D30);
        v19 = off_1013D9070;
        if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 67109890;
          v25 = v18;
          v26 = 2082;
          v27 = "void CRLWPCoreTextTypesetter::pChangeTextToUppercaseForRange(NSRange)";
          v28 = 2082;
          v29 = "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm";
          v30 = 1024;
          v31 = 3928;
          _os_log_error_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Failed to create temporary string for _textBuffer", buf, 0x22u);
        }
        if (qword_10147E370 != -1)
          dispatch_once(&qword_10147E370, &stru_101249D50);
        v20 = off_1013D9070;
        if (os_log_type_enabled((os_log_t)v20, OS_LOG_TYPE_ERROR))
        {
          v23 = (char *)objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
          *(_DWORD *)buf = 67109378;
          v25 = v18;
          v26 = 2114;
          v27 = v23;
          _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)v20, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: Assertion backtrace: >>%{public}@<<", buf, 0x12u);

        }
        v21 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "void CRLWPCoreTextTypesetter::pChangeTextToUppercaseForRange(NSRange)"));
        v22 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm"));
        +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v21, v22, 3928, 0, "Failed to create temporary string for _textBuffer");

      }
      ++v13;
      --v14;
    }
    while (v14 > 1);
  }

}

void sub_10026E14C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10026E1D8(uint64_t a1, uint64_t a2, CFIndex numChars)
{
  void *v6;
  void *v7;
  void *v8;
  __CFString *MutableWithExternalCharactersNoCopy;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  const __CFLocale *v14;
  void *v15;
  void *v16;

  if ((unint64_t)(a2 + numChars) > *(_QWORD *)(a1 + 48))
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101249E98);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E1420C();
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101249EB8);
    v6 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)v6, OS_LOG_TYPE_ERROR))
    {
      objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
      sub_100DE7E60();
    }

    v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "void CRLWPCoreTextTypesetter::pChangeTextToStartCaseForRange(NSRange)"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v7, v8, 4055, 0, "Invalid local range");

  }
  MutableWithExternalCharactersNoCopy = CFStringCreateMutableWithExternalCharactersNoCopy(0, (UniChar *)(*(_QWORD *)(a1 + 64) + 2 * a2), numChars, numChars, kCFAllocatorNull);
  if (MutableWithExternalCharactersNoCopy)
  {
    v10 = (void *)objc_claimAutoreleasedReturnValue(+[CRLLocale currentLocale](CRLLocale, "currentLocale"));
    if (!v10)
    {
      +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101249F18);
      if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
        sub_100E14180();
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101249F38);
      v11 = off_1013D9070;
      if (os_log_type_enabled((os_log_t)v11, OS_LOG_TYPE_ERROR))
      {
        objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
        sub_100DE7E60();
      }

      v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "void CRLWPCoreTextTypesetter::pChangeTextToStartCaseForRange(NSRange)"));
      v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm"));
      +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v12, v13, 4064, 0, "invalid nil value for '%{public}s'", "locale");

    }
    v14 = (const __CFLocale *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "locale"));
    CFStringCapitalize(MutableWithExternalCharactersNoCopy, v14);

    CFRelease(MutableWithExternalCharactersNoCopy);
  }
  else
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101249ED8);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E14100();
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101249EF8);
    v15 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)v15, OS_LOG_TYPE_ERROR))
    {
      objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
      sub_100DE7E60();
    }

    v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "void CRLWPCoreTextTypesetter::pChangeTextToStartCaseForRange(NSRange)"));
    v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v10, v16, 4060, 0, "Failed to create temporary string for _textBuffer");

  }
}

void sub_10026E634(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10026E6A8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10026E6D8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10026E708(uint64_t a1, uint64_t a2, CFIndex a3)
{
  sub_10026E710(*(_QWORD *)(a1 + 32), a2, a3);
}

void sub_10026E710(uint64_t a1, uint64_t a2, CFIndex a3)
{
  void *v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  CFMutableStringRef MutableWithExternalCharactersNoCopy;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  _QWORD v20[10];

  if ((unint64_t)(a2 + a3) > *(_QWORD *)(a1 + 48))
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101249D70);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E14430();
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101249D90);
    v6 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)v6, OS_LOG_TYPE_ERROR))
    {
      objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
      sub_100DE7E60();
    }

    v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "void CRLWPCoreTextTypesetter::pChangeTextToTitleCaseForRange(NSRange)"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v7, v8, 3957, 0, "Invalid localRange parameter");

  }
  v9 = sub_10027B54C(a1);
  v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
  if (v10)
  {
    MutableWithExternalCharactersNoCopy = CFStringCreateMutableWithExternalCharactersNoCopy(0, (UniChar *)(*(_QWORD *)(a1 + 64) + 2 * a2), a3, a3, kCFAllocatorNull);
    if (MutableWithExternalCharactersNoCopy)
    {
      v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSCharacterSet alphanumericCharacterSet](NSCharacterSet, "alphanumericCharacterSet"));
      v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSCharacterSet crlwp_sentenceDelimiterCharacterSet](NSCharacterSet, "crlwp_sentenceDelimiterCharacterSet"));
      v14 = (void *)objc_claimAutoreleasedReturnValue(+[CRLLocale currentLocale](CRLLocale, "currentLocale"));
      if (!v14)
      {
        +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
        if (qword_10147E370 != -1)
          dispatch_once(&qword_10147E370, &stru_101249E30);
        if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
          sub_100E143A4();
        if (qword_10147E370 != -1)
          dispatch_once(&qword_10147E370, &stru_101249E50);
        v15 = off_1013D9070;
        if (os_log_type_enabled((os_log_t)v15, OS_LOG_TYPE_ERROR))
        {
          objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
          sub_100DE7E60();
        }

        v19 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "void CRLWPCoreTextTypesetter::pChangeTextToTitleCaseForRange(NSRange)"));
        v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm"));
        +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v19, v16, 3970, 0, "invalid nil value for '%{public}s'", "locale");

      }
      objc_msgSend(v10, "setString:", MutableWithExternalCharactersNoCopy);
      v20[0] = _NSConcreteStackBlock;
      v20[1] = 3221225472;
      v20[2] = sub_10027B7A8;
      v20[3] = &unk_101249E78;
      v20[8] = a2;
      v20[9] = a3;
      v20[4] = v13;
      v20[5] = v12;
      v20[6] = v14;
      v20[7] = a1;
      objc_msgSend(v10, "enumerateTagsInRange:scheme:options:usingBlock:", 0, a3, NSLinguisticTagSchemeNameTypeOrLexicalClass, 22, v20);
      CFRelease(MutableWithExternalCharactersNoCopy);

    }
    else
    {
      +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101249DF0);
      if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
        sub_100E14318();
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101249E10);
      v18 = off_1013D9070;
      if (os_log_type_enabled((os_log_t)v18, OS_LOG_TYPE_ERROR))
      {
        objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
        sub_100DE7E60();
      }

      v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "void CRLWPCoreTextTypesetter::pChangeTextToTitleCaseForRange(NSRange)"));
      v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm"));
      +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v12, v13, 3965, 0, "invalid nil value for '%{public}s'", "text");
    }
  }
  else
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101249DB0);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E1428C();
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101249DD0);
    v17 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)v17, OS_LOG_TYPE_ERROR))
    {
      objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
      sub_100DE7E60();
    }

    v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "void CRLWPCoreTextTypesetter::pChangeTextToTitleCaseForRange(NSRange)"));
    v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v12, v13, 3959, 0, "invalid nil value for '%{public}s'", "tagger");
  }

}

void sub_10026ED44(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_10026EE20(uint64_t a1, void *a2)
{
  id v3;
  unint64_t v4;
  void *v5;
  uint64_t v6;
  BOOL v7;
  __int128 v8;

  v3 = a2;
  v8 = xmmword_100EEE418;
  if (*(_QWORD *)(a1 + 48))
  {
    v4 = 0;
    do
    {
      v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "hyperlinkFieldAtCharIndex:effectiveRange:", v4, &v8));
      v6 = v8;
      if (v5)
        v7 = (_QWORD)v8 == 0x7FFFFFFFFFFFFFFFLL;
      else
        v7 = 1;
      if (!v7)
      {
        objc_msgSend(v3, "addAttribute:value:range:", CFSTR("CRLWPUnderline"), &off_1012CC5E0);
        v6 = v8;
      }
      if (v4 + 1 > *((_QWORD *)&v8 + 1) + v6)
        ++v4;
      else
        v4 = *((_QWORD *)&v8 + 1) + v6;

    }
    while (v4 < *(_QWORD *)(a1 + 48));
  }

}

void sub_10026EF00(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

uint64_t sub_10026EF1C(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  BOOL v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  id v17;
  unint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  _BOOL4 v33;
  double v34;
  double v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  id v40;
  unint64_t i;
  const __CTTypesetter *v42;
  double v43;
  uint64_t v44;
  CFIndex v45;
  char *v46;
  unint64_t v47;
  unsigned int v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  uint64_t v53;
  void *v54;
  id v55;
  void *v56;
  const __CTTypesetter *v57;
  double v58;
  char *v59;
  id v60;
  void *v61;
  void *v62;
  float v63;
  float v64;
  char *v65;
  const __CTTypesetter *v66;
  double v67;
  const __CTTypesetter *v68;
  double v69;
  char *v70;
  id v71;
  void *v72;
  void *v73;
  float v74;
  float v75;
  const __CTTypesetter *v76;
  double v77;
  uint64_t v78;
  unsigned int v79;
  void *v80;
  void *v81;
  void *v82;
  void *v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  id v88;
  void *v89;
  BOOL v90;
  uint64_t v91;
  int v92;
  unsigned __int8 v93;
  char v94;
  char *v95;
  unint64_t v96;
  unsigned __int8 v97;
  int v98;
  unsigned int v99;
  int v100;
  uint64_t v101;
  int v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  void *v106;
  id v107;
  void *v108;
  char *v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  unsigned __int8 v113;
  char v114;
  unsigned __int8 v115;
  char *v116;
  char v117;
  char v118;
  int v119;
  unint64_t v120;
  unint64_t v121;
  char *v122;
  id v123;
  id v124;
  double v125;
  unint64_t v126;
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  id v133;
  void *v134;
  id v135;
  char *v137;
  char *v138;
  char *v139;
  char *v140;
  char *v141;
  unsigned int v142;
  void *v143;
  void *v144;
  void *v145;
  void *v146;
  char *v147;
  double v148;
  double v149;
  int v150;
  void *v151;
  char *v152;
  char *v153;
  unsigned int v154;
  void *v155;
  void *v156;
  void *v157;
  void *v158;
  char *v159;
  unint64_t v160;
  id v161;
  uint64_t v162;
  uint64_t v163;
  int v164;
  BOOL v165;
  _BOOL4 v167;
  double v168;
  double v169;
  CGFloat v170;
  double v171;
  CGFloat v172;
  double v173;
  CGFloat v174;
  CGFloat v175;
  CGFloat v176;
  CGFloat v177;
  CGFloat v178;
  CGFloat v179;
  CGFloat v180;
  CGFloat v181;
  double v182;
  double v183;
  id v184;
  unint64_t v185;
  unsigned int v186;
  id v187;
  uint64_t v188;
  unsigned int v189;
  uint64_t v190;
  unsigned __int16 v191;
  double v192;
  Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion v193;
  double v194;
  double v195;
  double v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  double v205;
  double v206;
  double v207;
  double v208;
  double v209;
  double v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  __int128 *v219;
  uint64_t v220;
  uint64_t v221;
  char *v222;
  uint64_t v223;
  void *v224;
  void *v225;
  void *v226;
  void *v227;
  void *v228;
  uint64_t v229;
  void *v230;
  void *v231;
  void *v232;
  void *v233;
  void *v234;
  void *v235;
  void *v236;
  void *v237;
  void *v238;
  void *v239;
  uint64_t v240;
  id v241;
  void *v242;
  uint64_t v243;
  __int128 *v244;
  unsigned int v245;
  void *v246;
  void *v247;
  void *v248;
  void *v249;
  NSRange *v250;
  NSString *v251;
  void *v252;
  NSString *v253;
  void *v254;
  NSString *v255;
  void *v256;
  __int128 *v257;
  void *v258;
  void *v259;
  void *v260;
  void *v261;
  void *v262;
  BOOL v263;
  __int128 *v264;
  uint64_t v265;
  uint64_t v266;
  void *v268;
  NSRange *v269;
  NSString *v270;
  NSString *v271;
  NSString *v272;
  id v273;
  id v274;
  void *v275;
  void *v276;
  void *v277;
  unint64_t v278;
  id v279;
  double width;
  id widtha;
  double v282;
  void *v283;
  id v284;
  double v285;
  double v286;
  char v287;
  double v288;
  double v289;
  char *v290;
  _BYTE buf[18];
  __int16 v292;
  const char *v293;
  __int16 v294;
  int v295;
  __int16 v296;
  id v297;
  __int16 v298;
  id v299;
  __int16 v300;
  id v301;
  __int16 v302;
  id v303;
  __int16 v304;
  id v305;
  char *v306[4];
  __int128 v307[2];
  NSRange v308;
  NSRange v309;
  Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion v310;
  Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion v311;
  CGRect v312;
  CGRect v313;
  CGRect v314;
  CGRect v315;

  v282 = *(double *)a2;
  if (!*(_BYTE *)(a1 + 31)
    || ((v4 = *(_QWORD *)(a1 + 32), **(_QWORD **)&v282 >= v4)
      ? (v5 = **(_QWORD **)&v282 > *(_QWORD *)(a1 + 40) + v4)
      : (v5 = 1),
        v5))
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_1012493D0);
    v6 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)v6, OS_LOG_TYPE_ERROR))
      sub_100E147B0();

    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_1012493F0);
    v7 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)v7, OS_LOG_TYPE_ERROR))
    {
      v8 = (void *)objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
      sub_100DFC2A8(v8);
    }

    v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "CRLWPCharIndex CRLWPCoreTextTypesetter::layOutLine(CRLWPTypesetterParamBlock *const)"));
    v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v9, v10, 1039, 0, "layoutLine called without paragraph being set up correctly");

  }
  if ((*(_BYTE *)(a2 + 66) & 1) != 0
    && *(_QWORD *)(*(_QWORD *)(a1 + 232) + 80) != *(_QWORD *)(*(_QWORD *)(a1 + 232) + 88))
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101249410);
    v11 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)v11, OS_LOG_TYPE_ERROR))
      sub_100E14730();

    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101249430);
    v12 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)v12, OS_LOG_TYPE_ERROR))
    {
      v13 = (void *)objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
      sub_100DFC2A8(v13);
    }

    v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "CRLWPCharIndex CRLWPCoreTextTypesetter::layOutLine(CRLWPTypesetterParamBlock *const)"));
    v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v14, v15, 1040, 0, "Can't skip glyph vectors with ruby");

  }
  v16 = *(_QWORD *)(a2 + 224);
  v17 = objc_msgSend(*(id *)(a1 + 56), "charIndexMappedFromStorage:", **(_QWORD **)&v282);
  v18 = (unint64_t)v17;
  if (v17 == (id)0x7FFFFFFFFFFFFFFFLL || (unint64_t)v17 > *(_QWORD *)(a1 + 48))
  {
    if (**(_QWORD **)&v282 != *(_QWORD *)(a1 + 40) + *(_QWORD *)(a1 + 32))
    {
      +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101249450);
      v19 = off_1013D9070;
      if (os_log_type_enabled((os_log_t)v19, OS_LOG_TYPE_ERROR))
        sub_100E146B0();

      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101249470);
      v20 = off_1013D9070;
      if (os_log_type_enabled((os_log_t)v20, OS_LOG_TYPE_ERROR))
      {
        v21 = (void *)objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
        sub_100DFC2A8(v21);
      }

      v22 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "CRLWPCharIndex CRLWPCoreTextTypesetter::layOutLine(CRLWPTypesetterParamBlock *const)"));
      v23 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm"));
      +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v22, v23, 1049, 0, "bad start char index");

    }
    v18 = *(_QWORD *)(a1 + 48);
  }
  v290 = (char *)v18;
  *(_QWORD *)v16 = **(_QWORD **)&v282;
  *(_QWORD *)(v16 + 16) = *(_QWORD *)(a1 + 32);
  v24 = *(_OWORD *)(*(_QWORD *)&v282 + 480);
  *(_OWORD *)(v16 + 40) = *(_OWORD *)(*(_QWORD *)&v282 + 464);
  *(_OWORD *)(v16 + 56) = v24;
  if (*(_BYTE *)(a1 + 27))
    *(_QWORD *)(v16 + 24) |= 0x2000uLL;
  if (*(_BYTE *)(a1 + 72))
    *(_QWORD *)(v16 + 24) |= 0x20000uLL;
  sub_10013DFC0(v16, *(void **)(a1 + 56));
  v25 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 120) = v25;
  v26 = *(_OWORD *)(a2 + 104);
  v27 = *(_OWORD *)(a2 + 120);
  v28 = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 184) = v28;
  *(_OWORD *)(a1 + 168) = v27;
  *(_OWORD *)(a1 + 152) = v26;
  *(_QWORD *)&v27 = *(_QWORD *)(*(_QWORD *)&v282 + 216);
  v288 = *(double *)(a2 + 24) - *(double *)(*(_QWORD *)&v282 + 224);
  v289 = *(double *)&v27;
  sub_100271B3C(v29, (double *)a2, &v289, &v288);
  v287 = 1;
  if (!*(_BYTE *)(*(_QWORD *)&v282 + 456))
    goto LABEL_50;
  v31 = sub_10005DD38(*(uint64_t *)&v282);
  v32 = (void *)objc_claimAutoreleasedReturnValue(v31);
  if (!v32 || !*(_BYTE *)(*(_QWORD *)&v282 + 348))
  {

LABEL_50:
    if (*(_BYTE *)(a2 + 208))
      *(_QWORD *)(v16 + 24) |= 0x10000000uLL;
    goto LABEL_52;
  }
  v33 = *(_BYTE *)(a2 + 208) == 0;

  if (!v33)
    goto LABEL_50;
  sub_100271D6C(a1, a2, v18, &v287, &v289, &v288);
LABEL_52:
  v34 = v288;
  v35 = v289;
  if (v289 >= v288)
    v34 = v289;
  v288 = v34;
  width = fmin(v34 - v289, 32000.0);
  v36 = *(char **)(a1 + 48);
  if ((*(_BYTE *)(a2 + 40) & 4) != 0)
    goto LABEL_61;
  v37 = *(_QWORD *)(*(_QWORD *)&v282 + 400);
  if (v37 == 1)
    goto LABEL_60;
  if (v37 == 2)
  {
    v35 = v289 + width * 0.5;
    goto LABEL_61;
  }
  if (v37 == 3 && *(_BYTE *)(*(_QWORD *)&v282 + 349))
LABEL_60:
    v35 = v34;
LABEL_61:
  if (!v287 || width <= 1.0 && !*(_BYTE *)(a2 + 169) || (unint64_t)(v36 - 1) < v18)
  {
    v290 = (char *)v18;
    sub_100272E88(v35, a1, *(uint64_t *)&v282, v16, 0);
    v36 = (char *)v18;
    goto LABEL_326;
  }
  if (v18 >= (unint64_t)&v36[-(*(_WORD *)(*(_QWORD *)(a1 + 232) + 72) != 0)])
  {
    v290 = *(char **)(a1 + 48);
    *(_QWORD *)(v16 + 8) = (char *)objc_msgSend(*(id *)(a1 + 56), "charIndexMappedToStorage:", v36, 1.0, width)
                         - *(_QWORD *)v16;
    sub_100272E88(v35, a1, *(uint64_t *)&v282, v16, *(unsigned __int16 *)(*(_QWORD *)(a1 + 232) + 72));
    goto LABEL_326;
  }
  v38 = objc_opt_class(CRLWPRubyField, v30);
  v39 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "smartFieldAtCharIndex:attributeKind:effectiveRange:", v18, 7, v307));
  v40 = sub_100221D0C(v38, v39);
  v277 = (void *)objc_claimAutoreleasedReturnValue(v40);

  if (v277)
    sub_1004B15FC(*(_QWORD *)(a1 + 232), (uint64_t)v277);
  sub_100149320(v16);
  for (i = 0; ; i = v278 + 1)
  {
    v278 = i;
    if (i)
      sub_10014A1DC(v16);
    if (!*(_BYTE *)(a1 + 72))
    {
LABEL_84:
      if (!*(_BYTE *)(a1 + 28) || !*(_BYTE *)(a1 + 88))
      {
        v68 = (const __CTTypesetter *)sub_10026AFCC(a1);
        v69 = v289;
        v70 = (char *)(CTTypesetterSuggestLineBreakWithOffset(v68, v18, width, v289) + v18);
        v290 = v70;
        if (v70)
        {
          v71 = sub_1004B16D0(*(_QWORD *)(a1 + 232));
          v72 = (void *)objc_claimAutoreleasedReturnValue(v71);
          v73 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v72, "attribute:atIndex:effectiveRange:", kCTKernAttributeName, v70 - 1, 0));

          objc_msgSend(v73, "floatValue");
          v75 = v74;
          if (v74 > 0.0 || v74 < 0.0 && *(_BYTE *)(a2 + 171))
          {
            v76 = (const __CTTypesetter *)sub_10026AFCC(a1);
            v77 = v75;
            v70 = (char *)(CTTypesetterSuggestLineBreakWithOffset(v76, v18, width + v77, v69) + v18);
            v290 = v70;
            *(double *)(a1 + 248) = v77;
          }

          if ((unint64_t)v70 > *(_QWORD *)(a1 + 48))
          {
            v79 = +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
            if (qword_10147E370 != -1)
              dispatch_once(&qword_10147E370, &stru_101249490);
            v80 = off_1013D9070;
            if (os_log_type_enabled((os_log_t)v80, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)buf = 67109890;
              *(_DWORD *)&buf[4] = v79;
              *(_WORD *)&buf[8] = 2082;
              *(_QWORD *)&buf[10] = "CRLWPCharIndex CRLWPCoreTextTypesetter::layOutLine(CRLWPTypesetterParamBlock *const)";
              v292 = 2082;
              v293 = "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm";
              v294 = 1024;
              v295 = 1321;
              _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)v80, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Bad endCharIndex", buf, 0x22u);
            }

            if (qword_10147E370 != -1)
              dispatch_once(&qword_10147E370, &stru_1012494B0);
            v81 = off_1013D9070;
            if (os_log_type_enabled((os_log_t)v81, OS_LOG_TYPE_ERROR))
            {
              v124 = (id)objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
              *(_DWORD *)buf = 67109378;
              *(_DWORD *)&buf[4] = v79;
              *(_WORD *)&buf[8] = 2114;
              *(_QWORD *)&buf[10] = v124;
              _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)v81, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: Assertion backtrace: >>%{public}@<<", buf, 0x12u);

            }
            v82 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "CRLWPCharIndex CRLWPCoreTextTypesetter::layOutLine(CRLWPTypesetterParamBlock *const)"));
            v83 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm"));
            +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v82, v83, 1321, 0, "Bad endCharIndex");

          }
          if (!v70
            || *(_BYTE *)(a2 + 169)
            || (unint64_t)v70 >= *(_QWORD *)(a1 + 48)
            || (v18 <= (unint64_t)v70 ? (v84 = (unint64_t)v70) : (v84 = v18),
                v18 >= (unint64_t)v70 ? (v85 = (uint64_t)v70) : (v85 = v18),
                (sub_100273670((CFIndex *)a1, v85, v84 - v85) & 1) != 0))
          {
            if ((unint64_t)v70 > v18)
            {
              *(_OWORD *)buf = xmmword_100EEE418;
              v86 = objc_opt_class(CRLWPRubyField, v78);
              v87 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "smartFieldAtCharIndex:attributeKind:effectiveRange:", v70, 7, buf));
              v88 = sub_100221D0C(v86, v87);
              v89 = (void *)objc_claimAutoreleasedReturnValue(v88);

              if (v89 && *(_QWORD *)&buf[8] + *(_QWORD *)buf > (unint64_t)v70)
              {
                v90 = sub_1004B1530(*(_QWORD *)(a1 + 232), (uint64_t)v89);
                v91 = *(_QWORD *)buf;
                if (!v90)
                {
                  if (*(_QWORD *)buf <= v18 && *(_BYTE *)(a2 + 169))
                  {
                    sub_1004B1594(*(_QWORD *)(a1 + 232), (uint64_t)v89);
                    v91 = *(_QWORD *)buf;
                  }
                  else
                  {
                    if (*(_QWORD *)buf <= v18)
                      v70 = (char *)v18;
                    else
                      v70 = *(char **)buf;
                    v290 = v70;
                  }
                }
                if (v70 == (char *)(v91 + *(_QWORD *)&buf[8] - 1))
                  v290 = v70 + 1;
              }

            }
          }
          else
          {
            v290 = (char *)v18;
            sub_10014882C(v16, 0);
          }
        }
LABEL_245:
        v46 = v290;
        if ((unint64_t)v290 > v18)
        {
          v137 = v290 - 1;
          if (*(_WORD *)(*(_QWORD *)(a1 + 64) + 2 * (_QWORD)(v290 - 1)) == 173)
          {
            *(double *)buf = width;
            if (sub_100273948(a1, v18, (CFIndex)&v290[~v18], 45, (double *)buf, v16))
            {
              sub_10014880C(v16, 1);
            }
            else
            {
              v138 = (char *)objc_msgSend(*(id *)(a1 + 56), "wordAtCharIndex:includePreviousWord:", v46, 0);
              if (v18 <= (unint64_t)v138)
                v139 = v138;
              else
                v139 = (char *)v18;
              if (v137 <= v139)
              {
LABEL_258:
                v290 = v137;
                v46 = v137;
              }
              else
              {
                v140 = v46 - 2;
                while (1)
                {
                  if (*(_WORD *)(*(_QWORD *)(a1 + 64) + 2 * (_QWORD)v140) == 173)
                  {
                    *(double *)buf = width;
                    if (sub_100273948(a1, v18, (CFIndex)&v140[-v18], 45, (double *)buf, v16))
                      break;
                  }
                  v141 = v140 - 1;
                  v5 = v140-- > v139;
                  if (!v5)
                  {
                    v137 = v141 + 1;
                    goto LABEL_258;
                  }
                }
                v46 = v140 + 1;
                v290 = v140 + 1;
                sub_10014880C(v16, 1);
              }
            }
          }
        }
        goto LABEL_259;
      }
      v57 = (const __CTTypesetter *)sub_10026AFCC(a1);
      v58 = v289;
      v59 = (char *)(CTTypesetterSuggestClusterBreakWithOffset(v57, v18, width, v289) + v18);
      v290 = v59;
      if (v59)
      {
        v60 = sub_1004B16D0(*(_QWORD *)(a1 + 232));
        v61 = (void *)objc_claimAutoreleasedReturnValue(v60);
        v62 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v61, "attribute:atIndex:effectiveRange:", kCTKernAttributeName, v59 - 1, 0));

        objc_msgSend(v62, "floatValue");
        v64 = v63;
        v65 = v59;
        if (v63 > 0.0)
        {
          v66 = (const __CTTypesetter *)sub_10026AFCC(a1);
          v67 = v64;
          v65 = (char *)(CTTypesetterSuggestClusterBreakWithOffset(v66, v18, width + v67, v58) + v18);
          *(double *)(a1 + 248) = v67;
        }

      }
      else
      {
        v65 = 0;
      }
      v103 = (char *)objc_msgSend(*(id *)(a1 + 56), "length");
      v105 = objc_opt_class(CRLWPRubyField, v104);
      v106 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "smartFieldAtCharIndex:attributeKind:effectiveRange:", v59, 7, v307));
      v107 = sub_100221D0C(v105, v106);
      v108 = (void *)objc_claimAutoreleasedReturnValue(v107);

      v109 = v290;
      if (v108 && *(_QWORD *)&v307[0] <= v18)
      {
        if (sub_1004B1650(*(_QWORD *)(a1 + 232), (unint64_t)v290))
        {
          v290 = ++v109;
        }
        else if (*(_BYTE *)(a2 + 169))
        {
          sub_1004B1594(*(_QWORD *)(a1 + 232), (uint64_t)v108);
        }
        else if (*(_BYTE *)(a2 + 170))
        {
          v290 = (char *)v18;
          v109 = (char *)v18;
        }
      }
      if (v109 >= v103 || (unint64_t)v109 <= sub_1002730CC(a1, v18))
      {
LABEL_236:
        v131 = (uint64_t)v108;
LABEL_237:
        if (v131)
        {
LABEL_238:
          v277 = (void *)v131;
          if (*((_QWORD *)&v307[0] + 1) + *(_QWORD *)&v307[0] > (unint64_t)v290
            && v290 == (char *)(*((_QWORD *)&v307[0] + 1) + *(_QWORD *)&v307[0] - 1))
          {
            ++v290;
          }
        }
        else
        {
LABEL_244:
          v277 = 0;
        }
        goto LABEL_245;
      }
      if ((sub_10027315C(a1, &v290, v307) & 1) != 0)
      {
        v110 = *(_QWORD *)(a1 + 64);
        v111 = v290;
        v112 = *(unsigned __int16 *)(v110 + 2 * (_QWORD)sub_100273594(a1, v290));
        v113 = sub_1001AE2A0(v112);
        if ((_DWORD)v112 == 8232)
          v114 = 1;
        else
          v114 = v113;
        if ((v114 & 1) == 0)
        {
          if (v111 < v103)
          {
            while (sub_1001AE368(*(unsigned __int16 *)(*(_QWORD *)(a1 + 64) + 2 * (_QWORD)v111)))
            {
              v115 = sub_1001AE3C0(*(unsigned __int16 *)(*(_QWORD *)(a1 + 64) + 2 * (_QWORD)v111));
              v116 = v111 + 1;
              if (v111 + 1 >= v103)
                v117 = 1;
              else
                v117 = v115;
              if ((v117 & 1) == 0
                && (sub_1001AE3C0(*(unsigned __int16 *)(*(_QWORD *)(a1 + 64) + 2 * (_QWORD)v111 + 2)) & 1) == 0)
              {
                v290 = v111;
                v188 = *(unsigned __int16 *)(*(_QWORD *)(a1 + 64) + 2 * (_QWORD)v111 + 2);
                v189 = sub_1001AE2A0(v188) ^ 1;
                if ((_DWORD)v188 == 8232)
                  LOBYTE(v189) = 0;
                if ((v189 & 1) == 0)
                {
                  v118 = 0;
                  v119 = 0;
                  ++v111;
                  goto LABEL_175;
                }
                while (1)
                {
LABEL_228:
                  while (1)
                  {
                    v129 = sub_100273594(a1, v290);
                    if ((unint64_t)v129 <= v18)
                      break;
                    v290 = v129;
                    v131 = (uint64_t)v108;
                    if (sub_10027315C(a1, &v290, 0))
                      goto LABEL_237;
                  }
                  v290 = v65;
                  if (!*(_BYTE *)(a2 + 169))
                    goto LABEL_236;
                  v132 = objc_opt_class(CRLWPRubyField, v130);
                  v133 = objc_msgSend(*(id *)(a1 + 56), "smartFieldAtCharIndex:attributeKind:effectiveRange:", sub_100273594(a1, v65), 7, v307);
                  v134 = (void *)objc_claimAutoreleasedReturnValue(v133);
                  v135 = sub_100221D0C(v132, v134);
                  v131 = objc_claimAutoreleasedReturnValue(v135);

                  if (!v131)
                    goto LABEL_244;
                  if (sub_1004B1530(*(_QWORD *)(a1 + 232), v131)
                    || (sub_1004B1594(*(_QWORD *)(a1 + 232), v131) & 1) == 0)
                  {
                    goto LABEL_238;
                  }
                  v108 = (void *)v131;
                }
              }
              ++v111;
              if (v103 == v116)
              {
                v111 = v103;
                break;
              }
            }
          }
          v118 = 0;
          v119 = 0;
LABEL_175:
          v290 = v111;
          goto LABEL_221;
        }
        goto LABEL_191;
      }
      v111 = v290;
      v120 = sub_1002730CC(a1, (unint64_t)v290);
      v121 = v120;
      *(_QWORD *)buf = v120;
      if (v120 >= *(_QWORD *)&v307[0]
        && v120 - *(_QWORD *)&v307[0] < *((_QWORD *)&v307[0] + 1)
        && *(_WORD *)(*(_QWORD *)(a1 + 64) + 2 * v120) == 8209)
      {
        v121 = v120 + 1;
        *(_QWORD *)buf = v120 + 1;
      }
      if (v121 < (unint64_t)v103)
      {
        if (!sub_10027315C(a1, (char **)buf, 0))
          goto LABEL_185;
        v121 = *(_QWORD *)buf;
      }
      if ((char *)v121 == v103
        && sub_1001AE368(*(unsigned __int16 *)(*(_QWORD *)(a1 + 64) + 2 * (_QWORD)v111)))
      {
LABEL_185:
        v122 = v111;
        if (v111 < v103)
        {
          v122 = v111;
          while (sub_1001AE368(*(unsigned __int16 *)(*(_QWORD *)(a1 + 64) + 2 * (_QWORD)v122)))
          {
            if (v103 == ++v122)
              goto LABEL_202;
          }
        }
        v306[0] = v122;
        if (v122 != v103)
        {
          if (!sub_10027315C(a1, v306, 0))
          {
            v119 = 1;
            goto LABEL_203;
          }
          v103 = v306[0];
        }
LABEL_202:
        v119 = 0;
        v290 = v103;
        v111 = v103;
LABEL_203:
        v118 = 0;
        goto LABEL_221;
      }
      if (v278)
      {
LABEL_191:
        v118 = 0;
        v119 = 0;
LABEL_221:
        if ((v118 & 1) != 0 || (v119 & 1) != 0 || (v128 = sub_100273594(a1, v111)) == 0 || v128 >= v111)
        {
          if (v119)
            goto LABEL_228;
        }
        else if ((sub_10027315C(a1, &v290, 0) & 1) == 0)
        {
          goto LABEL_228;
        }
        goto LABEL_236;
      }
      v125 = 0.0;
      if (v18 < (unint64_t)v111)
      {
        v126 = v18;
        do
          v125 = v125 + sub_1001AE99C(*(unsigned __int16 *)(*(_QWORD *)(a1 + 64) + 2 * v126++));
        while (v125 < 1.0 && v126 < (unint64_t)v111);
      }
      if (v121 < (unint64_t)v103)
      {
        while (sub_1001AE368(*(unsigned __int16 *)(*(_QWORD *)(a1 + 64) + 2 * v121)))
        {
          if (v103 == (char *)++v121)
          {
            v121 = (unint64_t)v103;
            break;
          }
        }
      }
      v306[0] = (char *)v121;
      if (v125 < 1.0)
      {
LABEL_216:
        v118 = 0;
        v119 = 1;
        goto LABEL_221;
      }
      if ((char *)v121 != v103)
      {
        if (!sub_10027315C(a1, v306, 0))
          goto LABEL_216;
        v103 = v306[0];
      }
      v290 = v103;
      v118 = 1;
      sub_100149304(v16, 1);
      v119 = 0;
      v111 = v103;
      goto LABEL_221;
    }
    v42 = (const __CTTypesetter *)sub_10026AFCC(a1);
    v43 = v289;
    v45 = CTTypesetterSuggestClusterBreakWithOffset(v42, v18, width, v289);
    v46 = (char *)(v45 + v18);
    v290 = (char *)(v45 + v18);
    v47 = *(_QWORD *)(a1 + 48);
    if (v45 + v18 > v47)
    {
      v48 = +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_1012494D0);
      v49 = off_1013D9070;
      if (os_log_type_enabled((os_log_t)v49, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 67109890;
        *(_DWORD *)&buf[4] = v48;
        *(_WORD *)&buf[8] = 2082;
        *(_QWORD *)&buf[10] = "CRLWPCharIndex CRLWPCoreTextTypesetter::layOutLine(CRLWPTypesetterParamBlock *const)";
        v292 = 2082;
        v293 = "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm";
        v294 = 1024;
        v295 = 1388;
        _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)v49, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Bad endCharIndex", buf, 0x22u);
      }

      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_1012494F0);
      v50 = off_1013D9070;
      if (os_log_type_enabled((os_log_t)v50, OS_LOG_TYPE_ERROR))
      {
        v123 = (id)objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
        *(_DWORD *)buf = 67109378;
        *(_DWORD *)&buf[4] = v48;
        *(_WORD *)&buf[8] = 2114;
        *(_QWORD *)&buf[10] = v123;
        _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)v50, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: Assertion backtrace: >>%{public}@<<", buf, 0x12u);

      }
      v51 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "CRLWPCharIndex CRLWPCoreTextTypesetter::layOutLine(CRLWPTypesetterParamBlock *const)"));
      v52 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm"));
      +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v51, v52, 1388, 0, "Bad endCharIndex");

      v47 = *(_QWORD *)(a1 + 48);
    }
    if ((unint64_t)v46 >= v47)
      goto LABEL_137;
    v53 = objc_opt_class(CRLWPRubyField, v44);
    v54 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "smartFieldAtCharIndex:attributeKind:effectiveRange:", v46, 7, 0));
    v55 = sub_100221D0C(v53, v54);
    v56 = (void *)objc_claimAutoreleasedReturnValue(v55);

    if (v56)
      goto LABEL_84;
    if (v46)
    {
      v92 = *(unsigned __int16 *)(*(_QWORD *)(a1 + 64) + 2 * (_QWORD)v46 - 2);
      v93 = sub_1001AE2A0(*(unsigned __int16 *)(*(_QWORD *)(a1 + 64) + 2 * (_QWORD)v46 - 2));
      v94 = v92 == 8232 ? 1 : v93;
      if ((v94 & 1) != 0)
        goto LABEL_138;
    }
    if (sub_1001AE3C0(*(unsigned __int16 *)(*(_QWORD *)(a1 + 64) + 2 * (_QWORD)v46)))
    {
      v95 = (char *)(v18 + 1 + v45);
      while (1)
      {
        v46 = v95;
        v96 = *(_QWORD *)(a1 + 48);
        if ((unint64_t)v46 >= v96)
          break;
        v97 = sub_1001AE3C0(*(unsigned __int16 *)(*(_QWORD *)(a1 + 64) + 2 * (_QWORD)v46));
        v95 = v46 + 1;
        if ((v97 & 1) == 0)
        {
          v96 = *(_QWORD *)(a1 + 48);
          break;
        }
      }
      v290 = v46;
      if ((unint64_t)v46 >= v96)
        goto LABEL_137;
      v98 = *(unsigned __int16 *)(*(_QWORD *)(a1 + 64) + 2 * (_QWORD)v46);
      v99 = sub_1001AE2A0(*(unsigned __int16 *)(*(_QWORD *)(a1 + 64) + 2 * (_QWORD)v46)) ^ 1;
      if (v98 == 8232)
        LOBYTE(v99) = 0;
      if ((v99 & 1) != 0)
      {
LABEL_137:
        if (!v46)
          goto LABEL_269;
LABEL_138:
        v100 = 0;
      }
      else
      {
        v100 = 0;
        v290 = ++v46;
      }
LABEL_139:
      v101 = *(unsigned __int16 *)(*(_QWORD *)(a1 + 64) + 2 * (_QWORD)v46 - 2);
      if (qword_1014152C8 != -1)
        dispatch_once(&qword_1014152C8, &stru_10124A2A8);
      if ((v100 & (objc_msgSend((id)qword_1014152C0, "characterIsMember:", v101) ^ 1)) != 1)
        goto LABEL_259;
      goto LABEL_142;
    }
    if (v46)
    {
      v100 = 1;
      goto LABEL_139;
    }
LABEL_142:
    *(_QWORD *)buf = v18;
    *(_QWORD *)&buf[8] = &v46[-v18];
    v102 = sub_100273D10(a1, (NSRange *)buf, *(uint64_t *)&v282, v16, width, v43);
    if (v102 == 1)
    {
      sub_10014880C(v16, 1);
      v46 = (char *)(*(_QWORD *)&buf[8] + *(_QWORD *)buf);
      v290 = (char *)(*(_QWORD *)&buf[8] + *(_QWORD *)buf);
    }
    else if (v102 == -1)
    {
      goto LABEL_84;
    }
LABEL_259:
    if ((unint64_t)v46 > *(_QWORD *)(a1 + 48))
    {
      v142 = +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101249510);
      v143 = off_1013D9070;
      if (os_log_type_enabled((os_log_t)v143, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 67109890;
        *(_DWORD *)&buf[4] = v142;
        *(_WORD *)&buf[8] = 2082;
        *(_QWORD *)&buf[10] = "CRLWPCharIndex CRLWPCoreTextTypesetter::layOutLine(CRLWPTypesetterParamBlock *const)";
        v292 = 2082;
        v293 = "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm";
        v294 = 1024;
        v295 = 1450;
        _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)v143, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Bad localEndCharIndex", buf, 0x22u);
      }

      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101249530);
      v144 = off_1013D9070;
      if (os_log_type_enabled((os_log_t)v144, OS_LOG_TYPE_ERROR))
      {
        v184 = (id)objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
        *(_DWORD *)buf = 67109378;
        *(_DWORD *)&buf[4] = v142;
        *(_WORD *)&buf[8] = 2114;
        *(_QWORD *)&buf[10] = v184;
        _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)v144, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: Assertion backtrace: >>%{public}@<<", buf, 0x12u);

      }
      v145 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "CRLWPCharIndex CRLWPCoreTextTypesetter::layOutLine(CRLWPTypesetterParamBlock *const)"));
      v146 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm"));
      +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v145, v146, 1450, 0, "Bad localEndCharIndex");

    }
LABEL_269:
    if ((char *)v18 == v46)
    {
      if (!*(_QWORD *)(a1 + 48) || !*(_BYTE *)(a2 + 169))
      {
LABEL_278:
        v149 = v288;
        v148 = v289;
        sub_100272E88(v289, a1, *(uint64_t *)&v282, v16, 0);
        goto LABEL_279;
      }
      v147 = (char *)objc_msgSend(*(id *)(a1 + 56), "charIndexMappedFromStorage:", sub_1001AF294((unint64_t)objc_msgSend(*(id *)(a1 + 56), "charIndexMappedToStorage:", v18), *(void **)(a1 + 56)));
      v46 = v147;
      v290 = v147;
      if (*(_WORD *)(*(_QWORD *)(a1 + 232) + 72)
        && v147
        && v147 == (char *)(*(_QWORD *)(a1 + 48) - 1)
        && *(_WORD *)(*(_QWORD *)(a1 + 64) + 2 * (_QWORD)v147 - 2) != 8232)
      {
        v46 = v147 + 1;
        v290 = v147 + 1;
      }
    }
    if ((char *)v18 == v46)
      goto LABEL_278;
    v152 = (char *)objc_msgSend(*(id *)(a1 + 56), "charIndexMappedToStorage:", v46);
    v153 = &v152[-*(_QWORD *)v16];
    if (v152 == *(char **)v16)
    {
      v154 = +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101249550);
      v155 = off_1013D9070;
      if (os_log_type_enabled((os_log_t)v155, OS_LOG_TYPE_ERROR))
      {
        v185 = *(_QWORD *)(a1 + 48);
        if ((unint64_t)v46 >= v185)
        {
          v186 = 0;
        }
        else
        {
          v275 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "string"));
          v186 = objc_msgSend(v275, "characterAtIndex:", v46);
        }
        *(_DWORD *)buf = 67110146;
        *(_DWORD *)&buf[4] = v154;
        *(_WORD *)&buf[8] = 2082;
        *(_QWORD *)&buf[10] = "CRLWPCharIndex CRLWPCoreTextTypesetter::layOutLine(CRLWPTypesetterParamBlock *const)";
        v292 = 2082;
        v293 = "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm";
        v294 = 1024;
        v295 = 1503;
        v296 = 1024;
        LODWORD(v297) = v186;
        _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)v155, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Failed to map end of line to a positive index: U+%x", buf, 0x28u);
        if ((unint64_t)v46 < v185)

      }
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101249570);
      v156 = off_1013D9070;
      if (os_log_type_enabled((os_log_t)v156, OS_LOG_TYPE_ERROR))
      {
        v187 = (id)objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
        *(_DWORD *)buf = 67109378;
        *(_DWORD *)&buf[4] = v154;
        *(_WORD *)&buf[8] = 2114;
        *(_QWORD *)&buf[10] = v187;
        _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)v156, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: Assertion backtrace: >>%{public}@<<", buf, 0x12u);

      }
      v157 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "CRLWPCharIndex CRLWPCoreTextTypesetter::layOutLine(CRLWPTypesetterParamBlock *const)"));
      v158 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm"));
      v159 = v290;
      v160 = *(_QWORD *)(a1 + 48);
      if ((unint64_t)v290 >= v160)
      {
        v161 = 0;
      }
      else
      {
        v276 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "string"));
        v161 = objc_msgSend(v276, "characterAtIndex:", v159);
      }
      +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v157, v158, 1503, 0, "Failed to map end of line to a positive index: U+%x", v161);
      if ((unint64_t)v159 < v160)

    }
    *(_QWORD *)(v16 + 8) = v153;
    v162 = *(_QWORD *)(a2 + 40);
    v149 = v288;
    v148 = v289;
    sub_1001491EC(v16, v289, v288);
    v163 = *(_QWORD *)(a2 + 64);
    v164 = *(unsigned __int8 *)(a2 + 169);
    v165 = sub_1001480CC(v16, *(_QWORD *)(a2 + 176));
    v167 = (v163 & 0x10000) == 0 || v164 == 0;
    if (!v165 && v167)
    {
      sub_100274750(a1, v16, *(uint64_t *)&v282, (v162 & 0xC) != 0);
      if (!v164 && sub_1002772C8(a1, v16, v18, (unint64_t)v290))
      {
        v168 = sub_10014409C(v16);
        v170 = v169;
        v172 = v171;
        v174 = v173;
        v315.origin.x = sub_100144794((unint64_t *)v16, 1);
        v315.origin.y = v175;
        v315.size.width = v176;
        v315.size.height = v177;
        v312.origin.x = v168;
        v312.origin.y = v170;
        v312.size.width = v172;
        v312.size.height = v174;
        v313 = CGRectUnion(v312, v315);
        v178 = *(double *)(v16 + 40);
        v179 = *(double *)(v16 + 48);
        v180 = *(double *)(v16 + 56);
        v181 = *(double *)(v16 + 64);
        v182 = CGRectGetWidth(v313);
        v183 = *(double *)(a1 + 248);
        v314.origin.x = v178;
        v314.origin.y = v179;
        v314.size.width = v180;
        v314.size.height = v181;
        if (v182 - v183 > CGRectGetWidth(v314) + 0.25)
        {
          v290 = (char *)v18;
          *(_QWORD *)(v16 + 8) = 0;
          if ((v163 & 0x10000) == 0)
            sub_100272E88(v148, a1, *(uint64_t *)&v282, v16, 0);
        }
      }
    }
LABEL_279:
    if ((sub_1004B09D4(*(_QWORD *)(a1 + 232), v16, v149 - v148) & 1) == 0)
      break;
    if (v278 >= 2)
      goto LABEL_408;
LABEL_286:
    ;
  }
  v150 = *(unsigned __int8 *)(v16 + 25) >> 7;
  if (!*(_BYTE *)(a1 + 88))
    v150 = 0;
  v151 = v277;
  if (v278 <= 1 && v150)
    goto LABEL_286;
  if (!v150)
    goto LABEL_413;
LABEL_408:
  if (qword_10147E368 != -1)
    dispatch_once(&qword_10147E368, &stru_101249590);
  v268 = off_1013D9068;
  if (os_log_type_enabled((os_log_t)v268, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 134217984;
    *(_QWORD *)&buf[4] = 3;
    _os_log_impl((void *)&_mh_execute_header, (os_log_t)v268, OS_LOG_TYPE_INFO, "Line not cut correctly, but maximum number of tries (%lu) exceeded.", buf, 0xCu);
  }

  v151 = v277;
LABEL_413:

  v36 = v290;
LABEL_326:
  *(_QWORD *)(v16 + 8) = (char *)objc_msgSend(*(id *)(a1 + 56), "charIndexMappedToStorage:", v36) - *(_QWORD *)v16;
  v190 = (uint64_t)&v36[-v18];
  if ((unint64_t)v36 <= v18)
  {
    v191 = 0;
    *(_QWORD *)(a2 + 240) = 0;
  }
  else
  {
    *(_QWORD *)(a2 + 240) = objc_msgSend(*(id *)(a1 + 56), "charIndexMappedToStorage:", v36 - 1);
    v191 = (unsigned __int16)objc_msgSend(*(id *)(a1 + 56), "characterAtIndex:", v36 - 1);
  }
  *(_WORD *)(a2 + 232) = v191;
  if ((unint64_t)v36 >= *(_QWORD *)(a1 + 48))
    v190 -= *(_WORD *)(*(_QWORD *)(a1 + 232) + 72) != 0;
  sub_1002773A0(a1, a2, (char *)v18, v190);
  if ((*(_BYTE *)(a2 + 66) & 1) == 0)
    sub_10014A260((id)v16);
  v192 = sub_1004B0CB8(*(_QWORD *)(a1 + 232), v16);
  v285 = 0.0;
  v286 = 0.0;
  sub_1002775B8(a1, a2, &v286, &v285);
  v193.recordID.super.isa = (Class)sub_1004B1348(*(_QWORD **)(a1 + 232), (uint64_t *)v16);
  v194 = v286;
  if (v192 >= v286)
    v194 = v192;
  if (v194 > 0.0)
  {
    v195 = *(double *)(v16 + 144);
    v196 = v194 - (*(double *)(a2 + 200) + v195);
    if (v196 > 0.0)
    {
      *(double *)(v16 + 144) = v195 + v196;
      v310 = SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v193.recordID, v193.recordType);
      *(_QWORD *)(v16 + 72) = v197;
      *(_QWORD *)(v16 + 80) = v198;
      *(_QWORD *)(v16 + 88) = v199;
      *(_QWORD *)(v16 + 96) = v200;
      v193 = SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v310.recordID, v310.recordType);
      *(_QWORD *)(v16 + 40) = v201;
      *(_QWORD *)(v16 + 48) = v202;
      *(_QWORD *)(v16 + 56) = v203;
      *(_QWORD *)(v16 + 64) = v204;
    }
  }
  v205 = v285;
  if (v285 > 0.0)
  {
    v206 = *(double *)(v16 + 136);
    v207 = *(double *)(v16 + 152);
    v208 = v206 + v207;
    v209 = v285 + v206;
    *(double *)(v16 + 136) = v209;
    v210 = fmax(v207 - v205, 0.0);
    *(double *)(v16 + 152) = v210;
    if (v209 + v210 - v208 > 0.0)
    {
      v311 = SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v193.recordID, v193.recordType);
      *(_QWORD *)(v16 + 72) = v211;
      *(_QWORD *)(v16 + 80) = v212;
      *(_QWORD *)(v16 + 88) = v213;
      *(_QWORD *)(v16 + 96) = v214;
      SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v311.recordID, v311.recordType);
      *(_QWORD *)(v16 + 40) = v215;
      *(_QWORD *)(v16 + 48) = v216;
      *(_QWORD *)(v16 + 56) = v217;
      *(_QWORD *)(v16 + 64) = v218;
    }
  }
  sub_100277DFC(a1, *(uint64_t *)&v282, v16);
  v219 = &xmmword_100EEE418;
  if (*(uint64_t *)(v16 + 24) >= 0)
    v219 = (__int128 *)v16;
  v221 = *(_QWORD *)v219;
  v220 = *((_QWORD *)v219 + 1);
  v222 = (char *)objc_msgSend(*(id *)(a1 + 16), "range");
  if ((char *)(v221 + v220) == &v222[v223])
    *(_QWORD *)(v16 + 24) |= 0x200000uLL;
  if (*(double *)(v16 + 144) == -3.40282347e38)
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_1012495B0);
    v224 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)v224, OS_LOG_TYPE_ERROR))
      sub_100E14630();

    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_1012495D0);
    v225 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)v225, OS_LOG_TYPE_ERROR))
    {
      v226 = (void *)objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
      sub_100DFC2A8(v226);
    }

    v227 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "CRLWPCharIndex CRLWPCoreTextTypesetter::layOutLine(CRLWPTypesetterParamBlock *const)"));
    v228 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v227, v228, 1606, 0, "Bad leading");

  }
  if (!sub_10013E640(v16) && (*(_BYTE *)(a2 + 66) & 1) == 0)
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_1012495F0);
    v230 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)v230, OS_LOG_TYPE_ERROR))
      sub_100E145B0();

    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101249610);
    v231 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)v231, OS_LOG_TYPE_ERROR))
    {
      v232 = (void *)objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
      sub_100DFC2A8(v232);
    }

    v233 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "CRLWPCharIndex CRLWPCoreTextTypesetter::layOutLine(CRLWPTypesetterParamBlock *const)"));
    v234 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v233, v234, 1607, 0, "Bad lineRef count");

  }
  if ((unint64_t)v36 > *(_QWORD *)(a1 + 48))
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101249630);
    v235 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)v235, OS_LOG_TYPE_ERROR))
      sub_100E14530();

    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101249650);
    v236 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)v236, OS_LOG_TYPE_ERROR))
    {
      v237 = (void *)objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
      sub_100DFC2A8(v237);
    }

    v238 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "CRLWPCharIndex CRLWPCoreTextTypesetter::layOutLine(CRLWPTypesetterParamBlock *const)"));
    v239 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v238, v239, 1608, 0, "Bad endCharIndex");

  }
  v240 = objc_opt_class(CRLWPTypesetterTextSource, v229);
  v241 = sub_100221D0C(v240, *(void **)(a1 + 56));
  v242 = (void *)objc_claimAutoreleasedReturnValue(v241);
  v243 = *(_QWORD *)(v16 + 24);
  if (!v18)
  {
    v244 = &xmmword_100EEE418;
    if (v243 >= 0)
      v244 = (__int128 *)v16;
    if (*(_QWORD *)v244 != *(_QWORD *)(a1 + 32))
    {
      v245 = +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101249670);
      v246 = off_1013D9070;
      if (os_log_type_enabled((os_log_t)v246, OS_LOG_TYPE_ERROR))
      {
        v269 = (NSRange *)&xmmword_100EEE418;
        if (*(uint64_t *)(v16 + 24) >= 0)
          v269 = (NSRange *)v16;
        v270 = NSStringFromRange(*v269);
        widtha = (id)objc_claimAutoreleasedReturnValue(v270);
        v271 = NSStringFromRange(*(NSRange *)(a1 + 32));
        v284 = (id)objc_claimAutoreleasedReturnValue(v271);
        v309.location = (NSUInteger)objc_msgSend(*(id *)(a1 + 56), "charRangeRemappedFromStorage:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
        v272 = NSStringFromRange(v309);
        v273 = (id)objc_claimAutoreleasedReturnValue(v272);
        v279 = objc_msgSend(v242, "spaceCharIndexCount");
        v274 = objc_msgSend(v242, "bidiCharIndexCount");
        *(_DWORD *)buf = 67111170;
        *(_DWORD *)&buf[4] = v245;
        *(_WORD *)&buf[8] = 2082;
        *(_QWORD *)&buf[10] = "CRLWPCharIndex CRLWPCoreTextTypesetter::layOutLine(CRLWPTypesetterParamBlock *const)";
        v292 = 2082;
        v293 = "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm";
        v294 = 1024;
        v295 = 1623;
        v296 = 2114;
        v297 = widtha;
        v298 = 2114;
        v299 = v284;
        v300 = 2114;
        v301 = v273;
        v302 = 2048;
        v303 = v279;
        v304 = 2048;
        v305 = v274;
        _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)v246, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d First line should lie at the beginning of the paragraph: %{public}@ vs %{public}@ (%{public}@); ruby: %lu, bidi: %lu",
          buf,
          0x54u);

      }
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101249690);
      v247 = off_1013D9070;
      if (os_log_type_enabled((os_log_t)v247, OS_LOG_TYPE_ERROR))
      {
        v248 = (void *)objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
        sub_100DFC2A8(v248);
      }

      v283 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "CRLWPCharIndex CRLWPCoreTextTypesetter::layOutLine(CRLWPTypesetterParamBlock *const)"));
      v249 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm"));
      v250 = (NSRange *)&xmmword_100EEE418;
      if (*(uint64_t *)(v16 + 24) >= 0)
        v250 = (NSRange *)v16;
      v251 = NSStringFromRange(*v250);
      v252 = (void *)objc_claimAutoreleasedReturnValue(v251);
      v253 = NSStringFromRange(*(NSRange *)(a1 + 32));
      v254 = (void *)objc_claimAutoreleasedReturnValue(v253);
      v308.location = (NSUInteger)objc_msgSend(*(id *)(a1 + 56), "charRangeRemappedFromStorage:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
      v255 = NSStringFromRange(v308);
      v256 = (void *)objc_claimAutoreleasedReturnValue(v255);
      +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v283, v249, 1623, 0, "First line should lie at the beginning of the paragraph: %{public}@ vs %{public}@ (%{public}@); ruby: %lu, bidi: %lu",
        v252,
        v254,
        v256,
        objc_msgSend(v242, "spaceCharIndexCount"),
        objc_msgSend(v242, "bidiCharIndexCount"));

      v243 = *(_QWORD *)(v16 + 24);
    }
  }
  if (v36 == *(char **)(a1 + 48))
  {
    v257 = &xmmword_100EEE418;
    if (v243 >= 0)
      v257 = (__int128 *)v16;
    if (*(_QWORD *)v257 + *((_QWORD *)v257 + 1) != *(_QWORD *)(a1 + 40) + *(_QWORD *)(a1 + 32))
    {
      +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_1012496B0);
      v258 = off_1013D9070;
      if (os_log_type_enabled((os_log_t)v258, OS_LOG_TYPE_ERROR))
        sub_100E144B0();

      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_1012496D0);
      v259 = off_1013D9070;
      if (os_log_type_enabled((os_log_t)v259, OS_LOG_TYPE_ERROR))
      {
        v260 = (void *)objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
        sub_100DFC2A8(v260);
      }

      v261 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "CRLWPCharIndex CRLWPCoreTextTypesetter::layOutLine(CRLWPTypesetterParamBlock *const)"));
      v262 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm"));
      +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v261, v262, 1624, 0, "Last line should reach the end of the paragraph");

      v243 = *(_QWORD *)(v16 + 24);
    }
  }
  v263 = v243 < 0;
  v264 = &xmmword_100EEE418;
  if (!v263)
    v264 = (__int128 *)v16;
  v266 = *(_QWORD *)v264;
  v265 = *((_QWORD *)v264 + 1);

  return v266 + v265;
}

void sub_10027169C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100271A1C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100271A4C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100271A7C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100271AAC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100271ADC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100271B0C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100271B3C(uint64_t a1, double *a2, double *a3, double *a4)
{
  double v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  double MaxX;
  double v13;
  double v14;
  double v15;
  int v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  CGRect v25;

  v7 = *a2;
  v8 = (_QWORD)a2[5] & 0x14;
  v9 = *(_QWORD *)(*((_QWORD *)a2 + 28) + 24);
  v10 = a2[1];
  v11 = *(double *)(*(_QWORD *)a2 + 464);
  v25.origin.y = *(CGFloat *)(*(_QWORD *)a2 + 472);
  v25.size.width = *(CGFloat *)(*(_QWORD *)a2 + 480);
  v25.size.height = *(CGFloat *)(*(_QWORD *)a2 + 488);
  v25.origin.x = v11;
  MaxX = CGRectGetMaxX(v25);
  v13 = a2[1];
  v14 = a2[3];
  if ((v9 & 0x1000) != 0)
  {
    if (!*(_BYTE *)(*(_QWORD *)&v7 + 348)
      && *(_BYTE *)(*(_QWORD *)&v7 + 456)
      && !*(_BYTE *)(*(_QWORD *)&v7 + 457))
    {
      *a4 = v14 - *(double *)(*(_QWORD *)&v7 + 232);
    }
    if (!*((_BYTE *)a2 + 170))
    {
      v17 = fmax(fmin(*a3, *a4 + -18.0), 0.0);
      *a3 = v17;
      if (v8 != 4)
        *a4 = fmin(fmax(*a4, v17 + 18.0), v14);
      goto LABEL_17;
    }
LABEL_8:
    v16 = 0;
    goto LABEL_18;
  }
  if (!*(_BYTE *)(*(_QWORD *)&v7 + 348) && *(_BYTE *)(*(_QWORD *)&v7 + 456) && !*(_BYTE *)(*(_QWORD *)&v7 + 457))
    *a3 = *(double *)(*(_QWORD *)&v7 + 232);
  if (*((_BYTE *)a2 + 170))
    goto LABEL_8;
  v15 = fmin(fmax(*a4, *a3 + 18.0), v14);
  *a4 = v15;
  if (v8 != 4)
    *a3 = fmax(fmin(*a3, v15 + -18.0), 0.0);
LABEL_17:
  v16 = 1;
LABEL_18:
  v18 = v11 - v10;
  v19 = MaxX - v13;
  v20 = *(double *)(*(_QWORD *)&v7 + 240);
  if (*(_BYTE *)(*(_QWORD *)&v7 + 350))
  {
    v21 = *a4 - v20;
    *a4 = v21;
    if (!v16)
      goto LABEL_31;
    v22 = *a3;
    if (v8 != 4)
    {
      *a4 = fmin(fmax(v21, v22 + 18.0), v14);
      goto LABEL_31;
    }
LABEL_24:
    if (v18 >= v22)
      v23 = v11 - v10;
    else
      v23 = v22;
    *a3 = v23;
    if (*a4 < v19)
      v19 = *a4;
    *a4 = v19;
    goto LABEL_36;
  }
  v22 = v20 + *a3;
  *a3 = v22;
  if (v16)
  {
    if (v8 == 4)
      goto LABEL_24;
    *a3 = fmax(fmin(v22, *a4 + -18.0), 0.0);
  }
LABEL_31:
  v24 = *a3;
  if (v18 >= *a3)
    v24 = v11 - v10;
  *a3 = v24;
  if (*a4 < v19)
    v19 = *a4;
  *a4 = v19;
  if (v8 == 4)
LABEL_36:
    *a4 = *a3 + a2[6];
}

void sub_100271D6C(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4, double *a5, double *a6)
{
  uint64_t v9;
  id v10;
  void *v11;
  unint64_t v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  id v21;
  void *v22;
  void *v23;
  uint64_t v24;
  __CFString *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  void *v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  void *v35;
  void *v36;
  id v37;
  void *v38;
  id v39;
  void *v40;
  void *v41;
  id v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  id v47;
  void *v48;
  BOOL v49;
  id v50;
  uint64_t v51;
  id v52;
  CTParagraphStyleRef v53;
  char *v54;
  unint64_t v55;
  unint64_t v56;
  NSUInteger v57;
  id v58;
  void *v59;
  const __CTFont *v60;
  double v61;
  void *v62;
  const __CTLine *v63;
  CTLineRef v64;
  CFArrayRef GlyphRuns;
  CFAttributedStringRef v66;
  void *v67;
  double TypographicBounds;
  const __CFAttributedString *v69;
  id v70;
  uint64_t v71;
  const __CTLine *v72;
  const __CTLine *v73;
  void *v74;
  void *v75;
  void *v76;
  double v77;
  double v78;
  CRLWPListLabel *v79;
  CRLWPListLabel *v80;
  id v81;
  void *v82;
  id v83;
  void *v84;
  void *v85;
  id v86;
  void *v87;
  void *v88;
  void *v89;
  void *v90;
  void *v91;
  id v92;
  void *v93;
  void *v94;
  double v95;
  void *v96;
  double v97;
  double v98;
  double v99;
  double v100;
  double v101;
  double v102;
  double v103;
  double MaxX;
  double v105;
  double v106;
  double v107;
  double v108;
  double v109;
  double v110;
  double v111;
  id v112;
  unint64_t v113;
  _BOOL4 v114;
  _BOOL4 v115;
  void *v116;
  void *v117;
  void *v118;
  CFAttributedStringRef attrString;
  void *v123;
  void *v124;
  void *v125;
  void *v126;
  CGFloat leading;
  CGFloat descent;
  char v129;
  id v130[9];
  uint64_t v131;
  _QWORD v132[2];
  CGFloat ascent[4];
  _QWORD v134[3];
  _QWORD v135[3];
  CTParagraphStyleSetting settings;
  _QWORD v137[2];
  CFRange v138;
  CGRect v139;

  v9 = *(_QWORD *)a2;
  v10 = sub_10005DD38(*(_QWORD *)a2);
  v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
  v12 = (unint64_t)objc_msgSend(v11, "labelTypeForLevel:", *(_QWORD *)(v9 + 208));

  v13 = sub_10005DD38(v9);
  v14 = (void *)objc_claimAutoreleasedReturnValue(v13);
  v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "valueForProperty:", 54));

  v123 = v15;
  if (v15)
    v126 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "objectAtIndexedSubscript:", *(_QWORD *)(v9 + 208)));
  else
    v126 = (void *)objc_claimAutoreleasedReturnValue(+[CRLWPListLabelGeometry listLabelGeometry](CRLWPListLabelGeometry, "listLabelGeometry"));
  v125 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "characterStyleAtCharIndex:effectiveRange:", a3, 0));
  if ((v12 & 0xFFFFFFFFFFFFFFFELL) != 2)
    goto LABEL_99;
  v131 = 0x7FFFFFFFFFFFFFFFLL;
  v16 = sub_10005DD38(v9);
  v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
  v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "valueForProperty:", 57));

  v118 = v18;
  if (v18)
  {
    v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "objectAtIndexedSubscript:", *(_QWORD *)(v9 + 208)));
    v20 = (int)objc_msgSend(v19, "intValue");

  }
  else
  {
    v20 = +[CRLWPListStyle defaultLabelNumberType](_TtC8Freeform14CRLWPListStyle, "defaultLabelNumberType");
  }
  if (v12 == 2)
  {
    v21 = sub_10005DD38(v9);
    v22 = (void *)objc_claimAutoreleasedReturnValue(v21);
    v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v22, "valueForProperty:", 59));

    if (v23)
      v124 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v23, "objectAtIndexedSubscript:", *(_QWORD *)(v9 + 208)));
    else
      v124 = (void *)objc_claimAutoreleasedReturnValue(+[CRLWPListStyle defaultLabelString](_TtC8Freeform14CRLWPListStyle, "defaultLabelString"));
    v114 = *(_BYTE *)(a1 + 27) != 0;

    v115 = 0;
  }
  else
  {
    if (*(_BYTE *)(a1 + 27))
      v115 = sub_1001B2FF8(v20);
    else
      v115 = 1;
    sub_100172058((uint64_t)v130, v9 + 24);
    v25 = sub_1002786D4(a1, (_QWORD *)v9, v24, *(_QWORD *)(v9 + 208), 0, &v131);
    v124 = (void *)objc_claimAutoreleasedReturnValue(v25);
    sub_100171FA4(v130);
    v114 = 0;
  }
  if (!v124)
  {

    goto LABEL_99;
  }
  v113 = v20;
  v27 = objc_opt_class(NSString, v26);
  v28 = sub_10005DD38(v9);
  v29 = (void *)objc_claimAutoreleasedReturnValue(v28);
  v30 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v29, "valueForProperty:", 9));
  v31 = sub_100221D0C(v27, v30);
  v117 = (void *)objc_claimAutoreleasedReturnValue(v31);

  v32 = sub_10005DD08(v9);
  v33 = (void *)objc_claimAutoreleasedReturnValue(v32);
  v34 = sub_10005DD18(v9);
  v35 = (void *)objc_claimAutoreleasedReturnValue(v34);
  v36 = sub_1001B23E0(v33, v125, v117, v126, (double)(unint64_t)objc_msgSend(v35, "scaleTextPercent"));

  v37 = sub_10005DD38(v9);
  v38 = (void *)objc_claimAutoreleasedReturnValue(v37);
  v137[0] = v38;
  v39 = sub_10005DD08(v9);
  v40 = (void *)objc_claimAutoreleasedReturnValue(v39);
  v137[1] = v40;
  v41 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v137, 2));
  v42 = sub_1001B1018(v41, 0x35uLL);
  v43 = (void *)objc_claimAutoreleasedReturnValue(v42);

  if (!v43)
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_1012496F0);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E1493C();
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101249710);
    v44 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)v44, OS_LOG_TYPE_ERROR))
    {
      objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
      sub_100DE7E60();
    }

    v45 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "void CRLWPCoreTextTypesetter::pCalculateListLabel(const CRLWPTypesetterParamBlock *const, const CRLWPCharIndex, BOOL &, CGFloat &, CGFloat &) const"));
    v46 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v45, v46, 2006, 0, "Expect label color, or paragraph color as the default.");

    v43 = (void *)objc_claimAutoreleasedReturnValue(+[CRLColor magentaColor](CRLColor, "magentaColor"));
  }
  v47 = sub_10005DD84(v9);
  v48 = (void *)objc_claimAutoreleasedReturnValue(v47);
  v49 = v48 == 0;

  if (!v49)
  {
    v50 = sub_10005DD84(v9);
    v51 = objc_claimAutoreleasedReturnValue(v50);

    v43 = (void *)v51;
  }
  v52 = objc_msgSend(v43, "CGColor");
  v129 = *(_BYTE *)(v9 + 350);
  settings.spec = kCTParagraphStyleSpecifierBaseWritingDirection;
  settings.valueSize = 1;
  settings.value = &v129;
  v53 = CTParagraphStyleCreate(&settings, 1uLL);
  v134[0] = kCTFontAttributeName;
  v134[1] = kCTForegroundColorAttributeName;
  v135[0] = v36;
  v135[1] = v52;
  v134[2] = kCTParagraphStyleAttributeName;
  v135[2] = v53;
  v116 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v135, v134, 3));
  CFRelease(v53);
  CFRelease(v36);
  attrString = (CFAttributedStringRef)objc_msgSend(objc_alloc((Class)NSMutableAttributedString), "initWithString:attributes:", v124, v116);
  if (v12 != 3)
    goto LABEL_71;
  v54 = (char *)objc_msgSend(v124, "length");
  v55 = (unint64_t)v54;
  v56 = (unint64_t)(v54 - 2);
  v57 = (NSUInteger)(v115 ? v54 - 2 : v54);
  if (!*(_BYTE *)(a1 + 27))
    goto LABEL_71;
  v58 = sub_10005DD08(v9);
  v59 = (void *)objc_claimAutoreleasedReturnValue(v58);
  v60 = (const __CTFont *)sub_1001B16F4(0, v59, 0x64uLL);

  v61 = sub_1001AE05C(v60);
  CFRelease(v60);
  v112 = -[__CFAttributedString mutableCopy](attrString, "mutableCopy");
  if (v57)
    sub_1004B1D84(attrString, v115, v57);
  if (!v115)
  {
    if (sub_1001B3004(v113))
    {
      -[__CFAttributedString addAttribute:value:range:](attrString, "addAttribute:value:range:", kCTVerticalFormsAttributeName, &__kCFBooleanTrue, v115, v55);
    }
    else
    {
      v70 = -[__CFAttributedString mutableCopy](attrString, "mutableCopy");
      if (v55 > v115)
      {
        v71 = 0;
        do
          objc_msgSend(v70, "replaceCharactersInRange:withString:", v71++, 1, CFSTR("0"));
        while (v55 != v71);
      }
      v72 = CTLineCreateWithAttributedString((CFAttributedStringRef)v70);
      v73 = v72;
      if (v72)
      {
        if (CTLineGetTypographicBounds(v72, 0, 0, 0) >= v61 || v57 >= 6)
        {
          -[__CFAttributedString addAttribute:value:range:](attrString, "addAttribute:value:range:", kCTVerticalFormsAttributeName, &__kCFBooleanTrue, v115, v55);
          sub_10027896C(attrString, v115, v55);
        }
        else
        {
          v114 = 1;
        }
        CFRelease(v73);
      }
      else
      {
        +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
        if (qword_10147E370 != -1)
          dispatch_once(&qword_10147E370, &stru_101249730);
        if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
          sub_100E148B0();
        if (qword_10147E370 != -1)
          dispatch_once(&qword_10147E370, &stru_101249750);
        v74 = off_1013D9070;
        if (os_log_type_enabled((os_log_t)v74, OS_LOG_TYPE_ERROR))
        {
          objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
          sub_100DE7E60();
        }

        v75 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "void CRLWPCoreTextTypesetter::pCalculateListLabel(const CRLWPTypesetterParamBlock *const, const CRLWPCharIndex, BOOL &, CGFloat &, CGFloat &) const"));
        v76 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm"));
        +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v75, v76, 2115, 0, "invalid nil value for '%{public}s'", "tmpLineRef");

      }
    }

LABEL_71:
    v64 = CTLineCreateWithAttributedString(attrString);
    goto LABEL_72;
  }
  -[__CFAttributedString addAttribute:value:range:](attrString, "addAttribute:value:range:");
  if (v56 > 4)
  {
    v64 = 0;
    v66 = attrString;
    attrString = (CFAttributedStringRef)v112;
    goto LABEL_48;
  }
  v62 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", v56));
  -[__CFAttributedString addAttribute:value:range:](attrString, "addAttribute:value:range:", kCTHorizontalInVerticalFormsAttributeName, v62, v115, v56);

  v63 = CTLineCreateWithAttributedString(attrString);
  v64 = v63;
  if (!v63)
    goto LABEL_49;
  GlyphRuns = CTLineGetGlyphRuns(v63);
  v66 = (CFAttributedStringRef)objc_claimAutoreleasedReturnValue(GlyphRuns);
  if (-[__CFAttributedString count](v66, "count") != (id)3)
  {
LABEL_48:

LABEL_49:
    -[__CFAttributedString addAttribute:value:range:](attrString, "addAttribute:value:range:", kCTVerticalFormsAttributeName, &__kCFBooleanTrue, v115, v56);
    sub_10027896C(attrString, v115, v56);

    if (v64)
      goto LABEL_72;
    goto LABEL_71;
  }
  v67 = (void *)objc_claimAutoreleasedReturnValue(-[__CFAttributedString objectAtIndexedSubscript:](v66, "objectAtIndexedSubscript:", 1));

  ascent[0] = 0.0;
  leading = 0.0;
  descent = 0.0;
  v138.location = 0;
  v138.length = 0;
  TypographicBounds = CTRunGetTypographicBounds((CTRunRef)v67, v138, ascent, &descent, &leading);
  if (TypographicBounds > ascent[0] + descent
    && vabdd_f64(TypographicBounds, ascent[0] + descent) >= (ascent[0] + descent) * 0.1)
  {
    CFRelease(v64);
    v69 = (const __CFAttributedString *)v112;

    v64 = 0;
    attrString = v69;
    goto LABEL_48;
  }

LABEL_72:
  objc_msgSend(v126, "baselineOffset");
  v78 = v77;
  v79 = [CRLWPListLabel alloc];
  v80 = -[CRLWPListLabel initWithType:labelString:textLine:listNumber:isTateChuYoko:baselineOffset:](v79, "initWithType:labelString:textLine:listNumber:isTateChuYoko:baselineOffset:", v12, v124, v64, v131, v114, v78);
  CFRelease(v64);

  if (v80)
  {
    v81 = sub_10005DD38(v9);
    v82 = (void *)objc_claimAutoreleasedReturnValue(v81);
    v132[0] = v82;
    v83 = sub_10005DD08(v9);
    v84 = (void *)objc_claimAutoreleasedReturnValue(v83);
    v132[1] = v84;
    v85 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v132, 2));
    v86 = sub_1001B1018(v85, 0x12uLL);
    v87 = (void *)objc_claimAutoreleasedReturnValue(v86);

    v88 = (void *)objc_claimAutoreleasedReturnValue(+[NSNull null](NSNull, "null"));
    LODWORD(v82) = v87 == v88;

    if ((_DWORD)v82)
    {
      +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101249770);
      if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
        sub_100E14830();
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101249790);
      v89 = off_1013D9070;
      if (os_log_type_enabled((os_log_t)v89, OS_LOG_TYPE_ERROR))
      {
        objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
        sub_100DE7E60();
      }

      v90 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "void CRLWPCoreTextTypesetter::pCalculateListLabel(const CRLWPTypesetterParamBlock *const, const CRLWPCharIndex, BOOL &, CGFloat &, CGFloat &) const"));
      v91 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm"));
      +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v90, v91, 2150, 0, "CRLWPResolvePropertyForStyles should not return NSNull.");

    }
    if (v87)
      -[CRLWPListLabel setShadow:](v80, "setShadow:", v87);
    v92 = sub_10005DD38(v9);
    v93 = (void *)objc_claimAutoreleasedReturnValue(v92);
    v94 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v93, "valueForProperty:", 56));

    v95 = *(double *)(v9 + 232);
    v96 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v94, "objectAtIndexedSubscript:", *(_QWORD *)(v9 + 208)));
    objc_msgSend(v96, "crl_CGFloatValue");
    v98 = v97;

    if (*(_BYTE *)(a1 + 27) && (id)-[CRLWPListLabel labelType](v80, "labelType") == (id)1)
      -[CRLWPListLabel height](v80, "height");
    else
      -[CRLWPListLabel width](v80, "width");
    v100 = v99;
    v101 = *(double *)(a2 + 24);
    v102 = *(double *)(a2 + 8);
    v103 = *(double *)(v9 + 464);
    v139.origin.y = *(CGFloat *)(v9 + 472);
    v139.size.width = *(CGFloat *)(v9 + 480);
    v139.size.height = *(CGFloat *)(v9 + 488);
    v139.origin.x = v103;
    MaxX = CGRectGetMaxX(v139);
    v105 = v95 + v98;
    if (*(_BYTE *)(v9 + 350))
    {
      v106 = MaxX;
      v107 = *(double *)(a2 + 8);
      -[CRLWPListLabel setIsLabelRTL:](v80, "setIsLabelRTL:", 1);
      v108 = v101 - (v106 - v107);
      v109 = fmax(fmin(v105, v101 - *a5 + -20.0), v108);
      -[CRLWPListLabel setLabelIndent:](v80, "setLabelIndent:", v109 - v108);
      v110 = fmax(*(double *)(v9 + 232) + *(double *)(v9 + 240), v100 + v109);
      v111 = *a6;
      if ((*(_QWORD *)(a2 + 40) & 0x14) != 4)
        v111 = v101;
      *a6 = v111 - v110;
    }
    else
    {
      v109 = fmax(fmin(v105, *a6 + -20.0), v103 - v102);
      -[CRLWPListLabel setLabelIndent:](v80, "setLabelIndent:", v109 - (v103 - v102));
      v110 = fmax(*(double *)(v9 + 232) + *(double *)(v9 + 240), v100 + v109);
      *a5 = v110;
    }
    -[CRLWPListLabel setLabelTypographicExtent:](v80, "setLabelTypographicExtent:", v110 - v109);
    sub_10014882C(*(_QWORD *)(a2 + 224), v80);
    if (*a5 > *a6 + -10.0)
    {
      *a4 = 0;
      if (*(_BYTE *)(a2 + 170))
      {
        if (*(_QWORD *)(a1 + 48))
          sub_10014882C(*(_QWORD *)(a2 + 224), 0);
      }
    }

  }
LABEL_99:

}

void sub_100272B98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16, void *a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,void *a22,void *a23,void *a24,void *a25)
{
  void *v25;
  void *v26;

  _Unwind_Resume(a1);
}

void sub_100272E88(double a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v9;
  double v10;
  id v11;
  CTFontRef v12;
  const __CFAttributedString *v13;
  CTLineRef v14;
  uint64_t v15;
  uint64_t v16;
  __int128 *v17;
  unint64_t v18;
  _BYTE v19[104];

  v9 = sub_100148204(a4);
  v10 = sub_100279DDC(a1, v9, a3, a4);
  if (a5)
  {
    v11 = objc_msgSend(objc_alloc((Class)NSMutableDictionary), "initWithCapacity:", 2);
    v12 = CTFontCreateWithName(CFSTR("Helvetica"), 25.1950798, 0);
    objc_msgSend(v11, "setObject:forKeyedSubscript:", v12, kCTFontAttributeName);
    CFRelease(v12);
    v13 = (const __CFAttributedString *)objc_msgSend(objc_alloc((Class)NSAttributedString), "initWithString:attributes:", CFSTR("\n"), v11);
    v14 = CTLineCreateWithAttributedString(v13);
    sub_10019F910((uint64_t)v19, v14, 0x7FFFFFFFFFFFFFFFLL, 0, 0, v10, 0.0);
    sub_10013E210(a4, (uint64_t)v19);
    v15 = sub_10019FA00(v19);
    if (v14)
      CFRelease(v14);
    v16 = *(_QWORD *)(a4 + 24);
    if (v16 < 0)
      v17 = &xmmword_100EEE418;
    else
      v17 = (__int128 *)a4;
    if (*((_QWORD *)v17 + 1))
    {
      *(_QWORD *)(a4 + 24) = v16 | 0x800;
      sub_10027AB90(0.0, v15, a3, a4, a5, 0);
    }

    v18 = *(_QWORD *)(a4 + 24);
  }
  else
  {
    if (qword_1014152B8 != -1)
      dispatch_once(&qword_1014152B8, &stru_101249B10);
    sub_10019F910((uint64_t)v19, (CFTypeRef)qword_1014152B0, 0x7FFFFFFFFFFFFFFFLL, 0, 0, v10, 0.0);
    sub_10013E210(a4, (uint64_t)v19);
    sub_10019FA00(v19);
    *(double *)(a4 + 240) = a1 + 0.0;
    v18 = *(_QWORD *)(a4 + 24) & 0xFFFFFFFFFFFFF7FFLL;
    *(_QWORD *)(a4 + 24) = v18;
  }
  *(_QWORD *)(a4 + 24) = v18 | 0x4000;
}

void sub_100273088(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_10019FA00(va);
  _Unwind_Resume(a1);
}

unint64_t sub_1002730CC(uint64_t a1, unint64_t a2)
{
  id v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  v3 = sub_1004B16D0(*(_QWORD *)(a1 + 232));
  v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  if ((unint64_t)objc_msgSend(v4, "length") > a2)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "string"));
    v6 = objc_msgSend(v5, "rangeOfComposedCharacterSequenceAtIndex:", a2);
    v8 = v7;

    a2 = (unint64_t)v6 + v8;
  }

  return a2;
}

void sub_10027313C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

uint64_t sub_10027315C(uint64_t a1, char **a2, __int128 *a3)
{
  char *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;
  id v16;
  void *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  void *v23;
  unint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  void *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned __int8 v38;
  char v39;
  unsigned __int8 v40;
  char v41;
  __int128 v43;
  __int128 v44;

  v6 = sub_100273594(a1, *a2);
  v8 = (unint64_t)*a2;
  if (*a2 != *(char **)(a1 + 48))
  {
    v10 = v6;
    v44 = xmmword_100EEE418;
    v11 = objc_opt_class(CRLWPRubyField, v7);
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "smartFieldAtCharIndex:attributeKind:effectiveRange:", v8, 7, &v44));
    v13 = sub_100221D0C(v11, v12);
    v14 = (void *)objc_claimAutoreleasedReturnValue(v13);

    if (v14)
    {
      v43 = v44;
      v16 = v14;
      v17 = v16;
      v18 = v43;
      if (v8 + 1 == *((_QWORD *)&v43 + 1) + (_QWORD)v43)
      {
        v8 = sub_1002730CC(a1, v8);
        v20 = objc_opt_class(CRLWPRubyField, v19);
        v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "smartFieldAtCharIndex:attributeKind:effectiveRange:", v8, 7, &v43));
        v22 = sub_100221D0C(v20, v21);
        v23 = (void *)objc_claimAutoreleasedReturnValue(v22);

        v18 = v43;
      }
      else
      {
        v23 = v16;
      }
      v24 = v8;
      if (v23)
      {
        v24 = v8;
        if (v8 == v18)
          v24 = sub_1002730CC(a1, v18);
      }

    }
    else
    {
      v24 = v8;
    }
    v43 = xmmword_100EEE418;
    v25 = objc_opt_class(CRLWPRubyField, v15);
    v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "smartFieldAtCharIndex:attributeKind:effectiveRange:", v10, 7, &v43));
    v27 = sub_100221D0C(v25, v26);
    v28 = (void *)objc_claimAutoreleasedReturnValue(v27);

    if (!v28)
    {
LABEL_21:
      v36 = sub_10027BCB0(a1, (unint64_t)v10);
      v37 = sub_10027BCB0(a1, v24);
      if (a3)
        *a3 = xmmword_100EEE418;
      v38 = sub_1001AE2A0(v36);
      if ((_DWORD)v36 == 8232)
        v39 = 1;
      else
        v39 = v38;
      if ((v39 & 1) != 0
        || (sub_1001AE4F4(v36) & 1) == 0
        && (sub_1001AE610(v37) & 1) == 0
        && sub_1001AE888(v36, v37))
      {
        if (a3)
          *a3 = v44;
        if (!v14
          || sub_1004B1530(*(_QWORD *)(a1 + 232), (uint64_t)v14)
          || v8 <= (unint64_t)v44
          || v8 >= *((_QWORD *)&v44 + 1) + (_QWORD)v44)
        {
LABEL_33:
          *a2 = (char *)v8;
          v9 = 1;
LABEL_44:

          return v9;
        }
      }
      else if (sub_1001AE368(v36) && (sub_1001AE368(v37) & 1) == 0)
      {
        v40 = sub_1001AE3C0(*(unsigned __int16 *)(*(_QWORD *)(a1 + 64) + 2 * (_QWORD)v10));
        v41 = v10 ? v40 : 1;
        if ((v41 & 1) == 0)
        {
          v9 = 0;
          while (sub_1001AE368(*(unsigned __int16 *)(*(_QWORD *)(a1 + 64) + 2 * (_QWORD)v10)))
          {
            if ((sub_1001AE3C0(*(unsigned __int16 *)(*(_QWORD *)(a1 + 64) + 2 * (_QWORD)v10)) & 1) != 0)
              goto LABEL_33;
            v10 = sub_100273594(a1, v10);
            if (!v10)
              goto LABEL_44;
          }
        }
      }
      v9 = 0;
      goto LABEL_44;
    }
    v29 = v43;
    if (v10 == (char *)v43)
    {
      v30 = sub_100273594(a1, v10);
      v32 = objc_opt_class(CRLWPRubyField, v31);
      v33 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "smartFieldAtCharIndex:attributeKind:effectiveRange:", v30, 7, &v43));
      v34 = sub_100221D0C(v32, v33);
      v35 = objc_claimAutoreleasedReturnValue(v34);

      if (!v35)
      {
        v28 = 0;
LABEL_20:
        v8 = (unint64_t)v10;
        v10 = v30;
        goto LABEL_21;
      }
      v29 = v43;
      v28 = (void *)v35;
    }
    else
    {
      v30 = v10;
      v10 = (char *)v8;
    }
    if (v30 + 1 == (char *)(*((_QWORD *)&v43 + 1) + v29))
    {
      v8 = (unint64_t)v10;
      v10 = sub_100273594(a1, v30);
      goto LABEL_21;
    }
    goto LABEL_20;
  }
  return 1;
}

void sub_100273528(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

char *sub_100273594(uint64_t a1, char *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;

  v3 = sub_1004B16D0(*(_QWORD *)(a1 + 232));
  v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  v5 = v4;
  if (a2)
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "string"));
    a2 = (char *)objc_msgSend(v6, "rangeOfComposedCharacterSequenceAtIndex:", a2 - 1);

  }
  return a2;
}

void sub_1002735F4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_100273610(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100273640(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

uint64_t sub_100273670(CFIndex *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;
  __CFString *v15;
  __CFStringTokenizer *v16;
  CFRange CurrentTokenRange;
  void **v18;
  void *v19;
  CFRange v21;

  v6 = a2 + a3;
  if (a2 + a3 > (unint64_t)a1[6])
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101249810);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E149BC();
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101249830);
    v7 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)v7, OS_LOG_TYPE_ERROR))
    {
      objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
      sub_100DE7E60();
    }

    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "BOOL CRLWPCoreTextTypesetter::pCanBreakLineInRange(NSRange)"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v8, v9, 2351, 0, "Bad localMaxCharIndex");

  }
  v10 = sub_100278BE4();
  v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
  if ((objc_msgSend(v11, "characterIsMember:", *(unsigned __int16 *)(a1[8] + 2 * v6 - 2)) & 1) != 0)
  {
    v12 = 1;
  }
  else
  {
    v13 = (void *)a1[27];
    if (!v13)
    {
      v14 = objc_alloc_init((Class)NSMutableIndexSet);
      v15 = (__CFString *)objc_msgSend(objc_alloc((Class)NSString), "initWithCharactersNoCopy:length:freeWhenDone:", a1[8], a1[6], 0);
      v21.length = a1[6];
      v21.location = 0;
      v16 = CFStringTokenizerCreate(0, v15, v21, 3uLL, 0);
      while (CFStringTokenizerAdvanceToNextToken(v16))
      {
        CurrentTokenRange = CFStringTokenizerGetCurrentTokenRange(v16);
        objc_msgSend(v14, "addIndex:", CurrentTokenRange.length + CurrentTokenRange.location - 1);
      }
      CFRelease(v16);
      v19 = (void *)a1[27];
      v18 = (void **)(a1 + 27);
      *v18 = v14;

      v13 = *v18;
    }
    v12 = (uint64_t)objc_msgSend(v13, "intersectsIndexesInRange:", a2, a3);
  }

  return v12;
}

void sub_1002738F4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

BOOL sub_100273948(uint64_t a1, CFIndex a2, CFIndex a3, uint64_t a4, double *a5, uint64_t a6)
{
  char *v12;
  void *v13;
  void *v14;
  void *v15;
  const __CTFont *v16;
  unsigned int v17;
  CFIndex v18;
  const __CTTypesetter *v19;
  const __CTLine *Line;
  const __CTLine *v21;
  double TypographicBounds;
  const __CTLine *TruncatedLine;
  const __CTLine *v24;
  double v25;
  void *v26;
  void *v27;
  void *v28;
  CGSize advances;
  CGGlyph glyphs[2];
  UniChar characters[2];
  CFRange v33;

  v12 = sub_10027A650(a1, a2 + a3);
  v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 112), "objectAtIndexedSubscript:", v12));
  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "attributes"));
  sub_100149268(a6, v14, a4);

  v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 112), "objectAtIndexedSubscript:", v12));
  v16 = (const __CTFont *)objc_msgSend(v15, "ctFont");

  if ((a4 - 0x10000) >> 20)
  {
    v18 = 1;
    LOWORD(v17) = a4;
  }
  else
  {
    v17 = ((a4 + 67043328) >> 10) - 10240;
    characters[1] = a4 & 0x3FF | 0xDC00;
    v18 = 2;
  }
  characters[0] = v17;
  CTFontGetGlyphsForCharacters(v16, characters, glyphs, v18);
  CTFontGetAdvancesForGlyphs(v16, kCTFontOrientationDefault, glyphs, &advances, 1);
  v19 = (const __CTTypesetter *)sub_10026AFCC(a1);
  v33.location = a2;
  v33.length = a3;
  Line = CTTypesetterCreateLine(v19, v33);
  v21 = Line;
  if (Line)
  {
    TypographicBounds = CTLineGetTypographicBounds(Line, 0, 0, 0);
    TruncatedLine = CTLineCreateTruncatedLine(v21, *a5 - advances.width, kCTLineTruncationEnd, 0);
    v24 = TruncatedLine;
    if (TruncatedLine)
    {
      v25 = CTLineGetTypographicBounds(TruncatedLine, 0, 0, 0);
      *a5 = v25;
      CFRelease(v24);
    }
    else
    {
      v25 = NAN;
    }
    CFRelease(v21);
  }
  else
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101249C30);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E14A3C();
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101249C50);
    v26 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)v26, OS_LOG_TYPE_ERROR))
    {
      objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
      sub_100DE7E60();
    }

    v27 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "BOOL CRLWPCoreTextTypesetter::pRoomForHyphen(CFRange, UTF32Char, CGFloat &, CRLWPLineFragment *const)"));
    v28 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v27, v28, 3885, 0, "CTTypesetterCreateLine returned nil");

    TypographicBounds = 0.0;
    v25 = NAN;
  }
  return v25 == TypographicBounds;
}

void sub_100273C64(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100273CB0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100273CE0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

uint64_t sub_100273D10(uint64_t a1, NSRange *a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  CFIndex location;
  char *length;
  char *v9;
  unint64_t v14;
  id v15;
  void *v16;
  _BOOL4 v17;
  unsigned int v18;
  NSObject *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  id v24;
  void *v25;
  char *v26;
  CFIndex v27;
  CFIndex v28;
  uint64_t result;
  char *v30;
  void *v31;
  void *v32;
  void *v33;
  double v34;
  NSUInteger v35;
  const __CTTypesetter *v36;
  CFIndex v37;
  CFIndex v38;
  CFIndex v39;
  const __CTTypesetter *v40;
  const __CTLine *Line;
  const __CTLine *v42;
  BOOL v43;
  uint64_t v44;
  unsigned int v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  NSString *v50;
  void *v51;
  NSString *v52;
  char *v53;
  double v55;
  uint8_t buf[4];
  unsigned int v57;
  __int16 v58;
  const char *v59;
  __int16 v60;
  const char *v61;
  __int16 v62;
  int v63;
  __int16 v64;
  const char *v65;
  __int16 v66;
  char *v67;
  unsigned int v68[8];
  CFRange v69;

  if (*(double *)(a3 + 416) < a5)
  {
    location = a2->location;
    if (a2->location != 0x7FFFFFFFFFFFFFFFLL)
    {
      length = (char *)a2->length;
      v55 = NAN;
      v9 = &length[location];
      if ((uint64_t)&length[location] > location)
      {
        v14 = 0;
        while (1)
        {
          v68[0] = 0;
          v15 = sub_10005DD94(a3);
          v16 = (void *)objc_claimAutoreleasedReturnValue(v15);
          v17 = v16 == 0;

          if (v17)
          {
            v18 = +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
            if (qword_10147E370 != -1)
              dispatch_once(&qword_10147E370, &stru_101249B30);
            v19 = off_1013D9070;
            if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)buf = 67110146;
              v57 = v18;
              v58 = 2082;
              v59 = "CRLWPHyphenationResult CRLWPCoreTextTypesetter::pHyphenateLocalRange(CFRange &, const CRLWPLayoutSta"
                    "te *, const CGFloat, const CGFloat, CRLWPLineFragment *const)";
              v60 = 2082;
              v61 = "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm";
              v62 = 1024;
              v63 = 3802;
              v64 = 2082;
              v65 = "state->hyphenationLocale()";
              _os_log_error_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d invalid nil value for '%{public}s'", buf, 0x2Cu);
            }
            if (qword_10147E370 != -1)
              dispatch_once(&qword_10147E370, &stru_101249B50);
            v20 = off_1013D9070;
            if (os_log_type_enabled((os_log_t)v20, OS_LOG_TYPE_ERROR))
            {
              v30 = (char *)objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
              *(_DWORD *)buf = 67109378;
              v57 = v18;
              v58 = 2114;
              v59 = v30;
              _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)v20, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: Assertion backtrace: >>%{public}@<<", buf, 0x12u);

            }
            v21 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "CRLWPHyphenationResult CRLWPCoreTextTypesetter::pHyphenateLocalRange(CFRange &, const CRLWPLayoutState *, const CGFloat, const CGFloat, CRLWPLineFragment *const)"));
            v22 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm"));
            +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v21, v22, 3802, 0, "invalid nil value for '%{public}s'", "state->hyphenationLocale()");

          }
          v23 = *(void **)(a1 + 56);
          v24 = sub_10005DD94(a3);
          v25 = (void *)objc_claimAutoreleasedReturnValue(v24);
          v26 = (char *)objc_msgSend(v23, "hyphenationLocationBeforeIndex:inRange:locale:hyphenChar:", v9, location, length, v25, v68);

          if ((uint64_t)v9 <= (uint64_t)v26)
            break;
          v27 = a2->location;
          v28 = (CFIndex)&v26[-a2->location];
          if ((uint64_t)v26 <= (int64_t)a2->location)
            break;
          if (v26 != (char *)-1)
          {
            if ((unint64_t)v26 < location || &v26[-location] >= length)
            {
              +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount", v28);
              if (qword_10147E370 != -1)
                dispatch_once(&qword_10147E370, &stru_101249B70);
              if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
                sub_100E14B3C();
              if (qword_10147E370 != -1)
                dispatch_once(&qword_10147E370, &stru_101249B90);
              v31 = off_1013D9070;
              if (os_log_type_enabled((os_log_t)v31, OS_LOG_TYPE_ERROR))
              {
                objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
                sub_100DE7E60();
              }

              v32 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "CRLWPHyphenationResult CRLWPCoreTextTypesetter::pHyphenateLocalRange(CFRange &, const CRLWPLayoutState *, const CGFloat, const CGFloat, CRLWPLineFragment *const)"));
              v33 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm"));
              +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v32, v33, 3809, 0, "Bad hyphenation result");

              return 0xFFFFFFFFLL;
            }
            v55 = a5;
            if (sub_100273948(a1, v27, v28, v68[0], &v55, a4))
            {
              v34 = v55;
              v35 = a2->location;
              v36 = (const __CTTypesetter *)sub_10026AFCC(a1);
              v37 = CTTypesetterSuggestLineBreakWithOffset(v36, a2->location, v34, a6);
              v38 = a2->location;
              if ((uint64_t)(v37 + v35) >= (uint64_t)v26)
                v39 = a2->location;
              else
                v39 = v37 + v35;
              if (v39 > v38)
              {
                v40 = (const __CTTypesetter *)sub_10026AFCC(a1);
                v69.location = v38;
                v69.length = v39 - v38;
                Line = CTTypesetterCreateLine(v40, v69);
                v42 = Line;
                if (Line)
                {
                  if (a5 - CTLineGetTypographicBounds(Line, 0, 0, 0) < *(double *)(a3 + 416))
                  {
                    a2->length = v39 - a2->location;
                    CFRelease(v42);
                    return 0xFFFFFFFFLL;
                  }
                  CFRelease(v42);
                }
              }
              v44 = (uint64_t)&v26[-a2->location];
              v43 = (uint64_t)v26 <= (int64_t)a2->location;
              a2->length = v44;
              if (v43)
              {
                v45 = +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
                if (qword_10147E370 != -1)
                  dispatch_once(&qword_10147E370, &stru_101249BF0);
                v46 = off_1013D9070;
                if (os_log_type_enabled((os_log_t)v46, OS_LOG_TYPE_ERROR))
                {
                  v52 = NSStringFromRange(*a2);
                  v53 = (char *)objc_claimAutoreleasedReturnValue(v52);
                  *(_DWORD *)buf = 67110402;
                  v57 = v45;
                  v58 = 2082;
                  v59 = "CRLWPHyphenationResult CRLWPCoreTextTypesetter::pHyphenateLocalRange(CFRange &, const CRLWPLayou"
                        "tState *, const CGFloat, const CGFloat, CRLWPLineFragment *const)";
                  v60 = 2082;
                  v61 = "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm";
                  v62 = 1024;
                  v63 = 3849;
                  v64 = 2114;
                  v65 = v53;
                  v66 = 2048;
                  v67 = v26;
                  _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)v46, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Bad hyphenation result range: %{public}@ vs %lu", buf, 0x36u);

                }
                if (qword_10147E370 != -1)
                  dispatch_once(&qword_10147E370, &stru_101249C10);
                v47 = off_1013D9070;
                if (os_log_type_enabled((os_log_t)v47, OS_LOG_TYPE_ERROR))
                {
                  objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
                  sub_100DE7E60();
                }

                v48 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "CRLWPHyphenationResult CRLWPCoreTextTypesetter::pHyphenateLocalRange(CFRange &, const CRLWPLayoutState *, const CGFloat, const CGFloat, CRLWPLineFragment *const)"));
                v49 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm"));
                v50 = NSStringFromRange(*a2);
                v51 = (void *)objc_claimAutoreleasedReturnValue(v50);
                +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v48, v49, 3849, 0, "Bad hyphenation result range: %{public}@ vs %lu", v51, v26);

                v44 = a2->length;
              }
              if (v44 < 0)
                return 0xFFFFFFFFLL;
              else
                return 1;
            }
          }
          result = 0xFFFFFFFFLL;
          if (v14 <= 0x12)
          {
            ++v14;
            v9 = v26;
            if ((uint64_t)v26 > location)
              continue;
          }
          return result;
        }
      }
    }
  }
  return 0xFFFFFFFFLL;
}

void sub_1002745F0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100274690(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002746C0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002746F0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100274720(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

id sub_100274750(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  id result;
  double v9;
  id v10;
  void *v11;
  unsigned int v12;
  uint64_t v13;
  id v14;
  const __CFAttributedString *v15;
  const __CTLine *v16;
  id v17;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  __int128 *v24;
  unint64_t v25;
  CFIndex v26;
  CFIndex v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BOOL4 v36;
  unsigned int v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  const __CTTypesetter *v43;
  const __CTLine *LineWithOffset;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  uint64_t GlyphCount;
  unsigned int v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  CGFloat v60;
  double v61;
  double v62;
  id v63;
  void *v64;
  double v65;
  double v66;
  BOOL v67;
  id v68;
  void *v69;
  double v70;
  double v71;
  double v72;
  uint64_t v73;
  double v74;
  uint64_t v75;
  unsigned int v76;
  id v77;
  void *v78;
  uint64_t v79;
  CFArrayRef GlyphRuns;
  char *v81;
  const __CTLine *v82;
  id v83;
  double x;
  const __CTRun *v85;
  CFRange StringRange;
  unint64_t v87;
  CFDictionaryRef Attributes;
  unsigned int v89;
  void *v90;
  unsigned int v93;
  unsigned int v94;
  void *v95;
  void *v96;
  void *v97;
  void *v98;
  NSString *v99;
  void *v100;
  unsigned int v101;
  void *v102;
  void *v103;
  NSString *v104;
  void *v105;
  id v106;
  void *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  void *v111;
  id v112;
  uint64_t v113;
  double *v114;
  double v115;
  double v116;
  int v117;
  CTRunStatus v118;
  id v119;
  void *v120;
  id v121;
  double v122;
  double v123;
  uint64_t v124;
  double v125;
  unsigned __int8 v126;
  double v127;
  double v128;
  CFIndex v129;
  double v130;
  double v131;
  id v132;
  id v133;
  uint64_t v134;
  void *v135;
  BOOL v136;
  char v137;
  id v138;
  void *v139;
  double v140;
  BOOL v141;
  uint64_t v142;
  double v143;
  double v144;
  double v145;
  double v146;
  double v147;
  double v148;
  double v149;
  CRLWPAdornmentLine *v150;
  uint64_t v151;
  CRLWPAdornmentLine *v152;
  id v153;
  void *v154;
  id v155;
  void *v156;
  id v157;
  void *v158;
  double v159;
  id v160;
  id v161;
  double v162;
  double v163;
  double v164;
  double v165;
  double v166;
  id v167;
  unsigned int v168;
  double v169;
  unint64_t v170;
  uint64_t v171;
  CFIndex v172;
  NSString *v173;
  id v174;
  NSString *v175;
  id v176;
  id v177;
  id v178;
  double v179;
  CRLWPAdornmentLine *v180;
  id v181;
  void *v182;
  id v183;
  CRLWPAdornmentLine *v184;
  id v185;
  void *v186;
  id v187;
  uint64_t v188;
  void *v189;
  objc_class *v190;
  void *v191;
  id v192;
  void *v193;
  void *v194;
  void *v195;
  _BOOL4 v196;
  void *v197;
  BOOL v198;
  CFIndex v199;
  uint64_t v200;
  _BOOL4 v201;
  const __CTFont *v202;
  int v203;
  uint64_t v204;
  uint64_t v205;
  int v206;
  CGPoint *v207;
  const __CTRun *v208;
  double v209;
  float64x2_t v210;
  double v212;
  uint64_t v213;
  double MaxX;
  double v215;
  objc_class *v216;
  id v217;
  void *v218;
  id v219;
  void *v220;
  double width;
  id v222;
  void *v223;
  id v224;
  void *v225;
  void *v226;
  unsigned int v227;
  void *v228;
  unsigned int v229;
  void *v230;
  void *v231;
  void *v232;
  void *v233;
  const __CFAttributedString *v234;
  const __CTLine *v235;
  double v236;
  id v237;
  float v238;
  unint64_t v239;
  id v240;
  const __CFAttributedString *v241;
  const __CTLine *v242;
  double v243;
  uint64_t v244;
  const __CTLine *v245;
  double v246;
  id v247;
  const __CFAttributedString *v248;
  const __CTLine *v249;
  double v250;
  double v251;
  id v253;
  __CFString *v254;
  uint64_t v256;
  double OffsetForStringIndex;
  double v258;
  id v259;
  void *v260;
  id v261;
  void *v262;
  double v263;
  int v264;
  uint64_t v265;
  void *v266;
  const __CTLine *cf;
  void *v268;
  unsigned int v269;
  int v270;
  const __CTLine *line;
  char *v272;
  id obj;
  double TrailingWhitespaceWidth;
  double TypographicBounds;
  unint64_t charIndex;
  uint64_t v277;
  id v278;
  uint64_t v279;
  void *v280;
  void *v281;
  char *v282;
  void *v283;
  _BOOL4 v284;
  void *v285;
  void *cf1;
  uint64_t v287;
  uint64_t v288;
  void *v289;
  int v290;
  CRLWPAdornments *v291;
  float64x2_t v292;
  void *v293;
  float64x2_t v294;
  void *v295;
  float64x2_t v296;
  void *v297;
  double y;
  id v299;
  _BOOL4 v300;
  double v301;
  id v302;
  uint64_t v303;
  CGAffineTransform v304;
  CGGlyph glyphs;
  UniChar characters;
  CGFloat leading;
  CGFloat descent;
  CGFloat ascent;
  CGSize *v310[3];
  CGPoint *v311[3];
  CFIndex *buffer[3];
  CGGlyph v313;
  CGSize v314;
  CTRunRef run;
  __int128 v316;
  __int128 v317;
  __int128 v318;
  __int128 v319;
  double v320;
  double offset;
  _BYTE translations[18];
  __int16 v323;
  const char *v324;
  __int16 v325;
  int v326;
  __int16 v327;
  const char *v328;
  __int16 v329;
  id v330;
  __int16 v331;
  unsigned int v332;
  uint8_t v333[128];
  uint8_t buf[4];
  unsigned int v335;
  _BYTE v336[10];
  __int16 v337;
  const char *v338;
  __int16 v339;
  int v340;
  __int16 v341;
  unint64_t v342;
  __int16 v343;
  CFIndex v344;
  __int16 v345;
  int v346;
  CFRange v347;
  CFRange v348;
  CFRange v349;
  CFRange v350;
  CFRange v351;
  CFRange v352;
  CGRect BoundingRectsForGlyphs;

  result = (id)sub_10013E640(a2);
  if (result)
    return result;
  v270 = a4;
  v303 = a1;
  v279 = a3;
  offset = 0.0;
  v320 = 0.0;
  v287 = a2;
  sub_100149224(a2, &offset, &v320);
  if (v320 - offset <= 32000.0)
    v9 = v320 - offset;
  else
    v9 = 32000.0;
  if (sub_1001448FC(a2))
  {
    *(_DWORD *)buf = 0;
    v10 = sub_1001492CC(a2, buf);
    v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
    if ((*(_DWORD *)buf - 0x10000) >> 20)
    {
      v13 = 1;
      LOWORD(v12) = *(_WORD *)buf;
    }
    else
    {
      v12 = ((*(_DWORD *)buf + 67043328) >> 10) - 10240;
      *(_WORD *)&translations[2] = *(_WORD *)buf & 0x3FF | 0xDC00;
      v13 = 2;
    }
    *(_WORD *)translations = v12;
    v14 = objc_msgSend(objc_alloc((Class)NSString), "initWithCharacters:length:", translations, v13);
    v15 = (const __CFAttributedString *)objc_msgSend(objc_alloc((Class)NSAttributedString), "initWithString:attributes:", v14, v11);
    v16 = CTLineCreateWithAttributedString(v15);
    TypographicBounds = CTLineGetTypographicBounds(v16, 0, 0, 0);
    cf = v16;

  }
  else
  {
    cf = 0;
    TypographicBounds = 0.0;
  }
  v17 = sub_100172228(v279 + 24);
  v18 = v287;
  if (v17 != *(id *)(v287 + 16))
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101249890);
    v19 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)v19, OS_LOG_TYPE_ERROR))
      sub_100E14D60();

    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_1012498B0);
    v20 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)v20, OS_LOG_TYPE_ERROR))
    {
      v21 = (void *)objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
      sub_100DFC2A8(v21);
    }

    v22 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "void CRLWPCoreTextTypesetter::createLineVectorForLineFragment(CRLWPLineFragment *, const CRLWPLayoutState *, BOOL, CRLWPLayoutFlags) const"));
    v23 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v22, v23, 2875, 0, "line fragment isn't from the current paragraph");

    v18 = v287;
  }
  if (*(uint64_t *)(v18 + 24) < 0)
    v24 = &xmmword_100EEE418;
  else
    v24 = (__int128 *)v18;
  v25 = (unint64_t)objc_msgSend(*(id *)(a1 + 56), "charRangeMappedFromStorage:", *(_QWORD *)v24, *((_QWORD *)v24 + 1));
  v27 = v26;
  if (v26 < 0)
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_1012498D0);
    v28 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)v28, OS_LOG_TYPE_ERROR))
      sub_100E14CBC();

    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_1012498F0);
    v29 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)v29, OS_LOG_TYPE_ERROR))
    {
      v30 = (void *)objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
      sub_100DFC2A8(v30);
    }

    v31 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "void CRLWPCoreTextTypesetter::createLineVectorForLineFragment(CRLWPLineFragment *, const CRLWPLayoutState *, BOOL, CRLWPLayoutFlags) const"));
    v32 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v31, v32, 2878, 0, "Bad range length %ld.", v27);

  }
  v33 = v25 + v27;
  v34 = a1;
  if (*(_WORD *)(*(_QWORD *)(a1 + 232) + 72))
    v300 = v33 == *(_QWORD *)(a1 + 48);
  else
    v300 = 0;
  v35 = v287;
  charIndex = v25 + v27;
  if (v33)
    v36 = *(unsigned __int16 *)(*(_QWORD *)(a1 + 64) + 2 * v33 - 2) == 8232;
  else
    v36 = 0;
  if (*(_QWORD *)(v279 + 400) == 3 && charIndex < *(_QWORD *)(a1 + 48))
  {
    v37 = 1;
  }
  else
  {
    v37 = sub_100149310(v287);
    v35 = v287;
    v34 = a1;
  }
  v288 = *(_QWORD *)(v35 + 24);
  if (!sub_10026AFCC(v34))
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101249910);
    v38 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)v38, OS_LOG_TYPE_ERROR))
      sub_100E14C3C();

    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101249930);
    v39 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)v39, OS_LOG_TYPE_ERROR))
    {
      v40 = (void *)objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
      sub_100DFC2A8(v40);
    }

    v41 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "void CRLWPCoreTextTypesetter::createLineVectorForLineFragment(CRLWPLineFragment *, const CRLWPLayoutState *, BOOL, CRLWPLayoutFlags) const"));
    v42 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v41, v42, 2887, 0, "nil typesetter");

  }
  v43 = (const __CTTypesetter *)sub_10026AFCC(a1);
  v347.location = v25;
  v347.length = v27;
  LineWithOffset = CTTypesetterCreateLineWithOffset(v43, v347, offset);
  if (!LineWithOffset)
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101249950);
    v45 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)v45, OS_LOG_TYPE_ERROR))
      sub_100E14BBC();

    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101249970);
    v46 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)v46, OS_LOG_TYPE_ERROR))
    {
      v47 = (void *)objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
      sub_100DFC2A8(v47);
    }

    v48 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "void CRLWPCoreTextTypesetter::createLineVectorForLineFragment(CRLWPLineFragment *, const CRLWPLayoutState *, BOOL, CRLWPLayoutFlags) const"));
    v49 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v48, v49, 2889, 0, "nil lineRef");

  }
  GlyphCount = CTLineGetGlyphCount(LineWithOffset);
  if (!GlyphCount)
  {
    v51 = +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101249990);
    v52 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)v52, OS_LOG_TYPE_ERROR))
    {
      if (v25 >= *(_QWORD *)(a1 + 48))
        v264 = 0;
      else
        v264 = *(unsigned __int16 *)(*(_QWORD *)(a1 + 64) + 2 * v25);
      *(_DWORD *)buf = 67110658;
      v335 = v51;
      *(_WORD *)v336 = 2082;
      *(_QWORD *)&v336[2] = "void CRLWPCoreTextTypesetter::createLineVectorForLineFragment(CRLWPLineFragment *, const CRL"
                            "WPLayoutState *, BOOL, CRLWPLayoutFlags) const";
      v337 = 2082;
      v338 = "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm";
      v339 = 1024;
      v340 = 2890;
      v341 = 2048;
      v342 = v25;
      v343 = 2048;
      v344 = v27;
      v345 = 1024;
      v346 = v264;
      _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)v52, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d bad lineGlyphCount 0 for line range {%ld, %ld} 0x%X", buf, 0x3Cu);
    }

    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_1012499B0);
    v53 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)v53, OS_LOG_TYPE_ERROR))
    {
      v54 = (void *)objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
      sub_100DFC2A8(v54);
    }

    v55 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "void CRLWPCoreTextTypesetter::createLineVectorForLineFragment(CRLWPLineFragment *, const CRLWPLayoutState *, BOOL, CRLWPLayoutFlags) const"));
    v56 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm"));
    if (v25 >= *(_QWORD *)(a1 + 48))
      v57 = 0;
    else
      v57 = *(unsigned __int16 *)(*(_QWORD *)(a1 + 64) + 2 * v25);
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v55, v56, 2890, 0, "bad lineGlyphCount 0 for line range {%ld, %ld} 0x%X", v25, v27, v57);

  }
  if (((v37 ^ 1 | (v300 || v36)) & 1) == 0)
  {
    v9 = v9 - TypographicBounds + *(double *)(a1 + 248);
    line = CTLineCreateJustifiedLine(LineWithOffset, 1.0, v9);
    if (line)
    {
      CFRelease(LineWithOffset);
      v58 = v287;
      *(_QWORD *)(v287 + 24) &= ~0x8000uLL;
      goto LABEL_81;
    }
    *(_QWORD *)(v287 + 24) |= 0x8000uLL;
    GlyphCount = (uint64_t)sub_100149310(v287);
  }
  line = LineWithOffset;
  v58 = v287;
LABEL_81:
  v59 = *(_QWORD *)(v279 + 400);
  if (v59 != 3)
  {
    if (v59 == 2)
    {
      v61 = 0.5;
    }
    else
    {
      v60 = 0.0;
      if (v59 != 1)
      {
LABEL_89:
        if (v59 == 1 || ((v59 == 3) & (v288 >> 12)) != 0)
          *(_QWORD *)(v58 + 24) |= 0x800000uLL;
        goto LABEL_92;
      }
      v61 = 1.0;
    }
LABEL_88:
    v9 = v9 - TypographicBounds + *(double *)(a1 + 248);
    v60 = v61;
    goto LABEL_89;
  }
  v60 = 0.0;
  v61 = 1.0;
  if ((v288 & 0x1000) != 0)
    goto LABEL_88;
LABEL_92:
  if (v270)
  {
    v62 = sub_100279DDC(offset, GlyphCount, v279, v58);
    v63 = sub_10013E750(v287);
    v64 = (void *)objc_claimAutoreleasedReturnValue(v63);
    v65 = 0.0;
    v66 = v62 + 0.0;
    if (v64)
    {
      v67 = *(_BYTE *)(v279 + 350) == 0;

      if (!v67)
      {
        v68 = sub_10013E750(v287);
        v69 = (void *)objc_claimAutoreleasedReturnValue(v68);
        objc_msgSend(v69, "labelTypographicExtent");
        v71 = v70;

        v65 = v71 + 0.0;
      }
    }
  }
  else
  {
    v65 = 0.0;
    v72 = CTLineGetPenOffsetForFlush(line, v60, v9) + 0.0;
    v66 = sub_100279DDC(offset, v73, v279, v287) + v72;
  }
  v74 = CTLineGetTypographicBounds(line, 0, 0, 0);
  v75 = v287;
  *(double *)(v287 + 240) = v66 + v65 + v74;
  if (charIndex <= v25)
  {
    v269 = 0;
  }
  else
  {
    v269 = objc_msgSend(*(id *)(a1 + 56), "characterAtIndex:", charIndex - 1);
    v76 = sub_1001AE2A0(v269) ^ 1;
    if (v269 == 8232)
      LOBYTE(v76) = 0;
    v75 = v287;
    if ((v76 & 1) == 0)
      *(_QWORD *)(v287 + 24) |= 0x800uLL;
  }
  if (line)
  {
    v77 = sub_1004B16D0(*(_QWORD *)(a1 + 232));
    v78 = (void *)objc_claimAutoreleasedReturnValue(v77);
    v268 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v78, "string"));

    sub_1001481FC(v287, v268);
    sub_10019F910((uint64_t)buf, line, 0x7FFFFFFFFFFFFFFFLL, 0, 0, v66, 0.0);
    v79 = a1;
    sub_10013E210(v287, (uint64_t)buf);
    GlyphRuns = CTLineGetGlyphRuns(line);
    v266 = (void *)objc_claimAutoreleasedReturnValue(GlyphRuns);
    v81 = (char *)objc_msgSend(v266, "count");
    v82 = (const __CTLine *)sub_10019FA78((uint64_t)buf);
    TrailingWhitespaceWidth = CTLineGetTrailingWhitespaceWidth(v82);
    v318 = 0u;
    v319 = 0u;
    v316 = 0u;
    v317 = 0u;
    obj = v266;
    v83 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v316, v333, 16);
    if (!v83)
    {
      x = INFINITY;
      goto LABEL_317;
    }
    v282 = 0;
    v272 = v81 - 1;
    x = INFINITY;
    v277 = *(_QWORD *)v317;
    while (1)
    {
      v285 = 0;
      v278 = v83;
      do
      {
        if (*(_QWORD *)v317 != v277)
          objc_enumerationMutation(obj);
        v85 = *(const __CTRun **)(*((_QWORD *)&v316 + 1) + 8 * (_QWORD)v285);
        run = v85;
        StringRange = CTRunGetStringRange(v85);
        v87 = CTRunGetGlyphCount(v85);
        Attributes = CTRunGetAttributes(v85);
        v289 = (void *)objc_claimAutoreleasedReturnValue(Attributes);
        v89 = objc_msgSend(*(id *)(v79 + 56), "characterAtIndex:", StringRange.location);
        v291 = -[CRLWPAdornments initWithType:color:font:flippedFont:]([CRLWPAdornments alloc], "initWithType:color:font:flippedFont:", 4, 0, 0, 0);
        v314 = CGSizeZero;
        v313 = 0;
        v90 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v289, "objectForKeyedSubscript:", CFSTR("CRLWPEmphasisMarksAttribute")));
        v280 = v90;
        if (v90)
        {
          v284 = 0;
          if (objc_msgSend(v90, "length") && v87)
            v284 = sub_100279FD4(v303, v279, v291, &run, v287, v280, &v313, &v314);
        }
        else
        {
          v284 = 0;
        }
        if ((v89 == 14 || v89 == 65532) && v87 != 1)
        {
          if (StringRange.length < 2)
            v93 = 0;
          else
            v93 = objc_msgSend(*(id *)(v303 + 56), "characterAtIndex:", StringRange.location + 1);
          if (v89 == 65532)
          {
            v94 = +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
            if (qword_10147E370 != -1)
              dispatch_once(&qword_10147E370, &stru_1012499D0);
            v95 = off_1013D9070;
            if (os_log_type_enabled((os_log_t)v95, OS_LOG_TYPE_ERROR))
            {
              v173 = NSStringFromRange((NSRange)StringRange);
              v174 = (id)objc_claimAutoreleasedReturnValue(v173);
              *(_DWORD *)translations = 67110658;
              *(_DWORD *)&translations[4] = v94;
              *(_WORD *)&translations[8] = 2082;
              *(_QWORD *)&translations[10] = "void CRLWPCoreTextTypesetter::createLineVectorForLineFragment(CRLWPLineFrag"
                                             "ment *, const CRLWPLayoutState *, BOOL, CRLWPLayoutFlags) const";
              v323 = 2082;
              v324 = "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm";
              v325 = 1024;
              v326 = 2996;
              v327 = 2048;
              v328 = (const char *)v87;
              v329 = 2114;
              v330 = v174;
              v331 = 1024;
              v332 = v93;
              _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)v95, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Attachment spanning wrong number of glyphs (%lu) range: %{public}@ %x", translations, 0x3Cu);

            }
            if (qword_10147E370 != -1)
              dispatch_once(&qword_10147E370, &stru_1012499F0);
            v96 = off_1013D9070;
            if (os_log_type_enabled((os_log_t)v96, OS_LOG_TYPE_ERROR))
            {
              v177 = (id)objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
              *(_DWORD *)translations = 67109378;
              *(_DWORD *)&translations[4] = v94;
              *(_WORD *)&translations[8] = 2114;
              *(_QWORD *)&translations[10] = v177;
              _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)v96, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: Assertion backtrace: >>%{public}@<<", translations, 0x12u);

            }
            v97 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "void CRLWPCoreTextTypesetter::createLineVectorForLineFragment(CRLWPLineFragment *, const CRLWPLayoutState *, BOOL, CRLWPLayoutFlags) const"));
            v98 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm"));
            v99 = NSStringFromRange((NSRange)StringRange);
            v100 = (void *)objc_claimAutoreleasedReturnValue(v99);
            +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v97, v98, 2996, 0, "Attachment spanning wrong number of glyphs (%lu) range: %{public}@ %x", v87, v100, v93);
          }
          else
          {
            v101 = +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
            if (qword_10147E370 != -1)
              dispatch_once(&qword_10147E370, &stru_101249A10);
            v102 = off_1013D9070;
            if (os_log_type_enabled((os_log_t)v102, OS_LOG_TYPE_ERROR))
            {
              v175 = NSStringFromRange((NSRange)StringRange);
              v176 = (id)objc_claimAutoreleasedReturnValue(v175);
              *(_DWORD *)translations = 67110658;
              *(_DWORD *)&translations[4] = v101;
              *(_WORD *)&translations[8] = 2082;
              *(_QWORD *)&translations[10] = "void CRLWPCoreTextTypesetter::createLineVectorForLineFragment(CRLWPLineFrag"
                                             "ment *, const CRLWPLayoutState *, BOOL, CRLWPLayoutFlags) const";
              v323 = 2082;
              v324 = "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm";
              v325 = 1024;
              v326 = 2998;
              v327 = 2048;
              v328 = (const char *)v87;
              v329 = 2114;
              v330 = v176;
              v331 = 1024;
              v332 = v93;
              _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)v102, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Footnote spanning wrong number of glyphs (%lu) range: %{public}@ %x", translations, 0x3Cu);

            }
            if (qword_10147E370 != -1)
              dispatch_once(&qword_10147E370, &stru_101249A30);
            v103 = off_1013D9070;
            if (os_log_type_enabled((os_log_t)v103, OS_LOG_TYPE_ERROR))
            {
              v178 = (id)objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
              *(_DWORD *)translations = 67109378;
              *(_DWORD *)&translations[4] = v101;
              *(_WORD *)&translations[8] = 2114;
              *(_QWORD *)&translations[10] = v178;
              _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)v103, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: Assertion backtrace: >>%{public}@<<", translations, 0x12u);

            }
            v97 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "void CRLWPCoreTextTypesetter::createLineVectorForLineFragment(CRLWPLineFragment *, const CRLWPLayoutState *, BOOL, CRLWPLayoutFlags) const"));
            v98 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm"));
            v104 = NSStringFromRange((NSRange)StringRange);
            v100 = (void *)objc_claimAutoreleasedReturnValue(v104);
            +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v97, v98, 2998, 0, "Footnote spanning wrong number of glyphs (%lu) range: %{public}@ %x", v87, v100, v93);
          }

        }
        v105 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v289, "objectForKeyedSubscript:", CFSTR("CRLWPUnderline")));
        v106 = objc_msgSend(v105, "integerValue");

        v107 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v289, "objectForKeyedSubscript:", CFSTR("CRLWPStrikethrough")));
        v108 = (uint64_t)objc_msgSend(v107, "integerValue");

        v283 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v289, "objectForKeyedSubscript:", CFSTR("CRLWPTextBackgroundColor")));
        v110 = objc_opt_class(NSArray, v109);
        v111 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v289, "objectForKeyedSubscript:", CFSTR("CRLWPTextHighlightsAttribute")));
        v112 = sub_100221D0C(v110, v111);
        v281 = (void *)objc_claimAutoreleasedReturnValue(v112);

        if (!v87)
        {
          v124 = v287;
          goto LABEL_311;
        }
        sub_10002B980(buffer, v87);
        v348.location = 0;
        v348.length = v87;
        CTRunGetStringIndices(v85, v348, buffer[0]);
        sub_10002BA68(v311, v87);
        v349.location = 0;
        v349.length = v87;
        CTRunGetPositions(v85, v349, v311[0]);
        sub_10027DCE8(v310, v87);
        v350.location = 0;
        v350.length = v87;
        CTRunGetAdvances(v85, v350, v310[0]);
        v113 = *(_QWORD *)(v303 + 232);
        if (!v113 || *(__int16 *)(*(_QWORD *)(v303 + 64) + 2 * *buffer[0]) != -4)
        {
          ascent = 0.0;
          descent = 0.0;
          leading = 0.0;
LABEL_150:
          v351.location = 0;
          v351.length = v87;
          v116 = CTRunGetTypographicBounds(v85, v351, &ascent, &descent, &leading);
          v117 = 0;
          goto LABEL_151;
        }
        v114 = (double *)sub_1004B14AC(v113, *buffer[0]);
        ascent = 0.0;
        descent = 0.0;
        leading = 0.0;
        if (!v114)
          goto LABEL_150;
        v115 = v114[4];
        ascent = v114[3] * 0.5;
        descent = ascent;
        v116 = v115 + v114[5];
        v117 = 1;
LABEL_151:
        v118 = (CTRunGetStatus(v85) >> 2) & 1;
        if (!*(_BYTE *)(v303 + 27))
          v118 = 0;
        v290 = v118;
        v119 = objc_msgSend(*(id *)(v303 + 112), "objectAtIndexedSubscript:", sub_10027A650(v303, *buffer[0]));
        v120 = (void *)objc_claimAutoreleasedReturnValue(v119);
        v121 = objc_msgSend(v120, "ctFont");

        cf1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v289, "objectForKeyedSubscript:", kCTFontAttributeName));
        if (!cf1 || !v121 || !CFEqual(cf1, v121))
          *(_QWORD *)(v287 + 24) |= 0x80uLL;
        if ((v288 & 0x1000) != 0 || v282 != v272)
        {
          v122 = 0.0;
          if (((v282 == 0) & (v288 >> 12)) != 0)
            v123 = TrailingWhitespaceWidth;
          else
            v123 = 0.0;
        }
        else
        {
          v122 = sub_10027A880(v303, 0, *(_BYTE *)(v303 + 27), v87, (uint64_t)v311[0], (uint64_t)v310[0], (uint64_t)buffer[0], TrailingWhitespaceWidth);
          v123 = 0.0;
        }
        if (v290)
        {
          characters = 0;
          characters = *(_WORD *)(*(_QWORD *)(v303 + 64) + 2 * *buffer[0]);
          glyphs = 0;
          if (CTFontGetGlyphsForCharacters((CTFontRef)cf1, &characters, &glyphs, 1))
          {
            CTFontGetVerticalTranslationsForGlyphs((CTFontRef)cf1, &glyphs, (CGSize *)translations, 1);
            v125 = v66 - v311[0]->y + *(double *)&translations[8];
          }
          else
          {
            v125 = sub_1004B0B8C(v287, StringRange.location);
          }
        }
        else
        {
          v125 = v66 + v311[0]->x;
        }
        v126 = sub_1001448FC(v287);
        v127 = v123 + v125;
        v128 = v116 - (v123 + v122);
        v129 = StringRange.location + StringRange.length;
        v130 = -0.0;
        if ((v126 & (StringRange.location + StringRange.length == charIndex)) != 0)
          v130 = TypographicBounds;
        v131 = v128 + v130;
        if (v128 + v130 > 0.0 || v108 == -1)
        {
          if (v106)
          {
            v132 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(objc_msgSend(v289, "objectForKeyedSubscript:", CFSTR("CRLWPUnderlineColor"))));
            v133 = objc_msgSend(v132, "CGColor");

            if (!v133)
            {
              v133 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v289, "objectForKeyedSubscript:", kCTForegroundColorAttributeName));

            }
            v134 = sub_1001B29F8(*(_QWORD *)(v303 + 96), *(unsigned __int8 *)(v303 + 27), 5);
            if ((_DWORD)v134 != 1
              || (*(_OWORD *)translations = xmmword_100EEE418,
                  (v135 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v303 + 56), "smartFieldAtCharIndex:attributeKind:effectiveRange:", *buffer[0], 7, translations))) == 0)|| (*buffer[0] >= *(_QWORD *)translations? (v136 = *buffer[0] - *(_QWORD *)translations >= *(_QWORD *)&translations[8]): (v136 = 1), !v136 ? (v137 = 0) : (v137 = 1), v135, (v137 & 1) != 0))
            {
              v138 = sub_10005DD18(v279);
              v139 = (void *)objc_claimAutoreleasedReturnValue(v138);
              objc_msgSend(v139, "scaleTextPercent");
              v140 = sub_10013E840(v289);

              v141 = 0;
              v142 = 0;
              v143 = -v140;
              do
              {
                if ((sub_1001AE368(*(unsigned __int16 *)(*(_QWORD *)(v303 + 64) + 2 * buffer[0][v142])) & 1) == 0)
                  break;
                v141 = ++v142 >= v87;
              }
              while (v87 != v142);
              sub_1001B254C((uint64_t)cf1, (uint64_t)v121, (uint64_t)v106, *(unsigned __int8 *)(v303 + 27), *(_QWORD *)(v303 + 80), v134, v143);
              v145 = v144;
              v147 = v146;
              v149 = v148;
              v150 = [CRLWPAdornmentLine alloc];
              if (v106 == (id)2)
                v151 = 2;
              else
                v151 = 1;
              LOBYTE(v265) = 0;
              v152 = -[CRLWPAdornmentLine initWithStart:length:color:thickness:lineCount:underline:adornmentLocation:underLineAdjustment:isWhitespace:renderingDelegate:allowAntialiasing:](v150, "initWithStart:length:color:thickness:lineCount:underline:adornmentLocation:underLineAdjustment:isWhitespace:renderingDelegate:allowAntialiasing:", v133, v151, v106, v134, v141, 0, v127, v145, v131, v147, v149, v265);
              v153 = sub_10013E770(v287);
              v154 = (void *)objc_claimAutoreleasedReturnValue(v153);
              v155 = sub_10027A91C(v154, v152);
              v156 = (void *)objc_claimAutoreleasedReturnValue(v155);

              if (v284 && (_DWORD)v134 == -[CRLWPAdornments location](v291, "location"))
              {
                objc_msgSend(v156, "underlineAdjustment");
                -[CRLWPAdornments setVerticalAdjustment:](v291, "setVerticalAdjustment:");
              }

            }
          }
          if (v108)
          {
            v157 = sub_10005DD18(v279);
            v158 = (void *)objc_claimAutoreleasedReturnValue(v157);
            objc_msgSend(v158, "scaleTextPercent");
            v159 = sub_10013E840(v289);

            v160 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(objc_msgSend(v289, "objectForKeyedSubscript:", CFSTR("CRLWPStrikethroughColor"))));
            v161 = objc_msgSend(v160, "CGColor");

            if (!v161)
            {
              v161 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v289, "objectForKeyedSubscript:", kCTForegroundColorAttributeName));

            }
            sub_1001B2858((uint64_t)v121, *(unsigned __int8 *)(v303 + 27), v290, -v159);
            v164 = v163;
            if (*(_BYTE *)(v303 + 27))
              v165 = 0.0 - v159;
            else
              v165 = v162;
            if (v108 == 2)
              v166 = v163;
            else
              v166 = 0.0;
            if (v108 == -1)
            {
              v167 = objc_msgSend(*(id *)(v303 + 56), "characterAtIndex:", v129 - 1);
              if (sub_1001B0C90(v129 - 1, *(void **)(v303 + 56)))
              {
                v131 = v320 - v127;
              }
              else
              {
                v168 = sub_1001AE2A0((uint64_t)v167) ^ 1;
                if ((_DWORD)v167 == 8232)
                  LOBYTE(v168) = 0;
                v169 = v122;
                if ((v168 & 1) == 0)
                {
                  v170 = v87;
                  v171 = v87;
                  do
                  {
                    if (v171 <= 0)
                    {
                      v169 = v122;
                      goto LABEL_215;
                    }
                    v172 = buffer[0][--v171];
                    --v170;
                  }
                  while (v172 != v129 - 1);
                  v169 = v122 - v310[0][v170].width + 7.0;
                }
LABEL_215:
                v179 = v131 + v169;
                if (v320 - v127 >= v179)
                  v131 = v179;
                else
                  v131 = v320 - v127;
              }
              v108 = 1;
            }
            if (v131 > 0.0)
            {
              v180 = -[CRLWPAdornmentLine initWithStart:length:color:thickness:lineCount:underline:adornmentLocation:underLineAdjustment:]([CRLWPAdornmentLine alloc], "initWithStart:length:color:thickness:lineCount:underline:adornmentLocation:underLineAdjustment:", v161, v108, 0, 0, v127, v165 - v166, v131, v164, 0.0);
              v181 = sub_10013E778(v287);
              v182 = (void *)objc_claimAutoreleasedReturnValue(v181);
              v183 = sub_10027A91C(v182, v180);

            }
          }
        }
        if (v283 && v131 > 0.0)
        {
          v184 = -[CRLWPAdornmentLine initWithStart:length:color:thickness:lineCount:underline:adornmentLocation:underLineAdjustment:]([CRLWPAdornmentLine alloc], "initWithStart:length:color:thickness:lineCount:underline:adornmentLocation:underLineAdjustment:", objc_msgSend(v283, "CGColor"), 0, 0, 0, v127, 0.0, v122 + v131, 0.0, 0.0);
          v185 = sub_10013E780(v287);
          v186 = (void *)objc_claimAutoreleasedReturnValue(v185);
          v187 = sub_10027A91C(v186, v184);

        }
        objc_msgSend(v281, "count");
        v189 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v289, "objectForKeyedSubscript:", CFSTR("CRLWPCharacterFillAttribute")));
        if (v189)
        {
          v190 = (objc_class *)objc_opt_class(CRLFill, v188);
          v191 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v289, "objectForKeyedSubscript:", CFSTR("CRLWPCharacterFillAttribute")));
          v192 = sub_1002223BC(v190, v191);
          v193 = (void *)objc_claimAutoreleasedReturnValue(v192);
          LOBYTE(v190) = objc_msgSend(v193, "fillType") == 0;

          if ((v190 & 1) == 0)
            *(_QWORD *)(v287 + 24) |= 0x400uLL;
        }
        v194 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v289, "objectForKeyedSubscript:", CFSTR("CRLWPCharacterStrokeAttribute")));
        if (v194)
        {
          v195 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v289, "objectForKeyedSubscript:", CFSTR("CRLWPCharacterFillAttribute")));
          v196 = v195 == 0;

          if (v196)
            *(_QWORD *)(v287 + 24) |= 0x400uLL;
        }
        v197 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v289, "objectForKeyedSubscript:", CFSTR("CRLWPInvisibleTextAttribute")));
        v198 = v197 == 0;

        if (!v198)
          *(_QWORD *)(v287 + 24) |= 0x400uLL;
        v199 = 0;
        if (v87 <= 1)
          v200 = 1;
        else
          v200 = v87;
        v201 = v284;
        v202 = (const __CTFont *)cf1;
        do
        {
          v203 = 0;
          v204 = buffer[0][v199];
          v205 = *(unsigned __int16 *)(*(_QWORD *)(v303 + 64) + 2 * v204);
          v206 = 1;
          if (*(unsigned __int16 *)(*(_QWORD *)(v303 + 64) + 2 * v204) < 0x2000u)
          {
            if (v205 > 0x20)
              goto LABEL_249;
            if (((1 << v205) & 0x3C30) != 0)
            {
LABEL_246:
              x = v311[0][v199].x;
              v203 = 0;
              if ((v288 & 0x1000) != 0)
                x = x + v310[0][v199].width;
              v206 = 1;
              goto LABEL_249;
            }
            if (v205 == 9)
            {
              v212 = v311[0][v199].x;
              MaxX = CGRectGetMaxX(*(CGRect *)(v287 + 40));
              if ((v288 & 0x1000) != 0)
                v215 = MaxX - (v66 + v212 + v310[0][v199].width);
              else
                v215 = v212 + offset;
              v216 = (objc_class *)objc_opt_class(CRLWPTabs, v213);
              v217 = sub_10005DD58(v279);
              v218 = (void *)objc_claimAutoreleasedReturnValue(v217);
              v219 = sub_1002223BC(v216, v218);
              v297 = (void *)objc_claimAutoreleasedReturnValue(v219);

              v220 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v297, "tabAfterPosition:", v215));
              v302 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v220, "leader"));

              if (objc_msgSend(v302, "length")
                && (objc_msgSend(v302, "isEqualToString:", CFSTR(" ")) & 1) == 0)
              {
                width = v310[0][v199].width;
                v293 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v303 + 56), "characterStyleAtCharIndex:effectiveRange:", v204, 0));
                v295 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v303 + 56), "paragraphStyleAtCharIndex:effectiveRange:", v204, 0));
                v222 = sub_10005DD18(v279);
                v223 = (void *)objc_claimAutoreleasedReturnValue(v222);
                v224 = sub_10026CF48(v295, v293, (unint64_t)objc_msgSend(v223, "scaleTextPercent"), 1u, 1);
                v225 = (void *)objc_claimAutoreleasedReturnValue(v224);
                v299 = objc_msgSend(v225, "mutableCopy");

                if (v299)
                {
                  if (width > 0.0)
                  {
                    if (*(_BYTE *)(v279 + 349)
                      && (v226 = (void *)objc_claimAutoreleasedReturnValue(+[CRLWPTab tabStopLeaderStringArrow](CRLWPTab, "tabStopLeaderStringArrow")), v227 = objc_msgSend(v302, "isEqualToString:", v226), v226, v227))
                    {
                      v228 = (void *)objc_claimAutoreleasedReturnValue(+[CRLWPTab tabStopLeaderStringArrowRTL](CRLWPTab, "tabStopLeaderStringArrowRTL"));

                    }
                    else
                    {
                      v228 = v302;
                    }
                    v302 = v228;
                    v234 = (const __CFAttributedString *)objc_msgSend(objc_alloc((Class)NSAttributedString), "initWithString:attributes:", v302, v299);
                    v235 = CTLineCreateWithAttributedString(v234);

                    v236 = CTLineGetTypographicBounds(v235, 0, 0, 0);
                    CFRelease(v235);
                    v237 = v302;
                    if (v236 <= 0.0)
                    {
                      v244 = 1;
                    }
                    else
                    {
                      v238 = width / v236;
                      v239 = vcvtms_u32_f32(v238);
                      while (v239)
                      {
                        v240 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(&stru_1012A72B0, "stringByPaddingToLength:withString:startingAtIndex:", v239, v237, 0));
                        v241 = (const __CFAttributedString *)objc_msgSend(objc_alloc((Class)NSAttributedString), "initWithString:attributes:", v240, v299);
                        v242 = CTLineCreateWithAttributedString(v241);

                        v243 = CTLineGetTypographicBounds(v242, 0, 0, 0);
                        CFRelease(v242);

                        --v239;
                        v237 = v302;
                        if (v243 <= width)
                        {
                          v244 = v239 + 1;
                          goto LABEL_288;
                        }
                      }
                      v244 = 0;
                    }
LABEL_288:
                    v245 = 0;
                    v246 = 0.0;
                    while (1)
                    {
                      v247 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(&stru_1012A72B0, "stringByPaddingToLength:withString:startingAtIndex:", v244, v237, 0));
                      v248 = (const __CFAttributedString *)objc_msgSend(objc_alloc((Class)NSAttributedString), "initWithString:attributes:", v247, v299);
                      v249 = CTLineCreateWithAttributedString(v248);

                      v250 = CTLineGetTypographicBounds(v249, 0, 0, 0);
                      v251 = v250;
                      if (v250 <= v246 || v250 > width)
                        break;
                      if (v245)
                        CFRelease(v245);

                      ++v244;
                      v246 = v251;
                      v245 = v249;
                      v237 = v302;
                    }
                    if (v249)
                      CFRelease(v249);

                    if (v245)
                    {
                      sub_10019F910((uint64_t)translations, v245, v204, 1, 0, width + v212 + *(double *)v336 - v246, 0.0);
                      sub_10013E5F0((uint64_t *)v287, (uint64_t)translations);
                      CFRelease(v245);
                      sub_10019FA00(translations);
                    }
                  }
                }
                else
                {
                  v229 = +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
                  if (qword_10147E370 != -1)
                    dispatch_once(&qword_10147E370, &stru_101249A50);
                  v230 = off_1013D9070;
                  if (os_log_type_enabled((os_log_t)v230, OS_LOG_TYPE_ERROR))
                  {
                    *(_DWORD *)translations = 67110146;
                    *(_DWORD *)&translations[4] = v229;
                    *(_WORD *)&translations[8] = 2082;
                    *(_QWORD *)&translations[10] = "void CRLWPCoreTextTypesetter::createLineVectorForLineFragment(CRLWPLi"
                                                   "neFragment *, const CRLWPLayoutState *, BOOL, CRLWPLayoutFlags) const";
                    v323 = 2082;
                    v324 = "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm";
                    v325 = 1024;
                    v326 = 3331;
                    v327 = 2082;
                    v328 = "tabLeaderAttrs";
                    _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)v230, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d invalid nil value for '%{public}s'", translations, 0x2Cu);
                  }

                  if (qword_10147E370 != -1)
                    dispatch_once(&qword_10147E370, &stru_101249A70);
                  v231 = off_1013D9070;
                  if (os_log_type_enabled((os_log_t)v231, OS_LOG_TYPE_ERROR))
                  {
                    v253 = (id)objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
                    *(_DWORD *)translations = 67109378;
                    *(_DWORD *)&translations[4] = v229;
                    *(_WORD *)&translations[8] = 2114;
                    *(_QWORD *)&translations[10] = v253;
                    _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)v231, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: Assertion backtrace: >>%{public}@<<", translations, 0x12u);

                  }
                  v232 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "void CRLWPCoreTextTypesetter::createLineVectorForLineFragment(CRLWPLineFragment *, const CRLWPLayoutState *, BOOL, CRLWPLayoutFlags) const"));
                  v233 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm"));
                  +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v232, v233, 3331, 0, "invalid nil value for '%{public}s'", "tabLeaderAttrs");

                }
              }

              v206 = 0;
              v203 = 0;
              v201 = v284;
              v202 = (const __CTFont *)cf1;
            }
            else if (v205 == 32)
            {
              goto LABEL_239;
            }
          }
          else
          {
            if ((v205 - 0x2000) <= 0x29)
            {
              if (((1 << v205) & 0xF7F) != 0)
                goto LABEL_239;
              if (((1 << v205) & 0x30000000000) != 0)
                goto LABEL_246;
            }
            if ((_DWORD)v205 == 12288 || (_DWORD)v205 == 8287)
            {
LABEL_239:
              v206 = 0;
              v203 = 1;
            }
          }
LABEL_249:
          if (((v206 | v117 & v203) & v201) == 1)
          {
            v207 = &v311[0][v199];
            v301 = v207->x;
            y = v207->y;
            v208 = run;
            CTRunGetTextMatrix(&v304, run);
            v292 = *(float64x2_t *)&v304.c;
            v294 = *(float64x2_t *)&v304.tx;
            v296 = *(float64x2_t *)&v304.a;
            if (v290)
            {
              *(_WORD *)translations = 0;
              v352.location = v199;
              v352.length = 1;
              CTRunGetGlyphs(v208, v352, (CGGlyph *)translations);
              BoundingRectsForGlyphs = CTFontGetBoundingRectsForGlyphs(v202, kCTFontOrientationVertical, (const CGGlyph *)translations, 0, 1);
              v209 = -BoundingRectsForGlyphs.size.width;
            }
            else
            {
              v209 = v310[0][v199].width;
            }
            v210 = vaddq_f64(v294, vmlaq_n_f64(vmulq_n_f64(v292, y), v296, v301));
            sub_10027AA30(v303, v291, v205, buffer[0][v199], v313, v117, v210.f64[0], v210.f64[1], v209, v314.width);
          }
          ++v199;
        }
        while (v199 != v200);
        v254 = (__CFString *)CTFontCopyFamilyName(v202);
        if (-[__CFString isEqualToString:](v254, "isEqualToString:", CFSTR("Zapfino")))
          *(_QWORD *)(v287 + 24) |= 0x40000uLL;

        if (v310[0])
        {
          v310[1] = v310[0];
          operator delete(v310[0]);
        }
        v124 = v287;
        if (v311[0])
        {
          v311[1] = v311[0];
          operator delete(v311[0]);
        }
        if (buffer[0])
        {
          buffer[1] = buffer[0];
          operator delete(buffer[0]);
        }
LABEL_311:
        if (-[CRLWPAdornments positionCount](v291, "positionCount"))
          sub_10013E798(v124, (uint64_t)v291);

        ++v282;
        v285 = (char *)v285 + 1;
        v79 = v303;
      }
      while (v285 != v278);
      v83 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v316, v333, 16);
      if (!v83)
      {
LABEL_317:

        if ((*(_BYTE *)(v287 + 25) & 8) != 0)
          sub_10027AB90(x, v256, v279, v287, v269, v270);
        if (sub_1001448FC(v287))
        {
          OffsetForStringIndex = CTLineGetOffsetForStringIndex(line, charIndex, 0);
          v258 = *(double *)v336;
          v259 = sub_10005DD18(v279);
          v260 = (void *)objc_claimAutoreleasedReturnValue(v259);
          v261 = sub_10005DD18(v279);
          v262 = (void *)objc_claimAutoreleasedReturnValue(v261);
          objc_msgSend(v262, "scaleTextPercent");
          v263 = CRLWPShapeLayout.gap(forColumnIndex:bodyWidth:)();
          sub_10019F910((uint64_t)translations, cf, 0x7FFFFFFFFFFFFFFFLL, 0, 2, OffsetForStringIndex + v258, v263);

          sub_10013E5F0((uint64_t *)v287, (uint64_t)translations);
          if (cf)
            CFRelease(cf);
          sub_10019FA00(translations);
        }
        CFRelease(line);

        sub_10019FA00(buf);
        v75 = v287;
        return sub_100149318(v75);
      }
    }
  }
  return sub_100149318(v75);
}

void sub_100276D08(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

BOOL sub_1002772C8(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4)
{
  CFIndex v7;
  _BOOL8 result;
  uint64_t v9;

  v7 = sub_100145018(a2);
  result = v7 == 1;
  if (a4 > a3 && v7 != 1)
  {
    while (1)
    {
      v9 = a4--;
      if (a4 <= a3)
        break;
      if ((sub_1001AE368(*(unsigned __int16 *)(*(_QWORD *)(a1 + 64) + 2 * v9 - 2)) & 1) == 0)
        goto LABEL_7;
    }
    a4 = a3;
LABEL_7:
    if (a3 + 2 == v9)
      return (*(_WORD *)(*(_QWORD *)(a1 + 64) + 2 * a4) & 0xFC00) == 56320;
    else
      return a4 == a3;
  }
  return result;
}

void sub_100277370(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_1002773A0(uint64_t a1, uint64_t a2, char *a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  void *v12;
  char *v13;
  unint64_t v14;
  CGFloat v15;
  CGFloat v16;
  CGFloat v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  CGFloat v23;
  CGFloat v24;
  CGFloat v25;
  CGFloat v26;
  void *v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  CGRect v32;
  CGRect v33;

  v8 = *(_QWORD *)a2;
  v9 = *(_QWORD *)(a2 + 224);
  v10 = objc_msgSend(*(id *)(a1 + 112), "count");
  if ((unint64_t)objc_msgSend(*(id *)(a1 + 112), "count") >= 2)
  {
    v11 = 1;
    while (1)
    {
      v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 112), "objectAtIndexedSubscript:", v11));
      v13 = (char *)objc_msgSend(v12, "charIndex");

      if (v13 > a3)
        break;
      if (++v11 >= (unint64_t)objc_msgSend(*(id *)(a1 + 112), "count"))
        goto LABEL_7;
    }
    v10 = (id)v11;
  }
LABEL_7:
  v14 = (unint64_t)v10 - 1;
  v15 = *(double *)(v8 + 464);
  v16 = *(double *)(v8 + 472);
  v17 = *(double *)(v8 + 488);
  if (*(double *)(v8 + 480) == 0.0)
    v18 = 1.0;
  else
    v18 = *(double *)(v8 + 480);
  v19 = sub_100278D84(a1, (uint64_t *)a2, v14, a3, a4, *(CGFloat *)(v8 + 464), *(CGFloat *)(v8 + 472), v18, *(CGFloat *)(v8 + 488));
  if ((*(_DWORD *)(v9 + 24) & 0x20000020) != 0)
    v19 = sub_100278D84(a1, (uint64_t *)a2, v14, a3, a4, v15, v16, v18, v17);
  v23 = v19;
  v24 = v20;
  v25 = v21;
  v26 = v22;
  *(double *)(a1 + 160) = *(double *)(a2 + 216) - fmax(*(double *)(a1 + 136), *(double *)(a1 + 128));
  v27 = (void *)objc_claimAutoreleasedReturnValue(+[CRLWPFontMetricsCache sharedCache](CRLWPFontMetricsCache, "sharedCache"));
  objc_msgSend(v27, "validateFontHeightInfo:description:", a1 + 120, CFSTR("calcHeightInfo"));

  v28 = *(_OWORD *)(a1 + 120);
  *(_OWORD *)(v9 + 120) = *(_OWORD *)(a1 + 136);
  *(_OWORD *)(v9 + 104) = v28;
  v29 = *(_OWORD *)(a1 + 152);
  v30 = *(_OWORD *)(a1 + 168);
  v31 = *(_OWORD *)(a1 + 184);
  *(_OWORD *)(v9 + 184) = *(_OWORD *)(a1 + 200);
  *(_OWORD *)(v9 + 168) = v31;
  *(_OWORD *)(v9 + 152) = v30;
  *(_OWORD *)(v9 + 136) = v29;
  v33.size.height = sub_100148E84((double *)v9, *(_QWORD *)(v8 + 272), 0, *(double *)(v8 + 312));
  v33.origin.x = *(CGFloat *)(v9 + 40);
  v33.origin.y = *(CGFloat *)(v9 + 48);
  v33.size.width = *(CGFloat *)(v9 + 56);
  *(CGFloat *)(v9 + 64) = v33.size.height;
  v32.origin.x = v23;
  v32.origin.y = v24;
  v32.size.width = v25;
  v32.size.height = v26;
  *(CGRect *)(v9 + 72) = CGRectUnion(v32, v33);
}

void sub_1002775A4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002775B8(uint64_t a1, uint64_t a2, double *a3, double *a4)
{
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *i;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  double v21;
  void *j;
  void *v23;
  double v24;
  id v25;
  void *v26;
  id v27;
  __int128 v28;
  uint64_t v29;
  void *v30;
  void *v31;
  id v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  unsigned int v45;
  NSObject *v46;
  void *v47;
  void *v48;
  void *v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  double v56;
  char *v57;
  id v58;
  void *v59;
  id v60;
  uint64_t v61;
  void *k;
  void *v63;
  double v64;
  double v65;
  double v66;
  double v67;
  double v68;
  double v69;
  double v70;
  double v71;
  double v72;
  double v73;
  double v74;
  __int128 v75;
  unsigned int v76;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  uint8_t v94[128];
  uint8_t buf[4];
  unsigned int v96;
  __int16 v97;
  const char *v98;
  __int16 v99;
  const char *v100;
  __int16 v101;
  int v102;
  _BYTE v103[128];
  _BYTE v104[128];
  _BYTE v105[128];

  v5 = *(_QWORD *)(a2 + 224);
  v6 = sub_10013E790(v5);
  v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
  v8 = objc_msgSend(v7, "count");

  if (v8)
  {
    v92 = 0u;
    v93 = 0u;
    v90 = 0u;
    v91 = 0u;
    v9 = sub_10013E790(v5);
    v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
    v11 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v90, v105, 16);
    if (v11)
    {
      v12 = *(_QWORD *)v91;
      while (2)
      {
        for (i = 0; i != v11; i = (char *)i + 1)
        {
          if (*(_QWORD *)v91 != v12)
            objc_enumerationMutation(v10);
          v14 = *(void **)(*((_QWORD *)&v90 + 1) + 8 * (_QWORD)i);
          if (objc_msgSend(v14, "type") == 4)
          {
            v76 = objc_msgSend(v14, "location");

            if (v76 == 1)
            {
              v15 = sub_10013E6D4(v5);
              if (v15)
                sub_10027BD90(v15, v16, v5);
              v76 = 1;
            }
            goto LABEL_15;
          }
        }
        v11 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v90, v105, 16);
        if (v11)
          continue;
        break;
      }
    }

    v76 = 0;
LABEL_15:
    *a3 = 0.0;
    *a4 = 0.0;
    v86 = 0u;
    v87 = 0u;
    v88 = 0u;
    v89 = 0u;
    v17 = sub_10013E790(v5);
    v18 = (void *)objc_claimAutoreleasedReturnValue(v17);
    v19 = objc_msgSend(v18, "countByEnumeratingWithState:objects:count:", &v86, v104, 16);
    if (v19)
    {
      v20 = *(_QWORD *)v87;
      v21 = 0.0;
      do
      {
        for (j = 0; j != v19; j = (char *)j + 1)
        {
          if (*(_QWORD *)v87 != v20)
            objc_enumerationMutation(v18);
          v23 = *(void **)(*((_QWORD *)&v86 + 1) + 8 * (_QWORD)j);
          if (objc_msgSend(v23, "type") == 4)
          {
            objc_msgSend(v23, "verticalAdjustment");
            if (v21 < v24)
              v21 = v24;
          }
        }
        v19 = objc_msgSend(v18, "countByEnumeratingWithState:objects:count:", &v86, v104, 16);
      }
      while (v19);
    }
    else
    {
      v21 = 0.0;
    }

    v84 = 0u;
    v85 = 0u;
    v82 = 0u;
    v83 = 0u;
    v25 = sub_10013E790(v5);
    v26 = (void *)objc_claimAutoreleasedReturnValue(v25);
    v27 = objc_msgSend(v26, "countByEnumeratingWithState:objects:count:", &v82, v103, 16);
    if (v27)
    {
      v29 = *(_QWORD *)v83;
      *(_QWORD *)&v28 = 67109378;
      v75 = v28;
      do
      {
        v30 = 0;
        do
        {
          if (*(_QWORD *)v83 != v29)
            objc_enumerationMutation(v26);
          v31 = *(void **)(*((_QWORD *)&v82 + 1) + 8 * (_QWORD)v30);
          if (objc_msgSend(v31, "type", v75) == 4)
          {
            v32 = v31;
            objc_msgSend(v32, "textPosition");
            v34 = v33;
            v36 = v35;
            objc_msgSend(v32, "setVerticalAdjustment:", v21);
            if (v34 == 0.0 && v36 == 0.0)
            {
              if ((*(_BYTE *)(v5 + 25) & 0x20) != 0)
              {
                v42 = (*(double *)(v5 + 120) + *(double *)(v5 + 136)) * 0.5;
                if (v76 != 2)
                {
                  objc_msgSend(v32, "verticalAdjustment");
                  v55 = v54;
                  objc_msgSend(v32, "ascent");
                  v42 = -v42 - v55;
                  goto LABEL_52;
                }
                v45 = +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
                if (qword_10147E370 != -1)
                  dispatch_once(&qword_10147E370, &stru_10124A098);
                v46 = off_1013D9070;
                if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
                {
                  *(_DWORD *)buf = 67109890;
                  v96 = v45;
                  v97 = 2082;
                  v98 = "void CRLWPCoreTextTypesetter::pAdjustEmphasisMarksForLineFragment(CRLWPTypesetterParamBlock *con"
                        "st, CGFloat &, CGFloat &)";
                  v99 = 2082;
                  v100 = "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm";
                  v101 = 1024;
                  v102 = 4451;
                  _os_log_error_impl((void *)&_mh_execute_header, v46, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Vertical below is not currently supported.", buf, 0x22u);
                }
                if (qword_10147E370 != -1)
                  dispatch_once(&qword_10147E370, &stru_10124A0B8);
                v47 = off_1013D9070;
                if (os_log_type_enabled((os_log_t)v47, OS_LOG_TYPE_ERROR))
                {
                  v57 = (char *)objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
                  *(_DWORD *)buf = v75;
                  v96 = v45;
                  v97 = 2114;
                  v98 = v57;
                  _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)v47, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: Assertion backtrace: >>%{public}@<<", buf, 0x12u);

                }
                v48 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "void CRLWPCoreTextTypesetter::pAdjustEmphasisMarksForLineFragment(CRLWPTypesetterParamBlock *const, CGFloat &, CGFloat &)"));
                v49 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm"));
                +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v48, v49, 4451, 0, "Vertical below is not currently supported.");

              }
              else
              {
                if (v76 == 2)
                {
                  v37 = *(double *)(v5 + 136);
                  objc_msgSend(v32, "verticalAdjustment");
                  v39 = v38;
                  objc_msgSend(v32, "ascent");
                  v41 = v40;
                  objc_msgSend(v32, "descent");
                  v42 = v37 + 0.0 + v39 + v41;
                  v44 = v42 + v43 - *(double *)(v5 + 136);
                  if (*a4 >= v44)
                    v44 = *a4;
                  *a4 = v44;
                  goto LABEL_55;
                }
                v50 = *(double *)(v5 + 120);
                objc_msgSend(v32, "verticalAdjustment");
                v52 = v51;
                objc_msgSend(v32, "ascent");
                v42 = 0.0 - v50 - v52;
LABEL_52:
                v56 = -(v42 - v53 + *(double *)(v5 + 120));
                if (*a3 >= v56)
                  v56 = *a3;
                *a3 = v56;
              }
LABEL_55:
              objc_msgSend(v32, "setTextPosition:", 0.0, v42);
            }

          }
          v30 = (char *)v30 + 1;
        }
        while (v27 != v30);
        v27 = objc_msgSend(v26, "countByEnumeratingWithState:objects:count:", &v82, v103, 16);
      }
      while (v27);
    }

  }
  v80 = 0u;
  v81 = 0u;
  v78 = 0u;
  v79 = 0u;
  v58 = sub_10013E770(v5);
  v59 = (void *)objc_claimAutoreleasedReturnValue(v58);
  v60 = objc_msgSend(v59, "countByEnumeratingWithState:objects:count:", &v78, v94, 16);
  if (v60)
  {
    v61 = *(_QWORD *)v79;
    do
    {
      for (k = 0; k != v60; k = (char *)k + 1)
      {
        if (*(_QWORD *)v79 != v61)
          objc_enumerationMutation(v59);
        v63 = *(void **)(*((_QWORD *)&v78 + 1) + 8 * (_QWORD)k);
        if (objc_msgSend(v63, "underline"))
        {
          objc_msgSend(v63, "thickness");
          v65 = v64;
          if (objc_msgSend(v63, "underline") == (id)2)
          {
            v65 = v65 * 3.0;
          }
          else if (objc_msgSend(v63, "underline") == (id)3 && (*(_BYTE *)(v5 + 25) & 0x20) == 0)
          {
            v66 = sub_1001B2528(v65);
            v65 = v66 + v66;
          }
          objc_msgSend(v63, "start");
          v68 = v67;
          if (objc_msgSend(v63, "adornmentLocation") == 2)
          {
            v69 = v65 * 0.5 + v68;
            v70 = *(double *)(v5 + 136);
            if (v69 > v70)
            {
              v71 = v69 - v70;
              if (*a4 >= v71)
                v71 = *a4;
              *a4 = v71;
            }
          }
          else if (objc_msgSend(v63, "adornmentLocation") == 1)
          {
            v72 = v68 + v65 * -0.5;
            v73 = *(double *)(v5 + 120);
            if (v72 < v73)
            {
              v74 = -(v72 + v73);
              if (*a3 >= v74)
                v74 = *a3;
              *a3 = v74;
            }
          }
        }
      }
      v60 = objc_msgSend(v59, "countByEnumeratingWithState:objects:count:", &v78, v94, 16);
    }
    while (v60);
  }

}

void sub_100277D40(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100277DFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v6;
  double v7;
  CGFloat height;
  double v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  double v15;
  double v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  double v26;
  double v27;
  char *v28;
  char *v29;
  char *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char *v35;
  char *v36;
  char *v37;
  __int128 v38;
  char *v39;
  double v40;
  uint64_t v41;
  double v42;
  uint64_t v43;
  id v44;
  void *v45;
  id v46;
  uint64_t v47;
  double v48;
  double v49;
  double v50;
  void *i;
  void *v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  double v58;
  double v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  double v65;
  double v66;
  char *v67;
  char *v68;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  char *v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  unint64_t v76;
  char *v77;
  char *v78;
  char *v79;
  __int128 v80;
  char *v81;
  double *v82;
  double v83;
  double v84;
  uint64_t v85;
  uint64_t v86;
  double v87;
  CGFloat v88;
  uint64_t v89;
  uint64_t v90;
  double v91;
  double v92;
  double v93;
  double v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  void *__p;
  char *v100;
  char *v101;
  _BYTE v102[128];
  CGRect v103;
  CGRect v104;
  CGRect v105;
  CGRect v106;
  CGRect v107;

  v6 = *(double *)(a3 + 72);
  v7 = *(double *)(a3 + 80);
  v9 = *(double *)(a3 + 88);
  height = *(double *)(a3 + 96);
  __p = 0;
  v100 = 0;
  v101 = 0;
  v10 = sub_10013E6D4(a3);
  if (v10)
  {
    v11 = sub_100279AFC(v10, a2, a3);
    v12 = *(_QWORD *)(a3 + 40);
    v14 = *(_QWORD *)(a3 + 56);
    v13 = *(double *)(a3 + 64);
    v15 = v11 + v13;
    v16 = *(double *)(a3 + 48) + v13 - (v11 + v13);
    v17 = (v100 - (_BYTE *)__p) >> 5;
    v18 = v17 + 1;
    if ((unint64_t)(v17 + 1) >> 59)
      sub_100007810();
    v19 = v101 - (_BYTE *)__p;
    if ((v101 - (_BYTE *)__p) >> 4 > v18)
      v18 = v19 >> 4;
    if ((unint64_t)v19 >= 0x7FFFFFFFFFFFFFE0)
      v20 = 0x7FFFFFFFFFFFFFFLL;
    else
      v20 = v18;
    if (v20)
      v21 = (char *)sub_100134CDC((uint64_t)&v101, v20);
    else
      v21 = 0;
    v22 = &v21[32 * v17];
    *(_QWORD *)v22 = v12;
    *((double *)v22 + 1) = v16;
    *((_QWORD *)v22 + 2) = v14;
    *((double *)v22 + 3) = v15;
    __p = v22;
    v101 = &v21[32 * v20];
    v100 = v22 + 32;
  }
  v23 = *(_QWORD *)(a3 + 40);
  v24 = *(double *)(a3 + 48);
  v25 = *(_QWORD *)(a3 + 56);
  v26 = sub_1001321B0((double *)(a3 + 104), a2) + v24;
  if ((*(_BYTE *)(a3 + 25) & 0x20) != 0)
  {
    v27 = 1.79999995;
    v24 = floor(v26 - *(double *)(a3 + 120)) + 1.79999995 * -0.5;
  }
  else
  {
    v27 = floor(v26) + 1.79999995 + 1.79999995 * 0.5 - v24;
  }
  v28 = v100;
  if (v100 >= v101)
  {
    v30 = (char *)__p;
    v31 = (v100 - (_BYTE *)__p) >> 5;
    v32 = v31 + 1;
    if ((unint64_t)(v31 + 1) >> 59)
      sub_100007810();
    v33 = v101 - (_BYTE *)__p;
    if ((v101 - (_BYTE *)__p) >> 4 > v32)
      v32 = v33 >> 4;
    if ((unint64_t)v33 >= 0x7FFFFFFFFFFFFFE0)
      v34 = 0x7FFFFFFFFFFFFFFLL;
    else
      v34 = v32;
    if (v34)
    {
      v35 = (char *)sub_100134CDC((uint64_t)&v101, v34);
      v30 = (char *)__p;
      v28 = v100;
    }
    else
    {
      v35 = 0;
    }
    v36 = &v35[32 * v31];
    *(_QWORD *)v36 = v23;
    *((double *)v36 + 1) = v24;
    v37 = &v35[32 * v34];
    *((_QWORD *)v36 + 2) = v25;
    *((double *)v36 + 3) = v27;
    v29 = v36 + 32;
    if (v28 == v30)
    {
      v39 = v36;
    }
    else
    {
      do
      {
        v38 = *((_OWORD *)v28 - 1);
        v39 = v36 - 32;
        *((_OWORD *)v36 - 2) = *((_OWORD *)v28 - 2);
        *((_OWORD *)v36 - 1) = v38;
        v28 -= 32;
        v36 -= 32;
      }
      while (v28 != v30);
    }
    __p = v39;
    v100 = v29;
    v101 = v37;
    if (v30)
      operator delete(v30);
  }
  else
  {
    *(_QWORD *)v100 = v23;
    *((double *)v28 + 1) = v24;
    v29 = v28 + 32;
    *((_QWORD *)v28 + 2) = v25;
    *((double *)v28 + 3) = v27;
  }
  v100 = v29;
  v40 = sub_1001321B0((double *)(a3 + 104), a2);
  v41 = *(_QWORD *)(a3 + 40);
  v42 = *(double *)(a3 + 48);
  v43 = *(_QWORD *)(a3 + 56);
  v94 = *(double *)(a3 + 64);
  v95 = 0u;
  v96 = 0u;
  v97 = 0u;
  v98 = 0u;
  v44 = sub_10013E790(a3);
  v45 = (void *)objc_claimAutoreleasedReturnValue(v44);
  v46 = objc_msgSend(v45, "countByEnumeratingWithState:objects:count:", &v95, v102, 16);
  v90 = v43;
  v89 = v41;
  v91 = v9;
  v92 = v7;
  v93 = v6;
  if (v46)
  {
    v47 = *(_QWORD *)v96;
    v48 = 0.0;
    v49 = 0.0;
    v50 = 0.0;
    do
    {
      for (i = 0; i != v46; i = (char *)i + 1)
      {
        if (*(_QWORD *)v96 != v47)
          objc_enumerationMutation(v45);
        v52 = *(void **)(*((_QWORD *)&v95 + 1) + 8 * (_QWORD)i);
        if (objc_msgSend(v52, "type") == 4)
        {
          objc_msgSend(v52, "textPosition");
          v54 = v53;
          if (objc_msgSend(v52, "location") == 1)
          {
            objc_msgSend(v52, "ascent");
            v56 = -(v40 + v54 - v55);
            if (v48 < v56)
              v48 = v56;
          }
          else
          {
            objc_msgSend(v52, "descent");
            v63 = v54 - v40 + v62;
            if (v49 < v63)
              v49 = v63;
          }
        }
        else if (objc_msgSend(v52, "type") == 6)
        {
          objc_msgSend(v52, "textPosition");
          v58 = v57;
          objc_msgSend(v52, "descent");
          v60 = v59;
          v61 = *((double *)objc_msgSend(v52, "rects") + 3) * 0.5;
          if (v50 < v58 - v40 + v60 + v61)
            v50 = v58 - v40 + v60 + v61;
        }
      }
      v46 = objc_msgSend(v45, "countByEnumeratingWithState:objects:count:", &v95, v102, 16);
    }
    while (v46);
  }
  else
  {
    v48 = 0.0;
    v49 = 0.0;
    v50 = 0.0;
  }

  v64 = v42 + v94 - (v94 + v48);
  if (v50 >= v49)
    v65 = v50;
  else
    v65 = v49;
  v66 = v94 + v48 + v65;
  v67 = v100;
  if (v100 >= v101)
  {
    v72 = (char *)__p;
    v73 = (v100 - (_BYTE *)__p) >> 5;
    v74 = v73 + 1;
    y = v92;
    x = v93;
    width = v91;
    if ((unint64_t)(v73 + 1) >> 59)
      sub_100007810();
    v75 = v101 - (_BYTE *)__p;
    if ((v101 - (_BYTE *)__p) >> 4 > v74)
      v74 = v75 >> 4;
    if ((unint64_t)v75 >= 0x7FFFFFFFFFFFFFE0)
      v76 = 0x7FFFFFFFFFFFFFFLL;
    else
      v76 = v74;
    if (v76)
    {
      v77 = (char *)sub_100134CDC((uint64_t)&v101, v76);
      v72 = (char *)__p;
      v67 = v100;
    }
    else
    {
      v77 = 0;
    }
    v78 = &v77[32 * v73];
    *(_QWORD *)v78 = v89;
    *((double *)v78 + 1) = v64;
    v79 = &v77[32 * v76];
    *((_QWORD *)v78 + 2) = v90;
    *((double *)v78 + 3) = v66;
    v68 = v78 + 32;
    if (v67 == v72)
    {
      v81 = v78;
    }
    else
    {
      do
      {
        v80 = *((_OWORD *)v67 - 1);
        v81 = v78 - 32;
        *((_OWORD *)v78 - 2) = *((_OWORD *)v67 - 2);
        *((_OWORD *)v78 - 1) = v80;
        v67 -= 32;
        v78 -= 32;
      }
      while (v67 != v72);
    }
    __p = v81;
    v100 = v68;
    v101 = v79;
    if (v72)
      operator delete(v72);
  }
  else
  {
    *(_QWORD *)v100 = v89;
    *((double *)v67 + 1) = v64;
    v68 = v67 + 32;
    *((_QWORD *)v67 + 2) = v90;
    *((double *)v67 + 3) = v66;
    y = v92;
    x = v93;
    width = v91;
  }
  v100 = v68;
  if (*(_BYTE *)(a1 + 29))
  {
    v103.origin.x = x;
    v103.origin.y = y;
    v103.size.width = width;
    v103.size.height = height;
    v104 = CGRectInset(v103, -10.0, 0.0);
    x = v104.origin.x;
    y = v104.origin.y;
    width = v104.size.width;
    height = v104.size.height;
    v68 = v100;
  }
  v82 = (double *)__p;
  if (__p != v68)
  {
    do
    {
      v83 = v82[3];
      if (v83 != INFINITY)
      {
        v84 = *v82;
        v85 = *((_QWORD *)v82 + 1);
        v86 = *((_QWORD *)v82 + 2);
        v105.origin.x = x;
        v105.origin.y = y;
        v105.size.width = width;
        v105.size.height = height;
        v106 = CGRectUnion(v105, *(CGRect *)(&v83 - 3));
        x = v106.origin.x;
        y = v106.origin.y;
        width = v106.size.width;
        height = v106.size.height;
        v68 = v100;
      }
      v82 += 4;
    }
    while (v82 != (double *)v68);
  }
  v87 = 50.0;
  if ((*(_QWORD *)(a3 + 24) & 0x40000) == 0)
    v87 = 0.0;
  v88 = -((*(double *)(a3 + 120) + *(double *)(a3 + 136)) * 0.25 + v87);
  v107.origin.x = x;
  v107.origin.y = y;
  v107.size.width = width;
  v107.size.height = height;
  *(CGRect *)(a3 + 72) = CGRectInset(v107, v88, v88);
  if (__p)
  {
    v100 = (char *)__p;
    operator delete(__p);
  }
}

void sub_100278480(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *__p,uint64_t a26)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_1002784F4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100278524(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100278554(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100278584(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002785B4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002785E4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100278614(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100278644(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100278674(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002786A4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

__CFString *sub_1002786D4(uint64_t a1, _QWORD *a2, uint64_t a3, unint64_t a4, uint64_t a5, _QWORD *a6)
{
  uint64_t v9;
  id v10;
  void *v11;
  void *v12;
  __CFString *v13;
  void *v14;
  void *v15;
  void *v16;

  if (a4 >= 9)
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_1012497B0);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E14DE0();
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_1012497D0);
    v14 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)v14, OS_LOG_TYPE_ERROR))
    {
      objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
      sub_100DE7E60();
    }

    v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "NSString *CRLWPCoreTextTypesetter::pNumberedListLabel(const CRLWPLayoutState *, CRLWPParagraphEnumerator, CRLWPParagraphLevel, BOOL, NSUInteger *) const"));
    v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v15, v16, 2306, 0, "illegal list level");

    v13 = &stru_1012A72B0;
  }
  else
  {
    v9 = objc_opt_class(_TtC8Freeform12CRLWPStorage, a2);
    v10 = sub_100221D0C(v9, *(void **)(a1 + 16));
    v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
    v12 = v11;
    if (a6)
      *a6 = objc_msgSend(v11, "listNumberAtParIndex:", objc_msgSend(v11, "paragraphIndexAtCharIndex:", *a2));
    v13 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "numberedListLabelAtCharIndex:", *a2));

  }
  return v13;
}

void sub_1002788C8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10027890C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027893C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027896C(void *a1, unint64_t a2, uint64_t a3)
{
  __CFString *v5;
  int CharacterAtIndex;
  unsigned int v7;
  void *v8;
  id v9;

  v9 = a1;
  v5 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "string"));
  if (a2 < a2 + a3)
  {
    do
    {
      CharacterAtIndex = CFStringGetCharacterAtIndex(v5, a2);
      v7 = sub_1001ADAC0(CharacterAtIndex);
      if (CharacterAtIndex != v7)
      {
        v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%C"), v7));
        objc_msgSend(v9, "replaceCharactersInRange:withString:", a2, 1, v8);

      }
      ++a2;
      --a3;
    }
    while (a3);
  }

}

void sub_100278A38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_100278A6C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100278A9C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100278ACC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100278AFC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

uint64_t sub_100278B2C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int16 v5;

  v3 = **(_QWORD **)a2 + *(_QWORD *)(*(_QWORD *)(a2 + 224) + 8);
  if (v3)
    v4 = v3 - 1;
  else
    v4 = 0;
  *(_QWORD *)(a2 + 240) = v4;
  if (v3)
    v5 = (unsigned __int16)objc_msgSend(*(id *)(a1 + 16), "characterAtIndex:");
  else
    v5 = 0;
  *(_WORD *)(a2 + 232) = v5;
  return v3;
}

void sub_100278B84(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100278BB4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

id sub_100278BE4()
{
  if (qword_1014152A0 != -1)
    dispatch_once(&qword_1014152A0, &stru_1012497F0);
  return (id)qword_101415298;
}

void sub_100278C24(id a1)
{
  void *v1;
  id v2;
  void *v3;
  NSMutableCharacterSet *v4;

  v4 = objc_opt_new(NSMutableCharacterSet);
  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSCharacterSet whitespaceAndNewlineCharacterSet](NSCharacterSet, "whitespaceAndNewlineCharacterSet"));
  -[NSMutableCharacterSet formUnionWithCharacterSet:](v4, "formUnionWithCharacterSet:", v1);

  -[NSMutableCharacterSet addCharactersInRange:](v4, "addCharactersInRange:", 8232, 1);
  -[NSMutableCharacterSet addCharactersInRange:](v4, "addCharactersInRange:", 65532, 1);
  -[NSMutableCharacterSet addCharactersInRange:](v4, "addCharactersInRange:", 45, 1);
  -[NSMutableCharacterSet removeCharactersInRange:](v4, "removeCharactersInRange:", 160, 1);
  -[NSMutableCharacterSet removeCharactersInRange:](v4, "removeCharactersInRange:", 8239, 1);
  -[NSMutableCharacterSet removeCharactersInRange:](v4, "removeCharactersInRange:", 8199, 1);
  -[NSMutableCharacterSet removeCharactersInRange:](v4, "removeCharactersInRange:", 65279, 1);
  v2 = -[NSMutableCharacterSet copy](v4, "copy");
  v3 = (void *)qword_101415298;
  qword_101415298 = (uint64_t)v2;

}

void sub_100278D04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_100278D24(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100278D54(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

double sub_100278D84(uint64_t a1, uint64_t *a2, unint64_t a3, char *a4, uint64_t a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9)
{
  void *v14;
  void *GlyphRuns;
  uint64_t v16;
  const __CTLine *v17;
  unint64_t v18;
  unint64_t v19;
  double x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  unint64_t v24;
  unint64_t v25;
  void *v26;
  CFDictionaryRef Attributes;
  unint64_t location;
  char *v29;
  void *v30;
  BOOL v31;
  id v32;
  void *v33;
  id v34;
  void *v35;
  CFIndex GlyphCount;
  uint64_t v37;
  int v38;
  void *v39;
  void *v40;
  void *v41;
  BOOL v42;
  int v43;
  void *v44;
  _BOOL4 v45;
  uint64_t v46;
  void *v47;
  void *v48;
  char v49;
  const __CTFont *v50;
  void *v51;
  id v52;
  void *v53;
  id v54;
  void *v55;
  CGFloat v56;
  CGFloat v57;
  CGFloat v58;
  CGFloat v59;
  void *v60;
  id v61;
  void *v62;
  id v63;
  void *v64;
  double v65;
  CGFloat v66;
  unint64_t v67;
  BOOL v68;
  CFStringRef v70;
  void *v72;
  void *v73;
  id v74;
  uint64_t v77;
  uint64_t v79;
  id v80;
  void *v81;
  CFIndex *buffer[3];
  CFRange v83;
  CGRect v84;
  CGRect v85;
  CGRect v86;
  CGRect v87;
  CGRect v88;
  CGRect v89;
  CGRect v90;

  v77 = *a2;
  v79 = a2[28];
  if ((unint64_t)objc_msgSend(*(id *)(a1 + 112), "count") <= a3)
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101249850);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E14E60();
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101249870);
    v72 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)v72, OS_LOG_TYPE_ERROR))
    {
      objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
      sub_100DE7E60();
    }

    v73 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "CGRect CRLWPCoreTextTypesetter::pCalcStyleRunsHeightInfo(CRLWPTypesetterParamBlock *const, const CGRect, const NSUInteger, const NSRange)"));
    v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v73, v14, 2432, 0, "Bad run index");

  }
  GlyphRuns = (void *)sub_10013E640(v79);
  if (GlyphRuns)
  {
    v16 = sub_10013E664(v79, 0);
    v17 = (const __CTLine *)sub_10019FA78(v16);
    GlyphRuns = CTLineGetGlyphRuns(v17);
  }
  v74 = GlyphRuns;
  v80 = objc_msgSend(v74, "count");
  v18 = 0;
  v70 = kCTFontAttributeName;
  v19 = a3;
  x = a6;
  y = a7;
  width = a8;
  height = a9;
  v24 = (unint64_t)v80;
  do
  {
    if (v18 >= v24 || (*(_BYTE *)(v79 + 25) & 0x40) != 0)
    {
      v44 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 112), "objectAtIndexedSubscript:", v19, v70));
      v25 = v18;
      location = (unint64_t)objc_msgSend(v44, "charIndex");

      v45 = 0;
      v32 = 0;
      v81 = 0;
      v46 = 1;
    }
    else
    {
      v25 = v18;
      v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v74, "objectAtIndexedSubscript:", v18));

      Attributes = CTRunGetAttributes((CTRunRef)v26);
      v81 = (void *)objc_claimAutoreleasedReturnValue(Attributes);
      location = CTRunGetStringRange((CTRunRef)v26).location;
      v29 = (char *)a3;
      do
      {
        v19 = (unint64_t)v29;
        if (v29 >= (char *)objc_msgSend(*(id *)(a1 + 112), "count", v70) - 1)
          break;
        v30 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 112), "objectAtIndexedSubscript:", v19 + 1));
        v31 = (unint64_t)objc_msgSend(v30, "charIndex") > location;

        v29 = (char *)(v19 + 1);
      }
      while (!v31);
      v32 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v81, "objectForKeyedSubscript:", v70));

      v33 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 112), "objectAtIndexedSubscript:", v19));
      v34 = objc_msgSend(v33, "ctFont");

      if (v32 == v34)
      {
        v43 = 0;
        v32 = 0;
      }
      else
      {
        v35 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v81, "objectForKeyedSubscript:", kCTVerticalFormsAttributeName));

        if (v35 && CFBooleanGetValue((CFBooleanRef)v35)
          || (GlyphCount = CTRunGetGlyphCount((CTRunRef)v26), GlyphCount < 1))
        {
          v43 = 0;
        }
        else
        {
          sub_10002B980(buffer, GlyphCount);
          v83.location = 0;
          v83.length = 0;
          CTRunGetStringIndices((CTRunRef)v26, v83, buffer[0]);
          v37 = 0;
          while (1)
          {
            v38 = *(unsigned __int16 *)(*(_QWORD *)(a1 + 64) + 2 * buffer[0][v37]);
            if ((sub_1001AE368(*(unsigned __int16 *)(*(_QWORD *)(a1 + 64) + 2 * buffer[0][v37])) & 1) == 0)
            {
              if (v38 != 8209)
                break;
              v39 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 112), "objectAtIndexedSubscript:", v19));
              v40 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v39, "attributes"));
              v41 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v40, "objectForKeyedSubscript:", CFSTR("__wpAttachmentMap")));
              v42 = v41 == 0;

              if (v42)
                break;
            }
            if (GlyphCount == ++v37)
            {
              v43 = 1;
              goto LABEL_33;
            }
          }
          v43 = 0;
LABEL_33:
          if (buffer[0])
          {
            buffer[1] = buffer[0];
            operator delete(buffer[0]);
          }
        }
      }
      v46 = 0;
      v45 = v43 != 0;
    }
    v47 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 112), "objectAtIndexedSubscript:", v19));
    v48 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v81, "objectForKeyedSubscript:", kCTVerticalFormsAttributeName));

    v49 = 0;
    if (*(_BYTE *)(a1 + 27) && v81 && v48)
      v49 = CFBooleanGetValue((CFBooleanRef)v48) != 0;
    if (objc_msgSend(v47, "charIndex") < &a4[a5] || objc_msgSend(v47, "charIndex") == a4 && !a5)
    {
      if ((objc_msgSend(v47, "flags") & 1) != 0)
        objc_msgSend(v47, "charIndex");
      if (location < *(_QWORD *)(a1 + 48) - 1
        || (char *)location == a4
        || (sub_1001AE2A0(*(unsigned __int16 *)(*(_QWORD *)(a1 + 64) + 2 * location)) & 1) == 0)
      {
        if (v45)
          v50 = 0;
        else
          v50 = (const __CTFont *)v32;
        sub_100279718(a1, a2, v47, v50, v49);
      }
      if ((objc_msgSend(v47, "flags") & 4) != 0)
      {
        v51 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v47, "characterStyle"));
        v52 = sub_10005DD08(v77);
        v53 = (void *)objc_claimAutoreleasedReturnValue(v52);
        v54 = sub_1001B1190(v51, v53, 0x12uLL);
        v55 = (void *)objc_claimAutoreleasedReturnValue(v54);

        if (v55 && objc_msgSend(v55, "isEnabled"))
        {
          objc_msgSend(v55, "shadowBoundsForRect:", a6, a7, a8, a9);
          v89.origin.x = v56;
          v89.origin.y = v57;
          v89.size.width = v58;
          v89.size.height = v59;
          v84.origin.x = x;
          v84.origin.y = y;
          v84.size.width = width;
          v84.size.height = height;
          v85 = CGRectUnion(v84, v89);
          x = v85.origin.x;
          y = v85.origin.y;
          width = v85.size.width;
          height = v85.size.height;
          *(_QWORD *)(v79 + 24) |= 0x20uLL;
        }

      }
      if ((objc_msgSend(v47, "flags") & 8) != 0)
      {
        v60 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v47, "characterStyle"));
        v61 = sub_10005DD08(v77);
        v62 = (void *)objc_claimAutoreleasedReturnValue(v61);
        v63 = sub_1001B1190(v60, v62, 6uLL);
        v64 = (void *)objc_claimAutoreleasedReturnValue(v63);

        if (v64)
        {
          objc_msgSend(v64, "renderedWidth");
          v66 = v65 * -0.5;
          v86.origin.x = a6;
          v86.origin.y = a7;
          v86.size.width = a8;
          v86.size.height = a9;
          v90 = CGRectInset(v86, v66, v66);
          v87.origin.x = x;
          v87.origin.y = y;
          v87.size.width = width;
          v87.size.height = height;
          v88 = CGRectUnion(v87, v90);
          x = v88.origin.x;
          y = v88.origin.y;
          width = v88.size.width;
          height = v88.size.height;
          *(_QWORD *)(v79 + 24) |= 0x20000000uLL;
        }

      }
      if ((objc_msgSend(v47, "flags") & 0x10) != 0)
        *(_QWORD *)(v79 + 24) |= 0x40000000uLL;
      if ((objc_msgSend(v47, "flags") & 0x20) != 0)
        *(_QWORD *)(v79 + 24) |= 0x80000000uLL;
    }

    v67 = v25 + 1;
    v19 += v46;
    if (v80)
    {
      v24 = (unint64_t)v80;
      v68 = v67 >= (unint64_t)v80;
    }
    else
    {
      v68 = v19 >= (unint64_t)objc_msgSend(*(id *)(a1 + 112), "count");
      v24 = 0;
    }
    v18 = v67;
  }
  while (!v68);

  return x;
}

void sub_10027951C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23)
{

  _Unwind_Resume(a1);
}

void sub_1002796B8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002796E8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100279718(uint64_t a1, uint64_t *a2, void *a3, const __CTFont *a4, char a5)
{
  id v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  void *v14;
  int v15;
  _BOOL4 v16;
  CGFloat Size;
  const __CTFont *CopyWithAttributes;
  void *v19;
  id v20;
  void *v21;
  double v22;
  double CapHeight;
  double v24;
  double Descent;
  double v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;

  v9 = a3;
  v10 = v9;
  v11 = *a2;
  if (!a4)
    a4 = (const __CTFont *)objc_msgSend(v9, "ctFont");
  if (*(_BYTE *)(a1 + 27))
    a4 = sub_1001ADD14(a4);
  v37 = 0u;
  v38 = 0u;
  v35 = 0u;
  v36 = 0u;
  v33 = 0u;
  v34 = 0u;
  sub_1001B21AC((uint64_t)a4, &v33);
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "characterStyle"));
  v13 = sub_10005DD08(v11);
  v14 = (void *)objc_claimAutoreleasedReturnValue(v13);
  v15 = sub_1001B1234(v12, v14, 22, 0);

  v16 = v15 != 0;
  if (v15)
  {
    Size = CTFontGetSize(a4);
    CopyWithAttributes = CTFontCreateCopyWithAttributes(a4, Size * 1.5, 0, 0);
    sub_1001B21AC((uint64_t)CopyWithAttributes, &v27);
    v35 = v29;
    v36 = v30;
    v37 = v31;
    v38 = v32;
    v33 = v27;
    v34 = v28;
  }
  else
  {
    CopyWithAttributes = 0;
  }
  v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "characterStyle", 0, 0, 0, 0, 0, 0, 0, unk_100EED898, 0, 0, 0, unk_100EED8B8, v33, v34, v35, v36,
                    v37,
                    v38));
  v20 = sub_10005DD08(v11);
  v21 = (void *)objc_claimAutoreleasedReturnValue(v20);
  v22 = sub_1001B148C(v19, v21, 0, 0.0);

  if (v22 != 0.0)
  {
    if (v15 == 2)
    {
      if (v22 >= 0.0)
      {
        Descent = CTFontGetDescent(CopyWithAttributes);
        v26 = v22 - (Descent - CTFontGetDescent(a4));
        if (v26 > 0.0)
          *(double *)&v28 = v26;
        goto LABEL_22;
      }
    }
    else
    {
      if (v15 == 1)
      {
        if (v22 <= 0.0)
        {
          CapHeight = CTFontGetCapHeight(CopyWithAttributes);
          v24 = -v22 - (CapHeight - CTFontGetCapHeight(a4));
          if (v24 <= 0.0)
            goto LABEL_22;
          goto LABEL_21;
        }
        goto LABEL_18;
      }
      if (v22 > 0.0)
      {
LABEL_18:
        *(double *)&v28 = v22;
LABEL_22:
        v16 = 1;
        goto LABEL_23;
      }
      if (v22 >= 0.0)
        goto LABEL_22;
    }
    v24 = -v22;
LABEL_21:
    *(double *)&v29 = v24;
    goto LABEL_22;
  }
LABEL_23:
  if (CopyWithAttributes)
    CFRelease(CopyWithAttributes);
  if (v16)
    *(_QWORD *)(a2[28] + 24) |= 0x400uLL;
  sub_1002799E8(a1, (double *)&v33, (uint64_t)&v27, (uint64_t)a2, a5);

}

void sub_100279990(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t sub_1002799E8(uint64_t result, double *a2, uint64_t a3, uint64_t a4, char a5)
{
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;

  v5 = a2[2];
  v6 = a2[4];
  v7 = v5 + v6;
  if (!*(_BYTE *)(result + 27) || (a5 & 1) != 0)
  {
    if (v7 < *(double *)(result + 184))
      v7 = *(double *)(result + 184);
    *(double *)(result + 184) = v7;
    v11 = v5 + *(double *)(a3 + 16);
    a2[2] = v11;
    a2[4] = v6 + *(double *)(a3 + 32);
    v12 = *(double *)(result + 136);
    if (v12 < v11)
      v12 = v11;
    *(double *)(result + 136) = v12;
    v13 = *(double *)(result + 152);
    if (v13 < a2[4])
      v13 = a2[4];
    *(double *)(result + 152) = v13;
    v8 = 0.0;
  }
  else
  {
    v8 = *(double *)(a3 + 16) + v7 * 0.5;
    v9 = v7 * 0.5 + *(double *)(a3 + 32);
    v10 = *(double *)(result + 136);
    if (v10 < v8)
      v10 = *(double *)(a3 + 16) + v7 * 0.5;
    *(double *)(result + 136) = v10;
    if (*(double *)(result + 152) >= v9)
      v9 = *(double *)(result + 152);
    *(double *)(result + 152) = v9;
    if (v7 < *(double *)(result + 184))
      v7 = *(double *)(result + 184);
    *(double *)(result + 184) = v7;
  }
  v14 = a2[6];
  v15 = *(double *)(result + 176);
  if (*(double *)(result + 168) >= v14)
    v14 = *(double *)(result + 168);
  *(double *)(result + 168) = v14;
  v16 = *(double *)(result + 120);
  if (v16 < *a2)
    v16 = *a2;
  *(double *)(result + 120) = v16;
  v17 = a2[7];
  if (v15 >= v17)
    v17 = v15;
  *(double *)(result + 176) = v17;
  if (v8 == 0.0)
    v8 = a2[2];
  v18 = v8 + a2[5];
  if (*(double *)(a4 + 216) >= v18)
    v18 = *(double *)(a4 + 216);
  *(double *)(a4 + 216) = v18;
  return result;
}

double sub_100279AFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v5;
  double v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  const __CTLine *v11;
  _QWORD *v12;
  CGFloat ascent;

  v5 = 0.0;
  if (sub_10013E6D4(a3))
  {
    v6 = sub_1001321B0((double *)(a3 + 104), a2);
    v7 = (_QWORD *)sub_10013E67C(a3);
    if (v7[1] != *v7)
    {
      v8 = 0;
      v9 = 0;
      do
      {
        v10 = *(_QWORD *)sub_10013E67C(a3) + v8;
        ascent = 0.0;
        v11 = (const __CTLine *)sub_10019FA78(v10);
        CTLineGetTypographicBounds(v11, &ascent, 0, 0);
        if (v5 <= -(v6 + *(double *)(v10 + 16) - ascent))
          v5 = -(v6 + *(double *)(v10 + 16) - ascent);
        ++v9;
        v12 = (_QWORD *)sub_10013E67C(a3);
        v8 += 104;
      }
      while (v9 < 0x4EC4EC4EC4EC4EC5 * ((uint64_t)(v12[1] - *v12) >> 3));
    }
  }
  return v5;
}

void sub_100279BFC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100279C2C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100279C5C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100279C8C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100279CBC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100279CEC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100279D1C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100279D4C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100279D7C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100279DAC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

double sub_100279DDC(double a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  double v5;
  id v6;
  void *v7;
  double v8;
  double v9;
  double v10;
  void *v11;
  void *v12;
  void *v13;

  v5 = *(double *)(a4 + 40);
  v6 = sub_10005DD18(a3);
  v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
  objc_msgSend(v7, "frameBounds");
  v9 = v5 - v8;

  v10 = a1 - v9;
  if (v10 < 0.0)
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_10124A0D8);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E14EE0();
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_10124A0F8);
    v11 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)v11, OS_LOG_TYPE_ERROR))
    {
      objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
      sub_100DE7E60();
    }

    v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "CGFloat CRLWPCoreTextTypesetter::pLineRefStartForLineFragment(const CRLWPLayoutState *, const CRLWPLineFragment *, CGFloat) const"));
    v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v12, v13, 4558, 0, "Negative lineRef start position");

  }
  return v10;
}

void sub_100279F94(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  v2 = v1;

  _Unwind_Resume(a1);
}

BOOL sub_100279FD4(uint64_t a1, uint64_t a2, void *a3, CTRunRef *a4, uint64_t a5, void *a6, CGGlyph *a7, CGSize *a8)
{
  id v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  double v21;
  double v22;
  CFDictionaryRef Attributes;
  void *v24;
  void *v25;
  uint64_t v26;
  char *v27;
  _BOOL4 v28;
  id v29;
  void *v30;
  id v31;
  void *v32;
  double v33;
  id v34;
  void *v35;
  id v36;
  uint64_t v37;
  const __CTFont *v38;
  uint64_t v39;
  void *v40;
  id v41;
  void *v42;
  void *v43;
  id v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  void *v49;
  void *v50;
  _BOOL8 GlyphsForCharacters;
  double Ascent;
  CGSize *advances;
  CGSize *advancesa;
  id v56;
  CFIndex buffer[3];
  CFRange v58;

  advances = a8;
  v14 = a3;
  v56 = a6;
  v15 = objc_msgSend(*(id *)(a1 + 56), "characterStyleAtCharIndex:effectiveRange:", CTRunGetStringRange(*a4).location, 0);
  v16 = (void *)objc_claimAutoreleasedReturnValue(v15);
  v17 = sub_10005DD08(a2);
  v18 = (void *)objc_claimAutoreleasedReturnValue(v17);
  v19 = sub_1001B1190(v16, v18, 0xBuLL);
  v20 = (void *)objc_claimAutoreleasedReturnValue(v19);
  objc_msgSend(v20, "doubleValue");
  v22 = v21;

  Attributes = CTRunGetAttributes(*a4);
  v24 = (void *)objc_claimAutoreleasedReturnValue(Attributes);
  v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v24, "objectForKeyedSubscript:", kCTRunDelegateAttributeName));

  if (!v25)
    goto LABEL_7;
  v58.location = 0;
  v58.length = 1;
  CTRunGetStringIndices(*a4, v58, buffer);
  v26 = *(_QWORD *)(a1 + 232);
  if (v26 && *(__int16 *)(*(_QWORD *)(a1 + 64) + 2 * buffer[0]) == -4)
  {
    v27 = sub_1004B14AC(v26, buffer[0]);
    v28 = v27 != 0;
    if (v16 && v27)
    {
      v29 = sub_10005DD08(a2);
      v30 = (void *)objc_claimAutoreleasedReturnValue(v29);
      v31 = sub_1001B1190(0, v30, 0xBuLL);
      v32 = (void *)objc_claimAutoreleasedReturnValue(v31);
      objc_msgSend(v32, "doubleValue");
      v22 = v33;

LABEL_7:
      v28 = 1;
    }
  }
  else
  {
    v28 = 0;
  }
  v34 = sub_10005DD18(a2);
  v35 = (void *)objc_claimAutoreleasedReturnValue(v34);
  v36 = objc_msgSend(v35, "scaleTextPercent");

  v38 = CTFontCreateWithName(CFSTR("HiraMinProN-W3"), v22 * (float)((float)(unint64_t)v36 / 100.0) / 3.0, 0);
  if (v38)
  {
    if (v28)
    {
      v39 = objc_opt_class(CRLFill, v37);
      v40 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v24, "objectForKeyedSubscript:", CFSTR("CRLWPCharacterFillAttribute")));
      v41 = sub_100221D0C(v39, v40);
      v42 = (void *)objc_claimAutoreleasedReturnValue(v41);

      if (!v42
        || (v43 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v42, "referenceColor")),
            v44 = objc_msgSend(v43, "CGColor"),
            v43,
            !v44))
      {
        v44 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v24, "objectForKeyedSubscript:", kCTForegroundColorAttributeName, advances));

      }
      objc_msgSend(v14, "setFont:", v38, advances);
      objc_msgSend(v14, "setColor:", v44);
      v45 = objc_msgSend(v56, "characterAtIndex:", 0);
      LOWORD(buffer[0]) = v45;
      v46 = sub_1001B29F8(*(_QWORD *)(a1 + 80), *(unsigned __int8 *)(a1 + 27), 4);
      v47 = v46;
      if (v45 == 65093)
      {
        if ((_DWORD)v46 == 2 || *(_QWORD *)(a1 + 80) == 1)
        {
          v45 = 8226;
          LOWORD(buffer[0]) = 8226;
        }
        else
        {
          v45 = 65093;
        }
      }
      objc_msgSend(v14, "setShouldRotate:", (v45 == 65093) & (*(_DWORD *)(a5 + 24) >> 13));
      GlyphsForCharacters = CTFontGetGlyphsForCharacters(v38, (const UniChar *)buffer, a7, 1);
      if (GlyphsForCharacters)
      {
        CTFontGetAdvancesForGlyphs((CTFontRef)objc_msgSend(v14, "font"), kCTFontOrientationDefault, a7, advancesa, 1);
        Ascent = CTFontGetAscent(v38);
        objc_msgSend(v14, "setAscent:descent:advance:", Ascent, CTFontGetDescent(v38), advancesa->width);
        objc_msgSend(v14, "setLocation:", v47);
      }

    }
    else
    {
      GlyphsForCharacters = 0;
    }
    CFRelease(v38);
  }
  else
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_10124A058);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E14F60();
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_10124A078);
    v48 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)v48, OS_LOG_TYPE_ERROR))
    {
      objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
      sub_100DE7E60();
    }

    v49 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "BOOL CRLWPCoreTextTypesetter::pSetUpEmphasisMarkAdornments(const CRLWPLayoutState *, CRLWPAdornments *__strong, const CTRunRef &, CRLWPLineFragment *, NSString *__strong, CGGlyph &, CGSize &) const"));
    v50 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v49, v50, 4324, 0, "Emphasis marks, no font.");

    GlyphsForCharacters = 0;
  }

  return GlyphsForCharacters;
}

void sub_10027A4B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;

  _Unwind_Resume(a1);
}

void sub_10027A590(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027A5C0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027A5F0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027A620(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

char *sub_10027A650(uint64_t a1, unint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  char *v7;
  uint64_t v8;
  void *v9;
  BOOL v10;

  if (!objc_msgSend(*(id *)(a1 + 112), "count"))
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101249C70);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E14FE0();
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101249C90);
    v4 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)v4, OS_LOG_TYPE_ERROR))
    {
      objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
      sub_100DE7E60();
    }

    v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "NSUInteger CRLWPCoreTextTypesetter::pFindFontRunIndexForLocalCharIndex(CRLWPCharIndex) const"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v5, v6, 3902, 0, "Bad runCount");

  }
  v7 = (char *)objc_msgSend(*(id *)(a1 + 112), "count");
  if ((unint64_t)objc_msgSend(*(id *)(a1 + 112), "count") >= 2)
  {
    v8 = 1;
    while (1)
    {
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 112), "objectAtIndexedSubscript:", v8));
      v10 = (unint64_t)objc_msgSend(v9, "charIndex") > a2;

      if (v10)
        break;
      if (++v8 >= (unint64_t)objc_msgSend(*(id *)(a1 + 112), "count"))
        return v7 - 1;
    }
    v7 = (char *)v8;
  }
  return v7 - 1;
}

void sub_10027A854(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

double sub_10027A880(uint64_t a1, int a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double result)
{
  double v8;
  uint64_t v9;
  double *v10;
  double *v11;
  double v12;

  if ((a3 & 1) == 0 && a5 && !a2 && a6 && a7 && result > 0.0 && a4 && a4 - 1 >= 0)
  {
    v8 = *(double *)(a5 + 16 * (a4 - 1)) + *(double *)(a6 + 16 * (a4 - 1));
    v9 = 16 * a4 - 16;
    v10 = (double *)(a6 + v9);
    v11 = (double *)(a5 + v9);
    do
    {
      v12 = v8 - (*v11 + *v10);
      if (v12 >= result)
        break;
      if (*(_WORD *)(*(_QWORD *)(a1 + 64) + 2 * *(_QWORD *)(a7 - 8 + 8 * a4)) == 9)
      {
        if (v12 >= 0.0)
          return v8 - (*v11 + *v10);
        return result;
      }
      --a4;
      v10 -= 2;
      v11 -= 2;
    }
    while (a4 >= 1);
  }
  return result;
}

id sub_10027A91C(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  unsigned __int8 v6;
  void *v7;

  v3 = a1;
  v4 = a2;
  if (!objc_msgSend(v3, "count")
    || (v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "lastObject")),
        v6 = objc_msgSend(v5, "merge:", v4),
        v5,
        (v6 & 1) == 0))
  {
    objc_msgSend(v3, "addObject:", v4);
  }
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "lastObject"));

  return v7;
}

void sub_10027A9A8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_10027A9D0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027AA00(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027AA30(uint64_t a1, void *a2, uint64_t a3, unint64_t a4, uint64_t a5, char a6, double a7, double a8, double a9, double a10)
{
  id v18;
  void *v19;
  __int128 v20;
  void *v21;
  unsigned __int8 v22;
  __int128 v23;

  v18 = a2;
  if ((a6 & 1) != 0
    || (sub_1001AE43C(a3) & 1) == 0
    && (v21 = (void *)objc_claimAutoreleasedReturnValue(+[NSCharacterSet punctuationCharacterSet](NSCharacterSet, "punctuationCharacterSet")), v22 = objc_msgSend(v21, "characterIsMember:", a3), v21, (v22 & 1) == 0))
  {
    if (objc_msgSend(v18, "location") != 1
      || (v23 = xmmword_100EEE418,
          (v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "smartFieldAtCharIndex:attributeKind:effectiveRange:", a4, 7, &v23))) == 0)|| (v20 = v23, v19, a4 < (unint64_t)v20)|| a4 - (unint64_t)v20 >= *((_QWORD *)&v20 + 1))
    {
      objc_msgSend(v18, "addAdornmentWithCharIndex:point:glyph:rect:", objc_msgSend(*(id *)(a1 + 56), "charIndexMappedToStorage:", a4), a5, a7 + (a9 - a10) * 0.5, 0.0, a7, 0.0, fabs(a9), 1.0);
    }
  }

}

void sub_10027AB6C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

double *sub_10027AB90(double a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, char a6)
{
  double *result;
  double v12;
  double v13;
  unsigned int v14;
  void *v15;
  void *v16;
  void *v17;
  double v18;
  double v19;
  uint64_t v20;
  double v21;
  double v22;
  double v23;
  double v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  CRLWPAdornmentLine *v29;
  CRLWPAdornmentLine *v30;

  result = (double *)sub_10013E664(a4, 0);
  v12 = result[1];
  v13 = 0.0;
  v14 = 3;
  switch(a5)
  {
    case 4:
      v13 = 2.0;
      v14 = 7;
      goto LABEL_9;
    case 5:
      v13 = 2.0;
      v14 = 6;
      goto LABEL_9;
    case 6:
    case 7:
    case 8:
    case 9:
      return result;
    case 10:
    case 11:
    case 13:
      goto LABEL_9;
    case 12:
      v13 = 1.0;
      v14 = 4;
      goto LABEL_9;
    default:
      if (a5 == 8232)
      {
        v14 = 2;
      }
      else if (a5 != 8233)
      {
        return result;
      }
LABEL_9:
      if (sub_100172228(a3 + 24) != *(id *)(a4 + 16))
      {
        +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
        if (qword_10147E370 != -1)
          dispatch_once(&qword_10147E370, &stru_101249A90);
        if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
          sub_100E150E0();
        if (qword_10147E370 != -1)
          dispatch_once(&qword_10147E370, &stru_101249AB0);
        v15 = off_1013D9070;
        if (os_log_type_enabled((os_log_t)v15, OS_LOG_TYPE_ERROR))
        {
          objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
          sub_100DE7E60();
        }

        v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "void CRLWPCoreTextTypesetter::pAddInvisibleBreakToLineFragment(const CRLWPLayoutState *, CRLWPLineFragment *, unichar, CGFloat, BOOL) const"));
        v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm"));
        +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v16, v17, 3612, 0, "line fragment isn't from the current paragraph");

      }
      v18 = v12 + a1;
      v19 = *((double *)&unk_1013DB6C0 + 5 * v14 + 1);
      v20 = *(_QWORD *)(a4 + 24);
      if (fabs(v18) == INFINITY)
      {
        if ((v20 & 0x1000) == 0)
        {
          v18 = *(double *)(a4 + 240) + 0.0;
          goto LABEL_31;
        }
        v21 = 0.0;
        goto LABEL_30;
      }
      if ((v20 & 0x1000) != 0)
      {
        v21 = 0.0;
        if (v18 >= 0.0)
          v21 = v18;
LABEL_30:
        v18 = v21 - v19;
        goto LABEL_31;
      }
      if ((a6 & 1) == 0 && *(double *)(a4 + 56) < v18)
        v18 = *(double *)(a4 + 56);
LABEL_31:
      if (!*((_BYTE *)&unk_1013DB6C0 + 40 * v14 + 2))
        return (double *)sub_10014A260((id)a4);
      if ((v20 & 0x1000) != 0)
      {
        v24 = v19 + fmin(v18, 0.0);
        v23 = v19 + v18 - v24;
        v18 = v24;
LABEL_38:
        if (v23 > 0.0)
        {
          if (v13 <= 0.0)
          {
            +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
            if (qword_10147E370 != -1)
              dispatch_once(&qword_10147E370, &stru_101249AD0);
            if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
              sub_100E15060();
            if (qword_10147E370 != -1)
              dispatch_once(&qword_10147E370, &stru_101249AF0);
            v25 = off_1013D9070;
            if (os_log_type_enabled((os_log_t)v25, OS_LOG_TYPE_ERROR))
            {
              objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
              sub_100DE7E60();
            }

            v26 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "void CRLWPCoreTextTypesetter::pAddInvisibleBreakToLineFragment(const CRLWPLayoutState *, CRLWPLineFragment *, unichar, CGFloat, BOOL) const"));
            v27 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm"));
            +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v26, v27, 3659, 0, "break line has no thickness");

          }
          if (!qword_1014152A8)
          {
            v28 = (void *)objc_claimAutoreleasedReturnValue(+[CRLColor colorWithRed:green:blue:alpha:](CRLColor, "colorWithRed:green:blue:alpha:", 0.180392161, 0.533333361, 0.921568632, 1.0));
            qword_1014152A8 = (uint64_t)CGColorRetain((CGColorRef)objc_msgSend(v28, "CGColor"));

          }
          v29 = [CRLWPAdornmentLine alloc];
          v30 = -[CRLWPAdornmentLine initWithStart:length:color:thickness:lineCount:underline:adornmentLocation:underLineAdjustment:](v29, "initWithStart:length:color:thickness:lineCount:underline:adornmentLocation:underLineAdjustment:", qword_1014152A8, 1, 0, 0, v18, NAN, v23, v13, 0.0);
          sub_10013E7AC(a4, v30);

        }
        return (double *)sub_10014A260((id)a4);
      }
      v22 = *(double *)(a4 + 56) - v19;
      if (v22 < v18)
        v22 = v18;
      v23 = v22 - v18;
      if (v22 - v18 >= 0.0)
        goto LABEL_38;
      return (double *)sub_10014A260((id)a4);
  }
}

void sub_10027B05C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10027B0C8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027B0F8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027B128(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027B158(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027B188(id a1)
{
  const __CFAttributedString *v1;

  v1 = (const __CFAttributedString *)objc_msgSend(objc_alloc((Class)NSAttributedString), "initWithString:attributes:", &stru_1012A72B0, 0);
  qword_1014152B0 = (uint64_t)CTLineCreateWithAttributedString(v1);

}

void sub_10027B1D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_10027B1EC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027B21C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027B24C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027B27C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027B2AC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027B2DC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027B30C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027B33C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027B36C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027B39C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027B3CC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027B3FC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027B42C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027B45C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027B48C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027B4BC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027B4EC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027B51C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

id sub_10027B54C(uint64_t a1)
{
  void *v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  NSLinguisticTagScheme v8;

  v2 = *(void **)(a1 + 256);
  if (!v2)
  {
    v3 = objc_alloc((Class)NSLinguisticTagger);
    v8 = NSLinguisticTagSchemeNameTypeOrLexicalClass;
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v8, 1));
    v5 = objc_msgSend(v3, "initWithTagSchemes:options:", v4, 22);
    v6 = *(void **)(a1 + 256);
    *(_QWORD *)(a1 + 256) = v5;

    v2 = *(void **)(a1 + 256);
  }
  return v2;
}

void sub_10027B610(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10027B628(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027B658(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027B688(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027B6B8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027B6E8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027B718(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027B748(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027B778(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027B7A8(uint64_t a1, void *a2, uint64_t a3, unint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  unsigned __int8 v11;
  char v12;
  void *v13;
  CFMutableStringRef MutableWithExternalCharactersNoCopy;
  __CFString *v15;
  __CFString *v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  BOOL v21;
  void *v22;
  id v23;
  const __CFLocale *v24;
  NSString *v25;

  v25 = a2;
  v8 = *(_QWORD *)(a1 + 56);
  v7 = *(_QWORD *)(a1 + 64);
  v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSCharacterSet decimalDigitCharacterSet](NSCharacterSet, "decimalDigitCharacterSet"));
  v10 = v7 + a3;
  v11 = objc_msgSend(v9, "characterIsMember:", *(unsigned __int16 *)(*(_QWORD *)(v8 + 64) + 2 * (v7 + a3)));

  if (v10)
    v12 = v11;
  else
    v12 = 1;
  if ((v12 & 1) == 0)
  {
    v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSCharacterSet decimalDigitCharacterSet](NSCharacterSet, "decimalDigitCharacterSet"));
    v11 = objc_msgSend(v13, "characterIsMember:", *(unsigned __int16 *)(*(_QWORD *)(v8 + 64) + 2 * v10 - 2));

  }
  if ((v11 & 1) == 0)
  {
    MutableWithExternalCharactersNoCopy = CFStringCreateMutableWithExternalCharactersNoCopy(0, (UniChar *)(*(_QWORD *)(v8 + 64) + 2 * (*(_QWORD *)(a1 + 64) + a3)), a4, a4, kCFAllocatorNull);
    if (MutableWithExternalCharactersNoCopy)
    {
      v15 = MutableWithExternalCharactersNoCopy;
      v16 = v15;
      if (a4
        && (a4 == 1 || -[__CFString crlwp_isLowerCaseFromIndex:](v15, "crlwp_isLowerCaseFromIndex:", 1)))
      {
        if (v10)
        {
          v17 = v10 - 1;
          if (v10 != 0x8000000000000000)
          {
            do
            {
              v18 = *(unsigned __int16 *)(*(_QWORD *)(v8 + 64) + 2 * v17);
              if ((objc_msgSend(*(id *)(a1 + 32), "characterIsMember:", v18) & 1) != 0)
                break;
              if ((objc_msgSend(*(id *)(a1 + 40), "characterIsMember:", v18) & 1) != 0)
              {
                v19 = NSLinguisticTagDeterminer == v25 || NSLinguisticTagConjunction == v25;
                v21 = !v19 && NSLinguisticTagPreposition != v25 || a4 >= 4;
                if (!v21
                  || (v22 = (void *)objc_claimAutoreleasedReturnValue(+[NSCharacterSet crlwp_singleRightQuoteCharacterSet](NSCharacterSet, "crlwp_singleRightQuoteCharacterSet")), v23 = -[__CFString rangeOfCharacterFromSet:](v16, "rangeOfCharacterFromSet:", v22), v22, v23 != (id)0x7FFFFFFFFFFFFFFFLL))
                {
                  v24 = (const __CFLocale *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "locale"));
                  CFStringLowercase(v16, v24);
                  goto LABEL_31;
                }
                break;
              }
              v19 = (v17-- & 0x7FFFFFFFFFFFFFFFLL) == 0;
            }
            while (!v19);
          }
        }
        v24 = (const __CFLocale *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "locale"));
        CFStringCapitalize(v16, v24);
LABEL_31:

      }
      CFRelease(v16);

    }
  }

}

void sub_10027B9BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_10027BA10(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027BA40(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027BA70(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027BAA0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027BAD0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027BB00(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027BB30(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027BB60(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027BB90(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027BBC0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027BBF0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027BC20(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027BC50(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027BC80(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

uint64_t sub_10027BCB0(uint64_t a1, unint64_t a2)
{
  id v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int v8;

  v4 = objc_msgSend(*(id *)(a1 + 56), "length");
  if ((unint64_t)v4 <= a2)
    return 0;
  v5 = (unint64_t)v4;
  v6 = *(_QWORD *)(a1 + 64);
  result = *(unsigned __int16 *)(v6 + 2 * a2);
  if (a2 + 1 < v5)
  {
    v8 = *(unsigned __int16 *)(v6 + 2 * (a2 + 1));
    if ((result & 0xFC00) == 0xD800 && (v8 & 0xFC00) == 56320)
      return (v8 + ((_DWORD)result << 10) - 56613888);
  }
  return result;
}

void sub_10027BD30(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027BD60(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027BD90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4;
  id v5;
  void *i;
  void *v7;
  id v8;
  char *v9;
  double *v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  CGFloat v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  const __CTLine *v20;
  id obj;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  _BYTE v27[128];
  CGRect v28;
  CGRect v29;

  v23 = 0u;
  v24 = 0u;
  v25 = 0u;
  v26 = 0u;
  v4 = sub_10013E790(a3);
  obj = (id)objc_claimAutoreleasedReturnValue(v4);
  v5 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v23, v27, 16);
  if (v5)
  {
    v22 = *(_QWORD *)v24;
    do
    {
      for (i = 0; i != v5; i = (char *)i + 1)
      {
        if (*(_QWORD *)v24 != v22)
          objc_enumerationMutation(obj);
        v7 = *(void **)(*((_QWORD *)&v23 + 1) + 8 * (_QWORD)i);
        v8 = objc_msgSend(v7, "rectCount");
        v9 = (char *)objc_msgSend(v7, "rects");
LABEL_7:
        while (v8)
        {
          v8 = (char *)v8 - 1;
          v10 = (double *)&v9[32 * (_QWORD)v8];
          v12 = *v10;
          v11 = v10[1];
          v13 = v10[2];
          v14 = v10[3];
          v15 = v12 + *(double *)(sub_10013E664(a3, 0) + 8);
          v16 = -1;
          v17 = 8;
          while (1)
          {
            v18 = (_QWORD *)sub_10013E67C(a3);
            if (++v16 >= (unint64_t)(0x4EC4EC4EC4EC4EC5 * ((uint64_t)(v18[1] - *v18) >> 3)))
              break;
            v19 = *(_QWORD *)sub_10013E67C(a3);
            v20 = (const __CTLine *)sub_10019FA78(v19 + v17 - 8);
            v29.size.width = CTLineGetTypographicBounds(v20, 0, 0, 0);
            v29.origin.x = *(CGFloat *)(v19 + v17);
            v29.origin.y = 0.0;
            v29.size.height = 1.0;
            v28.origin.x = v15;
            v28.origin.y = v11;
            v28.size.width = v13;
            v28.size.height = v14;
            v17 += 104;
            if (CGRectIntersectsRect(v28, v29))
            {
              objc_msgSend(v7, "removeAdornmentAt:", v8);
              goto LABEL_7;
            }
          }
        }
      }
      v5 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v23, v27, 16);
    }
    while (v5);
  }

}

void sub_10027BF88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{

  _Unwind_Resume(a1);
}

void sub_10027BFCC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027BFFC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027C02C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027C05C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

CTParagraphStyleRef sub_10027C08C(void *a1, unsigned int a2)
{
  id v3;
  signed int v4;
  uint64_t v5;
  int v6;
  float v7;
  double v8;
  uint64_t v9;
  objc_class *v10;
  void *v11;
  id v12;
  id v13;
  float v14;
  float v15;
  float v16;
  double v17;
  BOOL v19;
  void *v20;
  double v21;
  _BYTE *v22;
  unsigned int v23;
  id v24;
  void *v25;
  unsigned int v26;
  double v27;
  double v28;
  __CFString *v29;
  __CFString *v30;
  _BOOL4 v31;
  void *v32;
  const __CFDictionary *v33;
  double v34;
  CTTextTabRef v35;
  BOOL v36;
  CTTextTabRef v38;
  void *v39;
  double Location;
  double v41;
  CTTextTabRef v42;
  CTParagraphStyleRef v43;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  char v51;
  void *v52;
  BOOL v53;
  int v54;
  void *v55;
  NSMutableArray *v56;
  char v57;
  NSMutableArray *v58;
  double v59;
  char v60;
  CTParagraphStyleSetting settings;
  int v62;
  uint64_t v63;
  char *v64;
  int v65;
  uint64_t v66;
  double *v67;
  int v68;
  uint64_t v69;
  id *v70;
  CFStringRef v71;
  void *v72;

  v3 = a1;
  v52 = v3;
  v4 = objc_msgSend(v3, "intValueForProperty:", 28);
  if (v4 == -1)
    v5 = a2;
  else
    v5 = v4;
  v6 = objc_msgSend(v3, "intValueForProperty:", 29);
  if (v6 >= 256)
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_10124A118);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E15160();
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_10124A138);
    v45 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)v45, OS_LOG_TYPE_ERROR))
    {
      objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
      sub_100DE7E60();
    }

    v46 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "CTParagraphStyleRef CRLWPCreateCoreTextParagraphStyle(CRLWPParagraphStyle *__strong, BOOL)"));
    v47 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v46, v47, 4951, 0, "Out-of-bounds type assignment was clamped to max");

    v51 = -1;
  }
  else
  {
    v51 = v6;
    if (v6 < 0)
    {
      +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_10124A158);
      if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
        sub_100E151D8();
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_10124A178);
      v48 = off_1013D9070;
      if (os_log_type_enabled((os_log_t)v48, OS_LOG_TYPE_ERROR))
      {
        objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
        sub_100DE7E60();
      }

      v49 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "CTParagraphStyleRef CRLWPCreateCoreTextParagraphStyle(CRLWPParagraphStyle *__strong, BOOL)"));
      v50 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm"));
      +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v49, v50, 4951, 0, "Out-of-bounds type assignment was clamped to min");

      v51 = 0;
    }
  }
  v54 = sub_10027D81C(v5, a2);
  v60 = v54;
  objc_msgSend(v52, "floatValueForProperty:", 31);
  v8 = v7;
  v59 = v7;
  v10 = (objc_class *)objc_opt_class(CRLWPTabs, v9);
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v52, "valueForProperty:", 51));
  v12 = sub_1002223BC(v10, v11);
  v55 = (void *)objc_claimAutoreleasedReturnValue(v12);

  v13 = objc_msgSend(v55, "count");
  v56 = objc_opt_new(NSMutableArray);
  v58 = v56;
  objc_msgSend(v52, "floatValueForProperty:", 33);
  v15 = v14;
  objc_msgSend(v52, "floatValueForProperty:", 39);
  v17 = v16;
  v19 = v15 < v16 && v54 == 0;
  v53 = v19;
  if (v13)
  {
    v20 = 0;
    v21 = v15;
    if (v54)
      v22 = &unk_100EEEA5C;
    else
      v22 = &unk_100EEEA58;
    v23 = 1;
    v24 = v13;
    do
    {
      v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v55, "tabAtIndex:", v20));
      v26 = objc_msgSend(v25, "alignment");
      objc_msgSend(v25, "position");
      v28 = v27;
      if (v26 == 3)
      {
        v29 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(v52, "valueForProperty:", 30));
        v30 = (__CFString *)objc_claimAutoreleasedReturnValue(+[NSNull null](NSNull, "null"));
        v31 = v29 == v30;

        if (v31)
        {

          v29 = &stru_1012A72B0;
        }
        v32 = (void *)objc_claimAutoreleasedReturnValue(+[NSCharacterSet characterSetWithCharactersInString:](NSCharacterSet, "characterSetWithCharactersInString:", v29));
        v71 = kCTTabColumnTerminatorsAttributeName;
        v72 = v32;
        v33 = (const __CFDictionary *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v72, &v71, 1));

      }
      else
      {
        v33 = 0;
      }
      v34 = v28 - v21 + v17;
      if (!v54)
        v34 = v28;
      v35 = CTTextTabCreate((CTTextAlignment)v22[v26], v34, v33);
      -[NSMutableArray addObject:](v56, "addObject:", v35);
      CFRelease(v35);
      v36 = v53;
      if (v24 != v13)
        v36 = 0;
      if (v36 && v28 > v17)
        v24 = v20;

      v20 = (void *)v23;
    }
    while ((unint64_t)v13 > v23++);
  }
  else
  {
    v24 = 0;
  }
  if (v53)
  {
    v38 = CTTextTabCreate(kCTTextAlignmentLeft, v17, 0);
    -[NSMutableArray insertObject:atIndex:](v56, "insertObject:atIndex:", v38, v24);
    CFRelease(v38);
  }
  if (-[NSMutableArray count](v56, "count"))
  {
    v39 = (void *)objc_claimAutoreleasedReturnValue(-[NSMutableArray lastObject](v56, "lastObject"));

    Location = CTTextTabGetLocation((CTTextTabRef)v39);
    v41 = (floor(Location / v8) + 1.0) * v8;
    if (v41 - Location < v8)
    {
      v42 = CTTextTabCreate(kCTTextAlignmentLeft, v41, 0);
      -[NSMutableArray addObject:](v56, "addObject:", v42);
      CFRelease(v42);
    }
  }
  v57 = v51;
  settings.spec = kCTParagraphStyleSpecifierAlignment;
  settings.valueSize = 1;
  settings.value = &v57;
  v62 = 13;
  v63 = 1;
  v64 = &v60;
  v65 = 5;
  v66 = 8;
  v67 = &v59;
  v68 = 4;
  v69 = 8;
  v70 = (id *)&v58;
  v43 = CTParagraphStyleCreate(&settings, 4uLL);

  return v43;
}

void sub_10027C6F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  void *v11;

  _Unwind_Resume(a1);
}

NSMutableDictionary *sub_10027C800(uint64_t a1, void *a2, void *a3, int a4, unint64_t a5)
{
  id v9;
  id v10;
  NSMutableDictionary *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  double v17;
  NSNumber *v18;
  void *v19;
  uint64_t v20;
  void *v21;
  NSNumber *v22;
  void *v23;
  uint64_t v24;
  void *v25;
  double v26;
  CTFontRef CopyWithAttributes;
  id v28;
  unsigned int v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  uint64_t v35;
  void *v36;
  id v37;
  id v38;
  id v39;
  _BOOL4 v40;
  void *v41;
  id v42;
  void *v43;
  BOOL v44;
  unsigned int v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  uint64_t v51;
  void *v52;
  id v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  void *v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  void *v65;
  id v66;
  void *v67;
  uint64_t v68;
  void *v69;
  unsigned int v70;
  int v71;
  unsigned int v72;
  uint64_t v73;
  id v74;
  void *v75;
  void *v76;
  id v77;
  void *v78;
  void *v79;
  uint64_t v80;
  void *v81;
  void *v82;
  void *v83;
  _BOOL4 v84;
  void *v85;
  id v86;
  void *v87;
  void *v88;
  _BOOL4 v89;
  void *v90;
  void *v91;
  _BOOL4 v92;
  uint64_t v93;
  id v94;
  void *v95;
  id v96;
  void *v97;
  NSMutableDictionary *v98;
  void *v100;
  void *v101;
  void *v102;
  void *v103;
  id v104;
  void *v105;
  void *v106;
  const __CTFont *font;

  v9 = a2;
  v10 = a3;
  v11 = objc_opt_new(NSMutableDictionary);
  -[NSMutableDictionary setObject:forKeyedSubscript:](v11, "setObject:forKeyedSubscript:", a1, kCTParagraphStyleAttributeName);
  v102 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
  objc_msgSend(v102, "crl_addNonNilObject:", v10);
  objc_msgSend(v102, "crl_addNonNilObject:", v9);
  font = (const __CTFont *)sub_1001B1B00(v102, a5);
  if (!font)
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_10124A198);
    v12 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)v12, OS_LOG_TYPE_ERROR))
      sub_100E15350();

    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_10124A1B8);
    v13 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)v13, OS_LOG_TYPE_ERROR))
    {
      v14 = (void *)objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
      sub_100DFC2A8(v14);
    }

    v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "NSDictionary<NSString *,id> *CRLWPCoreTextAttributes(CTParagraphStyleRef, CRLWPParagraphStyle *__strong, CRLWPCharacterStyle *__strong, BOOL, NSUInteger)"));
    v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v15, v16, 5044, 0, "Bad font");

  }
  -[NSMutableDictionary setObject:forKeyedSubscript:](v11, "setObject:forKeyedSubscript:");
  v17 = sub_1001B148C(v10, v9, 24, 0.0);
  if (v17 == 0.0)
  {
    if (a4)
    {
      v20 = sub_1001B1234(v10, v9, 16, 0);
      if ((_DWORD)v20 == 1)
        goto LABEL_18;
      goto LABEL_17;
    }
  }
  else
  {
    v18 = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", v17 * CTFontGetSize(font));
    v19 = (void *)objc_claimAutoreleasedReturnValue(v18);
    -[NSMutableDictionary setObject:forKeyedSubscript:](v11, "setObject:forKeyedSubscript:", v19, kCTKernAttributeName);

  }
  v20 = 0;
LABEL_17:
  v21 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](NSNumber, "numberWithInt:", v20));
  -[NSMutableDictionary setObject:forKeyedSubscript:](v11, "setObject:forKeyedSubscript:", v21, kCTLigatureAttributeName);

LABEL_18:
  v22 = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", sub_1001B148C(v10, v9, 0, 0.0));
  v23 = (void *)objc_claimAutoreleasedReturnValue(v22);
  -[NSMutableDictionary setObject:forKeyedSubscript:](v11, "setObject:forKeyedSubscript:", v23, CFSTR("CRLWPBaselineShift"));

  v24 = sub_1001B1234(v10, v9, 22, 0);
  v25 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:", v24));
  -[NSMutableDictionary setObject:forKeyedSubscript:](v11, "setObject:forKeyedSubscript:", v25, CFSTR("CRLWPSuperscript"));

  if ((_DWORD)v24)
  {
    v26 = sub_1001B148C(v10, v9, 11, 0.0);
    CopyWithAttributes = CTFontCreateCopyWithAttributes(font, v26, 0, 0);
    -[NSMutableDictionary setObject:forKeyedSubscript:](v11, "setObject:forKeyedSubscript:", CopyWithAttributes, CFSTR("CRLWPUnadjustedFont"));
    CFRelease(CopyWithAttributes);
  }
  v28 = sub_1001B1190(v10, v9, 0x12uLL);
  v103 = (void *)objc_claimAutoreleasedReturnValue(v28);
  if (objc_msgSend(v103, "isEnabled"))
    -[NSMutableDictionary setObject:forKeyedSubscript:](v11, "setObject:forKeyedSubscript:", v103, CFSTR("CRLWPShadow"));
  v29 = sub_1001B1234(v10, v9, 25, 0);
  if (v29 >= 4)
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_10124A1D8);
    v30 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)v30, OS_LOG_TYPE_ERROR))
      sub_100E152D0();

    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_10124A1F8);
    v31 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)v31, OS_LOG_TYPE_ERROR))
    {
      v32 = (void *)objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
      sub_100DFC2A8(v32);
    }

    v33 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "NSDictionary<NSString *,id> *CRLWPCoreTextAttributes(CTParagraphStyleRef, CRLWPParagraphStyle *__strong, CRLWPCharacterStyle *__strong, BOOL, NSUInteger)"));
    v34 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v33, v34, 5086, 0, "bad underline value");

  }
  if (v29 >= 3)
    v35 = 3;
  else
    v35 = v29;
  v36 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:", v35));
  -[NSMutableDictionary setObject:forKeyedSubscript:](v11, "setObject:forKeyedSubscript:", v36);

  v37 = sub_1001B1190(v10, v9, 0x1AuLL);
  v38 = (id)objc_claimAutoreleasedReturnValue(v37);
  v39 = (id)objc_claimAutoreleasedReturnValue(+[NSNull null](NSNull, "null"));
  v40 = v39 == v38;

  v41 = 0;
  if (!v40)
    v41 = v38;
  v104 = v41;

  if (v104)
    -[NSMutableDictionary setObject:forKeyedSubscript:](v11, "setObject:forKeyedSubscript:", v104, CFSTR("CRLWPUnderlineColor"));
  v42 = sub_1001B1190(v10, v9, 8uLL);
  v105 = (void *)objc_claimAutoreleasedReturnValue(v42);
  if (v105)
  {
    v43 = (void *)objc_claimAutoreleasedReturnValue(+[NSNull null](NSNull, "null"));
    v44 = v105 == v43;

    if (!v44)
      -[NSMutableDictionary setObject:forKeyedSubscript:](v11, "setObject:forKeyedSubscript:", v105, CFSTR("CRLWPEmphasisMarksAttribute"));
  }
  v45 = sub_1001B1234(v10, v9, 19, 0);
  if (v45 >= 3)
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_10124A218);
    v46 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)v46, OS_LOG_TYPE_ERROR))
      sub_100E15250();

    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_10124A238);
    v47 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)v47, OS_LOG_TYPE_ERROR))
    {
      v48 = (void *)objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
      sub_100DFC2A8(v48);
    }

    v49 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "NSDictionary<NSString *,id> *CRLWPCoreTextAttributes(CTParagraphStyleRef, CRLWPParagraphStyle *__strong, CRLWPCharacterStyle *__strong, BOOL, NSUInteger)"));
    v50 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v49, v50, 5103, 0, "bad strikethru value");

  }
  if (v45 >= 2)
    v51 = 2;
  else
    v51 = v45;
  v52 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:", v51));
  -[NSMutableDictionary setObject:forKeyedSubscript:](v11, "setObject:forKeyedSubscript:", v52, CFSTR("CRLWPStrikethrough"));

  v53 = sub_1001B1190(v10, v9, 0x14uLL);
  v54 = objc_claimAutoreleasedReturnValue(v53);
  v100 = (void *)v54;
  if (v54)
    -[NSMutableDictionary setObject:forKeyedSubscript:](v11, "setObject:forKeyedSubscript:", v54, CFSTR("CRLWPStrikethroughColor"));
  v55 = sub_1001B1190(v10, v9, 0x17uLL);
  v57 = objc_claimAutoreleasedReturnValue(v55);
  v101 = (void *)v57;
  if (v57)
    -[NSMutableDictionary setObject:forKeyedSubscript:](v11, "setObject:forKeyedSubscript:", v57, CFSTR("CRLWPTextBackgroundColor"));
  v58 = objc_opt_class(CRLStroke, v56);
  v59 = sub_1001B1190(v10, v9, 6uLL);
  v60 = (void *)objc_claimAutoreleasedReturnValue(v59);
  v61 = sub_100221D0C(v58, v60);
  v106 = (void *)objc_claimAutoreleasedReturnValue(v61);

  v63 = objc_opt_class(CRLFill, v62);
  v64 = sub_1001B1190(v10, v9, 4uLL);
  v65 = (void *)objc_claimAutoreleasedReturnValue(v64);
  v66 = sub_100221D0C(v63, v65);
  v67 = (void *)objc_claimAutoreleasedReturnValue(v66);

  if (v106)
  {
    v69 = (void *)objc_claimAutoreleasedReturnValue(+[CRLStroke emptyStroke](CRLStroke, "emptyStroke"));
    v70 = objc_msgSend(v106, "isEqual:", v69);

    v71 = v70 ^ 1;
    if (v67)
    {
LABEL_61:
      v72 = objc_msgSend(v67, "isClear") ^ 1;
      goto LABEL_64;
    }
  }
  else
  {
    v71 = 0;
    if (v67)
      goto LABEL_61;
  }
  v72 = 0;
LABEL_64:
  if ((v71 | v72) == 1)
  {
    if (v71)
      -[NSMutableDictionary setObject:forKeyedSubscript:](v11, "setObject:forKeyedSubscript:", v106, CFSTR("CRLWPCharacterStrokeAttribute"));
    if (v72)
    {
      v73 = objc_opt_class(CRLColorFill, v68);
      v74 = sub_100221D0C(v73, v67);
      v75 = (void *)objc_claimAutoreleasedReturnValue(v74);
      v76 = v75;
      if (v75)
      {
        -[NSMutableDictionary setObject:forKeyedSubscript:](v11, "setObject:forKeyedSubscript:", objc_msgSend(v75, "CGColor"), kCTForegroundColorAttributeName);
        v77 = 0;
      }
      else
      {
        -[NSMutableDictionary setObject:forKeyedSubscript:](v11, "setObject:forKeyedSubscript:", v67, CFSTR("CRLWPCharacterFillAttribute"));
        v81 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v67, "referenceColor"));
        v82 = v81;
        if (v81)
        {
          v77 = v81;
        }
        else
        {
          v77 = (id)objc_claimAutoreleasedReturnValue(+[CRLColor blackColor](CRLColor, "blackColor"));

        }
      }

    }
    else
    {
      v77 = (id)objc_claimAutoreleasedReturnValue(+[CRLColor clearColor](CRLColor, "clearColor"));
    }
    if (v77)
    {
      v83 = (void *)objc_claimAutoreleasedReturnValue(-[NSMutableDictionary objectForKeyedSubscript:](v11, "objectForKeyedSubscript:", kCTForegroundColorAttributeName));
      v84 = v83 == 0;

      if (v84)
      {
        if (!v67 || (objc_msgSend(v77, "isClear") & 1) == 0)
          -[NSMutableDictionary setObject:forKeyedSubscript:](v11, "setObject:forKeyedSubscript:", kCFBooleanTrue, kCTForegroundColorFromContextAttributeName);
        -[NSMutableDictionary setObject:forKeyedSubscript:](v11, "setObject:forKeyedSubscript:", objc_msgSend(v77, "CGColor"), kCTForegroundColorAttributeName);
      }
    }
    if (v71)
      v85 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v106, "color"));
    else
      v85 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v67, "referenceColor"));
    v86 = v85;

    v87 = (void *)objc_claimAutoreleasedReturnValue(-[NSMutableDictionary objectForKeyedSubscript:](v11, "objectForKeyedSubscript:", CFSTR("CRLWPUnderline")));
    if (objc_msgSend(v87, "isEqual:", &off_1012CC5F8))
    {

    }
    else
    {
      v88 = (void *)objc_claimAutoreleasedReturnValue(-[NSMutableDictionary objectForKeyedSubscript:](v11, "objectForKeyedSubscript:", CFSTR("CRLWPUnderlineColor")));
      v89 = v88 == 0;

      if (v89)
        -[NSMutableDictionary setObject:forKeyedSubscript:](v11, "setObject:forKeyedSubscript:", v86, CFSTR("CRLWPUnderlineColor"));
    }
    v90 = (void *)objc_claimAutoreleasedReturnValue(-[NSMutableDictionary objectForKeyedSubscript:](v11, "objectForKeyedSubscript:", CFSTR("CRLWPStrikethrough")));
    if (objc_msgSend(v90, "isEqual:", &off_1012CC5F8))
    {

    }
    else
    {
      v91 = (void *)objc_claimAutoreleasedReturnValue(-[NSMutableDictionary objectForKeyedSubscript:](v11, "objectForKeyedSubscript:", CFSTR("CRLWPStrikethroughColor")));
      v92 = v91 == 0;

      if (v92)
        -[NSMutableDictionary setObject:forKeyedSubscript:](v11, "setObject:forKeyedSubscript:", v86, CFSTR("CRLWPStrikethroughColor"));
    }

  }
  else
  {
    v78 = (void *)objc_claimAutoreleasedReturnValue(+[CRLColor grayColor](CRLColor, "grayColor"));
    v79 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v78, "colorWithAlphaComponent:", 0.7));
    -[NSMutableDictionary setObject:forKeyedSubscript:](v11, "setObject:forKeyedSubscript:", objc_msgSend(v79, "CGColor"), kCTStrokeColorAttributeName);

    -[NSMutableDictionary setObject:forKeyedSubscript:](v11, "setObject:forKeyedSubscript:", &off_1012CC610, kCTStrokeWidthAttributeName);
    -[NSMutableDictionary setObject:forKeyedSubscript:](v11, "setObject:forKeyedSubscript:", &__kCFBooleanTrue, CFSTR("CRLWPInvisibleTextAttribute"));
  }
  v93 = objc_opt_class(NSNumber, v80);
  v94 = sub_1001B1190(v10, v9, 5uLL);
  v95 = (void *)objc_claimAutoreleasedReturnValue(v94);
  v96 = sub_100221D0C(v93, v95);
  v97 = (void *)objc_claimAutoreleasedReturnValue(v96);

  if (v97)
    -[NSMutableDictionary setObject:forKeyedSubscript:](v11, "setObject:forKeyedSubscript:", v97, CFSTR("CRLWPCharacterFillShouldFillTextContainerAttribute"));
  CFRelease(font);
  v98 = v11;

  return v98;
}

void sub_10027D4E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12, void *a13, void *a14, void *a15, void *a16, void *a17)
{
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;

  _Unwind_Resume(a1);
}

void sub_10027D75C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027D78C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027D7BC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027D7EC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

uint64_t sub_10027D81C(uint64_t a1, unsigned int a2)
{
  uint64_t v2;
  void *v4;
  void *v5;
  void *v6;

  v2 = a2;
  if (a1 != -1)
    v2 = a1;
  if (v2)
  {
    if (v2 == 1)
      return 1;
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_10124A258);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E153D0();
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_10124A278);
    v4 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)v4, OS_LOG_TYPE_ERROR))
    {
      objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
      sub_100DE7E60();
    }

    v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "CTWritingDirection CRLWPCoreTextWritingDirectionFromWPWritingDirection(CRLWPWritingDirection, BOOL)"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPCoreTextTypesetter.mm"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v5, v6, 5210, 0, "Bad writing direction map.");

  }
  return 0;
}

void sub_10027D9BC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10027D9E4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027DA14(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027DA44(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027DA74(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027DAA4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027DAD4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027DB04(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027DB34(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027DB64(id a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[NSCharacterSet characterSetWithCharactersInString:](NSCharacterSet, "characterSetWithCharactersInString:", CFSTR("-—–‐‒−﹣－﹘")));
  v2 = (void *)qword_1014152C0;
  qword_1014152C0 = v1;

}

void sub_10027DB98(_QWORD *a1, uint64_t a2)
{
  *a1 = a2;
  operator new();
}

void sub_10027DBF8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_10027DCAC((uint64_t *)va, 0);
  _Unwind_Resume(a1);
}

void sub_10027DC14(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete();
}

uint64_t sub_10027DC38(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
  {
    sub_1004B05DC();
    operator delete();
  }
  return result;
}

uint64_t sub_10027DC6C(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_10027DCAC(uint64_t *a1, uint64_t a2)
{
  uint64_t result;

  result = *a1;
  *a1 = a2;
  if (result)
  {
    sub_1004B05DC();
    operator delete();
  }
  return result;
}

_QWORD *sub_10027DCE8(_QWORD *a1, unint64_t a2)
{
  char *v4;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    sub_10001FC68(a1, a2);
    v4 = (char *)a1[1];
    bzero(v4, 16 * a2);
    a1[1] = &v4[16 * a2];
  }
  return a1;
}

void sub_10027DD40(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_10027E310(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10027E384(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027E3B4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027E488(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10027E6EC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_10027E740(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  id v5;

  v5 = a2;
  v3 = *(_QWORD *)(a1 + 32);
  if (v3)
  {
    if (v5)
      v4 = 0;
    else
      v4 = *(_QWORD *)(a1 + 40);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v3, 1, v4);
  }

}

void sub_10027E798(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_10027E7AC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027E7DC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027EA08(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10027EA58(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027EA88(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

uint64_t sub_10027EAB8(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD))(result + 16))(result, 0);
  return result;
}

void sub_10027EDA8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  v3 = v2;

  _Unwind_Resume(a1);
}

void sub_10027EDF4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027EE24(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10027F0A0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10027F130(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10027FC30(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_100280BE8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100280C18(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

id sub_100280C48(id a1, id a2)
{
  objc_class *v2;

  v2 = (objc_class *)objc_opt_class(a2, a2);
  return NSStringFromClass(v2);
}

void sub_100280C60(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100280C90(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

id sub_100280CC0(id a1, id a2)
{
  objc_class *v2;

  v2 = (objc_class *)objc_opt_class(a2, a2);
  return NSStringFromClass(v2);
}

void sub_100280CD8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100280D08(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002816D8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100281708(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10028207C(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  objc_msgSend(v2, "postNotificationName:object:", CFSTR("CRLCanvasLayoutsChangedForCanvasNotification"), *(_QWORD *)(a1 + 32));

}

uint64_t sub_100282414(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_1002826F8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100282728(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100282A90(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100282AC0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100282D68(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100282D98(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100282FCC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100282FFC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002831BC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002831EC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10028339C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002833CC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002836BC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002836EC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100283910(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100283940(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100283BD8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100283C08(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100283DD0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100283E00(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100284330(uint64_t a1)
{
  double v2;
  double v3;
  id v4;

  objc_msgSend(*(id *)(a1 + 32), "setPreferredContentSize:", *(double *)(a1 + 40), *(double *)(a1 + 48));
  if (objc_msgSend(*(id *)(a1 + 32), "crl_shouldUpdateNavigationContentSizeWithPreferredContentSize"))
  {
    v2 = *(double *)(a1 + 40);
    v3 = *(double *)(a1 + 48);
    v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "navigationController"));
    objc_msgSend(v4, "setPreferredContentSize:", v2, v3);

  }
}

void sub_1002847E4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100284814(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100284CF4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100284D24(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100284D54(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100284D84(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002850A8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002850D8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10028583C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10028586C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10028589C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002858CC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100285BEC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100285C1C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100285FDC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10028600C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10028603C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10028606C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100286538(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100286568(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002871A4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002871D4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100287204(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100287234(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100287264(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100287294(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100287EC8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100287EF8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100289160(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100289190(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002891C0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002891F0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100289220(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100289250(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100289788(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002897B8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10028A7EC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10028A81C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10028AF98(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10028AFC8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10028AFF8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10028B028(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10028B058(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10028B088(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10028B384(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10028B3B4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10028B3E4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10028B414(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10028BA30(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10028BA60(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

int64_t sub_10028D1E4(id a1, CRLCollaboratorCursorHUDPosition *a2, CRLCollaboratorCursorHUDPosition *a3)
{
  CRLCollaboratorCursorHUDPosition *v4;
  CRLCollaboratorCursorHUDPosition *v5;
  id v6;
  int64_t v7;
  BOOL v8;
  uint64_t v9;

  v4 = a2;
  v5 = a3;
  v6 = -[CRLCollaboratorCursorHUDPosition direction](v4, "direction");
  if (v6 == (id)-[CRLCollaboratorCursorHUDPosition direction](v5, "direction"))
  {
    v7 = 0;
  }
  else
  {
    v7 = -1;
    switch(-[CRLCollaboratorCursorHUDPosition direction](v4, "direction"))
    {
      case 0uLL:
        v7 = 1;
        break;
      case 1uLL:
        v8 = (id)-[CRLCollaboratorCursorHUDPosition direction](v5, "direction") == (id)2;
        v9 = 1;
        goto LABEL_11;
      case 3uLL:
        if ((id)-[CRLCollaboratorCursorHUDPosition direction](v5, "direction") != (id)4
          && -[CRLCollaboratorCursorHUDPosition direction](v5, "direction"))
        {
          v7 = 1;
        }
        break;
      case 4uLL:
        v8 = -[CRLCollaboratorCursorHUDPosition direction](v5, "direction") == 0;
        v9 = -1;
LABEL_11:
        if (v8)
          v7 = v9;
        else
          v7 = -v9;
        break;
      default:
        break;
    }
  }

  return v7;
}

int64_t sub_10028D2C8(id a1, CRLCollaboratorCursorHUDPosition *a2, CRLCollaboratorCursorHUDPosition *a3)
{
  CRLCollaboratorCursorHUDPosition *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  int64_t v14;
  int64_t v15;

  v4 = a3;
  -[CRLCollaboratorCursorHUDPosition position](a2, "position");
  v6 = v5;
  v8 = v7;
  -[CRLCollaboratorCursorHUDPosition position](v4, "position");
  v10 = v9;
  v12 = v11;

  v13 = vabdd_f64(v8, v12);
  v14 = -1;
  if (v6 >= v10)
    v15 = 1;
  else
    v15 = -1;
  if (v8 > v12)
    v14 = 1;
  if (v13 >= 0.01)
    return v14;
  else
    return v15;
}

void sub_10028D6A4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10028D6D4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10028D704(uint64_t a1, void *a2)
{
  uint64_t v3;
  objc_class *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;

  v8 = a2;
  objc_opt_class(_TtC8Freeform12CRLBoardItem, v3);
  v5 = sub_1002223BC(v4, *(void **)(a1 + 32));
  v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  v7 = v6;
  if (v6)
    objc_msgSend(v6, "setGeometry:", v8);

}

void sub_10028D824(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10028D83C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_10028D84C(uint64_t a1)
{

}

void sub_10028D854(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  unsigned __int8 v12;
  _TtC8Freeform25CRLCommandSetInfoGeometry *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;

  v3 = a2;
  *(_QWORD *)&v5 = objc_opt_class(_TtC8Freeform12CRLBoardItem, v4).n128_u64[0];
  v7 = v6;
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "info", v5));
  v9 = sub_100221D0C(v7, v8);
  v10 = (void *)objc_claimAutoreleasedReturnValue(v9);

  if (v10)
  {
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "geometry"));
    v12 = objc_msgSend(v3, "isEqual:", v11);

    if ((v12 & 1) == 0)
    {
      v13 = -[CRLCommandSetInfoGeometry initWithBoardItem:geometry:]([_TtC8Freeform25CRLCommandSetInfoGeometry alloc], "initWithBoardItem:geometry:", v10, v3);
      v14 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
      v15 = *(void **)(v14 + 40);
      *(_QWORD *)(v14 + 40) = v13;

    }
  }
  else
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_10124AFA0);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E1668C();
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_10124AFC0);
    v16 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100DE7468(v16);
    v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLCanvasLayout commandToClampModelToLayoutSizeWithAdditionalTransform:]_block_invoke"));
    v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLCanvasLayout.m"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v17, v18, 1140, 0, "invalid nil value for '%{public}s'", "boardItem");

  }
}

void sub_10028DA50(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10028DA80(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10028E84C(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 32);
  v3 = (id)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", a2));
  objc_msgSend(v2, "addObject:", v3);

}

void sub_1002923DC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10029240C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100292600(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100292630(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100292930(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100292960(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100293498(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002934C8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002934F8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100293528(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100293914(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100293944(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100293974(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002939A4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100293D70(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100293DA0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100293DD0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100293E00(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002946C8(void *a1)
{
  _QWORD *v1;
  CRLOnce *v2;
  id v3;

  v1 = a1;
  v2 = objc_alloc_init(CRLOnce);
  v3 = (id)v1[27];
  v1[27] = v2;

}

void sub_100294A9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100294AC0(uint64_t a1, void *a2)
{
  id *v2;
  id v3;
  id WeakRetained;

  v2 = (id *)(a1 + 32);
  v3 = a2;
  WeakRetained = objc_loadWeakRetained(v2);
  objc_msgSend(WeakRetained, "p_willEnterForeground:", v3);

}

void sub_100294C44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100294C68(uint64_t a1, void *a2)
{
  id *v2;
  id v3;
  id WeakRetained;

  v2 = (id *)(a1 + 32);
  v3 = a2;
  WeakRetained = objc_loadWeakRetained(v2);
  objc_msgSend(WeakRetained, "p_didEnterBackground:", v3);

}

void sub_100295018(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100295048(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002958D0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100295900(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100295930(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100295960(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100296734(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100296764(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002969AC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002969DC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002985A4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002985D4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100298EE0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100298F10(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100299F3C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100299F6C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100299F9C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100299FCC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10029A23C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10029A26C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10029A5A0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10029A5D0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10029A600(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10029A630(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10029A7B0(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_10029A7C8(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  unsigned int v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  void *i;
  void *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _BYTE v19[128];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "interactiveCanvasController"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "editorController"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "textInputEditor"));
  v5 = objc_msgSend(v4, "resignFirstResponderWhenKeyboardHides");

  if (v5)
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "interactiveCanvasController"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "editorController"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "textInputEditor"));
    objc_msgSend(v8, "setResignFirstResponderWhenKeyboardHides:", 0);

    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 1;
  }
  objc_msgSend(*(id *)(a1 + 32), "forceStopScrolling");
  v17 = 0u;
  v18 = 0u;
  v15 = 0u;
  v16 = 0u;
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "commonGestureRecognizers", 0));
  v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
  if (v10)
  {
    v11 = v10;
    v12 = *(_QWORD *)v16;
    do
    {
      for (i = 0; i != v11; i = (char *)i + 1)
      {
        if (*(_QWORD *)v16 != v12)
          objc_enumerationMutation(v9);
        v14 = *(void **)(*((_QWORD *)&v15 + 1) + 8 * (_QWORD)i);
        if ((objc_opt_respondsToSelector(v14, "cancelBecauseOfRotation") & 1) != 0
          && (!objc_msgSend(v14, "state") || objc_msgSend(v14, "state") == (id)1 || objc_msgSend(v14, "state") == (id)2))
        {
          objc_msgSend(v14, "performSelector:", "cancelBecauseOfRotation");
        }
      }
      v11 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
    }
    while (v11);
  }

}

void sub_10029A9A0(uint64_t a1)
{
  void *v1;
  void *v2;
  id v3;

  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24))
  {
    v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "interactiveCanvasController"));
    v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "editorController"));
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "textInputEditor"));
    objc_msgSend(v2, "setResignFirstResponderWhenKeyboardHides:", 1);

  }
}

void sub_10029BAA4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10029BAD4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

BOOL sub_10029BD70(id a1, id a2, BOOL *a3)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;

  v3 = a2;
  objc_opt_class(_TtC8Freeform12CRLBoardItem, v4);
  if ((objc_opt_isKindOfClass(v3, v5) & 1) != 0)
    v6 = objc_msgSend(v3, "locked") ^ 1;
  else
    LOBYTE(v6) = 1;

  return v6;
}

void sub_10029CD3C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10029CD6C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10029CF78(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10029CFA8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10029D790(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10029D7C0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10029DD34(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10029DD64(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10029E158(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10029E188(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10029E37C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10029E3AC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10029E478(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10029E490(uint64_t a1, void *a2, _BYTE *a3)
{
  id v5;

  v5 = a2;
  if ((objc_opt_respondsToSelector(v5, "shouldPreventQuickSelect") & 1) != 0
    && objc_msgSend(v5, "shouldPreventQuickSelect"))
  {
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = 0;
    *a3 = 1;
  }

}

void sub_10029EB48(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10029EB78(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10029EE94(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10029EEC4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10029EEF4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10029EF24(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10029F840(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10029F870(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002A0050(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAlertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9088;
  off_1013D9088 = v2;

}

id sub_1002A0080(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "presentViewController:animated:completion:", *(_QWORD *)(a1 + 40), 1, 0);
}

uint64_t sub_1002A0280(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

uint64_t sub_1002A0294(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

id sub_1002A02A8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "presentViewController:animated:completion:", *(_QWORD *)(a1 + 40), 1, 0);
}

void sub_1002A05A0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002A05D0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002A0600(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002A0630(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002A0944(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002A0974(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002A09A4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002A09D4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002A0CAC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002A0CDC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002A0D0C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002A0D3C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002A13F4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002A1424(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002A15F8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002A1628(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002A2734(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002A2764(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002A2864(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1002A2880(uint64_t a1)
{
  id *v1;
  id WeakRetained;
  void *v3;
  id v4;

  v1 = (id *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "preventInsertScribbleElementTimer"));
  objc_msgSend(v3, "invalidate");

  v4 = objc_loadWeakRetained(v1);
  objc_msgSend(v4, "setPreventInsertScribbleElementTimer:", 0);

}

void sub_1002A2F10(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002A2F40(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002A31BC(uint64_t a1)
{
  CRLiOSImageHUDViewController *v2;
  uint64_t v3;
  void *v4;

  v2 = objc_alloc_init(CRLiOSImageHUDViewController);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(void **)(v3 + 208);
  *(_QWORD *)(v3 + 208) = v2;

}

uint64_t sub_1002A49B8(uint64_t a1)
{
  CRLAccessibilityPostLayoutChangedNotification(*(void **)(a1 + 32));
  return 1;
}

uint64_t sub_1002A49D4(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "crlaxSelect");
  CRLAccessibilityPostLayoutChangedNotification(*(void **)(a1 + 40));
  return 1;
}

uint64_t sub_1002A4B8C(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "_crlaxUpdateSelectionWithRep:", *(_QWORD *)(a1 + 40));
  return 1;
}

uint64_t sub_1002A4BAC(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "_crlaxUpdateSelectionWithRep:", *(_QWORD *)(a1 + 40));
  return 1;
}

uint64_t sub_1002A4FFC(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "_crlaxAlignSelectionToLeft");
  return 1;
}

uint64_t sub_1002A5018(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "_crlaxAlignSelectionToCenter");
  return 1;
}

uint64_t sub_1002A5034(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "_crlaxAlignSelectionToRight");
  return 1;
}

uint64_t sub_1002A5050(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "_crlaxAlignSelectionToTop");
  return 1;
}

uint64_t sub_1002A506C(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "_crlaxAlignSelectionToMiddle");
  return 1;
}

uint64_t sub_1002A5088(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "_crlaxAlignSelectionToBottom");
  return 1;
}

uint64_t sub_1002A50A4(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "_crlaxGoToArrange");
  return 1;
}

void sub_1002A55C0(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

id sub_1002A55DC(uint64_t a1, void *a2)
{
  id *v3;
  id v4;
  id WeakRetained;
  void *v6;

  v3 = (id *)(a1 + 40);
  v4 = a2;
  WeakRetained = objc_loadWeakRetained(v3);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "crlaxCustomRotorResultForRotorName:predicate:", *(_QWORD *)(a1 + 32), v4));

  return v6;
}

void sub_1002A574C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

id sub_1002A5768(uint64_t a1, void *a2)
{
  id *v3;
  id v4;
  id WeakRetained;
  void *v6;

  v3 = (id *)(a1 + 40);
  v4 = a2;
  WeakRetained = objc_loadWeakRetained(v3);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "crlaxCustomRotorResultForRotorName:predicate:", *(_QWORD *)(a1 + 32), v4));

  return v6;
}

void sub_1002A58D8(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

id sub_1002A58F4(uint64_t a1, void *a2)
{
  id *v3;
  id v4;
  id WeakRetained;
  void *v6;

  v3 = (id *)(a1 + 40);
  v4 = a2;
  WeakRetained = objc_loadWeakRetained(v3);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "crlaxCustomRotorResultForRotorName:predicate:", *(_QWORD *)(a1 + 32), v4));

  return v6;
}

void sub_1002A5AC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_1002A5AE0(uint64_t a1, void *a2)
{
  id *v3;
  id v4;
  id WeakRetained;
  void *v6;

  v3 = (id *)(a1 + 40);
  v4 = a2;
  WeakRetained = objc_loadWeakRetained(v3);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "crlaxCustomRotorResultForRotorName:predicate:", *(_QWORD *)(a1 + 32), v4));

  return v6;
}

id sub_1002A64F0(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "crlaxAnnounceSearchReference:forRotor:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
}

void sub_1002A747C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002A74AC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002A774C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002A777C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002A8360(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002A8390(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002A91D0(id a1)
{
  CRLCurvedShadowRenderHelper *v1;
  void *v2;

  v1 = objc_alloc_init(CRLCurvedShadowRenderHelper);
  v2 = (void *)qword_1014152E8;
  qword_1014152E8 = (uint64_t)v1;

}

void sub_1002A91F8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002A9228(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002A9258(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002A9288(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002A92B8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002A92E8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002A9530(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002A9560(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

BOOL sub_1002A9A50(id a1, CRLStreamCompression *a2, BOOL a3, OS_dispatch_data *a4, NSError *a5)
{
  uint64_t v5;
  OS_dispatch_data *v7;
  CRLStreamCompression *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;

  if (!a4)
    return 1;
  v5 = a3;
  v7 = a4;
  v8 = a2;
  objc_opt_class(CRLStreamDataCompression, v9);
  v11 = sub_100221D0C(v10, v8);
  v12 = (void *)objc_claimAutoreleasedReturnValue(v11);

  LOBYTE(v5) = objc_msgSend(v12, "handleData:isDone:", v7, v5);
  return v5;
}

uint64_t sub_1002A9BA8(uint64_t a1, void *a2, uint64_t a3, void *a4, void *a5)
{
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;

  v9 = a2;
  v10 = a4;
  v11 = a5;
  v13 = v11;
  v14 = 1;
  if (v10 && v11)
  {
    objc_opt_class(CRLStreamDataCompression, v12);
    v16 = sub_100221D0C(v15, v9);
    v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
    v14 = (uint64_t)objc_msgSend(v17, "handleData:isDone:", v10, a3);

  }
  v18 = *(_QWORD *)(a1 + 32);
  if (v18)
    v14 = (*(unsigned int (**)(uint64_t, id, uint64_t, id, void *))(v18 + 16))(v18, v9, a3, v10, v13) & v14;

  return v14;
}

void sub_1002A9DA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1002A9DBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _BYTE *a5)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "processBytes:size:", a2);
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = (_BYTE)result;
  *a5 = *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) ^ 1;
  return result;
}

void sub_1002AA258(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002AA288(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

uint64_t sub_1002AA2B8(uint64_t a1, __n128 a2)
{
  unint64_t v2;
  uint64_t result;

  v2 = a2.n128_u64[0];
  result = *(_QWORD *)(a1 + 8);
  if (result)
    result = (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 16))(result, a2);
  *(_QWORD *)(a1 + 24) = v2;
  return result;
}

uint64_t sub_1002AA2FC(uint64_t a1, __n128 a2)
{
  unint64_t v2;
  uint64_t result;

  v2 = a2.n128_u64[0];
  result = *(_QWORD *)(a1 + 8);
  if (result)
    result = (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 16))(result, a2);
  *(_QWORD *)(a1 + 24) = v2;
  return result;
}

uint64_t sub_1002AA340(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id WeakRetained;
  unsigned __int8 v7;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 104));
  v7 = objc_msgSend(WeakRetained, "isSnappedToRuler");

  if ((v7 & 1) != 0)
    return sub_1002AA3D4((_QWORD *)a1, a2, a3);
  else
    return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(**(_QWORD **)(a1 + 8) + 40))(*(_QWORD *)(a1 + 8), a2, a3);
}

void sub_1002AA3C4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t sub_1002AA3D4(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  (*(void (**)(_QWORD *))(*a1 + 56))(a1);
  v6 = (*(uint64_t (**)(_QWORD *))(*a1 + 64))(a1);
  sub_10015BD94(a3, *(_QWORD *)(a3 + 8), (char *)(*(_QWORD *)v6 + 80 * a2), *(char **)(v6 + 8), 0xCCCCCCCCCCCCCCCDLL * ((*(_QWORD *)(v6 + 8) - (*(_QWORD *)v6 + 80 * a2)) >> 4));
  return a1[9];
}

void sub_1002AA44C(_QWORD *a1)
{
  unint64_t v1;
  unint64_t v3;
  uint64_t v4;
  char **v5;
  _QWORD *v6;
  _OWORD *v7;
  _OWORD *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  char *v15;
  char *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  char *v20;
  char *v21;
  char *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  char *v26;
  _OWORD *v27;
  unint64_t v28;
  __int128 v29;
  __int128 v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char *v37;
  char *v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  char *v42;
  char *v43;
  char *v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  _OWORD *v48;
  unint64_t v49;
  __int128 v50;
  __int128 v51;
  _OWORD *v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  char *v57;
  char *v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  char *v62;
  char *v63;
  char *v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  _OWORD *v68;
  unint64_t v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  char *v77;
  char *v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  char *v82;
  char *v83;
  char *v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;

  v1 = a1[5];
  if (0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(a1[7] - a1[6]) >> 4) > v1)
  {
    if (v1 && a1[4] < v1)
    {
      sub_10015639C((uint64_t)(a1 + 10), 0);
      v3 = 0;
      a1[5] = 0;
      a1[9] = 0;
    }
    else
    {
      sub_10015639C((uint64_t)(a1 + 10), a1[9]);
      v3 = a1[5];
    }
    v4 = a1[6];
    if (v3 < 0xCCCCCCCCCCCCCCCDLL * ((a1[7] - v4) >> 4))
    {
      v5 = (char **)(a1 + 10);
      v6 = a1 + 12;
      v7 = (_OWORD *)a1[11];
      while (1)
      {
        v8 = (_OWORD *)(v4 + 80 * v3);
        if ((unint64_t)v7 >= *v6)
        {
          v12 = 0xCCCCCCCCCCCCCCCDLL * (((char *)v7 - *v5) >> 4);
          v13 = v12 + 1;
          if (v12 + 1 > 0x333333333333333)
            goto LABEL_83;
          if (0x999999999999999ALL * ((uint64_t)(*v6 - (_QWORD)*v5) >> 4) > v13)
            v13 = 0x999999999999999ALL * ((uint64_t)(*v6 - (_QWORD)*v5) >> 4);
          if (0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*v6 - (_QWORD)*v5) >> 4) >= 0x199999999999999)
            v14 = 0x333333333333333;
          else
            v14 = v13;
          if (v14)
            v15 = (char *)sub_10015C128((uint64_t)(a1 + 12), v14);
          else
            v15 = 0;
          v16 = &v15[80 * v12];
          *(_OWORD *)v16 = *v8;
          v17 = v8[1];
          v18 = v8[2];
          v19 = v8[4];
          *((_OWORD *)v16 + 3) = v8[3];
          *((_OWORD *)v16 + 4) = v19;
          *((_OWORD *)v16 + 1) = v17;
          *((_OWORD *)v16 + 2) = v18;
          v21 = (char *)a1[10];
          v20 = (char *)a1[11];
          v22 = v16;
          if (v20 != v21)
          {
            do
            {
              *((_OWORD *)v22 - 5) = *((_OWORD *)v20 - 5);
              v23 = *((_OWORD *)v20 - 4);
              v24 = *((_OWORD *)v20 - 3);
              v25 = *((_OWORD *)v20 - 1);
              *((_OWORD *)v22 - 2) = *((_OWORD *)v20 - 2);
              *((_OWORD *)v22 - 1) = v25;
              *((_OWORD *)v22 - 4) = v23;
              *((_OWORD *)v22 - 3) = v24;
              v22 -= 80;
              v20 -= 80;
            }
            while (v20 != v21);
            v20 = *v5;
          }
          v7 = v16 + 80;
          a1[10] = v22;
          a1[11] = v16 + 80;
          a1[12] = &v15[80 * v14];
          if (v20)
            operator delete(v20);
        }
        else
        {
          *v7 = *v8;
          v9 = v8[1];
          v10 = v8[2];
          v11 = v8[4];
          v7[3] = v8[3];
          v7[4] = v11;
          v7[1] = v9;
          v7[2] = v10;
          v7 += 5;
        }
        a1[11] = v7;
        if (sub_1002AA98C((uint64_t)a1))
          break;
        v31 = a1[4];
        if (v3 < v31)
        {
          v32 = 1;
LABEL_77:
          a1[9] += v32;
        }
LABEL_78:
        ++v3;
        v4 = a1[6];
        if (v3 >= 0xCCCCCCCCCCCCCCCDLL * ((a1[7] - v4) >> 4))
          goto LABEL_81;
      }
      v26 = (char *)(v7 - 5);
      a1[11] = v7 - 5;
      v27 = v7 - 10;
      v28 = a1[12];
      if ((unint64_t)(v7 - 5) >= v28)
      {
        v33 = 0xCCCCCCCCCCCCCCCDLL * ((v26 - *v5) >> 4);
        v34 = v33 + 1;
        if (v33 + 1 > 0x333333333333333)
          goto LABEL_83;
        v35 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v28 - (_QWORD)*v5) >> 4);
        if (2 * v35 > v34)
          v34 = 2 * v35;
        if (v35 >= 0x199999999999999)
          v36 = 0x333333333333333;
        else
          v36 = v34;
        if (v36)
          v37 = (char *)sub_10015C128((uint64_t)(a1 + 12), v36);
        else
          v37 = 0;
        v38 = &v37[80 * v33];
        *(_OWORD *)v38 = *v27;
        v39 = v27[1];
        v40 = v27[2];
        v41 = v27[4];
        *((_OWORD *)v38 + 3) = v27[3];
        *((_OWORD *)v38 + 4) = v41;
        *((_OWORD *)v38 + 1) = v39;
        *((_OWORD *)v38 + 2) = v40;
        v43 = (char *)a1[10];
        v42 = (char *)a1[11];
        v44 = v38;
        if (v42 != v43)
        {
          do
          {
            *((_OWORD *)v44 - 5) = *((_OWORD *)v42 - 5);
            v45 = *((_OWORD *)v42 - 4);
            v46 = *((_OWORD *)v42 - 3);
            v47 = *((_OWORD *)v42 - 1);
            *((_OWORD *)v44 - 2) = *((_OWORD *)v42 - 2);
            *((_OWORD *)v44 - 1) = v47;
            *((_OWORD *)v44 - 4) = v45;
            *((_OWORD *)v44 - 3) = v46;
            v44 -= 80;
            v42 -= 80;
          }
          while (v42 != v43);
          v42 = *v5;
        }
        v7 = v38 + 80;
        a1[10] = v44;
        a1[11] = v38 + 80;
        a1[12] = &v37[80 * v36];
        if (v42)
          operator delete(v42);
      }
      else
      {
        v29 = *(v7 - 7);
        *(v7 - 3) = *(v7 - 8);
        *(v7 - 2) = v29;
        *(v7 - 1) = *(v7 - 6);
        v30 = *(v7 - 9);
        *(_OWORD *)v26 = *v27;
        *(v7 - 4) = v30;
      }
      a1[11] = v7;
      v48 = v7 - 5;
      v49 = a1[12];
      if ((unint64_t)v7 >= v49)
      {
        v53 = 0xCCCCCCCCCCCCCCCDLL * (((char *)v7 - *v5) >> 4);
        v54 = v53 + 1;
        if (v53 + 1 > 0x333333333333333)
          goto LABEL_83;
        v55 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v49 - (_QWORD)*v5) >> 4);
        if (2 * v55 > v54)
          v54 = 2 * v55;
        if (v55 >= 0x199999999999999)
          v56 = 0x333333333333333;
        else
          v56 = v54;
        if (v56)
          v57 = (char *)sub_10015C128((uint64_t)(a1 + 12), v56);
        else
          v57 = 0;
        v58 = &v57[80 * v53];
        *(_OWORD *)v58 = *v48;
        v59 = v48[1];
        v60 = v48[2];
        v61 = v48[4];
        *((_OWORD *)v58 + 3) = v48[3];
        *((_OWORD *)v58 + 4) = v61;
        *((_OWORD *)v58 + 1) = v59;
        *((_OWORD *)v58 + 2) = v60;
        v63 = (char *)a1[10];
        v62 = (char *)a1[11];
        v64 = v58;
        if (v62 != v63)
        {
          do
          {
            *((_OWORD *)v64 - 5) = *((_OWORD *)v62 - 5);
            v65 = *((_OWORD *)v62 - 4);
            v66 = *((_OWORD *)v62 - 3);
            v67 = *((_OWORD *)v62 - 1);
            *((_OWORD *)v64 - 2) = *((_OWORD *)v62 - 2);
            *((_OWORD *)v64 - 1) = v67;
            *((_OWORD *)v64 - 4) = v65;
            *((_OWORD *)v64 - 3) = v66;
            v64 -= 80;
            v62 -= 80;
          }
          while (v62 != v63);
          v62 = *v5;
        }
        v52 = v58 + 80;
        a1[10] = v64;
        a1[11] = v58 + 80;
        a1[12] = &v57[80 * v56];
        if (v62)
          operator delete(v62);
      }
      else
      {
        v50 = *(v7 - 2);
        v7[2] = *(v7 - 3);
        v7[3] = v50;
        v7[4] = *(v7 - 1);
        v51 = *(v7 - 4);
        *v7 = *v48;
        v7[1] = v51;
        v52 = v7 + 5;
      }
      a1[11] = v52;
      v68 = (_OWORD *)(a1[6] + 80 * v3);
      v69 = a1[12];
      if ((unint64_t)v52 >= v69)
      {
        v73 = 0xCCCCCCCCCCCCCCCDLL * (((char *)v52 - *v5) >> 4);
        v74 = v73 + 1;
        if (v73 + 1 > 0x333333333333333)
LABEL_83:
          sub_100007810();
        v75 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v69 - (_QWORD)*v5) >> 4);
        if (2 * v75 > v74)
          v74 = 2 * v75;
        if (v75 >= 0x199999999999999)
          v76 = 0x333333333333333;
        else
          v76 = v74;
        if (v76)
          v77 = (char *)sub_10015C128((uint64_t)(a1 + 12), v76);
        else
          v77 = 0;
        v78 = &v77[80 * v73];
        *(_OWORD *)v78 = *v68;
        v79 = v68[1];
        v80 = v68[2];
        v81 = v68[4];
        *((_OWORD *)v78 + 3) = v68[3];
        *((_OWORD *)v78 + 4) = v81;
        *((_OWORD *)v78 + 1) = v79;
        *((_OWORD *)v78 + 2) = v80;
        v83 = (char *)a1[10];
        v82 = (char *)a1[11];
        v84 = v78;
        if (v82 != v83)
        {
          do
          {
            *((_OWORD *)v84 - 5) = *((_OWORD *)v82 - 5);
            v85 = *((_OWORD *)v82 - 4);
            v86 = *((_OWORD *)v82 - 3);
            v87 = *((_OWORD *)v82 - 1);
            *((_OWORD *)v84 - 2) = *((_OWORD *)v82 - 2);
            *((_OWORD *)v84 - 1) = v87;
            *((_OWORD *)v84 - 4) = v85;
            *((_OWORD *)v84 - 3) = v86;
            v84 -= 80;
            v82 -= 80;
          }
          while (v82 != v83);
          v82 = *v5;
        }
        v7 = v78 + 80;
        a1[10] = v84;
        a1[11] = v78 + 80;
        a1[12] = &v77[80 * v76];
        if (v82)
          operator delete(v82);
      }
      else
      {
        *v52 = *v68;
        v70 = v68[1];
        v71 = v68[2];
        v72 = v68[4];
        v52[3] = v68[3];
        v52[4] = v72;
        v52[1] = v70;
        v52[2] = v71;
        v7 = v52 + 5;
      }
      a1[11] = v7;
      v31 = a1[4];
      if (v3 >= v31)
        goto LABEL_78;
      v32 = 3;
      goto LABEL_77;
    }
    v31 = a1[4];
LABEL_81:
    a1[5] = v31;
  }
}

BOOL sub_1002AA98C(uint64_t a1)
{
  uint64_t v1;
  _BOOL8 result;
  uint64_t v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;

  v1 = *(_QWORD *)(a1 + 80);
  if (0xCCCCCCCCCCCCCCCDLL * ((*(_QWORD *)(a1 + 88) - v1) >> 4) < 3)
    return 0;
  v3 = v1 + 16 * ((*(_QWORD *)(a1 + 88) - v1) >> 4);
  v4 = *(double *)(v3 - 152);
  v5 = sub_1000603B8(*(double *)(v3 - 232), *(double *)(v3 - 224), v4);
  v7 = v6;
  v8 = sub_1000603B8(*(double *)(v3 - 72), *(double *)(v3 - 64), v4);
  v10 = v9;
  v11 = sub_100061070(v5, v7);
  v12 = sub_100061070(v8, v10);
  result = 0;
  if (v11 >= 0.00001 && v12 >= 0.00001)
  {
    v13 = sub_100060398(v5, v7);
    v15 = v14;
    v16 = sub_100060398(v8, v10);
    return sub_1000603C4(v13, v15, v16, v17) >= 0.9;
  }
  return result;
}

uint64_t sub_1002AAA9C(uint64_t a1)
{
  void *v2;
  void *v3;

  objc_destroyWeak((id *)(a1 + 104));
  *(_QWORD *)a1 = off_10124BF48;
  v2 = *(void **)(a1 + 80);
  if (v2)
  {
    *(_QWORD *)(a1 + 88) = v2;
    operator delete(v2);
  }
  *(_QWORD *)a1 = off_10124BFB0;
  v3 = *(void **)(a1 + 48);
  if (v3)
  {
    *(_QWORD *)(a1 + 56) = v3;
    operator delete(v3);
  }
  return a1;
}

void sub_1002AAAFC(uint64_t a1)
{
  void *v2;
  void *v3;

  objc_destroyWeak((id *)(a1 + 104));
  *(_QWORD *)a1 = off_10124BF48;
  v2 = *(void **)(a1 + 80);
  if (v2)
  {
    *(_QWORD *)(a1 + 88) = v2;
    operator delete(v2);
  }
  *(_QWORD *)a1 = off_10124BFB0;
  v3 = *(void **)(a1 + 48);
  if (v3)
  {
    *(_QWORD *)(a1 + 56) = v3;
    operator delete(v3);
  }
  operator delete();
}

_QWORD *sub_1002AAB6C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *result;

  v2 = *(_QWORD *)(a1 + 8);
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 48))(v2);
  *(_BYTE *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 72) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  result = (_QWORD *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 64))(a1);
  result[1] = *result;
  return result;
}

uint64_t sub_1002AABC8(uint64_t a1)
{
  uint64_t v2;

  v2 = a1 + 48;
  sub_10015639C(a1 + 48, *(_QWORD *)(a1 + 32));
  *(_QWORD *)(a1 + 32) = (*(uint64_t (**)(_QWORD, _QWORD, uint64_t))(**(_QWORD **)(a1 + 8) + 40))(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 32), v2);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 72))(a1);
}

uint64_t sub_1002AAC1C(uint64_t a1)
{
  return a1 + 80;
}

uint64_t sub_1002AAC24()
{
  return 0;
}

_QWORD *sub_1002AAC2C(_QWORD *a1)
{
  void *v2;
  void *v3;

  *a1 = off_10124BF48;
  v2 = (void *)a1[10];
  if (v2)
  {
    a1[11] = v2;
    operator delete(v2);
  }
  *a1 = off_10124BFB0;
  v3 = (void *)a1[6];
  if (v3)
  {
    a1[7] = v3;
    operator delete(v3);
  }
  return a1;
}

void sub_1002AAC84(_QWORD *a1)
{
  void *v2;
  void *v3;

  *a1 = off_10124BF48;
  v2 = (void *)a1[10];
  if (v2)
  {
    a1[11] = v2;
    operator delete(v2);
  }
  *a1 = off_10124BFB0;
  v3 = (void *)a1[6];
  if (v3)
  {
    a1[7] = v3;
    operator delete(v3);
  }
  operator delete();
}

uint64_t sub_1002AACF0(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result)
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 48))(result);
  *(_BYTE *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 72) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  return result;
}

void sub_1002AB068(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1002AB0D0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002AB100(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002AB130(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002AB160(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002AB3C8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1002AB408(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002AB438(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002AB998(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002ABA04(void **a1, unint64_t a2)
{
  uint64_t v3;
  _BYTE *v4;
  int64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;

  v4 = a1[2];
  v3 = (uint64_t)(a1 + 2);
  if (a2 > (v4 - (_BYTE *)*a1) >> 4)
  {
    if (a2 >> 60)
      sub_100007810();
    v5 = (_BYTE *)a1[1] - (_BYTE *)*a1;
    v6 = (char *)sub_10001FB2C(v3, a2);
    v7 = &v6[v5 & 0xFFFFFFFFFFFFFFF0];
    v9 = &v6[16 * v8];
    v11 = (char *)*a1;
    v10 = (char *)a1[1];
    v12 = v7;
    if (v10 != *a1)
    {
      do
      {
        *((_OWORD *)v12 - 1) = *((_OWORD *)v10 - 1);
        v12 -= 16;
        v10 -= 16;
      }
      while (v10 != v11);
      v10 = (char *)*a1;
    }
    *a1 = v12;
    a1[1] = v7;
    a1[2] = v9;
    if (v10)
      operator delete(v10);
  }
}

void sub_1002ABAA4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002ABAD4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002ABD18(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002ABD40(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002ABD70(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002AC0FC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002AC138(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002AC168(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002AC198(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002AC1C8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002AC61C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002AC680(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002AC6B0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

_QWORD *sub_1002AC894(_QWORD *result, const void *a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;
  uint64_t v7;
  size_t v8;

  if (a4)
  {
    v6 = result;
    result = sub_10001FC68(result, a4);
    v7 = v6[1];
    v8 = a3 - (_QWORD)a2;
    if (v8)
      result = memmove((void *)v6[1], a2, v8);
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_1002AC8F0(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_1002AD0FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1002AD114(uint64_t a1, void *a2)
{
  id result;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = objc_msgSend(a2, "frameForCulling");
  v4 = *(_QWORD **)(*(_QWORD *)(a1 + 32) + 8);
  v4[4] = v5;
  v4[5] = v6;
  v4[6] = v7;
  v4[7] = v8;
  return result;
}

void sub_1002ADFA0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002ADFD0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002AEB64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,char a57)
{
  _Block_object_dispose(&a57, 8);
  _Unwind_Resume(a1);
}

void sub_1002AEBA4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002AEBD4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

uint64_t sub_1002AEC04(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1002AEC14(uint64_t a1)
{

}

void sub_1002AEC1C(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  CRLCanvasInfoGeometry *v8;
  void *v9;
  CRLCanvasInfoGeometry *v10;
  uint64_t v11;
  void *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _OWORD v16[3];

  if (a2)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "geometryInRoot"));
    v4 = v3;
    if (v3)
      objc_msgSend(v3, "fullTransform");
    else
      memset(v16, 0, sizeof(v16));
    v10 = (CRLCanvasInfoGeometry *)objc_claimAutoreleasedReturnValue(+[CRLCanvasInfoGeometry geometryFromFullTransform:](CRLCanvasInfoGeometry, "geometryFromFullTransform:", v16));
  }
  else
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_10124C280);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E18760();
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_10124C2A0);
    v5 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100DE7468(v5);
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLFreehandDrawingEditor createFreehandDrawingsToCopyForSubselection]_block_invoke"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFreehandDrawingEditor.m"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v6, v7, 464, 0, "Expected a layout so that we can calculate the geometries correctly");

    v8 = [CRLCanvasInfoGeometry alloc];
    v9 = *(void **)(a1 + 32);
    if (v9)
    {
      objc_msgSend(v9, "transformInRoot");
      v9 = *(void **)(a1 + 32);
    }
    else
    {
      v14 = 0u;
      v15 = 0u;
      v13 = 0u;
    }
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "geometry", v13, v14, v15));
    objc_msgSend(v4, "size");
    v10 = -[CRLCanvasInfoGeometry initWithTransform:size:](v8, "initWithTransform:size:", &v13);
  }
  v11 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v12 = *(void **)(v11 + 40);
  *(_QWORD *)(v11 + 40) = v10;

}

void sub_1002AEE18(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002AEE48(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002AEE78(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002AEEA8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002AEED8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002AEF08(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002AF204(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002AF234(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002AF4B4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002AF4E4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002AF514(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  _QWORD v11[2];
  void (*v12)(uint64_t);
  void *v13;
  id v14;
  uint64_t v15;
  id v16;
  id v17;
  __int128 v18;

  v5 = a2;
  v6 = a3;
  v11[0] = _NSConcreteStackBlock;
  v12 = sub_1002AF5FC;
  v13 = &unk_10124C3E8;
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(void **)(a1 + 40);
  v14 = v5;
  v15 = v7;
  v11[1] = 3221225472;
  v18 = *(_OWORD *)(a1 + 48);
  v16 = v6;
  v17 = v8;
  v9 = v6;
  v10 = v5;
  if (+[NSThread isMainThread](NSThread, "isMainThread", _NSConcreteStackBlock, 3221225472))
    v12((uint64_t)v11);
  else
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v11);

}

void sub_1002AF5FC(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;

  v2 = *(_QWORD *)(a1 + 32);
  if (v2)
  {
    objc_msgSend(*(id *)(a1 + 40), "p_insertFreehandDrawingsFromProviders:atUnscaledPoint:isCrossDocument:completionHandler:", v2, 0, *(_QWORD *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72));
  }
  else
  {
    if (qword_10147E368 != -1)
      dispatch_once(&qword_10147E368, &stru_10124C3C0);
    v3 = off_1013D9068;
    if (os_log_type_enabled((os_log_t)off_1013D9068, OS_LOG_TYPE_ERROR))
      sub_100DED370(v3);
    if (objc_msgSend(*(id *)(a1 + 48), "count"))
    {
      v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "interactiveCanvasController"));
      v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "layerHost"));
      objc_msgSend(v5, "presentErrors:withLocalizedDescription:completionHandler:", *(_QWORD *)(a1 + 48), 0, 0);

    }
    v6 = *(_QWORD *)(a1 + 56);
    if (v6)
      (*(void (**)(uint64_t, void *))(v6 + 16))(v6, &__NSArray0__struct);
  }
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "interactiveCanvasController"));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "editingCoordinator"));
  objc_msgSend(v8, "resumeCollaborationWithReason:", CFSTR("CRLFreehandEditorInsertingAsyncDrawables"));

}

void sub_1002AF71C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_1002B0030(_Unwind_Exception *a1)
{
  _Block_object_dispose(&STACK[0x220], 8);
  _Unwind_Resume(a1);
}

void sub_1002B00A0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002B00D0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002B0100(uint64_t a1, void *a2)
{
  id v3;
  CGRect *v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  CGAffineTransform v13;
  CGRect v14;
  CGRect v15;

  v3 = a2;
  v4 = *(CGRect **)(*(_QWORD *)(a1 + 32) + 8);
  objc_msgSend(v3, "boundsForStandardKnobs");
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;
  if (v3)
    objc_msgSend(v3, "transform");
  else
    memset(&v13, 0, sizeof(v13));
  v14.origin.x = v6;
  v14.origin.y = v8;
  v14.size.width = v10;
  v14.size.height = v12;
  v15 = CGRectApplyAffineTransform(v14, &v13);
  *(CGRect *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 32) = CGRectUnion(v4[1], v15);

}

void sub_1002B080C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002B083C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002B086C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002B089C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

id sub_1002B26C8(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "makeDuplicateOfBoardItem:", a2);
}

void sub_1002B26D4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002B2704(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002B2734(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002B2764(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002B2794(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002B27C4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002B2D4C(id *a1)
{
  void *v2;
  void *v3;
  id v4;

  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "canvasEditor"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[6], "boardItems"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "selectionPathWithInfos:", v2));
  objc_msgSend(a1[4], "setSelectionPath:", v3);

}

_TtC8Freeform12CRLBoardItem *__cdecl sub_1002B2F98(id a1, CRLCanvasElementInfo *a2)
{
  CRLCanvasElementInfo *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;

  v2 = a2;
  objc_opt_class(_TtC8Freeform12CRLBoardItem, v3);
  v5 = sub_100221D0C(v4, v2);
  v6 = (void *)objc_claimAutoreleasedReturnValue(v5);

  return (_TtC8Freeform12CRLBoardItem *)v6;
}

_TtC8Freeform27CRLFreehandDrawingShapeItem *__cdecl sub_1002B2FE0(id a1, _TtC8Freeform12CRLBoardItem *a2)
{
  _TtC8Freeform12CRLBoardItem *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;

  v2 = a2;
  objc_opt_class(_TtC8Freeform27CRLFreehandDrawingShapeItem, v3);
  v5 = sub_100221D0C(v4, v2);
  v6 = (void *)objc_claimAutoreleasedReturnValue(v5);

  return (_TtC8Freeform27CRLFreehandDrawingShapeItem *)v6;
}

void sub_1002B30E8(id a1)
{
  id v1;
  void *v2;

  v1 = objc_alloc_init((Class)NSNumberFormatter);
  v2 = (void *)qword_101415308;
  qword_101415308 = (uint64_t)v1;

  objc_msgSend((id)qword_101415308, "setNumberStyle:", 3);
}

void sub_1002B36D0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002B3700(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002B38A4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002B38D4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002B3AD0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002B3B00(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002B3C80(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002B3CB0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002B3E44(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002B3E74(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002B3FF0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002B4020(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002B5E3C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002B5E6C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002B5E9C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002B5ECC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002B5EFC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002B5F2C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002B69E0(void *a1)
{
  dispatch_queue_attr_t v2;
  NSObject *v3;
  _QWORD *v4;
  dispatch_queue_t v5;
  void *v6;
  CRLScaledProgress *v7;
  id v8;

  v2 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  v3 = objc_claimAutoreleasedReturnValue(v2);
  v4 = a1;
  v5 = dispatch_queue_create("com.apple.freeform.CRLMovieItemImporter", v3);
  v6 = (void *)v4[6];
  v4[6] = v5;

  v7 = objc_alloc_init(CRLScaledProgress);
  v8 = (id)v4[8];
  v4[8] = v7;

}

id sub_1002B6B88(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "p_createAssetDataAndThenContinueImport");
}

void sub_1002B6F14(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002B6F44(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002B6F74(uint64_t a1, void *a2, void *a3)
{
  id v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  NSObject *v13;
  _QWORD block[5];

  v6 = a2;
  v7 = a3;
  if (v7)
  {
    if (qword_10147E368 != -1)
      dispatch_once(&qword_10147E368, &stru_10124C8F8);
    v8 = off_1013D9068;
    if (os_log_type_enabled((os_log_t)off_1013D9068, OS_LOG_TYPE_ERROR))
      sub_100E1904C(v8);
  }
  else
  {
    objc_storeStrong((id *)(*(_QWORD *)(a1 + 32) + 72), a2);
    v9 = objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "AVAssetAndReturnError:", 0));
    v10 = *(_QWORD *)(a1 + 32);
    v11 = *(void **)(v10 + 96);
    *(_QWORD *)(v10 + 96) = v9;

  }
  v12 = *(_QWORD *)(a1 + 32);
  v13 = *(NSObject **)(v12 + 48);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1002B70D4;
  block[3] = &unk_10122D110;
  block[4] = v12;
  dispatch_async(v13, block);

}

void sub_1002B70A4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

id sub_1002B70D4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_performMovieCompatibilityAnalysis");
}

void sub_1002B73EC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002B741C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002B744C(_QWORD *a1)
{
  uint64_t v2;
  void *v3;
  NSObject *v4;
  id v5;
  uint64_t v6;
  _QWORD block[5];
  id v8;
  uint64_t v9;

  v2 = a1[4];
  v3 = (void *)a1[5];
  v4 = *(NSObject **)(v2 + 48);
  block[0] = _NSConcreteStackBlock;
  block[2] = sub_1002B74D0;
  block[3] = &unk_10122EC90;
  block[1] = 3221225472;
  block[4] = v2;
  v5 = v3;
  v6 = a1[6];
  v8 = v5;
  v9 = v6;
  dispatch_async(v4, block);

}

void sub_1002B74D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  uint64_t v12;

  v2 = *(_QWORD *)(a1 + 32);
  if (!*(_BYTE *)(v2 + 128))
  {
    v5 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v2 + 104), "error"));
    v3 = *(_QWORD *)(a1 + 32);
    if (v5)
    {
      v4 = (void *)v5;
      goto LABEL_6;
    }
    v7 = (uint64_t)objc_msgSend(*(id *)(v3 + 104), "compatibilityLevel");
    v8 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 104), "wasAssetHEVC");
    v9 = *(_QWORD *)(a1 + 40);
    if (v9)
    {
      if (*(_BYTE *)(*(_QWORD *)(a1 + 32) + 129))
        LODWORD(v9) = 0;
      else
        LODWORD(v9) = *(_QWORD *)(a1 + 48) > 3;
    }
    if (v7 < 5)
      v10 = v9;
    else
      v10 = 0;
    if (v7 == 4)
      +[CRLMovieCompatibilityChecker assetContainsVideoTracksWithAlpha:](CRLMovieCompatibilityChecker, "assetContainsVideoTracksWithAlpha:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 96));
    v11 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 96), "crl_containsHDRContent");
    if (*(_QWORD *)(a1 + 40) && v11 | v10)
    {
      *(_BYTE *)(*(_QWORD *)(a1 + 32) + 129) = 1;
      LOBYTE(v12) = v8;
      objc_msgSend(*(id *)(a1 + 40), "boardItemImporter:needsMediaCompatibilityFeedbackWithReasons:forMediaType:usingBlock:", _NSConcreteStackBlock, 3221225472, sub_1002B76C0, &unk_10124C9B0, *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 48), v7, v12);
    }
    else
    {
      objc_msgSend(*(id *)(a1 + 32), "p_importBoardItemFromAssetConvertingIfNeededToRequiredCompatibilityLevel:allowHEVCContent:fromCompatibilityLevel:", *(_QWORD *)(a1 + 48), 1, v7);
    }
  }
  v3 = *(_QWORD *)(a1 + 32);
  if (*(_BYTE *)(v3 + 128))
  {
    v4 = 0;
LABEL_6:
    objc_msgSend((id)v3, "p_finishImportingWithBoardItem:error:", 0, v4);
    v3 = *(_QWORD *)(a1 + 32);

  }
  v6 = *(void **)(v3 + 104);
  *(_QWORD *)(v3 + 104) = 0;

}

void sub_1002B76C0(uint64_t a1, char a2, char a3)
{
  uint64_t v3;
  NSObject *v4;
  _QWORD v5[5];
  __int128 v6;
  char v7;
  char v8;
  char v9;

  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(NSObject **)(v3 + 48);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_1002B773C;
  v5[3] = &unk_10124C988;
  v5[4] = v3;
  v7 = a2;
  v8 = a3;
  v9 = *(_BYTE *)(a1 + 56);
  v6 = *(_OWORD *)(a1 + 40);
  dispatch_async(v4, v5);
}

id sub_1002B773C(uint64_t a1)
{
  _BYTE *v2;
  uint64_t v4;

  v2 = *(_BYTE **)(a1 + 32);
  if (v2[128])
    return objc_msgSend(v2, "p_finishImportingWithBoardItem:error:", 0, 0);
  if (*(_BYTE *)(a1 + 56))
    v4 = *(_QWORD *)(a1 + 40);
  else
    v4 = 3;
  if (!*(_BYTE *)(a1 + 57))
  {
    if (*(_BYTE *)(a1 + 58))
      v4 = 5;
  }
  return objc_msgSend(v2, "p_importBoardItemFromAssetConvertingIfNeededToRequiredCompatibilityLevel:allowHEVCContent:fromCompatibilityLevel:", v4, *(unsigned __int8 *)(a1 + 57) != 0, *(_QWORD *)(a1 + 48));
}

void sub_1002B7AD0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002B7B00(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002B7B30(uint64_t a1)
{
  uint64_t v1;
  NSObject *v2;
  _QWORD block[5];

  v1 = *(_QWORD *)(a1 + 32);
  v2 = *(NSObject **)(v1 + 48);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1002B7B90;
  block[3] = &unk_10122D110;
  block[4] = v1;
  dispatch_async(v2, block);
}

void sub_1002B7B90(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id obj;

  v2 = *(_QWORD *)(a1 + 32);
  if (*(_BYTE *)(v2 + 128))
  {
    v3 = 0;
  }
  else
  {
    obj = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v2 + 112), "convertedMediaData"));
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 112), "error"));
    v2 = *(_QWORD *)(a1 + 32);
    if (obj)
    {
      objc_storeStrong((id *)(v2 + 72), obj);
      v4 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 72), "AVAssetAndReturnError:", 0));
      v5 = *(_QWORD *)(a1 + 32);
      v6 = *(void **)(v5 + 96);
      *(_QWORD *)(v5 + 96) = v4;

      objc_msgSend(*(id *)(a1 + 32), "p_importBoardItemFromAsset");
      goto LABEL_6;
    }
  }
  objc_msgSend((id)v2, "p_finishImportingWithBoardItem:error:", 0, v3);
  obj = 0;
LABEL_6:
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(void **)(v7 + 112);
  *(_QWORD *)(v7 + 112) = 0;

}

void sub_1002B7FE8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002B8018(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002B83FC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002B842C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002B8540(uint64_t a1, CGImage *a2, uint64_t a3, void *a4)
{
  id v6;
  uint64_t v7;
  void *v8;
  NSObject *v9;
  id v10;
  _QWORD v11[5];
  id v12;
  id v13;
  CGImage *v14;

  v6 = a4;
  CGImageRetain(a2);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(void **)(a1 + 40);
  v9 = *(NSObject **)(v7 + 48);
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  v11[2] = sub_1002B85F4;
  v11[3] = &unk_10124CB28;
  v14 = a2;
  v11[4] = v7;
  v12 = v6;
  v13 = v8;
  v10 = v6;
  dispatch_async(v9, v11);

}

void sub_1002B85F4(uint64_t a1)
{
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  _TtC8Freeform27CRLPreinsertionAssetWrapper *v5;
  __CFData *v6;
  void *v7;
  void *v8;
  void *v9;
  _TtC8Freeform27CRLPreinsertionAssetWrapper *v10;
  id v11;
  void *v12;
  void *v13;
  unsigned int v14;
  unsigned int v15;
  _QWORD v16[5];
  id v17;
  id v18;

  v2 = *(_BYTE **)(a1 + 32);
  if (!v2[128])
  {
    if (*(_QWORD *)(a1 + 56))
    {
      v5 = [_TtC8Freeform27CRLPreinsertionAssetWrapper alloc];
      v6 = sub_100435130(*(CGImage **)(a1 + 56));
      v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "boardItemFactory"));
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "assetOwner"));
      v18 = 0;
      v10 = -[CRLPreinsertionAssetWrapper initWithData:filename:owner:error:](v5, "initWithData:filename:owner:error:", v7, CFSTR("posterImage.png"), v9, &v18);
      v11 = v18;

      if (v10)
      {

        goto LABEL_8;
      }
      if (qword_10147E368 != -1)
        dispatch_once(&qword_10147E368, &stru_10124CA90);
      v12 = off_1013D9068;
      if (os_log_type_enabled((os_log_t)off_1013D9068, OS_LOG_TYPE_ERROR))
        sub_100E19300(v12);

    }
    if (!*(_QWORD *)(a1 + 40)
      || (objc_msgSend(*(id *)(a1 + 48), "isAudioOnly") & 1) != 0
      || objc_msgSend(*(id *)(a1 + 40), "code") != (id)-11832
      || (v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "domain")),
          v14 = objc_msgSend(v13, "isEqualToString:", AVFoundationErrorDomain),
          v13,
          !v14)
      || (v10 = (_TtC8Freeform27CRLPreinsertionAssetWrapper *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "generateEmptyPosterImage"))) == 0)
    {
      v15 = objc_msgSend(*(id *)(a1 + 48), "isAudioOnly");
      v2 = *(_BYTE **)(a1 + 32);
      if (v15)
      {
        v4 = *(_QWORD *)(a1 + 40);
        v3 = *(_QWORD *)(a1 + 48);
      }
      else
      {
        v4 = *(_QWORD *)(a1 + 40);
        v3 = 0;
      }
      goto LABEL_3;
    }
LABEL_8:
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 3221225472;
    v16[2] = sub_1002B8850;
    v16[3] = &unk_10124CB00;
    v16[4] = *(_QWORD *)(a1 + 32);
    v17 = *(id *)(a1 + 48);
    -[CRLPreinsertionAssetWrapper createAssetWithCompletionHandler:](v10, "createAssetWithCompletionHandler:", v16);

    goto LABEL_4;
  }
  v3 = 0;
  v4 = 0;
LABEL_3:
  objc_msgSend(v2, "p_finishImportingWithBoardItem:error:", v3, v4);
LABEL_4:
  CGImageRelease(*(CGImageRef *)(a1 + 56));
}

void sub_1002B8820(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_1002B8850(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  NSObject *v9;
  id v10;
  id v11;
  _QWORD v12[4];
  id v13;
  uint64_t v14;
  id v15;
  id v16;

  v5 = a2;
  v6 = a3;
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(void **)(a1 + 40);
  v9 = *(NSObject **)(v7 + 48);
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_1002B8918;
  v12[3] = &unk_10124CAD8;
  v13 = v6;
  v14 = v7;
  v15 = v5;
  v16 = v8;
  v10 = v5;
  v11 = v6;
  dispatch_async(v9, v12);

}

id sub_1002B8918(uint64_t a1)
{
  id *v2;
  void *v3;

  v2 = (id *)(a1 + 32);
  if (*(_QWORD *)(a1 + 32))
  {
    if (qword_10147E368 != -1)
      dispatch_once(&qword_10147E368, &stru_10124CAB0);
    v3 = off_1013D9068;
    if (os_log_type_enabled((os_log_t)off_1013D9068, OS_LOG_TYPE_ERROR))
      sub_100E19394(v2, v3);
  }
  else
  {
    objc_storeStrong((id *)(*(_QWORD *)(a1 + 40) + 80), *(id *)(a1 + 48));
  }
  return objc_msgSend(*(id *)(a1 + 40), "p_finishImportingWithBoardItem:error:", *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 32));
}

void sub_1002B89C0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_1002B8AA8(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  NSObject *v3;
  _QWORD v4[5];
  id v5;

  v1 = *(_QWORD *)(a1 + 32);
  v2 = *(void **)(a1 + 40);
  v3 = *(NSObject **)(v1 + 48);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1002B8B24;
  v4[3] = &unk_10122D3D8;
  v4[4] = v1;
  v5 = v2;
  dispatch_async(v3, v4);

}

void sub_1002B8B24(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  void *i;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  unsigned __int8 v16;
  void *v17;
  id v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  _BYTE v23[128];

  if (*(_BYTE *)(*(_QWORD *)(a1 + 32) + 128))
  {
    v2 = 0;
    goto LABEL_3;
  }
  v21 = 0u;
  v22 = 0u;
  v19 = 0u;
  v20 = 0u;
  v4 = *(id *)(a1 + 40);
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v19, v23, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v20;
    while (2)
    {
      for (i = 0; i != v6; i = (char *)i + 1)
      {
        if (*(_QWORD *)v20 != v7)
          objc_enumerationMutation(v4);
        v9 = *(_QWORD *)(*((_QWORD *)&v19 + 1) + 8 * (_QWORD)i);
        v10 = *(void **)(*(_QWORD *)(a1 + 32) + 96);
        v18 = 0;
        v11 = objc_msgSend(v10, "statusOfValueForKey:error:", v9, &v18);
        v12 = v18;
        v13 = v12;
        if (v11 != (id)2)
        {
          v3 = objc_msgSend(v12, "copy");

          goto LABEL_16;
        }

      }
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v19, v23, 16);
      if (v6)
        continue;
      break;
    }
  }

  v14 = objc_msgSend(*(id *)(a1 + 32), "p_isURLRemote");
  v15 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 96), "crl_containsVideoTracks");
  v16 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 96), "crl_containsAudioTracks");
  v17 = *(void **)(a1 + 32);
  if ((v15 & 1) == 0 && (v16 & 1) == 0)
  {
    v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "p_importErrorForLackOfAVTracks"));
LABEL_16:
    v2 = 0;
    goto LABEL_17;
  }
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "p_makeMovieItemWithContainsVisibleTrack:andIsURLRemote:", v15, v14));
  if (!v2
    || (objc_msgSend(*(id *)(a1 + 32), "p_setPropertiesFromLoadedAssetToMovie:containsVideoTrack:", v2, v15),
        objc_msgSend(*(id *)(a1 + 32), "p_asynchronouslyGeneratePosterImagesAndFinishImportingMovieItem:", v2),
        *(_BYTE *)(*(_QWORD *)(a1 + 32) + 128)))
  {
LABEL_3:
    v3 = 0;
LABEL_17:
    objc_msgSend(*(id *)(a1 + 32), "p_finishImportingWithBoardItem:error:", 0, v3);

  }
}

void sub_1002B9388(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002B93B8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002B93E8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_1002B9418(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  NSObject *v9;
  id v10;
  id v11;
  _QWORD v12[4];
  id v13;
  uint64_t v14;
  id v15;
  id v16;

  v5 = a2;
  v6 = a3;
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(void **)(a1 + 40);
  v9 = *(NSObject **)(v7 + 48);
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_1002B94E0;
  v12[3] = &unk_10124CAD8;
  v13 = v6;
  v14 = v7;
  v15 = v5;
  v16 = v8;
  v10 = v5;
  v11 = v6;
  dispatch_async(v9, v12);

}

id sub_1002B94E0(uint64_t a1)
{
  id *v2;
  void *v3;

  v2 = (id *)(a1 + 32);
  if (*(_QWORD *)(a1 + 32))
  {
    if (qword_10147E368 != -1)
      dispatch_once(&qword_10147E368, &stru_10124CBD0);
    v3 = off_1013D9068;
    if (os_log_type_enabled((os_log_t)off_1013D9068, OS_LOG_TYPE_ERROR))
      sub_100E19394(v2, v3);
  }
  else
  {
    objc_storeStrong((id *)(*(_QWORD *)(a1 + 40) + 80), *(id *)(a1 + 48));
  }
  return objc_msgSend(*(id *)(a1 + 40), "p_finishImportingWithBoardItem:error:", *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 32));
}

void sub_1002B9588(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

id sub_1002B9BE8(uint64_t a1)
{
  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 128) = 1;
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 104), "cancel");
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 96), "cancelLoading");
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 112), "cancel");
  return _objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 120), "cancelAllCGImageGeneration");
}

id sub_1002B9F20@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 40) = a2;
  return a1;
}

id sub_1002B9F2C()
{
  id *v0;

  return objc_msgSend(*v0, "code");
}

uint64_t sub_1002B9F38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return objc_opt_class(v2, a2);
}

void sub_1002BA2EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location, id a18)
{
  id *v18;
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a18);
  _Unwind_Resume(a1);
}

void sub_1002BA330(uint64_t a1)
{
  id v2;
  double v3;
  double v4;
  double v5;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v2 = objc_loadWeakRetained((id *)(a1 + 40));
  if (v2)
  {
    objc_msgSend(WeakRetained, "maxValue");
    if (v3 > 0.0)
    {
      v4 = v3;
      objc_msgSend(WeakRetained, "value");
      objc_msgSend(v2, "setCompletedUnitCount:", (uint64_t)(v5 / v4 * (double)*(uint64_t *)(a1 + 48)));
    }
  }

}

void sub_1002BA3B8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002BA3E8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

id sub_1002BB7FC(CRLCanvasKnobAccessibilityElement *self, SEL a2, id a3, id a4, CGPoint a5)
{
  return 0;
}

BOOL sub_1002BC108(id a1, CRLCanvasRep *a2, NSDictionary *a3)
{
  CRLCanvasRep *v3;
  uint64_t v4;
  uint64_t v5;
  char isKindOfClass;

  v3 = a2;
  v5 = objc_opt_class(CRLConnectionLineRep, v4);
  isKindOfClass = objc_opt_isKindOfClass(v3, v5);

  return (isKindOfClass & 1) == 0;
}

id sub_1002BC464(CRLCanvasKnobAccessibilityElement *self, SEL a2, id a3, unint64_t a4, CGPoint a5)
{
  return 0;
}

int64_t sub_1002BC660(id a1, CRLCanvasKnobAccessibilityElement *a2, CRLCanvasKnobAccessibilityElement *a3)
{
  CRLCanvasKnobAccessibilityElement *v4;
  CRLCanvasKnobAccessibilityElement *v5;
  signed int v6;
  signed int v7;
  BOOL v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = a2;
  v5 = a3;
  v6 = +[CRLCanvasKnobAccessibilityElement _crlaxCategoryRankForKnobElement:](CRLCanvasKnobAccessibilityElement, "_crlaxCategoryRankForKnobElement:", v4);
  v7 = +[CRLCanvasKnobAccessibilityElement _crlaxCategoryRankForKnobElement:](CRLCanvasKnobAccessibilityElement, "_crlaxCategoryRankForKnobElement:", v5);
  v8 = v6 == v7;
  if (v6 < v7)
    v9 = -1;
  else
    v9 = 1;
  if (v8)
  {
    v10 = sub_1002BC708(v4);
    v12 = v11;
    v13 = sub_1002BC708(v5);
    if (v10 < v13)
      v15 = -1;
    else
      v15 = 1;
    if (v10 == v13)
      v15 = 0;
    if (v12 < v14)
      v16 = -1;
    else
      v16 = 1;
    if (v12 == v14)
      v9 = v15;
    else
      v9 = v16;
  }

  return v9;
}

uint64_t sub_1002BC708(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[4];
  id v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v8 = 0;
  v9 = &v8;
  v10 = 0x2020000000;
  v11 = 0;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_1002BE12C;
  v5[3] = &unk_10122C5F0;
  v7 = &v8;
  v1 = a1;
  v6 = v1;
  if (__CRLAccessibilityPerformSafeBlock((uint64_t)v5))
    abort();

  v2 = v9[3];
  _Block_object_dispose(&v8, 8);
  if ((unint64_t)(v2 - 1) > 8)
    v3 = 0;
  else
    v3 = qword_100EEED70[v2 - 1];

  return v3;
}

void sub_1002BC800(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1002BE12C(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "knobTag");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = result;
  return result;
}

uint64_t sub_1002BE2E8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_1002BE728(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLKeyboardCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9198;
  off_1013D9198 = v2;

}

void sub_1002BE758(id a1, CRLKeyboardObserver *a2)
{
  CRLKeyboardObserver *v2;

  v2 = a2;
  if ((objc_opt_respondsToSelector(v2, "keyboardHideCanceled") & 1) != 0)
    -[CRLKeyboardObserver keyboardHideCanceled](v2, "keyboardHideCanceled");

}

void sub_1002BE794(uint64_t a1, void *a2)
{
  id v3;

  v3 = a2;
  if ((objc_opt_respondsToSelector(v3, "keyboardWillShowOrDock:") & 1) != 0)
    objc_msgSend(v3, "keyboardWillShowOrDock:", *(_QWORD *)(a1 + 32));

}

void sub_1002BE968(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLKeyboardCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9198;
  off_1013D9198 = v2;

}

void sub_1002BE998(uint64_t a1, void *a2)
{
  id v3;

  v3 = a2;
  if ((objc_opt_respondsToSelector(v3, "keyboardDidShowOrDock:") & 1) != 0)
    objc_msgSend(v3, "keyboardDidShowOrDock:", *(_QWORD *)(a1 + 32));

}

void sub_1002BEB68(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLKeyboardCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9198;
  off_1013D9198 = v2;

}

void sub_1002BEB98(id a1, CRLKeyboardObserver *a2)
{
  CRLKeyboardObserver *v2;

  v2 = a2;
  if ((objc_opt_respondsToSelector(v2, "keyboardShowCanceled") & 1) != 0)
    -[CRLKeyboardObserver keyboardShowCanceled](v2, "keyboardShowCanceled");

}

void sub_1002BEBD4(uint64_t a1, void *a2)
{
  id v3;

  v3 = a2;
  if ((objc_opt_respondsToSelector(v3, "keyboardWillHideOrUndock:") & 1) != 0)
    objc_msgSend(v3, "keyboardWillHideOrUndock:", *(_QWORD *)(a1 + 32));

}

void sub_1002BED78(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLKeyboardCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9198;
  off_1013D9198 = v2;

}

void sub_1002BEDA8(uint64_t a1, void *a2)
{
  id v3;

  v3 = a2;
  if ((objc_opt_respondsToSelector(v3, "keyboardDidHideOrUndock:") & 1) != 0)
    objc_msgSend(v3, "keyboardDidHideOrUndock:", *(_QWORD *)(a1 + 32));

}

void sub_1002BEEFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1002BEF18(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id *v5;
  id WeakRetained;
  id v7;

  +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
  if (qword_10147E370 != -1)
    dispatch_once(&qword_10147E370, &stru_10124CE08);
  if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
    sub_100E19574();
  if (qword_10147E370 != -1)
    dispatch_once(&qword_10147E370, &stru_10124CE28);
  v2 = off_1013D9070;
  if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
    sub_100DE7468(v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLiOSKeyboardMonitor p_scheduleKeyboardIsAnimatingInTimer]_block_invoke"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLiOSKeyboardMonitor.m"));
  +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v3, v4, 278, 0, "Had to force keyboard animating to NO, OS never finished telling us the keyboard came in or cancelled.");

  v5 = (id *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained(v5);
  objc_msgSend(WeakRetained, "setKeyboardIsAnimatingInOrDocking:", 0);

  v7 = objc_loadWeakRetained(v5);
  objc_msgSend(v7, "p_clearKeyboardIsAnimatingInTimer");

}

void sub_1002BF084(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002BF0B4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002BF388(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002BF3B8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002BF548(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLKeyboardCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9198;
  off_1013D9198 = v2;

}

void sub_1002BF5B8(id a1)
{
  CRLiOSKeyboardMonitor *v1;
  void *v2;

  v1 = objc_alloc_init(CRLiOSKeyboardMonitor);
  v2 = (void *)qword_101415310;
  qword_101415310 = (uint64_t)v1;

}

void sub_1002BFAB4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002BFAE4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002BFB14(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002BFB44(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002BFECC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002BFEFC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002C00C0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002C00F0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002C0270(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLKeyboardCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9198;
  off_1013D9198 = v2;

}

void sub_1002C064C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLKeyboardCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9198;
  off_1013D9198 = v2;

}

void sub_1002C0854(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLKeyboardCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9198;
  off_1013D9198 = v2;

}

uint64_t sub_1002C0884(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), *(unsigned __int8 *)(a1 + 40));
}

void sub_1002C0DF4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLKeyboardCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9198;
  off_1013D9198 = v2;

}

void sub_1002C1030(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLKeyboardCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9198;
  off_1013D9198 = v2;

}

void sub_1002C11CC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLKeyboardCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9198;
  off_1013D9198 = v2;

}

void sub_1002C11FC(uint64_t a1, void *a2)
{
  id v3;

  v3 = a2;
  if ((objc_opt_respondsToSelector(v3, "keyboardWillChangeFrame:") & 1) != 0)
    objc_msgSend(v3, "keyboardWillChangeFrame:", *(_QWORD *)(a1 + 32));

}

void sub_1002C13C0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLKeyboardCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9198;
  off_1013D9198 = v2;

}

void sub_1002C13F0(uint64_t a1, void *a2)
{
  id v3;

  v3 = a2;
  if ((objc_opt_respondsToSelector(v3, "keyboardDidChangeFrame:") & 1) != 0)
    objc_msgSend(v3, "keyboardDidChangeFrame:", *(_QWORD *)(a1 + 32));

}

void sub_1002C170C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002C173C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002C18E0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002C1910(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002C2370(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002C23A0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002C2C08(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002C2C38(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002C2ED8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002C2F08(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002C341C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002C344C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002C398C(CGContext *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  void *v10;
  void *v11;
  void *v12;
  CGPath *Mutable;
  CGFloat MinX;
  CGFloat MaxY;
  CGFloat MaxX;
  CGFloat MinY;
  CGRect v18;
  CGRect v19;
  CGRect v20;
  CGRect v21;
  CGRect v22;

  if (!CGRectIsNull(*(CGRect *)&a2))
  {
    CGContextSaveGState(a1);
    v10 = (void *)objc_claimAutoreleasedReturnValue(+[CRLColor whiteColor](CRLColor, "whiteColor"));
    CGContextSetFillColorWithColor(a1, (CGColorRef)objc_msgSend(v10, "CGColor"));

    v18.origin.x = a2;
    v18.origin.y = a3;
    v18.size.width = a4;
    v18.size.height = a5;
    CGContextFillRect(a1, v18);
    CGContextSetLineWidth(a1, 1.0);
    v11 = (void *)objc_claimAutoreleasedReturnValue(+[CRLColor redColor](CRLColor, "redColor"));
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "colorWithAlphaComponent:", 0.38));
    CGContextSetStrokeColorWithColor(a1, (CGColorRef)objc_msgSend(v12, "CGColor"));

    Mutable = CGPathCreateMutable();
    v19.origin.x = a2;
    v19.origin.y = a3;
    v19.size.width = a4;
    v19.size.height = a5;
    MinX = CGRectGetMinX(v19);
    v20.origin.x = a2;
    v20.origin.y = a3;
    v20.size.width = a4;
    v20.size.height = a5;
    MaxY = CGRectGetMaxY(v20);
    CGPathMoveToPoint(Mutable, 0, MinX, MaxY);
    v21.origin.x = a2;
    v21.origin.y = a3;
    v21.size.width = a4;
    v21.size.height = a5;
    MaxX = CGRectGetMaxX(v21);
    v22.origin.x = a2;
    v22.origin.y = a3;
    v22.size.width = a4;
    v22.size.height = a5;
    MinY = CGRectGetMinY(v22);
    CGPathAddLineToPoint(Mutable, 0, MaxX, MinY);
    CGContextAddPath(a1, Mutable);
    CGContextStrokePath(a1);
    CGPathRelease(Mutable);
    CGContextRestoreGState(a1);
  }
}

void sub_1002C3E64(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002C3E94(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002C3EC4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002C3EF4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002C420C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002C423C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002C4384(uint64_t a1)
{
  id v1;
  void *v2;

  v1 = objc_msgSend(objc_alloc(*(Class *)(a1 + 32)), "initDefaultCursor");
  v2 = (void *)qword_101415320;
  qword_101415320 = (uint64_t)v1;

}

void sub_1002C477C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002C47AC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002C4F00(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002C4F30(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002C59F0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002C5A20(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002C5A90(id a1)
{
  id v1;
  void *v2;

  v1 = -[CRLCursor initRepContentPlatformViewPlaceholder]([CRLCursor alloc], "initRepContentPlatformViewPlaceholder");
  v2 = (void *)qword_101415358;
  qword_101415358 = (uint64_t)v1;

}

void sub_1002C5E3C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002C5E6C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002C5FB4(uint64_t a1)
{
  id v1;
  void *v2;

  v1 = objc_alloc_init(*(Class *)(a1 + 32));
  v2 = (void *)qword_101415368;
  qword_101415368 = (uint64_t)v1;

}

void sub_1002C63F4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002C6424(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002C66A0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002C66D0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002C7000(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002C7030(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002C7060(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002C7090(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002C7314(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002C7344(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002C8970(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002C89A0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002C8CE8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002C8D18(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002C8D48(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002C8D78(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

id sub_1002C9BB0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "willBeginEditingContainedInfo:", *(_QWORD *)(a1 + 40));
}

int64_t sub_1002C9D34(id a1, id a2, id a3)
{
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  int64_t v21;
  int ShouldCrashOnValidationErrorAfterLaunch;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v33;
  char v34;

  v4 = a2;
  v5 = a3;
  v34 = 0;
  v6 = v4;
  objc_opt_class(CRLTextRepAccessibility, v7);
  v9 = __CRLAccessibilityCastAsSafeCategory(v8, (uint64_t)v6, 1, &v34);
  v10 = objc_claimAutoreleasedReturnValue(v9);
  if (v34)
    goto LABEL_14;
  v11 = (void *)v10;

  v33 = 0;
  v12 = v5;
  objc_opt_class(CRLTextRepAccessibility, v13);
  v15 = __CRLAccessibilityCastAsSafeCategory(v14, (uint64_t)v12, 1, &v33);
  v16 = objc_claimAutoreleasedReturnValue(v15);
  if (v33)
    goto LABEL_14;
  v17 = (void *)v16;

  if (!v11 || !v17)
  {
    if (!CRLAccessibilityShouldPerformValidationChecks()
      || (ShouldCrashOnValidationErrorAfterLaunch = CRLAccessibilityShouldCrashOnValidationErrorAfterLaunch(),
          objc_opt_class(v6, v23),
          v25 = v24,
          objc_opt_class(v12, v26),
          !__CRLAccessibilityHandleValidationErrorWithDescription(ShouldCrashOnValidationErrorAfterLaunch, 0, (uint64_t)CFSTR("Expected content siblings to be text reps, got %@ and %@"), v27, v28, v29, v30, v31, v25)))
    {
      v21 = 0;
      goto LABEL_13;
    }
LABEL_14:
    abort();
  }
  v18 = objc_msgSend(v11, "crlaxStorageRangeOfRep");
  v19 = objc_msgSend(v17, "crlaxStorageRangeOfRep");
  v20 = -1;
  if (v18 >= v19)
    v20 = 1;
  if (v18 == v19)
    v21 = 0;
  else
    v21 = v20;
LABEL_13:

  return v21;
}

void sub_1002CA000(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1002CA018(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1002CA028(uint64_t a1)
{

}

void sub_1002CA030(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "columnForCharIndex:", *(_QWORD *)(a1 + 48)));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

id sub_1002CA16C(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "crlaxSetParentInteractiveCanvasController:", *(_QWORD *)(a1 + 32));
}

int64_t sub_1002CA484(id a1, id a2, id a3)
{
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  double v18;
  double v19;
  double v20;
  int64_t v21;
  char v23;
  char v24;

  v4 = a2;
  v5 = a3;
  v24 = 0;
  v6 = v4;
  objc_opt_class(CRLCanvasRepAccessibility, v7);
  v9 = __CRLAccessibilityCastAsSafeCategory(v8, (uint64_t)v6, 1, &v24);
  v10 = objc_claimAutoreleasedReturnValue(v9);
  if (v24
    || (v11 = (void *)v10,
        v6,
        v23 = 0,
        v12 = v5,
        objc_opt_class(CRLCanvasRepAccessibility, v13),
        v15 = __CRLAccessibilityCastAsSafeCategory(v14, (uint64_t)v12, 1, &v23),
        v16 = objc_claimAutoreleasedReturnValue(v15),
        v23))
  {
    abort();
  }
  v17 = (void *)v16;

  objc_msgSend(v11, "crlaxFrameInScreenSpace");
  v19 = v18;
  objc_msgSend(v17, "crlaxFrameInScreenSpace");
  if (v19 >= v20)
    v21 = 1;
  else
    v21 = -1;

  return v21;
}

void sub_1002CA57C(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  char v10;

  v10 = 0;
  v3 = a2;
  objc_opt_class(CRLCanvasRepAccessibility, v4);
  v6 = __CRLAccessibilityCastAsSafeCategory(v5, (uint64_t)v3, 1, &v10);
  v7 = objc_claimAutoreleasedReturnValue(v6);
  if (v10)
    abort();
  v8 = (void *)v7;

  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "crlaxSummaryDescription"));
  if (v9)
    objc_msgSend(*(id *)(a1 + 32), "addObject:", v9);

}

void sub_1002CA84C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002CA87C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002CB1F0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002CB220(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002CB4CC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002CB4FC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002CB52C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002CB55C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002CB808(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002CB838(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002CB868(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002CB898(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002CC2D8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002CC308(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002CC4BC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002CC4EC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002CC918(uint64_t a1)
{
  id v2;
  id v3;
  id v4;

  v4 = (id)objc_claimAutoreleasedReturnValue(+[CRLPair pairWithFirst:second:](CRLPair, "pairWithFirst:second:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40)));
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 48) + 48), "addObject:", v4);
  v2 = objc_msgSend(*(id *)(a1 + 56), "copy");
  v3 = objc_retainBlock(v2);
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 48) + 56), "setObject:forKeyedSubscript:", v3, v4);

  *(_BYTE *)(*(_QWORD *)(a1 + 48) + 72) = 0;
}

void sub_1002CCA80(_QWORD *a1)
{
  _QWORD *v2;
  __CFRunLoop *Main;
  void *v4;
  void **v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  void *v8;
  id v9;
  id location;

  v2 = (_QWORD *)a1[4];
  if (!v2[8])
  {
    objc_initWeak(&location, v2);
    v5 = _NSConcreteStackBlock;
    v6 = 3221225472;
    v7 = sub_1002CCBC8;
    v8 = &unk_10124D8B0;
    objc_copyWeak(&v9, &location);
    *(_QWORD *)(a1[4] + 64) = CFRunLoopObserverCreateWithHandler(0, 0x20uLL, 0, 0, &v5);
    Main = CFRunLoopGetMain();
    CFRunLoopAddObserver(Main, *(CFRunLoopObserverRef *)(a1[4] + 64), kCFRunLoopCommonModes);
    *(_BYTE *)(a1[4] + 72) = 1;
    objc_destroyWeak(&v9);
    objc_destroyWeak(&location);
  }
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[CRLPair pairWithFirst:second:](CRLPair, "pairWithFirst:second:", a1[5], a1[6], v5, v6, v7, v8));
  *(_BYTE *)(*(_QWORD *)(a1[7] + 8) + 24) = objc_msgSend(*(id *)(a1[4] + 48), "containsObject:", v4);
  if (*(_BYTE *)(*(_QWORD *)(a1[7] + 8) + 24))
    objc_msgSend(*(id *)(a1[4] + 48), "removeObject:", v4);

}

void sub_1002CCBA8(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1002CCBC8(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "p_tearDownRunloopObserver");

}

id sub_1002CCCF0(uint64_t a1, uint64_t a2)
{
  id result;

  result = objc_retainBlock(*(id *)(a2 + 40));
  *(_QWORD *)(a1 + 40) = result;
  return result;
}

void sub_1002CCD18(uint64_t a1)
{

}

void sub_1002CCD20(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;

  v5 = (id)objc_claimAutoreleasedReturnValue(+[CRLPair pairWithFirst:second:](CRLPair, "pairWithFirst:second:", a1[4], a1[5]));
  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1[6] + 56), "objectForKeyedSubscript:", v5));
  v3 = *(_QWORD *)(a1[7] + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

  objc_msgSend(*(id *)(a1[6] + 56), "removeObjectForKey:", v5);
}

void sub_1002CD0BC(uint64_t a1)
{
  uint64_t v2;
  __CFRunLoopObserver *v3;
  const void *v4;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(__CFRunLoopObserver **)(v2 + 64);
  if (v3)
  {
    if (*(_BYTE *)(v2 + 72))
    {
      objc_msgSend(*(id *)(v2 + 48), "removeAllObjects");
      v3 = *(__CFRunLoopObserver **)(*(_QWORD *)(a1 + 32) + 64);
    }
    CFRunLoopObserverInvalidate(v3);
    v4 = *(const void **)(*(_QWORD *)(a1 + 32) + 64);
    if (v4)
    {
      CFRelease(v4);
      *(_QWORD *)(*(_QWORD *)(a1 + 32) + 64) = 0;
    }
  }
}

uint64_t sub_1002CD254(void *a1, void *a2)
{
  id v3;
  id v4;
  BOOL v5;
  id v6;
  id v7;
  uint64_t v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  uint64_t v15;
  uint64_t v16;

  v3 = a1;
  v4 = a2;
  v5 = objc_msgSend(v3, "rootIndex") == (id)0x7FFFFFFFFFFFFFFFLL
    || objc_msgSend(v4, "rootIndex") == (id)0x7FFFFFFFFFFFFFFFLL;
  v6 = objc_msgSend(v3, "rootIndex");
  v7 = objc_msgSend(v4, "rootIndex");
  if ((uint64_t)v6 < (uint64_t)v7)
    v8 = -1;
  else
    v8 = (uint64_t)v6 > (uint64_t)v7;
  if (v5 || !v8)
  {
    v8 = (uint64_t)objc_msgSend(v3, "compare:", v4);
    if (!v8)
    {
      objc_msgSend(v3, "searchReferencePoint");
      v10 = v9;
      v12 = v11;
      objc_msgSend(v4, "searchReferencePoint");
      v15 = v12 > v14;
      if (v12 < v14)
        v15 = -1;
      v16 = v10 > v13;
      if (v10 < v13)
        v16 = -1;
      if (v15)
        v8 = v15;
      else
        v8 = v16;
    }
  }

  return v8;
}

void sub_1002CD5E8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002CD618(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002CDAD0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002CDB00(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002CDDE0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002CDE10(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002CE0F0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002CE120(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002CE4E8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002CE518(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

id sub_1002CE548(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "continueCountingHits");
}

void sub_1002CE6C0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002CE6F0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002CE978(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002CE9A8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

id sub_1002CE9D8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "continueCountingHits");
}

void sub_1002CEB94(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002CEBC4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002CEDB0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002CEDE0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002CF26C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002CF29C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

int64_t sub_1002CF2DC(id a1, id a2, id a3)
{
  return sub_1002CD254(a2, a3);
}

void sub_1002CF9B0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002CF9E0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

id sub_1002CFA10(uint64_t a1, uint64_t a2)
{
  return _objc_msgSend(*(id *)(a1 + 32), "performSearchWithSearchTarget:resultsArray:", a2, *(_QWORD *)(a1 + 40));
}

void sub_1002CFC60(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002CFC90(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002D03D0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002D0400(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002D0430(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002D0460(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002D0834(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1002D084C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1002D085C(uint64_t a1)
{

}

void sub_1002D0864(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  CGFloat v7;
  CGFloat v8;
  id v9;
  CGPoint v10;

  v9 = a2;
  objc_msgSend(v9, "searchReferencePoint");
  v10.x = v7;
  v10.y = v8;
  if (CGRectContainsPoint(*(CGRect *)(a1 + 40), v10))
  {
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), a2);
    *a4 = 1;
  }

}

void sub_1002D0A80(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002D0AB0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002D0E50(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002D0E80(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002D1294(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1002D12BC(_QWORD *a1, void *a2, uint64_t a3, _BYTE *a4)
{
  uint64_t v7;
  double v8;
  id v9;
  id v10;

  v10 = a2;
  *(_QWORD *)&v8 = objc_opt_class(a1[4], v7).n128_u64[0];
  if (objc_msgSend(v9, "searchReference:isAfterSearchReference:inDirection:", v10, a1[5], a1[7], v8))
  {
    objc_storeStrong((id *)(*(_QWORD *)(a1[6] + 8) + 40), a2);
    *a4 = 1;
  }

}

void sub_1002D207C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002D20AC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002D20DC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002D210C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002D213C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002D216C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002D219C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002D21CC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002D2270(uint64_t a1)
{
  id v1;
  void *v2;

  v1 = objc_alloc_init(*(Class *)(a1 + 32));
  v2 = (void *)qword_101415380;
  qword_101415380 = (uint64_t)v1;

}

void sub_1002D2DE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1002D2E00(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1002D2E10(uint64_t a1)
{

}

void sub_1002D2E18(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;

  v5 = (id)objc_claimAutoreleasedReturnValue(+[UIColor secondaryLabelColor](UIColor, "secondaryLabelColor"));
  v2 = objc_claimAutoreleasedReturnValue(+[CRLColor colorWithUIColor:](CRLColor, "colorWithUIColor:", v5));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

id sub_1002D3068(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "dismissAnimated:", 0);
}

void sub_1002D31FC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002D32CC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1002D331C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002D3490(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002D364C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1002D3C70(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002D3D48(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002D3D78(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002D3DA8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002D3DD8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002D3E08(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002D3E38(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002D3F08(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002D3FCC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1002D4458(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1002D44AC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002D44DC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002D450C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002D453C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002D4630(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1002D46F4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1002D4AC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id a14)
{
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;

  _Unwind_Resume(a1);
}

void sub_1002D4FB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);

  sub_100171FA4((id *)va);
  _Unwind_Resume(a1);
}

void sub_1002D5028(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002D5058(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002D5130(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1002D534C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002D5374(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002D53A4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002D550C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002D60B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *__p,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,char a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  void *v49;
  uint64_t v50;

  if (__p)
    operator delete(__p);
  _Block_object_dispose(&a45, 8);
  _Block_object_dispose(&a49, 8);
  _Block_object_dispose((const void *)(v50 - 240), 8);

  _Block_object_dispose((const void *)(v50 - 192), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1002D6260(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1002D6270(uint64_t a1)
{

}

void sub_1002D6278(_QWORD *a1, uint64_t a2, void *a3)
{
  id v6;
  unint64_t v7;
  unint64_t v8;
  id v11;
  id v12;

  v12 = a3;
  objc_storeStrong((id *)(*(_QWORD *)(a1[4] + 8) + 40), a3);
  *(_QWORD *)(*(_QWORD *)(a1[5] + 8) + 24) = a2;
  v6 = objc_msgSend(v12, "range");
  v8 = a1[8];
  if (v8 - (unint64_t)v6 < v7 && v8 >= (unint64_t)v6 || v8 == (_QWORD)v6 + v7)
  {
    v11 = objc_msgSend(v12, "lineIndexForCharIndex:eol:");
    if ((unint64_t)v11 <= 0x7FFFFFFFFFFFFFFELL)
    {
      objc_storeStrong((id *)(*(_QWORD *)(a1[6] + 8) + 40), a3);
      *(_QWORD *)(*(_QWORD *)(a1[7] + 8) + 24) = objc_msgSend(v12, "lineFragmentAtIndex:", v11);
    }
  }

}

void sub_1002D6344(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1002D635C(uint64_t a1, uint64_t a2, id obj)
{
  id v6;

  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), obj);
  v6 = obj;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = a2;

}

void sub_1002D63AC(void **a1, __int128 *a2)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  unint64_t v7;
  __int128 v8;
  __int128 v9;
  char *v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  __int128 v18;
  __int128 v19;
  char *v20;
  char *v21;
  __int128 v22;
  __int128 v23;

  v6 = a1[2];
  v4 = (uint64_t)(a1 + 2);
  v5 = v6;
  v7 = *(_QWORD *)(v4 - 8);
  if (v7 >= (unint64_t)v6)
  {
    v11 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v7 - (_QWORD)*a1) >> 3);
    v12 = v11 + 1;
    if (v11 + 1 > 0x666666666666666)
      sub_100007810();
    v13 = 0xCCCCCCCCCCCCCCCDLL * ((v5 - (_BYTE *)*a1) >> 3);
    if (2 * v13 > v12)
      v12 = 2 * v13;
    if (v13 >= 0x333333333333333)
      v14 = 0x666666666666666;
    else
      v14 = v12;
    if (v14)
      v15 = (char *)sub_10014A874(v4, v14);
    else
      v15 = 0;
    v16 = &v15[40 * v11];
    v17 = &v15[40 * v14];
    v18 = *a2;
    v19 = a2[1];
    *((_QWORD *)v16 + 4) = *((_QWORD *)a2 + 4);
    *(_OWORD *)v16 = v18;
    *((_OWORD *)v16 + 1) = v19;
    v10 = v16 + 40;
    v21 = (char *)*a1;
    v20 = (char *)a1[1];
    if (v20 != *a1)
    {
      do
      {
        v22 = *(_OWORD *)(v20 - 40);
        v23 = *(_OWORD *)(v20 - 24);
        *((_QWORD *)v16 - 1) = *((_QWORD *)v20 - 1);
        *(_OWORD *)(v16 - 24) = v23;
        *(_OWORD *)(v16 - 40) = v22;
        v16 -= 40;
        v20 -= 40;
      }
      while (v20 != v21);
      v20 = (char *)*a1;
    }
    *a1 = v16;
    a1[1] = v10;
    a1[2] = v17;
    if (v20)
      operator delete(v20);
  }
  else
  {
    v8 = *a2;
    v9 = a2[1];
    *(_QWORD *)(v7 + 32) = *((_QWORD *)a2 + 4);
    *(_OWORD *)v7 = v8;
    *(_OWORD *)(v7 + 16) = v9;
    v10 = (char *)(v7 + 40);
  }
  a1[1] = v10;
}

void sub_1002D64D8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002D6508(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002D6538(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  id v4;

  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "editorController"));
  v2 = *(_QWORD *)(a1 + 40);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "editor"));
  objc_msgSend(v4, "setSelection:forEditor:withFlags:", v2, v3, 1024);

}

void sub_1002D6598(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1002D6880(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1002D69F4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002D708C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1002D74E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,void *a24)
{
  void *v24;
  void *v25;
  void *v26;
  void *v27;

  _Unwind_Resume(a1);
}

char *sub_1002D75A0(uint64_t a1)
{
  id v2;
  char *v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  unint64_t v10;
  char *v11;
  char *result;
  id v13;
  NSUInteger v14;
  NSUInteger v15;
  NSUInteger v16;
  char *v17;
  char *v18;
  uint64_t v19;
  NSRange v20;
  NSRange v21;

  v2 = objc_msgSend(*(id *)(a1 + 32), "range");
  if (v2 >= objc_msgSend(*(id *)(a1 + 40), "range")
    || (v3 = (char *)objc_msgSend(*(id *)(a1 + 40), "range"),
        v5 = &v3[v4],
        v6 = (char *)objc_msgSend(*(id *)(a1 + 32), "range"),
        v5 >= &v6[v7]))
  {
    v13 = objc_msgSend(*(id *)(a1 + 32), "range");
    v15 = v14;
    v21.location = (NSUInteger)objc_msgSend(*(id *)(a1 + 40), "range");
    v21.length = v16;
    v20.location = (NSUInteger)v13;
    v20.length = v15;
    return (char *)NSUnionRange(v20, v21).location;
  }
  else
  {
    v8 = (char *)objc_msgSend(*(id *)(a1 + 40), "range");
    v9 = (char *)objc_msgSend(*(id *)(a1 + 32), "range");
    if (v8 <= &v9[v10 >> 1])
    {
      v17 = (char *)objc_msgSend(*(id *)(a1 + 40), "range");
      v18 = (char *)objc_msgSend(*(id *)(a1 + 32), "range");
      if (v17 >= &v18[v19])
        return &v18[v19];
      else
        return v17;
    }
    else
    {
      v11 = (char *)objc_msgSend(*(id *)(a1 + 32), "range");
      result = (char *)objc_msgSend(*(id *)(a1 + 40), "range");
      if (v11 < result)
        return v11;
    }
  }
  return result;
}

void sub_1002D7B8C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002D7C1C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002D7C4C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002D7C7C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002D7CAC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002D7CDC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002D7D0C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002D7DEC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1002D83C4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002D843C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002D846C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002D849C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002D84CC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002D84FC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002D852C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002D85F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1002D8608(uint64_t a1, uint64_t a2, id a3)
{
  id result;

  result = objc_retainAutorelease(a3);
  **(_QWORD **)(a1 + 40) = result;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = a2;
  return result;
}

void sub_1002D8704(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, ...)
{
  void *v7;
  va_list va;

  va_start(va, a7);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1002D8728(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  double *v5;
  unint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  double *v10;
  double *v11;
  double v12;
  double **v13;
  id v14;
  id v15;
  double **v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char *v24;
  double **v25;
  double **v26;
  double *v27;
  char *v28;
  double **v29;
  uint64_t v30;
  double **v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char *v35;
  double **v36;
  double **v37;
  double *v38;
  double **v39;
  uint64_t v40;
  char *__p;
  double **v42;
  char *v43;

  v40 = a1;
  v4 = a3;
  __p = 0;
  v42 = 0;
  v43 = 0;
  v5 = (double *)objc_msgSend(v4, "lineFragmentAtIndex:", a2);
  v6 = 0;
  v7 = v5[6];
  v8 = *((_QWORD *)v5 + 3);
  v9 = 0x7FFFFFFFFFFFFFFFLL;
  while (v6 < (unint64_t)objc_msgSend(v4, "lineCount", v40))
  {
    v10 = (double *)objc_msgSend(v4, "lineFragmentAtIndex:", v6);
    v11 = v10;
    v12 = v10[6];
    if (v7 == v12 || vabdd_f64(v7, v12) < 0.00999999978)
    {
      if (v9 + 1 == v6)
      {
        v14 = objc_msgSend(v4, "lineFragmentAtIndex:", v9);
        v15 = v14;
        if (v42 >= (double **)v43)
        {
          v21 = ((char *)v42 - __p) >> 3;
          if ((unint64_t)(v21 + 1) >> 61)
            sub_100007810();
          v22 = (v43 - __p) >> 2;
          if (v22 <= v21 + 1)
            v22 = v21 + 1;
          if ((unint64_t)(v43 - __p) >= 0x7FFFFFFFFFFFFFF8)
            v23 = 0x1FFFFFFFFFFFFFFFLL;
          else
            v23 = v22;
          if (v23)
            v24 = (char *)sub_10002BA34((uint64_t)&v43, v23);
          else
            v24 = 0;
          v28 = &v24[8 * v21];
          *(_QWORD *)v28 = v15;
          v16 = (double **)(v28 + 8);
          v29 = v42;
          if (v42 != (double **)__p)
          {
            do
            {
              v30 = (uint64_t)*--v29;
              *((_QWORD *)v28 - 1) = v30;
              v28 -= 8;
            }
            while (v29 != (double **)__p);
            v29 = (double **)__p;
          }
          __p = v28;
          v43 = &v24[8 * v23];
          if (v29)
            operator delete(v29);
        }
        else
        {
          *v42 = (double *)v14;
          v16 = v42 + 1;
        }
        v42 = v16;
      }
      else
      {
        v16 = v42;
      }
      if (v16 >= (double **)v43)
      {
        v32 = ((char *)v16 - __p) >> 3;
        if ((unint64_t)(v32 + 1) >> 61)
LABEL_69:
          sub_100007810();
        v33 = (v43 - __p) >> 2;
        if (v33 <= v32 + 1)
          v33 = v32 + 1;
        if ((unint64_t)(v43 - __p) >= 0x7FFFFFFFFFFFFFF8)
          v34 = 0x1FFFFFFFFFFFFFFFLL;
        else
          v34 = v33;
        if (v34)
          v35 = (char *)sub_10002BA34((uint64_t)&v43, v34);
        else
          v35 = 0;
        v36 = (double **)&v35[8 * v32];
        *v36 = v11;
        v31 = v36 + 1;
        v37 = v42;
        if (v42 != (double **)__p)
        {
          do
          {
            v38 = *--v37;
            *--v36 = v38;
          }
          while (v37 != (double **)__p);
          v37 = (double **)__p;
        }
        __p = (char *)v36;
        v43 = &v35[8 * v34];
        if (v37)
          operator delete(v37);
      }
      else
      {
        *v16 = v11;
        v31 = v16 + 1;
      }
      v42 = v31;
    }
    else if ((v8 & 0x100000000) != 0 && v6 == a2 + 1)
    {
      if (v42 >= (double **)v43)
      {
        v17 = ((char *)v42 - __p) >> 3;
        if ((unint64_t)(v17 + 1) >> 61)
          goto LABEL_69;
        v18 = (v43 - __p) >> 2;
        if (v18 <= v17 + 1)
          v18 = v17 + 1;
        if ((unint64_t)(v43 - __p) >= 0x7FFFFFFFFFFFFFF8)
          v19 = 0x1FFFFFFFFFFFFFFFLL;
        else
          v19 = v18;
        if (v19)
          v20 = (char *)sub_10002BA34((uint64_t)&v43, v19);
        else
          v20 = 0;
        v25 = (double **)&v20[8 * v17];
        *v25 = v11;
        v13 = v25 + 1;
        v26 = v42;
        if (v42 != (double **)__p)
        {
          do
          {
            v27 = *--v26;
            *--v25 = v27;
          }
          while (v26 != (double **)__p);
          v26 = (double **)__p;
        }
        __p = (char *)v25;
        v43 = &v20[8 * v19];
        if (v26)
          operator delete(v26);
      }
      else
      {
        *v42 = v10;
        v13 = v42 + 1;
      }
      v42 = v13;
      v7 = v12;
    }
    else if (((_QWORD)v10[3] & (unint64_t)&_mh_execute_header) != 0)
    {
      v9 = v6;
    }
    ++v6;
  }
  v39 = v42;
  if (v42 != (double **)__p)
  {
    (*(void (**)(void))(*(_QWORD *)(v40 + 32) + 16))();
    v39 = (double **)__p;
  }
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v40 + 40) + 8) + 24) = 1;
  if (v39)
    operator delete(v39);

}

void sub_1002D8A98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  void *v11;

  if (__p)
    operator delete(__p);

  _Unwind_Resume(a1);
}

void sub_1002D8CD4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1002D8D2C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002D8D5C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002D8FDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  void *v33;
  void *v34;
  uint64_t v35;

  _Block_object_dispose(&a29, 8);
  _Block_object_dispose(&a33, 8);
  _Block_object_dispose((const void *)(v35 - 128), 8);
  _Unwind_Resume(a1);
}

__n128 sub_1002D9038(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = a2[3];
  a1[3] = result;
  return result;
}

void sub_1002D9048(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  void *v5;
  void *i;
  void *v7;
  id v8;
  unint64_t v9;
  unint64_t v10;
  char *v13;
  id v14;
  __int128 *v15;
  __int128 *v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  char *v24;
  __int128 *v25;
  __int128 *v26;
  __int128 *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 *v31;
  id *v32;
  double v33;
  BOOL v34;
  __int128 *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  char *v39;
  __int128 *v40;
  __int128 *v41;
  __int128 *v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE *v45;
  uint64_t v46;
  uint64_t v47;
  BOOL v48;
  id v49;
  id v50;
  uint64_t v51;
  id v52;
  id v53[9];
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  _BYTE v58[128];

  v54 = 0u;
  v55 = 0u;
  v56 = 0u;
  v57 = 0u;
  v50 = a2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v50, "columns"));
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v54, v58, 16);
  if (v4)
  {
    v51 = *(_QWORD *)v55;
    v5 = v3;
    do
    {
      v52 = v4;
      for (i = 0; i != v52; i = (char *)i + 1)
      {
        if (*(_QWORD *)v55 != v51)
          objc_enumerationMutation(v3);
        v7 = *(void **)(*((_QWORD *)&v54 + 1) + 8 * (_QWORD)i);
        v8 = objc_msgSend(v7, "range");
        v10 = *(_QWORD *)(a1 + 64);
        if (v10 - (unint64_t)v8 < v9 && v10 >= (unint64_t)v8 || v10 == (_QWORD)v8 + v9)
        {
          v13 = (char *)objc_msgSend(v7, "lineIndexForCharIndex:eol:");
          if (v13 != (char *)0x7FFFFFFFFFFFFFFFLL)
          {
            v14 = objc_msgSend(v7, "lineFragmentAtIndex:", v13);
            v15 = (__int128 *)v14;
            if (*((uint64_t *)v14 + 3) < 0)
              v16 = &xmmword_100EEE418;
            else
              v16 = (__int128 *)v14;
            v17 = *((_QWORD *)v16 + 1);
            v18 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
            *(_QWORD *)(v18 + 48) = *(_QWORD *)v16;
            *(_QWORD *)(v18 + 56) = v17;
            *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = *((_QWORD *)v14 + 3);
            v19 = *((double *)v14 + 6);
            v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "textSource"));
            v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "textSource"));
            sub_1001720FC((uint64_t)v53, v20, 0, 0, 0, objc_msgSend(v21, "paragraphCount") != (id)1);

            v22 = sub_100172228((uint64_t)v53);
            if (*(_BYTE *)(a1 + 88))
            {
              if (v13)
              {
                v23 = v22;
                v24 = v13 - 1;
                while (1)
                {
                  v25 = (__int128 *)objc_msgSend(v7, "lineFragmentAtIndex:", v24);
                  v26 = v25;
                  if (*((uint64_t *)v25 + 3) < 0)
                    v27 = &xmmword_100EEE418;
                  else
                    v27 = v25;
                  v28 = *((_QWORD *)v27 + 1);
                  v29 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
                  *(_QWORD *)(v29 + 48) = *(_QWORD *)v27;
                  *(_QWORD *)(v29 + 56) = v28;
                  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = *((_QWORD *)v15 + 3);
                  v30 = *((_QWORD *)v25 + 3);
                  if ((v30 & 0x100000000) != 0
                    && *(id *)v25 == v23
                    && (v30 < 0 ? (v31 = &xmmword_100EEE418) : (v31 = v25),
                        *(_QWORD *)v31 + *((_QWORD *)v31 + 1) == *(_QWORD *)v15))
                  {
                    if (!v23)
                    {
                      *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = v24;
                      v49 = objc_retainAutorelease(v7);
                      goto LABEL_71;
                    }
                  }
                  else if (!v24
                         || !*(_BYTE *)(a1 + 89)
                         || (v32 = (id *)objc_msgSend(v7, "lineFragmentAtIndex:", v24 - 1),
                             (*((_BYTE *)v32 + 28) & 1) == 0)
                         || *v32 != v23)
                  {
                    v33 = *((double *)v26 + 6);
                    v34 = v33 >= v19 || v33 == v19;
                    if (!v34 && vabdd_f64(v33, v19) >= 0.00999999978)
                    {
                      v47 = *((_QWORD *)v26 + 3);
                      if ((v47 & 0x100) != 0 && (v47 & 0x200800) != 0)
                      {
                        **(_BYTE **)(a1 + 72) = 0;
                        goto LABEL_69;
                      }
                      if ((*((_QWORD *)v26 + 3) & 0x201) != 1)
                      {
LABEL_69:
                        v48 = (v47 & 0x200) == 0;
                        *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = v24;
                        **(_QWORD **)(a1 + 80) = objc_retainAutorelease(v7);
                        if (!v48)
LABEL_70:
                          **(_BYTE **)(a1 + 72) = 0;
                      }
                      goto LABEL_72;
                    }
                  }
                  if (--v24 == (char *)-1)
                    goto LABEL_72;
                }
              }
              if (!*(_QWORD *)v15)
              {
                *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = 0;
                **(_QWORD **)(a1 + 80) = objc_retainAutorelease(v7);
                goto LABEL_70;
              }
            }
            else
            {
              if (v13 + 1 == objc_msgSend(v7, "lineCount"))
              {
                v35 = *((uint64_t *)v15 + 3) < 0 ? &xmmword_100EEE418 : v15;
                v36 = *(_QWORD *)v35;
                v37 = *((_QWORD *)v35 + 1);
                v38 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "textSource"));
                LODWORD(v36) = v36 + v37 == (_QWORD)objc_msgSend(v38, "length");

                if ((_DWORD)v36)
                {
                  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = v13;
                  **(_QWORD **)(a1 + 80) = objc_retainAutorelease(v7);
                }
              }
              while (1)
              {
                v39 = v13++;
                if (v39 + 1 >= objc_msgSend(v7, "lineCount"))
                  goto LABEL_72;
                v40 = (__int128 *)objc_msgSend(v7, "lineFragmentAtIndex:", v39 + 1);
                v41 = v40;
                if (*((uint64_t *)v40 + 3) < 0)
                  v42 = &xmmword_100EEE418;
                else
                  v42 = v40;
                v43 = *((_QWORD *)v42 + 1);
                v44 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
                *(_QWORD *)(v44 + 48) = *(_QWORD *)v42;
                *(_QWORD *)(v44 + 56) = v43;
                *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = *((_QWORD *)v15 + 3);
                if (*(_BYTE *)(a1 + 89) || (*((_BYTE *)v40 + 28) & 1) == 0)
                {
                  v45 = objc_msgSend(v7, "lineFragmentAtIndex:", v39);
                  if ((!*(_BYTE *)(a1 + 89) || (v45[28] & 1) == 0) && v19 != 0.0 && *((double *)v41 + 6) != 0.0)
                    break;
                }
              }
              v46 = *((_QWORD *)v41 + 3);
              if ((v46 & 1) == 0 || (v46 & 0x100) != 0 && (v46 & 0x200800) != 0)
              {
                *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = v39 + 1;
                v49 = objc_retainAutorelease(v7);
LABEL_71:
                **(_QWORD **)(a1 + 80) = v49;
              }
            }
LABEL_72:
            sub_100171FA4(v53);
            v3 = v5;
          }
        }
      }
      v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v54, v58, 16);
    }
    while (v4);
  }

}

void sub_1002D951C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  void *v9;

  _Unwind_Resume(a1);
}

void sub_1002D95B0(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  uint64_t v5;
  void *i;
  void *v7;
  id v8;
  unint64_t v9;
  unint64_t v10;
  id v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[128];

  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "columns", 0));
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
  if (v4)
  {
    v5 = *(_QWORD *)v15;
    while (2)
    {
      for (i = 0; i != v4; i = (char *)i + 1)
      {
        if (*(_QWORD *)v15 != v5)
          objc_enumerationMutation(v3);
        v7 = *(void **)(*((_QWORD *)&v14 + 1) + 8 * (_QWORD)i);
        v8 = objc_msgSend(v7, "range");
        v10 = *(_QWORD *)(a1 + 40);
        if (v10 - (unint64_t)v8 < v9 && v10 >= (unint64_t)v8 || v10 == (_QWORD)v8 + v9)
        {
          v13 = objc_msgSend(v7, "lineIndexForCharIndex:eol:");
          if (v13 != (id)0x7FFFFFFFFFFFFFFFLL)
          {
            *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = v13;
            **(_QWORD **)(a1 + 48) = objc_retainAutorelease(v7);
            goto LABEL_19;
          }
        }
      }
      v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
      if (v4)
        continue;
      break;
    }
  }
LABEL_19:

}

void sub_1002D9700(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002D97BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_1002D97D4(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  uint64_t v5;
  void *i;
  void *v7;
  id v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _BYTE v17[128];

  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "columns", 0));
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
  if (v4)
  {
    v5 = *(_QWORD *)v14;
    while (2)
    {
      for (i = 0; i != v4; i = (char *)i + 1)
      {
        if (*(_QWORD *)v14 != v5)
          objc_enumerationMutation(v3);
        v7 = *(void **)(*((_QWORD *)&v13 + 1) + 8 * (_QWORD)i);
        v8 = objc_msgSend(v7, "range");
        v10 = *(_QWORD *)(a1 + 40);
        v12 = v10 - (unint64_t)v8 < v9 && v10 >= (unint64_t)v8 || v10 == (_QWORD)v8 + v9;
        if (v12 && (unint64_t)objc_msgSend(v7, "lineIndexForCharIndex:eol:") <= 0x7FFFFFFFFFFFFFFELL)
        {
          (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
          goto LABEL_19;
        }
      }
      v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
      if (v4)
        continue;
      break;
    }
  }
LABEL_19:

}

void sub_1002D991C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002D9A2C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1002D9ADC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1002D9B98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_1002D9BB0(uint64_t a1, unint64_t a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;

  v5 = a3;
  v6 = objc_msgSend(v5, "lineCount");
  if (a2 != 0x7FFFFFFFFFFFFFFFLL && !v6)
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_10124E390);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E1B494();
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_10124E3B0);
    v7 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)v7, OS_LOG_TYPE_ERROR))
    {
      objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
      sub_100DE7E60();
    }

    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLWPEditorHelper withLineFragmentForCharIndex:eol:performBlock:]_block_invoke"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditorHelper.mm"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v8, v9, 1670, 0, "Empty column in p_withLineIndexForCharIndex");

  }
  if ((unint64_t)objc_msgSend(v5, "lineCount") > a2)
    objc_msgSend(v5, "lineFragmentAtIndex:", a2);
  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();

}

void sub_1002D9D94(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1002D9DD8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002D9E08(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002DA074(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002DA0C8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002DA0F8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002DA364(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002DA3B8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002DA3E8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002DA5AC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1002DB3A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{

  _Unwind_Resume(a1);
}

void sub_1002DB53C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_1002DB56C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_1002DB59C(uint64_t a1, uint64_t a2, void *a3)
{
  _QWORD **v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  double MaxX;
  double MinX;
  uint64_t v11;
  double *v12;
  CGFloat v13;
  CGFloat v14;
  CGFloat v15;
  CGFloat v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  void *v20;
  id v21;
  int v22;
  unsigned __int8 v23;
  char v24;
  uint64_t v25;
  unint64_t v26;
  void *v27;
  id v28;
  int v29;
  unsigned __int8 v30;
  char v31;
  __int128 *v32;
  unint64_t v33;
  id v34;
  int v35;
  unsigned int v36;
  void *v37;
  _BYTE *v38;
  int v39;
  id v40;
  CGRect v41;
  CGRect v42;
  CGRect v43;
  CGRect v44;

  v40 = a3;
  v5 = *(_QWORD ***)a2;
  v6 = *(_QWORD *)(a2 + 8);
  if (v6 == *(_QWORD *)a2)
  {
    v17 = *(_QWORD *)(a1 + 56);
    v5 = *(_QWORD ***)(a2 + 8);
  }
  else
  {
    v7 = 0;
    v8 = 0x7FFFFFFFFFFFFFFFLL;
    MaxX = -INFINITY;
    MinX = INFINITY;
    v11 = 0x7FFFFFFFFFFFFFFFLL;
    do
    {
      v12 = (double *)v5[v7];
      v13 = v12[5];
      v14 = v12[6];
      v15 = v12[7];
      v16 = v12[8];
      v41.origin.x = v13;
      v41.origin.y = v14;
      v41.size.width = v15;
      v41.size.height = v16;
      if (CGRectGetMinX(v41) < MinX)
      {
        v42.origin.x = v13;
        v42.origin.y = v14;
        v42.size.width = v15;
        v42.size.height = v16;
        MinX = CGRectGetMinX(v42);
        v8 = v7;
      }
      v43.origin.x = v13;
      v43.origin.y = v14;
      v43.size.width = v15;
      v43.size.height = v16;
      if (CGRectGetMaxX(v43) > MaxX)
      {
        v44.origin.x = v13;
        v44.origin.y = v14;
        v44.size.width = v15;
        v44.size.height = v16;
        MaxX = CGRectGetMaxX(v44);
        v11 = v7;
      }
      ++v7;
      v5 = *(_QWORD ***)a2;
      v6 = *(_QWORD *)(a2 + 8);
    }
    while (v7 < (v6 - *(_QWORD *)a2) >> 3);
    v17 = *(_QWORD *)(a1 + 56);
    if (v17 == 3 && v8 != 0x7FFFFFFFFFFFFFFFLL)
    {
      v18 = (uint64_t)v5[v8];
      *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = sub_100144974(v18);
      if (*(_QWORD *)(a1 + 64)
        && sub_100144A40((__int128 *)v18, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24)) == 1)
      {
        v19 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24);
        v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "textSource"));
        if (v19 >= (unint64_t)objc_msgSend(v20, "length"))
        {

        }
        else
        {
          v21 = objc_msgSend(*(id *)(a1 + 40), "characterAtIndex:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24));
          v22 = (int)v21;
          v23 = sub_1001AE2A0((uint64_t)v21);
          if (v22 == 8232)
            v24 = 1;
          else
            v24 = v23;

          if ((v24 & 1) == 0)
            **(_BYTE **)(a1 + 64) = 0;
        }
      }
      v38 = *(_BYTE **)(a1 + 72);
      v39 = (*(_DWORD *)(v18 + 24) >> 12) & 1;
LABEL_44:
      *v38 = v39;
      goto LABEL_45;
    }
    if (v17 == 2 && v11 != 0x7FFFFFFFFFFFFFFFLL)
    {
      v25 = (uint64_t)v5[v11];
      *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = sub_1001449A4(v25);
      if (*(_QWORD *)(a1 + 64)
        && !sub_100144A40((__int128 *)v25, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24)))
      {
        v26 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24);
        v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "textSource"));
        if (v26 >= (unint64_t)objc_msgSend(v27, "length"))
        {

        }
        else
        {
          v28 = objc_msgSend(*(id *)(a1 + 40), "characterAtIndex:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24));
          v29 = (int)v28;
          v30 = sub_1001AE2A0((uint64_t)v28);
          if (v29 == 8232)
            v31 = 1;
          else
            v31 = v30;

          if ((v31 & 1) == 0)
            **(_BYTE **)(a1 + 64) = 0;
        }
      }
      LOBYTE(v39) = (*(_QWORD *)(v25 + 24) & 0x1000) == 0;
      v38 = *(_BYTE **)(a1 + 72);
      goto LABEL_44;
    }
  }
  if (v17)
  {
    if (v17 == 1)
      *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = **v5;
  }
  else
  {
    v32 = *(__int128 **)(v6 - 8);
    if (*((uint64_t *)v32 + 3) < 0)
      v32 = &xmmword_100EEE418;
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = objc_msgSend(*(id *)(a1 + 40), "charIndexRemappedFromStorage:", *(_QWORD *)v32 + *((_QWORD *)v32 + 1));
    v33 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24);
    if (v33 > *(_QWORD *)(a1 + 80) && v33 > *(_QWORD *)(a1 + 88))
    {
      v34 = objc_msgSend(*(id *)(a1 + 40), "characterAtIndex:", v33 - 1);
      v35 = (int)v34;
      v36 = sub_1001AE2A0((uint64_t)v34) ^ 1;
      if (v35 == 8232)
        LOBYTE(v36) = 0;
      if ((v36 & 1) == 0)
      {
        v37 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "textSource"));
        *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = objc_msgSend(v37, "previousCharacterIndex:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48)+ 8)+ 24));

      }
    }
  }
LABEL_45:

}

void sub_1002DB91C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1002DB958(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002DB988(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002DB9B8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002DB9E8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002DBA18(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002DBA48(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002DC350(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);

  sub_100171FA4((id *)va);
  _Unwind_Resume(a1);
}

void sub_1002DC4B0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002DC4E0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002DC510(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002DC540(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002DC600(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1002DC8F0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1002DCE14(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1002DCE7C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002DCEAC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002DD1F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, id a9)
{
  void *v9;
  void *v10;

  sub_100171FA4(&a9);
  _Unwind_Resume(a1);
}

void sub_1002DD270(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002DD2A0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002DD368(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1002DD434(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002DDBE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  void *v27;
  void *v28;
  uint64_t v29;
  void *v31;

  if (__p)
    operator delete(__p);
  _Block_object_dispose(&a23, 8);
  _Block_object_dispose(&a27, 8);
  v31 = *(void **)(v29 - 248);
  if (v31)
  {
    *(_QWORD *)(v29 - 240) = v31;
    operator delete(v31);
  }
  _Block_object_dispose((const void *)(v29 - 224), 8);
  _Block_object_dispose((const void *)(v29 - 192), 8);

  _Unwind_Resume(a1);
}

double sub_1002DDD34(_QWORD *a1, uint64_t a2)
{
  __int128 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  double result;
  __int128 v10;
  uint64_t v11;

  if (a2)
  {
    if (*(uint64_t *)(a2 + 24) < 0)
      v4 = &xmmword_100EEE418;
    else
      v4 = (__int128 *)a2;
    v5 = *((_QWORD *)v4 + 1);
    v6 = *(_QWORD *)(a1[4] + 8);
    *(_QWORD *)(v6 + 48) = *(_QWORD *)v4;
    *(_QWORD *)(v6 + 56) = v5;
    sub_1001469CC(a2, &v10);
    v7 = a1[6];
    v8 = *(void **)v7;
    if (*(_QWORD *)v7)
    {
      *(_QWORD *)(v7 + 8) = v8;
      operator delete(v8);
      *(_QWORD *)v7 = 0;
      *(_QWORD *)(v7 + 8) = 0;
      *(_QWORD *)(v7 + 16) = 0;
    }
    result = *(double *)&v10;
    *(_OWORD *)v7 = v10;
    *(_QWORD *)(v7 + 16) = v11;
    *(_BYTE *)(*(_QWORD *)(a1[5] + 8) + 24) = (*(_DWORD *)(a2 + 24) & 0x1000) != 0;
  }
  return result;
}

double sub_1002DDDD8(_QWORD *a1, uint64_t a2)
{
  __int128 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  double result;
  __int128 v10;
  uint64_t v11;

  if (a2)
  {
    if (*(uint64_t *)(a2 + 24) < 0)
      v4 = &xmmword_100EEE418;
    else
      v4 = (__int128 *)a2;
    v5 = *((_QWORD *)v4 + 1);
    v6 = *(_QWORD *)(a1[4] + 8);
    *(_QWORD *)(v6 + 48) = *(_QWORD *)v4;
    *(_QWORD *)(v6 + 56) = v5;
    sub_1001469CC(a2, &v10);
    v7 = a1[6];
    v8 = *(void **)v7;
    if (*(_QWORD *)v7)
    {
      *(_QWORD *)(v7 + 8) = v8;
      operator delete(v8);
      *(_QWORD *)v7 = 0;
      *(_QWORD *)(v7 + 8) = 0;
      *(_QWORD *)(v7 + 16) = 0;
    }
    result = *(double *)&v10;
    *(_OWORD *)v7 = v10;
    *(_QWORD *)(v7 + 16) = v11;
    *(_BYTE *)(*(_QWORD *)(a1[5] + 8) + 24) = (*(_DWORD *)(a2 + 24) & 0x1000) != 0;
  }
  return result;
}

void sub_1002DDE7C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002DDEAC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002DE0A4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1002DE59C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  void *v15;
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

void sub_1002DE718(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002DE7A4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002DE898(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002DEA60(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1002DEBE8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1002DED1C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1002DEDD4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002DF0A0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002DF0E0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002DF110(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002DF350(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002DF5E4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002DF62C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002DF65C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002DF86C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002DF894(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002DF8C4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002DFE4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11)
{

  _Unwind_Resume(a1);
}

void sub_1002DFFC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1002E00D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1002E0254(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002E0384(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1002E064C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1002E085C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1002E0C10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id a14)
{
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;

  _Unwind_Resume(a1);
}

void sub_1002E0E88(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1002E1048(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1002E1138(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002E1268(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002E135C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002E14B0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1002E15B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1002E1728(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1002E1834(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1002E19BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1002E1A5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1002E1AB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1002E1BC4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1002E1D18(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1002E1DC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1002E1E6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1002E1F18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  v11 = v10;

  _Unwind_Resume(a1);
}

void sub_1002E1FF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1002E22D8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  _Unwind_Resume(a1);
}

void sub_1002E241C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1002E2574(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1002E2604(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1002E2654(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1002E26C4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002E2C2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

void sub_1002E2CC0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002E2CF0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002E31D8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1002E3274(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002E32A4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002E32D4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002E3304(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002E33C8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002E3A08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10, id a11)
{
  void *v11;

  sub_100171FA4(&a11);
  _Unwind_Resume(a1);
}

void sub_1002E3BA4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002E3BD4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002E3C04(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002E3C34(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002E3C98(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002E3DD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{

  _Unwind_Resume(a1);
}

void sub_1002E3ED8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{

  _Unwind_Resume(a1);
}

void sub_1002E3FC8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002E40B4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002E41A0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002E4374(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1002E44A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1002E45E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1002E469C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1002E4744(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002E4858(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1002E4968(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1002E4A5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1002E4CD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

void sub_1002E4FFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;

  _Unwind_Resume(a1);
}

void sub_1002E5688(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002E57C4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002E57F4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002E5824(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002E5854(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002E5884(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002E58B4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002E59B0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_1002E59F4()
{
  JUMPOUT(0x1002E59E8);
}

void sub_1002E5A68(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1002E6114(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15, void *a16)
{
  void *v16;
  void *v17;
  void *v18;

  _Unwind_Resume(a1);
}

void sub_1002E62AC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002E62DC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002E630C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002E633C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002E636C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002E639C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002E6454(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1002E685C(_Unwind_Exception *a1, uint64_t a2, void *a3, void *a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, ...)
{
  void *v15;
  void *v16;
  va_list va;

  va_start(va, a15);

  sub_100171FA4((id *)va);
  _Unwind_Resume(a1);
}

id sub_1002E6988(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "addRange:");
}

void sub_1002E6A04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

NSString *__cdecl sub_1002E6A24(id a1, NSString *a2)
{
  NSString *v2;
  void *v3;
  void *v4;

  v2 = a2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSLocale currentLocale](NSLocale, "currentLocale"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(-[NSString uppercaseStringWithLocale:](v2, "uppercaseStringWithLocale:", v3));

  return (NSString *)v4;
}

void sub_1002E6A80(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1002E6B10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

NSString *__cdecl sub_1002E6B30(id a1, NSString *a2)
{
  NSString *v2;
  void *v3;
  void *v4;

  v2 = a2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSLocale currentLocale](NSLocale, "currentLocale"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(-[NSString lowercaseStringWithLocale:](v2, "lowercaseStringWithLocale:", v3));

  return (NSString *)v4;
}

void sub_1002E6B8C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1002E6C1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

NSString *__cdecl sub_1002E6C3C(id a1, NSString *a2)
{
  NSString *v2;
  void *v3;
  void *v4;

  v2 = a2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSLocale currentLocale](NSLocale, "currentLocale"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(-[NSString capitalizedStringWithLocale:](v2, "capitalizedStringWithLocale:", v3));

  return (NSString *)v4;
}

void sub_1002E6C98(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1002E73CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  void *v13;
  void *v14;
  void *v15;
  void *v16;

  if (__p)
    operator delete(__p);

  _Unwind_Resume(a1);
}

void sub_1002E750C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002E753C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002E775C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1002E7868(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002E7B54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  void *v33;
  void *v34;
  uint64_t v35;

  _Block_object_dispose(&a25, 8);
  _Block_object_dispose(&a29, 8);
  _Block_object_dispose(&a33, 8);
  _Block_object_dispose((const void *)(v35 - 176), 8);

  _Unwind_Resume(a1);
}

void sub_1002E7BCC(uint64_t a1, uint64_t a2)
{
  __int128 *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (a2)
  {
    if (*(uint64_t *)(a2 + 24) < 0)
      v3 = &xmmword_100EEE418;
    else
      v3 = (__int128 *)a2;
    v4 = *((_QWORD *)v3 + 1);
    v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
    *(_QWORD *)(v5 + 48) = *(_QWORD *)v3;
    *(_QWORD *)(v5 + 56) = v4;
    sub_1001459A4(a2, *(_QWORD *)(a1 + 48), *(_BYTE *)(a1 + 56), 1, 1);
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = v6;
  }
}

void sub_1002E7C38(uint64_t a1, uint64_t a2)
{
  __int128 *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (a2)
  {
    if (*(uint64_t *)(a2 + 24) < 0)
      v3 = &xmmword_100EEE418;
    else
      v3 = (__int128 *)a2;
    v4 = *((_QWORD *)v3 + 1);
    v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
    *(_QWORD *)(v5 + 48) = *(_QWORD *)v3;
    *(_QWORD *)(v5 + 56) = v4;
    sub_1001459A4(a2, *(_QWORD *)(a1 + 48), *(_BYTE *)(a1 + 56), 1, 1);
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = v6;
  }
}

void sub_1002E840C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1002E8524(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002E8554(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002E8584(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002E85B4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002E85E4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002E8614(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002E8F58(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1002E9078(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002E90A8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002E90D8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002E9108(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002E9138(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002E9168(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002E9198(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002E91C8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002E91F8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002E9228(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002E9348(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1002E984C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002E987C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002E9AF0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002E9B20(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002E9CC8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002E9CF8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002E9E90(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002E9EC0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

double sub_1002EA020(int a1, double a2)
{
  double v2;
  double result;
  double v4;
  double v5;

  switch(a1)
  {
    case -2:
      v2 = (3.0 - a2) * a2 + -3.0;
      goto LABEL_6;
    case -1:
      v2 = (a2 * 3.0 + -6.0) * a2;
      v4 = 4.0;
      goto LABEL_7;
    case 0:
      v2 = (a2 * -3.0 + 3.0) * a2 + 3.0;
LABEL_6:
      v4 = 1.0;
LABEL_7:
      v5 = v4 + v2 * a2;
      goto LABEL_9;
    case 1:
      v5 = a2 * a2 * a2;
LABEL_9:
      result = v5 / 6.0;
      break;
    default:
      result = 0.0;
      break;
  }
  return result;
}

double sub_1002EA0A8(int a1, double a2)
{
  double v2;
  double v3;
  double result;

  switch(a1)
  {
    case -2:
      v2 = (a2 * -2.0 + 3.0) * a2 / 6.0 + (3.0 - a2) * a2 / 6.0;
      v3 = -0.5;
      goto LABEL_6;
    case -1:
      result = a2 * a2 * 0.5 + (a2 * 3.0 + -6.0) * a2 / 3.0;
      break;
    case 0:
      __asm
      {
        FMOV            V2.2D, #3.0
        FMOV            V1.2D, #6.0
      }
      v2 = vaddvq_f64(vdivq_f64(vmulq_n_f64(vmlaq_n_f64(_Q2, (float64x2_t)xmmword_100EEF1F0, a2), a2), _Q1));
      v3 = 0.5;
LABEL_6:
      result = v2 + v3;
      break;
    case 1:
      result = a2 * a2 * 3.0 / 6.0;
      break;
    default:
      result = 0.0;
      break;
  }
  return result;
}

double sub_1002EA170(int a1, double result)
{
  double v2;
  double v3;

  switch(a1)
  {
    case -2:
      result = 1.0 - result;
      break;
    case -1:
      v2 = -2.0;
      v3 = 3.0;
      goto LABEL_6;
    case 0:
      v2 = 1.0;
      v3 = -3.0;
LABEL_6:
      result = v2 + result * v3;
      break;
    case 1:
      return result;
    default:
      result = 0.0;
      break;
  }
  return result;
}

double sub_1002EA1C4(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v18;
  double v19;

  v8 = (a5 + a3 * 2.0) * 0.333333333;
  v9 = (a6 + a4 * 2.0) * 0.333333333;
  v10 = (a3 + a5 * 2.0) * 0.333333333;
  v11 = (a4 + a6 * 2.0) * 0.333333333;
  v19 = ((a1 + a3 * 2.0) * 0.333333333 + v8) * 0.5;
  v12 = ((a2 + a4 * 2.0) * 0.333333333 + v9) * 0.5;
  v13 = (v10 + (a7 + a5 * 2.0) * 0.333333333) * 0.5;
  v14 = (v11 + (a8 + a6 * 2.0) * 0.333333333) * 0.5;
  v18 = sub_10006108C(v19, v12, v8, v9);
  v15 = sub_10006108C(v8, v9, v10, v11);
  v16 = v18 + v15 + sub_10006108C(v10, v11, v13, v14);
  return v16 * 0.5 + sub_10006108C(v19, v12, v13, v14) * 0.5;
}

double sub_1002EA2D8(_QWORD *a1, uint64_t a2, double (*a3)(_QWORD, double), double a4)
{
  uint64_t v8;
  uint64_t v9;
  double y;
  double x;
  double *v12;
  double *v13;
  unint64_t v14;
  uint64_t v15;
  double v16;
  double v17;
  double v18;
  _BOOL4 v20;
  os_log_t v21;
  uint64_t v22;
  unsigned int v24;
  void *v25;
  void *v26;
  NSObject *log;
  os_log_t loga;
  os_log_t logb;
  uint8_t buf[4];
  unsigned int v31;
  __int16 v32;
  const char *v33;
  __int16 v34;
  const char *v35;
  __int16 v36;
  int v37;

  v8 = 80 * a2 - 72;
  v9 = -4;
  x = CGPointZero.x;
  y = CGPointZero.y;
  do
  {
    if (a2 + v9 + 2 > -2)
    {
      v14 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(a1[1] - *a1) >> 4);
      if (v14 >> 31)
      {
        v24 = +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
        if (qword_10147E370 != -1)
          dispatch_once(&qword_10147E370, &stru_10124EE98);
        log = off_1013D9070;
        if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 67109890;
          v31 = v24;
          v32 = 2082;
          v33 = "CGPoint splinePoint(const std::vector<_CRLPKStrokePoint> &, NSInteger, CGFloat, CGFloat (*)(int, CGFloat))";
          v34 = 2082;
          v35 = "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/PencilKit/CRLPKBSplineUtility.mm";
          v36 = 1024;
          v37 = 113;
          _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Out-of-bounds type assignment was clamped to max", buf, 0x22u);
        }
        if (qword_10147E370 != -1)
          dispatch_once(&qword_10147E370, &stru_10124EEB8);
        loga = off_1013D9070;
        v20 = os_log_type_enabled(loga, OS_LOG_TYPE_ERROR);
        v21 = loga;
        if (v20)
        {
          v22 = objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
          *(_DWORD *)buf = 67109378;
          v31 = v24;
          v32 = 2114;
          v33 = (const char *)v22;
          v26 = (void *)v22;
          _os_log_error_impl((void *)&_mh_execute_header, loga, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: Assertion backtrace: >>%{public}@<<", buf, 0x12u);

          v21 = loga;
        }

        logb = (os_log_t)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "CGPoint splinePoint(const std::vector<_CRLPKStrokePoint> &, NSInteger, CGFloat, CGFloat (*)(int, CGFloat))"));
        v25 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/PencilKit/CRLPKBSplineUtility.mm"));
        +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", logb, v25, 113, 0, "Out-of-bounds type assignment was clamped to max");

        v14 = 0x7FFFFFFFLL;
      }
      if (a2 + v9 + 3 >= v14)
      {
        v15 = a1[1];
        v12 = (double *)(v15 - 72);
        v13 = (double *)(v15 - 64);
      }
      else
      {
        v12 = (double *)(*a1 + v8);
        v13 = v12 + 1;
      }
    }
    else
    {
      v12 = (double *)(*a1 + 8);
      v13 = (double *)(*a1 + 16);
    }
    v16 = *v13;
    v17 = *v12;
    v18 = a3((v9 + 2), a4);
    x = x + v18 * v17;
    y = y + v18 * v16;
    v8 += 80;
  }
  while (!__CFADD__(v9++, 1));
  return x;
}

void sub_1002EA640(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{

  _Unwind_Resume(a1);
}

void sub_1002EA670(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002EA6A0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

float64x2_t sub_1002EA6D0(float64x2_t *a1, uint64_t a2)
{
  uint64_t v2;
  double *v3;
  float64x2_t result;

  v2 = 0;
  v3 = (double *)&qword_100EEF1B0;
  do
  {
    result = a1[2];
    *(float64x2_t *)(a2 + v2) = vmlaq_n_f64(vmlaq_n_f64(vmlaq_n_f64(vmulq_n_f64(a1[1], *(v3 - 4)), *a1, *(v3 - 8)), result, *v3), a1[3], v3[4]);
    v2 += 16;
    ++v3;
  }
  while (v2 != 64);
  return result;
}

CGPath *sub_1002EA71C(void *a1, int a2)
{
  id v3;
  CGPath *Mutable;
  char *i;
  uint64_t v7;
  double *v8;
  void *v9;
  double v10;
  double v11;
  void *v12;
  double v13;
  double v14;
  void *v15;
  double v16;
  double v17;
  void *v18;
  double v19;
  void *v20;
  double v21;
  void *v22;
  double v23;
  double v24;
  double v25;
  double v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  CGFloat v30[8];
  float64x2_t v31;

  v3 = a1;
  Mutable = CGPathCreateMutable();
  if ((unint64_t)objc_msgSend(v3, "count") >= 2)
  {
    for (i = 0; i < (char *)objc_msgSend(v3, "count") - 1 && (!a2 || i != (char *)objc_msgSend(v3, "count") - 2); ++i)
    {
      v7 = 0;
      v8 = &v31.f64[1];
      do
      {
        if (!&i[v7])
        {
          v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectAtIndexedSubscript:", 0));
          objc_msgSend(v20, "location");
          v11 = v21;
          v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectAtIndexedSubscript:", 1));
          objc_msgSend(v22, "location");
          v14 = v23;

          v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectAtIndexedSubscript:", 0));
          objc_msgSend(v15, "location");
          v17 = v24;
          v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectAtIndexedSubscript:", 1));
          objc_msgSend(v18, "location");
          goto LABEL_12;
        }
        if (&i[v7] == (char *)objc_msgSend(v3, "count") + 1)
        {
          v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectAtIndexedSubscript:", (char *)objc_msgSend(v3, "count") - 1));
          objc_msgSend(v9, "location");
          v11 = v10;
          v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectAtIndexedSubscript:", (char *)objc_msgSend(v3, "count") - 2));
          objc_msgSend(v12, "location");
          v14 = v13;

          v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectAtIndexedSubscript:", (char *)objc_msgSend(v3, "count") - 1));
          objc_msgSend(v15, "location");
          v17 = v16;
          v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectAtIndexedSubscript:", (char *)objc_msgSend(v3, "count") - 2));
          objc_msgSend(v18, "location");
LABEL_12:
          v25 = -(v14 - v11 * 2.0);
          v26 = -(v19 - v17 * 2.0);

          *(v8 - 1) = v25;
          *v8 = v26;
          goto LABEL_14;
        }
        v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectAtIndexedSubscript:", &i[v7 - 1]));
        objc_msgSend(v27, "location");
        *((_QWORD *)v8 - 1) = v28;
        *(_QWORD *)v8 = v29;

LABEL_14:
        ++v7;
        v8 += 2;
      }
      while (v7 != 4);
      sub_1002EA6D0(&v31, (uint64_t)v30);
      if (!i)
        CGPathMoveToPoint(Mutable, 0, v30[0], v30[1]);
      CGPathAddCurveToPoint(Mutable, 0, v30[2], v30[3], v30[4], v30[5], v30[6], v30[7]);
    }
  }

  return Mutable;
}

void sub_1002EA9BC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

CGPath *sub_1002EAA30(_QWORD *a1, char a2)
{
  CGPath *Mutable;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v16;
  float64x2_t *v17;
  uint64_t v18;
  float64x2_t v19;
  float64x2_t v20;
  float64x2_t v22;
  CGFloat v23[8];
  float64x2_t v24[4];

  Mutable = CGPathCreateMutable();
  v5 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(a1[1] - *a1) >> 4);
  v6 = v5 - 2;
  if (v5 < 2)
    return Mutable;
  v7 = v5 - 1;
  v8 = 0;
  v9 = ~v5;
  v10 = -72;
  __asm { FMOV            V2.2D, #2.0 }
  v22 = _Q2;
  do
  {
    if (v8 == v6 && (a2 & 1) != 0)
      return Mutable;
    v16 = 0;
    v17 = v24;
    v18 = v10;
    do
    {
      if (v8 == v16)
      {
        v19 = *(float64x2_t *)(*a1 + 8);
        v20 = *(float64x2_t *)(*a1 + 88);
LABEL_11:
        *v17 = vmlaq_f64(vnegq_f64(v20), _Q2, v19);
        goto LABEL_13;
      }
      if (v9 == v16)
      {
        v19 = *(float64x2_t *)(*a1 + 80 * v7 + 8);
        v20 = *(float64x2_t *)(*a1 + 80 * v6 + 8);
        goto LABEL_11;
      }
      *v17 = *(float64x2_t *)(*a1 + v18);
LABEL_13:
      ++v17;
      v18 += 80;
      --v16;
    }
    while (v16 != -4);
    sub_1002EA6D0(v24, (uint64_t)v23);
    if (!v8)
      CGPathMoveToPoint(Mutable, 0, v23[0], v23[1]);
    CGPathAddCurveToPoint(Mutable, 0, v23[2], v23[3], v23[4], v23[5], v23[6], v23[7]);
    ++v8;
    v10 += 80;
    ++v9;
    _Q2 = v22;
  }
  while (v8 != v7);
  return Mutable;
}

void sub_1002EB1E0(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  unsigned int v12;
  void *v13;
  void *v14;
  CRLTemporaryDirectory *v15;
  id v16;
  id v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  CRLURLBoardItemProvider *v25;
  void *v26;
  CRLURLBoardItemProvider *v27;
  void *v28;
  id v29;
  id v30;

  v3 = a2;
  objc_opt_class(NSTextAttachment, v4);
  v6 = sub_100221D0C(v5, v3);
  v7 = (void *)objc_claimAutoreleasedReturnValue(v6);

  if (v7)
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "fileType"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[CRLIngestionTypes supportedImageTypes](CRLIngestionTypes, "supportedImageTypes"));
    if (objc_msgSend(v8, "crl_conformsToAnyUTI:", v9))
    {

LABEL_5:
      v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "fileWrapper"));
      v14 = v13;
      if (!v13 || !objc_msgSend(v13, "isRegularFile"))
        goto LABEL_36;
      v30 = 0;
      v15 = -[CRLTemporaryDirectory initWithError:]([CRLTemporaryDirectory alloc], "initWithError:", &v30);
      v16 = v30;
      if (v16)
      {
        v17 = v16;
        +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
        if (qword_10147E370 != -1)
          dispatch_once(&qword_10147E370, &stru_10124EF18);
        if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
          sub_100E1C6E8();
        if (qword_10147E370 != -1)
          dispatch_once(&qword_10147E370, &stru_10124EF38);
        v18 = off_1013D9070;
        if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
          sub_100DE8358(v18);
        v19 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLBoardItemProviderFactory extractPasteboardBoardItemsFrom:]_block_invoke"));
        v20 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLBoardItemProviderFactory.m"));
        +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v19, v20, 149, 0, "Error extracting attachment: %@", v17);
      }
      else
      {
        v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "filename"));
        if (v21)
          v22 = objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "filename"));
        else
          v22 = objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "preferredFilename"));
        v19 = (void *)v22;

        if (!v19)
        {
          v17 = 0;
LABEL_35:

LABEL_36:
          goto LABEL_37;
        }
        v23 = (void *)objc_claimAutoreleasedReturnValue(-[CRLTemporaryDirectory URL](v15, "URL"));
        v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v23, "URLByAppendingPathComponent:", v19));

        v29 = 0;
        objc_msgSend(v14, "writeToURL:options:originalContentsURL:error:", v20, 0, 0, &v29);
        v17 = v29;
        if (v17)
        {
          +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
          if (qword_10147E370 != -1)
            dispatch_once(&qword_10147E370, &stru_10124EED8);
          if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
            sub_100E1C65C();
          if (qword_10147E370 != -1)
            dispatch_once(&qword_10147E370, &stru_10124EEF8);
          v24 = off_1013D9070;
          if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
            sub_100DE8358(v24);
          v25 = (CRLURLBoardItemProvider *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLBoardItemProviderFactory extractPasteboardBoardItemsFrom:]_block_invoke"));
          v26 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLBoardItemProviderFactory.m"));
          +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v25, v26, 145, 0, "Error extracting attachment: %@", v17);

        }
        else
        {
          v27 = [CRLURLBoardItemProvider alloc];
          v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "preferredFilename"));
          v25 = -[CRLURLBoardItemProvider initWithURL:fallbackBoardItemProvider:isDetectedURL:suggestedName:](v27, "initWithURL:fallbackBoardItemProvider:isDetectedURL:suggestedName:", v20, 0, 0, v28);

          -[CRLTemporaryDirectory setAssociatedLifetimeObject:](v15, "setAssociatedLifetimeObject:", v25);
          objc_msgSend(*(id *)(a1 + 32), "addObject:", v25);
        }

      }
      goto LABEL_35;
    }
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "fileType"));
    v11 = (void *)objc_claimAutoreleasedReturnValue(+[CRLIngestionTypes supportedMovieTypes](CRLIngestionTypes, "supportedMovieTypes"));
    v12 = objc_msgSend(v10, "crl_conformsToAnyUTI:", v11);

    if (v12)
      goto LABEL_5;
  }
LABEL_37:

}

void sub_1002EB658(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002EB688(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002EB6B8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002EB6E8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

CRLURLBoardItemProvider *__cdecl sub_1002EB768(id a1, NSURL *a2)
{
  NSURL *v2;
  CRLURLBoardItemProvider *v3;

  v2 = a2;
  if (+[CRLURLBoardItemProvider canInitWithURL:](CRLURLBoardItemProvider, "canInitWithURL:", v2))
    v3 = -[CRLURLBoardItemProvider initWithURL:fallbackBoardItemProvider:isDetectedURL:suggestedName:]([CRLURLBoardItemProvider alloc], "initWithURL:fallbackBoardItemProvider:isDetectedURL:suggestedName:", v2, 0, 0, 0);
  else
    v3 = 0;

  return v3;
}

id sub_1002EBA40(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setSelectionPath:", *(_QWORD *)(a1 + 40));
}

id sub_1002EBAD0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setSelectionPath:withFlags:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
}

void sub_1002EBC70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1002EBC88(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1002EBC98(uint64_t a1)
{

}

void sub_1002EBCA0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "editorForEditAction:withSender:", *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 40)));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_1002EBF44(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002EBF74(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002EC0C0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLFreehandGRCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB4F0;
  off_1013DB4F0 = v2;

}

void sub_1002ECCA0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLFreehandGRCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB4F0;
  off_1013DB4F0 = v2;

}

void sub_1002ECCCC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLFreehandGRCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB4F0;
  off_1013DB4F0 = v2;

}

void sub_1002ECCF8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLFreehandGRCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB4F0;
  off_1013DB4F0 = v2;

}

void sub_1002ECD24(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLFreehandGRCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB4F0;
  off_1013DB4F0 = v2;

}

void sub_1002ECD50(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLFreehandGRCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB4F0;
  off_1013DB4F0 = v2;

}

void sub_1002ECD7C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLFreehandGRCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB4F0;
  off_1013DB4F0 = v2;

}

void sub_1002ECDA8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLFreehandGRCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB4F0;
  off_1013DB4F0 = v2;

}

void sub_1002ECDD4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLFreehandGRCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB4F0;
  off_1013DB4F0 = v2;

}

void sub_1002ECE00(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLFreehandGRCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB4F0;
  off_1013DB4F0 = v2;

}

void sub_1002ECE2C(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  _BYTE *v5;

  v3 = a2;
  if (qword_10147E5B8 != -1)
    dispatch_once(&qword_10147E5B8, &stru_10124F168);
  v4 = off_1013DB4F0;
  if (os_log_type_enabled((os_log_t)off_1013DB4F0, OS_LOG_TYPE_DEBUG))
    sub_100E1CAA0(a1, v4);
  if (objc_msgSend(*(id *)(a1 + 32), "state") == (id)1 || objc_msgSend(*(id *)(a1 + 32), "state") == (id)2)
  {
    v5 = *(_BYTE **)(a1 + 32);
    if (!v5[64])
      objc_msgSend(v5, "p_beginDynamicDrawing");
  }

}

void sub_1002ECEE4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLFreehandGRCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB4F0;
  off_1013DB4F0 = v2;

}

void sub_1002ECF10(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLFreehandGRCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB4F0;
  off_1013DB4F0 = v2;

}

void sub_1002ECF3C(uint64_t a1, void *a2)
{
  id v3;
  void *v4;

  v3 = a2;
  if (qword_10147E5B8 != -1)
    dispatch_once(&qword_10147E5B8, &stru_10124F1A8);
  v4 = off_1013DB4F0;
  if (os_log_type_enabled((os_log_t)off_1013DB4F0, OS_LOG_TYPE_DEBUG))
    sub_100E1CAA0(a1, v4);
  if (!objc_msgSend(*(id *)(a1 + 32), "state"))
  {
    objc_msgSend(*(id *)(a1 + 32), "setState:", 1);
    if (!*(_BYTE *)(a1 + 40))
      objc_msgSend(*(id *)(a1 + 32), "p_beginDynamicDrawing");
  }

}

void sub_1002ECFE4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLFreehandGRCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB4F0;
  off_1013DB4F0 = v2;

}

void sub_1002ED010(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLFreehandGRCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB4F0;
  off_1013DB4F0 = v2;

}

void sub_1002ED03C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLFreehandGRCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB4F0;
  off_1013DB4F0 = v2;

}

void sub_1002ED3B8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLFreehandGRCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB4F0;
  off_1013DB4F0 = v2;

}

void sub_1002ED738(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLFreehandGRCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB4F0;
  off_1013DB4F0 = v2;

}

void sub_1002EDA6C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLFreehandGRCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB4F0;
  off_1013DB4F0 = v2;

}

void sub_1002EDA98(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLFreehandGRCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB4F0;
  off_1013DB4F0 = v2;

}

void sub_1002EDAC4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLFreehandGRCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB4F0;
  off_1013DB4F0 = v2;

}

void sub_1002EDD18(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLFreehandGRCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB4F0;
  off_1013DB4F0 = v2;

}

void sub_1002EDD44(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002EDD74(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002EE15C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLFreehandGRCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB4F0;
  off_1013DB4F0 = v2;

}

void sub_1002EE188(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002EE1B8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002EE40C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLFreehandGRCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB4F0;
  off_1013DB4F0 = v2;

}

void sub_1002EE92C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLFreehandGRCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB4F0;
  off_1013DB4F0 = v2;

}

id sub_1002EE9BC(uint64_t a1, void *a2)
{
  return a2;
}

void sub_1002EEB9C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLTrackerManipulatorCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB4F8;
  off_1013DB4F8 = v2;

}

void sub_1002EECD0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLTrackerManipulatorCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB4F8;
  off_1013DB4F8 = v2;

}

void sub_1002EF124(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002EF154(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002EF184(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLTrackerManipulatorCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB4F8;
  off_1013DB4F8 = v2;

}

void sub_1002EF1B0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLTrackerManipulatorCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB4F8;
  off_1013DB4F8 = v2;

}

void sub_1002EF338(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLTrackerManipulatorCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB4F8;
  off_1013DB4F8 = v2;

}

void sub_1002EF510(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLTrackerManipulatorCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB4F8;
  off_1013DB4F8 = v2;

}

void sub_1002EF81C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLTrackerManipulatorCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB4F8;
  off_1013DB4F8 = v2;

}

void sub_1002EF848(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002EF878(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002EF9C4(void *a1, const char *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  objc_class *Class;
  NSString *v7;
  void *v8;
  objc_class *v9;
  id v10;
  objc_super v11;

  v3 = a1;
  if (qword_10147E5C0 != -1)
    dispatch_once(&qword_10147E5C0, &stru_10124F538);
  v4 = off_1013DB4F8;
  if (os_log_type_enabled((os_log_t)off_1013DB4F8, OS_LOG_TYPE_INFO))
  {
    LODWORD(v11.receiver) = 138412290;
    *(id *)((char *)&v11.receiver + 4) = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "universal reset called for %@", (uint8_t *)&v11, 0xCu);
  }
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  objc_msgSend(v5, "postNotificationName:object:", CFSTR("CRLCanvasControllingGRDidResetNotification"), v3);

  Class = object_getClass(v3);
  v7 = NSStringFromClass(Class);
  v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
  if (objc_msgSend(v8, "hasPrefix:", CFSTR("__TSDResetNotifying")))
  {
    v11.receiver = v3;
    v9 = object_getClass(v3);
    v11.super_class = class_getSuperclass(v9);
    v10 = objc_msgSendSuper(&v11, a2);
  }
  else
  {
    objc_msgSend(v3, "reset");
  }

}

void sub_1002EFB20(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLTrackerManipulatorCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB4F8;
  off_1013DB4F8 = v2;

}

void sub_1002EFFB0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1002EFFEC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002F001C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002F004C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002F007C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002F02E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1002F0308(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002F0338(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002F0DD0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_1002F1A64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1002F1A80(uint64_t a1)
{
  id *v1;
  id WeakRetained;
  id v3;

  v1 = (id *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "crlaxEnsureChildrenAreLoaded");

  v3 = objc_loadWeakRetained(v1);
  objc_msgSend(v3, "_crlaxSetHasEnqueuedBlockToLoadChildren:", 0);

}

BOOL sub_1002F22D4(id a1, id a2)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  CGRect v7;

  v2 = a2;
  objc_opt_class(CRLCanvasRep, v3);
  if ((objc_opt_isKindOfClass(v2, v4) & 1) != 0)
  {
    objc_msgSend(v2, "accessibilityFrame");
    v5 = CGRectGetMaxY(v7) >= 0.0;
  }
  else
  {
    v5 = 1;
  }

  return v5;
}

void sub_1002F2D80(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002F2DB0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002F3238(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002F3268(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002F36B4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002F36E4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002F3C44(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002F3C74(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002F3CA4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002F3CD4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002F3D04(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLMoviePlaybackCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB560;
  off_1013DB560 = v2;

}

void sub_1002F464C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLMoviePlaybackCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB560;
  off_1013DB560 = v2;

}

void sub_1002F4678(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLMoviePlaybackCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB560;
  off_1013DB560 = v2;

}

void sub_1002F46A4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLMoviePlaybackCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB560;
  off_1013DB560 = v2;

}

id sub_1002F526C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_clearVolumeRampFromPlayerItem");
}

void sub_1002F5888(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLMoviePlaybackCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB560;
  off_1013DB560 = v2;

}

void sub_1002F5B34(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002F5B64(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002F5F78(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002F5FA8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002F5FD8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLMoviePlaybackCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB560;
  off_1013DB560 = v2;

}

void sub_1002F6614(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLMoviePlaybackCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB560;
  off_1013DB560 = v2;

}

void sub_1002F6640(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLMoviePlaybackCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB560;
  off_1013DB560 = v2;

}

void sub_1002F6844(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLMoviePlaybackCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB560;
  off_1013DB560 = v2;

}

void sub_1002F6A4C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLMoviePlaybackCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB560;
  off_1013DB560 = v2;

}

void sub_1002F6A78(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLMoviePlaybackCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB560;
  off_1013DB560 = v2;

}

void sub_1002F6BC8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLMoviePlaybackCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB560;
  off_1013DB560 = v2;

}

void sub_1002F6CB4(id a1)
{
  id v1;
  void *v2;

  v1 = objc_msgSend(objc_alloc((Class)NSSet), "initWithObjects:", CFSTR("player.currentItem.canPlayFastReverse"), 0);
  v2 = (void *)qword_1014153A0;
  qword_1014153A0 = (uint64_t)v1;

}

void sub_1002F6FBC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLMoviePlaybackCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB560;
  off_1013DB560 = v2;

}

void sub_1002F7028(id a1)
{
  id v1;
  void *v2;

  v1 = objc_msgSend(objc_alloc((Class)NSSet), "initWithObjects:", CFSTR("player.currentItem.canPlayFastForward"), 0);
  v2 = (void *)qword_1014153B0;
  qword_1014153B0 = (uint64_t)v1;

}

void sub_1002F732C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLMoviePlaybackCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB560;
  off_1013DB560 = v2;

}

uint64_t sub_1002F7768(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_1002F79E4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002F7A14(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002F7FD8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLMoviePlaybackCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB560;
  off_1013DB560 = v2;

}

void sub_1002F8004(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002F8034(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002F8064(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002F8094(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002F8498(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002F84C8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002F84F8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002F8528(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002F8558(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLMoviePlaybackCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB560;
  off_1013DB560 = v2;

}

void sub_1002F8E90(uint64_t a1)
{
  __CFRunLoop *Main;
  id v3;
  uint64_t v4;
  _QWORD v5[4];
  id v6;
  uint64_t v7;

  Main = CFRunLoopGetMain();
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_1002F8F2C;
  v5[3] = &unk_10122D3D8;
  v3 = *(id *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v6 = v3;
  v7 = v4;
  CFRunLoopPerformBlock(Main, kCFRunLoopCommonModes, v5);
  CFRunLoopWakeUp(Main);

}

void sub_1002F8F2C(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  v2 = *(void **)(a1 + 32);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "player"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "currentItem"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "asset"));

  if (v2 == v5)
  {
    if (objc_msgSend(*(id *)(a1 + 32), "statusOfValueForKey:error:", CFSTR("playable"), 0) == (id)2)
    {
      if (objc_msgSend(*(id *)(a1 + 32), "crl_isPlayable"))
      {
        objc_msgSend(*(id *)(a1 + 40), "willChangeValueForKey:", CFSTR("canPlay"));
        *(_BYTE *)(*(_QWORD *)(a1 + 40) + 192) = 1;
        objc_msgSend(*(id *)(a1 + 40), "didChangeValueForKey:", CFSTR("canPlay"));
      }
    }
    v6 = *(void **)(a1 + 40);
    objc_msgSend(v6, "rate");
    objc_msgSend(v6, "p_updatePlayerItemsAndApplyRate:");
  }
}

void sub_1002F900C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLMoviePlaybackCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB560;
  off_1013DB560 = v2;

}

void sub_1002F9038(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLMoviePlaybackCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB560;
  off_1013DB560 = v2;

}

id sub_1002F9064(uint64_t a1)
{
  id result;
  float v3;
  _BYTE *v4;
  BOOL v5;
  BOOL v6;
  NSObject *v8;
  uint64_t v9;
  const char *v10;
  NSObject *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[24];

  result = objc_msgSend(*(id *)(a1 + 32), "rate");
  v4 = *(_BYTE **)(a1 + 32);
  if (v4[201] && (!v4[218] ? (v5 = v3 == -2.0) : (v5 = 0), v5))
  {
    if (qword_10147E5C8 != -1)
      dispatch_once(&qword_10147E5C8, &stru_10124FC20);
    v11 = off_1013DB560;
    if (os_log_type_enabled((os_log_t)off_1013DB560, OS_LOG_TYPE_DEFAULT))
    {
      v12 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)v19 = 134218240;
      *(_QWORD *)&v19[4] = v12;
      *(_WORD *)&v19[12] = 2048;
      *(_QWORD *)&v19[14] = 0xC000000000000000;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "CRLAVPlayerController %p: Marking as fast reversing because player rate changed to %f.", v19, 0x16u);
    }
    objc_msgSend(*(id *)(a1 + 32), "willChangeValueForKey:", CFSTR("fastReversing"));
    *(_BYTE *)(*(_QWORD *)(a1 + 32) + 218) = 1;
    result = objc_msgSend(*(id *)(a1 + 32), "didChangeValueForKey:", CFSTR("fastReversing"));
    v13 = *(_QWORD *)(a1 + 32);
    if (*(_BYTE *)(v13 + 200) && !*(_BYTE *)(v13 + 217))
    {
      if (qword_10147E5C8 != -1)
        dispatch_once(&qword_10147E5C8, &stru_10124FC40);
      v8 = off_1013DB560;
      if (!os_log_type_enabled((os_log_t)off_1013DB560, OS_LOG_TYPE_DEFAULT))
        goto LABEL_42;
      v14 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)v19 = 134218240;
      *(_QWORD *)&v19[4] = v14;
      *(_WORD *)&v19[12] = 2048;
      *(_QWORD *)&v19[14] = 0xC000000000000000;
      v10 = "CRLAVPlayerController %p: Also marking as playing because player rate changed to %f.";
      goto LABEL_41;
    }
  }
  else
  {
    if (!v4[202] || (!v4[219] ? (v6 = v3 == 2.0) : (v6 = 0), !v6))
    {
      if (!v4[200])
        goto LABEL_43;
      if (v4[217] || v3 != 1.0)
        goto LABEL_43;
      if (qword_10147E5C8 != -1)
        dispatch_once(&qword_10147E5C8, &stru_10124FCA0);
      v8 = off_1013DB560;
      if (!os_log_type_enabled((os_log_t)off_1013DB560, OS_LOG_TYPE_DEFAULT))
      {
LABEL_42:
        objc_msgSend(*(id *)(a1 + 32), "willChangeValueForKey:", CFSTR("playing"), *(_OWORD *)v19, *(_QWORD *)&v19[16]);
        *(_BYTE *)(*(_QWORD *)(a1 + 32) + 217) = 1;
        result = objc_msgSend(*(id *)(a1 + 32), "didChangeValueForKey:", CFSTR("playing"));
        goto LABEL_43;
      }
      v9 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)v19 = 134218240;
      *(_QWORD *)&v19[4] = v9;
      *(_WORD *)&v19[12] = 2048;
      *(_QWORD *)&v19[14] = 0x3FF0000000000000;
      v10 = "CRLAVPlayerController %p: Marking as playing because player rate changed to %f.";
LABEL_41:
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, v10, v19, 0x16u);
      goto LABEL_42;
    }
    if (qword_10147E5C8 != -1)
      dispatch_once(&qword_10147E5C8, &stru_10124FC60);
    v15 = off_1013DB560;
    if (os_log_type_enabled((os_log_t)off_1013DB560, OS_LOG_TYPE_DEFAULT))
    {
      v16 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)v19 = 134218240;
      *(_QWORD *)&v19[4] = v16;
      *(_WORD *)&v19[12] = 2048;
      *(_QWORD *)&v19[14] = 0x4000000000000000;
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "CRLAVPlayerController %p: Marking as fast forwarding because player rate changed to %f.", v19, 0x16u);
    }
    objc_msgSend(*(id *)(a1 + 32), "willChangeValueForKey:", CFSTR("fastForwarding"));
    *(_BYTE *)(*(_QWORD *)(a1 + 32) + 219) = 1;
    result = objc_msgSend(*(id *)(a1 + 32), "didChangeValueForKey:", CFSTR("fastForwarding"));
    v17 = *(_QWORD *)(a1 + 32);
    if (*(_BYTE *)(v17 + 200) && !*(_BYTE *)(v17 + 217))
    {
      if (qword_10147E5C8 != -1)
        dispatch_once(&qword_10147E5C8, &stru_10124FC80);
      v8 = off_1013DB560;
      if (!os_log_type_enabled((os_log_t)off_1013DB560, OS_LOG_TYPE_DEFAULT))
        goto LABEL_42;
      v18 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)v19 = 134218240;
      *(_QWORD *)&v19[4] = v18;
      *(_WORD *)&v19[12] = 2048;
      *(_QWORD *)&v19[14] = 0x4000000000000000;
      v10 = "CRLAVPlayerController %p: Also marking as playing because player rate changed to %f.";
      goto LABEL_41;
    }
  }
LABEL_43:
  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 200) = 0;
  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 201) = 0;
  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 202) = 0;
  return result;
}

void sub_1002F9458(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLMoviePlaybackCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB560;
  off_1013DB560 = v2;

}

void sub_1002F9484(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLMoviePlaybackCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB560;
  off_1013DB560 = v2;

}

void sub_1002F94B0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLMoviePlaybackCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB560;
  off_1013DB560 = v2;

}

void sub_1002F94DC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLMoviePlaybackCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB560;
  off_1013DB560 = v2;

}

void sub_1002F9508(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLMoviePlaybackCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB560;
  off_1013DB560 = v2;

}

void sub_1002F9534(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLMoviePlaybackCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB560;
  off_1013DB560 = v2;

}

id sub_1002F9560(uint64_t a1)
{
  id result;
  float v3;
  _BYTE *v4;
  NSObject *v5;
  uint64_t v6;
  NSObject *v7;
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  int v11;
  uint64_t v12;

  result = objc_msgSend(*(id *)(a1 + 32), "rate");
  if (v3 == 0.0)
  {
    *(_BYTE *)(*(_QWORD *)(a1 + 32) + 200) = objc_msgSend(*(id *)(a1 + 32), "isPlaying");
    *(_BYTE *)(*(_QWORD *)(a1 + 32) + 201) = objc_msgSend(*(id *)(a1 + 32), "isFastReversing");
    result = objc_msgSend(*(id *)(a1 + 32), "isFastForwarding");
    *(_BYTE *)(*(_QWORD *)(a1 + 32) + 202) = (_BYTE)result;
    v4 = *(_BYTE **)(a1 + 32);
    if (v4[200])
    {
      if (qword_10147E5C8 != -1)
        dispatch_once(&qword_10147E5C8, &stru_10124FCE0);
      v5 = off_1013DB560;
      if (os_log_type_enabled((os_log_t)off_1013DB560, OS_LOG_TYPE_DEFAULT))
      {
        v6 = *(_QWORD *)(a1 + 32);
        v11 = 134217984;
        v12 = v6;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "CRLAVPlayerController %p: Marking as not playing because player rate changed to 0.", (uint8_t *)&v11, 0xCu);
      }
      objc_msgSend(*(id *)(a1 + 32), "willChangeValueForKey:", CFSTR("playing"));
      *(_BYTE *)(*(_QWORD *)(a1 + 32) + 217) = 0;
      result = objc_msgSend(*(id *)(a1 + 32), "didChangeValueForKey:", CFSTR("playing"));
      v4 = *(_BYTE **)(a1 + 32);
    }
    if (v4[201])
    {
      if (qword_10147E5C8 != -1)
        dispatch_once(&qword_10147E5C8, &stru_10124FD00);
      v7 = off_1013DB560;
      if (os_log_type_enabled((os_log_t)off_1013DB560, OS_LOG_TYPE_DEFAULT))
      {
        v8 = *(_QWORD *)(a1 + 32);
        v11 = 134217984;
        v12 = v8;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "CRLAVPlayerController %p: Marking as not fast reversing because player rate changed to 0.", (uint8_t *)&v11, 0xCu);
      }
      objc_msgSend(*(id *)(a1 + 32), "willChangeValueForKey:", CFSTR("fastReversing"));
      *(_BYTE *)(*(_QWORD *)(a1 + 32) + 218) = 0;
      result = objc_msgSend(*(id *)(a1 + 32), "didChangeValueForKey:", CFSTR("fastReversing"));
      v4 = *(_BYTE **)(a1 + 32);
    }
    if (v4[202])
    {
      if (qword_10147E5C8 != -1)
        dispatch_once(&qword_10147E5C8, &stru_10124FD20);
      v9 = off_1013DB560;
      if (os_log_type_enabled((os_log_t)off_1013DB560, OS_LOG_TYPE_DEFAULT))
      {
        v10 = *(_QWORD *)(a1 + 32);
        v11 = 134217984;
        v12 = v10;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "CRLAVPlayerController %p: Marking as not fast forwarding because player rate changed to 0.", (uint8_t *)&v11, 0xCu);
      }
      objc_msgSend(*(id *)(a1 + 32), "willChangeValueForKey:", CFSTR("fastForwarding"));
      *(_BYTE *)(*(_QWORD *)(a1 + 32) + 219) = 0;
      return objc_msgSend(*(id *)(a1 + 32), "didChangeValueForKey:", CFSTR("fastForwarding"));
    }
  }
  return result;
}

void sub_1002F97EC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLMoviePlaybackCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB560;
  off_1013DB560 = v2;

}

void sub_1002F9818(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLMoviePlaybackCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB560;
  off_1013DB560 = v2;

}

void sub_1002F9844(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLMoviePlaybackCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB560;
  off_1013DB560 = v2;

}

void sub_1002F9B2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1002F9B48(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1002F9B58(uint64_t a1)
{

}

UIImage *sub_1002F9B60(uint64_t a1)
{
  return +[UIImage imageWithCGImage:](UIImage, "imageWithCGImage:", objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "CGImageForSize:inContext:orContentsScaleProvider:", 0, 0));
}

void sub_1002F9EF4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002F9F24(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002FA2F4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002FA324(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002FA354(uint64_t a1)
{
  void *v2;
  void *v3;
  void **p_cache;
  __int128 v5;
  unsigned __int8 v6;
  unsigned int v7;
  NSObject *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  double v13;
  double v14;
  double v15;
  NSObject *v16;
  char *v17;
  void *v18;
  void *v19;
  void *v20;
  __int128 v21;
  void *context;
  uint8_t buf[4];
  unsigned int v24;
  __int16 v25;
  const char *v26;
  __int16 v27;
  const char *v28;
  __int16 v29;
  int v30;

  context = objc_autoreleasePoolPush();
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSRunLoop currentRunLoop](NSRunLoop, "currentRunLoop"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate dateWithTimeIntervalSinceNow:](NSDate, "dateWithTimeIntervalSinceNow:", 0.1));
  objc_msgSend(*(id *)(a1 + 32), "addToRunLoop:forMode:", v2, CFSTR("com.apple.freeform.CRLAVPlayerControllerVideoDisplayBarrier"));
  p_cache = &OBJC_METACLASS___CRLFreehandDrawingRepTrifurcationContainer.cache;
  *(_QWORD *)&v5 = 67109378;
  v21 = v5;
  while ((objc_msgSend(*(id *)(a1 + 40), "allVideoFramesDisplayed", v21) & 1) == 0)
  {
    v6 = objc_msgSend(v2, "runMode:beforeDate:", CFSTR("com.apple.freeform.CRLAVPlayerControllerVideoDisplayBarrier"), v3);
    if ((v6 & 1) == 0)
    {
      v7 = +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_10124FDE8);
      v8 = off_1013D9070;
      if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 67109890;
        v24 = v7;
        v25 = 2082;
        v26 = "-[CRLAVPlayerControllerVideoDisplayBarrier waitUntilAllVideoFramesAreDisplayed]_block_invoke";
        v27 = 2082;
        v28 = "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLAVPlayerController.m";
        v29 = 1024;
        v30 = 1753;
        _os_log_error_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Run loop didn't run while waiting for all video frames to display.", buf, 0x22u);
      }
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_10124FE08);
      v9 = off_1013D9070;
      if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      {
        v16 = v9;
        v17 = (char *)objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
        *(_DWORD *)buf = v21;
        v24 = v7;
        v25 = 2114;
        v26 = v17;
        _os_log_error_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: Assertion backtrace: >>%{public}@<<", buf, 0x12u);

        p_cache = (void **)(&OBJC_METACLASS___CRLFreehandDrawingRepTrifurcationContainer + 16);
      }
      v10 = p_cache + 373;
      v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLAVPlayerControllerVideoDisplayBarrier waitUntilAllVideoFramesAreDisplayed]_block_invoke"));
      v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLAVPlayerController.m"));
      objc_msgSend(v10, "handleFailureInFunction:file:lineNumber:isFatal:description:", v11, v12, 1753, 0, "Run loop didn't run while waiting for all video frames to display.");

      p_cache = &OBJC_METACLASS___CRLFreehandDrawingRepTrifurcationContainer.cache;
    }
    +[NSDate timeIntervalSinceReferenceDate](NSDate, "timeIntervalSinceReferenceDate");
    v14 = v13;
    objc_msgSend(v3, "timeIntervalSinceReferenceDate");
    if (v14 >= v15)
    {
      +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_10124FE28);
      if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
        sub_100E1DB3C();
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_10124FE48);
      v18 = off_1013D9070;
      if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
        sub_100DE7468(v18);
      v19 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLAVPlayerControllerVideoDisplayBarrier waitUntilAllVideoFramesAreDisplayed]_block_invoke"));
      v20 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLAVPlayerController.m"));
      +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v19, v20, 1756, 0, "Timed out while waiting for all video frames to display.");

      break;
    }
    if ((v6 & 1) == 0)
      break;
  }
  objc_msgSend(*(id *)(a1 + 32), "invalidate");
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 48));

  objc_autoreleasePoolPop(context);
}

void sub_1002FA770(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002FA7A0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002FA7D0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002FA800(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002FAA18(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002FAA48(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002FB224(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002FB254(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002FB7B4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002FB7E4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002FBA88(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002FBAB8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002FBC68(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002FBC98(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

__CFString *sub_1002FCE08(unsigned int a1)
{
  if (a1 < 5)
    return *(&off_101250028 + (int)a1);
  if (a1 == 5)
    return CFSTR("CRLGestureStateFailed");
  return CFSTR("#Unknown CRLGestureState#");
}

BOOL sub_1002FD128(id a1, NSString *a2, int64_t a3, NSDictionary *a4)
{
  NSString *v6;
  NSDictionary *v7;
  unsigned __int8 v8;
  void *v9;

  v6 = a2;
  v7 = a4;
  if (a3 == 256 && -[NSString isEqualToString:](v6, "isEqualToString:", NSCocoaErrorDomain))
  {
    v8 = 1;
  }
  else
  {
    v9 = (void *)objc_claimAutoreleasedReturnValue(-[NSDictionary objectForKeyedSubscript:](v7, "objectForKeyedSubscript:", CFSTR("CRLIOErrorType")));
    v8 = objc_msgSend(v9, "isEqual:", &off_1012CC700);

  }
  return v8;
}

BOOL sub_1002FD1CC(id a1, NSString *a2, int64_t a3, NSDictionary *a4)
{
  if (a3 == 259)
    return -[NSString isEqualToString:](a2, "isEqualToString:", NSCocoaErrorDomain, a4);
  else
    return 0;
}

BOOL sub_1002FD1FC(id a1, NSString *a2, int64_t a3, NSDictionary *a4)
{
  NSString *v6;
  NSDictionary *v7;
  unsigned __int8 v8;
  void *v9;

  v6 = a2;
  v7 = a4;
  if (a3 == 512 && -[NSString isEqualToString:](v6, "isEqualToString:", NSCocoaErrorDomain))
  {
    v8 = 1;
  }
  else
  {
    v9 = (void *)objc_claimAutoreleasedReturnValue(-[NSDictionary objectForKeyedSubscript:](v7, "objectForKeyedSubscript:", CFSTR("CRLIOErrorType")));
    v8 = objc_msgSend(v9, "isEqual:", &off_1012CC718);

  }
  return v8;
}

void sub_1002FD850(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002FD880(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002FD904(id a1)
{
  CRLStrokePattern *v1;
  void *v2;

  v1 = -[CRLStrokePattern initWithPatternType:pattern:count:phase:]([CRLStrokePattern alloc], "initWithPatternType:pattern:count:phase:", 1, 0, 0, 0.0);
  v2 = (void *)qword_1014153C8;
  qword_1014153C8 = (uint64_t)v1;

}

void sub_1002FD980(id a1)
{
  CRLStrokePattern *v1;
  void *v2;

  v1 = -[CRLStrokePattern initWithPatternType:pattern:count:phase:]([CRLStrokePattern alloc], "initWithPatternType:pattern:count:phase:", 2, 0, 0, 0.0);
  v2 = (void *)qword_1014153D8;
  qword_1014153D8 = (uint64_t)v1;

}

void sub_1002FD9FC(id a1)
{
  CRLStrokePattern *v1;
  void *v2;

  v1 = -[CRLStrokePattern initWithPattern:count:phase:]([CRLStrokePattern alloc], "initWithPattern:count:phase:", &unk_100EEF218, 2, 0.0);
  v2 = (void *)qword_1014153E8;
  qword_1014153E8 = (uint64_t)v1;

}

void sub_1002FDA78(id a1)
{
  CRLStrokePattern *v1;
  void *v2;

  v1 = -[CRLStrokePattern initWithPattern:count:phase:]([CRLStrokePattern alloc], "initWithPattern:count:phase:", &unk_100EEF228, 2, 0.0);
  v2 = (void *)qword_1014153F8;
  qword_1014153F8 = (uint64_t)v1;

}

void sub_1002FDAF4(id a1)
{
  CRLStrokePattern *v1;
  void *v2;

  v1 = -[CRLStrokePattern initWithPattern:count:phase:]([CRLStrokePattern alloc], "initWithPattern:count:phase:", &unk_100EEF238, 2, 0.0);
  v2 = (void *)qword_101415408;
  qword_101415408 = (uint64_t)v1;

}

void sub_1002FDB70(id a1)
{
  CRLStrokePattern *v1;
  void *v2;

  v1 = -[CRLStrokePattern initWithPattern:count:phase:]([CRLStrokePattern alloc], "initWithPattern:count:phase:", &unk_100EEF248, 2, 0.0);
  v2 = (void *)qword_101415418;
  qword_101415418 = (uint64_t)v1;

}

void sub_1002FE468(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002FE498(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002FE81C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002FE84C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002FEB74(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002FEBA4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002FED34(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002FED64(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002FEFB4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002FEFE4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1002FF180(uint64_t a1)
{
  id v1;
  void *v2;

  v1 = objc_msgSend(*(id *)(a1 + 32), "i_newStroke");
  v2 = (void *)qword_101415428;
  qword_101415428 = (uint64_t)v1;

}

void sub_1002FF218(uint64_t a1)
{
  id v1;
  void *v2;

  v1 = objc_msgSend(*(id *)(a1 + 32), "i_newEmptyStroke");
  v2 = (void *)qword_101415438;
  qword_101415438 = (uint64_t)v1;

}

void sub_100300D54(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100300D84(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10030106C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10030109C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10030195C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10030198C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100303248(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100303278(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003032A8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003032D8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100303B50(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100303B80(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100303D48(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100303D78(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100303F4C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100303F7C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10030410C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10030413C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003044F8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100304528(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100304C90(id a1)
{
  qword_101415448 = (uint64_t)sub_10040FA64(19, 1.0, 1.0);
  qword_101415440 = (uint64_t)CGBitmapContextGetData((CGContextRef)qword_101415448);
}

void sub_100304CC4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100304CF4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

uint64_t sub_1003051B4(uint64_t a1, uint64_t a2, double a3, double a4)
{
  void *v7;
  const void *v8;
  uint64_t v9;
  _QWORD v11[8];
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;

  v12 = 0;
  v13 = &v12;
  v14 = 0x2020000000;
  v15 = 0;
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "imageInfo"));
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  v11[2] = sub_1003052A4;
  v11[3] = &unk_101250630;
  v11[4] = &v12;
  *(double *)&v11[5] = a3;
  *(double *)&v11[6] = a4;
  v11[7] = a2;
  objc_msgSend(v7, "withTemporaryLayoutPerform:", v11);

  v8 = (const void *)v13[3];
  if (v8)
  {
    CFAutorelease(v8);
    v9 = v13[3];
  }
  else
  {
    v9 = 0;
  }
  _Block_object_dispose(&v12, 8);
  return v9;
}

void sub_10030528C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1003052A4(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  void *v8;
  unsigned int v9;
  void *v10;
  void *v11;

  v3 = a2;
  objc_opt_class(CRLImageLayout, v4);
  v6 = sub_100221D0C(v5, v3);
  v7 = (void *)objc_claimAutoreleasedReturnValue(v6);

  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "maskLayout"));
  if (!v8
    || +[CRLImageRep p_canRenderWithMaskToBoundsWithImageLayout:](CRLImageRep, "p_canRenderWithMaskToBoundsWithImageLayout:", v7))
  {
LABEL_3:

    goto LABEL_4;
  }
  v9 = objc_msgSend(v7, "maskIntersectsImage");

  if (v9)
  {
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = +[CRLImageRep p_newPathToBakeIntoSizedImageForSize:withImageLayout:orientation:](CRLImageRep, "p_newPathToBakeIntoSizedImageForSize:withImageLayout:orientation:", v7, *(_QWORD *)(a1 + 56), *(double *)(a1 + 40), *(double *)(a1 + 48));
    if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
    {
      +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_1012505E8);
      if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
        sub_100E1E7AC();
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101250608);
      v10 = off_1013D9070;
      if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
        sub_100DE7468(v10);
      v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLImageRep processChangedProperty:]_block_invoke"));
      v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLImageRep.m"));
      +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v8, v11, 1196, 0, "invalid nil value for '%{public}s'", "maskPath");

      goto LABEL_3;
    }
  }
LABEL_4:

}

void sub_100305494(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003054C4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100306894(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003068C4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100306E5C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100306E8C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100306EBC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100306EEC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100306F1C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100306F4C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100307FF0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100308020(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100308050(uint64_t a1, void *a2, int a3)
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  id v12;
  NSObject *v13;
  void *v14;
  NSObject *v15;
  void *v16;
  void *v17;
  _QWORD v18[5];
  id v19;
  id v20;
  char v21;
  id location;
  uint8_t buf[4];
  void *v24;
  __int16 v25;
  void *v26;
  __int16 v27;
  int v28;

  v5 = a2;
  v6 = v5;
  if (v5)
  {
    if ((objc_msgSend(v5, "needsDownload") & 1) != 0)
    {
      objc_initWeak(&location, *(id *)(a1 + 32));
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "assetUUID"));
      if (qword_10147E4A8 != -1)
        dispatch_once(&qword_10147E4A8, &stru_1012507F8);
      v8 = off_1013D91A8;
      if (os_log_type_enabled((os_log_t)v8, OS_LOG_TYPE_DEFAULT))
      {
        v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "UUIDString"));
        v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "UUIDString"));
        *(_DWORD *)buf = 138543874;
        v24 = v9;
        v25 = 2112;
        v26 = v10;
        v27 = 1024;
        v28 = a3;
        _os_log_impl((void *)&_mh_execute_header, (os_log_t)v8, OS_LOG_TYPE_DEFAULT, "Image Rep becoming asset observer. observerUUID %{public}@, assetUUID %{pubilc}@, isThumbnail %d", buf, 0x1Cu);

      }
      v11 = *(_QWORD *)(a1 + 40);
      v18[0] = _NSConcreteStackBlock;
      v18[1] = 3221225472;
      v18[2] = sub_100308454;
      v18[3] = &unk_101250840;
      v18[4] = v11;
      v12 = v7;
      v19 = v12;
      v21 = a3;
      objc_copyWeak(&v20, &location);
      objc_msgSend(v6, "addDownloadObserverWithIdentifier:options:handler:", v11, 2, v18);
      objc_msgSend(v6, "downloadIfNeeded");
      objc_destroyWeak(&v20);

      objc_destroyWeak(&location);
    }
    else
    {
      if (qword_10147E4A8 != -1)
        dispatch_once(&qword_10147E4A8, &stru_1012507D8);
      v14 = off_1013D91A8;
      if (os_log_type_enabled((os_log_t)off_1013D91A8, OS_LOG_TYPE_DEFAULT))
      {
        v15 = v14;
        v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "assetUUID"));
        v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "UUIDString"));
        *(_DWORD *)buf = 138543618;
        v24 = v17;
        v25 = 1024;
        LODWORD(v26) = a3;
        _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "Image Rep does not need to download asset %{public}@, isThumbnail %d", buf, 0x12u);

      }
    }
  }
  else
  {
    if (qword_10147E4A8 != -1)
      dispatch_once(&qword_10147E4A8, &stru_1012507B8);
    v13 = off_1013D91A8;
    if (os_log_type_enabled((os_log_t)off_1013D91A8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 67109120;
      LODWORD(v24) = a3;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "Image Rep got a nil image asset, isThumbnail %d", buf, 8u);
    }
  }

}

void sub_100308384(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1003083C4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssetManagementCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D91A8;
  off_1013D91A8 = v2;

}

void sub_1003083F4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssetManagementCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D91A8;
  off_1013D91A8 = v2;

}

void sub_100308424(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssetManagementCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D91A8;
  off_1013D91A8 = v2;

}

void sub_100308454(uint64_t a1)
{
  void *v2;
  void *v3;
  NSObject *v4;
  void *v5;
  void *v6;
  int v7;
  id WeakRetained;
  int v9;
  void *v10;
  __int16 v11;
  void *v12;
  __int16 v13;
  int v14;

  if (qword_10147E4A8 != -1)
    dispatch_once(&qword_10147E4A8, &stru_101250818);
  v2 = off_1013D91A8;
  if (os_log_type_enabled((os_log_t)off_1013D91A8, OS_LOG_TYPE_DEFAULT))
  {
    v3 = *(void **)(a1 + 32);
    v4 = v2;
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "UUIDString"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "UUIDString"));
    v7 = *(unsigned __int8 *)(a1 + 56);
    v9 = 138543874;
    v10 = v5;
    v11 = 2112;
    v12 = v6;
    v13 = 1024;
    v14 = v7;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Image Rep received asset sucessfully. observerUUID %{public}@, assetUUID %@ isThumbnail %d", (uint8_t *)&v9, 0x1Cu);

  }
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  objc_msgSend(WeakRetained, "p_handleAssetPreparationCompletion");

}

void sub_100308590(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssetManagementCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D91A8;
  off_1013D91A8 = v2;

}

void sub_100308718(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssetManagementCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D91A8;
  off_1013D91A8 = v2;

}

void sub_1003090C0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003090F0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100309120(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100309150(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003095F0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100309620(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100309650(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100309680(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10030A230(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10030A260(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10030AAB4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10030AAE4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10030AB14(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10030AB44(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10030AB74(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10030ABA4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10030B324(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  _QWORD v7[6];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "interactiveCanvasController"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "layerHost"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "imageHUDController"));

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "interactiveCanvasController"));
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_10030B3D4;
  v7[3] = &unk_10122D3D8;
  v6 = *(_QWORD *)(a1 + 32);
  v7[4] = v4;
  v7[5] = v6;
  objc_msgSend(v5, "performBlockOnMainThreadAfterLayoutIfNecessary:", v7);

}

id sub_10030B3D4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "hideHUDForRep:", *(_QWORD *)(a1 + 40));
}

void sub_10030BEB0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10030BEE0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10030BF10(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;

  v3 = a2;
  if (!objc_msgSend(*(id *)(a1 + 32), "directlyManagesLayerContent")
    || (v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "shadowRenderable")),
        v4,
        v4)
    || !objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 328), "sizedImage"))
  {
LABEL_3:
    *(_BYTE *)(*(_QWORD *)(a1 + 32) + 465) = 1;
    objc_msgSend(*(id *)(a1 + 40), "invalidateContentLayersForRep:", *(_QWORD *)(a1 + 32));
    goto LABEL_4;
  }
  objc_msgSend(*(id *)(a1 + 32), "p_updateDirectlyManagesLayerContentForRenderable:", v3);
  if (!objc_msgSend(*(id *)(a1 + 32), "directlyManagesLayerContent"))
  {
    if ((objc_msgSend(*(id *)(a1 + 32), "directlyManagesLayerContent") & 1) != 0)
    {
      objc_msgSend(*(id *)(a1 + 32), "updateRenderableGeometryFromLayout:", v3);
      +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101250AE8);
      if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
        sub_100E1EF8C();
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101250B08);
      v5 = off_1013D9070;
      if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
        sub_100DE7468(v5);
      v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLImageRep p_injectSizedImageIntoLayerContentsIfReady]_block_invoke"));
      v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLImageRep.m"));
      +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v6, v7, 2657, 0, "directly manages layer content changed when generated sized image");

    }
    goto LABEL_3;
  }
  +[CATransaction begin](CATransaction, "begin");
  +[CATransaction setDisableActions:](CATransaction, "setDisableActions:", 1);
  objc_msgSend(*(id *)(a1 + 32), "willUpdateRenderable:", v3);
  if ((objc_msgSend(*(id *)(a1 + 32), "directlyManagesLayerContent") & 1) != 0)
  {
    objc_msgSend(*(id *)(a1 + 32), "updateRenderableGeometryFromLayout:", v3);
  }
  else
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101250B28);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E1EF0C();
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101250B48);
    v8 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100DE7468(v8);
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLImageRep p_injectSizedImageIntoLayerContentsIfReady]_block_invoke"));
    v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLImageRep.m"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v9, v10, 2660, 0, "directly manages layer content changed when generated sized image");

  }
  objc_msgSend(*(id *)(a1 + 32), "didUpdateRenderable:", v3);
  +[CATransaction commit](CATransaction, "commit");
LABEL_4:

}

void sub_10030C254(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10030C284(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10030C2B4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10030C2E4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10030CAF4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10030CB24(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10030CB54(uint64_t a1)
{
  void *v2;
  id v3;
  _QWORD v4[4];
  id v5;
  id v6[2];
  char v7;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[CRLInstantAlphaHelper removeBackgroundFromCGImage:](CRLInstantAlphaHelper, "removeBackgroundFromCGImage:", *(_QWORD *)(a1 + 40)));
  CGImageRelease(*(CGImageRef *)(a1 + 40));
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_10030CC20;
  v4[3] = &unk_101250C18;
  objc_copyWeak(v6, (id *)(a1 + 32));
  v6[1] = *(id *)(a1 + 48);
  v5 = v2;
  v7 = *(_BYTE *)(a1 + 56);
  v3 = v2;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v4);

  objc_destroyWeak(v6);
}

void sub_10030CC20(uint64_t a1)
{
  char *WeakRetained;
  char *v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  int *v9;
  int v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;

  WeakRetained = (char *)objc_loadWeakRetained((id *)(a1 + 40));
  v3 = WeakRetained;
  if (WeakRetained && (objc_msgSend(WeakRetained, "hasBeenRemoved") & 1) == 0)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "p_validatedImageProvider"));
    v5 = *(id *)(a1 + 48);
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "imageData"));
    v7 = objc_msgSend(v6, "crl_hash");

    if (v5 == v7)
    {
      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "error"));
      if (objc_msgSend(*(id *)(a1 + 32), "image"))
      {
        os_unfair_lock_lock((os_unfair_lock_t)v3 + 150);
        if (*(_BYTE *)(a1 + 56))
          v9 = &OBJC_IVAR___CRLImageRep__userInitiatedBackgroundRemovalState;
        else
          v9 = &OBJC_IVAR___CRLImageRep__autoBackgroundRemovalState;
        *(_QWORD *)&v3[*v9] = 3;
        objc_storeStrong((id *)v3 + 72, *(id *)(a1 + 32));
        os_unfair_lock_unlock((os_unfair_lock_t)v3 + 150);
        if (*(_BYTE *)(a1 + 56))
          objc_msgSend(v3, "p_calcNewImageGeometryAndReplaceImageWithRemoveImageBackgroundData:dismissMiniFormatter:", *(_QWORD *)(a1 + 32), 1);
      }
      else if (v8)
      {
        v10 = *(unsigned __int8 *)(a1 + 56);
        os_unfair_lock_lock((os_unfair_lock_t)v3 + 150);
        v11 = 2 * (objc_msgSend(v8, "code") != (id)2);
        if (v10)
        {
          *((_QWORD *)v3 + 73) = v11;
          os_unfair_lock_unlock((os_unfair_lock_t)v3 + 150);
          v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "interactiveCanvasController"));
          v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "layerHost"));
          objc_msgSend(v13, "presentError:completionHandler:", v8, 0);

        }
        else
        {
          *((_QWORD *)v3 + 74) = v11;
          os_unfair_lock_unlock((os_unfair_lock_t)v3 + 150);
        }
      }
      else
      {
        +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
        if (qword_10147E370 != -1)
          dispatch_once(&qword_10147E370, &stru_101250BD0);
        if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
          sub_100E1F08C();
        if (qword_10147E370 != -1)
          dispatch_once(&qword_10147E370, &stru_101250BF0);
        v14 = off_1013D9070;
        if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
          sub_100DE7468(v14);
        v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLImageRep p_removeBackgroundFromImageInitiatedByUser:]_block_invoke"));
        v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLImageRep.m"));
        +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v15, v16, 2843, 0, "Didn't receive an image or an error from CRLInstantAlphaHelper.removeBackgroundFromCGImage which should not happen");

        if (*(_BYTE *)(a1 + 56))
          v17 = 584;
        else
          v17 = 592;
        *(_QWORD *)&v3[v17] = 0;
      }

    }
  }

}

void sub_10030CF0C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10030CF3C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10030D1D0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10030D200(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10030D5E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id location)
{
  id *v22;

  objc_destroyWeak(v22);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10030D604(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10030D634(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10030D664(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  __int128 v8;
  _QWORD block[4];
  id v10;
  __int128 v11;
  uint64_t v12;
  id v13;
  __int128 v14;
  __int128 v15;

  v5 = a2;
  v6 = a3;
  if (v6)
  {
    if (qword_10147E368 != -1)
      dispatch_once(&qword_10147E368, &stru_101250CE0);
    v7 = off_1013D9068;
    if (os_log_type_enabled((os_log_t)off_1013D9068, OS_LOG_TYPE_ERROR))
      sub_100E1F308(v7, v6);
  }
  else
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10030D7B8;
    block[3] = &unk_101250D48;
    objc_copyWeak(&v13, (id *)(a1 + 56));
    v10 = v5;
    v11 = *(_OWORD *)(a1 + 32);
    v12 = *(_QWORD *)(a1 + 48);
    v8 = *(_OWORD *)(a1 + 80);
    v14 = *(_OWORD *)(a1 + 64);
    v15 = v8;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

    objc_destroyWeak(&v13);
  }

}

void sub_10030D788(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_10030D7B8(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  void *i;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  _TtC8Freeform38CRLCommandReplaceImageWithImageSubject *v34;
  void *v35;
  void *v36;
  void *v37;
  CRLCanvasInfoGeometry *v38;
  CRLCanvasInfoGeometry *v39;
  void *v40;
  void *v41;
  id v42;
  _TtC8Freeform30CRLCommandSetImageItemGeometry *v43;
  CRLCanvasCommandSelectionBehavior *v44;
  void *v45;
  void *v46;
  void *v47;
  CRLCanvasCommandSelectionBehavior *v48;
  void *v49;
  void *v50;
  id v51;
  id v52;
  uint64_t v53;
  void *j;
  uint64_t v55;
  void *v56;
  void *v57;
  id v58;
  id v59;
  uint64_t v60;
  void *k;
  uint64_t v62;
  void *v63;
  _TtC8Freeform30CRLCommandSetImageItemGeometry *v64;
  void *v65;
  id v66;
  id obj;
  id obja;
  void *v69;
  CRLCanvasInfoGeometry *v70;
  void *v71;
  _TtC8Freeform38CRLCommandReplaceImageWithImageSubject *v72;
  uint64_t v73;
  void *v74;
  id v75;
  id v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  _BYTE v89[128];
  _BYTE v90[128];
  _BYTE v91[128];

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  if (!WeakRetained)
    goto LABEL_54;
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[CRLImageProviderPool sharedPool](CRLImageProviderPool, "sharedPool"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "providerForAsset:shouldValidate:", *(_QWORD *)(a1 + 32), 1));

  if (!v4 || (objc_msgSend(v4, "isError") & 1) != 0)
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101250D00);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E1F3F4();
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101250D20);
    v5 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100DE7468(v5);
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLImageRep p_replaceImageDataWithRemoveImageBackgroundData:rect:]_block_invoke"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLImageRep.m"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v6, v7, 2973, 0, "image provider for current image is invalid");
    goto LABEL_53;
  }
  v65 = v4;
  v66 = WeakRetained;
  v76 = objc_alloc_init((Class)NSMapTable);
  v75 = objc_alloc_init((Class)NSMapTable);
  v85 = 0u;
  v86 = 0u;
  v87 = 0u;
  v88 = 0u;
  obj = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "connectedLayouts"));
  v8 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v85, v91, 16);
  if (!v8)
    goto LABEL_38;
  v9 = v8;
  v73 = *(_QWORD *)v86;
  do
  {
    for (i = 0; i != v9; i = (char *)i + 1)
    {
      if (*(_QWORD *)v86 != v73)
        objc_enumerationMutation(obj);
      v11 = *(void **)(*((_QWORD *)&v85 + 1) + 8 * (_QWORD)i);
      v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "connectionLineInfo"));
      v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "connectionLinePathSource"));

      v14 = objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "headMagnet"));
      if (v14)
      {
        v15 = (void *)v14;
        v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "headMagnet"));
        v17 = objc_msgSend(v16, "magnetType");
        if (v17 != (id)7)
        {
          v69 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "headMagnet"));
          if (objc_msgSend(v69, "magnetType") != (id)6)
          {
            v21 = v69;
            goto LABEL_26;
          }
        }
        v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "connectedTo"));
        v19 = *(void **)(a1 + 40);

        if (v17 != (id)7)
        if (v18 == v19)
        {
          v20 = *(void **)(a1 + 48);
          v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "headMagnet"));
          v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "connectedTo"));
          v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "p_getMagnetUnscaledPositionValueForMagnet:withConnectedItem:", v15, v16));
          objc_msgSend(v76, "setObject:forKey:", v21, v11);
LABEL_26:

        }
      }
      v22 = objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "tailMagnet"));
      if (!v22)
        goto LABEL_36;
      v23 = (void *)v22;
      v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "tailMagnet"));
      v25 = objc_msgSend(v24, "magnetType");
      if (v25 != (id)7)
      {
        v71 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "tailMagnet"));
        if (objc_msgSend(v71, "magnetType") != (id)6)
        {
          v29 = v71;
          goto LABEL_35;
        }
      }
      v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "connectedFrom"));
      v27 = *(void **)(a1 + 40);

      if (v25 != (id)7)
      if (v26 == v27)
      {
        v28 = *(void **)(a1 + 48);
        v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "tailMagnet"));
        v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "connectedFrom"));
        v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v28, "p_getMagnetUnscaledPositionValueForMagnet:withConnectedItem:", v23, v24));
        objc_msgSend(v75, "setObject:forKey:", v29, v11);
LABEL_35:

      }
LABEL_36:

    }
    v9 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v85, v91, 16);
  }
  while (v9);
LABEL_38:

  v30 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "interactiveCanvasController"));
  v31 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v30, "commandController"));
  objc_msgSend(v31, "openGroup");
  v32 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v33 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v32, "localizedStringForKey:value:table:", CFSTR("Remove Background"), 0, CFSTR("UndoStrings")));
  objc_msgSend(v31, "setCurrentGroupActionString:", v33);

  objc_msgSend(v31, "enableProgressiveEnqueuingInCurrentGroup");
  objc_msgSend(v31, "openGroup");
  v34 = -[CRLCommandReplaceImageWithImageSubject initWithImageItem:imageData:isBackgroundRemoved:thumbnailData:]([_TtC8Freeform38CRLCommandReplaceImageWithImageSubject alloc], "initWithImageItem:imageData:isBackgroundRemoved:thumbnailData:", *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 32), 1, 0);
  v35 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "boardItem"));
  v36 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v35, "geometry"));
  v37 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v36, "geometryWithNewBounds:", *(double *)(a1 + 72), *(double *)(a1 + 80), *(double *)(a1 + 88), *(double *)(a1 + 96)));

  v38 = [CRLCanvasInfoGeometry alloc];
  objc_msgSend(v37, "size");
  v39 = -[CRLCanvasInfoGeometry initWithSize:](v38, "initWithSize:");
  v40 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "maskInfo"));
  v41 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v40, "pathSource"));
  v42 = objc_msgSend(v41, "copy");

  objc_msgSend(v37, "size");
  objc_msgSend(v42, "scaleToNaturalSize:");
  obja = v42;
  v70 = v39;
  v43 = -[CRLCommandSetImageItemGeometry initWithImageItem:imageGeometry:maskGeometry:maskPathSource:]([_TtC8Freeform30CRLCommandSetImageItemGeometry alloc], "initWithImageItem:imageGeometry:maskGeometry:maskPathSource:", *(_QWORD *)(a1 + 56), v37, v39, v42);
  v44 = [CRLCanvasCommandSelectionBehavior alloc];
  v45 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v30, "canvasEditor"));
  v74 = v30;
  v46 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v30, "editorController"));
  v47 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v46, "selectionPath"));
  v48 = -[CRLCanvasCommandSelectionBehavior initWithCanvasEditor:type:selectionPath:selectionFlags:](v44, "initWithCanvasEditor:type:selectionPath:selectionFlags:", v45, 2, v47, 4);

  v72 = v34;
  objc_msgSend(v31, "enqueueCommand:withSelectionBehavior:", v34, v48);
  v64 = v43;
  objc_msgSend(v31, "enqueueCommand:withSelectionBehavior:", v43, v48);
  objc_msgSend(v31, "closeGroup");
  v49 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "interactiveCanvasController"));
  objc_msgSend(v49, "layoutIfNeeded");

  v83 = 0u;
  v84 = 0u;
  v81 = 0u;
  v82 = 0u;
  v50 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v76, "keyEnumerator"));
  v51 = objc_msgSend(v50, "countByEnumeratingWithState:objects:count:", &v81, v90, 16);
  if (v51)
  {
    v52 = v51;
    v53 = *(_QWORD *)v82;
    do
    {
      for (j = 0; j != v52; j = (char *)j + 1)
      {
        if (*(_QWORD *)v82 != v53)
          objc_enumerationMutation(v50);
        v55 = *(_QWORD *)(*((_QWORD *)&v81 + 1) + 8 * (_QWORD)j);
        v56 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v76, "objectForKey:", v55));
        objc_msgSend(*(id *)(a1 + 48), "p_enqueueCommandsToUpdateMagnetsForLineEnd:withClineLayout:withUnscaledPosition:", 11, v55, v56);

      }
      v52 = objc_msgSend(v50, "countByEnumeratingWithState:objects:count:", &v81, v90, 16);
    }
    while (v52);
  }

  v79 = 0u;
  v80 = 0u;
  v77 = 0u;
  v78 = 0u;
  v7 = v75;
  v57 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v75, "keyEnumerator"));
  v58 = objc_msgSend(v57, "countByEnumeratingWithState:objects:count:", &v77, v89, 16);
  if (v58)
  {
    v59 = v58;
    v60 = *(_QWORD *)v78;
    do
    {
      for (k = 0; k != v59; k = (char *)k + 1)
      {
        if (*(_QWORD *)v78 != v60)
          objc_enumerationMutation(v57);
        v62 = *(_QWORD *)(*((_QWORD *)&v77 + 1) + 8 * (_QWORD)k);
        v63 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "objectForKey:", v62));
        objc_msgSend(*(id *)(a1 + 48), "p_enqueueCommandsToUpdateMagnetsForLineEnd:withClineLayout:withUnscaledPosition:", 10, v62, v63);

        v7 = v75;
      }
      v59 = objc_msgSend(v57, "countByEnumeratingWithState:objects:count:", &v77, v89, 16);
    }
    while (v59);
  }

  objc_msgSend(v31, "closeGroup");
  v4 = v65;
  WeakRetained = v66;
  v6 = v76;
LABEL_53:

LABEL_54:
}

void sub_10030E004(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10030E034(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10030E63C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10030E66C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10030E894(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10030E8C4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10030F830(id a1)
{
  off_1013D9070 = sub_1003C0E38("CRLAssertCat");
}

void sub_10030F858(id a1)
{
  off_1013D9070 = sub_1003C0E38("CRLAssertCat");
}

void sub_10030F9DC(id a1)
{
  off_1013D9070 = sub_1003C0E38("CRLAssertCat");
}

void sub_10030FA04(id a1)
{
  off_1013D9070 = sub_1003C0E38("CRLAssertCat");
}

void sub_10030FB38(id a1)
{
  off_1013D9070 = sub_1003C0E38("CRLAssertCat");
}

void sub_10030FB60(id a1)
{
  off_1013D9070 = sub_1003C0E38("CRLAssertCat");
}

void sub_10030FC8C(id a1)
{
  off_1013D9070 = sub_1003C0E38("CRLAssertCat");
}

void sub_10030FCB4(id a1)
{
  off_1013D9070 = sub_1003C0E38("CRLAssertCat");
}

void sub_100310254(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100310284(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003113CC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003113FC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10031142C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10031145C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10031148C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003114BC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10031175C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10031178C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100311ABC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100311AEC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100311DE4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100311E14(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100312050(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100312080(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003122D4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100312304(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

BOOL sub_100312408(id a1, _TtC8Freeform12CRLBoardItem *a2, BOOL *a3)
{
  return !-[CRLBoardItem locked](a2, "locked", a3);
}

float64x2_t sub_100313330(float64x2_t *a1, uint64_t a2)
{
  uint64_t v2;
  double *v3;
  float64x2_t result;

  v2 = 0;
  v3 = (double *)&qword_100EEF328;
  do
  {
    result = a1[2];
    *(float64x2_t *)(a2 + v2) = vmlaq_n_f64(vmlaq_n_f64(vmlaq_n_f64(vmulq_n_f64(a1[1], *(v3 - 4)), *a1, *(v3 - 8)), result, *v3), a1[3], v3[4]);
    v2 += 16;
    ++v3;
  }
  while (v2 != 64);
  return result;
}

float64x2_t sub_10031337C(float64x2_t *a1, uint64_t a2)
{
  uint64_t v2;
  double *v3;
  float64x2_t result;

  v2 = 0;
  v3 = (double *)&qword_100EEF3A8;
  do
  {
    result = a1[2];
    *(float64x2_t *)(a2 + v2) = vmlaq_n_f64(vmlaq_n_f64(vmlaq_n_f64(vmulq_n_f64(a1[1], *(v3 - 4)), *a1, *(v3 - 8)), result, *v3), a1[3], v3[4]);
    v2 += 16;
    ++v3;
  }
  while (v2 != 64);
  return result;
}

double sub_1003133C8(float64x2_t *a1, double a2)
{
  double result;

  *(_QWORD *)&result = *(_OWORD *)&vmlaq_n_f64(vmlaq_n_f64(vmulq_n_f64(vmulq_n_f64(vaddq_f64(a1[1], a1[1]), a2), 1.0 - a2), vmulq_n_f64(*a1, 1.0 - a2), 1.0 - a2), vmulq_n_f64(a1[2], a2), a2);
  return result;
}

void sub_100313400(float64x2_t *a1, uint64_t a2, double a3, double a4)
{
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v8 = 1.0 - a3;
  *(double *)a2 = sub_100315F90(a1, 1.0 - a3, a3, 1.0 - a3, a3, 1.0 - a3, a3);
  *(_QWORD *)(a2 + 8) = v9;
  *(double *)(a2 + 16) = sub_100315F90(a1, v8, a3, v8, a3, 1.0 - a4, a4);
  *(_QWORD *)(a2 + 24) = v10;
  *(double *)(a2 + 32) = sub_100315F90(a1, v8, a3, 1.0 - a4, a4, 1.0 - a4, a4);
  *(_QWORD *)(a2 + 40) = v11;
  *(double *)(a2 + 48) = sub_100315F90(a1, 1.0 - a4, a4, 1.0 - a4, a4, 1.0 - a4, a4);
  *(_QWORD *)(a2 + 56) = v12;
}

uint64_t sub_1003134D0(double *a1, double *a2, double *a3, double *a4, double *a5)
{
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  BOOL v12;
  BOOL v13;
  double v14;
  BOOL v15;
  BOOL v16;
  double v17;

  v5 = a1[1];
  v6 = a1[2] - *a1;
  v7 = a1[3] - v5;
  v8 = a2[1];
  v9 = a2[2] - *a2;
  v10 = a2[3] - v8;
  v11 = (v7 * (*a2 - *a1) + (v5 - v8) * v6) / (v10 * v6 - v9 * v7);
  *a4 = v11;
  if (v11 >= 0.0)
  {
    v13 = v11 == 1.0;
    v12 = v11 >= 1.0;
  }
  else
  {
    v12 = 1;
    v13 = 0;
  }
  if (!v13 && v12)
    return 0;
  v14 = (v10 * (*a1 - *a2) + (a2[1] - a1[1]) * v9) / (v7 * v9 - v6 * v10);
  *a3 = v14;
  if (v14 >= 0.0)
  {
    v16 = v14 == 1.0;
    v15 = v14 >= 1.0;
  }
  else
  {
    v15 = 1;
    v16 = 0;
  }
  if (!v16 && v15)
    return 0;
  v17 = a1[1];
  *a5 = *a1 + v14 * v6;
  a5[1] = v17 + *a3 * v7;
  return 1;
}

double sub_10031357C(double *a1, double a2, double a3)
{
  double v3;
  double v4;
  double v5;
  double v6;
  float v7;
  double v8;

  v4 = a1[2];
  v3 = a1[3];
  v5 = v3 - a1[1];
  v6 = v4 - *a1;
  v7 = v6 * v6 + v5 * v5;
  v8 = (float)(1.0 / sqrtf(v7));
  return a3 * -(v6 * v8) + v5 * v8 * a2 - (v3 * -(v6 * v8) + v5 * v8 * v4);
}

double sub_1003135C8(double *a1, double a2, double a3)
{
  double v3;
  double v4;
  double v5;
  double v6;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;

  v3 = *a1;
  v4 = a1[1];
  v5 = a1[2];
  v6 = a1[3];
  if (*a1 == v5 && v4 == v6)
    return 0.0;
  v8 = sub_1000603B8(a2, a3, *a1);
  v10 = v9;
  v11 = sub_1000603B8(v5, v6, v3);
  v13 = sub_1000603C4(v8, v10, v11, v12);
  v14 = v13 / sub_10006010C(v5, v6, v3, v4);
  return sub_1003C65EC(v14, 0.0, 1.0);
}

double sub_10031367C(float64x2_t *a1, double a2, double a3, double a4)
{
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v24;

  v24 = a4 * a4;
  v6 = 1.0;
  v7 = 0.0;
  do
  {
    v8 = (v6 - v7) * 0.125;
    v9 = 0.0;
    if (v7 <= v6)
    {
      v10 = 3.40282347e38;
      v11 = v7;
      do
      {
        v12 = sub_1000602A8(a1, v11);
        v14 = sub_1000603B8(v12, v13, a2);
        v16 = sub_100061080(v14, v15);
        if (v16 < v10)
        {
          v10 = v16;
          v9 = v11;
        }
        v11 = v8 + v11;
      }
      while (v11 <= v6);
    }
    v17 = sub_1000602A8(a1, v7);
    v19 = v18;
    v20 = sub_1000602A8(a1, v6);
    v21 = sub_1000603B8(v17, v19, v20);
    v7 = fmax(v9 - v8, 0.0);
    v6 = fmin(v8 + v9, 1.0);
  }
  while (sub_100061080(v21, v22) >= v24);
  return v9;
}

double sub_100313798(float64x2_t *a1, double *a2, uint64_t a3)
{
  double v5;
  double v6;
  double v7;
  double v8;
  float v9;
  double v10;
  double v11;
  double v12;
  double v13;
  float64_t v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  BOOL v31;
  BOOL v32;
  BOOL v33;
  uint64_t v34;
  float64x2_t v36;
  uint64_t v37;
  double v38;
  uint64_t v39;
  double v40;
  uint64_t v41;
  double v42;

  v6 = a2[2];
  v5 = a2[3];
  v7 = v5 - a2[1];
  v8 = v6 - *a2;
  v9 = v8 * v8 + v7 * v7;
  v10 = (float)(1.0 / sqrtf(v9));
  v11 = v7 * v10;
  v12 = -(v8 * v10);
  v13 = v5 * v12 + v11 * v6;
  v14 = a1->f64[1] * v12 + v11 * a1->f64[0] - v13;
  v36.f64[0] = 0.0;
  v36.f64[1] = v14;
  v15 = a1[1].f64[1] * v12 + v11 * a1[1].f64[0] - v13;
  v37 = 0x3FD5555555555555;
  v38 = v15;
  v16 = a1[2].f64[1] * v12 + v11 * a1[2].f64[0] - v13;
  v39 = 0x3FE5555555555555;
  v40 = v16;
  v17 = v12 * a1[3].f64[1] + v11 * a1[3].f64[0] - v13;
  v41 = 0x3FF0000000000000;
  v42 = v17;
  v18 = v15 * 9.0 + v14 * -3.0 + v16 * -9.0 + v17 * 3.0;
  v19 = v15 * -12.0 + v14 * 6.0 + v16 * 6.0;
  v20 = sqrt((v15 * 3.0 + v14 * -3.0) * (v18 * -4.0) + v19 * v19);
  v21 = v18 + v18;
  v22 = (-v19 - v20) / v21;
  v23 = sub_1000602A8(&v36, (v20 - v19) / v21);
  v25 = v24;
  v26 = sub_1000602A8(&v36, v22);
  v27 = fabs(v25);
  v29 = fabs(v28);
  v31 = v26 > 1.0 || v26 < 0.0 || v27 < v29;
  if (!v31 || (v23 >= 0.0 ? (v32 = v23 > 1.0) : (v32 = 1), v32))
  {
    v33 = v26 < 0.0 || v26 > 1.0;
    v23 = v26;
    v27 = v29;
    if (v33)
      return 3.40282347e38;
  }
  *(double *)a3 = sub_1000602A8(a1, v23);
  *(_QWORD *)(a3 + 8) = v34;
  return v27;
}

uint64_t sub_100313990(const CGPath *a1)
{
  uint64_t info;

  info = 0;
  CGPathApply(a1, &info, (CGPathApplierFunction)sub_1003139C0);
  return info;
}

_QWORD *sub_1003139C0(_QWORD *result)
{
  ++*result;
  return result;
}

uint64_t sub_1003139D0(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  if (*(_QWORD *)result == v2)
  {
    *(_DWORD *)(result + 16) = *(_DWORD *)a2;
    *(_OWORD *)(result + 72) = *(_OWORD *)(*(_QWORD *)(a2 + 8) + 48);
    *(_OWORD *)(result + 56) = *(_OWORD *)(*(_QWORD *)(a2 + 8) + 32);
    *(_OWORD *)(result + 40) = *(_OWORD *)(*(_QWORD *)(a2 + 8) + 16);
    *(_OWORD *)(result + 24) = *(_OWORD *)*(_QWORD *)(a2 + 8);
  }
  *(_QWORD *)(result + 8) = v2 + 1;
  return result;
}

uint64_t sub_100313A20(const CGPath *a1, uint64_t a2, _OWORD *a3)
{
  uint64_t result;
  __int128 v5;
  uint64_t info;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  v7 = 0u;
  info = a2;
  CGPathApply(a1, &info, (CGPathApplierFunction)sub_1003139D0);
  if (!a3)
    return DWORD2(v7);
  *a3 = v8;
  result = DWORD2(v7);
  if (DWORD2(v7) == 3)
  {
    v5 = v10;
    a3[1] = v9;
    a3[2] = v5;
  }
  return result;
}

void sub_100313F90(double *a1, double *a2, uint64_t a3, uint64_t a4, int a5, void *a6)
{
  id v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  float v22;
  double v23;
  double v24;
  double v25;
  double v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v44;
  double v45;
  double v46;
  double v47;
  CRLPathIntersection *v48;
  uint64_t v49;
  double v50;
  uint64_t v51;
  double v52;
  CRLPathIntersection *v53;
  double v54;
  double v55;
  double v56;
  double v57;
  double v58;
  float64x2_t v59;
  uint64_t v60;
  double v61;
  uint64_t v62;
  double v63;
  uint64_t v64;
  double v65;

  v11 = a6;
  v12 = *a1;
  v13 = a1[2];
  v14 = a1[4];
  v15 = a1[5];
  v16 = a1[6];
  v17 = a1[7];
  v19 = a2[2];
  v18 = a2[3];
  v20 = v18 - a2[1];
  v21 = v19 - *a2;
  v22 = v21 * v21 + v20 * v20;
  v23 = (float)(1.0 / sqrtf(v22));
  v24 = v20 * v23;
  v25 = -(v21 * v23);
  v26 = v18 * v25 + v24 * v19;
  v57 = a1[3];
  v58 = a1[1];
  v59.f64[0] = 0.0;
  v59.f64[1] = v58 * v25 + v24 * v12 - v26;
  v60 = 0x3FD5555555555555;
  v61 = v57 * v25 + v24 * v13 - v26;
  v55 = v17;
  v56 = v15;
  v62 = 0x3FE5555555555555;
  v63 = v15 * v25 + v24 * v14 - v26;
  v64 = 0x3FF0000000000000;
  v65 = v17 * v25 + v24 * v16 - v26;
  v27 = objc_alloc_init((Class)NSMutableArray);
  sub_100318404(&v59, (uint64_t)&v59, v27, 1.0);
  v28 = (uint64_t)objc_msgSend(v27, "count");
  if (v28 >= 1)
  {
    v29 = v28;
    v30 = 0;
    v54 = v14;
    do
    {
      v31 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v27, "objectAtIndex:", v30));
      objc_msgSend(v31, "doubleValue");
      v33 = v32;

      v35 = v33 * (v33 * (v16 * v33 + (1.0 - v33) * v14) + (1.0 - v33) * (v14 * v33 + (1.0 - v33) * v13))
          + (1.0 - v33) * (v33 * (v14 * v33 + (1.0 - v33) * v13) + (1.0 - v33) * (v13 * v33 + (1.0 - v33) * v12));
      v36 = a2[2] - *a2;
      v37 = v35 - *a2;
      if (v36 * v37 > -0.001)
      {
        v34 = 1.0 - v33;
        v38 = v33 * (v33 * (v55 * v33 + v34 * v56) + v34 * (v56 * v33 + v34 * v57))
            + v34 * (v33 * (v56 * v33 + v34 * v57) + v34 * (v57 * v33 + v34 * v58));
        v39 = a2[1];
        v40 = a2[3] - v39;
        v41 = v40 * v40 + v36 * v36;
        v42 = (v38 - v39) * (v38 - v39) + v37 * v37;
        if (v40 * (v38 - v39) > -0.001 && v42 <= v41)
        {
          if (!v11)
            break;
          v44 = v13;
          v45 = v16;
          v46 = v12;
          v47 = sqrt(v42) / sqrt(v41);
          v48 = [CRLPathIntersection alloc];
          if (a5)
          {
            v49 = a4;
            v50 = v47;
            v51 = a3;
            v52 = v33;
          }
          else
          {
            v49 = a3;
            v50 = v33;
            v51 = a4;
            v52 = v47;
          }
          v53 = -[CRLPathIntersection initWithSegment:atT:onSegmentB:atT:atPoint:](v48, "initWithSegment:atT:onSegmentB:atT:atPoint:", v49, v51, v50, v52, v35, v38);
          objc_msgSend(v11, "addObject:", v53);

          v12 = v46;
          v16 = v45;
          v13 = v44;
          v14 = v54;
        }
      }
      ++v30;
    }
    while (v29 != v30);
  }

}

void sub_1003142AC(double *a1, double *a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v8;
  CRLPathIntersection *v9;
  CRLPathIntersection *v10;
  CGPoint v11;
  double v12;
  double v13;

  v12 = 0.0;
  v13 = 0.0;
  v11 = CGPointZero;
  if (sub_1003134D0(a1, a2, &v13, &v12, &v11.x))
  {
    v8 = a5;
    v9 = [CRLPathIntersection alloc];
    v10 = -[CRLPathIntersection initWithSegment:atT:onSegmentB:atT:atPoint:](v9, "initWithSegment:atT:onSegmentB:atT:atPoint:", a3, a4, v13, v12, v11);
    objc_msgSend(v8, "addObject:", v10);

  }
}

double sub_100314CCC(float64x2_t *a1, double *a2, uint64_t a3)
{
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  BOOL v37;
  BOOL v38;
  double v39;
  BOOL v40;
  uint64_t v41;
  float64x2_t v43;
  uint64_t v44;
  double v45;
  uint64_t v46;
  double v47;
  uint64_t v48;
  double v49;

  v5 = *a2;
  v6 = sub_1000603B8(a2[2], a2[3], *a2);
  v8 = sub_100060398(v6, v7);
  v10 = v9;
  v11 = sub_1000603B8(a1->f64[0], a1->f64[1], v5);
  v13 = sub_100060398(v11, v12);
  v43.f64[0] = 0.0;
  v43.f64[1] = sub_1000603C4(v8, v10, v13, v14);
  v15 = sub_1000603B8(a1[1].f64[0], a1[1].f64[1], v5);
  v17 = sub_100060398(v15, v16);
  v44 = 0x3FD5555555555555;
  v45 = sub_1000603C4(v8, v10, v17, v18);
  v19 = sub_1000603B8(a1[2].f64[0], a1[2].f64[1], v5);
  v21 = sub_100060398(v19, v20);
  v46 = 0x3FE5555555555555;
  v47 = sub_1000603C4(v8, v10, v21, v22);
  v23 = sub_1000603B8(a1[3].f64[0], a1[3].f64[1], v5);
  v25 = sub_100060398(v23, v24);
  v48 = 0x3FF0000000000000;
  v49 = sub_1000603C4(v8, v10, v25, v26);
  v27 = v45 * 9.0 + v43.f64[1] * -3.0 + v47 * -9.0 + v49 * 3.0;
  v28 = v45 * -12.0 + v43.f64[1] * 6.0 + v47 * 6.0;
  v29 = sqrt((v45 * 3.0 + v43.f64[1] * -3.0) * (v27 * -4.0) + v28 * v28);
  v30 = (-v28 - v29) / (v27 + v27);
  v31 = sub_1000602A8(&v43, (v29 - v28) / (v27 + v27));
  v33 = v32;
  v34 = sub_1000602A8(&v43, v30);
  v37 = v34 <= 1.0 && v34 >= 0.0 && v33 <= v35;
  if (!v37 && (v31 >= 0.0 ? (v38 = v31 > 1.0) : (v38 = 1), !v38)
    || ((v39 = -2.0, v34 >= 0.0) ? (v40 = v34 > 1.0) : (v40 = 1), v31 = v34, v33 = v35, !v40))
  {
    *(double *)a3 = sub_1000602A8(a1, v31);
    *(_QWORD *)(a3 + 8) = v41;
    return fabs(v33);
  }
  return v39;
}

void sub_10031529C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003152CC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003152FC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10031532C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10031567C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003156AC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100315B28(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100315B58(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100315F30(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100315F60(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

double sub_100315F90(float64x2_t *a1, double a2, double a3, double a4, double a5, double a6, double a7)
{
  float64x2_t v7;
  float64x2_t v8;
  float64x2_t v9;
  double result;

  v7 = a1[1];
  v8 = a1[2];
  v9 = vmlaq_n_f64(vmulq_n_f64(v8, a7), v7, a6);
  *(_QWORD *)&result = *(_OWORD *)&vmlaq_n_f64(vmulq_n_f64(vmlaq_n_f64(vmulq_n_f64(vmlaq_n_f64(vmulq_n_f64(a1[3], a7), v8, a6), a5), v9, a4), a3), vmlaq_n_f64(vmulq_n_f64(v9, a5), vmlaq_n_f64(vmulq_n_f64(v7, a7), *a1, a6), a4), a2);
  return result;
}

void sub_100315FD4(float64x2_t *a1, void *a2, uint64_t a3, uint64_t a4, void *a5, int a6, uint64_t a7)
{
  id v13;
  id v14;
  float64_t v15;
  float64_t v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  float64_t v36;
  double v37;
  double v38;
  double v39;
  double v40;
  float64_t v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  double v58;
  double v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  double v65;
  double v66;
  uint64_t v67;
  float64x2_t v68;
  double v69;
  double v70;
  double v71;
  double v72;
  double v73;
  double v74;
  double v75;
  double v76;
  double v77;
  double v78;
  uint64_t v79;
  double v80;
  _BYTE v81[64];
  _BYTE v82[64];
  float64x2_t v83;
  double v84;
  double v85;
  double v86;
  double v87;
  double v88;
  double v89;

  v13 = a2;
  v14 = a5;
  v79 = 0;
  v80 = 0.0;
  objc_msgSend(v13, "transformedTotalCoordinate:betweenElement:andElement:getElement:getPercentage:", a3, a4, &v79, &v80, a1->f64[0], a1->f64[1]);
  v75 = v15;
  v77 = v16;
  v83.f64[0] = v15;
  v83.f64[1] = v16;
  objc_msgSend(v13, "curvatureAt:fromElement:", v79, v80);
  v18 = v17;
  objc_msgSend(v13, "myGradientAt:fromElement:", v79, v80);
  v20 = v19;
  v22 = v21;
  objc_msgSend(v13, "transformedTotalCoordinate:betweenElement:andElement:getElement:getPercentage:", a3, a4, &v79, &v80, a1[3].f64[0], a1[3].f64[1]);
  v78 = v23;
  v76 = v24;
  v88 = v23;
  v89 = v24;
  objc_msgSend(v13, "curvatureAt:fromElement:", v79, v80);
  v26 = v25;
  objc_msgSend(v13, "myGradientAt:fromElement:", v79, v80);
  v73 = v28;
  v74 = v27;
  v29 = 0.5;
  if (v18 <= 0.5)
    v30 = v18;
  else
    v30 = 0.5;
  if (v30 >= -0.5)
    v31 = v30;
  else
    v31 = -0.5;
  if (v26 <= 0.5)
    v29 = v26;
  if (v29 < -0.5)
    v29 = -0.5;
  objc_msgSend(v13, "lineWidth", *(_QWORD *)&v29);
  v33 = v32 * a1->f64[1];
  v34 = v32 * a1[2].f64[1];
  v35 = v32 * a1[3].f64[1];
  v36 = a1[1].f64[0] - a1->f64[0];
  v37 = v32 * a1[1].f64[1] - v33;
  v38 = sub_1000603DC(v20, v22, 1.0 - v33 * v31);
  v39 = v37 * sub_100060398(-v22, v20) + v36 * v38;
  v84 = sub_1000603D0(v75, v77, v39);
  v85 = v40;
  v41 = a1[2].f64[0] - a1[3].f64[0];
  v42 = sub_1000603DC(v74, v73, 1.0 - v35 * v72);
  v43 = (v34 - v35) * sub_100060398(-v73, v74) + v41 * v42;
  v86 = sub_1000603D0(v78, v76, v43);
  v87 = v44;
  if (a6)
  {
    if (a6 > 19)
      goto LABEL_16;
    v45 = sub_1000603B8(v78, v76, v75);
    if (sub_100061080(v45, v46) <= 0.5)
      goto LABEL_16;
  }
  v47 = sub_1000602A8(&v83, 0.33);
  v49 = v48;
  objc_msgSend(v13, "transformedTotalCoordinate:betweenElement:andElement:getElement:getPercentage:", a3, a4, &v79, &v80, sub_1000602A8(a1, 0.33));
  v51 = sub_1000603B8(v47, v49, v50);
  v53 = sub_100061080(v51, v52) + 0.0;
  v54 = sub_1000602A8(&v83, 0.5);
  v56 = v55;
  objc_msgSend(v13, "transformedTotalCoordinate:betweenElement:andElement:getElement:getPercentage:", a3, a4, &v79, &v80, sub_1000602A8(a1, 0.5));
  v58 = sub_1000603B8(v54, v56, v57);
  v60 = v53 + sub_100061080(v58, v59);
  v61 = sub_1000602A8(&v83, 0.66);
  v63 = v62;
  objc_msgSend(v13, "transformedTotalCoordinate:betweenElement:andElement:getElement:getPercentage:", a3, a4, &v79, &v80, sub_1000602A8(a1, 0.66));
  v65 = sub_1000603B8(v61, v63, v64);
  if (v60 + sub_100061080(v65, v66) <= 0.2)
  {
LABEL_16:
    if ((_DWORD)a7)
    {
      objc_msgSend(v14, "moveToPoint:", *(_OWORD *)&v83);
    }
    else
    {
      objc_msgSend(v14, "currentPoint");
      v68 = v83;
      v70 = sub_1000603B8(v83.f64[0], v83.f64[1], v69);
      if (sub_100061080(v70, v71) > 1.0)
        objc_msgSend(v14, "lineToPoint:", *(_OWORD *)&v68);
    }
    objc_msgSend(v14, "curveToPoint:controlPoint1:controlPoint2:", v88, v89, v84, v85, v86, v87);
  }
  else
  {
    sub_100313400(a1, (uint64_t)v82, 0.0, 0.5);
    sub_100313400(a1, (uint64_t)v81, 0.5, 1.0);
    v67 = (a6 + 1);
    sub_100315FD4(v82, v13, a3, a4, v14, v67, a7);
    sub_100315FD4(v81, v13, a3, a4, v14, v67, 0);
  }

}

void sub_10031646C(float64x2_t *a1, void *a2, void *a3, uint64_t a4, void *a5)
{
  id v9;
  id v10;
  id v11;
  char *v12;
  char *v13;
  char *v14;
  id v15;
  uint64_t v16;
  char *v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  uint64_t v23;
  void *v24;
  double v25;
  double v26;
  double v28;
  uint64_t v29;
  char *v30;
  void *v36;
  float64x2_t v37;
  float64x2_t v38;
  float64x2_t v39;
  double v40;
  float64x2_t v41;
  float64x2_t v42;
  float64x2_t v43;
  float64x2_t v44;
  float64x2_t v45;
  float64x2_t v46;
  double v47;
  double v48;
  char *v49;
  char *v50;
  char *v51;
  void *v52;
  void *v53;
  uint64_t v54;
  double v55;
  double v56;
  double v57;
  double v58;
  double v59;
  double v60;
  double v61;
  double v62;
  uint64_t v63;
  float64x2_t v64;
  float64x2_t v65;
  float64x2_t v66;
  float64x2_t v67;
  double v68;
  double v69;
  double *v70;
  float64x2_t v71;
  float64x2_t v72;
  void *v73;
  void *v74;
  uint64_t v75;
  double v76;
  double v77;
  double v78;
  double v79;
  double v80;
  double v81;
  double v82;
  double v83;
  uint64_t v84;
  float64x2_t v85;
  float64x2_t v86;
  float64x2_t v87;
  float64x2_t v88;
  float64x2_t v89;
  double v92;
  double v93;
  double *f64;
  float64x2_t v95;
  float64x2_t v96;
  CRLPathIntersection *v97;
  char *v98;
  float64x2_t v99;
  int8x16_t v100;
  float64x2_t v101;
  char *v102;
  id v103;
  void *v104;
  float64x2_t v105;
  uint64_t v106;
  char *v107;
  double v108;
  id v109;
  uint64_t v110;
  float64x2_t v111;
  float64x2_t v112;
  float64x2_t v113;
  float64x2_t v114;
  float64x2x2_t v115;
  float64x2x2_t v116;

  v9 = a2;
  v10 = a3;
  v11 = a5;
  v12 = (char *)objc_msgSend(v11, "count");
  v13 = v12 - 1;
  if ((unint64_t)(v12 - 1) < 2)
  {
    v15 = 0;
    v16 = 0;
    goto LABEL_23;
  }
  v14 = v12;
  v107 = v12 - 1;
  v103 = v10;
  v109 = v9;
  v15 = 0;
  v16 = 0;
  v17 = 0;
  v18 = a1[1].f64[0];
  v19 = a1[2].f64[0];
  v20 = a1[3].f64[0];
  v21 = fmin(a1->f64[0], fmin(v18, fmin(v19, v20)));
  v22 = fmax(a1->f64[0], fmax(v18, fmax(v19, v20)));
  v23 = 2;
  do
  {
    v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "objectAtIndex:", v23 - 1));
    objc_msgSend(v24, "t");
    v26 = v25;
    if (v25 > v21 && v25 < v22)
    {
      if (!v15)
        v15 = objc_alloc_init((Class)NSMutableArray);
      v111.f64[0] = v26;
      v111.f64[1] = -100.0;
      v112.f64[0] = v26;
      v112.f64[1] = 100.0;
      sub_100313F90(a1->f64, v111.f64, v23 - 1, v23 - 1, 0, v15);
    }
    v28 = a1[3].f64[0];
    if (v26 < v28)
      v16 = v23 - 1;
    if (v26 > v28)
      v29 = v23 - 1;
    else
      v29 = 0;
    if (!v17)
      v17 = (char *)v29;

    ++v23;
  }
  while (v14 != (char *)v23);
  v9 = v109;
  v10 = v103;
  v13 = v107;
  if (!v17)
  {
LABEL_23:
    v17 = v13;
    if (!v15)
      goto LABEL_37;
    goto LABEL_24;
  }
  if (!v15)
  {
LABEL_37:
    v73 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "objectAtIndex:", v16));
    v74 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "objectAtIndex:", v17));
    objc_msgSend(v73, "t");
    v110 = v75;
    objc_msgSend(v74, "t");
    v77 = v76;
    objc_msgSend(v73, "skew");
    v79 = v78;
    objc_msgSend(v74, "skew");
    v81 = v80;
    objc_msgSend(v9, "lineWidth");
    v83 = v82;
    objc_msgSend(v9, "length");
    v84 = 0;
    v85 = (float64x2_t)vdupq_n_s64(0x7FF0000000000000uLL);
    v86 = (float64x2_t)vdupq_lane_s64(v110, 0);
    v87 = (float64x2_t)vdupq_lane_s64(COERCE__INT64(v77 - *(double *)&v110), 0);
    v88 = (float64x2_t)vdupq_lane_s64(COERCE__INT64(v79 + v81), 0);
    v89 = (float64x2_t)vdupq_lane_s64(COERCE__INT64(-v79), 0);
    __asm
    {
      FMOV            V6.2D, #0.5
      FMOV            V7.2D, #1.0
    }
    v93 = v83 / v92;
    do
    {
      f64 = a1[v84].f64;
      v116 = vld2q_f64(f64);
      v95 = vdivq_f64(vsubq_f64(v116.val[0], v86), v87);
      v96 = vabsq_f64(v95);
      v116.val[0] = vmlaq_f64(v116.val[0], v116.val[1], vmulq_n_f64(vmlaq_f64(v89, v88, vmaxnmq_f64(vminnmq_f64((float64x2_t)vbslq_s8(vorrq_s8((int8x16_t)vcgtq_f64(v85, v96), (int8x16_t)vcgtq_f64(v96, v85)), (int8x16_t)v95, _Q6), _Q7), (float64x2_t)0)), v93));
      *f64 = v116.val[0].f64[0];
      a1[v84 + 1].f64[0] = v116.val[0].f64[1];
      v84 += 2;
    }
    while (v84 != 4);
    sub_100315FD4(a1, v9, (uint64_t)objc_msgSend(v73, "segment") + 1, (uint64_t)objc_msgSend(v74, "segment"), v10, 0, a4);

    goto LABEL_40;
  }
LABEL_24:
  if (!objc_msgSend(v15, "count"))
    goto LABEL_37;
  v104 = v10;
  objc_msgSend(v15, "sortUsingSelector:", "compareT:");
  v108 = 0.0;
  v97 = -[CRLPathIntersection initWithSegment:atT:atPoint:]([CRLPathIntersection alloc], "initWithSegment:atT:atPoint:", v16, 1.0, 1000.0, 0.0);
  objc_msgSend(v15, "addObject:");
  v102 = (char *)objc_msgSend(v15, "count");
  if (v102)
  {
    v30 = 0;
    v98 = v102 - 1;
    __asm { FMOV            V0.2D, #0.5 }
    v100 = _Q0;
    v101 = (float64x2_t)vdupq_n_s64(0x7FF0000000000000uLL);
    __asm { FMOV            V0.2D, #1.0 }
    v99 = _Q0;
    do
    {
      v36 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "objectAtIndex:", v30));
      objc_msgSend(v36, "t");
      v37 = a1[1];
      v111 = *a1;
      v112 = v37;
      v38 = a1[3];
      v113 = a1[2];
      v114 = v38;
      v39 = vmlaq_n_f64(vmulq_n_f64(v113, v108), v112, 1.0 - v108);
      v105 = vmlaq_n_f64(vmulq_n_f64(vmlaq_n_f64(vmulq_n_f64(vmlaq_n_f64(vmulq_n_f64(v38, v108), v113, 1.0 - v108), v108), v39, 1.0 - v108), v108), vmlaq_n_f64(vmulq_n_f64(v39, v108), vmlaq_n_f64(vmulq_n_f64(v112, v108), v111, 1.0 - v108), 1.0 - v108), 1.0 - v108);
      v41 = vmlaq_n_f64(vmulq_n_f64(v112, v40), v111, 1.0 - v40);
      v42 = vmlaq_n_f64(vmulq_n_f64(v113, v40), v112, 1.0 - v40);
      v43 = vmlaq_n_f64(vmulq_n_f64(v114, v40), v113, 1.0 - v40);
      v111 = v105;
      v112 = vmlaq_n_f64(vmulq_n_f64(vmlaq_n_f64(vmulq_n_f64(v43, v108), v42, 1.0 - v108), v108), vmlaq_n_f64(vmulq_n_f64(v42, v108), v41, 1.0 - v108), 1.0 - v108);
      v44 = vmlaq_n_f64(vmulq_n_f64(v42, v40), v41, 1.0 - v40);
      v45 = vmlaq_n_f64(vmulq_n_f64(v43, v40), v42, 1.0 - v40);
      v46 = vmlaq_n_f64(vmulq_n_f64(v45, v108), v44, 1.0 - v108);
      v108 = v40;
      v113 = v46;
      v114 = vmlaq_n_f64(vmulq_n_f64(v45, v40), v44, 1.0 - v40);
      objc_msgSend(v36, "point");
      v48 = v47;
      v49 = (char *)objc_msgSend(v36, "segment");
      v50 = (char *)objc_msgSend(v36, "segment");
      if (v105.f64[0] <= v48)
      {
        if (v30 == v98)
          v51 = v50 + 1;
        else
          v51 = v50;
        v49 -= v30 != v98;
      }
      else
      {
        v51 = v50 + 1;
      }
      v52 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "objectAtIndex:", v49, v105.f64[0]));
      v53 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "objectAtIndex:", v51));
      objc_msgSend(v52, "t");
      v106 = v54;
      objc_msgSend(v53, "t");
      v56 = v55;
      objc_msgSend(v52, "skew");
      v58 = v57;
      objc_msgSend(v53, "skew");
      v60 = v59;
      objc_msgSend(v9, "lineWidth");
      v62 = v61;
      objc_msgSend(v9, "length");
      v63 = 0;
      v64 = (float64x2_t)vdupq_lane_s64(v106, 0);
      v65 = (float64x2_t)vdupq_lane_s64(COERCE__INT64(v56 - *(double *)&v106), 0);
      v66 = (float64x2_t)vdupq_lane_s64(COERCE__INT64(v58 + v60), 0);
      v67 = (float64x2_t)vdupq_lane_s64(COERCE__INT64(-v58), 0);
      v69 = v62 / v68;
      do
      {
        v70 = &v111.f64[v63];
        v115 = vld2q_f64(v70);
        v71 = vdivq_f64(vsubq_f64(v115.val[0], v64), v65);
        v72 = vabsq_f64(v71);
        v115.val[0] = vmlaq_f64(v115.val[0], v115.val[1], vmulq_n_f64(vmlaq_f64(v67, v66, vmaxnmq_f64(vminnmq_f64((float64x2_t)vbslq_s8(vorrq_s8((int8x16_t)vcgtq_f64(v101, v72), (int8x16_t)vcgtq_f64(v72, v101)), (int8x16_t)v71, v100), v99), (float64x2_t)0)), v69));
        *v70 = v115.val[0].f64[0];
        *(float64_t *)((char *)&v111 + v63 * 8 + 16) = v115.val[0].f64[1];
        v63 += 4;
      }
      while (v63 != 8);
      sub_100315FD4(&v111, v9, (uint64_t)objc_msgSend(v52, "segment") + 1, (uint64_t)objc_msgSend(v53, "segment"), v104, 0, a4 & 1);

      LOBYTE(a4) = 0;
      ++v30;
    }
    while (v30 != v102);
  }

  v10 = v104;
LABEL_40:

}

void sub_100317328(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100317358(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

CGFloat sub_100317AA0(const CGPath *a1, double *a2)
{
  double v4;
  double v5;
  double v6;
  uint64_t v7;
  _QWORD v9[2];
  CGPoint v10;
  double v11;
  uint64_t v12;

  v4 = sub_1000603B8(a2[2], a2[3], *a2);
  v6 = sub_100060398(v4, v5);
  v9[0] = a2;
  v9[1] = 0xC000000000000000;
  v10 = CGPointZero;
  v11 = v6;
  v12 = v7;
  sub_1000C9338(a1, (uint64_t)v9, (uint64_t)sub_100317B0C);
  return v10.x;
}

void sub_100317B0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  double v5;
  double v6;
  float64x2_t *v7;
  double v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  CGPoint v18;

  if (*(_DWORD *)a2 == 3)
  {
    v7 = *(float64x2_t **)(a2 + 8);
    v5 = v7[3].f64[0];
    v6 = v7[3].f64[1];
    v18 = CGPointZero;
    v8 = sub_100314CCC(v7, *(double **)a1, (uint64_t)&v18);
    if (v8 > *(double *)(a1 + 8))
    {
      *(CGPoint *)(a1 + 16) = v18;
      *(double *)(a1 + 8) = v8;
    }
  }
  else if (*(_DWORD *)a2 == 1)
  {
    v4 = *(_QWORD *)(a2 + 8);
    v5 = *(double *)(v4 + 16);
    v6 = *(double *)(v4 + 24);
  }
  else
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101251330);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E1FED0();
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101251350);
    v9 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100DE7468(v9);
    v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "void CRLPathNearestAngleOnPathToLineApplier(void * _Nonnull, const CRLPathSegment * _Nonnull)"));
    v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLPathDistortion.m"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v10, v11, 2072, 0, "CRLPathNearestAngleOnPathToLineApplier doesn't handle quad curves or some other element type");

    v12 = *(_QWORD *)(a2 + 8);
    v5 = *(double *)(v12 + 32);
    v6 = *(double *)(v12 + 40);
  }
  v13 = sub_1000603B8(v5, v6, **(double **)a1);
  v15 = sub_100060398(v13, v14);
  v17 = sub_1000603C4(*(double *)(a1 + 32), *(double *)(a1 + 40), v15, v16);
  if (v17 > *(double *)(a1 + 8))
  {
    *(double *)(a1 + 16) = v5;
    *(double *)(a1 + 24) = v6;
    *(double *)(a1 + 8) = v17;
  }
}

void sub_100317D08(float64x2_t *a1, double *a2, uint64_t a3, uint64_t a4, int a5, void *a6, double a7, double a8, double a9, double a10)
{
  double v19;
  double v20;
  double v21;
  CRLPathIntersection *v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  double v26;
  double v27;
  uint64_t v28;
  double *v29;
  double v30;
  double v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  CRLPathIntersection *v37;
  id v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43[8];

  v38 = a6;
  v41 = 0.0;
  v42 = 0.0;
  sub_100317FAC(a1->f64, a2, &v42, &v41);
  v19 = v42;
  if (v42 <= 1.0)
  {
    v20 = v41;
    if (v41 >= 0.0)
    {
      if ((v41 - v42) * a7 >= 0.0001)
      {
        if (v41 - v42 >= 0.8)
        {
          v35 = (v42 + v41) * 0.5;
          sub_100313400(a1, (uint64_t)v43, v42, v35);
          v36 = a5 ^ 1u;
          sub_100317D08(a2, v43, a4, a3, v36, v38, a9, a10, (v20 - v35) * a7, a8 + v19 * a7);
          sub_100313400(a1, (uint64_t)v43, (v19 + v20) * 0.5, v20);
          v27 = a8 + v35 * a7;
          v29 = a2;
          v30 = a9;
          v31 = a10;
          v32 = (v20 - v35) * a7;
          v33 = a4;
          v34 = a3;
          v28 = v36;
        }
        else
        {
          sub_100313400(a1, (uint64_t)v43, v42, v41);
          v27 = a8 + v19 * a7;
          v28 = a5 ^ 1u;
          v29 = a2;
          v30 = a9;
          v31 = a10;
          v32 = (v20 - v19) * a7;
          v33 = a4;
          v34 = a3;
        }
        sub_100317D08(v29, v43, v33, v34, v28, v38, v30, v31, v32, v27);
      }
      else
      {
        v39 = 0.0;
        v40 = 0.0;
        sub_100313400(a1, (uint64_t)v43, v42, v41);
        sub_100317FAC(a2, v43, &v40, &v39);
        if ((v39 - v40) * a9 < 0.1)
        {
          v21 = (v39 + v40) * a9 * 0.5 + a10;
          v22 = [CRLPathIntersection alloc];
          if ((a5 & 1) != 0)
          {
            v23 = a4;
            v24 = v21;
            v25 = a3;
            v26 = (v19 + v20) * a7 * 0.5 + a8;
          }
          else
          {
            v23 = a3;
            v24 = (v19 + v20) * a7 * 0.5 + a8;
            v25 = a4;
            v26 = v21;
          }
          v37 = -[CRLPathIntersection initWithSegment:atT:onSegmentB:atT:atPoint:](v22, "initWithSegment:atT:onSegmentB:atT:atPoint:", v23, v25, v24, v26, CGPointZero.x, CGPointZero.y, v38);
          objc_msgSend(v38, "addObject:", v37);

        }
      }
    }
  }

}

double *sub_100317FAC(double *a1, double *a2, double *a3, double *a4)
{
  double v6;
  double v7;
  double v8;
  double v9;
  float v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  void *v31;
  void *v32;
  void *v33;
  double *result;
  uint64_t i;
  double v36;
  double v38;
  _QWORD v39[8];

  v6 = a2[6];
  v7 = a2[7];
  v8 = v7 - a2[1];
  v9 = v6 - *a2;
  v10 = v9 * v9 + v8 * v8;
  v11 = (float)(1.0 / sqrtf(v10));
  v12 = v8 * v11;
  v13 = -(v9 * v11);
  v14 = v7 * v13 + v12 * v6;
  v15 = a1[1] * v13 + v12 * *a1 - v14;
  v39[0] = 0;
  *(double *)&v39[1] = v15;
  v16 = a1[3] * v13 + v12 * a1[2] - v14;
  v39[2] = 0x3FD5555555555555;
  *(double *)&v39[3] = v16;
  v17 = v13 * a1[5] + v12 * a1[4] - v14;
  v39[4] = 0x3FE5555555555555;
  *(double *)&v39[5] = v17;
  v18 = v13 * a1[7] + v12 * a1[6] - v14;
  v39[6] = 0x3FF0000000000000;
  *(double *)&v39[7] = v18;
  v20 = a2[2];
  v19 = a2[3];
  v21 = v13 * v19 + v12 * v20 - v14;
  v22 = v13 * a2[5] + v12 * a2[4] - v14;
  v23 = fmin(v22, 0.0);
  v24 = fmin(v21, v23);
  v25 = fmax(v22, 0.0);
  v26 = fmax(v21, v25);
  if (v24 == v26)
  {
    v27 = sqrt(v8 * v8 + v9 * v9);
    v28 = v20 + v8 / v27 * 1.0e-10;
    v29 = v19 + v9 / v27 * 1.0e-10;
    a2[2] = v28;
    a2[3] = v29;
    v30 = v13 * v29 + v12 * v28 - v14;
    v24 = fmin(v30, v23);
    v26 = fmax(v30, v25);
  }
  if (v24 == v26)
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_1012512F0);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E1FF50();
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101251310);
    v31 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100DE7468(v31);
    v32 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "void clipToFatCurve(CRLDoublePoint *, CRLDoublePoint *, CRLDoubleFloat * _Nonnull, CRLDoubleFloat * _Nonnull)"));
    v33 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLPathDistortion.m"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v32, v33, 495, 0, "Degenerate curve! Cannot do intersection logic correctly");

  }
  *a3 = 2.0;
  *a4 = -1.0;
  sub_10031833C(a3, a4, (uint64_t)v39, v24);
  result = sub_10031833C(a3, a4, (uint64_t)v39, v26);
  for (i = 0; i != 8; i += 2)
  {
    v36 = *(double *)&v39[i + 1];
    if (v36 > v24 && v36 < v26)
    {
      v38 = *(double *)&v39[i];
      *a3 = fmin(*a3, v38);
      *a4 = fmax(*a4, v38);
    }
  }
  return result;
}

void sub_1003182DC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10031830C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

double *sub_10031833C(double *result, double *a2, uint64_t a3, double a4)
{
  unint64_t v4;
  double *v5;
  uint64_t v6;
  double *v7;
  double *v8;
  double *v9;
  uint64_t v10;
  double v11;
  double v12;
  double v13;

  v4 = 0;
  v5 = (double *)(a3 + 24);
  v6 = 3;
  do
  {
    if (v4 <= 2)
    {
      v7 = (double *)(a3 + 16 * v4);
      v8 = v7 + 1;
      v9 = v5;
      v10 = v6;
      do
      {
        v11 = *v8;
        if ((*v8 <= a4 || *v9 <= a4) && (v11 >= a4 || *v9 >= a4))
        {
          v12 = *v7;
          v13 = *(v9 - 1) - *v7;
          if (v13 != 0.0)
            v12 = v13 * (a4 - (v11 - v12 * (*v9 - v11) / v13)) / (*v9 - v11);
          if (v12 < *result)
            *result = v12;
          if (v12 > *a2)
            *a2 = v12;
        }
        v9 += 2;
        --v10;
      }
      while (v10);
    }
    ++v4;
    --v6;
    v5 += 2;
  }
  while (v4 != 4);
  return result;
}

void sub_100318404(float64x2_t *a1, uint64_t a2, void *a3, double a4)
{
  double v7;
  double v8;
  void *v9;
  float64x2_t *v10;
  double v11;
  double v12;
  id v13;
  double v14;
  double v15;
  _BYTE v16[64];

  v15 = 2.0;
  v13 = a3;
  v14 = -1.0;
  sub_10031833C(&v15, &v14, a2, 0.0);
  v7 = v15;
  if (v15 <= 1.0)
  {
    v8 = v14;
    if (v14 >= 0.0)
    {
      if (v14 - v15 >= 0.00005)
      {
        if (v14 - v15 >= a4 * 0.8)
        {
          v12 = (v15 + v14) * 0.5;
          sub_100313400(a1, (uint64_t)v16, v15, v12);
          sub_100318404(a1, v16, v13, v12 - v7);
          sub_100313400(a1, (uint64_t)v16, (v7 + v8) * 0.5, v8);
          v11 = v8 - v12;
          v10 = a1;
        }
        else
        {
          sub_100313400(a1, (uint64_t)v16, v15, v14);
          v10 = a1;
          v11 = v8 - v7;
        }
        sub_100318404(v10, v16, v13, v11);
      }
      else
      {
        v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", (v15 + v14) * 0.5));
        objc_msgSend(v13, "addObject:", v9);

      }
    }
  }

}

void sub_100318590(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003185C0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003188DC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10031890C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100318AD4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100318B04(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100319284(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003192B4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003192E4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100319314(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100319344(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDragAndDropCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB850;
  off_1013DB850 = v2;

}

uint64_t sub_100319370(uint64_t result)
{
  *(_BYTE *)(*(_QWORD *)(result + 32) + 112) = 0;
  *(_BYTE *)(*(_QWORD *)(result + 32) + 113) = 0;
  return result;
}

uint64_t sub_100319384(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_100319394(uint64_t a1)
{

}

void sub_10031939C(uint64_t a1)
{
  void *v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  NSObject *v8;
  dispatch_queue_global_t global_queue;
  NSObject *v10;
  _QWORD v11[5];
  __int128 v12;
  _QWORD block[5];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "delegate"));
  v3 = objc_msgSend(v2, "canInsertBoardItemsFromDragOperationForDragInfo:", *(_QWORD *)(a1 + 40));

  if (v3)
  {
    v4 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "nativeProvidersForDynamicDragInsertionWithDragInfo:", *(_QWORD *)(a1 + 40)));
    v5 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v6 = *(void **)(v5 + 40);
    *(_QWORD *)(v5 + 40) = v4;

  }
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(NSObject **)(v7 + 144);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1003194A0;
  block[3] = &unk_10122D110;
  block[4] = v7;
  dispatch_sync(v8, block);
  global_queue = dispatch_get_global_queue(2, 0);
  v10 = objc_claimAutoreleasedReturnValue(global_queue);
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  v11[2] = sub_1003194E8;
  v11[3] = &unk_101246FD0;
  v11[4] = *(_QWORD *)(a1 + 32);
  v12 = *(_OWORD *)(a1 + 48);
  dispatch_async(v10, v11);

}

void sub_1003194A0(uint64_t a1)
{
  id v2;
  uint64_t v3;
  void *v4;

  v2 = objc_alloc_init((Class)NSMutableArray);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(void **)(v3 + 120);
  *(_QWORD *)(v3 + 120) = v2;

  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 112) = 0;
  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 113) = 0;
}

void sub_1003194E8(uint64_t a1)
{
  void *v2;
  id v3;
  void *v4;
  void *v5;
  NSObject *v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  unsigned int v17;
  NSObject *v18;
  void *v19;
  void *v20;
  void *v21;
  NSObject *v22;
  void *v23;
  uint64_t v24;
  NSObject *v25;
  id v26;
  void *v27;
  id obj;
  _QWORD block[4];
  id v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint8_t buf[4];
  _BYTE v38[14];
  __int16 v39;
  const char *v40;
  __int16 v41;
  int v42;
  __int16 v43;
  const char *v44;
  _BYTE v45[128];

  v2 = objc_autoreleasePoolPush();
  v3 = objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), "count");
  if (objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), "count"))
  {
    v27 = v2;
    if (qword_10147E5E8 != -1)
      dispatch_once(&qword_10147E5E8, &stru_101251490);
    v4 = off_1013DB850;
    if (os_log_type_enabled((os_log_t)off_1013DB850, OS_LOG_TYPE_DEFAULT))
    {
      v5 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
      v6 = v4;
      *(_DWORD *)buf = 134217984;
      *(_QWORD *)v38 = objc_msgSend(v5, "count");
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "creating infos from %lu native objects on pasteboard for drag-insert", buf, 0xCu);

    }
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray arrayWithCapacity:](NSMutableArray, "arrayWithCapacity:", v3));
    v33 = 0u;
    v34 = 0u;
    v35 = 0u;
    v36 = 0u;
    obj = *(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
    v8 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v33, v45, 16);
    if (v8)
    {
      v9 = v8;
      v10 = *(_QWORD *)v34;
      do
      {
        v11 = 0;
        do
        {
          if (*(_QWORD *)v34 != v10)
            objc_enumerationMutation(obj);
          v12 = *(void **)(*((_QWORD *)&v33 + 1) + 8 * (_QWORD)v11);
          v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "interactiveCanvasController"));
          v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "editingCoordinator"));
          v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "boardItemFactory"));
          v16 = objc_msgSend(v12, "newBoardItemWithFactory:bakedSize:", v15, 0);

          if (v16)
          {
            objc_msgSend(v7, "addObject:", v16);
          }
          else
          {
            v17 = +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
            if (qword_10147E370 != -1)
              dispatch_once(&qword_10147E370, &stru_1012514B0);
            v18 = off_1013D9070;
            if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)buf = 67110146;
              *(_DWORD *)v38 = v17;
              *(_WORD *)&v38[4] = 2082;
              *(_QWORD *)&v38[6] = "-[CRLDragAndDropController draggingEntered:atScaledPoint:]_block_invoke_2";
              v39 = 2082;
              v40 = "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLDragAndDropController.m";
              v41 = 1024;
              v42 = 232;
              v43 = 2082;
              v44 = "boardItem";
              _os_log_error_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d invalid nil value for '%{public}s'", buf, 0x2Cu);
            }
            if (qword_10147E370 != -1)
              dispatch_once(&qword_10147E370, &stru_1012514D0);
            v19 = off_1013D9070;
            if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
            {
              v22 = v19;
              v23 = (void *)objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
              *(_DWORD *)buf = 67109378;
              *(_DWORD *)v38 = v17;
              *(_WORD *)&v38[4] = 2114;
              *(_QWORD *)&v38[6] = v23;
              _os_log_error_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: Assertion backtrace: >>%{public}@<<", buf, 0x12u);

            }
            v20 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLDragAndDropController draggingEntered:atScaledPoint:]_block_invoke"));
            v21 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLDragAndDropController.m"));
            +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v20, v21, 232, 0, "invalid nil value for '%{public}s'", "boardItem");

          }
          v11 = (char *)v11 + 1;
        }
        while (v9 != v11);
        v9 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v33, v45, 16);
      }
      while (v9);
    }

    v2 = v27;
  }
  else
  {
    v7 = 0;
  }
  v24 = *(_QWORD *)(a1 + 32);
  v25 = *(NSObject **)(v24 + 144);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100319A40;
  block[3] = &unk_101251518;
  v30 = v7;
  v31 = v24;
  v32 = *(_QWORD *)(a1 + 48);
  v26 = v7;
  dispatch_async(v25, block);

  objc_autoreleasePoolPop(v2);
}

void sub_1003199B4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDragAndDropCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB850;
  off_1013DB850 = v2;

}

void sub_1003199E0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100319A10(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100319A40(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  NSObject *v5;
  CRLPasteboardMultipleImportableBoardItemProvider *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  CRLPasteboardMultipleImportableBoardItemProvider *v11;
  uint64_t v12;
  void *v13;
  _QWORD v14[5];
  CRLPasteboardMultipleImportableBoardItemProvider *v15;
  uint8_t buf[4];
  id v17;

  v2 = objc_autoreleasePoolPush();
  if (*(_QWORD *)(a1 + 32))
    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 120), "addObjectsFromArray:");
  if (objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), "count"))
  {
    if (qword_10147E5E8 != -1)
      dispatch_once(&qword_10147E5E8, &stru_1012514F0);
    v3 = off_1013DB850;
    if (os_log_type_enabled((os_log_t)off_1013DB850, OS_LOG_TYPE_DEFAULT))
    {
      v4 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40);
      v5 = v3;
      *(_DWORD *)buf = 134217984;
      v17 = objc_msgSend(v4, "count");
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "making %lu infos from importable items provided for drag insert", buf, 0xCu);

    }
    v6 = -[CRLPasteboardMultipleImportableBoardItemProvider initWithImportableBoardItemProviders:]([CRLPasteboardMultipleImportableBoardItemProvider alloc], "initWithImportableBoardItemProviders:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "p_alertPresenter"));
    -[CRLPasteboardMultipleImportableBoardItemProvider setAlertPresenter:](v6, "setAlertPresenter:", v7);

    objc_storeStrong((id *)(*(_QWORD *)(a1 + 40) + 128), v6);
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "interactiveCanvasController"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "editingCoordinator"));
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "boardItemFactory"));
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472;
    v14[2] = sub_100319C9C;
    v14[3] = &unk_10122D3D8;
    v14[4] = *(_QWORD *)(a1 + 40);
    v15 = v6;
    v11 = v6;
    -[CRLPasteboardMultipleImportableBoardItemProvider provideBoardItemsWithFactory:completionHandler:](v11, "provideBoardItemsWithFactory:completionHandler:", v10, v14);

  }
  else
  {
    *(_BYTE *)(*(_QWORD *)(a1 + 40) + 112) = 1;
    *(_BYTE *)(*(_QWORD *)(a1 + 40) + 113) = 1;
  }
  v12 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v13 = *(void **)(v12 + 40);
  *(_QWORD *)(v12 + 40) = 0;

  objc_autoreleasePoolPop(v2);
}

void sub_100319C70(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDragAndDropCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB850;
  off_1013DB850 = v2;

}

void sub_100319C9C(uint64_t a1)
{
  void *v2;
  NSObject *v3;
  id v4;
  uint64_t v5;
  _QWORD v6[4];
  id v7;
  uint64_t v8;

  v2 = *(void **)(a1 + 40);
  v3 = *(NSObject **)(*(_QWORD *)(a1 + 32) + 144);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_100319D14;
  v6[3] = &unk_10122D3D8;
  v4 = v2;
  v5 = *(_QWORD *)(a1 + 32);
  v7 = v4;
  v8 = v5;
  dispatch_async(v3, v6);

}

void sub_100319D14(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;

  v2 = objc_autoreleasePoolPush();
  if ((objc_msgSend(*(id *)(a1 + 32), "isCancelled") & 1) == 0)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "boardItems"));
    if (objc_msgSend(v3, "count"))
      objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 120), "addObjectsFromArray:", v3);
    *(_BYTE *)(*(_QWORD *)(a1 + 40) + 112) = 1;
    *(_BYTE *)(*(_QWORD *)(a1 + 40) + 113) = 1;

  }
  v4 = *(_QWORD *)(a1 + 40);
  v5 = *(void **)(v4 + 128);
  *(_QWORD *)(v4 + 128) = 0;

  objc_autoreleasePoolPop(v2);
}

void sub_100319DA0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDragAndDropCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB850;
  off_1013DB850 = v2;

}

void sub_10031A2E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
  _Block_object_dispose(&a37, 8);
  _Unwind_Resume(a1);
}

void sub_10031A328(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10031A358(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

uint64_t sub_10031A388(uint64_t result)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(result + 40) + 8) + 24) = *(_BYTE *)(*(_QWORD *)(result + 32) + 113);
  return result;
}

void sub_10031A39C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDragAndDropCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB850;
  off_1013DB850 = v2;

}

uint64_t sub_10031A3C8(uint64_t result)
{
  *(_BYTE *)(*(_QWORD *)(result + 32) + 113) = 0;
  return result;
}

void sub_10031A688(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDragAndDropCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB850;
  off_1013DB850 = v2;

}

void sub_10031A6B4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10031A6E4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10031AB6C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDragAndDropCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB850;
  off_1013DB850 = v2;

}

void sub_10031AB98(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10031ABC8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10031ABF8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10031AC28(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10031AC58(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDragAndDropCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB850;
  off_1013DB850 = v2;

}

void sub_10031AD70(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDragAndDropCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB850;
  off_1013DB850 = v2;

}

void sub_10031B174(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10031B1A4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10031B1D4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10031B204(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10031B5F8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10031B628(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10031B658(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10031B688(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10031B870(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10031B888(uint64_t a1, int a2)
{
  id v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  CGFloat v7;
  CGFloat v8;
  NSObject *v9;
  NSString *v10;
  void *v11;
  id WeakRetained;
  void *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  id *v22;
  uint64_t v23;
  void *v24;
  NSObject *v25;
  uint64_t v26;
  int v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  NSObject *v35;
  _QWORD block[5];
  uint8_t buf[4];
  uint64_t v38;
  __int16 v39;
  void *v40;
  CGPoint v41;

  if (a2)
  {
    if (*(_QWORD *)(a1 + 32))
    {
      objc_msgSend(*(id *)(a1 + 40), "setShouldHidePromisedFileTypes:", 1);
      v3 = objc_msgSend(*(id *)(a1 + 32), "dragOperationForDragInfo:atUnscaledPoint:", *(_QWORD *)(a1 + 40), *(double *)(a1 + 64), *(double *)(a1 + 72));
      objc_msgSend(*(id *)(a1 + 40), "setShouldHidePromisedFileTypes:", 0);
      v4 = *(_QWORD *)(a1 + 32);
    }
    else
    {
      v4 = 0;
      v3 = 0;
    }
    objc_msgSend(*(id *)(a1 + 48), "p_updateHighlightStateForDragInfo:atUnscaledPoint:dragOperation:dragDestination:", *(_QWORD *)(a1 + 40), v3, v4, *(double *)(a1 + 64), *(double *)(a1 + 72));
    if (v3 != (id)64)
    {
      *(_OWORD *)(*(_QWORD *)(a1 + 48) + 56) = *(_OWORD *)(a1 + 64);
      if (qword_10147E5E8 != -1)
        dispatch_once(&qword_10147E5E8, &stru_1012517F8);
      v5 = off_1013DB850;
      if (os_log_type_enabled((os_log_t)off_1013DB850, OS_LOG_TYPE_DEFAULT))
      {
        v6 = *(_QWORD *)(a1 + 32);
        v7 = *(double *)(a1 + 64);
        v8 = *(double *)(a1 + 72);
        v9 = v5;
        v41.x = v7;
        v41.y = v8;
        v10 = NSStringFromCGPoint(v41);
        v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
        *(_DWORD *)buf = 138412546;
        v38 = v6;
        v39 = 2112;
        v40 = v11;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "p_performDragOperationWithDragInfo:onDragDestination: %@ atUnscaledPoint: %@", buf, 0x16u);

      }
      WeakRetained = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 48) + 8));
      v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "repToHighlightForDragInfo:atUnscaledPoint:", *(_QWORD *)(a1 + 40), *(double *)(a1 + 64), *(double *)(a1 + 72)));
      if (!*(_QWORD *)(a1 + 32) && !*(_BYTE *)(*(_QWORD *)(a1 + 48) + 96))
      {
        v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "canvasEditor"));
        v15 = objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "repToHighlightForDragInfo:atUnscaledPoint:", *(_QWORD *)(a1 + 40), *(double *)(a1 + 64), *(double *)(a1 + 72)));

        v13 = (void *)v15;
      }
      v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "info"));
      v17 = v16;
      if (v16
        && objc_msgSend(v16, "isSelectable")
        && objc_msgSend(v13, "shouldSelectInfoWhenTargetOfDrag:", *(_QWORD *)(a1 + 40))
        && (objc_msgSend(WeakRetained, "currentSelectionPathContainsInfo:", v17) & 1) == 0)
      {
        v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "canvasEditor"));
        v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "selectionPathWithInfo:", v17));

        v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "editorController"));
        objc_msgSend(v20, "setSelectionPath:", v19);

      }
      v21 = *(void **)(a1 + 32);
      if (v21 && !*(_QWORD *)(*(_QWORD *)(a1 + 48) + 88))
      {
        *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = objc_msgSend(v21, "handleDragOperation:withDragInfo:atUnscaledPoint:", v3, *(_QWORD *)(a1 + 40), *(double *)(a1 + 64), *(double *)(a1 + 72));
        if (qword_10147E5E8 != -1)
          dispatch_once(&qword_10147E5E8, &stru_101251818);
        v25 = off_1013DB850;
        if (os_log_type_enabled((os_log_t)off_1013DB850, OS_LOG_TYPE_DEFAULT))
        {
          v26 = *(_QWORD *)(a1 + 32);
          v27 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24);
          *(_DWORD *)buf = 138412546;
          v38 = v26;
          v39 = 1024;
          LODWORD(v40) = v27;
          _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, "dragDestination %@ handled drag operation. Success: %i", buf, 0x12u);
        }
      }
      else if (objc_msgSend(*(id *)(a1 + 48), "p_shouldInsertDraggedBoardItems:", *(_QWORD *)(a1 + 40)))
      {
        v22 = *(id **)(a1 + 48);
        if (v22[17])
        {
          objc_msgSend(v22[17], "commitDragToInsert");
          v23 = *(_QWORD *)(a1 + 48);
          v24 = *(void **)(v23 + 136);
          *(_QWORD *)(v23 + 136) = 0;

          *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = 1;
        }
        else
        {
          *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = objc_msgSend(v22, "insertBoardItemsForDragInfo:atPoint:onRep:", *(_QWORD *)(a1 + 40), v13, *(double *)(a1 + 64), *(double *)(a1 + 72));
        }
      }
      if (*(_QWORD *)(*(_QWORD *)(a1 + 48) + 136))
      {
        +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
        if (qword_10147E370 != -1)
          dispatch_once(&qword_10147E370, &stru_101251838);
        if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
          sub_100E205F8();
        if (qword_10147E370 != -1)
          dispatch_once(&qword_10147E370, &stru_101251858);
        v28 = off_1013D9070;
        if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
          sub_100DE7468(v28);
        v29 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLDragAndDropController p_performDragOperationWithDragInfo:onDragDestination:atUnscaledPoint:]_block_invoke"));
        v30 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLDragAndDropController.m"));
        +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v29, v30, 646, 0, "expected nil value for '%{public}s'", "self->_dragToInsertController");

        v31 = *(void **)(*(_QWORD *)(a1 + 48) + 136);
      }
      else
      {
        v31 = 0;
      }
      objc_msgSend(v31, "cancelDragToInsert");
      v32 = *(_QWORD *)(a1 + 48);
      v33 = *(void **)(v32 + 136);
      *(_QWORD *)(v32 + 136) = 0;

      v34 = *(_QWORD *)(a1 + 48);
      v35 = *(NSObject **)(v34 + 144);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_10031BE78;
      block[3] = &unk_10122D110;
      block[4] = v34;
      dispatch_async(v35, block);

    }
  }
}

void sub_10031BDC0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDragAndDropCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB850;
  off_1013DB850 = v2;

}

void sub_10031BDEC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDragAndDropCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB850;
  off_1013DB850 = v2;

}

void sub_10031BE18(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10031BE48(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10031BE78(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = objc_autoreleasePoolPush();
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 128), "cancel");
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(void **)(v3 + 120);
  *(_QWORD *)(v3 + 120) = 0;

  objc_autoreleasePoolPop(v2);
}

void sub_10031C0E8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10031C118(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10031C148(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = objc_autoreleasePoolPush();
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 128), "cancel");
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(void **)(v3 + 120);
  *(_QWORD *)(v3 + 120) = 0;

  objc_autoreleasePoolPop(v2);
}

uint64_t sub_10031C364(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  NSObject *v5;
  id v6;
  uint64_t v7;
  _QWORD block[5];
  id v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char v15;

  v3 = a2;
  v12 = 0;
  v13 = &v12;
  v14 = 0x2020000000;
  v15 = 1;
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(NSObject **)(v4 + 144);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10031C41C;
  block[3] = &unk_1012518E8;
  v10 = v3;
  v11 = &v12;
  block[4] = v4;
  v6 = v3;
  dispatch_sync(v5, block);
  v7 = *((unsigned __int8 *)v13 + 24);

  _Block_object_dispose(&v12, 8);
  return v7;
}

void sub_10031C41C(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;

  v1 = *(_QWORD *)(a1 + 32);
  if (*(_BYTE *)(v1 + 112))
  {
    v3 = *(void **)(v1 + 120);
    if (v3)
    {
      if (objc_msgSend(v3, "count"))
      {
        v4 = *(void **)(*(_QWORD *)(a1 + 32) + 120);
        v8 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "info"));
        if (objc_msgSend(v4, "containsObject:"))
        {
          *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = 0;
        }
        else
        {
          v5 = *(void **)(*(_QWORD *)(a1 + 32) + 120);
          v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "repForSelecting"));
          v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "info"));
          *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = objc_msgSend(v5, "containsObject:", v7) ^ 1;

        }
      }
    }
  }
}

void sub_10031CE4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  _Block_object_dispose(&a33, 8);
  _Block_object_dispose(&a29, 8);
  _Unwind_Resume(a1);
}

void sub_10031CE94(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10031CEC4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10031CEF4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDragAndDropCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB850;
  off_1013DB850 = v2;

}

void sub_10031CF20(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10031CF50(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10031CF80(_QWORD *a1)
{
  id v2;
  uint64_t v3;
  void *v4;

  *(_BYTE *)(*(_QWORD *)(a1[5] + 8) + 24) = *(_BYTE *)(a1[4] + 112);
  v2 = objc_msgSend(*(id *)(a1[4] + 120), "copy");
  v3 = *(_QWORD *)(a1[6] + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_10031CFCC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10031CFFC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10031D4D8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10031D508(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10031DA74(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10031DAA4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10031DE28(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 192), 8);
  _Unwind_Resume(a1);
}

void sub_10031DE54(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  CGRect *v10;
  void *v11;
  CGFloat v12;
  CGFloat v13;
  CGFloat v14;
  CGFloat v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  CGRect v21;

  v3 = a2;
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v4 = *(id *)(a1 + 32);
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v17;
    do
    {
      v8 = 0;
      do
      {
        if (*(_QWORD *)v17 != v7)
          objc_enumerationMutation(v4);
        v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "layoutForInfo:", *(_QWORD *)(*((_QWORD *)&v16 + 1) + 8 * (_QWORD)v8), (_QWORD)v16));
        v10 = *(CGRect **)(*(_QWORD *)(a1 + 40) + 8);
        v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "geometryInRoot"));
        objc_msgSend(v11, "frame");
        v21.origin.x = v12;
        v21.origin.y = v13;
        v21.size.width = v14;
        v21.size.height = v15;
        *(CGRect *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 32) = CGRectUnion(v10[1], v21);

        v8 = (char *)v8 + 1;
      }
      while (v6 != v8);
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
    }
    while (v6);
  }

}

void sub_10031DFB4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDragAndDropCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB850;
  off_1013DB850 = v2;

}

id sub_10031E368(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "cancel");
}

void sub_10031E370(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10031E3A0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10031E3D0(uint64_t a1)
{
  void *v2;
  id v3;
  uint64_t v4;
  _QWORD v5[4];
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;
  __int128 v12;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "p_modalOperationPresenter"));
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_10031E4B0;
  v5[3] = &unk_101251B10;
  v3 = *(id *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 32);
  v6 = v3;
  v7 = v4;
  v8 = *(id *)(a1 + 48);
  v9 = *(id *)(a1 + 56);
  v12 = *(_OWORD *)(a1 + 80);
  v10 = *(id *)(a1 + 64);
  v11 = *(id *)(a1 + 72);
  objc_msgSend(v2, "continueAsynchronousWorkOnMainThreadUsingBlock:", v5);

}

void sub_10031E4B0(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  NSObject *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  _QWORD v11[5];
  id v12;
  id v13;
  id v14;
  uint8_t buf[4];
  void *v16;

  if (*(_QWORD *)(a1 + 32))
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "p_modalOperationPresenter"));
    objc_msgSend(v2, "endModalOperationWithToken:", *(_QWORD *)(a1 + 32));

  }
  if ((objc_msgSend(*(id *)(a1 + 48), "isCancelled") & 1) != 0)
  {
    v3 = *(_QWORD *)(a1 + 72);
    if (v3)
      (*(void (**)(void))(v3 + 16))();
  }
  else
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "boardItems"));
    if (objc_msgSend(v4, "count"))
    {
      v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "canvasEditor"));
      if (qword_10147E5E8 != -1)
        dispatch_once(&qword_10147E5E8, &stru_101251AE8);
      v6 = off_1013DB850;
      if (os_log_type_enabled((os_log_t)off_1013DB850, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        v16 = v4;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Inserting importable infos %@", buf, 0xCu);
      }
      v7 = (void *)objc_claimAutoreleasedReturnValue(+[CRLInsertionContext dragInsertionContextWithPreferredCenter:required:shouldEndEditing:fromDragToInsertController:insertFloating:targetZOrder:](CRLInsertionContext, "dragInsertionContextWithPreferredCenter:required:shouldEndEditing:fromDragToInsertController:insertFloating:targetZOrder:", 0, 1, 0, 0, *(_QWORD *)(*(_QWORD *)(a1 + 40) + 104), *(double *)(a1 + 80), *(double *)(a1 + 88)));
      objc_msgSend(v5, "insertBoardItemsFromDragAndDrop:atPoint:onRep:insertionContext:alreadyPositionedInputInfos:", v4, *(_QWORD *)(a1 + 64), v7, 0, *(double *)(a1 + 80), *(double *)(a1 + 88));

    }
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "errors"));
    if (objc_msgSend(v8, "count"))
    {
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "p_modalOperationPresenter"));
      v11[0] = _NSConcreteStackBlock;
      v11[1] = 3221225472;
      v11[2] = sub_10031E74C;
      v11[3] = &unk_101234DC8;
      v11[4] = *(_QWORD *)(a1 + 40);
      v12 = v8;
      v13 = *(id *)(a1 + 48);
      v14 = *(id *)(a1 + 72);
      objc_msgSend(v9, "continueAsynchronousWorkOnMainThreadUsingBlock:", v11);

    }
    else
    {
      v10 = *(_QWORD *)(a1 + 72);
      if (v10)
        (*(void (**)(void))(v10 + 16))();
    }

  }
}

void sub_10031E720(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDragAndDropCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB850;
  off_1013DB850 = v2;

}

uint64_t sub_10031E74C(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t result;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "p_errorPresenter"));
  v3 = *(_QWORD *)(a1 + 40);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "localizedErrorDescription"));
  objc_msgSend(v2, "presentErrors:withLocalizedDescription:completionHandler:", v3, v4, 0);

  result = *(_QWORD *)(a1 + 56);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

double sub_10031E874(float64x2_t *a1)
{
  return fmin(sub_100060300(a1) * 0.002, 0.6);
}

void sub_10031ED88(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_10031EDF4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10031EE24(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10031EE54(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10031EE84(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

_QWORD *sub_10031EF44(_QWORD *result, unint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  uint64_t v7;

  v7 = a4;
  if (result)
  {
    v4 = a2 + a3;
    v6 = a2;
    if (a2 < a2 + a3)
    {
      v5 = result + 1;
      do
      {
        result = sub_10032DBC4(v5, (uint64_t *)&v6, &v7);
        ++v6;
      }
      while (v6 < v4);
    }
  }
  return result;
}

void sub_10031EFA4(_QWORD *a1, uint64_t a2, double a3)
{
  void *v6;
  void *v7;
  void *v8;
  unint64_t v9;
  double *v10;
  double *v11;
  double *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char *v17;
  double *v18;
  char *v19;

  if (a1)
  {
    if (a3 < 0.0)
    {
      +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101251BB0);
      if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
        sub_100E20B2C();
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101251BD0);
      v6 = off_1013D9070;
      if (os_log_type_enabled((os_log_t)v6, OS_LOG_TYPE_ERROR))
      {
        objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
        sub_100DE7E60();
      }

      v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLBezierPathBooleanOperationInputPathMap p_mapBooleanSubpathIndex:toInputBezierPathT:]"));
      v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLBezierPathBooleanOperationHelper.mm"));
      +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v7, v8, 740, 0, "inputBezierPathT (%f) should be greater than or equal to zero.", *(_QWORD *)&a3);

    }
    v9 = a1[8];
    v10 = (double *)a1[7];
    if ((unint64_t)v10 >= v9)
    {
      v12 = (double *)a1[6];
      v13 = ((char *)v10 - (char *)v12) >> 4;
      v14 = v13 + 1;
      if ((unint64_t)(v13 + 1) >> 60)
        sub_100007810();
      v15 = v9 - (_QWORD)v12;
      if (v15 >> 3 > v14)
        v14 = v15 >> 3;
      if ((unint64_t)v15 >= 0x7FFFFFFFFFFFFFF0)
        v16 = 0xFFFFFFFFFFFFFFFLL;
      else
        v16 = v14;
      if (v16)
      {
        v17 = (char *)sub_10001FB2C((uint64_t)(a1 + 8), v16);
        v12 = (double *)a1[6];
        v10 = (double *)a1[7];
      }
      else
      {
        v17 = 0;
      }
      v18 = (double *)&v17[16 * v13];
      v19 = &v17[16 * v16];
      *(_QWORD *)v18 = a2;
      v18[1] = a3;
      v11 = v18 + 2;
      if (v10 != v12)
      {
        do
        {
          *((_OWORD *)v18 - 1) = *((_OWORD *)v10 - 1);
          v18 -= 2;
          v10 -= 2;
        }
        while (v10 != v12);
        v12 = (double *)a1[6];
      }
      a1[6] = v18;
      a1[7] = v11;
      a1[8] = v19;
      if (v12)
        operator delete(v12);
    }
    else
    {
      *(_QWORD *)v10 = a2;
      v10[1] = a3;
      v11 = v10 + 2;
    }
    a1[7] = v11;
  }
}

void sub_10031F228(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10031F250(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10031F280(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10031F2B0(_QWORD *a1, uint64_t a2, double a3)
{
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;

  if (a1)
  {
    if (a3 < 0.0)
    {
      +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101251BF0);
      if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
        sub_100E20C2C();
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101251C10);
      v6 = off_1013D9070;
      if (os_log_type_enabled((os_log_t)v6, OS_LOG_TYPE_ERROR))
      {
        objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
        sub_100DE7E60();
      }

      v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLBezierPathBooleanOperationInputPathMap p_replaceLastMappingWithBooleanSubpathIndex:mappedToInputBezierPathT:]"));
      v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLBezierPathBooleanOperationHelper.mm"));
      +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v7, v8, 745, 0, "inputBezierPathT (%f) should be greater than or equal to zero.", *(_QWORD *)&a3);

    }
    v9 = a1[7];
    if (v9 == a1[6])
    {
      +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101251C30);
      if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
        sub_100E20BAC();
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101251C50);
      v10 = off_1013D9070;
      if (os_log_type_enabled((os_log_t)v10, OS_LOG_TYPE_ERROR))
      {
        objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
        sub_100DE7E60();
      }

      v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLBezierPathBooleanOperationInputPathMap p_replaceLastMappingWithBooleanSubpathIndex:mappedToInputBezierPathT:]"));
      v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLBezierPathBooleanOperationHelper.mm"));
      +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v11, v12, 747, 0, "Unable to replace last point in empty path map.");

      sub_10031EFA4(a1, a2, a3);
    }
    else
    {
      *(_QWORD *)(v9 - 16) = a2;
      *(double *)(v9 - 8) = a3;
    }
  }
}

void sub_10031F5A4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10031F5E0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10031F610(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10031F640(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10031F670(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10031F770(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10031FC14(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10031FD2C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10031FD5C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

double sub_10031FD8C@<D0>(uint64_t a1@<X8>, double a2@<D0>)
{
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  CGFloat MidY;
  double result;
  CGRect v21;
  CGRect v22;
  CGRect v23;
  CGRect v24;
  CGRect v25;
  CGRect v26;
  CGRect v27;
  CGRect v28;
  CGRect v29;
  CGRect v30;

  v21 = CGRectIntegral(*(CGRect *)&a2);
  x = v21.origin.x;
  y = v21.origin.y;
  width = v21.size.width;
  height = v21.size.height;
  v10 = CGRectGetWidth(v21);
  v22.origin.x = x;
  v22.origin.y = y;
  v22.size.width = width;
  v22.size.height = height;
  v11 = CGRectGetWidth(v22);
  if (v10 >= 0.0)
    v12 = v11;
  else
    v12 = -v11;
  v23.origin.x = x;
  v23.origin.y = y;
  v23.size.width = width;
  v23.size.height = height;
  v13 = CGRectGetHeight(v23);
  v24.origin.x = x;
  v24.origin.y = y;
  v24.size.width = width;
  v24.size.height = height;
  v14 = CGRectGetHeight(v24);
  if (v13 < 0.0)
    v14 = -v14;
  if (v12 <= v14)
  {
    v27.origin.x = x;
    v27.origin.y = y;
    v27.size.width = width;
    v27.size.height = height;
    v15 = CGRectGetHeight(v27);
    v28.origin.x = x;
    v28.origin.y = y;
    v28.size.width = width;
    v28.size.height = height;
    v16 = CGRectGetHeight(v28);
  }
  else
  {
    v25.origin.x = x;
    v25.origin.y = y;
    v25.size.width = width;
    v25.size.height = height;
    v15 = CGRectGetWidth(v25);
    v26.origin.x = x;
    v26.origin.y = y;
    v26.size.width = width;
    v26.size.height = height;
    v16 = CGRectGetWidth(v26);
  }
  if (v15 < 0.0)
    v16 = -v16;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  v17 = 1063256060.0 / v16;
  v29.origin.x = x;
  v29.origin.y = y;
  v29.size.width = width;
  v29.size.height = height;
  v18 = -(v17 * CGRectGetMidX(v29));
  v30.origin.x = x;
  v30.origin.y = y;
  v30.size.width = width;
  v30.size.height = height;
  MidY = CGRectGetMidY(v30);
  *(double *)a1 = v17;
  result = -(v17 * MidY);
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(double *)(a1 + 24) = v17;
  *(double *)(a1 + 32) = v18;
  *(double *)(a1 + 40) = result;
  return result;
}

unint64_t sub_10031FEFC(uint64_t *a1, void *a2, _OWORD *a3, int a4, int a5)
{
  id v7;
  char *v8;
  char *v9;
  id v10;
  int64x2_t *v11;
  int64x2_t v12;
  int64x2_t v13;
  int64x2_t *v14;
  int64x2_t *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  int64x2_t *v21;
  int64x2_t *v22;
  int64x2_t *v23;
  char *v24;
  uint64_t v25;
  __int128 v26;
  char *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  double v41;
  double v42;
  double v43;
  double v44;
  __int128 v45;
  unsigned int v46;
  NSObject *v47;
  void *v48;
  void *v49;
  void *v50;
  unint64_t v51;
  char **v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  char *v64;
  char *v65;
  __int128 v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  __int128 v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  unint64_t *v83;
  unint64_t v84;
  CGPoint **v85;
  unint64_t v86;
  _OWORD *v87;
  _OWORD *p_x;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  unint64_t v92;
  char *v93;
  unint64_t v94;
  _OWORD *v95;
  _OWORD *v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  unint64_t v100;
  char *v101;
  char *v102;
  char *v103;
  char *v104;
  char *v105;
  CGPoint *v106;
  CGPoint *v107;
  CGPoint *v108;
  CGPoint *v109;
  void *v110;
  uint64_t v111;
  uint64_t v112;
  __int128 v114;
  int v115;
  uint64_t v117;
  unint64_t v118;
  unint64_t *v119;
  id v121;
  int64x2_t v122;
  uint64_t *v123;
  _OWORD v124[3];
  CGPoint v125;
  void *__p;
  int64x2_t *v127;
  int64x2_t *v128;
  _OWORD __src[3];
  uint8_t buf[8];
  _BYTE v131[32];

  v7 = a2;
  __p = 0;
  v127 = 0;
  v128 = 0;
  v121 = v7;
  v8 = (char *)objc_msgSend(v7, "elementCount");
  if (!v8)
  {
    v112 = *a1;
    v111 = a1[1];
    v118 = 0x6DB6DB6DB6DB6DB7 * ((v111 - *a1) >> 3);
    v125 = CGPointZero;
    goto LABEL_121;
  }
  v115 = a5;
  v9 = 0;
  v122 = vdupq_n_s64(1uLL);
  v123 = a1;
  do
  {
    v10 = objc_msgSend(v7, "elementAtIndex:", v9);
    if (v10)
    {
      if (v10 == (id)1)
      {
        v11 = v127;
        v12 = v127[-1];
        v13 = vdupq_n_s64(1uLL);
      }
      else
      {
        if (v10 != (id)2)
          goto LABEL_9;
        v11 = v127;
        v12 = v127[-1];
        v13 = (int64x2_t)xmmword_100EEF400;
      }
      v11[-1] = vaddq_s64(v12, v13);
    }
    else if (v9 + 1 < v8)
    {
      v14 = v127;
      if (v127 >= v128)
      {
        v16 = ((char *)v127 - (_BYTE *)__p) >> 4;
        if ((unint64_t)(v16 + 1) >> 60)
          sub_100007810();
        v17 = ((char *)v128 - (_BYTE *)__p) >> 3;
        if (v17 <= v16 + 1)
          v17 = v16 + 1;
        if ((unint64_t)((char *)v128 - (_BYTE *)__p) >= 0x7FFFFFFFFFFFFFF0)
          v18 = 0xFFFFFFFFFFFFFFFLL;
        else
          v18 = v17;
        v19 = (char *)sub_10001FB2C((uint64_t)&v128, v18);
        v21 = (int64x2_t *)&v19[16 * v16];
        *v21 = vdupq_n_s64(1uLL);
        v15 = v21 + 1;
        v23 = (int64x2_t *)__p;
        v22 = v127;
        if (v127 != __p)
        {
          do
          {
            v21[-1] = v22[-1];
            --v21;
            --v22;
          }
          while (v22 != v23);
          v22 = (int64x2_t *)__p;
        }
        __p = v21;
        v127 = v15;
        v128 = (int64x2_t *)&v19[16 * v20];
        if (v22)
          operator delete(v22);
      }
      else
      {
        *v127 = v122;
        v15 = v14 + 1;
      }
      v127 = v15;
      a1 = v123;
    }
LABEL_9:
    ++v9;
  }
  while (v9 != v8);
  v24 = 0;
  v25 = 0x6DB6DB6DB6DB6DB7 * ((a1[1] - *a1) >> 3);
  v125 = CGPointZero;
  *((_QWORD *)&v26 + 1) = *(_QWORD *)&v125.y;
  v118 = v25;
  v119 = (unint64_t *)(a1 + 2);
  v117 = ~v25;
  *(_QWORD *)&v26 = 67109378;
  v114 = v26;
  do
  {
    __src[0] = xmmword_100EEC438;
    __src[1] = xmmword_100EEC438;
    __src[2] = xmmword_100EEC438;
    v27 = v24 - 1;
    switch((unint64_t)objc_msgSend(v7, "elementAtIndex:associatedPoints:", v24, __src, v114))
    {
      case 0uLL:
        if (v24 + 1 < v8)
        {
          v28 = a1[1];
          if (a4 && 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(v28 - *a1) >> 3) > v118)
          {
            sub_1003260BC((void **)(v28 - 56), (uint64_t)(v24 - 2));
            v28 = a1[1];
          }
          if (v28 >= *v119)
          {
            v77 = 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(v28 - *a1) >> 3);
            v78 = v77 + 1;
            if ((unint64_t)(v77 + 1) > 0x492492492492492)
              sub_100007810();
            if (0xDB6DB6DB6DB6DB6ELL * ((uint64_t)(*v119 - *a1) >> 3) > v78)
              v78 = 0xDB6DB6DB6DB6DB6ELL * ((uint64_t)(*v119 - *a1) >> 3);
            if ((unint64_t)(0x6DB6DB6DB6DB6DB7 * ((uint64_t)(*v119 - *a1) >> 3)) >= 0x249249249249249)
              v79 = 0x492492492492492;
            else
              v79 = v78;
            *(_QWORD *)&v131[24] = v119;
            v80 = (char *)sub_10001E5F8((uint64_t)v119, v79);
            v81 = &v80[56 * v77];
            *(_QWORD *)buf = v80;
            *(_QWORD *)v131 = v81;
            *(_QWORD *)&v131[16] = &v80[56 * v82];
            *((_QWORD *)v81 + 6) = 0;
            *(_OWORD *)v81 = 0u;
            *((_OWORD *)v81 + 1) = 0u;
            *((_OWORD *)v81 + 2) = 0u;
            v81[48] = 1;
            *(_QWORD *)&v131[8] = v81 + 56;
            sub_100326300(a1, buf);
            v29 = a1[1];
            sub_100326504((void **)buf);
          }
          else
          {
            *(_QWORD *)(v28 + 48) = 0;
            *(_OWORD *)(v28 + 16) = 0u;
            *(_OWORD *)(v28 + 32) = 0u;
            *(_OWORD *)v28 = 0u;
            *(_BYTE *)(v28 + 48) = 1;
            v29 = v28 + 56;
            a1[1] = v28 + 56;
          }
          a1[1] = v29;
          v83 = (unint64_t *)((char *)__p
                                   + 16 * v117
                                   + 0xDB6DB6DB6DB6DB70 * ((unint64_t)(v29 - *a1) >> 3));
          v84 = v83[1];
          sub_1000CA6DC((void **)(v29 - 56), *v83);
          v85 = (CGPoint **)(v29 - 32);
          sub_1002ABA04((void **)(v29 - 32), v84);
          v125 = (CGPoint)__src[0];
          v86 = *(_QWORD *)(v29 - 16);
          v87 = *(_OWORD **)(v29 - 24);
          if ((unint64_t)v87 >= v86)
          {
            v89 = ((char *)v87 - (char *)*v85) >> 4;
            v90 = v89 + 1;
            if ((unint64_t)(v89 + 1) >> 60)
              sub_100007810();
            v91 = v86 - (_QWORD)*v85;
            if (v91 >> 3 > v90)
              v90 = v91 >> 3;
            if ((unint64_t)v91 >= 0x7FFFFFFFFFFFFFF0)
              v92 = 0xFFFFFFFFFFFFFFFLL;
            else
              v92 = v90;
            if (v92)
              v93 = (char *)sub_10001FB2C(v29 - 16, v92);
            else
              v93 = 0;
            v106 = (CGPoint *)&v93[16 * v89];
            *v106 = v125;
            v108 = *(CGPoint **)(v29 - 32);
            v107 = *(CGPoint **)(v29 - 24);
            v109 = v106;
            if (v107 != v108)
            {
              do
              {
                v109[-1] = v107[-1];
                --v109;
                --v107;
              }
              while (v107 != v108);
              v107 = *v85;
            }
            p_x = (_OWORD *)&v106[1].x;
            *(_QWORD *)(v29 - 32) = v109;
            *(_QWORD *)(v29 - 24) = v106 + 1;
            *(_QWORD *)(v29 - 16) = &v93[16 * v92];
            if (v107)
              operator delete(v107);
          }
          else
          {
            *v87 = __src[0];
            p_x = v87 + 1;
          }
          *(_QWORD *)(v29 - 24) = p_x;
        }
        break;
      case 1uLL:
        v36 = a1[1];
        v37 = *(_QWORD *)(v36 - 56);
        v38 = *(_QWORD *)(v36 - 48);
        v39 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v38 - v37) >> 3);
        if (v39 < 2)
          goto LABEL_50;
        if (*(_BYTE *)(v38 - 16))
          goto LABEL_50;
        v40 = *(_QWORD *)(v36 - 24);
        v41 = *(double *)(v40 - 32);
        v42 = *(double *)(v40 - 24);
        v43 = *(double *)(v40 - 16);
        v44 = *(double *)(v40 - 8);
        v45 = a3[1];
        v124[0] = *a3;
        v124[1] = v45;
        v124[2] = a3[2];
        if (!sub_100326210((double *)v124, v41, v42, v43, v44, *(double *)__src, *((double *)__src + 1)))
        {
LABEL_50:
          v51 = *(_QWORD *)(v36 - 40);
          v52 = (char **)(v36 - 32);
          v53 = ((uint64_t)(*(_QWORD *)(v36 - 24) - *(_QWORD *)(v36 - 32)) >> 4) - 1;
          if (v38 >= v51)
          {
            v67 = v39 + 1;
            if (v39 + 1 > 0xAAAAAAAAAAAAAAALL)
              sub_100007810();
            v68 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v51 - v37) >> 3);
            if (2 * v68 > v67)
              v67 = 2 * v68;
            if (v68 >= 0x555555555555555)
              v69 = 0xAAAAAAAAAAAAAAALL;
            else
              v69 = v67;
            v70 = (char *)sub_100045008(v36 - 40, v69);
            v72 = &v70[8 * ((uint64_t)(v38 - v37) >> 3)];
            *(_QWORD *)v72 = v53;
            v72[8] = 0;
            *((_QWORD *)v72 + 2) = v27;
            v74 = *(char **)(v36 - 56);
            v73 = *(char **)(v36 - 48);
            v75 = v72;
            if (v73 == v74)
            {
              v7 = v121;
            }
            else
            {
              v7 = v121;
              do
              {
                v76 = *(_OWORD *)(v73 - 24);
                *((_QWORD *)v75 - 1) = *((_QWORD *)v73 - 1);
                *(_OWORD *)(v75 - 24) = v76;
                v75 -= 24;
                v73 -= 24;
              }
              while (v73 != v74);
              v73 = *(char **)(v36 - 56);
            }
            v54 = v72 + 24;
            *(_QWORD *)(v36 - 56) = v75;
            *(_QWORD *)(v36 - 48) = v72 + 24;
            *(_QWORD *)(v36 - 40) = &v70[24 * v71];
            if (v73)
              operator delete(v73);
          }
          else
          {
            *(_QWORD *)v38 = v53;
            *(_BYTE *)(v38 + 8) = 0;
            v54 = (char *)(v38 + 24);
            *(_QWORD *)(v38 + 16) = v27;
            v7 = v121;
          }
          v94 = *(_QWORD *)(v36 - 16);
          *(_QWORD *)(v36 - 48) = v54;
          v95 = *(_OWORD **)(v36 - 24);
          if ((unint64_t)v95 >= v94)
          {
            v97 = ((char *)v95 - *v52) >> 4;
            v98 = v97 + 1;
            if ((unint64_t)(v97 + 1) >> 60)
              sub_100007810();
            v99 = v94 - (_QWORD)*v52;
            if (v99 >> 3 > v98)
              v98 = v99 >> 3;
            if ((unint64_t)v99 >= 0x7FFFFFFFFFFFFFF0)
              v100 = 0xFFFFFFFFFFFFFFFLL;
            else
              v100 = v98;
            if (v100)
              v101 = (char *)sub_10001FB2C(v36 - 16, v100);
            else
              v101 = 0;
            v102 = &v101[16 * v97];
            *(_OWORD *)v102 = __src[0];
            v104 = *(char **)(v36 - 32);
            v103 = *(char **)(v36 - 24);
            v105 = v102;
            if (v103 != v104)
            {
              do
              {
                *((_OWORD *)v105 - 1) = *((_OWORD *)v103 - 1);
                v105 -= 16;
                v103 -= 16;
              }
              while (v103 != v104);
              v103 = *v52;
            }
            v96 = v102 + 16;
            *(_QWORD *)(v36 - 32) = v105;
            *(_QWORD *)(v36 - 24) = v102 + 16;
            *(_QWORD *)(v36 - 16) = &v101[16 * v100];
            if (v103)
              operator delete(v103);
          }
          else
          {
            *v95 = __src[0];
            v96 = v95 + 1;
          }
          *(_QWORD *)(v36 - 24) = v96;
          a1 = v123;
        }
        else
        {
          v7 = v121;
          if (v115)
          {
            v46 = +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
            if (qword_10147E370 != -1)
              dispatch_once(&qword_10147E370, &stru_101251EF0);
            v47 = off_1013D9070;
            if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)buf = 67109890;
              *(_DWORD *)&buf[4] = v46;
              *(_WORD *)v131 = 2082;
              *(_QWORD *)&v131[2] = "NSRange CRLBooleanPath::addPath(CRLBezierPath *const  _Nonnull __strong, const CGAff"
                                    "ineTransform, const BOOL, const BOOL)";
              *(_WORD *)&v131[10] = 2082;
              *(_QWORD *)&v131[12] = "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLBezierPathBoole"
                                     "anOperationHelper.mm";
              *(_WORD *)&v131[20] = 1024;
              *(_DWORD *)&v131[22] = 621;
              _os_log_error_impl((void *)&_mh_execute_header, v47, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d We are currently unable to populate an input path map accurately when consuming collinear point(s).", buf, 0x22u);
            }
            if (qword_10147E370 != -1)
              dispatch_once(&qword_10147E370, &stru_101251F10);
            v48 = off_1013D9070;
            if (os_log_type_enabled((os_log_t)v48, OS_LOG_TYPE_ERROR))
            {
              v110 = (void *)objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
              *(_DWORD *)buf = v114;
              *(_DWORD *)&buf[4] = v46;
              *(_WORD *)v131 = 2114;
              *(_QWORD *)&v131[2] = v110;
              _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)v48, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: Assertion backtrace: >>%{public}@<<", buf, 0x12u);

            }
            v49 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "NSRange CRLBooleanPath::addPath(CRLBezierPath *const  _Nonnull __strong, const CGAffineTransform, const BOOL, const BOOL)"));
            v50 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLBezierPathBooleanOperationHelper.mm"));
            +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v49, v50, 621, 0, "We are currently unable to populate an input path map accurately when consuming collinear point(s).");

            v38 = *(_QWORD *)(v36 - 48);
            v40 = *(_QWORD *)(v36 - 24);
          }
          *(_QWORD *)(v38 - 8) = v27;
          *(_OWORD *)(v40 - 16) = __src[0];
          a1 = v123;
        }
        break;
      case 2uLL:
        v30 = a1[1];
        v31 = ((uint64_t)(*(_QWORD *)(v30 - 24) - *(_QWORD *)(v30 - 32)) >> 4) - 1;
        v32 = *(_QWORD *)(v30 - 48);
        v33 = *(_QWORD *)(v30 - 40);
        if (v32 >= v33)
        {
          v55 = *(_QWORD *)(v30 - 56);
          v56 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v32 - v55) >> 3);
          v57 = v56 + 1;
          if (v56 + 1 > 0xAAAAAAAAAAAAAAALL)
            sub_100007810();
          v58 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v33 - v55) >> 3);
          if (2 * v58 > v57)
            v57 = 2 * v58;
          if (v58 >= 0x555555555555555)
            v59 = 0xAAAAAAAAAAAAAAALL;
          else
            v59 = v57;
          v60 = (char *)sub_100045008(v30 - 40, v59);
          v62 = &v60[24 * v56];
          *(_QWORD *)v62 = v31;
          v62[8] = 1;
          *((_QWORD *)v62 + 2) = v27;
          v64 = *(char **)(v30 - 56);
          v63 = *(char **)(v30 - 48);
          v65 = v62;
          if (v63 != v64)
          {
            do
            {
              v66 = *(_OWORD *)(v63 - 24);
              *((_QWORD *)v65 - 1) = *((_QWORD *)v63 - 1);
              *(_OWORD *)(v65 - 24) = v66;
              v65 -= 24;
              v63 -= 24;
            }
            while (v63 != v64);
            v63 = *(char **)(v30 - 56);
          }
          v34 = v62 + 24;
          *(_QWORD *)(v30 - 56) = v65;
          *(_QWORD *)(v30 - 48) = v62 + 24;
          *(_QWORD *)(v30 - 40) = &v60[24 * v61];
          if (v63)
            operator delete(v63);
        }
        else
        {
          *(_QWORD *)v32 = v31;
          *(_BYTE *)(v32 + 8) = 1;
          v34 = (char *)(v32 + 24);
          *(_QWORD *)(v32 + 16) = v27;
        }
        *(_QWORD *)(v30 - 48) = v34;
        sub_100326578(v30 - 32, *(_QWORD *)(v30 - 24), (char *)__src, (char *)buf, 3);
        a1 = v123;
        break;
      case 3uLL:
        v35 = a1[1];
        *(_BYTE *)(v35 - 8) = 0;
        sub_1003260BC((void **)(v35 - 56), (uint64_t)(v24 - 1));
        break;
      default:
        break;
    }
    ++v24;
  }
  while (v24 != v8);
  v112 = *a1;
  v111 = a1[1];
LABEL_121:
  if ((a4 & 1) != 0 && 0x6DB6DB6DB6DB6DB7 * ((v111 - v112) >> 3) > v118)
    sub_1003260BC((void **)(v111 - 56), (uint64_t)v8);
  if (__p)
  {
    v127 = (int64x2_t *)__p;
    operator delete(__p);
  }

  return v118;
}

void sub_100320B0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,void *__p,uint64_t a37)
{
  void *v37;

  if (__p)
    operator delete(__p);

  _Unwind_Resume(a1);
}

void sub_100320BC0()
{
  operator new();
}

void sub_100320D74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_100121F20((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100320D88(_QWORD *a1, _QWORD *a2, _QWORD *a3, _QWORD *a4, _QWORD *a5)
{
  int v10;
  double *v11;
  double *v12;
  _QWORD *v13;
  int v14;
  uint64_t v15;
  double v16;
  double v17;
  double *v18;
  float v19;
  float v20;
  double *v21;
  int v22;
  uint64_t v23;
  double v24;
  double v25;
  double *v26;
  float v27;
  float v28;

  v10 = 0;
  v11 = (double *)(a1 + 2);
  v12 = (double *)(a1 + 6);
  v13 = a5 + 2;
  while (1)
  {
    v14 = *(_DWORD *)v11;
    if ((*(_DWORD *)v11 & 0x80000000) == 0)
    {
      v15 = 0;
      v16 = v11[1];
      while (1)
      {
        if (v14 == LODWORD(a2[v15 + 2]))
        {
          v17 = *(double *)&a2[v15 + 3];
          if (vabdd_f64(v16, v17) <= 1.0 || v17 == 0.0 || v16 == 0.0)
            break;
        }
        v15 += 2;
        if (v15 == 4)
          goto LABEL_11;
      }
      v18 = (double *)&v13[2 * v10];
      *(_DWORD *)v18 = v14;
      v19 = v16;
      v20 = v17;
      v18[1] = sub_10032760C(a1, a2, a5, v19, v20);
      if (++v10 > 1u)
        break;
    }
LABEL_11:
    v11 += 2;
    if (v11 == v12)
    {
      v21 = (double *)(a3 + 2);
      while (1)
      {
        v22 = *(_DWORD *)v21;
        if ((*(_DWORD *)v21 & 0x80000000) == 0)
        {
          v23 = 0;
          v24 = v21[1];
          while (1)
          {
            if (v22 == LODWORD(a4[v23 + 2]))
            {
              v25 = *(double *)&a4[v23 + 3];
              if (vabdd_f64(v24, v25) <= 1.0 || v25 == 0.0 || v24 == 0.0)
                break;
            }
            v23 += 2;
            if (v23 == 4)
              goto LABEL_22;
          }
          v26 = (double *)&v13[2 * v10];
          *(_DWORD *)v26 = v22;
          v27 = v24;
          v28 = v25;
          v26[1] = sub_10032760C(a3, a4, a5, v27, v28);
          if (++v10 > 1u)
            return;
        }
LABEL_22:
        v21 += 2;
        if (v21 == (double *)(a3 + 6))
          return;
      }
    }
  }
}

uint64_t sub_100320F24(uint64_t a1, int a2, int a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6[3];
  void **v7;

  memset(v6, 0, sizeof(v6));
  v4 = sub_1003270E8(a1, a2, a3, a4, v6);
  v7 = (void **)v6;
  sub_100121A78(&v7);
  return v4;
}

void sub_100320F6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_100121A78((void ***)va);
  _Unwind_Resume(a1);
}

void sub_100320F84(uint64_t *a1, _OWORD *a2, double **a3, char a4, uint64_t a5)
{
  __int128 v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  int v38;
  uint64_t *v39;
  double v41;
  double v42;
  double v43;
  float64x2_t v44;
  double v45;
  __int128 v46;
  float64x2_t v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char v52;
  uint64_t v53;
  double v54;
  double v55;
  double v56;
  double v57;
  uint64_t v58;
  uint64_t v59;
  _OWORD v62[3];
  __int128 v63;
  __int128 v64;
  double v65;
  __int128 v66;
  __int128 v67;
  double v68;
  __int128 v69;
  __int128 v70;
  double v71;
  CGAffineTransform v72;
  CGAffineTransform v73;
  __int128 v74[4];

  memset(&v73, 0, sizeof(v73));
  v8 = a2[1];
  *(_OWORD *)&v72.a = *a2;
  *(_OWORD *)&v72.c = v8;
  *(_OWORD *)&v72.tx = a2[2];
  CGAffineTransformInvert(&v73, &v72);
  v9 = *a1;
  v59 = a1[1];
  if (*a1 != v59)
  {
    do
    {
      v10 = *(double *)v9;
      v11 = *(_QWORD *)(v9 + 8) - *(_QWORD *)v9;
      if (v11 >= 1)
      {
        v12 = 0;
        v13 = v11 / 0x30uLL;
        if ((uint64_t)(v11 / 0x30uLL) <= 1)
          v13 = 1;
        do
        {
          v14 = 0;
          v15 = *(_QWORD *)&v10 + 48 * v12 + 16;
          do
          {
            if (*(_DWORD *)v15 != -1)
            {
              if ((v14 & 1) != 0 || *(double *)(v15 + 8) - (double)(uint64_t)*(double *)(v15 + 8) == 0.0)
                goto LABEL_13;
              v14 = 1;
            }
            v15 += 16;
          }
          while (v15 != *(_QWORD *)&v10 + 48 + 48 * v12);
          ++v12;
        }
        while (v12 != v13);
      }
      v12 = 0;
LABEL_13:
      v71 = 0.0;
      v69 = 0u;
      v70 = 0u;
      sub_1003277D0((double *)v9, v12, a3, (uint64_t)&v69);
      *(double *)&v70 = (double)v12;
      v68 = 0.0;
      v66 = 0u;
      v67 = 0u;
      v16 = v12;
      if (!v12)
        v16 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(v9 + 8) - *(_QWORD *)&v10) >> 4);
      sub_1003277D0((double *)v9, v16 - 1, a3, (uint64_t)&v66);
      v17 = v69;
      if ((_QWORD)v69 != -1
        && ((*(_DWORD *)(*(_QWORD *)&v10 + 48 * v12 + 16) & 0x80000000) != 0
         || (*(_DWORD *)(*(_QWORD *)&v10 + 48 * v12 + 32) & 0x80000000) != 0))
      {
        v23 = *((double *)&v70 + 1);
        v21 = sub_10032C16C((uint64_t *)&(*a3)[7 * v69], *((double *)&v70 + 1));
        v22 = v24;
      }
      else
      {
        v18 = (uint64_t *)(*(_QWORD *)&v10 + 48 * v12);
        v19 = (double)*v18;
        v20 = (double)v18[1];
        v21 = v73.tx + v73.c * v20 + v73.a * v19;
        v22 = v73.ty + v73.d * v20 + v73.b * v19;
        if ((_QWORD)v69 == -1)
        {
          v49 = 0;
          v50 = *(_QWORD *)&v10 + 48 * v12 + 16;
          v51 = 1;
          while (1)
          {
            v52 = v51;
            v17 = *(int *)(v50 + 16 * v49);
            if ((_DWORD)v17 != -1)
              break;
            v51 = 0;
            v49 = 1;
            if ((v52 & 1) == 0)
            {
              v17 = -1;
              v31 = 0.0;
              goto LABEL_25;
            }
          }
          v53 = v50 + 16 * v49;
          v54 = (*a3)[7 * (int)v17];
          v55 = (double)(0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)&(*a3)[7 * (int)v17 + 1] - *(_QWORD *)&v54) >> 3));
          v56 = *(double *)(v53 + 8);
          if (v56 < v55)
            v55 = 0.0;
          v57 = v56 - v55;
          v58 = (uint64_t)v57;
          v29 = v57 - (double)(uint64_t)v57;
          v30 = *(_QWORD *)&v54 + 24 * v58;
          goto LABEL_24;
        }
        v23 = *((double *)&v70 + 1);
      }
      v25 = (*a3)[7 * v17];
      v26 = (double)(0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)&(*a3)[7 * v17 + 1] - *(_QWORD *)&v25) >> 3));
      if (v23 < v26)
        v26 = 0.0;
      v27 = v23 - v26;
      v28 = (uint64_t)v27;
      v29 = v27 - (double)(uint64_t)v27;
      v30 = *(_QWORD *)&v25 + 24 * v28;
LABEL_24:
      v31 = v29 + (double)*(uint64_t *)(v30 + 16);
LABEL_25:
      sub_10032BFF8(a5, v17, v21, v22, v31);
      if (v11 >= 1)
      {
        v32 = 0;
        v33 = v11 / 48;
        v34 = v33 - 1;
        do
        {
          v65 = 0.0;
          v35 = v12 + v32 + 1;
          v63 = 0u;
          v64 = 0u;
          sub_1003277D0((double *)v9, v35, a3, (uint64_t)&v63);
          *(_QWORD *)&v64 = v70;
          v36 = v35 % v33;
          v37 = *(double *)v9;
          if ((v63 & 0x8000000000000000) != 0
            || (_QWORD)v63 != (_QWORD)v69
            || BYTE8(v63) != BYTE8(v69)
            || v34 == v32
            || (v38 = *(_DWORD *)(*(_QWORD *)&v37 + 48 * v36 + 32), (v38 & 0x80000000) == 0)
            && (*(_DWORD *)(*(_QWORD *)&v37 + 48 * v36 + 16) != v38
             || *(double *)(*(_QWORD *)&v37 + 48 * v36 + 24) != *(double *)(*(_QWORD *)&v37 + 48 * v36 + 40)))
          {
            v39 = (uint64_t *)(*(_QWORD *)&v37 + 48 * v36);
            if (*(double *)&v70 + 1.0 == (double)v35 || (_QWORD)v69 == -1)
            {
              if (v34 != v32)
              {
                if ((_QWORD)v63 == -1)
                {
                  v43 = 0.0;
                }
                else
                {
                  v41 = (*a3)[7 * (_QWORD)v63];
                  v42 = (double)(0xAAAAAAAAAAAAAAABLL
                               * ((uint64_t)(*(_QWORD *)&(*a3)[7 * v63 + 1] - *(_QWORD *)&v41) >> 3));
                  if (*((double *)&v64 + 1) < v42)
                    v42 = 0.0;
                  v43 = *((double *)&v64 + 1)
                      - v42
                      - (double)(uint64_t)(*((double *)&v64 + 1) - v42)
                      + (double)*(uint64_t *)(*(_QWORD *)&v41 + 24 * (uint64_t)(*((double *)&v64 + 1) - v42) + 16);
                }
                v47 = vaddq_f64(*(float64x2_t *)&v73.tx, vmlaq_n_f64(vmulq_n_f64(*(float64x2_t *)&v73.c, (double)*(uint64_t *)(*(_QWORD *)&v37 + 48 * v36 + 8)), *(float64x2_t *)&v73.a, (double)*v39));
                v48 = a2[1];
                v62[0] = *a2;
                v62[1] = v48;
                v62[2] = a2[2];
                sub_10032C090(a5, v62, v63, v47.f64[0], v47.f64[1], v43);
              }
            }
            else
            {
              v44.f64[0] = v21;
              v45 = v22;
              if (v34 != v32)
              {
                v44 = vaddq_f64(*(float64x2_t *)&v73.tx, vmlaq_n_f64(vmulq_n_f64(*(float64x2_t *)&v73.c, (double)*(uint64_t *)(*(_QWORD *)&v37 + 48 * v36 + 8)), *(float64x2_t *)&v73.a, (double)*v39));
                v45 = v44.f64[1];
              }
              v46 = a2[1];
              v74[0] = *a2;
              v74[1] = v46;
              v74[2] = a2[2];
              sub_10032C284((uint64_t *)&(*a3)[7 * v69], v69, BYTE8(v69), v34 == v32, v74, a5, *((double *)&v70 + 1), v68, v44.f64[0], v45);
            }
            *(double *)&v64 = (double)v35;
            v71 = v65;
            v69 = v63;
            v70 = v64;
          }
          v66 = v63;
          v67 = v64;
          v68 = v65;
          ++v32;
        }
        while (v12 + v32 < v12 + v33);
      }
      if ((a4 & 1) == 0)
        sub_10032C130(a5);
      v9 += 24;
    }
    while (v9 != v59);
  }
}

id sub_100321524(id *a1)
{
  sub_100327598((uint64_t)a1);
  return *a1;
}

void sub_100321D70(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_100321EE8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100321F18(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100321F48(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100321F78(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100321FA8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100321FD8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100322008(void *a1, int a2, void *a3, uint64_t a4, _OWORD *a5, void *a6)
{
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  int v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  __int128 v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  id v24;
  _QWORD *v25;
  _OWORD v26[3];
  void *__p;
  void *v28;
  uint64_t v29;
  uint64_t v30[10];
  _BYTE v31[32];
  _QWORD v32[3];
  _QWORD *v33;
  uint64_t (**v34)(uint64_t);
  uint64_t v35;
  int v36;
  uint64_t v37;
  __int16 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  _BYTE v48[32];
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v52[4];
  __int16 v53;
  uint64_t v54;

  v22 = a1;
  v21 = a3;
  v25 = a6;
  v35 = 0;
  v36 = 2;
  v37 = 0;
  v38 = 0;
  v39 = 0u;
  v40 = 0u;
  v41 = 0u;
  v42 = 0u;
  v43 = 0u;
  v44 = 0u;
  v45 = 0u;
  v46 = 0u;
  v47 = 0u;
  memset(v48, 0, 29);
  v48[29] = 1;
  v49 = 0;
  v50 = 0;
  v51 = 0;
  v52[3] = 0;
  v53 = 1;
  v54 = 0;
  v34 = &off_101251F68;
  v32[0] = off_1012523C8;
  v32[1] = sub_100320D88;
  v33 = v32;
  sub_100326E78(v52, (uint64_t)v32);
  v9 = v33;
  if (v33 == v32)
  {
    v10 = 4;
    v9 = v32;
  }
  else
  {
    if (!v33)
    {
LABEL_6:
      LOBYTE(v53) = 1;
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "objectAtIndexedSubscript:", 0));
      v24 = objc_msgSend(v11, "windingRule");

      if (a2 && objc_msgSend(v22, "windingRule") != v24)
      {
        v12 = +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
        if (qword_10147E370 != -1)
          dispatch_once(&qword_10147E370, &stru_101251F90);
        v13 = off_1013D9070;
        if (os_log_type_enabled((os_log_t)v13, OS_LOG_TYPE_ERROR))
          sub_100E20F5C();

        if (qword_10147E370 != -1)
          dispatch_once(&qword_10147E370, &stru_101251FB0);
        v14 = off_1013D9070;
        if (os_log_type_enabled((os_log_t)v14, OS_LOG_TYPE_ERROR))
        {
          v15 = (void *)objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
          sub_100E20EE0(v15, (uint64_t)v31, v12, v14);
        }

        v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "CRLBezierPath * _Nonnull _performBooleanOperation(CRLBezierPath *const  _Nonnull __strong, const BOOL, NSArray<CRLBezierPath *> *const  _Nonnull __strong, const Clipper2Lib::ClipType, const CGAffineTransform, CRLBezierPathBooleanOperationInputPathMap *const  _Nullable __strong)"));
        v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLBezierPathBooleanOperationHelper.mm"));
        +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v16, v17, 1234, 0, "All input paths must use the same winding rule.");

      }
      memset(v30, 0, 24);
      v28 = 0;
      __p = 0;
      v29 = 0;
      v18 = a5[1];
      v26[0] = *a5;
      v26[1] = v18;
      v26[2] = a5[2];
      v19 = sub_10031FEFC(v30, v22, v26, a2, v25 != 0);
      sub_10031EF44(v25, v19, v20, 0);
      sub_100320BC0();
    }
    v10 = 5;
  }
  (*(void (**)(void))(*v9 + 8 * v10))();
  goto LABEL_6;
}

void sub_100322E88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21)
{
  void *v21;

  sub_1003CFDF0((uint64_t)&STACK[0x400]);
  _Unwind_Resume(a1);
}

void sub_100323140(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

id sub_100323158(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  double x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  void *v14;
  id v15;
  uint64_t v16;
  void *i;
  void *v18;
  CGFloat v19;
  CGFloat v20;
  CGFloat v21;
  CGFloat v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  double v30;
  void *v31;
  _OWORD v33[3];
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  id v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  _QWORD v42[2];
  _BYTE v43[128];
  CGRect v44;
  CGRect v45;
  CGRect v46;
  CGRect v47;

  v7 = a2;
  v8 = a3;
  v9 = a4;
  if (!v7)
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101252070);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E21068();
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101252090);
    v24 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)v24, OS_LOG_TYPE_ERROR))
    {
      objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
      sub_100DE7E60();
    }

    v25 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "CRLBezierPath * _Nonnull _performLinePathBooleanOperation(const Clipper2Lib::ClipType, CRLBezierPath *const  _Nonnull __strong, CRLBezierPath *const  _Nonnull __strong, CRLBezierPathBooleanOperationInputPathMap *const  _Nullable __strong)"));
    v26 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLBezierPathBooleanOperationHelper.mm"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v25, v26, 1402, 0, "invalid nil value for '%{public}s'", "lineSubjectPath");

    if (v8)
      goto LABEL_32;
    goto LABEL_23;
  }
  if (!v8)
  {
LABEL_23:
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_1012520B0);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E20FDC();
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_1012520D0);
    v27 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)v27, OS_LOG_TYPE_ERROR))
    {
      objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
      sub_100DE7E60();
    }

    v28 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "CRLBezierPath * _Nonnull _performLinePathBooleanOperation(const Clipper2Lib::ClipType, CRLBezierPath *const  _Nonnull __strong, CRLBezierPath *const  _Nonnull __strong, CRLBezierPathBooleanOperationInputPathMap *const  _Nullable __strong)"));
    v29 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLBezierPathBooleanOperationHelper.mm"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v28, v29, 1403, 0, "invalid nil value for '%{public}s'", "filledClipPath");

LABEL_32:
    v23 = (void *)objc_claimAutoreleasedReturnValue(+[CRLBezierPath bezierPath](CRLBezierPath, "bezierPath"));
    goto LABEL_34;
  }
  x = CGRectNull.origin.x;
  y = CGRectNull.origin.y;
  width = CGRectNull.size.width;
  height = CGRectNull.size.height;
  v34 = 0u;
  v35 = 0u;
  v36 = 0u;
  v37 = 0u;
  v42[0] = v7;
  v42[1] = v8;
  v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v42, 2));
  v15 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v34, v43, 16);
  if (v15)
  {
    v16 = *(_QWORD *)v35;
    do
    {
      for (i = 0; i != v15; i = (char *)i + 1)
      {
        if (*(_QWORD *)v35 != v16)
          objc_enumerationMutation(v14);
        v18 = *(void **)(*((_QWORD *)&v34 + 1) + 8 * (_QWORD)i);
        if ((objc_msgSend(v18, "isEmpty") & 1) == 0)
        {
          objc_msgSend(v18, "controlPointBounds");
          v47.origin.x = v19;
          v47.origin.y = v20;
          v47.size.width = v21;
          v47.size.height = v22;
          v44.origin.x = x;
          v44.origin.y = y;
          v44.size.width = width;
          v44.size.height = height;
          v45 = CGRectUnion(v44, v47);
          x = v45.origin.x;
          y = v45.origin.y;
          width = v45.size.width;
          height = v45.size.height;
        }
      }
      v15 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v34, v43, 16);
    }
    while (v15);
  }

  v46.origin.x = x;
  v46.origin.y = y;
  v46.size.width = width;
  v46.size.height = height;
  if (!CGRectIsNull(v46))
  {
    v40 = 0u;
    v41 = 0u;
    v39 = 0u;
    v30 = sub_10031FD8C((uint64_t)&v39, x);
    v38 = v8;
    v31 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v38, 1, v30));
    v33[0] = v39;
    v33[1] = v40;
    v33[2] = v41;
    sub_100322008(v7, 0, v31, a1, v33, v9);
  }
  v23 = (void *)objc_claimAutoreleasedReturnValue(+[CRLBezierPath bezierPath](CRLBezierPath, "bezierPath"));
  objc_msgSend(v7, "copyPathAttributesTo:", v23);
LABEL_34:

  return v23;
}

void sub_10032362C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_100323784(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_100323FDC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_10032444C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1003244C4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003244F4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

id sub_100324524(void *a1, unint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  void *i;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  double v17;
  void *v19;
  void *v20;
  id v21;
  id v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _OWORD v30[3];
  uint64_t v31[3];
  __int128 v32;
  __int128 v33;
  __int128 v34;
  _BYTE v35[128];

  v21 = a1;
  if ((objc_msgSend(v21, "containsElementsOtherThanMoveAndClose") & 1) != 0)
  {
    v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "arrayOfSubpathsWithEffectivelyEmptySubpathsRemoved:", 1));
    v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
    v25 = 0u;
    v26 = 0u;
    v23 = 0u;
    v24 = 0u;
    v5 = v20;
    v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v23, v35, 16);
    if (v6)
    {
      v7 = *(_QWORD *)v24;
      do
      {
        for (i = 0; i != v6; i = (char *)i + 1)
        {
          if (*(_QWORD *)v24 != v7)
            objc_enumerationMutation(v5);
          v9 = *(void **)(*((_QWORD *)&v23 + 1) + 8 * (_QWORD)i);
          if (objc_msgSend(v9, "containsClosePathElement"))
            v10 = v4;
          else
            v10 = v3;
          objc_msgSend(v10, "addObject:", v9);
        }
        v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v23, v35, 16);
      }
      while (v6);
    }

    if (a2 && (unint64_t)objc_msgSend(v3, "count") >= a2)
    {
      v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSIndexSet indexSetWithIndexesInRange:](NSIndexSet, "indexSetWithIndexesInRange:", 0, a2));
      v16 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectsAtIndexes:", v11));
    }
    else
    {
      v11 = (void *)objc_claimAutoreleasedReturnValue(+[CRLBezierPath appendBezierPaths:](CRLBezierPath, "appendBezierPaths:", v4));
      if ((objc_msgSend(v11, "containsElementsOtherThanMoveAndClose") & 1) != 0)
      {
        v19 = v11;
        if (a2 && a2 < (unint64_t)objc_msgSend(v3, "count", v11))
        {
          +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
          if (qword_10147E370 != -1)
            dispatch_once(&qword_10147E370, &stru_1012521E8);
          if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
            sub_100E21388();
          if (qword_10147E370 != -1)
            dispatch_once(&qword_10147E370, &stru_101252208);
          v12 = off_1013D9070;
          if (os_log_type_enabled((os_log_t)v12, OS_LOG_TYPE_ERROR))
          {
            objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
            sub_100DE7E60();
          }

          v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "NSArray<CRLBezierPath *> * _Nonnull _pathsBySeparatingVisuallyDistinctSubregionsOfPath(CRLBezierPath *const  _Nonnull __strong, const NSUInteger)"));
          v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLBezierPathBooleanOperationHelper.mm"));
          +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v13, v14, 1557, 0, "closedStopCount should not be greater than stopAfterFoundCount.");

        }
        v22 = v19;
        objc_msgSend(v22, "controlPointBounds");
        v33 = 0u;
        v34 = 0u;
        v32 = 0u;
        sub_10031FD8C((uint64_t)&v32, v17);
        memset(v31, 0, sizeof(v31));
        v30[0] = v32;
        v30[1] = v33;
        v30[2] = v34;
        sub_10031FEFC(v31, v22, v30, 1, 0);
        v27 = v32;
        v28 = v33;
        v29 = v34;
        sub_100320BC0();
      }
      v16 = v3;
    }
    v15 = v16;

  }
  else
  {
    v15 = &__NSArray0__struct;
  }

  return v15;
}

void sub_100324BCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11)
{
  void *v11;
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

void sub_100324D74(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100324DA4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100324F90(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  v3 = v2;

  _Unwind_Resume(a1);
}

void sub_100324FD4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100325004(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100325D58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17)
{
  void *v17;
  void *v18;

  _Unwind_Resume(a1);
}

void sub_100325F9C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100325FCC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100325FFC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10032602C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10032605C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10032608C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003260BC(void **a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v4;
  double *v6;
  double *v7;
  uint64_t v8;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  __int128 v24;

  v2 = (char *)*a1;
  v3 = (char *)a1[1];
  v4 = v3 - (_BYTE *)*a1;
  if (v3 != *a1)
  {
    v6 = (double *)a1[3];
    v7 = (double *)a1[4];
    v8 = (((char *)v7 - (char *)v6) >> 4) - 1;
    if (*((_QWORD *)v3 - 3) != v8 && (*(v7 - 2) != *v6 || *(v7 - 1) != v6[1]))
    {
      v11 = (uint64_t)(a1 + 2);
      v12 = (char *)a1[2];
      if (v3 >= v12)
      {
        v14 = v4 / 24;
        v15 = v4 / 24 + 1;
        if (v15 > 0xAAAAAAAAAAAAAAALL)
          sub_100007810();
        v16 = 0xAAAAAAAAAAAAAAABLL * ((v12 - v2) >> 3);
        if (2 * v16 > v15)
          v15 = 2 * v16;
        if (v16 >= 0x555555555555555)
          v17 = 0xAAAAAAAAAAAAAAALL;
        else
          v17 = v15;
        v18 = (char *)sub_100045008(v11, v17);
        v19 = &v18[24 * v14];
        v21 = &v18[24 * v20];
        *(_QWORD *)v19 = v8;
        v19[8] = 0;
        *((_QWORD *)v19 + 2) = a2;
        v13 = v19 + 24;
        v23 = (char *)*a1;
        v22 = (char *)a1[1];
        if (v22 != *a1)
        {
          do
          {
            v24 = *(_OWORD *)(v22 - 24);
            *((_QWORD *)v19 - 1) = *((_QWORD *)v22 - 1);
            *(_OWORD *)(v19 - 24) = v24;
            v19 -= 24;
            v22 -= 24;
          }
          while (v22 != v23);
          v22 = (char *)*a1;
        }
        *a1 = v19;
        a1[1] = v13;
        a1[2] = v21;
        if (v22)
          operator delete(v22);
      }
      else
      {
        *(_QWORD *)v3 = v8;
        v3[8] = 0;
        v13 = v3 + 24;
        *((_QWORD *)v3 + 2) = a2;
      }
      a1[1] = v13;
    }
  }
}

BOOL sub_100326210(double *a1, double a2, double a3, double a4, double a5, double a6, double a7)
{
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;

  v7 = a1[1];
  v8 = a1[2];
  v9 = a1[3];
  v10 = a1[4];
  v11 = a1[5];
  v12 = v10 + a3 * v8 + *a1 * a2;
  v13 = v11 + a3 * v9 + v7 * a2;
  v14 = v10 + a5 * v8 + *a1 * a4;
  return ((uint64_t)v13 - (uint64_t)(v11 + a5 * v9 + v7 * a4)) * ((uint64_t)v14 - (uint64_t)(v10 + a7 * v8 + *a1 * a6)) == ((uint64_t)(v11 + a5 * v9 + v7 * a4) - (uint64_t)(v11 + a7 * v9 + v7 * a6)) * ((uint64_t)v12 - (uint64_t)v14);
}

void sub_1003262A0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003262D0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

uint64_t sub_100326300(uint64_t *a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = sub_100326374((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_100326374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v11[3];
  char v12;
  __int128 v13;
  __int128 v14;

  v7 = a7;
  *(_QWORD *)&v14 = a6;
  *((_QWORD *)&v14 + 1) = a7;
  v13 = v14;
  v11[0] = a1;
  v11[1] = &v13;
  v11[2] = &v14;
  if (a3 == a5)
  {
    v9 = a6;
  }
  else
  {
    do
    {
      *(_QWORD *)(v7 - 56) = 0;
      *(_QWORD *)(v7 - 48) = 0;
      *(_QWORD *)(v7 - 40) = 0;
      v8 = *(_OWORD *)(a3 - 56);
      a3 -= 56;
      *(_OWORD *)(v7 - 56) = v8;
      *(_QWORD *)(v7 - 40) = *(_QWORD *)(a3 + 16);
      *(_QWORD *)a3 = 0;
      *(_QWORD *)(a3 + 8) = 0;
      *(_QWORD *)(a3 + 16) = 0;
      *(_QWORD *)(v7 - 32) = 0;
      *(_QWORD *)(v7 - 24) = 0;
      *(_QWORD *)(v7 - 16) = 0;
      *(_OWORD *)(v7 - 32) = *(_OWORD *)(a3 + 24);
      *(_QWORD *)(v7 - 16) = *(_QWORD *)(a3 + 40);
      *(_QWORD *)(a3 + 32) = 0;
      *(_QWORD *)(a3 + 40) = 0;
      *(_QWORD *)(a3 + 24) = 0;
      *(_BYTE *)(v7 - 8) = *(_BYTE *)(a3 + 48);
      v7 = *((_QWORD *)&v14 + 1) - 56;
      *((_QWORD *)&v14 + 1) -= 56;
    }
    while (a3 != a5);
    v9 = v14;
  }
  v12 = 1;
  sub_10032643C((uint64_t)v11);
  return v9;
}

uint64_t sub_10032643C(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    sub_100326470((uint64_t *)a1);
  return a1;
}

void sub_100326470(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(a1[2] + 8);
  v2 = *(_QWORD *)(a1[1] + 8);
  if (v1 != v2)
  {
    v3 = *a1;
    do
    {
      sub_1003264C0(v3, v1);
      v1 += 56;
    }
    while (v1 != v2);
  }
}

void sub_1003264C0(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;

  v3 = *(void **)(a2 + 24);
  if (v3)
  {
    *(_QWORD *)(a2 + 32) = v3;
    operator delete(v3);
  }
  v4 = *(void **)a2;
  if (*(_QWORD *)a2)
  {
    *(_QWORD *)(a2 + 8) = v4;
    operator delete(v4);
  }
}

void **sub_100326504(void **a1)
{
  sub_100326534(a1);
  if (*a1)
    operator delete(*a1);
  return a1;
}

void sub_100326534(_QWORD *a1)
{
  uint64_t i;
  uint64_t v2;
  uint64_t v4;

  v2 = a1[1];
  for (i = a1[2]; i != v2; i = a1[2])
  {
    v4 = a1[4];
    a1[2] = i - 56;
    sub_1003264C0(v4, i - 56);
  }
}

char *sub_100326578(uint64_t a1, uint64_t __dst, char *__src, char *a4, uint64_t a5)
{
  char *v5;
  char *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  int64_t v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  __int128 v27;
  char *v28;
  uint64_t v29;
  char *v30;
  __int128 v31;
  void *__p;
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;

  v5 = (char *)__dst;
  if (a5 < 1)
    return v5;
  v7 = __src;
  v11 = *(_QWORD *)(a1 + 16);
  v9 = a1 + 16;
  v10 = v11;
  v12 = *(_QWORD *)(v9 - 8);
  if (a5 > (uint64_t)(v11 - v12) >> 4)
  {
    v13 = *(void **)a1;
    v14 = a5 + ((uint64_t)(v12 - *(_QWORD *)a1) >> 4);
    if (v14 >> 60)
      sub_100007810();
    v15 = (__dst - (uint64_t)v13) >> 4;
    v16 = v10 - (_QWORD)v13;
    if (v16 >> 3 > v14)
      v14 = v16 >> 3;
    if ((unint64_t)v16 >= 0x7FFFFFFFFFFFFFF0)
      v17 = 0xFFFFFFFFFFFFFFFLL;
    else
      v17 = v14;
    v37 = v9;
    if (v17)
      v18 = (char *)sub_10001FB2C(v9, v17);
    else
      v18 = 0;
    v28 = &v18[16 * v15];
    __p = v18;
    v34 = v28;
    v36 = &v18[16 * v17];
    v29 = 16 * a5;
    v30 = &v28[16 * a5];
    do
    {
      v31 = *(_OWORD *)v7;
      v7 += 16;
      *(_OWORD *)v28 = v31;
      v28 += 16;
      v29 -= 16;
    }
    while (v29);
    v35 = v30;
    v5 = (char *)sub_10001FCA8((void **)a1, (uint64_t)&__p, v5);
    if (v35 != v34)
      v35 += (v34 - v35 + 15) & 0xFFFFFFFFFFFFFFF0;
    if (__p)
      operator delete(__p);
    return v5;
  }
  v19 = v12 - __dst;
  v20 = (uint64_t)(v12 - __dst) >> 4;
  if (v20 >= a5)
  {
    v21 = &__src[16 * a5];
    v23 = *(char **)(v9 - 8);
LABEL_17:
    v24 = &v5[16 * a5];
    v25 = &v23[-16 * a5];
    v26 = v23;
    if ((unint64_t)v25 < v12)
    {
      v26 = v23;
      do
      {
        v27 = *(_OWORD *)v25;
        v25 += 16;
        *(_OWORD *)v26 = v27;
        v26 += 16;
      }
      while ((unint64_t)v25 < v12);
    }
    *(_QWORD *)(a1 + 8) = v26;
    if (v23 != v24)
      memmove(&v23[-16 * ((v23 - v24) >> 4)], v5, v23 - v24);
    if (v21 != v7)
      memmove(v5, v7, v21 - v7);
    return v5;
  }
  v21 = &__src[16 * v20];
  v22 = a4 - v21;
  if (a4 != v21)
    memmove(*(void **)(v9 - 8), &__src[16 * v20], a4 - v21);
  v23 = (char *)(v12 + v22);
  *(_QWORD *)(a1 + 8) = v12 + v22;
  if (v19 >= 1)
    goto LABEL_17;
  return v5;
}

void sub_10032674C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_100326784(uint64_t *a1, __int32 a2, float64x2_t *a3, char **a4, char a5)
{
  uint64_t v6;
  unint64_t v10;
  int64x2_t v11;
  int64x2_t *v12;
  unint64_t v13;
  int64x2_t *v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  float64_t v37;
  float64x2_t v38;
  double v39;
  uint64_t v40;
  int64x2_t v41;
  unint64_t v42;
  unint64_t v43;
  char *v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  char *v53;
  char *v54;
  __int128 v55;
  __int128 v56;
  char *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int64x2_t v66;
  int64x2_t v67;
  uint64_t v68;
  _QWORD v69[6];
  float64x2_t v70;
  float64x2_t v71;
  float64x2_t v72;
  char **v73;
  _QWORD v74[6];
  __int32 v75;
  int v76;
  uint64_t v77;
  int v78;
  int v79;
  unint64_t v80;
  float64x2_t v81;
  double v82;
  double v83;
  double v84;
  double v85;
  uint64_t v86;
  uint64_t v87;

  v6 = *a1;
  if (a1[1] != *a1)
  {
    v10 = 0;
    v68 = (uint64_t)(a4 + 2);
    do
    {
      if (!v10)
      {
        v11 = vcvtq_s64_f64(vaddq_f64(a3[2], vmlaq_n_f64(vmulq_n_f64(a3[1], *(double *)(a1[3] + 8)), *a3, *(double *)a1[3])));
        v12 = (int64x2_t *)a4[1];
        v13 = (unint64_t)a4[2];
        if ((unint64_t)v12 >= v13)
        {
          v66 = v11;
          v15 = 0xAAAAAAAAAAAAAAABLL * (((char *)v12 - *a4) >> 4);
          v16 = v15 + 1;
          if (v15 + 1 > 0x555555555555555)
            sub_100007810();
          v17 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v13 - (_QWORD)*a4) >> 4);
          if (2 * v17 > v16)
            v16 = 2 * v17;
          if (v17 >= 0x2AAAAAAAAAAAAAALL)
            v18 = 0x555555555555555;
          else
            v18 = v16;
          v19 = (char *)sub_100121D50(v68, v18);
          v21 = &v19[48 * v15];
          *(int64x2_t *)v21 = v66;
          *((_DWORD *)v21 + 4) = a2;
          *((_DWORD *)v21 + 5) = 0;
          *((_QWORD *)v21 + 3) = 0;
          *((_QWORD *)v21 + 4) = 0xFFFFFFFFLL;
          *((_QWORD *)v21 + 5) = 0xBFF0000000000000;
          v23 = *a4;
          v22 = a4[1];
          v24 = v21;
          if (v22 != *a4)
          {
            do
            {
              v25 = *((_OWORD *)v22 - 3);
              v26 = *((_OWORD *)v22 - 1);
              *((_OWORD *)v24 - 2) = *((_OWORD *)v22 - 2);
              *((_OWORD *)v24 - 1) = v26;
              *((_OWORD *)v24 - 3) = v25;
              v24 -= 48;
              v22 -= 48;
            }
            while (v22 != v23);
            v22 = *a4;
          }
          v14 = (int64x2_t *)(v21 + 48);
          *a4 = v24;
          a4[1] = v21 + 48;
          a4[2] = &v19[48 * v20];
          if (v22)
            operator delete(v22);
        }
        else
        {
          *v12 = v11;
          v12[1].i32[0] = a2;
          v12[1].i32[1] = 0;
          v12[1].i64[1] = 0;
          v12[2].i64[0] = 0xFFFFFFFFLL;
          v14 = v12 + 3;
          v12[2].i64[1] = 0xBFF0000000000000;
        }
        a4[1] = (char *)v14;
        v6 = *a1;
      }
      v27 = v6 + 24 * v10;
      if (*(_BYTE *)(v27 + 8))
      {
        v74[0] = 0;
        v74[1] = v74;
        v74[2] = 0x5012000000;
        v74[3] = sub_100326CB0;
        v74[4] = nullsub_39;
        v74[5] = &unk_1010E66AB;
        v77 = 0;
        v79 = 0;
        v76 = 0;
        v75 = a2;
        v78 = -1;
        v80 = 0xBFF0000000000000;
        v28 = a1[3] + 16 * *(_QWORD *)v27;
        v30 = *(double *)(v28 + 8);
        v31 = *(double *)(v28 + 16);
        v32 = *(double *)(v28 + 24);
        v33 = *(double *)(v28 + 32);
        v34 = *(double *)(v28 + 40);
        v36 = *(_QWORD *)(v28 + 48);
        v35 = *(_QWORD *)(v28 + 56);
        v81.f64[0] = *(float64_t *)v28;
        v29 = v81.f64[0];
        v81.f64[1] = v30;
        v82 = v31;
        v83 = v32;
        v84 = v33;
        v85 = v34;
        v86 = v36;
        v87 = v35;
        v37 = sub_100060300(&v81);
        v69[0] = _NSConcreteStackBlock;
        v69[1] = 3221225472;
        v69[2] = sub_100326CC0;
        v69[3] = &unk_101251F38;
        v69[4] = v74;
        v69[5] = v10;
        v38 = a3[1];
        v70 = *a3;
        v71 = v38;
        v72 = a3[2];
        v73 = a4;
        +[CRLBezierPath subdivideBezierWithFlatness:startPoint:controlPoint1:controlPoint2:endPoint:addLineBlock:](CRLBezierPath, "subdivideBezierWithFlatness:startPoint:controlPoint1:controlPoint2:endPoint:addLineBlock:", v69, fmin(v37 * 0.002, 0.6), v29, v30, v31, v32, v33, v34, v36, v35);
        _Block_object_dispose(v74, 8);
        ++v10;
      }
      else
      {
        v39 = (double)++v10;
        v40 = a1[3];
        v41 = vcvtq_s64_f64(vaddq_f64(a3[2], vmlaq_n_f64(vmulq_n_f64(a3[1], *(double *)(v40 + 16 * ((*(_QWORD *)v27 + 1) % (unint64_t)((a1[4] - v40) >> 4)) + 8)), *a3, *(double *)(v40 + 16 * ((*(_QWORD *)v27 + 1) % (unint64_t)((a1[4] - v40) >> 4))))));
        v42 = (unint64_t)a4[1];
        v43 = (unint64_t)a4[2];
        if (v42 >= v43)
        {
          v67 = v41;
          v45 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v42 - (_QWORD)*a4) >> 4);
          v46 = v45 + 1;
          if (v45 + 1 > 0x555555555555555)
            sub_100007810();
          v47 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v43 - (_QWORD)*a4) >> 4);
          if (2 * v47 > v46)
            v46 = 2 * v47;
          if (v47 >= 0x2AAAAAAAAAAAAAALL)
            v48 = 0x555555555555555;
          else
            v48 = v46;
          v49 = (char *)sub_100121D50(v68, v48);
          v51 = &v49[48 * v45];
          *(int64x2_t *)v51 = v67;
          *((_DWORD *)v51 + 4) = a2;
          *((_DWORD *)v51 + 5) = 0;
          *((double *)v51 + 3) = v39;
          *((_QWORD *)v51 + 4) = 0xFFFFFFFFLL;
          *((_QWORD *)v51 + 5) = 0xBFF0000000000000;
          v53 = *a4;
          v52 = a4[1];
          v54 = v51;
          if (v52 != *a4)
          {
            do
            {
              v55 = *((_OWORD *)v52 - 3);
              v56 = *((_OWORD *)v52 - 1);
              *((_OWORD *)v54 - 2) = *((_OWORD *)v52 - 2);
              *((_OWORD *)v54 - 1) = v56;
              *((_OWORD *)v54 - 3) = v55;
              v54 -= 48;
              v52 -= 48;
            }
            while (v52 != v53);
            v52 = *a4;
          }
          v44 = v51 + 48;
          *a4 = v54;
          a4[1] = v51 + 48;
          a4[2] = &v49[48 * v50];
          if (v52)
            operator delete(v52);
        }
        else
        {
          *(int64x2_t *)v42 = v41;
          *(_DWORD *)(v42 + 16) = a2;
          *(_DWORD *)(v42 + 20) = 0;
          *(double *)(v42 + 24) = v39;
          *(_QWORD *)(v42 + 32) = 0xFFFFFFFFLL;
          v44 = (char *)(v42 + 48);
          *(_QWORD *)(v42 + 40) = 0xBFF0000000000000;
        }
        a4[1] = v44;
      }
      v6 = *a1;
    }
    while (v10 < 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 3));
  }
  if ((a5 & 1) != 0)
  {
    v58 = *a4;
    v57 = a4[1];
    if (0xAAAAAAAAAAAAAAABLL * ((v57 - *a4) >> 4) >= 2)
    {
      v60 = *((_QWORD *)v57 - 6);
      v61 = *((_QWORD *)v57 - 5);
      v59 = v57 - 48;
      v63 = *(_QWORD *)v58;
      v62 = *((_QWORD *)v58 + 1);
      if (v60 == v63 && v61 == v62)
        a4[1] = v59;
    }
  }
}

void sub_100326C90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  _Block_object_dispose(&a33, 8);
  _Unwind_Resume(a1);
}

__n128 sub_100326CB0(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)(a2 + 48);
  v3 = *(_OWORD *)(a2 + 64);
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v3;
  return result;
}

void sub_100326CC0(uint64_t a1, double a2, double a3, double a4)
{
  void **v4;
  int64x2_t v5;
  int64x2_t *v6;
  int64x2_t *v7;
  unint64_t v8;
  int64x2_t v9;
  int64x2_t v10;
  int64x2_t *v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char *v16;
  int64x2_t *v17;
  char *v18;
  int64x2_t v19;
  int64x2_t v20;
  int64x2_t *v21;
  int64x2_t *v22;
  int64x2_t v23;
  int64x2_t v24;
  int64x2_t v25;

  *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 56) = (double)*(unint64_t *)(a1 + 40) + a4;
  v4 = *(void ***)(a1 + 96);
  v5 = vcvtq_s64_f64(vaddq_f64(*(float64x2_t *)(a1 + 80), vmlaq_n_f64(vmulq_n_f64(*(float64x2_t *)(a1 + 64), a3), *(float64x2_t *)(a1 + 48), a2)));
  v6 = (int64x2_t *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 48);
  v7 = (int64x2_t *)v4[1];
  v8 = (unint64_t)v4[2];
  if ((unint64_t)v7 >= v8)
  {
    v12 = 0xAAAAAAAAAAAAAAABLL * (((char *)v7 - (_BYTE *)*v4) >> 4);
    v13 = v12 + 1;
    if (v12 + 1 > 0x555555555555555)
      sub_100007810();
    v14 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v8 - (_QWORD)*v4) >> 4);
    if (2 * v14 > v13)
      v13 = 2 * v14;
    if (v14 >= 0x2AAAAAAAAAAAAAALL)
      v15 = 0x555555555555555;
    else
      v15 = v13;
    if (v15)
    {
      v25 = v5;
      v16 = (char *)sub_100121D50((uint64_t)(v4 + 2), v15);
      v5 = v25;
    }
    else
    {
      v16 = 0;
    }
    v17 = (int64x2_t *)&v16[48 * v12];
    v18 = &v16[48 * v15];
    v20 = *v6;
    v19 = v6[1];
    *v17 = v5;
    v17[1] = v20;
    v17[2] = v19;
    v11 = v17 + 3;
    v22 = (int64x2_t *)*v4;
    v21 = (int64x2_t *)v4[1];
    if (v21 != *v4)
    {
      do
      {
        v23 = v21[-3];
        v24 = v21[-1];
        v17[-2] = v21[-2];
        v17[-1] = v24;
        v17[-3] = v23;
        v17 -= 3;
        v21 -= 3;
      }
      while (v21 != v22);
      v21 = (int64x2_t *)*v4;
    }
    *v4 = v17;
    v4[1] = v11;
    v4[2] = v18;
    if (v21)
      operator delete(v21);
  }
  else
  {
    v10 = *v6;
    v9 = *(int64x2_t *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 64);
    *v7 = v5;
    v7[1] = v10;
    v7[2] = v9;
    v11 = v7 + 3;
  }
  v4[1] = v11;
}

void sub_100326E54(uint64_t a1)
{
  sub_1003CFDF0(a1);
  operator delete();
}

_QWORD *sub_100326E78(_QWORD *a1, uint64_t a2)
{
  _QWORD *v3;
  uint64_t v4;
  _QWORD v6[3];
  _QWORD *v7;

  sub_100326F10((uint64_t)v6, a2);
  sub_100326F74(v6, a1);
  v3 = v7;
  if (v7 == v6)
  {
    v4 = 4;
    v3 = v6;
    goto LABEL_5;
  }
  if (v7)
  {
    v4 = 5;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }
  return a1;
}

uint64_t sub_100326F10(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(_QWORD *)(a1 + 24) = a1;
      (*(void (**)(_QWORD, uint64_t))(**(_QWORD **)(a2 + 24) + 24))(*(_QWORD *)(a2 + 24), a1);
    }
    else
    {
      *(_QWORD *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 16))(v3);
    }
  }
  else
  {
    *(_QWORD *)(a1 + 24) = 0;
  }
  return a1;
}

_QWORD *sub_100326F74(_QWORD *result, _QWORD *a2)
{
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD v6[3];

  if (a2 != result)
  {
    v3 = result;
    v4 = (_QWORD *)result[3];
    v5 = (_QWORD *)a2[3];
    if (v4 == result)
    {
      if (v5 == a2)
      {
        (*(void (**)(_QWORD *, _QWORD *))(*result + 24))(result, v6);
        (*(void (**)(_QWORD))(*(_QWORD *)v3[3] + 32))(v3[3]);
        v3[3] = 0;
        (*(void (**)(_QWORD, _QWORD *))(*(_QWORD *)a2[3] + 24))(a2[3], v3);
        (*(void (**)(_QWORD))(*(_QWORD *)a2[3] + 32))(a2[3]);
        a2[3] = 0;
        v3[3] = v3;
        (*(void (**)(_QWORD *, _QWORD *))(v6[0] + 24))(v6, a2);
        result = (_QWORD *)(*(uint64_t (**)(_QWORD *))(v6[0] + 32))(v6);
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *))(*result + 24))(result, a2);
        result = (_QWORD *)(*(uint64_t (**)(_QWORD))(*(_QWORD *)v3[3] + 32))(v3[3]);
        v3[3] = a2[3];
      }
      a2[3] = a2;
    }
    else if (v5 == a2)
    {
      (*(void (**)(_QWORD *, _QWORD *))(*a2 + 24))(a2, result);
      result = (_QWORD *)(*(uint64_t (**)(_QWORD))(*(_QWORD *)a2[3] + 32))(a2[3]);
      a2[3] = v3[3];
      v3[3] = v3;
    }
    else
    {
      result[3] = v5;
      a2[3] = v4;
    }
  }
  return result;
}

void sub_1003270DC(_Unwind_Exception *a1, int a2)
{
  if (!a2)
    _Unwind_Resume(a1);
  sub_10000E444(a1);
}

uint64_t sub_1003270E8(uint64_t a1, int a2, int a3, uint64_t *a4, uint64_t *a5)
{
  sub_100121AB8(a4);
  sub_100121AB8(a5);
  if (sub_1003D2A48(a1, a2, a3, 0))
    sub_1003D5A6C(a1, a4, a5);
  sub_1003CFF0C((_QWORD *)a1);
  return *(unsigned __int8 *)(a1 + 221);
}

uint64_t sub_100327168(uint64_t a1)
{
  id v3[8];

  *(_QWORD *)a1 = objc_claimAutoreleasedReturnValue(+[CRLBezierPath bezierPath](CRLBezierPath, "bezierPath"));
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = -1;
  *(_QWORD *)(a1 + 24) = 0;
  *(_OWORD *)(a1 + 32) = xmmword_100EEC438;
  *(_QWORD *)(a1 + 48) = -1;
  *(_QWORD *)(a1 + 56) = 0;
  sub_1003271F8((uint64_t)v3, 0);

  return a1;
}

void sub_1003271DC(_Unwind_Exception *a1)
{
  id *v1;

  _Unwind_Resume(a1);
}

uint64_t sub_1003271F8(uint64_t a1, void *a2)
{
  id v3;

  v3 = a2;
  *(_QWORD *)a1 = objc_claimAutoreleasedReturnValue(+[CRLBezierPath bezierPath](CRLBezierPath, "bezierPath"));
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_OWORD *)(a1 + 32) = xmmword_100EEC438;
  *(_QWORD *)(a1 + 48) = -1;
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = -1;
  return a1;
}

void sub_100327254(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

_QWORD *sub_100327264(_QWORD *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;

  if (a4)
  {
    v6 = result;
    sub_10001E728(result, a4);
    result = (_QWORD *)sub_1003272E8((uint64_t)(v6 + 2), a2, a3, v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_1003272C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v9 + 8) = v10;
  sub_100327514(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_1003272E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  _QWORD v9[3];
  char v10;
  uint64_t v11;
  uint64_t v12;

  v4 = a4;
  v11 = a4;
  v12 = a4;
  v9[0] = a1;
  v9[1] = &v11;
  v9[2] = &v12;
  v10 = 0;
  if (a2 != a3)
  {
    v6 = a2;
    do
    {
      sub_100327390(a1, v4, v6);
      v6 += 56;
      v4 = v12 + 56;
      v12 += 56;
    }
    while (v6 != a3);
  }
  v10 = 1;
  sub_100327490((uint64_t)v9);
  return v4;
}

void sub_10032737C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_100327490((uint64_t)&a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_100327390(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *result;

  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  sub_100327418((_QWORD *)a2, *(const void **)a3, *(_QWORD *)(a3 + 8), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a3 + 8) - *(_QWORD *)a3) >> 3));
  *(_QWORD *)(a2 + 24) = 0;
  *(_QWORD *)(a2 + 32) = 0;
  *(_QWORD *)(a2 + 40) = 0;
  result = sub_10015D7D8((_QWORD *)(a2 + 24), *(const void **)(a3 + 24), *(_QWORD *)(a3 + 32), (uint64_t)(*(_QWORD *)(a3 + 32) - *(_QWORD *)(a3 + 24)) >> 4);
  *(_BYTE *)(a2 + 48) = *(_BYTE *)(a3 + 48);
  return result;
}

void sub_1003273FC(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_100327418(_QWORD *result, const void *a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;
  uint64_t v7;
  size_t v8;

  if (a4)
  {
    v6 = result;
    result = sub_10007D7F0(result, a4);
    v7 = v6[1];
    v8 = a3 - (_QWORD)a2;
    if (v8)
      result = memmove((void *)v6[1], a2, v8);
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_100327474(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100327490(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    sub_1003274C4((uint64_t *)a1);
  return a1;
}

void sub_1003274C4(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (uint64_t *)a1[1];
  v1 = (uint64_t *)a1[2];
  v3 = *v1;
  v4 = *v2;
  if (*v1 != *v2)
  {
    v5 = *a1;
    do
    {
      v3 -= 56;
      sub_1003264C0(v5, v3);
    }
    while (v3 != v4);
  }
}

void sub_100327514(void ***a1)
{
  void **v1;
  void *v2;
  uint64_t v4;
  void *v5;

  v1 = *a1;
  v2 = **a1;
  if (v2)
  {
    v4 = (uint64_t)v1[1];
    v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 56;
        sub_1003264C0((uint64_t)(v1 + 2), v4);
      }
      while ((void *)v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void sub_100327598(uint64_t a1)
{
  _OWORD *v2;
  double v3;
  double v4;

  v3 = *(double *)(a1 + 32);
  v4 = *(double *)(a1 + 40);
  v2 = (_OWORD *)(a1 + 32);
  if (!sub_100061890(v3, v4))
  {
    objc_msgSend(*(id *)a1, "lineToPoint:", v3, v4);
    sub_10031EFA4(*(_QWORD **)(a1 + 8), *(_QWORD *)(a1 + 48), *(double *)(a1 + 56));
    *v2 = xmmword_100EEC438;
    *(_QWORD *)(a1 + 48) = -1;
    *(_QWORD *)(a1 + 56) = 0;
  }
}

float sub_10032760C(_QWORD *a1, _QWORD *a2, _QWORD *a3, float a4, float a5)
{
  float v5;
  float v6;
  float v7;
  uint64_t v8;
  double v9;

  v5 = vabds_f32(a4, a5);
  v6 = (float)((uint64_t)a4 + 1);
  if (a5 != 0.0)
    v6 = a5;
  v7 = (float)((uint64_t)a5 + 1);
  if (a4 == 0.0)
    v6 = a5;
  else
    v7 = a4;
  if (v5 > 1.0)
  {
    a5 = v6;
    a4 = v7;
  }
  v8 = a1[1];
  v9 = (double)((*a3 - *a1) * (*a2 - *a1) + (a3[1] - v8) * (a2[1] - v8))
     / (double)((*a2 - *a1) * (*a2 - *a1) + (a2[1] - v8) * (a2[1] - v8));
  return v9 * a5 + a4 * (1.0 - v9);
}

void sub_1003276A4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003276D4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100327704(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100327734(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

uint64_t sub_100327764(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t *a5)
{
  if (sub_1003D2A48(a1, a2, a3, 1))
  {
    sub_100121AB8(a5);
    (*(void (**)(uint64_t))(*(_QWORD *)a4 + 24))(a4);
    sub_1003D5E34(a1, a4, a5);
  }
  sub_1003CFF0C((_QWORD *)a1);
  return *(unsigned __int8 *)(a1 + 221);
}

double *sub_1003277D0@<X0>(double *result@<X0>, uint64_t a2@<X1>, double **a3@<X2>, uint64_t a4@<X8>)
{
  double v4;
  int64_t v5;
  uint64_t v6;
  double *v7;
  int *v8;
  uint64_t v9;
  double *v10;
  double *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v17;
  uint64_t i;
  double v19;
  double v20;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t *v25;
  uint64_t *v26;
  double *v27;
  uint64_t v28;
  double *v29;
  double *v30;
  double *v31;
  double *v32;
  double v33;
  double v34;
  double v35;
  double v36;
  uint64_t v37;
  __int128 v38;
  _QWORD v39[2];
  __int128 v40;
  _QWORD v41[2];
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;

  v4 = *result;
  v5 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((_QWORD *)result + 1) - *(_QWORD *)result) >> 4);
  v39[0] = 0;
  v40 = 0u;
  v41[0] = 0;
  v42 = 0u;
  v43 = 0;
  v45 = 0u;
  v46 = 0;
  v38 = 0u;
  v6 = *(_QWORD *)&v4 + 48 * (a2 % v5);
  v37 = -1;
  v39[1] = -1;
  v41[1] = -1;
  v44 = -1;
  v7 = (double *)(v6 + 16);
  v8 = (int *)(v6 + 48);
  if (v6 + 16 == v6 + 48)
  {
    *(_OWORD *)(a4 + 24) = 0uLL;
    *(_OWORD *)(a4 + 8) = 0uLL;
    *(_QWORD *)a4 = -1;
    return result;
  }
  v9 = 0;
  v10 = (double *)v39;
  v11 = (double *)&v38 + 1;
  v12 = *(_QWORD *)&v4 + 48 * ((a2 + 1) % v5);
  v13 = v12 + 16;
  v14 = v12 + 48;
  result = *a3;
  do
  {
    v15 = *(int *)v7;
    if ((_DWORD)v15 != -1 && v13 != v14)
    {
      v17 = v7[1];
      for (i = v13; i != v14; i += 16)
      {
        if ((_DWORD)v15 == *(_DWORD *)i)
        {
          v19 = *(double *)(i + 8);
          if (v17 == v19)
            break;
          if (vabdd_f64(v17, v19) <= 1.0)
          {
            v24 = &v37 + 4 * v9;
            *v24 = v15;
            *((_BYTE *)v24 + 8) = v19 > v17;
            *((double *)v24 + 2) = v17;
          }
          else
          {
            v20 = (double)(0xAAAAAAAAAAAAAAABLL
                         * ((uint64_t)(*(_QWORD *)&result[7 * (int)v15 + 1] - *(_QWORD *)&result[7 * (int)v15]) >> 3));
            if (v20 - v19 <= 1.0 && v17 < 1.0)
            {
              v25 = &v37 + 4 * v9;
              *v25 = v15;
              *((_BYTE *)v25 + 8) = 0;
              *((double *)v25 + 2) = v17 + v20;
            }
            else
            {
              if (v20 - v17 > 1.0 || v19 >= 1.0)
                continue;
              v23 = &v37 + 4 * v9;
              *v23 = v15;
              *((_BYTE *)v23 + 8) = 1;
              *((double *)v23 + 2) = v17;
              v19 = v19 + v20;
            }
          }
          *(double *)&v39[4 * v9++] = v19;
        }
      }
    }
    v7 += 2;
  }
  while (v7 != (double *)v8);
  *(_OWORD *)(a4 + 24) = 0u;
  *(_OWORD *)(a4 + 8) = 0u;
  *(_QWORD *)a4 = -1;
  if (v9 > 0)
  {
    v26 = &v37;
    if (v9 != 1)
    {
      v27 = (double *)v41;
      v28 = 32 * v9 - 32;
      v29 = (double *)&v38 + 1;
      v30 = (double *)v39;
      v31 = (double *)&v38 + 1;
      result = (double *)v39;
      v32 = (double *)v41;
      do
      {
        v33 = *v32;
        v32 += 4;
        v34 = vabdd_f64(*(v27 - 1), v33);
        v35 = vabdd_f64(*v11, *v10);
        if (v34 >= v35)
        {
          v10 = v30;
        }
        else
        {
          v26 = (uint64_t *)(v27 - 3);
          v10 = v27;
        }
        if (v34 >= v35)
          v30 = result;
        else
          v30 = v27;
        result = (double *)(v26 + 3);
        if (v34 >= v35)
          v11 = v29;
        else
          v11 = v27 - 1;
        if (v34 >= v35)
          v29 = v31;
        else
          v29 = v27 - 1;
        v31 = (double *)(v26 + 2);
        v27 = v32;
        v28 -= 32;
      }
      while (v28);
    }
    *(_QWORD *)a4 = *v26;
    *(_BYTE *)(a4 + 8) = *((_BYTE *)v26 + 8);
    v36 = *v10;
    *(double *)(a4 + 24) = *v11;
    *(double *)(a4 + 32) = v36;
  }
  return result;
}

void sub_100327A58(_QWORD *a1)
{
  sub_100329C94(a1);
  operator delete();
}

void sub_100327A7C()
{
  operator new();
}

void sub_100327BFC(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

void sub_100327C18(uint64_t a1)
{
  sub_100327DCC(a1 + 16, 0);
}

uint64_t sub_100327C24(uint64_t a1)
{
  return (uint64_t)(*(_QWORD *)(a1 + 24) - *(_QWORD *)(a1 + 16)) >> 3;
}

uint64_t sub_100327C34(uint64_t a1)
{
  uint64_t i;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 + 8);
  for (i = *(_QWORD *)(a1 + 16); i != v3; i = *(_QWORD *)(a1 + 16))
  {
    *(_QWORD *)(a1 + 16) = i - 8;
    v4 = *(_QWORD *)(i - 8);
    *(_QWORD *)(i - 8) = 0;
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

char *sub_100327C94(char *result, char *__src, uint64_t a3, unint64_t a4)
{
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  void **v13;
  char *v14;
  _BYTE *v15;
  char *v16;
  size_t v17;
  void *v18;
  char *v19;

  v7 = result;
  v8 = *((_QWORD *)result + 2);
  v9 = *(char **)result;
  if (0xAAAAAAAAAAAAAAABLL * ((v8 - *(_QWORD *)result) >> 4) < a4)
  {
    if (v9)
    {
      *((_QWORD *)result + 1) = v9;
      operator delete(v9);
      v8 = 0;
      *v7 = 0;
      v7[1] = 0;
      v7[2] = 0;
    }
    if (a4 > 0x555555555555555)
      sub_100007810();
    v10 = 0xAAAAAAAAAAAAAAABLL * (v8 >> 4);
    v11 = 2 * v10;
    if (2 * v10 <= a4)
      v11 = a4;
    if (v10 >= 0x2AAAAAAAAAAAAAALL)
      v12 = 0x555555555555555;
    else
      v12 = v11;
    result = sub_100121D00(v7, v12);
    v14 = (char *)v7[1];
    v13 = (void **)(v7 + 1);
    v9 = v14;
LABEL_16:
    v17 = a3 - (_QWORD)__src;
    if (v17)
    {
      v18 = v9;
      v19 = __src;
      goto LABEL_18;
    }
    goto LABEL_19;
  }
  v13 = (void **)(result + 8);
  v15 = (_BYTE *)*((_QWORD *)result + 1);
  if (0xAAAAAAAAAAAAAAABLL * ((v15 - v9) >> 4) >= a4)
    goto LABEL_16;
  v16 = &__src[16 * ((v15 - v9) >> 4)];
  if (v15 != v9)
  {
    result = (char *)memmove(*(void **)result, __src, v15 - v9);
    v9 = (char *)*v13;
  }
  v17 = a3 - (_QWORD)v16;
  if (v17)
  {
    v18 = v9;
    v19 = v16;
LABEL_18:
    result = (char *)memmove(v18, v19, v17);
  }
LABEL_19:
  *v13 = &v9[v17];
  return result;
}

void sub_100327DCC(uint64_t a1, unint64_t a2)
{
  _QWORD *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD **)(a1 + 8);
  v4 = ((uint64_t)v3 - *(_QWORD *)a1) >> 3;
  if (a2 <= v4)
  {
    if (a2 < v4)
    {
      v5 = *(_QWORD *)a1 + 8 * a2;
      while (v3 != (_QWORD *)v5)
      {
        v7 = *--v3;
        v6 = v7;
        *v3 = 0;
        if (v7)
          (*(void (**)(uint64_t))(*(_QWORD *)v6 + 8))(v6);
      }
      *(_QWORD *)(a1 + 8) = v5;
    }
  }
  else
  {
    sub_100327E50((char **)a1, a2 - v4);
  }
}

void sub_100327E50(char **a1, unint64_t a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  char *v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  __int128 v19;
  char *v20;
  uint64_t v21;
  __int128 v22;
  char *v23;
  uint64_t v24;

  v6 = a1[2];
  v4 = (uint64_t)(a1 + 2);
  v5 = v6;
  v7 = *(char **)(v4 - 8);
  if (a2 <= (v6 - v7) >> 3)
  {
    if (a2)
    {
      bzero(*(void **)(v4 - 8), 8 * a2);
      v7 += 8 * a2;
    }
    a1[1] = v7;
  }
  else
  {
    v8 = *a1;
    v9 = v7 - *a1;
    v10 = a2 + (v9 >> 3);
    if (v10 >> 61)
      sub_100007810();
    v11 = v9 >> 3;
    v12 = v5 - v8;
    if (v12 >> 2 > v10)
      v10 = v12 >> 2;
    if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFF8)
      v13 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v13 = v10;
    v24 = v4;
    if (v13)
    {
      v14 = (char *)sub_10002BA34(v4, v13);
      v8 = *a1;
      v7 = a1[1];
    }
    else
    {
      v14 = 0;
    }
    v15 = &v14[8 * v11];
    v16 = &v14[8 * v13];
    v23 = v16;
    bzero(v15, 8 * a2);
    v17 = &v15[8 * a2];
    *((_QWORD *)&v22 + 1) = v17;
    if (v7 != v8)
    {
      do
      {
        v18 = *((_QWORD *)v7 - 1);
        v7 -= 8;
        *(_QWORD *)v7 = 0;
        *((_QWORD *)v15 - 1) = v18;
        v15 -= 8;
      }
      while (v7 != v8);
      v17 = (char *)*((_QWORD *)&v22 + 1);
      v16 = v23;
    }
    v19 = *(_OWORD *)a1;
    *a1 = v15;
    a1[1] = v17;
    v22 = v19;
    v20 = a1[2];
    a1[2] = v16;
    v23 = v20;
    v21 = v19;
    sub_100327C34((uint64_t)&v21);
  }
}

_QWORD *sub_100327F74(_QWORD *a1, unint64_t a2, _OWORD *a3)
{
  _OWORD *v6;
  _OWORD *v7;
  uint64_t v8;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    sub_10001FC68(a1, a2);
    v6 = (_OWORD *)a1[1];
    v7 = &v6[a2];
    v8 = 16 * a2;
    do
    {
      *v6++ = *a3;
      v8 -= 16;
    }
    while (v8);
    a1[1] = v7;
  }
  return a1;
}

void sub_100327FD8(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *sub_100327FF4(uint64_t a1, uint64_t __dst, char *__src, char *a4, uint64_t a5)
{
  char *v5;
  char *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  int64_t v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  __int128 v27;
  __int128 v28;
  char *v29;
  char *v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  void *__p;
  char *v36;
  char *v37;
  char *v38;
  uint64_t v39;

  v5 = (char *)__dst;
  if (a5 < 1)
    return v5;
  v7 = __src;
  v11 = *(_QWORD *)(a1 + 16);
  v9 = a1 + 16;
  v10 = v11;
  v12 = *(_QWORD *)(v9 - 8);
  if ((uint64_t)(0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v11 - v12) >> 4)) < a5)
  {
    v13 = *(void **)a1;
    v14 = a5 - 0x5555555555555555 * ((uint64_t)(v12 - *(_QWORD *)a1) >> 4);
    if (v14 > 0x555555555555555)
      sub_100007810();
    v15 = 0xAAAAAAAAAAAAAAABLL * ((__dst - (uint64_t)v13) >> 4);
    v16 = 0xAAAAAAAAAAAAAAABLL * ((v10 - (uint64_t)v13) >> 4);
    v17 = 2 * v16;
    if (2 * v16 <= v14)
      v17 = v14;
    if (v16 >= 0x2AAAAAAAAAAAAAALL)
      v18 = 0x555555555555555;
    else
      v18 = v17;
    v39 = v9;
    if (v18)
      v19 = (char *)sub_100121D50(v9, v18);
    else
      v19 = 0;
    v29 = &v19[48 * v15];
    __p = v19;
    v36 = v29;
    v38 = &v19[48 * v18];
    v30 = &v29[48 * a5];
    v31 = 48 * a5;
    do
    {
      v32 = *(_OWORD *)v7;
      v33 = *((_OWORD *)v7 + 2);
      *((_OWORD *)v29 + 1) = *((_OWORD *)v7 + 1);
      *((_OWORD *)v29 + 2) = v33;
      *(_OWORD *)v29 = v32;
      v29 += 48;
      v7 += 48;
      v31 -= 48;
    }
    while (v31);
    v37 = v30;
    v5 = (char *)sub_10032828C((void **)a1, (uint64_t)&__p, v5);
    if (v37 != v36)
      v37 = &v36[(v37 - v36 - 48) % 0x30uLL];
    if (__p)
      operator delete(__p);
    return v5;
  }
  v20 = v12 - __dst;
  if ((uint64_t)(0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v12 - __dst) >> 4)) >= a5)
  {
    v21 = &__src[48 * a5];
    v23 = *(char **)(v9 - 8);
LABEL_17:
    v24 = &v5[48 * a5];
    v25 = &v23[-48 * a5];
    v26 = v23;
    if ((unint64_t)v25 < v12)
    {
      v26 = v23;
      do
      {
        v27 = *(_OWORD *)v25;
        v28 = *((_OWORD *)v25 + 2);
        *((_OWORD *)v26 + 1) = *((_OWORD *)v25 + 1);
        *((_OWORD *)v26 + 2) = v28;
        *(_OWORD *)v26 = v27;
        v26 += 48;
        v25 += 48;
      }
      while ((unint64_t)v25 < v12);
    }
    *(_QWORD *)(a1 + 8) = v26;
    if (v23 != v24)
      memmove(&v5[48 * a5], v5, v23 - v24);
    if (v21 != v7)
      memmove(v5, v7, v21 - v7);
    return v5;
  }
  v21 = &__src[16 * ((uint64_t)(v12 - __dst) >> 4)];
  v22 = a4 - v21;
  if (a4 != v21)
    memmove(*(void **)(v9 - 8), &__src[16 * ((uint64_t)(v12 - __dst) >> 4)], a4 - v21);
  v23 = (char *)(v12 + v22);
  *(_QWORD *)(a1 + 8) = v12 + v22;
  if (v20 >= 1)
    goto LABEL_17;
  return v5;
}

void sub_100328240(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void *sub_10032828C(void **a1, uint64_t a2, char *__src)
{
  void *v5;
  char *v6;
  void *v7;
  char *v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  _BYTE *v12;
  uint64_t v13;
  int64_t v14;
  char *v15;
  void *v16;
  void *v17;

  v5 = *(void **)(a2 + 8);
  v6 = (char *)*a1;
  v7 = v5;
  if (*a1 != __src)
  {
    v8 = __src;
    v9 = *(_QWORD *)(a2 + 8);
    do
    {
      v10 = *((_OWORD *)v8 - 3);
      v11 = *((_OWORD *)v8 - 1);
      v7 = (void *)(v9 - 48);
      *(_OWORD *)(v9 - 32) = *((_OWORD *)v8 - 2);
      *(_OWORD *)(v9 - 16) = v11;
      *(_OWORD *)(v9 - 48) = v10;
      v8 -= 48;
      v9 -= 48;
    }
    while (v8 != v6);
  }
  *(_QWORD *)(a2 + 8) = v7;
  v12 = a1[1];
  v13 = *(_QWORD *)(a2 + 16);
  v14 = v12 - __src;
  if (v12 != __src)
  {
    memmove(*(void **)(a2 + 16), __src, v12 - __src);
    v7 = *(void **)(a2 + 8);
  }
  *(_QWORD *)(a2 + 16) = v13 + v14;
  v15 = (char *)*a1;
  *a1 = v7;
  *(_QWORD *)(a2 + 8) = v15;
  v16 = a1[1];
  a1[1] = *(void **)(a2 + 16);
  *(_QWORD *)(a2 + 16) = v16;
  v17 = a1[2];
  a1[2] = *(void **)(a2 + 24);
  *(_QWORD *)(a2 + 24) = v17;
  *(_QWORD *)a2 = *(_QWORD *)(a2 + 8);
  return v5;
}

void sub_100328368(uint64_t **a1, unint64_t a2, uint64_t a3, char a4)
{
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  int v16;
  int v17;
  int v18;
  uint64_t *v19;
  uint64_t v20;
  int v21;
  int v22;
  int v23;
  double *v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  double *v28;
  uint64_t *v30;
  uint64_t i;
  uint64_t v32;
  int v33;
  int v34;
  int v35;
  double *v36;
  uint64_t v37;
  uint64_t v38;
  double v39;
  double *v40;
  unint64_t v42;
  uint64_t **v43;
  uint64_t **v44;
  uint64_t v45;
  int v46;
  int v47;
  int v48;
  double *v49;
  double *v50;
  double v51;
  uint64_t **v53;
  uint64_t v54;
  int v55;
  int v56;
  int v57;
  double *v58;
  double *v59;
  double v60;
  uint64_t **v62;
  uint64_t *v63;
  uint64_t v64;
  int v65;
  int v66;
  int v67;
  uint64_t *v68;
  uint64_t v69;
  int v70;
  int v71;
  int v72;
  double *v73;
  double *v74;
  double *v75;
  double v76;
  double *v77;
  uint64_t **v79;
  uint64_t v80;
  int v81;
  int v82;
  int v83;
  double *v84;
  double *v85;
  double v86;
  uint64_t *v88;
  BOOL v89;
  uint64_t v90;
  int v91;
  int v92;
  int v93;
  double *v94;
  uint64_t **v96;
  uint64_t v97;
  int v98;
  int v99;
  int v100;
  double *v101;
  double *v102;
  double v103;
  uint64_t **v105;
  uint64_t v106;
  int v107;
  int v108;
  int v109;
  double *v110;
  double *v111;
  double v112;
  unint64_t v114;
  int v115;
  double *v116;
  double *v117;
  uint64_t *v118;
  uint64_t *v119;
  uint64_t v120;
  uint64_t v121;
  int v122;
  int v123;
  int v124;
  uint64_t **v125;
  uint64_t v126;
  int v127;
  int v128;
  int v129;
  double *v130;
  double *v131;
  double v132;
  double *v133;
  double v134;
  uint64_t *v136;
  uint64_t v137;
  int v138;
  int v139;
  int v140;
  double *v141;
  double *v142;
  double v143;
  double *v144;
  uint64_t *v146;
  unint64_t v147;
  uint64_t *v148;
  uint64_t *v149;
  uint64_t v150;
  int v151;
  int v152;
  int v153;
  uint64_t v154;
  int v155;
  int v156;
  int v157;
  double *v158;
  uint64_t v159;
  uint64_t v160;
  double *v161;
  double *v162;
  uint64_t v164;
  unint64_t v165;
  BOOL v167;
  uint64_t v168;
  unint64_t v169;
  unint64_t v170;
  uint64_t *v171;
  uint64_t *v172;
  uint64_t v173;
  int v174;
  int v175;
  int v176;
  uint64_t v177;
  int v178;
  int v179;
  int v180;
  double *v181;
  uint64_t v182;
  uint64_t v183;
  double *v184;
  double *v185;
  __int16 v187;
  unint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t *v191;
  uint64_t v192;
  int v193;
  int v194;
  int v195;
  uint64_t v196;
  int v197;
  int v198;
  int v199;
  double *v200;
  uint64_t v201;
  uint64_t v202;
  double *v203;
  double *v204;
  int64_t v206;
  int64_t v207;
  int64_t v208;
  uint64_t v209;
  uint64_t **v210;
  uint64_t *v211;
  uint64_t v212;
  int v213;
  int v214;
  int v215;
  uint64_t v216;
  int v217;
  int v218;
  int v219;
  double *v220;
  uint64_t v221;
  uint64_t v222;
  double *v223;
  double *v224;
  uint64_t **v226;
  uint64_t *v227;
  uint64_t v228;
  int v229;
  int v230;
  int v231;
  uint64_t v232;
  int v233;
  int v234;
  int v235;
  double *v236;
  double *v237;
  double *v238;
  double *v239;
  double *v240;
  __int16 v242;
  uint64_t **v243;
  uint64_t *v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t *v247;
  uint64_t v248;
  int v249;
  int v250;
  int v251;
  uint64_t v252;
  int v253;
  int v254;
  int v255;
  double *v256;
  uint64_t v257;
  uint64_t v258;
  double *v259;
  double *v260;
  uint64_t v262;
  int v263;
  int v264;
  int v265;
  uint64_t v266;
  int v267;
  int v268;
  int v269;
  double *v270;
  uint64_t v271;
  uint64_t v272;
  double *v273;
  double *v274;
  uint64_t v276;
  uint64_t v277;
  unint64_t v278;
  unint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t *v282;
  uint64_t v283;
  int v284;
  int v285;
  int v286;
  uint64_t v287;
  int v288;
  int v289;
  int v290;
  double *v291;
  uint64_t v292;
  uint64_t v293;
  double *v294;
  double *v295;
  uint64_t *v297;
  uint64_t v298;
  uint64_t v299;
  unint64_t v300;
  unint64_t v301;
  unint64_t v302;
  uint64_t *v303;
  uint64_t v304;
  int v305;
  int v306;
  int v307;
  uint64_t v308;
  int v309;
  int v310;
  int v311;
  double *v312;
  uint64_t v313;
  uint64_t v314;
  double *v315;
  double *v316;
  __int16 v318;
  __int16 v319;
  unint64_t v320;
  unint64_t v321;
  uint64_t v322;
  int v323;
  int v324;
  int v325;
  uint64_t v326;
  int v327;
  int v328;
  int v329;
  double *v330;
  uint64_t v331;
  uint64_t v332;
  double *v333;
  double *v334;
  uint64_t *v336;
  uint64_t **v338;
  uint64_t *v339;
  uint64_t *v340;
  uint64_t v341;
  int v342;
  int v343;
  int v344;
  uint64_t v345;
  int v346;
  int v347;
  int v348;
  double *v349;
  uint64_t v350;
  uint64_t v351;
  double *v352;
  double *v353;
  uint64_t *v355;
  uint64_t **v356;
  __int16 v357;
  uint64_t *v358;
  uint64_t *v359;
  uint64_t v360;
  int v361;
  int v362;
  int v363;
  uint64_t v364;
  int v365;
  int v366;
  int v367;
  double *v368;
  double *v369;
  double *v370;
  double *v371;
  double *v372;
  __int128 v374;
  __int128 v375;
  __int128 v376;
  __int128 v377;
  __int128 v378;

__n128 sub_10032927C(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4, uint64_t **a5)
{
  __n128 result;
  uint64_t *v11;
  uint64_t v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  int v17;
  int v18;
  int v19;
  unint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t *v23;
  double *v24;
  __int16 v26;
  uint64_t *v27;
  uint64_t v28;
  int v29;
  int v30;
  int v31;
  uint64_t v32;
  int v33;
  int v34;
  int v35;
  unint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t *v39;
  double *v40;
  __int16 v42;
  uint64_t *v43;
  uint64_t v44;
  int v45;
  int v46;
  int v47;
  uint64_t v48;
  int v49;
  int v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t *v54;
  double *v55;
  __int16 v56;
  uint64_t *v57;
  uint64_t v58;
  int v59;
  int v60;
  int v61;
  uint64_t v62;
  int v63;
  int v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t *v68;
  double *v69;
  __int16 v70;
  __int128 v71;
  __n128 v72;
  __n128 v73;
  __n128 v74;

  sub_100329A98(a1, a2, a3, a4);
  v11 = *a4;
  v12 = **a5;
  v13 = *(_DWORD *)(v12 + 16);
  v14 = *(_DWORD *)(v12 + 32);
  if (v13 >= v14)
    v15 = *(_DWORD *)(v12 + 32);
  else
    v15 = *(_DWORD *)(v12 + 16);
  v16 = *v11;
  v17 = *(_DWORD *)(*v11 + 16);
  v18 = *(_DWORD *)(*v11 + 32);
  if (v17 >= v18)
    v19 = *(_DWORD *)(*v11 + 32);
  else
    v19 = *(_DWORD *)(*v11 + 16);
  if (v15 < v19)
    goto LABEL_18;
  v20 = (unint64_t *)(v16 + 24);
  v21 = v12 + 40;
  v22 = v12 + 24;
  v23 = (unint64_t *)(v16 + 40);
  if (v17 < v18)
    v23 = v20;
  result.n128_u64[0] = *v23;
  v24 = (double *)(v13 >= v14 ? v21 : v22);
  if (v15 == v19 && *v24 < result.n128_f64[0])
  {
LABEL_18:
    v71 = *(_OWORD *)a4;
    v26 = *((_WORD *)a5 + 4);
    *a4 = *a5;
    *((_WORD *)a4 + 4) = v26;
    *a5 = (uint64_t *)v71;
    *((_WORD *)a5 + 4) = WORD4(v71);
    v27 = *a3;
    v28 = **a4;
    v29 = *(_DWORD *)(v28 + 16);
    v30 = *(_DWORD *)(v28 + 32);
    if (v29 >= v30)
      v31 = *(_DWORD *)(v28 + 32);
    else
      v31 = *(_DWORD *)(v28 + 16);
    v32 = *v27;
    v33 = *(_DWORD *)(*v27 + 16);
    v34 = *(_DWORD *)(*v27 + 32);
    if (v33 >= v34)
      v35 = *(_DWORD *)(*v27 + 32);
    else
      v35 = *(_DWORD *)(*v27 + 16);
    if (v31 < v35)
      goto LABEL_35;
    v36 = (unint64_t *)(v32 + 24);
    v37 = v28 + 40;
    v38 = v28 + 24;
    v39 = (unint64_t *)(v32 + 40);
    if (v33 < v34)
      v39 = v36;
    result.n128_u64[0] = *v39;
    v40 = (double *)(v29 >= v30 ? v37 : v38);
    if (v31 == v35 && *v40 < result.n128_f64[0])
    {
LABEL_35:
      result = *(__n128 *)a3;
      v72 = *(__n128 *)a3;
      v42 = *((_WORD *)a4 + 4);
      *a3 = *a4;
      *((_WORD *)a3 + 4) = v42;
      *a4 = (uint64_t *)v72.n128_u64[0];
      *((_WORD *)a4 + 4) = v72.n128_u16[4];
      v43 = *a2;
      v44 = **a3;
      v45 = *(_DWORD *)(v44 + 16);
      v46 = *(_DWORD *)(v44 + 32);
      if (v45 >= v46)
        v47 = *(_DWORD *)(v44 + 32);
      else
        v47 = *(_DWORD *)(v44 + 16);
      v48 = *v43;
      v49 = *(_DWORD *)(*v43 + 16);
      v50 = *(_DWORD *)(*v43 + 32);
      if (v49 >= v50)
        v51 = *(_DWORD *)(*v43 + 32);
      else
        v51 = *(_DWORD *)(*v43 + 16);
      if (v47 < v51)
        goto LABEL_49;
      v52 = v44 + 40;
      v53 = v44 + 24;
      v54 = (unint64_t *)(v48 + 40);
      if (v49 < v50)
        v54 = (unint64_t *)(v48 + 24);
      v55 = (double *)(v45 >= v46 ? v52 : v53);
      if (v47 == v51)
      {
        result.n128_u64[0] = *v54;
        if (*v55 < *(double *)v54)
        {
LABEL_49:
          result = *(__n128 *)a2;
          v73 = *(__n128 *)a2;
          v56 = *((_WORD *)a3 + 4);
          *a2 = *a3;
          *((_WORD *)a2 + 4) = v56;
          *a3 = (uint64_t *)v73.n128_u64[0];
          *((_WORD *)a3 + 4) = v73.n128_u16[4];
          v57 = *a1;
          v58 = **a2;
          v59 = *(_DWORD *)(v58 + 16);
          v60 = *(_DWORD *)(v58 + 32);
          if (v59 >= v60)
            v61 = *(_DWORD *)(v58 + 32);
          else
            v61 = *(_DWORD *)(v58 + 16);
          v62 = *v57;
          v63 = *(_DWORD *)(*v57 + 16);
          v64 = *(_DWORD *)(*v57 + 32);
          if (v63 >= v64)
            v65 = *(_DWORD *)(*v57 + 32);
          else
            v65 = *(_DWORD *)(*v57 + 16);
          if (v61 < v65)
            goto LABEL_63;
          v66 = v58 + 40;
          v67 = v58 + 24;
          v68 = (unint64_t *)(v62 + 40);
          if (v63 < v64)
            v68 = (unint64_t *)(v62 + 24);
          v69 = (double *)(v59 >= v60 ? v66 : v67);
          if (v61 == v65)
          {
            result.n128_u64[0] = *v68;
            if (*v69 < *(double *)v68)
            {
LABEL_63:
              result = *(__n128 *)a1;
              v74 = *(__n128 *)a1;
              v70 = *((_WORD *)a2 + 4);
              *a1 = *a2;
              *((_WORD *)a1 + 4) = v70;
              *a2 = (uint64_t *)v74.n128_u64[0];
              *((_WORD *)a2 + 4) = v74.n128_u16[4];
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t **sub_10032951C(uint64_t **result, uint64_t **a2, uint64_t **a3)
{
  uint64_t *v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  double *v12;
  double *v13;
  double v14;
  double *v15;
  double v16;
  uint64_t v18;
  int v19;
  int v20;
  int v21;
  double *v22;
  double *v23;
  __int16 v25;
  uint64_t *v26;
  uint64_t v27;
  int v28;
  int v29;
  int v30;
  uint64_t v31;
  int v32;
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  double *v37;
  double *v38;
  __int16 v39;
  uint64_t v40;
  int v41;
  int v42;
  int v43;
  double *v44;
  uint64_t v45;
  uint64_t v46;
  double *v47;
  double v48;
  double *v49;
  __int16 v51;
  uint64_t *v52;
  uint64_t v53;
  int v54;
  int v55;
  int v56;
  uint64_t v57;
  int v58;
  int v59;
  int v60;
  uint64_t **v61;
  double *v62;
  double *v63;
  __int16 v64;
  __int16 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;

  v3 = *result;
  v4 = **a2;
  v5 = *(_DWORD *)(v4 + 16);
  v6 = *(_DWORD *)(v4 + 32);
  if (v5 >= v6)
    v7 = *(_DWORD *)(v4 + 32);
  else
    v7 = *(_DWORD *)(v4 + 16);
  v8 = *v3;
  v9 = *(_DWORD *)(*v3 + 16);
  v10 = *(_DWORD *)(*v3 + 32);
  if (v9 >= v10)
    v11 = *(_DWORD *)(*v3 + 32);
  else
    v11 = *(_DWORD *)(*v3 + 16);
  if (v7 >= v11)
  {
    v12 = (double *)(v8 + 24);
    v13 = (double *)(v8 + 40);
    if (v9 < v10)
      v13 = v12;
    v14 = *v13;
    v15 = (double *)(v5 >= v6 ? v4 + 40 : v4 + 24);
    v16 = *v15;
    if (v7 != v11 || v16 >= v14)
    {
      v18 = **a3;
      v19 = *(_DWORD *)(v18 + 16);
      v20 = *(_DWORD *)(v18 + 32);
      if (v19 >= v20)
        v21 = *(_DWORD *)(v18 + 32);
      else
        v21 = *(_DWORD *)(v18 + 16);
      if (v21 < v7)
        goto LABEL_28;
      v22 = (double *)(v18 + 40);
      v23 = (double *)(v18 + 24);
      if (v19 >= v20)
        v23 = v22;
      if (v21 == v7 && *v23 < v16)
      {
LABEL_28:
        v66 = *(_OWORD *)a2;
        v25 = *((_WORD *)a3 + 4);
        *a2 = *a3;
        *((_WORD *)a2 + 4) = v25;
        *a3 = (uint64_t *)v66;
        *((_WORD *)a3 + 4) = WORD4(v66);
        v26 = *result;
        v27 = **a2;
        v28 = *(_DWORD *)(v27 + 16);
        v29 = *(_DWORD *)(v27 + 32);
        if (v28 >= v29)
          v30 = *(_DWORD *)(v27 + 32);
        else
          v30 = *(_DWORD *)(v27 + 16);
        v31 = *v26;
        v32 = *(_DWORD *)(*v26 + 16);
        v33 = *(_DWORD *)(*v26 + 32);
        if (v32 >= v33)
          v34 = *(_DWORD *)(*v26 + 32);
        else
          v34 = *(_DWORD *)(*v26 + 16);
        if (v30 < v34)
          goto LABEL_42;
        v35 = v27 + 40;
        v36 = v27 + 24;
        v37 = (double *)(v31 + 40);
        if (v32 < v33)
          v37 = (double *)(v31 + 24);
        v38 = (double *)(v28 >= v29 ? v35 : v36);
        if (v30 == v34 && *v38 < *v37)
        {
LABEL_42:
          v67 = *(_OWORD *)result;
          v39 = *((_WORD *)a2 + 4);
          *result = *a2;
          *((_WORD *)result + 4) = v39;
          *a2 = (uint64_t *)v67;
          *((_WORD *)a2 + 4) = WORD4(v67);
        }
      }
      return result;
    }
  }
  v40 = **a3;
  v41 = *(_DWORD *)(v40 + 16);
  v42 = *(_DWORD *)(v40 + 32);
  if (v41 >= v42)
    v43 = *(_DWORD *)(v40 + 32);
  else
    v43 = *(_DWORD *)(v40 + 16);
  if (v43 < v7)
    goto LABEL_71;
  v44 = (double *)(v4 + 24);
  v45 = v40 + 40;
  v46 = v40 + 24;
  v47 = (double *)(v4 + 40);
  if (v5 < v6)
    v47 = v44;
  v48 = *v47;
  v49 = (double *)(v41 >= v42 ? v45 : v46);
  if (v43 == v7 && *v49 < v48)
  {
LABEL_71:
    v69 = *(_OWORD *)result;
    v65 = *((_WORD *)a3 + 4);
    *result = *a3;
    *((_WORD *)result + 4) = v65;
    goto LABEL_72;
  }
  v68 = *(_OWORD *)result;
  v51 = *((_WORD *)a2 + 4);
  *result = *a2;
  *((_WORD *)result + 4) = v51;
  *a2 = (uint64_t *)v68;
  *((_WORD *)a2 + 4) = WORD4(v68);
  v52 = *a2;
  v53 = **a3;
  v54 = *(_DWORD *)(v53 + 16);
  v55 = *(_DWORD *)(v53 + 32);
  if (v54 >= v55)
    v56 = *(_DWORD *)(v53 + 32);
  else
    v56 = *(_DWORD *)(v53 + 16);
  v57 = *v52;
  v58 = *(_DWORD *)(*v52 + 16);
  v59 = *(_DWORD *)(*v52 + 32);
  if (v58 >= v59)
    v60 = *(_DWORD *)(*v52 + 32);
  else
    v60 = *(_DWORD *)(*v52 + 16);
  if (v56 < v60)
    goto LABEL_70;
  v61 = (uint64_t **)(v53 + 40);
  result = (uint64_t **)(v53 + 24);
  v62 = (double *)(v57 + 40);
  if (v58 < v59)
    v62 = (double *)(v57 + 24);
  v63 = (double *)(v54 >= v55 ? v61 : result);
  if (v56 == v60 && *v63 < *v62)
  {
LABEL_70:
    v69 = *(_OWORD *)a2;
    v64 = *((_WORD *)a3 + 4);
    *a2 = *a3;
    *((_WORD *)a2 + 4) = v64;
LABEL_72:
    *a3 = (uint64_t *)v69;
    *((_WORD *)a3 + 4) = WORD4(v69);
  }
  return result;
}

BOOL sub_1003297C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _BOOL8 result;
  _QWORD *v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  int v14;
  int v15;
  int v16;
  double *v17;
  uint64_t v18;
  uint64_t v19;
  double *v20;
  double *v21;
  __int16 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t *v28;
  uint64_t *v29;
  uint64_t v30;
  int v31;
  int v32;
  int v33;
  uint64_t v34;
  int v35;
  int v36;
  int v37;
  double *v38;
  uint64_t v39;
  uint64_t v40;
  double *v41;
  double *v42;
  __int16 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  int v49;
  int v50;
  int v51;
  uint64_t v52;
  int v53;
  int v54;
  int v55;
  double *v56;
  uint64_t v57;
  uint64_t v58;
  double *v59;
  double *v60;
  __int128 v62;

  v4 = (a2 - a1) >> 4;
  result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      v7 = *(uint64_t **)(a2 - 16);
      v6 = (_QWORD *)(a2 - 16);
      v8 = *(uint64_t **)a1;
      v9 = *v7;
      v10 = *(_DWORD *)(*v7 + 16);
      v11 = *(_DWORD *)(*v7 + 32);
      if (v10 >= v11)
        v12 = v11;
      else
        v12 = v10;
      v13 = *v8;
      v14 = *(_DWORD *)(*v8 + 16);
      v15 = *(_DWORD *)(*v8 + 32);
      if (v14 >= v15)
        v16 = *(_DWORD *)(*v8 + 32);
      else
        v16 = *(_DWORD *)(*v8 + 16);
      if (v12 < v16)
        goto LABEL_19;
      v17 = (double *)(v13 + 24);
      v18 = v9 + 40;
      v19 = v9 + 24;
      v20 = (double *)(v13 + 40);
      if (v14 < v15)
        v20 = v17;
      v21 = (double *)(v10 >= v11 ? v18 : v19);
      if (v12 == v16 && *v21 < *v20)
      {
LABEL_19:
        v62 = *(_OWORD *)a1;
        v23 = *(_WORD *)(a2 - 8);
        *(_QWORD *)a1 = *v6;
        *(_WORD *)(a1 + 8) = v23;
        *v6 = v62;
        *(_WORD *)(a2 - 8) = WORD4(v62);
      }
      return result;
    case 3:
      sub_10032951C((uint64_t **)a1, (uint64_t **)(a1 + 16), (uint64_t **)(a2 - 16));
      return 1;
    case 4:
      sub_100329A98((uint64_t **)a1, (uint64_t **)(a1 + 16), (uint64_t **)(a1 + 32), (uint64_t **)(a2 - 16));
      return 1;
    case 5:
      sub_10032927C((uint64_t **)a1, (uint64_t **)(a1 + 16), (uint64_t **)(a1 + 32), (uint64_t **)(a1 + 48), (uint64_t **)(a2 - 16));
      return 1;
    default:
      v24 = a1 + 32;
      sub_10032951C((uint64_t **)a1, (uint64_t **)(a1 + 16), (uint64_t **)(a1 + 32));
      v25 = a1 + 48;
      if (a1 + 48 == a2)
        return 1;
      v26 = 0;
      v27 = 0;
      break;
  }
  while (1)
  {
    v28 = *(uint64_t **)v25;
    v29 = *(uint64_t **)v24;
    v30 = **(_QWORD **)v25;
    v31 = *(_DWORD *)(v30 + 16);
    v32 = *(_DWORD *)(v30 + 32);
    v33 = v31 >= v32 ? *(_DWORD *)(v30 + 32) : *(_DWORD *)(v30 + 16);
    v34 = *v29;
    v35 = *(_DWORD *)(*v29 + 16);
    v36 = *(_DWORD *)(*v29 + 32);
    v37 = v35 >= v36 ? *(_DWORD *)(*v29 + 32) : *(_DWORD *)(*v29 + 16);
    if (v33 < v37)
      goto LABEL_70;
    v38 = (double *)(v34 + 24);
    v39 = v30 + 40;
    v40 = v30 + 24;
    v41 = (double *)(v34 + 40);
    if (v35 < v36)
      v41 = v38;
    v42 = (double *)(v31 >= v32 ? v39 : v40);
    if (v33 == v37 && *v42 < *v41)
    {
LABEL_70:
      v44 = *(_WORD *)(v25 + 8);
      *(_QWORD *)v25 = *(_QWORD *)v24;
      *(_WORD *)(v25 + 8) = *(_WORD *)(v24 + 8);
      v45 = a1;
      if (v24 != a1)
      {
        v46 = v26;
        do
        {
          v47 = *(uint64_t **)(a1 + v46 + 16);
          v48 = *v28;
          v49 = *(_DWORD *)(*v28 + 16);
          v50 = *(_DWORD *)(*v28 + 32);
          if (v49 >= v50)
            v51 = *(_DWORD *)(*v28 + 32);
          else
            v51 = *(_DWORD *)(*v28 + 16);
          v52 = *v47;
          v53 = *(_DWORD *)(*v47 + 16);
          v54 = *(_DWORD *)(*v47 + 32);
          if (v53 >= v54)
            v55 = *(_DWORD *)(*v47 + 32);
          else
            v55 = *(_DWORD *)(*v47 + 16);
          if (v51 >= v55)
          {
            v56 = (double *)(v52 + 24);
            v57 = v48 + 40;
            v58 = v48 + 24;
            v59 = (double *)(v52 + 40);
            if (v53 < v54)
              v59 = v56;
            v60 = (double *)(v49 >= v50 ? v57 : v58);
            if (v51 != v55 || *v60 >= *v59)
            {
              v45 = a1 + v46 + 32;
              goto LABEL_60;
            }
          }
          *(_QWORD *)(a1 + v46 + 32) = *(_QWORD *)(a1 + v46 + 16);
          *(_WORD *)(a1 + v46 + 40) = *(_WORD *)(a1 + v46 + 24);
          v46 -= 16;
        }
        while (v46 != -32);
        v45 = a1;
      }
LABEL_60:
      *(_QWORD *)v45 = v28;
      *(_WORD *)(v45 + 8) = v44;
      if (++v27 == 8)
        return v25 + 16 == a2;
    }
    v24 = v25;
    v26 += 16;
    v25 += 16;
    if (v25 == a2)
      return 1;
  }
}

__n128 sub_100329A98(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  __n128 result;
  uint64_t *v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  uint64_t v14;
  int v15;
  int v16;
  int v17;
  unint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t *v21;
  double *v22;
  __int16 v24;
  uint64_t *v25;
  uint64_t v26;
  int v27;
  int v28;
  int v29;
  uint64_t v30;
  int v31;
  int v32;
  int v33;
  unint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t *v37;
  double *v38;
  __int16 v40;
  uint64_t *v41;
  uint64_t v42;
  int v43;
  int v44;
  int v45;
  uint64_t v46;
  int v47;
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t *v52;
  double *v53;
  __int16 v54;
  __int128 v55;
  __n128 v56;
  __n128 v57;

  sub_10032951C(a1, a2, a3);
  v9 = *a3;
  v10 = **a4;
  v11 = *(_DWORD *)(v10 + 16);
  v12 = *(_DWORD *)(v10 + 32);
  if (v11 >= v12)
    v13 = *(_DWORD *)(v10 + 32);
  else
    v13 = *(_DWORD *)(v10 + 16);
  v14 = *v9;
  v15 = *(_DWORD *)(*v9 + 16);
  v16 = *(_DWORD *)(*v9 + 32);
  if (v15 >= v16)
    v17 = *(_DWORD *)(*v9 + 32);
  else
    v17 = *(_DWORD *)(*v9 + 16);
  if (v13 < v17)
    goto LABEL_18;
  v18 = (unint64_t *)(v14 + 24);
  v19 = v10 + 40;
  v20 = v10 + 24;
  v21 = (unint64_t *)(v14 + 40);
  if (v15 < v16)
    v21 = v18;
  result.n128_u64[0] = *v21;
  v22 = (double *)(v11 >= v12 ? v19 : v20);
  if (v13 == v17 && *v22 < result.n128_f64[0])
  {
LABEL_18:
    v55 = *(_OWORD *)a3;
    v24 = *((_WORD *)a4 + 4);
    *a3 = *a4;
    *((_WORD *)a3 + 4) = v24;
    *a4 = (uint64_t *)v55;
    *((_WORD *)a4 + 4) = WORD4(v55);
    v25 = *a2;
    v26 = **a3;
    v27 = *(_DWORD *)(v26 + 16);
    v28 = *(_DWORD *)(v26 + 32);
    if (v27 >= v28)
      v29 = *(_DWORD *)(v26 + 32);
    else
      v29 = *(_DWORD *)(v26 + 16);
    v30 = *v25;
    v31 = *(_DWORD *)(*v25 + 16);
    v32 = *(_DWORD *)(*v25 + 32);
    if (v31 >= v32)
      v33 = *(_DWORD *)(*v25 + 32);
    else
      v33 = *(_DWORD *)(*v25 + 16);
    if (v29 < v33)
      goto LABEL_35;
    v34 = (unint64_t *)(v30 + 24);
    v35 = v26 + 40;
    v36 = v26 + 24;
    v37 = (unint64_t *)(v30 + 40);
    if (v31 < v32)
      v37 = v34;
    result.n128_u64[0] = *v37;
    v38 = (double *)(v27 >= v28 ? v35 : v36);
    if (v29 == v33 && *v38 < result.n128_f64[0])
    {
LABEL_35:
      result = *(__n128 *)a2;
      v56 = *(__n128 *)a2;
      v40 = *((_WORD *)a3 + 4);
      *a2 = *a3;
      *((_WORD *)a2 + 4) = v40;
      *a3 = (uint64_t *)v56.n128_u64[0];
      *((_WORD *)a3 + 4) = v56.n128_u16[4];
      v41 = *a1;
      v42 = **a2;
      v43 = *(_DWORD *)(v42 + 16);
      v44 = *(_DWORD *)(v42 + 32);
      if (v43 >= v44)
        v45 = *(_DWORD *)(v42 + 32);
      else
        v45 = *(_DWORD *)(v42 + 16);
      v46 = *v41;
      v47 = *(_DWORD *)(*v41 + 16);
      v48 = *(_DWORD *)(*v41 + 32);
      if (v47 >= v48)
        v49 = *(_DWORD *)(*v41 + 32);
      else
        v49 = *(_DWORD *)(*v41 + 16);
      if (v45 < v49)
        goto LABEL_49;
      v50 = v42 + 40;
      v51 = v42 + 24;
      v52 = (unint64_t *)(v46 + 40);
      if (v47 < v48)
        v52 = (unint64_t *)(v46 + 24);
      v53 = (double *)(v43 >= v44 ? v50 : v51);
      if (v45 == v49)
      {
        result.n128_u64[0] = *v52;
        if (*v53 < *(double *)v52)
        {
LABEL_49:
          result = *(__n128 *)a1;
          v57 = *(__n128 *)a1;
          v54 = *((_WORD *)a2 + 4);
          *a1 = *a2;
          *((_WORD *)a1 + 4) = v54;
          *a2 = (uint64_t *)v57.n128_u64[0];
          *((_WORD *)a2 + 4) = v57.n128_u16[4];
        }
      }
    }
  }
  return result;
}

_QWORD *sub_100329C94(_QWORD *a1)
{
  void **v2;
  void *v3;
  void **v5;

  *a1 = off_101252020;
  v2 = (void **)(a1 + 2);
  sub_100327DCC((uint64_t)(a1 + 2), 0);
  v3 = (void *)a1[5];
  if (v3)
  {
    a1[6] = v3;
    operator delete(v3);
  }
  v5 = v2;
  sub_100329CF8(&v5);
  return a1;
}

void sub_100329CF8(void ***a1)
{
  void **v1;
  _QWORD *v2;
  _QWORD *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *a1;
  v2 = **a1;
  if (v2)
  {
    v4 = v1[1];
    v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        v7 = *--v4;
        v6 = v7;
        *v4 = 0;
        if (v7)
          (*(void (**)(uint64_t))(*(_QWORD *)v6 + 8))(v6);
      }
      while (v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void sub_100329D74(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100329DA4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100329DD4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100329E04(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100329E34(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100329E64(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100329E94(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100329EC4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

uint64_t sub_100329EF4(uint64_t a1, uint64_t a2)
{
  return sub_10001E640(a1 + 48, (uint64_t *)(a2 + 48));
}

uint64_t sub_100329F00(uint64_t a1)
{
  return sub_10032A914(a1 + 48);
}

uint64_t sub_100329F08(uint64_t result, uint64_t a2)
{
  *(_DWORD *)(result + 48) = *(_DWORD *)(a2 + 48);
  return result;
}

void sub_100329F18(_QWORD *a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t *v13;
  void **v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int16 v25;
  uint64_t v26;
  uint64_t v27;

  v11 = 0;
  v12 = a2;
  v9 = 0;
  v10 = 0;
  v3 = a1[6] + 24 * a2;
  LODWORD(v14) = 0;
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v20 = 0u;
  v21 = 0u;
  v22 = 0;
  v23 = 1;
  v24 = xmmword_100EEF410;
  v25 = 0;
  v26 = 0;
  v27 = 0;
  sub_1004904D8((uint64_t *)&v14, v3, 0, 3);
  sub_100493B70((uint64_t)&v14, &v9, 1, 2.0);
  if (v10 == v9)
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101252170);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E2161C();
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101252190);
    v6 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)v6, OS_LOG_TYPE_ERROR))
    {
      objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
      sub_100DE7E60();
    }

    v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "BOOL _hasAnyIntersectionBetweenPaths(CRLBezierPath *const  _Nonnull __strong, CRLBezierPath *const  _Nonnull __strong)_block_invoke"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLBezierPathBooleanOperationHelper.mm"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v7, v8, 1490, 0, "Unable to stroke path for intersection test.");

  }
  else
  {
    os_unfair_lock_lock((os_unfair_lock_t)(*(_QWORD *)(a1[4] + 8) + 48));
    v4 = *(_QWORD *)(a1[5] + 8) + 48;
    v13 = &v12;
    v5 = sub_10032A998(v4, &v12, (uint64_t)&unk_100EEC1A0, (uint64_t **)&v13) + 3;
    if (v5 != &v9)
      sub_10032AC2C((uint64_t)v5, v9, v10, 0xAAAAAAAAAAAAAAABLL * ((v10 - v9) >> 3));
    os_unfair_lock_unlock((os_unfair_lock_t)(*(_QWORD *)(a1[4] + 8) + 48));
  }
  sub_10032ADEC((uint64_t)&v14);
  v14 = (void **)&v9;
  sub_100121A78(&v14);
}

void sub_10032A1B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void **a18)
{
  void *v18;
  void *v19;

  v19 = v18;

  sub_10032ADEC((uint64_t)&a18);
  a18 = (void **)&a10;
  sub_100121A78(&a18);
  _Unwind_Resume(a1);
}

void sub_10032A210(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10032A240(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

_QWORD *sub_10032A270(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 0;
  v2 = (_QWORD *)(a1 + 48);
  v2[2] = 0;
  return sub_10032AFD4(v2, *(_QWORD *)(a2 + 48), *(_QWORD *)(a2 + 56), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a2 + 56) - *(_QWORD *)(a2 + 48)) >> 3));
}

void sub_10032A298(uint64_t a1)
{
  void **v1;

  v1 = (void **)(a1 + 48);
  sub_100121A78(&v1);
}

__n128 *sub_10032A2C0(uint64_t *a1, __n128 *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  __n128 *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  uint64_t v27;

  v5 = a2;
  if (a5 >= 1)
  {
    v11 = a1[2];
    v9 = (uint64_t)(a1 + 2);
    v10 = v11;
    v12 = *(_QWORD *)(v9 - 8);
    if ((uint64_t)(0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v11 - v12) >> 3)) >= a5)
    {
      v20 = v12 - (_QWORD)a2;
      if ((uint64_t)(0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v12 - (_QWORD)a2) >> 3)) >= a5)
      {
        v21 = a3 + 24 * a5;
      }
      else
      {
        v21 = a3 + 8 * ((uint64_t)(v12 - (_QWORD)a2) >> 3);
        a1[1] = (uint64_t)sub_10032A628(v9, v21, a4, *(_QWORD **)(v9 - 8));
        if (v20 < 1)
          return v5;
      }
      sub_10032A484((uint64_t)a1, v5, v12, (uint64_t)v5 + 24 * a5);
      sub_10032A810((int)&v23, a3, v21, (char *)v5);
    }
    else
    {
      v13 = *a1;
      v14 = a5 - 0x5555555555555555 * ((uint64_t)(v12 - *a1) >> 3);
      if (v14 > 0xAAAAAAAAAAAAAAALL)
        sub_100007810();
      v15 = 0xAAAAAAAAAAAAAAABLL * (((uint64_t)a2 - v13) >> 3);
      v16 = 0xAAAAAAAAAAAAAAABLL * ((v10 - v13) >> 3);
      v17 = 2 * v16;
      if (2 * v16 <= v14)
        v17 = v14;
      if (v16 >= 0x555555555555555)
        v18 = 0xAAAAAAAAAAAAAAALL;
      else
        v18 = v17;
      v27 = v9;
      if (v18)
        v19 = (char *)sub_100045008(v9, v18);
      else
        v19 = 0;
      v23 = v19;
      v24 = &v19[24 * v15];
      v25 = v24;
      v26 = &v19[24 * v18];
      sub_10032A4E8(&v23, a3, a5);
      v5 = (__n128 *)sub_10032A578(a1, &v23, v5);
      sub_100121F20((uint64_t)&v23);
    }
  }
  return v5;
}

void sub_10032A464(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(v10 + 8) = v11;
  _Unwind_Resume(exception_object);
}

__n128 *sub_10032A484(uint64_t a1, __n128 *a2, unint64_t a3, uint64_t a4)
{
  uint64_t v6;
  __n128 *v7;
  __n128 *v8;
  __n128 *v9;

  v6 = *(_QWORD *)(a1 + 8);
  v7 = (__n128 *)((char *)a2 + v6 - a4);
  v8 = (__n128 *)v6;
  if ((unint64_t)v7 < a3)
  {
    v9 = v7;
    v8 = *(__n128 **)(a1 + 8);
    do
    {
      v8->n128_u64[0] = 0;
      v8->n128_u64[1] = 0;
      v8[1].n128_u64[0] = 0;
      *v8 = *v9;
      v8[1].n128_u64[0] = v9[1].n128_u64[0];
      v9->n128_u64[0] = 0;
      v9->n128_u64[1] = 0;
      v9[1].n128_u64[0] = 0;
      v8 = (__n128 *)((char *)v8 + 24);
      v9 = (__n128 *)((char *)v9 + 24);
    }
    while ((unint64_t)v9 < a3);
  }
  *(_QWORD *)(a1 + 8) = v8;
  return sub_10032A764(a2, v7, v6);
}

_QWORD *sub_10032A4E8(_QWORD *result, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v6;
  uint64_t v7;

  v3 = result;
  v4 = (_QWORD *)result[2];
  if (a3)
  {
    v6 = &v4[3 * a3];
    v7 = 24 * a3;
    do
    {
      *v4 = 0;
      v4[1] = 0;
      v4[2] = 0;
      result = sub_100121C88(v4, *(const void **)a2, *(_QWORD *)(a2 + 8), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a2 + 8) - *(_QWORD *)a2) >> 4));
      v4 += 3;
      a2 += 24;
      v7 -= 24;
    }
    while (v7);
    v4 = v6;
  }
  v3[2] = v4;
  return result;
}

void sub_10032A570(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 16) = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_10032A578(uint64_t *a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = a2[1];
  v7 = (uint64_t)(a1 + 2);
  sub_100121E08((uint64_t)(a1 + 2), (uint64_t)a3, a3, *a1, (_QWORD *)*a1, v6, v6);
  a2[1] = v8;
  a2[2] = sub_10032A888(v7, (uint64_t)a3, a1[1], (_QWORD *)a2[2]);
  v9 = *a1;
  *a1 = a2[1];
  a2[1] = v9;
  v10 = a1[1];
  a1[1] = a2[2];
  a2[2] = v10;
  v11 = a1[2];
  a1[2] = a2[3];
  a2[3] = v11;
  *a2 = a2[1];
  return v6;
}

_QWORD *sub_10032A628(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  _QWORD *v4;
  uint64_t v6;
  _QWORD v8[3];
  char v9;
  _QWORD *v10;
  _QWORD *v11;

  v4 = a4;
  v10 = a4;
  v11 = a4;
  v8[0] = a1;
  v8[1] = &v10;
  v8[2] = &v11;
  v9 = 0;
  if (a2 != a3)
  {
    v6 = a2;
    do
    {
      *v4 = 0;
      v4[1] = 0;
      v4[2] = 0;
      sub_100121C88(v4, *(const void **)v6, *(_QWORD *)(v6 + 8), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(v6 + 8) - *(_QWORD *)v6) >> 4));
      v4 = v11 + 3;
      v11 += 3;
      v6 += 24;
    }
    while (v6 != a3);
  }
  v9 = 1;
  sub_10032A6E4((uint64_t)v8);
  return v4;
}

void sub_10032A6D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_10032A6E4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_10032A6E4(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    sub_10032A718(a1);
  return a1;
}

void sub_10032A718(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;

  v1 = **(_QWORD **)(a1 + 16);
  v2 = **(_QWORD **)(a1 + 8);
  if (v1 != v2)
  {
    v3 = **(_QWORD **)(a1 + 16);
    do
    {
      v5 = *(void **)(v3 - 24);
      v3 -= 24;
      v4 = v5;
      if (v5)
      {
        *(_QWORD *)(v1 - 16) = v4;
        operator delete(v4);
      }
      v1 = v3;
    }
    while (v3 != v2);
  }
}

__n128 *sub_10032A764(__n128 *a1, __n128 *a2, uint64_t a3)
{
  __n128 *v6;

  if (a2 != a1)
  {
    v6 = a2;
    do
    {
      v6 = (__n128 *)((char *)v6 - 24);
      a3 -= 24;
      sub_10032A7C0(a3, v6);
    }
    while (v6 != a1);
  }
  return a2;
}

__n128 sub_10032A7C0(uint64_t a1, __n128 *a2)
{
  void *v4;
  __n128 result;

  v4 = *(void **)a1;
  if (v4)
  {
    *(_QWORD *)(a1 + 8) = v4;
    operator delete(v4);
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0;
    *(_QWORD *)(a1 + 16) = 0;
  }
  result = *a2;
  *(__n128 *)a1 = *a2;
  *(_QWORD *)(a1 + 16) = a2[1].n128_u64[0];
  a2->n128_u64[0] = 0;
  a2->n128_u64[1] = 0;
  a2[1].n128_u64[0] = 0;
  return result;
}

uint64_t sub_10032A810(int a1, uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t v5;

  v5 = a2;
  if (a2 != a3)
  {
    do
    {
      if ((char *)v5 != a4)
        sub_100327C94(a4, *(char **)v5, *(_QWORD *)(v5 + 8), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(v5 + 8) - *(_QWORD *)v5) >> 4));
      v5 += 24;
      a4 += 24;
    }
    while (v5 != a3);
    return a3;
  }
  return v5;
}

_QWORD *sub_10032A888(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  _QWORD *v4;
  _QWORD v6[3];
  char v7;
  _QWORD *v8;
  _QWORD *v9;

  v4 = a4;
  v9 = a4;
  v8 = a4;
  v6[0] = a1;
  v6[1] = &v8;
  v6[2] = &v9;
  if (a2 != a3)
  {
    do
    {
      *v4 = 0;
      v4[1] = 0;
      v4[2] = 0;
      *(_OWORD *)v4 = *(_OWORD *)a2;
      v4[2] = *(_QWORD *)(a2 + 16);
      *(_QWORD *)a2 = 0;
      *(_QWORD *)(a2 + 8) = 0;
      *(_QWORD *)(a2 + 16) = 0;
      v4 += 3;
      a2 += 24;
    }
    while (a2 != a3);
    v9 = v4;
  }
  v7 = 1;
  sub_10032A6E4((uint64_t)v6);
  return v4;
}

uint64_t sub_10032A914(uint64_t a1)
{
  void *v2;

  sub_10032A94C(a1, *(char **)(a1 + 16));
  v2 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v2)
    operator delete(v2);
  return a1;
}

void sub_10032A94C(uint64_t a1, char *a2)
{
  char *v2;
  char *v3;
  void **v4;

  if (a2)
  {
    v2 = a2;
    do
    {
      v3 = *(char **)v2;
      v4 = (void **)(v2 + 24);
      sub_100121A78(&v4);
      operator delete(v2);
      v2 = v3;
    }
    while (v3);
  }
}

_QWORD *sub_10032A998(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t **a4)
{
  unint64_t v4;
  unint64_t v7;
  unint64_t v8;
  uint8x8_t v9;
  _QWORD **v10;
  _QWORD *i;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  float v15;
  float v16;
  _BOOL8 v17;
  unint64_t v18;
  unint64_t v19;
  size_t v20;
  uint64_t v21;
  _QWORD *v22;
  unint64_t v23;

  v7 = *a2;
  v8 = *(_QWORD *)(a1 + 8);
  if (v8)
  {
    v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      v4 = *a2;
      if (v7 >= v8)
        v4 = v7 % v8;
    }
    else
    {
      v4 = (v8 - 1) & v7;
    }
    v10 = *(_QWORD ***)(*(_QWORD *)a1 + 8 * v4);
    if (v10)
    {
      for (i = *v10; i; i = (_QWORD *)*i)
      {
        v12 = i[1];
        if (v12 == v7)
        {
          if (i[2] == v7)
            return i;
        }
        else
        {
          if (v9.u32[0] > 1uLL)
          {
            if (v12 >= v8)
              v12 %= v8;
          }
          else
          {
            v12 &= v8 - 1;
          }
          if (v12 != v4)
            break;
        }
      }
    }
  }
  v13 = (_QWORD *)(a1 + 16);
  i = operator new(0x30uLL);
  *i = 0;
  i[1] = v7;
  v14 = **a4;
  i[4] = 0;
  i[5] = 0;
  i[2] = v14;
  i[3] = 0;
  v15 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v16 = *(float *)(a1 + 32);
  if (!v8 || (float)(v16 * (float)v8) < v15)
  {
    v17 = 1;
    if (v8 >= 3)
      v17 = (v8 & (v8 - 1)) != 0;
    v18 = v17 | (2 * v8);
    v19 = vcvtps_u32_f32(v15 / v16);
    if (v18 <= v19)
      v20 = v19;
    else
      v20 = v18;
    sub_10001CBC8(a1, v20);
    v8 = *(_QWORD *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v7 >= v8)
        v4 = v7 % v8;
      else
        v4 = v7;
    }
    else
    {
      v4 = (v8 - 1) & v7;
    }
  }
  v21 = *(_QWORD *)a1;
  v22 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  if (v22)
  {
    *i = *v22;
LABEL_38:
    *v22 = i;
    goto LABEL_39;
  }
  *i = *v13;
  *v13 = i;
  *(_QWORD *)(v21 + 8 * v4) = v13;
  if (*i)
  {
    v23 = *(_QWORD *)(*i + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v23 >= v8)
        v23 %= v8;
    }
    else
    {
      v23 &= v8 - 1;
    }
    v22 = (_QWORD *)(*(_QWORD *)a1 + 8 * v23);
    goto LABEL_38;
  }
LABEL_39:
  ++*(_QWORD *)(a1 + 24);
  return i;
}

void sub_10032ABC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  void **v10;
  uint64_t v11;

  sub_10032ABE4(v11, v10);
  _Unwind_Resume(a1);
}

void sub_10032ABE4(uint64_t a1, void **__p)
{
  void **v3;

  if (*(_BYTE *)(a1 + 8))
  {
    v3 = __p + 3;
    sub_100121A78(&v3);
  }
  if (__p)
    operator delete(__p);
}

void sub_10032AC2C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  char v20;
  char v21;

  v8 = a1 + 16;
  v9 = *(char **)a1;
  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 16) - *(_QWORD *)a1) >> 3) < a4)
  {
    sub_10032ADB4((uint64_t *)a1);
    if (a4 > 0xAAAAAAAAAAAAAAALL)
      sub_100007810();
    v10 = 0x5555555555555556 * ((uint64_t)(*(_QWORD *)(a1 + 16) - *(_QWORD *)a1) >> 3);
    if (v10 <= a4)
      v10 = a4;
    if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 16) - *(_QWORD *)a1) >> 3) >= 0x555555555555555)
      v11 = 0xAAAAAAAAAAAAAAALL;
    else
      v11 = v10;
    sub_10007D7F0((_QWORD *)a1, v11);
    v12 = sub_10032A628(v8, a2, a3, *(_QWORD **)(a1 + 8));
    goto LABEL_11;
  }
  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 8) - (_QWORD)v9) >> 3) < a4)
  {
    v13 = a2 + 8 * ((uint64_t)(*(_QWORD *)(a1 + 8) - (_QWORD)v9) >> 3);
    sub_10032A810((int)&v20, a2, v13, v9);
    v12 = sub_10032A628(v8, v13, a3, *(_QWORD **)(a1 + 8));
LABEL_11:
    *(_QWORD *)(a1 + 8) = v12;
    return;
  }
  sub_10032A810((int)&v21, a2, a3, v9);
  v15 = v14;
  v16 = *(_QWORD *)(a1 + 8);
  if (v16 != v14)
  {
    v17 = *(_QWORD *)(a1 + 8);
    do
    {
      v19 = *(void **)(v17 - 24);
      v17 -= 24;
      v18 = v19;
      if (v19)
      {
        *(_QWORD *)(v16 - 16) = v18;
        operator delete(v18);
      }
      v16 = v17;
    }
    while (v17 != v15);
  }
  *(_QWORD *)(a1 + 8) = v15;
}

void sub_10032ADA4(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_10032ADAC(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_10032ADB4(uint64_t *a1)
{
  if (*a1)
  {
    sub_100121AB8(a1);
    operator delete((void *)*a1);
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
}

uint64_t sub_10032ADEC(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  void *v6;
  void **v8;

  sub_10032AEA8((_QWORD *)a1);
  v2 = *(_QWORD **)(a1 + 216);
  if (v2 == (_QWORD *)(a1 + 192))
  {
    v3 = 4;
    v2 = (_QWORD *)(a1 + 192);
  }
  else
  {
    if (!v2)
      goto LABEL_6;
    v3 = 5;
  }
  (*(void (**)(void))(*v2 + 8 * v3))();
LABEL_6:
  v4 = *(_QWORD **)(a1 + 184);
  if (v4 == (_QWORD *)(a1 + 160))
  {
    v5 = 4;
    v4 = (_QWORD *)(a1 + 160);
  }
  else
  {
    if (!v4)
      goto LABEL_11;
    v5 = 5;
  }
  (*(void (**)(void))(*v4 + 8 * v5))();
LABEL_11:
  v8 = (void **)(a1 + 104);
  sub_10032AF50(&v8);
  v8 = (void **)(a1 + 80);
  sub_100121A78(&v8);
  v6 = *(void **)(a1 + 56);
  if (v6)
  {
    *(_QWORD *)(a1 + 64) = v6;
    operator delete(v6);
  }
  return a1;
}

void sub_10032AEA8(_QWORD *a1)
{
  uint64_t i;
  uint64_t v3;

  v3 = a1[13];
  for (i = a1[14]; i != v3; sub_10032AF00((uint64_t)(a1 + 15), i))
    i -= 88;
  a1[14] = v3;
  a1[8] = a1[7];
}

void sub_10032AF00(uint64_t a1, uint64_t a2)
{
  void *v3;
  void **v4;

  v3 = *(void **)(a2 + 48);
  if (v3)
  {
    *(_QWORD *)(a2 + 56) = v3;
    operator delete(v3);
  }
  v4 = (void **)(a2 + 24);
  sub_100121A78(&v4);
  v4 = (void **)a2;
  sub_100121A78(&v4);
}

void sub_10032AF50(void ***a1)
{
  void **v1;
  void *v2;
  uint64_t v4;
  void *v5;

  v1 = *a1;
  v2 = **a1;
  if (v2)
  {
    v4 = (uint64_t)v1[1];
    v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 88;
        sub_10032AF00((uint64_t)(v1 + 2), v4);
      }
      while ((void *)v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

_QWORD *sub_10032AFD4(_QWORD *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;

  if (a4)
  {
    v6 = result;
    sub_10007D7F0(result, a4);
    result = sub_10032A628((uint64_t)(v6 + 2), a2, a3, (_QWORD *)v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_10032B038(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v9 + 8) = v10;
  sub_100121A78(&a9);
  _Unwind_Resume(a1);
}

void sub_10032B058(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10032B088(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

uint64_t sub_10032B0B8(uint64_t a1, int a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6[3];
  void **v7;

  memset(v6, 0, sizeof(v6));
  v4 = sub_100327764(a1, a2, a3, a4, v6);
  v7 = (void **)v6;
  sub_100121A78(&v7);
  return v4;
}

void sub_10032B100(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_100121A78((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10032B118(uint64_t result)
{
  uint64_t *v1;
  uint64_t v2;
  int v3;
  unsigned int v4;
  NSObject *v5;
  void *v6;
  void *v7;
  void *v8;
  char *v9;
  uint8_t buf[8];
  __int16 v11;
  const char *v12;
  __int16 v13;
  const char *v14;
  __int16 v15;
  int v16;

  v1 = *(uint64_t **)(result + 16);
  if (v1 != *(uint64_t **)(result + 24))
  {
    v2 = *v1;
    v3 = -1;
    do
    {
      v2 = *(_QWORD *)(v2 + 8);
      ++v3;
    }
    while (v2);
    if (v3 && (v3 & 1) == 0)
    {
      v4 = +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101252228);
      v5 = off_1013D9070;
      if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 67109890;
        *(_DWORD *)&buf[4] = v4;
        v11 = 2082;
        v12 = "void _clipperPathsForVisuallyDistinctSubregions(const Clipper2Lib::PolyTree64 &, const BOOL, std::vector<C"
              "lipper2Lib::Paths64 *> &)";
        v13 = 2082;
        v14 = "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLBezierPathBooleanOperationHelper.mm";
        v15 = 1024;
        v16 = 1618;
        _os_log_error_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d currentPositiveNode should not be a hole.", buf, 0x22u);
      }
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101252248);
      v6 = off_1013D9070;
      if (os_log_type_enabled((os_log_t)v6, OS_LOG_TYPE_ERROR))
      {
        v9 = (char *)objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
        *(_DWORD *)buf = 67109378;
        *(_DWORD *)&buf[4] = v4;
        v11 = 2114;
        v12 = v9;
        _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)v6, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: Assertion backtrace: >>%{public}@<<", buf, 0x12u);

      }
      v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "void _clipperPathsForVisuallyDistinctSubregions(const Clipper2Lib::PolyTree64 &, const BOOL, std::vector<Clipper2Lib::Paths64 *> &)"));
      v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLBezierPathBooleanOperationHelper.mm"));
      +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v7, v8, 1618, 0, "currentPositiveNode should not be a hole.");

    }
    operator new();
  }
  return result;
}

void sub_10032B554(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10032B57C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10032B5AC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

uint64_t sub_10032B5DC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];
  char *v15;
  char *v16;
  uint64_t *v17;

  v3 = *a1;
  v4 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 3);
  v5 = v4 + 1;
  if (v4 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_100007810();
  v7 = (uint64_t)(a1 + 2);
  v8 = 0xAAAAAAAAAAAAAAABLL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5)
    v5 = 2 * v8;
  if (v8 >= 0x555555555555555)
    v9 = 0xAAAAAAAAAAAAAAALL;
  else
    v9 = v5;
  v17 = a1 + 2;
  if (v9)
    v10 = (char *)sub_100045008(v7, v9);
  else
    v10 = 0;
  v11 = &v10[24 * v4];
  v14[0] = v10;
  v14[1] = v11;
  v15 = v11;
  v16 = &v10[24 * v9];
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;
  *((_QWORD *)v11 + 2) = 0;
  sub_100121C88(v11, *(const void **)a2, *(_QWORD *)(a2 + 8), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a2 + 8) - *(_QWORD *)a2) >> 4));
  v15 += 24;
  sub_100121D94(a1, v14);
  v12 = a1[1];
  sub_100121F20((uint64_t)v14);
  return v12;
}

void sub_10032B6E8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_100121F20((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10032B6FC(_QWORD *a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t *v13;
  void **v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int16 v25;
  uint64_t v26;
  uint64_t v27;

  v11 = 0;
  v12 = a2;
  v9 = 0;
  v10 = 0;
  v3 = a1[6] + 24 * a2;
  LODWORD(v14) = 0;
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v20 = 0u;
  v21 = 0u;
  v22 = 0;
  v23 = 1;
  v24 = xmmword_100EEF410;
  v25 = 0;
  v26 = 0;
  v27 = 0;
  sub_1004904D8((uint64_t *)&v14, v3, 0, 3);
  sub_100493B70((uint64_t)&v14, &v9, 1, 2.0);
  if (v10 == v9)
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101252268);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E2169C();
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101252288);
    v6 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)v6, OS_LOG_TYPE_ERROR))
    {
      objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
      sub_100DE7E60();
    }

    v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "NSArray<CRLBezierPath *> * _Nonnull _pathsByFloodFillingPathsAtFillPoint(NSArray<CRLBezierPath *> *const  _Nonnull __strong, const CGPoint)_block_invoke"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLBezierPathBooleanOperationHelper.mm"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v7, v8, 1720, 0, "Unable to stroke path for flood fill.");

  }
  else
  {
    os_unfair_lock_lock((os_unfair_lock_t)(*(_QWORD *)(a1[4] + 8) + 48));
    v4 = *(_QWORD *)(a1[5] + 8) + 48;
    v13 = &v12;
    v5 = sub_10032A998(v4, &v12, (uint64_t)&unk_100EEC1A0, (uint64_t **)&v13) + 3;
    if (v5 != &v9)
      sub_10032AC2C((uint64_t)v5, v9, v10, 0xAAAAAAAAAAAAAAABLL * ((v10 - v9) >> 3));
    os_unfair_lock_unlock((os_unfair_lock_t)(*(_QWORD *)(a1[4] + 8) + 48));
  }
  sub_10032ADEC((uint64_t)&v14);
  v14 = (void **)&v9;
  sub_100121A78(&v14);
}

void sub_10032B99C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void **a18)
{
  void *v18;
  void *v19;

  v19 = v18;

  sub_10032ADEC((uint64_t)&a18);
  a18 = (void **)&a10;
  sub_100121A78(&a18);
  _Unwind_Resume(a1);
}

void sub_10032B9F4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10032BA24(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

uint64_t sub_10032BA54(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t *i;
  uint64_t *v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  unsigned int v10;
  NSObject *v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t *v15;
  uint64_t *v16;
  char *v17;
  uint64_t v18;
  __int128 v19;
  _OWORD v22[3];
  uint8_t buf[4];
  unsigned int v24;
  __int16 v25;
  const char *v26;
  __int16 v27;
  const char *v28;
  __int16 v29;
  int v30;

  v4 = *(uint64_t **)(a1 + 16);
  for (i = *(uint64_t **)(a1 + 24); v4 != i; ++v4)
  {
    v7 = *v4;
    v8 = -1;
    v9 = *v4;
    do
    {
      v9 = *(_QWORD *)(v9 + 8);
      ++v8;
    }
    while (v9);
    if (v8 && (v8 & 1) == 0)
    {
      v10 = +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_1012522A8);
      v11 = off_1013D9070;
      if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 67109890;
        v24 = v10;
        v25 = 2082;
        v26 = "Clipper2Lib::Paths64 * _Nullable _visuallyDistinctSubregionContainingPoint(const Clipper2Lib::PolyTree64 &"
              ", const Clipper2Lib::Point64, const BOOL)";
        v27 = 2082;
        v28 = "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLBezierPathBooleanOperationHelper.mm";
        v29 = 1024;
        v30 = 1778;
        _os_log_error_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d currentPositiveNode should not be a hole.", buf, 0x22u);
      }
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_1012522C8);
      v12 = off_1013D9070;
      if (os_log_type_enabled((os_log_t)v12, OS_LOG_TYPE_ERROR))
      {
        v17 = (char *)objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
        *(_DWORD *)buf = 67109378;
        v24 = v10;
        v25 = 2114;
        v26 = v17;
        _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)v12, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: Assertion backtrace: >>%{public}@<<", buf, 0x12u);

      }
      v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "Clipper2Lib::Paths64 * _Nullable _visuallyDistinctSubregionContainingPoint(const Clipper2Lib::PolyTree64 &, const Clipper2Lib::Point64, const BOOL)"));
      v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLBezierPathBooleanOperationHelper.mm"));
      +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v13, v14, 1778, 0, "currentPositiveNode should not be a hole.");

      v7 = *v4;
    }
    if (sub_10012181C((uint64_t *)a2, (_QWORD *)(v7 + 40)) == 1)
    {
      v15 = *(uint64_t **)(*v4 + 16);
      v16 = *(uint64_t **)(*v4 + 24);
      while (v15 != v16)
      {
        if (sub_10012181C((uint64_t *)a2, (_QWORD *)(*v15 + 40)) == 1)
        {
          v18 = *v15;
          v19 = *(_OWORD *)(a2 + 16);
          v22[0] = *(_OWORD *)a2;
          v22[1] = v19;
          v22[2] = *(_OWORD *)(a2 + 32);
          return sub_10032BA54(v18, v22, 0);
        }
        ++v15;
      }
      if ((a3 & 1) == 0)
        operator new();
    }
  }
  return 0;
}

void sub_10032BEFC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10032BF38(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10032BF68(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10032BF98(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10032BFC8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10032BFF8(uint64_t a1, uint64_t a2, double a3, double a4, double a5)
{
  id v10;
  id v11;
  _QWORD *v12;

  sub_100327598(a1);
  v10 = objc_msgSend(*(id *)a1, "elementCount");
  objc_msgSend(*(id *)a1, "moveToPoint:", a3, a4);
  v11 = objc_msgSend(*(id *)a1, "elementCount");
  v12 = *(_QWORD **)(a1 + 8);
  if (v11 == v10)
    sub_10031F2B0(v12, a2, a5);
  else
    sub_10031EFA4(v12, a2, a5);
  *(_QWORD *)(a1 + 16) = a2;
  *(double *)(a1 + 24) = a5;
}

void sub_10032C090(uint64_t a1, _OWORD *a2, uint64_t a3, double a4, double a5, double a6)
{
  double v12;
  double v13;
  __int128 v14;
  double v15;
  double v16;
  _OWORD v17[3];

  if (!sub_100061890(*(double *)(a1 + 32), *(double *)(a1 + 40)))
  {
    objc_msgSend(*(id *)a1, "currentPoint");
    v12 = *(double *)(a1 + 32);
    v13 = *(double *)(a1 + 40);
    v14 = a2[1];
    v17[0] = *a2;
    v17[1] = v14;
    v17[2] = a2[2];
    if (!sub_100326210((double *)v17, v15, v16, v12, v13, a4, a5))
      sub_100327598(a1);
  }
  *(double *)(a1 + 32) = a4;
  *(double *)(a1 + 40) = a5;
  *(_QWORD *)(a1 + 48) = a3;
  *(double *)(a1 + 56) = a6;
}

void sub_10032C130(uint64_t a1)
{
  sub_100327598(a1);
  objc_msgSend(*(id *)a1, "closePath");
  sub_10031EFA4(*(_QWORD **)(a1 + 8), *(_QWORD *)(a1 + 16), *(double *)(a1 + 24));
  sub_10031EFA4(*(_QWORD **)(a1 + 8), *(_QWORD *)(a1 + 16), *(double *)(a1 + 24));
}

double sub_10032C16C(uint64_t *a1, double a2)
{
  uint64_t v2;
  double v3;
  double v4;
  uint64_t v5;
  double v6;
  uint64_t *v8;
  int v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  float64x2_t *v13;
  uint64_t v14;
  double *v15;
  float64x2_t v16[4];

  v2 = *a1;
  v3 = (double)(0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 3));
  if (v3 > a2)
    v3 = 0.0;
  v4 = a2 - v3;
  v5 = (uint64_t)v4;
  v6 = v4 - (double)(uint64_t)v4;
  if (v6 == 0.0)
    return *(double *)(a1[3] + 16 * *(_QWORD *)(v2 + 24 * v5));
  v8 = (uint64_t *)(v2 + 24 * v5);
  v9 = *((unsigned __int8 *)v8 + 8);
  v10 = *v8;
  v11 = *v8 + 1;
  if (v9)
  {
    v12 = a1[3];
    v13 = (float64x2_t *)(v12 + 16 * v10);
    v16[0] = *v13;
    v16[1] = *(float64x2_t *)(v12 + 16 * v11);
    v16[2] = v13[2];
    v16[3] = v13[3];
    return sub_1000602A8(v16, v6);
  }
  else
  {
    v14 = a1[3];
    v15 = (double *)(v14 + 16 * (v11 % ((a1[4] - v14) >> 4)));
    return sub_100061A8C(*(double *)(v14 + 16 * v10), *(double *)(v14 + 16 * v10 + 8), *v15, v15[1], v6);
  }
}

void sub_10032C284(uint64_t *a1, uint64_t a2, int a3, int a4, __int128 *a5, uint64_t a6, double a7, double a8, double a9, double a10)
{
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double *v17;
  double v18;
  double v19;
  uint64_t v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  uint64_t v26;
  double *v27;
  double v28;
  double v29;
  __int128 v30;
  _OWORD v31[3];
  _QWORD v32[7];
  _QWORD v33[7];
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  __n128 (*v37)(__n128 *, __n128 *);
  void (*v38)(uint64_t);
  void *v39;
  void *__p;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  __n128 (*v46)(__n128 *, __n128 *);
  void (*v47)(uint64_t);
  void *v48;
  void *v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  _QWORD *(*v55)(_QWORD *, _QWORD *);
  void (*v56)(uint64_t);
  void *v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD v61[6];
  _QWORD v62[5];
  __int128 v63;
  __int128 v64;
  __int128 v65;
  uint64_t v66;

  if (a3)
  {
    v62[0] = _NSConcreteStackBlock;
    v13 = a5[1];
    v63 = *a5;
    v62[1] = 3221225472;
    v62[2] = sub_10032CB0C;
    v62[3] = &unk_101252328;
    v64 = v13;
    v65 = a5[2];
    v62[4] = a6;
    v66 = a2;
    v61[0] = _NSConcreteStackBlock;
    v61[1] = 3221225472;
    v61[2] = sub_10032CB4C;
    v61[3] = &unk_101252348;
    v61[4] = a6;
    v61[5] = a2;
    sub_10032C628(a1, a4, 0, v62, v61, a7, a8, a9, a10);
  }
  else
  {
    v52 = 0;
    v53 = &v52;
    v54 = 0x4812000000;
    v55 = sub_10032CBCC;
    v56 = sub_10032CBE8;
    v57 = &unk_1010E66AB;
    v58 = 0;
    v59 = 0;
    v60 = 0;
    v43 = 0;
    v44 = &v43;
    v45 = 0x4812000000;
    v46 = sub_10032CBF8;
    v47 = sub_10032CC1C;
    v48 = &unk_1010E66AB;
    v49 = 0;
    v50 = 0;
    v51 = 0;
    v34 = 0;
    v35 = &v34;
    v36 = 0x4812000000;
    v37 = sub_10032CC34;
    v38 = sub_10032CC58;
    v39 = &unk_1010E66AB;
    __p = 0;
    v41 = 0;
    v42 = 0;
    v33[0] = _NSConcreteStackBlock;
    v33[1] = 3221225472;
    v33[2] = sub_10032CC70;
    v33[3] = &unk_101252370;
    v33[4] = &v52;
    v33[5] = &v43;
    v33[6] = &v34;
    v32[0] = _NSConcreteStackBlock;
    v32[1] = 3221225472;
    v32[2] = sub_10032CE64;
    v32[3] = &unk_101252398;
    v32[4] = &v52;
    v32[5] = &v43;
    v32[6] = &v34;
    sub_10032C628(a1, a4, 1, v33, v32, a8, a7, a9, a10);
    v14 = v53[7];
    if (v14 - 1 >= 0)
    {
      v15 = ((v44[7] - v44[6]) >> 4) - 1;
      do
      {
        --v14;
        if (((*(_QWORD *)(v53[6] + (((unint64_t)v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
        {
          v16 = v44[6];
          v17 = (double *)(v16 + 16 * (v15 - 3));
          v18 = *v17;
          v19 = v17[1];
          v20 = v16 + 16 * v15;
          v21 = *(double *)(v20 - 16);
          v22 = *(double *)(v20 - 8);
          v23 = *(double *)(v20 - 32);
          v24 = *(double *)(v20 - 24);
          v25 = *(double *)(v35[6] + 8 * (v15 - 3));
          sub_100327598(a6);
          objc_msgSend(*(id *)a6, "curveToPoint:controlPoint1:controlPoint2:", v18, v19, v21, v22, v23, v24);
          sub_10031EFA4(*(_QWORD **)(a6 + 8), a2, v25);
          v26 = -4;
        }
        else
        {
          v27 = (double *)(v44[6] + 16 * v15);
          v28 = *v27;
          v29 = v27[1];
          v30 = a5[1];
          v31[0] = *a5;
          v31[1] = v30;
          v31[2] = a5[2];
          sub_10032C090(a6, v31, a2, v28, v29, *(double *)(v35[6] + 8 * v15));
          v26 = -1;
        }
        v15 += v26;
      }
      while (v14 > 0);
    }
    _Block_object_dispose(&v34, 8);
    if (__p)
    {
      v41 = __p;
      operator delete(__p);
    }
    _Block_object_dispose(&v43, 8);
    if (v49)
    {
      v50 = v49;
      operator delete(v49);
    }
    _Block_object_dispose(&v52, 8);
    if (v58)
      operator delete(v58);
  }
}

void sub_10032C5C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,void *__p,uint64_t a37,uint64_t a38,char a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,void *a45,uint64_t a46,uint64_t a47,char a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,void *a54)
{
  _Block_object_dispose(&a30, 8);
  if (__p)
  {
    a37 = (uint64_t)__p;
    operator delete(__p);
  }
  _Block_object_dispose(&a39, 8);
  if (a45)
  {
    a46 = (uint64_t)a45;
    operator delete(a45);
  }
  _Block_object_dispose(&a48, 8);
  if (a54)
    operator delete(a54);
  _Unwind_Resume(a1);
}

void sub_10032C628(uint64_t *a1, int a2, int a3, void *a4, void *a5, double a6, double a7, double a8, double a9)
{
  void (**v17)(_QWORD, double, double, double);
  id v18;
  __n128 v19;
  __n128 v20;
  uint64_t v21;
  unint64_t v22;
  __n128 v23;
  double v24;
  double v25;
  double v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  uint64_t v31;
  double v33;
  uint64_t v34;
  double v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  double *v39;
  double v40;
  unint64_t *v41;
  _BOOL4 v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  double v46;
  uint64_t v47;
  double v48;
  double *v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  float64x2_t v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;

  v17 = a4;
  v18 = a5;
  v21 = *a1;
  v22 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 3);
  v23.n128_f64[0] = (double)v22;
  if ((double)v22 <= a7)
    v24 = (double)v22;
  else
    v24 = 0.0;
  v25 = a7 - v24;
  if (v23.n128_f64[0] > a6)
    v23.n128_f64[0] = 0.0;
  v26 = a6 - v23.n128_f64[0];
  v27 = (uint64_t)(a6 - v23.n128_f64[0]);
  v28 = (double)v27;
  v29 = (uint64_t)v25;
  if (v25 == v26 && v26 == v28)
  {
    sub_10032D1D8(a1, v27, (uint64_t)v25, a2, a3, v17, v18);
    goto LABEL_44;
  }
  v31 = v21 + 24 * v27;
  if (v26 >= v25 || v27 != v29)
  {
    if (*(_BYTE *)(v31 + 8))
    {
      v33 = v26 - v28;
      v34 = a1[3] + 16 * *(_QWORD *)v31;
      v54 = *(float64x2_t *)v34;
      v55 = *(_OWORD *)(v34 + 16);
      v56 = *(_OWORD *)(v34 + 32);
      v57 = *(_OWORD *)(v34 + 48);
      v50 = xmmword_100EEC438;
      v51 = xmmword_100EEC438;
      v52 = xmmword_100EEC438;
      v53 = xmmword_100EEC438;
      sub_100313400(&v54, (uint64_t)&v50, v26 - v28, 1.0);
      if (a3)
      {
        *(double *)&v50 = a8;
        *((double *)&v50 + 1) = a9;
      }
      (*((void (**)(id, __int128 *, double, double))v18 + 2))(v18, &v50, v33 + (double)*(uint64_t *)(v21 + 24 * v27 + 16), (double)(*(_QWORD *)(v21 + 24 * v27 + 16) + 1));
      goto LABEL_30;
    }
    if (a3)
    {
      if ((a2 & 1) != 0)
      {
LABEL_30:
        if ((v27 + 1) % (0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 3)) != v29)
        {
          v42 = 0;
          if (a2 && (a3 & 1) == 0)
            v42 = v25 == (double)v29;
          sub_10032D1D8(a1, v27 + 1, (uint64_t)v25, v42, a3, v17, v18);
        }
        v43 = (double)v29;
        if (v25 != (double)v29)
        {
          v44 = *a1;
          v45 = *a1 + 24 * v29;
          if (*(_BYTE *)(v45 + 8))
          {
            v46 = v25 - v43;
            v47 = a1[3] + 16 * *(_QWORD *)v45;
            v54 = *(float64x2_t *)v47;
            v55 = *(_OWORD *)(v47 + 16);
            v56 = *(_OWORD *)(v47 + 32);
            v57 = *(_OWORD *)(v47 + 48);
            v50 = xmmword_100EEC438;
            v51 = xmmword_100EEC438;
            v52 = xmmword_100EEC438;
            v53 = xmmword_100EEC438;
            sub_100313400(&v54, (uint64_t)&v50, 0.0, v25 - v43);
            if ((a3 & 1) == 0)
            {
              *(double *)&v53 = a8;
              *((double *)&v53 + 1) = a9;
            }
            v48 = (double)*(uint64_t *)(v44 + 24 * v29 + 16);
            (*((void (**)(id, __int128 *, double, double))v18 + 2))(v18, &v50, v48, v46 + v48);
          }
          else if (a3)
          {
            v49 = (double *)(a1[3] + 16 * *(_QWORD *)v45);
            v17[2](v17, *v49, v49[1], (double)*(uint64_t *)(v44 + 24 * v29 + 16));
          }
          else if ((a2 & 1) == 0)
          {
            v17[2](v17, a8, a9, v25 - v43 + (double)*(uint64_t *)(v44 + 24 * v29 + 16));
          }
        }
        goto LABEL_44;
      }
      v20.n128_f64[0] = v26 - v28 + (double)*(uint64_t *)(v21 + 24 * v27 + 16);
      v23.n128_f64[0] = a8;
      v19.n128_f64[0] = a9;
    }
    else
    {
      v41 = (unint64_t *)(a1[3] + 16 * ((*(_QWORD *)v31 + 1) % (unint64_t)((a1[4] - a1[3]) >> 4)));
      v23.n128_u64[0] = *v41;
      v19.n128_u64[0] = v41[1];
      v20.n128_f64[0] = (double)(*(_QWORD *)(v21 + 24 * v27 + 16) + 1);
    }
    ((void (*)(void (**)(_QWORD, double, double, double), __n128, __n128, __n128))v17[2])(v17, v23, v19, v20);
    goto LABEL_30;
  }
  if (*(_BYTE *)(v31 + 8))
  {
    v35 = v26 - v28;
    v36 = v25 - v28;
    v37 = a1[3] + 16 * *(_QWORD *)(v21 + 24 * v27);
    v54 = *(float64x2_t *)v37;
    v55 = *(_OWORD *)(v37 + 16);
    v56 = *(_OWORD *)(v37 + 32);
    v57 = *(_OWORD *)(v37 + 48);
    v50 = xmmword_100EEC438;
    v51 = xmmword_100EEC438;
    v52 = xmmword_100EEC438;
    v53 = xmmword_100EEC438;
    sub_100313400(&v54, (uint64_t)&v50, v26 - v28, v25 - v28);
    v38 = 48;
    if (a3)
      v38 = 0;
    v39 = (double *)((char *)&v50 + v38);
    *v39 = a8;
    v39[1] = a9;
    v40 = (double)*(uint64_t *)(v21 + 24 * v27 + 16);
    (*((void (**)(id, __int128 *, double, double))v18 + 2))(v18, &v50, v35 + v40, v36 + v40);
  }
  else if ((a2 & 1) == 0)
  {
    v17[2](v17, a8, a9, v25 - v28 + (double)*(uint64_t *)(v21 + 24 * v27 + 16));
  }
LABEL_44:

}

void sub_10032CAD0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10032CB0C(uint64_t a1, double a2, double a3, double a4)
{
  uint64_t v4;
  __int128 v5;
  _OWORD v6[3];

  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_OWORD *)(a1 + 56);
  v6[0] = *(_OWORD *)(a1 + 40);
  v6[1] = v5;
  v6[2] = *(_OWORD *)(a1 + 72);
  sub_10032C090(v4, v6, *(_QWORD *)(a1 + 88), a2, a3, a4);
}

void sub_10032CB4C(uint64_t a1, double *a2, double a3, double a4)
{
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  uint64_t v11;
  uint64_t v12;

  v5 = a2[6];
  v6 = a2[7];
  v7 = a2[2];
  v8 = a2[3];
  v9 = a2[4];
  v10 = a2[5];
  v11 = *(_QWORD *)(a1 + 32);
  v12 = *(_QWORD *)(a1 + 40);
  sub_100327598(v11);
  objc_msgSend(*(id *)v11, "curveToPoint:controlPoint1:controlPoint2:", v5, v6, v7, v8, v9, v10);
  sub_10031EFA4(*(_QWORD **)(v11 + 8), v12, a4);
}

_QWORD *sub_10032CBCC(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;

  v2 = a2[7];
  result[6] = a2[6];
  result[7] = v2;
  result[8] = a2[8];
  a2[6] = 0;
  a2[7] = 0;
  a2[8] = 0;
  return result;
}

void sub_10032CBE8(uint64_t a1)
{
  void *v1;

  v1 = *(void **)(a1 + 48);
  if (v1)
    operator delete(v1);
}

__n128 sub_10032CBF8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  a1[3].n128_u64[0] = 0;
  a1[3].n128_u64[1] = 0;
  a1[4].n128_u64[0] = 0;
  result = a2[3];
  a1[3] = result;
  a1[4].n128_u64[0] = a2[4].n128_u64[0];
  a2[3].n128_u64[0] = 0;
  a2[3].n128_u64[1] = 0;
  a2[4].n128_u64[0] = 0;
  return result;
}

void sub_10032CC1C(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 48);
  if (v2)
  {
    *(_QWORD *)(a1 + 56) = v2;
    operator delete(v2);
  }
}

__n128 sub_10032CC34(__n128 *a1, __n128 *a2)
{
  __n128 result;

  a1[3].n128_u64[0] = 0;
  a1[3].n128_u64[1] = 0;
  a1[4].n128_u64[0] = 0;
  result = a2[3];
  a1[3] = result;
  a1[4].n128_u64[0] = a2[4].n128_u64[0];
  a2[3].n128_u64[0] = 0;
  a2[3].n128_u64[1] = 0;
  a2[4].n128_u64[0] = 0;
  return result;
}

void sub_10032CC58(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 48);
  if (v2)
  {
    *(_QWORD *)(a1 + 56) = v2;
    operator delete(v2);
  }
}

void sub_10032CC70(_QWORD *a1, double a2, double a3, double a4)
{
  uint64_t v8;
  _QWORD *v9;
  double *v10;
  unint64_t v11;
  double *v12;
  double *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  double *v19;
  char *v20;
  _QWORD *v21;
  double *v22;
  unint64_t v23;
  double *v24;
  double *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char *v30;
  double *v31;
  char *v32;
  uint64_t v33;
  char v34;

  v8 = *(_QWORD *)(a1[4] + 8) + 48;
  v34 = 0;
  sub_1001F28DC(v8, &v34);
  v9 = *(_QWORD **)(a1[5] + 8);
  v10 = (double *)v9[7];
  v11 = v9[8];
  if ((unint64_t)v10 >= v11)
  {
    v13 = (double *)v9[6];
    v14 = ((char *)v10 - (char *)v13) >> 4;
    v15 = v14 + 1;
    if ((unint64_t)(v14 + 1) >> 60)
      sub_100007810();
    v16 = v11 - (_QWORD)v13;
    if (v16 >> 3 > v15)
      v15 = v16 >> 3;
    if ((unint64_t)v16 >= 0x7FFFFFFFFFFFFFF0)
      v17 = 0xFFFFFFFFFFFFFFFLL;
    else
      v17 = v15;
    if (v17)
    {
      v18 = (char *)sub_10001FB2C((uint64_t)(v9 + 8), v17);
      v13 = (double *)v9[6];
      v10 = (double *)v9[7];
    }
    else
    {
      v18 = 0;
    }
    v19 = (double *)&v18[16 * v14];
    v20 = &v18[16 * v17];
    *v19 = a2;
    v19[1] = a3;
    v12 = v19 + 2;
    if (v10 != v13)
    {
      do
      {
        *((_OWORD *)v19 - 1) = *((_OWORD *)v10 - 1);
        v19 -= 2;
        v10 -= 2;
      }
      while (v10 != v13);
      v13 = (double *)v9[6];
    }
    v9[6] = v19;
    v9[7] = v12;
    v9[8] = v20;
    if (v13)
      operator delete(v13);
  }
  else
  {
    *v10 = a2;
    v10[1] = a3;
    v12 = v10 + 2;
  }
  v9[7] = v12;
  v21 = *(_QWORD **)(a1[6] + 8);
  v22 = (double *)v21[7];
  v23 = v21[8];
  if ((unint64_t)v22 >= v23)
  {
    v25 = (double *)v21[6];
    v26 = v22 - v25;
    if ((unint64_t)(v26 + 1) >> 61)
      sub_100007810();
    v27 = v23 - (_QWORD)v25;
    v28 = (uint64_t)(v23 - (_QWORD)v25) >> 2;
    if (v28 <= v26 + 1)
      v28 = v26 + 1;
    if (v27 >= 0x7FFFFFFFFFFFFFF8)
      v29 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v29 = v28;
    if (v29)
    {
      v30 = (char *)sub_10002BA34((uint64_t)(v21 + 8), v29);
      v25 = (double *)v21[6];
      v22 = (double *)v21[7];
    }
    else
    {
      v30 = 0;
    }
    v31 = (double *)&v30[8 * v26];
    v32 = &v30[8 * v29];
    *v31 = a4;
    v24 = v31 + 1;
    while (v22 != v25)
    {
      v33 = *((_QWORD *)v22-- - 1);
      *((_QWORD *)v31-- - 1) = v33;
    }
    v21[6] = v31;
    v21[7] = v24;
    v21[8] = v32;
    if (v25)
      operator delete(v25);
  }
  else
  {
    *v22 = a4;
    v24 = v22 + 1;
  }
  v21[7] = v24;
}

void sub_10032CE64(_QWORD *a1, char *a2, double a3, double a4)
{
  uint64_t v8;
  _QWORD *v9;
  double *v10;
  unint64_t v11;
  double *v12;
  double *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char *v18;
  double *v19;
  char *v20;
  uint64_t v21;
  _QWORD *v22;
  char *v23;
  unint64_t v24;
  _QWORD *v25;
  char *v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char *v31;
  char *v32;
  char *v33;
  uint64_t v34;
  _QWORD *v35;
  char *v36;
  unint64_t v37;
  _QWORD *v38;
  char *v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  char *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  _QWORD *v48;
  double *v49;
  unint64_t v50;
  double *v51;
  double *v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  char *v57;
  double *v58;
  char *v59;
  uint64_t v60;
  char v61;

  v8 = *(_QWORD *)(a1[4] + 8) + 48;
  v61 = 1;
  sub_1001F28DC(v8, &v61);
  sub_10032D338(*(_QWORD *)(a1[5] + 8) + 48, *(_QWORD *)(*(_QWORD *)(a1[5] + 8) + 56), a2, a2 + 64, 4);
  v9 = *(_QWORD **)(a1[6] + 8);
  v10 = (double *)v9[7];
  v11 = v9[8];
  if ((unint64_t)v10 >= v11)
  {
    v13 = (double *)v9[6];
    v14 = v10 - v13;
    if ((unint64_t)(v14 + 1) >> 61)
      goto LABEL_66;
    v15 = v11 - (_QWORD)v13;
    v16 = (uint64_t)(v11 - (_QWORD)v13) >> 2;
    if (v16 <= v14 + 1)
      v16 = v14 + 1;
    if (v15 >= 0x7FFFFFFFFFFFFFF8)
      v17 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v17 = v16;
    if (v17)
    {
      v18 = (char *)sub_10002BA34((uint64_t)(v9 + 8), v17);
      v13 = (double *)v9[6];
      v10 = (double *)v9[7];
    }
    else
    {
      v18 = 0;
    }
    v19 = (double *)&v18[8 * v14];
    v20 = &v18[8 * v17];
    *v19 = a3;
    v12 = v19 + 1;
    while (v10 != v13)
    {
      v21 = *((_QWORD *)v10-- - 1);
      *((_QWORD *)v19-- - 1) = v21;
    }
    v9[6] = v19;
    v9[7] = v12;
    v9[8] = v20;
    if (v13)
      operator delete(v13);
  }
  else
  {
    *v10 = a3;
    v12 = v10 + 1;
  }
  v9[7] = v12;
  v22 = *(_QWORD **)(a1[6] + 8);
  v23 = (char *)v22[7];
  v24 = v22[8];
  if ((unint64_t)v23 >= v24)
  {
    v26 = (char *)v22[6];
    v27 = (v23 - v26) >> 3;
    if ((unint64_t)(v27 + 1) >> 61)
      goto LABEL_66;
    v28 = v24 - (_QWORD)v26;
    v29 = (uint64_t)(v24 - (_QWORD)v26) >> 2;
    if (v29 <= v27 + 1)
      v29 = v27 + 1;
    if (v28 >= 0x7FFFFFFFFFFFFFF8)
      v30 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v30 = v29;
    if (v30)
    {
      v31 = (char *)sub_10002BA34((uint64_t)(v22 + 8), v30);
      v26 = (char *)v22[6];
      v23 = (char *)v22[7];
    }
    else
    {
      v31 = 0;
    }
    v32 = &v31[8 * v27];
    v33 = &v31[8 * v30];
    *(_QWORD *)v32 = 0xBFF0000000000000;
    v25 = v32 + 8;
    while (v23 != v26)
    {
      v34 = *((_QWORD *)v23 - 1);
      v23 -= 8;
      *((_QWORD *)v32 - 1) = v34;
      v32 -= 8;
    }
    v22[6] = v32;
    v22[7] = v25;
    v22[8] = v33;
    if (v26)
      operator delete(v26);
  }
  else
  {
    *(_QWORD *)v23 = 0xBFF0000000000000;
    v25 = v23 + 8;
  }
  v22[7] = v25;
  v35 = *(_QWORD **)(a1[6] + 8);
  v36 = (char *)v35[7];
  v37 = v35[8];
  if ((unint64_t)v36 >= v37)
  {
    v39 = (char *)v35[6];
    v40 = (v36 - v39) >> 3;
    if ((unint64_t)(v40 + 1) >> 61)
      goto LABEL_66;
    v41 = v37 - (_QWORD)v39;
    v42 = (uint64_t)(v37 - (_QWORD)v39) >> 2;
    if (v42 <= v40 + 1)
      v42 = v40 + 1;
    if (v41 >= 0x7FFFFFFFFFFFFFF8)
      v43 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v43 = v42;
    if (v43)
    {
      v44 = (char *)sub_10002BA34((uint64_t)(v35 + 8), v43);
      v39 = (char *)v35[6];
      v36 = (char *)v35[7];
    }
    else
    {
      v44 = 0;
    }
    v45 = &v44[8 * v40];
    v46 = &v44[8 * v43];
    *(_QWORD *)v45 = 0xBFF0000000000000;
    v38 = v45 + 8;
    while (v36 != v39)
    {
      v47 = *((_QWORD *)v36 - 1);
      v36 -= 8;
      *((_QWORD *)v45 - 1) = v47;
      v45 -= 8;
    }
    v35[6] = v45;
    v35[7] = v38;
    v35[8] = v46;
    if (v39)
      operator delete(v39);
  }
  else
  {
    *(_QWORD *)v36 = 0xBFF0000000000000;
    v38 = v36 + 8;
  }
  v35[7] = v38;
  v48 = *(_QWORD **)(a1[6] + 8);
  v49 = (double *)v48[7];
  v50 = v48[8];
  if ((unint64_t)v49 < v50)
  {
    *v49 = a4;
    v51 = v49 + 1;
    goto LABEL_65;
  }
  v52 = (double *)v48[6];
  v53 = v49 - v52;
  if ((unint64_t)(v53 + 1) >> 61)
LABEL_66:
    sub_100007810();
  v54 = v50 - (_QWORD)v52;
  v55 = (uint64_t)(v50 - (_QWORD)v52) >> 2;
  if (v55 <= v53 + 1)
    v55 = v53 + 1;
  if (v54 >= 0x7FFFFFFFFFFFFFF8)
    v56 = 0x1FFFFFFFFFFFFFFFLL;
  else
    v56 = v55;
  if (v56)
  {
    v57 = (char *)sub_10002BA34((uint64_t)(v48 + 8), v56);
    v52 = (double *)v48[6];
    v49 = (double *)v48[7];
  }
  else
  {
    v57 = 0;
  }
  v58 = (double *)&v57[8 * v53];
  v59 = &v57[8 * v56];
  *v58 = a4;
  v51 = v58 + 1;
  while (v49 != v52)
  {
    v60 = *((_QWORD *)v49-- - 1);
    *((_QWORD *)v58-- - 1) = v60;
  }
  v48[6] = v58;
  v48[7] = v51;
  v48[8] = v59;
  if (v52)
    operator delete(v52);
LABEL_65:
  v48[7] = v51;
}

void sub_10032D1D8(_QWORD *a1, uint64_t a2, uint64_t a3, int a4, int a5, void *a6, void *a7)
{
  void (**v13)(id, uint64_t, double, double);
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double *v21;
  void (**v22)(double, double, double);

  v22 = a6;
  v13 = a7;
  v14 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a1[1] - *a1) >> 3);
  v15 = a2 % v14;
  v16 = (uint64_t)(a1[4] - a1[3]) >> 4;
  do
  {
    v17 = *a1 + 24 * v15;
    v18 = *(_QWORD *)v17;
    v19 = *(_QWORD *)(v17 + 16);
    v20 = (v15 + 1) % v14;
    if (*(_BYTE *)(v17 + 8))
    {
      v13[2](v13, a1[3] + 16 * v18, (double)v19, (double)(v19 + 1));
      goto LABEL_12;
    }
    if (a5)
    {
      if (v15 != a2 || (a4 & 1) == 0)
      {
        v21 = (double *)(a1[3] + 16 * v18);
LABEL_11:
        v22[2](*v21, v21[1], (double)v19);
      }
    }
    else if (!a4 || v20 != a3)
    {
      v21 = (double *)(a1[3] + 16 * ((v18 + 1) % v16));
      ++v19;
      goto LABEL_11;
    }
LABEL_12:
    v15 = v20;
  }
  while (v20 != a3);

}

void sub_10032D320(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

char *sub_10032D338(uint64_t a1, uint64_t __dst, char *__src, char *a4, uint64_t a5)
{
  char *v5;
  char *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  int64_t v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  __int128 v27;
  char *v28;
  uint64_t v29;
  char *v30;
  __int128 v31;
  void *__p;
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;

  v5 = (char *)__dst;
  if (a5 < 1)
    return v5;
  v7 = __src;
  v11 = *(_QWORD *)(a1 + 16);
  v9 = a1 + 16;
  v10 = v11;
  v12 = *(_QWORD *)(v9 - 8);
  if (a5 > (uint64_t)(v11 - v12) >> 4)
  {
    v13 = *(void **)a1;
    v14 = a5 + ((uint64_t)(v12 - *(_QWORD *)a1) >> 4);
    if (v14 >> 60)
      sub_100007810();
    v15 = (__dst - (uint64_t)v13) >> 4;
    v16 = v10 - (_QWORD)v13;
    if (v16 >> 3 > v14)
      v14 = v16 >> 3;
    if ((unint64_t)v16 >= 0x7FFFFFFFFFFFFFF0)
      v17 = 0xFFFFFFFFFFFFFFFLL;
    else
      v17 = v14;
    v37 = v9;
    if (v17)
      v18 = (char *)sub_10001FB2C(v9, v17);
    else
      v18 = 0;
    v28 = &v18[16 * v15];
    __p = v18;
    v34 = v28;
    v36 = &v18[16 * v17];
    v29 = 16 * a5;
    v30 = &v28[16 * a5];
    do
    {
      v31 = *(_OWORD *)v7;
      v7 += 16;
      *(_OWORD *)v28 = v31;
      v28 += 16;
      v29 -= 16;
    }
    while (v29);
    v35 = v30;
    v5 = (char *)sub_10001FCA8((void **)a1, (uint64_t)&__p, v5);
    if (v35 != v34)
      v35 += (v34 - v35 + 15) & 0xFFFFFFFFFFFFFFF0;
    if (__p)
      operator delete(__p);
    return v5;
  }
  v19 = v12 - __dst;
  v20 = (uint64_t)(v12 - __dst) >> 4;
  if (v20 >= a5)
  {
    v21 = &__src[16 * a5];
    v23 = *(char **)(v9 - 8);
LABEL_17:
    v24 = &v5[16 * a5];
    v25 = &v23[-16 * a5];
    v26 = v23;
    if ((unint64_t)v25 < v12)
    {
      v26 = v23;
      do
      {
        v27 = *(_OWORD *)v25;
        v25 += 16;
        *(_OWORD *)v26 = v27;
        v26 += 16;
      }
      while ((unint64_t)v25 < v12);
    }
    *(_QWORD *)(a1 + 8) = v26;
    if (v23 != v24)
      memmove(&v23[-16 * ((v23 - v24) >> 4)], v5, v23 - v24);
    if (v21 != v7)
      memmove(v5, v7, v21 - v7);
    return v5;
  }
  v21 = &__src[16 * v20];
  v22 = a4 - v21;
  if (a4 != v21)
    memmove(*(void **)(v9 - 8), &__src[16 * v20], a4 - v21);
  v23 = (char *)(v12 + v22);
  *(_QWORD *)(a1 + 8) = v12 + v22;
  if (v19 >= 1)
    goto LABEL_17;
  return v5;
}

void sub_10032D50C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_10032D544(_QWORD *a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t i;
  _QWORD *v8;
  unint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;

  v6 = a1[1];
  if (!v6)
    goto LABEL_9;
  for (i = 0; i != v6; *(_QWORD *)(*a1 + 8 * i++) = 0)
    ;
  v8 = (_QWORD *)a1[2];
  a1[2] = 0;
  a1[3] = 0;
  if (v8)
  {
    while (a2 != a3)
    {
      v9 = a2[2];
      v8[2] = v9;
      v8[3] = a2[3];
      v10 = (_QWORD *)*v8;
      v8[1] = v9;
      v11 = sub_10032D654((uint64_t)a1, v9, v8 + 2);
      sub_10032D7A8(a1, v8, v11);
      a2 = (_QWORD *)*a2;
      v8 = v10;
      if (!v10)
        goto LABEL_9;
    }
    do
    {
      v12 = (_QWORD *)*v8;
      operator delete(v8);
      v8 = v12;
    }
    while (v12);
  }
  else
  {
LABEL_9:
    while (a2 != a3)
    {
      sub_10032DADC(a1, (_OWORD *)a2 + 1);
      a2 = (_QWORD *)*a2;
    }
  }
}

void sub_10032D620(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;

  __cxa_begin_catch(a1);
  do
  {
    v2 = (_QWORD *)*v1;
    operator delete(v1);
    v1 = v2;
  }
  while (v2);
  __cxa_rethrow();
}

void sub_10032D640(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

_QWORD *sub_10032D654(uint64_t a1, unint64_t a2, _QWORD *a3)
{
  unint64_t v6;
  float v7;
  float v8;
  uint64_t v9;
  _BOOL8 v10;
  size_t v11;
  unint64_t v12;
  size_t v13;
  uint8x8_t v14;
  unint64_t v15;
  _QWORD *v16;
  int v17;
  _QWORD *result;
  unint64_t v19;
  unint64_t v20;
  _BOOL4 v21;
  int v22;

  v6 = *(_QWORD *)(a1 + 8);
  v7 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v8 = *(float *)(a1 + 32);
  if (!v6 || (float)(v8 * (float)v6) < v7)
  {
    v9 = 2 * v6;
    v10 = v6 < 3 || (v6 & (v6 - 1)) != 0;
    v11 = v10 | v9;
    v12 = vcvtps_u32_f32(v7 / v8);
    if (v11 <= v12)
      v13 = v12;
    else
      v13 = v11;
    sub_10032D890(a1, v13);
    v6 = *(_QWORD *)(a1 + 8);
  }
  v14 = (uint8x8_t)vcnt_s8((int8x8_t)v6);
  v14.i16[0] = vaddlv_u8(v14);
  if (v14.u32[0] > 1uLL)
  {
    v15 = a2;
    if (v6 <= a2)
      v15 = a2 % v6;
  }
  else
  {
    v15 = (v6 - 1) & a2;
  }
  v16 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v15);
  if (!v16)
    return 0;
  v17 = 0;
  do
  {
    result = v16;
    v16 = (_QWORD *)*v16;
    if (!v16)
      break;
    v19 = v16[1];
    if (v14.u32[0] > 1uLL)
    {
      v20 = v16[1];
      if (v19 >= v6)
        v20 = v19 % v6;
    }
    else
    {
      v20 = v19 & (v6 - 1);
    }
    if (v20 != v15)
      break;
    v21 = v19 == a2 && v16[2] == *a3;
    v22 = v17 & !v21;
    v17 |= v21;
  }
  while (v22 != 1);
  return result;
}

_QWORD *sub_10032D7A8(_QWORD *result, _QWORD *a2, _QWORD *a3)
{
  int8x8_t v3;
  unint64_t v4;
  uint8x8_t v5;
  unint64_t v6;

  v3 = (int8x8_t)result[1];
  v4 = a2[1];
  v5 = (uint8x8_t)vcnt_s8(v3);
  v5.i16[0] = vaddlv_u8(v5);
  if (v5.u32[0] > 1uLL)
  {
    if (v4 >= *(_QWORD *)&v3)
      v4 %= *(_QWORD *)&v3;
  }
  else
  {
    v4 &= *(_QWORD *)&v3 - 1;
  }
  if (!a3)
  {
    *a2 = result[2];
    result[2] = a2;
    *(_QWORD *)(*result + 8 * v4) = result + 2;
    if (!*a2)
      goto LABEL_19;
    v6 = *(_QWORD *)(*a2 + 8);
    if (v5.u32[0] > 1uLL)
    {
      if (v6 >= *(_QWORD *)&v3)
        v6 %= *(_QWORD *)&v3;
    }
    else
    {
      v6 &= *(_QWORD *)&v3 - 1;
    }
LABEL_18:
    *(_QWORD *)(*result + 8 * v6) = a2;
    goto LABEL_19;
  }
  *a2 = *a3;
  *a3 = a2;
  if (*a2)
  {
    v6 = *(_QWORD *)(*a2 + 8);
    if (v5.u32[0] > 1uLL)
    {
      if (v6 >= *(_QWORD *)&v3)
        v6 %= *(_QWORD *)&v3;
    }
    else
    {
      v6 &= *(_QWORD *)&v3 - 1;
    }
    if (v6 != v4)
      goto LABEL_18;
  }
LABEL_19:
  ++result[3];
  return result;
}

void sub_10032D890(uint64_t a1, size_t __n)
{
  size_t prime;
  int8x8_t v4;
  unint64_t v5;
  uint8x8_t v6;
  uint64_t v7;

  if (__n == 1)
  {
    prime = 2;
  }
  else
  {
    prime = __n;
    if ((__n & (__n - 1)) != 0)
      prime = std::__next_prime(__n);
  }
  v4 = *(int8x8_t *)(a1 + 8);
  if (prime > *(_QWORD *)&v4)
    goto LABEL_16;
  if (prime < *(_QWORD *)&v4)
  {
    v5 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (*(_QWORD *)&v4 < 3uLL || (v6 = (uint8x8_t)vcnt_s8(v4), v6.i16[0] = vaddlv_u8(v6), v6.u32[0] > 1uLL))
    {
      v5 = std::__next_prime(v5);
    }
    else
    {
      v7 = 1 << -(char)__clz(v5 - 1);
      if (v5 >= 2)
        v5 = v7;
    }
    if (prime <= v5)
      prime = v5;
    if (prime < *(_QWORD *)&v4)
LABEL_16:
      sub_10032D96C(a1, prime);
  }
}

void sub_10032D96C(uint64_t a1, unint64_t a2)
{
  void *v4;
  void *v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint8x8_t v9;
  void *v10;
  _QWORD *i;
  unint64_t v12;
  _QWORD *v13;
  _QWORD *v14;

  if (a2)
  {
    if (a2 >> 61)
      sub_1000078E0();
    v4 = operator new(8 * a2);
    v5 = *(void **)a1;
    *(_QWORD *)a1 = v4;
    if (v5)
      operator delete(v5);
    v6 = 0;
    *(_QWORD *)(a1 + 8) = a2;
    do
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v6++) = 0;
    while (a2 != v6);
    v7 = *(_QWORD **)(a1 + 16);
    if (v7)
    {
      v8 = v7[1];
      v9 = (uint8x8_t)vcnt_s8((int8x8_t)a2);
      v9.i16[0] = vaddlv_u8(v9);
      if (v9.u32[0] > 1uLL)
      {
        if (v8 >= a2)
          v8 %= a2;
      }
      else
      {
        v8 &= a2 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v8) = a1 + 16;
      for (i = (_QWORD *)*v7; *v7; i = (_QWORD *)*v7)
      {
        v12 = i[1];
        if (v9.u32[0] > 1uLL)
        {
          if (v12 >= a2)
            v12 %= a2;
        }
        else
        {
          v12 &= a2 - 1;
        }
        if (v12 == v8)
        {
          v7 = i;
        }
        else
        {
          v13 = i;
          if (*(_QWORD *)(*(_QWORD *)a1 + 8 * v12))
          {
            do
            {
              v14 = v13;
              v13 = (_QWORD *)*v13;
            }
            while (v13 && i[2] == v13[2]);
            *v7 = v13;
            *v14 = **(_QWORD **)(*(_QWORD *)a1 + 8 * v12);
            **(_QWORD **)(*(_QWORD *)a1 + 8 * v12) = i;
          }
          else
          {
            *(_QWORD *)(*(_QWORD *)a1 + 8 * v12) = v7;
            v7 = i;
            v8 = v12;
          }
        }
      }
    }
  }
  else
  {
    v10 = *(void **)a1;
    *(_QWORD *)a1 = 0;
    if (v10)
      operator delete(v10);
    *(_QWORD *)(a1 + 8) = 0;
  }
}

_QWORD *sub_10032DADC(_QWORD *a1, _OWORD *a2)
{
  _QWORD *v4;
  unint64_t v5;
  _QWORD *v6;

  v4 = operator new(0x20uLL);
  *((_OWORD *)v4 + 1) = *a2;
  v5 = v4[2];
  *v4 = 0;
  v4[1] = v5;
  v6 = sub_10032D654((uint64_t)a1, v5, v4 + 2);
  sub_10032D7A8(a1, v4, v6);
  return v4;
}

void sub_10032DB40(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

char *sub_10032DB54(char *result, __int128 *a2, __int128 *a3, unint64_t a4)
{
  char *v6;
  _OWORD *v7;
  __int128 v8;

  if (a4)
  {
    v6 = result;
    result = sub_10001FC68(result, a4);
    v7 = (_OWORD *)*((_QWORD *)v6 + 1);
    while (a2 != a3)
    {
      v8 = *a2++;
      *v7++ = v8;
    }
    *((_QWORD *)v6 + 1) = v7;
  }
  return result;
}

void sub_10032DBA8(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_10032DBC4(_QWORD *a1, uint64_t *a2, uint64_t *a3)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char v10;

  v6 = operator new(0x20uLL);
  v7 = *a2;
  v8 = *a3;
  v6[2] = *a2;
  v6[3] = v8;
  *v6 = 0;
  v6[1] = v7;
  v9 = sub_10032DC48(a1, v6);
  if ((v10 & 1) == 0)
    operator delete(v6);
  return v9;
}

void sub_10032DC34(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_10032DC48(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v2;
  unint64_t v4;
  _QWORD *v5;
  _QWORD *v6;

  v2 = a2;
  v5 = a2 + 2;
  v4 = a2[2];
  *(v5 - 1) = v4;
  v6 = sub_10032DC9C((uint64_t)a1, v4, v5);
  if (v6)
    return v6;
  sub_10032DDB0(a1, v2);
  return v2;
}

_QWORD *sub_10032DC9C(uint64_t a1, unint64_t a2, _QWORD *a3)
{
  unint64_t v3;
  uint8x8_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *i;
  unint64_t v8;
  float v9;
  float v10;
  uint64_t v11;
  _BOOL8 v12;
  size_t v13;
  unint64_t v14;
  size_t v15;

  v3 = *(_QWORD *)(a1 + 8);
  if (v3)
  {
    v4 = (uint8x8_t)vcnt_s8((int8x8_t)v3);
    v4.i16[0] = vaddlv_u8(v4);
    if (v4.u32[0] > 1uLL)
      v5 = v3 <= a2 ? a2 % v3 : a2;
    else
      v5 = (v3 - 1) & a2;
    v6 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v5);
    if (v6)
    {
      for (i = (_QWORD *)*v6; i; i = (_QWORD *)*i)
      {
        v8 = i[1];
        if (v8 == a2)
        {
          if (i[2] == *a3)
            return i;
        }
        else
        {
          if (v4.u32[0] > 1uLL)
          {
            if (v8 >= v3)
              v8 %= v3;
          }
          else
          {
            v8 &= v3 - 1;
          }
          if (v8 != v5)
            break;
        }
      }
    }
  }
  v9 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v10 = *(float *)(a1 + 32);
  if (!v3 || (float)(v10 * (float)v3) < v9)
  {
    v11 = 2 * v3;
    v12 = v3 < 3 || (v3 & (v3 - 1)) != 0;
    v13 = v12 | v11;
    v14 = vcvtps_u32_f32(v9 / v10);
    if (v13 <= v14)
      v15 = v14;
    else
      v15 = v13;
    sub_10001CBC8(a1, v15);
  }
  return 0;
}

_QWORD *sub_10032DDB0(_QWORD *result, _QWORD *a2)
{
  int8x8_t v2;
  unint64_t v3;
  uint8x8_t v4;
  _QWORD *v5;
  unint64_t v6;

  v2 = (int8x8_t)result[1];
  v3 = a2[1];
  v4 = (uint8x8_t)vcnt_s8(v2);
  v4.i16[0] = vaddlv_u8(v4);
  if (v4.u32[0] > 1uLL)
  {
    if (v3 >= *(_QWORD *)&v2)
      v3 %= *(_QWORD *)&v2;
  }
  else
  {
    v3 &= *(_QWORD *)&v2 - 1;
  }
  v5 = *(_QWORD **)(*result + 8 * v3);
  if (v5)
  {
    *a2 = *v5;
LABEL_13:
    *v5 = a2;
    goto LABEL_14;
  }
  *a2 = result[2];
  result[2] = a2;
  *(_QWORD *)(*result + 8 * v3) = result + 2;
  if (*a2)
  {
    v6 = *(_QWORD *)(*a2 + 8);
    if (v4.u32[0] > 1uLL)
    {
      if (v6 >= *(_QWORD *)&v2)
        v6 %= *(_QWORD *)&v2;
    }
    else
    {
      v6 &= *(_QWORD *)&v2 - 1;
    }
    v5 = (_QWORD *)(*result + 8 * v6);
    goto LABEL_13;
  }
LABEL_14:
  ++result[3];
  return result;
}

void sub_10032DE6C()
{
  operator delete();
}

_QWORD *sub_10032DE80(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = off_1012523C8;
  result[1] = v3;
  return result;
}

uint64_t sub_10032DEB4(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = off_1012523C8;
  a2[1] = v2;
  return result;
}

uint64_t sub_10032DED0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 8))(a2, a3, a4, a5, a6);
}

uint64_t sub_10032DEEC(uint64_t a1, uint64_t a2)
{
  if (sub_100133F24(a2, (uint64_t)&off_101252448))
    return a1 + 8;
  else
    return 0;
}

_UNKNOWN **sub_10032DF28()
{
  return &off_101252448;
}

void sub_10032DF48()
{
  void *v0;

  v0 = objc_autoreleasePoolPush();
  xmmword_101415460 = (__int128)vdupq_n_s64(0x7FFFFFFFFFFFFFFFuLL);
  *(int64x2_t *)algn_101415470 = vdupq_n_s64(0x8000000000000000);
  xmmword_101415480 = (__int128)vdupq_n_s64(0x7FEFFFFFFFFFFFFFuLL);
  *(int64x2_t *)algn_101415490 = vdupq_n_s64(0xFFEFFFFFFFFFFFFFLL);
  objc_autoreleasePoolPop(v0);
}

void sub_10032E0E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10032E0FC(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_10032E10C(uint64_t a1)
{

}

void sub_10032E114(uint64_t a1)
{
  id v2;
  uint64_t v3;
  void *v4;

  v2 = objc_msgSend(objc_alloc(*(Class *)(a1 + 40)), "initWithRange:", *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_10032E56C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10032E588(_QWORD *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _BYTE *a7)
{
  void *v9;
  void *v10;
  unint64_t v11;

  v9 = (void *)a1[4];
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "substringToIndex:", 1));
  objc_msgSend(v9, "appendString:", v10);

  ++*(_QWORD *)(*(_QWORD *)(a1[5] + 8) + 24);
  v11 = a1[6];
  if (v11)
    LOBYTE(v11) = *(_QWORD *)(*(_QWORD *)(a1[5] + 8) + 24) >= v11;
  *a7 = v11;
}

void sub_10032E6D8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _BYTE *a7)
{
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;

  v14 = a2;
  if ((unint64_t)objc_msgSend(v14, "length") >= 2)
  {
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "localizedStringForKey:value:table:", CFSTR("%@.%@"), 0, 0));

    v11 = *(void **)(a1 + 32);
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "substringToIndex:", 1));
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "substringFromIndex:", objc_msgSend(v14, "length")));
    objc_msgSend(v11, "appendFormat:", v10, v12, v13);

  }
  *a7 = 1;

}

void sub_10032F290(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10032F2C0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10032F7C4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10032F7F4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10032FC80(id a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSCharacterSet characterSetWithCharactersInString:](NSCharacterSet, "characterSetWithCharactersInString:", CFSTR("*?+[(){}^$|\\./")));
  objc_storeStrong((id *)&qword_1014154A0, v1);
  if (!qword_1014154A0)
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101252580);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E218C4();
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_1012525A0);
    v2 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100DE7468(v2);
    v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[NSString(CRLAdditions) crl_escapeForIcuRegex]_block_invoke"));
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/NSString_CRLAdditions.m"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v3, v4, 440, 0, "invalid nil value for '%{public}s'", "icuRegexCharSet");

  }
}

void sub_10032FE08(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10032FE38(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

CFStringTokenizerTokenType sub_10033147C(uint64_t a1, CFStringTokenizerRef tokenizer)
{
  CFStringTokenizerTokenType Token;
  CFStringTokenizerTokenType v5;
  BOOL v6;

  do
  {
    while (1)
    {
      Token = CFStringTokenizerAdvanceToNextToken(tokenizer);
      v5 = Token;
      if (Token)
        break;
      if (CFStringTokenizerGetCurrentTokenRange(tokenizer).location == -1)
        return v5;
    }
    if (*(_BYTE *)(a1 + 32))
      v6 = 1;
    else
      v6 = (Token & 0x10) == 0;
  }
  while (!v6);
  return v5;
}

void sub_100331538(id a1)
{
  id v1;
  void *v2;
  __int16 v3;

  v3 = -4;
  v1 = objc_msgSend(objc_alloc((Class)NSString), "initWithCharacters:length:", &v3, 1);
  v2 = (void *)qword_1014154B0;
  qword_1014154B0 = (uint64_t)v1;

}

void sub_1003316AC(id a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[NSCharacterSet characterSetWithCharactersInString:](NSCharacterSet, "characterSetWithCharactersInString:", CFSTR("ـ‑-‐–—")));
  v2 = (void *)qword_1014154C8;
  qword_1014154C8 = v1;

}

void sub_100331738(id a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[NSCharacterSet characterSetWithCharactersInString:](NSCharacterSet, "characterSetWithCharactersInString:", CFSTR("'\"’‘‚“”„«»‹›」「』『")));
  v2 = (void *)qword_1014154D8;
  qword_1014154D8 = v1;

}

void sub_100331E34(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100331E64(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100332294(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;

  v9 = a3;
  v5 = objc_msgSend(*(id *)(a1 + 32), "rangeOfString:", a2);
  if (v5 != (id)0x7FFFFFFFFFFFFFFFLL)
  {
    v7 = *(void **)(a1 + 40);
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSValue valueWithRange:](NSValue, "valueWithRange:", v5, v6));
    objc_msgSend(v7, "setObject:forKeyedSubscript:", v9, v8);

  }
}

int64_t sub_100332314(id a1, NSValue *a2, NSValue *a3)
{
  NSValue *v4;
  id v5;
  id v6;

  v4 = a3;
  v5 = -[NSValue rangeValue](a2, "rangeValue");
  v6 = -[NSValue rangeValue](v4, "rangeValue");

  if (v5 > v6)
    return -1;
  else
    return v5 < v6;
}

void sub_10033263C(id a1)
{
  uint64_t v1;
  void *v2;
  id v3;
  int v4;

  v1 = objc_claimAutoreleasedReturnValue(+[NSMutableCharacterSet characterSetWithRange:](NSMutableCharacterSet, "characterSetWithRange:", 0, 32));
  v2 = (void *)qword_1014154E0;
  qword_1014154E0 = v1;

  objc_msgSend((id)qword_1014154E0, "addCharactersInString:", CFSTR("\"\\"));
  v4 = 539566120;
  v3 = objc_msgSend(objc_alloc((Class)NSString), "initWithCharacters:length:", &v4, 2);
  objc_msgSend((id)qword_1014154E0, "addCharactersInString:", v3);

}

void sub_100332854(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100332884(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100332E5C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_1003332C8(id a1)
{
  id v1;
  id v2;
  void *v3;
  id v4;

  v4 = 0;
  v1 = objc_msgSend(objc_alloc((Class)NSRegularExpression), "initWithPattern:options:error:", CFSTR("<REDACT .*? REDACT>"), 8, &v4);
  v2 = v4;
  v3 = (void *)qword_1014154F0;
  qword_1014154F0 = (uint64_t)v1;

}

void sub_100333DB0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100333DE0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10033434C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10033437C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003343AC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003343DC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10033440C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10033443C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100334630(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100334660(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

id sub_10033473C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setCurrentSearchResultsCount:", (char *)objc_msgSend(*(id *)(a1 + 32), "currentSearchResultsCount") + 1);
}

void sub_100334B30(id *a1, void *a2)
{
  id v3;
  id v4;
  uint64_t v5;
  double v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  _QWORD v12[4];
  id v13;
  _QWORD v14[4];
  id v15;

  v3 = a1[4];
  v4 = a2;
  *(_QWORD *)&v6 = objc_opt_class(v3, v5).n128_u64[0];
  v8 = v7;
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "searchString", v6));
  v10 = objc_msgSend(a1[4], "searchOptions");
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  v14[2] = sub_100334C40;
  v14[3] = &unk_1012528D0;
  v11 = a1[5];
  v15 = a1[6];
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_100334CF0;
  v12[3] = &unk_10122D110;
  v13 = a1[5];
  objc_msgSend(v8, "_recursiveSearchWithSearchTarget:forString:options:dispatchGroup:hitBlock:completionBlock:", v4, v9, v10, v11, v14, v12);

}

void sub_100334C40(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;

  v3 = a2;
  v4 = *(void **)(a1 + 32);
  v9 = v3;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "model"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "objectForKey:", v5));

  if (!v6)
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
    v7 = *(void **)(a1 + 32);
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "model"));
    objc_msgSend(v7, "setObject:forKey:", v6, v8);

  }
  objc_msgSend(v6, "addObject:", v9);

}

void sub_100334CF0(uint64_t a1)
{
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

uint64_t sub_100334CF8(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32));
}

void sub_100334DEC(uint64_t a1, void *a2)
{
  id v3;
  double v4;
  double v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;

  v3 = a2;
  objc_msgSend(v3, "searchReferencePoint");
  if ((sub_100061860(v4, v5) & 1) == 0)
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101252918);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E21CE4();
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101252938);
    v6 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100DE7468(v6);
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLFindReplaceController performSearchWithSearchTarget:resultsArray:]_block_invoke"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLFindReplaceController.m"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v7, v8, 276, 0, "the hit reference should have a valid point");

  }
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "layoutSearchResults"));
  objc_msgSend(v9, "addObject:", v3);

  objc_msgSend(*(id *)(a1 + 40), "addObject:", v3);
}

void sub_100334F70(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100334FA0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003351C4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003351F4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

id sub_10033553C(uint64_t a1, uint64_t a2)
{
  return _objc_msgSend(*(id *)(a1 + 32), "p_handleVisibleResults:", a2);
}

void sub_100335F78(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100335FA8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100335FD8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100336008(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003361B8(uint64_t a1, void *a2)
{
  id v3;

  v3 = a2;
  if ((objc_opt_respondsToSelector(v3, "calculatePointFromSearchReference:") & 1) != 0)
  {
    objc_msgSend(v3, "calculatePointFromSearchReference:", *(_QWORD *)(a1 + 32));
    objc_msgSend(*(id *)(a1 + 32), "setSearchReferencePoint:");
  }

}

void sub_100336330(uint64_t a1, void *a2)
{
  id v3;

  v3 = a2;
  if ((objc_opt_respondsToSelector(v3, "calculatePointFromSearchReference:") & 1) != 0)
  {
    objc_msgSend(v3, "calculatePointFromSearchReference:", *(_QWORD *)(a1 + 32));
    objc_msgSend(*(id *)(a1 + 32), "setSearchReferencePoint:");
  }

}

void sub_100337AD4(uint64_t a1)
{
  void (**v2)(void);
  NSObject *v3;
  _QWORD block[4];
  void (**v5)(void);

  v2 = *(void (***)(void))(a1 + 40);
  if (v2)
  {
    v3 = *(NSObject **)(a1 + 32);
    if (v3)
    {
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_100337B64;
      block[3] = &unk_10122D7E0;
      v5 = v2;
      dispatch_async(v3, block);

    }
    else
    {
      v2[2]();
    }
  }
}

uint64_t sub_100337B64(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

BOOL sub_10033831C(_BOOL8 result)
{
  int v1;
  NSObject *v2;
  void *v3;
  void *v4;
  void *v5;

  if (result != 2)
  {
    if (result == 1)
    {
      v1 = +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101252A68);
      v2 = off_1013D9070;
      if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
        sub_100E21EFC(v1, v2);
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101252A88);
      v3 = off_1013D9070;
      if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
        sub_100DE81F0(v3, v1);
      v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "CRLInputType CRLInputTypeForUITouchType(UITouchType)"));
      v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLInputType.m"));
      +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v4, v5, 20, 0, "Unexpected touch type UITouchTypeIndirect");

      return 0;
    }
    else
    {
      return result == 0;
    }
  }
  return result;
}

void sub_100338478(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003384A8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100338A7C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100338AAC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100338ADC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100338B0C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100338B3C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLMovieCompatibilityConverterLogCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB978;
  off_1013DB978 = v2;

}

void sub_100338DC0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100338DF0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003390D8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_100339188(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  unsigned int v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  void *v9;
  void *v10;
  _QWORD *v11;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  int v17;
  uint64_t v18;
  void *v19;
  _QWORD v20[5];
  id v21;
  _QWORD v22[5];
  id v23;
  _QWORD v24[5];
  id v25;

  v2 = objc_autoreleasePoolPush();
  v3 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 64), "error"));
  v4 = (void *)v3;
  v5 = atomic_load((unsigned int *)(*(_QWORD *)(a1 + 32) + 152));
  v6 = *(_QWORD *)(a1 + 32);
  if (v5)
    v7 = 0;
  else
    v7 = v3 == 0;
  if (v7)
  {
    v8 = *(_QWORD *)(v6 + 32);
    if (v8)
    {
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v6 + 8), "AVAssetAndReturnError:", 0));
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "tracks"));

      if (v10)
        LODWORD(v10) = +[CRLMovieCompatibilityChecker assetContainsHEVCVideoTracks:](CRLMovieCompatibilityChecker, "assetContainsHEVCVideoTracks:", v9);
      v11 = *(_QWORD **)(a1 + 32);
      if (v8 <= 2 && (_DWORD)v10 == 0)
      {
        objc_msgSend(*(id *)(a1 + 32), "p_finishConvertingWithConvertedMovieData:error:completionHandler:", 0, 0, *(_QWORD *)(a1 + 40));
      }
      else
      {
        v13 = v11[5];
        if (v13 <= 2)
        {
          +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
          if (qword_10147E370 != -1)
            dispatch_once(&qword_10147E370, &stru_101252BA8);
          if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
            sub_100E22134();
          if (qword_10147E370 != -1)
            dispatch_once(&qword_10147E370, &stru_101252BC8);
          v14 = off_1013D9070;
          if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
            sub_100DE7468(v14);
          v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLMovieCompatibilityConverter convertMediaWithCompletionHandler:]_block_invoke"));
          v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLMovieCompatibilityConverter.m"));
          +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v15, v16, 186, 0, "Optimizing movie past what is requested!");

          v11 = *(_QWORD **)(a1 + 32);
          v13 = v11[5];
        }
        if (v13 == 3)
          v17 = (int)v10;
        else
          v17 = 0;
        v18 = v11[1];
        if (v17 == 1)
        {
          v22[0] = _NSConcreteStackBlock;
          v22[1] = 3221225472;
          v22[2] = sub_100339538;
          v22[3] = &unk_101231FA8;
          v22[4] = v11;
          v23 = *(id *)(a1 + 40);
          objc_msgSend(v11, "p_convertMovieData:fromPlayableByAVFoundationToThisDeviceWithCompletionHandler:", v18, v22);
          v19 = v23;
        }
        else
        {
          v20[0] = _NSConcreteStackBlock;
          v20[1] = 3221225472;
          v20[2] = sub_10033954C;
          v20[3] = &unk_101231FA8;
          v20[4] = v11;
          v21 = *(id *)(a1 + 40);
          objc_msgSend(v11, "p_convertMovieData:fromPlayableByAVFoundationToAllDevicesWithCompletionHandler:", v18, v20);
          v19 = v21;
        }

      }
    }
    else
    {
      v24[0] = _NSConcreteStackBlock;
      v24[1] = 3221225472;
      v24[2] = sub_1003394CC;
      v24[3] = &unk_101231F00;
      v24[4] = v6;
      v25 = *(id *)(a1 + 40);
      objc_msgSend((id)v6, "p_checkInitialCompatibilityLevelWithCompletionHandler:", v24);

    }
  }
  else
  {
    objc_msgSend(*(id *)(a1 + 32), "p_finishConvertingWithConvertedMovieData:error:completionHandler:", 0, v3, *(_QWORD *)(a1 + 40));
  }

  objc_autoreleasePoolPop(v2);
}

id sub_1003394CC(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "convertMediaWithCompletionHandler:", *(_QWORD *)(a1 + 40));
}

void sub_1003394D8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100339508(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

id sub_100339538(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_finishConvertingWithConvertedMovieData:error:completionHandler:", a2, a3, *(_QWORD *)(a1 + 40));
}

id sub_10033954C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_finishConvertingWithConvertedMovieData:error:completionHandler:", a2, a3, *(_QWORD *)(a1 + 40));
}

void sub_100339880(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003398B0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100339D30(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLMovieCompatibilityConverterLogCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB978;
  off_1013DB978 = v2;

}

void sub_100339D5C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100339D8C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

id sub_100339DBC(uint64_t a1)
{
  float v2;
  double v3;
  double v4;

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 56), "progress");
  v3 = v2;
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 96), "maxValue");
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 96), "setValue:", v4 * v3);
}

void sub_100339E08(uint64_t a1)
{
  NSObject *v2;
  _QWORD v3[4];
  __int128 v4;
  id v5;
  id v6;
  id v7;
  id v8;

  v2 = qword_101415530;
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100339EC4;
  v3[3] = &unk_101252DE8;
  v4 = *(_OWORD *)(a1 + 32);
  v5 = *(id *)(a1 + 48);
  v6 = *(id *)(a1 + 56);
  v7 = *(id *)(a1 + 64);
  v8 = *(id *)(a1 + 72);
  dispatch_async(v2, v3);

}

void sub_100339EC4(uint64_t a1)
{
  _QWORD *v2;
  id v3;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  void *v8;
  _TtC8Freeform27CRLPreinsertionAssetWrapper *v9;
  _QWORD v10[4];
  int8x16_t v11;
  id v12;
  id v13;
  id v14;
  id v15;

  v2 = (_QWORD *)(a1 + 32);
  dispatch_source_cancel(*(dispatch_source_t *)(*(_QWORD *)(a1 + 32) + 104));
  objc_msgSend(*(id *)(*v2 + 96), "maxValue");
  objc_msgSend(*(id *)(*v2 + 96), "setValue:");
  v3 = objc_msgSend(*(id *)(*v2 + 56), "status");
  if (v3 == (id)3)
  {
    if (atomic_load((unsigned int *)(*v2 + 152)))
    {
      (*(void (**)(void))(*(_QWORD *)(a1 + 72) + 16))();
    }
    else
    {
      v9 = -[CRLPreinsertionAssetWrapper initWithUrl:owner:]([_TtC8Freeform27CRLPreinsertionAssetWrapper alloc], "initWithUrl:owner:", *(_QWORD *)(a1 + 40), *(_QWORD *)(*(_QWORD *)(a1 + 32) + 48));
      v10[0] = _NSConcreteStackBlock;
      v10[1] = 3221225472;
      v10[2] = sub_10033A0A0;
      v10[3] = &unk_101252DA0;
      v11 = vextq_s8(*(int8x16_t *)(a1 + 32), *(int8x16_t *)(a1 + 32), 8uLL);
      v12 = *(id *)(a1 + 48);
      v13 = *(id *)(a1 + 56);
      v14 = *(id *)(a1 + 64);
      v15 = *(id *)(a1 + 72);
      -[CRLPreinsertionAssetWrapper createAssetWithCompletionHandler:](v9, "createAssetWithCompletionHandler:", v10);

    }
  }
  else
  {
    v5 = (uint64_t)v3;
    if (qword_10147E5F0 != -1)
      dispatch_once(&qword_10147E5F0, &stru_101252DC0);
    v6 = off_1013DB978;
    if (os_log_type_enabled((os_log_t)off_1013DB978, OS_LOG_TYPE_DEBUG))
      sub_100E22348(v2, v5, v6);
    v7 = *(_QWORD *)(a1 + 72);
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 56), "error"));
    (*(void (**)(uint64_t, _QWORD, void *))(v7 + 16))(v7, 0, v8);

  }
}

void sub_10033A0A0(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  NSObject *v7;
  id v8;
  id v9;
  _QWORD v10[4];
  id v11;
  __int128 v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;

  v5 = a2;
  v6 = a3;
  v7 = qword_101415530;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_10033A1A4;
  v10[3] = &unk_101252D78;
  v11 = v6;
  v12 = *(_OWORD *)(a1 + 32);
  v13 = *(id *)(a1 + 48);
  v14 = v5;
  v15 = *(id *)(a1 + 56);
  v16 = *(id *)(a1 + 64);
  v17 = *(id *)(a1 + 72);
  v8 = v5;
  v9 = v6;
  dispatch_async(v7, v10);

}

void sub_10033A1A4(uint64_t a1)
{
  unsigned int v2;
  NSObject *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  unint64_t v9;
  CRLMovieCompatibilityChecker *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[6];
  id v19;
  id v20;
  void *v21;
  id v22;
  uint8_t buf[4];
  unsigned int v24;
  __int16 v25;
  const char *v26;
  __int16 v27;
  const char *v28;
  __int16 v29;
  int v30;
  __int16 v31;
  uint64_t v32;
  __int16 v33;
  uint64_t v34;

  if (!*(_QWORD *)(a1 + 32))
  {
    v2 = +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101252C88);
    v3 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
    {
      v16 = *(_QWORD *)(a1 + 32);
      v17 = *(_QWORD *)(a1 + 40);
      *(_DWORD *)buf = 67110402;
      v24 = v2;
      v25 = 2082;
      v26 = "-[CRLMovieCompatibilityConverter p_convertMovieData:withPresetName:completionHandler:]_block_invoke_5";
      v27 = 2082;
      v28 = "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLMovieCompatibilityConverter.m";
      v29 = 1024;
      v30 = 296;
      v31 = 2112;
      v32 = v16;
      v33 = 2112;
      v34 = v17;
      _os_log_error_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Received error %@ creating data from %@", buf, 0x36u);
    }
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101252CA8);
    v4 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100DE7468(v4);
    v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLMovieCompatibilityConverter p_convertMovieData:withPresetName:completionHandler:]_block_invoke"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLMovieCompatibilityConverter.m"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v5, v6, 296, 0, "Received error %@ creating data from %@", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));

  }
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 48) + 56), "error"));
  v8 = objc_msgSend(*(id *)(a1 + 56), "length");
  if (objc_msgSend(*(id *)(a1 + 64), "length") <= v8)
    goto LABEL_24;
  if (qword_10147E5F0 != -1)
    dispatch_once(&qword_10147E5F0, &stru_101252CC8);
  if (os_log_type_enabled((os_log_t)off_1013DB978, OS_LOG_TYPE_DEBUG))
    sub_100E2249C();
  v9 = sub_100243D58(*(void **)(a1 + 72));
  if (!sub_100243F8C(v9)
    || !+[CRLMovieCompatibilityChecker assetContainsH264VideoTracks:](CRLMovieCompatibilityChecker, "assetContainsH264VideoTracks:", *(_QWORD *)(a1 + 80)))
  {
    if (!+[CRLMovieCompatibilityChecker isPreset:moreCompatibleThanAsset:](CRLMovieCompatibilityChecker, "isPreset:moreCompatibleThanAsset:", v9, *(_QWORD *)(a1 + 80)))
    {
      if (qword_10147E5F0 != -1)
        dispatch_once(&qword_10147E5F0, &stru_101252D50);
      v15 = off_1013DB978;
      if (os_log_type_enabled((os_log_t)off_1013DB978, OS_LOG_TYPE_DEBUG))
        sub_100E2245C(v15);
      v13 = *(_QWORD *)(a1 + 88);
      v14 = *(_QWORD *)(a1 + 56);
      goto LABEL_30;
    }
    if (qword_10147E5F0 != -1)
      dispatch_once(&qword_10147E5F0, &stru_101252D30);
    v12 = off_1013DB978;
    if (os_log_type_enabled((os_log_t)off_1013DB978, OS_LOG_TYPE_DEBUG))
      sub_100E223BC((id *)(a1 + 72), v12);
LABEL_24:
    v13 = *(_QWORD *)(a1 + 88);
    v14 = *(_QWORD *)(a1 + 64);
LABEL_30:
    (*(void (**)(uint64_t, uint64_t, void *))(v13 + 16))(v13, v14, v7);
    goto LABEL_31;
  }
  v10 = -[CRLMovieCompatibilityChecker initWithData:]([CRLMovieCompatibilityChecker alloc], "initWithData:", *(_QWORD *)(a1 + 64));
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 3221225472;
  v18[2] = sub_10033A638;
  v18[3] = &unk_101252D10;
  v11 = *(_QWORD *)(a1 + 48);
  v18[4] = v10;
  v18[5] = v11;
  v22 = *(id *)(a1 + 88);
  v19 = *(id *)(a1 + 64);
  v20 = *(id *)(a1 + 56);
  v21 = v7;
  -[CRLMovieCompatibilityChecker checkCompatibilityUpToLevel:completionHandler:](v10, "checkCompatibilityUpToLevel:completionHandler:", 4, v18);

LABEL_31:
}

void sub_10033A5AC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10033A5DC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10033A60C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLMovieCompatibilityConverterLogCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB978;
  off_1013DB978 = v2;

}

uint64_t sub_10033A638(uint64_t a1)
{
  id v2;
  uint64_t v3;
  NSObject *v4;

  v2 = objc_msgSend(*(id *)(a1 + 32), "compatibilityLevel");
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 32);
  if (qword_10147E5F0 != -1)
    dispatch_once(&qword_10147E5F0, &stru_101252CE8);
  v4 = off_1013DB978;
  if (os_log_type_enabled((os_log_t)off_1013DB978, OS_LOG_TYPE_DEBUG))
    sub_100E22508((uint64_t)v2 > v3, v4);
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 72) + 16))();
}

void sub_10033A6E4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLMovieCompatibilityConverterLogCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB978;
  off_1013DB978 = v2;

}

void sub_10033A710(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLMovieCompatibilityConverterLogCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB978;
  off_1013DB978 = v2;

}

void sub_10033A73C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLMovieCompatibilityConverterLogCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB978;
  off_1013DB978 = v2;

}

void sub_10033A768(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLMovieCompatibilityConverterLogCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB978;
  off_1013DB978 = v2;

}

void sub_10033AAC0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLMovieCompatibilityConverterLogCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB978;
  off_1013DB978 = v2;

}

void sub_10033AAEC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLMovieCompatibilityConverterLogCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB978;
  off_1013DB978 = v2;

}

void sub_10033AB18(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLMovieCompatibilityConverterLogCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB978;
  off_1013DB978 = v2;

}

void sub_10033AC58(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLMovieCompatibilityConverterLogCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB978;
  off_1013DB978 = v2;

}

void sub_10033AC84(uint64_t a1)
{
  id v1;
  id v2;
  id v3;
  uint64_t v4;
  void *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];

  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(*(_QWORD *)(a1 + 32) + 120);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        objc_msgSend(*(id *)(*((_QWORD *)&v6 + 1) + 8 * (_QWORD)v5), "cancel", (_QWORD)v6);
        v5 = (char *)v5 + 1;
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

void sub_10033AD70(uint64_t a1)
{
  void *v2;

  v2 = objc_autoreleasePoolPush();
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 56), "cancelExport");
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 64), "cancel");
  objc_autoreleasePoolPop(v2);
}

void sub_10033B0FC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLMovieCompatibilityConverterLogCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB978;
  off_1013DB978 = v2;

}

void sub_10033B128(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10033B158(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10033B188(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10033B1B8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

uint64_t sub_10033B1E8(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(*(_QWORD *)(a1 + 32) + 32) = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 64), "compatibilityLevel");
  result = *(_QWORD *)(a1 + 40);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

void sub_10033B31C(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_list va;

  va_start(va, a4);
  _os_log_debug_impl(a1, log, OS_LOG_TYPE_DEBUG, a4, (uint8_t *)va, 0x16u);
}

void sub_10033B838(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10033B868(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10033BE2C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10033BE5C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10033BE8C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10033BEBC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10033BEEC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10033BF1C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

id sub_10033BF4C(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_provideImageDataForAssetOwner:data:modalOperationPresenter:compatibilityAlertPresenter:completionHandler:", *(_QWORD *)(a1 + 40), a2, *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64));
}

void sub_10033C22C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10033C25C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10033C28C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  _QWORD v12[4];
  id v13;
  id v14;
  uint64_t v15;
  id v16;

  v5 = a2;
  v6 = a3;
  v7 = *(void **)(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_10033C358;
  v12[3] = &unk_101253098;
  v13 = v5;
  v14 = v6;
  v9 = *(id *)(a1 + 48);
  v15 = *(_QWORD *)(a1 + 32);
  v16 = v9;
  v10 = v6;
  v11 = v5;
  objc_msgSend(v7, "p_continueWorkOnMainThreadWithModalOperationPresenter:usingBlock:", v8, v12);

}

void sub_10033C358(uint64_t a1)
{
  id v2;
  uint64_t v3;
  id v4;
  id v5;

  v5 = *(id *)(a1 + 32);
  v2 = *(id *)(a1 + 40);
  v3 = *(_QWORD *)(a1 + 56);
  if (v3)
  {
    if (*(_BYTE *)(*(_QWORD *)(a1 + 48) + 40))
    {

      v4 = 0;
      v2 = 0;
      v3 = *(_QWORD *)(a1 + 56);
    }
    else
    {
      v4 = v5;
    }
    v5 = v4;
    (*(void (**)(void))(v3 + 16))();
  }

}

void sub_10033C3E0(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  _QWORD v6[4];
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;

  v2 = *(void **)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_10033C4B8;
  v6[3] = &unk_101252D10;
  v7 = *(id *)(a1 + 48);
  v8 = *(id *)(a1 + 56);
  v4 = *(id *)(a1 + 80);
  v5 = *(_QWORD *)(a1 + 32);
  v12 = v4;
  v9 = v5;
  v10 = *(id *)(a1 + 64);
  v11 = *(id *)(a1 + 72);
  objc_msgSend(v2, "p_continueWorkOnMainThreadWithModalOperationPresenter:usingBlock:", v3, v6);

}

void sub_10033C4B8(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  void *v20;
  id v21;
  _QWORD v22[4];
  id v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  _QWORD v28[2];
  _QWORD v29[2];
  _QWORD v30[3];
  _QWORD v31[3];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "error"));
  if (v2)
  {

LABEL_4:
    v3 = *(_QWORD *)(a1 + 72);
    v21 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "error"));
    (*(void (**)(uint64_t, _QWORD))(v3 + 16))(v3, 0);

    return;
  }
  if ((objc_msgSend(*(id *)(a1 + 32), "isCancelled") & 1) != 0)
    goto LABEL_4;
  v4 = (uint64_t)objc_msgSend(*(id *)(a1 + 32), "compatibilityLevel");
  if (v4 > 1)
  {
    if (v4 == 2)
    {
      _objc_msgSend(*(id *)(a1 + 48), "p_convertImageData:toCompatibilityLevel:assetOwner:completionHandler:", *(_QWORD *)(a1 + 40), 4, *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 72));
    }
    else if ((unint64_t)v4 > 3)
    {
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(a1 + 72) + 16))(*(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 40), 0);
    }
    else
    {
      v22[0] = _NSConcreteStackBlock;
      v22[1] = 3221225472;
      v22[2] = sub_10033C8B8;
      v22[3] = &unk_1012530E8;
      v17 = *(void **)(a1 + 64);
      v26 = *(id *)(a1 + 72);
      v27 = 3;
      v18 = *(id *)(a1 + 40);
      v19 = *(_QWORD *)(a1 + 48);
      v20 = *(void **)(a1 + 56);
      v23 = v18;
      v24 = v19;
      v25 = v20;
      objc_msgSend(v17, "presentMediaCompatibilityAlertWithReasons:forMediaType:forSingleMediaObject:completionHandler:", 2, 2, 1, v22);

    }
  }
  else
  {
    v5 = objc_alloc((Class)NSError);
    v30[0] = NSLocalizedDescriptionKey;
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "localizedStringForKey:value:table:", CFSTR("Couldn’t Add Image"), 0, 0));
    v31[0] = v7;
    v30[1] = NSLocalizedRecoverySuggestionErrorKey;
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "localizedStringForKey:value:table:", CFSTR("Your image wasn’t added because it’s in an unsupported format."), 0, 0));
    v30[2] = CFSTR("CRLBoardItemImporterErrorMediaTypeKey");
    v31[1] = v9;
    v31[2] = &off_1012CC808;
    v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v31, v30, 3));
    v11 = objc_msgSend(v5, "initWithDomain:code:userInfo:", CFSTR("com.apple.freeform.CRLErrorDomainInfoImporter"), 103, v10);

    if ((sub_10040ED28(*(void **)(a1 + 40)) & 1) == 0)
    {
      v12 = objc_alloc((Class)NSError);
      v28[0] = NSLocalizedFailureReasonErrorKey;
      v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
      v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "localizedStringForKey:value:table:", CFSTR("This image is too large to insert."), 0, 0));
      v28[1] = CFSTR("CRLBoardItemImporterErrorMediaTypeKey");
      v29[0] = v14;
      v29[1] = &off_1012CC808;
      v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v29, v28, 2));
      v16 = objc_msgSend(v12, "initWithDomain:code:userInfo:", CFSTR("com.apple.freeform.CRLErrorDomainInfoImporter"), 102, v15);

      v11 = v16;
    }
    (*(void (**)(void))(*(_QWORD *)(a1 + 72) + 16))();

  }
}

id sub_10033C8B8(uint64_t a1, int a2, int a3)
{
  uint64_t v4;

  if (a2)
    return (id)(*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(a1 + 56) + 16))(*(_QWORD *)(a1 + 56), 0, 0);
  if (a3)
    v4 = 4;
  else
    v4 = 3;
  if (*(_QWORD *)(a1 + 64) >= v4)
    return (id)(*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(a1 + 56) + 16))(*(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 32), 0);
  else
    return _objc_msgSend(*(id *)(a1 + 40), "p_convertImageData:toCompatibilityLevel:assetOwner:completionHandler:", *(_QWORD *)(a1 + 32));
}

void sub_10033C9F4(uint64_t a1)
{
  void *v2;
  void *v3;
  void (*v4)(void);
  int v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  _QWORD v20[2];
  _QWORD v21[2];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "convertedMediaData"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "error"));
  if (v3)
  {
    v4 = *(void (**)(void))(*(_QWORD *)(a1 + 48) + 16);
LABEL_5:
    v4();
    goto LABEL_6;
  }
  if (v2)
  {
    v4 = *(void (**)(void))(*(_QWORD *)(a1 + 48) + 16);
    goto LABEL_5;
  }
  v5 = +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
  if (qword_10147E370 != -1)
    dispatch_once(&qword_10147E370, &stru_101253130);
  if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
    sub_100E22AE4();
  if (qword_10147E370 != -1)
    dispatch_once(&qword_10147E370, &stru_101253150);
  v6 = off_1013D9070;
  if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
    sub_100DEA91C(v6, v5);
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLImageFillProvider p_convertImageData:toCompatibilityLevel:assetOwner:completionHandler:]_block_invoke"));
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLImageFillProvider.m"));
  +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v7, v8, 246, 0, "If no conversion error was provided, the converted image data should not be nil!");

  v9 = *(id *)(*(_QWORD *)(a1 + 40) + 16);
  v10 = v9;
  if (v9)
  {
    v19 = 0;
    objc_msgSend(v9, "getResourceValue:forKey:error:", &v19, NSURLLocalizedNameKey, 0);
    v11 = v19;
    if (!v11)
      v11 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "lastPathComponent"));
    v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "localizedStringForKey:value:table:", CFSTR("The image “%@” couldn’t be inserted."), 0, 0));
    v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", v13, v11));

  }
  else
  {
    v11 = (id)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "localizedStringForKey:value:table:", CFSTR("The image couldn’t be inserted."), 0, 0));
  }

  v20[0] = NSLocalizedDescriptionKey;
  v20[1] = CFSTR("CRLBoardItemImporterErrorMediaTypeKey");
  v21[0] = v14;
  v21[1] = &off_1012CC808;
  v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v21, v20, 2));
  v16 = v15;
  if (v10)
  {
    v17 = objc_msgSend(v15, "mutableCopy");
    objc_msgSend(v17, "setObject:forKeyedSubscript:", v10, NSURLErrorKey);

    v16 = v17;
  }
  v18 = objc_msgSend(objc_alloc((Class)NSError), "initWithDomain:code:userInfo:", CFSTR("com.apple.freeform.CRLErrorDomainInfoImporter"), 100, v16);
  (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();

LABEL_6:
}

void sub_10033CD68(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10033CD98(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10033D718(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  _Block_object_dispose(&a26, 8);
  _Unwind_Resume(a1);
}

void sub_10033D734(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10033D764(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10033D794(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10033D7C4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10033D7F4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10033D824(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10033D854(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10033D884(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10033D8B4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10033D8E4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

id sub_10033D914(uint64_t a1)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 1;
  return objc_msgSend(*(id *)(a1 + 32), "cancel");
}

void sub_10033D92C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  _QWORD v14[2];
  void (*v15)(uint64_t);
  void *v16;
  id v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;

  v5 = a2;
  v6 = a3;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  v15 = sub_10033DA24;
  v16 = &unk_1012532E0;
  v7 = *(id *)(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  v9 = *(void **)(a1 + 48);
  v17 = v7;
  v18 = v8;
  v10 = v9;
  v19 = v5;
  v20 = v6;
  v11 = *(_QWORD *)(a1 + 56);
  v21 = v10;
  v22 = v11;
  v12 = v6;
  v13 = v5;
  if (+[NSThread isMainThread](NSThread, "isMainThread", _NSConcreteStackBlock, 3221225472))
    v15((uint64_t)v14);
  else
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v14);

}

void sub_10033DA24(uint64_t a1)
{
  id v2;
  id v3;
  id v4;
  id v5;

  objc_msgSend(*(id *)(a1 + 32), "endModalOperationWithToken:", *(_QWORD *)(a1 + 40));
  if (*(_QWORD *)(a1 + 64))
  {
    v4 = *(id *)(a1 + 48);
    v2 = *(id *)(a1 + 56);
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 24))
    {

      v3 = 0;
      v2 = 0;
    }
    else
    {
      v3 = v4;
    }
    v5 = v3;
    (*(void (**)(void))(*(_QWORD *)(a1 + 64) + 16))();

  }
}

void sub_10033ECF4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10033ED24(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10033ED54(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10033ED84(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10033FAB4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10033FAE4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10033FB14(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10033FB44(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10033FB74(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10033FBA4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10033FBD4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10033FC04(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10033FC34(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10033FC64(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10033FC94(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10033FCC4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100340024(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100340054(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100340220(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100340250(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100340954(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100340984(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100341508(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100341538(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100341568(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100341598(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003415C8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003415F8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100341628(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100341658(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100341688(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003416B8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003416E8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100341718(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100341B40(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100341B70(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100341DF4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100341E24(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

char *sub_100341E54(uint64_t a1, void *a2)
{
  id v2;
  void *v3;
  id v4;
  void *v5;
  char *v6;

  v2 = a2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "substringToIndex:", 1));
  v4 = objc_msgSend(CFSTR("0123456789ABCDEF"), "rangeOfString:", v3);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "substringFromIndex:", 1));

  v6 = (char *)objc_msgSend(CFSTR("0123456789ABCDEF"), "rangeOfString:", v5) + 16 * (_QWORD)v4;
  return v6;
}

void sub_100342140(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100342170(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100342414(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100342444(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10034280C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10034283C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100342A0C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100342A3C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100342C6C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100342C9C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100342F20(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100342F50(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100343438(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100343468(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

BOOL sub_100343E3C(uint64_t a1, CGColorRef color, CGColorRef color2)
{
  _BOOL8 result;
  double *Components;
  double *v8;
  size_t NumberOfComponents;
  void *v10;
  void *v11;
  void *v12;

  if (*(double *)(a1 + 32) == 0.0)
    return CGColorEqualToColor(color, color2);
  Components = (double *)CGColorGetComponents(color);
  v8 = (double *)CGColorGetComponents(color2);
  NumberOfComponents = CGColorGetNumberOfComponents(color);
  if (NumberOfComponents != CGColorGetNumberOfComponents(color2))
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_1012539A8);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E24080();
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_1012539C8);
    v10 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100DE7468(v10);
    v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLColor p_isEqualToColor:withTolerance:]_block_invoke"));
    v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLColor.m"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v11, v12, 941, 0, "Color space dimension mismatch");

  }
  for (result = 1; NumberOfComponents; --NumberOfComponents)
  {
    if (result)
      result = vabdd_f64(*Components, *v8) < *(double *)(a1 + 32) || *Components == *v8;
    else
      result = 0;
    ++v8;
    ++Components;
  }
  return result;
}

void sub_100344038(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100344068(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100344098(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003440C8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

uint64_t sub_100344358(uint64_t a1)
{
  if (a1 == 2)
    return sub_100011A10();
  if (a1 == 1)
    return sub_100011BA0();
  if (a1)
    return 0;
  return sub_100011B24();
}

id sub_100344498()
{
  void *v0;

  return objc_msgSend(v0, "CGColor");
}

void sub_100344D00(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100344D30(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100345A60(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100345A90(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100345D84(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100345DB4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100345F30(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100345F60(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003460E4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100346114(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100346450(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100346480(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003475A0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003475D0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10034780C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10034783C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

__CFString *sub_10034792C(unint64_t a1)
{
  if (a1 < 5)
    return *(&off_101253C48 + a1);
  if (a1 == 5)
    return CFSTR("UIGestureRecognizerStateFailed");
  return CFSTR("#Unknown UIGestureRecognizerState#");
}

void sub_100347994(id a1)
{
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  double v21;
  uint64_t v22;

  v1 = objc_alloc_init((Class)NSMutableOrderedSet);
  v2 = (void *)qword_101415538;
  qword_101415538 = (uint64_t)v1;

  v3 = (void *)qword_101415538;
  *(_QWORD *)&v5 = objc_opt_class(_TtC8Freeform19CRLFileItemImporter, v4).n128_u64[0];
  objc_msgSend(v3, "addObject:", v6, v5);
  v7 = (void *)qword_101415538;
  *(_QWORD *)&v9 = objc_opt_class(CRLMovieItemImporter, v8).n128_u64[0];
  objc_msgSend(v7, "addObject:", v10, v9);
  v11 = (void *)qword_101415538;
  *(_QWORD *)&v13 = objc_opt_class(CRLImageItemImporter, v12).n128_u64[0];
  objc_msgSend(v11, "addObject:", v14, v13);
  v15 = (void *)qword_101415538;
  *(_QWORD *)&v17 = objc_opt_class(_TtC8Freeform18CRLUSDItemImporter, v16).n128_u64[0];
  objc_msgSend(v15, "addObject:", v18, v17);
  v19 = (void *)qword_101415538;
  *(_QWORD *)&v21 = objc_opt_class(_TtC8Freeform18CRLURLItemImporter, v20).n128_u64[0];
  objc_msgSend(v19, "addObject:", v22, v21);
}

void sub_100347BF4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100347C24(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

uint64_t sub_100347CE4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_100347D8C(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "protected_supportedFileTypes"));
  if (v3)
  {
    v4 = v3;
    objc_msgSend(*(id *)(a1 + 32), "addObjectsFromArray:", v3);
    v3 = v4;
  }

}

void sub_100347E70(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "protected_supportedFileUTTypes"));
  if (v3)
  {
    v4 = v3;
    objc_msgSend(*(id *)(a1 + 32), "addObjectsFromArray:", v3);
    v3 = v4;
  }

}

void sub_100347F98(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "protected_supportedAnimatedImageFileTypes"));
  if (v3)
  {
    v4 = v3;
    objc_msgSend(*(id *)(a1 + 32), "addObjectsFromArray:", v3);
    v3 = v4;
  }

}

void sub_10034807C(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "protected_supportedRemoteURLSchemes"));
  if (v3)
  {
    v4 = v3;
    objc_msgSend(*(id *)(a1 + 32), "addObjectsFromArray:", v3);
    v3 = v4;
  }

}

void sub_100348234(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100348250(uint64_t a1, void *a2, _BYTE *a3)
{
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  void *i;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  unsigned int v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];

  if (*(_BYTE *)(a1 + 56))
  {
    if (!*(_QWORD *)(a1 + 32))
      goto LABEL_21;
    v16 = 0u;
    v17 = 0u;
    v18 = 0u;
    v19 = 0u;
    v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "protected_supportedFileUTTypes"));
    v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
    if (v7)
    {
      v8 = v7;
      v9 = *(_QWORD *)v17;
      while (2)
      {
        for (i = 0; i != v8; i = (char *)i + 1)
        {
          if (*(_QWORD *)v17 != v9)
            objc_enumerationMutation(v6);
          if (objc_msgSend(*(id *)(a1 + 32), "conformsToType:", *(_QWORD *)(*((_QWORD *)&v16 + 1) + 8 * (_QWORD)i), (_QWORD)v16))
          {
            v11 = *(_QWORD *)(a1 + 40);
            v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "identifier"));
            LODWORD(v11) = objc_msgSend(a2, "protected_canImportFileAtURL:type:", v11, v12);

            if ((_DWORD)v11)
            {
              *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = a2;
              goto LABEL_18;
            }
          }
        }
        v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
        if (v8)
          continue;
        break;
      }
    }
LABEL_18:

  }
  else
  {
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "scheme"));
    v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "lowercaseString"));

    if (v6)
    {
      v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "protected_supportedRemoteURLSchemes"));
      if ((objc_msgSend(v14, "containsObject:", v6) & 1) != 0)
      {
        v15 = objc_msgSend(a2, "protected_canImportFromRemoteURL:", *(_QWORD *)(a1 + 40));

        if (v15)
          *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = a2;
      }
      else
      {

      }
    }
  }

LABEL_21:
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24))
    *a3 = 1;
}

void sub_10034850C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100348524(uint64_t a1, void *a2, _BYTE *a3)
{
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  void *i;
  uint64_t v11;
  void *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _BYTE v17[128];

  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "protected_supportedFileUTTypes"));
  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
  if (v7)
  {
    v8 = v7;
    v9 = *(_QWORD *)v14;
    while (2)
    {
      for (i = 0; i != v8; i = (char *)i + 1)
      {
        if (*(_QWORD *)v14 != v9)
          objc_enumerationMutation(v6);
        if (objc_msgSend(*(id *)(a1 + 32), "conformsToType:", *(_QWORD *)(*((_QWORD *)&v13 + 1) + 8 * (_QWORD)i), (_QWORD)v13))
        {
          v11 = *(_QWORD *)(a1 + 40);
          v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "identifier"));
          LODWORD(v11) = objc_msgSend(a2, "protected_canImportFileWithPreinsertionAsset:type:", v11, v12);

          if ((_DWORD)v11)
          {
            *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = a2;
            goto LABEL_12;
          }
        }
      }
      v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
      if (v8)
        continue;
      break;
    }
  }
LABEL_12:

  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24))
    *a3 = 1;

}

void sub_1003488D0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100348900(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100348AF4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100348B24(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100348D2C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100348D5C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100349040(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100349070(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100349350(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100349380(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100349668(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100349698(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100349978(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003499A8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100349C88(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100349CB8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100349F98(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100349FC8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10034A2A8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10034A2D8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10034A4BC(uint64_t a1)
{
  uint64_t v1;
  id v2;
  void *v3;
  objc_super v4;

  v1 = *(_QWORD *)(a1 + 32);
  v4.receiver = *(id *)(a1 + 40);
  v4.super_class = (Class)&OBJC_METACLASS___CRLBoardItemImporterPlaceholder;
  v2 = objc_msgSend(objc_msgSendSuper2(&v4, "allocWithZone:", v1), "p_placeholderInit");
  v3 = (void *)qword_101415548;
  qword_101415548 = (uint64_t)v2;

}

void sub_10034A728(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10034A758(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

id sub_10034B6B0(uint64_t a1)
{
  id result;

  if (objc_msgSend(*(id *)(a1 + 32), "firstElementForUpcomingScreenChangeResetCount"))
    objc_msgSend(*(id *)(a1 + 32), "setFirstElementForUpcomingScreenChangeResetCount:", (char *)objc_msgSend(*(id *)(a1 + 32), "firstElementForUpcomingScreenChangeResetCount") - 1);
  result = objc_msgSend(*(id *)(a1 + 32), "firstElementForUpcomingScreenChangeResetCount");
  if (!result)
    return objc_msgSend(*(id *)(a1 + 32), "setCachedFirstElementForUpcomingScreenChange:", 0);
  return result;
}

id sub_10034B7A0(uint64_t a1)
{
  id result;

  if (objc_msgSend(*(id *)(a1 + 32), "firstElementForUpcomingPageTurnResetCount"))
    objc_msgSend(*(id *)(a1 + 32), "setFirstElementForUpcomingPageTurnResetCount:", (char *)objc_msgSend(*(id *)(a1 + 32), "firstElementForUpcomingPageTurnResetCount") - 1);
  result = objc_msgSend(*(id *)(a1 + 32), "firstElementForUpcomingPageTurnResetCount");
  if (!result)
    return objc_msgSend(*(id *)(a1 + 32), "setCachedFirstElementForUpcomingPageTurn:", 0);
  return result;
}

id sub_10034B8AC(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setShouldPreventFocusingCanvasResponderElementOnScreenChange:", 0);
}

NSString *CRLAccessibilityGetUIKitLocalizedString(uint64_t a1)
{
  NSBundle *v2;

  v2 = (NSBundle *)qword_101415570;
  if (qword_101415570)
    return -[NSBundle localizedStringForKey:value:table:](v2, "localizedStringForKey:value:table:", a1, &stru_1012A72B0, CFSTR("Accessibility"));
  v2 = +[NSBundle bundleWithIdentifier:](NSBundle, "bundleWithIdentifier:", CFSTR("com.apple.UIKit.axbundle"));
  qword_101415570 = (uint64_t)v2;
  if (v2)
    return -[NSBundle localizedStringForKey:value:table:](v2, "localizedStringForKey:value:table:", a1, &stru_1012A72B0, CFSTR("Accessibility"));
  else
    return (NSString *)a1;
}

id CRLAccessibilityPostLayoutChangedNotification(void *a1)
{
  int ShouldCrashOnValidationErrorAfterLaunch;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  if (qword_101415578)
  {
    if (!a1)
      return objc_msgSend((id)qword_101415578, "afterDelay:processBlock:", &stru_101254088, 0.25);
  }
  else
  {
    qword_101415578 = -[CRLAccessibilityTimer initWithTargetSerialQueue:]([CRLAccessibilityTimer alloc], "initWithTargetSerialQueue:", &_dispatch_main_q);
    objc_msgSend((id)qword_101415578, "setAutomaticallyCancelPendingBlockUponSchedulingNewBlock:", 1);
    if (!a1)
      return objc_msgSend((id)qword_101415578, "afterDelay:processBlock:", &stru_101254088, 0.25);
  }
  if (qword_101415580)
  {
    if ((void *)qword_101415580 != a1)
    {
      if (CRLAccessibilityShouldPerformValidationChecks())
      {
        ShouldCrashOnValidationErrorAfterLaunch = CRLAccessibilityShouldCrashOnValidationErrorAfterLaunch();
        if (__CRLAccessibilityHandleValidationErrorWithDescription(ShouldCrashOnValidationErrorAfterLaunch, 0, (uint64_t)CFSTR("Multiple targets for multiple layout changed notifications. This is likely a bug."), v3, v4, v5, v6, v7, v9))abort();
      }
    }
  }
  else
  {
    qword_101415580 = a1;
  }
  return objc_msgSend((id)qword_101415578, "afterDelay:processBlock:", &stru_101254088, 0.25);
}

void sub_10034B9D0(id a1)
{
  id v1;

  UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, (id)qword_101415580);
  v1 = (id)qword_101415580;
  qword_101415580 = 0;
}

void sub_10034C05C(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "navigationBar"));
  objc_msgSend(v1, "setNeedsLayout");

}

void sub_10034CE58(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10034CE88(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10034CEB8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10034CEE8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10034CF18(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10034CF48(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10034D2AC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10034D2DC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10034D698(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10034D6C8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10034DB58(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10034DB88(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10034DDDC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10034DE70(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10034E064(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10034E088(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10034E0B8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10034E2F8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10034E328(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10034E6E8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10034E718(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10034EB5C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10034EB8C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10034ED2C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10034ED5C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10034F214(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "canvas"));
  objc_msgSend(v1, "i_setLayersInvalidWithoutInvalidatingAnySpecificLayers");

}

void sub_10034F900(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10034F930(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10034FAE4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10034FB14(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10034FDAC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10034FDDC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10034FE0C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10034FE3C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100350740(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLCollaboratorCursorCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D91E0;
  off_1013D91E0 = v2;

}

void sub_100350770(id *a1)
{
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  void *i;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  void *j;
  uint64_t v15;
  void *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  _BYTE v25[128];
  _BYTE v26[128];

  v21 = 0u;
  v22 = 0u;
  v23 = 0u;
  v24 = 0u;
  v2 = a1[4];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v21, v26, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v22;
    do
    {
      for (i = 0; i != v4; i = (char *)i + 1)
      {
        if (*(_QWORD *)v22 != v5)
          objc_enumerationMutation(v2);
        v7 = *(_QWORD *)(*((_QWORD *)&v21 + 1) + 8 * (_QWORD)i);
        v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*((id *)a1[5] + 52), "objectForKeyedSubscript:", v7));
        v9 = v8;
        if (!v8 || objc_msgSend(v8, "hudSize") == (id)1)
          objc_msgSend(a1[5], "p_showCollaboratorHUDForCollaborator:withSelectionPath:allowScroll:hudSize:", v7, 0, 0, 1);

      }
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v21, v26, 16);
    }
    while (v4);
  }

  v19 = 0u;
  v20 = 0u;
  v17 = 0u;
  v18 = 0u;
  v10 = a1[6];
  v11 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v17, v25, 16);
  if (v11)
  {
    v12 = v11;
    v13 = *(_QWORD *)v18;
    do
    {
      for (j = 0; j != v12; j = (char *)j + 1)
      {
        if (*(_QWORD *)v18 != v13)
          objc_enumerationMutation(v10);
        v15 = *(_QWORD *)(*((_QWORD *)&v17 + 1) + 8 * (_QWORD)j);
        v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*((id *)a1[5] + 52), "objectForKeyedSubscript:", v15, (_QWORD)v17));
        if (v16 && (objc_msgSend(a1[7], "containsObject:", v15) & 1) == 0)
          objc_msgSend(v16, "teardown");

      }
      v12 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v17, v25, 16);
    }
    while (v12);
  }

}

id sub_100350968(uint64_t a1)
{
  return _objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 32), "updateLayers");
}

void sub_1003511C0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003511F0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100351220(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100351250(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100351280(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003512B0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100351CA4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100351CD4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100352290(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1003522BC(uint64_t a1)
{
  char *WeakRetained;
  CGPoint origin;
  CGSize size;
  id v5;

  WeakRetained = (char *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    origin = CGRectZero.origin;
    size = CGRectZero.size;
    *((_OWORD *)WeakRetained + 12) = CGRectZero.origin;
    *((CGSize *)WeakRetained + 13) = size;
    if (*(_BYTE *)(a1 + 48))
    {
      *(CGPoint *)(WeakRetained + 248) = origin;
      *(CGSize *)(WeakRetained + 264) = size;
      WeakRetained[240] = 0;
    }
  }
  v5 = WeakRetained;
  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();

}

void sub_1003526B8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003526E8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100352718(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100352748(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100352930(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100352948(uint64_t a1, void *a2, _BYTE *a3)
{
  id v5;

  v5 = a2;
  if ((objc_opt_respondsToSelector(v5, "currentSelectionContainsInfo:") & 1) != 0
    && objc_msgSend(v5, "currentSelectionContainsInfo:", *(_QWORD *)(a1 + 32)))
  {
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 1;
    *a3 = 1;
  }

}

void sub_100352F88(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100352FB8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100353224(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 192), 8);
  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_100353280(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  uint64_t v5;
  unsigned __int8 v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  CGRect *v18;
  CGFloat v19;
  CGFloat v20;
  CGFloat v21;
  CGFloat v22;
  uint64_t v23;
  CGSize size;
  id v25;
  CGRect v26;

  v3 = a2;
  v4 = v3;
  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v25 = v3;
  if (*(_BYTE *)(v5 + 24))
  {
    v6 = 1;
  }
  else
  {
    v6 = objc_msgSend(v3, "canvasShouldScrollForSelectionPath:", *(_QWORD *)(a1 + 32));
    v4 = v25;
    v5 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  }
  *(_BYTE *)(v5 + 24) = v6;
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24))
  {
    objc_msgSend(*(id *)(a1 + 40), "rectInRootForScrollingToSelectionPath:onLayout:allowingZooming:", *(_QWORD *)(a1 + 32), v4, *(unsigned __int8 *)(a1 + 96));
    v7 = *(_QWORD **)(*(_QWORD *)(a1 + 64) + 8);
    v7[4] = v8;
    v7[5] = v9;
    v7[6] = v10;
    v7[7] = v11;
    objc_msgSend(v25, "rectInRootOfAutoZoomContextOfSelectionPath:", *(_QWORD *)(a1 + 32));
    v12 = *(_QWORD **)(*(_QWORD *)(a1 + 72) + 8);
    v12[4] = v13;
    v12[5] = v14;
    v12[6] = v15;
    v12[7] = v16;
    objc_msgSend(v25, "viewScaleForZoomingToSelectionPath:targetPointSize:", *(_QWORD *)(a1 + 32), *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 8) + 24));
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 80) + 8) + 24) = v17;
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = 0;
  }
  else
  {
    v18 = *(CGRect **)(*(_QWORD *)(a1 + 64) + 8);
    objc_msgSend(*(id *)(a1 + 40), "rectInRootForScrollingToSelectionPath:onLayout:allowingZooming:", *(_QWORD *)(a1 + 32), v4, *(unsigned __int8 *)(a1 + 96));
    v26.origin.x = v19;
    v26.origin.y = v20;
    v26.size.width = v21;
    v26.size.height = v22;
    *(CGRect *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 32) = CGRectUnion(v18[1], v26);
    v23 = *(_QWORD *)(*(_QWORD *)(a1 + 72) + 8);
    size = CGRectZero.size;
    *(CGPoint *)(v23 + 32) = CGRectZero.origin;
    *(CGSize *)(v23 + 48) = size;
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 80) + 8) + 24) = 0;
  }

}

void sub_100353B78(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100353BA8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100353BD8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id WeakRetained;
  char v6;
  _QWORD *v7;
  id v8;
  _QWORD v9[5];

  if (+[NSThread isMainThread](NSThread, "isMainThread"))
  {
    v2 = *(_QWORD *)(a1 + 32);
    v3 = *(_QWORD *)(v2 + 696);
    if (v3)
    {
      v4 = *(_QWORD *)(v2 + 704);
      if ((v4 & 0x100) != 0)
      {
        WeakRetained = objc_loadWeakRetained((id *)(v2 + 16));
        v6 = objc_opt_respondsToSelector(WeakRetained, "interactiveCanvasController:needsScrollWhenViewDidLayoutUsingBlock:");

        v2 = *(_QWORD *)(a1 + 32);
        if ((v6 & 1) != 0)
        {
          v9[0] = _NSConcreteStackBlock;
          v9[1] = 3221225472;
          v9[2] = sub_100353CD4;
          v9[3] = &unk_10122D110;
          v9[4] = v2;
          v7 = objc_retainBlock(v9);
          v8 = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 32) + 16));
          objc_msgSend(v8, "interactiveCanvasController:needsScrollWhenViewDidLayoutUsingBlock:", *(_QWORD *)(a1 + 32), v7);

          return;
        }
        v3 = *(_QWORD *)(v2 + 696);
        v4 = *(_QWORD *)(v2 + 704);
      }
      objc_msgSend((id)v2, "p_scrollToSelectionPath:scrollOptions:", v3, v4);
      objc_msgSend(*(id *)(a1 + 32), "p_clearSelectionScrollingState");
    }
  }
}

void sub_100353CD4(uint64_t a1)
{
  _QWORD *v1;
  void *v2;
  uint64_t v4;
  id v5;

  v1 = *(_QWORD **)(a1 + 32);
  v2 = (void *)v1[87];
  if (v2)
  {
    v4 = v1[88];
    v5 = v2;
    objc_msgSend(v1, "p_clearSelectionScrollingState");
    objc_msgSend(*(id *)(a1 + 32), "scrollToSelectionPath:scrollOptions:", v5, v4 & 0xFFFFFFFFFFFFFEFFLL);

  }
}

void sub_10035462C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10035465C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100354ACC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100354AFC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100355004(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100355034(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

BOOL sub_1003557C0(id a1, _TtC8Freeform12CRLBoardItem *a2, BOOL *a3)
{
  return !-[CRLBoardItem excludedFromMultiselectResizeInfo](a2, "excludedFromMultiselectResizeInfo", a3);
}

void sub_1003568D0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100356900(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100357948(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100357978(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100357CE8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100357D18(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100357D48(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100357D78(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100357F3C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100357F6C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003583F4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100358424(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100359C2C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100359C5C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10035A288(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10035A2B8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10035A620(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10035A650(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10035A680(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10035A6B0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

BOOL sub_10035BCAC(id a1, CRLCanvasRep *a2)
{
  CRLCanvasRep *v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v2 = a2;
  objc_opt_class(CRLGroupRep, v3);
  if ((objc_opt_isKindOfClass(v2, v4) & 1) != 0)
    v5 = -[CRLCanvasRep isSelected](v2, "isSelected");
  else
    v5 = 1;

  return v5;
}

void sub_10035BEC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10035BEDC(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_10035BEEC(uint64_t a1)
{

}

void sub_10035BEF4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "hitRep:", *(double *)(a1 + 48), *(double *)(a1 + 56)));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

BOOL sub_10035C970(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  _BOOL8 v8;
  CGRect v10;

  v3 = a2;
  objc_opt_class(CRLCanvasLayout, v4);
  v6 = sub_100221D0C(v5, v3);
  v7 = (void *)objc_claimAutoreleasedReturnValue(v6);

  if (v7)
  {
    objc_msgSend(v7, "rectInRootForSelectionPath:", *(_QWORD *)(a1 + 32));
    v8 = !CGRectIsNull(v10);
  }
  else
  {
    v8 = 0;
  }

  return v8;
}

void sub_10035D0B0(uint64_t a1)
{
  _BYTE *v2;
  id v3;

  v2 = *(_BYTE **)(a1 + 32);
  if (v2[730] || v2[731])
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  }
  else
  {
    v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "canvas"));
    objc_msgSend(v3, "performBlockAfterLayoutIfNecessary:", *(_QWORD *)(a1 + 40));

  }
}

void sub_10035D3F0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10035D420(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10035D5F8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10035D628(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10035E258(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10035E288(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10035E2B8(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  _QWORD block[2];
  id (*v12)(uint64_t);
  void *v13;
  id v14;
  _QWORD v15[2];
  id (*v16)(uint64_t);
  void *v17;
  id v18;
  _QWORD v19[2];
  void (*v20)(uint64_t);
  void *v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  id v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 416), "objectForKeyedSubscript:", *(_QWORD *)(a1 + 40)));
  if (objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 408), "containsObject:", *(_QWORD *)(a1 + 40)))
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "collaboratorCursorDelegate"));
    v4 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "collaboratorCursorSelectionPathForRenderer:collaboratorPresence:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40)));
    v5 = (void *)v4;
    if (v4 == *(_QWORD *)(a1 + 48))
    {
      if (v4)
      {
        if (v2)
        {
          v30 = 0u;
          v29 = 0u;
          v7 = *(void **)(a1 + 32);
          v6 = *(_QWORD *)(a1 + 40);
          v8 = objc_msgSend(v2, "hudSize");
          if (v7)
          {
            objc_msgSend(v7, "p_collaboratorHUDPositionForSelectionPath:collaboratorPresence:allowScroll:hudSize:", v5, v6, 0, v8);
          }
          else
          {
            v30 = 0u;
            v29 = 0u;
          }
          v19[0] = _NSConcreteStackBlock;
          v19[1] = 3221225472;
          v20 = sub_10035E53C;
          v21 = &unk_101254C30;
          v9 = *(void **)(a1 + 40);
          v22 = *(_QWORD *)(a1 + 32);
          v23 = v9;
          v24 = v2;
          v27 = v29;
          v28 = v30;
          v25 = v5;
          v26 = *(id *)(a1 + 56);
          if (+[NSThread isMainThread](NSThread, "isMainThread"))
            v20((uint64_t)v19);
          else
            dispatch_async((dispatch_queue_t)&_dispatch_main_q, v19);

          v10 = v23;
LABEL_22:

        }
      }
      else if (v2)
      {
        v15[0] = _NSConcreteStackBlock;
        v15[1] = 3221225472;
        v16 = sub_10035E7B4;
        v17 = &unk_10122D110;
        v18 = v2;
        if (+[NSThread isMainThread](NSThread, "isMainThread"))
          v16((uint64_t)v15);
        else
          dispatch_async((dispatch_queue_t)&_dispatch_main_q, v15);
        v10 = v18;
        goto LABEL_22;
      }
    }

LABEL_24:
    goto LABEL_25;
  }
  if (v2)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    v12 = sub_10035E7BC;
    v13 = &unk_10122D110;
    v14 = v2;
    if (+[NSThread isMainThread](NSThread, "isMainThread"))
      v12((uint64_t)block);
    else
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
    v3 = v14;
    goto LABEL_24;
  }
LABEL_25:

}

void sub_10035E53C(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  void *v10;
  void *v11;
  void *v12;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 416), "objectForKeyedSubscript:", *(_QWORD *)(a1 + 40)));
  v3 = *(void **)(a1 + 48);

  if (v2 == v3)
  {
    if (*(_BYTE *)(a1 + 96))
    {
      v4 = *(void **)(a1 + 48);
      v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "orderedSelections"));
      v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "lastObject"));
      objc_opt_class(CRLCanvasSelection, v7);
      objc_msgSend(v4, "setShouldFadeOutUnconditionally:", objc_opt_isKindOfClass(v6, v8) & 1);

      objc_msgSend(*(id *)(a1 + 48), "moveHUDToPoint:withDirection:", *(_QWORD *)(a1 + 88), *(double *)(a1 + 72), *(double *)(a1 + 80));
      if (objc_msgSend(*(id *)(a1 + 48), "hudSize") == (id)1
        && (objc_msgSend(*(id *)(a1 + 56), "isEqual:", *(_QWORD *)(a1 + 64)) & 1) == 0)
      {
        objc_msgSend(*(id *)(a1 + 48), "resetFadeOutTimer");
      }
    }
    else
    {
      v9 = +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101254BE8);
      if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
        sub_100E25C90(a1, v9);
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101254C08);
      v10 = off_1013D9070;
      if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
        sub_100DE7468(v10);
      v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLInteractiveCanvasController collaboratorCursorSelectionPathChangedFromSelectionPath:toSelectionPath:collaboratorPresence:]_block_invoke"));
      v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLInteractiveCanvasController.m"));
      +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v11, v12, 4996, 0, "Could not determine HUD position for selection path %@", *(_QWORD *)(a1 + 56));

      objc_msgSend(*(id *)(a1 + 48), "hideHUD");
    }
  }
}

void sub_10035E754(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10035E784(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

id sub_10035E7B4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "hideHUD");
}

id sub_10035E7BC(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "hideHUD");
}

void sub_10035EBF4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10035EC24(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10035EC54(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  unsigned int v6;
  void *v7;
  void *v8;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "editingCoordinator"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "followCoordinator"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "expectingViewportFromUUID"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "presenceUUID"));
  v6 = objc_msgSend(v4, "isEqual:", v5);

  if (v6)
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "editingCoordinator"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "followCoordinator"));
    objc_msgSend(v8, "setExpectingViewportForOneTimeScrollFrom:", 0);

    objc_msgSend(*(id *)(a1 + 32), "scrollToSelectionPath:scrollOptions:", *(_QWORD *)(a1 + 48), 9);
    objc_msgSend(*(id *)(a1 + 32), "showCollaboratorHUDForCollaborator:withSelectionPath:allowScroll:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), 1);
  }
}

void sub_10035F0C8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10035F0F8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10035F2C8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10035F2F8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10035FA88(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10035FAB8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10035FAE8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10035FB18(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10035FCD0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10035FD00(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100360A88(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100360AB8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100360AE8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100360B18(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100360B48(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100360B78(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100361218(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100361248(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100361278(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003612A8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10036146C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10036149C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003616FC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10036172C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003618C8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003618F8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10036203C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10036206C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10036209C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003620CC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10036224C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10036227C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10036268C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003626BC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003626EC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10036271C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003629EC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100362A1C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100362CD0(uint64_t a1, void *a2, _BYTE *a3)
{
  void *v5;
  id v6;

  v6 = a2;
  if ((objc_opt_respondsToSelector(v6, "canRemainDuringSharedReadOnlyMode") & 1) != 0
    && (objc_msgSend(v6, "canRemainDuringSharedReadOnlyMode") & 1) == 0)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "editorController"));
    objc_msgSend(v5, "setSelectionPathToPopEditor:", v6);

    *a3 = 1;
  }

}

id sub_100362D44(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "isTearingDown");
  if ((result & 1) == 0)
  {
    result = objc_msgSend(*(id *)(a1 + 32), "hasBeenTornDown");
    if ((result & 1) == 0)
      return _objc_msgSend(*(id *)(a1 + 32), "endEditingDiscardingEdits");
  }
  return result;
}

void sub_100362ED0(id a1, CRLEditor *a2, BOOL *a3)
{
  CRLEditor *v3;

  v3 = a2;
  if ((objc_opt_respondsToSelector(v3, "documentEditabilityDidChange") & 1) != 0)
    -[CRLEditor documentEditabilityDidChange](v3, "documentEditabilityDidChange");

}

void sub_100364E28(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100364E58(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100364E88(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100364EB8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100364EE8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100364F18(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100365490(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003654C0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003654F0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100365520(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003661B0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003661E0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100366368(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_1003665E0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100366610(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003668C8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003668F8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

BOOL sub_100366928(id a1, _TtC8Freeform15CRLChangeRecord *a2)
{
  _TtC8Freeform15CRLChangeRecord *v2;
  void *v3;
  unsigned __int8 v4;

  v2 = a2;
  if (-[CRLChangeRecord kind](v2, "kind") == 1)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(-[CRLChangeRecord details](v2, "details"));
    v4 = objc_msgSend(v3, "containsProperty:", 13);

  }
  else
  {
    v4 = 0;
  }

  return v4;
}

BOOL sub_10036698C(id a1, _TtC8Freeform15CRLChangeRecord *a2)
{
  _TtC8Freeform15CRLChangeRecord *v2;
  void *v3;
  unsigned __int8 v4;

  v2 = a2;
  if (-[CRLChangeRecord kind](v2, "kind") == 1)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(-[CRLChangeRecord details](v2, "details"));
    v4 = objc_msgSend(v3, "containsProperty:", 12);

  }
  else
  {
    v4 = 0;
  }

  return v4;
}

void sub_100366C0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100366C34(uint64_t a1)
{
  id obj;

  obj = *(id *)(a1 + 32);
  objc_sync_enter(obj);
  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = 1;
  objc_sync_exit(obj);

}

void sub_100366C90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

void sub_100366CA4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100366CD4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100366FFC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10036702C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003671C0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003671F0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003673AC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003673DC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100367568(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100367598(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100367A7C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100367AAC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100369518(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100369548(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100369924(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100369954(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100369984(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003699B4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

uint64_t sub_1003699E4(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "containsObject:", a2) ^ 1;
}

void sub_10036AF98(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10036AFC8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10036AFF8(uint64_t a1)
{
  double v2;
  double v3;
  double v4;
  void *v5;
  unsigned __int8 v6;
  __int128 v7;
  double v8;
  double v9;
  void *v10;
  CGFloat v11;
  CGFloat v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  id WeakRetained;
  char v29;
  id v30;
  void *v31;
  uint64_t v32;
  double v33;
  void *v34;
  void *v35;
  void *v36;
  CGAffineTransform v37;
  CATransform3D v38;
  CATransform3D v39;
  CATransform3D v40;
  CGAffineTransform v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  _QWORD v47[3];
  _QWORD v48[3];

  objc_msgSend(*(id *)(a1 + 32), "viewScale");
  v3 = v2;
  v4 = *(double *)(a1 + 72) / v2;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "canvas"));
  v6 = objc_msgSend(v5, "isAnchoredAtRight");

  if ((v6 & 1) != 0)
  {
    v7 = *(_OWORD *)&CGAffineTransformIdentity.c;
    *(_OWORD *)&v41.a = *(_OWORD *)&CGAffineTransformIdentity.a;
    *(_OWORD *)&v41.c = v7;
    *(_OWORD *)&v41.tx = *(_OWORD *)&CGAffineTransformIdentity.tx;
    *(_OWORD *)&v40.m11 = *(_OWORD *)&v41.a;
    *(_OWORD *)&v40.m13 = v7;
    *(_OWORD *)&v40.m21 = *(_OWORD *)&v41.tx;
    CGAffineTransformScale(&v41, (CGAffineTransform *)&v40, v4, v4);
    v37 = v41;
    objc_msgSend(*(id *)(a1 + 48), "setTransform:", &v37);
    objc_msgSend(*(id *)(a1 + 32), "setContentOffset:scrollOptions:", 0, *(double *)(a1 + 96), *(double *)(a1 + 104));
  }
  else
  {
    objc_msgSend(*(id *)(a1 + 40), "adjustedContentInset");
    v9 = v8;
    v45 = 0u;
    v46 = 0u;
    v43 = 0u;
    v44 = 0u;
    v42 = 0u;
    memset(&v41, 0, sizeof(v41));
    v10 = *(void **)(a1 + 48);
    if (v10)
      objc_msgSend(v10, "transform3D");
    v11 = *(double *)(a1 + 80);
    v12 = v9 + *(double *)(a1 + 88);
    *(_OWORD *)&v39.m31 = v43;
    *(_OWORD *)&v39.m33 = v44;
    *(_OWORD *)&v39.m41 = v45;
    *(_OWORD *)&v39.m43 = v46;
    *(_OWORD *)&v39.m11 = *(_OWORD *)&v41.a;
    *(_OWORD *)&v39.m13 = *(_OWORD *)&v41.c;
    *(_OWORD *)&v39.m21 = *(_OWORD *)&v41.tx;
    *(_OWORD *)&v39.m23 = v42;
    CATransform3DTranslate(&v40, &v39, v11, v12, 0.0);
    v43 = *(_OWORD *)&v40.m31;
    v44 = *(_OWORD *)&v40.m33;
    v45 = *(_OWORD *)&v40.m41;
    v46 = *(_OWORD *)&v40.m43;
    *(_OWORD *)&v41.a = *(_OWORD *)&v40.m11;
    *(_OWORD *)&v41.c = *(_OWORD *)&v40.m13;
    *(_OWORD *)&v41.tx = *(_OWORD *)&v40.m21;
    v42 = *(_OWORD *)&v40.m23;
    v39 = v40;
    CATransform3DScale(&v40, &v39, v4, v4, v4);
    v43 = *(_OWORD *)&v40.m31;
    v44 = *(_OWORD *)&v40.m33;
    v45 = *(_OWORD *)&v40.m41;
    v46 = *(_OWORD *)&v40.m43;
    *(_OWORD *)&v41.a = *(_OWORD *)&v40.m11;
    *(_OWORD *)&v41.c = *(_OWORD *)&v40.m13;
    *(_OWORD *)&v41.tx = *(_OWORD *)&v40.m21;
    v42 = *(_OWORD *)&v40.m23;
    v38 = v40;
    objc_msgSend(*(id *)(a1 + 48), "setTransform3D:", &v38);
    objc_msgSend(*(id *)(a1 + 56), "position");
    v14 = v13;
    v16 = v15;
    objc_msgSend(*(id *)(a1 + 40), "contentOffset");
    v18 = v17;
    v20 = v19;
    v21 = sub_1000603B8(v17, v19, v14);
    v23 = sub_1000603DC(v21, v22, v4);
    v25 = sub_1000603B8(v23, v24, v21);
    v26 = sub_1000603B8(v14, v16, v25);
    objc_msgSend(*(id *)(a1 + 56), "setPosition:", v26 - (*(double *)(a1 + 120) - *(double *)(a1 + 120) * v4 + -(v18 - *(double *)(a1 + 96) * v3) * v4), v27 - (*(double *)(a1 + 112) - *(double *)(a1 + 112) * v4 + -(v20 - *(double *)(a1 + 104) * v3) * v4));
  }
  WeakRetained = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 32) + 16));
  v29 = objc_opt_respondsToSelector(WeakRetained, "interactiveCanvasController:willAnimateViewScaleWithDuration:");

  if ((v29 & 1) != 0)
  {
    v30 = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 32) + 16));
    objc_msgSend(v30, "interactiveCanvasController:willAnimateViewScaleWithDuration:", *(_QWORD *)(a1 + 32), *(double *)(a1 + 144));

  }
  v31 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  v32 = *(_QWORD *)(a1 + 32);
  v48[0] = *(_QWORD *)(a1 + 64);
  v47[0] = CFSTR("CRLInteractiveCanvasControllerInteractionSourceKey");
  v47[1] = CFSTR("CRLInteractiveCanvasControllerDurationKey");
  v33 = *(double *)(a1 + 144);
  *(float *)&v33 = v33;
  v34 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithFloat:](NSNumber, "numberWithFloat:", v33));
  v48[1] = v34;
  v47[2] = CFSTR("CRLInteractiveCanvasControllerViewScaleKey");
  v35 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", v3));
  v48[2] = v35;
  v36 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v48, v47, 3));
  objc_msgSend(v31, "postNotificationName:object:userInfo:", CFSTR("CRLCanvasUpdateZoomNotification"), v32, v36);

}

uint64_t sub_10036B3B0(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  void *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  id WeakRetained;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t result;
  _OWORD v17[8];
  const __CFString *v18;
  void *v19;

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "enclosingScrollView"));
  v5 = objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "layer"));
  objc_msgSend((id)v5, "removeAllAnimations");

  v6 = *(void **)(a1 + 40);
  v7 = *(_OWORD *)&CATransform3DIdentity.m33;
  v17[4] = *(_OWORD *)&CATransform3DIdentity.m31;
  v17[5] = v7;
  v8 = *(_OWORD *)&CATransform3DIdentity.m43;
  v17[6] = *(_OWORD *)&CATransform3DIdentity.m41;
  v17[7] = v8;
  v9 = *(_OWORD *)&CATransform3DIdentity.m13;
  v17[0] = *(_OWORD *)&CATransform3DIdentity.m11;
  v17[1] = v9;
  v10 = *(_OWORD *)&CATransform3DIdentity.m23;
  v17[2] = *(_OWORD *)&CATransform3DIdentity.m21;
  v17[3] = v10;
  objc_msgSend(v6, "setTransform:", v17);
  objc_msgSend(*(id *)(a1 + 48), "setViewScale:", *(double *)(a1 + 64));
  objc_msgSend(*(id *)(a1 + 40), "fixFrameAndScrollView");
  objc_msgSend(*(id *)(a1 + 40), "bounds");
  objc_msgSend(*(id *)(a1 + 40), "setFrame:", sub_10005FDDC());
  objc_msgSend(*(id *)(a1 + 48), "setP_visibleBoundsRectForTiling:", CGRectNull.origin.x, CGRectNull.origin.y, CGRectNull.size.width, CGRectNull.size.height);
  objc_msgSend(*(id *)(a1 + 48), "setContentOffset:scrollOptions:", 0, *(double *)(a1 + 72), *(double *)(a1 + 80));
  WeakRetained = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 48) + 16));
  LOBYTE(v5) = objc_opt_respondsToSelector(WeakRetained, "interactiveCanvasControllerDidAnimateViewScale:");

  if ((v5 & 1) != 0)
  {
    v12 = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 48) + 16));
    objc_msgSend(v12, "interactiveCanvasControllerDidAnimateViewScale:", *(_QWORD *)(a1 + 48));

  }
  *(_BYTE *)(*(_QWORD *)(a1 + 48) + 651) = 0;
  v13 = *(void **)(a1 + 48);
  v18 = CFSTR("CRLInteractiveCanvasControllerInteractionSourceKey");
  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "p_sourceInteractionSourceForNotficiationUserInfo"));
  v19 = v14;
  v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v19, &v18, 1));
  objc_msgSend(v13, "i_viewDidEndZoomingWithUserInfo:", v15);

  result = *(_QWORD *)(a1 + 56);
  if (result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, a2);
  return result;
}

void sub_10036BE68(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10036BE98(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10036BEC8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10036BEF8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10036C534(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10036C54C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10036C57C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10036C5AC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10036C5DC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

uint64_t sub_10036C60C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_10036C61C(uint64_t a1)
{

}

void sub_10036C624(uint64_t a1, int a2, void *a3, void *a4)
{
  id v7;
  NSObject *v8;
  void (*v9)(void);
  dispatch_data_t concat;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  NSObject *data2;

  data2 = a3;
  v7 = a4;
  v8 = *(NSObject **)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
  if (v8)
  {
    if (v7)
    {
      v9 = *(void (**)(void))(*(_QWORD *)(a1 + 32) + 16);
LABEL_8:
      v9();
      v13 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
      v14 = *(void **)(v13 + 40);
      *(_QWORD *)(v13 + 40) = 0;

      goto LABEL_9;
    }
    if (data2)
    {
      concat = dispatch_data_create_concat(v8, data2);
      v11 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
      v12 = *(void **)(v11 + 40);
      *(_QWORD *)(v11 + 40) = concat;

    }
    if (a2)
    {
      v9 = *(void (**)(void))(*(_QWORD *)(a1 + 32) + 16);
      goto LABEL_8;
    }
  }
LABEL_9:

}

void sub_10036CA20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10036CA38(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10036CA68(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10036CA98(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10036CAC8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10036CAF8(uint64_t a1, int a2, void *a3, void *a4)
{
  id v7;
  NSObject *v8;
  void (*v9)(void);
  dispatch_data_t concat;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  NSObject *data2;

  data2 = a3;
  v7 = a4;
  v8 = *(NSObject **)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
  if (v8)
  {
    if (v7)
    {
      v9 = *(void (**)(void))(*(_QWORD *)(a1 + 32) + 16);
LABEL_8:
      v9();
      v13 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
      v14 = *(void **)(v13 + 40);
      *(_QWORD *)(v13 + 40) = 0;

      goto LABEL_9;
    }
    if (data2)
    {
      concat = dispatch_data_create_concat(v8, data2);
      v11 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
      v12 = *(void **)(v11 + 40);
      *(_QWORD *)(v11 + 40) = concat;

    }
    if (a2)
    {
      v9 = *(void (**)(void))(*(_QWORD *)(a1 + 32) + 16);
      goto LABEL_8;
    }
  }
LABEL_9:

}

void sub_10036CDFC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10036CE2C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

intptr_t sub_10036CF14(uint64_t a1, int a2)
{
  intptr_t result;

  result = (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  if (a2)
    return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
  return result;
}

intptr_t sub_10036D024(uint64_t a1, int a2)
{
  intptr_t result;

  result = (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  if (a2)
    return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
  return result;
}

id sub_10036D064(void *a1, uint64_t a2, uint64_t a3)
{
  id v5;
  id v6;

  v5 = a1;
  v6 = objc_msgSend(v5, "readToBuffer:size:", a2, a3);

  return v6;
}

char *sub_10036D23C(void *a1, uint64_t a2)
{
  id v3;
  _BYTE *v4;
  char *v5;

  v3 = a1;
  v4 = objc_msgSend(v3, "offset");
  objc_msgSend(v3, "seekToOffset:", &v4[a2]);
  v5 = (char *)((_BYTE *)objc_msgSend(v3, "offset") - v4);

  return v5;
}

void sub_10036D420(void *a1)
{
  id v1;

  v1 = a1;
  objc_msgSend(v1, "seekToOffset:", 0);

}

void sub_10036D5F0(_Unwind_Exception *a1)
{
  objc_end_catch();
  _Unwind_Resume(a1);
}

void sub_10036D60C(void *a1)
{
  id v1;

  v1 = a1;
  objc_msgSend(v1, "close");
  CFRelease(v1);

}

void sub_10036D7E0(_Unwind_Exception *a1)
{
  objc_end_catch();
  _Unwind_Resume(a1);
}

void sub_10036D7FC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_10036D82C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_10036D85C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_10036D88C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_10036DB1C(uint64_t a1)
{
  uint64_t v2;
  id v3;

  v2 = *(_QWORD *)(a1 + 40);
  v3 = (id)objc_claimAutoreleasedReturnValue(+[CRLSwappableAxesGeometry standardAxesGeometry](CRLSwappableAxesGeometry, "standardAxesGeometry"));
  (*(void (**)(uint64_t, id, _QWORD))(v2 + 16))(v2, v3, *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8));

}

void sub_10036DB74(uint64_t a1)
{
  uint64_t v2;
  id v3;

  v2 = *(_QWORD *)(a1 + 40);
  v3 = (id)objc_claimAutoreleasedReturnValue(+[CRLSwappableAxesGeometry swappedAxesGeometry](CRLSwappableAxesGeometry, "swappedAxesGeometry"));
  (*(void (**)(uint64_t, id, _QWORD))(v2 + 16))(v2, v3, *(_QWORD *)(*(_QWORD *)(a1 + 32) + 16));

}

double sub_10036E124(double a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, double a6, double a7)
{
  double Width;
  double Height;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  CGRect v22;
  CGRect v23;

  v22.origin.x = a2;
  v22.origin.y = a3;
  v22.size.width = a4;
  v22.size.height = a5;
  Width = CGRectGetWidth(v22);
  v23.origin.x = a2;
  v23.origin.y = a3;
  v23.size.width = a4;
  v23.size.height = a5;
  Height = CGRectGetHeight(v23);
  v16 = Width * 0.5;
  v17 = Height * 0.5;
  if (Width * 0.5 < Width - a6)
    v16 = Width - a6;
  v18 = Height - a7;
  if (v17 >= v18)
    v19 = v17;
  else
    v19 = v18;
  v20 = sub_1003C65EC(a1, 0.0, v16);
  return sub_1003C65EC(v20, 0.0, v19);
}

double sub_10036E1D4(uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  double v5;
  double MaxX;
  double MinX;
  CGRect v13;
  CGRect v14;

  switch(a1)
  {
    case 0:
      MaxX = CGRectGetMaxX(*(CGRect *)&a2);
      goto LABEL_7;
    case 1:
      MinX = CGRectGetMaxX(*(CGRect *)&a2);
      goto LABEL_5;
    case 2:
      MinX = CGRectGetMinX(*(CGRect *)&a2);
LABEL_5:
      v5 = MinX;
      v13.origin.x = a2;
      v13.origin.y = a3;
      v13.size.width = a4;
      v13.size.height = a5;
      CGRectGetMaxY(v13);
      break;
    case 3:
      MaxX = CGRectGetMinX(*(CGRect *)&a2);
LABEL_7:
      v5 = MaxX;
      v14.origin.x = a2;
      v14.origin.y = a3;
      v14.size.width = a4;
      v14.size.height = a5;
      CGRectGetMinY(v14);
      break;
    default:
      return v5;
  }
  return v5;
}

void sub_10036E2C4(void *a1, uint64_t a2, char a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, double a8, double a9, double a10)
{
  double Width;
  double Height;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  unint64_t v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  CGFloat v41;
  CGFloat v42;
  CGFloat v43;
  CGFloat v44;
  double v45;
  double v46;
  double v47;
  id v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  __double2 v58;
  double v59;
  __double2 v60;
  double v61;
  double v62;
  double v63;
  double v64;
  double v65;
  double v66;
  __double2 v67;
  double v68;
  double v69;
  double v70;
  double v71;
  CGFloat rect;
  double recta;
  double v74;
  double v75;
  double v76;
  double v77;
  double v78;
  double v79;
  double v80;
  id v81;
  CGRect v82;
  CGRect v83;

  v81 = a1;
  v82.origin.x = a4;
  v82.origin.y = a5;
  v82.size.width = a6;
  v82.size.height = a7;
  Width = CGRectGetWidth(v82);
  v83.origin.x = a4;
  v83.origin.y = a5;
  v83.size.width = a6;
  rect = a7;
  v83.size.height = a7;
  Height = CGRectGetHeight(v83);
  v21 = Width * 0.5;
  v22 = Height * 0.5;
  if (Width * 0.5 < Width - a9 * 1.528665)
    v21 = Width - a9 * 1.528665;
  v23 = Height - a10 * 1.528665;
  if (v22 < v23)
    v22 = v23;
  v24 = a8 * 1.528665;
  if (v21 >= a8 * 1.528665)
    v25 = a8 * 1.528665;
  else
    v25 = v21;
  if (v22 >= v24)
    v26 = a8 * 1.528665;
  else
    v26 = v22;
  v71 = a8;
  v27 = v24 - a8;
  v28 = 0.0;
  v29 = 0.0;
  if (v27 != 0.0)
  {
    v29 = 1.0 - (v24 - v25) / v27;
    v28 = 1.0 - (v24 - v26) / v27;
  }
  v77 = v29;
  v30 = sub_10036E1D4(a2, a4, a5, a6, rect);
  v32 = v31;
  v33 = sub_10036E680(a2, v30, v31, v25);
  v35 = a2 & 0xFFFFFFFFFFFFFFFDLL;
  v79 = v32;
  v74 = v34;
  v75 = v33;
  if ((a2 & 0xFFFFFFFFFFFFFFFDLL) != 0)
    v36 = v34;
  else
    v36 = v32;
  v76 = v30;
  if ((a2 & 0xFFFFFFFFFFFFFFFDLL) != 0)
    v37 = v30;
  else
    v37 = v33;
  if ((a3 & 1) != 0)
  {
    objc_msgSend(v81, "lineToPoint:", v37, v36);
    v38 = v77;
LABEL_29:
    if (v38 >= v28)
      v46 = v28;
    else
      v46 = v38;
    v47 = 1.0 - v46;
    v48 = v81;
    v49 = sub_1003C660C(0.95, 1.0, v47);
    v50 = sub_1003C660C(0.93124985, 1.0, v47);
    v70 = v28;
    if ((unint64_t)(a2 - 1) > 2)
      v51 = 290.0;
    else
      v51 = dbl_100EEF740[a2 - 1];
    v52 = sub_10036E680(a2, v76, v79, v49 * v71);
    v54 = v53;
    v55 = v51 * 0.0174532925;
    v56 = (v51 + 50.0) * 0.0174532925;
    v57 = v50 * v71;
    v58 = __sincos_stret(v55);
    v59 = v52 + v50 * v71 * v58.__cosval;
    v69 = v54 + v57 * v58.__sinval;
    v60 = __sincos_stret(v56);
    v61 = v52 + v57 * v60.__cosval;
    v62 = v54 + v57 * v60.__sinval;
    if (v35)
      v63 = v77;
    else
      v63 = v70;
    recta = v63;
    if (v35)
      v64 = v70;
    else
      v64 = v77;
    if (v35)
      v65 = v75;
    else
      v65 = v76;
    v66 = v74;
    if (v35)
      v66 = v79;
    v78 = v65;
    v80 = v66;
    sub_10036E6CC(v48, a2, 1, v59, v69, v71, v64);
    v67 = __sincos_stret((v56 - v55) * 0.5);
    v68 = v57 * ((1.0 - v67.__cosval) * 4.0 / (v67.__sinval * 3.0));
    objc_msgSend(v48, "curveToPoint:controlPoint1:controlPoint2:", v61, v62, v59 - v68 * v58.__sinval, v69 + v68 * v58.__cosval, v61 + v68 * v60.__sinval, v62 - v68 * v60.__cosval);
    sub_10036E6CC(v48, a2, 0, v78, v80, v71, recta);

    goto LABEL_47;
  }
  objc_msgSend(v81, "currentPoint");
  v38 = v77;
  if (!sub_10005FE60(v39, v40, v37, v36)
    || ((v41 = a4, v42 = a5, v43 = a6, v44 = rect, !v35)
      ? (v45 = CGRectGetWidth(*(CGRect *)&v41))
      : (v45 = CGRectGetHeight(*(CGRect *)&v41)),
        v45 == 0.0 || fabs(v45) < 0.00999999978))
  {
    objc_msgSend(v81, "lineToPoint:", v37, v36);
  }
  if (!sub_10005FE60(v76, v32, v75, v74))
    goto LABEL_29;
LABEL_47:

}

double sub_10036E680(uint64_t a1, double result, double a3, double a4)
{
  switch(a1)
  {
    case 0:
      result = result - a4;
      break;
    case 1:
      result = result - a4;
      break;
    case 2:
      result = result + a4;
      break;
    case 3:
      result = result + a4;
      break;
    default:
      return result;
  }
  return result;
}

void sub_10036E6CC(void *a1, uint64_t a2, int a3, double a4, double a5, double a6, double a7)
{
  double v11;
  double v12;
  int v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  __double2 v31;
  double v32;
  __double2 v33;
  __double2 v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v46;
  double v47;
  id v48;

  v48 = a1;
  objc_msgSend(v48, "currentPoint");
  v13 = ((a2 & 0xFFFFFFFFFFFFFFFDLL) != 0) ^ a3;
  if (a3)
    v14 = v12;
  else
    v14 = a5;
  if (a3)
    v15 = v11;
  else
    v15 = a4;
  v46 = a4;
  v47 = a5;
  v42 = v12;
  v43 = v11;
  if (!a3)
  {
    a5 = v12;
    a4 = v11;
  }
  if (v13)
    v16 = 0.5;
  else
    v16 = 0.0;
  if (v13)
    v17 = 0.0;
  else
    v17 = 0.5;
  if (v13)
    v18 = 0.8;
  else
    v18 = 0.0;
  if (v13)
    v19 = 0.0;
  else
    v19 = 0.8;
  v20 = sub_1003C660C(v15, a4, v16);
  v21 = sub_1003C660C(v14, a5, v17);
  v22 = sub_1003C660C(v15, a4, v18);
  v23 = sub_1003C660C(v14, a5, v19);
  if ((unint64_t)(a2 - 1) > 2)
    v24 = 270.0;
  else
    v24 = dbl_100EEF758[a2 - 1];
  if (a3)
    v25 = v23;
  else
    v25 = v21;
  if (a3)
    v26 = v22;
  else
    v26 = v20;
  v40 = v26;
  v41 = v25;
  if (a3)
    v27 = v21;
  else
    v27 = v23;
  if (a3)
    v22 = v20;
  v28 = v24 + 50.0 + 20.0;
  if (a3)
    v28 = v24;
  v29 = v28 * 0.0174532925;
  v30 = (v28 + 20.0) * 0.0174532925;
  v31 = __sincos_stret((v30 - v28 * 0.0174532925) * 0.5);
  v32 = (1.0 - v31.__cosval) * 4.0 / (v31.__sinval * 3.0) * a6;
  v33 = __sincos_stret(v29);
  v34 = __sincos_stret(v30);
  v35 = sub_100061A8C(v43 - v32 * v33.__sinval, v42 + v32 * v33.__cosval, v22, v27, a7);
  v37 = v36;
  v38 = sub_100061A8C(v46 + v32 * v34.__sinval, v47 - v32 * v34.__cosval, v40, v41, a7);
  objc_msgSend(v48, "curveToPoint:controlPoint1:controlPoint2:", v46, v47, v35, v37, v38, v39);

}

void sub_10036E8E4(void *a1, uint64_t a2, char a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, double a8)
{
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  void *v22;
  double v23;
  double v24;
  CGFloat v25;
  CGFloat v26;
  CGFloat v27;
  CGFloat v28;
  double Width;
  BOOL v30;
  id v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  __double2 v40;
  double v41;
  __double2 v42;
  __double2 v43;
  double v44;
  id v45;

  v45 = a1;
  v15 = sub_10036E1D4(a2, a4, a5, a6, a7);
  v17 = v16;
  v44 = a8;
  v18 = sub_10036E680(a2, v15, v16, a8);
  if ((a2 & 0xFFFFFFFFFFFFFFFDLL) != 0)
    v20 = v15;
  else
    v20 = v18;
  if ((a2 & 0xFFFFFFFFFFFFFFFDLL) != 0)
    v21 = v19;
  else
    v21 = v17;
  if ((a2 & 0xFFFFFFFFFFFFFFFDLL) != 0)
    v15 = v18;
  else
    v17 = v19;
  if ((a3 & 1) != 0)
  {
    objc_msgSend(v45, "lineToPoint:", v20, v21);
    v22 = v45;
LABEL_20:
    v31 = v22;
    objc_msgSend(v31, "currentPoint");
    v33 = v32;
    v35 = v34;
    v36 = v17;
    if ((unint64_t)(a2 - 1) > 2)
      v37 = 270.0;
    else
      v37 = dbl_100EEF758[a2 - 1];
    v38 = v37 * 0.0174532925;
    v39 = (v37 + 90.0) * 0.0174532925;
    v40 = __sincos_stret((v39 - v37 * 0.0174532925) * 0.5);
    v41 = (1.0 - v40.__cosval) * 4.0 / (v40.__sinval * 3.0) * v44;
    v42 = __sincos_stret(v38);
    v43 = __sincos_stret(v39);
    objc_msgSend(v31, "curveToPoint:controlPoint1:controlPoint2:", v15, v36, v33 - v41 * v42.__sinval, v35 + v41 * v42.__cosval, v15 + v41 * v43.__sinval, v36 - v41 * v43.__cosval);

    v22 = v45;
    goto LABEL_24;
  }
  objc_msgSend(v45, "currentPoint");
  if (!sub_10005FE60(v23, v24, v20, v21)
    || ((v25 = a4, v26 = a5, v27 = a6, v28 = a7, (a2 & 0xFFFFFFFFFFFFFFFDLL) == 0)
      ? (Width = CGRectGetWidth(*(CGRect *)&v25))
      : (Width = CGRectGetHeight(*(CGRect *)&v25)),
        Width == 0.0 || fabs(Width) < 0.00999999978))
  {
    objc_msgSend(v45, "lineToPoint:", v20, v21, *(_QWORD *)&v44);
  }
  v30 = sub_10005FE60(v20, v21, v15, v17);
  v22 = v45;
  if (!v30)
    goto LABEL_20;
LABEL_24:

}

void sub_10036ED04(id a1)
{
  void *v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  _QWORD v13[3];

  v13[0] = UTTypeSymbolicLink;
  v13[1] = UTTypeDirectory;
  v13[2] = UTTypeLinkPresentationMetadata;
  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v13, 3));
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray arrayWithArray:](NSMutableArray, "arrayWithArray:", v1));

  v3 = sub_1000306D4();
  v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  objc_msgSend(v2, "crl_addNonNilObject:", v4);

  v5 = sub_1000308F0();
  v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  objc_msgSend(v2, "crl_addNonNilObject:", v6);

  v7 = sub_100030D28();
  v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
  objc_msgSend(v2, "crl_addNonNilObject:", v8);

  v9 = sub_100030B0C();
  v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
  objc_msgSend(v2, "crl_addNonNilObject:", v10);

  v11 = objc_msgSend(v2, "copy");
  v12 = (void *)qword_101415590;
  qword_101415590 = (uint64_t)v11;

}

void sub_10036F108(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_10036F378(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10036F3A8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10036FCF0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10036FD20(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10036FD50(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10036FD80(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10036FDB0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10036FDE0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10036FE10(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10036FE40(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003701AC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1003702E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_100370620(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_100370688(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  void *v9;
  void *v10;

  v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)CRLWPRep;
  -[_Unwind_Exception dealloc](&a9, "dealloc");
  _Unwind_Resume(a1);
}

void sub_1003707F4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1003709E0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100370CA4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100370D60(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100370DD8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100370E58(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100370F1C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1003710E4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100371354(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100371450(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_100371728(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1003719EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_100371AD4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100371BDC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100371D04(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100371DA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_100371F1C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100371FAC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100372144(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_100372584(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10037261C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10037264C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100372880(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100372B58(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100372B98(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100372BC8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100372CA8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1003733B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

void sub_1003734A4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003734D4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003735EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1003736E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1003738C8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_100373908(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100373938(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003739F0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100373A9C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_100373B7C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100373D7C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100373DF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_100373EF4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100373F24(uint64_t a1, void *a2)
{
  void *v3;
  id v4;

  v4 = a2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "interactiveCanvasController"));
  objc_msgSend(v3, "setNeedsDisplayOnLayer:", v4);

}

void sub_100373F70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_100373FE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_100374110(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100374140(uint64_t a1, void *a2)
{
  void *v3;
  id v4;

  v4 = a2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "interactiveCanvasController"));
  objc_msgSend(v3, "setNeedsDisplayInRect:onLayer:", v4, *(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64));

}

void sub_100374194(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_10037424C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  v3 = v2;

  _Unwind_Resume(a1);
}

void sub_1003743F8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100374420(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100374450(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100374504(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1003745E4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100374BD4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_100374EA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  v11 = v10;

  _Unwind_Resume(a1);
}

void sub_100374FF4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1003752CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id a9)
{
  void *v9;
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_10037535C(uint64_t a1)
{
  _QWORD *v1;
  _QWORD v2[2];
  void (*v3)(uint64_t);
  void *v4;
  uint64_t v5;

  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v3 = sub_100375400;
  v4 = &unk_101231C50;
  v5 = *(_QWORD *)(a1 + 32);
  v1 = v2;
  if (+[NSThread isMainThread](NSThread, "isMainThread"))
    v3((uint64_t)v1);
  else
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v1);

}

void sub_1003753F0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100375400(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "textEditor"));
  objc_msgSend(v1, "showEditMenu");

}

void sub_100375438(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_100375718(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1003758D8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100375B98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_100375BF4(uint64_t a1, void *a2)
{
  double v3;
  double v4;
  id v5;
  CGRect v6;

  v5 = a2;
  objc_msgSend(v5, "bounds");
  if (!CGRectEqualToRect(v6, *(CGRect *)(a1 + 40)))
  {
    objc_msgSend(v5, "setBounds:", *(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64));
    objc_msgSend(*(id *)(a1 + 32), "bounds");
    objc_msgSend(v5, "setPosition:", *(double *)(a1 + 40) - v3, *(double *)(a1 + 48) - v4);
    objc_msgSend(v5, "setNeedsDisplay");
  }

}

void sub_100375C6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_100375D7C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100375E84(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

id sub_100375EA0(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "setContentsScale:", *(double *)(a1 + 32));
}

void sub_100375FC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1003760EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_100376218(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_100376338(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  v3 = v2;

  _Unwind_Resume(a1);
}

void sub_100376434(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10037657C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_10037663C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1003766E0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_100376868(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100376984(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_100376A14(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100376A74(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100376B14(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_100376C8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_100376F90(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1003770B0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1003772FC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100377384(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_100377454(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_100377710(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_100377858(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_100377A30(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100377C00(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

id sub_100377C68(CRLWPRep *self, SEL a2, CGPoint a3)
{
  return &__NSArray0__struct;
}

void sub_100377DB0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100377E60(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100377F08(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100377FA0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10037807C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1003780DC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100378134(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100378424(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11)
{
  void *v11;

  _Unwind_Resume(a1);
}

void sub_100378558(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_100378694(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100378768(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_10037880C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1003788A0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100378A54(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100378BE8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100378D34(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100378EC0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100379190(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_100379310(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1003797D8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10037985C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10037988C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003798BC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003798EC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100379E78(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100379F18(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100379F48(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100379F78(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100379FA8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100379FD8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10037A008(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10037A2A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  void *v9;
  void *v10;
  va_list va;

  va_start(va, a9);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

__n128 sub_10037A2E4(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)(a2 + 48);
  v3 = *(_OWORD *)(a2 + 64);
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v3;
  return result;
}

void sub_10037A2F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double *v4;
  CGFloat v5;
  CGFloat v6;
  CGFloat v7;
  CGFloat v8;
  CGFloat v9;
  CGFloat v10;
  CGFloat v11;
  CGFloat v12;
  CGRect v13;
  CGRect v14;

  v4 = *(double **)(*(_QWORD *)(a1 + 40) + 8);
  v5 = v4[6];
  v6 = v4[7];
  v7 = v4[8];
  v8 = v4[9];
  objc_msgSend(*(id *)(a1 + 32), "glyphRectForRange:includingLabel:", a2, a3, 0);
  v14.origin.x = v9;
  v14.origin.y = v10;
  v14.size.width = v11;
  v14.size.height = v12;
  v13.origin.x = v5;
  v13.origin.y = v6;
  v13.size.width = v7;
  v13.size.height = v8;
  *(CGRect *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 48) = CGRectUnion(v13, v14);
}

void sub_10037A41C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10037A4CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{

  _Unwind_Resume(a1);
}

void sub_10037A5F8(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void sub_10037A614(uint64_t a1)
{
  _QWORD *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;

  v2 = *(_QWORD **)(a1 + 32);
  v3 = (void *)v2[37];
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "primaryFindResultSearchReference"));
  v8 = v4;
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v8, 1));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "canvas"));
  objc_msgSend(v6, "contentsScale");
  v7 = objc_msgSend(v3, "buildHighlightsForSearchReferences:contentsScaleForLayers:shouldCreateBackground:backgroundColor:", v5, 1, *(_QWORD *)(a1 + 40));

}

void sub_10037A6EC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10037A768(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_10037AC78(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10037AE7C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10037B050(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_10037B470(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10037B5B8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_10037B7BC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10037BA14(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10037BA44(uint64_t a1)
{
  void *v2;
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  char *v10;
  NSUInteger v11;
  char *v12;
  _QWORD *v13;
  NSUInteger v14;
  unsigned int v15;
  unsigned int v16;
  char *v17;
  NSUInteger v18;
  char *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  NSString *v24;
  void *v25;
  NSString *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  char *v31;
  char *v32;
  char *v33;
  BOOL v34;
  char v35;
  BOOL v36;
  BOOL v37;
  NSString *v38;
  NSString *v39;
  void *v40;
  void *v41;
  unsigned int v42;
  NSRange v43;
  char *v44;
  uint8_t buf[4];
  unsigned int v46;
  __int16 v47;
  const char *v48;
  __int16 v49;
  const char *v50;
  __int16 v51;
  int v52;
  __int16 v53;
  void *v54;
  __int16 v55;
  uint64_t v56;
  NSRange v57;
  NSRange v58;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "storage"));
  v3 = objc_msgSend(v2, "copyWithMarkedText");

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "layout"));
  if (v4)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "canvas"));

    if (v5)
    {
      v7 = 0x7FFFFFFFFFFFFFFFLL;
      v6 = 0;
      v8 = (char *)objc_msgSend(*(id *)(a1 + 40), "range");
      v10 = v9;
      v12 = (char *)objc_msgSend(*(id *)(a1 + 32), "range");
      v13 = *(_QWORD **)(a1 + 32);
      if (!v13[41])
        goto LABEL_20;
      v14 = v11;
      v15 = objc_msgSend(v13, "p_spellCheckingEnabled");
      v16 = v12 == (char *)0x7FFFFFFFFFFFFFFFLL ? 0 : v15;
      if (v16 != 1 || !v14)
        goto LABEL_20;
      v17 = (char *)objc_msgSend(v3, "range");
      v43.length = v18;
      if (v17 > v12 || (v19 = &v12[v14], &v17[v18] < &v12[v14]))
      {
        v43.location = (NSUInteger)v17;
        v42 = +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
        if (qword_10147E370 != -1)
          dispatch_once(&qword_10147E370, &stru_101255EB0);
        v20 = off_1013D9070;
        if (os_log_type_enabled((os_log_t)v20, OS_LOG_TYPE_ERROR))
        {
          v58.location = (NSUInteger)v12;
          v58.length = v14;
          v38 = NSStringFromRange(v58);
          v41 = (void *)objc_claimAutoreleasedReturnValue(v38);
          v39 = NSStringFromRange(v43);
          *(_DWORD *)buf = 67110402;
          v46 = v42;
          v47 = 2082;
          v48 = "-[CRLWPRep p_updateSuppressedSpellingRange]_block_invoke";
          v49 = 2082;
          v50 = "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPRep.mm";
          v51 = 1024;
          v52 = 3002;
          v53 = 2114;
          v54 = v41;
          v55 = 2114;
          v56 = objc_claimAutoreleasedReturnValue(v39);
          v40 = (void *)v56;
          _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)v20, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Rep's layout range should have been updated or removed (rep range: %{public}@, storage range: %{public}@)", buf, 0x36u);

        }
        if (qword_10147E370 != -1)
          dispatch_once(&qword_10147E370, &stru_101255ED0);
        v21 = off_1013D9070;
        if (os_log_type_enabled((os_log_t)v21, OS_LOG_TYPE_ERROR))
        {
          objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
          sub_100DE7E60();
        }

        v22 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLWPRep p_updateSuppressedSpellingRange]_block_invoke"));
        v23 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPRep.mm"));
        v57.location = (NSUInteger)v12;
        v57.length = v14;
        v24 = NSStringFromRange(v57);
        v25 = (void *)objc_claimAutoreleasedReturnValue(v24);
        v26 = NSStringFromRange(v43);
        v27 = (void *)objc_claimAutoreleasedReturnValue(v26);
        +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v22, v23, 3002, 0, "Rep's layout range should have been updated or removed (rep range: %{public}@, storage range: %{public}@)", v25, v27);

        goto LABEL_20;
      }
      v44 = (char *)objc_msgSend(v3, "wordAtCharIndex:includePreviousWord:", v8, 1);
      v29 = v28;
      v30 = *(id *)(*(_QWORD *)(a1 + 32) + 544);
      if (v30 != objc_msgSend(v3, "changeCount"))
      {
        if (v29 && (objc_msgSend(*(id *)(a1 + 40), "isInsertionPoint") & 1) != 0)
        {
          v6 = v29;
          v7 = (uint64_t)v44;
        }
        else if (v44 <= v8 && &v44[v29] >= &v10[(_QWORD)v8])
        {
          v6 = v29;
          v7 = (uint64_t)v44;
        }
        goto LABEL_20;
      }
      if ((v31 = *(char **)(*(_QWORD *)(a1 + 32) + 352), v32 = *(char **)(*(_QWORD *)(a1 + 32) + 360), v8 == v31)
        && v32 == v10
        || ((v33 = &v31[(_QWORD)v32], v31 == v44) ? (v34 = v33 == v19) : (v34 = 0),
            !v34 ? (v35 = 0) : (v35 = 1),
            v33 < &v10[(_QWORD)v8] ? (v36 = v8 - v31 >= (unint64_t)v32) : (v36 = 0),
            !v36 ? (v37 = v8 >= v31) : (v37 = 0),
            !v37 && v8 != v33 && (v35 & 1) == 0))
      {
LABEL_20:
        objc_msgSend(*(id *)(a1 + 32), "p_setSuppressedMisspellingRange:", v7, v6);
      }
    }
  }
  *(_QWORD *)(*(_QWORD *)(a1 + 32) + 544) = objc_msgSend(v3, "changeCount");

}

void sub_10037BE98(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10037BF3C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10037BF6C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10037C3F0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_10037C4B4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10037C4E4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10037C9B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  void *v7;
  void *v8;
  void *v9;
  uint64_t v11;
  va_list va;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  va_list va1;

  va_start(va1, a7);
  va_start(va, a7);
  v11 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  v18 = va_arg(va1, _QWORD);
  v19 = va_arg(va1, _QWORD);
  v20 = va_arg(va1, _QWORD);
  v21 = va_arg(va1, _QWORD);

  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);

  _Unwind_Resume(a1);
}

void sub_10037CA80(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  void *v6;
  unsigned int v7;

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "storage"));
  v7 = objc_msgSend(v6, "characterAtIndex:", a2);

  if (v7 <= 0xD && ((1 << v7) & 0x3C30) != 0 || v7 - 8232 < 2)
  {
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = a2;
    *a3 = 1;
  }
}

void sub_10037CB0C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10037CB1C(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  void *v6;
  unsigned int v7;

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "storage"));
  v7 = objc_msgSend(v6, "characterAtIndex:", a2);

  if (v7 <= 0xD && ((1 << v7) & 0x3C30) != 0 || v7 - 8232 < 2)
  {
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = a2;
    *a3 = 1;
  }
}

void sub_10037CBA8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10037CBB8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10037CBE8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10037CC60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_10037CD40(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10037CE18(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10037CEE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_10037CF7C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10037CFCC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10037D344(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12)
{
  void *v12;
  void *v13;
  void *v14;

  _Unwind_Resume(a1);
}

void sub_10037D91C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25,void *a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,void *a37,void *a38,void *a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,void *a48,void *a49)
{
  void *v49;

  _Unwind_Resume(a1);
}

void sub_10037DD74(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10037DDA4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10037DDD4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10037DF14(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10037E120(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10037E2CC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  v3 = v2;

  _Unwind_Resume(a1);
}

void sub_10037E760(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10037E848(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_10037E8AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_10037EBAC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10037EBD4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10037EC04(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10037EF68(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10037F000(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10037F030(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10037F258(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10037F280(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10037F2B0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10037F560(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10037F590(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10037F5C0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10037F6F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_10037F808(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_10037F930(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10037FDAC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_10037FF00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1003800BC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_100380204(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10038021C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLCollaboratorCursorCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D91E0;
  off_1013D91E0 = v2;

}

void sub_10038029C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_100380488(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_100380544(id a1)
{
  void *v1;
  float v2;
  float v3;
  BOOL v4;
  double v5;
  void *v6;
  float v7;
  float v8;
  BOOL v9;
  double v10;

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](NSUserDefaults, "standardUserDefaults"));
  objc_msgSend(v1, "floatForKey:", CFSTR("CRLWPCollaborativeCaretCursorOpacity"));
  v3 = v2;

  v4 = v3 > 1.0 || v3 <= 0.0;
  v5 = v3;
  if (v4)
    v5 = 0.720000029;
  qword_1014155C8 = *(_QWORD *)&v5;
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](NSUserDefaults, "standardUserDefaults"));
  objc_msgSend(v6, "floatForKey:", CFSTR("CRLWPCollaborativeRangeCursorOpacity"));
  v8 = v7;

  v9 = v8 > 1.0 || v8 <= 0.0;
  v10 = v8;
  if (v9)
    v10 = 0.300000012;
  qword_1014155D0 = *(_QWORD *)&v10;
}

void sub_100380600(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100380D3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, void *a20,uint64_t a21,void *a22,void *a23)
{

  _Unwind_Resume(a1);
}

void sub_100380E8C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100380EBC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003811D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_100381224(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLCollaboratorCursorCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D91E0;
  off_1013D91E0 = v2;

}

void sub_100381254(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLCollaboratorCursorCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D91E0;
  off_1013D91E0 = v2;

}

void sub_100381284(uint64_t a1, uint64_t a2, _OWORD *a3, void *a4, uint64_t a5)
{
  id v9;
  CRLWPSelectionHighlightLayer *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  __int128 v16;
  void *v17;
  void *v18;
  _OWORD v19[3];

  v9 = a4;
  v10 = objc_alloc_init(CRLWPSelectionHighlightLayer);
  -[CRLWPSelectionHighlightLayer setPath:](v10, "setPath:", a2);
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "owner"));
  v12 = v11;
  if ((_DWORD)a5)
    v13 = 1;
  else
    v13 = 2;
  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "collaboratorColorForType:", v13));

  objc_msgSend(*(id *)(a1 + 32), "collaborativeCursorOpacityForCaret:", a5);
  v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "colorWithAlphaComponent:"));
  -[CRLWPSelectionHighlightLayer setFillColor:](v10, "setFillColor:", objc_msgSend(v15, "CGColor"));

  -[CRLWPSelectionHighlightLayer setStrokeColor:](v10, "setStrokeColor:", 0);
  v16 = a3[1];
  v19[0] = *a3;
  v19[1] = v16;
  v19[2] = a3[2];
  -[CRLWPSelectionHighlightLayer setAffineTransform:](v10, "setAffineTransform:", v19);
  v17 = *(void **)(a1 + 40);
  v18 = (void *)objc_claimAutoreleasedReturnValue(+[CRLCanvasRenderable renderableFromLayer:](CRLCanvasRenderable, "renderableFromLayer:", v10));
  objc_msgSend(v17, "addSubrenderable:", v18);

}

void sub_1003813A8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1003813F8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLCollaboratorCursorCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D91E0;
  off_1013D91E0 = v2;

}

void sub_1003814D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_100381574(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_100381614(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1003816A0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_100381778(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1003819E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_100381A34(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100381A64(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100381B54(uint64_t a1)
{
  void *v1;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "spellChecker"));

  if (v1)
  {
    objc_msgSend(WeakRetained, "p_updateSuppressedSpellingRange");
    objc_msgSend(WeakRetained, "setNeedsDisplay");
  }

}

void sub_100381BA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_100381D7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_100381EB0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100381F14(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100381FE4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1003820DC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100382414(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1003824B4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003824E4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003825CC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_100382694(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1003827C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_1003827F8(uint64_t a1)
{
  void *v2;
  unsigned int v3;
  id v4;
  id v5;

  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "interactiveCanvasController"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "primaryFindResultSearchReference"));
  v3 = objc_msgSend(v2, "isEqual:", *(_QWORD *)(a1 + 40));

  if (v3)
  {
    v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "interactiveCanvasController"));
    objc_msgSend(v5, "setPrimaryFindResultSearchReference:", 0);

  }
}

void sub_10038288C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_100382B60(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_100382BE8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100382C18(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100382CB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_100382D20(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100382E44(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100382F68(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_100383004(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_100383130(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_100383234(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_100383648(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_100383700(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100383730(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100383760(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100383790(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100383948(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void sub_100383970(uint64_t a1)
{
  void *v2;
  id v3;
  uint64_t v4;
  void *i;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  void *v15;
  _BYTE v16[128];

  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "searchReferences", 0));
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v11, v16, 16);
  if (v3)
  {
    v4 = *(_QWORD *)v12;
    do
    {
      for (i = 0; i != v3; i = (char *)i + 1)
      {
        if (*(_QWORD *)v12 != v4)
          objc_enumerationMutation(v2);
        v6 = *(void **)(*((_QWORD *)&v11 + 1) + 8 * (_QWORD)i);
        if (objc_msgSend(*(id *)(a1 + 32), "p_doesRepIntersectSearchReference:", v6))
        {
          v7 = *(void **)(*(_QWORD *)(a1 + 32) + 304);
          v15 = v6;
          v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v15, 1));
          v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "canvas"));
          objc_msgSend(v9, "contentsScale");
          v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "buildHighlightsForSearchReferences:contentsScaleForLayers:shouldCreateBackground:backgroundColor:", v8, 1, *(_QWORD *)(a1 + 40)));

          objc_msgSend(v6, "setFindHighlights:", v10);
        }
      }
      v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v11, v16, 16);
    }
    while (v3);
  }

}

void sub_100383AF4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100383F1C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_100383FBC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100383FEC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003840D4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1003841D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1003842C4(uint64_t a1)
{

}

void sub_100384354(uint64_t a1, double a2, double a3)
{
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  id v26;

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "canvas"));
  v26 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "canvasController"));

  v7 = *(id *)(a1 + 32);
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "parentRep"));
  v15 = sub_100221DDC(v8, 1, v9, v10, v11, v12, v13, v14, (uint64_t)&OBJC_PROTOCOL___CRLWPContainerTextEditingRep);
  v16 = (void *)objc_claimAutoreleasedReturnValue(v15);

  objc_msgSend(*(id *)(a1 + 32), "beginEditing");
  if (v16)
  {
    v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "containedRep"));

    v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "layout"));
    objc_msgSend(v18, "validate");

  }
  else
  {
    v17 = v7;
  }
  v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v26, "editorController"));
  *(_QWORD *)&v21 = objc_opt_class(_TtC8Freeform11CRLWPEditor, v20).n128_u64[0];
  v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "mostSpecificCurrentEditorOfClass:", v22, v21));

  v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v23, "storage"));
  v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "storage"));

  if (v24 == v25)
    objc_msgSend(*(id *)(a1 + 32), "scribbleSetSelectionForBeginEditingWithBoundsPoint:tappedInRep:", v17, a2, a3);

}

void sub_1003844C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_10038491C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_100384A10(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100384A40(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100384B24(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100384BAC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100384CF8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

unint64_t sub_100384D08(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  unint64_t v6;
  void *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BOOL4 v13;
  char *v14;
  char *v16;
  unint64_t v17;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "selection"));
  v5 = v4;
  if (!v4)
    goto LABEL_27;
  v6 = (unint64_t)objc_msgSend(v4, "start");
  if (objc_msgSend(v5, "isRange"))
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "selection"));
    v8 = (char *)objc_msgSend(v7, "range");
    v10 = v9;

    if (v3 && objc_msgSend(v3, "isValid"))
    {
      v11 = (uint64_t)objc_msgSend(v3, "range");
    }
    else
    {
      v12 = 0;
      v11 = 0x7FFFFFFFFFFFFFFFLL;
    }
    v14 = &v8[v10];
    if (v6 != v11)
      v14 = (char *)v6;
    if (v6 == 0x7FFFFFFFFFFFFFFFLL)
      v6 = 0x7FFFFFFFFFFFFFFFLL;
    else
      v6 = (unint64_t)v14;
    v13 = (char *)v11 == v8 && v12 == v10;
  }
  else
  {
    v13 = 0;
  }
  v16 = (char *)objc_msgSend(*(id *)(a1 + 32), "range");
  if (v6 >= (unint64_t)v16 && v6 - (unint64_t)v16 < v17)
  {
    if (!v13)
      goto LABEL_28;
    goto LABEL_27;
  }
  if (&v16[v17] != (char *)v6 || v13)
LABEL_27:
    v6 = 0x7FFFFFFFFFFFFFFFLL;
LABEL_28:

  return v6;
}

void sub_100384E20(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_100384E5C(uint64_t a1)
{
  double x;
  double y;
  double width;
  double height;
  uint64_t v6;
  void *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  void *v20;
  UIView *v21;
  id v22;
  CGRect v23;
  CGRect v24;

  x = CGRectNull.origin.x;
  y = CGRectNull.origin.y;
  width = CGRectNull.size.width;
  height = CGRectNull.size.height;
  v6 = (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
  v22 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "selection"));
  if (v6 != 0x7FFFFFFFFFFFFFFFLL)
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "interactiveCanvasController"));
    objc_msgSend(v7, "layoutIfNeeded");

    if (objc_msgSend(v22, "isInsertionPoint"))
      objc_msgSend(*(id *)(a1 + 40), "caretRectForSelection:", v22);
    else
      objc_msgSend(*(id *)(a1 + 40), "caretRectForCharIndex:caretAffinity:", v6, objc_msgSend(v22, "caretAffinity"));
    x = v8;
    y = v9;
    if (v10 == 0.0)
      width = 1.0;
    else
      width = v10;
    if (v11 == 0.0)
      height = 1.0;
    else
      height = v11;
  }
  v23.origin.x = x;
  v23.origin.y = y;
  v23.size.width = width;
  v23.size.height = height;
  if (!CGRectIsNull(v23))
  {
    objc_msgSend(*(id *)(a1 + 40), "p_convertRectIntoZoomCoordinates:", x, y, width, height);
    v13 = v12;
    v15 = v14;
    v17 = v16;
    v19 = v18;
    v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "interactiveCanvasController"));
    v21 = (UIView *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "canvasView"));
    v24.origin.x = v13;
    v24.origin.y = v15;
    v24.size.width = v17;
    v24.size.height = v19;
    UIAccessibilityZoomFocusChanged(UIAccessibilityZoomTypeInsertionPoint, v24, v21);

  }
}

void sub_100384FC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_10038509C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1003851B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  void *v20;
  void *v21;
  void *v22;

  _Block_object_dispose(&a15, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1003851FC(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_10038520C(uint64_t a1)
{

}

void sub_100385214(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;

  v8 = a2;
  objc_opt_class(_TtC8Freeform11CRLWPEditor, v4);
  if ((objc_opt_isKindOfClass(v8, v5) & 1) != 0)
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "storage"));
    v7 = *(void **)(a1 + 32);

    if (v6 == v7)
      objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a2);
  }

}

void sub_1003852A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1003859D8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100385A08(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100385C5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  uint64_t v17;
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v17 - 144), 8);
  _Block_object_dispose((const void *)(v17 - 112), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100385CA0(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_100385CB0(uint64_t a1)
{

}

void sub_100385CB8(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  NSObject *v7;
  id v8;
  uint64_t v9;
  int v10;
  NSObject *v11;
  dispatch_data_t concat;
  uint64_t v13;
  void *v14;
  NSObject *v15;
  size_t size;
  id v17;
  uint64_t v18;
  void *v19;
  unsigned __int8 v20;
  size_t v21;
  size_t v22;
  size_t v23;
  void *v24;
  uint64_t v25;
  void *v26;
  const __CFString *v27;
  void *v28;
  uint64_t v29;
  dispatch_data_t subrange;
  void *v31;
  NSObject *v32;
  void *v33;
  id v34;
  size_t v35;
  _QWORD v36[2];
  _QWORD v37[2];
  uint8_t buf[4];
  void *v39;
  __int16 v40;
  size_t v41;
  __int16 v42;
  size_t v43;

  v7 = a3;
  v8 = a4;
  v9 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v10 = *(unsigned __int8 *)(v9 + 24);
  if (v8 && *(_BYTE *)(v9 + 24))
  {
    *(_BYTE *)(v9 + 24) = 0;
    objc_msgSend(*(id *)(a1 + 32), "handleFailureWithHandler:error:", *(_QWORD *)(a1 + 40), v8);
    v10 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24);
  }
  if (v10 && (v11 = *(NSObject **)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40)) != 0)
  {
    if (v7)
    {
      concat = dispatch_data_create_concat(v11, v7);
      v13 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
      v14 = *(void **)(v13 + 40);
      *(_QWORD *)(v13 + 40) = concat;

      v11 = *(NSObject **)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40);
    }
    v15 = v11;

    size = dispatch_data_get_size(v15);
    if ((a2 & 1) != 0 || size >= 0x1E)
    {
      v18 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
      v19 = *(void **)(v18 + 40);
      *(_QWORD *)(v18 + 40) = 0;

      v34 = v8;
      v35 = 0;
      v20 = objc_msgSend(*(id *)(a1 + 32), "readFileHeaderFromData:headerLength:error:", v15, &v35, &v34);
      v17 = v34;

      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = v20;
      v21 = v35;
      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) = v35 != *(_QWORD *)(a1 + 80);
      if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24))
      {
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24))
        {
          objc_msgSend(*(id *)(a1 + 32), "readWithFileHeaderLength:handler:", v21, *(_QWORD *)(a1 + 40));
        }
        else
        {
          v22 = dispatch_data_get_size(v15);
          if (v22 >= v21)
          {
            subrange = dispatch_data_create_subrange(v15, v21, v22 - v21);

            v15 = subrange;
          }
          else
          {
            v23 = v22;
            if (qword_10147E368 != -1)
              dispatch_once(&qword_10147E368, &stru_1012564D0);
            v24 = off_1013D9068;
            if (os_log_type_enabled((os_log_t)off_1013D9068, OS_LOG_TYPE_ERROR))
            {
              v31 = *(void **)(*(_QWORD *)(a1 + 32) + 8);
              v32 = v24;
              v33 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v31, "name"));
              *(_DWORD *)buf = 138412802;
              v39 = v33;
              v40 = 2048;
              v41 = v23;
              v42 = 2048;
              v43 = v35;
              _os_log_error_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_ERROR, "Read was less than file header size for entry %@. dataSize=%zu, headerLength=%zu", buf, 0x20u);

            }
            v36[0] = CFSTR("CRLZipArchiveErrorDescription");
            v36[1] = CFSTR("CRLZipArchiveErrorEntryName");
            v37[0] = CFSTR("Entry is too small");
            v25 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "name"));
            v26 = (void *)v25;
            v27 = &stru_1012A72B0;
            if (v25)
              v27 = (const __CFString *)v25;
            v37[1] = v27;
            v28 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v37, v36, 2));
            v29 = objc_claimAutoreleasedReturnValue(+[NSError crl_fileReadCorruptedFileErrorWithUserInfo:](NSError, "crl_fileReadCorruptedFileErrorWithUserInfo:", v28));

            *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = 0;
            v17 = (id)v29;
          }
        }
      }
      if (!*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24))
        objc_msgSend(*(id *)(a1 + 32), "handleFailureWithHandler:error:", *(_QWORD *)(a1 + 40), v17);
    }
    else
    {
      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) = 1;
      v17 = v8;
    }
  }
  else
  {
    v17 = v8;
    v15 = v7;
  }
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24)
    && !*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24))
  {
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = objc_msgSend(*(id *)(a1 + 32), "processData:CRC:isDone:handler:", v15, *(_QWORD *)(*(_QWORD *)(a1 + 72)+ 8)+ 24, a2, *(_QWORD *)(a1 + 40));
  }

}

void sub_100386088(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_1003862F4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_100386324(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  unsigned int v8;
  uint64_t v9;
  void *v10;
  char *v11;
  id v12;
  uint64_t v13;

  v5 = a2;
  v6 = a3;
  v13 = 0;
  if (v6
    || (v7 = *(void **)(a1 + 32),
        v12 = 0,
        v8 = objc_msgSend(v7, "readFileHeaderFromData:headerLength:error:", v5, &v13, &v12),
        v6 = v12,
        !v8))
  {
    objc_msgSend(*(id *)(a1 + 32), "handleFailureWithHandler:error:", *(_QWORD *)(a1 + 40), v6);
  }
  else
  {
    v9 = *(_QWORD *)(a1 + 32);
    v10 = *(void **)(v9 + 32);
    v11 = (char *)objc_msgSend(*(id *)(v9 + 8), "offset");
    objc_msgSend(v10, "readFromOffset:length:handler:", &v11[v13 + *(_QWORD *)(a1 + 48)], *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 40));
  }

}

void sub_100386820(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_100386850(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_100386880(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_1003869D4(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_100386A00(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v7;
  uint64_t v8;
  int v9;
  id v10;

  v10 = a3;
  v7 = a4;
  v8 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v9 = *(unsigned __int8 *)(v8 + 24);
  if (v7 && *(_BYTE *)(v8 + 24))
  {
    *(_BYTE *)(v8 + 24) = 0;
    objc_msgSend(*(id *)(a1 + 32), "handleFailureWithHandler:error:", *(_QWORD *)(a1 + 40), v7);
    v9 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24);
  }
  if (v9)
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = objc_msgSend(*(id *)(a1 + 32), "processData:CRC:isDone:handler:", v10, *(_QWORD *)(*(_QWORD *)(a1 + 56)+ 8)+ 24, a2, *(_QWORD *)(a1 + 40));

}

uint64_t sub_100386CB4(uint64_t a1, int a2, int a3, Bytef *buf, unint64_t len)
{
  uLong v7;
  uInt v8;
  void *v10;
  void *v11;
  void *v12;

  v7 = **(unsigned int **)(a1 + 32);
  if (HIDWORD(len))
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_1012565E8);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E28814();
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101256608);
    v10 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100DE7468(v10);
    v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLZipReadChannel processData:CRC:isDone:handler:]_block_invoke"));
    v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/Zip/CRLZipReadChannel.m"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v11, v12, 259, 0, "Out-of-bounds type assignment was clamped to max");

    v8 = -1;
  }
  else
  {
    v8 = len;
  }
  **(_DWORD **)(a1 + 32) = crc32(v7, buf, v8);
  return 1;
}

void sub_100386E30(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100386E60(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100386E90(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_10038736C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10038739C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003873CC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003873FC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100387590(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003875C0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

id sub_10038764C(uint64_t a1, void *a2)
{
  return a2;
}

void sub_1003876CC(uint64_t a1)
{
  void *v1;
  id v2;
  uint64_t v3;
  void *v4;

  v1 = *(void **)(a1 + 32);
  if (objc_msgSend(v1, "conformsToProtocol:", &OBJC_PROTOCOL___CRLAccessibilitySpecializer))
  {
    if ((objc_opt_respondsToSelector(v1, "specializedClass") & 1) != 0)
    {
      v2 = objc_msgSend(v1, "specializedClass");
      if (objc_msgSend(v2, "isSubclassOfClass:", v1))
        v1 = v2;
    }
  }
  v3 = objc_opt_new(v1);
  v4 = (void *)qword_1014155E0;
  qword_1014155E0 = v3;

}

void sub_100388390(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003883C0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100389334(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100389364(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100389394(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003893C4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003893F4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100389424(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100389454(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100389484(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003894B4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003894E4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100389788(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 96), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1003897AC(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1003897BC(uint64_t a1)
{

}

void sub_1003897C4(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;

  v5 = a2;
  v6 = a3;
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v8 = *(void **)(v7 + 40);
  *(_QWORD *)(v7 + 40) = v5;
  v12 = v5;

  v9 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v10 = *(void **)(v9 + 40);
  *(_QWORD *)(v9 + 40) = v6;
  v11 = v6;

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_10038A088(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10038A0B8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10038A3B4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10038A3E4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10038A7B0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10038A7E0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10038A810(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10038A840(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10038AD9C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10038ADCC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10038ADFC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10038AE2C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10038AE5C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10038AE8C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10038B92C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10038B95C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10038B98C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10038B9BC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10038B9EC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10038BA1C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10038BBD0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10038BC00(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10038C090(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10038C0C0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10038C5EC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10038C61C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10038C64C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10038C67C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10038C860(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10038C890(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10038CC08(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10038CC38(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10038CC68(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10038CC98(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

uint64_t sub_10038D024(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return objc_opt_class(v2, a2);
}

void sub_10038E864(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10038E894(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10038E8C4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10038E8F4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

id sub_10038EA14(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "p_crl_uncachedScreenClass");
  qword_1014155F8 = (uint64_t)result;
  return result;
}

void sub_10038F238(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10038F268(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10038F298(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10038F2C8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10038F2F8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10038F328(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10038F358(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10038F388(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10038F3B8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10038F3E8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10038F458(id a1)
{
  BOOL v1;

  v1 = (id)+[UIScreen crl_screenClass](UIScreen, "crl_screenClass") == (id)3
    || (id)+[UIScreen crl_screenClass](UIScreen, "crl_screenClass") == (id)5;
  byte_101415608 = v1;
}

void sub_10038F4E4(id a1)
{
  BOOL v1;

  v1 = (id)+[UIScreen crl_screenClass](UIScreen, "crl_screenClass") == (id)1
    || (id)+[UIScreen crl_screenClass](UIScreen, "crl_screenClass") == (id)2;
  byte_101415618 = v1;
}

void sub_10038F570(id a1)
{
  double v1;
  double v2;
  void *v3;
  double v4;
  id v5;

  v5 = (id)objc_claimAutoreleasedReturnValue(+[UIScreen mainScreen](UIScreen, "mainScreen"));
  objc_msgSend(v5, "nativeScale");
  v2 = v1;
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[UIScreen mainScreen](UIScreen, "mainScreen"));
  objc_msgSend(v3, "scale");
  *(double *)&qword_1013DBEC8 = v2 / v4;

}

void sub_10038F61C(id a1)
{
  void *v1;
  double v2;
  double v3;
  double v4;
  double v5;
  unsigned __int8 v6;
  double v7;
  char v8;

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[UIScreen mainScreen](UIScreen, "mainScreen"));
  objc_msgSend(v1, "bounds");
  v3 = v2;
  v5 = v4;

  v6 = +[UIDevice crl_padUI](UIDevice, "crl_padUI");
  if (v3 >= v5)
    v7 = v3;
  else
    v7 = v5;
  if (v7 == 1080.0)
    v8 = v6;
  else
    v8 = 0;
  byte_101415630 = v8;
}

void sub_10038F6CC(id a1)
{
  void *v1;
  double v2;
  double v3;
  double v4;
  double v5;
  unsigned __int8 v6;
  double v7;
  char v8;

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[UIScreen mainScreen](UIScreen, "mainScreen"));
  objc_msgSend(v1, "bounds");
  v3 = v2;
  v5 = v4;

  v6 = +[UIDevice crl_padUI](UIDevice, "crl_padUI");
  if (v3 >= v5)
    v7 = v3;
  else
    v7 = v5;
  if (v7 == 1112.0)
    v8 = v6;
  else
    v8 = 0;
  byte_101415640 = v8;
}

void sub_10038F77C(id a1)
{
  void *v1;
  double v2;
  double v3;
  double v4;
  double v5;
  unsigned __int8 v6;
  double v7;
  char v8;

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[UIScreen mainScreen](UIScreen, "mainScreen"));
  objc_msgSend(v1, "bounds");
  v3 = v2;
  v5 = v4;

  v6 = +[UIDevice crl_padUI](UIDevice, "crl_padUI");
  if (v3 >= v5)
    v7 = v3;
  else
    v7 = v5;
  if (v7 == 1180.0)
    v8 = v6;
  else
    v8 = 0;
  byte_101415650 = v8;
}

void sub_10038F82C(id a1)
{
  void *v1;
  double v2;
  double v3;
  double v4;
  double v5;
  unsigned __int8 v6;
  double v7;
  char v8;

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[UIScreen mainScreen](UIScreen, "mainScreen"));
  objc_msgSend(v1, "bounds");
  v3 = v2;
  v5 = v4;

  v6 = +[UIDevice crl_padUI](UIDevice, "crl_padUI");
  if (v3 >= v5)
    v7 = v3;
  else
    v7 = v5;
  if (v7 == 1194.0)
    v8 = v6;
  else
    v8 = 0;
  byte_101415660 = v8;
}

void sub_10038F8DC(id a1)
{
  void *v1;
  double v2;
  double v3;
  double v4;
  double v5;
  unsigned __int8 v6;
  double v7;
  char v8;

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[UIScreen mainScreen](UIScreen, "mainScreen"));
  objc_msgSend(v1, "bounds");
  v3 = v2;
  v5 = v4;

  v6 = +[UIDevice crl_padUI](UIDevice, "crl_padUI");
  if (v3 >= v5)
    v7 = v3;
  else
    v7 = v5;
  if (v7 == 1366.0)
    v8 = v6;
  else
    v8 = 0;
  byte_101415670 = v8;
}

void sub_10038F98C(id a1)
{
  void *v1;
  double v2;
  double v3;
  double v4;
  double v5;
  unsigned __int8 v6;
  double v7;
  char v8;

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[UIScreen mainScreen](UIScreen, "mainScreen"));
  objc_msgSend(v1, "bounds");
  v3 = v2;
  v5 = v4;

  v6 = +[UIDevice crl_padUI](UIDevice, "crl_padUI");
  if (v3 >= v5)
    v7 = v3;
  else
    v7 = v5;
  if (v7 >= 1366.0)
    v8 = v6;
  else
    v8 = 0;
  byte_101415680 = v8;
}

void sub_10038FA3C(id a1)
{
  void *v1;
  double v2;
  double v3;
  double v4;
  double v5;
  unsigned __int8 v6;
  double v7;
  char v8;

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[UIScreen mainScreen](UIScreen, "mainScreen"));
  objc_msgSend(v1, "bounds");
  v3 = v2;
  v5 = v4;

  v6 = +[UIDevice crl_phoneUI](UIDevice, "crl_phoneUI");
  if (v3 >= v5)
    v7 = v3;
  else
    v7 = v5;
  if (v7 == 568.0)
    v8 = v6;
  else
    v8 = 0;
  byte_101415690 = v8;
}

void sub_10038FAEC(id a1)
{
  void *v1;
  double v2;
  double v3;
  double v4;
  double v5;
  unsigned __int8 v6;
  double v7;
  char v8;

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[UIScreen mainScreen](UIScreen, "mainScreen"));
  objc_msgSend(v1, "bounds");
  v3 = v2;
  v5 = v4;

  v6 = +[UIDevice crl_phoneUI](UIDevice, "crl_phoneUI");
  if (v3 >= v5)
    v7 = v3;
  else
    v7 = v5;
  if (v7 <= 568.0)
    v8 = v6;
  else
    v8 = 0;
  byte_1014156A0 = v8;
}

void sub_10038FB9C(id a1)
{
  void *v1;
  double v2;
  double v3;
  double v4;
  double v5;
  unsigned __int8 v6;
  double v7;
  char v8;

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[UIScreen mainScreen](UIScreen, "mainScreen"));
  objc_msgSend(v1, "bounds");
  v3 = v2;
  v5 = v4;

  v6 = +[UIDevice crl_phoneUI](UIDevice, "crl_phoneUI");
  if (v3 >= v5)
    v7 = v3;
  else
    v7 = v5;
  if (v7 == 667.0)
    v8 = v6;
  else
    v8 = 0;
  byte_1014156B0 = v8;
}

void sub_10038FC4C(id a1)
{
  void *v1;
  double v2;
  double v3;
  double v4;
  double v5;
  unsigned __int8 v6;
  double v7;
  char v8;

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[UIScreen mainScreen](UIScreen, "mainScreen"));
  objc_msgSend(v1, "bounds");
  v3 = v2;
  v5 = v4;

  v6 = +[UIDevice crl_phoneUI](UIDevice, "crl_phoneUI");
  if (v3 >= v5)
    v7 = v3;
  else
    v7 = v5;
  if (v7 <= 667.0)
    v8 = v6;
  else
    v8 = 0;
  byte_1014156C0 = v8;
}

void sub_10038FCFC(id a1)
{
  void *v1;
  double v2;
  double v3;
  double v4;
  double v5;
  unsigned __int8 v6;
  double v7;
  char v8;

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[UIScreen mainScreen](UIScreen, "mainScreen"));
  objc_msgSend(v1, "bounds");
  v3 = v2;
  v5 = v4;

  v6 = +[UIDevice crl_phoneUI](UIDevice, "crl_phoneUI");
  if (v3 >= v5)
    v7 = v3;
  else
    v7 = v5;
  if (v7 == 693.0)
    v8 = v6;
  else
    v8 = 0;
  byte_1014156D0 = v8;
}

void sub_10038FDAC(id a1)
{
  void *v1;
  double v2;
  double v3;
  double v4;
  double v5;
  unsigned __int8 v6;
  double v7;
  char v8;

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[UIScreen mainScreen](UIScreen, "mainScreen"));
  objc_msgSend(v1, "bounds");
  v3 = v2;
  v5 = v4;

  v6 = +[UIDevice crl_phoneUI](UIDevice, "crl_phoneUI");
  if (v3 >= v5)
    v7 = v3;
  else
    v7 = v5;
  if (v7 == 736.0)
    v8 = v6;
  else
    v8 = 0;
  byte_1014156E0 = v8;
}

void sub_10038FE5C(id a1)
{
  void *v1;
  double v2;
  double v3;
  double v4;
  double v5;
  unsigned __int8 v6;
  double v7;
  char v8;

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[UIScreen mainScreen](UIScreen, "mainScreen"));
  objc_msgSend(v1, "bounds");
  v3 = v2;
  v5 = v4;

  v6 = +[UIDevice crl_phoneUI](UIDevice, "crl_phoneUI");
  if (v3 >= v5)
    v7 = v3;
  else
    v7 = v5;
  if (v7 == 812.0)
    v8 = v6;
  else
    v8 = 0;
  byte_1014156F0 = v8;
}

void sub_10038FF0C(id a1)
{
  void *v1;
  double v2;
  double v3;
  double v4;
  double v5;
  unsigned __int8 v6;
  double v7;
  char v8;

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[UIScreen mainScreen](UIScreen, "mainScreen"));
  objc_msgSend(v1, "bounds");
  v3 = v2;
  v5 = v4;

  v6 = +[UIDevice crl_phoneUI](UIDevice, "crl_phoneUI");
  if (v3 >= v5)
    v7 = v3;
  else
    v7 = v5;
  if (v7 >= 812.0)
    v8 = v6;
  else
    v8 = 0;
  byte_101415700 = v8;
}

void sub_10038FFBC(id a1)
{
  void *v1;
  double v2;
  double v3;
  double v4;
  double v5;
  unsigned __int8 v6;
  double v7;
  char v8;

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[UIScreen mainScreen](UIScreen, "mainScreen"));
  objc_msgSend(v1, "bounds");
  v3 = v2;
  v5 = v4;

  v6 = +[UIDevice crl_phoneUI](UIDevice, "crl_phoneUI");
  if (v3 >= v5)
    v7 = v3;
  else
    v7 = v5;
  if (v7 == 844.0)
    v8 = v6;
  else
    v8 = 0;
  byte_101415710 = v8;
}

void sub_10039006C(id a1)
{
  void *v1;
  double v2;
  double v3;
  double v4;
  double v5;
  unsigned __int8 v6;
  double v7;
  char v8;

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[UIScreen mainScreen](UIScreen, "mainScreen"));
  objc_msgSend(v1, "bounds");
  v3 = v2;
  v5 = v4;

  v6 = +[UIDevice crl_phoneUI](UIDevice, "crl_phoneUI");
  if (v3 >= v5)
    v7 = v3;
  else
    v7 = v5;
  if (v7 == 896.0)
    v8 = v6;
  else
    v8 = 0;
  byte_101415720 = v8;
}

void sub_10039011C(id a1)
{
  void *v1;
  double v2;
  double v3;
  double v4;
  double v5;
  unsigned __int8 v6;
  double v7;
  char v8;

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[UIScreen mainScreen](UIScreen, "mainScreen"));
  objc_msgSend(v1, "bounds");
  v3 = v2;
  v5 = v4;

  v6 = +[UIDevice crl_phoneUI](UIDevice, "crl_phoneUI");
  if (v3 >= v5)
    v7 = v3;
  else
    v7 = v5;
  if (v7 == 926.0)
    v8 = v6;
  else
    v8 = 0;
  byte_101415730 = v8;
}

void sub_1003903BC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003903EC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003905E8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100390618(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

int64_t sub_100390F44(id a1, id a2, id a3)
{
  id v4;
  double v5;
  double v6;
  double v7;
  double v8;
  int64_t v9;

  v4 = a3;
  objc_msgSend(a2, "crlaxFrameInScreenSpace");
  v6 = v5;
  objc_msgSend(v4, "crlaxFrameInScreenSpace");
  v8 = v7;

  v9 = -1;
  if (v6 >= v8)
    v9 = 1;
  if (v6 == v8)
    return 0;
  else
    return v9;
}

void sub_1003912E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  _Block_object_dispose(&a35, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10039132C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_10039133C(uint64_t a1)
{

}

void sub_100391344(uint64_t a1, void *a2, uint64_t a3, BOOL *a4)
{
  objc_class *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;

  v15 = a2;
  v6 = NSClassFromString(CFSTR("Freeform.CRLWPEditor"));
  v7 = __CRLAccessibilityCastAsClass(v6, (uint64_t)v15, 0, 0);
  v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
  v9 = objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "crlaxValueForKey:", CFSTR("crlaxEditingRepWithCaret")));
  v10 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v11 = *(void **)(v10 + 40);
  *(_QWORD *)(v10 + 40) = v9;

  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40)
    && objc_msgSend(v15, "conformsToProtocol:", *(_QWORD *)(a1 + 32)))
  {
    v12 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "_crlaxFirstSelectedRepInCanvasEditor:preferExplicitlyFocusedReps:", v15, 1));
    v13 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v14 = *(void **)(v13 + 40);
    *(_QWORD *)(v13 + 40) = v12;

  }
  *a4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40) != 0;

}

void sub_100391558(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_100391570(uint64_t a1)
{
  id result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result = objc_msgSend(*(id *)(a1 + 32), "convertBoundsToUnscaledPoint:", *(double *)(a1 + 48), *(double *)(a1 + 56));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  *(_QWORD *)(v3 + 32) = v4;
  *(_QWORD *)(v3 + 40) = v5;
  return result;
}

void sub_100391670(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_100391688(uint64_t a1)
{
  id result;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = objc_msgSend(*(id *)(a1 + 32), "convertBoundsToUnscaledRect:", *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72));
  v3 = *(_QWORD **)(*(_QWORD *)(a1 + 40) + 8);
  v3[4] = v4;
  v3[5] = v5;
  v3[6] = v6;
  v3[7] = v7;
  return result;
}

void sub_100391774(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_10039178C(uint64_t a1)
{
  id result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result = objc_msgSend(*(id *)(a1 + 32), "convertUnscaledToBoundsPoint:", *(double *)(a1 + 48), *(double *)(a1 + 56));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  *(_QWORD *)(v3 + 32) = v4;
  *(_QWORD *)(v3 + 40) = v5;
  return result;
}

void sub_10039188C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1003918A4(uint64_t a1)
{
  id result;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = objc_msgSend(*(id *)(a1 + 32), "convertUnscaledToBoundsRect:", *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72));
  v3 = *(_QWORD **)(*(_QWORD *)(a1 + 40) + 8);
  v3[4] = v4;
  v3[5] = v5;
  v3[6] = v6;
  v3[7] = v7;
  return result;
}

void sub_100391A1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100391A34(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "repForInfo:", *(_QWORD *)(a1 + 40)));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_100391BAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100391BC4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "repsForInfo:", *(_QWORD *)(a1 + 40)));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_100391D28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100391D40(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "repForLayout:", *(_QWORD *)(a1 + 40)));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_1003925F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100392610(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;

  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "crlaxCanvasEditor"));
  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "selectionPathWithInfos:", *(_QWORD *)(a1 + 40)));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_100392914(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10039292C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "infosForSelectionPath:", *(_QWORD *)(a1 + 40)));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_100392A64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100392A7C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "infosForCurrentSelectionPath"));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_100392BDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100392BF4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "layoutsForSelectionPath:", *(_QWORD *)(a1 + 40)));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

id sub_100392C88(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "scrollCurrentSelectionToVisibleWithOptions:", 8);
}

id sub_100392F18(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "scrollToSelectionPath:scrollOptions:", *(_QWORD *)(a1 + 40), 0);
}

id sub_100392F80(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "layoutIfNeeded");
}

void sub_10039327C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_100393294(uint64_t a1)
{
  id result;
  uint64_t v3;

  result = objc_msgSend(*(id *)(a1 + 32), "convertPointsToRulerUnits:", *(double *)(a1 + 48));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = v3;
  return result;
}

void sub_100393570(uint64_t a1)
{
  void *v2;
  id v3;
  __CFString *v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_crlaxCollaborationModifiers"));
  v3 = objc_msgSend(v2, "count");

  if ((unint64_t)v3 <= 3)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_crlaxCollaborationModifiers"));
    v6 = objc_msgSend(v5, "count");

    if (!v6)
      goto LABEL_7;
    v4 = CFSTR("collaborator.modified.context.names");
  }
  else
  {
    v4 = CFSTR("collaborator.modified.context.count");
  }
  v7 = CRLAccessibilitySpecializedLocalizedString(v4);
  v8 = objc_claimAutoreleasedReturnValue(v7);
  if (v8)
  {
    v9 = (void *)v8;
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_crlaxCollaborationModifiers"));
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "allObjects"));
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "componentsJoinedByString:", CFSTR(", ")));

    v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", v9, v12));
    CRLAccessibilityPostAnnouncementNotification(*(void **)(a1 + 40), v13);

  }
LABEL_7:
  v14 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_crlaxCollaborationModifiers"));
  objc_msgSend(v14, "removeAllObjects");

}

id sub_100393748(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_crlaxPostCollaborationOccurredSound");
}

void sub_100394170(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "localizedStringForKey:value:table:", CFSTR("Current selection: %@"), 0, 0));

  v3 = *(void **)(a1 + 32);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "crlaxInfos"));
  v5 = objc_msgSend(v4, "mutableCopy");
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "p_sentenceUsingFormat:toDescribeRepSelectionOrDeltaWith:", v7, v5));

  UIAccessibilityPostNotification(UIAccessibilityAnnouncementNotification, v6);
}

void sub_100394488(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1003944A8(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  void *v5;
  void *v6;
  id v7;

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "crlaxRepForInfo:", a2));
  v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "crlaxTarget"));

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "accessibilityLabel"));
  if (v6)
    objc_msgSend(*(id *)(a1 + 40), "addObject:", v6);
  else
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = 1;
  *a3 = *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24);

}

void sub_1003947BC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003947EC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100394C0C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100394C3C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100394EE8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100394F18(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10039535C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10039538C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100395BDC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100395C0C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100395C3C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100395C6C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100395C9C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100395CCC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

id sub_100396024(id *a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  _QWORD v13[4];
  _QWORD v14[4];

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "shapeFromSearchResult:", v3));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "name"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "score"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", objc_msgSend(v3, "priority")));
  if (objc_msgSend(v3, "priority") && objc_msgSend(v3, "priority") != (id)1)
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "matchingKeyword"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "p_locale"));
    v10 = objc_claimAutoreleasedReturnValue(+[CRLShapeLibraryHelper keywordByCapitalizingLowercasedKeyword:locale:](CRLShapeLibraryHelper, "keywordByCapitalizingLowercasedKeyword:locale:", v8, v9));

    v5 = (void *)v10;
  }
  objc_msgSend(a1[6], "setObject:forKey:", v5, v4);
  v13[0] = CFSTR("CRLShapeSearchResultsCollectionShapeKey");
  v13[1] = CFSTR("CRLShapeSearchResultsCollectionScoreKey");
  v14[0] = v4;
  v14[1] = v6;
  v13[2] = CFSTR("CRLShapeSearchResultsCollectionPriorityKey");
  v13[3] = CFSTR("CRLShapeSearchResultsCollectionDisplayNameKey");
  v14[2] = v7;
  v14[3] = v5;
  v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v14, v13, 4));

  return v11;
}

id sub_100396224(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v5 = a2;
  v6 = a3;
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "displayNameForShape:", v5));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "displayNameForShape:", v6));
  v9 = objc_msgSend(v7, "localizedStandardCompare:", v8);

  if (!v9)
    v9 = objc_msgSend(*(id *)(a1 + 32), "p_comparePositionOfShape:withOtherShape:", v5, v6);

  return v9;
}

void sub_1003966A4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003966D4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100396A08(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100396A38(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003973F4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100397424(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100397454(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100397484(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100397760(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100397790(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003977C0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003977F0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003979FC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100397A2C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100397DD8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100397E08(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

id sub_100398F68(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "repForSelecting"));
  if (v4)
  {
    v5 = *(void **)(a1 + 32);
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "repForSelecting"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "layout"));
    v8 = objc_msgSend(v5, "p_isValidConnectionDestination:", v7);

  }
  else
  {
    v8 = 0;
  }

  return v8;
}

id sub_10039A134(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "repForSelecting"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "layout"));
  v5 = *(void **)(a1 + 32);

  if (v4 == v5)
  {
    v7 = 0;
  }
  else
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "rep"));
    v7 = objc_msgSend(v6, "canConnectToRep:", v3);

  }
  return v7;
}

void sub_10039B6BC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10039B6EC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10039C230(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10039C260(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10039C518(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10039C548(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10039C714(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10039C744(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10039D0D4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10039D104(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10039D134(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10039D164(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10039D8F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, _Unwind_Exception *exception_object, uint64_t a10, void *a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  void *v26;
  void *v27;

  _Unwind_Resume(a1);
}

void sub_10039DA08(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10039DA38(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10039DA68(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10039DA98(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10039DAC8(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  unsigned int v13;
  id v14;

  v14 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "editablePathSource"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "subpaths"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectAtIndex:", objc_msgSend(*(id *)(a1 + 40), "subpathIndex")));

  v4 = objc_msgSend(*(id *)(a1 + 40), "nodeIndex");
  objc_msgSend(*(id *)(a1 + 40), "tValue");
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "splitEdgeAtIndex:atPercentage:", v4));
  if (objc_msgSend(*(id *)(a1 + 40), "hoveringSharp"))
  {
    objc_msgSend(v5, "setType:", 1);
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "nodes"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "objectAtIndexedSubscript:", objc_msgSend(*(id *)(a1 + 40), "nodeIndex")));

    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "nodes"));
    v9 = objc_msgSend(*(id *)(a1 + 40), "nodeIndex");
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "nodes"));
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "objectAtIndexedSubscript:", ((unint64_t)v9 + 2) % (unint64_t)objc_msgSend(v10, "count")));

    if (objc_msgSend(v7, "type") == (id)1)
    {
      objc_msgSend(v7, "nodePoint");
      objc_msgSend(v7, "setOutControlPoint:");
      objc_msgSend(v5, "nodePoint");
      objc_msgSend(v5, "setInControlPoint:");
    }
    if (objc_msgSend(v11, "type") == (id)1)
    {
      objc_msgSend(v5, "nodePoint");
      objc_msgSend(v5, "setOutControlPoint:");
      objc_msgSend(v11, "nodePoint");
      objc_msgSend(v11, "setInControlPoint:");
    }

  }
  else
  {
    v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](NSUserDefaults, "standardUserDefaults"));
    v13 = objc_msgSend(v12, "BOOLForKey:", CFSTR("TSDCreateBezierNodesByDefault"));

    if (v13)
      objc_msgSend(v5, "setType:", 2);
  }

}

void sub_10039DCAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_10039DD2C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10039DD5C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10039E17C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25)
{
  void *v25;
  void *v26;

  _Unwind_Resume(a1);
}

void sub_10039E264(uint64_t a1)
{
  void *v2;
  void *v3;
  double v4;
  double v5;
  CRLEditableBezierPathSourceMorphInfo *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "editablePathSource"));
  v11 = v2;
  if (*(_BYTE *)(a1 + 56))
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "lastNode"));
    objc_msgSend(v3, "setReflectedState:", 2);
    objc_msgSend(v3, "setType:", 1);
    v4 = *(double *)(a1 + 40);
    v5 = *(double *)(a1 + 48);
    objc_msgSend(v3, "setInControlPoint:", v4, v5);
    objc_msgSend(v3, "setOutControlPoint:", v4, v5);
    objc_msgSend(v3, "setNodePoint:", v4, v5);
  }
  else
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(+[CRLBezierNode bezierNodeWithPoint:](CRLBezierNode, "bezierNodeWithPoint:", *(double *)(a1 + 40), *(double *)(a1 + 48)));
    objc_msgSend(v3, "setReflectedState:", 2);
    objc_msgSend(v3, "setType:", 1);
    v6 = -[CRLEditableBezierPathSourceMorphInfo initWithEditableBezierPathSource:]([CRLEditableBezierPathSourceMorphInfo alloc], "initWithEditableBezierPathSource:", v11);
    if (*(_BYTE *)(a1 + 57))
    {
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "subpaths"));
      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "lastObject"));

      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "nodes"));
      v10 = objc_msgSend(v9, "mutableCopy");

      objc_msgSend(v10, "insertObject:atIndex:", v3, 0);
      objc_msgSend(v8, "setNodes:", v10);

    }
    else
    {
      objc_msgSend(v11, "addNode:", v3);
    }
    objc_msgSend(v11, "morphWithMorphInfo:", v6);

  }
}

void sub_10039E3E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

void sub_10039E458(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10039E488(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10039E610(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_10039E69C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10039EACC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_10039F1EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, void *a12)
{
  void *v12;
  void *v13;
  void *v14;

  _Unwind_Resume(a1);
}

void sub_10039FCF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  void *v20;
  void *v21;
  void *v22;
  void *v23;

  v23 = v22;

  _Unwind_Resume(a1);
}

void sub_1003A04D0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1003A0800(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1003A0A3C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1003A0A88(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003A0AB8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003A1070(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003A10A0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003A10D0(void *a1, void *a2, int a3, int a4, _DWORD *a5, void *a6)
{
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  unsigned int v16;
  int64_t v17;
  int *v18;
  unsigned int v19;
  _DWORD *v20;
  _QWORD *v21;

  v21 = a1;
  v11 = a2;
  v12 = a6;
  *a5 = a4;
  LODWORD(v13) = a3;
  if (a3 >= 1)
  {
    v20 = a5;
    v13 = a3;
    while (1)
    {
      v14 = v13 - 1;
      if (!sub_1003A16C4(v12, (v13 - 1), a4))
      {
        if (sub_1003A16C4(v11, (v13 - 1), a4) == 1)
          break;
        v15 = (int *)qword_101415748;
        v16 = sub_1003A19F4(v21, (v13 - 1), a4);
        if (!sub_1003A1978(v15, v16))
          break;
      }
      --v13;
      if ((unint64_t)(v14 + 1) <= 1)
      {
        LODWORD(v13) = 0;
        break;
      }
    }
    a5 = v20;
  }
  a5[1] = v13;
  if (v21[1] > a3 + 1)
  {
    v17 = a3 + 1;
    do
    {
      if (!sub_1003A16C4(v12, v17, a4))
      {
        if (sub_1003A16C4(v11, v17, a4) == 1)
          break;
        v18 = (int *)qword_101415748;
        v19 = sub_1003A19F4(v21, v17, a4);
        if (!sub_1003A1978(v18, v19))
          break;
      }
      ++v17;
      ++a3;
    }
    while (v21[1] > v17);
  }
  a5[2] = a3;

}

void sub_1003A1274(void *a1, int *a2)
{
  id v3;
  int64_t v4;
  os_log_t *v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  unsigned int v10;
  NSObject *v11;
  os_log_t *v12;
  os_log_t v13;
  void *v14;
  void *v15;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  char *v20;
  uint8_t buf[4];
  unsigned int v22;
  __int16 v23;
  const char *v24;
  __int16 v25;
  const char *v26;
  __int16 v27;
  int v28;
  __int16 v29;
  uint64_t v30;
  __int16 v31;
  uint64_t v32;
  __int16 v33;
  uint64_t v34;
  __int16 v35;
  uint64_t v36;

  v3 = a1;
  v4 = a2[1];
  if ((int)v4 <= a2[2])
  {
    v5 = (os_log_t *)&off_1013D9070;
    do
    {
      v6 = *a2;
      v7 = v3;
      v8 = v7;
      if (v4 < 0 || (v6 & 0x80000000) != 0 || v7[1] <= v4 || v7[2] <= v6)
      {
        v10 = +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
        if (qword_10147E370 != -1)
          dispatch_once(&qword_10147E370, &stru_1012579C8);
        v11 = *v5;
        if (os_log_type_enabled(*v5, OS_LOG_TYPE_ERROR))
        {
          v17 = v8[1];
          v18 = v8[2];
          *(_DWORD *)buf = 67110914;
          v22 = v10;
          v23 = 2082;
          v24 = "void setBit(CRLInstantAlphaBinaryBitmap * _Nonnull __strong, NSInteger, NSInteger, NSInteger)";
          v25 = 2082;
          v26 = "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLInstantAlphaBinaryBitmap.h";
          v27 = 1024;
          v28 = 67;
          v29 = 2048;
          v30 = v4;
          v31 = 2048;
          v32 = v6;
          v33 = 2048;
          v34 = v17;
          v35 = 2048;
          v36 = v18;
          _os_log_error_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d bad request for set bit value in IA: (%li, %li) for image of size (%li, %li)", buf, 0x4Au);
          if (qword_10147E370 != -1)
            dispatch_once(&qword_10147E370, &stru_1012579E8);
        }
        v12 = v5;
        v13 = *v5;
        if (os_log_type_enabled(*v5, OS_LOG_TYPE_ERROR))
        {
          v19 = v13;
          v20 = (char *)objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
          *(_DWORD *)buf = 67109378;
          v22 = v10;
          v23 = 2114;
          v24 = v20;
          _os_log_error_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: Assertion backtrace: >>%{public}@<<", buf, 0x12u);

        }
        v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "void setBit(CRLInstantAlphaBinaryBitmap * _Nonnull __strong, NSInteger, NSInteger, NSInteger)"));
        v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLInstantAlphaBinaryBitmap.h"));
        +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v14, v15, 67, 0, "bad request for set bit value in IA: (%li, %li) for image of size (%li, %li)", v4, v6, v8[1], v8[2]);

        v5 = v12;
      }
      else
      {
        v9 = v7[4] + v7[3] * v6;
        *(_BYTE *)(v9 + ((unint64_t)v4 >> 3)) |= 0x80u >> (v4 & 7);
      }

    }
    while (v4++ < a2[2]);
  }

}

uint64_t sub_1003A15F8(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t result;
  uint64_t *v8;
  uint64_t v9;

  v5 = *(uint64_t **)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  if (v4 - (uint64_t)v5 - 16 >= 589)
  {
    v6 = *v5;
    if (!v6)
    {
      result = (uint64_t)malloc_type_malloc(0x268uLL, 0x1020040F89E1A17uLL);
      v8 = *(uint64_t **)(a1 + 8);
      *v8 = result;
      if (!result)
        return result;
      *(_QWORD *)result = 0;
      v6 = *v8;
      *(_QWORD *)(*v8 + 8) = v8;
    }
    v4 = v6 + 16;
    *(_QWORD *)(a1 + 8) = v6;
    *(_QWORD *)(a1 + 16) = v6 + 16;
  }
  v9 = *a2;
  *(_DWORD *)(v4 + 8) = *((_DWORD *)a2 + 2);
  *(_QWORD *)v4 = v9;
  *(_QWORD *)(a1 + 16) += 12;
  return 1;
}

void sub_1003A168C(_QWORD **a1)
{
  _QWORD *v2;
  _QWORD *v3;

  v2 = *a1;
  if (v2)
  {
    do
    {
      v3 = (_QWORD *)*v2;
      free(v2);
      v2 = v3;
    }
    while (v3);
  }
  free(a1);
}

unint64_t sub_1003A16C4(void *a1, unint64_t a2, uint64_t a3)
{
  _QWORD *v5;
  _QWORD *v6;
  unint64_t v7;
  unsigned int v8;
  NSObject *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v14;
  uint64_t v15;
  uint8_t buf[4];
  unsigned int v17;
  __int16 v18;
  const char *v19;
  __int16 v20;
  const char *v21;
  __int16 v22;
  int v23;
  __int16 v24;
  unint64_t v25;
  __int16 v26;
  uint64_t v27;
  __int16 v28;
  uint64_t v29;
  __int16 v30;
  uint64_t v31;

  v5 = a1;
  v6 = v5;
  if ((a2 & 0x8000000000000000) != 0 || a3 < 0 || v5[1] <= (int64_t)a2 || v5[2] <= a3)
  {
    v8 = +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101257A08);
    v9 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
    {
      v14 = v6[1];
      v15 = v6[2];
      *(_DWORD *)buf = 67110914;
      v17 = v8;
      v18 = 2082;
      v19 = "NSInteger bitValue(CRLInstantAlphaBinaryBitmap * _Nonnull __strong, const NSInteger, const NSInteger)";
      v20 = 2082;
      v21 = "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLInstantAlphaBinaryBitmap.h";
      v22 = 1024;
      v23 = 52;
      v24 = 2048;
      v25 = a2;
      v26 = 2048;
      v27 = a3;
      v28 = 2048;
      v29 = v14;
      v30 = 2048;
      v31 = v15;
      _os_log_error_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d bad request for bit value in IA: (%li, %li) for image of size (%li, %li)", buf, 0x4Au);
    }
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101257A28);
    v10 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100DE87A4(v10);
    v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "NSInteger bitValue(CRLInstantAlphaBinaryBitmap * _Nonnull __strong, const NSInteger, const NSInteger)"));
    v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLInstantAlphaBinaryBitmap.h"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v11, v12, 52, 0, "bad request for bit value in IA: (%li, %li) for image of size (%li, %li)", a2, a3, v6[1], v6[2]);

    v7 = 0;
  }
  else
  {
    v7 = ((unint64_t)*(unsigned __int8 *)(v5[4] + v5[3] * a3 + (a2 >> 3)) << (a2 & 7)) & 0x80;
  }

  return v7;
}

BOOL sub_1003A1978(int *a1, unsigned int a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v2 = *a1;
  v3 = *((_QWORD *)a1 + 1);
  LODWORD(v4) = HIBYTE(a2) - HIBYTE(*a1);
  if ((int)v4 >= 0)
    v4 = v4;
  else
    v4 = HIBYTE(*a1) - HIBYTE(a2);
  if (v3 < v4)
    return 0;
  LODWORD(v5) = BYTE1(a2) - BYTE1(v2);
  v5 = (int)v5 >= 0 ? v5 : BYTE1(v2) - BYTE1(a2);
  if (v3 < v5)
    return 0;
  LODWORD(v6) = BYTE2(a2) - BYTE2(v2);
  v6 = (int)v6 >= 0 ? v6 : BYTE2(v2) - BYTE2(a2);
  if (v3 < v6)
    return 0;
  LODWORD(v8) = a2 - v2;
  if ((int)v8 >= 0)
    v8 = v8;
  else
    v8 = -(int)v8;
  return v3 >= v8;
}

uint64_t sub_1003A19F4(void *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  NSObject *v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v15;
  uint64_t v16;
  uint8_t buf[4];
  unsigned int v18;
  __int16 v19;
  const char *v20;
  __int16 v21;
  const char *v22;
  __int16 v23;
  int v24;
  __int16 v25;
  uint64_t v26;
  __int16 v27;
  uint64_t v28;
  __int16 v29;
  uint64_t v30;
  __int16 v31;
  uint64_t v32;

  v5 = a1;
  v6 = v5;
  if (a2 < 0 || a3 < 0 || (v7 = v5[1], v7 <= a2) || v5[2] <= a3)
  {
    v9 = +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101257A48);
    v10 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
    {
      v15 = v6[1];
      v16 = v6[2];
      *(_DWORD *)buf = 67110914;
      v18 = v9;
      v19 = 2082;
      v20 = "CRLInstantAlphaPixel getPixel(CRLInstantAlphaImage *__strong, NSInteger, NSInteger)";
      v21 = 2082;
      v22 = "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLInstantAlphaImage.h";
      v23 = 1024;
      v24 = 36;
      v25 = 2048;
      v26 = a2;
      v27 = 2048;
      v28 = a3;
      v29 = 2048;
      v30 = v15;
      v31 = 2048;
      v32 = v16;
      _os_log_error_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d bad request for get pixel in IA: (%li, %li) for image of size (%li, %li)", buf, 0x4Au);
    }
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101257A68);
    v11 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100DE87A4(v11);
    v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "CRLInstantAlphaPixel getPixel(CRLInstantAlphaImage *__strong, NSInteger, NSInteger)"));
    v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLInstantAlphaImage.h"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v12, v13, 36, 0, "bad request for get pixel in IA: (%li, %li) for image of size (%li, %li)", a2, a3, v6[1], v6[2]);

    v8 = 0;
  }
  else
  {
    v8 = *(unsigned int *)(v5[3] + 4 * (a2 + v7 * a3));
  }

  return v8;
}

void sub_1003A1C88(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003A1CB8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003A1CE8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003A1D18(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003A1D48(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003A1D78(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

BOOL sub_1003A20D8(uint64_t a1, void *a2)
{
  id v3;
  double v4;
  double v5;
  double v6;
  double v7;
  uint64_t v8;
  Class v9;
  _BOOL8 v10;

  v3 = a2;
  v10 = 0;
  if ((objc_msgSend(v3, "isHidden") & 1) == 0)
  {
    objc_msgSend(v3, "accessibilityFrame");
    v5 = v4;
    objc_msgSend(v3, "accessibilityFrame");
    if (v5 * v6 != 0.0)
    {
      objc_msgSend(v3, "alpha", v5 * v6);
      if (v7 != 0.0)
      {
        v8 = *(_QWORD *)(a1 + 32);
        v9 = NSClassFromString(CFSTR("_UIRemoteView"));
        if ((objc_opt_isKindOfClass(v8, v9) & 1) == 0)
          v10 = 1;
      }
    }
  }

  return v10;
}

id sub_1003A25E0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "crlaxInvalidateChildren");
}

void sub_1003A2EA4(uint64_t a1)
{
  UIAccessibilityNotifications v1;
  void *v2;
  id v3;

  v1 = UIAccessibilityLayoutChangedNotification;
  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "p_visibleCells"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "firstObject"));
  UIAccessibilityPostNotification(v1, v2);

}

void sub_1003A45F0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003A4620(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003A4980(uint64_t a1, double a2)
{
  int v3;
  NSObject *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint8_t buf[24];

  if (a2 <= 0.0)
  {
    v3 = +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101257AF0);
    v4 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E2AAD0(v3, v4, a2);
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101257B10);
    v5 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)v5, OS_LOG_TYPE_ERROR))
    {
      v6 = (void *)objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
      sub_100E02830(v6, buf, v3, (os_log_t)v5);
    }

    v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "void CRLPKInputSmoother::setSmoothingThresholdMultiplier(CGFloat)"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/PencilKit/CRLPKInputSmoother.mm"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v7, v8, 27, 0, "Unexpected multiplier value < 0 (%f).", *(_QWORD *)&a2);

  }
  else
  {
    *(double *)(a1 + 112) = a2;
  }
}

void sub_1003A4B20(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1003A4B48(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003A4B78(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

double sub_1003A4BA8(uint64_t a1, uint64_t a2, __n128 a3)
{
  unint64_t v3;
  uint64_t v6;
  double v7;
  double result;

  v3 = a3.n128_u64[0];
  v6 = *(_QWORD *)(a1 + 8);
  if (v6)
    (*(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)v6 + 16))(v6, a2, a3);
  *(_QWORD *)(a1 + 24) = v3;
  v7 = 8.0;
  if (a2 == 1)
    v7 = 6.0;
  result = *(double *)(a1 + 112) * v7;
  *(double *)(a1 + 104) = result;
  return result;
}

void sub_1003A4C10(uint64_t a1)
{
  _QWORD *v1;
  void **v3;
  char *v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double *v23;
  double *v24;
  double v25;
  double v26;
  double *v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  double *v31;
  double *v32;
  __int128 v33;
  __int128 v34;
  unint64_t v35;
  char *v36;
  char *v37;
  unint64_t v38;
  _OWORD *v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  char *v54;
  char *v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  _QWORD *v62;
  double v63;
  double *v64;
  double v65;
  double v66;
  unint64_t v67;
  _OWORD *v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  char *v76;
  char *v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  char *v81;
  char *v82;
  char *v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  double v87;
  double v88;
  double v89;
  double v90;
  double *v91;
  uint64_t v92;
  _OWORD *v93;
  unint64_t v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  _OWORD *v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t v101;
  unint64_t v102;
  char *v103;
  char *v104;
  char *v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  char *v109;
  char *v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  uint64_t *v114;
  unint64_t v115;
  double v116;
  void **v117;

  v1 = (_QWORD *)(a1 + 48);
  if (0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(_QWORD *)(a1 + 56) - *(_QWORD *)(a1 + 48)) >> 4) > *(_QWORD *)(a1 + 40))
  {
    v3 = (void **)(a1 + 120);
    sub_1003A5478(a1 + 120, 0);
    v114 = (uint64_t *)v3;
    sub_1003A54B4(v3, 8 * (0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(_QWORD *)(a1 + 56) - *(_QWORD *)(a1 + 48)) >> 4) - *(_QWORD *)(a1 + 40)));
    v5 = *(_QWORD *)(a1 + 40);
    if (v5 < 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(_QWORD *)(a1 + 56) - *(_QWORD *)(a1 + 48)) >> 4) - 1)
    {
      v6 = (_QWORD *)(a1 + 136);
      v116 = 1.0 / *(double *)(a1 + 24);
      do
      {
        v7 = 0;
        v8 = v5 + 1;
        do
        {
          v9 = sub_1002EA2D8(v1, v5, (double (*)(_QWORD, double))sub_1002EA020, (double)v7 * 0.125);
          v11 = v10;
          v12 = sub_1002EA2D8(v1, v5, (double (*)(_QWORD, double))sub_1002EA0A8, (double)v7 * 0.125);
          v14 = v13;
          v15 = sub_1002EA2D8(v1, v5, (double (*)(_QWORD, double))sub_1002EA170, (double)v7 * 0.125);
          v17 = v16;
          v18 = pow(v14 * v14 + v12 * v12, 1.5);
          if (v18 <= 0.001)
            v19 = 100.0;
          else
            v19 = fabs((v12 * v17 - v14 * v15) / v18);
          v20 = v19 * *(double *)(a1 + 24);
          v21 = 0.0;
          if (v20 >= 0.0)
            v22 = v20;
          else
            v22 = 0.0;
          v24 = *(double **)(a1 + 120);
          v23 = *(double **)(a1 + 128);
          if (v23 != v24)
            v21 = sub_10006108C(v9, v11, *(v23 - 6), *(v23 - 5));
          v25 = sub_10006191C(*(double *)(*v1 + 80 * v5), *(double *)(*v1 + 80 * v8), (double)v7 * 0.125);
          v26 = v116 * v21;
          if ((unint64_t)v23 >= *v6)
          {
            v28 = ((char *)v23 - (char *)v24) / 48;
            v29 = v28 + 1;
            if ((unint64_t)(v28 + 1) > 0x555555555555555)
              sub_100007810();
            if (0x5555555555555556 * ((uint64_t)(*v6 - (_QWORD)v24) >> 4) > v29)
              v29 = 0x5555555555555556 * ((uint64_t)(*v6 - (_QWORD)v24) >> 4);
            if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*v6 - (_QWORD)v24) >> 4) >= 0x2AAAAAAAAAAAAAALL)
              v30 = 0x555555555555555;
            else
              v30 = v29;
            if (v30)
            {
              v4 = (char *)sub_100121D50(a1 + 136, v30);
              v24 = *(double **)(a1 + 120);
              v23 = *(double **)(a1 + 128);
            }
            else
            {
              v4 = 0;
            }
            v31 = (double *)&v4[48 * v28];
            *v31 = v9;
            v31[1] = v11;
            v31[2] = v22;
            v31[3] = 0.0;
            v31[4] = v26;
            v31[5] = v25;
            v32 = v31;
            if (v23 != v24)
            {
              do
              {
                v33 = *((_OWORD *)v23 - 3);
                v34 = *((_OWORD *)v23 - 1);
                *((_OWORD *)v32 - 2) = *((_OWORD *)v23 - 2);
                *((_OWORD *)v32 - 1) = v34;
                *((_OWORD *)v32 - 3) = v33;
                v32 -= 6;
                v23 -= 6;
              }
              while (v23 != v24);
              v24 = (double *)*v114;
            }
            v27 = v31 + 6;
            *(_QWORD *)(a1 + 120) = v32;
            *(_QWORD *)(a1 + 128) = v31 + 6;
            *(_QWORD *)(a1 + 136) = &v4[48 * v30];
            if (v24)
              operator delete(v24);
          }
          else
          {
            *v23 = v9;
            v23[1] = v11;
            v23[2] = v22;
            v23[3] = 0.0;
            v27 = v23 + 6;
            v23[4] = v26;
            v23[5] = v25;
          }
          *(_QWORD *)(a1 + 128) = v27;
          ++v7;
        }
        while (v7 != 8);
        ++v5;
      }
      while (v8 < -1 - 0x3333333333333333 * ((uint64_t)(*(_QWORD *)(a1 + 56) - *(_QWORD *)(a1 + 48)) >> 4));
    }
    sub_1003A5590((uint64_t)v4, v114);
    v35 = *(_QWORD *)(a1 + 40);
    v117 = (void **)(a1 + 80);
    sub_10015639C(a1 + 80, *(_QWORD *)(a1 + 72));
    v36 = *(char **)(a1 + 80);
    v37 = *(char **)(a1 + 88);
    if (v37 == v36)
    {
      v38 = *(_QWORD *)(a1 + 96);
      v39 = *(_OWORD **)(a1 + 48);
      if ((unint64_t)v37 >= v38)
      {
        v43 = (v37 - v36) / 80;
        v44 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v38 - (_QWORD)v36) >> 4);
        v45 = 2 * v44;
        if (2 * v44 <= v43 + 1)
          v45 = v43 + 1;
        if (v44 >= 0x199999999999999)
          v46 = 0x333333333333333;
        else
          v46 = v45;
        v47 = (char *)sub_10015C128(a1 + 96, v46);
        v48 = &v47[80 * v43];
        v50 = &v47[80 * v49];
        *(_OWORD *)v48 = *v39;
        v51 = v39[1];
        v52 = v39[2];
        v53 = v39[4];
        *((_OWORD *)v48 + 3) = v39[3];
        *((_OWORD *)v48 + 4) = v53;
        *((_OWORD *)v48 + 1) = v51;
        *((_OWORD *)v48 + 2) = v52;
        v37 = v48 + 80;
        v55 = *(char **)(a1 + 80);
        v54 = *(char **)(a1 + 88);
        if (v54 != v55)
        {
          do
          {
            *((_OWORD *)v48 - 5) = *((_OWORD *)v54 - 5);
            v56 = *((_OWORD *)v54 - 4);
            v57 = *((_OWORD *)v54 - 3);
            v58 = *((_OWORD *)v54 - 1);
            *((_OWORD *)v48 - 2) = *((_OWORD *)v54 - 2);
            *((_OWORD *)v48 - 1) = v58;
            *((_OWORD *)v48 - 4) = v56;
            *((_OWORD *)v48 - 3) = v57;
            v48 -= 80;
            v54 -= 80;
          }
          while (v54 != v55);
          v54 = (char *)*v117;
        }
        *(_QWORD *)(a1 + 80) = v48;
        *(_QWORD *)(a1 + 88) = v37;
        *(_QWORD *)(a1 + 96) = v50;
        if (v54)
          operator delete(v54);
      }
      else
      {
        *(_OWORD *)v37 = *v39;
        v40 = v39[1];
        v41 = v39[2];
        v42 = v39[4];
        *((_OWORD *)v37 + 3) = v39[3];
        *((_OWORD *)v37 + 4) = v42;
        *((_OWORD *)v37 + 1) = v40;
        *((_OWORD *)v37 + 2) = v41;
        v37 += 80;
      }
      *(_QWORD *)(a1 + 88) = v37;
    }
    v59 = *(_QWORD *)(a1 + 120);
    v60 = *(_QWORD *)(a1 + 128) - v59;
    v115 = v35;
    if (!v60 || v60 == 48)
    {
      v67 = v35;
    }
    else
    {
      v61 = 0;
      v62 = (_QWORD *)(a1 + 96);
      v63 = 0.0;
      do
      {
        v64 = (double *)(v59 + 48 * v61);
        v65 = v64[10];
        v66 = (v64[11] - v64[5]) * 1000.0;
        if (v66 > 2.0)
          v66 = 2.0;
        if (v65 > v66)
          v66 = v64[10];
        v63 = v63 + v65 * 0.4 + (v64[3] + v64[9]) * 0.5 * v66;
        v67 = *(_QWORD *)(a1 + 40) + (v61 >> 3);
        if (v63 <= *(double *)(a1 + 104) || v35 >= v67)
        {
          v67 = v35;
        }
        else
        {
          v69 = (_OWORD *)(*v1 + 80 * v67);
          if ((unint64_t)v37 >= *v62)
          {
            v73 = 0xCCCCCCCCCCCCCCCDLL * ((v37 - (_BYTE *)*v117) >> 4);
            v74 = v73 + 1;
            if (v73 + 1 > 0x333333333333333)
              goto LABEL_109;
            if (0x999999999999999ALL * ((uint64_t)(*v62 - (_QWORD)*v117) >> 4) > v74)
              v74 = 0x999999999999999ALL * ((uint64_t)(*v62 - (_QWORD)*v117) >> 4);
            if (0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*v62 - (_QWORD)*v117) >> 4) >= 0x199999999999999)
              v75 = 0x333333333333333;
            else
              v75 = v74;
            if (v75)
              v76 = (char *)sub_10015C128(a1 + 96, v75);
            else
              v76 = 0;
            v77 = &v76[80 * v73];
            *(_OWORD *)v77 = *v69;
            v78 = v69[1];
            v79 = v69[2];
            v80 = v69[4];
            *((_OWORD *)v77 + 3) = v69[3];
            *((_OWORD *)v77 + 4) = v80;
            *((_OWORD *)v77 + 1) = v78;
            *((_OWORD *)v77 + 2) = v79;
            v82 = *(char **)(a1 + 80);
            v81 = *(char **)(a1 + 88);
            v83 = v77;
            if (v81 != v82)
            {
              do
              {
                *((_OWORD *)v83 - 5) = *((_OWORD *)v81 - 5);
                v84 = *((_OWORD *)v81 - 4);
                v85 = *((_OWORD *)v81 - 3);
                v86 = *((_OWORD *)v81 - 1);
                *((_OWORD *)v83 - 2) = *((_OWORD *)v81 - 2);
                *((_OWORD *)v83 - 1) = v86;
                *((_OWORD *)v83 - 4) = v84;
                *((_OWORD *)v83 - 3) = v85;
                v83 -= 80;
                v81 -= 80;
              }
              while (v81 != v82);
              v81 = (char *)*v117;
            }
            v37 = v77 + 80;
            *(_QWORD *)(a1 + 80) = v83;
            *(_QWORD *)(a1 + 88) = v77 + 80;
            *(_QWORD *)(a1 + 96) = &v76[80 * v75];
            if (v81)
              operator delete(v81);
          }
          else
          {
            *(_OWORD *)v37 = *v69;
            v70 = v69[1];
            v71 = v69[2];
            v72 = v69[4];
            *((_OWORD *)v37 + 3) = v69[3];
            *((_OWORD *)v37 + 4) = v72;
            *((_OWORD *)v37 + 1) = v70;
            *((_OWORD *)v37 + 2) = v71;
            v37 += 80;
          }
          *(_QWORD *)(a1 + 88) = v37;
          v87 = *((double *)v37 - 1);
          v89 = *((double *)v37 - 6);
          v88 = *((double *)v37 - 5);
          v90 = *((double *)v37 - 7);
          v91 = (double *)(*(_QWORD *)(a1 + 48) + 80 * v35 + 40);
          do
          {
            if (v90 <= *(v91 - 2))
              v90 = *(v91 - 2);
            *((double *)v37 - 7) = v90;
            if (v87 <= v91[4])
              v87 = v91[4];
            *((double *)v37 - 1) = v87;
            if (v88 <= *v91)
              v88 = *v91;
            *((double *)v37 - 5) = v88;
            if (v89 <= *(v91 - 1))
              v89 = *(v91 - 1);
            *((double *)v37 - 6) = v89;
            ++v35;
            v91 += 10;
          }
          while (v35 < v67);
          v63 = 0.0;
          if (v67 < *(_QWORD *)(a1 + 32))
          {
            *(_QWORD *)(a1 + 72) = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)&v37[-*(_QWORD *)(a1 + 80)] >> 4);
            v115 = v67;
          }
        }
        ++v61;
        v59 = *(_QWORD *)(a1 + 120);
        v35 = v67;
      }
      while (v61 < -1 - 0x5555555555555555 * ((*(_QWORD *)(a1 + 128) - v59) >> 4));
    }
    *(_QWORD *)(a1 + 40) = v115;
    v92 = *(_QWORD *)(a1 + 56);
    if (v67 + 1 < 0xCCCCCCCCCCCCCCCDLL * ((v92 - *(_QWORD *)(a1 + 48)) >> 4))
    {
      v93 = (_OWORD *)(v92 - 80);
      v94 = *(_QWORD *)(a1 + 96);
      if ((unint64_t)v37 >= v94)
      {
        v99 = 0xCCCCCCCCCCCCCCCDLL * ((v37 - (_BYTE *)*v117) >> 4);
        if (v99 + 1 > 0x333333333333333)
LABEL_109:
          sub_100007810();
        v100 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v94 - (_QWORD)*v117) >> 4);
        v101 = 2 * v100;
        if (2 * v100 <= v99 + 1)
          v101 = v99 + 1;
        if (v100 >= 0x199999999999999)
          v102 = 0x333333333333333;
        else
          v102 = v101;
        if (v102)
          v103 = (char *)sub_10015C128(a1 + 96, v102);
        else
          v103 = 0;
        v104 = &v103[80 * v99];
        v105 = &v103[80 * v102];
        *(_OWORD *)v104 = *v93;
        v106 = v93[1];
        v107 = v93[2];
        v108 = v93[4];
        *((_OWORD *)v104 + 3) = v93[3];
        *((_OWORD *)v104 + 4) = v108;
        *((_OWORD *)v104 + 1) = v106;
        *((_OWORD *)v104 + 2) = v107;
        v98 = v104 + 80;
        v110 = *(char **)(a1 + 80);
        v109 = *(char **)(a1 + 88);
        if (v109 != v110)
        {
          do
          {
            *((_OWORD *)v104 - 5) = *((_OWORD *)v109 - 5);
            v111 = *((_OWORD *)v109 - 4);
            v112 = *((_OWORD *)v109 - 3);
            v113 = *((_OWORD *)v109 - 1);
            *((_OWORD *)v104 - 2) = *((_OWORD *)v109 - 2);
            *((_OWORD *)v104 - 1) = v113;
            *((_OWORD *)v104 - 4) = v111;
            *((_OWORD *)v104 - 3) = v112;
            v104 -= 80;
            v109 -= 80;
          }
          while (v109 != v110);
          v109 = (char *)*v117;
        }
        *(_QWORD *)(a1 + 80) = v104;
        *(_QWORD *)(a1 + 88) = v98;
        *(_QWORD *)(a1 + 96) = v105;
        if (v109)
          operator delete(v109);
      }
      else
      {
        *(_OWORD *)v37 = *v93;
        v95 = *(_OWORD *)(v92 - 64);
        v96 = *(_OWORD *)(v92 - 48);
        v97 = *(_OWORD *)(v92 - 16);
        *((_OWORD *)v37 + 3) = *(_OWORD *)(v92 - 32);
        *((_OWORD *)v37 + 4) = v97;
        *((_OWORD *)v37 + 1) = v95;
        *((_OWORD *)v37 + 2) = v96;
        v98 = v37 + 80;
      }
      *(_QWORD *)(a1 + 88) = v98;
    }
  }
}

void sub_1003A5478(uint64_t a1, unint64_t a2)
{
  unint64_t v2;
  BOOL v3;
  unint64_t v4;

  v2 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 8) - *(_QWORD *)a1) >> 4);
  v3 = a2 >= v2;
  v4 = a2 - v2;
  if (v4 != 0 && v3)
  {
    sub_1003A5828((void **)a1, v4);
  }
  else if (!v3)
  {
    *(_QWORD *)(a1 + 8) = *(_QWORD *)a1 + 48 * a2;
  }
}

void sub_1003A54B4(void **a1, unint64_t a2)
{
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  __int128 v13;
  __int128 v14;

  v4 = a1[2];
  v3 = (uint64_t)(a1 + 2);
  if (0xAAAAAAAAAAAAAAABLL * ((v4 - (_BYTE *)*a1) >> 4) < a2)
  {
    if (a2 >= 0x555555555555556)
      sub_100007810();
    v5 = ((_BYTE *)a1[1] - (_BYTE *)*a1) / 48;
    v6 = (char *)sub_100121D50(v3, a2);
    v7 = &v6[48 * v5];
    v9 = &v6[48 * v8];
    v11 = (char *)*a1;
    v10 = (char *)a1[1];
    v12 = v7;
    if (v10 != *a1)
    {
      do
      {
        v13 = *((_OWORD *)v10 - 3);
        v14 = *((_OWORD *)v10 - 1);
        *((_OWORD *)v12 - 2) = *((_OWORD *)v10 - 2);
        *((_OWORD *)v12 - 1) = v14;
        *((_OWORD *)v12 - 3) = v13;
        v12 -= 48;
        v10 -= 48;
      }
      while (v10 != v11);
      v10 = (char *)*a1;
    }
    *a1 = v12;
    a1[1] = v7;
    a1[2] = v9;
    if (v10)
      operator delete(v10);
  }
}

void sub_1003A5590(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double *v10;
  double v11;
  unint64_t v12;
  double v13;
  unint64_t v14;
  double *v15;
  double v16;
  double v17;
  double v18;
  double *v19;
  double v20;
  double v21;

  v2 = *a2;
  v3 = a2[1] - *a2;
  if (v3)
  {
    v4 = 0;
    v5 = v3 / 48;
    v6 = v3 / 48 != 0;
    v7 = v3 / 48 - 1;
    if (v7 == 0 || !v6)
      v5 = 1;
    v8 = v2 + 80;
    do
    {
      v9 = v4 - 1;
      if (!v4)
        v9 = 0;
      if (v9 >= 1)
      {
        v10 = (double *)(v8 - 48 * (v4 != 0));
        v11 = 0.0;
        do
        {
          v12 = v9--;
          if (v12 < 2)
            break;
          v13 = *v10;
          v10 -= 6;
          v11 = v11 + v13;
        }
        while (v11 < 0.85);
      }
      if (v4 < v7)
        v14 = v4 + 1;
      else
        v14 = v7;
      if (v14 < v7)
      {
        v15 = (double *)(v2 + 32 + 48 * v14);
        v16 = 0.0;
        do
        {
          if (++v14 >= v7)
            break;
          v17 = *v15;
          v15 += 6;
          v16 = v16 + v17;
        }
        while (v16 < 0.85);
      }
      v18 = 0.0;
      if (v9 <= v14)
      {
        v19 = (double *)(v2 + 16 + 48 * v9);
        do
        {
          v20 = *v19;
          v19 += 6;
          v21 = v20;
          if (v18 <= v20)
            v18 = v21;
          ++v9;
        }
        while (v9 <= v14);
      }
      *(double *)(v2 + 48 * v4 + 24) = v18;
      v8 += 48;
      ++v4;
    }
    while (v4 != v5);
  }
}

uint64_t sub_1003A5694(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;

  *(_QWORD *)a1 = off_101257B40;
  objc_destroyWeak((id *)(a1 + 144));
  v2 = *(void **)(a1 + 120);
  if (v2)
  {
    *(_QWORD *)(a1 + 128) = v2;
    operator delete(v2);
  }
  *(_QWORD *)a1 = off_10124BF48;
  v3 = *(void **)(a1 + 80);
  if (v3)
  {
    *(_QWORD *)(a1 + 88) = v3;
    operator delete(v3);
  }
  *(_QWORD *)a1 = off_10124BFB0;
  v4 = *(void **)(a1 + 48);
  if (v4)
  {
    *(_QWORD *)(a1 + 56) = v4;
    operator delete(v4);
  }
  return a1;
}

void sub_1003A570C(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;

  *(_QWORD *)a1 = off_101257B40;
  objc_destroyWeak((id *)(a1 + 144));
  v2 = *(void **)(a1 + 120);
  if (v2)
  {
    *(_QWORD *)(a1 + 128) = v2;
    operator delete(v2);
  }
  *(_QWORD *)a1 = off_10124BF48;
  v3 = *(void **)(a1 + 80);
  if (v3)
  {
    *(_QWORD *)(a1 + 88) = v3;
    operator delete(v3);
  }
  *(_QWORD *)a1 = off_10124BFB0;
  v4 = *(void **)(a1 + 48);
  if (v4)
  {
    *(_QWORD *)(a1 + 56) = v4;
    operator delete(v4);
  }
  operator delete();
}

uint64_t sub_1003A5794(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id WeakRetained;
  unsigned int v7;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 144));
  v7 = objc_msgSend(WeakRetained, "isSnappedToRuler");

  if (v7)
    return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(**(_QWORD **)(a1 + 8) + 40))(*(_QWORD *)(a1 + 8), a2, a3);
  else
    return sub_1002AA3D4((_QWORD *)a1, a2, a3);
}

void sub_1003A5818(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1003A5828(void **a1, unint64_t a2)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  char *v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char *v12;
  size_t v13;
  char *v14;
  char *v15;
  size_t v16;
  char *v17;
  char *v18;
  char *v19;
  __int128 v20;
  __int128 v21;

  v6 = a1[2];
  v4 = (uint64_t)(a1 + 2);
  v5 = v6;
  v7 = *(char **)(v4 - 8);
  if (0xAAAAAAAAAAAAAAABLL * ((v6 - v7) >> 4) >= a2)
  {
    if (a2)
    {
      v13 = 48 * ((48 * a2 - 48) / 0x30) + 48;
      bzero(*(void **)(v4 - 8), v13);
      v7 += v13;
    }
    a1[1] = v7;
  }
  else
  {
    v8 = 0xAAAAAAAAAAAAAAABLL * ((v7 - (_BYTE *)*a1) >> 4);
    v9 = v8 + a2;
    if (v8 + a2 > 0x555555555555555)
      sub_100007810();
    v10 = 0xAAAAAAAAAAAAAAABLL * ((v5 - (_BYTE *)*a1) >> 4);
    if (2 * v10 > v9)
      v9 = 2 * v10;
    if (v10 >= 0x2AAAAAAAAAAAAAALL)
      v11 = 0x555555555555555;
    else
      v11 = v9;
    if (v11)
      v12 = (char *)sub_100121D50(v4, v11);
    else
      v12 = 0;
    v14 = &v12[48 * v8];
    v15 = &v12[48 * v11];
    v16 = 48 * ((48 * a2 - 48) / 0x30) + 48;
    bzero(v14, v16);
    v17 = &v14[v16];
    v19 = (char *)*a1;
    v18 = (char *)a1[1];
    if (v18 != *a1)
    {
      do
      {
        v20 = *((_OWORD *)v18 - 3);
        v21 = *((_OWORD *)v18 - 1);
        *((_OWORD *)v14 - 2) = *((_OWORD *)v18 - 2);
        *((_OWORD *)v14 - 1) = v21;
        *((_OWORD *)v14 - 3) = v20;
        v14 -= 48;
        v18 -= 48;
      }
      while (v18 != v19);
      v18 = (char *)*a1;
    }
    *a1 = v14;
    a1[1] = v17;
    a1[2] = v15;
    if (v18)
      operator delete(v18);
  }
}

void sub_1003A5C88(id a1)
{
  CRLPKImageRendererPool *v1;
  void *v2;

  v1 = objc_alloc_init(CRLPKImageRendererPool);
  v2 = (void *)qword_101415758;
  qword_101415758 = (uint64_t)v1;

}

id sub_1003A5D08(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_flushUnlockedRenderersLeavingMaxCount:", 0);
}

void sub_1003A5F9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1003A5FFC(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1003A600C(uint64_t a1)
{

}

void sub_1003A6014(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003A6044(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

id sub_1003A6074(uint64_t a1)
{
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  void *i;
  void *v7;
  CRLPKImageRendererContainer *v8;
  uint64_t v9;
  void *v10;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  CKRecordID v22;
  Swift::String v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _BYTE v28[128];

  v24 = 0u;
  v25 = 0u;
  v26 = 0u;
  v27 = 0u;
  v2 = *(id *)(*(_QWORD *)(a1 + 32) + 8);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v24, v28, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v25;
    while (2)
    {
      for (i = 0; i != v4; i = (char *)i + 1)
      {
        if (*(_QWORD *)v25 != v5)
          objc_enumerationMutation(v2);
        v7 = *(void **)(*((_QWORD *)&v24 + 1) + 8 * (_QWORD)i);
        if (objc_msgSend(v7, "isCandidateForSize:sixChannelBlending:", *(unsigned __int8 *)(a1 + 64), *(double *)(a1 + 48), *(double *)(a1 + 56))&& objc_msgSend(v7, "tryLockingRenderer"))
        {
          objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), v7);
          goto LABEL_12;
        }
      }
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v24, v28, 16);
      if (v4)
        continue;
      break;
    }
  }
LABEL_12:

  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40))
  {
    v8 = -[CRLPKImageRendererContainer initWithSize:sixChannelBlending:]([CRLPKImageRendererContainer alloc], "initWithSize:sixChannelBlending:", *(unsigned __int8 *)(a1 + 64), *(double *)(a1 + 48), *(double *)(a1 + 56));
    v9 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
    v10 = *(void **)(v9 + 40);
    *(_QWORD *)(v9 + 40) = v8;

    if ((objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), "tryLockingRenderer") & 1) == 0)
    {
      +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101257C10);
      if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
        sub_100E2AC04();
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101257C30);
      v12 = off_1013D9070;
      if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
        sub_100DE7468(v12);
      sub_1001BC7E8((uint64_t)"Fatal Assertion failure: %{public}s %{public}s:%d Should be able to lock new renderer.", v13, v14, v15, v16, v17, v18, v19, (uint64_t)"-[CRLPKImageRendererPool provideImageRendererOfMinimumSize:sixChannelBlending:inBlock:]_block_invoke");
      v20 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLPKImageRendererPool provideImageRendererOfMinimumSize:sixChannelBlending:inBlock:]_block_invoke"));
      v21 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLPencilKitRenderer.m"));
      +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v20, v21, 211, 1, "Should be able to lock new renderer.");

      SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v22, v23);
      abort();
    }
    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "addObject:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40));
  }
  return objc_msgSend(*(id *)(a1 + 32), "p_flushUnlockedRenderersLeavingMaxCount:", 10);
}

void sub_1003A6340(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003A6370(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003A68D8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003A6908(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003A6938(uint64_t a1, void *a2)
{
  id v3;
  CGContext *v4;
  dispatch_semaphore_t v5;
  void *v6;
  double v7;
  NSObject *v8;
  dispatch_semaphore_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  NSObject *v17;
  dispatch_semaphore_t v18;
  void *v19;
  double v20;
  NSObject *v21;
  CGContext *v22;
  uint64_t *v23;
  _QWORD v24[4];
  NSObject *v25;
  uint64_t *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[4];
  dispatch_semaphore_t v33;
  _QWORD v34[4];
  NSObject *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  CGAffineTransform transform;

  v3 = a2;
  CGContextSaveGState(*(CGContextRef *)(a1 + 40));
  v4 = *(CGContext **)(a1 + 40);
  sub_10007942C(0, 1, (uint64_t)&transform, *(CGFloat *)(a1 + 48), *(CGFloat *)(a1 + 56), *(CGFloat *)(a1 + 64), *(CGFloat *)(a1 + 72));
  CGContextConcatCTM(v4, &transform);
  if (*(_BYTE *)(a1 + 88))
  {
    v37 = 0;
    v38 = &v37;
    v39 = 0x2020000000;
    v40 = 0;
    v5 = dispatch_semaphore_create(0);
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "strokes"));
    v7 = *(double *)(a1 + 80);
    v34[0] = _NSConcreteStackBlock;
    v34[1] = 3221225472;
    v34[2] = sub_1003A6CD0;
    v34[3] = &unk_101257D00;
    v36 = &v37;
    v8 = v5;
    v35 = v8;
    objc_msgSend(v3, "renderCGStrokes:clippedToStrokeSpaceRect:scale:completion:", v6, v34, *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72), v7);

    dispatch_semaphore_wait(v8, 0xFFFFFFFFFFFFFFFFLL);
    CGContextDrawImage(*(CGContextRef *)(a1 + 40), *(CGRect *)(a1 + 48), (CGImageRef)v38[3]);
    CGImageRelease((CGImageRef)v38[3]);

  }
  else
  {
    if (*(_BYTE *)(a1 + 89))
    {
      v9 = dispatch_semaphore_create(0);
      v10 = *(_QWORD *)(a1 + 32);
      v11 = *(_QWORD *)(a1 + 40);
      v13 = *(double *)(a1 + 72);
      v12 = *(double *)(a1 + 80);
      v32[0] = _NSConcreteStackBlock;
      v32[1] = 3221225472;
      v32[2] = sub_1003A6E90;
      v32[3] = &unk_10122D110;
      v33 = v9;
      v14 = *(double *)(a1 + 48);
      v15 = *(double *)(a1 + 56);
      v16 = *(double *)(a1 + 64);
      v17 = v9;
      objc_msgSend(v3, "sixChannelPDFRenderDrawing:context:clippedToStrokeSpaceRect:scale:completion:", v10, v11, v32, v14, v15, v16, v13, v12);
      dispatch_semaphore_wait(v17, 0xFFFFFFFFFFFFFFFFLL);

      goto LABEL_6;
    }
    v37 = 0;
    v38 = &v37;
    v39 = 0x2020000000;
    v40 = 0;
    v28 = 0;
    v29 = &v28;
    v30 = 0x2020000000;
    v31 = 0;
    v18 = dispatch_semaphore_create(0);
    v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "strokes"));
    v20 = *(double *)(a1 + 80);
    v24[0] = _NSConcreteStackBlock;
    v24[1] = 3221225472;
    v24[2] = sub_1003A6E98;
    v24[3] = &unk_101257DA8;
    v26 = &v37;
    v27 = &v28;
    v21 = v18;
    v25 = v21;
    objc_msgSend(v3, "sixChannelCGRenderStrokes:clippedToStrokeSpaceRect:scale:completion:", v19, v24, *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72), v20);

    dispatch_semaphore_wait(v21, 0xFFFFFFFFFFFFFFFFLL);
    if (*(_BYTE *)(a1 + 90))
    {
      CGContextSetBlendMode(*(CGContextRef *)(a1 + 40), kCGBlendModeMultiply);
      v22 = *(CGContext **)(a1 + 40);
      v23 = v38;
    }
    else
    {
      v22 = *(CGContext **)(a1 + 40);
      if (!*(_BYTE *)(a1 + 91))
      {
        CGContextSetBlendMode(v22, kCGBlendModeMultiply);
        CGContextDrawImage(*(CGContextRef *)(a1 + 40), *(CGRect *)(a1 + 48), (CGImageRef)v38[3]);
        CGContextSetBlendMode(*(CGContextRef *)(a1 + 40), kCGBlendModePlusLighter);
        v22 = *(CGContext **)(a1 + 40);
      }
      v23 = v29;
    }
    CGContextDrawImage(v22, *(CGRect *)(a1 + 48), (CGImageRef)v23[3]);
    CGImageRelease((CGImageRef)v38[3]);
    CGImageRelease((CGImageRef)v29[3]);

    _Block_object_dispose(&v28, 8);
  }
  _Block_object_dispose(&v37, 8);
LABEL_6:
  CGContextRestoreGState(*(CGContextRef *)(a1 + 40));

}

void sub_1003A6CA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  _Block_object_dispose(&a16, 8);
  _Block_object_dispose(&a31, 8);
  _Unwind_Resume(a1);
}

intptr_t sub_1003A6CD0(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;

  if (!a2)
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101257CB8);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E2AD04();
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101257CD8);
    v4 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100DE7468(v4);
    v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "+[CRLPencilKitRenderer drawStrokes:inContext:overTransparentCanvas:]_block_invoke"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLPencilKitRenderer.m"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v5, v6, 382, 0, "renderedCGImage shouldn't be NULL");

  }
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = a2;
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_1003A6E30(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003A6E60(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

intptr_t sub_1003A6E90(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

intptr_t sub_1003A6E98(uint64_t a1, CGImage *a2, CGImageRef image)
{
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;

  if (image)
  {
    if (a2)
      goto LABEL_22;
    goto LABEL_13;
  }
  +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
  if (qword_10147E370 != -1)
    dispatch_once(&qword_10147E370, &stru_101257D20);
  if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
    sub_100E2AE04();
  if (qword_10147E370 != -1)
    dispatch_once(&qword_10147E370, &stru_101257D40);
  v6 = off_1013D9070;
  if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
    sub_100DE7468(v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "+[CRLPencilKitRenderer drawStrokes:inContext:overTransparentCanvas:]_block_invoke"));
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLPencilKitRenderer.m"));
  +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v7, v8, 412, 0, "completionMultiplyImage shouldn't be NULL");

  if (!a2)
  {
LABEL_13:
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101257D60);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E2AD84();
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101257D80);
    v9 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100DE7468(v9);
    v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "+[CRLPencilKitRenderer drawStrokes:inContext:overTransparentCanvas:]_block_invoke"));
    v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLPencilKitRenderer.m"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v10, v11, 413, 0, "completionAddImage shouldn't be NULL");

  }
LABEL_22:
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = CGImageRetain(image);
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = CGImageRetain(a2);
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_1003A7134(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003A7164(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003A7194(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003A71C4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

uint64_t sub_1003A72E8(const unsigned __int8 *a1, const unsigned __int8 *a2)
{
  int v2;

  v2 = uuid_compare(a1, a2);
  if (v2 < 0)
    return -1;
  else
    return v2 != 0;
}

void sub_1003A77EC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1003A7864(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1003A78F4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1003A7938(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1003A7B14()
{
  qword_101415788 = 3;
}

id sub_1003A7B24()
{
  void *v0;
  id v1;

  qword_101415788 = 3;
  v0 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)qword_101415778, "objectAtIndex:", qword_101415780));
  v1 = objc_msgSend(v0, "copyWithZone:", 0);

  return v1;
}

id sub_1003A7B78()
{
  uint64_t v0;

  if (qword_101415788 == 3)
  {
    v0 = qword_101415780--;
    if (v0 <= 0)
      qword_101415780 = qword_1013DC0D8 - 1;
    qword_101415788 = 3;
  }
  return sub_1003A7B24();
}

uint64_t sub_1003A8E40(uint64_t a1)
{
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSLocale localeWithLocaleIdentifier:](NSLocale, "localeWithLocaleIdentifier:", a1));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "objectForKey:", NSLocaleExemplarCharacterSet));
  v3 = v2;
  if (v2)
    v4 = objc_msgSend(v2, "characterIsMember:", 97) ^ 1;
  else
    v4 = 0;

  return v4;
}

id sub_1003A8EB8(void *a1, void *a2)
{
  __CFString *v3;
  id v4;
  __CFString *v5;
  __CFString *v6;
  id v7;
  void **v9;
  uint64_t v10;
  id (*v11)(uint64_t, uint64_t);
  void *v12;
  __CFString *v13;
  _QWORD v14[4];
  __CFString *v15;

  v3 = a1;
  v4 = a2;
  if (-[__CFString isEqualToString:](v3, "isEqualToString:", CFSTR("es-419")))
  {

    v3 = CFSTR("es");
  }
  if (v4)
  {
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472;
    v14[2] = sub_1003A9000;
    v14[3] = &unk_101257E08;
    v5 = v3;
    v15 = v5;
    if (objc_msgSend(v4, "indexOfObjectPassingTest:", v14) == (id)0x7FFFFFFFFFFFFFFFLL)
    {
      v9 = _NSConcreteStackBlock;
      v10 = 3221225472;
      v11 = sub_1003A900C;
      v12 = &unk_101257E08;
      v6 = v5;
      v13 = v6;
      v7 = objc_msgSend(v4, "indexOfObjectPassingTest:", &v9);
      if (v7 == (id)0x7FFFFFFFFFFFFFFFLL)
        objc_msgSend(v4, "addObject:", v6, v9, v10, v11, v12);
      else
        objc_msgSend(v4, "replaceObjectAtIndex:withObject:", v7, v6, v9, v10, v11, v12);

    }
  }
  else
  {
    v4 = (id)objc_claimAutoreleasedReturnValue(+[NSMutableArray arrayWithObject:](NSMutableArray, "arrayWithObject:", v3));
  }

  return v4;
}

id sub_1003A9000(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "hasPrefix:", *(_QWORD *)(a1 + 32));
}

id sub_1003A900C(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "hasPrefix:", a2);
}

id sub_1003A9018(void *a1)
{
  unsigned int (**v1)(id, void *);
  void *v2;
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  void *i;
  void *v8;
  id v9;
  uint64_t v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];

  v1 = a1;
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSLocale preferredLanguages](NSLocale, "preferredLanguages"));
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
  if (v3)
  {
    v4 = v3;
    v5 = 0;
    v6 = *(_QWORD *)v13;
    do
    {
      for (i = 0; i != v4; i = (char *)i + 1)
      {
        if (*(_QWORD *)v13 != v6)
          objc_enumerationMutation(v2);
        v8 = *(void **)(*((_QWORD *)&v12 + 1) + 8 * (_QWORD)i);
        if (v1[2](v1, v8))
        {
          v9 = sub_1003A8EB8(v8, v5);
          v10 = objc_claimAutoreleasedReturnValue(v9);

          v5 = (void *)v10;
        }
      }
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
    }
    while (v4);
  }
  else
  {
    v5 = 0;
  }

  return v5;
}

BOOL sub_1003A9158(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  _BOOL8 v4;

  v1 = sub_1003A9018(a1);
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = v2;
  if (v2)
    v4 = objc_msgSend(v2, "count") != 0;
  else
    v4 = 0;

  return v4;
}

BOOL sub_1003A91A0()
{
  return sub_1003A9158(&stru_101257E28);
}

BOOL sub_1003A91AC(id a1, NSString *a2)
{
  return sub_1003A8E40((uint64_t)a2);
}

BOOL sub_1003A91B4()
{
  void *v0;
  _BOOL8 v1;

  v0 = (void *)objc_claimAutoreleasedReturnValue(+[UIApplication sharedApplication](UIApplication, "sharedApplication"));
  v1 = objc_msgSend(v0, "userInterfaceLayoutDirection") == (id)1;

  return v1;
}

uint64_t sub_1003A91F4()
{
  if (qword_101415798 != -1)
    dispatch_once(&qword_101415798, &stru_101257E48);
  return byte_101415790;
}

void sub_1003A9234(id a1)
{
  byte_101415790 = sub_1003A91B4();
}

BOOL sub_1003A9250()
{
  if (qword_101415798 != -1)
    dispatch_once(&qword_101415798, &stru_101257E48);
  return byte_101415790 == 0;
}

id sub_1003A95F0(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "setAlpha:", 1.0);
}

id sub_1003A96AC(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "setAlpha:", 0.0);
}

void sub_1003A9D10(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  void *v4;
  void *v5;
  _QWORD v6[5];

  objc_msgSend(*(id *)(a1 + 32), "updateMessageLabelWithProgress:", *(_QWORD *)(a1 + 40));
  if (objc_msgSend(*(id *)(a1 + 40), "isCancelled"))
  {
    v2 = *(_QWORD *)(a1 + 32);
    if (!*(_BYTE *)(v2 + 17))
    {
      v6[0] = _NSConcreteStackBlock;
      v6[1] = 3221225472;
      v6[2] = sub_1003A9DF8;
      v6[3] = &unk_10122D110;
      v6[4] = v2;
      v3 = objc_retainBlock(v6);
      *(_BYTE *)(*(_QWORD *)(a1 + 32) + 17) = 1;
      objc_msgSend(*(id *)(a1 + 32), "setCancelButtonEnabled:", 0);
      v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "delegate"));
      v5 = v4;
      if (v4)
        objc_msgSend(v4, "determinateProgressViewControllerDidRequestToCancel:completionHandler:", *(_QWORD *)(a1 + 32), v3);
      else
        ((void (*)(_QWORD *))v3[2])(v3);

    }
  }
}

id sub_1003A9DF8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "runCancellationHandlers");
}

id sub_1003A9E00(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "updateProgressViewDisplayWithProgress:", *(_QWORD *)(a1 + 40));
}

void sub_1003AA604(uint64_t a1)
{
  void (**v1)(void);

  v1 = (void (**)(void))objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "second"));
  v1[2]();

}

void sub_1003AA718(uint64_t a1)
{
  _QWORD *v2;
  void *v3;
  void *v4;
  _QWORD v5[5];
  id v6;
  id v7;

  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_1003AA7F0;
  v5[3] = &unk_101257E70;
  v5[4] = *(_QWORD *)(a1 + 32);
  v7 = *(id *)(a1 + 48);
  v6 = *(id *)(a1 + 40);
  v2 = objc_retainBlock(v5);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "delegate"));
  v4 = v3;
  if (v3)
    objc_msgSend(v3, "showCancelConfirmationAlertIfNeededForDeterminateProgressViewController:animated:completionHandler:", *(_QWORD *)(a1 + 32), *(unsigned __int8 *)(a1 + 56), v2);
  else
    ((void (*)(_QWORD *, uint64_t))v2[2])(v2, 1);

}

void sub_1003AA7F0(_QWORD *a1, int a2)
{
  id *v3;
  void (**v4)(void);
  NSObject *v5;
  void (**v6)(void);
  NSObject *v7;
  void *v8;
  id v9;
  uint64_t v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  void *v16;
  _QWORD v17[4];
  void (**v18)(void);
  _QWORD block[4];
  void (**v20)(void);

  if (!a2)
  {
    v4 = (void (**)(void))a1[6];
    if (!v4)
      return;
    v7 = a1[5];
    if (v7)
    {
      v17[0] = _NSConcreteStackBlock;
      v17[1] = 3221225472;
      v17[2] = sub_1003AA9D8;
      v17[3] = &unk_10122D7E0;
      v18 = v4;
      dispatch_async(v7, v17);
      v6 = v18;
      goto LABEL_11;
    }
LABEL_13:
    v4[2]();
    return;
  }
  v3 = (id *)a1[4];
  if (!v3[7])
  {
LABEL_5:
    objc_msgSend(v3, "runCancellationHandlers");
    v4 = (void (**)(void))a1[6];
    if (!v4)
      return;
    v5 = a1[5];
    if (v5)
    {
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_1003AA9CC;
      block[3] = &unk_10122D7E0;
      v20 = v4;
      dispatch_async(v5, block);
      v6 = v20;
LABEL_11:

      return;
    }
    goto LABEL_13;
  }
  if (objc_msgSend(v3[7], "isCancelled"))
  {
    v3 = (id *)a1[4];
    goto LABEL_5;
  }
  v8 = (void *)a1[6];
  if (v8)
  {
    v9 = objc_msgSend(v8, "copy");
    v10 = a1[5];
    v11 = objc_retainBlock(v9);
    v12 = (void *)objc_claimAutoreleasedReturnValue(+[CRLPair pairWithFirst:second:](CRLPair, "pairWithFirst:second:", v10, v11));

    v13 = *(void **)(a1[4] + 8);
    if (v13)
    {
      objc_msgSend(v13, "addObject:", v12);
    }
    else
    {
      v14 = objc_msgSend(objc_alloc((Class)NSMutableArray), "initWithObjects:", v12, 0);
      v15 = a1[4];
      v16 = *(void **)(v15 + 8);
      *(_QWORD *)(v15 + 8) = v14;

    }
  }
  objc_msgSend(*(id *)(a1[4] + 56), "cancel");
}

uint64_t sub_1003AA9CC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

uint64_t sub_1003AA9D8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

id sub_1003AADC8(uint64_t a1)
{
  void *v2;
  __int128 v3;
  _OWORD v5[3];

  v2 = *(void **)(a1 + 32);
  v3 = *(_OWORD *)&CGAffineTransformIdentity.c;
  v5[0] = *(_OWORD *)&CGAffineTransformIdentity.a;
  v5[1] = v3;
  v5[2] = *(_OWORD *)&CGAffineTransformIdentity.tx;
  objc_msgSend(v2, "setTransform:", v5);
  return objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 1.0);
}

id sub_1003AAE1C(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "completeTransition:", a2);
}

id sub_1003AAE28(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 0.0);
}

id sub_1003AAE34(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "completeTransition:", a2);
}

void sub_1003AAE40(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003AAE70(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003AAF94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1003AAFB0(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "cancelAnimated:completionQueue:completionHandler:", 1, 0, 0);

}

void sub_1003AB764(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003AB794(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003AB7C4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003AB7F4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003AC0C0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003AC0F0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003AC2CC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003AC2FC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003ACE2C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003ACE5C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003AD180(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003AD1B0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003B2894(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003B28C4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003B28F4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003B2924(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003B3DE8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003B3E18(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003B40AC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_1003B4170(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_1003B4618(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003B4648(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003B47B0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003B47E0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003B49D0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003B4A00(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003B4B84(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003B4BB4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003B4D1C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003B4D4C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003B4EB4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003B4EE4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003B50CC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003B50FC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003B52EC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003B531C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003B5488(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003B54B8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003B5624(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003B5654(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003B57BC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003B57EC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003B59A4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003B59D4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003B5BBC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003B5BEC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003B662C(uint64_t a1)
{
  uint64_t v1;
  id WeakRetained;
  double v4;
  id v5;

  v1 = *(_QWORD *)(a1 + 32);
  if (!*(_BYTE *)(v1 + 9))
  {
    WeakRetained = objc_loadWeakRetained((id *)(v1 + 24));
    if (!WeakRetained)
    {
      if ((objc_msgSend(*(id *)(a1 + 32), "p_shouldSuppressSelectionHighlight") & 1) != 0)
        return;
      objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 40), "animationCycleForHide:", 1);
      v5 = (id)objc_claimAutoreleasedReturnValue(+[NSTimer scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:](NSTimer, "scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:", *(_QWORD *)(a1 + 32), "p_caretTimerFired:", 0, objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 40), "caretShouldFade") ^ 1, v4));
      objc_storeWeak((id *)(*(_QWORD *)(a1 + 32) + 24), v5);
      WeakRetained = v5;
    }

  }
}

void sub_1003B67E0(uint64_t a1)
{
  id v2;
  BOOL v3;
  id WeakRetained;
  id v5;

  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 9) = 0;
  v2 = *(id *)(a1 + 40);
  if (*(_BYTE *)(a1 + 56))
    v3 = v2 == 0;
  else
    v3 = 0;
  if (v3)
  {
    WeakRetained = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 32) + 24));
    objc_storeWeak((id *)(*(_QWORD *)(a1 + 32) + 24), 0);
    v2 = WeakRetained;
  }
  v5 = v2;
  objc_msgSend(v2, "invalidate");
  objc_msgSend(*(id *)(a1 + 32), "p_setCaretOn:forLayer:", *(_BYTE *)(a1 + 56) == 0, *(_QWORD *)(a1 + 48));

}

void sub_1003B6DDC(uint64_t a1)
{
  unsigned __int8 v2;
  void *v3;
  unsigned int v4;
  void *v5;
  NSObject *v6;
  NSObject *v7;
  dispatch_time_t v8;
  id v9;
  _QWORD handler[5];
  id v11;

  v2 = objc_msgSend(*(id *)(a1 + 32), "_isCancelled");
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_dispatchTimer"));

  if (v3)
  {
    v4 = objc_msgSend(*(id *)(a1 + 32), "automaticallyCancelPendingBlockUponSchedulingNewBlock");
    v5 = *(void **)(a1 + 32);
    if (!v4)
    {
      NSLog(CFSTR("[warning]: %@: Ignoring block scheduled for execution %.2f seconds from now."), v5, *(_QWORD *)(a1 + 48));
      return;
    }
    objc_msgSend(v5, "_reallyCancel");
  }
  if ((v2 & 1) == 0)
  {
    v6 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_dispatchQueue"));
    v7 = dispatch_source_create((dispatch_source_type_t)&_dispatch_source_type_timer, 0, 0, v6);

    v8 = dispatch_time(0, (uint64_t)(*(double *)(a1 + 48) * 1000000000.0));
    dispatch_source_set_timer(v7, v8, 0xFFFFFFFFFFFFFFFFLL, 0);
    handler[0] = _NSConcreteStackBlock;
    handler[1] = 3221225472;
    handler[2] = sub_1003B6F2C;
    handler[3] = &unk_10122C360;
    v9 = *(id *)(a1 + 40);
    handler[4] = *(_QWORD *)(a1 + 32);
    v11 = v9;
    dispatch_source_set_event_handler(v7, handler);
    dispatch_resume(v7);
    objc_msgSend(*(id *)(a1 + 32), "_setDispatchTimer:", v7);

  }
}

id sub_1003B6F2C(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  return objc_msgSend(*(id *)(a1 + 32), "_reallyCancel");
}

id sub_1003B7018(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_reallyCancel");
}

void sub_1003B7288(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003B72B8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003B7450(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003B7480(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003B7820(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003B7850(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003B7E90(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003B7EC0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003B82A0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003B82D0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

BOOL sub_1003B8764(id a1, CRLCanvasLayout *a2)
{
  CRLCanvasLayout *v2;
  uint64_t v3;
  uint64_t v4;
  char isKindOfClass;

  v2 = a2;
  v4 = objc_opt_class(CRLFreehandDrawingTransformLayout, v3);
  isKindOfClass = objc_opt_isKindOfClass(v2, v4);

  return isKindOfClass & 1;
}

void sub_1003B8970(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003B89A0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003B8C68(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003B8C98(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003B8EC8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003B8EF8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003B935C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003B938C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

id sub_1003B951C(_OWORD *a1, void *a2)
{
  __int128 v2;
  _OWORD v4[3];

  v2 = a1[3];
  v4[0] = a1[2];
  v4[1] = v2;
  v4[2] = a1[4];
  return (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "crl_strokeByAppendingTransform:", v4));
}

void sub_1003BA7A8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003BA7D8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003BA808(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003BA838(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003BBE5C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003BBE8C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003BBEBC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003BBEEC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003BBF1C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003BBF4C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003BBF7C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003BBFAC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003BBFDC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003BC00C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003BC03C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003BC06C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003BC09C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003BC0CC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003BC0FC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003BC12C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003BC15C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003BC18C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003BC1BC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003BC1EC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003BC21C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003BC24C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003BC458(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003BC488(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003BCA68(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003BCA98(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003BCAC8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003BCAF8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003BCB28(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003BCB58(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003BCB88(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003BCBB8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003BDC30(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003BDC60(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003BDC90(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003BDCC0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003BDCF0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003BDD20(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003BDD50(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003BDD80(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

id sub_1003BE190(uint64_t a1)
{
  objc_super v2;

  v2.receiver = *(id *)(a1 + 32);
  v2.super_class = (Class)CRLShapeLayout;
  return objc_msgSendSuper2(&v2, "offsetGeometryBy:", *(double *)(a1 + 40), *(double *)(a1 + 48));
}

id sub_1003BE244(uint64_t a1)
{
  uint64_t v1;
  objc_super v3;

  v1 = *(_QWORD *)(a1 + 32);
  v3.receiver = *(id *)(a1 + 40);
  v3.super_class = (Class)CRLShapeLayout;
  return objc_msgSendSuper2(&v3, "setDynamicGeometry:", v1);
}

void sub_1003BE6F4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003BE724(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003BE754(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003BE784(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003BE944(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003BE974(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003BF164(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

