__n128 sub_100587314@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v5;
  _OWORD v6[3];
  _OWORD v7[2];

  sub_100587704(a1, (uint64_t)v6);
  if (!v2)
  {
    v5 = v7[0];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 57) = *(_OWORD *)((char *)v7 + 9);
    result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_10058735C(_QWORD *a1)
{
  return sub_100587060(a1);
}

uint64_t sub_10058739C(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[3];
  _OWORD v8[2];
  _OWORD v9[3];
  _OWORD v10[2];

  v2 = a1[3];
  v7[2] = a1[2];
  v8[0] = v2;
  *(_OWORD *)((char *)v8 + 9) = *(_OWORD *)((char *)a1 + 57);
  v3 = a1[1];
  v7[0] = *a1;
  v7[1] = v3;
  v4 = a2[3];
  v9[2] = a2[2];
  v10[0] = v4;
  *(_OWORD *)((char *)v10 + 9) = *(_OWORD *)((char *)a2 + 57);
  v5 = a2[1];
  v9[0] = *a2;
  v9[1] = v5;
  return sub_1005874E4((uint64_t)v7, (uint64_t)v9) & 1;
}

uint64_t sub_1005873F4()
{
  uint64_t v0;
  Swift::String v1;
  Swift::String v2;
  void *object;
  Swift::String v4;
  uint64_t v5;
  Swift::String v6;
  __int128 v8;
  _QWORD v9[2];

  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(51);
  v1._countAndFlagsBits = 0xD00000000000001DLL;
  v1._object = (void *)0x8000000100FB5050;
  String.append(_:)(v1);
  v2._countAndFlagsBits = Double.description.getter(*(double *)v0);
  object = v2._object;
  String.append(_:)(v2);
  swift_bridgeObjectRelease(object);
  v4._object = (void *)0x8000000100FB5070;
  v4._countAndFlagsBits = 0xD000000000000011;
  String.append(_:)(v4);
  v8 = *(_OWORD *)(v0 + 8);
  type metadata accessor for CGPoint(0);
  _print_unlocked<A, B>(_:_:)(&v8, v9, v5, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v6._countAndFlagsBits = 41;
  v6._object = (void *)0xE100000000000000;
  String.append(_:)(v6);
  return v9[0];
}

uint64_t sub_1005874E4(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  char v10;
  char v12;
  char v13;

  if (*(double *)a1 != *(double *)a2
    || *(double *)(a1 + 8) != *(double *)(a2 + 8)
    || *(double *)(a1 + 16) != *(double *)(a2 + 16))
  {
    goto LABEL_20;
  }
  v4 = *(_BYTE *)(a2 + 32);
  if ((*(_BYTE *)(a1 + 32) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 32))
      return v4 & 1;
  }
  else
  {
    if (*(_QWORD *)(a1 + 24) != *(_QWORD *)(a2 + 24))
      v4 = 1;
    if ((v4 & 1) != 0)
      goto LABEL_20;
  }
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(_QWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 48);
  if (v6 >> 60 == 15)
  {
    if (v8 >> 60 != 15)
      goto LABEL_19;
    goto LABEL_15;
  }
  if (v8 >> 60 == 15)
    goto LABEL_19;
  sub_10057939C(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
  sub_10057939C(v7, v8);
  sub_1007B38CC(v5, v6);
  v10 = v9;
  sub_1004BE2FC(v7, v8);
  sub_1004BE2FC(v5, v6);
  if ((v10 & 1) != 0)
  {
LABEL_15:
    v5 = *(_QWORD *)(a1 + 56);
    v6 = *(_QWORD *)(a1 + 64);
    v7 = *(_QWORD *)(a2 + 56);
    v8 = *(_QWORD *)(a2 + 64);
    if (v6 >> 60 == 15)
    {
      if (v8 >> 60 == 15)
        goto LABEL_23;
    }
    else if (v8 >> 60 != 15)
    {
      sub_10057939C(*(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64));
      sub_10057939C(v7, v8);
      sub_1007B38CC(v5, v6);
      v13 = v12;
      sub_1004BE2FC(v7, v8);
      sub_1004BE2FC(v5, v6);
      if ((v13 & 1) == 0)
        goto LABEL_20;
LABEL_23:
      v4 = ((*(_BYTE *)(a1 + 72) & 1) == 0) ^ *(_BYTE *)(a2 + 72);
      return v4 & 1;
    }
LABEL_19:
    sub_10057939C(v5, v6);
    sub_10057939C(v7, v8);
    sub_1004BE2FC(v5, v6);
    sub_1004BE2FC(v7, v8);
  }
LABEL_20:
  v4 = 0;
  return v4 & 1;
}

unint64_t sub_1005876BC(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_101264850, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 5)
    return 5;
  else
    return v3;
}

uint64_t sub_100587704@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  BOOL v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;

  v5 = sub_1004B804C(&qword_1013E4220);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_100587A38();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLBoardViewState.CodingKeys, &type metadata for CRLBoardViewState.CodingKeys, v11, v9, v10);
  if (v2)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
    sub_1004BE2FC(0, 0xF000000000000000);
    return sub_1004BE2FC(0, 0xF000000000000000);
  }
  else
  {
    v31 = 0;
    v12 = sub_100587A7C();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for CGFloat, &v31, v5, &type metadata for CGFloat, v12);
    v13 = v29;
    type metadata accessor for CGPoint(0);
    v15 = v14;
    v31 = 1;
    v16 = sub_100587B48(&qword_1013E4230, (uint64_t)&protocol conformance descriptor for CGPoint);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v15, &v31, v5, v15, v16);
    v17 = v29;
    v18 = v30;
    LOBYTE(v29) = 2;
    v19 = KeyedDecodingContainer.decode(_:forKey:)(&v29, v5);
    v31 = 3;
    v28 = sub_100587AC0();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&type metadata for Data, &v31, v5, &type metadata for Data, v28);
    v26 = 0;
    v27 = v19;
    v20 = v29;
    v21 = v30;
    v31 = 4;
    sub_10057939C(v29, v30);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&type metadata for Data, &v31, v5, &type metadata for Data, v28);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v22 = v26 != 0;
    v23 = v29;
    v24 = v30;
    sub_10057939C(v29, v30);
    sub_1004BE2FC(0, 0xF000000000000000);
    sub_10057939C(v20, v21);
    sub_10057939C(v23, v24);
    sub_1004BE2FC(v23, v24);
    sub_1004BE2FC(v20, v21);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
    sub_1004BE2FC(v20, v21);
    result = sub_1004BE2FC(v23, v24);
    *(_QWORD *)a2 = v13;
    *(_QWORD *)(a2 + 8) = v17;
    *(_QWORD *)(a2 + 16) = v18;
    *(_QWORD *)(a2 + 24) = v27;
    *(_BYTE *)(a2 + 32) = v22;
    *(_QWORD *)(a2 + 40) = v20;
    *(_QWORD *)(a2 + 48) = v21;
    *(_QWORD *)(a2 + 56) = v23;
    *(_QWORD *)(a2 + 64) = v24;
    *(_BYTE *)(a2 + 72) = 0;
  }
  return result;
}

unint64_t sub_100587A38()
{
  unint64_t result;

  result = qword_1013E4228;
  if (!qword_1013E4228)
  {
    result = swift_getWitnessTable(&unk_100EFA500, &type metadata for CRLBoardViewState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E4228);
  }
  return result;
}

unint64_t sub_100587A7C()
{
  unint64_t result;

  result = qword_1013E46F0;
  if (!qword_1013E46F0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CGFloat, &type metadata for CGFloat);
    atomic_store(result, (unint64_t *)&qword_1013E46F0);
  }
  return result;
}

unint64_t sub_100587AC0()
{
  unint64_t result;

  result = qword_1013E4238;
  if (!qword_1013E4238)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Data, &type metadata for Data);
    atomic_store(result, (unint64_t *)&qword_1013E4238);
  }
  return result;
}

unint64_t sub_100587B04()
{
  unint64_t result;

  result = qword_1013E4710;
  if (!qword_1013E4710)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CGFloat, &type metadata for CGFloat);
    atomic_store(result, (unint64_t *)&qword_1013E4710);
  }
  return result;
}

uint64_t sub_100587B48(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    type metadata accessor for CGPoint(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100587B88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013E4250);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100587BD0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E4258;
  if (!qword_1013E4258)
  {
    v1 = sub_1004CB6A4(&qword_1013E4250);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1013E4258);
  }
  return result;
}

unint64_t sub_100587C2C()
{
  unint64_t result;

  result = qword_1013E4260;
  if (!qword_1013E4260)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Data, &type metadata for Data);
    atomic_store(result, (unint64_t *)&qword_1013E4260);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for CRLBoardAuxiliaryRealTimeChangeTypeLegacy(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLBoardViewState.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_100587D4C + 4 * byte_100EFA33F[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_100587D80 + 4 * byte_100EFA33A[v4]))();
}

uint64_t sub_100587D80(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100587D88(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100587D90);
  return result;
}

uint64_t sub_100587D9C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100587DA4);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_100587DA8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100587DB0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardViewState.CodingKeys()
{
  return &type metadata for CRLBoardViewState.CodingKeys;
}

unint64_t sub_100587DD0()
{
  unint64_t result;

  result = qword_1013E4268;
  if (!qword_1013E4268)
  {
    result = swift_getWitnessTable(&unk_100EFA4D8, &type metadata for CRLBoardViewState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E4268);
  }
  return result;
}

unint64_t sub_100587E18()
{
  unint64_t result;

  result = qword_1013E4270;
  if (!qword_1013E4270)
  {
    result = swift_getWitnessTable("a67", &type metadata for CRLBoardViewState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E4270);
  }
  return result;
}

unint64_t sub_100587E60()
{
  unint64_t result;

  result = qword_1013E4278;
  if (!qword_1013E4278)
  {
    result = swift_getWitnessTable(&unk_100EFA438, &type metadata for CRLBoardViewState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E4278);
  }
  return result;
}

double initializeWithCopy for CRLLayerTransformByNaturalRectTransition(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double result;

  *(_QWORD *)&result = sub_100587F64(a1, a2, a3, (uint64_t (*)(void))&_swift_unknownObjectWeakCopyInit).n128_u64[0];
  return result;
}

__n128 assignWithCopy for CRLLayerTransformByNaturalRectTransition(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __n128 result;
  __int128 v8;
  __int128 v9;

  v3 = swift_unknownObjectWeakCopyAssign(a1, a2);
  *(_QWORD *)(v3 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(v3 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(v3 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(v3 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(v3 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(v3 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(v3 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(v3 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(v3 + 72) = *(_OWORD *)(a2 + 72);
  v4 = *(_OWORD *)(a2 + 88);
  v5 = *(_OWORD *)(a2 + 104);
  v6 = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(v3 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(v3 + 120) = v6;
  *(_OWORD *)(v3 + 104) = v5;
  *(_OWORD *)(v3 + 88) = v4;
  result = *(__n128 *)(a2 + 152);
  v8 = *(_OWORD *)(a2 + 168);
  v9 = *(_OWORD *)(a2 + 184);
  *(_BYTE *)(v3 + 200) = *(_BYTE *)(a2 + 200);
  *(_OWORD *)(v3 + 184) = v9;
  *(_OWORD *)(v3 + 168) = v8;
  *(__n128 *)(v3 + 152) = result;
  return result;
}

double initializeWithTake for CRLLayerTransformByNaturalRectTransition(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double result;

  *(_QWORD *)&result = sub_100587F64(a1, a2, a3, (uint64_t (*)(void))&_swift_unknownObjectWeakTakeInit).n128_u64[0];
  return result;
}

__n128 sub_100587F64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v5;
  __n128 result;

  v5 = a4();
  *(_OWORD *)(v5 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(v5 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(v5 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(v5 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(v5 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(v5 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(v5 + 184) = *(_OWORD *)(a2 + 184);
  *(_BYTE *)(v5 + 200) = *(_BYTE *)(a2 + 200);
  *(_OWORD *)(v5 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(v5 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(v5 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(v5 + 136) = *(_OWORD *)(a2 + 136);
  result = *(__n128 *)(a2 + 72);
  *(__n128 *)(v5 + 72) = result;
  return result;
}

__n128 assignWithTake for CRLLayerTransformByNaturalRectTransition(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;

  v3 = swift_unknownObjectWeakTakeAssign();
  *(_OWORD *)(v3 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(v3 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(v3 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(v3 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(v3 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(v3 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(v3 + 184) = *(_OWORD *)(a2 + 184);
  *(_BYTE *)(v3 + 200) = *(_BYTE *)(a2 + 200);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(v3 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(v3 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(v3 + 136) = *(_OWORD *)(a2 + 136);
  result = *(__n128 *)(a2 + 72);
  *(__n128 *)(v3 + 72) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for CRLLayerTransformByNaturalRectTransition(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 201))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for CRLLayerTransformByNaturalRectTransition(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 200) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 201) = v3;
  return result;
}

ValueMetadata *type metadata accessor for CRLLayerTransformByNaturalRectTransition()
{
  return &type metadata for CRLLayerTransformByNaturalRectTransition;
}

void sub_100588104(uint64_t a1@<X8>)
{
  CGFloat *v1;
  CGFloat *v2;
  void *Strong;
  void *v5;
  double x;
  double y;
  double width;
  double height;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  unint64_t v14;
  unint64_t v15;
  id v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  CGFloat v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  CGFloat v58;
  CGFloat v59;
  CGFloat v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  CGFloat v69;
  CGFloat v70;
  CGFloat v71;
  CGFloat v72;
  CGFloat v73;
  CGFloat v74;
  __int128 v75;
  __int128 v76;
  CGFloat v77;
  CGFloat v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  CGFloat m11;
  CGFloat m12;
  CGFloat m44;
  CGFloat m43;
  CGFloat m42;
  CGFloat m41;
  CGFloat m34;
  CGFloat m33;
  CGFloat m32;
  CGFloat m31;
  __int128 v103;
  __int128 v104;
  CGFloat m24;
  __int128 v106;
  __int128 v107;
  CGFloat m23;
  __int128 v109;
  __int128 v110;
  CGFloat m22;
  __int128 v112;
  __int128 v113;
  CGFloat m21;
  __int128 v115;
  __int128 v116;
  CGFloat m14;
  __int128 v118;
  __int128 v119;
  CGFloat m13;
  __int128 v121;
  __int128 v122;
  CATransform3D a;
  CATransform3D v124;
  CATransform3D b;
  _BYTE v126[136];
  _BYTE v127[136];
  CGRect v128;
  CGRect v129;

  v2 = v1;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v5 = Strong;
    objc_msgSend(Strong, "frame");
    x = v128.origin.x;
    y = v128.origin.y;
    width = v128.size.width;
    height = v128.size.height;
    if (CGRectGetWidth(v128) <= 0.0
      || (v129.origin.x = x,
          v129.origin.y = y,
          v129.size.width = width,
          v129.size.height = height,
          CGRectGetHeight(v129) <= 0.0))
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"concretePropertyTransition", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Animation/Property Transitions/CRLLayerTransformByNaturalRectTransition.swift", 147, 2, 53, "The layer's rect must have a size greater than 0.", 49, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"concretePropertyTransition", 26, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Animation/Property Transitions/CRLLayerTransformByNaturalRectTransition.swift", 147, 2u, 53, (uint64_t)"The layer's rect must have a size greater than 0.", 49, 2u);
    }
    v10 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v11 = swift_allocObject(v10, 112, 7);
    *(_OWORD *)(v11 + 16) = xmmword_100EF5A10;
    v12 = (void *)objc_opt_self(NSValue);
    v13 = objc_msgSend(v12, "valueWithCGPoint:", 0.5, 0.5);
    v14 = sub_100588A68();
    *(_QWORD *)(v11 + 56) = v14;
    v15 = sub_100588AA4();
    *(_QWORD *)(v11 + 64) = v15;
    *(_QWORD *)(v11 + 32) = v13;
    objc_msgSend(v5, "anchorPoint");
    v16 = objc_msgSend(v12, "valueWithCGPoint:");
    *(_QWORD *)(v11 + 96) = v14;
    *(_QWORD *)(v11 + 104) = v15;
    *(_QWORD *)(v11 + 72) = v16;
    objc_msgSend(v5, "anchorPoint");
    if (v18 != 0.5 || v17 != 0.5)
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"concretePropertyTransition", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Animation/Property Transitions/CRLLayerTransformByNaturalRectTransition.swift", 147, 2, 54, "The view's anchor point is expected to be %@, but it's actually %@. Animations may appear incorrect.", 100, 2u, v11);
      sub_1004F5394(v11, (uint64_t)"concretePropertyTransition", 26, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Animation/Property Transitions/CRLLayerTransformByNaturalRectTransition.swift", 147, 2u, 54, (uint64_t)"The view's anchor point is expected to be %@, but it's actually %@. Animations may appear incorrect.", 100, 2u);
    }
    swift_bridgeObjectRelease(v11);
    sub_10056B6C4((uint64_t)(v2 + 9), (uint64_t)v126);
    sub_10056B6C4((uint64_t)v126, (uint64_t)v127);
    if (sub_10056B70C((uint64_t)v127) == 1)
      objc_msgSend(v5, "transform");
    else
      sub_10056B6C4((uint64_t)v126, (uint64_t)&a);
    m11 = a.m11;
    m12 = a.m12;
    m13 = a.m13;
    m14 = a.m14;
    m21 = a.m21;
    m22 = a.m22;
    m23 = a.m23;
    m24 = a.m24;
    m32 = a.m32;
    m31 = a.m31;
    m34 = a.m34;
    m33 = a.m33;
    m42 = a.m42;
    m41 = a.m41;
    m44 = a.m44;
    m43 = a.m43;
    v19 = v2[3];
    v20 = v2[4];
    v21 = sub_1000616BC(x, y, width, height, v2[1], v2[2], v19, v20);
    v23 = v22;
    CATransform3DMakeScale(&a, v19 / width, v20 / height, 1.0);
    v24 = *(_OWORD *)&a.m11;
    v25 = *(_OWORD *)&a.m13;
    v26 = *(_OWORD *)&a.m21;
    v27 = *(_OWORD *)&a.m23;
    v28 = *(_OWORD *)&a.m31;
    v29 = *(_OWORD *)&a.m33;
    v30 = *(_OWORD *)&a.m41;
    v31 = *(_OWORD *)&a.m43;
    a.m11 = m11;
    a.m12 = m12;
    a.m13 = m13;
    a.m14 = m14;
    a.m21 = m21;
    a.m22 = m22;
    a.m23 = m23;
    a.m24 = m24;
    a.m31 = m31;
    a.m32 = m32;
    a.m33 = m33;
    a.m34 = m34;
    a.m41 = m41;
    a.m42 = m42;
    a.m43 = m43;
    a.m44 = m44;
    *(_OWORD *)&b.m11 = v24;
    *(_OWORD *)&b.m13 = v25;
    *(_OWORD *)&b.m21 = v26;
    *(_OWORD *)&b.m23 = v27;
    *(_OWORD *)&b.m31 = v28;
    *(_OWORD *)&b.m33 = v29;
    *(_OWORD *)&b.m41 = v30;
    *(_OWORD *)&b.m43 = v31;
    CATransform3DConcat(&v124, &a, &b);
    v91 = *(_OWORD *)&v124.m11;
    v89 = *(_OWORD *)&v124.m13;
    v87 = *(_OWORD *)&v124.m21;
    v85 = *(_OWORD *)&v124.m23;
    v83 = *(_OWORD *)&v124.m31;
    v81 = *(_OWORD *)&v124.m33;
    v79 = *(_OWORD *)&v124.m41;
    v32 = v21 - x;
    v33 = x;
    v34 = v124.m43;
    v35 = v124.m44;
    CATransform3DMakeTranslation(&a, v32, v23 - y, 0.0);
    v36 = *(_OWORD *)&a.m11;
    v37 = *(_OWORD *)&a.m13;
    v38 = *(_OWORD *)&a.m21;
    v39 = *(_OWORD *)&a.m23;
    v40 = *(_OWORD *)&a.m31;
    v41 = *(_OWORD *)&a.m33;
    v42 = *(_OWORD *)&a.m41;
    v43 = *(_OWORD *)&a.m43;
    *(_OWORD *)&a.m11 = v91;
    *(_OWORD *)&a.m13 = v89;
    *(_OWORD *)&a.m21 = v87;
    *(_OWORD *)&a.m23 = v85;
    *(_OWORD *)&a.m31 = v83;
    *(_OWORD *)&a.m33 = v81;
    *(_OWORD *)&a.m41 = v79;
    a.m43 = v34;
    a.m44 = v35;
    *(_OWORD *)&b.m11 = v36;
    *(_OWORD *)&b.m13 = v37;
    *(_OWORD *)&b.m21 = v38;
    *(_OWORD *)&b.m23 = v39;
    *(_OWORD *)&b.m31 = v40;
    *(_OWORD *)&b.m33 = v41;
    *(_OWORD *)&b.m41 = v42;
    *(_OWORD *)&b.m43 = v43;
    CATransform3DConcat(&v124, &a, &b);
    v92 = *(_OWORD *)&v124.m11;
    v90 = *(_OWORD *)&v124.m13;
    v88 = *(_OWORD *)&v124.m21;
    v86 = *(_OWORD *)&v124.m23;
    v84 = *(_OWORD *)&v124.m31;
    v82 = *(_OWORD *)&v124.m33;
    v80 = *(_OWORD *)&v124.m41;
    v78 = v124.m43;
    v77 = v124.m44;
    v44 = v2[7];
    v45 = v2[8];
    v46 = y;
    v47 = sub_1000616BC(x, y, width, height, v2[5], v2[6], v44, v45);
    v49 = v48;
    CATransform3DMakeScale(&a, v44 / width, v45 / height, 1.0);
    v50 = *(_OWORD *)&a.m11;
    v51 = *(_OWORD *)&a.m13;
    v52 = *(_OWORD *)&a.m21;
    v53 = *(_OWORD *)&a.m23;
    v54 = *(_OWORD *)&a.m31;
    v55 = *(_OWORD *)&a.m33;
    v56 = *(_OWORD *)&a.m41;
    v57 = *(_OWORD *)&a.m43;
    a.m11 = m11;
    a.m12 = m12;
    a.m13 = m13;
    a.m14 = m14;
    a.m21 = m21;
    a.m22 = m22;
    a.m23 = m23;
    a.m24 = m24;
    a.m31 = m31;
    a.m32 = m32;
    a.m33 = m33;
    a.m34 = m34;
    a.m41 = m41;
    a.m42 = m42;
    a.m43 = m43;
    a.m44 = m44;
    *(_OWORD *)&b.m11 = v50;
    *(_OWORD *)&b.m13 = v51;
    *(_OWORD *)&b.m21 = v52;
    *(_OWORD *)&b.m23 = v53;
    *(_OWORD *)&b.m31 = v54;
    *(_OWORD *)&b.m33 = v55;
    *(_OWORD *)&b.m41 = v56;
    *(_OWORD *)&b.m43 = v57;
    CATransform3DConcat(&v124, &a, &b);
    v121 = *(_OWORD *)&v124.m11;
    v118 = *(_OWORD *)&v124.m13;
    v115 = *(_OWORD *)&v124.m21;
    v112 = *(_OWORD *)&v124.m23;
    v109 = *(_OWORD *)&v124.m31;
    v106 = *(_OWORD *)&v124.m33;
    v103 = *(_OWORD *)&v124.m41;
    v58 = v47 - v33;
    v59 = v124.m43;
    v60 = v124.m44;
    CATransform3DMakeTranslation(&a, v58, v49 - v46, 0.0);
    v61 = *(_OWORD *)&a.m11;
    v62 = *(_OWORD *)&a.m13;
    v63 = *(_OWORD *)&a.m21;
    v64 = *(_OWORD *)&a.m23;
    v65 = *(_OWORD *)&a.m31;
    v66 = *(_OWORD *)&a.m33;
    v67 = *(_OWORD *)&a.m41;
    v68 = *(_OWORD *)&a.m43;
    *(_OWORD *)&a.m11 = v121;
    *(_OWORD *)&a.m13 = v118;
    *(_OWORD *)&a.m21 = v115;
    *(_OWORD *)&a.m23 = v112;
    *(_OWORD *)&a.m31 = v109;
    *(_OWORD *)&a.m33 = v106;
    *(_OWORD *)&a.m41 = v103;
    a.m43 = v59;
    a.m44 = v60;
    *(_OWORD *)&b.m11 = v61;
    *(_OWORD *)&b.m13 = v62;
    *(_OWORD *)&b.m21 = v63;
    *(_OWORD *)&b.m23 = v64;
    *(_OWORD *)&b.m31 = v65;
    *(_OWORD *)&b.m33 = v66;
    *(_OWORD *)&b.m41 = v67;
    *(_OWORD *)&b.m43 = v68;
    CATransform3DConcat(&v124, &a, &b);
    v122 = *(_OWORD *)&v124.m11;
    v119 = *(_OWORD *)&v124.m13;
    v116 = *(_OWORD *)&v124.m21;
    v113 = *(_OWORD *)&v124.m23;
    v110 = *(_OWORD *)&v124.m31;
    v107 = *(_OWORD *)&v124.m33;
    v104 = *(_OWORD *)&v124.m41;
    v69 = v124.m43;
    v70 = v124.m44;
    type metadata accessor for CATransform3D(0);
    v72 = v71;
    b.m14 = v71;
    v73 = COERCE_DOUBLE(swift_allocObject(&unk_10126DBE0, 144, 7));
    b.m11 = v73;
    *(_OWORD *)(*(_QWORD *)&v73 + 16) = v92;
    *(_OWORD *)(*(_QWORD *)&v73 + 32) = v90;
    *(_OWORD *)(*(_QWORD *)&v73 + 48) = v88;
    *(_OWORD *)(*(_QWORD *)&v73 + 64) = v86;
    *(_OWORD *)(*(_QWORD *)&v73 + 80) = v84;
    *(_OWORD *)(*(_QWORD *)&v73 + 96) = v82;
    *(_OWORD *)(*(_QWORD *)&v73 + 112) = v80;
    *(CGFloat *)(*(_QWORD *)&v73 + 128) = v78;
    *(CGFloat *)(*(_QWORD *)&v73 + 136) = v77;
    v124.m14 = v72;
    v74 = COERCE_DOUBLE(swift_allocObject(&unk_10126DBE0, 144, 7));
    v124.m11 = v74;
    *(_OWORD *)(*(_QWORD *)&v74 + 16) = v122;
    *(_OWORD *)(*(_QWORD *)&v74 + 32) = v119;
    *(_OWORD *)(*(_QWORD *)&v74 + 48) = v116;
    *(_OWORD *)(*(_QWORD *)&v74 + 64) = v113;
    *(_OWORD *)(*(_QWORD *)&v74 + 80) = v110;
    *(_OWORD *)(*(_QWORD *)&v74 + 96) = v107;
    *(_OWORD *)(*(_QWORD *)&v74 + 112) = v104;
    *(CGFloat *)(*(_QWORD *)&v74 + 128) = v69;
    *(CGFloat *)(*(_QWORD *)&v74 + 136) = v70;
    memset(&a, 0, 64);
    LOBYTE(a.m31) = 26;
    a.m32 = 1.67501583e243;
    a.m33 = -5.98008217e197;
    sub_10056B738((uint64_t)&b, (uint64_t)&a);
    sub_10056B738((uint64_t)&v124, (uint64_t)&a.m21);
    v75 = *(_OWORD *)&a.m23;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)&a.m21;
    *(_OWORD *)(a1 + 48) = v75;
    *(_OWORD *)(a1 + 64) = *(_OWORD *)&a.m31;
    *(CGFloat *)(a1 + 80) = a.m33;
    v76 = *(_OWORD *)&a.m13;
    *(_OWORD *)a1 = *(_OWORD *)&a.m11;
    *(_OWORD *)(a1 + 16) = v76;

  }
  else
  {
    *(_QWORD *)(a1 + 80) = 0;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)(a1 + 64) = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
  }
}

__n128 sub_100588938@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __n128 result;
  __int128 v11;
  __n128 v12;
  __int128 v13;
  _BYTE v14[136];
  __int128 v15;
  __n128 v16;
  __int128 v17;
  __int128 v18;
  _OWORD v19[8];
  char v20;

  v12 = *(__n128 *)(v1 + 24);
  v13 = *(_OWORD *)(v1 + 8);
  v11 = *(_OWORD *)(v1 + 40);
  v3 = *(_QWORD *)(v1 + 56);
  v4 = *(_QWORD *)(v1 + 64);
  sub_10056B6C4(v1 + 72, (uint64_t)v14);
  v15 = v13;
  v16 = v12;
  v17 = v11;
  *(_QWORD *)&v18 = v3;
  *((_QWORD *)&v18 + 1) = v4;
  sub_10056B6C4((uint64_t)v14, (uint64_t)v19);
  v5 = v19[7];
  *(_OWORD *)(a1 + 160) = v19[6];
  *(_OWORD *)(a1 + 176) = v5;
  *(_BYTE *)(a1 + 192) = v20;
  v6 = v19[3];
  *(_OWORD *)(a1 + 96) = v19[2];
  *(_OWORD *)(a1 + 112) = v6;
  v7 = v19[5];
  *(_OWORD *)(a1 + 128) = v19[4];
  *(_OWORD *)(a1 + 144) = v7;
  v8 = v18;
  *(_OWORD *)(a1 + 32) = v17;
  *(_OWORD *)(a1 + 48) = v8;
  v9 = v19[1];
  *(_OWORD *)(a1 + 64) = v19[0];
  *(_OWORD *)(a1 + 80) = v9;
  result = v16;
  *(_OWORD *)a1 = v15;
  *(__n128 *)(a1 + 16) = result;
  *(_BYTE *)(a1 + 256) = 60;
  return result;
}

unint64_t sub_100588A00(uint64_t a1)
{
  unint64_t result;

  result = sub_100588A24();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_100588A24()
{
  unint64_t result;

  result = qword_1013E4280;
  if (!qword_1013E4280)
  {
    result = swift_getWitnessTable(&unk_100EFA58C, &type metadata for CRLLayerTransformByNaturalRectTransition);
    atomic_store(result, (unint64_t *)&qword_1013E4280);
  }
  return result;
}

unint64_t sub_100588A68()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10140B930;
  if (!qword_10140B930)
  {
    v1 = objc_opt_self(NSValue);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10140B930);
  }
  return result;
}

unint64_t sub_100588AA4()
{
  unint64_t result;
  unint64_t v1;

  result = qword_1013EA670;
  if (!qword_1013EA670)
  {
    v1 = sub_100588A68();
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1013EA670);
  }
  return result;
}

uint64_t sub_100588AEC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 144, 7);
}

BOOL sub_100588AFC(uint64_t a1, uint64_t a2)
{
  _BOOL4 v4;
  _BOOL4 v5;
  _BOOL8 v6;
  _OWORD v8[8];
  _OWORD v9[8];
  _OWORD v10[9];
  _BYTE v11[136];
  _BYTE v12[136];
  _OWORD v13[9];
  _BYTE v14[72];
  uint64_t v15;
  _BYTE v16[72];
  uint64_t v17;
  _BYTE v18[40];
  CGRect rect2;
  _BYTE v20[40];
  CGRect v21;

  v4 = CGRectEqualToRect(*(CGRect *)(a1 + 8), *(CGRect *)(a2 + 8));
  sub_100588CC8(a1, (uint64_t)v20);
  sub_100588CC8(a2, (uint64_t)v18);
  if (!v4)
  {
    sub_1004CBB0C((uint64_t)v18);
    sub_1004CBB0C((uint64_t)v20);
    sub_100588CC8(a1, (uint64_t)v16);
    sub_100588CC8(a2, (uint64_t)v14);
    goto LABEL_7;
  }
  v5 = CGRectEqualToRect(v21, rect2);
  sub_1004CBB0C((uint64_t)v18);
  sub_1004CBB0C((uint64_t)v20);
  sub_100588CC8(a1, (uint64_t)v16);
  sub_100588CC8(a2, (uint64_t)v14);
  if (!v5)
    goto LABEL_7;
  sub_10056B6C4((uint64_t)&v17, (uint64_t)v11);
  sub_10056B6C4((uint64_t)&v15, (uint64_t)v12);
  sub_10056B6C4((uint64_t)v11, (uint64_t)v13);
  if (sub_10056B70C((uint64_t)v13) != 1)
  {
    sub_10056B6C4((uint64_t)v12, (uint64_t)v10);
    if (sub_10056B70C((uint64_t)v10) != 1)
    {
      v9[0] = v13[0];
      v9[1] = v13[1];
      v9[2] = v13[2];
      v9[3] = v13[3];
      v9[4] = v13[4];
      v9[5] = v13[5];
      v9[6] = v13[6];
      v9[7] = v13[7];
      v8[0] = v10[0];
      v8[1] = v10[1];
      v8[2] = v10[2];
      v8[3] = v10[3];
      v8[4] = v10[4];
      v8[5] = v10[5];
      v8[6] = v10[6];
      v8[7] = v10[7];
      v6 = sub_100079E00((double *)v9, (double *)v8, 0.0);
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  sub_10056B6C4((uint64_t)v12, (uint64_t)v10);
  if (sub_10056B70C((uint64_t)v10) != 1)
  {
LABEL_7:
    v6 = 0;
    goto LABEL_8;
  }
  v6 = 1;
LABEL_8:
  sub_1004CBB0C((uint64_t)v14);
  sub_1004CBB0C((uint64_t)v16);
  return v6;
}

uint64_t sub_100588CC8(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  char v11;

  swift_unknownObjectWeakCopyInit(a2, a1);
  v4 = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 8) = v4;
  v5 = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(a2 + 56) = *(_OWORD *)(a1 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  v6 = *(_OWORD *)(a1 + 104);
  v7 = *(_OWORD *)(a1 + 120);
  v8 = *(_OWORD *)(a1 + 136);
  *(_OWORD *)(a2 + 88) = *(_OWORD *)(a1 + 88);
  *(_OWORD *)(a2 + 136) = v8;
  *(_OWORD *)(a2 + 120) = v7;
  *(_OWORD *)(a2 + 104) = v6;
  v9 = *(_OWORD *)(a1 + 168);
  v10 = *(_OWORD *)(a1 + 184);
  v11 = *(_BYTE *)(a1 + 200);
  *(_OWORD *)(a2 + 152) = *(_OWORD *)(a1 + 152);
  *(_BYTE *)(a2 + 200) = v11;
  *(_OWORD *)(a2 + 184) = v10;
  *(_OWORD *)(a2 + 168) = v9;
  *(_OWORD *)(a2 + 72) = *(_OWORD *)(a1 + 72);
  return a2;
}

BOOL sub_100588D60(uint64_t a1, uint64_t a2, const mach_header_64 *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9, uint64_t a10)
{
  return sub_10058959C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, (uint64_t)&type metadata for Int, &qword_1013E48C8);
}

uint64_t sub_100588DA4(uint64_t a1, uint64_t a2, const mach_header_64 *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9, uint64_t a10)
{
  uint64_t v14;
  uint64_t inited;
  uint64_t v16;
  NSString v17;
  char v18;
  uint64_t v24;
  _BYTE v25[72];

  v14 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v14, v25);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v24 = type metadata accessor for UUID(0);
  v16 = sub_1004B804C(&qword_1013E4878);
  String.init<A>(describing:)(&v24, v16);
  v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 56) = sub_1004B8930(0, (unint64_t *)&qword_1013E46B0, NSString_ptr);
  *(_QWORD *)(inited + 64) = sub_1005A15B8((unint64_t *)&qword_1013EE6B0, (unint64_t *)&qword_1013E46B0, NSString_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
  *(_QWORD *)(inited + 32) = v17;
  sub_1004B7878((unint64_t *)&qword_1013E4880, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v18 = dispatch thunk of static Equatable.== infix(_:_:)(a1, a2);
  if ((v18 & 1) == 0)
  {
    sub_100757E04(a3, a4, a5, a6, a7, a8, a9, a10, "expected equality between two values of type %{public}@", 55, 2u, inited);
    sub_1004F5394(inited, a4, a5, a6, a7, a8, a9, a10, (uint64_t)"expected equality between two values of type %{public}@", 55, 2u);
  }
  swift_bridgeObjectRelease();
  return v18 & 1;
}

uint64_t sub_100588F74(uint64_t a1, uint64_t a2, const mach_header_64 *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9, uint64_t a10)
{
  uint64_t v15;
  uint64_t inited;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSString v20;
  char v21;
  uint64_t v26;
  _BYTE v27[72];

  v15 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v15, v27);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v26 = type metadata accessor for CRLBoardPreviewImageCache.LookupKey(0);
  v17 = sub_1004B804C(&qword_1013E46A8);
  String.init<A>(describing:)(&v26, v17);
  v19 = v18;
  v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v19);
  *(_QWORD *)(inited + 56) = sub_1004B8930(0, (unint64_t *)&qword_1013E46B0, NSString_ptr);
  *(_QWORD *)(inited + 64) = sub_1005A15B8((unint64_t *)&qword_1013EE6B0, (unint64_t *)&qword_1013E46B0, NSString_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
  *(_QWORD *)(inited + 32) = v20;
  v21 = static NSObject.== infix(_:_:)(a1, a2);
  if ((v21 & 1) == 0)
  {
    sub_100757E04(a3, a4, a5, a6, a7, a8, a9, a10, "expected equality between two values of type %{public}@", 55, 2u, inited);
    sub_1004F5394(inited, a4, a5, a6, a7, a8, a9, a10, (uint64_t)"expected equality between two values of type %{public}@", 55, 2u);
  }
  swift_bridgeObjectRelease(inited);
  return v21 & 1;
}

uint64_t sub_100589120(uint64_t a1, uint64_t a2, const mach_header_64 *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9, uint64_t a10)
{
  uint64_t v16;
  uint64_t inited;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSString v21;
  char v22;
  char v23;
  uint64_t v27;
  _BYTE v28[72];

  v16 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v16, v28);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v27 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  v18 = sub_1004B804C(&qword_1013E48B0);
  String.init<A>(describing:)(&v27, v18);
  v20 = v19;
  v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v20);
  *(_QWORD *)(inited + 56) = sub_1004B8930(0, (unint64_t *)&qword_1013E46B0, NSString_ptr);
  *(_QWORD *)(inited + 64) = sub_1005A15B8((unint64_t *)&qword_1013EE6B0, (unint64_t *)&qword_1013E46B0, NSString_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
  *(_QWORD *)(inited + 32) = v21;
  sub_100BD0ED4(a1, a2);
  v23 = v22;
  if ((v22 & 1) == 0)
  {
    sub_100757E04(a3, a4, a5, a6, a7, a8, a9, a10, "expected equality between two values of type %{public}@", 55, 2u, inited);
    sub_1004F5394(inited, a4, a5, a6, a7, a8, a9, a10, (uint64_t)"expected equality between two values of type %{public}@", 55, 2u);
  }
  swift_bridgeObjectRelease(inited);
  return v23 & 1;
}

uint64_t sub_1005892BC(uint64_t a1, uint64_t a2, const mach_header_64 *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9, uint64_t a10)
{
  return sub_100589354(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, &qword_1013E48B8, PKToolPicker_ptr, &qword_1013E48C0) & 1;
}

uint64_t sub_100589308(uint64_t a1, uint64_t a2, const mach_header_64 *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9, uint64_t a10)
{
  return sub_100589354(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, (unint64_t *)&qword_1013DFC10, UIView_ptr, &qword_1013E48A8) & 1;
}

uint64_t sub_100589354(uint64_t a1, uint64_t a2, const mach_header_64 *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9, uint64_t a10, unint64_t *a11, _QWORD *a12, uint64_t *a13)
{
  uint64_t v18;
  uint64_t inited;
  uint64_t v20;
  NSString v21;
  char v22;
  uint64_t v27;
  _BYTE v28[80];

  v18 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v18, v28);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v27 = sub_1004B8930(0, a11, a12);
  v20 = sub_1004B804C(a13);
  String.init<A>(describing:)(&v27, v20);
  v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 56) = sub_1004B8930(0, (unint64_t *)&qword_1013E46B0, NSString_ptr);
  *(_QWORD *)(inited + 64) = sub_1005A15B8((unint64_t *)&qword_1013EE6B0, (unint64_t *)&qword_1013E46B0, NSString_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
  *(_QWORD *)(inited + 32) = v21;
  v22 = static NSObject.== infix(_:_:)(a1, a2);
  if ((v22 & 1) == 0)
  {
    sub_100757E04(a3, a4, a5, a6, a7, a8, a9, a10, "expected equality between two values of type %{public}@", 55, 2u, inited);
    sub_1004F5394(inited, a4, a5, a6, a7, a8, a9, a10, (uint64_t)"expected equality between two values of type %{public}@", 55, 2u);
  }
  swift_bridgeObjectRelease();
  return v22 & 1;
}

uint64_t sub_10058950C(uint64_t a1, uint64_t a2, const mach_header_64 *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9, uint64_t a10)
{
  return sub_100589354(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, &qword_1013E4890, off_101229918, (uint64_t *)&unk_1013E4898) & 1;
}

BOOL sub_100589558(uint64_t a1, uint64_t a2, const mach_header_64 *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9, uint64_t a10)
{
  return sub_10058959C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, (uint64_t)&type metadata for UInt, &qword_1013E4888);
}

BOOL sub_10058959C(uint64_t a1, uint64_t a2, const mach_header_64 *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9, uint64_t a10, uint64_t a11, uint64_t *a12)
{
  uint64_t v18;
  uint64_t inited;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSString v23;
  uint64_t v27;
  _BYTE v28[72];

  v18 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v18, v28);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v27 = a11;
  v20 = sub_1004B804C(a12);
  String.init<A>(describing:)(&v27, v20);
  v22 = v21;
  v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v22);
  *(_QWORD *)(inited + 56) = sub_1004B8930(0, (unint64_t *)&qword_1013E46B0, NSString_ptr);
  *(_QWORD *)(inited + 64) = sub_1005A15B8((unint64_t *)&qword_1013EE6B0, (unint64_t *)&qword_1013E46B0, NSString_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
  *(_QWORD *)(inited + 32) = v23;
  if (a1 != a2)
  {
    sub_100757E04(a3, a4, a5, a6, a7, a8, a9, a10, "expected equality between two values of type %{public}@", 55, 2u, inited);
    sub_1004F5394(inited, a4, a5, a6, a7, a8, a9, a10, (uint64_t)"expected equality between two values of type %{public}@", 55, 2u);
  }
  swift_bridgeObjectRelease(inited);
  return a1 == a2;
}

NSString sub_100589738()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_10147EA38 = (uint64_t)result;
  return result;
}

uint64_t sub_10058976C(uint64_t a1, uint64_t a2, char a3)
{
  Swift::String v5;
  uint64_t v6;
  _QWORD v8[2];
  _QWORD v9[2];

  if ((a3 & 1) != 0)
    __asm { BR              X10 }
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  v5._countAndFlagsBits = 0x5F6D6F74737563;
  v5._object = (void *)0xE700000000000000;
  String.append(_:)(v5);
  v8[0] = a1;
  v8[1] = a2;
  type metadata accessor for CGSize(0);
  _print_unlocked<A, B>(_:_:)(v8, v9, v6, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  return v9[0];
}

uint64_t sub_10058987C(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1005898B8 + 4 * byte_100EFA5E5[a1]))(0xD000000000000011, 0x8000000100FB56E0);
}

uint64_t sub_1005898B8()
{
  uint64_t v0;

  return v0 + 10;
}

unint64_t sub_1005898F0()
{
  return 0xD000000000000010;
}

uint64_t sub_10058990C()
{
  return 0x6D6F74737563;
}

uint64_t sub_100589920(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v31[13];
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  _QWORD v38[3];

  v36 = a4;
  v32 = a3;
  v37 = a2;
  v5 = sub_1004B804C(&qword_1013E4798);
  v34 = *(_QWORD *)(v5 - 8);
  v35 = v5;
  __chkstk_darwin(v5);
  v33 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_1013E47A0);
  v31[11] = *(_QWORD *)(v7 - 8);
  v31[12] = v7;
  __chkstk_darwin(v7);
  v31[10] = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C(&qword_1013E47A8);
  v31[8] = *(_QWORD *)(v9 - 8);
  v31[9] = v9;
  __chkstk_darwin(v9);
  v31[7] = (char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1004B804C(&qword_1013E47B0);
  v31[5] = *(_QWORD *)(v11 - 8);
  v31[6] = v11;
  __chkstk_darwin(v11);
  v31[4] = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1004B804C(&qword_1013E47B8);
  v31[2] = *(_QWORD *)(v13 - 8);
  v31[3] = v13;
  __chkstk_darwin(v13);
  v31[1] = (char *)v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1004B804C(&qword_1013E47C0);
  __chkstk_darwin(v15);
  v16 = sub_1004B804C(&qword_1013E47C8);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = a1[3];
  v20 = a1[4];
  sub_1004BB5A4(a1, v21);
  v22 = sub_1005A1708();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLBoardPreviewImageCache.ImageSizeClass.CodingKeys, &type metadata for CRLBoardPreviewImageCache.ImageSizeClass.CodingKeys, v22, v21, v20);
  if ((v36 & 1) != 0)
    __asm { BR              X9 }
  LOBYTE(v38[0]) = 5;
  v23 = sub_1005A174C();
  v24 = v33;
  KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for CRLBoardPreviewImageCache.ImageSizeClass.CustomCodingKeys, v38, v16, &type metadata for CRLBoardPreviewImageCache.ImageSizeClass.CustomCodingKeys, v23);
  v38[0] = v37;
  v38[1] = v32;
  type metadata accessor for CGSize(0);
  v26 = v25;
  v27 = sub_1004B7878(&qword_1013E47D0, (uint64_t (*)(uint64_t))type metadata accessor for CGSize, (uint64_t)&protocol conformance descriptor for CGSize);
  v28 = v35;
  KeyedEncodingContainer.encode<A>(_:forKey:)(v38, v29, v35, v26, v27);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v24, v28);
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v16);
}

Swift::Int sub_100589D88(Swift::UInt64 a1, Swift::UInt64 a2, char a3)
{
  Swift::UInt64 v6;
  Swift::UInt64 v7;
  _QWORD v9[9];

  Hasher.init(_seed:)(v9, 0);
  if ((a3 & 1) != 0)
  {
    a1 = qword_100EFB708[a1];
    a2 = a1;
  }
  if ((a1 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v6 = a1;
  else
    v6 = 0;
  Hasher._combine(_:)(v6);
  if ((a2 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v7 = a2;
  else
    v7 = 0;
  Hasher._combine(_:)(v7);
  return Hasher._finalize()();
}

Swift::Int sub_100589E04(Swift::UInt64 a1, Swift::UInt64 a2, char a3, double a4)
{
  Swift::UInt64 v8;
  Swift::UInt64 v9;
  Swift::UInt64 v10;
  _QWORD v12[9];

  Hasher.init(_seed:)(v12, 0);
  if ((a3 & 1) != 0)
  {
    a1 = qword_100EFB708[a1];
    a2 = a1;
  }
  if ((a1 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v8 = a1;
  else
    v8 = 0;
  Hasher._combine(_:)(v8);
  if ((a2 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v9 = a2;
  else
    v9 = 0;
  Hasher._combine(_:)(v9);
  if ((*(_QWORD *)&a4 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v10 = *(_QWORD *)&a4;
  else
    v10 = 0;
  Hasher._combine(_:)(v10);
  return Hasher._finalize()();
}

uint64_t sub_100589EA0()
{
  return 0;
}

uint64_t sub_100589EAC@<X0>(uint64_t a1@<X1>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease(a1);
  *a2 = 1;
  return result;
}

uint64_t sub_100589ED8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1005A17D4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100589F00(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1005A17D4();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100589F28(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1005A18A0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100589F50(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1005A18A0();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100589F78()
{
  unsigned __int8 *v0;

  return sub_10058987C(*v0);
}

uint64_t sub_100589F80@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_10059E6C4(a1, a2);
  *a3 = result;
  return result;
}

void sub_100589FA4(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_100589FB0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1005A1708();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100589FD8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1005A1708();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10058A00C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1005A174C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10058A034(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1005A174C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10058A05C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1005A1818();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10058A084(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1005A1818();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10058A0AC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1005A185C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10058A0D4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1005A185C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10058A0FC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1005A1790();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10058A124(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1005A1790();
  return CodingKey.debugDescription.getter(a1, v2);
}

BOOL sub_10058A14C(uint64_t a1, uint64_t a2)
{
  return sub_10059CBA4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_BYTE *)(a2 + 16));
}

Swift::Int sub_10058A168()
{
  uint64_t v0;

  return sub_100589D88(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

void sub_10058A174()
{
  uint64_t v0;
  Swift::UInt64 v1;
  Swift::UInt64 *v2;
  Swift::UInt64 v3;
  Swift::UInt64 v4;
  Swift::UInt64 v5;

  v1 = *(_QWORD *)v0;
  if (*(_BYTE *)(v0 + 16) == 1)
  {
    v2 = &qword_100EFB708[v1];
    v1 = *v2;
  }
  else
  {
    v2 = (Swift::UInt64 *)(v0 + 8);
  }
  v3 = *v2;
  if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v4 = v1;
  else
    v4 = 0;
  Hasher._combine(_:)(v4);
  if ((v3 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v5 = v3;
  else
    v5 = 0;
  Hasher._combine(_:)(v5);
}

Swift::Int sub_10058A1D8(uint64_t a1)
{
  uint64_t v1;
  Swift::UInt64 v2;
  Swift::UInt64 v3;
  int v4;
  Swift::UInt64 v5;
  Swift::UInt64 v6;
  _QWORD v8[9];

  v3 = *(_QWORD *)v1;
  v2 = *(_QWORD *)(v1 + 8);
  v4 = *(unsigned __int8 *)(v1 + 16);
  Hasher.init(_seed:)(v8, a1);
  if (v4 == 1)
  {
    v3 = qword_100EFB708[v3];
    v2 = v3;
  }
  if ((v3 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v5 = v3;
  else
    v5 = 0;
  Hasher._combine(_:)(v5);
  if ((v2 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v6 = v2;
  else
    v6 = 0;
  Hasher._combine(_:)(v6);
  return Hasher._finalize()();
}

_QWORD *sub_10058A250@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;
  char v6;

  result = sub_10059E90C(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = result;
    *(_QWORD *)(a2 + 8) = v5;
    *(_BYTE *)(a2 + 16) = v6 & 1;
  }
  return result;
}

uint64_t sub_10058A280(_QWORD *a1)
{
  uint64_t v1;

  return sub_100589920(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(unsigned __int8 *)(v1 + 16));
}

Swift::Int sub_10058A29C()
{
  uint64_t v0;

  return sub_100589E04(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16), *(double *)(v0 + 24));
}

void sub_10058A2B4()
{
  uint64_t v0;
  Swift::UInt64 v1;
  Swift::UInt64 v2;
  Swift::UInt64 *v3;
  Swift::UInt64 v4;
  Swift::UInt64 v5;
  Swift::UInt64 v6;
  Swift::UInt64 v7;

  v1 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 24);
  if (*(_BYTE *)(v0 + 16) == 1)
  {
    v3 = &qword_100EFB708[v1];
    v1 = *v3;
  }
  else
  {
    v3 = (Swift::UInt64 *)(v0 + 8);
  }
  v4 = *v3;
  if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v5 = v1;
  else
    v5 = 0;
  Hasher._combine(_:)(v5);
  if ((v4 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v6 = v4;
  else
    v6 = 0;
  Hasher._combine(_:)(v6);
  if ((v2 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v7 = v2;
  else
    v7 = 0;
  Hasher._combine(_:)(v7);
}

Swift::Int sub_10058A330(uint64_t a1)
{
  uint64_t v1;
  Swift::UInt64 v2;
  Swift::UInt64 v3;
  int v4;
  Swift::UInt64 v5;
  Swift::UInt64 v6;
  Swift::UInt64 v7;
  Swift::UInt64 v8;
  _QWORD v10[9];

  v3 = *(_QWORD *)v1;
  v2 = *(_QWORD *)(v1 + 8);
  v4 = *(unsigned __int8 *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  Hasher.init(_seed:)(v10, a1);
  if (v4 == 1)
  {
    v3 = qword_100EFB708[v3];
    v2 = v3;
  }
  if ((v3 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v6 = v3;
  else
    v6 = 0;
  Hasher._combine(_:)(v6);
  if ((v2 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v7 = v2;
  else
    v7 = 0;
  Hasher._combine(_:)(v7);
  if ((v5 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v8 = v5;
  else
    v8 = 0;
  Hasher._combine(_:)(v8);
  return Hasher._finalize()();
}

BOOL sub_10058A3C4(uint64_t a1, uint64_t a2)
{
  return sub_10059CB50(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_BYTE *)(a2 + 16), *(double *)(a1 + 24), *(double *)(a2 + 24));
}

uint64_t sub_10058A3F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t (*v16)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t);
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;

  v3 = type metadata accessor for UUID(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004B8460(v1, (uint64_t)v15, v16);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v15, v13);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1004B84E0((uint64_t)v15, (uint64_t)v9, type metadata accessor for CRLBoardIdentifier);
      v18 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      dispatch thunk of Hashable.hash(into:)(a1, v3, v18);
      v19 = &v9[*(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20)];
      v20 = *(_QWORD *)v19;
      v21 = *((_QWORD *)v19 + 1);
      swift_bridgeObjectRetain(v21);
      String.hash(into:)(a1, v20, v21);
      swift_bridgeObjectRelease(v21);
    }
    else
    {
      v24 = &v15[*(int *)(sub_1004B804C((uint64_t *)&unk_1013DE640) + 48)];
      sub_1004B84E0((uint64_t)v15, (uint64_t)v9, type metadata accessor for CRLBoardIdentifier);
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v24, v3);
      v25 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      dispatch thunk of Hashable.hash(into:)(a1, v3, v25);
      v26 = &v9[*(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20)];
      v27 = *(_QWORD *)v26;
      v28 = *((_QWORD *)v26 + 1);
      swift_bridgeObjectRetain(v28);
      String.hash(into:)(a1, v27, v28);
      swift_bridgeObjectRelease(v28);
      dispatch thunk of Hashable.hash(into:)(a1, v3, v25);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    }
    v22 = (uint64_t)v9;
    v23 = type metadata accessor for CRLBoardIdentifier;
  }
  else
  {
    sub_1004B84E0((uint64_t)v15, (uint64_t)v12, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    sub_100BCF9A8();
    v22 = (uint64_t)v12;
    v23 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
  }
  return sub_1004B84A4(v22, v23);
}

unint64_t sub_10058A6C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t (*v14)(_QWORD);
  int EnumCaseMultiPayload;
  Swift::String v16;
  void *object;
  unint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  Swift::String v21;
  void *v22;
  char *v23;
  uint64_t v24;
  Swift::String v25;
  void *v26;
  Swift::String v27;
  Swift::String v28;
  void *v29;
  __n128 v30;
  unint64_t v32;
  unint64_t v33;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004B8460(v0, (uint64_t)v13, v14);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v13, v11);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1004B84E0((uint64_t)v13, (uint64_t)v7, type metadata accessor for CRLBoardIdentifier);
      v32 = 0;
      v33 = 0xE000000000000000;
      _StringGuts.grow(_:)(20);
      swift_bridgeObjectRelease(v33);
      v32 = 0xD000000000000012;
      v33 = 0x8000000100FB5C70;
      v16._countAndFlagsBits = sub_10067AD38();
      object = v16._object;
      String.append(_:)(v16);
      swift_bridgeObjectRelease(object);
      v18 = v32;
    }
    else
    {
      v23 = &v13[*(int *)(sub_1004B804C((uint64_t *)&unk_1013DE640) + 48)];
      sub_1004B84E0((uint64_t)v13, (uint64_t)v7, type metadata accessor for CRLBoardIdentifier);
      (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v23, v1);
      v32 = 0;
      v33 = 0xE000000000000000;
      _StringGuts.grow(_:)(32);
      swift_bridgeObjectRelease(v33);
      v32 = 0xD000000000000012;
      v33 = 0x8000000100FB5C50;
      v24 = sub_1004B7878(&qword_1013E49E0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v25._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v1, v24);
      v26 = v25._object;
      String.append(_:)(v25);
      swift_bridgeObjectRelease(v26);
      v27._countAndFlagsBits = 0x72616F62206E6920;
      v27._object = (void *)0xEA00000000002064;
      String.append(_:)(v27);
      v28._countAndFlagsBits = sub_10067AD38();
      v29 = v28._object;
      String.append(_:)(v28);
      v30 = swift_bridgeObjectRelease(v29);
      v18 = v32;
      (*(void (**)(char *, uint64_t, __n128))(v2 + 8))(v4, v1, v30);
    }
    v19 = (uint64_t)v7;
    v20 = type metadata accessor for CRLBoardIdentifier;
  }
  else
  {
    sub_1004B84E0((uint64_t)v13, (uint64_t)v10, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    v32 = 0x203A7265646C6F46;
    v33 = 0xE800000000000000;
    sub_100BCAD68();
    v22 = v21._object;
    String.append(_:)(v21);
    swift_bridgeObjectRelease(v22);
    v18 = v32;
    v19 = (uint64_t)v10;
    v20 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
  }
  sub_1004B84A4(v19, v20);
  return v18;
}

uint64_t sub_10058A9F0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int EnumCaseMultiPayload;
  unint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(char *, uint64_t);
  char *v30;
  unint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t);
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD v82[5];
  char v83;

  v71 = sub_1004B804C(&qword_1013E4838);
  v63 = *(_QWORD *)(v71 - 8);
  __chkstk_darwin(v71);
  v73 = (char *)&v63 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = type metadata accessor for UUID(0);
  v70 = *(_QWORD *)(v72 - 8);
  __chkstk_darwin(v72);
  v75 = (char *)&v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = sub_1004B804C(&qword_1013E4840);
  v68 = *(_QWORD *)(v69 - 8);
  __chkstk_darwin(v69);
  v67 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v76);
  v74 = (uint64_t)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v63 - v7;
  v66 = sub_1004B804C(&qword_1013E4848);
  v65 = *(_QWORD *)(v66 - 8);
  __chkstk_darwin(v66);
  v10 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v64);
  v12 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = sub_1004B804C((uint64_t *)&unk_1013E4850);
  v77 = *(_QWORD *)(v81 - 8);
  __chkstk_darwin(v81);
  v17 = (char *)&v63 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a1[3];
  v19 = a1[4];
  sub_1004BB5A4(a1, v18);
  v20 = sub_1005A18E4();
  v79 = v17;
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLBoardPreviewImageCache.Item.CodingKeys, &type metadata for CRLBoardPreviewImageCache.Item.CodingKeys, v20, v18, v19);
  sub_1004B8460(v80, (uint64_t)v15, type metadata accessor for CRLBoardPreviewImageCache.Item);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v15, v13);
  if (!EnumCaseMultiPayload)
  {
    sub_1004B84E0((uint64_t)v15, (uint64_t)v12, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    LOBYTE(v82[0]) = 0;
    v31 = sub_1005A19B0();
    v24 = v81;
    v32 = v79;
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for CRLBoardPreviewImageCache.Item.FolderCodingKeys, v82, v81, &type metadata for CRLBoardPreviewImageCache.Item.FolderCodingKeys, v31);
    v33 = sub_1004B7878(&qword_1013E4870, type metadata accessor for CRLBoardLibraryViewModel.Folder, (uint64_t)&unk_100F2A780);
    v34 = v66;
    KeyedEncodingContainer.encode<A>(_:forKey:)(v12, v35, v66, v64, v33);
    (*(void (**)(char *, uint64_t))(v65 + 8))(v10, v34);
    v36 = (uint64_t)v12;
    v37 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
LABEL_7:
    sub_1004B84A4(v36, v37);
    v29 = *(uint64_t (**)(char *, uint64_t))(v77 + 8);
    v30 = v32;
    return v29(v30, v24);
  }
  if (EnumCaseMultiPayload != 1)
  {
    v38 = sub_1004B804C((uint64_t *)&unk_1013DE640);
    v39 = &v15[*(int *)(v38 + 48)];
    v40 = &v15[*(int *)(v38 + 64)];
    v41 = *(_QWORD *)v40;
    v42 = *((_QWORD *)v40 + 1);
    v43 = *((_QWORD *)v40 + 2);
    v44 = *((_QWORD *)v40 + 3);
    v45 = v74;
    sub_1004B84E0((uint64_t)v15, v74, type metadata accessor for CRLBoardIdentifier);
    v46 = v70;
    v47 = v72;
    (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v75, v39, v72);
    LOBYTE(v82[0]) = 2;
    v48 = sub_1005A1928();
    v49 = v73;
    v24 = v81;
    v32 = v79;
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for CRLBoardPreviewImageCache.Item.SceneCodingKeys, v82, v81, &type metadata for CRLBoardPreviewImageCache.Item.SceneCodingKeys, v48);
    LOBYTE(v82[0]) = 0;
    v50 = sub_1004B7878(&qword_1013DF830, type metadata accessor for CRLBoardIdentifier, (uint64_t)&unk_100F02134);
    v51 = v71;
    v52 = v78;
    KeyedEncodingContainer.encode<A>(_:forKey:)(v45, v82, v71, v76, v50);
    if (v52)
    {
      (*(void (**)(char *, uint64_t))(v63 + 8))(v49, v51);
      (*(void (**)(char *, uint64_t))(v46 + 8))(v75, v47);
      v37 = type metadata accessor for CRLBoardIdentifier;
      v36 = v45;
    }
    else
    {
      v54 = v46;
      LOBYTE(v82[0]) = 1;
      v55 = sub_1004B7878(&qword_1013E4860, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v56 = v75;
      v57 = v51;
      KeyedEncodingContainer.encode<A>(_:forKey:)(v75, v82, v51, v47, v55);
      v58 = v56;
      v82[0] = v41;
      v82[1] = v42;
      v82[2] = v43;
      v82[3] = v44;
      v83 = 2;
      type metadata accessor for CGRect(0);
      v60 = v59;
      v61 = sub_1004B7878(&qword_1013E4868, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, (uint64_t)&protocol conformance descriptor for CGRect);
      v62 = v73;
      KeyedEncodingContainer.encode<A>(_:forKey:)(v82, &v83, v57, v60, v61);
      v24 = v81;
      (*(void (**)(char *, uint64_t))(v63 + 8))(v62, v57);
      (*(void (**)(char *, uint64_t))(v54 + 8))(v58, v47);
      v37 = type metadata accessor for CRLBoardIdentifier;
      v36 = v74;
    }
    goto LABEL_7;
  }
  sub_1004B84E0((uint64_t)v15, (uint64_t)v8, type metadata accessor for CRLBoardIdentifier);
  LOBYTE(v82[0]) = 1;
  v22 = sub_1005A196C();
  v23 = v67;
  v24 = v81;
  v25 = v79;
  KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for CRLBoardPreviewImageCache.Item.BoardCodingKeys, v82, v81, &type metadata for CRLBoardPreviewImageCache.Item.BoardCodingKeys, v22);
  v26 = sub_1004B7878(&qword_1013DF830, type metadata accessor for CRLBoardIdentifier, (uint64_t)&unk_100F02134);
  v27 = v69;
  KeyedEncodingContainer.encode<A>(_:forKey:)(v8, v28, v69, v76, v26);
  (*(void (**)(char *, uint64_t))(v68 + 8))(v23, v27);
  sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLBoardIdentifier);
  v29 = *(uint64_t (**)(char *, uint64_t))(v77 + 8);
  v30 = v25;
  return v29(v30, v24);
}

uint64_t sub_10058B0C8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char *v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t *v37;
  uint64_t v38;
  __n128 v39;
  __n128 v40;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __n128 v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __n128 v70;
  char *v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  char *v86;
  _QWORD *v87;
  char *v88;
  char v89;
  char v90;
  char v91;
  char v92;
  char v93;
  char v94;

  v75 = a2;
  v81 = sub_1004B804C(&qword_1013E47D8);
  v76 = *(_QWORD *)(v81 - 8);
  __chkstk_darwin(v81);
  v86 = (char *)&v71 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1004B804C(&qword_1013E47E0);
  v5 = *(_QWORD *)(v4 - 8);
  v79 = v4;
  v80 = v5;
  __chkstk_darwin(v4);
  v82 = (char *)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_1013E47E8);
  v77 = *(_QWORD *)(v7 - 8);
  v78 = v7;
  __chkstk_darwin(v7);
  v84 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = sub_1004B804C(&qword_1013E47F0);
  v83 = *(_QWORD *)(v85 - 8);
  __chkstk_darwin(v85);
  v10 = (char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v71 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v71 - v18;
  __chkstk_darwin(v20);
  v22 = (char *)&v71 - v21;
  v23 = a1[3];
  v24 = a1[4];
  v87 = a1;
  sub_1004BB5A4(a1, v23);
  v25 = sub_1005A18E4();
  v26 = v88;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLBoardPreviewImageCache.Item.CodingKeys, &type metadata for CRLBoardPreviewImageCache.Item.CodingKeys, v25, v23, v24);
  if (v26)
    goto LABEL_7;
  v72 = v16;
  v73 = v13;
  v88 = v19;
  v27 = v86;
  v71 = v22;
  v74 = v11;
  v28 = v84;
  v29 = v85;
  v30 = KeyedDecodingContainer.allKeys.getter(v85);
  v31 = v30;
  if (*(_QWORD *)(v30 + 16) != 1)
  {
    v35 = type metadata accessor for DecodingError(0);
    swift_allocError(v35, &protocol witness table for DecodingError, 0, 0);
    v37 = v36;
    sub_1004B804C(&qword_1013DF800);
    *v37 = v74;
    v38 = KeyedDecodingContainer.codingPath.getter(v29);
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)(v38, 0xD00000000000002BLL, 0x8000000100FACD50, 0);
    v39.n128_f64[0] = (*(double (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v35 - 8) + 104))(v37, enum case for DecodingError.typeMismatch(_:), v35);
    swift_willThrow(v39);
    v40 = swift_bridgeObjectRelease(v31);
    (*(void (**)(char *, uint64_t, __n128))(v83 + 8))(v10, v29, v40);
LABEL_7:
    v59 = v87;
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v59);
  }
  if (*(_BYTE *)(v30 + 32))
  {
    if (*(_BYTE *)(v30 + 32) == 1)
    {
      v32 = v30;
      v90 = 1;
      v33 = sub_1005A196C();
      v34 = v82;
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for CRLBoardPreviewImageCache.Item.BoardCodingKeys, &v90, v29, &type metadata for CRLBoardPreviewImageCache.Item.BoardCodingKeys, v33);
      v53 = type metadata accessor for CRLBoardIdentifier(0);
      v54 = sub_1004B7878((unint64_t *)&unk_1013FE1B0, type metadata accessor for CRLBoardIdentifier, (uint64_t)&unk_100F0210C);
      v55 = (uint64_t)v72;
      v56 = v79;
      KeyedDecodingContainer.decode<A>(_:forKey:)(v53, v57, v79, v53, v54);
      (*(void (**)(char *, uint64_t))(v80 + 8))(v34, v56);
      v58 = swift_bridgeObjectRelease(v32);
      (*(void (**)(char *, uint64_t, __n128))(v83 + 8))(v10, v29, v58);
      v59 = v87;
      swift_storeEnumTagMultiPayload(v55, v74, 1);
      v60 = v55;
    }
    else
    {
      v94 = 2;
      v48 = sub_1005A1928();
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for CRLBoardPreviewImageCache.Item.SceneCodingKeys, &v94, v29, &type metadata for CRLBoardPreviewImageCache.Item.SceneCodingKeys, v48);
      v49 = v31;
      v50 = type metadata accessor for CRLBoardIdentifier(0);
      v93 = 0;
      v51 = sub_1004B7878((unint64_t *)&unk_1013FE1B0, type metadata accessor for CRLBoardIdentifier, (uint64_t)&unk_100F0210C);
      v52 = v81;
      KeyedDecodingContainer.decode<A>(_:forKey:)(v50, &v93, v81, v50, v51);
      sub_1004B804C((uint64_t *)&unk_1013DE640);
      v63 = v27;
      v64 = type metadata accessor for UUID(0);
      v92 = 1;
      v65 = sub_1004B7878(&qword_1013E4810, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      KeyedDecodingContainer.decode<A>(_:forKey:)(v64, &v92, v52, v64, v65);
      v88 = v10;
      type metadata accessor for CGRect(0);
      v67 = v66;
      v91 = 2;
      v68 = sub_1004B7878(&qword_1013E4818, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, (uint64_t)&protocol conformance descriptor for CGRect);
      KeyedDecodingContainer.decode<A>(_:forKey:)(v67, &v91, v52, v67, v68);
      v69 = v83;
      (*(void (**)(char *, uint64_t))(v76 + 8))(v63, v52);
      v70 = swift_bridgeObjectRelease(v49);
      (*(void (**)(char *, uint64_t, __n128))(v69 + 8))(v88, v29, v70);
      v60 = (uint64_t)v73;
      swift_storeEnumTagMultiPayload(v73, v74, 2);
      v59 = v87;
    }
  }
  else
  {
    v89 = 0;
    v42 = sub_1005A19B0();
    KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for CRLBoardPreviewImageCache.Item.FolderCodingKeys, &v89, v29, &type metadata for CRLBoardPreviewImageCache.Item.FolderCodingKeys, v42);
    v43 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
    v44 = sub_1004B7878(&qword_1013E4830, type metadata accessor for CRLBoardLibraryViewModel.Folder, (uint64_t)&unk_100F2A7A8);
    v60 = (uint64_t)v88;
    v45 = v78;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v43, v46, v78, v43, v44);
    (*(void (**)(char *, uint64_t))(v77 + 8))(v28, v45);
    v47 = swift_bridgeObjectRelease(v31);
    (*(void (**)(char *, uint64_t, __n128))(v83 + 8))(v10, v29, v47);
    v59 = v87;
    swift_storeEnumTagMultiPayload(v60, v74, 0);
  }
  v61 = v75;
  v62 = (uint64_t)v71;
  sub_1004B84E0(v60, (uint64_t)v71, type metadata accessor for CRLBoardPreviewImageCache.Item);
  sub_1004B84E0(v62, v61, type metadata accessor for CRLBoardPreviewImageCache.Item);
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v59);
}

uint64_t sub_10058B850()
{
  return 0x6564496472616F62;
}

uint64_t sub_10058B874@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v6;
  uint64_t result;
  char v8;

  if (a1 == 0x6564496472616F62 && a2 == 0xEF7265696669746ELL)
  {
    result = swift_bridgeObjectRelease(0xEF7265696669746ELL);
    v8 = 0;
  }
  else
  {
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6564496472616F62, 0xEF7265696669746ELL, a1, a2, 0);
    result = swift_bridgeObjectRelease(a2);
    v8 = v6 ^ 1;
  }
  *a3 = v8 & 1;
  return result;
}

uint64_t sub_10058B92C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1005A196C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10058B954(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1005A196C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10058B97C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6472616F62;
  if (*v0 != 1)
    v1 = 0x656E656373;
  if (*v0)
    return v1;
  else
    return 0x7265646C6F66;
}

uint64_t sub_10058B9CC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_10059EFE0(a1, a2);
  *a3 = result;
  return result;
}

void sub_10058B9F0(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_10058B9FC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1005A18E4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10058BA24(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1005A18E4();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10058BA4C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1005A19B0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10058BA74(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1005A19B0();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10058BA9C()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x4449656E656373;
  if (*v0 != 1)
    v1 = 0xD000000000000011;
  if (*v0)
    return v1;
  else
    return 0x6564496472616F62;
}

uint64_t sub_10058BB08@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_10059F11C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10058BB2C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1005A1928();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10058BB54(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1005A1928();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10058BB7C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10058B0C8(a1, a2);
}

uint64_t sub_10058BB90(_QWORD *a1)
{
  return sub_10058A9F0(a1);
}

Swift::Int sub_10058BBA4()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  sub_10058A3F0((uint64_t)v1);
  return Hasher._finalize()();
}

Swift::Int sub_10058BBE4(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  sub_10058A3F0((uint64_t)v2);
  return Hasher._finalize()();
}

BOOL sub_10058BC20(uint64_t a1)
{
  uint64_t v1;
  uint64_t ObjectType;
  char *v4;
  double v5;
  double v6;
  char *v8;
  _BYTE v9[24];
  uint64_t v10;

  ObjectType = swift_getObjectType(v1);
  sub_1004CB7BC(a1, (uint64_t)v9, &qword_1013E0230);
  if (v10)
  {
    if ((swift_dynamicCast(&v8, v9, (char *)&type metadata for Any + 8, ObjectType, 6) & 1) != 0)
    {
      v4 = v8;
      if (sub_10059CBF0(v1 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_item, (uint64_t)&v8[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_item])&& sub_10059CBA4(*(_QWORD *)(v1 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass), *(_QWORD *)(v1 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass + 8), *(_BYTE *)(v1 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass + 16), *(_QWORD *)&v4[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass], *(_QWORD *)&v4[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass + 8], v4[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass + 16]))
      {
        v5 = *(double *)(v1 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_contentsScale);
        v6 = *(double *)&v4[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_contentsScale];

        return v5 == v6;
      }

    }
  }
  else
  {
    sub_1004CB800((uint64_t)v9, &qword_1013E0230);
  }
  return 0;
}

Swift::Int sub_10058BDCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int EnumCaseMultiPayload;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t);
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  Swift::UInt64 v27;
  Swift::UInt64 *v28;
  Swift::UInt64 v29;
  Swift::UInt64 v30;
  Swift::UInt64 v31;
  Swift::UInt64 v32;
  uint64_t v34;
  _OWORD v35[4];
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;

  v1 = v0;
  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  Hasher.init()(v35);
  sub_1004B8460(v1 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_item, (uint64_t)v14, type metadata accessor for CRLBoardPreviewImageCache.Item);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v14, v12);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1004B84E0((uint64_t)v14, (uint64_t)v8, type metadata accessor for CRLBoardIdentifier);
      v16 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      dispatch thunk of Hashable.hash(into:)(v35, v2, v16);
      v17 = &v8[*(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20)];
      v18 = *(_QWORD *)v17;
      v19 = *((_QWORD *)v17 + 1);
      swift_bridgeObjectRetain(v19);
      String.hash(into:)(v35, v18, v19);
      swift_bridgeObjectRelease(v19);
    }
    else
    {
      v22 = &v14[*(int *)(sub_1004B804C((uint64_t *)&unk_1013DE640) + 48)];
      sub_1004B84E0((uint64_t)v14, (uint64_t)v8, type metadata accessor for CRLBoardIdentifier);
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v22, v2);
      v23 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      dispatch thunk of Hashable.hash(into:)(v35, v2, v23);
      v24 = &v8[*(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20)];
      v25 = *(_QWORD *)v24;
      v26 = *((_QWORD *)v24 + 1);
      swift_bridgeObjectRetain(v26);
      String.hash(into:)(v35, v25, v26);
      swift_bridgeObjectRelease(v26);
      dispatch thunk of Hashable.hash(into:)(v35, v2, v23);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
    v20 = (uint64_t)v8;
    v21 = type metadata accessor for CRLBoardIdentifier;
  }
  else
  {
    sub_1004B84E0((uint64_t)v14, (uint64_t)v11, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    sub_100BCF9A8();
    v20 = (uint64_t)v11;
    v21 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
  }
  sub_1004B84A4(v20, v21);
  v27 = *(_QWORD *)(v1 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass);
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass + 16) == 1)
  {
    v28 = &qword_100EFB708[v27];
    v27 = *v28;
  }
  else
  {
    v28 = (Swift::UInt64 *)(v1 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass + 8);
  }
  v29 = *v28;
  if ((v27 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v30 = v27;
  else
    v30 = 0;
  Hasher._combine(_:)(v30);
  if ((v29 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v31 = v29;
  else
    v31 = 0;
  Hasher._combine(_:)(v31);
  if ((*(_QWORD *)(v1 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_contentsScale) & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v32 = *(_QWORD *)(v1 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_contentsScale);
  else
    v32 = 0;
  Hasher._combine(_:)(v32);
  v39 = v35[2];
  v40 = v35[3];
  v41 = v36;
  v37 = v35[0];
  v38 = v35[1];
  return Hasher.finalize()();
}

uint64_t sub_10058C19C()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  uint64_t v3;
  uint64_t v4;
  Swift::String v5;
  char v6;
  Swift::String v7;
  Swift::String v8;
  void *object;
  Swift::String v10;
  __int128 v12;
  char v13;
  _QWORD v14[2];

  v1 = v0;
  v14[0] = 0;
  v14[1] = 0xE000000000000000;
  v2._countAndFlagsBits = 60;
  v2._object = (void *)0xE100000000000000;
  String.append(_:)(v2);
  v3 = v0 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_item;
  v4 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  _print_unlocked<A, B>(_:_:)(v3, v14, v4, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v5._countAndFlagsBits = 32;
  v5._object = (void *)0xE100000000000000;
  String.append(_:)(v5);
  v6 = *(_BYTE *)(v1 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass + 16);
  v12 = *(_OWORD *)(v1 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass);
  v13 = v6;
  _print_unlocked<A, B>(_:_:)(&v12, v14, &type metadata for CRLBoardPreviewImageCache.ImageSizeClass, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v7._countAndFlagsBits = 32;
  v7._object = (void *)0xE100000000000000;
  String.append(_:)(v7);
  v8._countAndFlagsBits = Double.description.getter(*(double *)(v1
                                                              + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_contentsScale));
  object = v8._object;
  String.append(_:)(v8);
  swift_bridgeObjectRelease(object);
  v10._countAndFlagsBits = 62;
  v10._object = (void *)0xE100000000000000;
  String.append(_:)(v10);
  return v14[0];
}

uint64_t sub_10058C2AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t (*v15)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  void *v26;
  Swift::String v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t);
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  Swift::String v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  void *v47;
  Swift::String v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  Swift::String v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  void *v60;
  Swift::String v61;
  __n128 v62;
  double v63;
  Swift::String v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  void *v69;
  Swift::String v70;
  uint64_t v71;
  Swift::String v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  void *v77;
  Swift::String v78;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;

  v1 = v0;
  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v80 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004B8460(v1 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_item, (uint64_t)v14, v15);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v14, v12);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v17 = sub_1004B84E0((uint64_t)v14, (uint64_t)v8, type metadata accessor for CRLBoardIdentifier);
      v18 = UUID.uuidString.getter(v17);
      v20 = v19;
      v84 = v18;
      v85 = v19;
      swift_bridgeObjectRetain(v19);
      v21._countAndFlagsBits = 58;
      v21._object = (void *)0xE100000000000000;
      String.append(_:)(v21);
      swift_bridgeObjectRelease(v20);
      v22 = v84;
      v23 = v85;
      v24 = (uint64_t *)&v8[*(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20)];
      v25 = *v24;
      v26 = (void *)v24[1];
      v84 = v22;
      v85 = v23;
      swift_bridgeObjectRetain(v23);
      v27._countAndFlagsBits = v25;
      v27._object = v26;
      String.append(_:)(v27);
      swift_bridgeObjectRelease(v23);
      v28 = v85;
      v82 = 58;
      v83 = 0xE100000000000000;
      v80 = 35;
      v81 = 0xE100000000000000;
      v29 = sub_1004D292C();
      v30 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)(&v82, &v80, 0, 0, 0, 1, &type metadata for String, &type metadata for String, &type metadata for String, v29, v29, v29);
      v32 = v31;
      swift_bridgeObjectRelease(v28);
    }
    else
    {
      v37 = &v14[*(int *)(sub_1004B804C((uint64_t *)&unk_1013DE640) + 48)];
      sub_1004B84E0((uint64_t)v14, (uint64_t)v8, type metadata accessor for CRLBoardIdentifier);
      v38 = (*(uint64_t (**)(char *, char *, uint64_t))(v3 + 32))(v5, v37, v2);
      v39 = UUID.uuidString.getter(v38);
      v41 = v40;
      v84 = v39;
      v85 = v40;
      swift_bridgeObjectRetain(v40);
      v42._countAndFlagsBits = 58;
      v42._object = (void *)0xE100000000000000;
      String.append(_:)(v42);
      swift_bridgeObjectRelease(v41);
      v43 = v84;
      v44 = v85;
      v45 = (uint64_t *)&v8[*(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20)];
      v46 = *v45;
      v47 = (void *)v45[1];
      v84 = v43;
      v85 = v44;
      swift_bridgeObjectRetain(v44);
      v48._countAndFlagsBits = v46;
      v48._object = v47;
      String.append(_:)(v48);
      swift_bridgeObjectRelease(v44);
      v49 = v85;
      v82 = 58;
      v83 = 0xE100000000000000;
      v80 = 35;
      v81 = 0xE100000000000000;
      v50 = sub_1004D292C();
      v51 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)(&v82, &v80, 0, 0, 0, 1, &type metadata for String, &type metadata for String, &type metadata for String, v50, v50, v50);
      v53 = v52;
      swift_bridgeObjectRelease(v49);
      v84 = v51;
      v85 = v53;
      swift_bridgeObjectRetain(v53);
      v54._countAndFlagsBits = 35;
      v54._object = (void *)0xE100000000000000;
      String.append(_:)(v54);
      swift_bridgeObjectRelease(v53);
      v55 = v84;
      v56 = v85;
      v58 = UUID.uuidString.getter(v57);
      v60 = v59;
      v84 = v55;
      v85 = v56;
      swift_bridgeObjectRetain(v56);
      v61._countAndFlagsBits = v58;
      v61._object = v60;
      String.append(_:)(v61);
      swift_bridgeObjectRelease(v60);
      v62 = swift_bridgeObjectRelease(v56);
      v30 = v84;
      v32 = v85;
      (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v62);
    }
    v33 = (uint64_t)v8;
    v34 = type metadata accessor for CRLBoardIdentifier;
  }
  else
  {
    sub_1004B84E0((uint64_t)v14, (uint64_t)v11, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    sub_100BCAD68();
    v30 = v35;
    v32 = v36;
    v33 = (uint64_t)v11;
    v34 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
  }
  sub_1004B84A4(v33, v34);
  v63 = sub_1003C65B0(*(double *)(v1 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_contentsScale), 0.01);
  v84 = v30;
  v85 = v32;
  swift_bridgeObjectRetain(v32);
  v64._countAndFlagsBits = 95;
  v64._object = (void *)0xE100000000000000;
  String.append(_:)(v64);
  swift_bridgeObjectRelease(v32);
  v65 = v84;
  v66 = v85;
  v67 = sub_10058976C(*(_QWORD *)(v1 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass), *(_QWORD *)(v1 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass + 8), *(_BYTE *)(v1 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass + 16));
  v69 = v68;
  v84 = v65;
  v85 = v66;
  swift_bridgeObjectRetain(v66);
  v70._countAndFlagsBits = v67;
  v70._object = v69;
  String.append(_:)(v70);
  swift_bridgeObjectRelease(v69);
  swift_bridgeObjectRelease(v66);
  v71 = v85;
  swift_bridgeObjectRetain(v85);
  v72._countAndFlagsBits = 95;
  v72._object = (void *)0xE100000000000000;
  String.append(_:)(v72);
  swift_bridgeObjectRelease(v71);
  v74 = v84;
  v73 = v85;
  v75 = Double.description.getter(v63);
  v77 = v76;
  v84 = v74;
  v85 = v73;
  swift_bridgeObjectRetain(v73);
  v78._countAndFlagsBits = v75;
  v78._object = v77;
  String.append(_:)(v78);
  swift_bridgeObjectRelease(v77);
  swift_bridgeObjectRelease(v73);
  return v84;
}

void sub_10058C7C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  NSURL *v6;
  void *v7;
  void *v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;

  v1 = v0;
  v2 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
  URL._bridgeToObjectiveC()(v6);
  v8 = v7;
  v9 = objc_msgSend(v5, "crl_directoryExistsAt:", v7);

  if (v9)
  {
    v10 = v1 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_item;
    sub_1004B8460(v1 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_item, (uint64_t)v4, type metadata accessor for CRLBoardPreviewImageCache.Item);
    if (swift_getEnumCaseMultiPayload(v4, v2) == 1)
    {
      sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLBoardIdentifier);
      v11 = sub_10058C2AC();
      v13 = v12;
      URL.appendingPathComponent(_:isDirectory:)(v11, v12, 0);
      swift_bridgeObjectRelease(v13);
      return;
    }
    sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLBoardPreviewImageCache.Item);
    v20 = type metadata accessor for CRLBoardPreviewImageCache.CacheError(0);
    v21 = sub_1004B7878(&qword_1013E45E8, type metadata accessor for CRLBoardPreviewImageCache.CacheError, (uint64_t)&unk_100EFB580);
    swift_allocError(v20, v21, 0, 0);
    v23 = v22;
    sub_1004B8460(v10, v22, type metadata accessor for CRLBoardPreviewImageCache.Item);
    v17 = v23;
    v18 = v20;
    v19 = 0;
  }
  else
  {
    v14 = type metadata accessor for CRLBoardPreviewImageCache.CacheError(0);
    v15 = sub_1004B7878(&qword_1013E45E8, type metadata accessor for CRLBoardPreviewImageCache.CacheError, (uint64_t)&unk_100EFB580);
    swift_allocError(v14, v15, 0, 0);
    v17 = v16;
    v18 = v14;
    v19 = 4;
  }
  swift_storeEnumTagMultiPayload(v17, v18, v19);
  swift_willThrow(v24);
}

uint64_t sub_10058C9D4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_10083C034(*a1, *a2);
}

Swift::Int sub_10058C9E0()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[9];

  v1 = *v0;
  Hasher.init(_seed:)(v7, 0);
  v2 = 0xE900000000000073;
  v3 = 0x73616C43657A6973;
  if (v1 != 1)
  {
    v3 = 0x73746E65746E6F63;
    v2 = 0xED0000656C616353;
  }
  if (v1)
    v4 = v3;
  else
    v4 = 1835365481;
  if (v1)
    v5 = v2;
  else
    v5 = 0xE400000000000000;
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

uint64_t sub_10058CA88(uint64_t a1)
{
  _BYTE *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v2 = 0xE900000000000073;
  v3 = 0x73616C43657A6973;
  if (*v1 != 1)
  {
    v3 = 0x73746E65746E6F63;
    v2 = 0xED0000656C616353;
  }
  if (*v1)
    v4 = v3;
  else
    v4 = 1835365481;
  if (*v1)
    v5 = v2;
  else
    v5 = 0xE400000000000000;
  String.hash(into:)(a1, v4, v5);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_10058CB0C(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD v8[9];

  v2 = *v1;
  Hasher.init(_seed:)(v8, a1);
  v3 = 0xE900000000000073;
  v4 = 0x73616C43657A6973;
  if (v2 != 1)
  {
    v4 = 0x73746E65746E6F63;
    v3 = 0xED0000656C616353;
  }
  if (v2)
    v5 = v4;
  else
    v5 = 1835365481;
  if (v2)
    v6 = v3;
  else
    v6 = 0xE400000000000000;
  String.hash(into:)(v8, v5, v6);
  swift_bridgeObjectRelease(v6);
  return Hasher._finalize()();
}

unint64_t sub_10058CBB0@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_10059F290(*a1);
  *a2 = result;
  return result;
}

void sub_10058CBDC(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE400000000000000;
  v4 = 0xE900000000000073;
  v5 = 0x73616C43657A6973;
  if (v2 != 1)
  {
    v5 = 0x73746E65746E6F63;
    v4 = 0xED0000656C616353;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 1835365481;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_10058CC44()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x73616C43657A6973;
  if (*v0 != 1)
    v1 = 0x73746E65746E6F63;
  if (*v0)
    return v1;
  else
    return 1835365481;
}

unint64_t sub_10058CCA8@<X0>(Swift::String a1@<X1:X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_10059F290(a1);
  *a2 = result;
  return result;
}

uint64_t sub_10058CCCC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1005A163C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10058CCF4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1005A163C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10058CD1C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v19;
  char v20;
  __int128 v21;
  char v22;

  v3 = v1;
  v5 = sub_1004B804C(&qword_1013E46F8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_1005A163C();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLBoardPreviewImageCache.LookupKey.CodingKeys, &type metadata for CRLBoardPreviewImageCache.LookupKey.CodingKeys, v11, v9, v10);
  v12 = v3 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_item;
  LOBYTE(v21) = 0;
  v13 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  v14 = sub_1004B7878(&qword_1013E4700, type metadata accessor for CRLBoardPreviewImageCache.Item, (uint64_t)&unk_100EFA758);
  KeyedEncodingContainer.encode<A>(_:forKey:)(v12, &v21, v5, v13, v14);
  if (!v2)
  {
    v15 = *(_BYTE *)(v3 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass + 16);
    v21 = *(_OWORD *)(v3 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass);
    v22 = v15;
    v20 = 1;
    v16 = sub_1005A16C4();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v21, &v20, v5, &type metadata for CRLBoardPreviewImageCache.ImageSizeClass, v16);
    *(_QWORD *)&v21 = *(_QWORD *)(v3 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_contentsScale);
    v20 = 2;
    v17 = sub_100587B04();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v21, &v20, v5, &type metadata for CGFloat, v17);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10058CEE0(_QWORD *a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v18;
  char v19;
  char *v20;
  unint64_t v21;
  objc_class *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t ObjectType;
  objc_super v28;
  __int128 v29;
  char v30;
  char v31;

  v3 = v1;
  ObjectType = swift_getObjectType(v3);
  v5 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  __chkstk_darwin(v5);
  v24 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_1004B804C(&qword_1013E46D0);
  v7 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a1[3];
  v11 = a1[4];
  v26 = a1;
  sub_1004BB5A4(a1, v10);
  v12 = sub_1005A163C();
  v13 = v3;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLBoardPreviewImageCache.LookupKey.CodingKeys, &type metadata for CRLBoardPreviewImageCache.LookupKey.CodingKeys, v12, v10, v11);
  if (v2)
  {
    v23 = ObjectType;
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v26);

    swift_deallocPartialClassInstance(v13, v23, *(unsigned int *)((swift_isaMask & *v13) + 0x30), *(unsigned __int16 *)((swift_isaMask & *v13) + 0x34));
  }
  else
  {
    LOBYTE(v29) = 0;
    v14 = sub_1004B7878(&qword_1013E46E0, type metadata accessor for CRLBoardPreviewImageCache.Item, (uint64_t)&unk_100EFA780);
    v16 = (uint64_t)v24;
    v15 = v25;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v5, &v29, v25, v5, v14);
    sub_1004B84E0(v16, (uint64_t)v13 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_item, type metadata accessor for CRLBoardPreviewImageCache.Item);
    v31 = 1;
    v18 = sub_1005A1680();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for CRLBoardPreviewImageCache.ImageSizeClass, &v31, v15, &type metadata for CRLBoardPreviewImageCache.ImageSizeClass, v18);
    v19 = v30;
    v20 = (char *)v13 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass;
    *(_OWORD *)v20 = v29;
    v20[16] = v19;
    v31 = 2;
    v21 = sub_100587A7C();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for CGFloat, &v31, v15, &type metadata for CGFloat, v21);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v15);
    v22 = (objc_class *)ObjectType;
    *(_QWORD *)((char *)v13 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_contentsScale) = v29;

    v28.receiver = v13;
    v28.super_class = v22;
    v23 = (uint64_t)objc_msgSendSuper2(&v28, "init");
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v26);
  }
  return v23;
}

uint64_t sub_10058D228@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  objc_class *v2;
  uint64_t v3;
  id v6;
  uint64_t result;

  v6 = objc_allocWithZone(v2);
  result = sub_10058CEE0(a1);
  if (!v3)
    *a2 = result;
  return result;
}

uint64_t sub_10058D274(_QWORD *a1)
{
  return sub_10058CD1C(a1);
}

uint64_t sub_10058D294(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  unsigned __int8 v12;
  _QWORD v14[2];

  swift_defaultActor_initialize(v2, a2);
  *(_QWORD *)(v2 + 120) = 0;
  *(_BYTE *)(v2 + 128) = 0x80;
  v6 = type metadata accessor for JSONDecoder(0);
  swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
  v7 = JSONDecoder.init()();
  v8 = sub_1005A15F8();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)(v14, &type metadata for CRLBoardPreviewImageCache.CacheEntrySnapshot, a1, a2, &type metadata for CRLBoardPreviewImageCache.CacheEntrySnapshot, v8);
  if (v3)
  {
    swift_release(v7);
    sub_10059BC90(*(void **)(v2 + 120), *(_BYTE *)(v2 + 128));
    v9 = type metadata accessor for CRLBoardPreviewImageCache.CacheEntry();
    swift_defaultActor_destroy(v2);
    sub_1004BBBC8(a1, a2);
    swift_deallocPartialClassInstance(v2, v9, 129, 15);
  }
  else
  {
    sub_1004BBBC8(a1, a2);
    swift_release(v7);
    v10 = v14[1];
    v11 = *(void **)(v2 + 120);
    *(_QWORD *)(v2 + 112) = v14[0];
    *(_QWORD *)(v2 + 120) = v10;
    v12 = *(_BYTE *)(v2 + 128);
    *(_BYTE *)(v2 + 128) = 64;
    sub_10059BC90(v11, v12);
  }
  return v2;
}

uint64_t sub_10058D3BC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[16] = a1;
  v2[17] = v1;
  v3 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  v2[18] = v3;
  v4 = (*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[19] = swift_task_alloc(v4);
  v2[20] = swift_task_alloc(v4);
  v5 = type metadata accessor for URL(0);
  v2[21] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[22] = v6;
  v2[23] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10058D450, v1, 0);
}

uint64_t sub_10058D450()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t inited;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;

  if (qword_1013DD750 != -1)
    swift_once(&qword_1013DD750, sub_100A02540);
  v1 = *(_QWORD *)(v0 + 136);
  swift_beginAccess(&static OS_os_log.crlBoardPreviewImageCache, v0 + 88, 0, 0);
  v2 = (void *)static OS_os_log.crlBoardPreviewImageCache;
  v3 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v3, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v5 = *(void **)(v1 + 112);
  *(_QWORD *)(v0 + 192) = v5;
  v6 = v2;
  v7 = sub_10058C19C();
  v9 = v8;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v7;
  *(_QWORD *)(inited + 40) = v9;
  v11 = static os_log_type_t.default.getter(v10);
  sub_100A06EBC((uint64_t)v6, &_mh_execute_header, v11, "Saving asset in file storage: %@", 32, 2, inited);
  swift_setDeallocating(inited);
  v12 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v12);

  sub_10058C7C0();
  v14 = *(_QWORD *)(v0 + 152);
  v13 = *(_QWORD *)(v0 + 160);
  v15 = *(_QWORD *)(v0 + 144);
  v16 = (uint64_t)v5 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_item;
  sub_1004B8460((uint64_t)v5 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_item, v13, type metadata accessor for CRLBoardPreviewImageCache.Item);
  sub_1004B8460(v13, v14, type metadata accessor for CRLBoardPreviewImageCache.Item);
  if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
  {
    v17 = *(_QWORD *)(v0 + 160);
    sub_1004B84A4(*(_QWORD *)(v0 + 152), type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4(v17, type metadata accessor for CRLBoardPreviewImageCache.Item);
    v18 = dword_1013E43AC;
    v19 = v5;
    v20 = (_QWORD *)swift_task_alloc(v18);
    *(_QWORD *)(v0 + 200) = v20;
    *v20 = v0;
    v20[1] = sub_10058D744;
    v21 = *(_QWORD *)(v0 + 136);
    v20[4] = v21;
    return swift_task_switch(sub_10058D990, v21, 0);
  }
  else
  {
    v24 = *(_QWORD *)(v0 + 176);
    v23 = *(_QWORD *)(v0 + 184);
    v25 = *(_QWORD *)(v0 + 160);
    v26 = *(_QWORD *)(v0 + 168);
    sub_1004B84A4(*(_QWORD *)(v0 + 152), type metadata accessor for CRLBoardPreviewImageCache.Item);
    sub_1004B84A4(v25, type metadata accessor for CRLBoardPreviewImageCache.Item);
    v27 = type metadata accessor for CRLBoardPreviewImageCache.CacheError(0);
    v28 = sub_1004B7878(&qword_1013E45E8, type metadata accessor for CRLBoardPreviewImageCache.CacheError, (uint64_t)&unk_100EFB580);
    swift_allocError(v27, v28, 0, 0);
    v30 = v29;
    sub_1004B8460(v16, v29, type metadata accessor for CRLBoardPreviewImageCache.Item);
    swift_storeEnumTagMultiPayload(v30, v27, 0);
    swift_willThrow(v31);
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v26);
    v32 = *(_QWORD *)(v0 + 152);
    v33 = *(_QWORD *)(v0 + 160);
    swift_task_dealloc(*(_QWORD *)(v0 + 184));
    swift_task_dealloc(v33);
    swift_task_dealloc(v32);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10058D744(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  void *v5;

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 200);
  v3[26] = a1;
  v3[27] = v1;
  swift_task_dealloc(v4);
  if (v1)
    v5 = sub_10058D90C;
  else
    v5 = sub_10058D7B0;
  return swift_task_switch(v5, v3[17], 0);
}

uint64_t sub_10058D7B0(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  unint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;

  v2 = *(_QWORD *)(v1 + 208);
  v3 = *(_QWORD *)(v1 + 216);
  v4 = *(_QWORD *)(v1 + 192);
  v5 = type metadata accessor for JSONEncoder(0, a1);
  swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  v6 = JSONEncoder.init()();
  *(_QWORD *)(v1 + 112) = v4;
  *(_QWORD *)(v1 + 120) = v2;
  v7 = sub_1005A2010();
  v8 = dispatch thunk of JSONEncoder.encode<A>(_:)(v1 + 112, &type metadata for CRLBoardPreviewImageCache.CacheEntrySnapshot, v7);
  v10 = *(_QWORD *)(v1 + 184);
  if (v3)
  {
    v11 = *(void **)(v1 + 208);
    v12 = *(void **)(v1 + 192);
    v13 = *(_QWORD *)(v1 + 168);
    v14 = *(_QWORD *)(v1 + 176);
    swift_errorRelease(v3);

    v15 = swift_release(v6);
    (*(void (**)(uint64_t, uint64_t, __n128))(v14 + 8))(v10, v13, v15);
  }
  else
  {
    v16 = v8;
    v17 = v9;
    swift_release(v6);
    Data.write(to:options:)(v10, 0, v16, v17);
    v18 = *(void **)(v1 + 208);
    v19 = *(void **)(v1 + 192);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 176) + 8))(*(_QWORD *)(v1 + 184), *(_QWORD *)(v1 + 168));
    sub_1004BBBC8(v16, v17);

  }
  v20 = *(_QWORD *)(v1 + 152);
  v21 = *(_QWORD *)(v1 + 160);
  swift_task_dealloc(*(_QWORD *)(v1 + 184));
  swift_task_dealloc(v21);
  swift_task_dealloc(v20);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_10058D90C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 176);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v5 = *(_QWORD *)(v0 + 152);
  v4 = *(_QWORD *)(v0 + 160);
  swift_task_dealloc(*(_QWORD *)(v0 + 184));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10058D978()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = v0;
  return swift_task_switch(sub_10058D990, v0, 0);
}

uint64_t sub_10058D990()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  unsigned int v3;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(void **)(v1 + 120);
  *(_QWORD *)(v0 + 40) = v2;
  v3 = *(unsigned __int8 *)(v1 + 128);
  *(_BYTE *)(v0 + 25) = v3;
  if (v3 >> 6)
  {
    if (v3 >> 6 == 1)
    {
      if ((v3 & 1) == 0)
      {
        sub_10059BC74(v2, 0);
        return (*(uint64_t (**)(void *))(v0 + 8))(v2);
      }
      sub_10059BC74(v2, 1);
    }
    else
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"image", 5, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardPreviewImageCache.swift", 101, 2, 358, "The cache entry is still in the .ready state", 44, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"image", 5, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardPreviewImageCache.swift", 101, 2u, 358, (uint64_t)"The cache entry is still in the .ready state", 44, 2u);
      v9 = type metadata accessor for CRLBoardPreviewImageCache.CacheError(0);
      v10 = sub_1004B7878(&qword_1013E45E8, type metadata accessor for CRLBoardPreviewImageCache.CacheError, (uint64_t)&unk_100EFB580);
      swift_allocError(v9, v10, 0, 0);
      swift_storeEnumTagMultiPayload(v11, v9, 3);
    }
    swift_willThrow(v12);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v5 = async function pointer to Task.result.getter[1];
    swift_retain(v2);
    v6 = (_QWORD *)swift_task_alloc(v5);
    *(_QWORD *)(v0 + 48) = v6;
    v7 = sub_1004B8930(0, (unint64_t *)&qword_1013E45F0, off_1012298E8);
    v8 = sub_1004B804C(&qword_1013E0210);
    *v6 = v0;
    v6[1] = sub_10058DBAC;
    return Task.result.getter(v0 + 16, v2, v7, v8, &protocol self-conformance witness table for Error);
  }
}

uint64_t sub_10058DBAC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 32);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 48));
  return swift_task_switch(sub_10058DC04, v1, 0);
}

uint64_t sub_10058DC04(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;
  void *v4;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_BYTE *)(v1 + 25);
  v4 = *(void **)(v1 + 40);
  if ((*(_BYTE *)(v1 + 24) & 1) != 0)
  {
    swift_willThrow(a1);
    sub_10059BC90(v4, v3);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
  else
  {
    sub_10059BC90(*(void **)(v1 + 40), *(_BYTE *)(v1 + 25));
    return (*(uint64_t (**)(uint64_t))(v1 + 8))(v2);
  }
}

uint64_t sub_10058DC94()
{
  uint64_t v0;

  sub_10059BC90(*(void **)(v0 + 120), *(_BYTE *)(v0 + 128));
  swift_defaultActor_destroy(v0);
  return swift_defaultActor_deallocate(v0);
}

uint64_t sub_10058DCC4(char *a1, char *a2)
{
  return sub_10083C15C(*a1, *a2);
}

Swift::Int sub_10058DCD0()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5, 0);
  if (v1)
    v2 = 0x49656C6261646F63;
  else
    v2 = 0x654B70756B6F6F6CLL;
  if (v1)
    v3 = 0xEC0000006567616DLL;
  else
    v3 = 0xE900000000000079;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_10058DD5C(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0x49656C6261646F63;
  else
    v2 = 0x654B70756B6F6F6CLL;
  if (*v1)
    v3 = 0xEC0000006567616DLL;
  else
    v3 = 0xE900000000000079;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_10058DDC4(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD v6[9];

  v2 = *v1;
  Hasher.init(_seed:)(v6, a1);
  if (v2)
    v3 = 0x49656C6261646F63;
  else
    v3 = 0x654B70756B6F6F6CLL;
  if (v2)
    v4 = 0xEC0000006567616DLL;
  else
    v4 = 0xE900000000000079;
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

uint64_t sub_10058DE4C@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;
  char v7;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_101264950, v3);
  result = swift_bridgeObjectRelease(v4);
  if (v5 == 1)
    v7 = 1;
  else
    v7 = 2;
  if (!v5)
    v7 = 0;
  *a2 = v7;
  return result;
}

void sub_10058DEA8(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x654B70756B6F6F6CLL;
  if (*v1)
    v2 = 0x49656C6261646F63;
  v3 = 0xE900000000000079;
  if (*v1)
    v3 = 0xEC0000006567616DLL;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_10058DEF4()
{
  _BYTE *v0;

  if (*v0)
    return 0x49656C6261646F63;
  else
    return 0x654B70756B6F6F6CLL;
}

uint64_t sub_10058DF3C@<X0>(Swift::String string@<0:X0, 8:X1>, char *a2@<X8>)
{
  void *object;
  Swift::String v3;
  Swift::Int v5;
  uint64_t result;
  char v7;

  object = string._object;
  v3._countAndFlagsBits = string._countAndFlagsBits;
  v3._object = object;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_101264950, v3);
  result = swift_bridgeObjectRelease(object);
  if (v5 == 1)
    v7 = 1;
  else
    v7 = 2;
  if (!v5)
    v7 = 0;
  *a2 = v7;
  return result;
}

uint64_t sub_10058DF9C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1005A4448();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10058DFC4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1005A4448();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_10058DFEC(_QWORD *a1, void *a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD v18[2];
  uint64_t v19;
  char v20;
  id v21;

  v6 = sub_1004B804C(&qword_1013E4BE0);
  v19 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_1005A4448();
  v12 = a3;
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLBoardPreviewImageCache.CacheEntrySnapshot.CodingKeys, &type metadata for CRLBoardPreviewImageCache.CacheEntrySnapshot.CodingKeys, v11, v9, v10);
  v21 = a2;
  v20 = 0;
  v13 = type metadata accessor for CRLBoardPreviewImageCache.LookupKey(0);
  v14 = sub_1004B7878(&qword_1013E4BE8, type metadata accessor for CRLBoardPreviewImageCache.LookupKey, (uint64_t)&unk_100EFA8F0);
  v15 = a2;
  v16 = v18[1];
  KeyedEncodingContainer.encode<A>(_:forKey:)(&v21, &v20, v6, v13, v14);

  if (v16)
  {

    (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v6);
  }
  else
  {
    v21 = v12;
    v20 = 1;
    v17 = sub_1005A44D0();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v21, &v20, v6, &type metadata for CRLCodableImage, v17);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v6);

  }
}

id sub_10058E19C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  id result;
  uint64_t v5;

  result = sub_10059F2D8(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

void sub_10058E1C4(_QWORD *a1)
{
  void **v1;

  sub_10058DFEC(a1, *v1, v1[1]);
}

id sub_10058E1DC()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(CRLColor), "whiteColor");
  qword_10147EA40 = (uint64_t)result;
  return result;
}

double sub_10058E214(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t Strong;
  double result;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _BYTE v23[24];

  v4 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v4);
  v6 = &v23[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = *a1;
  a2 += 16;
  swift_beginAccess(a2, v23, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v10 = (void *)Strong;
    v11 = sub_100BBFEF0(v7);
    v13 = v12;
    v15 = v14;
    if (*(_QWORD *)(v12 + 16))
    {
      v16 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v6, 1, 1, v16);
      type metadata accessor for MainActor(0);
      v17 = v10;
      swift_bridgeObjectRetain(v13);
      v19 = static MainActor.shared.getter(v18);
      v20 = (_QWORD *)swift_allocObject(&unk_10126DFA8, 48, 7);
      v20[2] = v19;
      v20[3] = &protocol witness table for MainActor;
      v20[4] = v17;
      v20[5] = v13;
      v21 = sub_100521B98((uint64_t)v6, (uint64_t)&unk_1013E4990, (uint64_t)v20);
      swift_release(v21);
    }

    swift_bridgeObjectRelease(v15);
    swift_bridgeObjectRelease(v13);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v11).n128_u64[0];
  }
  return result;
}

double sub_10058E374(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  double result;
  void *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[3];
  _BYTE v14[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = sub_1005A03F8();
    if (v6)
    {
      v10 = v6;
      v11 = v7;
      v12 = v8;
      if (!v6[2] && !*(_QWORD *)(v7 + 16) && !*(_QWORD *)(v8 + 16))
      {

        swift_bridgeObjectRelease(v12);
        swift_bridgeObjectRelease(v11);
        *(_QWORD *)&result = swift_bridgeObjectRelease(v10).n128_u64[0];
        return result;
      }
      v13[0] = v6;
      v13[1] = v7;
      v13[2] = v8;
      PassthroughSubject.send(_:)(v13, v9);
      swift_bridgeObjectRelease(v12);
      swift_bridgeObjectRelease(v11);
      swift_bridgeObjectRelease(v10);
    }

  }
  return result;
}

void sub_10058E458(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t Strong;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t inited;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  _QWORD v29[3];
  _BYTE v30[72];
  _BYTE v31[24];
  _BYTE v32[24];

  v3 = sub_1004B804C(&qword_1013E0270);
  __chkstk_darwin(v3);
  v5 = (char *)v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CRLBoardIdentifier(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v32, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v11 = (void *)Strong;
    v12 = sub_1005A03F8();
    if (v12)
    {
      v15 = v12;
      v16 = v13;
      v17 = v14;
      sub_1008580C4(v13, (uint64_t)v5);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
      {

        swift_bridgeObjectRelease(v17);
        swift_bridgeObjectRelease(v16);
        swift_bridgeObjectRelease(v15);
        sub_1004CB800((uint64_t)v5, &qword_1013E0270);
        return;
      }
      sub_1004B84E0((uint64_t)v5, (uint64_t)v9, type metadata accessor for CRLBoardIdentifier);
      if (qword_1013DD750 != -1)
        swift_once(&qword_1013DD750, sub_100A02540);
      swift_beginAccess(&static OS_os_log.crlBoardPreviewImageCache, v31, 0, 0);
      v18 = (void *)static OS_os_log.crlBoardPreviewImageCache;
      v19 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v19, v30);
      *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
      v21 = v18;
      v22 = UUID.uuidString.getter(v21);
      v24 = v23;
      *(_QWORD *)(inited + 56) = &type metadata for String;
      *(_QWORD *)(inited + 64) = sub_1004CFC2C();
      *(_QWORD *)(inited + 32) = v22;
      *(_QWORD *)(inited + 40) = v24;
      v26 = static os_log_type_t.default.getter(v25);
      sub_100A06EBC((uint64_t)v21, &_mh_execute_header, v26, "Received asset download notification for board UUID: %@", 55, 2, inited);
      swift_setDeallocating(inited);
      v27 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(inited + 32, 1, v27);

      v29[0] = v15;
      v29[1] = v16;
      v29[2] = v17;
      PassthroughSubject.send(_:)(v29, v28);
      sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLBoardIdentifier);
      swift_bridgeObjectRelease(v17);
      swift_bridgeObjectRelease(v16);
      swift_bridgeObjectRelease(v15);
    }

  }
}

void sub_10058E6FC(unint64_t a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  uint64_t inited;
  id v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  _BYTE v12[24];

  if (qword_1013DD750 != -1)
    swift_once(&qword_1013DD750, sub_100A02540);
  swift_beginAccess(&static OS_os_log.crlBoardPreviewImageCache, v12, 0, 0);
  v3 = (void *)static OS_os_log.crlBoardPreviewImageCache;
  v4 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v4, &v11);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_QWORD *)(inited + 56) = &type metadata for Int;
  *(_QWORD *)(inited + 64) = &protocol witness table for Int;
  *(_QWORD *)(inited + 32) = a1;
  v6 = v3;
  v8 = static os_log_type_t.default.getter(v7);
  sub_100A06EBC((uint64_t)v6, &_mh_execute_header, v8, "Thermal state updated to: %d", 28, 2, inited);
  swift_setDeallocating(inited);
  v9 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v9);

  v10 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_isPaused);
  if (a1 > 1)
  {
    *(_BYTE *)(v1 + OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_isPaused) = 1;
    if ((v10 & 1) == 0)
      dispatch_suspend(*(dispatch_object_t *)(v1 + OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_imagerTargetQueue));
  }
  else
  {
    *(_BYTE *)(v1 + OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_isPaused) = 0;
    if (v10)
      dispatch_resume(*(dispatch_object_t *)(v1 + OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_imagerTargetQueue));
  }
}

void sub_10058E860(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  id v5;
  id v6;
  _BYTE v7[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = objc_msgSend((id)objc_opt_self(NSProcessInfo), "processInfo");
    v6 = objc_msgSend(v5, "thermalState");

    sub_10058E6FC((unint64_t)v6);
  }
}

uint64_t sub_10058E8F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 64) = a4;
  *(_QWORD *)(v5 + 72) = a5;
  return swift_task_switch(sub_10058E90C, 0, 0);
}

uint64_t sub_10058E90C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v7;

  v1 = v0[8] + 16;
  swift_beginAccess(v1, v0 + 2, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  v0[10] = Strong;
  if (Strong)
  {
    v3 = type metadata accessor for MainActor(0);
    v0[11] = static MainActor.shared.getter(v3);
    v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
    return swift_task_switch(sub_10058E9D4, v4, v5);
  }
  else
  {
    v7 = (_QWORD *)swift_task_alloc(dword_10140E23C);
    v0[12] = v7;
    *v7 = v0;
    v7[1] = sub_10058EA2C;
    return sub_100CA0CFC();
  }
}

uint64_t sub_10058E9D4()
{
  _QWORD *v0;
  void *v1;
  _QWORD *v2;

  v1 = (void *)v0[10];
  swift_release(v0[11]);
  sub_10058EB58();

  v2 = (_QWORD *)swift_task_alloc(dword_10140E23C);
  v0[12] = v2;
  *v2 = v0;
  v2[1] = sub_10058EA2C;
  return sub_100CA0CFC();
}

uint64_t sub_10058EA2C()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 96));
  return swift_task_switch(sub_10058EA80, 0, 0);
}

uint64_t sub_10058EA80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 64) + 16;
  swift_beginAccess(v1, v0 + 40, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  *(_QWORD *)(v0 + 104) = Strong;
  if (!Strong)
    return (*(uint64_t (**)(void))(v0 + 8))();
  v3 = (_QWORD *)swift_task_alloc(dword_1013E45E4);
  *(_QWORD *)(v0 + 112) = v3;
  *v3 = v0;
  v3[1] = sub_10058EB0C;
  return sub_10058EDBC(0);
}

uint64_t sub_10058EB0C()
{
  uint64_t *v0;
  void *v1;
  uint64_t v3;

  v1 = *(void **)(*v0 + 104);
  v3 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 112));

  return (*(uint64_t (**)(void))(v3 + 8))();
}

void sub_10058EB58()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  char *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  _QWORD *v10;
  void *v11;
  _QWORD *v12;
  id v13;
  id v14;
  uint64_t v15;
  _QWORD v16[5];
  _QWORD *v17;

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_boardLibrary];
  v2 = swift_allocObject(&unk_10126DF08, 24, 7);
  *(_QWORD *)(v2 + 16) = v0;
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_didStartUpdating) == 1)
  {
    v3 = v0;
    sub_100599080((uint64_t)v3);

    swift_release(v2);
  }
  else
  {
    v4 = (void *)objc_opt_self(NSNotificationCenter);
    v5 = v0;
    v6 = objc_msgSend(v4, "defaultCenter");
    v7 = swift_allocObject(&unk_10126DF30, 24, 7);
    *(_QWORD *)(v7 + 16) = 0;
    if (qword_1013DDD68 != -1)
      swift_once(&qword_1013DDD68, sub_100BC0B9C);
    v8 = qword_101480E38;
    v9 = objc_msgSend((id)objc_opt_self(NSOperationQueue), "mainQueue");
    v10 = (_QWORD *)swift_allocObject(&unk_10126DF58, 48, 7);
    v10[2] = v7;
    v10[3] = v6;
    v10[4] = sub_1005A1ADC;
    v10[5] = v2;
    v16[4] = sub_1005A1B3C;
    v17 = v10;
    v16[0] = _NSConcreteStackBlock;
    v16[1] = *(_QWORD *)"";
    v16[2] = sub_100568280;
    v16[3] = &unk_10126DF70;
    v11 = _Block_copy(v16);
    v12 = v17;
    swift_retain(v7);
    v13 = v6;
    swift_retain(v2);
    v14 = objc_msgSend(v13, "addObserverForName:object:queue:usingBlock:", v8, v1, v9, v11, swift_release(v12).n128_f64[0]);

    _Block_release(v11);
    swift_beginAccess(v7 + 16, v16, 1, 0);
    v15 = *(_QWORD *)(v7 + 16);
    *(_QWORD *)(v7 + 16) = v14;

    swift_release(v2);
    swift_release(v7);
    swift_unknownObjectRelease(v15);
  }
}

uint64_t sub_10058EDBC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2[2] = a1;
  v2[3] = v1;
  v3 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v2[4] = v3;
  v2[5] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRLBoardIdentifier(0);
  v2[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C(&qword_1013E4660);
  v2[7] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  v2[8] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[9] = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[10] = swift_task_alloc(v8);
  v2[11] = swift_task_alloc(v8);
  v9 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  v2[12] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MainActor(0);
  v2[13] = v10;
  v2[14] = static MainActor.shared.getter(v10);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v10, &protocol witness table for MainActor);
  v2[15] = v11;
  v2[16] = v12;
  return swift_task_switch(sub_10058EEEC, v11, v12);
}

uint64_t sub_10058EEEC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[13];
  v1[17] = *(_QWORD *)(v1[3] + OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_boardLibrary);
  v1[18] = static MainActor.shared.getter(a1);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[19] = v3;
  v1[20] = v4;
  return swift_task_switch(sub_10058EF60, v3, v4);
}

uint64_t sub_10058EF60(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v1[17];
  v1[21] = static MainActor.shared.getter(a1);
  v3 = swift_task_alloc(32);
  v1[22] = v3;
  *(_QWORD *)(v3 + 16) = v2;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  v1[23] = v4;
  *v4 = v1;
  v4[1] = sub_10058F014;
  return withCheckedContinuation<A>(isolation:function:_:)();
}

uint64_t sub_10058F014()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 176);
  v3 = *(_QWORD *)(*v0 + 168);
  swift_task_dealloc(*(_QWORD *)(*v0 + 184));
  swift_release(v3);
  swift_task_dealloc(v2);
  return swift_task_switch(sub_10058F07C, *(_QWORD *)(v1 + 152), *(_QWORD *)(v1 + 160));
}

uint64_t sub_10058F07C()
{
  _QWORD *v0;

  swift_release(v0[18]);
  return swift_task_switch(sub_10058F0B4, v0[15], v0[16]);
}

void sub_10058F0B4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;

  v1 = v0[2];
  if (v1)
  {
    swift_bridgeObjectRetain(v0[2]);
LABEL_29:
    v0[24] = v1;
    v38 = v0[3];
    v0[25] = static MainActor.shared.getter(v2);
    v39 = (_QWORD *)swift_task_alloc(48);
    v0[26] = v39;
    v39[2] = v1;
    v39[3] = v38;
    v39[4] = 0x4000000000000000;
    v40 = (_QWORD *)swift_task_alloc(async function pointer to withThrowingTaskGroup<A, B>(of:returning:isolation:body:)[1]);
    v0[27] = v40;
    *v40 = v0;
    v40[1] = sub_10058F520;
    withThrowingTaskGroup<A, B>(of:returning:isolation:body:)();
    return;
  }
  v3 = v0[12];
  v4 = *(_QWORD *)(v0[17] + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_storeHierarchySnapshot);
  v5 = sub_1004B804C(&qword_1013E1790);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v3, 1, 5, v5);
  v6 = swift_task_alloc(32);
  *(_QWORD *)(v6 + 16) = v3;
  swift_bridgeObjectRetain(v4);
  sub_1007C2808(1, (uint64_t (*)(id))sub_1005A1254, v6, v4);
  v8 = v7;
  swift_bridgeObjectRelease(v4);
  swift_task_dealloc(v6);
  sub_1004B84A4(v3, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  if (v8)
  {
    v9 = objc_msgSend(v8, "children");

    v10 = type metadata accessor for CRLBoardLibraryViewModelItemNode(0);
    v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v9, v10);

    if (!((unint64_t)v11 >> 62))
      goto LABEL_5;
  }
  else
  {
    v11 = (uint64_t)_swiftEmptyArrayStorage;
    if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
    {
LABEL_5:
      v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v11);
      if (v12)
        goto LABEL_6;
LABEL_27:
      v15 = _swiftEmptyArrayStorage;
LABEL_28:
      swift_bridgeObjectRelease_n(v11, 2);
      v1 = sub_100AF80B8((uint64_t)v15);
      swift_bridgeObjectRelease(v15);
      goto LABEL_29;
    }
  }
  if (v11 < 0)
    v37 = v11;
  else
    v37 = v11 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v11);
  v12 = _CocoaArrayWrapper.endIndex.getter(v37);
  if (!v12)
    goto LABEL_27;
LABEL_6:
  if (v12 >= 1)
  {
    v13 = 0;
    v14 = v0[9];
    v43 = v11 & 0xC000000000000001;
    v41 = v0[5] + 8;
    v15 = _swiftEmptyArrayStorage;
    do
    {
      if (v43)
        v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v13, v11);
      else
        v16 = *(id *)(v11 + 8 * v13 + 32);
      v17 = v16;
      v18 = v0[4];
      v19 = v0[5];
      sub_1004B8460((uint64_t)v16 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item, v19, type metadata accessor for CRLBoardLibraryViewModel.Item);
      if (swift_getEnumCaseMultiPayload(v19, v18) == 2)
      {
        v20 = v0[7];
        v42 = v0[8];
        v21 = v14;
        v22 = v15;
        v23 = v12;
        v24 = v11;
        v26 = v0[5];
        v25 = v0[6];
        v27 = sub_1004B804C((uint64_t *)&unk_1013EA630);
        swift_bridgeObjectRelease(*(_QWORD *)(v41 + *(int *)(v27 + 48)));
        v28 = v26;
        v11 = v24;
        v12 = v23;
        v15 = v22;
        v14 = v21;
        sub_1004B84E0(v28, v25, type metadata accessor for CRLBoardIdentifier);
        sub_1004B84E0(v25, v20, type metadata accessor for CRLBoardIdentifier);
        swift_storeEnumTagMultiPayload(v20, v42, 1);
        v29 = 0;
      }
      else
      {
        sub_1004B84A4(v0[5], type metadata accessor for CRLBoardLibraryViewModel.Item);
        v29 = 1;
      }
      v31 = v0[7];
      v30 = v0[8];
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(v31, v29, 1, v30);

      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v31, 1, v30) == 1)
      {
        sub_1004CB800(v0[7], &qword_1013E4660);
      }
      else
      {
        v33 = v0[10];
        v32 = v0[11];
        sub_1004B84E0(v0[7], v32, type metadata accessor for CRLBoardPreviewImageCache.Item);
        sub_1004B84E0(v32, v33, type metadata accessor for CRLBoardPreviewImageCache.Item);
        if ((swift_isUniquelyReferenced_nonNull_native(v15) & 1) == 0)
          v15 = (_QWORD *)sub_100D104AC(0, v15[2] + 1, 1, (unint64_t)v15);
        v35 = v15[2];
        v34 = v15[3];
        if (v35 >= v34 >> 1)
          v15 = (_QWORD *)sub_100D104AC(v34 > 1, v35 + 1, 1, (unint64_t)v15);
        v36 = v0[10];
        v15[2] = v35 + 1;
        sub_1004B84E0(v36, (uint64_t)v15+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(_QWORD *)(v14 + 72) * v35, type metadata accessor for CRLBoardPreviewImageCache.Item);
      }
      ++v13;
    }
    while (v12 != v13);
    goto LABEL_28;
  }
  __break(1u);
}

uint64_t sub_10058F520()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 208);
  v4 = *(_QWORD *)(*v0 + 192);
  v3 = *(_QWORD *)(*v0 + 200);
  swift_task_dealloc(*(_QWORD *)(*v0 + 216));
  swift_bridgeObjectRelease(v4);
  swift_release(v3);
  swift_task_dealloc(v2);
  return swift_task_switch(sub_10058F590, *(_QWORD *)(v1 + 120), *(_QWORD *)(v1 + 128));
}

uint64_t sub_10058F590()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 56);
  v6 = *(_QWORD *)(v0 + 40);
  swift_release(*(_QWORD *)(v0 + 112));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10058F610()
{
  char *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  objc_class *v27;
  uint64_t *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  objc_super v32;
  char v33[24];
  _QWORD v34[5];

  v1 = (uint64_t *)&v0[OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_subscriptionSet];
  swift_beginAccess(&v0[OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_subscriptionSet], v33, 1, 0);
  v2 = *v1;
  v28 = v1;
  v29 = v0;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    if (v2 < 0)
      v3 = *v1;
    else
      v3 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v4 = __CocoaSet.makeIterator()(v3);
    v5 = type metadata accessor for AnyCancellable(0);
    v6 = sub_1004B7878(&qword_1013E4A10, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
    v7 = Set.Iterator.init(_cocoa:)(v34, v4, v5, v6);
    v2 = v34[0];
    v8 = v34[1];
    v9 = v34[2];
    v10 = v34[3];
    v11 = v34[4];
  }
  else
  {
    v12 = -1 << *(_BYTE *)(v2 + 32);
    v8 = v2 + 56;
    v9 = ~v12;
    v13 = -v12;
    if (v13 < 64)
      v14 = ~(-1 << v13);
    else
      v14 = -1;
    v11 = v14 & *(_QWORD *)(v2 + 56);
    swift_bridgeObjectRetain(v2);
    v10 = 0;
  }
  v15 = (unint64_t)(v9 + 64) >> 6;
  if (v2 < 0)
    goto LABEL_13;
  while (1)
  {
    if (v11)
    {
      v16 = (v11 - 1) & v11;
      v17 = __clz(__rbit64(v11)) | (v10 << 6);
      v18 = v10;
      goto LABEL_30;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
      break;
    if (v23 >= v15)
      goto LABEL_33;
    v24 = *(_QWORD *)(v8 + 8 * v23);
    v18 = v10 + 1;
    if (!v24)
    {
      v18 = v10 + 2;
      if (v10 + 2 >= v15)
        goto LABEL_33;
      v24 = *(_QWORD *)(v8 + 8 * v18);
      if (!v24)
      {
        v18 = v10 + 3;
        if (v10 + 3 >= v15)
          goto LABEL_33;
        v24 = *(_QWORD *)(v8 + 8 * v18);
        if (!v24)
        {
          v18 = v10 + 4;
          if (v10 + 4 >= v15)
            goto LABEL_33;
          v24 = *(_QWORD *)(v8 + 8 * v18);
          if (!v24)
          {
            v25 = v10 + 5;
            while (v15 != v25)
            {
              v24 = *(_QWORD *)(v8 + 8 * v25++);
              if (v24)
              {
                v18 = v25 - 1;
                goto LABEL_29;
              }
            }
LABEL_33:
            sub_1004D284C(v2);
            v26 = *v28;
            *v28 = (uint64_t)&_swiftEmptySetSingleton;
            swift_bridgeObjectRelease(v26);
            v27 = (objc_class *)type metadata accessor for CRLBoardPreviewImageCache();
            v32.receiver = v29;
            v32.super_class = v27;
            objc_msgSendSuper2(&v32, "dealloc");
            return;
          }
        }
      }
    }
LABEL_29:
    v16 = (v24 - 1) & v24;
    v17 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_30:
    v22 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v17);
    swift_retain(v22);
    if (!v22)
      goto LABEL_33;
    while (1)
    {
      AnyCancellable.cancel()();
      swift_release(v22);
      v10 = v18;
      v11 = v16;
      if ((v2 & 0x8000000000000000) == 0)
        break;
LABEL_13:
      v19 = __CocoaSet.Iterator.next()(v7);
      if (v19)
      {
        v20 = v19;
        v30 = v19;
        v21 = type metadata accessor for AnyCancellable(0);
        swift_unknownObjectRetain(v20);
        swift_dynamicCast(&v31, &v30, (char *)&type metadata for Swift.AnyObject + 8, v21, 7);
        v22 = v31;
        swift_unknownObjectRelease(v20);
        v18 = v10;
        v16 = v11;
        if (v22)
          continue;
      }
      goto LABEL_33;
    }
  }
  __break(1u);
}

uint64_t sub_10058F998(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2[27] = a1;
  v2[28] = v1;
  v3 = sub_1004B804C(&qword_1013E04D0);
  v2[29] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for URL(0);
  v2[30] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[31] = v5;
  v2[32] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MainActor(0);
  v2[33] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v2[34] = v7;
  v2[35] = v8;
  return swift_task_switch(sub_10058FA50, v7, v8);
}

uint64_t sub_10058FA50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v7;

  v1 = *(_QWORD *)(v0 + 240);
  v2 = *(_QWORD *)(v0 + 248);
  v3 = *(_QWORD *)(v0 + 232);
  sub_10058FDB4(v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    v4 = *(_QWORD *)(v0 + 232);
    swift_release(*(_QWORD *)(v0 + 264));
    sub_1004CB800(v4, &qword_1013E04D0);
    v5 = *(_QWORD *)(v0 + 232);
    swift_task_dealloc(*(_QWORD *)(v0 + 256));
    swift_task_dealloc(v5);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 248) + 32))(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 240));
    v7 = (_QWORD *)swift_task_alloc(dword_1013E43A4);
    *(_QWORD *)(v0 + 288) = v7;
    *v7 = v0;
    v7[1] = sub_10058FB2C;
    return sub_10058D3BC(*(_QWORD *)(v0 + 256));
  }
}

uint64_t sub_10058FB2C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 288);
  *(_QWORD *)(*v1 + 296) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_10058FBE0;
  else
    v4 = sub_10058FB8C;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 272), *(_QWORD *)(v2 + 280));
}

uint64_t sub_10058FB8C()
{
  uint64_t v0;
  uint64_t v1;

  swift_release(*(_QWORD *)(v0 + 264));
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 248) + 8))(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 240));
  v1 = *(_QWORD *)(v0 + 232);
  swift_task_dealloc(*(_QWORD *)(v0 + 256));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10058FBE0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  swift_release(*(_QWORD *)(v0 + 264));
  if (qword_1013DD750 != -1)
    swift_once(&qword_1013DD750, sub_100A02540);
  v1 = *(_QWORD *)(v0 + 296);
  swift_beginAccess(&static OS_os_log.crlBoardPreviewImageCache, v0 + 128, 0, 0);
  v2 = (void *)static OS_os_log.crlBoardPreviewImageCache;
  v3 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v3, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  swift_getErrorValue(v1, v0 + 200, v0 + 152);
  v5 = *(_QWORD *)(v0 + 160);
  v6 = *(_QWORD *)(v0 + 168);
  v7 = v2;
  v8 = Error.publicDescription.getter(v5, v6);
  v10 = v9;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v11 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v11;
  *(_QWORD *)(inited + 32) = v8;
  *(_QWORD *)(inited + 40) = v10;
  swift_getErrorValue(v1, v0 + 208, v0 + 176);
  v12 = Error.fullDescription.getter(*(_QWORD *)(v0 + 184));
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v11;
  *(_QWORD *)(inited + 72) = v12;
  *(_QWORD *)(inited + 80) = v13;
  v14 = static os_log_type_t.error.getter(v12);
  sub_100A06EBC((uint64_t)v7, &_mh_execute_header, v14, "Error saving board preview image. %{public}@ <%@>", 49, 2, inited);
  swift_setDeallocating(inited);
  v15 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 2, v15);

  swift_errorRelease(v1);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 248) + 8))(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 240));
  v16 = *(_QWORD *)(v0 + 232);
  swift_task_dealloc(*(_QWORD *)(v0 + 256));
  swift_task_dealloc(v16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10058FDB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  NSURL *v15;
  void *v16;
  void *v17;
  unsigned __int8 v18;
  id v19;
  uint64_t v20;
  __n128 v21;
  id v22;
  NSURL *v23;
  void *v24;
  void *v25;
  unsigned int v26;
  id v27;
  void (*v28)(char *, uint64_t);
  id v29;
  uint64_t v30;
  id v31;
  __n128 v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  void *v35;
  uint64_t v36;
  uint64_t inited;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  _BYTE v52[8];
  uint64_t v53;
  _BYTE v54[8];
  _BYTE v55[8];
  uint64_t v56;
  uint64_t v57;
  _BYTE v58[16];
  _BYTE v59[112];
  id v60[3];

  v2 = type metadata accessor for URL(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v50 - v7;
  v9 = (void *)objc_opt_self(NSFileManager);
  v10 = objc_msgSend(v9, "defaultManager");
  v60[0] = 0;
  v11 = objc_msgSend(v10, "URLForDirectory:inDomain:appropriateForURL:create:error:", 13, 1, 0, 1, v60);

  v12 = v60[0];
  if (v11)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v11);
    v13 = v12;

    URL.appendingPathComponent(_:isDirectory:)(0xD000000000000012, 0x8000000100FB5D40, 1);
    v14 = objc_msgSend(v9, "defaultManager");
    URL._bridgeToObjectiveC()(v15);
    v17 = v16;
    v18 = objc_msgSend(v14, "crl_directoryExistsAt:", v16);

    if ((v18 & 1) != 0)
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
LABEL_7:
      (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(a1, v5, v2);
      v30 = 0;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(a1, v30, 1, v2);
    }
    v22 = objc_msgSend(v9, "defaultManager");
    URL._bridgeToObjectiveC()(v23);
    v25 = v24;
    v60[0] = 0;
    v26 = objc_msgSend(v22, "createDirectoryAtURL:withIntermediateDirectories:attributes:error:", v24, 0, 0, v60);

    v27 = v60[0];
    if (v26)
    {
      v28 = *(void (**)(char *, uint64_t))(v3 + 8);
      v29 = v60[0];
      v28(v8, v2);
      goto LABEL_7;
    }
    v31 = v60[0];
    v20 = _convertNSErrorToError(_:)(v27);

    swift_willThrow(v32);
    v33 = a1;
    v34 = *(void (**)(char *, uint64_t))(v3 + 8);
    v34(v5, v2);
    v34(v8, v2);
    a1 = v33;
  }
  else
  {
    v19 = v60[0];
    v20 = _convertNSErrorToError(_:)(v12);

    swift_willThrow(v21);
  }
  v51 = a1;
  if (qword_1013DD750 != -1)
    swift_once(&qword_1013DD750, sub_100A02540);
  swift_beginAccess(&static OS_os_log.crlBoardPreviewImageCache, v60, 0, 0);
  v35 = (void *)static OS_os_log.crlBoardPreviewImageCache;
  v36 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v36, v59);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  swift_getErrorValue(v20, v58, v55);
  v38 = v56;
  v39 = v57;
  v40 = v35;
  v41 = Error.publicDescription.getter(v38, v39);
  v43 = v42;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v44 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v44;
  *(_QWORD *)(inited + 32) = v41;
  *(_QWORD *)(inited + 40) = v43;
  swift_getErrorValue(v20, v54, v52);
  v45 = Error.fullDescription.getter(v53);
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v44;
  *(_QWORD *)(inited + 72) = v45;
  *(_QWORD *)(inited + 80) = v46;
  v47 = static os_log_type_t.error.getter(v45);
  sub_100A06EBC((uint64_t)v40, &_mh_execute_header, v47, "Error fetching preview image cache directory. %{public}@ <%@>", 61, 2, inited);
  swift_errorRelease(v20);
  swift_setDeallocating(inited);
  v48 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 2, v48);

  v30 = 1;
  a1 = v51;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(a1, v30, 1, v2);
}

uint64_t sub_1005901E4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[26] = a1;
  v2[27] = v1;
  v3 = type metadata accessor for MainActor(0);
  v2[28] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  v2[29] = v4;
  v2[30] = v5;
  return swift_task_switch(sub_100590250, v4, v5);
}

uint64_t sub_100590250()
{
  uint64_t v0;
  id v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t inited;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;

  v1 = objc_msgSend(*(id *)(*(_QWORD *)(v0 + 216) + OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_cache), "objectForKey:", *(_QWORD *)(v0 + 208));
  if (v1)
  {
    v2 = v1;
    swift_release(*(_QWORD *)(v0 + 224));
    if (qword_1013DD750 != -1)
      swift_once(&qword_1013DD750, sub_100A02540);
    swift_beginAccess(&static OS_os_log.crlBoardPreviewImageCache, v0 + 184, 0, 0);
    v3 = (void *)static OS_os_log.crlBoardPreviewImageCache;
    v4 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v4, v0 + 88);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v6 = v3;
    v7 = sub_10058C19C();
    v9 = v8;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = sub_1004CFC2C();
    *(_QWORD *)(inited + 32) = v7;
    *(_QWORD *)(inited + 40) = v9;
    v11 = static os_log_type_t.default.getter(v10);
    sub_100A06EBC((uint64_t)v6, &_mh_execute_header, v11, "Found existing cache entry for: %@", 34, 2, inited);
    swift_setDeallocating(inited);
    v12 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v12);

    return (*(uint64_t (**)(id))(v0 + 8))(v2);
  }
  else
  {
    if (qword_1013DD750 != -1)
      swift_once(&qword_1013DD750, sub_100A02540);
    swift_beginAccess(&static OS_os_log.crlBoardPreviewImageCache, v0 + 160, 0, 0);
    v14 = (void *)static OS_os_log.crlBoardPreviewImageCache;
    v15 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v16 = swift_initStackObject(v15, v0 + 16);
    *(_OWORD *)(v16 + 16) = xmmword_100EF5E40;
    v17 = v14;
    v18 = sub_10058C19C();
    v20 = v19;
    *(_QWORD *)(v16 + 56) = &type metadata for String;
    *(_QWORD *)(v16 + 64) = sub_1004CFC2C();
    *(_QWORD *)(v16 + 32) = v18;
    *(_QWORD *)(v16 + 40) = v20;
    v22 = static os_log_type_t.default.getter(v21);
    sub_100A06EBC((uint64_t)v17, &_mh_execute_header, v22, "Will create new cache entry for: %@", 35, 2, v16);
    swift_setDeallocating(v16);
    v23 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v16 + 32, 1, v23);

    v24 = (_QWORD *)swift_task_alloc(dword_1013E45CC);
    *(_QWORD *)(v0 + 248) = v24;
    *v24 = v0;
    v24[1] = sub_1005904FC;
    return sub_100595C4C(*(_QWORD *)(v0 + 208));
  }
}

uint64_t sub_1005904FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 248);
  *(_QWORD *)(*(_QWORD *)v2 + 256) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = v4[29];
    v7 = v4[30];
    v8 = sub_1005905A8;
  }
  else
  {
    v4[33] = a1;
    v6 = v4[29];
    v7 = v4[30];
    v8 = sub_100590570;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_100590570()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 224));
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 264));
}

uint64_t sub_1005905A8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 224));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005905DC(uint64_t a1, uint64_t a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *(_QWORD *)(v9 + 72) = v8;
  *(double *)(v9 + 64) = a3;
  *(_BYTE *)(v9 + 240) = a8;
  *(_QWORD *)(v9 + 48) = a6;
  *(_QWORD *)(v9 + 56) = a7;
  *(_QWORD *)(v9 + 32) = a1;
  *(_QWORD *)(v9 + 40) = a2;
  v10 = sub_1004B804C(&qword_1013E01F0);
  *(_QWORD *)(v9 + 80) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1004B804C(&qword_1013E04D0);
  *(_QWORD *)(v9 + 88) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for URL(0);
  *(_QWORD *)(v9 + 96) = v12;
  v13 = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v9 + 104) = v13;
  v14 = *(_QWORD *)(v13 + 64);
  *(_QWORD *)(v9 + 112) = v14;
  v15 = (v14 + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v9 + 120) = swift_task_alloc(v15);
  *(_QWORD *)(v9 + 128) = swift_task_alloc(v15);
  v16 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  *(_QWORD *)(v9 + 136) = v16;
  *(_QWORD *)(v9 + 144) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v16 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v9 + 152) = v17;
  *(_QWORD *)(v9 + 160) = static MainActor.shared.getter(v17);
  v18 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
  *(_QWORD *)(v9 + 168) = v18;
  *(_QWORD *)(v9 + 176) = v19;
  return swift_task_switch(sub_100590704, v18, v19);
}

uint64_t sub_100590704()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  objc_class *v7;
  char *v8;
  char *v9;
  id v10;
  _QWORD *v11;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 64);
  v4 = *(_BYTE *)(v0 + 240);
  v6 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 56);
  sub_1004B8460(*(_QWORD *)(v0 + 40), v2, type metadata accessor for CRLBoardIdentifier);
  swift_storeEnumTagMultiPayload(v2, v1, 1);
  v7 = (objc_class *)type metadata accessor for CRLBoardPreviewImageCache.LookupKey(0);
  v8 = (char *)objc_allocWithZone(v7);
  sub_1004B8460(v2, (uint64_t)&v8[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_item], type metadata accessor for CRLBoardPreviewImageCache.Item);
  v9 = &v8[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass];
  *(_QWORD *)v9 = v6;
  *((_QWORD *)v9 + 1) = v5;
  v9[16] = v4 & 1;
  *(_QWORD *)&v8[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_contentsScale] = v3;
  *(_QWORD *)(v0 + 16) = v8;
  *(_QWORD *)(v0 + 24) = v7;
  v10 = objc_msgSendSuper2((objc_super *)(v0 + 16), "init");
  *(_QWORD *)(v0 + 184) = v10;
  sub_1004B84A4(v2, type metadata accessor for CRLBoardPreviewImageCache.Item);
  v11 = (_QWORD *)swift_task_alloc(dword_1013E45BC);
  *(_QWORD *)(v0 + 192) = v11;
  *v11 = v0;
  v11[1] = sub_100590820;
  return sub_1005901E4((uint64_t)v10);
}

uint64_t sub_100590820(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v5)();

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 192);
  v3[25] = a1;
  v3[26] = v1;
  swift_task_dealloc(v4);
  if (v1)
    v5 = sub_100590C30;
  else
    v5 = sub_100590888;
  return swift_task_switch(v5, v3[21], v3[22]);
}

uint64_t sub_100590888()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 88);
  sub_10058FDB4(v3);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1);
  v5 = *(_QWORD *)(v0 + 200);
  v6 = *(void **)(v0 + 184);
  if (v4 == 1)
  {
    v7 = *(_QWORD *)(v0 + 88);
    swift_release(*(_QWORD *)(v0 + 160));
    sub_1004CB800(v7, &qword_1013E04D0);
    v8 = type metadata accessor for CRLBoardPreviewImageCache.CacheError(0);
    v9 = sub_1004B7878(&qword_1013E45E8, type metadata accessor for CRLBoardPreviewImageCache.CacheError, (uint64_t)&unk_100EFB580);
    swift_allocError(v8, v9, 0, 0);
    swift_storeEnumTagMultiPayload(v10, v8, 4);
    swift_willThrow(v11);

    swift_release(v5);
    v12 = *(_QWORD *)(v0 + 120);
    v13 = *(_QWORD *)(v0 + 128);
    v15 = *(_QWORD *)(v0 + 80);
    v14 = *(_QWORD *)(v0 + 88);
    swift_task_dealloc(*(_QWORD *)(v0 + 144));
    swift_task_dealloc(v13);
    swift_task_dealloc(v12);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v17 = *(_QWORD *)(v0 + 120);
    v18 = *(char **)(v0 + 128);
    v19 = *(_QWORD *)(v0 + 104);
    v35 = v17;
    v36 = *(_QWORD *)(v0 + 112);
    v20 = *(_QWORD *)(v0 + 96);
    v21 = *(_QWORD *)(v0 + 80);
    v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 32);
    v23 = v22(v18, *(_QWORD *)(v0 + 88), v20);
    static TaskPriority.background.getter(v23);
    v24 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v21, 0, 1, v24);
    (*(void (**)(uint64_t, char *, uint64_t))(v19 + 16))(v17, v18, v20);
    v25 = v6;
    swift_retain(v5);
    v27 = static MainActor.shared.getter(v26);
    v28 = *(unsigned __int8 *)(v19 + 80);
    v29 = (v28 + 40) & ~v28;
    v30 = (v36 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
    v31 = (char *)swift_allocObject(&unk_10126E070, v30 + 8, v28 | 7);
    *((_QWORD *)v31 + 2) = v27;
    *((_QWORD *)v31 + 3) = &protocol witness table for MainActor;
    *((_QWORD *)v31 + 4) = v25;
    v22(&v31[v29], v35, v20);
    *(_QWORD *)&v31[v30] = v5;
    v32 = sub_10061893C(v21, (uint64_t)&unk_1013E4A08, (uint64_t)v31);
    *(_QWORD *)(v0 + 216) = v32;
    v33 = (_QWORD *)swift_task_alloc(async function pointer to Task.value.getter[1]);
    *(_QWORD *)(v0 + 224) = v33;
    v34 = sub_1004B804C(&qword_1013E0210);
    *v33 = v0;
    v33[1] = sub_100590B18;
    return Task.value.getter(*(_QWORD *)(v0 + 32), v32, *(_QWORD *)(v0 + 96), v34, &protocol self-conformance witness table for Error);
  }
}

uint64_t sub_100590B18()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 224);
  *(_QWORD *)(*(_QWORD *)v1 + 232) = v0;
  swift_task_dealloc(v3);
  swift_release(v2[27]);
  if (v0)
    v4 = sub_100590CAC;
  else
    v4 = sub_100590B80;
  return swift_task_switch(v4, v2[21], v2[22]);
}

uint64_t sub_100590B80()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 200);
  v2 = *(void **)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 144);
  v5 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 128);
  v6 = *(_QWORD *)(v0 + 96);
  v7 = *(_QWORD *)(v0 + 104);
  v9 = *(_QWORD *)(v0 + 80);
  v8 = *(_QWORD *)(v0 + 88);
  swift_release(*(_QWORD *)(v0 + 160));
  swift_release(v1);

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v4, v6);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100590C30()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(void **)(v0 + 184);
  swift_release(*(_QWORD *)(v0 + 160));

  v3 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v5 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc(*(_QWORD *)(v0 + 144));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100590CAC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 200);
  v2 = *(void **)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 104);
  swift_release(*(_QWORD *)(v0 + 160));
  swift_release(v1);

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  v7 = *(_QWORD *)(v0 + 120);
  v6 = *(_QWORD *)(v0 + 128);
  v9 = *(_QWORD *)(v0 + 80);
  v8 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc(*(_QWORD *)(v0 + 144));
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100590D4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6[4] = a5;
  v6[5] = a6;
  v6[2] = a1;
  v6[3] = a4;
  v7 = type metadata accessor for MainActor(0);
  v6[6] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  v6[7] = v8;
  v6[8] = v9;
  return swift_task_switch(sub_100590DBC, v8, v9);
}

uint64_t sub_100590DBC()
{
  uint64_t v0;
  _QWORD *v1;

  sub_10058C7C0();
  v1 = (_QWORD *)swift_task_alloc(dword_1013E43A4);
  *(_QWORD *)(v0 + 72) = v1;
  *v1 = v0;
  v1[1] = sub_100590E48;
  return sub_10058D3BC(*(_QWORD *)(v0 + 32));
}

uint64_t sub_100590E48()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 72);
  *(_QWORD *)(*v1 + 80) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_100590EDC;
  else
    v4 = sub_100590EA8;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64));
}

uint64_t sub_100590EA8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 48));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100590EDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 48));
  v2 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100590F30(uint64_t a1, uint64_t a2, uint64_t a3, char a4, double a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v6 + 64) = v5;
  *(double *)(v6 + 56) = a5;
  *(_BYTE *)(v6 + 160) = a4;
  *(_QWORD *)(v6 + 40) = a2;
  *(_QWORD *)(v6 + 48) = a3;
  *(_QWORD *)(v6 + 32) = a1;
  v7 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  *(_QWORD *)(v6 + 72) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v6 + 80) = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  *(_QWORD *)(v6 + 88) = v9;
  *(_QWORD *)(v6 + 96) = v10;
  return swift_task_switch(sub_100590FCC, v9, v10);
}

uint64_t sub_100590FCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  objc_class *v6;
  char *v7;
  char *v8;
  id v9;
  _QWORD *v10;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(_BYTE *)(v0 + 160);
  v5 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 48);
  sub_1004B8460(*(_QWORD *)(v0 + 32), v1, type metadata accessor for CRLBoardPreviewImageCache.Item);
  v6 = (objc_class *)type metadata accessor for CRLBoardPreviewImageCache.LookupKey(0);
  v7 = (char *)objc_allocWithZone(v6);
  sub_1004B8460(v1, (uint64_t)&v7[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_item], type metadata accessor for CRLBoardPreviewImageCache.Item);
  v8 = &v7[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass];
  *(_QWORD *)v8 = v5;
  *((_QWORD *)v8 + 1) = v4;
  v8[16] = v3 & 1;
  *(_QWORD *)&v7[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_contentsScale] = v2;
  *(_QWORD *)(v0 + 16) = v7;
  *(_QWORD *)(v0 + 24) = v6;
  v9 = objc_msgSendSuper2((objc_super *)(v0 + 16), "init");
  *(_QWORD *)(v0 + 104) = v9;
  sub_1004B84A4(v1, type metadata accessor for CRLBoardPreviewImageCache.Item);
  v10 = (_QWORD *)swift_task_alloc(dword_1013E45BC);
  *(_QWORD *)(v0 + 112) = v10;
  *v10 = v0;
  v10[1] = sub_1005910D4;
  return sub_1005901E4((uint64_t)v9);
}

uint64_t sub_1005910D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();
  _QWORD *v9;

  v4 = *(_QWORD *)(*v2 + 112);
  v5 = *v2;
  *(_QWORD *)(v5 + 120) = a1;
  *(_QWORD *)(v5 + 128) = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v6 = *(_QWORD *)(v5 + 88);
    v7 = *(_QWORD *)(v5 + 96);
    v8 = sub_100591238;
  }
  else
  {

    v9 = (_QWORD *)swift_task_alloc(dword_1013E43AC);
    *(_QWORD *)(v5 + 136) = v9;
    *v9 = v5;
    v9[1] = sub_100591178;
    v9[4] = a1;
    v8 = sub_10058D990;
    v6 = a1;
    v7 = 0;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_100591178(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 136);
  *(_QWORD *)(*(_QWORD *)v2 + 144) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = v4[11];
    v7 = v4[12];
    v8 = sub_10059127C;
  }
  else
  {
    v4[19] = a1;
    v6 = v4[11];
    v7 = v4[12];
    v8 = sub_1005911EC;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_1005911EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80);
  swift_release(*(_QWORD *)(v0 + 120));
  swift_release(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 152));
}

uint64_t sub_100591238()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 72);
  swift_release(*(_QWORD *)(v0 + 80));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10059127C()
{
  uint64_t v0;
  uint64_t v1;

  swift_release(*(_QWORD *)(v0 + 120));
  v1 = *(_QWORD *)(v0 + 72);
  swift_release(*(_QWORD *)(v0 + 80));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005912C0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, double a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v6 + 64) = v5;
  *(double *)(v6 + 56) = a5;
  *(_BYTE *)(v6 + 128) = a4;
  *(_QWORD *)(v6 + 40) = a2;
  *(_QWORD *)(v6 + 48) = a3;
  *(_QWORD *)(v6 + 32) = a1;
  v7 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  *(_QWORD *)(v6 + 72) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v6 + 80) = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  *(_QWORD *)(v6 + 88) = v9;
  *(_QWORD *)(v6 + 96) = v10;
  return swift_task_switch(sub_10059135C, v9, v10);
}

uint64_t sub_10059135C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  objc_class *v7;
  char *v8;
  char *v9;
  id v10;
  id v11;

  v2 = *(_QWORD *)(v0 + 64);
  v1 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = *(_BYTE *)(v0 + 128);
  v6 = *(_QWORD *)(v0 + 40);
  v5 = *(_QWORD *)(v0 + 48);
  sub_1004B8460(*(_QWORD *)(v0 + 32), v1, type metadata accessor for CRLBoardPreviewImageCache.Item);
  v7 = (objc_class *)type metadata accessor for CRLBoardPreviewImageCache.LookupKey(0);
  v8 = (char *)objc_allocWithZone(v7);
  sub_1004B8460(v1, (uint64_t)&v8[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_item], type metadata accessor for CRLBoardPreviewImageCache.Item);
  v9 = &v8[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass];
  *(_QWORD *)v9 = v6;
  *((_QWORD *)v9 + 1) = v5;
  v9[16] = v4 & 1;
  *(_QWORD *)&v8[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_contentsScale] = v3;
  *(_QWORD *)(v0 + 16) = v8;
  *(_QWORD *)(v0 + 24) = v7;
  v10 = objc_msgSendSuper2((objc_super *)(v0 + 16), "init");
  sub_1004B84A4(v1, type metadata accessor for CRLBoardPreviewImageCache.Item);
  v11 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v2
                                                              + OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_cache), "objectForKey:", v10));
  *(_QWORD *)(v0 + 104) = v11;

  if (v11)
    return swift_task_switch(sub_1005914BC, v11, 0);
  swift_release(*(_QWORD *)(v0 + 80));
  swift_task_dealloc(*(_QWORD *)(v0 + 72));
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1005914BC()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;

  v1 = v0[13];
  v2 = *(unsigned __int8 *)(v1 + 128);
  if (!(v2 >> 6))
  {
    v3 = (void *)(v2 >> 6);
    goto LABEL_6;
  }
  v3 = *(void **)(v1 + 120);
  if ((v2 >> 6) != 1)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"imageIfExists", 13, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardPreviewImageCache.swift", 101, 2, 381, "The cache entry is still in the .ready state", 44, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"imageIfExists", 13, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardPreviewImageCache.swift", 101, 2u, 381, (uint64_t)"The cache entry is still in the .ready state", 44, 2u);
    v7 = type metadata accessor for CRLBoardPreviewImageCache.CacheError(0);
    v8 = sub_1004B7878(&qword_1013E45E8, type metadata accessor for CRLBoardPreviewImageCache.CacheError, (uint64_t)&unk_100EFB580);
    v9 = swift_allocError(v7, v8, 0, 0);
    swift_storeEnumTagMultiPayload(v10, v7, 3);
LABEL_9:
    v0[14] = v9;
    sub_10059BC50(v3, v2);
    swift_willThrow(v11);
    v4 = v0[11];
    v5 = v0[12];
    v6 = sub_100591648;
    return swift_task_switch(v6, v4, v5);
  }
  if ((v2 & 1) != 0)
  {
    v9 = *(_QWORD *)(v1 + 120);
    goto LABEL_9;
  }
  sub_10059BC74(*(void **)(v1 + 120), 0);
LABEL_6:
  v0[15] = v3;
  v4 = v0[11];
  v5 = v0[12];
  v6 = sub_100591690;
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_100591648()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80);
  swift_release(*(_QWORD *)(v0 + 104));
  swift_release(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100591690()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 104);
  swift_release(*(_QWORD *)(v0 + 80));
  swift_release(v1);
  v2 = *(_QWORD *)(v0 + 120);
  swift_task_dealloc(*(_QWORD *)(v0 + 72));
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v2);
}

uint64_t sub_1005916E0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, double a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)(v6 + 136) = v5;
  *(double *)(v6 + 128) = a5;
  *(_BYTE *)(v6 + 89) = a4;
  *(_QWORD *)(v6 + 112) = a2;
  *(_QWORD *)(v6 + 120) = a3;
  *(_QWORD *)(v6 + 104) = a1;
  v7 = type metadata accessor for CRLBoardIdentifier(0);
  *(_QWORD *)(v6 + 144) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  *(_QWORD *)(v6 + 152) = v8;
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v6 + 160) = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v6 + 168) = swift_task_alloc(v10);
  *(_QWORD *)(v6 + 176) = swift_task_alloc(v10);
  *(_QWORD *)(v6 + 184) = swift_task_alloc(v10);
  v11 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v6 + 192) = v11;
  *(_QWORD *)(v6 + 200) = static MainActor.shared.getter(v11);
  v12 = dispatch thunk of Actor.unownedExecutor.getter(v11, &protocol witness table for MainActor);
  *(_QWORD *)(v6 + 208) = v12;
  *(_QWORD *)(v6 + 216) = v13;
  return swift_task_switch(sub_1005917C4, v12, v13);
}

void sub_1005917C4()
{
  uint64_t v0;
  uint64_t v1;
  double *v2;
  double *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int EnumCaseMultiPayload;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  CGFloat v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  _QWORD *v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  *(_QWORD *)(v0 + 96) = _swiftEmptyDictionarySingleton;
  v1 = v0 + 96;
  v2 = (double *)(v0 + 112);
  if ((*(_BYTE *)(v0 + 89) & 1) != 0)
  {
    v2 = &dbl_100EFB730[*(_QWORD *)v2];
    v3 = v2;
  }
  else
  {
    v3 = (double *)(v0 + 120);
  }
  v4 = *(_QWORD *)v3;
  *(double *)(v0 + 224) = *v2;
  *(_QWORD *)(v0 + 232) = v4;
  v5 = *(_QWORD *)(v0 + 160);
  v6 = *(_QWORD *)(v0 + 104);
  v7 = *(_QWORD *)(v6 + 16);
  if (v7 >= 4)
    v7 = 4;
  *(_QWORD *)(v0 + 240) = v7;
  *(_DWORD *)(v0 + 92) = *(_DWORD *)(v5 + 80);
  if (v7)
  {
    *(_QWORD *)(v0 + 248) = *(_QWORD *)(v5 + 72);
    swift_bridgeObjectRetain_n(v6, 2);
    v8 = 0;
    while (1)
    {
      *(_QWORD *)(v0 + 256) = v8;
      v14 = *(_QWORD *)(v0 + 176);
      v13 = *(_QWORD *)(v0 + 184);
      v15 = *(_QWORD *)(v0 + 152);
      sub_1004B8460(*(_QWORD *)(v0 + 104)+ ((*(unsigned __int8 *)(v0 + 92) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 92))+ *(_QWORD *)(v0 + 248) * v8, v13, type metadata accessor for CRLBoardPreviewImageCache.Item);
      sub_1004B8460(v13, v14, type metadata accessor for CRLBoardPreviewImageCache.Item);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v14, v15);
      if (EnumCaseMultiPayload)
      {
        if (EnumCaseMultiPayload != 2)
        {
          sub_100593DFC(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 144));
          v53 = *(_QWORD *)(v0 + 192);
          v54 = sub_1004B84A4(*(_QWORD *)(v0 + 144), type metadata accessor for CRLBoardIdentifier);
          *(_QWORD *)(v0 + 264) = static MainActor.shared.getter(v54);
          v55 = dispatch thunk of Actor.unownedExecutor.getter(v53, &protocol witness table for MainActor);
          *(_QWORD *)(v0 + 272) = v55;
          *(_QWORD *)(v0 + 280) = v56;
          swift_task_switch(sub_100591E88, v55, v56);
          return;
        }
        v18 = *(_QWORD *)(v0 + 176);
        v17 = *(_QWORD *)(v0 + 184);
        v57 = v18 + *(int *)(sub_1004B804C((uint64_t *)&unk_1013DE640) + 48);
        sub_100757E04(&_mh_execute_header, (uint64_t)"image(for:sizeClass:contentsScale:)", 35, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardPreviewImageCache.swift", 101, 2, 673, "No image for the scene", 22, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"image(for:sizeClass:contentsScale:)", 35, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardPreviewImageCache.swift", 101, 2u, 673, (uint64_t)"No image for the scene", 22, 2u);
        sub_1004B84A4(v17, type metadata accessor for CRLBoardPreviewImageCache.Item);
        v19 = type metadata accessor for UUID(0);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v57, v19);
        v11 = v18;
        v12 = type metadata accessor for CRLBoardIdentifier;
      }
      else
      {
        v10 = *(_QWORD *)(v0 + 176);
        v9 = *(_QWORD *)(v0 + 184);
        sub_100757E04(&_mh_execute_header, (uint64_t)"image(for:sizeClass:contentsScale:)", 35, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardPreviewImageCache.swift", 101, 2, 666, "No image for the folder", 23, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"image(for:sizeClass:contentsScale:)", 35, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardPreviewImageCache.swift", 101, 2u, 666, (uint64_t)"No image for the folder", 23, 2u);
        sub_1004B84A4(v9, type metadata accessor for CRLBoardPreviewImageCache.Item);
        v11 = v10;
        v12 = type metadata accessor for CRLBoardPreviewImageCache.Item;
      }
      sub_1004B84A4(v11, v12);
      v8 = *(_QWORD *)(v0 + 256) + 1;
      if (v8 == *(_QWORD *)(v0 + 240))
      {
        v20 = *(_QWORD *)(v0 + 200);
        swift_bridgeObjectRelease();
        v1 = v0 + 96;
        goto LABEL_15;
      }
    }
  }
  v20 = *(_QWORD *)(v0 + 200);
  swift_bridgeObjectRetain(v6);
LABEL_15:
  swift_release(v20);
  v22 = *(double *)(v0 + 224);
  v21 = *(double *)(v0 + 232);
  v23 = *(_QWORD *)(v0 + 104);
  v24 = (2 * *(_QWORD *)(v0 + 240)) | 1;
  v25 = v23 + ((*(unsigned __int8 *)(v0 + 92) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 92));
  v26 = sub_1004B804C(&qword_1013E7A50);
  v27 = swift_allocObject(v26, 160, 7);
  *(_OWORD *)(v27 + 16) = xmmword_100EF5E30;
  *(double *)(v27 + 32) = sub_100063148(0.0, 0.0, (v22 + -2.0) * 0.5, (v21 + -2.0) * 0.5);
  *(_QWORD *)(v27 + 40) = v28;
  *(_QWORD *)(v27 + 48) = v29;
  *(_QWORD *)(v27 + 56) = v30;
  v31 = (v22 + -2.0) * 0.5 + 2.0;
  *(double *)(v27 + 64) = sub_100063148(v31, 0.0, (v22 + -2.0) * 0.5, (v21 + -2.0) * 0.5);
  *(_QWORD *)(v27 + 72) = v32;
  *(_QWORD *)(v27 + 80) = v33;
  *(_QWORD *)(v27 + 88) = v34;
  v35 = (v21 + -2.0) * 0.5 + 2.0;
  *(double *)(v27 + 96) = sub_100063148(0.0, v35, (v22 + -2.0) * 0.5, (v21 + -2.0) * 0.5);
  *(_QWORD *)(v27 + 104) = v36;
  *(_QWORD *)(v27 + 112) = v37;
  *(_QWORD *)(v27 + 120) = v38;
  *(double *)(v27 + 128) = sub_100063148(v31, v35, (v22 + -2.0) * 0.5, (v21 + -2.0) * 0.5);
  *(_QWORD *)(v27 + 136) = v39;
  *(_QWORD *)(v27 + 144) = v40;
  *(_QWORD *)(v27 + 152) = v41;
  v42 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithSize:", v22, v21);
  v43 = (_QWORD *)swift_allocObject(&unk_10126DFF8, 64, 7);
  v43[2] = v27;
  v43[3] = v23;
  v43[4] = v25;
  v43[5] = 0;
  v43[6] = v24;
  v43[7] = v1;
  v44 = swift_allocObject(&unk_10126E020, 32, 7);
  *(_QWORD *)(v44 + 16) = sub_1005A2080;
  *(_QWORD *)(v44 + 24) = v43;
  *(_QWORD *)(v0 + 48) = sub_1005A46E8;
  *(_QWORD *)(v0 + 56) = v44;
  *(_QWORD *)(v0 + 16) = _NSConcreteStackBlock;
  *(_QWORD *)(v0 + 24) = *(_QWORD *)"";
  *(_QWORD *)(v0 + 32) = sub_100592EB8;
  *(_QWORD *)(v0 + 40) = &unk_10126E038;
  v45 = _Block_copy((const void *)(v1 - 80));
  v46 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain(v23);
  swift_retain(v44);
  v47 = objc_msgSend(v42, "imageWithActions:", v45, swift_release(v46).n128_f64[0]);

  _Block_release(v45);
  LOBYTE(v23) = swift_isEscapingClosureAtFileLocation(v44, "", 101, 712, 86, 1);
  swift_release(v44);
  if ((v23 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v49 = *(_QWORD *)(v0 + 176);
    v48 = *(_QWORD *)(v0 + 184);
    v50 = *(_QWORD *)(v0 + 168);
    v51 = *(_QWORD *)(v0 + 144);
    v52 = objc_msgSend(objc_allocWithZone((Class)CRLImage), "initWithUIImage:", v47);
    swift_bridgeObjectRelease();

    swift_release(v43);
    swift_bridgeObjectRelease();
    swift_task_dealloc(v48);
    swift_task_dealloc(v49);
    swift_task_dealloc(v50);
    swift_task_dealloc(v51);
    (*(void (**)(id))(v0 + 8))(v52);
  }
}

uint64_t sub_100591E88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  double v4;
  objc_class *v5;
  char *v6;
  double *v7;
  id v8;
  _QWORD *v9;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = (*(double *)(v0 + 232) + -2.0) * 0.5;
  v4 = (*(double *)(v0 + 224) + -2.0) * 0.5;
  sub_1004B8460(*(_QWORD *)(v0 + 184), v1, type metadata accessor for CRLBoardPreviewImageCache.Item);
  v5 = (objc_class *)type metadata accessor for CRLBoardPreviewImageCache.LookupKey(0);
  v6 = (char *)objc_allocWithZone(v5);
  sub_1004B8460(v1, (uint64_t)&v6[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_item], type metadata accessor for CRLBoardPreviewImageCache.Item);
  v7 = (double *)&v6[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass];
  *v7 = v4;
  v7[1] = v3;
  *((_BYTE *)v7 + 16) = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_contentsScale] = v2;
  *(_QWORD *)(v0 + 64) = v6;
  *(_QWORD *)(v0 + 72) = v5;
  v8 = objc_msgSendSuper2((objc_super *)(v0 + 64), "init");
  *(_QWORD *)(v0 + 288) = v8;
  sub_1004B84A4(v1, type metadata accessor for CRLBoardPreviewImageCache.Item);
  v9 = (_QWORD *)swift_task_alloc(dword_1013E45BC);
  *(_QWORD *)(v0 + 296) = v9;
  *v9 = v0;
  v9[1] = sub_100591FA0;
  return sub_1005901E4((uint64_t)v8);
}

uint64_t sub_100591FA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 296);
  *(_QWORD *)(v4 + 304) = a1;
  *(_QWORD *)(v4 + 312) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = *(_QWORD *)(v4 + 272);
    v7 = *(_QWORD *)(v4 + 280);
    v8 = sub_100592A88;
  }
  else
  {

    v8 = sub_10059201C;
    v6 = a1;
    v7 = 0;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_10059201C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;

  v1 = *(_QWORD *)(v0 + 304);
  v2 = *(void **)(v1 + 120);
  *(_QWORD *)(v0 + 320) = v2;
  v3 = *(unsigned __int8 *)(v1 + 128);
  *(_BYTE *)(v0 + 90) = v3;
  if (!(v3 >> 6))
  {
    v7 = async function pointer to Task.result.getter[1];
    swift_retain(v2);
    v8 = (_QWORD *)swift_task_alloc(v7);
    *(_QWORD *)(v0 + 328) = v8;
    v9 = sub_1004B8930(0, (unint64_t *)&qword_1013E45F0, off_1012298E8);
    v10 = sub_1004B804C(&qword_1013E0210);
    *v8 = v0;
    v8[1] = sub_100592230;
    return Task.result.getter(v0 + 80, v2, v9, v10, &protocol self-conformance witness table for Error);
  }
  if (v3 >> 6 != 1)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"image", 5, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardPreviewImageCache.swift", 101, 2, 358, "The cache entry is still in the .ready state", 44, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"image", 5, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardPreviewImageCache.swift", 101, 2u, 358, (uint64_t)"The cache entry is still in the .ready state", 44, 2u);
    v12 = type metadata accessor for CRLBoardPreviewImageCache.CacheError(0);
    v13 = sub_1004B7878(&qword_1013E45E8, type metadata accessor for CRLBoardPreviewImageCache.CacheError, (uint64_t)&unk_100EFB580);
    v2 = (void *)swift_allocError(v12, v13, 0, 0);
    swift_storeEnumTagMultiPayload(v14, v12, 3);
LABEL_8:
    swift_willThrow(v15);
    *(_QWORD *)(v0 + 336) = v2;
    v4 = *(_QWORD *)(v0 + 272);
    v5 = *(_QWORD *)(v0 + 280);
    v6 = sub_100592314;
    return swift_task_switch(v6, v4, v5);
  }
  if ((v3 & 1) != 0)
  {
    sub_10059BC74(v2, 1);
    goto LABEL_8;
  }
  sub_10059BC74(v2, 0);
  *(_QWORD *)(v0 + 344) = v2;
  v4 = *(_QWORD *)(v0 + 272);
  v5 = *(_QWORD *)(v0 + 280);
  v6 = sub_10059235C;
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_100592230()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 304);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 328));
  return swift_task_switch(sub_100592288, v1, 0);
}

uint64_t sub_100592288(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v2 = *(_QWORD *)(v1 + 80);
  v3 = *(_BYTE *)(v1 + 90);
  v4 = *(void **)(v1 + 320);
  if ((*(_BYTE *)(v1 + 88) & 1) != 0)
  {
    swift_willThrow(a1);
    sub_10059BC90(v4, v3);
    *(_QWORD *)(v1 + 336) = v2;
    v5 = *(_QWORD *)(v1 + 272);
    v6 = *(_QWORD *)(v1 + 280);
    v7 = sub_100592314;
  }
  else
  {
    sub_10059BC90(*(void **)(v1 + 320), *(_BYTE *)(v1 + 90));
    *(_QWORD *)(v1 + 344) = v2;
    v5 = *(_QWORD *)(v1 + 272);
    v6 = *(_QWORD *)(v1 + 280);
    v7 = sub_10059235C;
  }
  return swift_task_switch(v7, v5, v6);
}

uint64_t sub_100592314()
{
  _QWORD *v0;

  swift_release(v0[38]);
  v0[44] = v0[42];
  swift_release(v0[33]);
  return swift_task_switch(sub_100592AD0, v0[26], v0[27]);
}

uint64_t sub_10059235C()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[38];
  swift_release(v0[33]);
  swift_release(v1);
  return swift_task_switch(sub_1005923A0, v0[26], v0[27]);
}

void sub_1005923A0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  double v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  CGFloat v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  _QWORD *v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int EnumCaseMultiPayload;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v1 = *(void **)(v0 + 344);
  v3 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 184);
  v4 = *(_QWORD *)(v0 + 168);
  sub_1004B8460(v2, v4, type metadata accessor for CRLBoardPreviewImageCache.Item);
  v5 = v1;
  v6 = *(_QWORD *)(v0 + 96);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v6);
  sub_10082773C((uint64_t)v5, v4, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v0 + 96) = v6;
  swift_bridgeObjectRelease();
  sub_1004B84A4(v4, type metadata accessor for CRLBoardPreviewImageCache.Item);

  sub_1004B84A4(v2, type metadata accessor for CRLBoardPreviewImageCache.Item);
  sub_1004B84A4(v3, type metadata accessor for CRLBoardIdentifier);
  v8 = *(_QWORD *)(v0 + 256) + 1;
  if (v8 == *(_QWORD *)(v0 + 240))
  {
LABEL_2:
    swift_release(*(_QWORD *)(v0 + 200));
    swift_bridgeObjectRelease();
    v10 = *(double *)(v0 + 224);
    v9 = *(double *)(v0 + 232);
    v11 = *(_QWORD *)(v0 + 104);
    v12 = (2 * *(_QWORD *)(v0 + 240)) | 1;
    v13 = v11 + ((*(unsigned __int8 *)(v0 + 92) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 92));
    v14 = sub_1004B804C(&qword_1013E7A50);
    v15 = swift_allocObject(v14, 160, 7);
    *(_OWORD *)(v15 + 16) = xmmword_100EF5E30;
    *(double *)(v15 + 32) = sub_100063148(0.0, 0.0, (v10 + -2.0) * 0.5, (v9 + -2.0) * 0.5);
    *(_QWORD *)(v15 + 40) = v16;
    *(_QWORD *)(v15 + 48) = v17;
    *(_QWORD *)(v15 + 56) = v18;
    v19 = (v10 + -2.0) * 0.5 + 2.0;
    *(double *)(v15 + 64) = sub_100063148(v19, 0.0, (v10 + -2.0) * 0.5, (v9 + -2.0) * 0.5);
    *(_QWORD *)(v15 + 72) = v20;
    *(_QWORD *)(v15 + 80) = v21;
    *(_QWORD *)(v15 + 88) = v22;
    v23 = (v9 + -2.0) * 0.5 + 2.0;
    *(double *)(v15 + 96) = sub_100063148(0.0, v23, (v10 + -2.0) * 0.5, (v9 + -2.0) * 0.5);
    *(_QWORD *)(v15 + 104) = v24;
    *(_QWORD *)(v15 + 112) = v25;
    *(_QWORD *)(v15 + 120) = v26;
    *(double *)(v15 + 128) = sub_100063148(v19, v23, (v10 + -2.0) * 0.5, (v9 + -2.0) * 0.5);
    *(_QWORD *)(v15 + 136) = v27;
    *(_QWORD *)(v15 + 144) = v28;
    *(_QWORD *)(v15 + 152) = v29;
    v30 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithSize:", v10, v9);
    v31 = (_QWORD *)swift_allocObject(&unk_10126DFF8, 64, 7);
    v31[2] = v15;
    v31[3] = v11;
    v31[4] = v13;
    v31[5] = 0;
    v31[6] = v12;
    v31[7] = v0 + 96;
    v32 = swift_allocObject(&unk_10126E020, 32, 7);
    *(_QWORD *)(v32 + 16) = sub_1005A2080;
    *(_QWORD *)(v32 + 24) = v31;
    *(_QWORD *)(v0 + 48) = sub_1005A46E8;
    *(_QWORD *)(v0 + 56) = v32;
    *(_QWORD *)(v0 + 16) = _NSConcreteStackBlock;
    *(_QWORD *)(v0 + 24) = *(_QWORD *)"";
    *(_QWORD *)(v0 + 32) = sub_100592EB8;
    *(_QWORD *)(v0 + 40) = &unk_10126E038;
    v33 = _Block_copy((const void *)(v0 + 16));
    v34 = *(_QWORD *)(v0 + 56);
    swift_bridgeObjectRetain(v11);
    swift_retain(v32);
    v35 = objc_msgSend(v30, "imageWithActions:", v33, swift_release(v34).n128_f64[0]);

    _Block_release(v33);
    LOBYTE(v11) = swift_isEscapingClosureAtFileLocation(v32, "", 101, 712, 86, 1);
    swift_release(v32);
    if ((v11 & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      v37 = *(_QWORD *)(v0 + 176);
      v36 = *(_QWORD *)(v0 + 184);
      v38 = *(_QWORD *)(v0 + 168);
      v39 = *(_QWORD *)(v0 + 144);
      v40 = objc_msgSend(objc_allocWithZone((Class)CRLImage), "initWithUIImage:", v35);
      swift_bridgeObjectRelease();

      swift_release(v31);
      swift_bridgeObjectRelease();
      swift_task_dealloc(v36);
      swift_task_dealloc(v37);
      swift_task_dealloc(v38);
      swift_task_dealloc(v39);
      (*(void (**)(id))(v0 + 8))(v40);
    }
    return;
  }
  v63 = *(_QWORD *)(v0 + 312);
  while (1)
  {
    *(_QWORD *)(v0 + 256) = v8;
    v45 = *(_QWORD *)(v0 + 176);
    v46 = *(_QWORD *)(v0 + 184);
    v47 = *(_QWORD *)(v0 + 152);
    sub_1004B8460(*(_QWORD *)(v0 + 104)+ ((*(unsigned __int8 *)(v0 + 92) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 92))+ *(_QWORD *)(v0 + 248) * v8, v46, type metadata accessor for CRLBoardPreviewImageCache.Item);
    sub_1004B8460(v46, v45, type metadata accessor for CRLBoardPreviewImageCache.Item);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v45, v47);
    if (EnumCaseMultiPayload)
      break;
    v42 = *(_QWORD *)(v0 + 176);
    v41 = *(_QWORD *)(v0 + 184);
    sub_100757E04(&_mh_execute_header, (uint64_t)"image(for:sizeClass:contentsScale:)", 35, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardPreviewImageCache.swift", 101, 2, 666, "No image for the folder", 23, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"image(for:sizeClass:contentsScale:)", 35, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardPreviewImageCache.swift", 101, 2u, 666, (uint64_t)"No image for the folder", 23, 2u);
    sub_1004B84A4(v41, type metadata accessor for CRLBoardPreviewImageCache.Item);
    v43 = v42;
    v44 = type metadata accessor for CRLBoardPreviewImageCache.Item;
LABEL_6:
    sub_1004B84A4(v43, v44);
    v8 = *(_QWORD *)(v0 + 256) + 1;
    if (v8 == *(_QWORD *)(v0 + 240))
      goto LABEL_2;
  }
  if (EnumCaseMultiPayload == 2)
  {
    v50 = *(_QWORD *)(v0 + 176);
    v49 = *(_QWORD *)(v0 + 184);
    v64 = v50 + *(int *)(sub_1004B804C((uint64_t *)&unk_1013DE640) + 48);
    sub_100757E04(&_mh_execute_header, (uint64_t)"image(for:sizeClass:contentsScale:)", 35, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardPreviewImageCache.swift", 101, 2, 673, "No image for the scene", 22, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"image(for:sizeClass:contentsScale:)", 35, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardPreviewImageCache.swift", 101, 2u, 673, (uint64_t)"No image for the scene", 22, 2u);
    sub_1004B84A4(v49, type metadata accessor for CRLBoardPreviewImageCache.Item);
    v51 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 8))(v64, v51);
    v43 = v50;
    v44 = type metadata accessor for CRLBoardIdentifier;
    goto LABEL_6;
  }
  sub_100593DFC(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 144));
  if (v63)
  {
    v52 = *(_QWORD *)(v0 + 200);
    v54 = *(_QWORD *)(v0 + 176);
    v53 = *(_QWORD *)(v0 + 184);
    swift_bridgeObjectRelease();
    swift_release(v52);
    sub_1004B84A4(v53, type metadata accessor for CRLBoardPreviewImageCache.Item);
    swift_bridgeObjectRelease();
    sub_1004B84A4(v54, type metadata accessor for CRLBoardIdentifier);
    v55 = *(_QWORD *)(v0 + 176);
    v56 = *(_QWORD *)(v0 + 184);
    v57 = *(_QWORD *)(v0 + 168);
    v58 = *(_QWORD *)(v0 + 144);
    swift_bridgeObjectRelease();
    swift_task_dealloc(v56);
    swift_task_dealloc(v55);
    swift_task_dealloc(v57);
    swift_task_dealloc(v58);
    (*(void (**)(void))(v0 + 8))();
  }
  else
  {
    v59 = *(_QWORD *)(v0 + 192);
    v60 = sub_1004B84A4(*(_QWORD *)(v0 + 144), type metadata accessor for CRLBoardIdentifier);
    *(_QWORD *)(v0 + 264) = static MainActor.shared.getter(v60);
    v61 = dispatch thunk of Actor.unownedExecutor.getter(v59, &protocol witness table for MainActor);
    *(_QWORD *)(v0 + 272) = v61;
    *(_QWORD *)(v0 + 280) = v62;
    swift_task_switch(sub_100591E88, v61, v62);
  }
}

uint64_t sub_100592A88()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 352) = *(_QWORD *)(v0 + 312);
  swift_release(*(_QWORD *)(v0 + 264));
  return swift_task_switch(sub_100592AD0, *(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 216));
}

uint64_t sub_100592AD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 184);
  swift_bridgeObjectRelease();
  swift_release(v1);
  sub_1004B84A4(v2, type metadata accessor for CRLBoardPreviewImageCache.Item);
  swift_bridgeObjectRelease();
  sub_1004B84A4(v3, type metadata accessor for CRLBoardIdentifier);
  v5 = *(_QWORD *)(v0 + 176);
  v4 = *(_QWORD *)(v0 + 184);
  v6 = *(_QWORD *)(v0 + 168);
  v7 = *(_QWORD *)(v0 + 144);
  swift_bridgeObjectRelease();
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100592B84(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t *a7)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  double *v21;
  double v22;
  double v23;
  double v24;
  double v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  id v29;
  id v30;
  unsigned __int8 v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  id v51;
  _QWORD v52[2];
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;

  v56 = a4;
  v12 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  v55 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = objc_msgSend((id)objc_opt_self(UIColor), "secondarySystemBackgroundColor");
  objc_msgSend(v15, "setFill");

  v16 = *(_QWORD *)(a2 + 16);
  if (!v16)
    return;
  v17 = a6 >> 1;
  v18 = (a6 >> 1) - a5;
  if (__OFSUB__(a6 >> 1, a5))
    goto LABEL_19;
  swift_bridgeObjectRetain(a2);
  v19 = a2;
  v20 = 0;
  v52[1] = v19;
  v53 = a5;
  v21 = (double *)(v19 + 56);
  v54 = a7;
  while (1)
  {
    v23 = *(v21 - 3);
    v22 = *(v21 - 2);
    v25 = *(v21 - 1);
    v24 = *v21;
    if (v20 >= v18)
      goto LABEL_5;
    if (v20 < a5 || v20 >= v17)
      break;
    sub_1004B8460(v56 + *(_QWORD *)(v55 + 72) * v20, (uint64_t)v14, type metadata accessor for CRLBoardPreviewImageCache.Item);
    v26 = *a7;
    if (*(_QWORD *)(*a7 + 16))
    {
      v27 = sub_100843760((uint64_t)v14);
      if ((v28 & 1) != 0)
      {
        v29 = *(id *)(*(_QWORD *)(v26 + 56) + 8 * v27);
        sub_1004B84A4((uint64_t)v14, type metadata accessor for CRLBoardPreviewImageCache.Item);
        v30 = objc_msgSend(v29, "UIImage");
        v31 = objc_msgSend(v30, "isSymbolImage");

        if ((v31 & 1) != 0)
        {
          objc_msgSend(a1, "fillRect:", v23, v22, v25, v24);
          objc_msgSend(v29, "size");
          v33 = v32;
          v35 = v34;
          v36 = sub_1000603DC(v25, v24, 0.5);
          v38 = sub_100062E78(0, v33, v35, v36, v37);
          v39 = sub_100061400(v23, v22, v25, v24);
          v41 = sub_10005FD98(v39, v40, v38);
        }
        else
        {
          objc_msgSend(v29, "size");
          v41 = sub_100062EB4(0, v45, v46, v23, v22, v25, v24);
        }
        v47 = v41;
        v48 = v42;
        v49 = v43;
        v50 = v44;
        v51 = objc_msgSend(v29, "UIImage");
        objc_msgSend(v51, "drawInRect:", v47, v48, v49, v50);

        a5 = v53;
        a7 = v54;
        goto LABEL_6;
      }
    }
    sub_1004B84A4((uint64_t)v14, type metadata accessor for CRLBoardPreviewImageCache.Item);
LABEL_5:
    objc_msgSend(a1, "fillRect:", v23, v22, v25, v24);
LABEL_6:
    ++v20;
    v21 += 4;
    if (v16 == v20)
    {
      swift_bridgeObjectRelease();
      return;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
}

uint64_t sub_100592E98(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

void sub_100592EB8(uint64_t a1, void *a2)
{
  void (*v2)(void);
  id v3;

  v2 = *(void (**)(void))(a1 + 32);
  v3 = a2;
  v2();

}

uint64_t sub_100592EEC(uint64_t a1, uint64_t a2, char a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)(v10 + 96) = v9;
  *(_BYTE *)(v10 + 208) = a3;
  *(double *)(v10 + 80) = a8;
  *(double *)(v10 + 88) = a9;
  *(double *)(v10 + 64) = a6;
  *(double *)(v10 + 72) = a7;
  *(double *)(v10 + 48) = a4;
  *(double *)(v10 + 56) = a5;
  *(_QWORD *)(v10 + 32) = a1;
  *(_QWORD *)(v10 + 40) = a2;
  v11 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  *(_QWORD *)(v10 + 104) = v11;
  v12 = (*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v10 + 112) = swift_task_alloc(v12);
  *(_QWORD *)(v10 + 120) = swift_task_alloc(v12);
  v13 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v10 + 128) = static MainActor.shared.getter(v13);
  v14 = dispatch thunk of Actor.unownedExecutor.getter(v13, &protocol witness table for MainActor);
  *(_QWORD *)(v10 + 136) = v14;
  *(_QWORD *)(v10 + 144) = v15;
  return swift_task_switch(sub_100592FA0, v14, v15);
}

uint64_t sub_100592FA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  objc_class *v14;
  char *v15;
  char *v16;
  id v17;
  _QWORD *v18;
  __int128 v20;

  v2 = *(_QWORD *)(v0 + 112);
  v1 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 88);
  v7 = *(_QWORD *)(v0 + 64);
  v6 = *(_QWORD *)(v0 + 72);
  v20 = *(_OWORD *)(v0 + 48);
  v9 = *(_QWORD *)(v0 + 32);
  v8 = *(_QWORD *)(v0 + 40);
  v10 = sub_1004B804C((uint64_t *)&unk_1013DE640);
  v11 = v1 + *(int *)(v10 + 48);
  v12 = v1 + *(int *)(v10 + 64);
  sub_1004B8460(v8, v1, type metadata accessor for CRLBoardIdentifier);
  v13 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v9, v13);
  *(_OWORD *)v12 = v20;
  *(_QWORD *)(v12 + 16) = v7;
  *(_QWORD *)(v12 + 24) = v6;
  swift_storeEnumTagMultiPayload(v1, v3, 2);
  sub_1004B8460(v1, v2, type metadata accessor for CRLBoardPreviewImageCache.Item);
  v14 = (objc_class *)type metadata accessor for CRLBoardPreviewImageCache.LookupKey(0);
  v15 = (char *)objc_allocWithZone(v14);
  sub_1004B8460(v2, (uint64_t)&v15[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_item], type metadata accessor for CRLBoardPreviewImageCache.Item);
  v16 = &v15[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass];
  *(_QWORD *)v16 = v5;
  *((_QWORD *)v16 + 1) = v4;
  v16[16] = 0;
  *(_QWORD *)&v15[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_contentsScale] = 0x4000000000000000;
  *(_QWORD *)(v0 + 16) = v15;
  *(_QWORD *)(v0 + 24) = v14;
  v17 = objc_msgSendSuper2((objc_super *)(v0 + 16), "init");
  *(_QWORD *)(v0 + 152) = v17;
  sub_1004B84A4(v2, type metadata accessor for CRLBoardPreviewImageCache.Item);
  v18 = (_QWORD *)swift_task_alloc(dword_1013E49EC);
  *(_QWORD *)(v0 + 160) = v18;
  *v18 = v0;
  v18[1] = sub_100593134;
  return sub_10059338C((uint64_t)v17, *(_BYTE *)(v0 + 208));
}

uint64_t sub_100593134(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();
  _QWORD *v9;

  v4 = *(_QWORD *)(*(_QWORD *)v2 + 160);
  v5 = *(_QWORD **)v2;
  v5[21] = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v6 = v5[17];
    v7 = v5[18];
    v8 = sub_1005932BC;
  }
  else
  {
    v5[22] = a1;
    v9 = (_QWORD *)swift_task_alloc(dword_1013E43AC);
    v5[23] = v9;
    *v9 = v5;
    v9[1] = sub_1005931D4;
    v9[4] = a1;
    v8 = sub_10058D990;
    v6 = a1;
    v7 = 0;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_1005931D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)();

  v4 = *(_QWORD **)v2;
  v6 = *(_QWORD *)(*(_QWORD *)v2 + 176);
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 184);
  *(_QWORD *)(*(_QWORD *)v2 + 192) = v1;
  swift_task_dealloc(v5);
  swift_release(v6);
  if (v1)
  {
    v7 = v4[17];
    v8 = v4[18];
    v9 = sub_100593324;
  }
  else
  {
    v4[25] = a1;
    v7 = v4[17];
    v8 = v4[18];
    v9 = sub_100593250;
  }
  return swift_task_switch(v9, v7, v8);
}

uint64_t sub_100593250()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(void **)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 112);
  swift_release(*(_QWORD *)(v0 + 128));

  sub_1004B84A4(v2, type metadata accessor for CRLBoardPreviewImageCache.Item);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 200));
}

uint64_t sub_1005932BC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(void **)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 112);
  swift_release(*(_QWORD *)(v0 + 128));

  sub_1004B84A4(v2, type metadata accessor for CRLBoardPreviewImageCache.Item);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100593324()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(void **)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 112);
  swift_release(*(_QWORD *)(v0 + 128));

  sub_1004B84A4(v2, type metadata accessor for CRLBoardPreviewImageCache.Item);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10059338C(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v3 + 96) = a2;
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v3 + 32) = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  *(_QWORD *)(v3 + 40) = v5;
  *(_QWORD *)(v3 + 48) = v6;
  return swift_task_switch(sub_1005933FC, v5, v6);
}

uint64_t sub_1005933FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  _QWORD *v11;
  id v13;
  id v14;
  __n128 v15;
  _QWORD *v16;

  if (*(_BYTE *)(v0 + 96) == 1)
  {
    v1 = *(_QWORD *)(v0 + 16);
    v2 = sub_1004B804C(&qword_1013E45D8);
    v3 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
    v4 = *(_QWORD *)(v3 - 8);
    v5 = *(_QWORD *)(v4 + 72);
    v6 = *(unsigned __int8 *)(v4 + 80);
    v7 = (v6 + 32) & ~v6;
    v8 = swift_allocObject(v2, v7 + v5, v6 | 7);
    *(_OWORD *)(v8 + 16) = xmmword_100EF5E40;
    v9 = v8 + v7;
    sub_1004B8460(v1 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_item, v9, type metadata accessor for CRLBoardPreviewImageCache.Item);
    v10 = sub_1004B6308(v8);
    *(_QWORD *)(v0 + 56) = v10;
    swift_setDeallocating(v8);
    swift_arrayDestroy(v9, 1, v3);
    swift_deallocClassInstance(v8, 32, 7);
    v11 = (_QWORD *)swift_task_alloc(dword_1013E433C);
    *(_QWORD *)(v0 + 64) = v11;
    *v11 = v0;
    v11[1] = sub_1005935AC;
    return sub_10059377C((uint64_t)v10);
  }
  else
  {
    v13 = objc_msgSend(*(id *)(*(_QWORD *)(v0 + 24) + OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_cache), "objectForKey:", *(_QWORD *)(v0 + 16));
    if (v13)
    {
      v14 = v13;
      v15 = swift_release(*(_QWORD *)(v0 + 32));
      return (*(uint64_t (**)(id, __n128))(v0 + 8))(v14, v15);
    }
    else
    {
      v16 = (_QWORD *)swift_task_alloc(dword_1013E49F4);
      *(_QWORD *)(v0 + 72) = v16;
      *v16 = v0;
      v16[1] = sub_10059369C;
      return sub_1005969D8(*(_QWORD *)(v0 + 16));
    }
  }
}

uint64_t sub_1005935AC()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 64));
  swift_bridgeObjectRelease();
  return swift_task_switch(sub_100593600, *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_100593600()
{
  uint64_t v0;
  id v1;
  id v2;
  __n128 v3;
  _QWORD *v5;

  v1 = objc_msgSend(*(id *)(*(_QWORD *)(v0 + 24) + OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_cache), "objectForKey:", *(_QWORD *)(v0 + 16));
  if (v1)
  {
    v2 = v1;
    v3 = swift_release(*(_QWORD *)(v0 + 32));
    return (*(uint64_t (**)(id, __n128))(v0 + 8))(v2, v3);
  }
  else
  {
    v5 = (_QWORD *)swift_task_alloc(dword_1013E49F4);
    *(_QWORD *)(v0 + 72) = v5;
    *v5 = v0;
    v5[1] = sub_10059369C;
    return sub_1005969D8(*(_QWORD *)(v0 + 16));
  }
}

uint64_t sub_10059369C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 72);
  *(_QWORD *)(*(_QWORD *)v2 + 80) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = v4[5];
    v7 = v4[6];
    v8 = sub_100593748;
  }
  else
  {
    v4[11] = a1;
    v6 = v4[5];
    v7 = v4[6];
    v8 = sub_100593710;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_100593710()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 88));
}

uint64_t sub_100593748()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10059377C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2[9] = a1;
  v2[10] = v1;
  v3 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  v2[11] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[12] = v4;
  v5 = (*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[13] = swift_task_alloc(v5);
  v2[14] = swift_task_alloc(v5);
  v2[15] = swift_task_alloc(v5);
  v6 = type metadata accessor for MainActor(0);
  v2[16] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_10059382C, v7, v8);
}

void sub_10059382C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t i;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int EnumCaseMultiPayload;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  int64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  _QWORD *v53;
  uint64_t *v54;
  id *v55;
  uint64_t v56;
  int64_t v57;
  int64_t v58;
  uint64_t v59;

  v1 = *(_QWORD *)(v0 + 72);
  swift_release(*(_QWORD *)(v0 + 128));
  if (!*(_QWORD *)(v1 + 16))
  {
LABEL_63:
    v50 = *(_QWORD *)(v0 + 112);
    v51 = *(_QWORD *)(v0 + 104);
    swift_task_dealloc(*(_QWORD *)(v0 + 120));
    swift_task_dealloc(v50);
    swift_task_dealloc(v51);
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  v53 = (_QWORD *)(v0 + 16);
  v54 = (uint64_t *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 72);
  v55 = (id *)(v0 + 56);
  v56 = v2 + 56;
  v3 = *(_QWORD *)(v0 + 96);
  v4 = -1;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  if (-v5 < 64)
    v4 = ~(-1 << -(char)v5);
  v6 = v4 & *(_QWORD *)(v2 + 56);
  v58 = (unint64_t)(63 - v5) >> 6;
  swift_bridgeObjectRetain(v2);
  v7 = 0;
  if (!v6)
    goto LABEL_6;
LABEL_5:
  v8 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (i = v8 | (v7 << 6); ; i = __clz(__rbit64(v11)) + (v7 << 6))
  {
    v14 = *(_QWORD *)(v0 + 112);
    v13 = *(_QWORD *)(v0 + 120);
    v15 = *(_QWORD *)(v0 + 104);
    v16 = *(_QWORD *)(v0 + 88);
    sub_1004B8460(*(_QWORD *)(v2 + 48) + *(_QWORD *)(v3 + 72) * i, v13, type metadata accessor for CRLBoardPreviewImageCache.Item);
    sub_1004B84E0(v13, v14, type metadata accessor for CRLBoardPreviewImageCache.Item);
    sub_1004B8460(v14, v15, type metadata accessor for CRLBoardPreviewImageCache.Item);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v15, v16);
    v19 = *(_QWORD *)(v0 + 104);
    v18 = *(_QWORD *)(v0 + 112);
    if (EnumCaseMultiPayload != 2)
    {
      v22 = *(_QWORD *)(v0 + 72);
      sub_1004B84A4(*(_QWORD *)(v0 + 104), type metadata accessor for CRLBoardPreviewImageCache.Item);
      sub_1004B84A4(v18, type metadata accessor for CRLBoardPreviewImageCache.Item);
      swift_release(v22);
      goto LABEL_63;
    }
    v20 = v19 + *(int *)(sub_1004B804C((uint64_t *)&unk_1013DE640) + 48);
    v21 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v20, v21);
    sub_1004B84A4(v19, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4(v18, type metadata accessor for CRLBoardPreviewImageCache.Item);
    if (v6)
      goto LABEL_5;
LABEL_6:
    v10 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_65;
    }
    if (v10 >= v58)
    {
LABEL_28:
      swift_release(*(_QWORD *)(v0 + 72));
      if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
        goto LABEL_66;
LABEL_29:
      v23 = &_swiftEmptySetSingleton;
LABEL_30:
      v24 = *(_QWORD *)(v0 + 72);
      v25 = *(id *)(v0 + 80);
      sub_10059E454((uint64_t)v23, v24, (uint64_t)v25);
      v27 = v26;

      if ((v27 & 0xC000000000000001) != 0)
      {
        if (v27 < 0)
          v29 = v27;
        else
          v29 = v27 & 0xFFFFFFFFFFFFFF8;
        v30 = __CocoaSet.makeIterator()(v29);
        v31 = type metadata accessor for CRLBoardPreviewImageCache.LookupKey(0);
        v32 = sub_1004B7878(&qword_1013E49A8, type metadata accessor for CRLBoardPreviewImageCache.LookupKey, (uint64_t)&protocol conformance descriptor for NSObject);
        v28 = Set.Iterator.init(_cocoa:)(v53, v30, v31, v32);
        v27 = *(_QWORD *)(v0 + 16);
        v59 = *(_QWORD *)(v0 + 24);
        v33 = *(_QWORD *)(v0 + 32);
        v34 = *(_QWORD *)(v0 + 40);
        v35 = *(_QWORD *)(v0 + 48);
      }
      else
      {
        v34 = 0;
        v36 = -1 << *(_BYTE *)(v27 + 32);
        v59 = v27 + 56;
        v33 = ~v36;
        v37 = -v36;
        if (v37 < 64)
          v38 = ~(-1 << v37);
        else
          v38 = -1;
        v35 = v38 & *(_QWORD *)(v27 + 56);
      }
      v53 = (_QWORD *)(v27 & 0x7FFFFFFFFFFFFFFFLL);
      v57 = (unint64_t)(v33 + 64) >> 6;
      while ((v27 & 0x8000000000000000) == 0)
      {
        if (v35)
        {
          v45 = (v35 - 1) & v35;
          v46 = __clz(__rbit64(v35)) | (v34 << 6);
          v44 = v34;
        }
        else
        {
          v47 = v34 + 1;
          if (__OFADD__(v34, 1))
          {
LABEL_65:
            __break(1u);
LABEL_66:
            if (_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
            {
              sub_1004B6A40((uint64_t)_swiftEmptyArrayStorage);
              v23 = v52;
              goto LABEL_30;
            }
            goto LABEL_29;
          }
          if (v47 >= v57)
            goto LABEL_62;
          v48 = *(_QWORD *)(v59 + 8 * v47);
          v44 = v34 + 1;
          if (!v48)
          {
            v44 = v34 + 2;
            if (v34 + 2 >= v57)
              goto LABEL_62;
            v48 = *(_QWORD *)(v59 + 8 * v44);
            if (!v48)
            {
              v44 = v34 + 3;
              if (v34 + 3 >= v57)
                goto LABEL_62;
              v48 = *(_QWORD *)(v59 + 8 * v44);
              if (!v48)
              {
                v44 = v34 + 4;
                if (v34 + 4 >= v57)
                  goto LABEL_62;
                v48 = *(_QWORD *)(v59 + 8 * v44);
                if (!v48)
                {
                  v49 = v34 + 5;
                  while (v57 != v49)
                  {
                    v48 = *(_QWORD *)(v59 + 8 * v49++);
                    if (v48)
                    {
                      v44 = v49 - 1;
                      goto LABEL_58;
                    }
                  }
                  goto LABEL_62;
                }
              }
            }
          }
LABEL_58:
          v45 = (v48 - 1) & v48;
          v46 = __clz(__rbit64(v48)) + (v44 << 6);
        }
        v42 = *(id *)(*(_QWORD *)(v27 + 48) + 8 * v46);
        if (!v42)
          goto LABEL_62;
LABEL_60:
        objc_msgSend(*(id *)(*(_QWORD *)(v0 + 80) + OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_cache), "removeObjectForKey:", v42, v43);

        v34 = v44;
        v35 = v45;
      }
      v39 = __CocoaSet.Iterator.next()(v28);
      if (v39)
      {
        v40 = v39;
        *v54 = v39;
        v41 = type metadata accessor for CRLBoardPreviewImageCache.LookupKey(0);
        swift_unknownObjectRetain(v40);
        swift_dynamicCast(v55, v54, (char *)&type metadata for Swift.AnyObject + 8, v41, 7);
        v42 = *v55;
        *(_QWORD *)&v43 = swift_unknownObjectRelease(v40).n128_u64[0];
        v44 = v34;
        v45 = v35;
        if (v42)
          goto LABEL_60;
      }
LABEL_62:
      sub_1004D284C(v27);
      goto LABEL_63;
    }
    v11 = *(_QWORD *)(v56 + 8 * v10);
    ++v7;
    if (!v11)
    {
      v7 = v10 + 1;
      if (v10 + 1 >= v58)
        goto LABEL_28;
      v11 = *(_QWORD *)(v56 + 8 * v7);
      if (!v11)
      {
        v7 = v10 + 2;
        if (v10 + 2 >= v58)
          goto LABEL_28;
        v11 = *(_QWORD *)(v56 + 8 * v7);
        if (!v11)
        {
          v7 = v10 + 3;
          if (v10 + 3 >= v58)
            goto LABEL_28;
          v11 = *(_QWORD *)(v56 + 8 * v7);
          if (!v11)
          {
            v7 = v10 + 4;
            if (v10 + 4 >= v58)
              goto LABEL_28;
            v11 = *(_QWORD *)(v56 + 8 * v7);
            if (!v11)
              break;
          }
        }
      }
    }
LABEL_23:
    v6 = (v11 - 1) & v11;
  }
  v12 = v10 + 5;
  if (v12 >= v58)
    goto LABEL_28;
  v11 = *(_QWORD *)(v56 + 8 * v12);
  if (v11)
  {
    v7 = v12;
    goto LABEL_23;
  }
  while (1)
  {
    v7 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v7 >= v58)
      goto LABEL_28;
    v11 = *(_QWORD *)(v56 + 8 * v7);
    ++v12;
    if (v11)
      goto LABEL_23;
  }
  __break(1u);
}

uint64_t sub_100593DFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t (*v14)(_QWORD);
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t inited;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t (*v53)(uint64_t);
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __n128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __n128 v69;
  char *v70;
  char v71[72];
  char v72[72];
  char v73[72];
  _BYTE v74[32];
  uint64_t v75;

  v5 = sub_1004B804C(&qword_1013E4690);
  __chkstk_darwin(v5);
  v7 = &v71[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = type metadata accessor for CRLBoardViewModelMetadata(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v70 = &v71[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  __chkstk_darwin(v11);
  v13 = &v71[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v75 = a1;
  sub_1004B8460(a1, (uint64_t)v13, v14);
  if (swift_getEnumCaseMultiPayload(v13, v11) == 1)
  {
    sub_1004B84E0((uint64_t)v13, a2, type metadata accessor for CRLBoardIdentifier);
    sub_100C9F8F8(a2, (uint64_t)v7);
    if (v2)
    {
      swift_errorRelease(v2);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
      return sub_1004CB800((uint64_t)v7, &qword_1013E4690);
    }
    v32 = a2;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
    v33 = (uint64_t)v70;
    sub_1004B84E0((uint64_t)v7, (uint64_t)v70, type metadata accessor for CRLBoardViewModelMetadata);
    if ((*(_BYTE *)(v33 + *(int *)(v8 + 40)) & 1) != 0)
    {
      if (qword_1013DD750 != -1)
        swift_once(&qword_1013DD750, sub_100A02540);
      swift_beginAccess(&static OS_os_log.crlBoardPreviewImageCache, v74, 0, 0);
      v34 = (void *)static OS_os_log.crlBoardPreviewImageCache;
      v35 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v35, v71);
      *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
      v37 = v34;
      v38 = UUID.uuidString.getter(v37);
      v40 = v39;
      *(_QWORD *)(inited + 56) = &type metadata for String;
      *(_QWORD *)(inited + 64) = sub_1004CFC2C();
      *(_QWORD *)(inited + 32) = v38;
      *(_QWORD *)(inited + 40) = v40;
      v42 = static os_log_type_t.default.getter(v41);
      sub_100A06EBC((uint64_t)v37, &_mh_execute_header, v42, "Throwing unsupportedItemType for board UUID: @%", 47, 2, inited);
      swift_setDeallocating(inited);
      v43 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(inited + 32, 1, v43);

      v44 = type metadata accessor for CRLBoardPreviewImageCache.CacheError(0);
      v45 = sub_1004B7878(&qword_1013E45E8, type metadata accessor for CRLBoardPreviewImageCache.CacheError, (uint64_t)&unk_100EFB580);
      swift_allocError(v44, v45, 0, 0);
      v47 = v46;
      sub_1004B8460(v75, v46, type metadata accessor for CRLBoardPreviewImageCache.Item);
      v48 = v47;
      v49 = v44;
      v50 = 0;
    }
    else
    {
      v51 = v33 + *(int *)(v8 + 44);
      if ((*(_BYTE *)(v51 + 8) & 1) != 0 || (v52 = *(_QWORD *)v51, v52 < sub_1001E9730()))
      {
        v53 = type metadata accessor for CRLBoardViewModelMetadata;
        v54 = v33;
        return sub_1004B84A4(v54, v53);
      }
      if (qword_1013DD750 != -1)
        swift_once(&qword_1013DD750, sub_100A02540);
      swift_beginAccess(&static OS_os_log.crlBoardPreviewImageCache, v74, 0, 0);
      v55 = (void *)static OS_os_log.crlBoardPreviewImageCache;
      v56 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v57 = swift_initStackObject(v56, v72);
      *(_OWORD *)(v57 + 16) = xmmword_100EF5E40;
      v58 = v55;
      v59 = UUID.uuidString.getter(v58);
      v61 = v60;
      *(_QWORD *)(v57 + 56) = &type metadata for String;
      *(_QWORD *)(v57 + 64) = sub_1004CFC2C();
      *(_QWORD *)(v57 + 32) = v59;
      *(_QWORD *)(v57 + 40) = v61;
      v63 = static os_log_type_t.default.getter(v62);
      sub_100A06EBC((uint64_t)v58, &_mh_execute_header, v63, "Throwing lastBoardOpenCrashed for board UUID: @%", 48, 2, v57);
      swift_setDeallocating(v57);
      v64 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(v57 + 32, 1, v64);

      v65 = type metadata accessor for CRLBoardPreviewImageCache.CacheError(0);
      v66 = sub_1004B7878(&qword_1013E45E8, type metadata accessor for CRLBoardPreviewImageCache.CacheError, (uint64_t)&unk_100EFB580);
      swift_allocError(v65, v66, 0, 0);
      v68 = v67;
      sub_1004B8460(v75, v67, type metadata accessor for CRLBoardPreviewImageCache.Item);
      v48 = v68;
      v49 = v65;
      v50 = 1;
    }
    swift_storeEnumTagMultiPayload(v48, v49, v50);
    swift_willThrow(v69);
    sub_1004B84A4(v33, type metadata accessor for CRLBoardViewModelMetadata);
    v53 = type metadata accessor for CRLBoardIdentifier;
    v54 = v32;
    return sub_1004B84A4(v54, v53);
  }
  sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLBoardPreviewImageCache.Item);
  if (qword_1013DD750 != -1)
    swift_once(&qword_1013DD750, sub_100A02540);
  swift_beginAccess(&static OS_os_log.crlBoardPreviewImageCache, v74, 0, 0);
  v16 = (void *)static OS_os_log.crlBoardPreviewImageCache;
  v17 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  v18 = swift_initStackObject(v17, v73);
  *(_OWORD *)(v18 + 16) = xmmword_100EF5E40;
  v19 = v16;
  v20 = v75;
  v21 = sub_10058A6C4();
  v23 = v22;
  *(_QWORD *)(v18 + 56) = &type metadata for String;
  *(_QWORD *)(v18 + 64) = sub_1004CFC2C();
  *(_QWORD *)(v18 + 32) = v21;
  *(_QWORD *)(v18 + 40) = v23;
  v25 = static os_log_type_t.default.getter(v24);
  sub_100A06EBC((uint64_t)v19, &_mh_execute_header, v25, "Throwing unsupportedItemType for item: @%", 41, 2, v18);
  swift_setDeallocating(v18);
  v26 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v18 + 32, 1, v26);

  v27 = type metadata accessor for CRLBoardPreviewImageCache.CacheError(0);
  v28 = sub_1004B7878(&qword_1013E45E8, type metadata accessor for CRLBoardPreviewImageCache.CacheError, (uint64_t)&unk_100EFB580);
  swift_allocError(v27, v28, 0, 0);
  v30 = v29;
  sub_1004B8460(v20, v29, type metadata accessor for CRLBoardPreviewImageCache.Item);
  swift_storeEnumTagMultiPayload(v30, v27, 0);
  return swift_willThrow(v31);
}

id sub_100594468()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache____lazy_storage___defaultUnsupportedImage;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache____lazy_storage___defaultUnsupportedImage);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache____lazy_storage___defaultUnsupportedImage);
  }
  else
  {
    v4 = sub_1005944C4();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1005944C4()
{
  id v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  Class isa;
  id v8;
  id v9;
  id v10;
  NSString v11;
  id v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  double v21;
  double v22;
  double v23;
  double v24;
  UIImage *v25;
  id v26;
  id v27;
  CGSize v29;

  v0 = objc_msgSend((id)objc_opt_self(UIColor), "tintColor");
  v1 = (void *)objc_opt_self(UIImageSymbolConfiguration);
  v2 = objc_msgSend(v1, "configurationWithPointSize:weight:", 7, 48.0);
  v3 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v4 = swift_allocObject(v3, 40, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100EEF400;
  *(_QWORD *)(v4 + 32) = v0;
  specialized Array._endMutation()(v4);
  sub_1004B8930(0, (unint64_t *)&qword_1013F4260, UIColor_ptr);
  v5 = v2;
  v6 = v0;
  isa = Array._bridgeToObjectiveC()().super.isa;
  v8 = objc_msgSend(v1, "configurationWithPaletteColors:", isa, swift_bridgeObjectRelease().n128_f64[0]);

  v9 = objc_msgSend(v5, "configurationByApplyingConfiguration:", v8);
  v10 = v9;
  v11 = String._bridgeToObjectiveC()();
  v12 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v11, v10);

  if (v12)
  {
    objc_msgSend(v12, "size");
    v14 = v13 + v13;
    objc_msgSend(v12, "size");
    v16 = v15 + v15;
    objc_msgSend(v12, "size");
    v18 = (v14 - v17) * 0.5;
    objc_msgSend(v12, "size");
    v20 = (v16 - v19) * 0.5;
    objc_msgSend(v12, "size");
    v22 = v21;
    objc_msgSend(v12, "size");
    v24 = v23;
    v29.width = v14;
    v29.height = v16;
    UIGraphicsBeginImageContextWithOptions(v29, 0, 2.0);
    objc_msgSend(v12, "drawInRect:", v18, v20, v22, v24);
    v25 = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();
    v26 = objc_allocWithZone((Class)CRLImage);
    if (v25)
    {
      v27 = objc_msgSend(v26, "initWithUIImage:", v25);

    }
    else
    {
      v27 = objc_msgSend(v26, "init");

    }
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"defaultUnsupportedImage", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardPreviewImageCache.swift", 101, 2, 810, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"defaultUnsupportedImage", 23, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardPreviewImageCache.swift", 101, 2u, 810, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    v27 = objc_msgSend(objc_allocWithZone((Class)CRLImage), "init");
  }

  return v27;
}

uint64_t type metadata accessor for CRLBoardPreviewImageCache()
{
  return objc_opt_self(_TtC8Freeform25CRLBoardPreviewImageCache);
}

uint64_t sub_100594894()
{
  return type metadata accessor for CRLBoardPreviewImageCache.LookupKey(0);
}

uint64_t type metadata accessor for CRLBoardPreviewImageCache.LookupKey(uint64_t a1)
{
  return sub_1004BD408(a1, (uint64_t *)&unk_1013E4368, (uint64_t)&nominal type descriptor for CRLBoardPreviewImageCache.LookupKey);
}

uint64_t sub_1005948B0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for CRLBoardPreviewImageCache.Item(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100EFA658;
    v4[2] = (char *)&value witness table for Builtin.Int64 + 64;
    result = swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for CRLBoardPreviewImageCache.Item(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1013E4560, (uint64_t)&nominal type descriptor for CRLBoardPreviewImageCache.Item);
}

uint64_t type metadata accessor for CRLBoardPreviewImageCache.CacheEntry()
{
  return objc_opt_self(_TtCC8Freeform25CRLBoardPreviewImageCache10CacheEntry);
}

id sub_100594968(void *a1)
{
  id v2;

  if (qword_1013DCAD0 != -1)
    swift_once(&qword_1013DCAD0, sub_10058E1DC);
  v2 = objc_msgSend((id)qword_10147EA40, "UIColor");
  objc_msgSend(v2, "setFill");

  return objc_msgSend(a1, "fillRect:", sub_10005FDDC());
}

uint64_t sub_100594A04(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  uint64_t inited;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  double *v24;
  double v25;
  double v26;
  double v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  int EnumCaseMultiPayload;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  char v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  _QWORD *v55;
  void *v56;
  void *v57;
  double *v58;
  id v59;
  id v60;
  __int128 v62;
  __int128 v63;
  void *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  char *v71;
  _BYTE v72[72];
  _BYTE v73[24];
  _OWORD v74[2];
  char v75;

  v2 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v2);
  v71 = (char *)&v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRLBoardIdentifier(0);
  v66 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v68 = (uint64_t)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = v5;
  __chkstk_darwin(v6);
  v69 = (uint64_t)&v62 - v7;
  v8 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v62 - v12;
  if (qword_1013DD750 != -1)
    swift_once(&qword_1013DD750, sub_100A02540);
  swift_beginAccess(&static OS_os_log.crlBoardPreviewImageCache, v73, 0, 0);
  v14 = (void *)static OS_os_log.crlBoardPreviewImageCache;
  v15 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v15, v72);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v17 = v14;
  v18 = sub_10058C19C();
  v20 = v19;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v18;
  *(_QWORD *)(inited + 40) = v20;
  v22 = static os_log_type_t.default.getter(v21);
  sub_100A06EBC((uint64_t)v17, &_mh_execute_header, v22, "Starting imaging task for: %@", 29, 2, inited);
  swift_setDeallocating(inited);
  v23 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v23);

  sub_1004B8460(a1 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_item, (uint64_t)v13, type metadata accessor for CRLBoardPreviewImageCache.Item);
  if (*(_BYTE *)(a1 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass + 16) == 1)
  {
    v24 = &dbl_100EFB730[*(_QWORD *)(a1 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass)];
    v25 = *v24;
  }
  else
  {
    v24 = (double *)(a1 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass + 8);
    v25 = *(double *)(a1 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass);
  }
  v26 = *v24;
  v27 = *(double *)(a1 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_contentsScale);
  if (qword_1013DCAD0 != -1)
    swift_once(&qword_1013DCAD0, sub_10058E1DC);
  v28 = qword_10147EA40;
  v29 = sub_1000603DC(v25, v26, v27);
  v31 = v30;
  sub_1004B8460((uint64_t)v13, (uint64_t)v10, type metadata accessor for CRLBoardPreviewImageCache.Item);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v10, v8);
  if (EnumCaseMultiPayload)
  {
    v64 = (void *)v28;
    v65 = v13;
    if (EnumCaseMultiPayload == 1)
    {
      v33 = v69;
      v34 = sub_1004B84E0((uint64_t)v10, v69, type metadata accessor for CRLBoardIdentifier);
      v35 = 0uLL;
      v36 = 1;
      v37 = 0uLL;
    }
    else
    {
      v43 = sub_1004B804C((uint64_t *)&unk_1013DE640);
      v44 = &v10[*(int *)(v43 + 48)];
      v45 = &v10[*(int *)(v43 + 64)];
      v63 = *(_OWORD *)v45;
      v62 = *((_OWORD *)v45 + 1);
      v33 = v69;
      sub_1004B84E0((uint64_t)v10, v69, type metadata accessor for CRLBoardIdentifier);
      v46 = type metadata accessor for UUID(0);
      v34 = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v46 - 8) + 8))(v44, v46);
      v37 = v62;
      v35 = v63;
      v36 = 0;
    }
    v74[0] = v35;
    v74[1] = v37;
    v75 = v36;
    v47 = (uint64_t)v71;
    static TaskPriority.background.getter(v34);
    v48 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v47, 0, 1, v48);
    v49 = v68;
    sub_1004B8460(v33, v68, type metadata accessor for CRLBoardIdentifier);
    v50 = *(unsigned __int8 *)(v66 + 80);
    v51 = (v50 + 40) & ~v50;
    v52 = (v67 + v51 + 7) & 0xFFFFFFFFFFFFFFF8;
    v53 = (v52 + 15) & 0xFFFFFFFFFFFFFFF8;
    v54 = (v53 + 23) & 0xFFFFFFFFFFFFFFF8;
    v55 = (_QWORD *)swift_allocObject(&unk_10126DDF0, v54 + 33, v50 | 7);
    v55[2] = 0;
    v55[3] = 0;
    v56 = v70;
    v55[4] = v70;
    sub_1004B84E0(v49, (uint64_t)v55 + v51, type metadata accessor for CRLBoardIdentifier);
    v57 = v64;
    *(_QWORD *)((char *)v55 + v52) = v64;
    v58 = (double *)((char *)v55 + v53);
    *v58 = v29;
    *((_QWORD *)v58 + 1) = v31;
    sub_10057B588((uint64_t)v74, (uint64_t)v55 + v54);
    v59 = v56;
    v60 = v57;
    v41 = sub_100595940(v47, (uint64_t)&unk_1013E4638, (uint64_t)v55);
    sub_1004CB800(v47, &qword_1013E01F0);
    sub_1004B84A4(v33, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4((uint64_t)v65, type metadata accessor for CRLBoardPreviewImageCache.Item);
  }
  else
  {
    v38 = type metadata accessor for CRLBoardPreviewImageCache.CacheError(0);
    v39 = sub_1004B7878(&qword_1013E45E8, type metadata accessor for CRLBoardPreviewImageCache.CacheError, (uint64_t)&unk_100EFB580);
    swift_allocError(v38, v39, 0, 0);
    v41 = v40;
    sub_1004B8460((uint64_t)v13, v40, type metadata accessor for CRLBoardPreviewImageCache.Item);
    swift_storeEnumTagMultiPayload(v41, v38, 0);
    swift_willThrow(v42);
    sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLBoardPreviewImageCache.Item);
    sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLBoardPreviewImageCache.Item);
  }
  return v41;
}

uint64_t sub_100594FC0(uint64_t a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v9 + 112) = a9;
  *(double *)(v9 + 96) = a2;
  *(double *)(v9 + 104) = a3;
  *(_QWORD *)(v9 + 80) = a7;
  *(_QWORD *)(v9 + 88) = a8;
  *(_QWORD *)(v9 + 64) = a1;
  *(_QWORD *)(v9 + 72) = a6;
  v10 = type metadata accessor for CRLBoardIdentifier(0);
  *(_QWORD *)(v9 + 120) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100595024, 0, 0);
}

uint64_t sub_100595024()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0[16] = *(_QWORD *)(v0[9] + OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_boardLibrary);
  v1 = type metadata accessor for MainActor(0);
  v0[17] = v1;
  v0[18] = static MainActor.shared.getter(v1);
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_1005950A4, v2, v3);
}

uint64_t sub_1005950A4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;

  v1 = v0[15];
  v2 = v0[16];
  v3 = v0[10];
  swift_release(v0[18]);
  sub_1004B8460(v3, v1, type metadata accessor for CRLBoardIdentifier);
  v4 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store);
  v5 = type metadata accessor for CRLBoardActor(0);
  v6 = swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  v0[19] = v6;
  v7 = v4;
  swift_defaultActor_initialize(v6, v8);
  sub_1004B84E0(v1, v6 + OBJC_IVAR____TtC8Freeform13CRLBoardActor_boardIdentifier, type metadata accessor for CRLBoardIdentifier);
  *(_QWORD *)(v6 + OBJC_IVAR____TtC8Freeform13CRLBoardActor_store) = v7;
  return swift_task_switch(sub_10059516C, v6, 0);
}

uint64_t sub_10059516C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 152);
  type metadata accessor for CRLImmutableBoard(0);
  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform13CRLBoardActor_store);
  v3 = v1 + OBJC_IVAR____TtC8Freeform13CRLBoardActor_boardIdentifier;
  v4 = (_QWORD *)swift_task_alloc(dword_1013E8364);
  *(_QWORD *)(v0 + 160) = v4;
  *v4 = v0;
  v4[1] = sub_1005951F0;
  return sub_100618D44(v2, v3, 1);
}

uint64_t sub_1005951F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 160);
  *(_QWORD *)(v3 + 168) = a1;
  *(_QWORD *)(v3 + 176) = v1;
  swift_task_dealloc(v4);
  if (v1)
    v5 = sub_10059546C;
  else
    v5 = sub_10059525C;
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_10059525C()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  double v12;
  uint64_t v13;
  Class isa;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = objc_msgSend(objc_allocWithZone((Class)CRLCanvasImager), "initWithBoard:", v1);
  *(_QWORD *)(v0 + 184) = v2;
  v3 = *(char **)(v1 + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer);
  v4 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
  v5 = *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems];
  v6 = v3;
  if (!v5)
  {
    sub_100740DA4();
    v5 = *(_QWORD *)&v3[v4];
  }
  if (v5)
    v7 = v5;
  else
    v7 = (uint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)v7 >> 62)
  {
    if (v7 < 0)
      v20 = v7;
    else
      v20 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    swift_bridgeObjectRetain(v7);
    v21 = sub_1004B804C(&qword_1013E0670);
    v9 = _bridgeCocoaArray<A>(_:)(v20, v21);
    swift_bridgeObjectRelease(v7);
  }
  else
  {
    swift_bridgeObjectRetain(v5);
    v8 = swift_bridgeObjectRetain(v7);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v8);
    v9 = v7;
  }

  v10 = *(_QWORD *)(v0 + 112);
  v12 = *(double *)(v0 + 96);
  v11 = *(double *)(v0 + 104);
  v13 = *(_QWORD *)(v0 + 88);
  swift_bridgeObjectRelease(v7);
  sub_1004B804C(&qword_1013E0670);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v2, "setInfos:", isa, swift_bridgeObjectRelease(v9).n128_f64[0]);

  objc_msgSend(v2, "setBackgroundColor:", v13);
  objc_msgSend(v2, "setScaledImageSize:", v12, v11);
  v15 = (id)sub_10057B588(v10, v0 + 16);
  if ((*(_BYTE *)(v0 + 48) & 1) == 0)
    v15 = objc_msgSend(v2, "setUnscaledClipRect:", *(double *)(v0 + 16), *(double *)(v0 + 24), *(double *)(v0 + 32), *(double *)(v0 + 40));
  v16 = *(_QWORD *)(v0 + 136);
  *(_QWORD *)(v0 + 192) = OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_imagerQueue;
  *(_QWORD *)(v0 + 200) = static MainActor.shared.getter(v15);
  v17 = dispatch thunk of Actor.unownedExecutor.getter(v16, &protocol witness table for MainActor);
  return swift_task_switch(sub_1005954AC, v17, v18);
}

uint64_t sub_10059546C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 120);
  swift_release(*(_QWORD *)(v0 + 152));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005954AC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[24];
  v2 = v0[9];
  swift_release(v0[25]);
  v0[26] = *(_QWORD *)(v2 + v1);
  return swift_task_switch(sub_1005954F4, 0, 0);
}

uint64_t sub_1005954F4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v1 = v0[26];
  v2 = v0[23];
  v3 = swift_task_alloc(32);
  v0[27] = v3;
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  v0[28] = v4;
  v5 = sub_1004B804C(&qword_1013E4648);
  *v4 = v0;
  v4[1] = sub_1005955A8;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 7, 0, 0, 0xD000000000000019, 0x8000000100FB54D0, sub_10059E44C, v3, v5);
}

uint64_t sub_1005955A8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 216);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 224));
  swift_task_dealloc(v1);
  return swift_task_switch(sub_100595604, 0, 0);
}

uint64_t sub_100595604(uint64_t a1)
{
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();
  uint64_t v9;

  v2 = (void *)v1[7];
  v3 = v1[17];
  if (v2)
  {
    v1[29] = objc_msgSend(objc_allocWithZone((Class)CRLImage), "initWithCGImage:", v2);

    v1[30] = static MainActor.shared.getter(v4);
    v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
    v7 = v6;
    v8 = sub_1005956C4;
  }
  else
  {
    v1[33] = static MainActor.shared.getter(a1);
    v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
    v7 = v9;
    v8 = sub_100595878;
  }
  return swift_task_switch(v8, v5, v7);
}

uint64_t sub_1005956C4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[9];
  swift_release(v0[30]);
  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_assetDownloadHelper);
  v0[31] = v2;
  swift_retain(v2);
  return swift_task_switch(sub_100595718, 0, 0);
}

uint64_t sub_100595718()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 248);
  v2 = objc_msgSend(*(id *)(v0 + 184), "previousRenderDatasNeedingDownload");
  v3 = type metadata accessor for CRLAsset();
  v4 = sub_1004B7878((unint64_t *)&unk_1013E4650, (uint64_t (*)(uint64_t))type metadata accessor for CRLAsset, (uint64_t)&protocol conformance descriptor for NSObject);
  *(_QWORD *)(v0 + 256) = static Set._unconditionallyBridgeFromObjectiveC(_:)(v2, v3, v4);

  return swift_task_switch(sub_1005957B4, v1, 0);
}

uint64_t sub_1005957B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 248);
  v1 = *(_QWORD *)(v0 + 256);
  sub_10056F42C(v1, *(char **)(v0 + 168));
  swift_bridgeObjectRelease(v1);
  swift_release(v2);
  return swift_task_switch(sub_100595808, 0, 0);
}

uint64_t sub_100595808()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 232);
  v2 = *(void **)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 152);
  v4 = *(_QWORD *)(v0 + 120);
  v5 = *(_QWORD **)(v0 + 64);

  swift_release(v3);
  *v5 = v1;
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100595878()
{
  double *v0;
  double v1;
  double v2;
  uint64_t v3;

  v2 = v0[12];
  v1 = v0[13];
  swift_release(*((_QWORD *)v0 + 33));
  sub_1005A1080(v2, v1);
  *((_QWORD *)v0 + 34) = v3;
  return swift_task_switch(sub_1005958D0, 0, 0);
}

uint64_t sub_1005958D0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 272);
  v2 = *(void **)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 152);
  v4 = *(_QWORD *)(v0 + 120);
  v5 = *(_QWORD **)(v0 + 64);

  swift_release(v3);
  *v5 = v1;
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100595940(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD v23[4];

  v6 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v6);
  v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004CB7BC(a1, (uint64_t)v8, &qword_1013E01F0);
  v9 = type metadata accessor for TaskPriority(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1004CB800((uint64_t)v8, &qword_1013E01F0);
    v12 = 4096;
    v13 = *(_QWORD *)(a3 + 16);
    if (v13)
    {
LABEL_3:
      v14 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType(v13);
      swift_unknownObjectRetain(v13);
      v16 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v14);
      v18 = v17;
      swift_unknownObjectRelease(v13);
      goto LABEL_6;
    }
  }
  else
  {
    v19 = TaskPriority.rawValue.getter(v11);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    v12 = v19 | 0x1000;
    v13 = *(_QWORD *)(a3 + 16);
    if (v13)
      goto LABEL_3;
  }
  v16 = 0;
  v18 = 0;
LABEL_6:
  v20 = sub_1004B8930(0, (unint64_t *)&qword_1013E45F0, off_1012298E8);
  if (v18 | v16)
  {
    v23[0] = 0;
    v23[1] = 0;
    v21 = v23;
    v23[2] = v16;
    v23[3] = v18;
  }
  else
  {
    v21 = 0;
  }
  return swift_task_create(v12, v21, v20, a2);
}

uint64_t sub_100595ACC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  unsigned __int8 v20;
  _QWORD v22[4];

  v6 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v6);
  v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004CB7BC(a1, (uint64_t)v8, &qword_1013E01F0);
  v9 = type metadata accessor for TaskPriority(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1004CB800((uint64_t)v8, &qword_1013E01F0);
    v12 = 4096;
    v13 = *(_QWORD *)(a3 + 16);
    if (!v13)
    {
LABEL_6:
      v19 = 0;
      return swift_task_create(v12, v19, (char *)&type metadata for () + 8, a2);
    }
  }
  else
  {
    v20 = TaskPriority.rawValue.getter(v11);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    v12 = v20 | 0x1000;
    v13 = *(_QWORD *)(a3 + 16);
    if (!v13)
      goto LABEL_6;
  }
  v14 = *(_QWORD *)(a3 + 24);
  ObjectType = swift_getObjectType(v13);
  swift_unknownObjectRetain(v13);
  v16 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v14);
  v18 = v17;
  swift_unknownObjectRelease(v13);
  if (!(v18 | v16))
    goto LABEL_6;
  v22[0] = 0;
  v22[1] = 0;
  v19 = v22;
  v22[2] = v16;
  v22[3] = v18;
  return swift_task_create(v12, v19, (char *)&type metadata for () + 8, a2);
}

uint64_t sub_100595C4C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2[126] = v1;
  v2[125] = a1;
  v3 = sub_1004B804C(&qword_1013E01F0);
  v2[127] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  v2[128] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[129] = v5;
  v2[130] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CRLBoardIdentifier(0);
  v2[131] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MainActor(0);
  v2[132] = v7;
  v2[133] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  v2[134] = v8;
  v2[135] = v9;
  return swift_task_switch(sub_100595D30, v8, v9);
}

uint64_t sub_100595D30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  _QWORD *v16;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  char v19;
  unint64_t v20;
  uint64_t v21;
  _BOOL8 v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t inited;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  _QWORD *v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD v71[6];

  v1 = *(_QWORD *)(v0 + 1048);
  v2 = *(_QWORD *)(v0 + 1000);
  v3 = OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_item;
  *(_QWORD *)(v0 + 1088) = OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_item;
  v4 = v2 + v3;
  v5 = 0;
  sub_100593DFC(v2 + v3, v1);
  v6 = sub_1005970F0(*(_QWORD *)(v0 + 1000));
  if (!v6)
  {
    v12 = v0 + 696;
    v20 = v0 + 960;
    if (qword_1013DD750 != -1)
      goto LABEL_23;
    goto LABEL_12;
  }
  v11 = 0;
  v5 = v6;
  while (1)
  {
    v12 = v0 + 912;
    *(_QWORD *)(v0 + 1104) = v11;
    *(_QWORD *)(v0 + 1096) = v5;
    v13 = *(_QWORD *)(v0 + 1008);
    v14 = *(_QWORD *)(v0 + 1000);
    objc_msgSend(*(id *)(v13 + OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_cache), "setObject:forKey:", v5, v14, swift_retain(v6).n128_f64[0]);
    v69 = *(_QWORD *)(v14 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass + 8);
    v70 = *(_QWORD *)(v14 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass);
    v68 = *(_BYTE *)(v14 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass + 16);
    v15 = *(double *)(v14 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_contentsScale);
    v16 = (_QWORD *)(v13 + OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_cachedSizes);
    swift_beginAccess(v13 + OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_cachedSizes, v0 + 912, 33, 0);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v16);
    v71[0] = *v16;
    v18 = v71[0];
    *v16 = 0x8000000000000000;
    v20 = sub_100843760(v4);
    v21 = *(_QWORD *)(v18 + 16);
    v22 = (v19 & 1) == 0;
    v23 = v21 + v22;
    if (!__OFADD__(v21, v22))
      break;
    __break(1u);
LABEL_23:
    swift_once(&qword_1013DD750, sub_100A02540);
LABEL_12:
    v27 = *(_QWORD *)(v0 + 1000);
    swift_beginAccess(&static OS_os_log.crlBoardPreviewImageCache, v20, 0, 0);
    v28 = (void *)static OS_os_log.crlBoardPreviewImageCache;
    v29 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v29, v12);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v31 = v28;
    v32 = sub_10058C19C();
    v34 = v33;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = sub_1004CFC2C();
    *(_QWORD *)(inited + 32) = v32;
    *(_QWORD *)(inited + 40) = v34;
    v36 = static os_log_type_t.default.getter(v35);
    sub_100A06EBC((uint64_t)v31, &_mh_execute_header, v36, "Unable to restore cache entry from persistent file: %@", 54, 2, inited);
    swift_setDeallocating(inited);
    v37 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v37);

    v38 = sub_100594A04(v27);
    if (v5)
    {
      v7 = *(_QWORD *)(v0 + 1048);
      swift_release(*(_QWORD *)(v0 + 1064));
      sub_1004B84A4(v7, type metadata accessor for CRLBoardIdentifier);
      v8 = *(_QWORD *)(v0 + 1040);
      v9 = *(_QWORD *)(v0 + 1016);
      swift_task_dealloc(*(_QWORD *)(v0 + 1048));
      swift_task_dealloc(v8);
      swift_task_dealloc(v9);
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    v11 = v38;
    v39 = *(void **)(v0 + 1000);
    v40 = type metadata accessor for CRLBoardPreviewImageCache.CacheEntry();
    v5 = swift_allocObject(v40, 129, 15);
    v41 = v39;
    swift_defaultActor_initialize(v5, v42);
    *(_BYTE *)(v5 + 128) = 0x80;
    *(_QWORD *)(v5 + 112) = v41;
    *(_QWORD *)(v5 + 120) = 0;
    swift_retain(v5);
    v6 = 0;
  }
  v24 = v19;
  if (*(_QWORD *)(v18 + 24) >= v23)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_10082E294();
      v18 = v71[0];
    }
  }
  else
  {
    sub_100817C58(v23, isUniquelyReferenced_nonNull_native);
    v18 = v71[0];
    v25 = sub_100843760(v4);
    if ((v24 & 1) != (v26 & 1))
      return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(*(_QWORD *)(v0 + 1024));
    v20 = v25;
  }
  v43 = *v16;
  *v16 = v18;
  swift_bridgeObjectRelease(v43);
  v44 = (_QWORD *)*v16;
  swift_bridgeObjectRetain(*v16);
  if ((v24 & 1) == 0)
  {
    v45 = *(_QWORD *)(v0 + 1040);
    sub_1004B8460(v4, v45, type metadata accessor for CRLBoardPreviewImageCache.Item);
    sub_10082B3D8(v20, v45, (uint64_t)&_swiftEmptySetSingleton, v44);
  }
  swift_bridgeObjectRelease(v44);
  sub_100AD957C((uint64_t)v71, v70, v69, v68, v15);
  swift_endAccess(v0 + 912);
  if (v11)
  {
    v46 = qword_1013DD750;
    swift_retain(v11);
    if (v46 != -1)
      swift_once(&qword_1013DD750, sub_100A02540);
    swift_beginAccess(&static OS_os_log.crlBoardPreviewImageCache, v0 + 936, 0, 0);
    v47 = (void *)static OS_os_log.crlBoardPreviewImageCache;
    v48 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    *(_QWORD *)(v0 + 1112) = v48;
    v49 = swift_initStackObject(v48, v0 + 768);
    *(_OWORD *)(v49 + 16) = xmmword_100EF5E40;
    v50 = v47;
    v51 = UUID.uuidString.getter(v50);
    v53 = v52;
    *(_QWORD *)(v49 + 56) = &type metadata for String;
    v54 = sub_1004CFC2C();
    *(_QWORD *)(v0 + 1120) = v54;
    *(_QWORD *)(v49 + 64) = v54;
    *(_QWORD *)(v49 + 32) = v51;
    *(_QWORD *)(v49 + 40) = v53;
    v56 = static os_log_type_t.default.getter(v55);
    sub_100A06EBC((uint64_t)v50, &_mh_execute_header, v56, "Starting board thumbnail generation for board UUID: %@", 54, 2, v49);
    swift_setDeallocating(v49);
    v57 = sub_1004B804C(&qword_1013E0190);
    *(_QWORD *)(v0 + 1128) = v57;
    swift_arrayDestroy(v49 + 32, 1, v57);

    return swift_task_switch(sub_100596358, v5, 0);
  }
  else
  {
    v58 = *(_QWORD *)(v0 + 1032);
    v59 = *(_QWORD *)(v0 + 1024);
    v60 = *(_QWORD *)(v0 + 1000) + *(_QWORD *)(v0 + 1088);
    v61 = sub_1004B804C(&qword_1013E45D8);
    v62 = *(unsigned __int8 *)(v58 + 80);
    v63 = (v62 + 32) & ~v62;
    v64 = swift_allocObject(v61, v63 + *(_QWORD *)(v58 + 72), v62 | 7);
    *(_OWORD *)(v64 + 16) = xmmword_100EF5E40;
    v65 = v64 + v63;
    sub_1004B8460(v60, v65, type metadata accessor for CRLBoardPreviewImageCache.Item);
    v66 = sub_1004B6308(v64);
    *(_QWORD *)(v0 + 1160) = v66;
    swift_setDeallocating(v64);
    swift_arrayDestroy(v65, 1, v59);
    swift_deallocClassInstance(v64, 32, 7);
    v67 = (_QWORD *)swift_task_alloc(dword_1013E45E4);
    *(_QWORD *)(v0 + 1168) = v67;
    *v67 = v0;
    v67[1] = sub_1005968E8;
    return sub_10058EDBC((uint64_t)v66);
  }
}

uint64_t sub_100596358()
{
  _QWORD *v0;
  uint64_t v1;
  int v2;
  BOOL v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v1 = v0[137];
  v2 = *(unsigned __int8 *)(v1 + 128);
  if ((v2 & 0xC0) == 0x80 && (v2 == 128 ? (v3 = *(_QWORD *)(v1 + 120) == 0) : (v3 = 0), v3))
  {
    v9 = v0[138];
    *(_QWORD *)(v1 + 120) = v9;
    *(_BYTE *)(v1 + 128) = 0;
    swift_retain(v9);
    sub_10059BC90(0, 0x80u);
    v10 = (_QWORD *)swift_task_alloc(async function pointer to Task.result.getter[1]);
    v0[143] = v10;
    v11 = sub_1004B8930(0, (unint64_t *)&qword_1013E45F0, off_1012298E8);
    v12 = sub_1004B804C(&qword_1013E0210);
    *v10 = v0;
    v10[1] = sub_10059654C;
    return Task.result.getter(v0 + 123, v9, v11, v12, &protocol self-conformance witness table for Error);
  }
  else
  {
    v4 = type metadata accessor for CRLBoardPreviewImageCache.CacheError(0);
    v5 = sub_1004B7878(&qword_1013E45E8, type metadata accessor for CRLBoardPreviewImageCache.CacheError, (uint64_t)&unk_100EFB580);
    v0[142] = swift_allocError(v4, v5, 0, 0);
    swift_storeEnumTagMultiPayload(v6, v4, 3);
    swift_willThrow(v7);
    return swift_task_switch(sub_1005964BC, v0[134], v0[135]);
  }
}

uint64_t sub_1005964BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 1104);
  v2 = *(_QWORD *)(v0 + 1096);
  v3 = *(_QWORD *)(v0 + 1048);
  v4 = swift_release(*(_QWORD *)(v0 + 1064));
  swift_release_n(v2, 2, v4);
  swift_release_n(v1, 2, v5);
  sub_1004B84A4(v3, type metadata accessor for CRLBoardIdentifier);
  v6 = *(_QWORD *)(v0 + 1040);
  v7 = *(_QWORD *)(v0 + 1016);
  swift_task_dealloc(*(_QWORD *)(v0 + 1048));
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10059654C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 1096);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 1144));
  return swift_task_switch(sub_1005965A4, v1, 0);
}

uint64_t sub_1005965A4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  void *v3;
  unsigned __int8 v4;

  v1 = *(_QWORD *)(v0 + 1096);
  v2 = *(_BYTE *)(v0 + 992) | 0x40;
  v3 = *(void **)(v1 + 120);
  *(_QWORD *)(v1 + 120) = *(_QWORD *)(v0 + 984);
  v4 = *(_BYTE *)(v1 + 128);
  *(_BYTE *)(v1 + 128) = v2;
  sub_10059BC90(v3, v4);
  return swift_task_switch(sub_1005965FC, *(_QWORD *)(v0 + 1072), *(_QWORD *)(v0 + 1080));
}

uint64_t sub_1005965FC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t inited;
  id v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;

  v1 = v0[141];
  v2 = v0[140];
  v3 = v0[137];
  v4 = v0[127];
  v5 = (void *)v0[126];
  v6 = (void *)static OS_os_log.crlBoardPreviewImageCache;
  inited = swift_initStackObject(v0[139], v0 + 105);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v8 = v6;
  v9 = UUID.uuidString.getter(v8);
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = v2;
  *(_QWORD *)(inited + 32) = v9;
  *(_QWORD *)(inited + 40) = v10;
  v12 = static os_log_type_t.default.getter(v11);
  sub_100A06EBC((uint64_t)v8, &_mh_execute_header, v12, "Finished generating board thumbnail for board UUID: %@", 54, 2, inited);
  swift_setDeallocating(inited);
  swift_arrayDestroy(inited + 32, 1, v1);

  static TaskPriority.background.getter(v13);
  v14 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v4, 0, 1, v14);
  v15 = v5;
  swift_retain(v3);
  v17 = static MainActor.shared.getter(v16);
  v18 = (_QWORD *)swift_allocObject(&unk_10126DDC8, 48, 7);
  v18[2] = v17;
  v18[3] = &protocol witness table for MainActor;
  v18[4] = v15;
  v18[5] = v3;
  v19 = sub_100521B98(v4, (uint64_t)&unk_1013E4608, (uint64_t)v18);
  v0[144] = v19;
  v20 = sub_1004CB6A4(&qword_1013E4620);
  swift_asyncLet_begin(v0 + 2, 0, v20, &unk_1013E4618, v19, (char *)v0 + 993);
  return swift_asyncLet_finish(v0 + 2, (char *)v0 + 993, sub_1005967D0, v0 + 82);
}

uint64_t sub_1005967D0()
{
  uint64_t v0;

  return swift_task_switch(sub_1005967E4, *(_QWORD *)(v0 + 1072), *(_QWORD *)(v0 + 1080));
}

uint64_t sub_1005967E4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  _QWORD *v11;

  v1 = v0[138];
  swift_release(v0[144]);
  swift_release(v1);
  v2 = v0[129];
  v3 = v0[128];
  v4 = v0[125] + v0[136];
  v5 = sub_1004B804C(&qword_1013E45D8);
  v6 = *(unsigned __int8 *)(v2 + 80);
  v7 = (v6 + 32) & ~v6;
  v8 = swift_allocObject(v5, v7 + *(_QWORD *)(v2 + 72), v6 | 7);
  *(_OWORD *)(v8 + 16) = xmmword_100EF5E40;
  v9 = v8 + v7;
  sub_1004B8460(v4, v9, type metadata accessor for CRLBoardPreviewImageCache.Item);
  v10 = sub_1004B6308(v8);
  v0[145] = v10;
  swift_setDeallocating(v8);
  swift_arrayDestroy(v9, 1, v3);
  swift_deallocClassInstance(v8, 32, 7);
  v11 = (_QWORD *)swift_task_alloc(dword_1013E45E4);
  v0[146] = v11;
  *v11 = v0;
  v11[1] = sub_1005968E8;
  return sub_10058EDBC((uint64_t)v10);
}

uint64_t sub_1005968E8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 1160);
  swift_task_dealloc(*(_QWORD *)(*v0 + 1168));
  swift_bridgeObjectRelease(v2);
  return swift_task_switch(sub_100596944, *(_QWORD *)(v1 + 1072), *(_QWORD *)(v1 + 1080));
}

uint64_t sub_100596944()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 1104);
  v2 = *(_QWORD *)(v0 + 1096);
  v3 = *(_QWORD *)(v0 + 1048);
  v4 = *(_QWORD *)(v0 + 1040);
  v5 = *(_QWORD *)(v0 + 1016);
  swift_release(*(_QWORD *)(v0 + 1064));
  swift_release(v2);
  swift_release(v1);
  sub_1004B84A4(v3, type metadata accessor for CRLBoardIdentifier);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 1096));
}

uint64_t sub_1005969D8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2[7] = a1;
  v2[8] = v1;
  v3 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  v2[9] = v3;
  v4 = (*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[10] = swift_task_alloc(v4);
  v2[11] = swift_task_alloc(v4);
  v5 = type metadata accessor for MainActor(0);
  v2[12] = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v2[13] = v6;
  v2[14] = v7;
  return swift_task_switch(sub_100596A78, v6, v7);
}

uint64_t sub_100596A78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_item;
  *(_QWORD *)(v0 + 120) = OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_item;
  v5 = v3 + v4;
  sub_1004B8460(v3 + v4, v1, type metadata accessor for CRLBoardPreviewImageCache.Item);
  if (swift_getEnumCaseMultiPayload(v1, v2) == 2)
  {
    v6 = *(_QWORD *)(v0 + 88);
    v7 = *(void **)(v0 + 56);
    v8 = v6 + *(int *)(sub_1004B804C((uint64_t *)&unk_1013DE640) + 48);
    v9 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
    sub_1004B84A4(v6, type metadata accessor for CRLBoardIdentifier);
    v10 = type metadata accessor for CRLBoardPreviewImageCache.CacheEntry();
    v11 = swift_allocObject(v10, 129, 15);
    *(_QWORD *)(v0 + 128) = v11;
    v12 = v7;
    swift_defaultActor_initialize(v11, v13);
    *(_BYTE *)(v11 + 128) = 0x80;
    *(_QWORD *)(v11 + 112) = v12;
    *(_QWORD *)(v11 + 120) = 0;
    *(_QWORD *)(v0 + 136) = sub_100594A04((uint64_t)v12);
    return swift_task_switch(sub_100596C60, v11, 0);
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 96);
    sub_1004B84A4(*(_QWORD *)(v0 + 88), type metadata accessor for CRLBoardPreviewImageCache.Item);
    swift_release(v14);
    v15 = type metadata accessor for CRLBoardPreviewImageCache.CacheError(0);
    v16 = sub_1004B7878(&qword_1013E45E8, type metadata accessor for CRLBoardPreviewImageCache.CacheError, (uint64_t)&unk_100EFB580);
    swift_allocError(v15, v16, 0, 0);
    v18 = v17;
    sub_1004B8460(v5, v17, type metadata accessor for CRLBoardPreviewImageCache.Item);
    swift_storeEnumTagMultiPayload(v18, v15, 0);
    swift_willThrow(v19);
    v20 = *(_QWORD *)(v0 + 80);
    swift_task_dealloc(*(_QWORD *)(v0 + 88));
    swift_task_dealloc(v20);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100596C60()
{
  _QWORD *v0;
  uint64_t v1;
  int v2;
  BOOL v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v1 = v0[16];
  v2 = *(unsigned __int8 *)(v1 + 128);
  if ((v2 & 0xC0) == 0x80 && (v2 == 128 ? (v3 = *(_QWORD *)(v1 + 120) == 0) : (v3 = 0), v3))
  {
    v9 = v0[17];
    *(_QWORD *)(v1 + 120) = v9;
    *(_BYTE *)(v1 + 128) = 0;
    swift_retain(v9);
    sub_10059BC90(0, 0x80u);
    v10 = (_QWORD *)swift_task_alloc(async function pointer to Task.result.getter[1]);
    v0[19] = v10;
    v11 = sub_1004B8930(0, (unint64_t *)&qword_1013E45F0, off_1012298E8);
    v12 = sub_1004B804C(&qword_1013E0210);
    *v10 = v0;
    v10[1] = sub_100596E08;
    return Task.result.getter(v0 + 5, v0[17], v11, v12, &protocol self-conformance witness table for Error);
  }
  else
  {
    v4 = type metadata accessor for CRLBoardPreviewImageCache.CacheError(0);
    v5 = sub_1004B7878(&qword_1013E45E8, type metadata accessor for CRLBoardPreviewImageCache.CacheError, (uint64_t)&unk_100EFB580);
    v0[18] = swift_allocError(v4, v5, 0, 0);
    swift_storeEnumTagMultiPayload(v6, v4, 3);
    swift_willThrow(v7);
    return swift_task_switch(sub_100596DB0, v0[13], v0[14]);
  }
}

uint64_t sub_100596DB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 136);
  swift_release(*(_QWORD *)(v0 + 96));
  swift_release(v2);
  swift_release(v1);
  v3 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 88));
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100596E08()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 128);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 152));
  return swift_task_switch(sub_100596E60, v1, 0);
}

uint64_t sub_100596E60()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  void *v3;
  unsigned __int8 v4;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_BYTE *)(v0 + 48) | 0x40;
  v3 = *(void **)(v1 + 120);
  *(_QWORD *)(v1 + 120) = *(_QWORD *)(v0 + 40);
  v4 = *(_BYTE *)(v1 + 128);
  *(_BYTE *)(v1 + 128) = v2;
  sub_10059BC90(v3, v4);
  return swift_task_switch(sub_100596EB4, *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112));
}

uint64_t sub_100596EB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  double v7;
  _QWORD *v8;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = v1 + *(_QWORD *)(v0 + 120);
  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_cache), "setObject:forKey:", *(_QWORD *)(v0 + 128), v1, swift_release(*(_QWORD *)(v0 + 96)).n128_f64[0]);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass);
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass + 8);
  v6 = *(_BYTE *)(v1 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass + 16);
  v7 = *(double *)(v1 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_contentsScale);
  v8 = (_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_cachedSizes);
  swift_beginAccess(v2 + OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_cachedSizes, v0 + 16, 33, 0);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v25 = (_QWORD *)*v8;
  v10 = v25;
  *v8 = 0x8000000000000000;
  v12 = sub_100843760(v3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    if (v10[3] >= result)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_10082E294();
        v10 = v25;
      }
    }
    else
    {
      v17 = *(_QWORD *)(v0 + 56) + *(_QWORD *)(v0 + 120);
      sub_100817C58(result, isUniquelyReferenced_nonNull_native);
      v10 = v25;
      v18 = sub_100843760(v17);
      if ((v16 & 1) != (v19 & 1))
        return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(*(_QWORD *)(v0 + 72));
      v12 = v18;
    }
    *v8 = v10;
    swift_bridgeObjectRelease();
    v20 = (_QWORD *)*v8;
    swift_bridgeObjectRetain(*v8);
    if ((v16 & 1) == 0)
    {
      v21 = *(_QWORD *)(v0 + 80);
      sub_1004B8460(*(_QWORD *)(v0 + 56) + *(_QWORD *)(v0 + 120), v21, type metadata accessor for CRLBoardPreviewImageCache.Item);
      sub_10082B3D8(v12, v21, (uint64_t)&_swiftEmptySetSingleton, v20);
    }
    v22 = *(_QWORD *)(v0 + 136);
    v24 = *(_QWORD *)(v0 + 80);
    v23 = *(_QWORD *)(v0 + 88);
    swift_bridgeObjectRelease();
    sub_100AD957C((uint64_t)&v25, v4, v5, v6, v7);
    swift_endAccess(v0 + 16);
    swift_release(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 128));
  }
  return result;
}

uint64_t sub_1005970F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSString v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  id v31;
  char v32;

  v3 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v3);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v30 - v11;
  sub_10058FDB4((uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1004CB800((uint64_t)v5, &qword_1013E04D0);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v12, v5, v6);
  v13 = sub_10058C2AC();
  v15 = v14;
  URL.appendingPathComponent(_:isDirectory:)(v13, v14, 0);
  swift_bridgeObjectRelease(v15);
  v16 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
  v17 = URL.isFileURL.getter(v16);
  if ((v17 & 1) == 0)
  {

LABEL_10:
    v27 = *(void (**)(char *, uint64_t))(v7 + 8);
    v27(v9, v6);
    v27(v12, v6);
    return 0;
  }
  v32 = 0;
  URL.path.getter(v17);
  v19 = v18;
  v20 = String._bridgeToObjectiveC()();
  LOBYTE(v19) = objc_msgSend(v16, "fileExistsAtPath:isDirectory:", v20, &v32, swift_bridgeObjectRelease(v19).n128_f64[0]);

  if ((v19 & 1) == 0 || (v32 & 1) != 0)
    goto LABEL_10;
  v21 = Data.init(contentsOf:options:)(v9, 0);
  if (v1)
  {
    v26 = *(_QWORD *)(v7 + 8);
    ((void (*)(char *, uint64_t))v26)(v9, v6);
    ((void (*)(char *, uint64_t))v26)(v12, v6);
  }
  else
  {
    v23 = v21;
    v24 = v22;
    v25 = type metadata accessor for CRLBoardPreviewImageCache.CacheEntry();
    v26 = swift_allocObject(v25, 129, 15);
    sub_1004BE310(v23, v24);
    sub_10058D294(v23, v24);
    v31 = *(id *)(v26 + 112);
    sub_100588F74((uint64_t)v31, a1, &_mh_execute_header, (uint64_t)"cacheEntryFromPersistenceDirectoryData(for:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardPreviewImageCache.swift", 101, 2u, 1021);
    sub_1004BBBC8(v23, v24);

    v29 = *(void (**)(char *, uint64_t))(v7 + 8);
    v29(v9, v6);
    v29(v12, v6);
  }
  return v26;
}

uint64_t sub_100597414(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v7;
  _QWORD *v8;

  v7 = type metadata accessor for MainActor(0);
  v5[2] = v7;
  v5[3] = static MainActor.shared.getter(v7);
  v8 = (_QWORD *)swift_task_alloc(dword_1013E430C);
  v5[4] = v8;
  *v8 = v5;
  v8[1] = sub_1004DF470;
  return sub_10058F998(a5);
}

uint64_t sub_100597488(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc(async function pointer to Task.result.getter[1]);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10054A0D4;
  return Task.result.getter(a1, a2, (char *)&type metadata for () + 8, &type metadata for Never, &protocol witness table for Never);
}

void sub_100597500(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  objc_class *v28;
  char *v29;
  char *v30;
  id v31;
  int64_t v32;
  unint64_t v33;
  int64_t v34;
  uint64_t v35;
  char *v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  objc_super v41;
  id v42;
  char v43[24];

  v38 = a1;
  v5 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (uint64_t *)(a3 + OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_cachedSizes);
  swift_beginAccess(v8, v43, 0, 0);
  v9 = *v8;
  v10 = *(_QWORD *)(v9 + 16);
  v39 = a2;
  if (v10)
  {
    swift_bridgeObjectRetain(v9);
    v11 = sub_100843760(a2);
    if ((v12 & 1) != 0)
    {
      v13 = *(_QWORD **)(*(_QWORD *)(v9 + 56) + 8 * v11);
      swift_bridgeObjectRetain(v13);
    }
    else
    {
      v13 = &_swiftEmptySetSingleton;
    }
    swift_bridgeObjectRelease(v9);
  }
  else
  {
    v13 = &_swiftEmptySetSingleton;
  }
  v14 = 0;
  v40 = v13;
  v17 = v13[7];
  v16 = (char *)(v13 + 7);
  v15 = v17;
  v18 = 1 << *(v16 - 24);
  v19 = -1;
  if (v18 < 64)
    v19 = ~(-1 << v18);
  v20 = v19 & v15;
  v36 = v16;
  v37 = (unint64_t)(v18 + 63) >> 6;
  while (1)
  {
    if (v20)
    {
      v21 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      v22 = v21 | (v14 << 6);
      goto LABEL_11;
    }
    v32 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v32 >= v37)
      goto LABEL_27;
    v33 = *(_QWORD *)&v36[8 * v32];
    ++v14;
    if (!v33)
    {
      v14 = v32 + 1;
      if (v32 + 1 >= v37)
        goto LABEL_27;
      v33 = *(_QWORD *)&v36[8 * v14];
      if (!v33)
      {
        v14 = v32 + 2;
        if (v32 + 2 >= v37)
          goto LABEL_27;
        v33 = *(_QWORD *)&v36[8 * v14];
        if (!v33)
          break;
      }
    }
LABEL_26:
    v20 = (v33 - 1) & v33;
    v22 = __clz(__rbit64(v33)) + (v14 << 6);
LABEL_11:
    v23 = v40[6] + 32 * v22;
    v25 = *(_QWORD *)v23;
    v24 = *(_QWORD *)(v23 + 8);
    v26 = *(_BYTE *)(v23 + 16);
    v27 = *(_QWORD *)(v23 + 24);
    sub_1004B8460(v39, (uint64_t)v7, type metadata accessor for CRLBoardPreviewImageCache.Item);
    v28 = (objc_class *)type metadata accessor for CRLBoardPreviewImageCache.LookupKey(0);
    v29 = (char *)objc_allocWithZone(v28);
    sub_1004B8460((uint64_t)v7, (uint64_t)&v29[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_item], type metadata accessor for CRLBoardPreviewImageCache.Item);
    v30 = &v29[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass];
    *(_QWORD *)v30 = v25;
    *((_QWORD *)v30 + 1) = v24;
    v30[16] = v26;
    *(_QWORD *)&v29[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_contentsScale] = v27;
    v41.receiver = v29;
    v41.super_class = v28;
    v31 = objc_msgSendSuper2(&v41, "init");
    sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLBoardPreviewImageCache.Item);
    sub_100AD9F94((Swift::Int *)&v42, v31);

  }
  v34 = v32 + 3;
  if (v34 >= v37)
  {
LABEL_27:
    swift_release(v40);
    return;
  }
  v33 = *(_QWORD *)&v36[8 * v34];
  if (v33)
  {
    v14 = v34;
    goto LABEL_26;
  }
  while (1)
  {
    v14 = v34 + 1;
    if (__OFADD__(v34, 1))
      break;
    if (v14 >= v37)
      goto LABEL_27;
    v33 = *(_QWORD *)&v36[8 * v14];
    ++v34;
    if (v33)
      goto LABEL_26;
  }
LABEL_29:
  __break(1u);
}

uint64_t sub_1005977DC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[24] = a1;
  v2[25] = v1;
  v3 = type metadata accessor for MainActor(0);
  v2[26] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  return swift_task_switch(sub_100597848, v4, v5);
}

uint64_t sub_100597848()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  void *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t inited;
  unint64_t v41;
  Class isa;
  void *v44;
  uint64_t v45;
  int64_t v46;
  uint64_t v47;

  v1 = *(_QWORD *)(v0 + 192);
  v2 = swift_release(*(_QWORD *)(v0 + 208));
  if (*(_QWORD *)(v1 + 16))
  {
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
      goto LABEL_41;
LABEL_3:
    v3 = &_swiftEmptySetSingleton;
LABEL_4:
    v4 = *(_QWORD *)(v0 + 192);
    v5 = *(id *)(v0 + 200);
    sub_10059E454((uint64_t)v3, v4, (uint64_t)v5);
    v7 = v6;

    v45 = v7;
    if ((v7 & 0xC000000000000001) != 0)
    {
      if (v7 < 0)
        v8 = v7;
      else
        v8 = v7 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v7);
      v9 = __CocoaSet.makeIterator()(v8);
      v10 = type metadata accessor for CRLBoardPreviewImageCache.LookupKey(0);
      v11 = sub_1004B7878(&qword_1013E49A8, type metadata accessor for CRLBoardPreviewImageCache.LookupKey, (uint64_t)&protocol conformance descriptor for NSObject);
      v12 = Set.Iterator.init(_cocoa:)((_QWORD *)(v0 + 120), v9, v10, v11);
      v7 = *(_QWORD *)(v0 + 120);
      v47 = *(_QWORD *)(v0 + 128);
      v13 = *(_QWORD *)(v0 + 136);
      v14 = *(_QWORD *)(v0 + 144);
      v15 = *(_QWORD *)(v0 + 152);
    }
    else
    {
      v16 = -1 << *(_BYTE *)(v7 + 32);
      v47 = v7 + 56;
      v17 = ~v16;
      v18 = -v16;
      if (v18 < 64)
        v19 = ~(-1 << v18);
      else
        v19 = -1;
      v15 = v19 & *(_QWORD *)(v7 + 56);
      swift_bridgeObjectRetain(v7);
      v13 = v17;
      v14 = 0;
    }
    v46 = (unint64_t)(v13 + 64) >> 6;
    while ((v7 & 0x8000000000000000) == 0)
    {
      if (v15)
      {
        v25 = (v15 - 1) & v15;
        v26 = __clz(__rbit64(v15)) | (v14 << 6);
        v24 = v14;
      }
      else
      {
        v27 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
          __break(1u);
LABEL_41:
          if (_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
          {
            sub_1004B6A40((uint64_t)_swiftEmptyArrayStorage);
            v3 = v44;
            goto LABEL_4;
          }
          goto LABEL_3;
        }
        if (v27 >= v46)
          goto LABEL_36;
        v28 = *(_QWORD *)(v47 + 8 * v27);
        v24 = v14 + 1;
        if (!v28)
        {
          v24 = v14 + 2;
          if (v14 + 2 >= v46)
            goto LABEL_36;
          v28 = *(_QWORD *)(v47 + 8 * v24);
          if (!v28)
          {
            v24 = v14 + 3;
            if (v14 + 3 >= v46)
              goto LABEL_36;
            v28 = *(_QWORD *)(v47 + 8 * v24);
            if (!v28)
            {
              v24 = v14 + 4;
              if (v14 + 4 >= v46)
                goto LABEL_36;
              v28 = *(_QWORD *)(v47 + 8 * v24);
              if (!v28)
              {
                v29 = v14 + 5;
                while (v46 != v29)
                {
                  v28 = *(_QWORD *)(v47 + 8 * v29++);
                  if (v28)
                  {
                    v24 = v29 - 1;
                    goto LABEL_32;
                  }
                }
                goto LABEL_36;
              }
            }
          }
        }
LABEL_32:
        v25 = (v28 - 1) & v28;
        v26 = __clz(__rbit64(v28)) + (v24 << 6);
      }
      v23 = *(id *)(*(_QWORD *)(v7 + 48) + 8 * v26);
      if (!v23)
        goto LABEL_36;
LABEL_34:
      v30 = *(_QWORD *)(v0 + 200);
      sub_100597D24();
      objc_msgSend(*(id *)(v30 + OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_cache), "removeObjectForKey:", v23);

      v14 = v24;
      v15 = v25;
    }
    v20 = __CocoaSet.Iterator.next()(v12);
    if (v20)
    {
      v21 = v20;
      *(_QWORD *)(v0 + 184) = v20;
      v22 = type metadata accessor for CRLBoardPreviewImageCache.LookupKey(0);
      swift_unknownObjectRetain(v21);
      swift_dynamicCast(v0 + 176, v0 + 184, (char *)&type metadata for Swift.AnyObject + 8, v22, 7);
      v23 = *(id *)(v0 + 176);
      swift_unknownObjectRelease(v21);
      v24 = v14;
      v25 = v15;
      if (v23)
        goto LABEL_34;
    }
LABEL_36:
    v31 = *(_QWORD *)(v0 + 200);
    sub_1004D284C(v7);
    v32 = *(_QWORD *)(*(_QWORD *)(v31 + OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_boardLibrary)
                    + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_storeHierarchySnapshot);
    swift_bridgeObjectRetain(v32);
    sub_10059D33C(v45, v32);
    v34 = v33;
    swift_bridgeObjectRelease(v32);
    swift_bridgeObjectRelease(v45);
    v35 = sub_100AF8094(v34);
    swift_bridgeObjectRelease(v34);
    v36 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    if (qword_1013DCAC8 != -1)
      swift_once(&qword_1013DCAC8, sub_100589738);
    v37 = *(_QWORD *)(v0 + 200);
    v38 = qword_10147EA38;
    v39 = sub_1004B804C(&qword_1013E49B0);
    inited = swift_initStackObject(v39, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    *(_QWORD *)(v0 + 160) = 0xD00000000000001DLL;
    *(_QWORD *)(v0 + 168) = 0x8000000100FB5A90;
    AnyHashable.init<A>(_:)(v0 + 160, &type metadata for String, &protocol witness table for String);
    *(_QWORD *)(inited + 96) = sub_1004B804C((uint64_t *)&unk_1013E49B8);
    *(_QWORD *)(inited + 72) = v35;
    v41 = sub_1008D5828(inited);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v36, "postNotificationName:object:userInfo:", v38, v37, isa, swift_bridgeObjectRelease(v41).n128_f64[0]);

  }
  return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
}

uint64_t sub_100597D24()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t inited;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  char *v19;
  char *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSString v37;
  id v38;
  NSURL *v39;
  void *v40;
  void *v41;
  char *v42;
  unsigned int v43;
  id v44;
  void (*v45)(char *, uint64_t);
  id v46;
  void (*v47)(char *, uint64_t);
  id v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char *v55;
  char *v56;
  id v57;
  uint64_t v58[3];
  uint64_t v59;
  _QWORD v60[3];
  uint64_t v61;
  uint64_t v62;
  char v63[72];
  char v64[24];

  v0 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v0);
  v2 = (char *)&v51 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v55 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v56 = (char *)&v51 - v7;
  if (qword_1013DD750 != -1)
    swift_once(&qword_1013DD750, sub_100A02540);
  swift_beginAccess(&static OS_os_log.crlBoardPreviewImageCache, v64, 0, 0);
  v8 = (void *)static OS_os_log.crlBoardPreviewImageCache;
  v53 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v53, v63);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v10 = v8;
  v11 = sub_10058C19C();
  v13 = v12;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v54 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v54;
  *(_QWORD *)(inited + 32) = v11;
  v14 = inited + 32;
  *(_QWORD *)(inited + 40) = v13;
  v15 = static os_log_type_t.info.getter();
  sub_100A06EBC((uint64_t)v10, &_mh_execute_header, v15, "Removing asset from disk storage: %@", 36, 2, inited);
  swift_setDeallocating(inited);
  v16 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v14, 1, v16);

  sub_10058FDB4((uint64_t)v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
    return sub_1004CB800((uint64_t)v2, &qword_1013E04D0);
  v18 = v3;
  v19 = v56;
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v56, v2, v18);
  v20 = v55;
  sub_10058C7C0();
  v32 = (void *)objc_opt_self(NSFileManager);
  v33 = objc_msgSend(v32, "defaultManager");
  v34 = URL.isFileURL.getter(v33);
  if ((v34 & 1) == 0)
  {

    goto LABEL_12;
  }
  v52 = v4;
  LOBYTE(v57) = 0;
  URL.path.getter(v34);
  v36 = v35;
  v37 = String._bridgeToObjectiveC()();
  LOBYTE(v36) = objc_msgSend(v33, "fileExistsAtPath:isDirectory:", v37, &v57, swift_bridgeObjectRelease(v36).n128_f64[0]);

  if ((v36 & 1) == 0)
  {
    v4 = v52;
    v20 = v55;
    goto LABEL_12;
  }
  v4 = v52;
  v20 = v55;
  if ((v57 & 1) != 0)
  {
LABEL_12:
    v47 = *(void (**)(char *, uint64_t))(v4 + 8);
    v47(v20, v18);
    return ((uint64_t (*)(char *, uint64_t))v47)(v19, v18);
  }
  v38 = objc_msgSend(v32, "defaultManager");
  URL._bridgeToObjectiveC()(v39);
  v41 = v40;
  v57 = 0;
  v42 = v20;
  v43 = objc_msgSend(v38, "removeItemAtURL:error:", v40, &v57);

  v44 = v57;
  if (v43)
  {
    v45 = *(void (**)(char *, uint64_t))(v52 + 8);
    v46 = v57;
    v45(v42, v18);
    return ((uint64_t (*)(char *, uint64_t))v45)(v19, v18);
  }
  else
  {
    v48 = v57;
    v49 = _convertNSErrorToError(_:)(v44);

    swift_willThrow(v50);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v42, v18);
    v21 = (void *)static OS_os_log.crlBoardPreviewImageCache;
    v22 = swift_initStackObject(v53, &v62);
    *(_OWORD *)(v22 + 16) = xmmword_100EF5A10;
    swift_getErrorValue(v49, &v61, v60);
    v23 = v60[1];
    v24 = v60[2];
    v25 = v21;
    v26 = Error.publicDescription.getter(v23, v24);
    v27 = v54;
    *(_QWORD *)(v22 + 56) = &type metadata for String;
    *(_QWORD *)(v22 + 64) = v27;
    *(_QWORD *)(v22 + 32) = v26;
    *(_QWORD *)(v22 + 40) = v28;
    swift_getErrorValue(v49, &v59, v58);
    v29 = Error.fullDescription.getter(v58[1]);
    *(_QWORD *)(v22 + 96) = &type metadata for String;
    *(_QWORD *)(v22 + 104) = v27;
    *(_QWORD *)(v22 + 72) = v29;
    *(_QWORD *)(v22 + 80) = v30;
    v31 = static os_log_type_t.error.getter(v29);
    sub_100A06EBC((uint64_t)v25, &_mh_execute_header, v31, "Error removing CacheEntry on disk storage: %{public}@ <%@>", 58, 2, v22);
    swift_setDeallocating(v22);
    swift_arrayDestroy(v22 + 32, 2, v16);

    swift_errorRelease(v49);
    return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v56, v18);
  }
}

uint64_t sub_100598210(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *(double *)(v5 + 96) = a1;
  *(_QWORD *)(v5 + 80) = a4;
  *(_QWORD *)(v5 + 88) = a5;
  *(_QWORD *)(v5 + 72) = a3;
  v7 = (*(_QWORD *)(*(_QWORD *)(sub_1004B804C(&qword_1013E01F0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v5 + 104) = swift_task_alloc(v7);
  *(_QWORD *)(v5 + 112) = swift_task_alloc(v7);
  v8 = *(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  *(_QWORD *)(v5 + 120) = v8;
  v9 = *(_QWORD *)(v8 + 64);
  *(_QWORD *)(v5 + 128) = v9;
  v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v5 + 136) = swift_task_alloc(v10);
  *(_QWORD *)(v5 + 144) = swift_task_alloc(v10);
  v11 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  *(_QWORD *)(v5 + 152) = v11;
  v12 = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v5 + 160) = v12;
  v13 = *(_QWORD *)(v12 + 64);
  *(_QWORD *)(v5 + 168) = v13;
  v14 = (v13 + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v5 + 176) = swift_task_alloc(v14);
  *(_QWORD *)(v5 + 184) = swift_task_alloc(v14);
  *(_QWORD *)(v5 + 192) = swift_task_alloc(v14);
  *(_QWORD *)(v5 + 200) = swift_task_alloc(v14);
  v15 = type metadata accessor for MainActor(0);
  swift_bridgeObjectRetain(a4);
  *(_QWORD *)(v5 + 208) = static MainActor.shared.getter(v16);
  v17 = dispatch thunk of Actor.unownedExecutor.getter(v15, &protocol witness table for MainActor);
  return swift_task_switch(sub_100598350, v17, v18);
}

void sub_100598350()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t *v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  unsigned __int8 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t ObjectType;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  int64_t v72;
  uint64_t v73;

  v1 = *(_QWORD *)(v0 + 168);
  v73 = *(_QWORD *)(v0 + 160);
  v63 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 80);
  swift_release(*(_QWORD *)(v0 + 208));
  v3 = 0;
  v64 = v2 + 56;
  v4 = -1;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  if (-v5 < 64)
    v4 = ~(-1 << -(char)v5);
  v6 = v4 & *(_QWORD *)(v2 + 56);
  v65 = (unint64_t)(63 - v5) >> 6;
  v62 = v1 + 7;
  v7 = type metadata accessor for CRLBoardPreviewImageCache.Item;
  v61 = v2;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_22;
    }
    v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v11 >= v65)
      goto LABEL_32;
    v12 = *(_QWORD *)(v64 + 8 * v11);
    ++v3;
    if (!v12)
    {
      v3 = v11 + 1;
      if (v11 + 1 >= v65)
        goto LABEL_32;
      v12 = *(_QWORD *)(v64 + 8 * v3);
      if (!v12)
      {
        v3 = v11 + 2;
        if (v11 + 2 >= v65)
          goto LABEL_32;
        v12 = *(_QWORD *)(v64 + 8 * v3);
        if (!v12)
          break;
      }
    }
LABEL_21:
    v6 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_22:
    v14 = *(_QWORD *)(v0 + 192);
    v15 = *(_QWORD *)(v0 + 200);
    v16 = *(_QWORD *)(v0 + 184);
    v17 = *(_QWORD *)(v0 + 152);
    sub_1004B8460(*(_QWORD *)(v2 + 48) + *(_QWORD *)(v73 + 72) * v10, v15, v7);
    sub_1004B84E0(v15, v14, v7);
    sub_1004B8460(v14, v16, v7);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v16, v17);
    v19 = *(_QWORD *)(v0 + 192);
    if (EnumCaseMultiPayload == 1)
    {
      v71 = v6;
      v72 = v3;
      v20 = *(_QWORD *)(v0 + 176);
      v21 = *(_QWORD *)(v0 + 136);
      v22 = *(_QWORD *)(v0 + 144);
      v66 = v21;
      v23 = *(_QWORD *)(v0 + 112);
      v68 = *(_QWORD *)(v0 + 128);
      v69 = v23;
      v70 = *(_QWORD *)(v0 + 104);
      v24 = *(_QWORD *)(v0 + 96);
      v25 = v7;
      sub_1004B84E0(*(_QWORD *)(v0 + 184), v22, type metadata accessor for CRLBoardIdentifier);
      v26 = type metadata accessor for TaskPriority(0);
      v67 = *(_QWORD *)(v26 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v67 + 56))(v23, 1, 1, v26);
      v27 = swift_allocObject(&unk_10126DE90, 24, 7);
      swift_unknownObjectWeakInit(v27 + 16);
      sub_1004B8460(v19, v20, v25);
      sub_1004B8460(v22, v21, type metadata accessor for CRLBoardIdentifier);
      v28 = *(unsigned __int8 *)(v73 + 80);
      v29 = (v28 + 40) & ~v28;
      v30 = (v62 + v29) & 0xFFFFFFFFFFFFFFF8;
      v31 = *(unsigned __int8 *)(v63 + 80);
      v32 = (v31 + v30 + 8) & ~v31;
      v33 = (_QWORD *)swift_allocObject(&unk_10126DEB8, v32 + v68, v28 | v31 | 7);
      v33[2] = 0;
      v34 = v33 + 2;
      v33[3] = 0;
      v33[4] = v27;
      v35 = v20;
      v36 = v26;
      v7 = v25;
      sub_1004B84E0(v35, (uint64_t)v33 + v29, v25);
      *(_QWORD *)((char *)v33 + v30) = v24;
      sub_1004B84E0(v66, (uint64_t)v33 + v32, type metadata accessor for CRLBoardIdentifier);
      sub_1004CB7BC(v69, v70, &qword_1013E01F0);
      v37 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v67 + 48))(v70, 1, v36);
      v39 = *(_QWORD *)(v0 + 104);
      if (v37 == 1)
      {
        sub_1004CB800(*(_QWORD *)(v0 + 104), &qword_1013E01F0);
        v40 = 0;
      }
      else
      {
        v41 = TaskPriority.rawValue.getter(v38);
        (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v39, v36);
        v40 = v41;
      }
      v2 = v61;
      v42 = *v34;
      if (*v34)
      {
        v43 = v33[3];
        ObjectType = swift_getObjectType(*v34);
        swift_unknownObjectRetain(v42);
        v45 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v43);
        v47 = v46;
        swift_unknownObjectRelease(v42);
      }
      else
      {
        v45 = 0;
        v47 = 0;
      }
      v3 = v72;
      v48 = **(_QWORD **)(v0 + 72);
      v49 = v47 | v45;
      if (v47 | v45)
      {
        v49 = v0 + 16;
        *(_QWORD *)(v0 + 16) = 0;
        *(_QWORD *)(v0 + 24) = 0;
        *(_QWORD *)(v0 + 32) = v45;
        *(_QWORD *)(v0 + 40) = v47;
      }
      v50 = *(_QWORD *)(v0 + 144);
      v51 = *(_QWORD *)(v0 + 112);
      *(_QWORD *)(v0 + 48) = 1;
      *(_QWORD *)(v0 + 56) = v49;
      *(_QWORD *)(v0 + 64) = v48;
      v52 = swift_task_create(v40 | 0x3100, v0 + 48, (char *)&type metadata for () + 8, &unk_1013E4688);
      swift_release(v52);
      sub_1004CB800(v51, &qword_1013E01F0);
      sub_1004B84A4(v50, type metadata accessor for CRLBoardIdentifier);
      v8 = (uint64_t *)(v0 + 192);
      v6 = v71;
    }
    else
    {
      sub_1004B84A4(*(_QWORD *)(v0 + 192), v7);
      v8 = (uint64_t *)(v0 + 184);
    }
    sub_1004B84A4(*v8, v7);
  }
  v13 = v11 + 3;
  if (v13 >= v65)
  {
LABEL_32:
    v53 = *(_QWORD *)(v0 + 192);
    v54 = *(_QWORD *)(v0 + 200);
    v56 = *(_QWORD *)(v0 + 176);
    v55 = *(_QWORD *)(v0 + 184);
    v58 = *(_QWORD *)(v0 + 136);
    v57 = *(_QWORD *)(v0 + 144);
    v60 = *(_QWORD *)(v0 + 104);
    v59 = *(_QWORD *)(v0 + 112);
    swift_release(*(_QWORD *)(v0 + 80));
    swift_task_dealloc(v54);
    swift_task_dealloc(v53);
    swift_task_dealloc(v55);
    swift_task_dealloc(v56);
    swift_task_dealloc(v57);
    swift_task_dealloc(v58);
    swift_task_dealloc(v59);
    swift_task_dealloc(v60);
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  v12 = *(_QWORD *)(v64 + 8 * v13);
  if (v12)
  {
    v3 = v13;
    goto LABEL_21;
  }
  while (1)
  {
    v3 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v3 >= v65)
      goto LABEL_32;
    v12 = *(_QWORD *)(v64 + 8 * v3);
    ++v13;
    if (v12)
      goto LABEL_21;
  }
LABEL_34:
  __break(1u);
}

uint64_t sub_100598870(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v7 + 80) = a7;
  *(double *)(v7 + 72) = a1;
  *(_QWORD *)(v7 + 56) = a5;
  *(_QWORD *)(v7 + 64) = a6;
  v8 = sub_1004B804C(&qword_1013E4690);
  *(_QWORD *)(v7 + 88) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  *(_QWORD *)(v7 + 96) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1005988F4, 0, 0);
}

uint64_t sub_1005988F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  objc_class *v5;
  char *v6;
  char *v7;
  id v8;
  _QWORD *v9;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 56) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  *(_QWORD *)(v0 + 104) = Strong;
  if (Strong)
  {
    v3 = *(_QWORD *)(v0 + 96);
    v4 = *(_QWORD *)(v0 + 72);
    sub_1004B8460(*(_QWORD *)(v0 + 64), v3, type metadata accessor for CRLBoardPreviewImageCache.Item);
    v5 = (objc_class *)type metadata accessor for CRLBoardPreviewImageCache.LookupKey(0);
    v6 = (char *)objc_allocWithZone(v5);
    sub_1004B8460(v3, (uint64_t)&v6[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_item], type metadata accessor for CRLBoardPreviewImageCache.Item);
    v7 = &v6[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass];
    *(_OWORD *)v7 = xmmword_100EFA5D0;
    v7[16] = 1;
    *(_QWORD *)&v6[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_contentsScale] = v4;
    *(_QWORD *)(v0 + 40) = v6;
    *(_QWORD *)(v0 + 48) = v5;
    v8 = objc_msgSendSuper2((objc_super *)(v0 + 40), "init");
    *(_QWORD *)(v0 + 112) = v8;
    sub_1004B84A4(v3, type metadata accessor for CRLBoardPreviewImageCache.Item);
    v9 = (_QWORD *)swift_task_alloc(dword_1013E45BC);
    *(_QWORD *)(v0 + 120) = v9;
    *v9 = v0;
    v9[1] = sub_100598A50;
    return sub_1005901E4((uint64_t)v8);
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 88);
    swift_task_dealloc(*(_QWORD *)(v0 + 96));
    swift_task_dealloc(v11);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100598A50(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 120);
  *(_QWORD *)(v4 + 128) = a1;
  *(_QWORD *)(v4 + 136) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = sub_100599038;
    v7 = 0;
  }
  else
  {

    v6 = sub_100598ACC;
    v7 = a1;
  }
  return swift_task_switch(v6, v7, 0);
}

uint64_t sub_100598ACC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t (*v5)();
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(void **)(v1 + 120);
  *(_QWORD *)(v0 + 144) = v2;
  v3 = *(unsigned __int8 *)(v1 + 128);
  *(_BYTE *)(v0 + 224) = v3;
  if (!(v3 >> 6))
  {
    v5 = sub_100598C5C;
    return swift_task_switch(v5, 0, 0);
  }
  if (v3 >> 6 != 1)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"imageIfExists", 13, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardPreviewImageCache.swift", 101, 2, 381, "The cache entry is still in the .ready state", 44, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"imageIfExists", 13, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardPreviewImageCache.swift", 101, 2u, 381, (uint64_t)"The cache entry is still in the .ready state", 44, 2u);
    v6 = type metadata accessor for CRLBoardPreviewImageCache.CacheError(0);
    v7 = sub_1004B7878(&qword_1013E45E8, type metadata accessor for CRLBoardPreviewImageCache.CacheError, (uint64_t)&unk_100EFB580);
    v4 = swift_allocError(v6, v7, 0, 0);
    swift_storeEnumTagMultiPayload(v8, v6, 3);
    goto LABEL_7;
  }
  v4 = (uint64_t)v2;
  if ((v3 & 1) != 0)
  {
LABEL_7:
    *(_QWORD *)(v0 + 208) = v4;
    sub_10059BC50(v2, v3);
    swift_willThrow(v9);
    v5 = sub_100598DE8;
    return swift_task_switch(v5, 0, 0);
  }
  sub_10059BC74(v2, 0);
  v5 = sub_100598CAC;
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_100598C5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 128);

  swift_release(v1);
  v2 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc(*(_QWORD *)(v0 + 96));
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100598CAC()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = (void *)v0[18];
  v2 = *(void **)(v0[13] + OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_boardLibrary);
  v0[19] = v2;
  v3 = v2;
  v4 = objc_msgSend(v1, "PNGRepresentation");
  v5 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v7 = v6;

  v0[20] = v5;
  v0[21] = v7;
  v8 = type metadata accessor for MainActor(0);
  v0[22] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  v0[23] = v9;
  v0[24] = v10;
  return swift_task_switch(sub_100598D68, v9, v10);
}

void sub_100598D68()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0[19] + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_entityStore);
  v0[25] = v1;
  if (v1)
  {
    v2 = v0[11];
    v3 = type metadata accessor for CRLBoardViewModelMetadata(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
    swift_retain(v1);
    swift_task_switch(sub_100598E34, v1, 0);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100598DE8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 104);
  swift_release(*(_QWORD *)(v0 + 128));

  v2 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc(*(_QWORD *)(v0 + 96));
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100598E34()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v1 = v0[17];
  sub_100D6701C(v0[10], 0, 0, v0[11], v0[20], v0[21]);
  v0[27] = v1;
  v2 = v0[25];
  sub_1004CB800(v0[11], &qword_1013E4690);
  swift_release(v2);
  if (v1)
    v3 = sub_100598F7C;
  else
    v3 = sub_100598EB8;
  return swift_task_switch(v3, v0[23], v0[24]);
}

uint64_t sub_100598EB8()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = v0[21];
  v3 = (void *)v0[19];
  v2 = v0[20];
  swift_release(v0[22]);
  sub_1004BBBC8(v2, v1);

  return swift_task_switch(sub_100598F10, 0, 0);
}

uint64_t sub_100598F10()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unsigned __int8 v3;
  uint64_t v4;

  v1 = *(void **)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_BYTE *)(v0 + 224);

  swift_release(v2);
  sub_10059BC90(v1, v3);
  v4 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc(*(_QWORD *)(v0 + 96));
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100598F7C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 176));
  return swift_task_switch(sub_100598FB8, 0, 0);
}

uint64_t sub_100598FB8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  unsigned __int8 v5;
  uint64_t v6;

  v1 = *(void **)(v0 + 144);
  v2 = *(void **)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 128);
  v4 = *(void **)(v0 + 104);
  v5 = *(_BYTE *)(v0 + 224);
  sub_1004BBBC8(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168));

  sub_10059BC90(v1, v5);
  swift_release(v3);

  v6 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc(*(_QWORD *)(v0 + 96));
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100599038()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 104);

  v2 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc(*(_QWORD *)(v0 + 96));
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100599080(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  uint64_t v18;
  uint64_t inited;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t (*v34)(uint64_t);
  char **v35;
  uint64_t v36;
  unint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char **v50;
  uint64_t v51;
  uint64_t (*v52)(uint64_t);
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(uint64_t);
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  Swift::Int v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  int64_t v70;
  uint64_t v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  unint64_t v82;
  unint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  __n128 v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  void *v103;
  uint64_t v104;
  _QWORD *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113[3];
  uint64_t v114;
  _QWORD v115[3];
  char v116[8];
  char v117[112];
  _QWORD v118[5];

  v2 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  __chkstk_darwin(v2);
  v4 = (uint64_t)&v101 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CRLBoardIdentifier(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v101 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v101 - v10;
  __chkstk_darwin(v12);
  v14 = (char *)&v101 - v13;
  v15 = *(_QWORD *)(*(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_boardLibrary)
                  + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_storeHierarchySnapshot);
  swift_bridgeObjectRetain(v15);
  v16 = sub_100599A44();
  v107 = v6;
  v105 = v16;
  v109 = v11;
  v110 = v8;
  v118[0] = &_swiftEmptySetSingleton;
  v112 = v15;
  if ((unint64_t)v15 >> 62)
  {
    if (v15 < 0)
      v100 = v15;
    else
      v100 = v15 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v15);
    v31 = _CocoaArrayWrapper.endIndex.getter(v100);
  }
  else
  {
    v31 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v15);
  }
  v32 = v2;
  v104 = a1;
  if (v31)
  {
    v103 = 0;
    v106 = v4 + 8;
    v33 = &OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item;
    v34 = type metadata accessor for CRLBoardLibraryViewModel.Item;
    v35 = &selRef_callStackDescriptionWithAction_callStackSymbols_index_;
    v102 = v15;
    v36 = v15;
    while (1)
    {
      v37 = (unint64_t)v36 >> 62;
      if ((unint64_t)v36 >> 62)
      {
        if (v36 < 0)
          v40 = v36;
        else
          v40 = v36 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v36);
        v108 = _CocoaArrayWrapper.endIndex.getter(v40);
        swift_bridgeObjectRelease(v36);
        if (!v108)
        {
          __break(1u);
          return;
        }
        swift_bridgeObjectRetain(v36);
        v41 = _CocoaArrayWrapper.endIndex.getter(v40);
        swift_bridgeObjectRelease(v36);
        if (!v41)
          goto LABEL_56;
      }
      else if (!*(_QWORD *)((v36 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
        swift_once(&qword_1013DD750, sub_100A02540);
        swift_beginAccess(&static OS_os_log.crlBoardPreviewImageCache, v118, 0, 0);
        v17 = (void *)static OS_os_log.crlBoardPreviewImageCache;
        v18 = sub_1004B804C((uint64_t *)&unk_1013E0180);
        inited = swift_initStackObject(v18, v117);
        *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
        swift_getErrorValue(v4, v116, v115);
        v20 = v115[1];
        v21 = v115[2];
        v22 = v17;
        v23 = Error.publicDescription.getter(v20, v21);
        v25 = v24;
        *(_QWORD *)(inited + 56) = &type metadata for String;
        v26 = sub_1004CFC2C();
        *(_QWORD *)(inited + 64) = v26;
        *(_QWORD *)(inited + 32) = v23;
        *(_QWORD *)(inited + 40) = v25;
        swift_getErrorValue(v4, &v114, v113);
        v27 = Error.fullDescription.getter(v113[1]);
        *(_QWORD *)(inited + 96) = &type metadata for String;
        *(_QWORD *)(inited + 104) = v26;
        *(_QWORD *)(inited + 72) = v27;
        *(_QWORD *)(inited + 80) = v28;
        v29 = static os_log_type_t.error.getter(v27);
        sub_100A06EBC((uint64_t)v22, &_mh_execute_header, v29, "Error removing stranded cache entries from on disk storage. %{public}@ <%@>", 75, 2, inited);
        swift_setDeallocating(inited);
        v30 = sub_1004B804C(&qword_1013E0190);
        swift_arrayDestroy(inited + 32, 2, v30);

        swift_errorRelease(v4);
        return;
      }
      if ((v36 & 0xC000000000000001) != 0)
      {
        v38 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v36);
        if (v37)
          goto LABEL_18;
      }
      else
      {
        if (!*(_QWORD *)((v36 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_57;
        v38 = *(id *)(v36 + 32);
        if (v37)
        {
LABEL_18:
          if (v36 < 0)
            v42 = v36;
          else
            v42 = v36 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v36);
          v39 = _CocoaArrayWrapper.endIndex.getter(v42);
          swift_bridgeObjectRelease(v36);
          goto LABEL_22;
        }
      }
      v39 = *(_QWORD *)((v36 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_22:
      if (!v39)
        goto LABEL_61;
      sub_100CFE428(0, 1);
      v43 = objc_msgSend(v38, v35[327]);
      v44 = type metadata accessor for CRLBoardLibraryViewModelItemNode(0);
      v45 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v43, v44);

      sub_10061EABC(v45);
      sub_1004B8460((uint64_t)v38 + *v33, v4, v34);
      if (swift_getEnumCaseMultiPayload(v4, v32) == 2)
      {
        v46 = sub_1004B804C((uint64_t *)&unk_1013EA630);
        swift_bridgeObjectRelease(*(_QWORD *)(v106 + *(int *)(v46 + 48)));
        sub_1004B84E0(v4, (uint64_t)v14, type metadata accessor for CRLBoardIdentifier);
        v47 = (uint64_t)v110;
        sub_1004B8460((uint64_t)v14, (uint64_t)v110, type metadata accessor for CRLBoardIdentifier);
        v108 = (uint64_t)v38;
        v48 = v4;
        v49 = v14;
        v50 = v35;
        v51 = v32;
        v52 = v34;
        v53 = v33;
        v54 = (uint64_t)v109;
        sub_100AD7844((uint64_t)v109, v47);
        v55 = v54;
        v33 = v53;
        v34 = v52;
        v32 = v51;
        v35 = v50;
        v14 = v49;
        v4 = v48;
        v38 = (id)v108;
        sub_1004B84A4(v55, type metadata accessor for CRLBoardIdentifier);
        v56 = (uint64_t)v14;
        v57 = type metadata accessor for CRLBoardIdentifier;
      }
      else
      {
        v56 = v4;
        v57 = v34;
      }
      sub_1004B84A4(v56, v57);

      v36 = v112;
      if ((unint64_t)v112 >> 62)
      {
        if (v112 < 0)
          v58 = v112;
        else
          v58 = v112 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v112);
        v59 = _CocoaArrayWrapper.endIndex.getter(v58);
        swift_bridgeObjectRelease(v36);
        if (!v59)
        {
LABEL_33:
          swift_bridgeObjectRelease(v102);
          swift_bridgeObjectRelease(v36);
          v60 = (_QWORD *)v118[0];
          v61 = v105;
          goto LABEL_35;
        }
      }
      else if (!*(_QWORD *)((v112 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_33;
      }
    }
  }
  swift_bridgeObjectRelease_n(v15, 2);
  v60 = &_swiftEmptySetSingleton;
  v61 = v105;
LABEL_35:
  swift_bridgeObjectRetain(v61);
  v63 = sub_1005A0C08(v62, v60);
  swift_bridgeObjectRelease(v60);
  v64 = (uint64_t)v109;
  if (qword_1013DD750 != -1)
    swift_once(&qword_1013DD750, sub_100A02540);
  swift_beginAccess(&static OS_os_log.crlBoardPreviewImageCache, v118, 0, 0);
  v65 = (void *)static OS_os_log.crlBoardPreviewImageCache;
  v66 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  v67 = swift_initStackObject(v66, &v111);
  v68 = (_QWORD *)v67;
  *(_OWORD *)(v67 + 16) = xmmword_100EF5A10;
  *(_QWORD *)(v67 + 32) = *(_QWORD *)(v63 + 16);
  v69 = v67 + 32;
  *(_QWORD *)(v67 + 56) = &type metadata for Int;
  *(_QWORD *)(v67 + 64) = &protocol witness table for Int;
  v70 = *(_QWORD *)(v63 + 16);
  v71 = (uint64_t)v110;
  v108 = v63;
  if (v70)
  {
    v101 = (_QWORD *)v67;
    v102 = v67 + 32;
    v112 = (uint64_t)_swiftEmptyArrayStorage;
    v103 = v65;
    v72 = v65;
    sub_1006006EC(0, v70, 0);
    v73 = sub_100CE0488(v63);
    v75 = v74;
    v4 = v76 & 1;
    v106 = v63 + 56;
    while ((v73 & 0x8000000000000000) == 0 && v73 < 1 << *(_BYTE *)(v63 + 32))
    {
      if (((*(_QWORD *)(v106 + (((unint64_t)v73 >> 3) & 0xFFFFFFFFFFFFF8)) >> v73) & 1) == 0)
        goto LABEL_59;
      if (*(_DWORD *)(v63 + 36) != (_DWORD)v75)
        goto LABEL_60;
      sub_1004B8460(*(_QWORD *)(v63 + 48) + *(_QWORD *)(v107 + 72) * v73, v64, type metadata accessor for CRLBoardIdentifier);
      v77 = sub_1004B84E0(v64, v71, type metadata accessor for CRLBoardIdentifier);
      v78 = UUID.uuidString.getter(v77);
      v80 = v79;
      sub_1004B84A4(v71, type metadata accessor for CRLBoardIdentifier);
      v81 = (_QWORD *)v112;
      if ((swift_isUniquelyReferenced_nonNull_native(v112) & 1) == 0)
      {
        sub_1006006EC(0, v81[2] + 1, 1);
        v81 = (_QWORD *)v112;
      }
      v83 = v81[2];
      v82 = v81[3];
      if (v83 >= v82 >> 1)
      {
        sub_1006006EC(v82 > 1, v83 + 1, 1);
        v81 = (_QWORD *)v112;
      }
      v81[2] = v83 + 1;
      v84 = &v81[2 * v83];
      v84[4] = v78;
      v84[5] = v80;
      v63 = v108;
      v85 = sub_1005C3B08(v73, v75, v4 & 1, v108);
      v73 = v85;
      v75 = v86;
      v4 = v87 & 1;
      --v70;
      v64 = (uint64_t)v109;
      v71 = (uint64_t)v110;
      if (!v70)
      {
        sub_100503494(v85, v86, v87 & 1);
        v69 = v102;
        v65 = v103;
        v68 = v101;
        goto LABEL_50;
      }
    }
    goto LABEL_58;
  }
  v88 = v65;
  v81 = _swiftEmptyArrayStorage;
LABEL_50:
  v112 = (uint64_t)v81;
  v89 = sub_1004B804C((uint64_t *)&unk_1013E4970);
  v90 = sub_1004CBA30((unint64_t *)&qword_1013DFC40, (uint64_t *)&unk_1013E4970, (uint64_t)&protocol conformance descriptor for [A]);
  v91 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v89, v90);
  v93 = v92;
  swift_bridgeObjectRelease(v81);
  v68[12] = &type metadata for String;
  v68[13] = sub_1004CFC2C();
  v68[9] = v91;
  v68[10] = v93;
  v95 = static os_log_type_t.default.getter(v94);
  sub_100A06EBC((uint64_t)v65, &_mh_execute_header, v95, "removeStrandedCacheEntriesInOnDiskStorage, about to remove images for %d board UUIDs: %@", 88, 2, (uint64_t)v68);
  swift_setDeallocating(v68);
  v96 = v68[2];
  v97 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v69, v96, v97);

  v98 = *(_QWORD *)(v63 + 16);
  if (v98)
  {
    v99 = v105;
    if (v98 == v105[2])
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"removeStrandedCacheEntriesInOnDiskStorage()", 43, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardPreviewImageCache.swift", 101, 2, 1174, "Removing _all_ cached board images.", 35, 2u, (uint64_t)_swiftEmptyArrayStorage);
      v63 = v108;
      v99 = v105;
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"removeStrandedCacheEntriesInOnDiskStorage()", 43, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardPreviewImageCache.swift", 101, 2u, 1174, (uint64_t)"Removing _all_ cached board images.", 35, 2u);
    }
    swift_bridgeObjectRelease(v99);
    sub_10059A250(v63);
    swift_release(v63);
  }
  else
  {
    swift_release(v63);
    swift_bridgeObjectRelease(v105);
  }
}

void *sub_100599A44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  id v29;
  NSURL *v30;
  void *v31;
  void *v32;
  id v33;
  id v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  unint64_t v38;
  char *v39;
  char *v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __n128 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  uint64_t inited;
  uint64_t v75;
  uint64_t v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  __n128 v93;
  __n128 v94;
  uint64_t v95;
  char *v96;
  __int128 v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  void (*v109)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v110;
  uint64_t v111;
  void (*v112)(char *, char *, uint64_t);
  uint64_t v113;
  unsigned int (*v114)(char *, uint64_t, uint64_t);
  uint64_t v115[3];
  uint64_t v116;
  _QWORD v117[3];
  uint64_t v118;
  _QWORD v119[2];
  _QWORD v120[4];
  void *v121;
  char v122[112];
  id v123[3];

  v1 = v0;
  v2 = type metadata accessor for CRLBoardIdentifierStorage(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v95 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v5);
  v103 = (uint64_t)&v95 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v102 = (uint64_t)&v95 - v8;
  __chkstk_darwin(v9);
  v101 = (uint64_t)&v95 - v10;
  __chkstk_darwin(v11);
  v100 = (uint64_t)&v95 - v12;
  __chkstk_darwin(v13);
  v99 = (uint64_t)&v95 - v14;
  v15 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v15);
  v17 = (char *)&v95 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v95 - v19;
  v21 = type metadata accessor for URL(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v95 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v27 = (char *)&v95 - v26;
  v121 = &_swiftEmptySetSingleton;
  sub_10058FDB4((uint64_t)v20);
  v114 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
  if (v114(v20, 1, v21) == 1)
  {
    sub_1004CB800((uint64_t)v20, &qword_1013E04D0);
    return &_swiftEmptySetSingleton;
  }
  else
  {
    v107 = v24;
    v108 = v17;
    v112 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
    v112(v27, v20, v21);
    v29 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
    URL._bridgeToObjectiveC()(v30);
    v32 = v31;
    v123[0] = 0;
    v33 = objc_msgSend(v29, "contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:", v31, 0, 4, v123);

    v34 = v123[0];
    if (v33)
    {
      v96 = v27;
      v35 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v33, v21);
      v36 = v34;
      v37 = v35;

      v111 = *(_QWORD *)(v35 + 16);
      if (v111)
      {
        v38 = 0;
        v110 = v35 + ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80));
        v97 = xmmword_100EF5A10;
        v105 = v22;
        v106 = v21;
        v39 = v107;
        v40 = v108;
        v98 = v4;
        v104 = v37;
        while (1)
        {
          if (v38 >= *(_QWORD *)(v37 + 16))
            __break(1u);
          (*(void (**)(char *, unint64_t, uint64_t))(v22 + 16))(v40, v110 + *(_QWORD *)(v22 + 72) * v38, v21);
          v109 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56);
          v109(v40, 0, 1, v21);
          if (v114(v40, 1, v21) == 1)
            break;
          v42 = ((uint64_t (*)(char *, char *, uint64_t))v112)(v39, v40, v21);
          v43 = URL.pathComponents.getter(v42);
          v44 = v43;
          v45 = *(_QWORD *)(v43 + 16);
          if (v45)
          {
            v113 = v1;
            v46 = v43 + 16 * v45;
            v48 = *(_QWORD *)(v46 + 16);
            v47 = *(_QWORD *)(v46 + 24);
            swift_bridgeObjectRetain(v47);
            swift_bridgeObjectRelease(v44);
            v49 = HIBYTE(v47) & 0xF;
            if ((v47 & 0x2000000000000000) == 0)
              v49 = v48 & 0xFFFFFFFFFFFFLL;
            if (v49)
            {
              v50 = 4 * v49;
              v51 = 15;
              while (1)
              {
                swift_bridgeObjectRetain(v47);
                v52 = String.subscript.getter(v51, v48, v47);
                v54 = v53;
                swift_bridgeObjectRelease(v47);
                if (v52 == 35 && v54 == 0xE100000000000000)
                  break;
                v55 = _stringCompareWithSmolCheck(_:_:expecting:)(v52, v54, 35, 0xE100000000000000, 0);
                swift_bridgeObjectRelease(v54);
                if ((v55 & 1) == 0)
                {
                  v51 = String.index(after:)(v51, v48, v47);
                  if (v50 != v51 >> 14)
                    continue;
                }
                goto LABEL_22;
              }
              swift_bridgeObjectRelease(0xE100000000000000);
            }
            else
            {
              v51 = 15;
            }
LABEL_22:
            v56 = String.subscript.getter(15, v51, v48, v47);
            v58 = v57;
            v60 = v59;
            v62 = v61;
            v63 = swift_bridgeObjectRelease(v47);
            v64 = static String._fromSubstring(_:)(v56, v58, v60, v62, v63);
            v66 = v65;
            swift_bridgeObjectRelease(v62);
            v120[2] = v64;
            v120[3] = v66;
            v120[0] = 35;
            v120[1] = 0xE100000000000000;
            v119[0] = 58;
            v119[1] = 0xE100000000000000;
            v67 = sub_1004D292C();
            v68 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)(v120, v119, 0, 0, 0, 1, &type metadata for String, &type metadata for String, &type metadata for String, v67, v67, v67);
            v70 = v69;
            swift_bridgeObjectRelease(v66);
            v71 = v113;
            sub_10067B81C(v68, v70, (uint64_t)v4);
            v1 = v71;
            if (v71)
            {
              if (qword_1013DD750 != -1)
                swift_once(&qword_1013DD750, sub_100A02540);
              swift_beginAccess(&static OS_os_log.crlBoardPreviewImageCache, v123, 0, 0);
              v72 = (void *)static OS_os_log.crlBoardPreviewImageCache;
              v73 = sub_1004B804C((uint64_t *)&unk_1013E0180);
              inited = swift_initStackObject(v73, v122);
              *(_OWORD *)(inited + 16) = v97;
              swift_getErrorValue(v71, &v118, v117);
              v75 = v117[1];
              v76 = v117[2];
              v77 = v72;
              v78 = Error.publicDescription.getter(v75, v76);
              v80 = v79;
              *(_QWORD *)(inited + 56) = &type metadata for String;
              v81 = sub_1004CFC2C();
              *(_QWORD *)(inited + 64) = v81;
              *(_QWORD *)(inited + 32) = v78;
              *(_QWORD *)(inited + 40) = v80;
              swift_getErrorValue(v71, &v116, v115);
              v82 = Error.fullDescription.getter(v115[1]);
              *(_QWORD *)(inited + 96) = &type metadata for String;
              *(_QWORD *)(inited + 104) = v81;
              *(_QWORD *)(inited + 72) = v82;
              *(_QWORD *)(inited + 80) = v83;
              v84 = static os_log_type_t.error.getter(v82);
              sub_100A06EBC((uint64_t)v77, &_mh_execute_header, v84, "Error converting cache path into board identifier. Skipping. %{public}@ <%@>", 76, 2, inited);
              swift_setDeallocating(inited);
              v85 = sub_1004B804C(&qword_1013E0190);
              swift_arrayDestroy(inited + 32, 2, v85);

              swift_errorRelease(v71);
              v1 = 0;
              v4 = v98;
            }
            else
            {
              v86 = v101;
              sub_1004B84E0((uint64_t)v4, v101, type metadata accessor for CRLBoardIdentifierStorage);
              v87 = v86;
              v88 = v100;
              sub_1004B84E0(v87, v100, type metadata accessor for CRLBoardIdentifier);
              v89 = v99;
              sub_1004B84E0(v88, v99, type metadata accessor for CRLBoardIdentifier);
              v90 = v103;
              sub_1004B8460(v89, v103, type metadata accessor for CRLBoardIdentifier);
              v91 = v102;
              sub_100AD7844(v102, v90);
              sub_1004B84A4(v91, type metadata accessor for CRLBoardIdentifier);
              sub_1004B84A4(v89, type metadata accessor for CRLBoardIdentifier);
            }
            v22 = v105;
            v21 = v106;
            v39 = v107;
            v40 = v108;
            v37 = v104;
          }
          else
          {
            v41 = swift_bridgeObjectRelease(v43);
          }
          ++v38;
          (*(void (**)(char *, uint64_t, __n128))(v22 + 8))(v39, v21, v41);
          if (v38 == v111)
          {
            v109(v40, 1, 1, v21);
            break;
          }
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v108, 1, 1, v21);
      }
      v94 = swift_bridgeObjectRelease(v37);
      (*(void (**)(char *, uint64_t, __n128))(v22 + 8))(v96, v21, v94);
      return v121;
    }
    else
    {
      v92 = v123[0];
      _convertNSErrorToError(_:)(v34);

      swift_willThrow(v93);
      return (void *)(*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v27, v21);
    }
  }
}

uint64_t sub_10059A250(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  id v24;
  NSURL *v25;
  void *v26;
  void *v27;
  id v28;
  char *v29;
  uint64_t v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  id v36;
  char *v37;
  char v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  char *v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t (*v52)(char *, uint64_t);
  char *v53;
  char *v54;
  uint64_t v55;
  __n128 v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  __n128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  char *v73;
  __n128 v74;
  void (*v75)(_QWORD *, _QWORD, uint64_t, uint64_t);
  unint64_t v76;
  int64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  Swift::String v86;
  char *v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  void *v91;
  Swift::String v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  unint64_t v96;
  __n128 v97;
  void (*v98)(_QWORD *, unint64_t, uint64_t, __n128);
  char *v99;
  __n128 v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  id v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  NSString v114;
  id v115;
  NSURL *v116;
  void *v117;
  void *v118;
  unsigned int v119;
  char *v120;
  char *v121;
  uint64_t v122;
  char *v123;
  __n128 v124;
  char *v125;
  void *v126;
  uint64_t v127;
  uint64_t inited;
  uint64_t v129;
  uint64_t v130;
  id v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  char *v142;
  int64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  id v151;
  uint64_t v152;
  unint64_t v153;
  uint64_t v154;
  char *v155;
  void (*v156)(char *, char *, uint64_t);
  unsigned int (*v157)(char *, uint64_t, uint64_t);
  uint64_t v158;
  char *v159;
  char *v160;
  _QWORD v161[2];
  uint64_t v162;
  unint64_t v163;
  uint64_t v164[3];
  uint64_t v165;
  _QWORD v166[3];
  uint64_t v167;
  uint64_t v168;
  char v169[24];
  char v170[112];
  char *v171;
  uint64_t v172;

  v2 = type metadata accessor for CRLBoardIdentifier(0);
  v148 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (uint64_t)&v140 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v146 = (uint64_t)&v140 - v6;
  __chkstk_darwin(v7);
  v152 = (uint64_t)&v140 - v8;
  __chkstk_darwin(v9);
  v150 = (uint64_t)&v140 - v10;
  v11 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v11);
  v13 = (char *)&v140 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v140 - v15;
  v17 = type metadata accessor for URL(0);
  v18 = *(_QWORD **)(v17 - 8);
  __chkstk_darwin(v17);
  v160 = (char *)&v140 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v140 - v21;
  sub_10058FDB4((uint64_t)v16);
  v157 = (unsigned int (*)(char *, uint64_t, uint64_t))v18[6];
  if (v157(v16, 1, v17) == 1)
    return sub_1004CB800((uint64_t)v16, &qword_1013E04D0);
  v156 = (void (*)(char *, char *, uint64_t))v18[4];
  v156(v22, v16, v17);
  if (!*(_QWORD *)(a1 + 16))
  {
    v52 = (uint64_t (*)(char *, uint64_t))v18[1];
    v53 = v22;
    goto LABEL_60;
  }
  v154 = v17;
  v151 = (id)objc_opt_self(NSFileManager);
  v24 = objc_msgSend(v151, "defaultManager");
  URL._bridgeToObjectiveC()(v25);
  v27 = v26;
  v171 = 0;
  v28 = objc_msgSend(v24, "contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:", v26, 0, 0, &v171);

  v29 = v171;
  v155 = (char *)v18;
  if (!v28)
  {
    v54 = v171;
    v55 = _convertNSErrorToError(_:)((char *)v29);

    swift_willThrow(v56);
LABEL_62:
    v125 = v22;
    if (qword_1013DD750 != -1)
      swift_once(&qword_1013DD750, sub_100A02540);
    swift_beginAccess(&static OS_os_log.crlBoardPreviewImageCache, &v171, 0, 0);
    v126 = (void *)static OS_os_log.crlBoardPreviewImageCache;
    v127 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v127, v170);
    *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
    swift_getErrorValue(v55, &v167, v166);
    v129 = v166[1];
    v130 = v166[2];
    v131 = v126;
    v132 = Error.publicDescription.getter(v129, v130);
    v134 = v133;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v135 = sub_1004CFC2C();
    *(_QWORD *)(inited + 64) = v135;
    *(_QWORD *)(inited + 32) = v132;
    *(_QWORD *)(inited + 40) = v134;
    swift_getErrorValue(v55, &v165, v164);
    v136 = Error.fullDescription.getter(v164[1]);
    *(_QWORD *)(inited + 96) = &type metadata for String;
    *(_QWORD *)(inited + 104) = v135;
    *(_QWORD *)(inited + 72) = v136;
    *(_QWORD *)(inited + 80) = v137;
    v138 = static os_log_type_t.error.getter(v136);
    sub_100A06EBC((uint64_t)v131, &_mh_execute_header, v138, "Error removing CacheEntry on disk storage: %{public}@ <%@>", 58, 2, inited);
    swift_setDeallocating(inited);
    v139 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 2, v139);

    swift_errorRelease(v55);
    v122 = v154;
    v52 = (uint64_t (*)(char *, uint64_t))*((_QWORD *)v155 + 1);
    v53 = v125;
    return v52(v53, v122);
  }
  v30 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v28, v154);
  v31 = v29;

  if (qword_1013DD750 != -1)
    goto LABEL_71;
  while (1)
  {
    v159 = v13;
    v141 = v22;
    swift_beginAccess(&static OS_os_log.crlBoardPreviewImageCache, v169, 0, 0);
    v32 = (void *)static OS_os_log.crlBoardPreviewImageCache;
    v33 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v34 = swift_initStackObject(v33, &v168);
    *(_OWORD *)(v34 + 16) = xmmword_100EF5A10;
    *(_QWORD *)(v34 + 32) = *(_QWORD *)(a1 + 16);
    v22 = (char *)(v34 + 32);
    *(_QWORD *)(v34 + 56) = &type metadata for Int;
    *(_QWORD *)(v34 + 64) = &protocol witness table for Int;
    v149 = v34;
    v35 = *(_QWORD *)(a1 + 16);
    v147 = a1;
    v144 = v30;
    v145 = v4;
    if (!v35)
      break;
    v142 = (char *)(v34 + 32);
    v171 = (char *)_swiftEmptyArrayStorage;
    v143 = (int64_t)v32;
    v36 = v32;
    sub_1006006EC(0, v35, 0);
    v4 = sub_100CE0488(a1);
    v22 = v37;
    v39 = v38 & 1;
    v30 = a1 + 56;
    while ((v4 & 0x8000000000000000) == 0 && v4 < 1 << *(_BYTE *)(a1 + 32))
    {
      if (((*(_QWORD *)(v30 + (((unint64_t)v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) == 0)
        goto LABEL_67;
      if (*(_DWORD *)(a1 + 36) != (_DWORD)v22)
        goto LABEL_68;
      v40 = v150;
      sub_1004B8460(*(_QWORD *)(a1 + 48) + *(_QWORD *)(v148 + 72) * v4, v150, type metadata accessor for CRLBoardIdentifier);
      v41 = v40;
      v42 = v152;
      v43 = sub_1004B84E0(v41, v152, type metadata accessor for CRLBoardIdentifier);
      v158 = UUID.uuidString.getter(v43);
      v153 = v44;
      sub_1004B84A4(v42, type metadata accessor for CRLBoardIdentifier);
      v13 = v171;
      if ((swift_isUniquelyReferenced_nonNull_native(v171) & 1) == 0)
      {
        sub_1006006EC(0, *((_QWORD *)v13 + 2) + 1, 1);
        v13 = v171;
      }
      v46 = *((_QWORD *)v13 + 2);
      v45 = *((_QWORD *)v13 + 3);
      if (v46 >= v45 >> 1)
      {
        sub_1006006EC(v45 > 1, v46 + 1, 1);
        v13 = v171;
      }
      *((_QWORD *)v13 + 2) = v46 + 1;
      v47 = &v13[16 * v46];
      v48 = v153;
      *((_QWORD *)v47 + 4) = v158;
      *((_QWORD *)v47 + 5) = v48;
      a1 = v147;
      v49 = sub_1005C3B08(v4, v22, v39 & 1, v147);
      v4 = v49;
      v22 = (char *)v50;
      v39 = v51 & 1;
      if (!--v35)
      {
        sub_100503494(v49, v50, v51 & 1);
        v30 = v144;
        v4 = v145;
        v22 = v142;
        v32 = (void *)v143;
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_67:
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
LABEL_71:
    swift_once(&qword_1013DD750, sub_100A02540);
  }
  v57 = v32;
  v13 = (char *)_swiftEmptyArrayStorage;
LABEL_21:
  v171 = v13;
  v58 = sub_1004B804C((uint64_t *)&unk_1013E4970);
  v59 = sub_1004CBA30((unint64_t *)&qword_1013DFC40, (uint64_t *)&unk_1013E4970, (uint64_t)&protocol conformance descriptor for [A]);
  v60 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v58, v59);
  v62 = v61;
  swift_bridgeObjectRelease(v13);
  v63 = (_QWORD *)v149;
  *(_QWORD *)(v149 + 96) = &type metadata for String;
  v63[13] = sub_1004CFC2C();
  v63[9] = v60;
  v63[10] = v62;
  v65 = static os_log_type_t.default.getter(v64);
  sub_100A06EBC((uint64_t)v32, &_mh_execute_header, v65, "Removing on disk storage for %d board UUIDs: %@", 47, 2, (uint64_t)v63);
  swift_setDeallocating(v63);
  v66 = v63[2];
  v67 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v22, v66, v67);

  v68 = *(_QWORD *)(a1 + 56);
  v142 = (char *)(a1 + 56);
  v69 = 1 << *(_BYTE *)(a1 + 32);
  v70 = -1;
  if (v69 < 64)
    v70 = ~(-1 << v69);
  v71 = v70 & v68;
  v143 = (unint64_t)(v69 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v72 = 0;
  v17 = v154;
  v13 = v155;
  v73 = v159;
  while (1)
  {
    if (v71)
    {
      v149 = (v71 - 1) & v71;
      v150 = v72;
      v76 = __clz(__rbit64(v71)) | (v72 << 6);
      goto LABEL_43;
    }
    v77 = v72 + 1;
    if (__OFADD__(v72, 1))
      goto LABEL_69;
    if (v77 >= v143)
      break;
    v78 = *(_QWORD *)&v142[8 * v77];
    v79 = v72 + 1;
    if (!v78)
    {
      v79 = v72 + 2;
      if (v72 + 2 >= v143)
        break;
      v78 = *(_QWORD *)&v142[8 * v79];
      if (!v78)
      {
        v79 = v72 + 3;
        if (v72 + 3 >= v143)
          break;
        v78 = *(_QWORD *)&v142[8 * v79];
        if (!v78)
        {
          v80 = v72 + 4;
          if (v72 + 4 >= v143)
            break;
          v78 = *(_QWORD *)&v142[8 * v80];
          if (!v78)
          {
            while (1)
            {
              v79 = v80 + 1;
              if (__OFADD__(v80, 1))
                goto LABEL_70;
              if (v79 >= v143)
                goto LABEL_59;
              v78 = *(_QWORD *)&v142[8 * v79];
              ++v80;
              if (v78)
                goto LABEL_42;
            }
          }
          v79 = v72 + 4;
        }
      }
    }
LABEL_42:
    v149 = (v78 - 1) & v78;
    v150 = v79;
    v76 = __clz(__rbit64(v78)) + (v79 << 6);
LABEL_43:
    v81 = v146;
    sub_1004B8460(*(_QWORD *)(a1 + 48) + *(_QWORD *)(v148 + 72) * v76, v146, type metadata accessor for CRLBoardIdentifier);
    v82 = sub_1004B84E0(v81, v4, type metadata accessor for CRLBoardIdentifier);
    v83 = (_QWORD *)UUID.uuidString.getter(v82);
    v85 = v84;
    v171 = (char *)v83;
    v172 = v84;
    swift_bridgeObjectRetain(v84);
    v86._countAndFlagsBits = 58;
    v86._object = (void *)0xE100000000000000;
    String.append(_:)(v86);
    swift_bridgeObjectRelease(v85);
    v87 = v171;
    v88 = v172;
    v89 = (uint64_t *)(v4 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
    v90 = *v89;
    v91 = (void *)v89[1];
    v171 = (char *)v87;
    v172 = v88;
    swift_bridgeObjectRetain(v88);
    v92._countAndFlagsBits = v90;
    v92._object = v91;
    String.append(_:)(v92);
    swift_bridgeObjectRelease(v88);
    v93 = v172;
    v162 = 58;
    v163 = 0xE100000000000000;
    v161[0] = 35;
    v161[1] = 0xE100000000000000;
    v22 = (char *)sub_1004D292C();
    v152 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)(&v162, v161, 0, 0, 0, 1, &type metadata for String, &type metadata for String, &type metadata for String, v22, v22, v22);
    v153 = v94;
    swift_bridgeObjectRelease(v93);
    v95 = *(_QWORD *)(v30 + 16);
    if (v95)
    {
      v96 = v30 + ((v13[80] + 32) & ~(unint64_t)v13[80]);
      v97 = swift_bridgeObjectRetain(v30);
      v158 = *((_QWORD *)v13 + 9);
      v98 = (void (*)(_QWORD *, unint64_t, uint64_t, __n128))*((_QWORD *)v13 + 2);
      v17 = v154;
      v99 = v160;
      v98(v73, v96, v154, v97);
      while (1)
      {
        v75 = (void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))*((_QWORD *)v13 + 7);
        v75(v73, 0, 1, v17);
        if (v157(v73, 1, v17) == 1)
          goto LABEL_26;
        v101 = ((uint64_t (*)(char *, char *, uint64_t))v156)(v99, v73, v17);
        v102 = URL.pathComponents.getter(v101);
        v103 = v102;
        v104 = *(_QWORD *)(v102 + 16);
        if (!v104)
        {
          v100 = swift_bridgeObjectRelease(v102);
          goto LABEL_46;
        }
        v105 = v102 + 16 * v104;
        v106 = *(_QWORD **)(v105 + 16);
        v107 = *(_QWORD *)(v105 + 24);
        swift_bridgeObjectRetain(v107);
        swift_bridgeObjectRelease(v103);
        v171 = (char *)v106;
        v172 = v107;
        v17 = v154;
        v162 = v152;
        v163 = v153;
        v108 = StringProtocol.contains<A>(_:)(&v162, &type metadata for String, &type metadata for String, v22, v22);
        v109 = v107;
        v13 = v155;
        v100 = swift_bridgeObjectRelease(v109);
        if ((v108 & 1) != 0)
        {
          v110 = objc_msgSend(v151, "defaultManager", v100.n128_f64[0]);
          v111 = URL.isFileURL.getter(v110);
          if ((v111 & 1) != 0)
          {
            LOBYTE(v171) = 0;
            URL.path.getter(v111);
            v113 = v112;
            v114 = String._bridgeToObjectiveC()();
            LOBYTE(v113) = objc_msgSend(v110, "fileExistsAtPath:isDirectory:", v114, &v171, swift_bridgeObjectRelease(v113).n128_f64[0]);

            if ((v113 & 1) != 0)
            {
              v17 = v154;
              v13 = v155;
              if ((v171 & 1) != 0)
                goto LABEL_46;
              v115 = objc_msgSend(v151, "defaultManager");
              URL._bridgeToObjectiveC()(v116);
              v118 = v117;
              v171 = 0;
              v119 = objc_msgSend(v115, "removeItemAtURL:error:", v117, &v171);

              v120 = v171;
              if (!v119)
              {
                v123 = v171;
                swift_bridgeObjectRelease(v153);
                swift_bridgeObjectRelease_n(v144, 2);
                v55 = _convertNSErrorToError(_:)((char *)v120);

                swift_willThrow(v124);
                (*((void (**)(char *, uint64_t))v155 + 1))(v160, v154);
                sub_1004B84A4(v145, type metadata accessor for CRLBoardIdentifier);
                swift_release(v147);
                v22 = v141;
                goto LABEL_62;
              }
              v121 = v171;
            }
            v17 = v154;
          }
          else
          {

          }
          v13 = v155;
        }
LABEL_46:
        v99 = v160;
        (*((void (**)(char *, uint64_t, __n128))v13 + 1))(v160, v17, v100);
        v96 += v158;
        if (!--v95)
          goto LABEL_25;
        v98(v73, v96, v17, v74);
      }
    }
    v74 = swift_bridgeObjectRetain(v30);
    v75 = (void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))*((_QWORD *)v13 + 7);
    v17 = v154;
LABEL_25:
    ((void (*)(char *, uint64_t, uint64_t, uint64_t, __n128))v75)(v159, 1, 1, v17, v74);
LABEL_26:
    v30 = v144;
    swift_bridgeObjectRelease(v144);
    swift_bridgeObjectRelease(v153);
    v4 = v145;
    sub_1004B84A4(v145, type metadata accessor for CRLBoardIdentifier);
    a1 = v147;
    v71 = v149;
    v72 = v150;
  }
LABEL_59:
  swift_release(a1);
  swift_bridgeObjectRelease(v30);
  v52 = (uint64_t (*)(char *, uint64_t))*((_QWORD *)v13 + 1);
  v53 = v141;
LABEL_60:
  v122 = v17;
  return v52(v53, v122);
}

uint64_t sub_10059AEC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v7;
  _QWORD *v8;

  v7 = type metadata accessor for MainActor(0);
  v5[2] = v7;
  v5[3] = static MainActor.shared.getter(v7);
  v8 = (_QWORD *)swift_task_alloc(dword_1013E499C);
  v5[4] = v8;
  *v8 = v5;
  v8[1] = sub_1004E1A78;
  return sub_10059AF38(a5);
}

uint64_t sub_10059AF38(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2[15] = a1;
  v2[16] = v1;
  v3 = *(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v2[17] = v3;
  v4 = (*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[18] = swift_task_alloc(v4);
  v2[19] = swift_task_alloc(v4);
  v5 = type metadata accessor for MainActor(0);
  v2[20] = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v2[21] = v6;
  v2[22] = v7;
  return swift_task_switch(sub_10059AFD8, v6, v7);
}

void sub_10059AFD8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t inited;
  _QWORD *v8;
  int64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  _QWORD *v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  void *v62;
  _QWORD v63[2];

  v1 = v0;
  v2 = (uint64_t)(v0 + 2);
  v3 = (uint64_t)(v0 + 11);
  if (qword_1013DD750 != -1)
    goto LABEL_53;
  while (1)
  {
    v4 = v1[15];
    swift_beginAccess(&static OS_os_log.crlBoardPreviewImageCache, v3, 0, 0);
    v5 = (void *)static OS_os_log.crlBoardPreviewImageCache;
    v6 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v6, v2);
    v8 = (_QWORD *)inited;
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v9 = *(_QWORD *)(v4 + 16);
    if (!v9)
      break;
    v55 = (_QWORD *)inited;
    v57 = v4;
    v59 = v1[17];
    v61 = v1;
    v10 = v1[15];
    v63[0] = _swiftEmptyArrayStorage;
    v56 = v5;
    v11 = v5;
    v2 = (uint64_t)v63;
    sub_1006006EC(0, v9, 0);
    v12 = sub_100CE0488(v10);
    v1 = v13;
    v15 = v14 & 1;
    v60 = v10 + 56;
    v58 = v10;
    while ((v12 & 0x8000000000000000) == 0 && v12 < 1 << *(_BYTE *)(v10 + 32))
    {
      if (((*(_QWORD *)(v60 + (((unint64_t)v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
        goto LABEL_47;
      if (*(_DWORD *)(v10 + 36) != (_DWORD)v1)
        goto LABEL_48;
      v17 = v61[18];
      v16 = v61[19];
      sub_1004B8460(*(_QWORD *)(v10 + 48) + *(_QWORD *)(v59 + 72) * v12, v16, type metadata accessor for CRLBoardIdentifier);
      v18 = sub_1004B84E0(v16, v17, type metadata accessor for CRLBoardIdentifier);
      v2 = v17;
      v19 = UUID.uuidString.getter(v18);
      v21 = v20;
      sub_1004B84A4(v17, type metadata accessor for CRLBoardIdentifier);
      v22 = (_QWORD *)v63[0];
      if ((swift_isUniquelyReferenced_nonNull_native(v63[0]) & 1) == 0)
      {
        v2 = (uint64_t)v63;
        sub_1006006EC(0, v22[2] + 1, 1);
        v22 = (_QWORD *)v63[0];
      }
      v24 = v22[2];
      v23 = v22[3];
      v3 = v24 + 1;
      if (v24 >= v23 >> 1)
      {
        v2 = (uint64_t)v63;
        sub_1006006EC(v23 > 1, v24 + 1, 1);
        v22 = (_QWORD *)v63[0];
      }
      v25 = v61[15];
      v22[2] = v3;
      v26 = &v22[2 * v24];
      v26[4] = v19;
      v26[5] = v21;
      v27 = sub_1005C3B08(v12, v1, v15 & 1, v25);
      v12 = v27;
      v1 = (_QWORD *)v28;
      v15 = v29 & 1;
      --v9;
      v10 = v58;
      if (!v9)
      {
        sub_100503494(v27, v28, v29 & 1);
        v1 = v61;
        v5 = v56;
        v4 = v57;
        v8 = v55;
        goto LABEL_15;
      }
    }
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    swift_once(&qword_1013DD750, sub_100A02540);
  }
  v30 = v5;
  v22 = _swiftEmptyArrayStorage;
LABEL_15:
  v1[14] = v22;
  v31 = sub_1004B804C((uint64_t *)&unk_1013E4970);
  v32 = sub_1004CBA30((unint64_t *)&qword_1013DFC40, (uint64_t *)&unk_1013E4970, (uint64_t)&protocol conformance descriptor for [A]);
  v33 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v31, v32);
  v3 = v34;
  swift_bridgeObjectRelease(v22);
  v8[7] = &type metadata for String;
  v8[8] = sub_1004CFC2C();
  v8[4] = v33;
  v8[5] = v3;
  v35 = static os_log_type_t.info.getter();
  sub_100A06EBC((uint64_t)v5, &_mh_execute_header, v35, "Called boardsDidChange for board UUIDs: %@", 42, 2, (uint64_t)v8);
  swift_setDeallocating(v8);
  v36 = v8[2];
  v37 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v8 + 4, v36, v37);

  if (!*(_QWORD *)(v4 + 16))
  {
    swift_release(v1[20]);
    v51 = v1[18];
    swift_task_dealloc(v1[19]);
    swift_task_dealloc(v51);
    ((void (*)(void))v1[1])();
    return;
  }
  v38 = *(_QWORD *)(*(_QWORD *)(v1[16] + OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_boardLibrary)
                  + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_storeHierarchySnapshot);
  v62 = &_swiftEmptySetSingleton;
  v63[0] = v38;
  if ((unint64_t)v38 >> 62)
  {
    if (v38 < 0)
      v52 = v38;
    else
      v52 = v38 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v38, 3);
    v53 = _CocoaArrayWrapper.endIndex.getter(v52);
    swift_bridgeObjectRelease(v38);
    if (v53)
      goto LABEL_18;
  }
  else
  {
    v39 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n(v38, 2);
    if (v39)
    {
LABEL_18:
      v2 = v38;
      while (1)
      {
        v40 = (unint64_t)v2 >> 62;
        if ((unint64_t)v2 >> 62)
        {
          if (v2 < 0)
            v42 = v2;
          else
            v42 = v2 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v2);
          v43 = _CocoaArrayWrapper.endIndex.getter(v42);
          swift_bridgeObjectRelease(v2);
          if (!v43)
          {
            __break(1u);
            return;
          }
          swift_bridgeObjectRetain(v2);
          v3 = _CocoaArrayWrapper.endIndex.getter(v42);
          swift_bridgeObjectRelease(v2);
          if (!v3)
            goto LABEL_50;
        }
        else if (!*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          goto LABEL_49;
        }
        if ((v2 & 0xC000000000000001) != 0)
        {
          v41 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v2);
          if (v40)
            goto LABEL_32;
        }
        else
        {
          if (!*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_51;
          v41 = *(id *)(v2 + 32);
          if (v40)
          {
LABEL_32:
            if (v2 < 0)
              v44 = v2;
            else
              v44 = v2 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v2);
            v3 = _CocoaArrayWrapper.endIndex.getter(v44);
            swift_bridgeObjectRelease(v2);
            goto LABEL_36;
          }
        }
        v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_36:
        if (!v3)
          goto LABEL_52;
        v45 = (_QWORD *)v1[15];
        sub_100CFE428(0, 1);
        v46 = objc_msgSend(v41, "children");
        v47 = type metadata accessor for CRLBoardLibraryViewModelItemNode(0);
        v48 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v46, v47);

        sub_10061EABC(v48);
        sub_10059B6B4((uint64_t)&v62, v41, v45);

        v2 = v63[0];
        if (v63[0] >> 62)
        {
          if (v63[0] < 0)
            v49 = v63[0];
          else
            v49 = v63[0] & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v63[0]);
          v3 = _CocoaArrayWrapper.endIndex.getter(v49);
          swift_bridgeObjectRelease(v2);
          if (!v3)
          {
LABEL_44:
            swift_bridgeObjectRelease(v2);
            swift_bridgeObjectRelease(v38);
            v50 = v62;
            goto LABEL_59;
          }
        }
        else
        {
          v3 = *(_QWORD *)((v63[0] & 0xFFFFFFFFFFFFF8) + 0x10);
          if (!v3)
            goto LABEL_44;
        }
      }
    }
  }
  swift_bridgeObjectRelease_n(v38, 2);
  v50 = &_swiftEmptySetSingleton;
LABEL_59:
  v1[23] = v50;
  v54 = (_QWORD *)swift_task_alloc(dword_1013E49A4);
  v1[24] = v54;
  *v54 = v1;
  v54[1] = sub_10059B620;
  sub_1005977DC((uint64_t)v50);
}

uint64_t sub_10059B620()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 184);
  swift_task_dealloc(*(_QWORD *)(*v0 + 192));
  swift_bridgeObjectRelease(v2);
  return swift_task_switch(sub_10059B674, *(_QWORD *)(v1 + 168), *(_QWORD *)(v1 + 176));
}

uint64_t sub_10059B674()
{
  uint64_t v0;
  uint64_t v1;

  swift_release(*(_QWORD *)(v0 + 160));
  v1 = *(_QWORD *)(v0 + 144);
  swift_task_dealloc(*(_QWORD *)(v0 + 152));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10059B6B4(uint64_t a1, void *a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  int EnumCaseMultiPayload;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v35 = a1;
  v5 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v5);
  v32 = (uint64_t)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  __chkstk_darwin(v33);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v34 = (uint64_t)&v32 - v10;
  v11 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v32 - v18;
  __chkstk_darwin(v20);
  v22 = (char *)&v32 - v21;
  sub_1004B8460((uint64_t)a2 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item, (uint64_t)&v32 - v21, type metadata accessor for CRLBoardLibraryViewModel.Item);
  sub_1004B8460((uint64_t)v22, (uint64_t)v19, type metadata accessor for CRLBoardLibraryViewModel.Item);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v19, v14);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v24 = objc_msgSend(a2, "children");
      v25 = type metadata accessor for CRLBoardLibraryViewModelItemNode(0);
      v26 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v24, v25);

      swift_bridgeObjectRetain(a3);
      LOBYTE(v24) = sub_10059D938(v26, a3);
      swift_bridgeObjectRelease(v26);
      swift_bridgeObjectRelease(a3);
      if ((v24 & 1) != 0)
      {
        sub_1004B8460((uint64_t)v22, (uint64_t)v16, type metadata accessor for CRLBoardLibraryViewModel.Item);
        if (swift_getEnumCaseMultiPayload(v16, v14) != 1)
        {
          sub_1004B84A4((uint64_t)v22, type metadata accessor for CRLBoardLibraryViewModel.Item);
          goto LABEL_12;
        }
        v27 = v32;
        sub_1004B84E0((uint64_t)v16, v32, type metadata accessor for CRLBoardLibraryViewModel.Folder);
        sub_1004B8460(v27, (uint64_t)v8, type metadata accessor for CRLBoardLibraryViewModel.Folder);
        swift_storeEnumTagMultiPayload(v8, v33, 0);
        v28 = v34;
        sub_100AD9558(v34, (uint64_t)v8);
        sub_1004B84A4(v28, type metadata accessor for CRLBoardPreviewImageCache.Item);
        sub_1004B84A4(v27, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      }
      v16 = v22;
LABEL_12:
      sub_1004B84A4((uint64_t)v16, type metadata accessor for CRLBoardLibraryViewModel.Item);
      return sub_1004B84A4((uint64_t)v19, type metadata accessor for CRLBoardLibraryViewModel.Item);
    }
    v29 = sub_1004B804C((uint64_t *)&unk_1013EA630);
    swift_bridgeObjectRelease(*(_QWORD *)&v19[*(int *)(v29 + 48) + 8]);
    sub_1004B84E0((uint64_t)v19, (uint64_t)v13, type metadata accessor for CRLBoardIdentifier);
    if ((sub_100622DD8((uint64_t)v13, (uint64_t)a3) & 1) != 0)
    {
      sub_1004B8460((uint64_t)v13, (uint64_t)v8, type metadata accessor for CRLBoardIdentifier);
      swift_storeEnumTagMultiPayload(v8, v33, 1);
      v30 = v34;
      sub_100AD9558(v34, (uint64_t)v8);
      sub_1004B84A4(v30, type metadata accessor for CRLBoardPreviewImageCache.Item);
    }
    sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLBoardIdentifier);
    v19 = v22;
  }
  else
  {
    sub_1004B84A4((uint64_t)v22, type metadata accessor for CRLBoardLibraryViewModel.Item);
  }
  return sub_1004B84A4((uint64_t)v19, type metadata accessor for CRLBoardLibraryViewModel.Item);
}

uint64_t sub_10059BA80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v6;

  v4[2] = a4;
  v6 = type metadata accessor for MainActor(0);
  v4[3] = v6;
  v4[4] = static MainActor.shared.getter(v6);
  return swift_task_switch(sub_10059BAD4, a4, 0);
}

uint64_t sub_10059BAD4()
{
  uint64_t v0;
  uint64_t v1;
  unsigned int v2;
  void *v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(unsigned __int8 *)(v1 + 128);
  if (v2 <= 0x3F)
  {
    v3 = *(void **)(v1 + 120);
    v4 = swift_retain(v3);
    if ((swift_task_isCancelled(v4) & 1) == 0)
    {
      sub_1004B8930(0, (unint64_t *)&qword_1013E45F0, off_1012298E8);
      sub_1004B804C(&qword_1013E0210);
      Task.cancel()();
    }
    sub_10059BC90(v3, v2);
  }
  v5 = dispatch thunk of Actor.unownedExecutor.getter(*(_QWORD *)(v0 + 24), &protocol witness table for MainActor);
  return swift_task_switch(sub_10053457C, v5, v6);
}

uint64_t initializeBufferWithCopyOfBuffer for CRLBoardPreviewImageCache.CacheEntry.Status(uint64_t a1, uint64_t a2)
{
  void *v3;
  unsigned __int8 v4;

  v3 = *(void **)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_10059BC50(*(void **)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

void sub_10059BC50(void *a1, unsigned __int8 a2)
{
  if (a2 >> 6 == 1)
  {
    sub_10059BC74(a1, a2 & 1);
  }
  else if (!(a2 >> 6))
  {
    swift_retain(a1);
  }
}

id sub_10059BC74(void *a1, char a2)
{
  if ((a2 & 1) != 0)
    return (id)swift_errorRetain(a1);
  else
    return a1;
}

void destroy for CRLBoardPreviewImageCache.CacheEntry.Status(uint64_t a1)
{
  sub_10059BC90(*(void **)a1, *(_BYTE *)(a1 + 8));
}

void sub_10059BC90(void *a1, unsigned __int8 a2)
{
  if (a2 >> 6 == 1)
  {
    sub_1004E1E08(a1, a2 & 1);
  }
  else if (!(a2 >> 6))
  {
    swift_release(a1);
  }
}

uint64_t assignWithCopy for CRLBoardPreviewImageCache.CacheEntry.Status(uint64_t a1, uint64_t a2)
{
  void *v3;
  unsigned __int8 v4;
  void *v5;
  unsigned __int8 v6;

  v3 = *(void **)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_10059BC50(*(void **)a2, v4);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_10059BC90(v5, v6);
  return a1;
}

uint64_t initializeBufferWithCopyOfBuffer for CRLMiniFormatterStrokeDataProvider.StrokeChangingState(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t assignWithTake for CRLBoardPreviewImageCache.CacheEntry.Status(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  unsigned __int8 v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_10059BC90(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLBoardPreviewImageCache.CacheEntry.Status(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7E && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 126);
  v3 = ((*(unsigned __int8 *)(a1 + 8) >> 6) & 0xFFFFFF83 | (4 * ((*(unsigned __int8 *)(a1 + 8) >> 1) & 0x1F))) ^ 0x7F;
  if (v3 >= 0x7D)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for CRLBoardPreviewImageCache.CacheEntry.Status(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 126;
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_BYTE *)(result + 8) = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
    }
  }
  return result;
}

uint64_t sub_10059BDFC(uint64_t a1)
{
  unsigned int v1;
  int v2;
  unsigned int v3;

  v1 = *(unsigned __int8 *)(a1 + 8);
  v2 = (char)v1;
  v3 = v1 >> 6;
  if (v2 >= 0)
    return v3;
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_10059BE1C(uint64_t result)
{
  *(_BYTE *)(result + 8) &= 0x3Fu;
  return result;
}

uint64_t sub_10059BE2C(uint64_t result, unsigned int a2)
{
  if (a2 < 2)
  {
    *(_BYTE *)(result + 8) = *(_BYTE *)(result + 8) & 1 | ((_BYTE)a2 << 6);
  }
  else
  {
    *(_QWORD *)result = a2 - 2;
    *(_BYTE *)(result + 8) = 0x80;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardPreviewImageCache.CacheEntry.Status()
{
  return &type metadata for CRLBoardPreviewImageCache.CacheEntry.Status;
}

uint64_t getEnumTagSinglePayload for CRLBoardPreviewImageCache.ImageSizeClass(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for CRLBoardPreviewImageCache.ImageSizeClass(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 16) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 17) = v3;
  return result;
}

uint64_t sub_10059BEB8(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_10059BED4(uint64_t result, int a2)
{
  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    *(_BYTE *)(result + 16) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardPreviewImageCache.ImageSizeClass()
{
  return &type metadata for CRLBoardPreviewImageCache.ImageSizeClass;
}

ValueMetadata *type metadata accessor for CRLBoardPreviewImageCache.ImageSizeClassAndContentsScale()
{
  return &type metadata for CRLBoardPreviewImageCache.ImageSizeClassAndContentsScale;
}

uint64_t *sub_10059BF14(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  _OWORD *v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  void (*v36)(uint64_t *, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v37;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v16);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      v17 = type metadata accessor for UUID(0);
      v18 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
      v18(a1, a2, v17);
      v19 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
      v20 = (uint64_t *)((char *)a1 + v19);
      v21 = (uint64_t *)((char *)a2 + v19);
      v22 = v21[1];
      *v20 = *v21;
      v20[1] = v22;
      swift_bridgeObjectRetain(v22);
      v23 = sub_1004B804C((uint64_t *)&unk_1013DE640);
      v18((uint64_t *)((char *)a1 + *(int *)(v23 + 48)), (uint64_t *)((char *)a2 + *(int *)(v23 + 48)), v17);
      v24 = *(int *)(v23 + 64);
      v25 = (_OWORD *)((char *)a1 + v24);
      v26 = (_OWORD *)((char *)a2 + v24);
      v27 = v26[1];
      *v25 = *v26;
      v25[1] = v27;
      v13 = a1;
      v14 = a3;
      v15 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v8 = type metadata accessor for UUID(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
      v10 = (uint64_t *)((char *)a1 + v9);
      v11 = (uint64_t *)((char *)a2 + v9);
      v12 = v11[1];
      *v10 = *v11;
      v10[1] = v12;
      swift_bridgeObjectRetain(v12);
      v13 = a1;
      v14 = a3;
      v15 = 1;
    }
    else
    {
      v28 = sub_1004B804C(&qword_1013E1790);
      v29 = *(_QWORD *)(v28 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v29 + 48))(a2, 5, v28))
      {
        v30 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        v31 = type metadata accessor for UUID(0);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(a1, a2, v31);
        v32 = *(int *)(v28 + 48);
        v33 = (uint64_t *)((char *)a1 + v32);
        v34 = (uint64_t *)((char *)a2 + v32);
        v35 = v34[1];
        *v33 = *v34;
        v33[1] = v35;
        v36 = *(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t, __n128))(v29 + 56);
        v37 = swift_bridgeObjectRetain(v35);
        v36(a1, 0, 5, v28, v37);
      }
      v13 = a1;
      v14 = a3;
      v15 = 0;
    }
    swift_storeEnumTagMultiPayload(v13, v14, v15);
  }
  return a1;
}

double sub_10059C11C(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  double result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1, a2);
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v6 = type metadata accessor for UUID(0);
      v12 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
      v12(a1, v6);
      v7 = type metadata accessor for CRLBoardIdentifierStorage(0);
      swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(v7 + 20) + 8));
      v8 = a1 + *(int *)(sub_1004B804C((uint64_t *)&unk_1013DE640) + 48);
      v12(v8, v6);
      return result;
    case 1:
      v9 = type metadata accessor for UUID(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(a1, v9);
      v10 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
LABEL_9:
      *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(a1 + v10 + 8)).n128_u64[0];
      return result;
    case 0:
      v5 = sub_1004B804C(&qword_1013E1790);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(a1, 5, v5))
      {
        v11 = type metadata accessor for UUID(0);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(a1, v11);
        v10 = *(int *)(v5 + 48);
        goto LABEL_9;
      }
      break;
  }
  return result;
}

char *sub_10059C254(char *a1, char *a2, uint64_t a3)
{
  uint64_t EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v33;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  v7 = EnumCaseMultiPayload;
  if ((_DWORD)EnumCaseMultiPayload == 2)
  {
    v13 = type metadata accessor for UUID(0);
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    v14(a1, a2, v13);
    v15 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
    v16 = &a1[v15];
    v17 = &a2[v15];
    v18 = *((_QWORD *)v17 + 1);
    *(_QWORD *)v16 = *(_QWORD *)v17;
    *((_QWORD *)v16 + 1) = v18;
    swift_bridgeObjectRetain(v18);
    v19 = sub_1004B804C((uint64_t *)&unk_1013DE640);
    v14(&a1[*(int *)(v19 + 48)], &a2[*(int *)(v19 + 48)], v13);
    v20 = *(int *)(v19 + 64);
    v21 = &a1[v20];
    v22 = &a2[v20];
    v23 = *((_OWORD *)v22 + 1);
    *(_OWORD *)v21 = *(_OWORD *)v22;
    *((_OWORD *)v21 + 1) = v23;
  }
  else if ((_DWORD)EnumCaseMultiPayload == 1)
  {
    v8 = type metadata accessor for UUID(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    v9 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = *((_QWORD *)v11 + 1);
    *(_QWORD *)v10 = *(_QWORD *)v11;
    *((_QWORD *)v10 + 1) = v12;
    swift_bridgeObjectRetain(v12);
  }
  else
  {
    v24 = sub_1004B804C(&qword_1013E1790);
    v25 = *(_QWORD *)(v24 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(a2, 5, v24))
    {
      v26 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      v27 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(a1, a2, v27);
      v28 = *(int *)(v24 + 48);
      v29 = &a1[v28];
      v30 = &a2[v28];
      v31 = *((_QWORD *)v30 + 1);
      *(_QWORD *)v29 = *(_QWORD *)v30;
      *((_QWORD *)v29 + 1) = v31;
      v32 = *(void (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v25 + 56);
      v33 = swift_bridgeObjectRetain(v31);
      v32(a1, 0, 5, v24, v33);
    }
  }
  swift_storeEnumTagMultiPayload(a1, a3, v7);
  return a1;
}

char *sub_10059C424(char *a1, char *a2, uint64_t a3)
{
  uint64_t EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v33;

  if (a1 != a2)
  {
    sub_1004B84A4((uint64_t)a1, type metadata accessor for CRLBoardPreviewImageCache.Item);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    v7 = EnumCaseMultiPayload;
    if ((_DWORD)EnumCaseMultiPayload == 2)
    {
      v13 = type metadata accessor for UUID(0);
      v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
      v14(a1, a2, v13);
      v15 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
      v16 = &a1[v15];
      v17 = &a2[v15];
      *(_QWORD *)v16 = *(_QWORD *)v17;
      v18 = *((_QWORD *)v17 + 1);
      *((_QWORD *)v16 + 1) = v18;
      swift_bridgeObjectRetain(v18);
      v19 = sub_1004B804C((uint64_t *)&unk_1013DE640);
      v14(&a1[*(int *)(v19 + 48)], &a2[*(int *)(v19 + 48)], v13);
      v20 = *(int *)(v19 + 64);
      v21 = &a1[v20];
      v22 = &a2[v20];
      v23 = *((_OWORD *)v22 + 1);
      *(_OWORD *)v21 = *(_OWORD *)v22;
      *((_OWORD *)v21 + 1) = v23;
    }
    else if ((_DWORD)EnumCaseMultiPayload == 1)
    {
      v8 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
      v10 = &a1[v9];
      v11 = &a2[v9];
      *(_QWORD *)v10 = *(_QWORD *)v11;
      v12 = *((_QWORD *)v11 + 1);
      *((_QWORD *)v10 + 1) = v12;
      swift_bridgeObjectRetain(v12);
    }
    else
    {
      v24 = sub_1004B804C(&qword_1013E1790);
      v25 = *(_QWORD *)(v24 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(a2, 5, v24))
      {
        v26 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        v27 = type metadata accessor for UUID(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(a1, a2, v27);
        v28 = *(int *)(v24 + 48);
        v29 = &a1[v28];
        v30 = &a2[v28];
        *(_QWORD *)v29 = *(_QWORD *)v30;
        v31 = *((_QWORD *)v30 + 1);
        *((_QWORD *)v29 + 1) = v31;
        v32 = *(void (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v25 + 56);
        v33 = swift_bridgeObjectRetain(v31);
        v32(a1, 0, 5, v24, v33);
      }
    }
    swift_storeEnumTagMultiPayload(a1, a3, v7);
  }
  return a1;
}

char *sub_10059C624(char *a1, char *a2, uint64_t a3)
{
  uint64_t EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  v7 = EnumCaseMultiPayload;
  if ((_DWORD)EnumCaseMultiPayload == 2)
  {
    v10 = type metadata accessor for UUID(0);
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
    v11(a1, a2, v10);
    v12 = type metadata accessor for CRLBoardIdentifierStorage(0);
    *(_OWORD *)&a1[*(int *)(v12 + 20)] = *(_OWORD *)&a2[*(int *)(v12 + 20)];
    v13 = sub_1004B804C((uint64_t *)&unk_1013DE640);
    v11(&a1[*(int *)(v13 + 48)], &a2[*(int *)(v13 + 48)], v10);
    v14 = *(int *)(v13 + 64);
    v15 = &a1[v14];
    v16 = &a2[v14];
    v17 = *((_OWORD *)v16 + 1);
    *(_OWORD *)v15 = *(_OWORD *)v16;
    *((_OWORD *)v15 + 1) = v17;
  }
  else if ((_DWORD)EnumCaseMultiPayload == 1)
  {
    v8 = type metadata accessor for UUID(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    v9 = type metadata accessor for CRLBoardIdentifierStorage(0);
    *(_OWORD *)&a1[*(int *)(v9 + 20)] = *(_OWORD *)&a2[*(int *)(v9 + 20)];
  }
  else
  {
    v18 = sub_1004B804C(&qword_1013E1790);
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(a2, 5, v18))
    {
      v20 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      v21 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(a1, a2, v21);
      *(_OWORD *)&a1[*(int *)(v18 + 48)] = *(_OWORD *)&a2[*(int *)(v18 + 48)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(a1, 0, 5, v18);
    }
  }
  swift_storeEnumTagMultiPayload(a1, a3, v7);
  return a1;
}

char *sub_10059C7D0(char *a1, char *a2, uint64_t a3)
{
  uint64_t EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  if (a1 != a2)
  {
    sub_1004B84A4((uint64_t)a1, type metadata accessor for CRLBoardPreviewImageCache.Item);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    v7 = EnumCaseMultiPayload;
    if ((_DWORD)EnumCaseMultiPayload == 2)
    {
      v10 = type metadata accessor for UUID(0);
      v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
      v11(a1, a2, v10);
      v12 = type metadata accessor for CRLBoardIdentifierStorage(0);
      *(_OWORD *)&a1[*(int *)(v12 + 20)] = *(_OWORD *)&a2[*(int *)(v12 + 20)];
      v13 = sub_1004B804C((uint64_t *)&unk_1013DE640);
      v11(&a1[*(int *)(v13 + 48)], &a2[*(int *)(v13 + 48)], v10);
      v14 = *(int *)(v13 + 64);
      v15 = &a1[v14];
      v16 = &a2[v14];
      v17 = *((_OWORD *)v16 + 1);
      *(_OWORD *)v15 = *(_OWORD *)v16;
      *((_OWORD *)v15 + 1) = v17;
    }
    else if ((_DWORD)EnumCaseMultiPayload == 1)
    {
      v8 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
      v9 = type metadata accessor for CRLBoardIdentifierStorage(0);
      *(_OWORD *)&a1[*(int *)(v9 + 20)] = *(_OWORD *)&a2[*(int *)(v9 + 20)];
    }
    else
    {
      v18 = sub_1004B804C(&qword_1013E1790);
      v19 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(a2, 5, v18))
      {
        v20 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        v21 = type metadata accessor for UUID(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(a1, a2, v21);
        *(_OWORD *)&a1[*(int *)(v18 + 48)] = *(_OWORD *)&a2[*(int *)(v18 + 48)];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(a1, 0, 5, v18);
      }
    }
    swift_storeEnumTagMultiPayload(a1, a3, v7);
  }
  return a1;
}

uint64_t sub_10059C994(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _BYTE v7[32];
  _QWORD v8[3];

  result = type metadata accessor for CRLBoardLibraryViewModel.Folder(319);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for CRLBoardIdentifierStorage(319);
    if (v4 <= 0x3F)
    {
      v5 = *(_QWORD *)(result - 8) + 64;
      v8[1] = v5;
      result = type metadata accessor for UUID(319);
      if (v6 <= 0x3F)
      {
        swift_getTupleTypeLayout3(v7, v5, *(_QWORD *)(result - 8) + 64, " ");
        v8[2] = v7;
        swift_initEnumMetadataMultiPayload(a1, 256, 3, v8);
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_10059CA50()
{
  return sub_1004B7878(&qword_1013E4598, type metadata accessor for CRLBoardPreviewImageCache.Item, (uint64_t)&unk_100EFA6F0);
}

unint64_t sub_10059CA80()
{
  unint64_t result;

  result = qword_1013E45A0;
  if (!qword_1013E45A0)
  {
    result = swift_getWitnessTable(&unk_100EFA7A8, &type metadata for CRLBoardPreviewImageCache.ImageSizeClassAndContentsScale);
    atomic_store(result, (unint64_t *)&qword_1013E45A0);
  }
  return result;
}

unint64_t sub_10059CAC8()
{
  unint64_t result;

  result = qword_1013E45A8;
  if (!qword_1013E45A8)
  {
    result = swift_getWitnessTable(&unk_100EFA8A0, &type metadata for CRLBoardPreviewImageCache.ImageSizeClass);
    atomic_store(result, (unint64_t *)&qword_1013E45A8);
  }
  return result;
}

BOOL sub_10059CB0C(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8)
{
  CGRect v13;
  CGRect v14;

  v13.origin.x = a5;
  v13.origin.y = a6;
  v13.size.width = a7;
  v13.size.height = a8;
  v14.origin.x = a1;
  v14.origin.y = a2;
  v14.size.width = a3;
  v14.size.height = a4;
  return CGRectEqualToRect(v13, v14);
}

BOOL sub_10059CB50(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6, double a7, double a8)
{
  double v8;
  double v10;
  double v11;
  _BOOL4 v12;

  if ((a3 & 1) != 0)
  {
    v8 = dbl_100EFB730[a1];
    *(double *)&a2 = v8;
    if ((a6 & 1) != 0)
      goto LABEL_3;
  }
  else
  {
    v8 = *(double *)&a1;
    if ((a6 & 1) != 0)
    {
LABEL_3:
      v10 = dbl_100EFB730[a4];
      v11 = v10;
      goto LABEL_6;
    }
  }
  v10 = *(double *)&a4;
  v11 = *(double *)&a5;
LABEL_6:
  v12 = v8 == v10;
  if (*(double *)&a2 != v11)
    v12 = 0;
  return a7 == a8 && v12;
}

BOOL sub_10059CBA4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  double v6;
  double v8;
  double v9;

  if ((a3 & 1) != 0)
  {
    v6 = dbl_100EFB730[a1];
    *(double *)&a2 = v6;
    if ((a6 & 1) != 0)
      goto LABEL_3;
  }
  else
  {
    v6 = *(double *)&a1;
    if ((a6 & 1) != 0)
    {
LABEL_3:
      v8 = dbl_100EFB730[a4];
      v9 = v8;
      return *(double *)&a2 == v9 && v6 == v8;
    }
  }
  v8 = *(double *)&a4;
  v9 = *(double *)&a5;
  return *(double *)&a2 == v9 && v6 == v8;
}

BOOL sub_10059CBF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  int EnumCaseMultiPayload;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t (*v48)(uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  CGFloat v54;
  CGFloat v55;
  CGFloat v56;
  CGFloat v57;
  char *v58;
  CGFloat v59;
  CGFloat v60;
  CGFloat v61;
  CGFloat v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, char *, uint64_t);
  char *v66;
  char *v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  BOOL v78;
  BOOL v79;
  uint64_t v80;
  uint64_t (*v81)(uint64_t);
  uint64_t v82;
  char v83;
  char v84;
  void (*v85)(char *, uint64_t);
  void (*v86)(char *, uint64_t);
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  CGRect v98;
  CGRect v99;

  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  v96 = v4;
  v97 = v5;
  __chkstk_darwin(v4);
  v93 = (char *)&v88 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v94 = (char *)&v88 - v8;
  v9 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v9);
  v91 = (uint64_t)&v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v92 = (uint64_t)&v88 - v12;
  __chkstk_darwin(v13);
  v95 = (uint64_t)&v88 - v14;
  __chkstk_darwin(v15);
  v88 = (uint64_t)&v88 - v16;
  __chkstk_darwin(v17);
  v89 = (uint64_t)&v88 - v18;
  __chkstk_darwin(v19);
  v90 = (uint64_t)&v88 - v20;
  v21 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v21);
  v23 = (char *)&v88 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  __chkstk_darwin(v24);
  v26 = (char *)&v88 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v29 = (char *)&v88 - v28;
  __chkstk_darwin(v30);
  v32 = (char *)&v88 - v31;
  v33 = sub_1004B804C((uint64_t *)&unk_1013E4698);
  __chkstk_darwin(v33);
  v35 = (char *)&v88 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = (uint64_t)&v35[*(int *)(v36 + 48)];
  sub_1004B8460(a1, (uint64_t)v35, type metadata accessor for CRLBoardPreviewImageCache.Item);
  sub_1004B8460(a2, v37, type metadata accessor for CRLBoardPreviewImageCache.Item);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v35, v24);
  if (!EnumCaseMultiPayload)
  {
    sub_1004B8460((uint64_t)v35, (uint64_t)v32, type metadata accessor for CRLBoardPreviewImageCache.Item);
    if (swift_getEnumCaseMultiPayload(v37, v24))
    {
      v48 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
      v49 = (uint64_t)v32;
LABEL_17:
      sub_1004B84A4(v49, v48);
      sub_1004CB800((uint64_t)v35, (uint64_t *)&unk_1013E4698);
      return 0;
    }
    sub_1004B84E0(v37, (uint64_t)v23, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    sub_100BD0ED4((uint64_t)v32, (uint64_t)v23);
    v79 = v78;
    sub_1004B84A4((uint64_t)v23, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    v80 = (uint64_t)v32;
    v81 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
LABEL_26:
    sub_1004B84A4(v80, v81);
    sub_1004B84A4((uint64_t)v35, type metadata accessor for CRLBoardPreviewImageCache.Item);
    return v79;
  }
  if (EnumCaseMultiPayload != 1)
  {
    sub_1004B8460((uint64_t)v35, (uint64_t)v26, type metadata accessor for CRLBoardPreviewImageCache.Item);
    v50 = sub_1004B804C((uint64_t *)&unk_1013DE640);
    v51 = *(int *)(v50 + 48);
    v52 = &v26[v51];
    v53 = *(int *)(v50 + 64);
    v54 = *(double *)&v26[v53];
    v55 = *(double *)&v26[v53 + 8];
    v56 = *(double *)&v26[v53 + 16];
    v57 = *(double *)&v26[v53 + 24];
    if (swift_getEnumCaseMultiPayload(v37, v24) != 2)
    {
      (*(void (**)(char *, uint64_t))(v97 + 8))(&v26[v51], v96);
      v48 = type metadata accessor for CRLBoardIdentifier;
      v49 = (uint64_t)v26;
      goto LABEL_17;
    }
    v58 = (char *)(v37 + v51);
    v59 = *(double *)(v37 + v53);
    v60 = *(double *)(v37 + v53 + 8);
    v61 = *(double *)(v37 + v53 + 16);
    v62 = *(double *)(v37 + v53 + 24);
    v63 = v95;
    sub_1004B84E0(v37, v95, type metadata accessor for CRLBoardIdentifier);
    v64 = v96;
    v65 = *(void (**)(char *, char *, uint64_t))(v97 + 32);
    v66 = v94;
    v65(v94, v52, v96);
    v67 = v93;
    v65(v93, v58, v64);
    v68 = static UUID.== infix(_:_:)(v26);
    v69 = v92;
    sub_1004B8460((uint64_t)v26, v92, type metadata accessor for CRLBoardIdentifier);
    v70 = v63;
    v71 = v91;
    sub_1004B8460(v70, v91, type metadata accessor for CRLBoardIdentifier);
    if ((v68 & 1) != 0)
    {
      v72 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
      v73 = *(_QWORD *)(v69 + v72);
      v74 = *(_QWORD *)(v69 + v72 + 8);
      v75 = (_QWORD *)(v71 + v72);
      v76 = v75[1];
      if (v73 == *v75 && v74 == v76)
      {
        sub_1004B84A4(v71, type metadata accessor for CRLBoardIdentifier);
        sub_1004B84A4(v69, type metadata accessor for CRLBoardIdentifier);
        sub_1004B84A4((uint64_t)v26, type metadata accessor for CRLBoardIdentifier);
        v77 = v97;
      }
      else
      {
        v84 = _stringCompareWithSmolCheck(_:_:expecting:)(v73, v74, *v75, v76, 0);
        sub_1004B84A4(v71, type metadata accessor for CRLBoardIdentifier);
        sub_1004B84A4(v69, type metadata accessor for CRLBoardIdentifier);
        sub_1004B84A4((uint64_t)v26, type metadata accessor for CRLBoardIdentifier);
        v77 = v97;
        if ((v84 & 1) == 0)
          goto LABEL_27;
      }
      if ((static UUID.== infix(_:_:)(v66) & 1) != 0)
      {
        v98.origin.x = v54;
        v98.origin.y = v55;
        v98.size.width = v56;
        v98.size.height = v57;
        v99.origin.x = v59;
        v99.origin.y = v60;
        v99.size.width = v61;
        v99.size.height = v62;
        v79 = CGRectEqualToRect(v98, v99);
        v85 = *(void (**)(char *, uint64_t))(v77 + 8);
        v85(v67, v64);
        v85(v66, v64);
        v81 = type metadata accessor for CRLBoardIdentifier;
        v80 = v95;
        goto LABEL_26;
      }
    }
    else
    {
      sub_1004B84A4(v71, type metadata accessor for CRLBoardIdentifier);
      sub_1004B84A4(v69, type metadata accessor for CRLBoardIdentifier);
      sub_1004B84A4((uint64_t)v26, type metadata accessor for CRLBoardIdentifier);
      v77 = v97;
    }
LABEL_27:
    v86 = *(void (**)(char *, uint64_t))(v77 + 8);
    v86(v67, v64);
    v86(v66, v64);
    v82 = v95;
    goto LABEL_28;
  }
  sub_1004B8460((uint64_t)v35, (uint64_t)v29, type metadata accessor for CRLBoardPreviewImageCache.Item);
  if (swift_getEnumCaseMultiPayload(v37, v24) != 1)
  {
    v48 = type metadata accessor for CRLBoardIdentifier;
    v49 = (uint64_t)v29;
    goto LABEL_17;
  }
  v39 = v90;
  sub_1004B84E0(v37, v90, type metadata accessor for CRLBoardIdentifier);
  v40 = static UUID.== infix(_:_:)(v29);
  v41 = v89;
  sub_1004B8460((uint64_t)v29, v89, type metadata accessor for CRLBoardIdentifier);
  v42 = v88;
  sub_1004B8460(v39, v88, type metadata accessor for CRLBoardIdentifier);
  if ((v40 & 1) == 0)
  {
    sub_1004B84A4(v42, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4(v41, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4(v39, type metadata accessor for CRLBoardIdentifier);
    v82 = (uint64_t)v29;
LABEL_28:
    sub_1004B84A4(v82, type metadata accessor for CRLBoardIdentifier);
LABEL_29:
    sub_1004B84A4((uint64_t)v35, type metadata accessor for CRLBoardPreviewImageCache.Item);
    return 0;
  }
  v43 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  v44 = *(_QWORD *)(v41 + v43);
  v45 = *(_QWORD *)(v41 + v43 + 8);
  v46 = (_QWORD *)(v42 + v43);
  v47 = v46[1];
  if (v44 != *v46 || v45 != v47)
  {
    v83 = _stringCompareWithSmolCheck(_:_:expecting:)(v44, v45, *v46, v47, 0);
    sub_1004B84A4(v42, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4(v41, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4(v39, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4((uint64_t)v29, type metadata accessor for CRLBoardIdentifier);
    if ((v83 & 1) != 0)
      goto LABEL_22;
    goto LABEL_29;
  }
  sub_1004B84A4(v42, type metadata accessor for CRLBoardIdentifier);
  sub_1004B84A4(v41, type metadata accessor for CRLBoardIdentifier);
  sub_1004B84A4(v39, type metadata accessor for CRLBoardIdentifier);
  sub_1004B84A4((uint64_t)v29, type metadata accessor for CRLBoardIdentifier);
LABEL_22:
  sub_1004B84A4((uint64_t)v35, type metadata accessor for CRLBoardPreviewImageCache.Item);
  return 1;
}

void sub_10059D33C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t i;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  int64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  char *v58;
  uint64_t v59;
  int64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD v70[6];
  void *v71;

  v64 = a2;
  v3 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v6);
  v63 = (uint64_t)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C((uint64_t *)&unk_1013E3830);
  __chkstk_darwin(v8);
  v10 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v12 = *(_QWORD *)(v11 - 8);
  v65 = v11;
  v66 = v12;
  __chkstk_darwin(v11);
  v56 = (uint64_t)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v54 = (uint64_t)&v53 - v15;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v16 = a1;
    else
      v16 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v17 = __CocoaSet.makeIterator()(v16);
    v18 = type metadata accessor for CRLBoardPreviewImageCache.LookupKey(0);
    v19 = sub_1004B7878(&qword_1013E49A8, type metadata accessor for CRLBoardPreviewImageCache.LookupKey, (uint64_t)&protocol conformance descriptor for NSObject);
    v20 = Set.Iterator.init(_cocoa:)(v70, v17, v18, v19);
    a1 = v70[0];
    v61 = v70[1];
    v22 = v70[2];
    v21 = v70[3];
    v23 = v70[4];
  }
  else
  {
    v24 = -1 << *(_BYTE *)(a1 + 32);
    v25 = *(_QWORD *)(a1 + 56);
    v61 = a1 + 56;
    v22 = ~v24;
    v26 = -v24;
    if (v26 < 64)
      v27 = ~(-1 << v26);
    else
      v27 = -1;
    v23 = v27 & v25;
    swift_bridgeObjectRetain(a1);
    v21 = 0;
  }
  v55 = v22;
  v59 = a1 & 0x7FFFFFFFFFFFFFFFLL;
  v60 = (unint64_t)(v22 + 64) >> 6;
  v57 = _swiftEmptyArrayStorage;
  v58 = (char *)&type metadata for Swift.AnyObject + 8;
  v62 = v3;
LABEL_11:
  v28 = v21;
  for (i = v23; a1 < 0; i = v68)
  {
    v32 = __CocoaSet.Iterator.next()(v20);
    if (!v32)
      goto LABEL_47;
    v33 = v32;
    v69 = v32;
    v34 = type metadata accessor for CRLBoardPreviewImageCache.LookupKey(0);
    swift_unknownObjectRetain(v33);
    swift_dynamicCast(&v71, &v69, v58, v34, 7);
    v35 = v71;
    swift_unknownObjectRelease(v33);
    v31 = v28;
    v68 = i;
    if (!v35)
      goto LABEL_47;
LABEL_34:
    v67 = v31;
    sub_1004B8460((uint64_t)v35 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_item, (uint64_t)v5, type metadata accessor for CRLBoardPreviewImageCache.Item);
    if (swift_getEnumCaseMultiPayload(v5, v3) == 1)
    {
      v39 = v63;
      v40 = sub_1004B84E0((uint64_t)v5, v63, type metadata accessor for CRLBoardIdentifier);
      __chkstk_darwin(v40);
      *(&v53 - 2) = v39;
      v41 = 1;
      sub_1007C2808(1, (uint64_t (*)(id))sub_1005A1C0C, (uint64_t)(&v53 - 4), v64);
      v43 = v42;
      sub_1004B84A4(v39, type metadata accessor for CRLBoardIdentifier);
      if (v43)
      {
        sub_1004B8460((uint64_t)v43 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item, (uint64_t)v10, type metadata accessor for CRLBoardLibraryViewModel.Item);

        v41 = 0;
      }
      v3 = v62;
    }
    else
    {
      sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLBoardPreviewImageCache.Item);
      v41 = 1;
    }
    v44 = v66;
    v45 = v41;
    v46 = v65;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v66 + 56))(v10, v45, 1, v65);

    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v10, 1, v46) != 1)
    {
      v47 = v54;
      sub_1004B84E0((uint64_t)v10, v54, type metadata accessor for CRLBoardLibraryViewModel.Item);
      sub_1004B84E0(v47, v56, type metadata accessor for CRLBoardLibraryViewModel.Item);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v57);
      v23 = v68;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        v57 = (_QWORD *)sub_100D0FAA0(0, v57[2] + 1, 1, (unint64_t)v57);
      v50 = v57[2];
      v49 = v57[3];
      v21 = v67;
      if (v50 >= v49 >> 1)
        v57 = (_QWORD *)sub_100D0FAA0(v49 > 1, v50 + 1, 1, (unint64_t)v57);
      v51 = v56;
      v52 = v57;
      v57[2] = v50 + 1;
      v20 = (_QWORD *)sub_1004B84E0(v51, (uint64_t)v52+ ((*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80))+ *(_QWORD *)(v66 + 72) * v50, type metadata accessor for CRLBoardLibraryViewModel.Item);
      goto LABEL_11;
    }
    v20 = (_QWORD *)sub_1004CB800((uint64_t)v10, (uint64_t *)&unk_1013E3830);
    v28 = v67;
  }
  if (i)
  {
    v68 = (i - 1) & i;
    v30 = __clz(__rbit64(i)) | (v28 << 6);
    v31 = v28;
    goto LABEL_33;
  }
  v36 = v28 + 1;
  if (!__OFADD__(v28, 1))
  {
    if (v36 < v60)
    {
      v37 = *(_QWORD *)(v61 + 8 * v36);
      v31 = v28 + 1;
      if (v37)
        goto LABEL_32;
      v31 = v28 + 2;
      if (v28 + 2 >= v60)
        goto LABEL_47;
      v37 = *(_QWORD *)(v61 + 8 * v31);
      if (v37)
        goto LABEL_32;
      v31 = v28 + 3;
      if (v28 + 3 >= v60)
        goto LABEL_47;
      v37 = *(_QWORD *)(v61 + 8 * v31);
      if (v37)
        goto LABEL_32;
      v31 = v28 + 4;
      if (v28 + 4 >= v60)
        goto LABEL_47;
      v37 = *(_QWORD *)(v61 + 8 * v31);
      if (v37)
      {
LABEL_32:
        v68 = (v37 - 1) & v37;
        v30 = __clz(__rbit64(v37)) + (v31 << 6);
LABEL_33:
        v35 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v30);
        if (v35)
          goto LABEL_34;
        goto LABEL_47;
      }
      v31 = v28 + 5;
      if (v28 + 5 < v60)
      {
        v37 = *(_QWORD *)(v61 + 8 * v31);
        if (!v37)
        {
          v38 = v28 + 6;
          while (v60 != v38)
          {
            v37 = *(_QWORD *)(v61 + 8 * v38++);
            if (v37)
            {
              v31 = v38 - 1;
              goto LABEL_32;
            }
          }
          goto LABEL_47;
        }
        goto LABEL_32;
      }
    }
LABEL_47:
    sub_1004D284C(a1);
    return;
  }
  __break(1u);
}

uint64_t sub_10059D938(uint64_t a1, _QWORD *a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  id v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  Swift::Int v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  char v47;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  _QWORD v64[10];
  _QWORD *v65;

  v3 = v2;
  v65 = a2;
  v5 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLBoardIdentifier(0);
  v54 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v61 = (uint64_t)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v50 - v11;
  __chkstk_darwin(v13);
  v15 = (char *)&v50 - v14;
  __chkstk_darwin(v16);
  v63 = (uint64_t)&v50 - v17;
  if ((unint64_t)a1 >> 62)
    goto LABEL_29;
  v18 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  v19 = v65;
  if (!v18)
  {
LABEL_33:
    swift_bridgeObjectRelease(a1);
    return 0;
  }
LABEL_3:
  v50 = v3;
  v20 = 0;
  v3 = a1 & 0xC000000000000001;
  v57 = v7 + 8;
  v58 = a1;
  v55 = (char *)(a1 + 32);
  v62 = v19 + 7;
  v52 = v7;
  v53 = v5;
  v56 = v18;
  v51 = a1 & 0xC000000000000001;
  while (1)
  {
    if (v3)
      v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v20, v58);
    else
      v21 = *(id *)&v55[8 * v20];
    v22 = __OFADD__(v20++, 1);
    a1 = (uint64_t)type metadata accessor for CRLBoardLibraryViewModel.Item;
    if (v22)
    {
      __break(1u);
LABEL_29:
      if (a1 < 0)
        v49 = a1;
      else
        v49 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a1);
      v18 = _CocoaArrayWrapper.endIndex.getter(v49);
      v19 = v65;
      if (!v18)
        goto LABEL_33;
      goto LABEL_3;
    }
    v60 = v21;
    sub_1004B8460((uint64_t)v21 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item, (uint64_t)v7, type metadata accessor for CRLBoardLibraryViewModel.Item);
    if (swift_getEnumCaseMultiPayload(v7, v5) == 2)
      break;
    sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLBoardLibraryViewModel.Item);
LABEL_5:

    if (v20 == v18)
    {
      swift_bridgeObjectRelease(v58);
      return 0;
    }
  }
  v23 = sub_1004B804C((uint64_t *)&unk_1013EA630);
  swift_bridgeObjectRelease(*(_QWORD *)&v57[*(int *)(v23 + 48)]);
  v24 = v63;
  sub_1004B84E0((uint64_t)v7, v63, type metadata accessor for CRLBoardIdentifier);
  if (!v65[2])
  {
    sub_1004B84A4(v24, type metadata accessor for CRLBoardIdentifier);
    v18 = v56;
    goto LABEL_5;
  }
  v25 = v65;
  Hasher.init(_seed:)(v64, v65[5]);
  v26 = type metadata accessor for UUID(0);
  v27 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(v64, v26, v27);
  v59 = type metadata accessor for CRLBoardIdentifierStorage(0);
  v28 = (uint64_t *)(v24 + *(int *)(v59 + 20));
  v30 = *v28;
  v29 = v28[1];
  swift_bridgeObjectRetain(v29);
  String.hash(into:)(v64, v30, v29);
  swift_bridgeObjectRelease(v29);
  v31 = Hasher._finalize()();
  v32 = -1 << *((_BYTE *)v25 + 32);
  v33 = v31 & ~v32;
  v34 = v24;
  if (((*(_QWORD *)((char *)v62 + ((v33 >> 3) & 0xFFFFFFFFFFFFF8)) >> v33) & 1) == 0)
  {
LABEL_23:
    sub_1004B84A4(v34, type metadata accessor for CRLBoardIdentifier);
    v7 = v52;
    v5 = v53;
    v18 = v56;
    v3 = v51;
    goto LABEL_5;
  }
  v35 = ~v32;
  v36 = *(_QWORD *)(v54 + 72);
  while (1)
  {
    sub_1004B8460(v65[6] + v36 * v33, (uint64_t)v15, type metadata accessor for CRLBoardIdentifier);
    v37 = static UUID.== infix(_:_:)(v15);
    sub_1004B8460((uint64_t)v15, (uint64_t)v12, type metadata accessor for CRLBoardIdentifier);
    v38 = v34;
    v39 = (uint64_t)v12;
    v40 = v61;
    sub_1004B8460(v38, v61, type metadata accessor for CRLBoardIdentifier);
    if ((v37 & 1) == 0)
    {
      sub_1004B84A4(v40, type metadata accessor for CRLBoardIdentifier);
      sub_1004B84A4(v39, type metadata accessor for CRLBoardIdentifier);
      sub_1004B84A4((uint64_t)v15, type metadata accessor for CRLBoardIdentifier);
      v12 = (char *)v39;
      goto LABEL_15;
    }
    v41 = *(int *)(v59 + 20);
    v42 = *(_QWORD *)(v39 + v41);
    v43 = *(_QWORD *)(v39 + v41 + 8);
    v44 = (_QWORD *)(v40 + v41);
    v45 = v44[1];
    if (v42 == *v44 && v43 == v45)
      break;
    v47 = _stringCompareWithSmolCheck(_:_:expecting:)(v42, v43, *v44, v45, 0);
    sub_1004B84A4(v40, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4(v39, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4((uint64_t)v15, type metadata accessor for CRLBoardIdentifier);
    v12 = (char *)v39;
    if ((v47 & 1) != 0)
      goto LABEL_26;
LABEL_15:
    v33 = (v33 + 1) & v35;
    v34 = v63;
    if (((*(_QWORD *)((char *)v62 + ((v33 >> 3) & 0xFFFFFFFFFFFFF8)) >> v33) & 1) == 0)
      goto LABEL_23;
  }
  sub_1004B84A4(v40, type metadata accessor for CRLBoardIdentifier);
  sub_1004B84A4(v39, type metadata accessor for CRLBoardIdentifier);
  sub_1004B84A4((uint64_t)v15, type metadata accessor for CRLBoardIdentifier);
LABEL_26:
  sub_1004B84A4(v63, type metadata accessor for CRLBoardIdentifier);
  swift_bridgeObjectRelease(v58);

  return 1;
}

uint64_t sub_10059DE10(uint64_t a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v3 + 48) = v2;
  *(double *)(v3 + 40) = a2;
  *(_QWORD *)(v3 + 32) = a1;
  v4 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  *(_QWORD *)(v3 + 56) = v4;
  *(_QWORD *)(v3 + 64) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v3 + 72) = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  *(_QWORD *)(v3 + 80) = v6;
  *(_QWORD *)(v3 + 88) = v7;
  return swift_task_switch(sub_10059DEA8, v6, v7);
}

uint64_t sub_10059DEA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  objc_class *v4;
  char *v5;
  char *v6;
  id v7;
  _QWORD *v8;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 40);
  sub_1004B8460(*(_QWORD *)(v0 + 32), v2, type metadata accessor for CRLBoardIdentifier);
  swift_storeEnumTagMultiPayload(v2, v1, 1);
  v4 = (objc_class *)type metadata accessor for CRLBoardPreviewImageCache.LookupKey(0);
  v5 = (char *)objc_allocWithZone(v4);
  sub_1004B8460(v2, (uint64_t)&v5[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_item], type metadata accessor for CRLBoardPreviewImageCache.Item);
  v6 = &v5[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass];
  *(_OWORD *)v6 = xmmword_100EFA5D0;
  v6[16] = 1;
  *(_QWORD *)&v5[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_contentsScale] = v3;
  *(_QWORD *)(v0 + 16) = v5;
  *(_QWORD *)(v0 + 24) = v4;
  v7 = objc_msgSendSuper2((objc_super *)(v0 + 16), "init");
  *(_QWORD *)(v0 + 96) = v7;
  sub_1004B84A4(v2, type metadata accessor for CRLBoardPreviewImageCache.Item);
  v8 = (_QWORD *)swift_task_alloc(dword_1013E45BC);
  *(_QWORD *)(v0 + 104) = v8;
  *v8 = v0;
  v8[1] = sub_10059DFBC;
  return sub_1005901E4((uint64_t)v7);
}

uint64_t sub_10059DFBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();
  _QWORD *v9;

  v4 = *(_QWORD *)(*(_QWORD *)v2 + 104);
  v5 = *(_QWORD **)v2;
  v5[14] = a1;
  v5[15] = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v6 = v5[10];
    v7 = v5[11];
    v8 = sub_10059E128;
  }
  else
  {
    v9 = (_QWORD *)swift_task_alloc(dword_1013E43AC);
    v5[16] = v9;
    *v9 = v5;
    v9[1] = sub_10059E058;
    v9[4] = a1;
    v8 = sub_10058D990;
    v6 = a1;
    v7 = 0;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_10059E058(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 128);
  *(_QWORD *)(*(_QWORD *)v2 + 136) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = v4[10];
    v7 = v4[11];
    v8 = sub_10059E16C;
  }
  else
  {
    v4[18] = a1;
    v6 = v4[10];
    v7 = v4[11];
    v8 = sub_10059E0CC;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_10059E0CC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(void **)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 72);
  swift_release(*(_QWORD *)(v0 + 112));

  swift_release(v3);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 144));
}

uint64_t sub_10059E128()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_release(*(_QWORD *)(v0 + 72));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10059E16C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 96);
  swift_release(*(_QWORD *)(v0 + 112));

  v2 = *(_QWORD *)(v0 + 64);
  swift_release(*(_QWORD *)(v0 + 72));
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for CRLBoardPreviewImageCache.CacheError(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1013E4A90, (uint64_t)&nominal type descriptor for CRLBoardPreviewImageCache.CacheError);
}

uint64_t sub_10059E1CC()
{
  return sub_1005A1B54((void (*)(_QWORD))&_swift_release);
}

uint64_t sub_10059E1D8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1013E4604);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1004CF80C;
  return sub_100597414(a1, v4, v5, v7, v6);
}

uint64_t sub_10059E250(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc(dword_1013E4614);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1004CF80C;
  return sub_100597488(a1, v1);
}

uint64_t sub_10059E2A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 40) & ~v2;
  v4 = v2 | 7;
  v5 = (*(_QWORD *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  v6 = v0 + v3;
  v7 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + *(int *)(v8 + 20) + 8));

  return swift_deallocObject(v0, ((((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 33, v4);
}

uint64_t sub_10059E368(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  double v14;
  uint64_t v15;
  _QWORD *v16;

  v4 = *(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = v1[2];
  v9 = v1[3];
  v10 = v1[4];
  v11 = (uint64_t)v1 + v5;
  v12 = *(_QWORD *)((char *)v1 + v6);
  v13 = *(double *)((char *)v1 + v7);
  v14 = *(double *)((char *)v1 + v7 + 8);
  v15 = (uint64_t)v1 + ((v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v16 = (_QWORD *)swift_task_alloc(dword_1013E462C);
  *(_QWORD *)(v2 + 16) = v16;
  *v16 = v2;
  v16[1] = sub_1004CFD00;
  return sub_100594FC0(a1, v13, v14, v8, v9, v10, v11, v12, v15);
}

double sub_10059E44C(uint64_t a1)
{
  uint64_t v1;

  return sub_1005039E0(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

void sub_10059E454(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  unint64_t i;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;

  v7 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v24 - v12;
  v26 = a1;
  v14 = *(_QWORD *)(a2 + 56);
  v24 = a2 + 56;
  v15 = 1 << *(_BYTE *)(a2 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & v14;
  v25 = (unint64_t)(v15 + 63) >> 6;
  swift_bridgeObjectRetain(a2);
  v18 = 0;
  if (!v17)
    goto LABEL_5;
LABEL_4:
  v19 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  for (i = v19 | (v18 << 6); ; i = __clz(__rbit64(v22)) + (v18 << 6))
  {
    sub_1004B8460(*(_QWORD *)(a2 + 48) + *(_QWORD *)(v8 + 72) * i, (uint64_t)v13, type metadata accessor for CRLBoardPreviewImageCache.Item);
    sub_1004B84E0((uint64_t)v13, (uint64_t)v10, type metadata accessor for CRLBoardPreviewImageCache.Item);
    sub_100597500((uint64_t)&v26, (uint64_t)v10, a3);
    if (v3)
    {
      swift_bridgeObjectRelease(v26);
      sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLBoardPreviewImageCache.Item);
      swift_release(a2);
      return;
    }
    sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLBoardPreviewImageCache.Item);
    if (v17)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v18++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v25)
      goto LABEL_26;
    v22 = *(_QWORD *)(v24 + 8 * v18);
    if (!v22)
      break;
LABEL_17:
    v17 = (v22 - 1) & v22;
  }
  v23 = v18 + 1;
  if (v18 + 1 >= v25)
    goto LABEL_26;
  v22 = *(_QWORD *)(v24 + 8 * v23);
  if (v22)
    goto LABEL_16;
  v23 = v18 + 2;
  if (v18 + 2 >= v25)
    goto LABEL_26;
  v22 = *(_QWORD *)(v24 + 8 * v23);
  if (v22)
    goto LABEL_16;
  v23 = v18 + 3;
  if (v18 + 3 >= v25)
    goto LABEL_26;
  v22 = *(_QWORD *)(v24 + 8 * v23);
  if (v22)
    goto LABEL_16;
  v23 = v18 + 4;
  if (v18 + 4 >= v25)
  {
LABEL_26:
    swift_release(a2);
    return;
  }
  v22 = *(_QWORD *)(v24 + 8 * v23);
  if (v22)
  {
LABEL_16:
    v18 = v23;
    goto LABEL_17;
  }
  while (1)
  {
    v18 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v18 >= v25)
      goto LABEL_26;
    v22 = *(_QWORD *)(v24 + 8 * v18);
    ++v23;
    if (v22)
      goto LABEL_17;
  }
LABEL_28:
  __break(1u);
}

uint64_t sub_10059E6C4(uint64_t a1, unint64_t a2)
{
  unint64_t v4;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;

  if (a1 == 0xD000000000000011)
  {
    v4 = 0x8000000100FB56E0;
    if (a2 == 0x8000000100FB56E0)
      goto LABEL_5;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000011, 0x8000000100FB56E0, a1, a2, 0) & 1) != 0)
  {
    v4 = a2;
LABEL_5:
    swift_bridgeObjectRelease(v4);
    return 0;
  }
  if (a1 == 0xD00000000000001ALL && a2 == 0x8000000100FB56C0)
  {
    v6 = 0x8000000100FB56C0;
LABEL_11:
    swift_bridgeObjectRelease(v6);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000001ALL, 0x8000000100FB56C0, a1, a2, 0) & 1) != 0)
  {
    v6 = a2;
    goto LABEL_11;
  }
  if (a1 == 0xD000000000000018 && a2 == 0x8000000100FB56A0)
  {
    v7 = 0x8000000100FB56A0;
LABEL_17:
    swift_bridgeObjectRelease(v7);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000018, 0x8000000100FB56A0, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_17;
  }
  if (a1 == 0xD00000000000001BLL && a2 == 0x8000000100FB5680)
  {
    v8 = 0x8000000100FB5680;
LABEL_23:
    swift_bridgeObjectRelease(v8);
    return 3;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000001BLL, 0x8000000100FB5680, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_23;
  }
  if (a1 == 0xD000000000000010)
  {
    v9 = 0x8000000100FB5660;
    if (a2 == 0x8000000100FB5660)
      goto LABEL_28;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x8000000100FB5660, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
LABEL_28:
    swift_bridgeObjectRelease(v9);
    return 4;
  }
  if (a1 == 0x6D6F74737563 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease(0xE600000000000000);
    return 5;
  }
  else
  {
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6D6F74737563, 0xE600000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v10 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

_QWORD *sub_10059E90C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  __n128 v30;
  __n128 v31;
  _QWORD v33[10];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  char *v39;
  char *v40;
  char *v41;
  _QWORD *v42;
  uint64_t v43;

  v2 = sub_1004B804C(&qword_1013E4718);
  v3 = *(_QWORD *)(v2 - 8);
  v35 = v2;
  v36 = v3;
  __chkstk_darwin(v2);
  v41 = (char *)v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C(&qword_1013E4720);
  v33[8] = *(_QWORD *)(v5 - 8);
  v33[9] = v5;
  __chkstk_darwin(v5);
  v40 = (char *)v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_1004B804C(&qword_1013E4728);
  v33[5] = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v39 = (char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C(&qword_1013E4730);
  v33[6] = *(_QWORD *)(v8 - 8);
  v33[7] = v8;
  __chkstk_darwin(v8);
  v38 = (char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C(&qword_1013E4738);
  v33[3] = *(_QWORD *)(v10 - 8);
  v33[4] = v10;
  __chkstk_darwin(v10);
  v37 = (char *)v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1004B804C(&qword_1013E4740);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1004B804C(&qword_1013E4748);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = (_QWORD *)a1[3];
  v20 = a1[4];
  v42 = a1;
  sub_1004BB5A4(a1, (uint64_t)v21);
  v22 = sub_1005A1708();
  v23 = v43;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLBoardPreviewImageCache.ImageSizeClass.CodingKeys, &type metadata for CRLBoardPreviewImageCache.ImageSizeClass.CodingKeys, v22, v21, v20);
  if (v23)
  {
    v24 = v42;
  }
  else
  {
    v33[1] = v12;
    v33[2] = v15;
    v33[0] = v13;
    v43 = v17;
    v25 = KeyedDecodingContainer.allKeys.getter(v16);
    v26 = v25;
    if (*(_QWORD *)(v25 + 16) == 1)
      __asm { BR              X10 }
    v27 = type metadata accessor for DecodingError(0);
    swift_allocError(v27, &protocol witness table for DecodingError, 0, 0);
    v21 = v28;
    sub_1004B804C(&qword_1013DF800);
    *v21 = &type metadata for CRLBoardPreviewImageCache.ImageSizeClass;
    v29 = KeyedDecodingContainer.codingPath.getter(v16);
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)(v29, 0xD00000000000002BLL, 0x8000000100FACD50, 0);
    v30.n128_f64[0] = (*(double (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v21, enum case for DecodingError.typeMismatch(_:), v27);
    swift_willThrow(v30);
    v31 = swift_bridgeObjectRelease(v26);
    (*(void (**)(char *, uint64_t, __n128))(v43 + 8))(v19, v16, v31);
    v24 = v42;
  }
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v24);
  return v21;
}

void sub_10059ECFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  __n128 v7;

  *(_BYTE *)(v4 - 104) = 1;
  v5 = sub_1005A185C();
  v6 = *(_QWORD *)(v4 - 152);
  KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for CRLBoardPreviewImageCache.ImageSizeClass.FolderGridViewCellQuadrantCodingKeys, v4 - 104, v1, &type metadata for CRLBoardPreviewImageCache.ImageSizeClass.FolderGridViewCellQuadrantCodingKeys, v5);
  if (!v0)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v4 - 232) + 8))(v6, *(_QWORD *)(v4 - 224));
    v7 = swift_bridgeObjectRelease(v3);
    (*(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v4 - 72) + 8))(v2, v1, v7);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(*(_QWORD **)(v4 - 112));
    JUMPOUT(0x10059ECCCLL);
  }
  JUMPOUT(0x10059ECA8);
}

void sub_10059ED78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  __n128 v7;

  *(_BYTE *)(v5 - 104) = 2;
  v6 = sub_1005A1818();
  KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for CRLBoardPreviewImageCache.ImageSizeClass.FolderGridViewCellEntireCodingKeys, v5 - 104, v2, &type metadata for CRLBoardPreviewImageCache.ImageSizeClass.FolderGridViewCellEntireCodingKeys, v6);
  if (!v0)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v5 - 208) + 8))(v1, *(_QWORD *)(v5 - 200));
    v7 = swift_bridgeObjectRelease(v4);
    (*(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v5 - 72) + 8))(v3, v2, v7);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(*(_QWORD **)(v5 - 112));
    JUMPOUT(0x10059ECCCLL);
  }
  JUMPOUT(0x10059ECA8);
}

void sub_10059EDF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  __n128 v7;

  *(_BYTE *)(v5 - 104) = 3;
  v6 = sub_1005A17D4();
  KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for CRLBoardPreviewImageCache.ImageSizeClass.BoardCanvasRenderingPreviewCodingKeys, v5 - 104, v1, &type metadata for CRLBoardPreviewImageCache.ImageSizeClass.BoardCanvasRenderingPreviewCodingKeys, v6);
  if (!v0)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v5 - 216) + 8))(v3, *(_QWORD *)(v5 - 176));
    v7 = swift_bridgeObjectRelease(v4);
    (*(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v5 - 72) + 8))(v2, v1, v7);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(*(_QWORD **)(v5 - 112));
    JUMPOUT(0x10059ECCCLL);
  }
  JUMPOUT(0x10059ECA8);
}

void sub_10059EE6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  __n128 v7;

  *(_BYTE *)(v5 - 104) = 4;
  v6 = sub_1005A1790();
  KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for CRLBoardPreviewImageCache.ImageSizeClass.SpotlightPreviewCodingKeys, v5 - 104, v2, &type metadata for CRLBoardPreviewImageCache.ImageSizeClass.SpotlightPreviewCodingKeys, v6);
  if (!v0)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v5 - 192) + 8))(v1, *(_QWORD *)(v5 - 184));
    v7 = swift_bridgeObjectRelease(v4);
    (*(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v5 - 72) + 8))(v3, v2, v7);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(*(_QWORD **)(v5 - 112));
    JUMPOUT(0x10059ECCCLL);
  }
  JUMPOUT(0x10059ECA8);
}

void sub_10059EEE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;

  *(_BYTE *)(v5 - 104) = 5;
  v6 = sub_1005A174C();
  KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for CRLBoardPreviewImageCache.ImageSizeClass.CustomCodingKeys, v5 - 104, v1, &type metadata for CRLBoardPreviewImageCache.ImageSizeClass.CustomCodingKeys, v6);
  if (!v0)
  {
    type metadata accessor for CGSize(0);
    v8 = v7;
    v9 = sub_1004B7878(&qword_1013E4768, (uint64_t (*)(uint64_t))type metadata accessor for CGSize, (uint64_t)&protocol conformance descriptor for CGSize);
    v10 = *(_QWORD *)(v5 - 168);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v8, v11, v10, v8, v9);
    v12 = *(_QWORD *)(v5 - 72);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 160) + 8))(v2, v10);
    v13 = swift_bridgeObjectRelease(v4);
    (*(void (**)(uint64_t, uint64_t, __n128))(v12 + 8))(v3, v1, v13);
    JUMPOUT(0x10059EFD4);
  }
  JUMPOUT(0x10059ECA8);
}

uint64_t sub_10059EFE0(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  char v8;

  if (a1 == 0x7265646C6F66 && a2 == 0xE600000000000000)
  {
    v5 = 0xE600000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7265646C6F66, 0xE600000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x6472616F62 && a2 == 0xE500000000000000)
  {
    v7 = 0xE500000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6472616F62, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x656E656373 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease(0xE500000000000000);
    return 2;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(0x656E656373, 0xE500000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v8 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_10059F11C(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  char v8;

  if (a1 == 0x6564496472616F62 && a2 == 0xEF7265696669746ELL)
  {
    v5 = 0xEF7265696669746ELL;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6564496472616F62, 0xEF7265696669746ELL, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x4449656E656373 && a2 == 0xE700000000000000)
  {
    v7 = 0xE700000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x4449656E656373, 0xE700000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0xD000000000000011 && a2 == 0x8000000100FB5DD0)
  {
    swift_bridgeObjectRelease(0x8000000100FB5DD0);
    return 2;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000011, 0x8000000100FB5DD0, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v8 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

unint64_t sub_10059F290(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1012648E8, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 3)
    return 3;
  else
    return v3;
}

id sub_10059F2D8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v13;
  unint64_t v14;
  id v15;
  uint64_t v16;
  id v17;

  v3 = sub_1004B804C(&qword_1013E4BC0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (id)a1[3];
  v8 = a1[4];
  sub_1004BB5A4(a1, (uint64_t)v7);
  v9 = sub_1005A4448();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLBoardPreviewImageCache.CacheEntrySnapshot.CodingKeys, &type metadata for CRLBoardPreviewImageCache.CacheEntrySnapshot.CodingKeys, v9, v7, v8);
  if (v1)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  }
  else
  {
    v10 = type metadata accessor for CRLBoardPreviewImageCache.LookupKey(0);
    HIBYTE(v16) = 0;
    v11 = sub_1004B7878(&qword_1013E4BD0, type metadata accessor for CRLBoardPreviewImageCache.LookupKey, (uint64_t)&unk_100EFA918);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v10, (char *)&v16 + 7, v3, v10, v11);
    v13 = v17;
    HIBYTE(v16) = 1;
    v14 = sub_1005A448C();
    v7 = v13;
    KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for CRLCodableImage, (char *)&v16 + 7, v3, &type metadata for CRLCodableImage, v14);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v15 = v17;
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);

  }
  return v7;
}

void (**sub_10059F4A4(void *a1))(char *, uint64_t)
{
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  void *v41;
  id v42;
  NSString v43;
  void *v44;
  id v45;
  id v46;
  NSString v47;
  id v48;
  objc_class *v49;
  char *v50;
  void *v51;
  char *v52;
  id v53;
  __n128 v54;
  void (*v55)(_QWORD, _QWORD, _QWORD);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __n128 v74;
  char *v75;
  uint64_t v76;
  void *v77;
  id v78;
  char *v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  __n128 v90;
  void (*v91)(char *, uint64_t, __n128);
  uint64_t v92;
  id v93;
  id v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  __n128 v101;
  uint64_t v102;
  void (**v103)(char *, uint64_t);
  uint64_t v104;
  uint64_t v105;
  void *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  __n128 v111;
  uint64_t v112;
  id v113;
  id v114;
  uint64_t v115;
  uint64_t v116;
  __n128 v117;
  __n128 v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  _QWORD *v122;
  void *v123;
  id v124;
  uint64_t v125;
  uint64_t v127;
  id v128;
  char *v129;
  char *v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  id v135;
  void (*v136)(char *, uint64_t, __n128);
  char *v137;
  void (**v138)(char *, uint64_t);
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  char *v144;
  void *v145;
  uint64_t v146;
  void (*v147)(_QWORD, _QWORD, _QWORD);
  char *v148;
  id v149[3];
  objc_super v150;

  v2 = v1;
  v145 = a1;
  v3 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v3);
  v134 = (char *)&v127 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v143 = type metadata accessor for NSNotificationCenter.Publisher(0);
  v140 = *(_QWORD *)(v143 - 8);
  __chkstk_darwin(v143);
  v131 = (char *)&v127 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = sub_1004B804C(&qword_1013E48D0);
  v136 = *(void (**)(char *, uint64_t, __n128))(v133 - 8);
  __chkstk_darwin(v133);
  v142 = (char *)&v127 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_1013E48D8);
  __chkstk_darwin(v7);
  v144 = (char *)&v127 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C(&qword_1013E48E0);
  __chkstk_darwin(v9);
  v148 = (char *)&v127 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1004B804C(&qword_1013E48E8);
  v146 = *(_QWORD *)(v11 - 8);
  v147 = (void (*)(_QWORD, _QWORD, _QWORD))v11;
  __chkstk_darwin(v11);
  v13 = (uint64_t *)((char *)&v127 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v132 = sub_1004B804C(&qword_1013E48F0);
  v138 = *(void (***)(char *, uint64_t))(v132 - 8);
  __chkstk_darwin(v132);
  v129 = (char *)&v127 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = sub_1004B804C((uint64_t *)&unk_1013E48F8);
  v141 = *(_QWORD *)(v139 - 8);
  __chkstk_darwin(v139);
  v130 = (char *)&v127 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v127 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v20);
  v22 = (char *)&v127 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v23);
  v25 = (char *)&v127 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_imagerTargetQueue;
  v27 = sub_1004B8930(0, (unint64_t *)&qword_1013DE090, OS_dispatch_queue_ptr);
  v28 = v2;
  v29 = static DispatchQoS.utility.getter();
  static OS_dispatch_queue.Attributes.concurrent.getter(v29);
  (*(void (**)(char *, _QWORD, uint64_t))(v17 + 104))(v19, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v16);
  v30 = v19;
  v31 = v27;
  *(_QWORD *)&v2[v26] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000036, 0x8000000100FB5740, v25, v22, v30, 0);
  v32 = OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_cache;
  *(_QWORD *)&v28[v32] = objc_msgSend(objc_allocWithZone((Class)NSCache), "init");
  v33 = OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_cachedSizes;
  *(_QWORD *)&v28[v33] = sub_1008D610C((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)&v28[OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_subscriptionSet] = &_swiftEmptySetSingleton;
  v34 = OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_updatePublisher;
  v35 = sub_1004B804C(&qword_1013E4908);
  swift_allocObject(v35, *(unsigned int *)(v35 + 48), *(unsigned __int16 *)(v35 + 52));
  *(_QWORD *)&v28[v34] = PassthroughSubject.init()();
  v36 = OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_assetDownloadHelper;
  v37 = type metadata accessor for CRLBoardPreviewImageCacheAssetDownloadHelper();
  v38 = swift_allocObject(v37, 120, 15);
  swift_defaultActor_initialize(v38, v39);
  *(_QWORD *)(v38 + 112) = sub_1008D60CC((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)&v28[v36] = v38;
  v28[OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_isPaused] = 0;
  *(_QWORD *)&v28[OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache____lazy_storage___defaultUnsupportedImage] = 0;
  v40 = v145;
  *(_QWORD *)&v28[OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_boardLibrary] = v145;
  v41 = *(void **)&v28[v32];
  v137 = v40;
  v42 = v41;
  v43 = String._bridgeToObjectiveC()();
  objc_msgSend(v42, "setName:", v43);

  v44 = *(void **)&v2[v26];
  v45 = objc_allocWithZone((Class)CRLWidthLimitedQueue);
  v46 = v44;
  v47 = String._bridgeToObjectiveC()();
  v48 = objc_msgSend(v45, "initWithLimit:name:targetQueue:", 4, v47, v46);

  *(_QWORD *)&v28[OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_imagerQueue] = v48;
  v49 = (objc_class *)type metadata accessor for CRLBoardPreviewImageCache();
  v150.receiver = v28;
  v150.super_class = v49;
  v50 = (char *)objc_msgSendSuper2(&v150, "init");
  v51 = *(void **)&v50[OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_cache];
  v52 = v50;
  objc_msgSend(v51, "setDelegate:", v52);
  v128 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v149[0] = *(id *)&v52[OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_updatePublisher];
  v53 = v149[0];
  sub_1004B804C(&qword_1013E4910);
  v54 = swift_retain(v53);
  *v13 = static OS_dispatch_queue.main.getter(v54);
  static OS_dispatch_queue.SchedulerTimeType.Stride.seconds(_:)(5);
  v56 = v146;
  v55 = v147;
  (*(void (**)(_QWORD *, _QWORD, _QWORD))(v146 + 104))(v13, enum case for Publishers.TimeGroupingStrategy.byTime<A>(_:), v147);
  v57 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v58 = (uint64_t)v148;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v148, 1, 1, v57);
  v59 = sub_1004CBA30(&qword_1013E4918, &qword_1013E4908, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v60 = sub_1005A15B8((unint64_t *)&qword_1013E4920, (unint64_t *)&qword_1013DE090, OS_dispatch_queue_ptr, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue);
  v61 = v129;
  Publisher.collect<A>(_:options:)(v13, v58, v35, v31, v59, v60);
  sub_1004CB800(v58, &qword_1013E48E0);
  (*(void (**)(_QWORD *, void (*)(_QWORD, _QWORD, _QWORD)))(v56 + 8))(v13, v55);
  swift_release(v149[0]);
  v62 = (void *)objc_opt_self(NSRunLoop);
  v149[0] = objc_msgSend(v62, "mainRunLoop");
  v63 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  v64 = (uint64_t)v144;
  v147 = *(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v63 - 8) + 56);
  v148 = (char *)v63;
  v147(v144, 1, 1);
  v65 = sub_1004B8930(0, &qword_10140B9F0, NSRunLoop_ptr);
  v66 = sub_1004CBA30((unint64_t *)&unk_1013E4930, &qword_1013E48F0, (uint64_t)&protocol conformance descriptor for Publishers.CollectByTime<A, B>);
  v67 = sub_1005A15B8(&qword_10140BA00, &qword_10140B9F0, NSRunLoop_ptr, (uint64_t)&protocol conformance descriptor for NSRunLoop);
  v68 = v130;
  v69 = v132;
  v145 = (void *)v67;
  v146 = v65;
  Publisher.receive<A>(on:options:)(v149, v64, v132, v65, v66);
  sub_1004CB800(v64, &qword_1013E48D8);

  v138[1](v61, v69);
  v70 = swift_allocObject(&unk_10126DE90, 24, 7);
  swift_unknownObjectWeakInit(v70 + 16);
  v71 = sub_1004CBA30((unint64_t *)&unk_1013E4940, (uint64_t *)&unk_1013E48F8, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v72 = v139;
  v73 = Publisher<>.sink(receiveValue:)(sub_1005A19F4, v70, v139, v71);
  v74 = swift_release(v70);
  (*(void (**)(char *, uint64_t, __n128))(v141 + 8))(v68, v72, v74);
  v138 = (void (**)(char *, uint64_t))v52;
  v75 = &v52[OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_subscriptionSet];
  swift_beginAccess(&v52[OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_subscriptionSet], v149, 33, 0);
  AnyCancellable.store(in:)(v75);
  swift_endAccess(v149);
  swift_release(v73);
  if (qword_1013DDAA0 != -1)
    swift_once(&qword_1013DDAA0, sub_100A7424C);
  v76 = qword_101480A48;
  v77 = *(void **)&v137[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store];
  v78 = v77;
  v79 = v131;
  v80 = v128;
  NSNotificationCenter.publisher(for:object:)(v76, v77);

  v149[0] = objc_msgSend(v62, "mainRunLoop");
  v81 = (uint64_t)v144;
  ((void (*)(char *, uint64_t, uint64_t, char *))v147)(v144, 1, 1, v148);
  v82 = sub_1004B7878((unint64_t *)&qword_1013FE290, (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher, (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Publisher);
  v135 = v62;
  v84 = v142;
  v83 = v143;
  v141 = v82;
  Publisher.receive<A>(on:options:)(v149, v81, v143, v146, v82);
  sub_1004CB800(v81, &qword_1013E48D8);

  v140 = *(_QWORD *)(v140 + 8);
  ((void (*)(char *, uint64_t))v140)(v79, v83);
  v85 = v80;
  v86 = swift_allocObject(&unk_10126DE90, 24, 7);
  swift_unknownObjectWeakInit(v86 + 16);
  v87 = sub_1004CBA30(&qword_1013E4950, &qword_1013E48D0, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v88 = v133;
  v139 = v87;
  v89 = Publisher<>.sink(receiveValue:)(sub_1005A19FC, v86, v133, v87);
  v90 = swift_release(v86);
  v91 = (void (*)(char *, uint64_t, __n128))*((_QWORD *)v136 + 1);
  v91(v84, v88, v90);
  swift_beginAccess(v75, v149, 33, 0);
  AnyCancellable.store(in:)(v75);
  swift_endAccess(v149);
  swift_release(v89);
  if (qword_1013DDAA8 != -1)
    swift_once(&qword_1013DDAA8, sub_100A74280);
  v92 = qword_101480A50;
  v93 = v78;
  NSNotificationCenter.publisher(for:object:)(v92, v77);

  v94 = v135;
  v149[0] = objc_msgSend(v135, "mainRunLoop");
  v95 = v85;
  v96 = (uint64_t)v144;
  ((void (*)(char *, uint64_t, uint64_t, char *))v147)(v144, 1, 1, v148);
  v98 = v142;
  v97 = v143;
  Publisher.receive<A>(on:options:)(v149, v96, v143, v146, v141);
  sub_1004CB800(v96, &qword_1013E48D8);

  ((void (*)(char *, uint64_t))v140)(v79, v97);
  v99 = swift_allocObject(&unk_10126DE90, 24, 7);
  swift_unknownObjectWeakInit(v99 + 16);
  v100 = Publisher<>.sink(receiveValue:)(sub_1005A19FC, v99, v88, v139);
  v101 = swift_release(v99);
  v91(v98, v88, v101);
  swift_beginAccess(v75, v149, 33, 0);
  AnyCancellable.store(in:)(v75);
  swift_endAccess(v149);
  swift_release(v100);
  v136 = v91;
  v132 = (uint64_t)v75;
  if (qword_1013DCAA0 != -1)
    swift_once(&qword_1013DCAA0, sub_100570B08);
  v102 = qword_10147E9B8;
  v103 = v138;
  v104 = *(uint64_t *)((char *)v138 + OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_assetDownloadHelper);
  swift_retain(v104);
  NSNotificationCenter.publisher(for:object:)(v102, v104);
  v149[0] = objc_msgSend(v94, "mainRunLoop", swift_release(v104).n128_f64[0]);
  v105 = (uint64_t)v144;
  ((void (*)(char *, uint64_t, uint64_t, char *))v147)(v144, 1, 1, v148);
  v106 = v95;
  v108 = v142;
  v107 = v143;
  Publisher.receive<A>(on:options:)(v149, v105, v143, v146, v141);
  sub_1004CB800(v105, &qword_1013E48D8);

  ((void (*)(char *, uint64_t))v140)(v79, v107);
  v109 = swift_allocObject(&unk_10126DE90, 24, 7);
  swift_unknownObjectWeakInit(v109 + 16);
  v110 = Publisher<>.sink(receiveValue:)(sub_1005A1A14, v109, v88, v139);
  v111 = swift_release(v109);
  v136(v108, v88, v111);
  v112 = v132;
  swift_beginAccess(v132, v149, 33, 0);
  AnyCancellable.store(in:)(v112);
  swift_endAccess(v149);
  swift_release(v110);
  v113 = objc_msgSend((id)objc_opt_self(NSProcessInfo), "processInfo");
  v114 = objc_msgSend(v113, "thermalState");

  sub_10058E6FC((unint64_t)v114);
  NSNotificationCenter.publisher(for:object:)(NSProcessInfoThermalStateDidChangeNotification, 0);
  v149[0] = objc_msgSend(v135, "mainRunLoop");
  ((void (*)(uint64_t, uint64_t, uint64_t, char *))v147)(v105, 1, 1, v148);
  Publisher.receive<A>(on:options:)(v149, v105, v107, v146, v141);
  sub_1004CB800(v105, &qword_1013E48D8);

  ((void (*)(char *, uint64_t))v140)(v79, v107);
  v115 = swift_allocObject(&unk_10126DE90, 24, 7);
  swift_unknownObjectWeakInit(v115 + 16);
  v116 = Publisher<>.sink(receiveValue:)(sub_1005A1A1C, v115, v88, v139);
  v117 = swift_release(v115);
  v136(v108, v88, v117);
  swift_beginAccess(v112, v149, 33, 0);
  AnyCancellable.store(in:)(v112);
  swift_endAccess(v149);
  v118 = swift_release(v116);
  v119 = (uint64_t)v134;
  static TaskPriority.low.getter(v118);
  v120 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v120 - 8) + 56))(v119, 0, 1, v120);
  v121 = swift_allocObject(&unk_10126DE90, 24, 7);
  swift_unknownObjectWeakInit(v121 + 16);
  v122 = (_QWORD *)swift_allocObject(&unk_10126DEE0, 48, 7);
  v122[2] = 0;
  v122[3] = 0;
  v123 = v137;
  v122[4] = v121;
  v122[5] = v123;
  v124 = v123;
  v125 = sub_1009880C4(v119, (uint64_t)&unk_1013E4960, (uint64_t)v122);

  swift_release(v125);
  sub_1004CB800(v119, &qword_1013E01F0);
  return v103;
}

void *sub_1005A03F8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *result;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  int v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  void *v32;

  v0 = sub_1004B804C(&qword_1013E0270);
  __chkstk_darwin(v0);
  v2 = (char *)&v28 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for CRLBoardIdentifier(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v28 - v8;
  __chkstk_darwin(v10);
  v12 = (char *)&v28 - v11;
  result = (void *)Notification.userInfo.getter(v13);
  if (!result)
    return result;
  v15 = result;
  sub_100B026E4((uint64_t)result);
  v17 = v16;
  v18 = swift_bridgeObjectRelease(v15);
  if (!v17)
    return 0;
  v32 = &_swiftEmptySetSingleton;
  if (*(_QWORD *)(v17 + 16))
  {
    v19 = sub_100842E98(0xD000000000000010, 0x8000000100FB5A20);
    if ((v20 & 1) != 0)
    {
      sub_1004CB6E8(*(_QWORD *)(v17 + 56) + 32 * v19, (uint64_t)&v30);
      v21 = sub_1004B804C(&qword_1013E4980);
      if ((swift_dynamicCast(&v29, &v30, (char *)&type metadata for Any + 8, v21, 6) & 1) != 0)
        sub_100512568(v29);
    }
  }
  if (*(_QWORD *)(v17 + 16) && (v22 = sub_100842E98(0x6564496472616F62, 0xEF7265696669746ELL), (v23 & 1) != 0))
  {
    sub_1004CB6E8(*(_QWORD *)(v17 + 56) + 32 * v22, (uint64_t)&v30);
    v24 = swift_dynamicCast(v2, &v30, (char *)&type metadata for Any + 8, v3, 6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v2, v24 ^ 1u, 1, v3);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) != 1)
    {
      sub_1004B84E0((uint64_t)v2, (uint64_t)v12, type metadata accessor for CRLBoardIdentifier);
      sub_1004B8460((uint64_t)v12, (uint64_t)v6, type metadata accessor for CRLBoardIdentifier);
      sub_100AD7844((uint64_t)v9, (uint64_t)v6);
      sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLBoardIdentifier);
      sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLBoardIdentifier);
      if (!*(_QWORD *)(v17 + 16))
        goto LABEL_16;
      goto LABEL_14;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v4 + 56))(v2, 1, 1, v3, v18);
  }
  sub_1004CB800((uint64_t)v2, &qword_1013E0270);
  if (!*(_QWORD *)(v17 + 16))
  {
LABEL_16:
    v30 = 0u;
    v31 = 0u;
    goto LABEL_17;
  }
LABEL_14:
  v25 = sub_100842E98(0xD000000000000017, 0x8000000100FB5A40);
  if ((v26 & 1) == 0)
    goto LABEL_16;
  sub_1004CB6E8(*(_QWORD *)(v17 + 56) + 32 * v25, (uint64_t)&v30);
LABEL_17:
  swift_bridgeObjectRelease(v17);
  if (*((_QWORD *)&v31 + 1))
  {
    v27 = sub_1004B804C(&qword_1013E4980);
    swift_dynamicCast(&v29, &v30, (char *)&type metadata for Any + 8, v27, 6);
  }
  else
  {
    sub_1004CB800((uint64_t)&v30, &qword_1013E0230);
  }
  return &_swiftEmptySetSingleton;
}

Swift::Int sub_1005A076C(unint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  Swift::Int result;
  uint64_t v17;
  char *v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  BOOL v26;
  unint64_t v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  Swift::Int v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t *v55;
  uint64_t v56;
  int64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  int64_t v63;
  uint64_t v64;
  _QWORD *v65;
  _QWORD v66[10];
  _QWORD *v67;

  v54 = a2;
  v55 = a1;
  v6 = type metadata accessor for CRLBoardIdentifier(0);
  v58 = *(_QWORD *)(v6 - 8);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v7);
  v12 = (char *)&v53 - v11;
  v13 = __chkstk_darwin(v10);
  v15 = (char *)&v53 - v14;
  result = __chkstk_darwin(v13);
  v18 = (char *)&v53 - v17;
  v59 = a3;
  v60 = 0;
  v19 = 0;
  v22 = *(_QWORD *)(a3 + 56);
  v21 = a3 + 56;
  v20 = v22;
  v23 = 1 << *(_BYTE *)(v21 - 24);
  if (v23 < 64)
    v24 = ~(-1 << v23);
  else
    v24 = -1;
  v25 = v24 & v20;
  v56 = v21;
  v57 = (unint64_t)(v23 + 63) >> 6;
  v67 = a4;
  v65 = a4 + 7;
  if (!v25)
    goto LABEL_9;
  while (2)
  {
    while (1)
    {
      v62 = (v25 - 1) & v25;
      v63 = v19;
      v27 = __clz(__rbit64(v25)) | (v19 << 6);
LABEL_23:
      v32 = *(_QWORD *)(v59 + 48);
      v33 = *(_QWORD *)(v58 + 72);
      v61 = v27;
      sub_1004B8460(v32 + v33 * v27, (uint64_t)v18, type metadata accessor for CRLBoardIdentifier);
      if (v67[2])
      {
        v34 = v67;
        Hasher.init(_seed:)(v66, v67[5]);
        v35 = type metadata accessor for UUID(0);
        v36 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        dispatch thunk of Hashable.hash(into:)(v66, v35, v36);
        v64 = type metadata accessor for CRLBoardIdentifierStorage(0);
        v37 = &v18[*(int *)(v64 + 20)];
        v39 = *(_QWORD *)v37;
        v38 = *((_QWORD *)v37 + 1);
        swift_bridgeObjectRetain(v38);
        String.hash(into:)(v66, v39, v38);
        swift_bridgeObjectRelease(v38);
        v40 = Hasher._finalize()();
        v41 = -1 << *((_BYTE *)v34 + 32);
        v42 = v40 & ~v41;
        if (((*(_QWORD *)((char *)v65 + ((v42 >> 3) & 0xFFFFFFFFFFFFF8)) >> v42) & 1) != 0)
          break;
      }
LABEL_6:
      result = sub_1004B84A4((uint64_t)v18, type metadata accessor for CRLBoardIdentifier);
      *(unint64_t *)((char *)v55 + ((v61 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v61;
      v26 = __OFADD__(v60++, 1);
      v25 = v62;
      v19 = v63;
      if (v26)
      {
        __break(1u);
LABEL_40:
        __break(1u);
        goto LABEL_41;
      }
      if (!v62)
        goto LABEL_9;
    }
    v43 = ~v41;
    while (1)
    {
      sub_1004B8460(v67[6] + v42 * v33, (uint64_t)v15, type metadata accessor for CRLBoardIdentifier);
      v44 = static UUID.== infix(_:_:)(v15);
      sub_1004B8460((uint64_t)v15, (uint64_t)v12, type metadata accessor for CRLBoardIdentifier);
      sub_1004B8460((uint64_t)v18, (uint64_t)v9, type metadata accessor for CRLBoardIdentifier);
      if ((v44 & 1) == 0)
      {
        sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLBoardIdentifier);
        sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLBoardIdentifier);
        sub_1004B84A4((uint64_t)v15, type metadata accessor for CRLBoardIdentifier);
        goto LABEL_27;
      }
      v45 = *(int *)(v64 + 20);
      v46 = *(_QWORD *)&v12[v45];
      v47 = *(_QWORD *)&v12[v45 + 8];
      v48 = &v9[v45];
      v49 = *((_QWORD *)v48 + 1);
      if (v46 == *(_QWORD *)v48 && v47 == v49)
        break;
      v51 = _stringCompareWithSmolCheck(_:_:expecting:)(v46, v47, *(_QWORD *)v48, v49, 0);
      sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLBoardIdentifier);
      sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLBoardIdentifier);
      sub_1004B84A4((uint64_t)v15, type metadata accessor for CRLBoardIdentifier);
      if ((v51 & 1) != 0)
        goto LABEL_36;
LABEL_27:
      v42 = (v42 + 1) & v43;
      if (((*(_QWORD *)((char *)v65 + ((v42 >> 3) & 0xFFFFFFFFFFFFF8)) >> v42) & 1) == 0)
        goto LABEL_6;
    }
    sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4((uint64_t)v15, type metadata accessor for CRLBoardIdentifier);
LABEL_36:
    result = sub_1004B84A4((uint64_t)v18, type metadata accessor for CRLBoardIdentifier);
    v25 = v62;
    v19 = v63;
    if (v62)
      continue;
    break;
  }
LABEL_9:
  v28 = v19 + 1;
  if (__OFADD__(v19, 1))
    goto LABEL_40;
  if (v28 >= v57)
    goto LABEL_38;
  v29 = *(_QWORD *)(v56 + 8 * v28);
  v30 = v19 + 1;
  if (v29)
    goto LABEL_22;
  v30 = v19 + 2;
  if (v19 + 2 >= v57)
    goto LABEL_38;
  v29 = *(_QWORD *)(v56 + 8 * v30);
  if (v29)
    goto LABEL_22;
  v30 = v19 + 3;
  if (v19 + 3 >= v57)
    goto LABEL_38;
  v29 = *(_QWORD *)(v56 + 8 * v30);
  if (v29)
    goto LABEL_22;
  v31 = v19 + 4;
  if (v19 + 4 >= v57)
  {
LABEL_38:
    v52 = v59;
    swift_retain(v59);
    return sub_100CD814C(v55, v54, v60, v52);
  }
  v29 = *(_QWORD *)(v56 + 8 * v31);
  if (v29)
  {
    v30 = v19 + 4;
LABEL_22:
    v62 = (v29 - 1) & v29;
    v63 = v30;
    v27 = __clz(__rbit64(v29)) + (v30 << 6);
    goto LABEL_23;
  }
  while (1)
  {
    v30 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v30 >= v57)
      goto LABEL_38;
    v29 = *(_QWORD *)(v56 + 8 * v30);
    ++v31;
    if (v29)
      goto LABEL_22;
  }
LABEL_41:
  __break(1u);
  return result;
}

Swift::Int sub_1005A0C08(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  char v5;
  unsigned int v6;
  unint64_t v7;
  size_t v8;
  uint64_t isStackAllocationSafe;
  Swift::Int v10;
  __n128 v11;
  void *v12;
  uint64_t v14;

  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v7 = (unint64_t)((1 << v5) + 63) >> 6;
  v8 = 8 * v7;
  isStackAllocationSafe = swift_bridgeObjectRetain_n(a2, 2);
  if (v6 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(v8, 8), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v14 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    swift_bridgeObjectRetain(a2);
    v10 = sub_1005A076C((unint64_t *)((char *)&v14 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0)), v7, a1, a2);
    swift_release(a1);
    v11 = swift_bridgeObjectRelease(a2);
    if (v2)
      swift_willThrow(v11);
    swift_bridgeObjectRelease_n(a2, 2);
  }
  else
  {
    v12 = (void *)swift_slowAlloc(v8, -1);
    bzero(v12, v8);
    swift_bridgeObjectRetain(a2);
    v10 = sub_1005A076C((unint64_t *)v12, v7, a1, a2);
    swift_release(a1);
    swift_bridgeObjectRelease(a2);
    swift_slowDealloc(v12, -1, -1);
    swift_bridgeObjectRelease_n(a2, 2);
  }
  return v10;
}

uint64_t sub_1005A0DCC(uint64_t a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v3 + 48) = v2;
  *(double *)(v3 + 40) = a2;
  *(_QWORD *)(v3 + 32) = a1;
  v4 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  *(_QWORD *)(v3 + 56) = v4;
  *(_QWORD *)(v3 + 64) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v3 + 72) = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  *(_QWORD *)(v3 + 80) = v6;
  *(_QWORD *)(v3 + 88) = v7;
  return swift_task_switch(sub_1005A0E64, v6, v7);
}

uint64_t sub_1005A0E64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  objc_class *v4;
  char *v5;
  char *v6;
  id v7;
  _QWORD *v8;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 40);
  sub_1004B8460(*(_QWORD *)(v0 + 32), v2, type metadata accessor for CRLBoardIdentifier);
  swift_storeEnumTagMultiPayload(v2, v1, 1);
  v4 = (objc_class *)type metadata accessor for CRLBoardPreviewImageCache.LookupKey(0);
  v5 = (char *)objc_allocWithZone(v4);
  sub_1004B8460(v2, (uint64_t)&v5[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_item], type metadata accessor for CRLBoardPreviewImageCache.Item);
  v6 = &v5[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  v6[16] = 1;
  *(_QWORD *)&v5[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_contentsScale] = v3;
  *(_QWORD *)(v0 + 16) = v5;
  *(_QWORD *)(v0 + 24) = v4;
  v7 = objc_msgSendSuper2((objc_super *)(v0 + 16), "init");
  *(_QWORD *)(v0 + 96) = v7;
  sub_1004B84A4(v2, type metadata accessor for CRLBoardPreviewImageCache.Item);
  v8 = (_QWORD *)swift_task_alloc(dword_1013E45BC);
  *(_QWORD *)(v0 + 104) = v8;
  *v8 = v0;
  v8[1] = sub_1005A0F70;
  return sub_1005901E4((uint64_t)v7);
}

uint64_t sub_1005A0F70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();
  _QWORD *v9;

  v4 = *(_QWORD *)(*(_QWORD *)v2 + 104);
  v5 = *(_QWORD **)v2;
  v5[14] = a1;
  v5[15] = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v6 = v5[10];
    v7 = v5[11];
    v8 = sub_1005A46EC;
  }
  else
  {
    v9 = (_QWORD *)swift_task_alloc(dword_1013E43AC);
    v5[16] = v9;
    *v9 = v5;
    v9[1] = sub_1005A100C;
    v9[4] = a1;
    v8 = sub_10058D990;
    v6 = a1;
    v7 = 0;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_1005A100C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 128);
  *(_QWORD *)(*(_QWORD *)v2 + 136) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = v4[10];
    v7 = v4[11];
    v8 = sub_1005A46C4;
  }
  else
  {
    v4[18] = a1;
    v6 = v4[10];
    v7 = v4[11];
    v8 = sub_1005A46C0;
  }
  return swift_task_switch(v8, v6, v7);
}

void sub_1005A1080(double a1, double a2)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  _QWORD v10[5];
  uint64_t v11;

  v4 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithSize:", a1, a2);
  v5 = swift_allocObject(&unk_10126DE18, 32, 7);
  *(double *)(v5 + 16) = a1;
  *(double *)(v5 + 24) = a2;
  v6 = swift_allocObject(&unk_10126DE40, 32, 7);
  *(_QWORD *)(v6 + 16) = sub_1005A121C;
  *(_QWORD *)(v6 + 24) = v5;
  v10[4] = sub_10054E858;
  v11 = v6;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = *(_QWORD *)"";
  v10[2] = sub_100592EB8;
  v10[3] = &unk_10126DE58;
  v7 = _Block_copy(v10);
  v8 = v11;
  swift_retain(v6);
  v9 = objc_msgSend(v4, "imageWithActions:", v7, swift_release(v8).n128_f64[0]);

  _Block_release(v7);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation(v6, "", 101, 834, 76, 1);
  swift_release(v6);
  if ((v4 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    objc_msgSend(objc_allocWithZone((Class)CRLImage), "initWithUIImage:", v9);
    swift_release(v5);

  }
}

uint64_t sub_1005A120C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_1005A121C(void *a1)
{
  return sub_100594968(a1);
}

uint64_t sub_1005A1224()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1005A1234(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1005A1244(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1005A124C(uint64_t a1)
{
  uint64_t v1;

  return sub_100CB0AB0(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1005A1254(uint64_t a1)
{
  uint64_t v1;

  return sub_1007C4568(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1005A125C(uint64_t a1, uint64_t a2)
{
  double *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  double v8;
  _QWORD *v9;

  v6 = *((_QWORD *)v2 + 2);
  v7 = *((_QWORD *)v2 + 3);
  v8 = v2[4];
  v9 = (_QWORD *)swift_task_alloc(dword_1013E466C);
  *(_QWORD *)(v3 + 16) = v9;
  *v9 = v3;
  v9[1] = sub_1004CFD00;
  return sub_100598210(v8, a1, a2, v6, v7);
}

uint64_t sub_1005A12D8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005A12FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = *(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  v9 = v0 + v4;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v0 + v4, v1);
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v14 = type metadata accessor for UUID(0);
      v15 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8);
      v15(v0 + v4, v14);
      v16 = type metadata accessor for CRLBoardIdentifierStorage(0);
      swift_bridgeObjectRelease(*(_QWORD *)(v9 + *(int *)(v16 + 20) + 8));
      v17 = sub_1004B804C((uint64_t *)&unk_1013DE640);
      v15(v9 + *(int *)(v17 + 48), v14);
      break;
    case 1:
      v18 = type metadata accessor for UUID(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v0 + v4, v18);
      v13 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
      goto LABEL_8;
    case 0:
      v11 = sub_1004B804C(&qword_1013E1790);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v0 + v4, 5, v11))
      {
        v12 = type metadata accessor for UUID(0);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v0 + v4, v12);
        v13 = *(int *)(v11 + 48);
LABEL_8:
        swift_bridgeObjectRelease(*(_QWORD *)(v9 + v13 + 8));
      }
      break;
  }
  v19 = v3 | v7 | 7;
  v20 = (((v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + v7 + 8) & ~v7;
  v21 = v20 + v8;
  v22 = v0 + v20;
  v23 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v22, v23);
  v24 = type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease(*(_QWORD *)(v22 + *(int *)(v24 + 20) + 8));
  return swift_deallocObject(v0, v21, v19);
}

uint64_t sub_1005A14E0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  _QWORD *v14;

  v4 = *(_QWORD *)(type metadata accessor for CRLBoardPreviewImageCache.Item(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8) + 80);
  v8 = v1[2];
  v9 = v1[3];
  v10 = v1[4];
  v11 = (uint64_t)v1 + v5;
  v12 = *(double *)((char *)v1 + v6);
  v13 = (uint64_t)v1 + ((v6 + v7 + 8) & ~v7);
  v14 = (_QWORD *)swift_task_alloc(dword_1013E4684);
  *(_QWORD *)(v2 + 16) = v14;
  *v14 = v2;
  v14[1] = sub_1004CFD00;
  return sub_100598870(v12, a1, v8, v9, v10, v11, v13);
}

uint64_t sub_1005A15B8(unint64_t *a1, unint64_t *a2, _QWORD *a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = sub_1004B8930(255, a2, a3);
    result = swift_getWitnessTable(a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1005A15F8()
{
  unint64_t result;

  result = qword_1013E46C0;
  if (!qword_1013E46C0)
  {
    result = swift_getWitnessTable(&unk_100EFB558, &type metadata for CRLBoardPreviewImageCache.CacheEntrySnapshot);
    atomic_store(result, (unint64_t *)&qword_1013E46C0);
  }
  return result;
}

unint64_t sub_1005A163C()
{
  unint64_t result;

  result = qword_1013E46D8;
  if (!qword_1013E46D8)
  {
    result = swift_getWitnessTable(&unk_100EFB508, &type metadata for CRLBoardPreviewImageCache.LookupKey.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E46D8);
  }
  return result;
}

unint64_t sub_1005A1680()
{
  unint64_t result;

  result = qword_1013E46E8;
  if (!qword_1013E46E8)
  {
    result = swift_getWitnessTable(&unk_100EFA838, &type metadata for CRLBoardPreviewImageCache.ImageSizeClass);
    atomic_store(result, (unint64_t *)&qword_1013E46E8);
  }
  return result;
}

unint64_t sub_1005A16C4()
{
  unint64_t result;

  result = qword_1013E4708;
  if (!qword_1013E4708)
  {
    result = swift_getWitnessTable(&unk_100EFA810, &type metadata for CRLBoardPreviewImageCache.ImageSizeClass);
    atomic_store(result, (unint64_t *)&qword_1013E4708);
  }
  return result;
}

unint64_t sub_1005A1708()
{
  unint64_t result;

  result = qword_1013E4750;
  if (!qword_1013E4750)
  {
    result = swift_getWitnessTable(&unk_100EFB4B8, &type metadata for CRLBoardPreviewImageCache.ImageSizeClass.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E4750);
  }
  return result;
}

unint64_t sub_1005A174C()
{
  unint64_t result;

  result = qword_1013E4760;
  if (!qword_1013E4760)
  {
    result = swift_getWitnessTable(&unk_100EFB468, &type metadata for CRLBoardPreviewImageCache.ImageSizeClass.CustomCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E4760);
  }
  return result;
}

unint64_t sub_1005A1790()
{
  unint64_t result;

  result = qword_1013E4770;
  if (!qword_1013E4770)
  {
    result = swift_getWitnessTable(&unk_100EFB418, &type metadata for CRLBoardPreviewImageCache.ImageSizeClass.SpotlightPreviewCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E4770);
  }
  return result;
}

unint64_t sub_1005A17D4()
{
  unint64_t result;

  result = qword_1013E4778;
  if (!qword_1013E4778)
  {
    result = swift_getWitnessTable(&unk_100EFB3C8, &type metadata for CRLBoardPreviewImageCache.ImageSizeClass.BoardCanvasRenderingPreviewCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E4778);
  }
  return result;
}

unint64_t sub_1005A1818()
{
  unint64_t result;

  result = qword_1013E4780;
  if (!qword_1013E4780)
  {
    result = swift_getWitnessTable(&unk_100EFB378, &type metadata for CRLBoardPreviewImageCache.ImageSizeClass.FolderGridViewCellEntireCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E4780);
  }
  return result;
}

unint64_t sub_1005A185C()
{
  unint64_t result;

  result = qword_1013E4788;
  if (!qword_1013E4788)
  {
    result = swift_getWitnessTable(&unk_100EFB328, &type metadata for CRLBoardPreviewImageCache.ImageSizeClass.FolderGridViewCellQuadrantCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E4788);
  }
  return result;
}

unint64_t sub_1005A18A0()
{
  unint64_t result;

  result = qword_1013E4790;
  if (!qword_1013E4790)
  {
    result = swift_getWitnessTable(&unk_100EFB2D8, &type metadata for CRLBoardPreviewImageCache.ImageSizeClass.BoardListViewCellCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E4790);
  }
  return result;
}

unint64_t sub_1005A18E4()
{
  unint64_t result;

  result = qword_1013E47F8;
  if (!qword_1013E47F8)
  {
    result = swift_getWitnessTable(&unk_100EFB288, &type metadata for CRLBoardPreviewImageCache.Item.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E47F8);
  }
  return result;
}

unint64_t sub_1005A1928()
{
  unint64_t result;

  result = qword_1013E4800;
  if (!qword_1013E4800)
  {
    result = swift_getWitnessTable(&unk_100EFB238, &type metadata for CRLBoardPreviewImageCache.Item.SceneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E4800);
  }
  return result;
}

unint64_t sub_1005A196C()
{
  unint64_t result;

  result = qword_1013E4820;
  if (!qword_1013E4820)
  {
    result = swift_getWitnessTable(&unk_100EFB1E8, &type metadata for CRLBoardPreviewImageCache.Item.BoardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E4820);
  }
  return result;
}

unint64_t sub_1005A19B0()
{
  unint64_t result;

  result = qword_1013E4828;
  if (!qword_1013E4828)
  {
    result = swift_getWitnessTable(&unk_100EFB198, &type metadata for CRLBoardPreviewImageCache.Item.FolderCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E4828);
  }
  return result;
}

double sub_1005A19F4(uint64_t *a1)
{
  uint64_t v1;

  return sub_10058E214(a1, v1);
}

double sub_1005A19FC(uint64_t a1)
{
  uint64_t v1;

  return sub_10058E374(a1, v1);
}

void sub_1005A1A14(uint64_t a1)
{
  uint64_t v1;

  sub_10058E458(a1, v1);
}

void sub_1005A1A1C(uint64_t a1)
{
  uint64_t v1;

  sub_10058E860(a1, v1);
}

uint64_t sub_1005A1A24()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1005A1A58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = swift_task_alloc(dword_1013E495C);
  v3 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_1004CFD00;
  *(_OWORD *)(v2 + 64) = v3;
  return swift_task_switch(sub_10058E90C, 0, 0);
}

uint64_t sub_1005A1AB8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1005A1ADC()
{
  uint64_t v0;

  sub_100599080(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1005A1AE4()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005A1B08()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1005A1B3C(uint64_t a1)
{
  uint64_t v1;

  return sub_100CB0D80(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(uint64_t (**)(id))(v1 + 32));
}

uint64_t sub_1005A1B48()
{
  return sub_1005A1B54((void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_1005A1B54(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_unknownObjectRelease(*(_QWORD *)(v1 + 16));

  a1(*(_QWORD *)(v1 + 40));
  return swift_deallocObject(v1, 48, 7);
}

uint64_t sub_1005A1B94(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1013E498C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1004CFD00;
  return sub_10059AEC4(a1, v4, v5, v7, v6);
}

uint64_t sub_1005A1C0C(uint64_t a1)
{
  uint64_t v1;

  return sub_1007C4688(a1, *(_QWORD *)(v1 + 16));
}

void sub_1005A1C14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  _BYTE *v22;
  double v23;
  double v24;
  char v25;
  Swift::UInt64 v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v32[32];
  _QWORD v33[3];
  uint64_t v34;
  _BYTE v35[40];

  v2 = v1;
  v4 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  __chkstk_darwin(v4);
  v6 = &v32[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v7);
  v9 = &v32[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1004CB6E8(a1, (uint64_t)v35);
  v10 = type metadata accessor for CRLBoardPreviewImageCache.CacheEntry();
  if ((swift_dynamicCast(v33, v35, (char *)&type metadata for Any + 8, v10, 6) & 1) == 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"cache(_:willEvictObject:)", 25, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardPreviewImageCache.swift", 101, 2, 1321, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"cache(_:willEvictObject:)", 25, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardPreviewImageCache.swift", 101, 2u, 1321, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    return;
  }
  v11 = v33[0];
  v12 = type metadata accessor for TaskPriority(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v9, 1, 1, v12);
  type metadata accessor for MainActor(0);
  swift_retain(v11);
  v14 = static MainActor.shared.getter(v13);
  v15 = (_QWORD *)swift_allocObject(&unk_10126DFD0, 40, 7);
  v15[2] = v14;
  v15[3] = &protocol witness table for MainActor;
  v15[4] = v11;
  v16 = sub_100521B98((uint64_t)v9, (uint64_t)&unk_1013E49D0, (uint64_t)v15);
  swift_release(v16);
  sub_1004B8460(*(_QWORD *)(v11 + 112) + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_item, (uint64_t)v6, type metadata accessor for CRLBoardPreviewImageCache.Item);
  v17 = (_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_cachedSizes);
  swift_beginAccess(v17, v33, 0, 0);
  v18 = *v17;
  if (!*(_QWORD *)(*v17 + 16))
    goto LABEL_8;
  swift_bridgeObjectRetain(*v17);
  v19 = sub_100843760((uint64_t)v6);
  if ((v20 & 1) == 0)
  {
    swift_bridgeObjectRelease(v18);
LABEL_8:
    sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLBoardPreviewImageCache.Item);
    swift_release(v11);
    return;
  }
  v21 = *(_QWORD *)(*(_QWORD *)(v18 + 56) + 8 * v19);
  swift_bridgeObjectRetain(v21);
  swift_bridgeObjectRelease(v18);
  sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLBoardPreviewImageCache.Item);
  v34 = v21;
  v22 = *(_BYTE **)(v11 + 112);
  v23 = *(double *)&v22[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass];
  v24 = *(double *)&v22[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass + 8];
  v25 = v22[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass + 16];
  v26 = *(_QWORD *)&v22[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_contentsScale];
  v27 = v22;
  sub_100B27820(v23, v24, v25, (uint64_t)v35, v26);
  v28 = *(_QWORD *)(v34 + 16);
  swift_bridgeObjectRelease(v34);
  if (v28)
  {
    swift_release(v11);

  }
  else
  {
    v29 = (uint64_t)&v27[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_item];
    swift_beginAccess(v17, v32, 33, 0);
    v30 = sub_100847748(v29);
    swift_endAccess(v32);
    swift_release(v11);

    swift_bridgeObjectRelease(v30);
  }
}

uint64_t sub_1005A1F78()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1005A1FA4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1013E49CC);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1004CFD00;
  return sub_10059BA80(a1, v4, v5, v6);
}

unint64_t sub_1005A2010()
{
  unint64_t result;

  result = qword_1013E49D8;
  if (!qword_1013E49D8)
  {
    result = swift_getWitnessTable(&unk_100EFB170, &type metadata for CRLBoardPreviewImageCache.CacheEntrySnapshot);
    atomic_store(result, (unint64_t *)&qword_1013E49D8);
  }
  return result;
}

uint64_t sub_1005A2054()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 64, 7);
}

void sub_1005A2080(void *a1)
{
  uint64_t v1;

  sub_100592B84(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(uint64_t **)(v1 + 56));
}

uint64_t sub_1005A2090()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1005A20A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_1005A2138(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = *(_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v11 = (_QWORD *)swift_task_alloc(dword_1013E4A04);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_1004CFD00;
  return sub_100590D4C(a1, v6, v7, v8, v9, v10);
}

ValueMetadata *type metadata accessor for CRLBoardPreviewImageCache.Item.CodingKeys()
{
  return &type metadata for CRLBoardPreviewImageCache.Item.CodingKeys;
}

ValueMetadata *type metadata accessor for CRLBoardPreviewImageCache.Item.FolderCodingKeys()
{
  return &type metadata for CRLBoardPreviewImageCache.Item.FolderCodingKeys;
}

ValueMetadata *type metadata accessor for CRLBoardPreviewImageCache.Item.BoardCodingKeys()
{
  return &type metadata for CRLBoardPreviewImageCache.Item.BoardCodingKeys;
}

ValueMetadata *type metadata accessor for CRLBoardPreviewImageCache.Item.SceneCodingKeys()
{
  return &type metadata for CRLBoardPreviewImageCache.Item.SceneCodingKeys;
}

uint64_t getEnumTagSinglePayload for CRLSyncActivityPriority(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLBoardPreviewImageCache.ImageSizeClass.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1005A2310 + 4 * byte_100EFA5FB[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1005A2344 + 4 * byte_100EFA5F6[v4]))();
}

uint64_t sub_1005A2344(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1005A234C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1005A2354);
  return result;
}

uint64_t sub_1005A2360(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1005A2368);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1005A236C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1005A2374(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardPreviewImageCache.ImageSizeClass.CodingKeys()
{
  return &type metadata for CRLBoardPreviewImageCache.ImageSizeClass.CodingKeys;
}

ValueMetadata *type metadata accessor for CRLBoardPreviewImageCache.ImageSizeClass.BoardListViewCellCodingKeys()
{
  return &type metadata for CRLBoardPreviewImageCache.ImageSizeClass.BoardListViewCellCodingKeys;
}

ValueMetadata *type metadata accessor for CRLBoardPreviewImageCache.ImageSizeClass.FolderGridViewCellQuadrantCodingKeys()
{
  return &type metadata for CRLBoardPreviewImageCache.ImageSizeClass.FolderGridViewCellQuadrantCodingKeys;
}

ValueMetadata *type metadata accessor for CRLBoardPreviewImageCache.ImageSizeClass.FolderGridViewCellEntireCodingKeys()
{
  return &type metadata for CRLBoardPreviewImageCache.ImageSizeClass.FolderGridViewCellEntireCodingKeys;
}

ValueMetadata *type metadata accessor for CRLBoardPreviewImageCache.ImageSizeClass.BoardCanvasRenderingPreviewCodingKeys()
{
  return &type metadata for CRLBoardPreviewImageCache.ImageSizeClass.BoardCanvasRenderingPreviewCodingKeys;
}

ValueMetadata *type metadata accessor for CRLBoardPreviewImageCache.ImageSizeClass.SpotlightPreviewCodingKeys()
{
  return &type metadata for CRLBoardPreviewImageCache.ImageSizeClass.SpotlightPreviewCodingKeys;
}

uint64_t _s8Freeform25CRLBoardPreviewImageCacheC4ItemO16FolderCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1005A2420 + 4 * byte_100EFA600[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1005A2440 + 4 * byte_100EFA605[v4]))();
}

_BYTE *sub_1005A2420(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1005A2440(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1005A2448(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1005A2450(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1005A2458(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1005A2460(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardPreviewImageCache.ImageSizeClass.CustomCodingKeys()
{
  return &type metadata for CRLBoardPreviewImageCache.ImageSizeClass.CustomCodingKeys;
}

uint64_t getEnumTagSinglePayload for CRLLineEndData.JoinType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s8Freeform25CRLBoardPreviewImageCacheC4ItemO10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1005A2558 + 4 * byte_100EFA60F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1005A258C + 4 * byte_100EFA60A[v4]))();
}

uint64_t sub_1005A258C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1005A2594(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1005A259CLL);
  return result;
}

uint64_t sub_1005A25A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1005A25B0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1005A25B4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1005A25BC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardPreviewImageCache.LookupKey.CodingKeys()
{
  return &type metadata for CRLBoardPreviewImageCache.LookupKey.CodingKeys;
}

_QWORD *initializeBufferWithCopyOfBuffer for CRLBoardPreviewImageCache.CacheEntrySnapshot(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = v3;
  v6 = v4;
  return a1;
}

void destroy for CRLBoardPreviewImageCache.CacheEntrySnapshot(id *a1)
{

}

uint64_t assignWithCopy for CRLBoardPreviewImageCache.CacheEntrySnapshot(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  return a1;
}

uint64_t assignWithTake for CRLBoardPreviewImageCache.CacheEntrySnapshot(uint64_t a1, _OWORD *a2)
{
  void *v4;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for CRLBoardPreviewImageCache.CacheEntrySnapshot()
{
  return &type metadata for CRLBoardPreviewImageCache.CacheEntrySnapshot;
}

uint64_t *sub_1005A26D0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _OWORD *v34;
  _OWORD *v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _OWORD *v48;
  _OWORD *v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  void (*v59)(uint64_t *, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  uint64_t v68;
  void (*v69)(uint64_t *, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v70;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain(v17);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      v18 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
      v19 = swift_getEnumCaseMultiPayload(a2, v18);
      v20 = v19;
      if ((_DWORD)v19 == 2)
      {
        v40 = type metadata accessor for UUID(0);
        v41 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v40 - 8) + 16);
        v41(a1, a2, v40);
        v42 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
        v43 = (uint64_t *)((char *)a1 + v42);
        v44 = (uint64_t *)((char *)a2 + v42);
        v45 = v44[1];
        *v43 = *v44;
        v43[1] = v45;
        swift_bridgeObjectRetain(v45);
        v46 = sub_1004B804C((uint64_t *)&unk_1013DE640);
        v41((uint64_t *)((char *)a1 + *(int *)(v46 + 48)), (uint64_t *)((char *)a2 + *(int *)(v46 + 48)), v40);
        v47 = *(int *)(v46 + 64);
        v48 = (_OWORD *)((char *)a1 + v47);
        v49 = (_OWORD *)((char *)a2 + v47);
        v50 = v49[1];
        *v48 = *v49;
        v48[1] = v50;
      }
      else if ((_DWORD)v19 == 1)
      {
        v21 = type metadata accessor for UUID(0);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(a1, a2, v21);
        v22 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
        v23 = (uint64_t *)((char *)a1 + v22);
        v24 = (uint64_t *)((char *)a2 + v22);
        v25 = v24[1];
        *v23 = *v24;
        v23[1] = v25;
        swift_bridgeObjectRetain(v25);
      }
      else
      {
        v51 = sub_1004B804C(&qword_1013E1790);
        v52 = *(_QWORD *)(v51 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v52 + 48))(a2, 5, v51))
        {
          v53 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
        }
        else
        {
          v64 = type metadata accessor for UUID(0);
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v64 - 8) + 16))(a1, a2, v64);
          v65 = *(int *)(v51 + 48);
          v66 = (uint64_t *)((char *)a1 + v65);
          v67 = (uint64_t *)((char *)a2 + v65);
          v68 = v67[1];
          *v66 = *v67;
          v66[1] = v68;
          v69 = *(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t, __n128))(v52 + 56);
          v70 = swift_bridgeObjectRetain(v68);
          v69(a1, 0, 5, v51, v70);
        }
      }
      swift_storeEnumTagMultiPayload(a1, v18, v20);
      v61 = a1;
      v62 = a3;
      v63 = 1;
      goto LABEL_22;
    }
    if (!EnumCaseMultiPayload)
    {
      v9 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
      v10 = swift_getEnumCaseMultiPayload(a2, v9);
      v11 = v10;
      if ((_DWORD)v10 == 2)
      {
        v26 = type metadata accessor for UUID(0);
        v27 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
        v27(a1, a2, v26);
        v28 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
        v29 = (uint64_t *)((char *)a1 + v28);
        v30 = (uint64_t *)((char *)a2 + v28);
        v31 = v30[1];
        *v29 = *v30;
        v29[1] = v31;
        swift_bridgeObjectRetain(v31);
        v32 = sub_1004B804C((uint64_t *)&unk_1013DE640);
        v27((uint64_t *)((char *)a1 + *(int *)(v32 + 48)), (uint64_t *)((char *)a2 + *(int *)(v32 + 48)), v26);
        v33 = *(int *)(v32 + 64);
        v34 = (_OWORD *)((char *)a1 + v33);
        v35 = (_OWORD *)((char *)a2 + v33);
        v36 = v35[1];
        *v34 = *v35;
        v34[1] = v36;
      }
      else if ((_DWORD)v10 == 1)
      {
        v12 = type metadata accessor for UUID(0);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
        v13 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
        v14 = (uint64_t *)((char *)a1 + v13);
        v15 = (uint64_t *)((char *)a2 + v13);
        v16 = v15[1];
        *v14 = *v15;
        v14[1] = v16;
        swift_bridgeObjectRetain(v16);
      }
      else
      {
        v37 = sub_1004B804C(&qword_1013E1790);
        v38 = *(_QWORD *)(v37 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v38 + 48))(a2, 5, v37))
        {
          v39 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
        }
        else
        {
          v54 = type metadata accessor for UUID(0);
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(a1, a2, v54);
          v55 = *(int *)(v37 + 48);
          v56 = (uint64_t *)((char *)a1 + v55);
          v57 = (uint64_t *)((char *)a2 + v55);
          v58 = v57[1];
          *v56 = *v57;
          v56[1] = v58;
          v59 = *(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t, __n128))(v38 + 56);
          v60 = swift_bridgeObjectRetain(v58);
          v59(a1, 0, 5, v37, v60);
        }
      }
      swift_storeEnumTagMultiPayload(a1, v9, v11);
      v61 = a1;
      v62 = a3;
      v63 = 0;
LABEL_22:
      swift_storeEnumTagMultiPayload(v61, v62, v63);
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

double sub_1005A2AC0(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  double result;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1, a2);
  if (EnumCaseMultiPayload != 1)
  {
    if (EnumCaseMultiPayload)
      return result;
    v5 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
    v6 = swift_getEnumCaseMultiPayload(a1, v5);
    if (v6 != 2)
    {
      if (v6 == 1)
      {
LABEL_5:
        v7 = type metadata accessor for UUID(0);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a1, v7);
        v8 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
LABEL_13:
        *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(a1 + v8 + 8)).n128_u64[0];
        return result;
      }
      goto LABEL_8;
    }
LABEL_11:
    v11 = type metadata accessor for UUID(0);
    v15 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8);
    v15(a1, v11);
    v12 = type metadata accessor for CRLBoardIdentifierStorage(0);
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(v12 + 20) + 8));
    v13 = a1 + *(int *)(sub_1004B804C((uint64_t *)&unk_1013DE640) + 48);
    v15(v13, v11);
    return result;
  }
  v9 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  v6 = swift_getEnumCaseMultiPayload(a1, v9);
  if (v6 == 2)
    goto LABEL_11;
  if (v6 == 1)
    goto LABEL_5;
LABEL_8:
  if (!v6)
  {
    v10 = sub_1004B804C(&qword_1013E1790);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(a1, 5, v10))
    {
      v14 = type metadata accessor for UUID(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(a1, v14);
      v8 = *(int *)(v10 + 48);
      goto LABEL_13;
    }
  }
  return result;
}

char *sub_1005A2C3C(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  void (*v56)(char *, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  void (*v66)(char *, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v67;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 1)
  {
    v15 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
    v16 = swift_getEnumCaseMultiPayload(a2, v15);
    v17 = v16;
    if ((_DWORD)v16 == 2)
    {
      v37 = type metadata accessor for UUID(0);
      v38 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16);
      v38(a1, a2, v37);
      v39 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
      v40 = &a1[v39];
      v41 = &a2[v39];
      v42 = *((_QWORD *)v41 + 1);
      *(_QWORD *)v40 = *(_QWORD *)v41;
      *((_QWORD *)v40 + 1) = v42;
      swift_bridgeObjectRetain(v42);
      v43 = sub_1004B804C((uint64_t *)&unk_1013DE640);
      v38(&a1[*(int *)(v43 + 48)], &a2[*(int *)(v43 + 48)], v37);
      v44 = *(int *)(v43 + 64);
      v45 = &a1[v44];
      v46 = &a2[v44];
      v47 = *((_OWORD *)v46 + 1);
      *(_OWORD *)v45 = *(_OWORD *)v46;
      *((_OWORD *)v45 + 1) = v47;
    }
    else if ((_DWORD)v16 == 1)
    {
      v18 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(a1, a2, v18);
      v19 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
      v20 = &a1[v19];
      v21 = &a2[v19];
      v22 = *((_QWORD *)v21 + 1);
      *(_QWORD *)v20 = *(_QWORD *)v21;
      *((_QWORD *)v20 + 1) = v22;
      swift_bridgeObjectRetain(v22);
    }
    else
    {
      v48 = sub_1004B804C(&qword_1013E1790);
      v49 = *(_QWORD *)(v48 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(a2, 5, v48))
      {
        v50 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
      }
      else
      {
        v61 = type metadata accessor for UUID(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 16))(a1, a2, v61);
        v62 = *(int *)(v48 + 48);
        v63 = &a1[v62];
        v64 = &a2[v62];
        v65 = *((_QWORD *)v64 + 1);
        *(_QWORD *)v63 = *(_QWORD *)v64;
        *((_QWORD *)v63 + 1) = v65;
        v66 = *(void (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v49 + 56);
        v67 = swift_bridgeObjectRetain(v65);
        v66(a1, 0, 5, v48, v67);
      }
    }
    swift_storeEnumTagMultiPayload(a1, v15, v17);
    v58 = a1;
    v59 = a3;
    v60 = 1;
    goto LABEL_20;
  }
  if (!EnumCaseMultiPayload)
  {
    v7 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
    v8 = swift_getEnumCaseMultiPayload(a2, v7);
    v9 = v8;
    if ((_DWORD)v8 == 2)
    {
      v23 = type metadata accessor for UUID(0);
      v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
      v24(a1, a2, v23);
      v25 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
      v26 = &a1[v25];
      v27 = &a2[v25];
      v28 = *((_QWORD *)v27 + 1);
      *(_QWORD *)v26 = *(_QWORD *)v27;
      *((_QWORD *)v26 + 1) = v28;
      swift_bridgeObjectRetain(v28);
      v29 = sub_1004B804C((uint64_t *)&unk_1013DE640);
      v24(&a1[*(int *)(v29 + 48)], &a2[*(int *)(v29 + 48)], v23);
      v30 = *(int *)(v29 + 64);
      v31 = &a1[v30];
      v32 = &a2[v30];
      v33 = *((_OWORD *)v32 + 1);
      *(_OWORD *)v31 = *(_OWORD *)v32;
      *((_OWORD *)v31 + 1) = v33;
    }
    else if ((_DWORD)v8 == 1)
    {
      v10 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      v11 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
      v12 = &a1[v11];
      v13 = &a2[v11];
      v14 = *((_QWORD *)v13 + 1);
      *(_QWORD *)v12 = *(_QWORD *)v13;
      *((_QWORD *)v12 + 1) = v14;
      swift_bridgeObjectRetain(v14);
    }
    else
    {
      v34 = sub_1004B804C(&qword_1013E1790);
      v35 = *(_QWORD *)(v34 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(a2, 5, v34))
      {
        v36 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        v51 = type metadata accessor for UUID(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(a1, a2, v51);
        v52 = *(int *)(v34 + 48);
        v53 = &a1[v52];
        v54 = &a2[v52];
        v55 = *((_QWORD *)v54 + 1);
        *(_QWORD *)v53 = *(_QWORD *)v54;
        *((_QWORD *)v53 + 1) = v55;
        v56 = *(void (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v35 + 56);
        v57 = swift_bridgeObjectRetain(v55);
        v56(a1, 0, 5, v34, v57);
      }
    }
    swift_storeEnumTagMultiPayload(a1, v7, v9);
    v58 = a1;
    v59 = a3;
    v60 = 0;
LABEL_20:
    swift_storeEnumTagMultiPayload(v58, v59, v60);
    return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

char *sub_1005A3004(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  void (*v56)(char *, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  void (*v66)(char *, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v67;

  if (a1 != a2)
  {
    sub_1004B84A4((uint64_t)a1, type metadata accessor for CRLBoardPreviewImageCache.CacheError);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      v15 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
      v16 = swift_getEnumCaseMultiPayload(a2, v15);
      v17 = v16;
      if ((_DWORD)v16 == 2)
      {
        v37 = type metadata accessor for UUID(0);
        v38 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16);
        v38(a1, a2, v37);
        v39 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
        v40 = &a1[v39];
        v41 = &a2[v39];
        *(_QWORD *)v40 = *(_QWORD *)v41;
        v42 = *((_QWORD *)v41 + 1);
        *((_QWORD *)v40 + 1) = v42;
        swift_bridgeObjectRetain(v42);
        v43 = sub_1004B804C((uint64_t *)&unk_1013DE640);
        v38(&a1[*(int *)(v43 + 48)], &a2[*(int *)(v43 + 48)], v37);
        v44 = *(int *)(v43 + 64);
        v45 = &a1[v44];
        v46 = &a2[v44];
        v47 = *((_OWORD *)v46 + 1);
        *(_OWORD *)v45 = *(_OWORD *)v46;
        *((_OWORD *)v45 + 1) = v47;
      }
      else if ((_DWORD)v16 == 1)
      {
        v18 = type metadata accessor for UUID(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(a1, a2, v18);
        v19 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
        v20 = &a1[v19];
        v21 = &a2[v19];
        *(_QWORD *)v20 = *(_QWORD *)v21;
        v22 = *((_QWORD *)v21 + 1);
        *((_QWORD *)v20 + 1) = v22;
        swift_bridgeObjectRetain(v22);
      }
      else
      {
        v48 = sub_1004B804C(&qword_1013E1790);
        v49 = *(_QWORD *)(v48 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(a2, 5, v48))
        {
          v50 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
        }
        else
        {
          v61 = type metadata accessor for UUID(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 16))(a1, a2, v61);
          v62 = *(int *)(v48 + 48);
          v63 = &a1[v62];
          v64 = &a2[v62];
          *(_QWORD *)v63 = *(_QWORD *)v64;
          v65 = *((_QWORD *)v64 + 1);
          *((_QWORD *)v63 + 1) = v65;
          v66 = *(void (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v49 + 56);
          v67 = swift_bridgeObjectRetain(v65);
          v66(a1, 0, 5, v48, v67);
        }
      }
      swift_storeEnumTagMultiPayload(a1, v15, v17);
      v58 = a1;
      v59 = a3;
      v60 = 1;
      goto LABEL_21;
    }
    if (!EnumCaseMultiPayload)
    {
      v7 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
      v8 = swift_getEnumCaseMultiPayload(a2, v7);
      v9 = v8;
      if ((_DWORD)v8 == 2)
      {
        v23 = type metadata accessor for UUID(0);
        v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
        v24(a1, a2, v23);
        v25 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
        v26 = &a1[v25];
        v27 = &a2[v25];
        *(_QWORD *)v26 = *(_QWORD *)v27;
        v28 = *((_QWORD *)v27 + 1);
        *((_QWORD *)v26 + 1) = v28;
        swift_bridgeObjectRetain(v28);
        v29 = sub_1004B804C((uint64_t *)&unk_1013DE640);
        v24(&a1[*(int *)(v29 + 48)], &a2[*(int *)(v29 + 48)], v23);
        v30 = *(int *)(v29 + 64);
        v31 = &a1[v30];
        v32 = &a2[v30];
        v33 = *((_OWORD *)v32 + 1);
        *(_OWORD *)v31 = *(_OWORD *)v32;
        *((_OWORD *)v31 + 1) = v33;
      }
      else if ((_DWORD)v8 == 1)
      {
        v10 = type metadata accessor for UUID(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
        v11 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
        v12 = &a1[v11];
        v13 = &a2[v11];
        *(_QWORD *)v12 = *(_QWORD *)v13;
        v14 = *((_QWORD *)v13 + 1);
        *((_QWORD *)v12 + 1) = v14;
        swift_bridgeObjectRetain(v14);
      }
      else
      {
        v34 = sub_1004B804C(&qword_1013E1790);
        v35 = *(_QWORD *)(v34 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(a2, 5, v34))
        {
          v36 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
        }
        else
        {
          v51 = type metadata accessor for UUID(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(a1, a2, v51);
          v52 = *(int *)(v34 + 48);
          v53 = &a1[v52];
          v54 = &a2[v52];
          *(_QWORD *)v53 = *(_QWORD *)v54;
          v55 = *((_QWORD *)v54 + 1);
          *((_QWORD *)v53 + 1) = v55;
          v56 = *(void (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v35 + 56);
          v57 = swift_bridgeObjectRetain(v55);
          v56(a1, 0, 5, v34, v57);
        }
      }
      swift_storeEnumTagMultiPayload(a1, v7, v9);
      v58 = a1;
      v59 = a3;
      v60 = 0;
LABEL_21:
      swift_storeEnumTagMultiPayload(v58, v59, v60);
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

char *sub_1005A3414(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 1)
  {
    v12 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
    v13 = swift_getEnumCaseMultiPayload(a2, v12);
    v14 = v13;
    if ((_DWORD)v13 == 2)
    {
      v28 = type metadata accessor for UUID(0);
      v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32);
      v29(a1, a2, v28);
      v30 = type metadata accessor for CRLBoardIdentifierStorage(0);
      *(_OWORD *)&a1[*(int *)(v30 + 20)] = *(_OWORD *)&a2[*(int *)(v30 + 20)];
      v31 = sub_1004B804C((uint64_t *)&unk_1013DE640);
      v29(&a1[*(int *)(v31 + 48)], &a2[*(int *)(v31 + 48)], v28);
      v32 = *(int *)(v31 + 64);
      v33 = &a1[v32];
      v34 = &a2[v32];
      v35 = *((_OWORD *)v34 + 1);
      *(_OWORD *)v33 = *(_OWORD *)v34;
      *((_OWORD *)v33 + 1) = v35;
    }
    else if ((_DWORD)v13 == 1)
    {
      v15 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(a1, a2, v15);
      v16 = type metadata accessor for CRLBoardIdentifierStorage(0);
      *(_OWORD *)&a1[*(int *)(v16 + 20)] = *(_OWORD *)&a2[*(int *)(v16 + 20)];
    }
    else
    {
      v36 = sub_1004B804C(&qword_1013E1790);
      v37 = *(_QWORD *)(v36 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(a2, 5, v36))
      {
        v38 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        v43 = type metadata accessor for UUID(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(a1, a2, v43);
        *(_OWORD *)&a1[*(int *)(v36 + 48)] = *(_OWORD *)&a2[*(int *)(v36 + 48)];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(a1, 0, 5, v36);
      }
    }
    swift_storeEnumTagMultiPayload(a1, v12, v14);
    v40 = a1;
    v41 = a3;
    v42 = 1;
    goto LABEL_20;
  }
  if (!EnumCaseMultiPayload)
  {
    v7 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
    v8 = swift_getEnumCaseMultiPayload(a2, v7);
    v9 = v8;
    if ((_DWORD)v8 == 2)
    {
      v17 = type metadata accessor for UUID(0);
      v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32);
      v18(a1, a2, v17);
      v19 = type metadata accessor for CRLBoardIdentifierStorage(0);
      *(_OWORD *)&a1[*(int *)(v19 + 20)] = *(_OWORD *)&a2[*(int *)(v19 + 20)];
      v20 = sub_1004B804C((uint64_t *)&unk_1013DE640);
      v18(&a1[*(int *)(v20 + 48)], &a2[*(int *)(v20 + 48)], v17);
      v21 = *(int *)(v20 + 64);
      v22 = &a1[v21];
      v23 = &a2[v21];
      v24 = *((_OWORD *)v23 + 1);
      *(_OWORD *)v22 = *(_OWORD *)v23;
      *((_OWORD *)v22 + 1) = v24;
    }
    else if ((_DWORD)v8 == 1)
    {
      v10 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
      v11 = type metadata accessor for CRLBoardIdentifierStorage(0);
      *(_OWORD *)&a1[*(int *)(v11 + 20)] = *(_OWORD *)&a2[*(int *)(v11 + 20)];
    }
    else
    {
      v25 = sub_1004B804C(&qword_1013E1790);
      v26 = *(_QWORD *)(v25 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(a2, 5, v25))
      {
        v27 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        v39 = type metadata accessor for UUID(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(a1, a2, v39);
        *(_OWORD *)&a1[*(int *)(v25 + 48)] = *(_OWORD *)&a2[*(int *)(v25 + 48)];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(a1, 0, 5, v25);
      }
    }
    swift_storeEnumTagMultiPayload(a1, v7, v9);
    v40 = a1;
    v41 = a3;
    v42 = 0;
LABEL_20:
    swift_storeEnumTagMultiPayload(v40, v41, v42);
    return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

char *sub_1005A3794(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  if (a1 != a2)
  {
    sub_1004B84A4((uint64_t)a1, type metadata accessor for CRLBoardPreviewImageCache.CacheError);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      v12 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
      v13 = swift_getEnumCaseMultiPayload(a2, v12);
      v14 = v13;
      if ((_DWORD)v13 == 2)
      {
        v28 = type metadata accessor for UUID(0);
        v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32);
        v29(a1, a2, v28);
        v30 = type metadata accessor for CRLBoardIdentifierStorage(0);
        *(_OWORD *)&a1[*(int *)(v30 + 20)] = *(_OWORD *)&a2[*(int *)(v30 + 20)];
        v31 = sub_1004B804C((uint64_t *)&unk_1013DE640);
        v29(&a1[*(int *)(v31 + 48)], &a2[*(int *)(v31 + 48)], v28);
        v32 = *(int *)(v31 + 64);
        v33 = &a1[v32];
        v34 = &a2[v32];
        v35 = *((_OWORD *)v34 + 1);
        *(_OWORD *)v33 = *(_OWORD *)v34;
        *((_OWORD *)v33 + 1) = v35;
      }
      else if ((_DWORD)v13 == 1)
      {
        v15 = type metadata accessor for UUID(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(a1, a2, v15);
        v16 = type metadata accessor for CRLBoardIdentifierStorage(0);
        *(_OWORD *)&a1[*(int *)(v16 + 20)] = *(_OWORD *)&a2[*(int *)(v16 + 20)];
      }
      else
      {
        v36 = sub_1004B804C(&qword_1013E1790);
        v37 = *(_QWORD *)(v36 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(a2, 5, v36))
        {
          v38 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
        }
        else
        {
          v43 = type metadata accessor for UUID(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(a1, a2, v43);
          *(_OWORD *)&a1[*(int *)(v36 + 48)] = *(_OWORD *)&a2[*(int *)(v36 + 48)];
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(a1, 0, 5, v36);
        }
      }
      swift_storeEnumTagMultiPayload(a1, v12, v14);
      v40 = a1;
      v41 = a3;
      v42 = 1;
      goto LABEL_21;
    }
    if (!EnumCaseMultiPayload)
    {
      v7 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
      v8 = swift_getEnumCaseMultiPayload(a2, v7);
      v9 = v8;
      if ((_DWORD)v8 == 2)
      {
        v17 = type metadata accessor for UUID(0);
        v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32);
        v18(a1, a2, v17);
        v19 = type metadata accessor for CRLBoardIdentifierStorage(0);
        *(_OWORD *)&a1[*(int *)(v19 + 20)] = *(_OWORD *)&a2[*(int *)(v19 + 20)];
        v20 = sub_1004B804C((uint64_t *)&unk_1013DE640);
        v18(&a1[*(int *)(v20 + 48)], &a2[*(int *)(v20 + 48)], v17);
        v21 = *(int *)(v20 + 64);
        v22 = &a1[v21];
        v23 = &a2[v21];
        v24 = *((_OWORD *)v23 + 1);
        *(_OWORD *)v22 = *(_OWORD *)v23;
        *((_OWORD *)v22 + 1) = v24;
      }
      else if ((_DWORD)v8 == 1)
      {
        v10 = type metadata accessor for UUID(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
        v11 = type metadata accessor for CRLBoardIdentifierStorage(0);
        *(_OWORD *)&a1[*(int *)(v11 + 20)] = *(_OWORD *)&a2[*(int *)(v11 + 20)];
      }
      else
      {
        v25 = sub_1004B804C(&qword_1013E1790);
        v26 = *(_QWORD *)(v25 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(a2, 5, v25))
        {
          v27 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
        }
        else
        {
          v39 = type metadata accessor for UUID(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(a1, a2, v39);
          *(_OWORD *)&a1[*(int *)(v25 + 48)] = *(_OWORD *)&a2[*(int *)(v25 + 48)];
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(a1, 0, 5, v25);
        }
      }
      swift_storeEnumTagMultiPayload(a1, v7, v9);
      v40 = a1;
      v41 = a3;
      v42 = 0;
LABEL_21:
      swift_storeEnumTagMultiPayload(v40, v41, v42);
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1005A3B2C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for CRLBoardPreviewImageCache.Item(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = v4[0];
    swift_initEnumMetadataMultiPayload(a1, 256, 2, v4);
    return 0;
  }
  return result;
}

unint64_t sub_1005A3B94()
{
  unint64_t result;

  result = qword_1013E4AC8;
  if (!qword_1013E4AC8)
  {
    result = swift_getWitnessTable(&unk_100EFAB68, &type metadata for CRLBoardPreviewImageCache.LookupKey.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E4AC8);
  }
  return result;
}

unint64_t sub_1005A3BDC()
{
  unint64_t result;

  result = qword_1013E4AD0;
  if (!qword_1013E4AD0)
  {
    result = swift_getWitnessTable(&unk_100EFAC20, &type metadata for CRLBoardPreviewImageCache.ImageSizeClass.CustomCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E4AD0);
  }
  return result;
}

unint64_t sub_1005A3C24()
{
  unint64_t result;

  result = qword_1013E4AD8;
  if (!qword_1013E4AD8)
  {
    result = swift_getWitnessTable(&unk_100EFAE68, &type metadata for CRLBoardPreviewImageCache.ImageSizeClass.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E4AD8);
  }
  return result;
}

unint64_t sub_1005A3C6C()
{
  unint64_t result;

  result = qword_1013E4AE0;
  if (!qword_1013E4AE0)
  {
    result = swift_getWitnessTable(&unk_100EFAF20, &type metadata for CRLBoardPreviewImageCache.Item.SceneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E4AE0);
  }
  return result;
}

unint64_t sub_1005A3CB4()
{
  unint64_t result;

  result = qword_1013E4AE8;
  if (!qword_1013E4AE8)
  {
    result = swift_getWitnessTable(&unk_100EFAFD8, &type metadata for CRLBoardPreviewImageCache.Item.BoardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E4AE8);
  }
  return result;
}

unint64_t sub_1005A3CFC()
{
  unint64_t result;

  result = qword_1013E4AF0;
  if (!qword_1013E4AF0)
  {
    result = swift_getWitnessTable(&unk_100EFB090, &type metadata for CRLBoardPreviewImageCache.Item.FolderCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E4AF0);
  }
  return result;
}

unint64_t sub_1005A3D44()
{
  unint64_t result;

  result = qword_1013E4AF8;
  if (!qword_1013E4AF8)
  {
    result = swift_getWitnessTable(&unk_100EFB148, &type metadata for CRLBoardPreviewImageCache.Item.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E4AF8);
  }
  return result;
}

unint64_t sub_1005A3D8C()
{
  unint64_t result;

  result = qword_1013E4B00;
  if (!qword_1013E4B00)
  {
    result = swift_getWitnessTable(&unk_100EFB000, &type metadata for CRLBoardPreviewImageCache.Item.FolderCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E4B00);
  }
  return result;
}

unint64_t sub_1005A3DD4()
{
  unint64_t result;

  result = qword_1013E4B08;
  if (!qword_1013E4B08)
  {
    result = swift_getWitnessTable(&unk_100EFB028, &type metadata for CRLBoardPreviewImageCache.Item.FolderCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E4B08);
  }
  return result;
}

unint64_t sub_1005A3E1C()
{
  unint64_t result;

  result = qword_1013E4B10;
  if (!qword_1013E4B10)
  {
    result = swift_getWitnessTable(&unk_100EFAF48, &type metadata for CRLBoardPreviewImageCache.Item.BoardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E4B10);
  }
  return result;
}

unint64_t sub_1005A3E64()
{
  unint64_t result;

  result = qword_1013E4B18;
  if (!qword_1013E4B18)
  {
    result = swift_getWitnessTable(&unk_100EFAF70, &type metadata for CRLBoardPreviewImageCache.Item.BoardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E4B18);
  }
  return result;
}

unint64_t sub_1005A3EAC()
{
  unint64_t result;

  result = qword_1013E4B20;
  if (!qword_1013E4B20)
  {
    result = swift_getWitnessTable(&unk_100EFAE90, &type metadata for CRLBoardPreviewImageCache.Item.SceneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E4B20);
  }
  return result;
}

unint64_t sub_1005A3EF4()
{
  unint64_t result;

  result = qword_1013E4B28;
  if (!qword_1013E4B28)
  {
    result = swift_getWitnessTable(&unk_100EFAEB8, &type metadata for CRLBoardPreviewImageCache.Item.SceneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E4B28);
  }
  return result;
}

unint64_t sub_1005A3F3C()
{
  unint64_t result;

  result = qword_1013E4B30;
  if (!qword_1013E4B30)
  {
    result = swift_getWitnessTable(&unk_100EFB0B8, &type metadata for CRLBoardPreviewImageCache.Item.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E4B30);
  }
  return result;
}

unint64_t sub_1005A3F84()
{
  unint64_t result;

  result = qword_1013E4B38;
  if (!qword_1013E4B38)
  {
    result = swift_getWitnessTable(&unk_100EFB0E0, &type metadata for CRLBoardPreviewImageCache.Item.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E4B38);
  }
  return result;
}

unint64_t sub_1005A3FCC()
{
  unint64_t result;

  result = qword_1013E4B40;
  if (!qword_1013E4B40)
  {
    result = swift_getWitnessTable(&unk_100EFAD88, &type metadata for CRLBoardPreviewImageCache.ImageSizeClass.BoardListViewCellCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E4B40);
  }
  return result;
}

unint64_t sub_1005A4014()
{
  unint64_t result;

  result = qword_1013E4B48;
  if (!qword_1013E4B48)
  {
    result = swift_getWitnessTable(&unk_100EFADB0, &type metadata for CRLBoardPreviewImageCache.ImageSizeClass.BoardListViewCellCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E4B48);
  }
  return result;
}

unint64_t sub_1005A405C()
{
  unint64_t result;

  result = qword_1013E4B50;
  if (!qword_1013E4B50)
  {
    result = swift_getWitnessTable(&unk_100EFAD38, &type metadata for CRLBoardPreviewImageCache.ImageSizeClass.FolderGridViewCellQuadrantCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E4B50);
  }
  return result;
}

unint64_t sub_1005A40A4()
{
  unint64_t result;

  result = qword_1013E4B58;
  if (!qword_1013E4B58)
  {
    result = swift_getWitnessTable(&unk_100EFAD60, &type metadata for CRLBoardPreviewImageCache.ImageSizeClass.FolderGridViewCellQuadrantCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E4B58);
  }
  return result;
}

unint64_t sub_1005A40EC()
{
  unint64_t result;

  result = qword_1013E4B60;
  if (!qword_1013E4B60)
  {
    result = swift_getWitnessTable(&unk_100EFACE8, &type metadata for CRLBoardPreviewImageCache.ImageSizeClass.FolderGridViewCellEntireCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E4B60);
  }
  return result;
}

unint64_t sub_1005A4134()
{
  unint64_t result;

  result = qword_1013E4B68;
  if (!qword_1013E4B68)
  {
    result = swift_getWitnessTable(&unk_100EFAD10, &type metadata for CRLBoardPreviewImageCache.ImageSizeClass.FolderGridViewCellEntireCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E4B68);
  }
  return result;
}

unint64_t sub_1005A417C()
{
  unint64_t result;

  result = qword_1013E4B70;
  if (!qword_1013E4B70)
  {
    result = swift_getWitnessTable(&unk_100EFAC98, &type metadata for CRLBoardPreviewImageCache.ImageSizeClass.BoardCanvasRenderingPreviewCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E4B70);
  }
  return result;
}

unint64_t sub_1005A41C4()
{
  unint64_t result;

  result = qword_1013E4B78;
  if (!qword_1013E4B78)
  {
    result = swift_getWitnessTable(&unk_100EFACC0, &type metadata for CRLBoardPreviewImageCache.ImageSizeClass.BoardCanvasRenderingPreviewCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E4B78);
  }
  return result;
}

unint64_t sub_1005A420C()
{
  unint64_t result;

  result = qword_1013E4B80;
  if (!qword_1013E4B80)
  {
    result = swift_getWitnessTable(&unk_100EFAC48, &type metadata for CRLBoardPreviewImageCache.ImageSizeClass.SpotlightPreviewCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E4B80);
  }
  return result;
}

unint64_t sub_1005A4254()
{
  unint64_t result;

  result = qword_1013E4B88;
  if (!qword_1013E4B88)
  {
    result = swift_getWitnessTable(&unk_100EFAC70, &type metadata for CRLBoardPreviewImageCache.ImageSizeClass.SpotlightPreviewCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E4B88);
  }
  return result;
}

unint64_t sub_1005A429C()
{
  unint64_t result;

  result = qword_1013E4B90;
  if (!qword_1013E4B90)
  {
    result = swift_getWitnessTable(&unk_100EFAB90, &type metadata for CRLBoardPreviewImageCache.ImageSizeClass.CustomCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E4B90);
  }
  return result;
}

unint64_t sub_1005A42E4()
{
  unint64_t result;

  result = qword_1013E4B98;
  if (!qword_1013E4B98)
  {
    result = swift_getWitnessTable(&unk_100EFABB8, &type metadata for CRLBoardPreviewImageCache.ImageSizeClass.CustomCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E4B98);
  }
  return result;
}

unint64_t sub_1005A432C()
{
  unint64_t result;

  result = qword_1013E4BA0;
  if (!qword_1013E4BA0)
  {
    result = swift_getWitnessTable(&unk_100EFADD8, &type metadata for CRLBoardPreviewImageCache.ImageSizeClass.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E4BA0);
  }
  return result;
}

unint64_t sub_1005A4374()
{
  unint64_t result;

  result = qword_1013E4BA8;
  if (!qword_1013E4BA8)
  {
    result = swift_getWitnessTable(&unk_100EFAE00, &type metadata for CRLBoardPreviewImageCache.ImageSizeClass.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E4BA8);
  }
  return result;
}

unint64_t sub_1005A43BC()
{
  unint64_t result;

  result = qword_1013E4BB0;
  if (!qword_1013E4BB0)
  {
    result = swift_getWitnessTable(&unk_100EFAAA0, &type metadata for CRLBoardPreviewImageCache.LookupKey.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E4BB0);
  }
  return result;
}

unint64_t sub_1005A4404()
{
  unint64_t result;

  result = qword_1013E4BB8;
  if (!qword_1013E4BB8)
  {
    result = swift_getWitnessTable(&unk_100EFAAC8, &type metadata for CRLBoardPreviewImageCache.LookupKey.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E4BB8);
  }
  return result;
}

unint64_t sub_1005A4448()
{
  unint64_t result;

  result = qword_1013E4BC8;
  if (!qword_1013E4BC8)
  {
    result = swift_getWitnessTable(&unk_100EFB6B0, &type metadata for CRLBoardPreviewImageCache.CacheEntrySnapshot.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E4BC8);
  }
  return result;
}

unint64_t sub_1005A448C()
{
  unint64_t result;

  result = qword_1013E4BD8;
  if (!qword_1013E4BD8)
  {
    result = swift_getWitnessTable(&unk_100F337BC, &type metadata for CRLCodableImage);
    atomic_store(result, (unint64_t *)&qword_1013E4BD8);
  }
  return result;
}

unint64_t sub_1005A44D0()
{
  unint64_t result;

  result = qword_1013E4BF0;
  if (!qword_1013E4BF0)
  {
    result = swift_getWitnessTable(&unk_100F33794, &type metadata for CRLCodableImage);
    atomic_store(result, (unint64_t *)&qword_1013E4BF0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CRLBoardPreviewImageCache.CacheEntrySnapshot.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1005A4560 + 4 * byte_100EFA619[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1005A4594 + 4 * byte_100EFA614[v4]))();
}

uint64_t sub_1005A4594(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1005A459C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1005A45A4);
  return result;
}

uint64_t sub_1005A45B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1005A45B8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1005A45BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1005A45C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardPreviewImageCache.CacheEntrySnapshot.CodingKeys()
{
  return &type metadata for CRLBoardPreviewImageCache.CacheEntrySnapshot.CodingKeys;
}

unint64_t sub_1005A45E4()
{
  unint64_t result;

  result = qword_1013E4BF8;
  if (!qword_1013E4BF8)
  {
    result = swift_getWitnessTable(&unk_100EFB688, &type metadata for CRLBoardPreviewImageCache.CacheEntrySnapshot.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E4BF8);
  }
  return result;
}

unint64_t sub_1005A462C()
{
  unint64_t result;

  result = qword_1013E4C00;
  if (!qword_1013E4C00)
  {
    result = swift_getWitnessTable(&unk_100EFB5C0, &type metadata for CRLBoardPreviewImageCache.CacheEntrySnapshot.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E4C00);
  }
  return result;
}

unint64_t sub_1005A4674()
{
  unint64_t result;

  result = qword_1013E4C08;
  if (!qword_1013E4C08)
  {
    result = swift_getWitnessTable(&unk_100EFB5E8, &type metadata for CRLBoardPreviewImageCache.CacheEntrySnapshot.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E4C08);
  }
  return result;
}

ValueMetadata *_s23RemoveSmartListBehaviorVMa()
{
  return &_s23RemoveSmartListBehaviorVN;
}

ValueMetadata *_s23ExtendSmartListBehaviorVMa()
{
  return &_s23ExtendSmartListBehaviorVN;
}

ValueMetadata *_s23InsertSmartListBehaviorVMa()
{
  return &_s23InsertSmartListBehaviorVN;
}

ValueMetadata *_s30IncreaseParagraphLevelBehaviorVMa()
{
  return &_s30IncreaseParagraphLevelBehaviorVN;
}

uint64_t sub_1005A4730(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1005A4C4C(a1, a2, a3, a4, &qword_1013E4C10, &qword_1013E4C18);
}

uint64_t (*sub_1005A4740())(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1005A4730;
}

void sub_1005A4754(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  BOOL v12;
  uint64_t v13;
  void *v14;
  id v15;
  char *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t KeyPath;
  __int16 v32;
  __int16 v33;
  uint64_t v34;
  uint64_t v35;

  v8 = type metadata accessor for CharacterSet(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = qword_1013E4C20 == a2 && unk_1013E4C28 == a3;
  if (!v12 && (_stringCompareWithSmolCheck(_:_:expecting:)(a2, a3, qword_1013E4C20, unk_1013E4C28, 0) & 1) == 0)
    return;
  v13 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape;
  v14 = *(void **)(*(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v14)
  {
    __break(1u);
    goto LABEL_15;
  }
  v15 = v14;
  v16 = (char *)objc_msgSend(a4, "start");
  v17 = *(_QWORD *)&v16[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

  v18 = objc_msgSend(v15, "textRangeForParagraphAtCharIndex:", v17);
  v20 = v19;

  v21 = *(void **)(*(_QWORD *)(a1 + v13) + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v21)
  {
LABEL_15:
    __break(1u);
    return;
  }
  v22 = objc_msgSend(v21, "substringWithRange:", v18, v20);
  v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
  v25 = v24;

  v34 = v23;
  v35 = v25;
  v26 = objc_msgSend((id)objc_opt_self(NSCharacterSet), "newlineCharacterSet");
  static CharacterSet._unconditionallyBridgeFromObjectiveC(_:)();

  v27 = sub_1004D292C();
  v28 = StringProtocol.trimmingCharacters(in:)(v11, &type metadata for String, v27);
  v30 = v29;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  swift_bridgeObjectRelease(v35);
  KeyPath = swift_getKeyPath(&unk_100EFB880);
  sub_10072E744(KeyPath);
  v33 = v32;
  swift_release(KeyPath);
  if ((v33 & 0xFF00) != 0x200 && (_BYTE)v33 && v20)
  {
    String.count.getter(v28, v30);
    swift_bridgeObjectRelease(v30);
  }
  else
  {
    swift_bridgeObjectRelease(v30);
  }
}

void (*sub_1005A49AC())(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_1005A4754;
}

void sub_1005A49C0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  BOOL v12;
  uint64_t v13;
  void *v14;
  id v15;
  char *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t KeyPath;
  __int16 v32;
  __int16 v33;
  uint64_t v34;
  uint64_t v35;

  v8 = type metadata accessor for CharacterSet(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = qword_1013E4C30 == a2 && unk_1013E4C38 == a3;
  if (!v12 && (_stringCompareWithSmolCheck(_:_:expecting:)(a2, a3, qword_1013E4C30, unk_1013E4C38, 0) & 1) == 0)
    return;
  v13 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape;
  v14 = *(void **)(*(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v14)
  {
    __break(1u);
    goto LABEL_17;
  }
  v15 = v14;
  v16 = (char *)objc_msgSend(a4, "start");
  v17 = *(_QWORD *)&v16[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

  v18 = objc_msgSend(v15, "textRangeForParagraphAtCharIndex:", v17);
  v20 = v19;

  v21 = *(void **)(*(_QWORD *)(a1 + v13) + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v21)
  {
LABEL_17:
    __break(1u);
    return;
  }
  v22 = objc_msgSend(v21, "substringWithRange:", v18, v20);
  v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
  v25 = v24;

  v34 = v23;
  v35 = v25;
  v26 = objc_msgSend((id)objc_opt_self(NSCharacterSet), "newlineCharacterSet");
  static CharacterSet._unconditionallyBridgeFromObjectiveC(_:)();

  v27 = sub_1004D292C();
  v28 = StringProtocol.trimmingCharacters(in:)(v11, &type metadata for String, v27);
  v30 = v29;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  swift_bridgeObjectRelease(v35);
  KeyPath = swift_getKeyPath(&unk_100EFB880);
  sub_10072E744(KeyPath);
  v33 = v32;
  swift_release(KeyPath);
  if ((v33 & 0xFF00) == 0x200 || !(_BYTE)v33)
  {
    swift_bridgeObjectRelease(v30);
  }
  else
  {
    if (v20)
      String.count.getter(v28, v30);
    swift_bridgeObjectRelease(v30);
  }
}

void (*sub_1005A4C28())(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_1005A49C0;
}

uint64_t sub_1005A4C3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1005A4C4C(a1, a2, a3, a4, qword_1013E4C40, &qword_1013E4C40[1]);
}

uint64_t sub_1005A4C4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t *a6)
{
  uint64_t v6;

  v6 = *a6;
  if (*a5 == a2 && v6 == a3)
    return 1;
  else
    return _stringCompareWithSmolCheck(_:_:expecting:)(a2, a3, *a5, v6, 0);
}

uint64_t (*sub_1005A4C7C())(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1005A4C3C;
}

void sub_1005A4C90(uint64_t *a1, char *a2)
{
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  char **v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void *Strong;
  id v24;
  void *v25;
  void *v26;
  id v27;
  void *v28;
  void *v29;
  uint64_t *v30;
  uint64_t *v31;
  id v32;
  uint64_t v33;
  void *v34;
  id v35;
  id v36;
  uint64_t v37;
  unint64_t v38;
  void *v39;
  id v40;
  uint64_t *v41;
  int v42;
  int v43;
  uint64_t KeyPath;
  char *v45;
  unsigned __int8 v46;
  int v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  double v51;
  void *v52;
  int v53;
  void *v54;
  id v55;
  id v56;
  id v57;
  void *v58;
  void *v59;
  id v60;
  char *v61;
  uint64_t *v62;
  uint64_t v63;
  id v64;
  uint64_t *v65;
  char *v66;
  uint64_t *v67;
  unint64_t v68;
  objc_class *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  unint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t *v89;
  char *v90;
  void *v91;
  uint64_t v92;
  uint64_t v93;
  id v94;
  id v95;
  id v96;
  uint64_t v97;
  void *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  void *v103;
  uint64_t v104;
  uint64_t v105;
  void *v106;
  id v107;
  id v108;
  id v109;
  char *v110;
  uint64_t v111;
  id v112;
  uint64_t v113;
  uint64_t v114;
  id v115;
  uint64_t v116;
  void *v117;
  uint64_t v118;
  uint64_t v119;
  id v120;
  void *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  void *v129;
  id v130;
  void *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  void *v136;
  uint64_t v137;
  id v138;
  id v139;
  id *v140;
  id v141;
  id v142;
  uint64_t *v143;
  char *v144;
  void *v145;
  id v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  void *v153;
  unint64_t v154;
  unint64_t v155;
  uint64_t v156;
  void *v157;
  uint64_t v158;
  uint64_t *v159;
  void *v160;
  void *v161;
  uint64_t v162;
  void *v163;
  id v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  char v168;
  char v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t (*v173)(__n128);
  __n128 v174;
  void *v175;
  uint64_t v176;
  uint64_t (*v177)(__n128);
  __n128 v178;
  void *v179;
  uint64_t *v180;
  char *v181;
  uint64_t v182;
  uint64_t (*v183)(__n128);
  char *v184;
  __n128 v185;
  void *v186;
  char *v187;
  uint64_t v188;
  uint64_t (*v189)(__n128);
  char *v190;
  __n128 v191;
  void *v192;
  char *v193;
  uint64_t v194;
  double v195;
  char *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  unint64_t v200;
  uint64_t *v201;
  char *v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  BOOL v207;
  id v208;
  void *v209;
  id v210;
  void *v211;
  void *v212;
  id v213;
  id v214;
  uint64_t v215;
  id v216;
  NSString v217;
  NSString v218;
  id v219;
  uint64_t v220;
  uint64_t v221;
  char *v222;
  id v223;
  char *v224;
  id v225;
  uint64_t v226;
  void (*v227)(__n128);
  char *v228;
  id v229;
  __n128 v230;
  char *v231;
  Class isa;
  id v233;
  uint64_t v234;
  uint64_t v235;
  Class v236;
  uint64_t v237;
  id v238;
  unint64_t v239;
  uint64_t v240;
  id v241;
  id v242;
  char *v243;
  id v244;
  _BOOL8 v245;
  int v246;
  char *v247;
  id v248;
  uint64_t *v249;
  id v250;
  uint64_t v251;
  char *v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  char *v256;
  uint64_t v257;
  uint64_t v258;
  char *v259;
  id v260;
  char v261[24];
  unint64_t v262;
  objc_super v263;
  objc_super v264;
  objc_super v265;
  _QWORD v266[3];
  __int128 v267;
  uint64_t v268;
  __int128 v269;
  uint64_t v270;
  char v271;
  uint64_t v272;

  v259 = a2;
  v254 = type metadata accessor for UUID(0);
  v253 = *(_QWORD *)(v254 - 8);
  __chkstk_darwin(v254);
  v252 = (char *)&v235 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v258 = sub_1004B804C(&qword_1013F3D90);
  v257 = *(_QWORD *)(v258 - 8);
  __chkstk_darwin(v258);
  v256 = (char *)&v235 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (int *)type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v5);
  v7 = (unint64_t)&v235 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v8);
  v255 = (uint64_t)&v235 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C((uint64_t *)&unk_1013F3DC0);
  __chkstk_darwin(v10);
  v12 = (char *)&v235 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (uint64_t *)((char *)&v235 - v14);
  v16 = sub_1004B804C((uint64_t *)&unk_1013EFCF0);
  __chkstk_darwin(v16);
  v18 = (char **)((char *)&v235 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v19);
  v21 = (char *)&v235 - v20;
  v22 = (uint64_t)a1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc;
  Strong = (void *)swift_unknownObjectWeakLoadStrong((char *)a1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc);
  v24 = objc_msgSend(Strong, "commandController");

  if (!v24)
    return;
  v251 = v22;
  v25 = (void *)swift_unknownObjectWeakLoadStrong(v22);
  if (!v25
    || (v26 = v25,
        v249 = a1,
        v27 = objc_msgSend(v25, "selectionModelTranslator"),
        v26,
        (v250 = v27) == 0))
  {

    return;
  }
  v248 = v24;
  v28 = (void *)swift_unknownObjectWeakLoadStrong(v251);
  if (!v28
    || (v29 = v28,
        v30 = (uint64_t *)OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape,
        v31 = v249,
        v32 = objc_msgSend(v28, "layoutForInfo:", *(uint64_t *)((char *)v249 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)), v29, !v32))
  {
    v32 = v248;
LABEL_31:

    v140 = (id *)&v272;
LABEL_32:

    return;
  }
  v33 = objc_opt_self(CRLWPShapeLayout);
  v34 = (void *)swift_dynamicCastObjCClass(v32, v33);
  if (!v34)
  {

    goto LABEL_31;
  }
  v35 = objc_msgSend(v34, "layoutInfoGeometry");

  v36 = objc_msgSend(v35, "mutableCopy");
  _bridgeAnyObjectToAny(_:)(v266, v36);
  swift_unknownObjectRelease(v36);
  v37 = sub_1004B8930(0, (unint64_t *)&qword_1013E4C50, off_101229818);
  if ((swift_dynamicCast(&v269, v266, (char *)&type metadata for Any + 8, v37, 6) & 1) == 0)
  {

    v140 = (id *)&v271;
    goto LABEL_32;
  }
  v247 = (char *)v30;
  v38 = *(_QWORD *)(*(uint64_t *)((char *)v30 + (_QWORD)v31) + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v38)
    goto LABEL_89;
  v39 = (void *)v269;
  v40 = (id)v38;
  v41 = (uint64_t *)v259;
  v245 = sub_1005EB1A8(v259);
  v43 = v42;

  v246 = v43;
  if ((v43 & 0x100) != 0)
  {

    return;
  }
  v244 = v39;
  KeyPath = swift_getKeyPath(&unk_100EFB860);
  v30 = v41;
  v31 = v249;
  sub_10072E544(KeyPath);
  v243 = v45;
  v47 = v46;
  swift_release(KeyPath);
  v48 = 2;
  if (v47 != 2)
    v48 = (uint64_t)v243;
  v240 = v48;
  v49 = (void *)qword_1013E4C10;
  v50 = qword_1013E4C18;
  swift_bridgeObjectRetain(qword_1013E4C18);
  sub_100721004(v30, v49, v50, 0);
  *(_QWORD *)&v51 = swift_bridgeObjectRelease(v50).n128_u64[0];
  v38 = *(_QWORD *)&v247[(_QWORD)v31];
  v52 = *(void **)(v38 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v52)
    goto LABEL_90;
  v241 = objc_msgSend(v52, "paragraphCount", v51);
  if (v245)
    v53 = 2;
  else
    v53 = 3;
  if ((v246 & 1) == 0)
    v53 = 1;
  LODWORD(v242) = v53;
  sub_100736D9C();
  v55 = v248;
  v56 = v244;
  if (!v54 || (v57 = objc_msgSend(v54, "selectedTextRange")) == 0)
  {

    return;
  }
  v58 = *(void **)(*(_QWORD *)&v247[(_QWORD)v249] + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v58)
  {
    __break(1u);
LABEL_93:
    __break(1u);
LABEL_94:
    __break(1u);
    goto LABEL_95;
  }
  v59 = v57;
  v60 = v58;
  v61 = (char *)objc_msgSend(v59, "start");
  v62 = &OBJC_IVAR____TtC8Freeform15CRLTextPosition_location;
  v63 = *(_QWORD *)&v61[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

  v64 = objc_msgSend(v60, "paragraphIndexAtCharIndex:", v63);
  v245 = (_BOOL8)v60;
  v65 = (uint64_t *)objc_msgSend(v60, "charIndexForParagraphAtIndex:", v64);
  v66 = (char *)objc_msgSend(v59, "end");
  v67 = *(uint64_t **)&v66[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

  if ((uint64_t)v67 < (uint64_t)v65)
  {
    __break(1u);
    goto LABEL_86;
  }
  v69 = (objc_class *)type metadata accessor for CRLTextRange();
  v70 = (char *)objc_allocWithZone(v69);
  v71 = OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity;
  *(_QWORD *)&v70[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = 0;
  *(_QWORD *)&v70[OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge] = 0;
  v72 = &v70[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
  *(_QWORD *)v72 = v65;
  *((_QWORD *)v72 + 1) = v67;
  *(_QWORD *)&v70[v71] = 0;
  v265.receiver = v70;
  v265.super_class = v69;
  v73 = (char *)objc_msgSendSuper2(&v265, "init");
  v243 = v73;

  v74 = (char *)objc_msgSend(v73, "start");
  NSNotFound.getter(v74);
  v75 = *(_QWORD *)&v74[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
  v76 = *(_QWORD *)&v74[OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity];
  v77 = (char *)objc_allocWithZone(v69);
  v78 = OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity;
  *(_QWORD *)&v77[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = 0;
  *(_QWORD *)&v77[OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge] = 0;
  v79 = &v77[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
  *(_QWORD *)v79 = v75;
  *((_QWORD *)v79 + 1) = v75;
  *(_QWORD *)&v77[v78] = v76;
  v264.receiver = v77;
  v264.super_class = v69;
  v80 = (char *)objc_msgSendSuper2(&v264, "init");
  v245 = (_BOOL8)v80;

  *(_QWORD *)&v80[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = v76;
  v81 = (char *)objc_msgSend(v243, "end");
  NSNotFound.getter(v81);
  v82 = *(_QWORD *)&v81[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
  v239 = *(_QWORD *)&v81[OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity];
  v83 = (char *)objc_allocWithZone(v69);
  v84 = OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity;
  *(_QWORD *)&v83[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = 0;
  *(_QWORD *)&v83[OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge] = 0;
  v85 = &v83[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
  *(_QWORD *)v85 = v82;
  *((_QWORD *)v85 + 1) = v82;
  v86 = v239;
  *(_QWORD *)&v83[v84] = v239;
  v263.receiver = v83;
  v263.super_class = v69;
  v236 = v69;
  v87 = (char *)objc_msgSendSuper2(&v263, "init");

  *(_QWORD *)&v87[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = v86;
  v239 = (unint64_t)v87;

  v88 = *(_QWORD *)&v243[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];
  v238 = *(id *)&v243[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
  v237 = v88;
  v89 = v249;
  v90 = v247;
  v91 = *(void **)&v247[(_QWORD)v249];
  v92 = sub_1004B804C((uint64_t *)&unk_1013EFC60);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v92 - 8) + 56))(v21, 1, 1, v92);
  v93 = sub_1004B804C(&qword_1013F3D40);
  (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 56))(v15, 1, 1, v93);
  sub_1004CB7BC((uint64_t)v21, (uint64_t)v18, (uint64_t *)&unk_1013EFCF0);
  sub_1004CB7BC((uint64_t)v15, (uint64_t)v12, (uint64_t *)&unk_1013F3DC0);
  v94 = objc_allocWithZone((Class)type metadata accessor for CRLWPReplaceTextCommand(0));
  v95 = v91;
  v96 = sub_1006BEFE0((uint64_t)v95, (uint64_t)v238, v237, 0, 0xE000000000000000, 0, (uint64_t)v18, (uint64_t)v12);
  sub_1004CB800((uint64_t)v15, (uint64_t *)&unk_1013F3DC0);
  v97 = (uint64_t)v21;
  v98 = v96;
  sub_1004CB800(v97, (uint64_t *)&unk_1013EFCF0);
  v15 = (uint64_t *)(v245 + OBJC_IVAR____TtC8Freeform12CRLTextRange_range);
  v99 = *(_QWORD *)(v245 + OBJC_IVAR____TtC8Freeform12CRLTextRange_range);
  v100 = *(_QWORD *)(v245 + OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8);
  v101 = swift_getKeyPath(&unk_100EFB880);
  v102 = (char *)*(id *)&v90[(_QWORD)v89];
  v103 = (void *)sub_100738CDC(v102, v99, v100, v101, v242);

  swift_release(v101);
  v104 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v105 = swift_allocObject(v104, 48, 7);
  *(_OWORD *)(v105 + 16) = xmmword_100EF5560;
  *(_QWORD *)(v105 + 32) = v98;
  *(_QWORD *)(v105 + 40) = v103;
  v266[0] = v105;
  specialized Array._endMutation()(v105);
  v262 = v266[0];
  v238 = v98;
  v242 = v103;
  if ((v246 & 1) == 0)
  {
    v106 = *(void **)(*(_QWORD *)&v90[(_QWORD)v89] + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
    if (v106)
    {
      v107 = v98;
      v108 = v242;
      v109 = v106;
      v110 = (char *)objc_msgSend((id)v245, "start");
      v111 = *(_QWORD *)&v110[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

      v112 = objc_msgSend(v109, "textRangeForParagraphAtCharIndex:", v111);
      v114 = v113;

      v115 = objc_allocWithZone(v236);
      v116 = sub_10060EDE4((uint64_t)v112, v114);
      v117 = *(void **)(*(_QWORD *)&v90[(_QWORD)v89] + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
      if (v117)
      {
        v12 = (char *)v116;
        v118 = *(_QWORD *)(v116 + OBJC_IVAR____TtC8Freeform12CRLTextRange_range);
        v119 = *(_QWORD *)(v116 + OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8);
        v120 = v117;
        sub_1007D7CB8(v118, v119, v266);

        v121 = (void *)v266[0];
        v122 = *(_QWORD *)(v266[0] + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData);
        if (v122)
        {
          v123 = v266[1];
          v124 = v266[2];
          (*(void (**)(void))(*(_QWORD *)v122 + 760))();
          v125 = v255;
          sub_1004D29BC(v7 + v5[5], v255);
          sub_1004B84A4(v7, type metadata accessor for CRLWPShapeItemCRDTData);
          v126 = sub_1004B804C((uint64_t *)&unk_1013E8570);
          v127 = v256;
          CRAttributedString.subscript.getter(v123, v124, v126);
          sub_1004B84A4(v125, type metadata accessor for CRLWPStorageCRDTData);
          v128 = v258;
          v129 = (void *)CRAttributedString.Substring.attributedString.getter(v258);
          (*(void (**)(char *, uint64_t))(v257 + 8))(v127, v128);
          v62 = (uint64_t *)objc_msgSend(v129, "string");

          if (v62)
          {

            v269 = v267;
            v270 = v268;
            sub_1005A73A4((id *)&v269);
            v130 = objc_msgSend(v62, "integerValue");
            v131 = *(void **)&v247[(_QWORD)v89];
            v132 = *v15;
            v133 = v15[1];
            v134 = swift_getKeyPath(&unk_100EFB8A0);
            v135 = v131;
            v136 = (void *)sub_100738EB8(v135, v132, v133, v134, (uint64_t)v130);

            swift_release(v134);
            v65 = v136;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v65);
            v7 = *(_QWORD *)((v262 & 0xFFFFFFFFFFFFFF8) + 0x10);
            v68 = *(_QWORD *)((v262 & 0xFFFFFFFFFFFFFF8) + 0x18);
            v5 = (int *)v248;
            v67 = &OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage;
            if (v7 < v68 >> 1)
            {
LABEL_28:
              v137 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v7, v65);
              specialized Array._endMutation()(v137);

              v138 = v244;
              v18 = &selRef_setTextResponderEditorTo_withFlags_;
              v139 = v241;
              goto LABEL_39;
            }
LABEL_86:
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v68 > 1, v7 + 1, 1);
            goto LABEL_28;
          }
LABEL_98:
          __break(1u);
LABEL_99:
          __break(1u);
LABEL_100:
          __break(1u);
          return;
        }
LABEL_97:
        __break(1u);
        goto LABEL_98;
      }
LABEL_96:
      __break(1u);
      goto LABEL_97;
    }
LABEL_95:
    __break(1u);
    goto LABEL_96;
  }
  v141 = v98;
  v142 = v103;
  v5 = (int *)v248;
  v67 = &OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage;
  v18 = &selRef_setTextResponderEditorTo_withFlags_;
  v139 = v241;
  v138 = v244;
LABEL_39:
  v31 = &OBJC_IVAR____TtC8Freeform15CRLTextPosition_location;
  if (v139 != (id)1)
    goto LABEL_65;
  v143 = v249;
  v144 = v247;
  v145 = *(void **)(*(_QWORD *)&v247[(_QWORD)v249] + *v67);
  if (!v145)
    goto LABEL_99;
  v146 = v145;
  v147 = (char *)objc_msgSend(v259, "start");
  v148 = *(_QWORD *)&v147[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

  LODWORD(v148) = objc_msgSend(v146, "isWritingDirectionRightToLeftForParagraphAtCharIndex:", v148);
  v7 = v148;
  v149 = *v15;
  v150 = v15[1];
  v151 = swift_getKeyPath(&unk_100EFB860);
  v152 = (char *)*(id *)&v144[(_QWORD)v143];
  v153 = (void *)sub_100738B04(v152, v149, v150, v151, v7);

  swift_release(v151);
  v12 = v153;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v12);
  v155 = *(_QWORD *)((v262 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v154 = *(_QWORD *)((v262 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v155 >= v154 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v154 > 1, v155 + 1, 1);
  v156 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v155, v12);
  specialized Array._endMutation()(v156);
  sub_100736D9C();
  v138 = v244;
  v158 = v251;
  v31 = &OBJC_IVAR____TtC8Freeform15CRLTextPosition_location;
  if (!v157)
  {
    v18 = &selRef_setTextResponderEditorTo_withFlags_;
    goto LABEL_64;
  }
  v159 = (uint64_t *)objc_msgSend(v157, "selectedTextRange");
  v18 = &selRef_setTextResponderEditorTo_withFlags_;
  if (!v159)
    goto LABEL_64;
  v30 = v159;
  v160 = (void *)swift_unknownObjectWeakLoadStrong(v158);
  if (!v160)
    goto LABEL_63;
  v161 = v160;
  v31 = (uint64_t *)objc_msgSend(v160, "layoutForInfo:", *(_QWORD *)&v247[(_QWORD)v249]);

  if (!v31)
    goto LABEL_62;
  v162 = objc_opt_self(CRLWPShapeLayout);
  if (!swift_dynamicCastObjCClass(v31, v162))
  {
    v7 = (unint64_t)v30;
    v180 = (uint64_t *)v12;
    v12 = (char *)v31;
    goto LABEL_61;
  }
  v163 = *(void **)(*(_QWORD *)&v247[(_QWORD)v249] + *v67);
  if (!v163)
    goto LABEL_100;
  v164 = v163;
  v165 = (char *)objc_msgSend(v30, "start");
  v166 = *(_QWORD *)&v165[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

  v167 = sub_1005034E0(v166);
  v169 = v168;

  if ((v169 & 1) != 0 || v167)
    goto LABEL_59;
  v170 = *(char **)&v247[(_QWORD)v249];
  v171 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  v172 = *(_QWORD *)&v170[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
  v173 = *(uint64_t (**)(__n128))(*(_QWORD *)v172 + 288);
  v259 = v170;
  v174 = swift_retain(v172);
  v175 = (void *)v173(v174);
  LODWORD(v172) = objc_msgSend(v175, "widthValid", swift_release(v172).n128_f64[0]);

  if (!(_DWORD)v172)
  {

    goto LABEL_57;
  }
  v176 = *(_QWORD *)&v170[v171];
  v177 = *(uint64_t (**)(__n128))(*(_QWORD *)v176 + 288);
  v178 = swift_retain(v176);
  v179 = (void *)v177(v178);
  LOBYTE(v176) = objc_msgSend(v179, "heightValid", swift_release(v176).n128_f64[0]);

  if ((v176 & 1) == 0)
  {
LABEL_57:
    v181 = *(char **)&v247[(_QWORD)v249];
    v182 = *(_QWORD *)&v181[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
    v183 = *(uint64_t (**)(__n128))(*(_QWORD *)v182 + 288);
    v184 = v181;
    v185 = swift_retain(v182);
    v186 = (void *)v183(v185);

    LOBYTE(v182) = objc_msgSend(v186, "widthValid", swift_release(v182).n128_f64[0]);
    if ((v182 & 1) == 0)
    {
      v187 = *(char **)&v247[(_QWORD)v249];
      v188 = *(_QWORD *)&v187[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
      v189 = *(uint64_t (**)(__n128))(*(_QWORD *)v188 + 288);
      v190 = v187;
      v191 = swift_retain(v188);
      v192 = (void *)v189(v191);

      LOBYTE(v188) = objc_msgSend(v192, "heightValid", swift_release(v188).n128_f64[0]);
      if ((v188 & 1) == 0)
      {
        sub_100758AD8(v240, v7);
        v223 = v244;
        objc_msgSend(v244, "setPosition:");
        v224 = *(char **)&v247[(_QWORD)v249];
        v225 = objc_allocWithZone((Class)type metadata accessor for CRLCommandSetInfoGeometry(0));
        v226 = *(_QWORD *)&v224[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
        v227 = *(void (**)(__n128))(*(_QWORD *)v226 + 256);
        v228 = v224;
        v229 = v223;
        v230 = swift_retain(v226);
        v231 = v252;
        v227(v230);
        swift_release(v226);
        isa = UUID._bridgeToObjectiveC()().super.isa;
        (*(void (**)(char *, uint64_t))(v253 + 8))(v231, v254);
        v233 = objc_msgSend(v225, "initWithId:geometry:", isa, v229);

        v7 = (unint64_t)v233;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v7);
        v18 = *(char ***)((v262 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v38 = *(_QWORD *)((v262 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if ((unint64_t)v18 >= v38 >> 1)
          goto LABEL_91;
        goto LABEL_84;
      }
    }
  }
LABEL_59:
  v7 = (unint64_t)v12;
  v180 = v31;
  v12 = (char *)v30;
  while (1)
  {
    v5 = (int *)v248;
    v67 = &OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage;
    v18 = &selRef_setTextResponderEditorTo_withFlags_;
LABEL_61:

    v30 = v180;
LABEL_62:
    v138 = v244;
    v31 = &OBJC_IVAR____TtC8Freeform15CRLTextPosition_location;
LABEL_63:

LABEL_64:
LABEL_65:
    v30 = (uint64_t *)v262;
    v12 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CRLCommandGroup()), "init");
    v193 = &v12[OBJC_IVAR____TtC8Freeform15CRLCommandGroup_commands];
    swift_beginAccess(&v12[OBJC_IVAR____TtC8Freeform15CRLCommandGroup_commands], v261, 1, 0);
    v194 = *(_QWORD *)v193;
    *(_QWORD *)v193 = v30;
    *(_QWORD *)&v195 = swift_bridgeObjectRelease(v194).n128_u64[0];
    v196 = (char *)objc_msgSend((id)v245, v18[507], v195);
    v197 = *(_QWORD *)&v196[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

    if (v197 == NSNotFound.getter(v198))
    {
      v199 = 0x7FFFFFFFFFFFFFFFLL;
      v200 = 0;
    }
    else
    {
      v199 = *v15;
      v38 = v15[1];
      v200 = v38 - *v15;
      if (__OFSUB__(v38, *v15))
      {
        __break(1u);
        goto LABEL_88;
      }
    }
    v7 = v239;
    v15 = (uint64_t *)v250;
    if (!*(_QWORD *)(*(_QWORD *)&v247[(_QWORD)v249] + *v67))
      goto LABEL_93;
    v201 = (uint64_t *)objc_msgSend(v250, "selectionPathForRange:onStorage:", v199, v200);
    if (!v201)
      goto LABEL_82;
    v30 = v201;
    v202 = (char *)objc_msgSend((id)v7, v18[507]);
    v31 = *(uint64_t **)&v202[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

    if (v31 == (uint64_t *)NSNotFound.getter(v203))
      break;
    v204 = *(_QWORD *)(v7 + OBJC_IVAR____TtC8Freeform12CRLTextRange_range);
    v206 = *(_QWORD *)(v7 + OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8);
    v207 = __OFSUB__(v206, v204);
    v205 = v206 - v204;
    v38 = (unint64_t)v249;
    if (!v207)
      goto LABEL_73;
LABEL_88:
    __break(1u);
LABEL_89:
    __break(1u);
LABEL_90:
    __break(1u);
LABEL_91:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v38 > 1, (char *)v18 + 1, 1);
LABEL_84:
    v234 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v7);
    specialized Array._endMutation()(v234);

    v180 = v30;
  }
  v204 = 0x7FFFFFFFFFFFFFFFLL;
  v205 = 0;
  v38 = (unint64_t)v249;
LABEL_73:
  if (!*(_QWORD *)(*(_QWORD *)&v247[v38] + *v67))
    goto LABEL_94;
  v208 = objc_msgSend(v15, "selectionPathForRange:onStorage:", v204, v205);
  if (v208)
  {
    v209 = v208;
    v210 = objc_msgSend(objc_allocWithZone((Class)CRLCommandSelectionBehavior), "initWithForwardSelectionPath:reverseSelectionPath:", v30, v208);
    sub_1006A5F54(v12, 0, v210, 4, 0);
    v211 = (void *)swift_unknownObjectWeakLoadStrong(v251);
    if (!v211)
      goto LABEL_79;
    v212 = v211;
    v213 = objc_msgSend(v211, "canvasView");

    if (!v213)
      goto LABEL_80;
    v214 = objc_msgSend(v213, "window");

    if (v214)
    {
      v260 = v214;
      v215 = sub_1004B8930(0, &qword_1013E4C58, UIWindow_ptr);
      v213 = (id)_bridgeAnythingToObjectiveC<A>(_:)(&v260, v215);

    }
    else
    {
LABEL_79:
      v213 = 0;
    }
LABEL_80:
    v216 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v217 = String._bridgeToObjectiveC()();
    v218 = String._bridgeToObjectiveC()();
    v219 = objc_msgSend(v216, "localizedStringForKey:value:table:", v217, v218, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v219);
    v221 = v220;

    v222 = (char *)String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v221);
    CRLAccessibilityPostAnnouncementNotification(v213, v222);

    swift_unknownObjectRelease(v213);
    v30 = (uint64_t *)v222;
    v5 = (int *)v248;
    v7 = v239;
    v15 = (uint64_t *)v250;
  }

  v138 = v244;
LABEL_82:

}

void sub_1005A62E0(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  void *Strong;
  id v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  char *v24;
  uint64_t v25;
  unsigned __int8 *v26;
  id v27;
  uint64_t KeyPath;
  void *v29;
  uint64_t v30;
  void *v31;
  id v32;
  id v33;
  void *v34;
  void *v35;
  id v36;
  char *v37;
  uint64_t v38;
  void *v39;
  id v40;
  char *v41;
  uint64_t v42;
  objc_class *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  id v67;
  id v68;
  void *v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  void *v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  id v81;
  id v82;
  uint64_t *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  id v90;
  id v91;
  id v92;
  id v93;
  uint64_t v94;
  id v95;
  void *v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  id v104;
  void *v105;
  id v106;
  void *v107;
  id v108;
  id v109;
  void *v110;
  uint64_t v111;
  id v112;
  NSString v113;
  NSString v114;
  id v115;
  uint64_t v116;
  uint64_t v117;
  NSString v118;
  id v119;
  char *v120;
  id v121;
  char *v122;
  _BYTE *v123;
  char *v124;
  id v125;
  id v126;
  uint64_t v127;
  id v128;
  uint64_t v129[3];
  objc_super v130;
  objc_super v131;
  objc_super v132;

  v4 = sub_1004B804C((uint64_t *)&unk_1013F3DC0);
  __chkstk_darwin(v4);
  v6 = (char *)&v119 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v119 - v8;
  v10 = sub_1004B804C((uint64_t *)&unk_1013EFCF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v119 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v119 - v14;
  v16 = (void *)(a1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc);
  v18 = objc_msgSend(Strong, "commandController");

  if (v18)
  {
    v19 = (void *)swift_unknownObjectWeakLoadStrong(v16);
    if (v19)
    {
      v20 = v19;
      v21 = objc_msgSend(v19, "selectionModelTranslator");

      v126 = v21;
      if (v21)
      {
        v127 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape;
        v22 = *(void **)(*(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                       + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
        if (!v22)
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          goto LABEL_42;
        }
        v23 = v22;
        v24 = (char *)objc_msgSend(a2, "start");
        v25 = *(_QWORD *)&v24[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

        v26 = (unsigned __int8 *)objc_msgSend(v23, "listStyleAtCharIndex:", v25);
        v125 = v18;
        if (v26)
        {
          v27 = v26;
          LODWORD(v123) = v26[OBJC_IVAR____TtC8Freeform14CRLWPListStyle_listType];

          v23 = v27;
        }
        else
        {
          LODWORD(v123) = 0;
        }

        KeyPath = swift_getKeyPath(&unk_100EFB860);
        sub_10072E544(KeyPath);
        swift_release(KeyPath);
        v29 = (void *)qword_1013E4C20;
        v30 = unk_1013E4C28;
        swift_bridgeObjectRetain(unk_1013E4C28);
        sub_100721004(a2, v29, v30, 0);
        swift_bridgeObjectRelease(v30);
        sub_100736D9C();
        if (!v31)
        {

          v93 = v125;
          goto LABEL_17;
        }
        v32 = objc_msgSend(v31, "selectedTextRange");
        v33 = v125;
        if (!v32)
        {

          return;
        }
        v34 = *(void **)(*(_QWORD *)(a1 + v127) + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
        if (!v34)
          goto LABEL_41;
        v35 = v32;
        v121 = v16;
        v36 = v34;
        v37 = (char *)objc_msgSend(v35, "start");
        v38 = *(_QWORD *)&v37[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

        v39 = v36;
        v40 = objc_msgSend(v36, "charIndexForParagraphAtIndex:", objc_msgSend(v36, "paragraphIndexAtCharIndex:", v38));
        v41 = (char *)objc_msgSend(v35, "end");
        v42 = *(_QWORD *)&v41[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

        if (v42 < (uint64_t)v40)
        {
          __break(1u);
        }
        else
        {
          v43 = (objc_class *)type metadata accessor for CRLTextRange();
          v44 = (char *)objc_allocWithZone(v43);
          v45 = OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity;
          *(_QWORD *)&v44[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = 0;
          *(_QWORD *)&v44[OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge] = 0;
          v46 = &v44[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
          *(_QWORD *)v46 = v40;
          *((_QWORD *)v46 + 1) = v42;
          *(_QWORD *)&v44[v45] = 0;
          v132.receiver = v44;
          v132.super_class = v43;
          v47 = (char *)objc_msgSendSuper2(&v132, "init");
          v124 = v47;

          v48 = (char *)objc_msgSend(v47, "start");
          NSNotFound.getter(v48);
          v49 = *(_QWORD *)&v48[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
          v50 = *(_QWORD *)&v48[OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity];
          v51 = (char *)objc_allocWithZone(v43);
          v52 = OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity;
          *(_QWORD *)&v51[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = 0;
          *(_QWORD *)&v51[OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge] = 0;
          v53 = &v51[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
          *(_QWORD *)v53 = v49;
          *((_QWORD *)v53 + 1) = v49;
          *(_QWORD *)&v51[v52] = v50;
          v131.receiver = v51;
          v131.super_class = v43;
          v54 = (char *)objc_msgSendSuper2(&v131, "init");
          v120 = v54;

          *(_QWORD *)&v54[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = v50;
          v55 = (char *)objc_msgSend(v124, "end");
          NSNotFound.getter(v55);
          v56 = *(_QWORD *)&v55[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
          v57 = *(_QWORD *)&v55[OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity];
          v58 = (char *)objc_allocWithZone(v43);
          v59 = OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity;
          *(_QWORD *)&v58[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = 0;
          *(_QWORD *)&v58[OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge] = 0;
          v60 = &v58[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
          *(_QWORD *)v60 = v56;
          *((_QWORD *)v60 + 1) = v56;
          *(_QWORD *)&v58[v59] = v57;
          v130.receiver = v58;
          v130.super_class = v43;
          v61 = (char *)objc_msgSendSuper2(&v130, "init");

          *(_QWORD *)&v61[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = v57;
          v122 = v61;

          v62 = *(_QWORD *)&v124[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];
          v119 = *(id *)&v124[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
          v63 = *(void **)(a1 + v127);
          v64 = sub_1004B804C((uint64_t *)&unk_1013EFC60);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v15, 1, 1, v64);
          v65 = sub_1004B804C(&qword_1013F3D40);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56))(v9, 1, 1, v65);
          sub_1004CB7BC((uint64_t)v15, (uint64_t)v12, (uint64_t *)&unk_1013EFCF0);
          sub_1004CB7BC((uint64_t)v9, (uint64_t)v6, (uint64_t *)&unk_1013F3DC0);
          v66 = objc_allocWithZone((Class)type metadata accessor for CRLWPReplaceTextCommand(0));
          v67 = v63;
          v68 = sub_1006BEFE0((uint64_t)v67, (uint64_t)v119, v62, 0, 0xE000000000000000, 0, (uint64_t)v12, (uint64_t)v6);
          sub_1004CB800((uint64_t)v9, (uint64_t *)&unk_1013F3DC0);
          sub_1004CB800((uint64_t)v15, (uint64_t *)&unk_1013EFCF0);
          v69 = v120;
          v70 = (uint64_t *)&v120[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
          v71 = *(_QWORD *)&v120[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
          v72 = *(_QWORD *)&v120[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];
          v73 = swift_getKeyPath(&unk_100EFB880);
          v74 = (char *)*(id *)(a1 + v127);
          v75 = (void *)sub_100738CDC(v74, v71, v72, v73, v123);

          v76 = v73;
          v77 = v69;
          swift_release(v76);
          v78 = sub_1004B804C((uint64_t *)&unk_1013E4180);
          v79 = swift_allocObject(v78, 48, 7);
          *(_OWORD *)(v79 + 16) = xmmword_100EF5560;
          *(_QWORD *)(v79 + 32) = v68;
          *(_QWORD *)(v79 + 40) = v75;
          v129[0] = v79;
          specialized Array._endMutation()(v79);
          v80 = v129[0];
          v81 = objc_allocWithZone((Class)type metadata accessor for CRLCommandGroup());
          v82 = v68;
          v119 = v75;
          v123 = objc_msgSend(v81, "init");
          v83 = (uint64_t *)&v123[OBJC_IVAR____TtC8Freeform15CRLCommandGroup_commands];
          swift_beginAccess(&v123[OBJC_IVAR____TtC8Freeform15CRLCommandGroup_commands], v129, 1, 0);
          v84 = *v83;
          *v83 = v80;
          v85 = (char *)objc_msgSend(v69, "start", swift_bridgeObjectRelease(v84).n128_f64[0]);
          v86 = *(_QWORD *)&v85[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

          if (v86 == NSNotFound.getter(v87))
          {
            v88 = 0x7FFFFFFFFFFFFFFFLL;
            v89 = 0;
            v90 = v125;
            v91 = v126;
            v92 = v121;
LABEL_20:
            if (!*(_QWORD *)(*(_QWORD *)(a1 + v127) + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage))
            {
LABEL_42:
              __break(1u);
LABEL_43:
              __break(1u);
              return;
            }
            v95 = objc_msgSend(v91, "selectionPathForRange:onStorage:", v88, v89);
            if (!v95)
            {

LABEL_36:
              return;
            }
            v96 = v95;
            v121 = v82;
            v97 = v122;
            v98 = (char *)objc_msgSend(v122, "start");
            v99 = *(_QWORD *)&v98[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

            if (v99 == NSNotFound.getter(v100))
            {
              v101 = 0x7FFFFFFFFFFFFFFFLL;
              v102 = 0;
              goto LABEL_26;
            }
            v101 = *(_QWORD *)&v97[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
            v103 = *(_QWORD *)&v97[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];
            v102 = v103 - v101;
            if (!__OFSUB__(v103, v101))
            {
LABEL_26:
              if (*(_QWORD *)(*(_QWORD *)(a1 + v127) + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage))
              {
                v104 = objc_msgSend(v91, "selectionPathForRange:onStorage:", v101, v102);
                if (v104)
                {
                  v105 = v104;
                  v106 = objc_msgSend(objc_allocWithZone((Class)CRLCommandSelectionBehavior), "initWithForwardSelectionPath:reverseSelectionPath:", v96, v104);
                  sub_1006A5F54(v123, 0, v106, 4, 0);
                  v107 = (void *)swift_unknownObjectWeakLoadStrong(v92);
                  v108 = v107;
                  if (v107)
                  {
                    v109 = objc_msgSend(v107, "canvasView");

                    v82 = v121;
                    if (v109)
                    {
                      v108 = objc_msgSend(v109, "window");

                      v110 = v77;
                      if (v108)
                      {
                        v128 = v108;
                        v111 = sub_1004B8930(0, &qword_1013E4C58, UIWindow_ptr);
                        v108 = (id)_bridgeAnythingToObjectiveC<A>(_:)(&v128, v111);

                      }
                    }
                    else
                    {
                      v110 = v77;
                      v108 = 0;
                    }
                  }
                  else
                  {
                    v110 = v77;
                    v82 = v121;
                  }
                  v112 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
                  v113 = String._bridgeToObjectiveC()();
                  v114 = String._bridgeToObjectiveC()();
                  v115 = objc_msgSend(v112, "localizedStringForKey:value:table:", v113, v114, 0);

                  static String._unconditionallyBridgeFromObjectiveC(_:)(v115);
                  v117 = v116;

                  v118 = String._bridgeToObjectiveC()();
                  swift_bridgeObjectRelease(v117);
                  CRLAccessibilityPostAnnouncementNotification(v108, v118);

                  swift_unknownObjectRelease(v108);
                  goto LABEL_36;
                }

                v93 = v121;
LABEL_17:

                return;
              }
              goto LABEL_43;
            }
            goto LABEL_39;
          }
          v88 = *v70;
          v94 = v70[1];
          v89 = v94 - *v70;
          v90 = v125;
          v91 = v126;
          v92 = v121;
          if (!__OFSUB__(v94, *v70))
            goto LABEL_20;
        }
        __break(1u);
LABEL_39:
        __break(1u);
        goto LABEL_40;
      }
    }

  }
}

void sub_1005A6DE4(uint64_t a1, void *a2)
{
  uint64_t v2;
  void *v3;
  id v6;
  char *v7;
  uint64_t v8;
  unsigned __int8 *v9;
  void *v10;
  int v11;
  void *v12;
  id v13;
  char *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t KeyPath;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  char *v31;
  _BYTE *v32;
  void *Strong;
  id v34;
  id v35;
  void *v36;
  void *v37;
  id v38;
  id v39;
  uint64_t v40;
  id v41;
  NSString v42;
  NSString v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  NSString v47;
  id v48;

  v2 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape;
  v3 = *(void **)(*(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v3)
  {
    __break(1u);
    goto LABEL_25;
  }
  v6 = v3;
  v7 = (char *)objc_msgSend(a2, "start");
  v8 = *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

  v9 = (unsigned __int8 *)objc_msgSend(v6, "listStyleAtCharIndex:", v8);
  if (!v9)
  {

    return;
  }
  v10 = v9;
  v11 = v9[OBJC_IVAR____TtC8Freeform14CRLWPListStyle_listType];

  if (!v11)
    return;
  v12 = *(void **)(*(_QWORD *)(a1 + v2) + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v12)
  {
LABEL_25:
    __break(1u);
    return;
  }
  v13 = v12;
  v14 = (char *)objc_msgSend(a2, "start");
  v15 = *(_QWORD *)&v14[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

  sub_1007CB480(v15);
  v17 = v16;
  v19 = v18;
  v21 = v20;

  if (v17)
  {

    swift_bridgeObjectRelease(v21);
    v22 = HIBYTE(v21) & 0xF;
    if ((v21 & 0x2000000000000000) == 0)
      v22 = v19 & 0xFFFFFFFFFFFFLL;
    if (!v22)
    {
      sub_100721108();
      if (v23 >= 1)
      {
        sub_100721234(-1);
        return;
      }
      KeyPath = swift_getKeyPath(&unk_100EFB880);
      v25 = sub_10073138C();
      if (v25)
      {
        v26 = v25;
        v27 = *(_QWORD *)&v25[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
        v28 = *(_QWORD *)&v25[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];
        v29 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a1
                                                                    + OBJC_IVAR____TtC8Freeform11CRLWPEditor_editorController), "selectionPath"));
        v30 = objc_msgSend(objc_allocWithZone((Class)CRLCommandSelectionBehavior), "initWithCommitSelectionPath:forwardSelectionPath:reverseSelectionPath:", v29, v29, v29);
        v31 = (char *)*(id *)(a1 + v2);
        swift_retain(KeyPath);
        v32 = (_BYTE *)sub_100738CDC(v31, v27, v28, KeyPath, 0);

        swift_release(KeyPath);
        Strong = (void *)swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc);
        v34 = objc_msgSend(Strong, "commandController");

        if (v34)
        {
          v35 = v30;
          sub_1006A5F54(v32, 0, v30, 4, 0);

        }
        sub_100732578(KeyPath);
        swift_release(KeyPath);

      }
      else
      {
        sub_100757E04(&_mh_execute_header, (uint64_t)"setAttributeValue(_:value:)", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2, 2939, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"setAttributeValue(_:value:)", 27, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2u, 2939, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
        swift_release(KeyPath);
      }
      v36 = (void *)swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc);
      if (v36)
      {
        v37 = v36;
        v38 = objc_msgSend(v36, "canvasView");

        if (!v38)
        {
LABEL_23:
          v41 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
          v42 = String._bridgeToObjectiveC()();
          v43 = String._bridgeToObjectiveC()();
          v44 = objc_msgSend(v41, "localizedStringForKey:value:table:", v42, v43, 0);

          static String._unconditionallyBridgeFromObjectiveC(_:)(v44);
          v46 = v45;

          v47 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v46);
          CRLAccessibilityPostAnnouncementNotification(v38, v47);
          swift_unknownObjectRelease(v38);

          return;
        }
        v39 = objc_msgSend(v38, "window");

        if (v39)
        {
          v48 = v39;
          v40 = sub_1004B8930(0, &qword_1013E4C58, UIWindow_ptr);
          v38 = (id)_bridgeAnythingToObjectiveC<A>(_:)(&v48, v40);

          goto LABEL_23;
        }
      }
      v38 = 0;
      goto LABEL_23;
    }
  }
}

uint64_t sub_1005A72C4(uint64_t result, void *a2)
{
  void *v2;
  id v4;
  char *v5;
  uint64_t v6;
  unsigned __int8 *v7;
  void *v8;
  int v9;
  uint64_t v10;

  v2 = *(void **)(*(_QWORD *)(result + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (v2)
  {
    v4 = v2;
    v5 = (char *)objc_msgSend(a2, "start");
    v6 = *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

    v7 = (unsigned __int8 *)objc_msgSend(v4, "listStyleAtCharIndex:", v6);
    if (v7)
    {
      v8 = v7;
      v9 = v7[OBJC_IVAR____TtC8Freeform14CRLWPListStyle_listType];

      if (v9)
      {
        v10 = 1;
        sub_100721234(1);
        return v10;
      }
    }
    else
    {

    }
    return 0;
  }
  __break(1u);
  return result;
}

id *sub_1005A73A4(id *a1)
{

  return a1;
}

_BYTE *sub_1005A747C(_BYTE *result)
{
  void *v1;

  if (result[OBJC_IVAR____TtC8Freeform31CRLSimpleProgressViewController_isPresented] == 1)
    return objc_msgSend(v1, "dismissViewControllerAnimated:completion:", 1, 0);
  return result;
}

void sub_1005A74BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  _QWORD v13[3];

  v4 = sub_1004B804C(&qword_1013E4CA8);
  NSKeyValueObservedChange.newValue.getter(v13, v4);
  if (LOBYTE(v13[0]) != 2 && (v13[0] & 1) != 0)
  {
    v5 = a3 + 16;
    swift_beginAccess(v5, v13, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v5);
    if (Strong)
    {
      v7 = (void *)Strong;
      v8 = Strong + OBJC_IVAR____TtC8Freeform31CRLSimpleProgressViewController_delegate;
      v9 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC8Freeform31CRLSimpleProgressViewController_delegate);
      if (v9)
      {
        v10 = v9;
        v11 = *(_QWORD *)(v8 + 8);
        ObjectType = swift_getObjectType(v9);
        (*(void (**)(void *, uint64_t, uint64_t))(v11 + 8))(v7, ObjectType, v11);

        swift_unknownObjectRelease(v10);
      }
      else
      {

      }
    }
  }
}

void sub_1005A76F4()
{
  char *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  Class isa;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  Class v32;
  id v33;
  id v34;

  v1 = v0;
  v2 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v3 = *(void **)&v0[OBJC_IVAR____TtC8Freeform31CRLSimpleProgressViewController_progress];
  if (objc_msgSend(v3, "isIndeterminate"))
  {
    v34 = objc_msgSend(objc_allocWithZone((Class)UIActivityIndicatorView), "init");
    objc_msgSend(v34, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(v34, "startAnimating");
    objc_msgSend(v2, "addSubview:", v34);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)UIProgressView), "init");
    objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(v4, "setObservedProgress:", v3);
    objc_msgSend(v2, "addSubview:", v4);
    v5 = (void *)objc_opt_self(NSLayoutConstraint);
    v6 = sub_1004B804C((uint64_t *)&unk_1013E4180);
    v7 = swift_allocObject(v6, 48, 7);
    *(_OWORD *)(v7 + 16) = xmmword_100EF5560;
    v34 = v4;
    v8 = objc_msgSend(v34, "leadingAnchor");
    v9 = objc_msgSend(v2, "leadingAnchor");
    v10 = objc_msgSend(v8, "constraintEqualToSystemSpacingAfterAnchor:multiplier:", v9, 1.0);

    *(_QWORD *)(v7 + 32) = v10;
    v11 = objc_msgSend(v2, "trailingAnchor");
    v12 = objc_msgSend(v34, "trailingAnchor");
    v13 = objc_msgSend(v11, "constraintEqualToSystemSpacingAfterAnchor:multiplier:", v12, 1.0);

    *(_QWORD *)(v7 + 40) = v13;
    specialized Array._endMutation()(v14);
    sub_1004DD8D8();
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v5, "activateConstraints:", isa, swift_bridgeObjectRelease(v7).n128_f64[0]);

  }
  v16 = (void *)objc_opt_self(NSLayoutConstraint);
  v17 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v18 = swift_allocObject(v17, 64, 7);
  *(_OWORD *)(v18 + 16) = xmmword_100EF7310;
  v19 = objc_msgSend(v34, "centerYAnchor");
  v20 = objc_msgSend(v2, "centerYAnchor");
  v21 = objc_msgSend(v19, "constraintEqualToAnchor:", v20);

  *(_QWORD *)(v18 + 32) = v21;
  v22 = objc_msgSend(v34, "centerXAnchor");
  v23 = objc_msgSend(v2, "centerXAnchor");
  v24 = objc_msgSend(v22, "constraintEqualToAnchor:", v23);

  *(_QWORD *)(v18 + 40) = v24;
  v25 = objc_msgSend(v34, "topAnchor");
  v26 = objc_msgSend(v2, "topAnchor");
  v27 = objc_msgSend(v25, "constraintGreaterThanOrEqualToAnchor:", v26);

  *(_QWORD *)(v18 + 48) = v27;
  v28 = objc_msgSend(v2, "bottomAnchor");
  v29 = objc_msgSend(v34, "bottomAnchor");
  v30 = objc_msgSend(v28, "constraintGreaterThanOrEqualToAnchor:", v29);

  *(_QWORD *)(v18 + 56) = v30;
  specialized Array._endMutation()(v31);
  sub_1004DD8D8();
  v32 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v16, "activateConstraints:", v32, swift_bridgeObjectRelease(v18).n128_f64[0]);

  v33 = v2;
  objc_msgSend(v1, "setView:", v33);

}

id sub_1005A7BE0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLSimpleProgressViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLSimpleProgressViewController()
{
  return objc_opt_self(_TtC8Freeform31CRLSimpleProgressViewController);
}

id sub_1005A7C78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  NSString v10;
  NSString v11;
  id v12;
  objc_class *v13;
  _BYTE *v14;
  char *v15;
  id v16;
  char *v17;
  uint64_t KeyPath;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  char *v22;
  objc_super v24;

  if (!a2)
  {
    swift_bridgeObjectRetain(a4);
    v10 = 0;
    if (a4)
      goto LABEL_3;
LABEL_5:
    v11 = 0;
    goto LABEL_6;
  }
  swift_bridgeObjectRetain(a4);
  swift_bridgeObjectRetain(a2);
  v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  if (!a4)
    goto LABEL_5;
LABEL_3:
  v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a4);
LABEL_6:
  v12 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v10, v11, a5);

  v13 = (objc_class *)type metadata accessor for CRLSimpleProgressViewController();
  v14 = objc_allocWithZone(v13);
  *(_QWORD *)&v14[OBJC_IVAR____TtC8Freeform31CRLSimpleProgressViewController_progressObservation] = 0;
  v15 = &v14[OBJC_IVAR____TtC8Freeform31CRLSimpleProgressViewController_delegate];
  *((_QWORD *)v15 + 1) = 0;
  swift_unknownObjectWeakInit(v15);
  v14[OBJC_IVAR____TtC8Freeform31CRLSimpleProgressViewController_isPresented] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC8Freeform31CRLSimpleProgressViewController_progress] = a6;
  v24.receiver = v14;
  v24.super_class = v13;
  v16 = a6;
  v17 = (char *)objc_msgSendSuper2(&v24, "initWithNibName:bundle:", 0, 0);
  KeyPath = swift_getKeyPath(&unk_100EFB950);
  v19 = swift_allocObject(&unk_10126E890, 24, 7);
  swift_unknownObjectWeakInit(v19 + 16);
  v20 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)(KeyPath, 1, sub_1005A7EF8, v19, &protocol witness table for NSObject);

  swift_release(v19);
  swift_release(KeyPath);
  v21 = *(void **)&v17[OBJC_IVAR____TtC8Freeform31CRLSimpleProgressViewController_progressObservation];
  *(_QWORD *)&v17[OBJC_IVAR____TtC8Freeform31CRLSimpleProgressViewController_progressObservation] = v20;

  v22 = &v17[OBJC_IVAR____TtC8Freeform31CRLSimpleProgressViewController_delegate];
  *((_QWORD *)v22 + 1) = &off_10126E870;
  swift_unknownObjectWeakAssign(v22, v12);
  objc_msgSend(v12, "crl_setContentViewController:", v17);

  return v12;
}

const char *sub_1005A7E98()
{
  return "isCancelled";
}

id sub_1005A7EA4@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "isCancelled");
  *a2 = (_BYTE)result;
  return result;
}

uint64_t sub_1005A7ED4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1005A7EF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1005A74BC(a1, a2, v2);
}

uint64_t destroy for CRLBoardAuxiliaryRealTimeChange(uint64_t a1)
{
  return sub_1004BBBC8(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16));
}

uint64_t initializeWithCopy for CRLBoardAuxiliaryRealTimeChange(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  sub_1004BE310(v4, v5);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t assignWithCopy for CRLBoardAuxiliaryRealTimeChange(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  sub_1004BE310(v4, v5);
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  sub_1004BBBC8(v6, v7);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

__n128 initializeWithCopy for CRLBoardLibraryFolderViewModel.TimeBucket(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for CRLBoardAuxiliaryRealTimeChange(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  sub_1004BBBC8(v4, v5);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLBoardAuxiliaryRealTimeChange(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 24);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLBoardAuxiliaryRealTimeChange(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardAuxiliaryRealTimeChange()
{
  return &type metadata for CRLBoardAuxiliaryRealTimeChange;
}

Swift::Int sub_1005A80BC()
{
  unsigned __int8 *v0;
  int v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(v1 + 5);
  return Hasher._finalize()();
}

void sub_1005A8100()
{
  unsigned __int8 *v0;

  Hasher._combine(_:)(*v0 + 5);
}

Swift::Int sub_1005A812C(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(v2 + 5);
  return Hasher._finalize()();
}

uint64_t sub_1005A816C@<X0>(int *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_1005A9378(*a1);
  *a2 = result;
  return result;
}

void sub_1005A8194(_DWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1 + 5;
}

uint64_t sub_1005A81A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1005A9B50();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_1005A8200(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1005A9B50();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

void sub_1005A824C(_QWORD *a1@<X8>)
{
  *a1 = &off_101264490;
}

uint64_t sub_1005A825C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  unint64_t v31;
  _BYTE *v32;
  __n128 v33;
  unsigned __int8 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _OWORD v52[2];
  uint64_t v53;
  unint64_t v54;

  v45 = a3;
  v5 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  __chkstk_darwin(v5);
  v46 = (uint64_t)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = type metadata accessor for CRLProto_Data(0);
  v48 = *(_QWORD *)(v50 - 8);
  __chkstk_darwin(v50);
  v47 = (uint64_t *)((char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_1004B804C(&qword_1013E4CB8);
  __chkstk_darwin(v8);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = type metadata accessor for CRLProto_BoardIdentifier(0);
  v49 = *(_QWORD *)(v51 - 8);
  __chkstk_darwin(v51);
  v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for BinaryDecodingOptions(0, v14);
  __chkstk_darwin(v17);
  v19 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for CRLProto_RealTimeBoardAuxiliaryChangeRecord(0);
  __chkstk_darwin(v20);
  v22 = (int *)((char *)&v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v53 = 0;
  memset(v52, 0, sizeof(v52));
  v23 = sub_1004BE310(a1, a2);
  BinaryDecodingOptions.init()(v23);
  v24 = sub_1004B7878(&qword_1013E4CC0, type metadata accessor for CRLProto_RealTimeBoardAuxiliaryChangeRecord, (uint64_t)&unk_100F23970);
  v25 = v54;
  Message.init(serializedData:extensions:partial:options:)(a1, a2, v52, 0, v19, v20, v24);
  if (v25)
    return sub_1004BBBC8(a1, a2);
  v27 = v50;
  v54 = a2;
  v28 = (uint64_t)v22;
  sub_1004CB7BC((uint64_t)v22 + *(int *)(v20 + 24), (uint64_t)v10, &qword_1013E4CB8);
  v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v49 + 48))(v10, 1, v51);
  if ((_DWORD)v29 == 1)
  {
    UnknownStorage.init()(v29);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v48 + 56))(&v12[*(int *)(v51 + 20)], 1, 1, v27);
    sub_1004CB800((uint64_t)v10, &qword_1013E4CB8);
  }
  else
  {
    sub_1004B84E0((uint64_t)v10, (uint64_t)v12, type metadata accessor for CRLProto_BoardIdentifier);
  }
  sub_10067AE14((uint64_t)v12, (uint64_t)v16);
  v30 = sub_1005A9378(*v22);
  if (v30 == 12)
  {
    v31 = sub_100577444();
    swift_allocError(&type metadata for CRLSerializationError, v31, 0, 0);
    *v32 = 1;
    swift_willThrow(v33);
    sub_1004BBBC8(a1, v54);
    sub_1004B84A4((uint64_t)v16, type metadata accessor for CRLGloballyScopedBoardIdentifier);
    return sub_1004B84A4((uint64_t)v22, type metadata accessor for CRLProto_RealTimeBoardAuxiliaryChangeRecord);
  }
  else
  {
    v34 = v30;
    v35 = (uint64_t)v22 + *(int *)(v20 + 28);
    v36 = v46;
    sub_1004CB7BC(v35, v46, (uint64_t *)&unk_1013E16F0);
    v37 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v48 + 48))(v36, 1, v27);
    v38 = v45;
    v39 = v54;
    v40 = v47;
    if ((_DWORD)v37 == 1)
    {
      *(_OWORD *)v47 = xmmword_100EF78C0;
      UnknownStorage.init()(v37);
      sub_1004CB800(v36, (uint64_t *)&unk_1013E16F0);
    }
    else
    {
      sub_1004B84E0(v36, (uint64_t)v47, type metadata accessor for CRLProto_Data);
    }
    sub_1004BBBC8(a1, v39);
    sub_1004B84A4(v28, type metadata accessor for CRLProto_RealTimeBoardAuxiliaryChangeRecord);
    v41 = *v40;
    v42 = v40[1];
    sub_1004BE310(*v40, v42);
    sub_1004B84A4((uint64_t)v40, type metadata accessor for CRLProto_Data);
    sub_1004B84E0((uint64_t)v16, v38, type metadata accessor for CRLGloballyScopedBoardIdentifier);
    result = type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecord(0);
    *(_DWORD *)(v38 + *(int *)(result + 20)) = v34 + 5;
    v43 = (uint64_t *)(v38 + *(int *)(result + 24));
    *v43 = v41;
    v43[1] = v42;
  }
  return result;
}

uint64_t (*sub_1005A8710())(void)
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _DWORD *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t (*v27)(void);
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(void);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _DWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(void);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  unint64_t v53;
  __int128 *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _DWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t (*v68)(void);
  char *v69;
  uint64_t v70;
  __int128 *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  _OWORD *v77;
  __int128 v78;
  uint64_t v79;
  uint64_t v80;

  v1 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  __chkstk_darwin(v1);
  v75 = (char *)&v62 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v70 = (uint64_t)&v62 - v4;
  v5 = type metadata accessor for CRLProto_Data(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v71 = (__int128 *)((char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v8);
  v77 = (_OWORD *)((char *)&v62 - v9);
  __chkstk_darwin(v10);
  v69 = (char *)&v62 - v11;
  v12 = sub_1004B804C(&qword_1013E4CB8);
  __chkstk_darwin(v12);
  v74 = (uint64_t)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for CRLProto_BoardIdentifier(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  *(_QWORD *)&v78 = (char *)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v62 - v18;
  v20 = type metadata accessor for CRLProto_RealTimeBoardAuxiliaryChangeRecord(0);
  __chkstk_darwin(v20);
  v22 = (_DWORD *)((char *)&v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v22 = 0;
  UnknownStorage.init()(v23);
  v24 = (uint64_t)v22 + *(int *)(v20 + 24);
  v72 = v15;
  v25 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v25(v24, 1, 1, v14);
  v26 = *(int *)(v20 + 28);
  v76 = v6;
  v27 = *(uint64_t (**)(void))(v6 + 56);
  v79 = (uint64_t)v22 + v26;
  v28 = v27();
  UnknownStorage.init()(v28);
  v29 = &v19[*(int *)(v14 + 20)];
  v73 = v5;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v27)(v29, 1, 1, v5);
  sub_1004CB800(v24, &qword_1013E4CB8);
  sub_1004B84E0((uint64_t)v19, v24, type metadata accessor for CRLProto_BoardIdentifier);
  v25(v24, 0, 1, v14);
  v30 = v80;
  v31 = sub_10067BA88();
  v80 = v30;
  if (v30)
    goto LABEL_12;
  v64 = v32;
  v65 = v31;
  v66 = v25;
  v67 = v0;
  v62 = v22;
  v63 = v20;
  v33 = (uint64_t (*)(void))v73;
  v34 = v74;
  v68 = v27;
  v35 = (uint64_t)v75;
  sub_1004CB7BC(v24, v74, &qword_1013E4CB8);
  v36 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v72 + 48))(v34, 1, v14);
  v37 = v14;
  v38 = v78;
  if ((_DWORD)v36 == 1)
  {
    UnknownStorage.init()(v36);
    v27 = v33;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t (*)(void)))v68)(v38 + *(int *)(v37 + 20), 1, 1, v33);
    sub_1004CB800(v34, &qword_1013E4CB8);
  }
  else
  {
    sub_1004B84E0(v34, v78, type metadata accessor for CRLProto_BoardIdentifier);
    v27 = v33;
  }
  v39 = (uint64_t)v69;
  v40 = v70;
  v41 = v62;
  v42 = v38 + *(int *)(v37 + 20);
  sub_1004CB7BC(v42, v70, (uint64_t *)&unk_1013E16F0);
  v76 = *(_QWORD *)(v76 + 48);
  v43 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t (*)(void)))v76)(v40, 1, v27);
  if ((_DWORD)v43 == 1)
  {
    *(_OWORD *)v39 = xmmword_100EF78C0;
    UnknownStorage.init()(v43);
    sub_1004CB800(v40, (uint64_t *)&unk_1013E16F0);
  }
  else
  {
    sub_1004B84E0(v40, v39, type metadata accessor for CRLProto_Data);
  }
  sub_1004BBBC8(*(_QWORD *)v39, *(_QWORD *)(v39 + 8));
  v44 = v64;
  *(_QWORD *)v39 = v65;
  *(_QWORD *)(v39 + 8) = v44;
  sub_1004CB800(v42, (uint64_t *)&unk_1013E16F0);
  sub_1004B84E0(v39, v42, type metadata accessor for CRLProto_Data);
  v45 = v42;
  v46 = v68;
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t (*)(void)))v68)(v45, 0, 1, v27);
  sub_1004CB800(v24, &qword_1013E4CB8);
  sub_1004B84E0(v78, v24, type metadata accessor for CRLProto_BoardIdentifier);
  v66(v24, 0, 1, v37);
  v47 = type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecord(0);
  v48 = v67;
  *v41 = *(_DWORD *)(v67 + *(int *)(v47 + 20));
  v49 = (uint64_t)v77;
  v78 = xmmword_100EF78C0;
  *v77 = xmmword_100EF78C0;
  UnknownStorage.init()(v47);
  v50 = v79;
  sub_1004CB800(v79, (uint64_t *)&unk_1013E16F0);
  sub_1004B84E0(v49, v50, type metadata accessor for CRLProto_Data);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t (*)(void)))v46)(v50, 0, 1, v27);
  v51 = (uint64_t *)(v48 + *(int *)(v47 + 24));
  v52 = *v51;
  v53 = v51[1];
  sub_1004CB7BC(v50, v35, (uint64_t *)&unk_1013E16F0);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t (*)(void)))v76)(v35, 1, v27) == 1)
  {
    v54 = v71;
    *v71 = v78;
    v55 = sub_1004BE310(v52, v53);
    UnknownStorage.init()(v55);
    sub_1004CB800(v35, (uint64_t *)&unk_1013E16F0);
  }
  else
  {
    v54 = v71;
    sub_1004B84E0(v35, (uint64_t)v71, type metadata accessor for CRLProto_Data);
    sub_1004BE310(v52, v53);
  }
  v56 = v63;
  v57 = v80;
  sub_1004BBBC8(*(_QWORD *)v54, *((_QWORD *)v54 + 1));
  *(_QWORD *)v54 = v52;
  *((_QWORD *)v54 + 1) = v53;
  v58 = v79;
  sub_1004CB800(v79, (uint64_t *)&unk_1013E16F0);
  sub_1004B84E0((uint64_t)v54, v58, type metadata accessor for CRLProto_Data);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t (*)(void)))v46)(v58, 0, 1, v27);
  v59 = sub_1004B7878(&qword_1013E4CC0, type metadata accessor for CRLProto_RealTimeBoardAuxiliaryChangeRecord, (uint64_t)&unk_100F23970);
  v60 = Message.serializedData(partial:)(0, v56, v59);
  v80 = v57;
  v22 = v41;
  if (v57)
  {
LABEL_12:
    sub_1004B84A4((uint64_t)v22, type metadata accessor for CRLProto_RealTimeBoardAuxiliaryChangeRecord);
  }
  else
  {
    v27 = (uint64_t (*)(void))v60;
    sub_1004B84A4((uint64_t)v41, type metadata accessor for CRLProto_RealTimeBoardAuxiliaryChangeRecord);
  }
  return v27;
}

uint64_t sub_1005A8D50(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v18;
  char v19;
  __int128 v20;

  v3 = v1;
  v5 = sub_1004B804C(&qword_1013E4D98);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_1005A9B0C();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLBoardAuxiliaryRealTimeChangeRecord.CodingKeys, &type metadata for CRLBoardAuxiliaryRealTimeChangeRecord.CodingKeys, v11, v9, v10);
  LOBYTE(v20) = 0;
  v12 = type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  v13 = sub_1004B7878(&qword_1013DF560, type metadata accessor for CRLGloballyScopedBoardIdentifier, (uint64_t)&unk_100F02410);
  KeyedEncodingContainer.encode<A>(_:forKey:)(v3, &v20, v5, v12, v13);
  if (!v2)
  {
    v14 = type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecord(0);
    v15 = *(unsigned int *)(v3 + *(int *)(v14 + 20));
    LOBYTE(v20) = 1;
    KeyedEncodingContainer.encode(_:forKey:)(v15, &v20, v5);
    v20 = *(_OWORD *)(v3 + *(int *)(v14 + 24));
    v19 = 2;
    v16 = sub_100587C2C();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v20, &v19, v5, &type metadata for Data, v16);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1005A8EE8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  __int128 v26;
  char v27;

  v22 = a2;
  v23 = type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  __chkstk_darwin(v23);
  v24 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_1004B804C(&qword_1013E4D88);
  v5 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecord(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1[3];
  v12 = a1[4];
  sub_1004BB5A4(a1, v11);
  v13 = sub_1005A9B0C();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLBoardAuxiliaryRealTimeChangeRecord.CodingKeys, &type metadata for CRLBoardAuxiliaryRealTimeChangeRecord.CodingKeys, v13, v11, v12);
  if (v2)
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  v21 = a1;
  v14 = (uint64_t)v10;
  LOBYTE(v26) = 0;
  v15 = sub_1004B7878(&qword_1013DF550, type metadata accessor for CRLGloballyScopedBoardIdentifier, (uint64_t)&unk_100F02438);
  v16 = (uint64_t)v24;
  v17 = v25;
  KeyedDecodingContainer.decode<A>(_:forKey:)(v23, &v26, v25, v23, v15);
  sub_1004B84E0(v16, v14, type metadata accessor for CRLGloballyScopedBoardIdentifier);
  LOBYTE(v26) = 1;
  *(_DWORD *)(v14 + *(int *)(v8 + 20)) = KeyedDecodingContainer.decode(_:forKey:)(&v26, v17);
  v27 = 2;
  v18 = sub_100587AC0();
  KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for Data, &v27, v17, &type metadata for Data, v18);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v17);
  *(_OWORD *)(v14 + *(int *)(v8 + 24)) = v26;
  sub_1004B8460(v14, v22, type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecord);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v21);
  return sub_1004B84A4(v14, type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecord);
}

uint64_t sub_1005A9198()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 1701869940;
  if (*v0 != 1)
    v1 = 1635017060;
  if (*v0)
    return v1;
  else
    return 0x6564496472616F62;
}

uint64_t sub_1005A91F0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1005A9D38(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1005A9214(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1005A9B0C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005A923C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1005A9B0C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1005A9264@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1005A8EE8(a1, a2);
}

uint64_t sub_1005A9278(_QWORD *a1)
{
  return sub_1005A8D50(a1);
}

uint64_t sub_1005A928C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  unsigned __int8 *v2;
  int v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;

  v5 = *v2;
  v7 = *((_QWORD *)v2 + 1);
  v6 = *((_QWORD *)v2 + 2);
  v8 = type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecord(0);
  a2[3] = v8;
  a2[4] = sub_1004B7878(&qword_1013E4CB0, type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecord, (uint64_t)&unk_100EFBBBC);
  v9 = sub_10050D1B0(a2);
  sub_1004B8460(a1, (uint64_t)v9, type metadata accessor for CRLGloballyScopedBoardIdentifier);
  *(_DWORD *)((char *)v9 + *(int *)(v8 + 20)) = v5 + 5;
  v10 = (_QWORD *)((char *)v9 + *(int *)(v8 + 24));
  *v10 = v7;
  v10[1] = v6;
  return sub_1004BE310(v7, v6);
}

uint64_t sub_1005A9334()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecord(uint64_t a1)
{
  uint64_t result;

  result = qword_1013E4D20;
  if (!qword_1013E4D20)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLBoardAuxiliaryRealTimeChangeRecord);
  return result;
}

uint64_t sub_1005A9378(int a1)
{
  if ((a1 - 5) >= 0xC)
    return 12;
  else
    return (a1 - 5);
}

uint64_t *sub_1005A938C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v17);
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    v12 = *(int *)(a3 + 24);
    *(_DWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_DWORD *)((char *)a2 + *(int *)(a3 + 20));
    v13 = (uint64_t *)((char *)a1 + v12);
    v14 = (char *)a2 + v12;
    v15 = *(uint64_t *)((char *)a2 + v12);
    v16 = *((_QWORD *)v14 + 1);
    swift_bridgeObjectRetain(v11);
    sub_1004BE310(v15, v16);
    *v13 = v15;
    v13[1] = v16;
  }
  return a1;
}

uint64_t sub_1005A9450(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(v5 + 20) + 8));
  return sub_1004BBBC8(*(_QWORD *)(a1 + *(int *)(a2 + 24)), *(_QWORD *)(a1 + *(int *)(a2 + 24) + 8));
}

uint64_t sub_1005A94B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  unint64_t v14;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  v11 = *(int *)(a3 + 24);
  *(_DWORD *)(a1 + *(int *)(a3 + 20)) = *(_DWORD *)(a2 + *(int *)(a3 + 20));
  v12 = (uint64_t *)(a1 + v11);
  v13 = *(_QWORD *)(a2 + v11);
  v14 = *(_QWORD *)(a2 + v11 + 8);
  swift_bridgeObjectRetain(v10);
  sub_1004BE310(v13, v14);
  *v12 = v13;
  v12[1] = v14;
  return a1;
}

uint64_t sub_1005A9548(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v10 = v9[1];
  v11 = v8[1];
  v8[1] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  *(_DWORD *)(a1 + *(int *)(a3 + 20)) = *(_DWORD *)(a2 + *(int *)(a3 + 20));
  v12 = *(int *)(a3 + 24);
  v13 = (uint64_t *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v15 = *v14;
  v16 = v14[1];
  sub_1004BE310(*v14, v16);
  v17 = *v13;
  v18 = v13[1];
  *v13 = v15;
  v13[1] = v16;
  sub_1004BBBC8(v17, v18);
  return a1;
}

uint64_t sub_1005A9600(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = type metadata accessor for CRLBoardIdentifierStorage(0);
  *(_OWORD *)(a1 + *(int *)(v7 + 20)) = *(_OWORD *)(a2 + *(int *)(v7 + 20));
  v8 = *(int *)(a3 + 24);
  *(_DWORD *)(a1 + *(int *)(a3 + 20)) = *(_DWORD *)(a2 + *(int *)(a3 + 20));
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  return a1;
}

uint64_t sub_1005A9678(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  v12 = v8[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease(v12);
  v13 = *(int *)(a3 + 24);
  *(_DWORD *)(a1 + *(int *)(a3 + 20)) = *(_DWORD *)(a2 + *(int *)(a3 + 20));
  v14 = *(_QWORD *)(a1 + v13);
  v15 = *(_QWORD *)(a1 + v13 + 8);
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  sub_1004BBBC8(v14, v15);
  return a1;
}

uint64_t sub_1005A970C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005A9718);
}

uint64_t sub_1005A9718(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v6 = type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8) >> 60;
  if (((4 * (_DWORD)v9) & 0xC) != 0)
    return 16 - ((4 * (_DWORD)v9) & 0xC | (v9 >> 2));
  else
    return 0;
}

uint64_t sub_1005A97A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005A97B4);
}

uint64_t sub_1005A97B4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD *v10;

  result = type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  v10 = (_QWORD *)(a1 + *(int *)(a4 + 24));
  *v10 = 0;
  v10[1] = (unint64_t)(((-(int)a2 >> 2) & 3) - 4 * (_DWORD)a2) << 60;
  return result;
}

uint64_t sub_1005A983C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for CRLBoardIdentifierStorage(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.Int32 + 64;
    v4[2] = &unk_100EFB9F8;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for CRLBoardAuxiliaryRealTimeChangeType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF5)
    goto LABEL_17;
  if (a2 + 11 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 11) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 11;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 11;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 11;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xC;
  v8 = v6 - 12;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLBoardAuxiliaryRealTimeChangeType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_1005A9998 + 4 * byte_100EFB985[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_1005A99CC + 4 * byte_100EFB980[v4]))();
}

uint64_t sub_1005A99CC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1005A99D4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1005A99DCLL);
  return result;
}

uint64_t sub_1005A99E8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1005A99F0);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_1005A99F4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1005A99FC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardAuxiliaryRealTimeChangeType()
{
  return &type metadata for CRLBoardAuxiliaryRealTimeChangeType;
}

unint64_t sub_1005A9A1C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E4D60;
  if (!qword_1013E4D60)
  {
    v1 = sub_1004CB6A4(&qword_1013E4D68);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1013E4D60);
  }
  return result;
}

unint64_t sub_1005A9A6C()
{
  unint64_t result;

  result = qword_1013E4D70;
  if (!qword_1013E4D70)
  {
    result = swift_getWitnessTable(&unk_100EFBB34, &type metadata for CRLBoardAuxiliaryRealTimeChangeType);
    atomic_store(result, (unint64_t *)&qword_1013E4D70);
  }
  return result;
}

uint64_t sub_1005A9AB0(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1004B7878(&qword_1013E4D78, type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecord, (uint64_t)&unk_100EFBB84);
  result = sub_1004B7878(&qword_1013E4D80, type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecord, (uint64_t)&unk_100EFBB5C);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1005A9B0C()
{
  unint64_t result;

  result = qword_1013E4D90;
  if (!qword_1013E4D90)
  {
    result = swift_getWitnessTable(&unk_100EFBC9C, &type metadata for CRLBoardAuxiliaryRealTimeChangeRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E4D90);
  }
  return result;
}

unint64_t sub_1005A9B50()
{
  unint64_t result;

  result = qword_1013E4DA0;
  if (!qword_1013E4DA0)
  {
    result = swift_getWitnessTable(&unk_100EFBABC, &type metadata for CRLBoardAuxiliaryRealTimeChangeType);
    atomic_store(result, (unint64_t *)&qword_1013E4DA0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CRLBoardAuxiliaryRealTimeChangeRecord.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1005A9BE0 + 4 * byte_100EFB98F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1005A9C14 + 4 * byte_100EFB98A[v4]))();
}

uint64_t sub_1005A9C14(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1005A9C1C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1005A9C24);
  return result;
}

uint64_t sub_1005A9C30(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1005A9C38);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1005A9C3C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1005A9C44(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecord.CodingKeys()
{
  return &type metadata for CRLBoardAuxiliaryRealTimeChangeRecord.CodingKeys;
}

unint64_t sub_1005A9C64()
{
  unint64_t result;

  result = qword_1013E4DA8;
  if (!qword_1013E4DA8)
  {
    result = swift_getWitnessTable(&unk_100EFBC74, &type metadata for CRLBoardAuxiliaryRealTimeChangeRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E4DA8);
  }
  return result;
}

unint64_t sub_1005A9CAC()
{
  unint64_t result;

  result = qword_1013E4DB0;
  if (!qword_1013E4DB0)
  {
    result = swift_getWitnessTable("u/7", &type metadata for CRLBoardAuxiliaryRealTimeChangeRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E4DB0);
  }
  return result;
}

unint64_t sub_1005A9CF4()
{
  unint64_t result;

  result = qword_1013E4DB8;
  if (!qword_1013E4DB8)
  {
    result = swift_getWitnessTable(&unk_100EFBC0C, &type metadata for CRLBoardAuxiliaryRealTimeChangeRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E4DB8);
  }
  return result;
}

uint64_t sub_1005A9D38(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  char v8;

  if (a1 == 0x6564496472616F62 && a2 == 0xEF7265696669746ELL)
  {
    v5 = 0xEF7265696669746ELL;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6564496472616F62, 0xEF7265696669746ELL, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    v7 = 0xE400000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(1701869940, 0xE400000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 1635017060 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease(0xE400000000000000);
    return 2;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(1635017060, 0xE400000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v8 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

void sub_1005A9E90(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  void *v30;
  id v31;
  void *v32;
  void *v33;
  __n128 v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  char *v40;
  __n128 v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  void *v45;
  void *v46;
  id v47;
  void *v48;
  id v49;
  void (*v50)(char *, uint64_t);
  void *v51;
  id v52;
  void *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  void (**v60)(char *, uint64_t);
  _QWORD *v61;
  _QWORD aBlock[5];
  uint64_t v63;

  v4 = v3;
  v58 = a1;
  v7 = type metadata accessor for DispatchWorkItemFlags(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchQoS(0);
  v60 = *(void (***)(char *, uint64_t))(v11 - 8);
  __chkstk_darwin(v11);
  v59 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchTime(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v20 = *(void **)(v4 + OBJC_IVAR____TtC8Freeform27CRLGelatoShareSheetProvider_boardLibrary);
  v21 = *(void **)(v4 + OBJC_IVAR____TtC8Freeform27CRLGelatoShareSheetProvider_thumbnailProvider);
  if (v21)
  {
    v54 = (char *)&v50 - v19;
    v55 = v18;
    v56 = v11;
    v57 = v8;
    v22 = v7;
    v23 = a2;
    v24 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform27CRLGelatoShareSheetProvider_thumbnailProvider + 8);
    v25 = v20;
    swift_unknownObjectRetain(v21);
    v51 = v21;
    v52 = v25;
    v26 = sub_1005AA4EC(v25, v21, v24, a3);
    v27 = objc_msgSend(v26, "popoverPresentationController");
    if (v27)
    {
      v28 = v27;
      objc_msgSend(v27, "setBarButtonItem:", v58);

    }
    v29 = objc_msgSend(v26, "popoverPresentationController");
    if (v29)
    {
      v30 = v29;
      objc_msgSend(v29, "_setIgnoreBarButtonItemSiblings:", 1);

    }
    v58 = v4;
    objc_msgSend(v23, "presentViewController:animated:completion:", v26, 1, 0);
    v53 = v23;
    v31 = objc_msgSend(v23, "view");
    if (v31)
    {
      v32 = v31;
      objc_msgSend(v31, "setAccessibilityViewIsModal:", 1);

      sub_1004B8930(0, (unint64_t *)&qword_1013DE090, OS_dispatch_queue_ptr);
      v33 = (void *)static OS_dispatch_queue.main.getter();
      static DispatchTime.now()(v34);
      v35 = v54;
      + infix(_:_:)(v16, 0.5);
      v50 = *(void (**)(char *, uint64_t))(v14 + 8);
      v36 = v55;
      v50(v16, v55);
      v37 = swift_allocObject(&unk_10126EDC8, 24, 7);
      *(_QWORD *)(v37 + 16) = v26;
      aBlock[4] = sub_1005AC640;
      v63 = v37;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(_QWORD *)"";
      aBlock[2] = sub_1005D2FC0;
      aBlock[3] = &unk_10126EDE0;
      v38 = _Block_copy(aBlock);
      v39 = v26;
      v40 = v59;
      static DispatchQoS.unspecified.getter(v41);
      v61 = _swiftEmptyArrayStorage;
      v42 = sub_1004CB65C();
      v43 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
      v44 = sub_100503E88();
      dispatch thunk of SetAlgebra.init<A>(_:)(&v61, v43, v44, v22, v42);
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v35, v40, v10, v38);
      _Block_release(v38);

      (*(void (**)(char *, uint64_t))(v57 + 8))(v10, v22);
      v60[1](v40, v56);
      v50(v35, v36);
      swift_release(v63);
      v45 = *(void **)(v58 + OBJC_IVAR____TtC8Freeform27CRLGelatoShareSheetProvider_presentingViewController);
      v46 = v53;
      *(_QWORD *)(v58 + OBJC_IVAR____TtC8Freeform27CRLGelatoShareSheetProvider_presentingViewController) = v53;

      v47 = objc_msgSend(v46, "navigationController");
      if (v47)
      {
        v48 = v47;
        v49 = objc_msgSend(v47, "view");

        if (v49)
        {
          objc_msgSend(v49, "setAccessibilityElementsHidden:", 1);

        }
      }
      swift_unknownObjectRelease(v51);

    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    v60 = v20;
    sub_100757E04(&_mh_execute_header, (uint64_t)"presentActivityShareOptionsViewController(button:viewController:existingShare:)", 79, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Gelato/CRLGelatoShareSheetProvider.swift", 110, 2, 158, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"presentActivityShareOptionsViewController(button:viewController:existingShare:)", 79, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Gelato/CRLGelatoShareSheetProvider.swift", 110, 2u, 158, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);

  }
}

id sub_1005AA388()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  id v7;
  Class isa;
  id v9;
  _BYTE v11[24];

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform27CRLGelatoShareSheetProvider_thumbnailProvider);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform27CRLGelatoShareSheetProvider_thumbnailProvider + 8);
    v3 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform27CRLGelatoShareSheetProvider_boardLibrary);
    swift_unknownObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform27CRLGelatoShareSheetProvider_thumbnailProvider));
    v4 = sub_1005AA4EC(v3, v1, v2, 0);
    swift_unknownObjectRelease(v1);
  }
  else
  {
    if (qword_1013DD6B8 != -1)
      swift_once(&qword_1013DD6B8, sub_100A00A6C);
    swift_beginAccess(&static OS_os_log.crlDefault, v11, 0, 0);
    v5 = (id)static OS_os_log.crlDefault;
    v6 = static os_log_type_t.error.getter(v5);
    sub_100A06EBC((uint64_t)v5, &_mh_execute_header, v6, "CRLGelatoShareSheetProvider: Could not create activity view controller. Thumbnail provider is epxected.", 103, 2, (uint64_t)_swiftEmptyArrayStorage);

    v7 = objc_allocWithZone((Class)type metadata accessor for CRLSelectionAwareActivityViewController());
    isa = Array._bridgeToObjectiveC()().super.isa;
    v9 = objc_msgSend(v7, "initWithActivityItems:applicationActivities:", isa, 0);

    v4 = sub_100BC21B4(v9);
  }
  return v4;
}

id sub_1005AA4EC(void *a1, void *a2, uint64_t a3, void *a4)
{
  char *v4;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  unint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  objc_class *v49;
  objc_class *v50;
  char *v51;
  id v52;
  uint64_t v53;
  void *v54;
  id v55;
  NSString v56;
  NSString v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  NSString v62;
  NSString v63;
  id v64;
  uint64_t v65;
  id v66;
  NSString v67;
  NSString v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  void **v78;
  id v79;
  Class isa;
  id v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  _QWORD *v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  id v94;
  id v95;
  id v96;
  void *v97;
  void *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void **v103;
  id v104;
  id v105;
  Class v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  unint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  void *v113;
  uint64_t v114;
  void *v115;
  _QWORD *v116;
  id v117;
  double v118;
  id v119;
  uint64_t v120;
  uint64_t v121;
  id v122;
  id v123;
  id v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void *v128;
  _QWORD *v129;
  id v130;
  id v131;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  void **v142;
  __int128 v143;
  uint64_t v144;
  void *v145;
  id v146;
  id v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  void *v151;
  uint64_t v152;
  id v153;
  char v154[24];
  objc_super v155;
  char v156[24];
  void **v157;
  void **aBlock;
  uint64_t v159;
  void *v160;
  ValueMetadata *v161;
  unint64_t v162;
  _QWORD *v163;
  char v164[8];
  char v165[8];

  *(_QWORD *)&v143 = a3;
  v145 = a2;
  v153 = (id)type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v153);
  v8 = (char *)&v133 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UUID(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v133 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for CRLBoardIdentifier(0);
  v148 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v150 = (uint64_t)&v133 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v149 = v13;
  __chkstk_darwin(v14);
  v16 = (char *)&v133 - v15;
  v151 = v4;
  v17 = *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform27CRLGelatoShareSheetProvider_board];
  v18 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  v19 = *(_QWORD *)(v17 + OBJC_IVAR____TtC8Freeform8CRLBoard_data);
  v20 = v19 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v19 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v165, 0, 0);
  sub_1004B8460(v20, (uint64_t)v8, type metadata accessor for CRLBoardCRDTData);
  swift_retain(v19);
  v21 = sub_1004B804C(&qword_1013E1A80);
  CRRegister.wrappedValue.getter(v21);
  sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLBoardCRDTData);
  swift_release(v19);
  v152 = v18;
  v22 = (uint64_t *)(*(_QWORD *)(v17 + v18) + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  v23 = *v22;
  v24 = v22[1];
  swift_bridgeObjectRetain(v24);
  sub_10067AFD0((uint64_t)v11, v23, v24, (uint64_t)v16);
  v25 = a4;
  if (!a4)
  {
    v25 = *(void **)(*(_QWORD *)(v17 + OBJC_IVAR____TtC8Freeform8CRLBoard_shareState) + 16);
    v26 = v25;
  }
  v27 = type metadata accessor for CRLBoardShareItemProviderHelper();
  v28 = *(_QWORD *)(v17 + v152) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v28, v164, 0, 0);
  sub_1004B8460(v28, (uint64_t)v8, type metadata accessor for CRLBoardCRDTData);
  v29 = a4;
  v30 = sub_1004B804C(&qword_1013E1980);
  CRRegister.wrappedValue.getter(v30);
  v31 = (uint64_t)aBlock;
  v32 = v159;
  sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLBoardCRDTData);
  v147 = v25;
  v144 = v27;
  v33 = sub_1009D993C(v25, (uint64_t)a1, (uint64_t)v16, v31, v32, 0, 0xF000000000000000);
  swift_bridgeObjectRelease(v32);
  v161 = &type metadata for CRLFeatureFlags;
  v162 = sub_1004DB6DC();
  LOBYTE(aBlock) = 17;
  LOBYTE(v31) = isFeatureEnabled(_:)(&aBlock);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&aBlock);
  v146 = v33;
  if ((v31 & 1) != 0)
  {
    v34 = sub_1004B804C((uint64_t *)&unk_1013E4180);
    v35 = swift_allocObject(v34, 40, 7);
    v143 = xmmword_100EEF400;
    *(_OWORD *)(v35 + 16) = xmmword_100EEF400;
    *(_QWORD *)(v35 + 32) = v33;
    aBlock = (void **)v35;
    specialized Array._endMutation()(v35);
    v157 = aBlock;
    v36 = *(_QWORD *)(v17 + v152) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess(v36, v156, 0, 0);
    sub_1004B8460(v36, (uint64_t)v8, type metadata accessor for CRLBoardCRDTData);
    v37 = v33;
    CRRegister.wrappedValue.getter(v30);
    v38 = (uint64_t)aBlock;
    v39 = v159;
    sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLBoardCRDTData);
    v40 = sub_1009D9BDC(a1, (uint64_t)v16, v38, v39);
    swift_bridgeObjectRelease(v39);
    v41 = v40;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v41);
    v43 = *(_QWORD *)(((unint64_t)v157 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v42 = *(_QWORD *)(((unint64_t)v157 & 0xFFFFFFFFFFFFFF8) + 0x18);
    v44 = (uint64_t)v16;
    v134 = v30;
    if (v43 >= v42 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v42 > 1, v43 + 1, 1);
    v45 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v43, v41);
    specialized Array._endMutation()(v45);
    v46 = swift_allocObject(v34, 40, 7);
    *(_OWORD *)(v46 + 16) = v143;
    v47 = (uint64_t)v16;
    v48 = v150;
    sub_1004B8460(v47, v150, type metadata accessor for CRLBoardIdentifier);
    v49 = (objc_class *)type metadata accessor for CRLSendACopyActivity_i(0);
    *(_QWORD *)&v143 = v41;
    v50 = v49;
    v51 = (char *)objc_allocWithZone(v49);
    *(_QWORD *)&v51[OBJC_IVAR____TtC8Freeform22CRLSendACopyActivity_i_activityItems] = 0;
    *(_QWORD *)&v51[OBJC_IVAR____TtC8Freeform22CRLSendACopyActivity_i_collaborationItem] = 0;
    sub_1004B8460(v48, (uint64_t)&v51[OBJC_IVAR____TtC8Freeform22CRLSendACopyActivity_i_boardIdentifier], type metadata accessor for CRLBoardIdentifier);
    v155.receiver = v51;
    v155.super_class = v50;
    v52 = objc_msgSendSuper2(&v155, "init");
    v53 = sub_1004B84A4(v48, type metadata accessor for CRLBoardIdentifier);
    *(_QWORD *)(v46 + 32) = v52;
    aBlock = (void **)v46;
    specialized Array._endMutation()(v53);
    v142 = aBlock;
    v54 = (void *)objc_opt_self(NSBundle);
    v135 = v44;
    v55 = objc_msgSend(v54, "mainBundle");
    v56 = String._bridgeToObjectiveC()();
    v57 = String._bridgeToObjectiveC()();
    v58 = objc_msgSend(v55, "localizedStringForKey:value:table:", v56, v57, 0);

    v141 = static String._unconditionallyBridgeFromObjectiveC(_:)(v58);
    v140 = v59;

    sub_100B1B3BC();
    sub_100B1B718();
    v139 = sub_1008A03F0();
    v138 = v60;
    v61 = objc_msgSend(v54, "mainBundle");
    v62 = String._bridgeToObjectiveC()();
    v63 = String._bridgeToObjectiveC()();
    v64 = objc_msgSend(v61, "localizedStringForKey:value:table:", v62, v63, 0);

    v137 = static String._unconditionallyBridgeFromObjectiveC(_:)(v64);
    v136 = v65;

    v66 = objc_msgSend(v54, "mainBundle");
    v67 = String._bridgeToObjectiveC()();
    v68 = String._bridgeToObjectiveC()();
    v69 = objc_msgSend(v66, "localizedStringForKey:value:table:", v67, v68, 0);

    v70 = static String._unconditionallyBridgeFromObjectiveC(_:)(v69);
    v72 = v71;

    v73 = *(_QWORD *)(v17 + v152) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess(v73, v154, 0, 0);
    sub_1004B8460(v73, (uint64_t)v8, type metadata accessor for CRLBoardCRDTData);
    CRRegister.wrappedValue.getter(v134);
    v74 = (uint64_t)aBlock;
    v75 = v159;
    sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLBoardCRDTData);
    v76 = v135;
    v77 = sub_1005ABCA4(v135, v74, v75, v145, v144);
    swift_bridgeObjectRelease(v75);
    v78 = v157;
    v79 = objc_allocWithZone((Class)UIActivityItemsConfiguration);
    sub_1004B8930(0, &qword_10140B7E0, NSItemProvider_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    v81 = objc_msgSend(v79, "initWithItemProviders:", isa, swift_bridgeObjectRelease(v78).n128_f64[0]);

    v82 = v48;
    v83 = swift_allocObject(&unk_10126EC60, 24, 7);
    *(_QWORD *)(v83 + 16) = v142;
    v162 = (unint64_t)sub_1005AC2FC;
    v163 = (_QWORD *)v83;
    aBlock = _NSConcreteStackBlock;
    v159 = *(_QWORD *)"";
    v160 = sub_1005AB204;
    v161 = (ValueMetadata *)&unk_10126EC78;
    v84 = _Block_copy(&aBlock);
    objc_msgSend(v81, "setApplicationActivitiesProvider:", v84, swift_release(v163).n128_f64[0]);
    _Block_release(v84);
    v85 = (_QWORD *)swift_allocObject(&unk_10126ECB0, 88, 7);
    v86 = v141;
    v85[2] = v77;
    v85[3] = v86;
    v87 = v139;
    v85[4] = v140;
    v85[5] = v87;
    v85[6] = v138;
    v85[7] = v70;
    v88 = v137;
    v85[8] = v72;
    v85[9] = v88;
    v85[10] = v136;
    v162 = (unint64_t)sub_1005AC348;
    v163 = v85;
    aBlock = _NSConcreteStackBlock;
    v159 = *(_QWORD *)"";
    v160 = sub_1005AB554;
    v161 = (ValueMetadata *)&unk_10126ECC8;
    v89 = _Block_copy(&aBlock);
    v90 = v163;
    v91 = v77;
    objc_msgSend(v81, "setPerItemMetadataProvider:", v89, swift_release(v90).n128_f64[0]);
    _Block_release(v89);
    v92 = type metadata accessor for CRLSelectionAwareActivityViewController();
    v94 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v92, v93));
    v95 = v81;
    v96 = objc_msgSend(v94, "initWithActivityItemsConfiguration:", v95);
    v97 = sub_100BC21B4(v96);

    v98 = v151;
    v99 = v149;
    v100 = v148;
  }
  else
  {
    v101 = sub_1004B804C((uint64_t *)&unk_1013E4180);
    v102 = swift_allocObject(v101, 40, 7);
    *(_OWORD *)(v102 + 16) = xmmword_100EEF400;
    *(_QWORD *)(v102 + 32) = v33;
    aBlock = (void **)v102;
    specialized Array._endMutation()(v102);
    v103 = aBlock;
    v104 = objc_allocWithZone((Class)UIActivityItemsConfiguration);
    sub_1004B8930(0, &qword_10140B7E0, NSItemProvider_ptr);
    v105 = v33;
    v106 = Array._bridgeToObjectiveC()().super.isa;
    v153 = objc_msgSend(v104, "initWithItemProviders:", v106, swift_bridgeObjectRelease(v103).n128_f64[0]);

    v82 = v150;
    sub_1004B8460((uint64_t)v16, v150, type metadata accessor for CRLBoardIdentifier);
    v76 = (uint64_t)v16;
    v100 = v148;
    v107 = *(unsigned __int8 *)(v148 + 80);
    v108 = (v107 + 16) & ~v107;
    v99 = v149;
    v109 = (v149 + v108 + 7) & 0xFFFFFFFFFFFFFFF8;
    v110 = (v109 + 15) & 0xFFFFFFFFFFFFFFF8;
    v111 = swift_allocObject(&unk_10126EBC0, v110 + 16, v107 | 7);
    sub_1004DB5FC(v82, v111 + v108);
    v98 = v151;
    *(_QWORD *)(v111 + v109) = v151;
    v112 = (_QWORD *)(v111 + v110);
    v113 = v145;
    v114 = v143;
    *v112 = v145;
    v112[1] = v114;
    v162 = (unint64_t)sub_1005AC150;
    v163 = (_QWORD *)v111;
    aBlock = _NSConcreteStackBlock;
    v159 = *(_QWORD *)"";
    v160 = sub_1005AB554;
    v161 = (ValueMetadata *)&unk_10126EBD8;
    v115 = _Block_copy(&aBlock);
    v116 = v163;
    v117 = v98;
    swift_unknownObjectRetain(v113);
    *(_QWORD *)&v118 = swift_release(v116).n128_u64[0];
    v119 = v153;
    objc_msgSend(v153, "setPerItemMetadataProvider:", v115, v118);
    _Block_release(v115);
    v120 = type metadata accessor for CRLSelectionAwareActivityViewController();
    v122 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v120, v121));
    v123 = v119;
    v124 = objc_msgSend(v122, "initWithActivityItemsConfiguration:", v123);
    v97 = sub_100BC21B4(v124);

  }
  sub_1004B8460(v76, v82, type metadata accessor for CRLBoardIdentifier);
  v125 = *(unsigned __int8 *)(v100 + 80);
  v126 = (v125 + 24) & ~v125;
  v127 = swift_allocObject(&unk_10126EC10, v126 + v99, v125 | 7);
  *(_QWORD *)(v127 + 16) = v98;
  sub_1004DB5FC(v82, v127 + v126);
  v162 = (unint64_t)sub_1005AC270;
  v163 = (_QWORD *)v127;
  aBlock = _NSConcreteStackBlock;
  v159 = *(_QWORD *)"";
  v160 = sub_10075AF68;
  v161 = (ValueMetadata *)&unk_10126EC28;
  v128 = _Block_copy(&aBlock);
  v129 = v163;
  v130 = v98;
  v131 = v97;
  swift_retain(v127);
  objc_msgSend(v131, "setCompletionWithItemsHandler:", v128, swift_release(v129).n128_f64[0]);
  _Block_release(v128);

  swift_release(v127);
  sub_1004B84A4(v76, type metadata accessor for CRLBoardIdentifier);
  return v131;
}

Class sub_1005AB204(uint64_t a1)
{
  uint64_t (*v1)(__n128);
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  Class isa;

  v1 = *(uint64_t (**)(__n128))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = swift_retain(v2);
  v4 = v1(v3);
  swift_release(v2);
  sub_1004B8930(0, &qword_1013E4E10, UIActivity_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v4);
  return isa;
}

void sub_1005AB26C(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X8>, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  char v26;
  uint64_t *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  NSString v32;
  NSString v33;
  NSString v34;
  NSString v35;
  id v36;
  uint64_t v37;
  uint64_t v38;

  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIActivityItemsConfigurationMetadataKeyLinkPresentationMetadata);
  v13 = v12;
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
  if (v11 == v14 && v13 == v15)
  {
    swift_bridgeObjectRelease_n(v13, 2);
LABEL_13:
    if (a1)
    {
      *(_OWORD *)a6 = 0u;
      *(_OWORD *)(a6 + 16) = 0u;
    }
    else
    {
      *(_QWORD *)(a6 + 24) = sub_1004B8930(0, (unint64_t *)&unk_1013FA430, LPLinkMetadata_ptr);
      *(_QWORD *)a6 = a3;
      v28 = a3;
    }
    return;
  }
  v17 = v15;
  v38 = a4;
  v18 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v13, v14, v15, 0);
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(v17);
  if ((v18 & 1) != 0)
    goto LABEL_13;
  v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIActivityItemsConfigurationMetadataKeyCollaborationModeRestrictions);
  v21 = v20;
  v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
  if (v19 == v22 && v21 == v23)
  {
    swift_bridgeObjectRelease_n(v21, 2);
    v27 = (uint64_t *)a6;
  }
  else
  {
    v25 = v23;
    v26 = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v21, v22, v23, 0);
    swift_bridgeObjectRelease(v21);
    swift_bridgeObjectRelease(v25);
    v27 = (uint64_t *)a6;
    if ((v26 & 1) == 0)
    {
      *(_OWORD *)a6 = 0u;
      *(_OWORD *)(a6 + 16) = 0u;
      return;
    }
  }
  v29 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v30 = swift_allocObject(v29, 40, 7);
  *(_OWORD *)(v30 + 16) = xmmword_100EEF400;
  v31 = objc_allocWithZone((Class)UIActivityCollaborationModeRestriction_Legacy);
  swift_bridgeObjectRetain(v38);
  swift_bridgeObjectRetain(a5);
  swift_bridgeObjectRetain(a7);
  swift_bridgeObjectRetain(a9);
  v32 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v38);
  v33 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a5);
  v34 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a7);
  v35 = String._bridgeToObjectiveC()();
  v36 = objc_msgSend(v31, "initWithDisabledMode:alertTitle:alertMessage:alertDismissButtonTitle:alertContinueToModeButtonTitle:", 0, v32, v33, v34, v35, swift_bridgeObjectRelease(a9).n128_f64[0]);

  *(_QWORD *)(v30 + 32) = v36;
  specialized Array._endMutation()(v37);
  v27[3] = sub_1004B804C((uint64_t *)&unk_101407470);
  *v27 = v30;
}

id sub_1005AB554(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  void (*v6)(_QWORD *__return_ptr, uint64_t, id);
  id v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  void *v14;
  _QWORD v16[3];
  uint64_t v17;

  v6 = *(void (**)(_QWORD *__return_ptr, uint64_t, id))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  v7 = a3;
  v6(v16, a2, v7);
  swift_release(v5);

  v8 = v17;
  if (!v17)
    return 0;
  v9 = sub_1004BB5A4(v16, v17);
  v10 = *(_QWORD *)(v8 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v10 + 16))(v13, v11);
  v14 = (void *)_bridgeAnythingToObjectiveC<A>(_:)(v13, v8);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v8);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v16);
  return v14;
}

void sub_1005AB650(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  _QWORD v29[3];
  _BYTE v30[24];

  v12 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v12);
  v14 = (char *)v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
    goto LABEL_2;
  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIActivityItemsConfigurationMetadataKeyLinkPresentationMetadata);
  v17 = v16;
  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
  if (v15 == v18 && v17 == v19)
  {
    swift_bridgeObjectRelease_n(v17, 2);
  }
  else
  {
    v21 = v19;
    v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v17, v18, v19, 0);
    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease(v21);
    if ((v22 & 1) == 0)
    {
LABEL_2:
      *(_OWORD *)a6 = 0u;
      *(_OWORD *)(a6 + 16) = 0u;
      return;
    }
  }
  v23 = type metadata accessor for CRLBoardShareItemProviderHelper();
  v24 = *(_QWORD *)(*(_QWORD *)(a4 + OBJC_IVAR____TtC8Freeform27CRLGelatoShareSheetProvider_board)
                  + OBJC_IVAR____TtC8Freeform8CRLBoard_data)
      + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v24, v30, 0, 0);
  sub_1004B8460(v24, (uint64_t)v14, type metadata accessor for CRLBoardCRDTData);
  v25 = sub_1004B804C(&qword_1013E1980);
  CRRegister.wrappedValue.getter(v25);
  v26 = v29[1];
  v27 = v29[2];
  sub_1004B84A4((uint64_t)v14, type metadata accessor for CRLBoardCRDTData);
  v28 = sub_1005ABCA4(a3, v26, v27, a5, v23);
  swift_bridgeObjectRelease(v27);
  *(_QWORD *)(a6 + 24) = sub_1004B8930(0, (unint64_t *)&unk_1013FA430, LPLinkMetadata_ptr);
  *(_QWORD *)a6 = v28;
}

void sub_1005AB834(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char *a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  void *v30;
  id v31;
  void *v32;
  char v34[24];

  v9 = type metadata accessor for CRLBoardIdentifier(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v12 = &v34[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = sub_1004B804C(&qword_1013E01F0);
  v14 = __chkstk_darwin(v13).n128_u64[0];
  v16 = &v34[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if ((a2 & 1) == 0)
  {
    if (qword_1013DD6B8 != -1)
      swift_once(&qword_1013DD6B8, sub_100A00A6C);
    swift_beginAccess(&static OS_os_log.crlDefault, v34, 0, 0);
    v17 = (id)static OS_os_log.crlDefault;
    v19 = static os_log_type_t.default.getter(v18);
    sub_100A06EBC((uint64_t)v17, &_mh_execute_header, v19, "UIActivityViewController returned without completing. Delete any cached shares.", 79, 2, (uint64_t)_swiftEmptyArrayStorage);

    v20 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v16, 1, 1, v20);
    sub_1004B8460(a6, (uint64_t)&v34[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8], type metadata accessor for CRLBoardIdentifier);
    type metadata accessor for MainActor(0);
    v21 = a5;
    v22 = static MainActor.shared.getter(v21);
    v23 = *(unsigned __int8 *)(v10 + 80);
    v24 = (v23 + 40) & ~v23;
    v25 = (_QWORD *)swift_allocObject(&unk_10126EDA0, v24 + v11, v23 | 7);
    v25[2] = v22;
    v25[3] = &protocol witness table for MainActor;
    v25[4] = v21;
    sub_1004DB5FC((uint64_t)v12, (uint64_t)v25 + v24);
    v26 = sub_100521B98((uint64_t)v16, (uint64_t)&unk_1013E4E20, (uint64_t)v25);
    v14 = swift_release(v26).n128_u64[0];
  }
  v27 = OBJC_IVAR____TtC8Freeform27CRLGelatoShareSheetProvider_presentingViewController;
  v28 = *(void **)&a5[OBJC_IVAR____TtC8Freeform27CRLGelatoShareSheetProvider_presentingViewController];
  if (v28)
  {
    v29 = objc_msgSend(v28, "navigationController", *(double *)&v14);
    if (v29)
    {
      v30 = v29;
      v31 = objc_msgSend(v29, "view");

      if (v31)
      {
        objc_msgSend(v31, "setAccessibilityElementsHidden:", 0);

      }
    }
  }
  v32 = *(void **)&a5[v27];
  *(_QWORD *)&a5[v27] = 0;

}

uint64_t sub_1005ABA88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[2] = a4;
  v5[3] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[4] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v5[5] = v7;
  v5[6] = v8;
  return swift_task_switch(sub_1005ABAF4, v7, v8);
}

uint64_t sub_1005ABAF4()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_10140DEF4);
  *(_QWORD *)(v0 + 56) = v1;
  *v1 = v0;
  v1[1] = sub_1005ABB50;
  return sub_100CA11BC(*(_QWORD *)(v0 + 24));
}

uint64_t sub_1005ABB50()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 56));
  return swift_task_switch(sub_10053457C, *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

void sub_1005ABB9C(void *a1)
{
  UIAccessibilityNotifications v1;
  id v2;

  v1 = UIAccessibilityLayoutChangedNotification;
  v2 = objc_msgSend(a1, "viewIfLoaded");
  UIAccessibilityPostNotification(v1, v2);

}

uint64_t type metadata accessor for CRLGelatoShareSheetProvider()
{
  return objc_opt_self(_TtC8Freeform27CRLGelatoShareSheetProvider);
}

id sub_1005ABCA4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  NSString v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSString v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  void *v27;
  uint64_t v28;
  _QWORD *v29;
  void *v30;
  uint64_t v31;
  id v32;
  double v33;
  id v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSString v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  _QWORD *v45;
  void *v46;
  uint64_t v47;
  id v48;
  id v49;
  uint64_t v51;
  id v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t);
  uint64_t v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  void **aBlock;
  uint64_t v65;
  id (*v66)(uint64_t, void *);
  void *v67;
  uint64_t (*v68)(uint64_t, uint64_t);
  uint64_t v69;

  v63 = a5;
  v58 = a4;
  v59 = a3;
  v61 = a1;
  v6 = type metadata accessor for CRLBoardIdentifier(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v60 = (uint64_t)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UTType(0);
  v10 = *(_QWORD *)(v9 - 8);
  v57 = v9;
  __chkstk_darwin(v9);
  v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = objc_msgSend(objc_allocWithZone((Class)LPLinkMetadata), "init");
  v62 = v13;
  v55 = a2;
  v14 = String._bridgeToObjectiveC()();
  objc_msgSend(v13, "setTitle:", v14);

  v52 = objc_msgSend(objc_allocWithZone((Class)NSItemProvider), "init");
  v15 = static UTType.png.getter();
  UTType.identifier.getter(v15);
  v17 = v16;
  v56 = *(void (**)(char *, uint64_t))(v10 + 8);
  v56(v12, v9);
  v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v17);
  v19 = v60;
  sub_1004B8460(v61, v60, type metadata accessor for CRLBoardIdentifier);
  v20 = *(unsigned __int8 *)(v7 + 80);
  v21 = (v20 + 16) & ~v20;
  v22 = (v8 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  v23 = (v22 + 23) & 0xFFFFFFFFFFFFFFF8;
  v24 = (v23 + 23) & 0xFFFFFFFFFFFFFFF8;
  v53 = v24 + 8;
  v54 = v20 | 7;
  v25 = swift_allocObject(&unk_10126ED00, v24 + 8, v20 | 7);
  sub_1004DB5FC(v19, v25 + v21);
  v26 = (_QWORD *)(v25 + v22);
  *v26 = a2;
  v27 = v58;
  v28 = v59;
  v26[1] = v59;
  v29 = (_QWORD *)(v25 + v23);
  *v29 = v27;
  v29[1] = &off_101287D00;
  *(_QWORD *)(v25 + v24) = v63;
  v68 = sub_1005AC384;
  v69 = v25;
  aBlock = _NSConcreteStackBlock;
  v65 = *(_QWORD *)"";
  v66 = sub_100527C04;
  v67 = &unk_10126ED18;
  v30 = _Block_copy(&aBlock);
  v31 = v69;
  swift_bridgeObjectRetain(v28);
  v32 = v27;
  *(_QWORD *)&v33 = swift_release(v31).n128_u64[0];
  v34 = v52;
  objc_msgSend(v52, "registerDataRepresentationForTypeIdentifier:visibility:loadHandler:", v18, 0, v30, v33);
  _Block_release(v30);

  v35 = v34;
  objc_msgSend(v62, "setImageProvider:", v34);
  v36 = objc_msgSend(objc_allocWithZone((Class)NSItemProvider), "init");
  v37 = static UTType.png.getter();
  UTType.identifier.getter(v37);
  v39 = v38;
  v56(v12, v57);
  v40 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v39);
  v41 = v60;
  sub_1004B8460(v61, v60, type metadata accessor for CRLBoardIdentifier);
  v42 = swift_allocObject(&unk_10126ED50, v53, v54);
  sub_1004DB5FC(v41, v42 + v21);
  v43 = (_QWORD *)(v42 + v22);
  v44 = v59;
  *v43 = v55;
  v43[1] = v44;
  v45 = (_QWORD *)(v42 + v23);
  *v45 = v32;
  v45[1] = &off_101287D00;
  *(_QWORD *)(v42 + v24) = v63;
  v68 = sub_1005AC454;
  v69 = v42;
  aBlock = _NSConcreteStackBlock;
  v65 = *(_QWORD *)"";
  v66 = sub_100527C04;
  v67 = &unk_10126ED68;
  v46 = _Block_copy(&aBlock);
  v47 = v69;
  swift_bridgeObjectRetain(v44);
  v48 = v32;
  objc_msgSend(v36, "registerDataRepresentationForTypeIdentifier:visibility:loadHandler:", v40, 0, v46, swift_release(v47).n128_f64[0]);
  _Block_release(v46);

  v49 = v62;
  objc_msgSend(v62, "setIconProvider:", v36);

  return v49;
}

uint64_t sub_1005AC09C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = v2 | 7;
  v5 = (*(_QWORD *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = v0 + v3;
  v8 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease(*(_QWORD *)(v7 + *(int *)(v9 + 20) + 8));

  swift_unknownObjectRelease(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 16, v4);
}

void sub_1005AC150(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v7 = *(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1005AB650(a1, a2, v3 + v8, *(_QWORD *)(v3 + v9), *(void **)(v3 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8)), a3);
}

uint64_t sub_1005AC1C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1005AC1D8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1005AC1E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 24) & ~v2;
  v4 = v3 + *(_QWORD *)(v1 + 64);
  v5 = v2 | 7;

  v6 = v0 + v3;
  v7 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + *(int *)(v8 + 20) + 8));
  return swift_deallocObject(v0, v4, v5);
}

void sub_1005AC270(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;

  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8) + 80);
  sub_1005AB834(a1, a2, a3, a4, *(char **)(v4 + 16), v4 + ((v9 + 24) & ~v9));
}

uint64_t sub_1005AC2D8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005AC2FC()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1005AC304()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 80));
  return swift_deallocObject(v0, 88, 7);
}

void sub_1005AC348(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  sub_1005AB26C(a1, a2, *(void **)(v3 + 16), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 48), a3, *(_QWORD *)(v3 + 64), *(_QWORD *)(v3 + 72), *(_QWORD *)(v3 + 80));
}

uint64_t sub_1005AC384(uint64_t a1, uint64_t a2)
{
  return sub_1005AC460(a1, a2, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1009D913C);
}

uint64_t sub_1005AC394()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = v2 | 7;
  v5 = (*(_QWORD *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  v7 = v0 + v3;
  v8 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease(*(_QWORD *)(v7 + *(int *)(v9 + 20) + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v5 + 8));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, ((v6 + 23) & 0xFFFFFFFFFFFFFFF8) + 8, v4);
}

uint64_t sub_1005AC454(uint64_t a1, uint64_t a2)
{
  return sub_1005AC460(a1, a2, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1009D935C);
}

uint64_t sub_1005AC460(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v3;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v6 = *(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = (*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  return a3(a1, a2, v3 + v7, *(_QWORD *)(v3 + v8), *(_QWORD *)(v3 + v8 + 8), *(_QWORD *)(v3 + ((v8 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v3 + ((v8 + 23) & 0xFFFFFFFFFFFFFFF8) + 8), *(_QWORD *)(v3 + ((((v8 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1005AC4F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 40) & ~v2;
  v4 = v3 + *(_QWORD *)(v1 + 64);
  v5 = v2 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  v6 = v0 + v3;
  v7 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + *(int *)(v8 + 20) + 8));
  return swift_deallocObject(v0, v4, v5);
}

uint64_t sub_1005AC588(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_1013E4E1C);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1004CF80C;
  return sub_1005ABA88(a1, v5, v6, v7, v8);
}

uint64_t sub_1005AC61C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1005AC640()
{
  uint64_t v0;

  sub_1005ABB9C(*(void **)(v0 + 16));
}

uint64_t storeEnumTagSinglePayload for CRLStyleCopyingType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1005AC6C4 + 4 * byte_100EFBD15[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1005AC6F8 + 4 * asc_100EFBD10[v4]))();
}

uint64_t sub_1005AC6F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1005AC700(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1005AC708);
  return result;
}

uint64_t sub_1005AC714(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1005AC71CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1005AC720(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1005AC728(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLStyleCopyingType()
{
  return &type metadata for CRLStyleCopyingType;
}

Swift::Int sub_1005AC744()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(v1 + 1);
  return Hasher._finalize()();
}

void sub_1005AC788()
{
  unsigned __int8 *v0;

  Hasher._combine(_:)(*v0 + 1);
}

Swift::Int sub_1005AC7B4(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(v2 + 1);
  return Hasher._finalize()();
}

uint64_t sub_1005AC7F4@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_1005AC91C(*a1);
  *a2 = result;
  return result;
}

void sub_1005AC81C(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1 + 1;
}

uint64_t sub_1005AC82C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1005AC944();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_1005AC888(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1005AC944();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

unint64_t sub_1005AC8D8()
{
  unint64_t result;

  result = qword_1013E4E28;
  if (!qword_1013E4E28)
  {
    result = swift_getWitnessTable(&unk_100EFBE1C, &type metadata for CRLStyleCopyingType);
    atomic_store(result, (unint64_t *)&qword_1013E4E28);
  }
  return result;
}

uint64_t sub_1005AC91C(unint64_t a1)
{
  if (a1 >= 7)
    return 6;
  else
    return (0x5040302010006uLL >> (8 * a1));
}

unint64_t sub_1005AC944()
{
  unint64_t result;

  result = qword_1013E4E30;
  if (!qword_1013E4E30)
  {
    result = swift_getWitnessTable(&unk_100EFBDA4, &type metadata for CRLStyleCopyingType);
    atomic_store(result, (unint64_t *)&qword_1013E4E30);
  }
  return result;
}

void sub_1005AC98C(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (**v8)(_QWORD, _QWORD, _QWORD);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  objc_class *v19;
  id v20;
  unint64_t v21;
  int64_t v22;
  char *v23;
  unint64_t v24;
  unint64_t v25;
  id i;
  uint64_t v27;
  id v28;
  id v29;
  BOOL v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  id v61;
  void *v62;
  id v63;
  id v64;
  int *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (**v69)(_QWORD, _QWORD, _QWORD);
  int64_t v70;
  id v71;
  char *v72;
  uint64_t v73;
  id v74;
  uint64_t v75;
  void *v76;
  id v77;
  id v78;
  void *v79;
  id v80;
  id v81;
  uint64_t v82;
  id v83;
  uint64_t v84;
  void (*v85)(uint64_t, uint64_t, int64_t);
  uint64_t v86;
  int64_t v87;
  uint64_t v88;
  uint64_t v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  id v100;
  void *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  _QWORD *v116;
  char *v117;
  unint64_t v118;
  char *v119;
  unint64_t *v120;
  unint64_t v121;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v123;
  uint64_t v124;
  id v125;
  id v126;
  void (**v127)(_QWORD, _QWORD, _QWORD);
  id v128;
  id v129;
  id j;
  uint64_t v131;
  id v132;
  int64_t v133;
  void (*v134)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  _QWORD v139[3];
  objc_super v140;
  _QWORD v141[6];

  v135 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v135 - 8);
  __chkstk_darwin(v135);
  v137 = (char *)&v124 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C(&qword_1013E41D8);
  __chkstk_darwin(v5);
  v7 = (uint64_t)&v124 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = sub_1004B804C(&qword_1013E30E0);
  v8 = *(void (***)(_QWORD, _QWORD, _QWORD))(v133 - 8);
  __chkstk_darwin(v133);
  v10 = (uint64_t)&v124 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (unint64_t)&v124 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)&v124 - v15;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform27CRLPersistableSelectionPath_mostSpecificItemSelectionUUIDs] = _swiftEmptyArrayStorage;
  v17 = &v1[OBJC_IVAR____TtC8Freeform27CRLPersistableSelectionPath_userInfo];
  v18 = type metadata accessor for CRLPersistableSelectionPath.UserInfo(0);
  v134 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  v134(v17, 1, 1, v18);
  v19 = (objc_class *)type metadata accessor for CRLPersistableSelectionPath(0);
  v140.receiver = v1;
  v140.super_class = v19;
  v136 = (char *)objc_msgSendSuper2(&v140, "init");
  v129 = a1;
  v20 = objc_msgSend(a1, "orderedSelections");
  v21 = sub_1005B17D8();
  v22 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v20, v21);

  v23 = (char *)((unint64_t)v22 >> 62);
  if (!((unint64_t)v22 >> 62))
  {
    v24 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v22);
    if (v24)
      goto LABEL_3;
LABEL_17:
    swift_bridgeObjectRelease(v22);
    v132 = 0;
    if (v23)
      goto LABEL_18;
    goto LABEL_9;
  }
  if (v22 < 0)
    v34 = v22;
  else
    v34 = v22 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v22);
  v24 = _CocoaArrayWrapper.endIndex.getter(v34);
  if (!v24)
    goto LABEL_17;
LABEL_3:
  v25 = v24 - 1;
  if (__OFSUB__(v24, 1))
    goto LABEL_103;
  if ((v22 & 0xC000000000000001) != 0)
    goto LABEL_104;
  if ((v25 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_106;
  }
  if (v25 >= *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_106:
    __break(1u);
    goto LABEL_107;
  }
  for (i = *(id *)(v22 + 8 * v25 + 32); ; i = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v25, v22))
  {
    v132 = i;
    swift_bridgeObjectRelease(v22);
    if (v23)
    {
LABEL_18:
      if (v22 < 0)
        v35 = v22;
      else
        v35 = v22 & 0xFFFFFFFFFFFFFF8;
      v28 = v132;
      v36 = v132;
      swift_bridgeObjectRetain(v22);
      v37 = _CocoaArrayWrapper.endIndex.getter(v35);
      swift_bridgeObjectRelease(v22);
      v30 = v37 < 2;
      v24 = v37 - 2;
      if (v30)
      {
LABEL_11:
        swift_bridgeObjectRelease(v22);
        v31 = v28;
        v8 = (void (**)(_QWORD, _QWORD, _QWORD))v28;
        v32 = v129;
        v33 = v28;
        v23 = v136;
        if (!v33)
        {
          v8 = 0;
          goto LABEL_61;
        }
        goto LABEL_56;
      }
    }
    else
    {
LABEL_9:
      v27 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
      v28 = v132;
      v29 = v132;
      v30 = v27 < 2;
      v24 = v27 - 2;
      if (v30)
        goto LABEL_11;
    }
    if (!v28)
    {
      swift_bridgeObjectRelease(v22);
      v8 = 0;
      v32 = v129;
      v23 = v136;
      goto LABEL_61;
    }
    v38 = objc_opt_self(CRLWPSelection);
    v39 = swift_dynamicCastObjCClass(v28, v38);
    if (!v39)
    {
      swift_bridgeObjectRelease(v22);
      v31 = v28;
LABEL_44:
      v8 = (void (**)(_QWORD, _QWORD, _QWORD))v28;
      goto LABEL_55;
    }
    v131 = (uint64_t)v16;
    v16 = (char *)v13;
    v13 = v10;
    v127 = v8;
    v40 = (void *)v39;
    v41 = v28;
    v128 = v40;
    if (!objc_msgSend(v40, "isValid"))
    {

      swift_bridgeObjectRelease(v22);
      v31 = v41;
      goto LABEL_44;
    }
    j = v41;
    if ((v22 & 0xC000000000000001) == 0)
      break;
LABEL_107:
    v31 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v24, v22);
    v42 = j;
    v43 = v13;
LABEL_28:
    v44 = (uint64_t)v16;

    swift_bridgeObjectRelease(v22);
    v45 = type metadata accessor for CRLBoardItemSelection();
    v46 = swift_dynamicCastClass(v31, v45);
    v47 = v131;
    if (!v46)
      goto LABEL_54;
    v48 = v46;
    v126 = v31;
    v49 = OBJC_IVAR____TtC8Freeform21CRLBoardItemSelection_boardItems;
    v50 = *(_QWORD *)(v46 + OBJC_IVAR____TtC8Freeform21CRLBoardItemSelection_boardItems);
    if ((v50 & 0xC000000000000001) != 0)
    {
      if (v50 < 0)
        v51 = *(_QWORD *)(v46 + OBJC_IVAR____TtC8Freeform21CRLBoardItemSelection_boardItems);
      else
        v51 = v50 & 0xFFFFFFFFFFFFFF8;
      v52 = v126;
      swift_bridgeObjectRetain(v50);
      v53 = __CocoaSet.count.getter(v51);
      swift_bridgeObjectRelease(v50);
      if (v53 == 1)
        goto LABEL_35;
    }
    else
    {
      v73 = *(_QWORD *)(v50 + 16);
      v74 = v126;
      if (v73 == 1)
        goto LABEL_35;
    }
    sub_100757E04(&_mh_execute_header, (uint64_t)"init(_:)", 8, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPersistableSelectionPath.swift", 94, 2, 78, "Should not have a text selection if multiple board items are selected", 69, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(_:)", 8, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPersistableSelectionPath.swift", 94, 2u, 78, (uint64_t)"Should not have a text selection if multiple board items are selected", 69, 2u);
LABEL_35:
    v54 = *(_QWORD *)(v48 + v49);
    swift_bridgeObjectRetain(v54);
    v56 = (void *)sub_100857E90(v55);
    swift_bridgeObjectRelease(v54);
    v31 = v126;
    v42 = j;
    if (!v56)
      goto LABEL_53;
    v57 = type metadata accessor for CRLWPShapeItem(0);
    v58 = swift_dynamicCastClass(v56, v57);
    if (!v58)
    {

LABEL_53:
LABEL_54:

      v8 = (void (**)(_QWORD, _QWORD, _QWORD))v31;
LABEL_55:
      v32 = v129;
      v23 = v136;
      goto LABEL_56;
    }
    v59 = v58;
    v125 = v56;
    if (objc_msgSend(v128, "isInsertionPoint")
      && (v60 = v128, v61 = objc_msgSend(v128, "headCursorAffinity"), v61 == objc_msgSend(v60, "tailCursorAffinity")))
    {
      v62 = *(void **)(v59 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
      if (!v62)
        goto LABEL_112;
      v63 = v62;
      v64 = v128;
      sub_1007CB78C((uint64_t)objc_msgSend(v128, "rawRange"), (unint64_t)objc_msgSend(v128, "headCursorAffinity"), v47);

      v65 = (int *)sub_1004B804C(&qword_1013E41E8);
      v66 = v65[12];
      v67 = v65[16];
      v68 = v65[20];
      v69 = v127;
      v70 = v133;
      v127[2](v7, v47, v133);
      *(_QWORD *)(v7 + v66) = objc_msgSend(v64, "caretAffinity");
      *(_BYTE *)(v7 + v67) = objc_msgSend(v64, "isVisual");
      v71 = objc_msgSend(v64, "insertionEdge");

      v31 = v126;
      ((void (*)(uint64_t, int64_t))v69[1])(v47, v70);
      *(_QWORD *)(v7 + v68) = v71;
      swift_storeEnumTagMultiPayload(v7, v18, 0);
      v134((char *)v7, 0, 1, v18);
      v23 = v136;
      v72 = &v136[OBJC_IVAR____TtC8Freeform27CRLPersistableSelectionPath_userInfo];
      swift_beginAccess(&v136[OBJC_IVAR____TtC8Freeform27CRLPersistableSelectionPath_userInfo], v141, 33, 0);
      sub_1005B1814(v7, (uint64_t)v72);
      swift_endAccess(v141);
      v8 = (void (**)(_QWORD, _QWORD, _QWORD))v31;
    }
    else
    {
      v75 = OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage;
      v76 = *(void **)(v59 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
      if (!v76)
        goto LABEL_110;
      v77 = v76;
      v78 = v128;
      sub_1007CB78C((uint64_t)objc_msgSend(v128, "rawRange"), (unint64_t)objc_msgSend(v128, "headCursorAffinity"), v44);

      v79 = *(void **)(v59 + v75);
      if (!v79)
        goto LABEL_111;
      v80 = v79;
      v81 = objc_msgSend(v78, "rawRange");
      v23 = v136;
      if (__OFADD__(v81, v82))
        goto LABEL_109;
      sub_1007CB78C((uint64_t)v81 + v82, (unint64_t)objc_msgSend(v78, "tailCursorAffinity"), v43);

      v83 = v126;
      v84 = v7 + *(int *)(sub_1004B804C(&qword_1013E41E0) + 48);
      v85 = v127[4];
      v86 = v44;
      v87 = v133;
      v85(v7, v86, v133);
      v88 = v84;
      v31 = v83;
      v85(v88, v43, v87);
      swift_storeEnumTagMultiPayload(v7, v18, 1);
      v134((char *)v7, 0, 1, v18);
      v89 = (uint64_t)&v23[OBJC_IVAR____TtC8Freeform27CRLPersistableSelectionPath_userInfo];
      swift_beginAccess(&v23[OBJC_IVAR____TtC8Freeform27CRLPersistableSelectionPath_userInfo], v141, 33, 0);
      sub_1005B1814(v7, v89);
      swift_endAccess(v141);
      v8 = (void (**)(_QWORD, _QWORD, _QWORD))v83;
    }
    v32 = v129;
LABEL_56:
    v90 = v31;
    v91 = type metadata accessor for CRLGroupSelection();
    v92 = swift_dynamicCastClass(v90, v91);

    if (v92)
    {
      v93 = v7;
      v94 = v18;
      v95 = 2;
    }
    else
    {
      v96 = objc_opt_self(CRLPathSelection);
      if (!swift_dynamicCastObjCClass(v132, v96))
        goto LABEL_61;
      v93 = v7;
      v94 = v18;
      v95 = 3;
    }
    swift_storeEnumTagMultiPayload(v93, v94, v95);
    v134((char *)v7, 0, 1, v18);
    v97 = (uint64_t)&v23[OBJC_IVAR____TtC8Freeform27CRLPersistableSelectionPath_userInfo];
    swift_beginAccess(&v23[OBJC_IVAR____TtC8Freeform27CRLPersistableSelectionPath_userInfo], v141, 33, 0);
    sub_1005B1814(v7, v97);
    swift_endAccess(v141);
LABEL_61:
    v98 = type metadata accessor for CRLBoardItemSelection();
    v100 = objc_msgSend(v32, "mostSpecificSelectionOfClass:", swift_getObjCClassFromMetadata(v98, v99));
    if (!v100)
      goto LABEL_69;
    v101 = v100;
    v102 = swift_dynamicCastClass(v100, v98);
    if (!v102)
    {

LABEL_69:
      return;
    }
    v127 = (void (**)(_QWORD, _QWORD, _QWORD))v101;
    v128 = v8;
    v7 = *(_QWORD *)(v102 + OBJC_IVAR____TtC8Freeform21CRLBoardItemSelection_boardItems);
    if ((v7 & 0xC000000000000001) != 0)
    {
      if (v7 < 0)
        v103 = *(_QWORD *)(v102 + OBJC_IVAR____TtC8Freeform21CRLBoardItemSelection_boardItems);
      else
        v103 = v7 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*(_QWORD *)(v102 + OBJC_IVAR____TtC8Freeform21CRLBoardItemSelection_boardItems));
      v104 = __CocoaSet.makeIterator()(v103);
      v105 = type metadata accessor for CRLBoardItem(0);
      v106 = sub_1004B7878((unint64_t *)&qword_1013E4190, type metadata accessor for CRLBoardItem, (uint64_t)&protocol conformance descriptor for NSObject);
      v25 = (unint64_t)Set.Iterator.init(_cocoa:)(v141, v104, v105, v106);
      v7 = v141[0];
      v134 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v141[1];
      v13 = v141[2];
      v10 = v141[3];
      v22 = v141[4];
    }
    else
    {
      v107 = -1 << *(_BYTE *)(v7 + 32);
      v108 = *(_QWORD *)(v7 + 56);
      v134 = (void (*)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
      v13 = ~v107;
      v109 = -v107;
      if (v109 < 64)
        v110 = ~(-1 << v109);
      else
        v110 = -1;
      v22 = v110 & v108;
      swift_bridgeObjectRetain(v7);
      v10 = 0;
    }
    v131 = v7 & 0x7FFFFFFFFFFFFFFFLL;
    v126 = (id)v13;
    v133 = (v13 + 64) >> 6;
    v16 = (char *)&swift_isaMask;
    for (j = (char *)&type metadata for Swift.AnyObject + 8; v7 < 0; v22 = (int64_t)v23)
    {
      v112 = __CocoaSet.Iterator.next()(v25);
      if (!v112)
        goto LABEL_101;
      v113 = v112;
      v138 = v112;
      v114 = type metadata accessor for CRLBoardItem(0);
      swift_unknownObjectRetain(v113);
      swift_dynamicCast(v139, &v138, j, v114, 7);
      v115 = (_QWORD *)v139[0];
      v116 = (_QWORD *)swift_unknownObjectRelease(v113);
      v18 = v10;
      v23 = (char *)v22;
      if (!v115)
        goto LABEL_101;
LABEL_95:
      (*(void (**)(_QWORD *))((swift_isaMask & *v115) + 0x88))(v116);
      v120 = (unint64_t *)&v136[OBJC_IVAR____TtC8Freeform27CRLPersistableSelectionPath_mostSpecificItemSelectionUUIDs];
      swift_beginAccess(&v136[OBJC_IVAR____TtC8Freeform27CRLPersistableSelectionPath_mostSpecificItemSelectionUUIDs], v139, 33, 0);
      v121 = *v120;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v120);
      *v120 = v121;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v121 = sub_100D0EC28(0, *(_QWORD *)(v121 + 16) + 1, 1, v121);
        *v120 = v121;
      }
      v13 = *(_QWORD *)(v121 + 16);
      v123 = *(_QWORD *)(v121 + 24);
      v8 = (void (**)(_QWORD, _QWORD, _QWORD))(v13 + 1);
      if (v13 >= v123 >> 1)
      {
        v121 = sub_100D0EC28(v123 > 1, v13 + 1, 1, v121);
        *v120 = v121;
      }
      *(_QWORD *)(v121 + 16) = v8;
      (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v121+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v13, v137, v135);
      swift_endAccess(v139);

      v10 = v18;
    }
    if (v22)
    {
      v23 = (char *)((v22 - 1) & v22);
      v111 = __clz(__rbit64(v22)) | (v10 << 6);
      v18 = v10;
LABEL_94:
      v116 = *(id *)(*(_QWORD *)(v7 + 48) + 8 * v111);
      v115 = v116;
      if (v116)
        goto LABEL_95;
      goto LABEL_101;
    }
    v117 = (char *)(v10 + 1);
    if (!__OFADD__(v10, 1))
    {
      if ((uint64_t)v117 < v133)
      {
        v118 = *((_QWORD *)v134 + (_QWORD)v117);
        v18 = v10 + 1;
        if (!v118)
        {
          v18 = v10 + 2;
          if (v10 + 2 >= v133)
            goto LABEL_101;
          v118 = *((_QWORD *)v134 + v18);
          if (!v118)
          {
            v18 = v10 + 3;
            if (v10 + 3 >= v133)
              goto LABEL_101;
            v118 = *((_QWORD *)v134 + v18);
            if (!v118)
            {
              v18 = v10 + 4;
              if (v10 + 4 >= v133)
                goto LABEL_101;
              v118 = *((_QWORD *)v134 + v18);
              if (!v118)
              {
                v119 = (char *)(v10 + 5);
                while ((char *)v133 != v119)
                {
                  v118 = *((_QWORD *)v134 + (_QWORD)v119++);
                  if (v118)
                  {
                    v18 = (uint64_t)(v119 - 1);
                    goto LABEL_93;
                  }
                }
                goto LABEL_101;
              }
            }
          }
        }
LABEL_93:
        v23 = (char *)((v118 - 1) & v118);
        v111 = __clz(__rbit64(v118)) + (v18 << 6);
        goto LABEL_94;
      }
LABEL_101:

      sub_1004D284C(v7);
      return;
    }
    __break(1u);
LABEL_103:
    __break(1u);
LABEL_104:
    ;
  }
  v42 = j;
  if (v24 < *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v43 = v13;
    v31 = *(id *)(v22 + 8 * v24 + 32);
    goto LABEL_28;
  }
  __break(1u);
LABEL_109:
  __break(1u);
LABEL_110:
  __break(1u);
LABEL_111:
  __break(1u);
LABEL_112:
  __break(1u);
}

char *sub_1005AD734(uint64_t a1, unint64_t a2)
{
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  __n128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  unint64_t v64;
  objc_class *v65;
  id v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  int64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  unint64_t v89;
  char *v90;
  int *v91;
  void (*v92)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t (*v102)(uint64_t, uint64_t, int *);
  int v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  _QWORD *v108;
  void (*v109)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  int v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  uint64_t v122;
  void (*v123)(char *, uint64_t, uint64_t, uint64_t);
  char *v124;
  char *v125;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  void (*v130)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t (*v135)(uint64_t, uint64_t, uint64_t);
  uint64_t v136;
  uint64_t *v137;
  _QWORD *v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  unint64_t v142;
  uint64_t v143;
  uint64_t v144;
  int *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  void (*v149)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  unint64_t v160;
  unint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  _QWORD *v165;
  void (*v166)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v167;
  char *v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t *v172;
  uint64_t *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  unint64_t v177;
  uint64_t v178;
  uint64_t v179;
  unsigned int *v180;
  uint64_t v181;
  int v182;
  int *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  void (*v189)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  unint64_t v193;
  char v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  _QWORD *v198;
  void (*v199)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v200;
  char *v201;
  char *v202;
  _QWORD *v203;
  uint64_t v204;
  unsigned int *v205;
  uint64_t v206;
  uint64_t v207;
  int v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  unint64_t v215;
  char *v216;
  _QWORD *v217;
  _QWORD *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t *v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t *v225;
  uint64_t v226;
  char *v227;
  uint64_t v228;
  uint64_t *v229;
  uint64_t v230;
  char *v231;
  char *v232;
  char *v233;
  uint64_t v234;
  _QWORD *v235;
  _QWORD *v236;
  char *v237;
  uint64_t v238;
  uint64_t v239;
  char *v240;
  uint64_t v241;
  uint64_t v242;
  void (*v243)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v244;
  char *v245;
  uint64_t v246;
  char *v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t (*v250)(uint64_t, uint64_t, uint64_t);
  uint64_t v251;
  char v252[8];
  _OWORD v253[2];
  uint64_t v254;
  objc_super v255;
  uint64_t v256;

  v249 = a1;
  v4 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  __chkstk_darwin(v4);
  v223 = (uint64_t)&v213 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v230 = (uint64_t)&v213 - v7;
  __chkstk_darwin(v8);
  v226 = (uint64_t)&v213 - v9;
  v244 = type metadata accessor for CRLProto_TextSelection(0);
  v242 = *(_QWORD *)(v244 - 8);
  __chkstk_darwin(v244);
  v231 = (char *)&v213 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v235 = (uint64_t *)((char *)&v213 - v12);
  __chkstk_darwin(v13);
  v218 = (uint64_t *)((char *)&v213 - v14);
  __chkstk_darwin(v15);
  v227 = (char *)&v213 - v16;
  __chkstk_darwin(v17);
  v217 = (uint64_t *)((char *)&v213 - v18);
  __chkstk_darwin(v19);
  v237 = (char *)&v213 - v20;
  __chkstk_darwin(v21);
  v236 = (uint64_t *)((char *)&v213 - v22);
  v23 = sub_1004B804C(&qword_1013E4F40);
  __chkstk_darwin(v23);
  v224 = (uint64_t)&v213 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v234 = (uint64_t)&v213 - v26;
  __chkstk_darwin(v27);
  v221 = (uint64_t)&v213 - v28;
  __chkstk_darwin(v29);
  v220 = (uint64_t)&v213 - v30;
  __chkstk_darwin(v31);
  v219 = (uint64_t)&v213 - v32;
  __chkstk_darwin(v33);
  v228 = (uint64_t)&v213 - v34;
  __chkstk_darwin(v35);
  v238 = (uint64_t)&v213 - v36;
  __chkstk_darwin(v37);
  v241 = (uint64_t)&v213 - v38;
  v39 = sub_1004B804C(&qword_1013E41D8);
  __chkstk_darwin(v39);
  v233 = (char *)&v213 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v41);
  v232 = (char *)&v213 - v42;
  __chkstk_darwin(v43);
  v240 = (char *)&v213 - v44;
  v239 = type metadata accessor for CRLProto_Data(0);
  v246 = *(_QWORD *)(v239 - 8);
  __chkstk_darwin(v239);
  v222 = (uint64_t *)((char *)&v213 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v46);
  v229 = (uint64_t *)((char *)&v213 - v47);
  __chkstk_darwin(v48);
  v225 = (uint64_t *)((char *)&v213 - v49);
  __chkstk_darwin(v50);
  v52 = (uint64_t *)((char *)&v213 - v51);
  v251 = type metadata accessor for UUID(0);
  v53 = *(_QWORD *)(v251 - 8);
  v54 = __chkstk_darwin(v251);
  v245 = (char *)&v213 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = type metadata accessor for BinaryDecodingOptions(0, v54);
  __chkstk_darwin(v56);
  v58 = (char *)&v213 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  v248 = type metadata accessor for CRLProto_PersistableSelectionPath(0);
  __chkstk_darwin(v248);
  v60 = (char *)&v213 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform27CRLPersistableSelectionPath_mostSpecificItemSelectionUUIDs] = _swiftEmptyArrayStorage;
  v61 = &v2[OBJC_IVAR____TtC8Freeform27CRLPersistableSelectionPath_userInfo];
  v62 = type metadata accessor for CRLPersistableSelectionPath.UserInfo(0);
  v63 = v61;
  v64 = a2;
  v243 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56);
  v243(v63, 1, 1, v62);
  v65 = (objc_class *)type metadata accessor for CRLPersistableSelectionPath(0);
  v255.receiver = v2;
  v255.super_class = v65;
  v66 = objc_msgSendSuper2(&v255, "init");
  v254 = 0;
  memset(v253, 0, sizeof(v253));
  v67 = (char *)v66;
  v68 = v249;
  v69 = sub_1004BE310(v249, v64);
  BinaryDecodingOptions.init()(v69);
  v70 = sub_1004B7878(&qword_1013E4F48, type metadata accessor for CRLProto_PersistableSelectionPath, (uint64_t)&unk_100F25860);
  v247 = v60;
  v71 = v64;
  v72 = v256;
  Message.init(serializedData:extensions:partial:options:)(v68, v64, v253, 0, v58, v248, v70);
  if (v72)
  {
    sub_1004BBBC8(v68, v64);

    return v67;
  }
  v74 = v245;
  v214 = v62;
  v216 = v67;
  v75 = (uint64_t)v247;
  v76 = *(_QWORD *)v247;
  v77 = *(_QWORD *)(*(_QWORD *)v247 + 16);
  v256 = 0;
  if (v77)
  {
    v215 = v71;
    *(_QWORD *)&v253[0] = _swiftEmptyArrayStorage;
    v78 = v76;
    swift_bridgeObjectRetain(v76);
    sub_100600724(0, v77, 0);
    v79 = (*(unsigned __int8 *)(v246 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v246 + 80);
    v213 = v78;
    v80 = v78 + v79;
    v250 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v246 + 72);
    v81 = v74;
    while (1)
    {
      sub_1004B8460(v80, (uint64_t)v52, type metadata accessor for CRLProto_Data);
      v82 = *v52;
      v83 = v52[1];
      sub_1004BE310(*v52, v83);
      v84 = v256;
      UUID.init(crl_data:)(v82, v83);
      if (v84)
        break;
      v256 = 0;
      sub_1004B84A4((uint64_t)v52, type metadata accessor for CRLProto_Data);
      v85 = *(_QWORD **)&v253[0];
      if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)&v253[0]) & 1) == 0)
      {
        sub_100600724(0, v85[2] + 1, 1);
        v85 = *(_QWORD **)&v253[0];
      }
      v87 = v85[2];
      v86 = v85[3];
      if (v87 >= v86 >> 1)
      {
        sub_100600724(v86 > 1, v87 + 1, 1);
        v85 = *(_QWORD **)&v253[0];
      }
      v85[2] = v87 + 1;
      (*(void (**)(unint64_t, char *))(v53 + 32))((unint64_t)v85+ ((*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80))+ *(_QWORD *)(v53 + 72) * v87, v81);
      *(_QWORD *)&v253[0] = v85;
      v80 += (uint64_t)v250;
      if (!--v77)
      {
        swift_bridgeObjectRelease(v213);
        v89 = v215;
        v90 = v216;
        v75 = (uint64_t)v247;
        goto LABEL_15;
      }
    }
    sub_1004B84A4((uint64_t)v52, type metadata accessor for CRLProto_Data);
    v88 = *(_QWORD *)&v253[0];
    v73 = v216;

    swift_release(v88);
    sub_1004BBBC8(v249, v215);
    swift_bridgeObjectRelease(v213);
    goto LABEL_14;
  }
  v89 = v71;
  v85 = _swiftEmptyArrayStorage;
  v90 = v216;
LABEL_15:
  v92 = v243;
  v91 = (int *)v244;
  v93 = (uint64_t)v240;
  v94 = &v90[OBJC_IVAR____TtC8Freeform27CRLPersistableSelectionPath_mostSpecificItemSelectionUUIDs];
  swift_beginAccess(&v90[OBJC_IVAR____TtC8Freeform27CRLPersistableSelectionPath_mostSpecificItemSelectionUUIDs], v253, 1, 0);
  v95 = *(_QWORD *)v94;
  *(_QWORD *)v94 = v85;
  swift_bridgeObjectRelease(v95);
  if ((*(_BYTE *)(v75 + 8) & 1) != 0)
  {
    v96 = v214;
    swift_storeEnumTagMultiPayload(v93, v214, 2);
    v92((char *)v93, 0, 1, v96);
    v97 = (uint64_t)&v90[OBJC_IVAR____TtC8Freeform27CRLPersistableSelectionPath_userInfo];
    swift_beginAccess(&v90[OBJC_IVAR____TtC8Freeform27CRLPersistableSelectionPath_userInfo], v252, 33, 0);
    sub_1005B1814(v93, v97);
    swift_endAccess(v252);
  }
  v98 = v90;
  v99 = (uint64_t)v247;
  v100 = (uint64_t)&v247[*(int *)(v248 + 28)];
  v101 = v241;
  sub_1004CB7BC(v100, v241, &qword_1013E4F40);
  v102 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v242 + 48);
  v103 = v102(v101, 1, v91);
  sub_1004CB800(v101, &qword_1013E4F40);
  if (v103 == 1)
  {
    v73 = v98;

    sub_1004BBBC8(v249, v89);
    v104 = v99;
LABEL_27:
    sub_1004B84A4(v104, type metadata accessor for CRLProto_PersistableSelectionPath);
    return v73;
  }
  v105 = v238;
  sub_1004CB7BC(v100, v238, &qword_1013E4F40);
  v106 = v102(v105, 1, v91);
  v73 = v98;
  v251 = v100;
  if ((_DWORD)v106 == 1)
  {
    v107 = v105;
    v108 = v236;
    *v236 = 0;
    *((_BYTE *)v108 + 8) = 1;
    UnknownStorage.init()(v106);
    v109 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v246 + 56);
    v110 = v239;
    v109((char *)v108 + v91[6], 1, 1, v239);
    v109((char *)v108 + v91[7], 1, 1, v110);
    v109((char *)v108 + v91[8], 1, 1, v110);
    v111 = (char *)v108 + v91[9];
    *(_DWORD *)v111 = 0;
    v111[4] = 1;
    *((_BYTE *)v108 + v91[10]) = 2;
    v112 = (char *)v108 + v91[11];
    *(_DWORD *)v112 = 0;
    v112[4] = 1;
    sub_1004CB800(v107, &qword_1013E4F40);
  }
  else
  {
    v113 = v105;
    v108 = v236;
    sub_1004B84E0(v113, (uint64_t)v236, type metadata accessor for CRLProto_TextSelection);
    v110 = v239;
  }
  v114 = (uint64_t)v247;
  v115 = (uint64_t)v237;
  v116 = (uint64_t)v108;
  v117 = *v108;
  v118 = *(unsigned __int8 *)(v116 + 8);
  sub_1004B84A4(v116, type metadata accessor for CRLProto_TextSelection);
  if (v118 != 1)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"init(from:)", 11, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPersistableSelectionPath.swift", 94, 2, 127, "Unrecognized type of text selection", 35, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(from:)", 11, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPersistableSelectionPath.swift", 94, 2u, 127, (uint64_t)"Unrecognized type of text selection", 35, 2u);

    sub_1004BBBC8(v249, v89);
    v104 = v114;
    goto LABEL_27;
  }
  if (v117)
  {
    v119 = v234;
    sub_1004CB7BC(v251, v234, &qword_1013E4F40);
    v120 = v102(v119, 1, v91);
    v250 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v102;
    v121 = v235;
    if ((_DWORD)v120 == 1)
    {
      *v235 = 0;
      *((_BYTE *)v121 + 8) = 1;
      UnknownStorage.init()(v120);
      v122 = v246;
      v123 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v246 + 56);
      v123((char *)v121 + v91[6], 1, 1, v110);
      v123((char *)v121 + v91[7], 1, 1, v110);
      v123((char *)v121 + v91[8], 1, 1, v110);
      v124 = (char *)v121 + v91[9];
      *(_DWORD *)v124 = 0;
      v124[4] = 1;
      *((_BYTE *)v121 + v91[10]) = 2;
      v125 = (char *)v121 + v91[11];
      *(_DWORD *)v125 = 0;
      v125[4] = 1;
      sub_1004CB800(v234, &qword_1013E4F40);
    }
    else
    {
      sub_1004B84E0(v119, (uint64_t)v235, type metadata accessor for CRLProto_TextSelection);
      v122 = v246;
    }
    v133 = (uint64_t)v231;
    v134 = v230;
    sub_1004CB7BC((uint64_t)v121 + v91[7], v230, (uint64_t *)&unk_1013E16F0);
    v135 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v122 + 48);
    v136 = v135(v134, 1, v110);
    v215 = v89;
    v137 = v229;
    if ((_DWORD)v136 == 1)
    {
      *(_OWORD *)v229 = xmmword_100EF78C0;
      UnknownStorage.init()(v136);
      sub_1004CB800(v134, (uint64_t *)&unk_1013E16F0);
    }
    else
    {
      sub_1004B84E0(v134, (uint64_t)v229, type metadata accessor for CRLProto_Data);
    }
    v138 = v235;
    v139 = sub_1004B804C(&qword_1013E30E0);
    sub_1004B84A4((uint64_t)v138, type metadata accessor for CRLProto_TextSelection);
    v140 = *v137;
    v141 = v137[1];
    sub_1004BE310(*v137, v141);
    sub_1004B84A4((uint64_t)v137, type metadata accessor for CRLProto_Data);
    v142 = sub_1005B185C();
    v143 = v256;
    CRValue.init(serializedData:)(v140, v141, v139, v142);
    if (v143)
    {

      sub_1004BBBC8(v249, v215);
      sub_1004B84A4((uint64_t)v247, type metadata accessor for CRLProto_PersistableSelectionPath);
    }
    else
    {
      v144 = v224;
      sub_1004CB7BC(v251, v224, &qword_1013E4F40);
      v145 = (int *)v244;
      v146 = v250(v144, 1, v244);
      v147 = v133;
      if ((_DWORD)v146 == 1)
      {
        *(_QWORD *)v133 = 0;
        *(_BYTE *)(v133 + 8) = 1;
        UnknownStorage.init()(v146);
        v148 = v133 + v145[6];
        v149 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v246 + 56);
        v150 = v239;
        v149(v148, 1, 1, v239);
        v149(v147 + v145[7], 1, 1, v150);
        v149(v147 + v145[8], 1, 1, v150);
        v151 = v147 + v145[9];
        *(_DWORD *)v151 = 0;
        *(_BYTE *)(v151 + 4) = 1;
        *(_BYTE *)(v147 + v145[10]) = 2;
        v152 = v147 + v145[11];
        *(_DWORD *)v152 = 0;
        *(_BYTE *)(v152 + 4) = 1;
        sub_1004CB800(v224, &qword_1013E4F40);
      }
      else
      {
        sub_1004B84E0(v144, v133, type metadata accessor for CRLProto_TextSelection);
        v150 = v239;
      }
      v170 = v223;
      sub_1004CB7BC(v147 + v145[8], v223, (uint64_t *)&unk_1013E16F0);
      v171 = v135(v170, 1, v150);
      if ((_DWORD)v171 == 1)
      {
        v172 = v222;
        *(_OWORD *)v222 = xmmword_100EF78C0;
        v173 = v172;
        UnknownStorage.init()(v171);
        sub_1004CB800(v170, (uint64_t *)&unk_1013E16F0);
      }
      else
      {
        v173 = v222;
        sub_1004B84E0(v170, (uint64_t)v222, type metadata accessor for CRLProto_Data);
      }
      v174 = (uint64_t)v233;
      sub_1004B804C(&qword_1013E41E0);
      sub_1004B84A4(v147, type metadata accessor for CRLProto_TextSelection);
      v175 = (uint64_t)v173;
      v176 = *v173;
      v177 = v173[1];
      sub_1004BE310(v176, v177);
      sub_1004B84A4(v175, type metadata accessor for CRLProto_Data);
      CRValue.init(serializedData:)(v176, v177, v139, v142);

      sub_1004BBBC8(v249, v215);
      sub_1004B84A4((uint64_t)v247, type metadata accessor for CRLProto_PersistableSelectionPath);
      v178 = v214;
      swift_storeEnumTagMultiPayload(v174, v214, 1);
      v243((char *)v174, 0, 1, v178);
      v179 = (uint64_t)&v73[OBJC_IVAR____TtC8Freeform27CRLPersistableSelectionPath_userInfo];
      swift_beginAccess(&v73[OBJC_IVAR____TtC8Freeform27CRLPersistableSelectionPath_userInfo], v252, 33, 0);
      sub_1005B1814(v174, v179);
      swift_endAccess(v252);
    }
  }
  else
  {
    v127 = v228;
    sub_1004CB7BC(v251, v228, &qword_1013E4F40);
    v128 = v102(v127, 1, v91);
    if ((_DWORD)v128 == 1)
    {
      *(_QWORD *)v115 = 0;
      *(_BYTE *)(v115 + 8) = 1;
      UnknownStorage.init()(v128);
      v129 = v246;
      v130 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v246 + 56);
      v130(v115 + v91[6], 1, 1, v110);
      v130(v115 + v91[7], 1, 1, v110);
      v130(v115 + v91[8], 1, 1, v110);
      v131 = v115 + v91[9];
      *(_DWORD *)v131 = 0;
      *(_BYTE *)(v131 + 4) = 1;
      *(_BYTE *)(v115 + v91[10]) = 2;
      v132 = v115 + v91[11];
      *(_DWORD *)v132 = 0;
      *(_BYTE *)(v132 + 4) = 1;
      sub_1004CB800(v228, &qword_1013E4F40);
    }
    else
    {
      sub_1004B84E0(v127, v115, type metadata accessor for CRLProto_TextSelection);
      v129 = v246;
    }
    v153 = v226;
    sub_1004CB7BC(v115 + v91[6], v226, (uint64_t *)&unk_1013E16F0);
    v154 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v129 + 48))(v153, 1, v110);
    v155 = v225;
    if ((_DWORD)v154 == 1)
    {
      *(_OWORD *)v225 = xmmword_100EF78C0;
      UnknownStorage.init()(v154);
      sub_1004CB800(v153, (uint64_t *)&unk_1013E16F0);
    }
    else
    {
      sub_1004B84E0(v153, (uint64_t)v225, type metadata accessor for CRLProto_Data);
    }
    v156 = (uint64_t)v227;
    v157 = sub_1004B804C(&qword_1013E30E0);
    sub_1004B84A4(v115, type metadata accessor for CRLProto_TextSelection);
    v158 = (uint64_t)v155;
    v159 = *v155;
    v160 = *(_QWORD *)(v158 + 8);
    sub_1004BE310(v159, v160);
    sub_1004B84A4(v158, type metadata accessor for CRLProto_Data);
    v161 = sub_1005B185C();
    v162 = v256;
    CRValue.init(serializedData:)(v159, v160, v157, v161);
    if (v162)
    {

      sub_1004BBBC8(v249, v89);
LABEL_14:

      sub_1004B84A4((uint64_t)v247, type metadata accessor for CRLProto_PersistableSelectionPath);
      return v73;
    }
    v163 = v219;
    sub_1004CB7BC(v251, v219, &qword_1013E4F40);
    v164 = v102(v163, 1, v91);
    v215 = v89;
    v256 = 0;
    v165 = v217;
    if ((_DWORD)v164 == 1)
    {
      *v217 = 0;
      *((_BYTE *)v165 + 8) = 1;
      UnknownStorage.init()(v164);
      v166 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v246 + 56);
      v167 = v239;
      v166((char *)v165 + v91[6], 1, 1, v239);
      v166((char *)v165 + v91[7], 1, 1, v167);
      v166((char *)v165 + v91[8], 1, 1, v167);
      v168 = (char *)v165 + v91[9];
      *(_DWORD *)v168 = 0;
      v168[4] = 1;
      *((_BYTE *)v165 + v91[10]) = 2;
      v169 = (char *)v165 + v91[11];
      *(_DWORD *)v169 = 0;
      v169[4] = 1;
      sub_1004CB800(v163, &qword_1013E4F40);
    }
    else
    {
      sub_1004B84E0(v163, (uint64_t)v217, type metadata accessor for CRLProto_TextSelection);
    }
    v180 = (unsigned int *)((char *)v165 + v91[9]);
    v181 = *v180;
    v182 = *((unsigned __int8 *)v180 + 4);
    v183 = (int *)sub_1004B804C(&qword_1013E41E8);
    v184 = (uint64_t)v165;
    v185 = v183[12];
    sub_1004B84A4(v184, type metadata accessor for CRLProto_TextSelection);
    if (v182)
      v186 = 0;
    else
      v186 = v181;
    *(_QWORD *)&v232[v185] = v186;
    v187 = v220;
    sub_1004CB7BC(v251, v220, &qword_1013E4F40);
    v188 = v102(v187, 1, v91);
    if ((_DWORD)v188 == 1)
    {
      *(_QWORD *)v156 = 0;
      *(_BYTE *)(v156 + 8) = 1;
      UnknownStorage.init()(v188);
      v189 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v246 + 56);
      v190 = v239;
      v189(v156 + v91[6], 1, 1, v239);
      v189(v156 + v91[7], 1, 1, v190);
      v189(v156 + v91[8], 1, 1, v190);
      v191 = v156 + v91[9];
      *(_DWORD *)v191 = 0;
      *(_BYTE *)(v191 + 4) = 1;
      *(_BYTE *)(v156 + v91[10]) = 2;
      v192 = v156 + v91[11];
      *(_DWORD *)v192 = 0;
      *(_BYTE *)(v192 + 4) = 1;
      sub_1004CB800(v187, &qword_1013E4F40);
    }
    else
    {
      sub_1004B84E0(v187, v156, type metadata accessor for CRLProto_TextSelection);
    }
    v193 = v215;
    v194 = *(_BYTE *)(v156 + v91[10]) & 1;
    v195 = v183[16];
    sub_1004B84A4(v156, type metadata accessor for CRLProto_TextSelection);
    v232[v195] = v194;
    v196 = v221;
    sub_1004CB7BC(v251, v221, &qword_1013E4F40);
    v197 = v102(v196, 1, v91);
    if ((_DWORD)v197 == 1)
    {
      v198 = v218;
      *v218 = 0;
      *((_BYTE *)v198 + 8) = 1;
      UnknownStorage.init()(v197);
      v199 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v246 + 56);
      v200 = v239;
      v199((char *)v198 + v91[6], 1, 1, v239);
      v199((char *)v198 + v91[7], 1, 1, v200);
      v199((char *)v198 + v91[8], 1, 1, v200);
      v201 = (char *)v198 + v91[9];
      *(_DWORD *)v201 = 0;
      v201[4] = 1;
      *((_BYTE *)v198 + v91[10]) = 2;
      v202 = (char *)v198 + v91[11];
      *(_DWORD *)v202 = 0;
      v202[4] = 1;
      v203 = v198;
      sub_1004CB800(v196, &qword_1013E4F40);
    }
    else
    {
      v203 = v218;
      sub_1004B84E0(v196, (uint64_t)v218, type metadata accessor for CRLProto_TextSelection);
    }
    v204 = v249;

    sub_1004BBBC8(v204, v193);
    v205 = (unsigned int *)((char *)v203 + v91[11]);
    v206 = (uint64_t)v203;
    v207 = *v205;
    v208 = *((unsigned __int8 *)v205 + 4);
    v209 = v183[20];
    sub_1004B84A4(v206, type metadata accessor for CRLProto_TextSelection);
    if (v208)
      v207 = 0;
    sub_1004B84A4((uint64_t)v247, type metadata accessor for CRLProto_PersistableSelectionPath);
    v210 = (uint64_t)v232;
    *(_QWORD *)&v232[v209] = v207;
    v211 = v214;
    swift_storeEnumTagMultiPayload(v210, v214, 0);
    v243((char *)v210, 0, 1, v211);
    v212 = (uint64_t)&v73[OBJC_IVAR____TtC8Freeform27CRLPersistableSelectionPath_userInfo];
    swift_beginAccess(&v73[OBJC_IVAR____TtC8Freeform27CRLPersistableSelectionPath_userInfo], v252, 33, 0);
    sub_1005B1814(v210, v212);
    swift_endAccess(v252);
  }
  return v73;
}

uint64_t sub_1005AEE24(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  double *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(void);
  uint64_t *v76;
  uint64_t v77;
  int64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  char v86;
  char v87;
  char v88;
  char v89;
  char v90;
  char v91;
  char v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void (*v101)(char *, uint64_t);
  uint64_t (*v102)(uint64_t, uint64_t, void (*)(char *, uint64_t));
  int v103;
  int *v104;
  char *v105;
  char v106;
  BOOL v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  int EnumCaseMultiPayload;
  uint64_t v113;
  uint64_t v114;
  int *v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  uint64_t v119;
  void (*v120)(char *, uint64_t, uint64_t, uint64_t);
  char *v121;
  char *v122;
  uint64_t v123;
  _QWORD *v124;
  uint64_t v125;
  unint64_t v126;
  void (*v127)(char *);
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  _QWORD *v133;
  void (*v134)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v135;
  _QWORD *v136;
  char *v137;
  char *v138;
  uint64_t v139;
  void (*v140)(void);
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  void (*v153)(char *, _QWORD, uint64_t);
  unint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  _QWORD *v164;
  uint64_t v165;
  uint64_t v166;
  void (*v167)(char *, uint64_t, uint64_t, uint64_t);
  char *v168;
  char *v169;
  uint64_t v170;
  uint64_t (*v171)(uint64_t, uint64_t, int *);
  uint64_t v172;
  _QWORD *v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  void (*v177)(char *, uint64_t, uint64_t, uint64_t);
  char *v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  void (*v185)(char *, uint64_t);
  _OWORD *v186;
  uint64_t v187;
  _OWORD *v188;
  uint64_t v189;
  void (*v190)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v191;
  void (*v192)(void);
  int v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  _OWORD *v203;
  uint64_t v204;
  void (*v205)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v206;
  int *v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  _QWORD *v218;
  uint64_t v219;
  char *v220;
  char *v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  _QWORD *v227;
  _QWORD *v228;
  char *v229;
  char *v230;
  char *v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t result;
  uint64_t v236;
  uint64_t v237;
  _QWORD *v238;
  uint64_t v239;
  char *v240;
  char *v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  _OWORD *v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  _OWORD *v250;
  uint64_t v251;
  _QWORD *v252;
  uint64_t v253;
  _OWORD *v254;
  _OWORD *v255;
  uint64_t v256;
  uint64_t v257;
  _QWORD *v258;
  uint64_t v259;
  uint64_t v260;
  char *v261;
  uint64_t v262;
  char *v263;
  _QWORD *v264;
  uint64_t v265;
  _QWORD *v266;
  uint64_t v267;
  _QWORD *v268;
  uint64_t v269;
  uint64_t v270;
  _QWORD *v271;
  _QWORD *v272;
  char *v273;
  char *v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  char *v278;
  char *v279;
  uint64_t v280;
  void (*v281)(void);
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  void (*v286)(char *, uint64_t);
  unint64_t v287;
  unint64_t v288;
  char *v289;
  uint64_t v290;
  uint64_t v291;
  char *v292;
  uint64_t v293;
  int *v294;
  unint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  double *v299;
  uint64_t v300;
  char v301;
  char v302;
  char v303;
  char v304;
  char v305;
  char v306;
  char v307;
  char v308;
  char v309[8];

  v280 = a1;
  v1 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  __chkstk_darwin(v1);
  v253 = (uint64_t)&v250 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v260 = (uint64_t)&v250 - v4;
  __chkstk_darwin(v5);
  v259 = (uint64_t)&v250 - v6;
  v282 = type metadata accessor for CRCodableVersion(0);
  v277 = *(_QWORD *)(v282 - 8);
  __chkstk_darwin(v282);
  v263 = (char *)&v250 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v274 = (char *)&v250 - v9;
  __chkstk_darwin(v10);
  v273 = (char *)&v250 - v11;
  v12 = sub_1004B804C(&qword_1013E4F40);
  __chkstk_darwin(v12);
  v251 = (uint64_t)&v250 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v257 = (uint64_t)&v250 - v15;
  __chkstk_darwin(v16);
  v270 = (uint64_t)&v250 - v17;
  __chkstk_darwin(v18);
  v267 = (uint64_t)&v250 - v19;
  __chkstk_darwin(v20);
  v265 = (uint64_t)&v250 - v21;
  __chkstk_darwin(v22);
  v262 = (uint64_t)&v250 - v23;
  __chkstk_darwin(v24);
  v256 = (uint64_t)&v250 - v25;
  __chkstk_darwin(v26);
  v269 = (uint64_t)&v250 - v27;
  v294 = (int *)type metadata accessor for CRLProto_TextSelection(0);
  v28 = *((_QWORD *)v294 - 1);
  __chkstk_darwin(v294);
  v252 = (_OWORD **)((char *)&v250 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v30);
  v258 = (_OWORD **)((char *)&v250 - v31);
  __chkstk_darwin(v32);
  v272 = (_OWORD **)((char *)&v250 - v33);
  __chkstk_darwin(v34);
  v266 = (_OWORD **)((char *)&v250 - v35);
  __chkstk_darwin(v36);
  v264 = (_OWORD **)((char *)&v250 - v37);
  __chkstk_darwin(v38);
  v261 = (char *)&v250 - v39;
  __chkstk_darwin(v40);
  v268 = (_OWORD **)((char *)&v250 - v41);
  __chkstk_darwin(v42);
  v271 = (_OWORD **)((char *)&v250 - v43);
  v285 = sub_1004B804C(&qword_1013E30E0);
  v283 = *(_QWORD *)(v285 - 8);
  __chkstk_darwin(v285);
  v278 = (char *)&v250 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v45);
  v279 = (char *)&v250 - v46;
  __chkstk_darwin(v47);
  v289 = (char *)&v250 - v48;
  v49 = type metadata accessor for UUID(0);
  v50 = *(_QWORD *)(v49 - 8);
  __chkstk_darwin(v49);
  v52 = (char *)&v250 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = type metadata accessor for CRLProto_Data(0);
  v298 = *(_QWORD *)(v53 - 8);
  __chkstk_darwin(v53);
  v250 = (_OWORD *)((char *)&v250 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v55);
  v255 = (_OWORD *)((char *)&v250 - v56);
  __chkstk_darwin(v57);
  v254 = (_OWORD *)((char *)&v250 - v58);
  __chkstk_darwin(v59);
  v61 = (_OWORD **)((char *)&v250 - v60);
  v62 = sub_1004B804C(&qword_1013E41D8);
  __chkstk_darwin(v62);
  v287 = (unint64_t)&v250 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v64);
  v291 = (uint64_t)&v250 - v65;
  __chkstk_darwin(v66);
  v288 = (unint64_t)&v250 - v67;
  v68 = type metadata accessor for CRLProto_PersistableSelectionPath(0);
  __chkstk_darwin(v68);
  v70 = (char *)&v250 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = _swiftEmptyArrayStorage;
  *(_QWORD *)v70 = _swiftEmptyArrayStorage;
  v70[8] = 0;
  UnknownStorage.init()(v72);
  v284 = v68;
  v73 = *(int *)(v68 + 28);
  v292 = v70;
  v74 = (uint64_t)&v70[v73];
  v276 = v28;
  v75 = *(void (**)(void))(v28 + 56);
  v286 = (void (*)(char *, uint64_t))v74;
  v281 = v75;
  v75();
  v76 = (uint64_t *)(v293 + OBJC_IVAR____TtC8Freeform27CRLPersistableSelectionPath_mostSpecificItemSelectionUUIDs);
  swift_beginAccess(v293 + OBJC_IVAR____TtC8Freeform27CRLPersistableSelectionPath_mostSpecificItemSelectionUUIDs, v309, 0, 0);
  v77 = *v76;
  v78 = *(_QWORD *)(v77 + 16);
  v297 = v53;
  if (v78)
  {
    v299 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(v77);
    sub_100600A34(0, v78, 0);
    v79 = (*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
    v275 = v77;
    v80 = v77 + v79;
    v81 = *(_QWORD *)(v50 + 72);
    v295 = *(_QWORD *)(v50 + 16);
    v296 = v81;
    v82 = v50;
    do
    {
      v83 = ((uint64_t (*)(char *, uint64_t, uint64_t))v295)(v52, v80, v49);
      v84 = UnknownStorage.init()(v83);
      v300 = UUID.uuid.getter(v84);
      v301 = v85;
      v302 = v86;
      v303 = v87;
      v304 = v88;
      v305 = v89;
      v306 = v90;
      v307 = v91;
      v308 = v92;
      UUID.uuid.getter(v300);
      v93 = type metadata accessor for __DataStorage(0);
      swift_allocObject(v93, *(unsigned int *)(v93 + 48), *(unsigned __int16 *)(v93 + 52));
      v94 = __DataStorage.init(bytes:length:)(&v300, 16);
      *v61 = 0x1000000000;
      v61[1] = v94 | 0x4000000000000000;
      (*(void (**)(char *, uint64_t))(v82 + 8))(v52, v49);
      v71 = v299;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100600A34(0, *((_QWORD *)v71 + 2) + 1, 1);
        v71 = v299;
      }
      v96 = *((_QWORD *)v71 + 2);
      v95 = *((_QWORD *)v71 + 3);
      if (v96 >= v95 >> 1)
      {
        sub_100600A34(v95 > 1, v96 + 1, 1);
        v71 = v299;
      }
      *((_QWORD *)v71 + 2) = v96 + 1;
      sub_1004B84E0((uint64_t)v61, (uint64_t)v71+ ((*(unsigned __int8 *)(v298 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v298 + 80))+ *(_QWORD *)(v298 + 72) * v96, type metadata accessor for CRLProto_Data);
      v53 = v297;
      v80 += v296;
      --v78;
      v82 = v50;
    }
    while (v78);
    swift_bridgeObjectRelease();
  }
  v97 = v290;
  v98 = (uint64_t)v292;
  swift_bridgeObjectRelease();
  *(_QWORD *)v98 = v71;
  v99 = v293 + OBJC_IVAR____TtC8Freeform27CRLPersistableSelectionPath_userInfo;
  swift_beginAccess(v293 + OBJC_IVAR____TtC8Freeform27CRLPersistableSelectionPath_userInfo, &v300, 0, 0);
  v100 = v288;
  sub_1004CB7BC(v99, v288, &qword_1013E41D8);
  v101 = (void (*)(char *, uint64_t))type metadata accessor for CRLPersistableSelectionPath.UserInfo(0);
  v102 = *(uint64_t (**)(uint64_t, uint64_t, void (*)(char *, uint64_t)))(*((_QWORD *)v101 - 1) + 48);
  v103 = v102(v100, 1, v101);
  v104 = v294;
  v105 = v289;
  if (v103 == 1)
  {
    sub_1004CB800(v100, &qword_1013E41D8);
    v106 = 0;
  }
  else
  {
    v107 = swift_getEnumCaseMultiPayload(v100, v101) == 2;
    v108 = v100;
    v106 = v107;
    sub_1004B84A4(v108, type metadata accessor for CRLPersistableSelectionPath.UserInfo);
  }
  *(_BYTE *)(v98 + 8) = v106;
  v109 = v99;
  v110 = v291;
  sub_1004CB7BC(v109, v291, &qword_1013E41D8);
  if (v102(v110, 1, v101) == 1)
    goto LABEL_56;
  v111 = v287;
  sub_1004CB7BC(v110, v287, &qword_1013E41D8);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v111, v101);
  if (EnumCaseMultiPayload == 1)
  {
    v125 = sub_1004B804C(&qword_1013E41E0);
    v126 = v287 + *(int *)(v125 + 48);
    v127 = *(void (**)(char *))(v283 + 32);
    v128 = v285;
    v127(v279);
    ((void (*)(char *, unint64_t, uint64_t))v127)(v278, v126, v128);
    v129 = (uint64_t)v286;
    v130 = v270;
    sub_1004CB7BC((uint64_t)v286, v270, &qword_1013E4F40);
    v295 = *(_QWORD *)(v276 + 48);
    v131 = ((uint64_t (*)(uint64_t, uint64_t, int *))v295)(v130, 1, v104);
    v132 = v282;
    if ((_DWORD)v131 == 1)
    {
      v133 = v272;
      *v272 = 0;
      *((_BYTE *)v133 + 8) = 1;
      UnknownStorage.init()(v131);
      v134 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v298 + 56);
      v134((char *)v133 + v104[6], 1, 1, v53);
      v134((char *)v133 + v104[7], 1, 1, v53);
      v135 = v53;
      v136 = v133;
      v134((char *)v133 + v104[8], 1, 1, v135);
      v137 = (char *)v133 + v104[9];
      *(_DWORD *)v137 = 0;
      v137[4] = 1;
      *((_BYTE *)v133 + v104[10]) = 2;
      v138 = (char *)v133 + v104[11];
      *(_DWORD *)v138 = 0;
      v138[4] = 1;
      sub_1004CB800(v130, &qword_1013E4F40);
    }
    else
    {
      v136 = v272;
      sub_1004B84E0(v130, (uint64_t)v272, type metadata accessor for CRLProto_TextSelection);
    }
    v150 = v280;
    v151 = v277;
    v152 = v274;
    *v136 = 1;
    *((_BYTE *)v136 + 8) = 1;
    sub_1004CB800(v129, &qword_1013E4F40);
    sub_1004B84E0((uint64_t)v136, v129, type metadata accessor for CRLProto_TextSelection);
    ((void (*)(uint64_t, _QWORD, uint64_t, int *))v281)(v129, 0, 1, v104);
    v153 = *(void (**)(char *, _QWORD, uint64_t))(v151 + 104);
    v153(v152, enum case for CRCodableVersion.version3(_:), v132);
    v154 = sub_1005B185C();
    v155 = v150;
    v156 = v151;
    v157 = v285;
    v158 = v279;
    v159 = v290;
    v296 = CRValue.serializedData(_:version:)(v155, v152, v285, v154);
    v293 = v160;
    if (v159)
    {
      (*(void (**)(char *, uint64_t))(v156 + 8))(v152, v132);
      v101 = *(void (**)(char *, uint64_t))(v283 + 8);
      v101(v278, v157);
      v101(v158, v157);
      goto LABEL_46;
    }
    v287 = v154;
    v288 = (unint64_t)v153;
    v289 = *(char **)(v156 + 8);
    v290 = 0;
    ((void (*)(char *, uint64_t))v289)(v152, v132);
    v170 = v257;
    sub_1004CB7BC((uint64_t)v286, v257, &qword_1013E4F40);
    v171 = (uint64_t (*)(uint64_t, uint64_t, int *))v295;
    v172 = ((uint64_t (*)(uint64_t, uint64_t, int *))v295)(v170, 1, v104);
    v173 = v258;
    if ((_DWORD)v172 == 1)
    {
      *v258 = 0;
      *((_BYTE *)v173 + 8) = 1;
      UnknownStorage.init()(v172);
      v174 = (char *)v173 + v104[6];
      v176 = v297;
      v175 = v298;
      v177 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v298 + 56);
      v177(v174, 1, 1, v297);
      v177((char *)v173 + v294[7], 1, 1, v176);
      v177((char *)v173 + v294[8], 1, 1, v176);
      v104 = v294;
      v178 = (char *)v173 + v294[9];
      *(_DWORD *)v178 = 0;
      v178[4] = 1;
      *((_BYTE *)v173 + v104[10]) = 2;
      v179 = (char *)v173 + v104[11];
      *(_DWORD *)v179 = 0;
      v179[4] = 1;
      sub_1004CB800(v170, &qword_1013E4F40);
    }
    else
    {
      sub_1004B84E0(v170, (uint64_t)v258, type metadata accessor for CRLProto_TextSelection);
      v176 = v297;
      v175 = v298;
    }
    v200 = v260;
    v201 = (uint64_t)v173 + v104[7];
    sub_1004CB7BC(v201, v260, (uint64_t *)&unk_1013E16F0);
    v277 = *(_QWORD *)(v175 + 48);
    v202 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v277)(v200, 1, v176);
    v203 = v255;
    if ((_DWORD)v202 == 1)
    {
      *v255 = xmmword_100EF78C0;
      UnknownStorage.init()(v202);
      sub_1004CB800(v200, (uint64_t *)&unk_1013E16F0);
    }
    else
    {
      sub_1004B84E0(v200, (uint64_t)v255, type metadata accessor for CRLProto_Data);
    }
    sub_1004BBBC8(*(_QWORD *)v203, *((_QWORD *)v203 + 1));
    v204 = v293;
    *(_QWORD *)v203 = v296;
    *((_QWORD *)v203 + 1) = v204;
    sub_1004CB800(v201, (uint64_t *)&unk_1013E16F0);
    sub_1004B84E0((uint64_t)v203, v201, type metadata accessor for CRLProto_Data);
    v205 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v298 + 56);
    v205(v201, 0, 1, v176);
    v206 = (uint64_t)v286;
    sub_1004CB800((uint64_t)v286, &qword_1013E4F40);
    sub_1004B84E0((uint64_t)v173, v206, type metadata accessor for CRLProto_TextSelection);
    v207 = v294;
    ((void (*)(uint64_t, _QWORD, uint64_t, int *))v281)(v206, 0, 1, v294);
    v208 = v263;
    v209 = v282;
    ((void (*)(void))v288)();
    v210 = v285;
    v211 = v278;
    v212 = v290;
    v213 = CRValue.serializedData(_:version:)(v280, v208, v285, v287);
    if (v212)
    {
      ((void (*)(char *, uint64_t))v289)(v208, v209);
      v101 = *(void (**)(char *, uint64_t))(v283 + 8);
      v101(v211, v210);
      v101(v279, v210);
      goto LABEL_46;
    }
    v296 = v214;
    v298 = v213;
    ((void (*)(char *, uint64_t))v289)(v208, v209);
    v236 = v251;
    sub_1004CB7BC(v206, v251, &qword_1013E4F40);
    v237 = v171(v236, 1, v207);
    v238 = v252;
    if ((_DWORD)v237 == 1)
    {
      *v252 = 0;
      *((_BYTE *)v238 + 8) = 1;
      UnknownStorage.init()(v237);
      v239 = v297;
      v205((uint64_t)v238 + v207[6], 1, 1, v297);
      v205((uint64_t)v238 + v207[7], 1, 1, v239);
      v205((uint64_t)v238 + v207[8], 1, 1, v239);
      v240 = (char *)v238 + v207[9];
      *(_DWORD *)v240 = 0;
      v240[4] = 1;
      *((_BYTE *)v238 + v207[10]) = 2;
      v241 = (char *)v238 + v207[11];
      *(_DWORD *)v241 = 0;
      v241[4] = 1;
      sub_1004CB800(v236, &qword_1013E4F40);
      v97 = 0;
    }
    else
    {
      sub_1004B84E0(v236, (uint64_t)v252, type metadata accessor for CRLProto_TextSelection);
      v97 = 0;
      v239 = v297;
    }
    v242 = v253;
    v243 = (uint64_t)v238 + v207[8];
    sub_1004CB7BC(v243, v253, (uint64_t *)&unk_1013E16F0);
    v244 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v277)(v242, 1, v239);
    v98 = (uint64_t)v292;
    v245 = (uint64_t)v238;
    v246 = v250;
    if ((_DWORD)v244 == 1)
    {
      *v250 = xmmword_100EF78C0;
      UnknownStorage.init()(v244);
      sub_1004CB800(v242, (uint64_t *)&unk_1013E16F0);
    }
    else
    {
      sub_1004B84E0(v242, (uint64_t)v250, type metadata accessor for CRLProto_Data);
    }
    v232 = v284;
    sub_1004BBBC8(*(_QWORD *)v246, *((_QWORD *)v246 + 1));
    v247 = v296;
    *(_QWORD *)v246 = v298;
    *((_QWORD *)v246 + 1) = v247;
    sub_1004CB800(v243, (uint64_t *)&unk_1013E16F0);
    sub_1004B84E0((uint64_t)v246, v243, type metadata accessor for CRLProto_Data);
    v205(v243, 0, 1, v239);
    v248 = (uint64_t)v286;
    sub_1004CB800((uint64_t)v286, &qword_1013E4F40);
    sub_1004B84E0(v245, v248, type metadata accessor for CRLProto_TextSelection);
    ((void (*)(uint64_t, _QWORD, uint64_t, int *))v281)(v248, 0, 1, v294);
    v101 = *(void (**)(char *, uint64_t))(v283 + 8);
    v249 = v285;
    v101(v278, v285);
    v101(v279, v249);
    v110 = v291;
LABEL_57:
    sub_1004CB800(v110, &qword_1013E41D8);
    v233 = sub_1004B7878(&qword_1013E4F48, type metadata accessor for CRLProto_PersistableSelectionPath, (uint64_t)&unk_100F25860);
    v234 = Message.serializedData(partial:)(0, v232, v233);
    if (!v97)
    {
      v101 = (void (*)(char *, uint64_t))v234;
      sub_1004B84A4(v98, type metadata accessor for CRLProto_PersistableSelectionPath);
      return (uint64_t)v101;
    }
LABEL_58:
    sub_1004B84A4(v98, type metadata accessor for CRLProto_PersistableSelectionPath);
    return (uint64_t)v101;
  }
  v113 = v285;
  v114 = v282;
  if (EnumCaseMultiPayload)
  {
    sub_1004B84A4(v287, type metadata accessor for CRLPersistableSelectionPath.UserInfo);
LABEL_56:
    v232 = v284;
    goto LABEL_57;
  }
  v115 = (int *)sub_1004B804C(&qword_1013E41E8);
  v288 = *(_QWORD *)(v287 + v115[12]);
  LODWORD(v293) = *(unsigned __int8 *)(v287 + v115[16]);
  v295 = *(_QWORD *)(v287 + v115[20]);
  (*(void (**)(char *))(v283 + 32))(v105);
  v116 = v269;
  sub_1004CB7BC((uint64_t)v286, v269, &qword_1013E4F40);
  v296 = *(_QWORD *)(v276 + 48);
  v117 = ((uint64_t (*)(uint64_t, uint64_t, int *))v296)(v116, 1, v104);
  if ((_DWORD)v117 == 1)
  {
    v118 = v271;
    *v271 = 0;
    *((_BYTE *)v118 + 8) = 1;
    UnknownStorage.init()(v117);
    v119 = v297;
    v120 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v298 + 56);
    v120((char *)v118 + v104[6], 1, 1, v297);
    v120((char *)v118 + v104[7], 1, 1, v119);
    v120((char *)v118 + v104[8], 1, 1, v119);
    v121 = (char *)v118 + v104[9];
    *(_DWORD *)v121 = 0;
    v121[4] = 1;
    *((_BYTE *)v118 + v104[10]) = 2;
    v122 = (char *)v118 + v104[11];
    *(_DWORD *)v122 = 0;
    v122[4] = 1;
    v123 = v116;
    v124 = v118;
    sub_1004CB800(v123, &qword_1013E4F40);
  }
  else
  {
    v139 = v116;
    v124 = v271;
    sub_1004B84E0(v139, (uint64_t)v271, type metadata accessor for CRLProto_TextSelection);
  }
  v140 = v281;
  v141 = v280;
  v142 = v273;
  *v124 = 0;
  *((_BYTE *)v124 + 8) = 1;
  v143 = (uint64_t)v286;
  sub_1004CB800((uint64_t)v286, &qword_1013E4F40);
  sub_1004B84E0((uint64_t)v124, v143, type metadata accessor for CRLProto_TextSelection);
  ((void (*)(uint64_t, _QWORD, uint64_t, int *))v140)(v143, 0, 1, v104);
  v144 = v277;
  (*(void (**)(char *, _QWORD, uint64_t))(v277 + 104))(v142, enum case for CRCodableVersion.version3(_:), v114);
  v145 = sub_1005B185C();
  v146 = v141;
  v147 = v289;
  v101 = (void (*)(char *, uint64_t))CRValue.serializedData(_:version:)(v146, v142, v113, v145);
  v149 = v142;
  if (v97)
  {
    (*(void (**)(char *, uint64_t))(v144 + 8))(v142, v114);
    (*(void (**)(char *, uint64_t))(v283 + 8))(v147, v113);
LABEL_46:
    sub_1004CB800(v291, &qword_1013E41D8);
    v98 = (uint64_t)v292;
    goto LABEL_58;
  }
  v161 = v148;
  (*(void (**)(char *, uint64_t))(v144 + 8))(v149, v114);
  v162 = v256;
  sub_1004CB7BC(v143, v256, &qword_1013E4F40);
  v163 = ((uint64_t (*)(uint64_t, uint64_t, int *))v296)(v162, 1, v104);
  v164 = v268;
  if ((_DWORD)v163 == 1)
  {
    *v268 = 0;
    *((_BYTE *)v164 + 8) = 1;
    UnknownStorage.init()(v163);
    v166 = v297;
    v165 = v298;
    v167 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v298 + 56);
    v167((char *)v164 + v104[6], 1, 1, v297);
    v167((char *)v164 + v294[7], 1, 1, v166);
    v167((char *)v164 + v294[8], 1, 1, v166);
    v97 = 0;
    v104 = v294;
    v168 = (char *)v164 + v294[9];
    *(_DWORD *)v168 = 0;
    v168[4] = 1;
    *((_BYTE *)v164 + v104[10]) = 2;
    v169 = (char *)v164 + v104[11];
    *(_DWORD *)v169 = 0;
    v169[4] = 1;
    sub_1004CB800(v162, &qword_1013E4F40);
  }
  else
  {
    sub_1004B84E0(v162, (uint64_t)v268, type metadata accessor for CRLProto_TextSelection);
    v166 = v297;
    v165 = v298;
  }
  v180 = (uint64_t)v261;
  v181 = (uint64_t)v164 + v104[6];
  v182 = v259;
  sub_1004CB7BC(v181, v259, (uint64_t *)&unk_1013E16F0);
  v183 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v165 + 48))(v182, 1, v166);
  if ((_DWORD)v183 == 1)
  {
    v184 = v161;
    v185 = v101;
    v186 = v254;
    *v254 = xmmword_100EF78C0;
    UnknownStorage.init()(v183);
    v187 = v182;
    v188 = v186;
    v101 = v185;
    v161 = v184;
    v165 = v298;
    sub_1004CB800(v187, (uint64_t *)&unk_1013E16F0);
  }
  else
  {
    v189 = v182;
    v188 = v254;
    sub_1004B84E0(v189, (uint64_t)v254, type metadata accessor for CRLProto_Data);
  }
  sub_1004BBBC8(*(_QWORD *)v188, *((_QWORD *)v188 + 1));
  *(_QWORD *)v188 = v101;
  *((_QWORD *)v188 + 1) = v161;
  sub_1004CB800(v181, (uint64_t *)&unk_1013E16F0);
  sub_1004B84E0((uint64_t)v188, v181, type metadata accessor for CRLProto_Data);
  v190 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v165 + 56);
  v190(v181, 0, 1, v166);
  v191 = (uint64_t)v286;
  sub_1004CB800((uint64_t)v286, &qword_1013E4F40);
  sub_1004B84E0((uint64_t)v268, v191, type metadata accessor for CRLProto_TextSelection);
  v192 = v281;
  ((void (*)(uint64_t, _QWORD, uint64_t, int *))v281)(v191, 0, 1, v104);
  v193 = v288;
  if (!HIDWORD(v288))
  {
    v194 = v262;
    sub_1004CB7BC(v191, v262, &qword_1013E4F40);
    v195 = ((uint64_t (*)(uint64_t, uint64_t, int *))v296)(v194, 1, v104);
    if ((_DWORD)v195 == 1)
    {
      *(_QWORD *)v180 = 0;
      *(_BYTE *)(v180 + 8) = 1;
      UnknownStorage.init()(v195);
      v196 = v297;
      v190(v180 + v104[6], 1, 1, v297);
      v190(v180 + v104[7], 1, 1, v196);
      v197 = v196;
      v191 = (uint64_t)v286;
      v190(v180 + v104[8], 1, 1, v197);
      v198 = v180 + v104[9];
      *(_DWORD *)v198 = 0;
      *(_BYTE *)(v198 + 4) = 1;
      *(_BYTE *)(v180 + v104[10]) = 2;
      v199 = v180 + v104[11];
      *(_DWORD *)v199 = 0;
      *(_BYTE *)(v199 + 4) = 1;
      sub_1004CB800(v194, &qword_1013E4F40);
    }
    else
    {
      sub_1004B84E0(v194, v180, type metadata accessor for CRLProto_TextSelection);
    }
    v215 = v180 + v104[9];
    *(_DWORD *)v215 = v193;
    *(_BYTE *)(v215 + 4) = 0;
    sub_1004CB800(v191, &qword_1013E4F40);
    sub_1004B84E0(v180, v191, type metadata accessor for CRLProto_TextSelection);
    ((void (*)(uint64_t, _QWORD, uint64_t, int *))v192)(v191, 0, 1, v104);
    v216 = v265;
    sub_1004CB7BC(v191, v265, &qword_1013E4F40);
    v217 = ((uint64_t (*)(uint64_t, uint64_t, int *))v296)(v216, 1, v104);
    v218 = v264;
    if ((_DWORD)v217 == 1)
    {
      *v264 = 0;
      *((_BYTE *)v218 + 8) = 1;
      UnknownStorage.init()(v217);
      v219 = v297;
      v190((uint64_t)v218 + v104[6], 1, 1, v297);
      v190((uint64_t)v218 + v104[7], 1, 1, v219);
      v190((uint64_t)v218 + v104[8], 1, 1, v219);
      v220 = (char *)v218 + v104[9];
      *(_DWORD *)v220 = 0;
      v220[4] = 1;
      *((_BYTE *)v218 + v104[10]) = 2;
      v221 = (char *)v218 + v104[11];
      *(_DWORD *)v221 = 0;
      v221[4] = 1;
      sub_1004CB800(v216, &qword_1013E4F40);
      v222 = v285;
    }
    else
    {
      sub_1004B84E0(v216, (uint64_t)v264, type metadata accessor for CRLProto_TextSelection);
      v222 = v285;
      v219 = v297;
    }
    *((_BYTE *)v218 + v104[10]) = v293;
    v223 = (uint64_t)v218;
    v224 = (uint64_t)v286;
    sub_1004CB800((uint64_t)v286, &qword_1013E4F40);
    sub_1004B84E0(v223, v224, type metadata accessor for CRLProto_TextSelection);
    ((void (*)(uint64_t, _QWORD, uint64_t, int *))v192)(v224, 0, 1, v104);
    if (!HIDWORD(v295))
    {
      v225 = v267;
      sub_1004CB7BC(v224, v267, &qword_1013E4F40);
      v226 = ((uint64_t (*)(uint64_t, uint64_t, int *))v296)(v225, 1, v104);
      if ((_DWORD)v226 == 1)
      {
        v227 = v266;
        *v266 = 0;
        *((_BYTE *)v227 + 8) = 1;
        UnknownStorage.init()(v226);
        v190((uint64_t)v227 + v104[6], 1, 1, v219);
        v190((uint64_t)v227 + v104[7], 1, 1, v219);
        v190((uint64_t)v227 + v104[8], 1, 1, v219);
        v228 = v227;
        v229 = (char *)v227 + v104[9];
        *(_DWORD *)v229 = 0;
        v229[4] = 1;
        *((_BYTE *)v227 + v104[10]) = 2;
        v230 = (char *)v227 + v104[11];
        *(_DWORD *)v230 = 0;
        v230[4] = 1;
        sub_1004CB800(v225, &qword_1013E4F40);
      }
      else
      {
        v228 = v266;
        sub_1004B84E0(v225, (uint64_t)v266, type metadata accessor for CRLProto_TextSelection);
      }
      v98 = (uint64_t)v292;
      v231 = (char *)v228 + v104[11];
      *(_DWORD *)v231 = v295;
      v231[4] = 0;
      v101 = v286;
      sub_1004CB800((uint64_t)v286, &qword_1013E4F40);
      sub_1004B84E0((uint64_t)v228, (uint64_t)v101, type metadata accessor for CRLProto_TextSelection);
      ((void (*)(void (*)(char *, uint64_t), _QWORD, uint64_t, int *))v192)(v101, 0, 1, v104);
      (*(void (**)(char *, uint64_t))(v283 + 8))(v289, v222);
      v110 = v291;
      goto LABEL_56;
    }
  }
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Not enough bits to represent the passed value", 45, 2, "Swift/Integers.swift", 20, 2, 3455, 0);
  __break(1u);
  return result;
}

id sub_1005B09FC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLPersistableSelectionPath(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1005B0A74()
{
  return type metadata accessor for CRLPersistableSelectionPath(0);
}

uint64_t type metadata accessor for CRLPersistableSelectionPath(uint64_t a1)
{
  return sub_1004BD408(a1, (uint64_t *)&unk_1013E4E68, (uint64_t)&nominal type descriptor for CRLPersistableSelectionPath);
}

void sub_1005B0A90(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  sub_1005B0B0C(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 80);
  }
}

void sub_1005B0B0C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1013E4E78)
  {
    v2 = type metadata accessor for CRLPersistableSelectionPath.UserInfo(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1013E4E78);
  }
}

uint64_t type metadata accessor for CRLPersistableSelectionPath.UserInfo(uint64_t a1)
{
  return sub_1004BD408(a1, (uint64_t *)&unk_1013E4EF0, (uint64_t)&nominal type descriptor for CRLPersistableSelectionPath.UserInfo);
}

uint64_t *sub_1005B0B74(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v14;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain(v11);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      v12 = sub_1004B804C(&qword_1013E30E0);
      v13 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
      v13(a1, a2, v12);
      v14 = sub_1004B804C(&qword_1013E41E0);
      v13((uint64_t *)((char *)a1 + *(int *)(v14 + 48)), (uint64_t *)((char *)a2 + *(int *)(v14 + 48)), v12);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v9 = sub_1004B804C(&qword_1013E30E0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      v10 = (int *)sub_1004B804C(&qword_1013E41E8);
      *(uint64_t *)((char *)a1 + v10[12]) = *(uint64_t *)((char *)a2 + v10[12]);
      *((_BYTE *)a1 + v10[16]) = *((_BYTE *)a2 + v10[16]);
      *(uint64_t *)((char *)a1 + v10[20]) = *(uint64_t *)((char *)a2 + v10[20]);
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

uint64_t sub_1005B0CC4(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);

  result = swift_getEnumCaseMultiPayload(a1, a2);
  if ((_DWORD)result == 1)
  {
    v5 = sub_1004B804C(&qword_1013E30E0);
    v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
    v7(a1, v5);
    v6 = a1 + *(int *)(sub_1004B804C(&qword_1013E41E0) + 48);
    return ((uint64_t (*)(uint64_t, uint64_t))v7)(v6, v5);
  }
  else if (!(_DWORD)result)
  {
    v4 = sub_1004B804C(&qword_1013E30E0);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  return result;
}

char *sub_1005B0D70(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 1)
  {
    v9 = sub_1004B804C(&qword_1013E30E0);
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    v10(a1, a2, v9);
    v11 = sub_1004B804C(&qword_1013E41E0);
    v10(&a1[*(int *)(v11 + 48)], &a2[*(int *)(v11 + 48)], v9);
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = sub_1004B804C(&qword_1013E30E0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = (int *)sub_1004B804C(&qword_1013E41E8);
    *(_QWORD *)&a1[v8[12]] = *(_QWORD *)&a2[v8[12]];
    a1[v8[16]] = a2[v8[16]];
    *(_QWORD *)&a1[v8[20]] = *(_QWORD *)&a2[v8[20]];
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

char *sub_1005B0E98(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;

  if (a1 != a2)
  {
    sub_1004B84A4((uint64_t)a1, type metadata accessor for CRLPersistableSelectionPath.UserInfo);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      v9 = sub_1004B804C(&qword_1013E30E0);
      v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
      v10(a1, a2, v9);
      v11 = sub_1004B804C(&qword_1013E41E0);
      v10(&a1[*(int *)(v11 + 48)], &a2[*(int *)(v11 + 48)], v9);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v7 = sub_1004B804C(&qword_1013E30E0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = (int *)sub_1004B804C(&qword_1013E41E8);
      *(_QWORD *)&a1[v8[12]] = *(_QWORD *)&a2[v8[12]];
      a1[v8[16]] = a2[v8[16]];
      *(_QWORD *)&a1[v8[20]] = *(_QWORD *)&a2[v8[20]];
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

char *sub_1005B0FD8(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 1)
  {
    v9 = sub_1004B804C(&qword_1013E30E0);
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
    v10(a1, a2, v9);
    v11 = sub_1004B804C(&qword_1013E41E0);
    v10(&a1[*(int *)(v11 + 48)], &a2[*(int *)(v11 + 48)], v9);
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = sub_1004B804C(&qword_1013E30E0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    v8 = (int *)sub_1004B804C(&qword_1013E41E8);
    *(_QWORD *)&a1[v8[12]] = *(_QWORD *)&a2[v8[12]];
    a1[v8[16]] = a2[v8[16]];
    *(_QWORD *)&a1[v8[20]] = *(_QWORD *)&a2[v8[20]];
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

char *sub_1005B1100(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;

  if (a1 != a2)
  {
    sub_1004B84A4((uint64_t)a1, type metadata accessor for CRLPersistableSelectionPath.UserInfo);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      v9 = sub_1004B804C(&qword_1013E30E0);
      v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
      v10(a1, a2, v9);
      v11 = sub_1004B804C(&qword_1013E41E0);
      v10(&a1[*(int *)(v11 + 48)], &a2[*(int *)(v11 + 48)], v9);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v7 = sub_1004B804C(&qword_1013E30E0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      v8 = (int *)sub_1004B804C(&qword_1013E41E8);
      *(_QWORD *)&a1[v8[12]] = *(_QWORD *)&a2[v8[12]];
      a1[v8[16]] = a2[v8[16]];
      *(_QWORD *)&a1[v8[20]] = *(_QWORD *)&a2[v8[20]];
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

void sub_1005B1240(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _BYTE v5[32];
  _QWORD v6[4];
  _BYTE v7[32];
  _QWORD v8[2];

  sub_1005B12F8(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v4 = v6[0];
    v6[1] = (char *)&value witness table for Builtin.Int64 + 64;
    v6[2] = &unk_100EFBE88;
    v6[3] = (char *)&value witness table for Builtin.Int64 + 64;
    swift_getTupleTypeLayout(v7, 0, 4, v6);
    v8[0] = v7;
    swift_getTupleTypeLayout2(v5, v4, v4);
    v8[1] = v5;
    swift_initEnumMetadataMultiPayload(a1, 256, 2, v8);
  }
}

void sub_1005B12F8(uint64_t a1)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1013E4F00)
  {
    v2 = sub_100559A64();
    v3 = type metadata accessor for CRAttributedString.Cursor(a1, &type metadata for CRLTextAttributeScope, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1013E4F00);
  }
}

void sub_1005B1350(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD v18[6];

  v4 = sub_1004B804C(&qword_1013E30E0);
  v18[4] = *(_QWORD *)(v4 - 8);
  v18[5] = v4;
  __chkstk_darwin(v4);
  v18[2] = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v18[3] = (char *)v18 - v7;
  __chkstk_darwin(v8);
  __chkstk_darwin(v9);
  v10 = type metadata accessor for CRLPersistableSelectionPath.UserInfo(0);
  __chkstk_darwin(v10);
  __chkstk_darwin(v11);
  v12 = sub_1004B804C(&qword_1013E4F30);
  __chkstk_darwin(v12);
  v14 = (char *)v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (uint64_t)&v14[*(int *)(v15 + 48)];
  sub_1004B8460(a1, (uint64_t)v14, type metadata accessor for CRLPersistableSelectionPath.UserInfo);
  sub_1004B8460(a2, v16, type metadata accessor for CRLPersistableSelectionPath.UserInfo);
  v17 = (char *)sub_1005B14F4 + 4 * byte_100EFBE50[swift_getEnumCaseMultiPayload(v14, v10)];
  __asm { BR              X10 }
}

BOOL sub_1005B14F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  void (*v19)(uint64_t, uint64_t);
  BOOL v20;

  sub_1004B8460(v1, v4, type metadata accessor for CRLPersistableSelectionPath.UserInfo);
  v6 = (int *)sub_1004B804C(&qword_1013E41E8);
  v7 = v6[12];
  *(_QWORD *)(v5 - 104) = *(_QWORD *)(v4 + v7);
  v8 = v6[16];
  v9 = *(unsigned __int8 *)(v4 + v8);
  v10 = v6[20];
  v11 = *(_QWORD *)(v4 + v10);
  if (swift_getEnumCaseMultiPayload(v0, v3))
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v5 - 96) + 8))(v4, *(_QWORD *)(v5 - 88));
    sub_1004CB800(v1, &qword_1013E4F30);
  }
  else
  {
    *(_DWORD *)(v5 - 112) = v9;
    *(_QWORD *)(v5 - 120) = v11;
    v12 = *(_QWORD *)(v0 + v7);
    v13 = *(unsigned __int8 *)(v0 + v8);
    v14 = *(_QWORD *)(v0 + v10);
    v16 = *(_QWORD *)(v5 - 96);
    v15 = *(_QWORD *)(v5 - 88);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32))(v2, v0, v15);
    v17 = sub_100559A64();
    v18 = ((uint64_t (*)(uint64_t, uint64_t, ValueMetadata *, unint64_t))static CRAttributedString.Cursor.== infix(_:_:))(v4, v2, &type metadata for CRLTextAttributeScope, v17);
    v19 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v19(v4, v15);
    if ((v18 & 1) != 0 && *(_QWORD *)(v5 - 104) == v12 && *(_DWORD *)(v5 - 112) == v13)
    {
      v20 = *(_QWORD *)(v5 - 120) == v14;
      v19(v2, v15);
      sub_1004B84A4(v1, type metadata accessor for CRLPersistableSelectionPath.UserInfo);
      return v20;
    }
    v19(v2, v15);
    sub_1004B84A4(v1, type metadata accessor for CRLPersistableSelectionPath.UserInfo);
  }
  return 0;
}

unint64_t sub_1005B17D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E4F38;
  if (!qword_1013E4F38)
  {
    v1 = objc_opt_self(CRLSubselection);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1013E4F38);
  }
  return result;
}

uint64_t sub_1005B1814(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013E41D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_1005B185C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E30E8;
  if (!qword_1013E30E8)
  {
    v1 = sub_1004CB6A4(&qword_1013E30E0);
    result = swift_getWitnessTable(&protocol conformance descriptor for CRAttributedString<A>.Cursor, v1);
    atomic_store(result, (unint64_t *)&qword_1013E30E8);
  }
  return result;
}

void sub_1005B18A8(char *a1, void *a2)
{
  void *v2;
  char *v4;
  id v5;
  char *v6;
  char *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  Class v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double (*v25)(char *, uint64_t, void (*)(uint64_t), uint64_t, uint64_t, uint64_t, __n128);
  char *v26;
  objc_super v27;

  v4 = a1;
  UUID.init()(a1);
  v27.receiver = v2;
  v27.super_class = (Class)type metadata accessor for CRLURLRep(0);
  v5 = objc_msgSendSuper2(&v27, "initWithLayout:canvas:", v4, a2);
  if (!a2)
  {
    v7 = v4;
LABEL_12:

    return;
  }
  v6 = (char *)v5;
  v7 = a2;
  if (!objc_msgSend(v7, "isCanvasInteractive"))
  {
    v12 = (Class)v7;
LABEL_11:

    goto LABEL_12;
  }
  v8 = objc_msgSend(v6, "layout");
  v9 = objc_msgSend(v8, "info");

  if (v9)
  {
    v10 = type metadata accessor for CRLURLItem(0);
    if (swift_dynamicCastClass(v9, v10))
    {
      v11 = OBJC_IVAR____TtC8Freeform9CRLURLRep_downloadObserverIdentifier;
      v12 = sub_100838230();
      swift_unknownObjectRelease(v9);
      v13 = (_QWORD *)((char *)v12 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage);
      v14 = *(_QWORD *)((char *)v12 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 24);
      v15 = *(_QWORD *)((char *)v12 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 32);
      sub_1004BB5A4((Class)((char *)v12 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage), v14);
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v15 + 64))(v14, v15) & 1) != 0)
      {
        v26 = &v6[v11];
        v16 = swift_allocObject(&unk_10126EF30, 24, 7);
        swift_unknownObjectWeakInit(v16 + 16);
        v17 = v13[3];
        v18 = v13[4];
        sub_1004BB5A4(v13, v17);
        v25 = *(double (**)(char *, uint64_t, void (*)(uint64_t), uint64_t, uint64_t, uint64_t, __n128))(v18 + 72);
        v19 = swift_retain(v16);
        v20.n128_f64[0] = v25(v26, 2, sub_1005B2C8C, v16, v17, v18, v19);
        swift_release_n(v16, 2, v20);
        v21 = v13[3];
        v22 = v13[4];
        sub_1004BB5A4(v13, v21);
        if (((*(uint64_t (**)(uint64_t, uint64_t))(v22 + 64))(v21, v22) & 1) != 0)
        {
          v23 = v13[3];
          v24 = v13[4];
          sub_1004BB5A4(v13, v23);
          (*(void (**)(uint64_t, uint64_t))(v24 + 88))(v23, v24);
        }
      }

      v6 = v4;
      v4 = v7;
      goto LABEL_11;
    }
    swift_unknownObjectRelease(v9);
  }
  sub_100757E04(&_mh_execute_header, (uint64_t)"item", 4, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLURLRep.swift", 80, 2, 70, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"item", 4, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLURLRep.swift", 80, 2u, 70, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  __break(1u);
}

void sub_1005B1BB8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  objc_class *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  _DWORD *v27;
  uint64_t v28;
  id v29;
  void *v30;
  os_unfair_lock_s *v31;
  id v32;
  uint64_t v33;
  uint64_t Strong;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  Class v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  objc_super v51;
  objc_super v52;

  v1 = v0;
  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(v2);
  v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v6);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (objc_class *)type metadata accessor for CRLURLRep(0);
  v52.receiver = v1;
  v52.super_class = v9;
  objc_msgSendSuper2(&v52, "willBeRemoved");
  v10 = objc_msgSend(v1, "layout");
  v11 = objc_msgSend(v10, "info");

  if (!v11)
    goto LABEL_11;
  v50 = v3;
  v12 = type metadata accessor for CRLURLItem(0);
  v13 = swift_dynamicCastClass(v11, v12);
  if (!v13)
  {
    swift_unknownObjectRelease(v11);
LABEL_11:
    sub_100757E04(&_mh_execute_header, (uint64_t)"item", 4, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLURLRep.swift", 80, 2, 70, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"item", 4, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLURLRep.swift", 80, 2u, 70, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    __break(1u);
    return;
  }
  v49 = v4;
  v14 = (char *)*(id *)(v13 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
  swift_unknownObjectRelease(v11);
  v15 = *(_QWORD *)&v14[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManagerLock];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v15 + 16));
  v16 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager;
  v17 = *(void **)&v14[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
  if (v17)
  {
    v18 = *(char **)&v14[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
  }
  else
  {
    v45 = (Class)type metadata accessor for CRLAssetManager();
    v19 = (char *)objc_allocWithZone(v45);
    v44 = &v19[OBJC_IVAR____TtC8Freeform15CRLAssetManager_store];
    swift_unknownObjectWeakInit(&v19[OBJC_IVAR____TtC8Freeform15CRLAssetManager_store]);
    v46 = v8;
    v20 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_lock;
    v21 = type metadata accessor for CRLUnfairLock();
    v22 = swift_allocObject(v21, 24, 7);
    v23 = v14;
    v48 = v2;
    v24 = v23;
    v25 = v19;
    v47 = v5;
    v26 = v25;
    v27 = (_DWORD *)swift_slowAlloc(4, -1);
    *v27 = 0;
    *(_QWORD *)(v22 + 16) = v27;
    atomic_thread_fence(memory_order_acq_rel);
    *(_QWORD *)&v19[v20] = v22;
    *(_QWORD *)&v26[OBJC_IVAR____TtC8Freeform15CRLAssetManager_assets] = _swiftEmptyDictionarySingleton;
    v28 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_owners;
    *(_QWORD *)&v26[v28] = objc_msgSend((id)objc_opt_self(NSMapTable), "mapTableWithKeyOptions:valueOptions:", 517, 0);
    *(_QWORD *)&v26[OBJC_IVAR____TtC8Freeform15CRLAssetManager_garbageCollectionWorkItem] = 0;
    swift_unknownObjectWeakAssign(v44, v24);

    v51.receiver = v26;
    v5 = v47;
    v51.super_class = v45;
    v29 = objc_msgSendSuper2(&v51, "init");

    v2 = v48;
    v30 = *(void **)&v14[v16];
    *(_QWORD *)&v14[v16] = v29;
    v18 = (char *)v29;

    v8 = v46;
    v17 = 0;
  }
  v31 = *(os_unfair_lock_s **)(v15 + 16);
  v32 = v17;
  os_unfair_lock_unlock(v31);

  v33 = OBJC_IVAR____TtC8Freeform9CRLURLRep_downloadObserverIdentifier;
  Strong = swift_unknownObjectWeakLoadStrong(&v18[OBJC_IVAR____TtC8Freeform15CRLAssetManager_store]);
  if (Strong)
  {
    v35 = Strong;
    v36 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v8, 1, 1, v36);
    v37 = v50;
    (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v5, &v1[v33], v2);
    v38 = *(unsigned __int8 *)(v37 + 80);
    v39 = (uint64_t)v8;
    v40 = (v38 + 40) & ~v38;
    v41 = (char *)swift_allocObject(&unk_10126EF80, v40 + v49, v38 | 7);
    *((_QWORD *)v41 + 2) = 0;
    *((_QWORD *)v41 + 3) = 0;
    *((_QWORD *)v41 + 4) = v35;
    (*(void (**)(char *, char *, uint64_t))(v37 + 32))(&v41[v40], v5, v2);
    v42 = sub_100521B98(v39, (uint64_t)&unk_1013E4F90, (uint64_t)v41);

    swift_release(v42);
  }
  else
  {

  }
}

void sub_1005B2020(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char *Strong;
  char *v4;
  char *v5;
  uint64_t v6;
  void *v7;
  char *v8;
  char v9[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = Strong;
    if ((objc_msgSend(Strong, "hasBeenRemoved") & 1) == 0)
    {
      v5 = CRLLinkViewHostingRep.reloadView.getter();
      objc_msgSend(v5, "removeFromSuperview");

      v6 = OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_linkView;
      v7 = *(void **)&v4[OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_linkView];
      if (v7)
      {
        CRLLinkViewHostingRep.updateReloadView()();
        v7 = *(void **)&v4[v6];
      }
      *(_QWORD *)&v4[v6] = 0;

      objc_msgSend(v4, "setNeedsDisplay");
      v8 = (char *)objc_msgSend(v4, "interactiveCanvasController");
      objc_msgSend(v8, "invalidateContentLayersForRep:", v4);

      v4 = v8;
    }

  }
}

void sub_1005B20FC(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  objc_class *v10;
  id v11;
  id v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  _DWORD *v24;
  uint64_t v25;
  char *v26;
  id v27;
  void *v28;
  os_unfair_lock_s *v29;
  id v30;
  char *v31;
  uint64_t Strong;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  double v40;
  id v41;
  uint64_t v42;
  Class v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  double (*v50)(char *, uint64_t, void (*)(uint64_t), uint64_t, uint64_t, uint64_t, __n128);
  __n128 v51;
  __n128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  void *v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  Class v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  objc_super v69;
  objc_super v70;

  v2 = v1;
  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v7);
  v9 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (objc_class *)type metadata accessor for CRLURLRep(0);
  v70.receiver = v1;
  v70.super_class = v10;
  objc_msgSendSuper2(&v70, "processChangedProperty:", a1);
  if (a1 != 49)
    return;
  v11 = objc_msgSend(v1, "layout");
  v12 = objc_msgSend(v11, "info");

  if (!v12)
    goto LABEL_20;
  v68 = type metadata accessor for CRLURLItem(0);
  v13 = swift_dynamicCastClass(v12, v68);
  if (!v13)
  {
    swift_unknownObjectRelease(v12);
LABEL_20:
    v42 = 2;
    sub_100757E04(&_mh_execute_header, (uint64_t)"item", 4, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLURLRep.swift", 80, 2, 70, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"item", 4, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLURLRep.swift", 80, 2u, 70, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    __break(1u);
    goto LABEL_21;
  }
  v67 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (char *)*(id *)(v13 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
  swift_unknownObjectRelease(v12);
  v15 = *(_QWORD *)&v14[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManagerLock];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v15 + 16));
  v16 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager;
  v17 = *(void **)&v14[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
  if (v17)
  {
    v18 = *(char **)&v14[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
  }
  else
  {
    v65 = (Class)type metadata accessor for CRLAssetManager();
    v19 = (char *)objc_allocWithZone(v65);
    v64 = &v19[OBJC_IVAR____TtC8Freeform15CRLAssetManager_store];
    swift_unknownObjectWeakInit(&v19[OBJC_IVAR____TtC8Freeform15CRLAssetManager_store]);
    v62 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_lock;
    v20 = type metadata accessor for CRLUnfairLock();
    v21 = swift_allocObject(v20, 24, 7);
    v66 = v4;
    v22 = v21;
    v63 = v14;
    v23 = v19;
    v24 = (_DWORD *)swift_slowAlloc(4, -1);
    *v24 = 0;
    *(_QWORD *)(v22 + 16) = v24;
    atomic_thread_fence(memory_order_acq_rel);
    *(_QWORD *)&v19[v62] = v22;
    *(_QWORD *)&v23[OBJC_IVAR____TtC8Freeform15CRLAssetManager_assets] = _swiftEmptyDictionarySingleton;
    v25 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_owners;
    *(_QWORD *)&v23[v25] = objc_msgSend((id)objc_opt_self(NSMapTable), "mapTableWithKeyOptions:valueOptions:", 517, 0);
    *(_QWORD *)&v23[OBJC_IVAR____TtC8Freeform15CRLAssetManager_garbageCollectionWorkItem] = 0;
    v26 = v63;
    swift_unknownObjectWeakAssign(v64, v63);

    v69.receiver = v23;
    v69.super_class = v65;
    v27 = objc_msgSendSuper2(&v69, "init");

    v28 = *(void **)&v14[v16];
    *(_QWORD *)&v14[v16] = v27;
    v18 = (char *)v27;

    v4 = v66;
    v17 = 0;
  }
  v29 = *(os_unfair_lock_s **)(v15 + 16);
  v30 = v17;
  os_unfair_lock_unlock(v29);

  v31 = &v2[OBJC_IVAR____TtC8Freeform9CRLURLRep_downloadObserverIdentifier];
  Strong = swift_unknownObjectWeakLoadStrong(&v18[OBJC_IVAR____TtC8Freeform15CRLAssetManager_store]);
  if (Strong)
  {
    v33 = Strong;
    v34 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v9, 1, 1, v34);
    v35 = v67;
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v67, v31, v4);
    v36 = *(unsigned __int8 *)(v5 + 80);
    v37 = (v36 + 40) & ~v36;
    v38 = (char *)swift_allocObject(&unk_10126EF58, v37 + v6, v36 | 7);
    *((_QWORD *)v38 + 2) = 0;
    *((_QWORD *)v38 + 3) = 0;
    *((_QWORD *)v38 + 4) = v33;
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v38[v37], v35, v4);
    v39 = sub_100521B98((uint64_t)v9, (uint64_t)&unk_1013FFE80, (uint64_t)v38);

    *(_QWORD *)&v40 = swift_release(v39).n128_u64[0];
  }
  else
  {

  }
  v41 = objc_msgSend(v2, "layout", v40);
  v42 = (uint64_t)objc_msgSend(v41, "info");

  if (!v42)
    goto LABEL_22;
  if (!swift_dynamicCastClass(v42, v68))
  {
LABEL_21:
    swift_unknownObjectRelease(v42);
LABEL_22:
    sub_100757E04(&_mh_execute_header, (uint64_t)"item", 4, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLURLRep.swift", 80, 2, 70, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"item", 4, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLURLRep.swift", 80, 2u, 70, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    __break(1u);
    return;
  }
  v43 = sub_100838230();
  swift_unknownObjectRelease(v42);
  v44 = (_QWORD *)((char *)v43 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage);
  v45 = *(_QWORD *)((char *)v43 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 24);
  v46 = *(_QWORD *)((char *)v43 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 32);
  sub_1004BB5A4((Class)((char *)v43 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage), v45);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v46 + 64))(v45, v46) & 1) != 0)
  {
    v47 = swift_allocObject(&unk_10126EF30, 24, 7);
    swift_unknownObjectWeakInit(v47 + 16);
    v48 = v44[3];
    v49 = v44[4];
    sub_1004BB5A4(v44, v48);
    v50 = *(double (**)(char *, uint64_t, void (*)(uint64_t), uint64_t, uint64_t, uint64_t, __n128))(v49 + 72);
    v51 = swift_retain(v47);
    v52.n128_f64[0] = v50(v31, 2, sub_1005B2C8C, v47, v48, v49, v51);
    swift_release_n(v47, 2, v52);
    v53 = v44[3];
    v54 = v44[4];
    sub_1004BB5A4(v44, v53);
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v54 + 64))(v53, v54) & 1) != 0)
    {
      v55 = v44[3];
      v56 = v44[4];
      sub_1004BB5A4(v44, v55);
      (*(void (**)(uint64_t, uint64_t))(v56 + 88))(v55, v56);
    }
  }

  v57 = CRLLinkViewHostingRep.reloadView.getter();
  objc_msgSend(v57, "removeFromSuperview");

  v58 = OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_linkView;
  v59 = *(void **)&v2[OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_linkView];
  if (v59)
  {
    CRLLinkViewHostingRep.updateReloadView()();
    v59 = *(void **)&v2[v58];
  }
  *(_QWORD *)&v2[v58] = 0;

  objc_msgSend(v2, "setNeedsDisplay");
  v60 = objc_msgSend(v2, "interactiveCanvasController");
  objc_msgSend(v60, "invalidateContentLayersForRep:", v2);

}

void sub_1005B2820()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;

  v1 = objc_msgSend(v0, "layout");
  v2 = objc_msgSend(v1, "info");

  if (v2)
  {
    v3 = type metadata accessor for CRLURLItem(0);
    if (swift_dynamicCastClass(v2, v3))
      return;
    swift_unknownObjectRelease(v2);
  }
  sub_100757E04(&_mh_execute_header, (uint64_t)"item", 4, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLURLRep.swift", 80, 2, 70, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"item", 4, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLURLRep.swift", 80, 2u, 70, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  __break(1u);
}

void sub_1005B294C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;

  v0 = (char *)sub_1005B2A40();
  if (v0)
  {
    v1 = v0;
    v2 = OBJC_IVAR____TtC8Freeform12CRLURLEditor_reloadTask;
    v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform12CRLURLEditor_reloadTask];
    if (v3)
    {
      swift_retain(*(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform12CRLURLEditor_reloadTask]);
      sub_1004B804C(&qword_1013E0210);
      Task.cancel()();
      swift_release(v3);
      v3 = *(_QWORD *)&v1[v2];
    }
    *(_QWORD *)&v1[v2] = 0;

    swift_release(v3);
  }
  CRLLinkViewHostingRep.tearDownReload()();
}

void *sub_1005B2A40()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjCClassFromMetadata;
  id v8;

  v1 = objc_msgSend(v0, "interactiveCanvasController");
  v2 = v1;
  if (v1)
  {
    v3 = objc_msgSend(v1, "editorController");

    if (v3)
    {
      v4 = type metadata accessor for CRLURLEditor();
      v6 = v4;
      if (v4)
        ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v4, v5);
      else
        ObjCClassFromMetadata = 0;
      v8 = objc_msgSend(v3, "mostSpecificCurrentEditorOfClass:", ObjCClassFromMetadata);
      v2 = (void *)swift_dynamicCastClass(v8, v6);

      if (!v2)
        swift_unknownObjectRelease(v8);
    }
    else
    {
      return 0;
    }
  }
  return v2;
}

uint64_t sub_1005B2B0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8Freeform9CRLURLRep_downloadObserverIdentifier;
  v2 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

id sub_1005B2B48()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLURLRep(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1005B2BB8()
{
  return type metadata accessor for CRLURLRep(0);
}

uint64_t type metadata accessor for CRLURLRep(uint64_t a1)
{
  uint64_t result;

  result = qword_1013E4F80;
  if (!qword_1013E4F80)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLURLRep);
  return result;
}

uint64_t sub_1005B2BFC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 1, &v4, a1 + 496);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1005B2C68()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1005B2C8C(uint64_t a1)
{
  uint64_t v1;

  sub_1005B2020(a1, v1);
}

uint64_t sub_1005B2C9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1005B2D18(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for UUID(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_1013FC8B4);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1004CF80C;
  return sub_10096205C(a1, v5, v6, v7, v8);
}

uint64_t sub_1005B2DAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __n128 a9)
{
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v10[23] = a8;
  v10[24] = v9;
  v10[21] = a6;
  v10[22] = a7;
  v10[19] = a4;
  v10[20] = a5;
  v10[17] = a2;
  v10[18] = a3;
  v10[16] = a1;
  v10[25] = *v9;
  v11 = type metadata accessor for DispatchQoS.QoSClass(0, a9);
  v10[26] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v10[27] = v12;
  v10[28] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1005B2E24, 0, 0);
}

uint64_t sub_1005B2E24()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  NSURL *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = v0;
  v2 = v0 + 2;
  v4 = v1[27];
  v3 = v1[28];
  v5 = v1[26];
  v6 = (void *)objc_opt_self(CRLZipFileArchive);
  URL._bridgeToObjectiveC()(v7);
  v9 = v8;
  v1[29] = v8;
  sub_100503E34();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v3, enum case for DispatchQoS.QoSClass.default(_:), v5);
  v10 = static OS_dispatch_queue.global(qos:)(v3);
  v1[30] = v10;
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  v1[7] = v1 + 15;
  v1[2] = v1;
  v1[3] = sub_1005B2F4C;
  v11 = swift_continuation_init(v2, 1);
  v1[10] = _NSConcreteStackBlock;
  v1 += 10;
  v1[1] = 0x40000000;
  v1[2] = sub_1005B3240;
  v1[3] = &unk_10126EFF0;
  v1[4] = v11;
  objc_msgSend(v6, "readArchiveFromURL:options:queue:completion:", v9, 5, v10, v1);
  return swift_continuation_await(v2);
}

uint64_t sub_1005B2F4C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 248) = v2;
  if (v2)
  {
    v3 = *(_QWORD *)(v1 + 176);
    swift_bridgeObjectRelease(*(_QWORD *)(v1 + 160));
    swift_bridgeObjectRelease(v3);
    v4 = sub_1005B31A0;
  }
  else
  {
    v4 = sub_1005B2FC0;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1005B2FC0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t CoordinatorChannelProvider;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t Coordinator;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  unint64_t v23;
  _BYTE *v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(void **)(v0 + 232);

  if (v1)
  {
    v3 = *(_QWORD *)(v0 + 184);
    v4 = *(_QWORD *)(v0 + 192);
    v5 = *(_QWORD *)(v0 + 168);
    v6 = *(_QWORD *)(v0 + 176);
    v28 = *(_OWORD *)(v0 + 152);
    v8 = *(_QWORD *)(v0 + 136);
    v7 = *(_QWORD *)(v0 + 144);
    v29 = *(_QWORD *)(v0 + 128);
    v30 = *(_QWORD *)(v0 + 224);
    CoordinatorChannelProvider = type metadata accessor for CRLFileReadAssistant.ReadCoordinatorChannelProvider();
    v10 = swift_allocObject(CoordinatorChannelProvider, 56, 7);
    v11 = v10;
    *(_QWORD *)(v10 + 16) = v1;
    *(_OWORD *)(v10 + 24) = v28;
    *(_QWORD *)(v10 + 40) = v5;
    *(_QWORD *)(v10 + 48) = v6;
    if ((v3 & 1) != 0)
      v12 = 7;
    else
      v12 = 3;
    *(_QWORD *)(v4 + 16) = v10;
    Coordinator = type metadata accessor for CRLSerializableObjectReadCoordinator(0);
    v14 = (_QWORD *)swift_allocObject(Coordinator, *(unsigned int *)(Coordinator + 48), *(unsigned __int16 *)(Coordinator + 52));
    swift_retain(v11);
    v16 = sub_1005B4640(v15, v8, v7, v12, v14, (uint64_t (*)(_QWORD))type metadata accessor for CRLFileReadAssistant.ReadCoordinatorChannelProvider, (uint64_t)&off_10126EFD0);
    v17 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v29, v17);
    *(_QWORD *)(v4 + 24) = v16;
    swift_task_dealloc(v30);
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 192));
  }
  else
  {
    v19 = *(_QWORD *)(v0 + 176);
    v21 = *(void **)(v0 + 136);
    v20 = *(void **)(v0 + 144);
    v22 = *(_QWORD *)(v0 + 128);
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 160));
    swift_bridgeObjectRelease(v19);
    v23 = sub_100577444();
    swift_allocError(&type metadata for CRLSerializationError, v23, 0, 0);
    *v24 = 0;
    swift_willThrow(v25);

    v26 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v22, v26);
    v27 = *(_QWORD *)(v0 + 224);
    swift_deallocPartialClassInstance(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 200), 32, 7);
    swift_task_dealloc(v27);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1005B31A0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(void **)(v0 + 240);
  v2 = *(void **)(v0 + 232);
  v4 = *(void **)(v0 + 136);
  v3 = *(void **)(v0 + 144);
  v5 = *(_QWORD *)(v0 + 128);
  swift_willThrow();

  v6 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);

  v7 = *(_QWORD *)(v0 + 224);
  swift_deallocPartialClassInstance(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 200), 32, 7);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005B3240(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  uint64_t v10;
  id v11;
  void *v12;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    v5 = sub_1004B804C(&qword_1013E0210);
    v6 = swift_allocError(v5, &protocol self-conformance witness table for Error, 0, 0);
    *v7 = a3;
    v8 = a3;
    return swift_continuation_throwingResumeWithError(v3, v6);
  }
  else
  {
    v12 = a2;
    v10 = *(_QWORD *)(*(_QWORD *)(v3 + 64) + 40);
    v11 = a2;
    sub_1004C4938((uint64_t)&v12, v10, &qword_1013E51A0);
    return swift_continuation_throwingResume(v3);
  }
}

id sub_1005B32E8()
{
  uint64_t v0;
  NSString v1;
  NSString v2;
  NSString v3;
  uint64_t v4;
  uint64_t v5;
  NSString v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;

  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v2, "pathExtension");

  if (!v3)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v5 = v4;
    v3 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v5);
  }
  v6 = objc_msgSend(v1, "stringByAppendingPathComponent:", v3);

  if (!v6)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v8 = v7;
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v8);
  }
  v9 = *(void **)(v0 + 16);
  v10 = objc_msgSend(v9, "entryForName:", v6);

  if (!v10)
    return 0;
  v11 = objc_msgSend(v9, "readChannelForEntry:", v10);

  return v11;
}

uint64_t sub_1005B3418()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  return swift_deallocClassInstance(v0, 56, 7);
}

id sub_1005B344C()
{
  uint64_t v0;
  void *v1;
  NSString v2;
  id v3;
  id v4;

  v1 = *(void **)(*(_QWORD *)v0 + 16);
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v1, "entryForName:", v2);

  if (!v3)
    return 0;
  v4 = objc_msgSend(v1, "readChannelForEntry:", v3);

  return v4;
}

id sub_1005B34E0()
{
  uint64_t v0;
  void *v1;
  NSString v2;
  id v3;
  id v4;

  v1 = *(void **)(*(_QWORD *)v0 + 16);
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v1, "entryForName:", v2);

  if (!v3)
    return 0;
  v4 = objc_msgSend(v1, "readChannelForEntry:", v3);

  return v4;
}

id sub_1005B3574()
{
  return sub_1005B32E8();
}

uint64_t sub_1005B3594()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for CRLFileReadAssistant()
{
  return objc_opt_self(_TtC8Freeform20CRLFileReadAssistant);
}

uint64_t type metadata accessor for CRLFileReadAssistant.ReadCoordinatorChannelProvider()
{
  return objc_opt_self(_TtCC8Freeform20CRLFileReadAssistantP33_FD11AD07892152BE9A852426BA48E27830ReadCoordinatorChannelProvider);
}

uint64_t sub_1005B3600()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1013E5194);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1005B3644;
  return sub_1005B39B4();
}

uint64_t sub_1005B3644(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*v2 + 16);
  v4 = *v2;
  *(_QWORD *)(v4 + 24) = a1;
  swift_task_dealloc(v3);
  if (v1)
    return (*(uint64_t (**)(void))(v4 + 8))();
  else
    return swift_task_switch(sub_1005B36B8, 0, 0);
}

uint64_t sub_1005B36B8()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[4] = *(_QWORD *)(v0[3] + 24);
  v1 = (_QWORD *)swift_task_alloc(dword_10140123C);
  v0[5] = v1;
  *v1 = v0;
  v1[1] = sub_1005B3708;
  return sub_1009EF3D0();
}

uint64_t sub_1005B3708(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 40);
  *(_QWORD *)(*v2 + 48) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = sub_1005B3828;
  }
  else
  {
    *(_QWORD *)(v4 + 56) = a1;
    v6 = sub_1005B377C;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_1005B377C()
{
  uint64_t v0;
  unint64_t v1;
  _BYTE *v2;
  __n128 v3;
  __n128 v4;
  _QWORD *v6;

  if (sub_1001E973C(*(_QWORD *)(v0 + 56)))
  {
    v1 = sub_100577444();
    swift_allocError(&type metadata for CRLSerializationError, v1, 0, 0);
    *v2 = 14;
    swift_willThrow(v3);
    v4 = swift_release(*(_QWORD *)(v0 + 24));
    return (*(uint64_t (**)(__n128))(v0 + 8))(v4);
  }
  else
  {
    v6 = (_QWORD *)swift_task_alloc(dword_10140121C);
    *(_QWORD *)(v0 + 64) = v6;
    *v6 = v0;
    v6[1] = sub_1005B385C;
    return sub_1009EEEF4();
  }
}

uint64_t sub_1005B3828()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005B385C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 64);
  *(_QWORD *)(v3 + 72) = a1;
  *(_QWORD *)(v3 + 80) = v1;
  swift_task_dealloc(v4);
  if (v1)
    v5 = sub_1005B3980;
  else
    v5 = sub_1005B38C8;
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_1005B38C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  unint64_t v7;
  _BYTE *v8;
  __n128 v9;
  __n128 v10;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = type metadata accessor for CRLBoard(0);
  v3 = swift_dynamicCastClass(v1, v2);
  if (v3)
  {
    v4 = v3;
    v5 = swift_release(*(_QWORD *)(v0 + 24));
    return (*(uint64_t (**)(uint64_t, __n128))(v0 + 8))(v4, v5);
  }
  else
  {
    swift_unknownObjectRelease(v1);
    v7 = sub_100577444();
    swift_allocError(&type metadata for CRLSerializationError, v7, 0, 0);
    *v8 = 1;
    swift_willThrow(v9);
    v10 = swift_release(*(_QWORD *)(v0 + 24));
    return (*(uint64_t (**)(__n128))(v0 + 8))(v10);
  }
}

uint64_t sub_1005B3980()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005B39B4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[2] = v0;
  v2 = type metadata accessor for URL(0);
  v1[3] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[4] = v3;
  v1[5] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1005B3A14, 0, 0);
}

uint64_t sub_1005B3A14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t Assistant;
  uint64_t v10;
  id v11;
  id v12;
  _QWORD *v13;
  __n128 v14;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = OBJC_IVAR____TtC8Freeform25CRLBoardFileReadAssistant_readAssistant;
  *(_QWORD *)(v0 + 48) = OBJC_IVAR____TtC8Freeform25CRLBoardFileReadAssistant_readAssistant;
  v3 = *(_QWORD *)(v1 + v2);
  if (v3)
  {
    v4 = *(_QWORD *)(v0 + 40);
    swift_retain(v3);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v3);
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 32) + 16))(*(_QWORD *)(v0 + 40), v1 + OBJC_IVAR____TtC8Freeform25CRLBoardFileReadAssistant_url, *(_QWORD *)(v0 + 24));
    v6 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform25CRLBoardFileReadAssistant_store);
    v7 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform25CRLBoardFileReadAssistant_context);
    v8 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform25CRLBoardFileReadAssistant_options);
    Assistant = type metadata accessor for CRLFileReadAssistant();
    swift_allocObject(Assistant, 32, 7);
    v10 = dword_1013E519C;
    v11 = v6;
    v12 = v7;
    v13 = (_QWORD *)swift_task_alloc(v10);
    *(_QWORD *)(v0 + 56) = v13;
    *v13 = v0;
    v13[1] = sub_1005B3B5C;
    return sub_1005B2DAC(*(_QWORD *)(v0 + 40), (uint64_t)v11, (uint64_t)v12, 0x6472616F62, 0xE500000000000000, 0x617461646174656DLL, 0xE800000000000000, v8, v14);
  }
}

uint64_t sub_1005B3B5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 56);
  *(_QWORD *)(*v2 + 64) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = sub_1005B3C2C;
  }
  else
  {
    *(_QWORD *)(v4 + 72) = a1;
    v6 = sub_1005B3BD0;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_1005B3BD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(_QWORD *)(v3 + v2);
  *(_QWORD *)(v3 + v2) = v1;
  swift_retain(v1);
  swift_release(v4);
  v5 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 40));
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v5);
}

uint64_t sub_1005B3C2C()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 40));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005B3D7C(const void *a1, void *a2)
{
  _QWORD *v2;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  v4 = dword_1013E518C;
  a2;
  v5 = (_QWORD *)swift_task_alloc(v4);
  v2[4] = v5;
  *v5 = v2;
  v5[1] = sub_1005B3DFC;
  v6 = (_QWORD *)swift_task_alloc(dword_1013E5194);
  v5[2] = v6;
  *v6 = v5;
  v6[1] = sub_1005B3644;
  return sub_1005B39B4();
}

uint64_t sub_1005B3DFC(void *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void (**v8)(_QWORD, _QWORD, _QWORD);
  void *v9;

  v3 = v1;
  v5 = *(_QWORD *)(*v2 + 32);
  v6 = *(void **)(*v2 + 16);
  v7 = *v2;
  swift_task_dealloc(v5);

  v8 = *(void (***)(_QWORD, _QWORD, _QWORD))(v7 + 24);
  if (v3)
  {
    v9 = (void *)_convertErrorToNSError(_:)(v3);
    swift_errorRelease(v3);
    ((void (**)(_QWORD, _QWORD, void *))v8)[2](v8, 0, v9);

    _Block_release(v8);
  }
  else
  {
    ((void (**)(_QWORD, void *, _QWORD))v8)[2](v8, a1, 0);
    _Block_release(v8);

  }
  return (*(uint64_t (**)(void))(v7 + 8))();
}

uint64_t sub_1005B3FD4(const void *a1, void *a2)
{
  _QWORD *v2;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v2[2] = a2;
  v5 = (*(_QWORD *)(*(_QWORD *)(sub_1004B804C((uint64_t *)&unk_1013E1A50) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[3] = swift_task_alloc(v5);
  v2[4] = swift_task_alloc(v5);
  v2[5] = _Block_copy(a1);
  v6 = dword_1013E5194;
  a2;
  v7 = (_QWORD *)swift_task_alloc(v6);
  v2[6] = v7;
  *v7 = v2;
  v7[1] = sub_1005B4078;
  return sub_1005B39B4();
}

uint64_t sub_1005B4078(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  void (**v5)(_QWORD, _QWORD, _QWORD);
  void *v6;
  uint64_t v7;

  v3 = *(_QWORD *)(*v2 + 48);
  v4 = *v2;
  *(_QWORD *)(v4 + 56) = a1;
  swift_task_dealloc(v3);
  if (!v1)
    return swift_task_switch(sub_1005B4148, 0, 0);

  v5 = *(void (***)(_QWORD, _QWORD, _QWORD))(v4 + 40);
  v6 = (void *)_convertErrorToNSError(_:)(v1);
  swift_errorRelease(v1);
  ((void (**)(_QWORD, _QWORD, void *))v5)[2](v5, 0, v6);

  _Block_release(v5);
  v7 = *(_QWORD *)(v4 + 24);
  swift_task_dealloc(*(_QWORD *)(v4 + 32));
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_1005B4148()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_101401244);
  *(_QWORD *)(v0 + 64) = v1;
  *v1 = v0;
  v1[1] = sub_1005B419C;
  return sub_1009EF670(*(_QWORD *)(v0 + 32));
}

uint64_t sub_1005B419C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1005B42FC;
  else
    v3 = sub_1005B4200;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1005B4200()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  Class isa;
  uint64_t v7;
  void (**v8)(_QWORD, _QWORD, _QWORD);
  uint64_t v9;

  v2 = *(_QWORD *)(v0 + 24);
  v1 = *(_QWORD *)(v0 + 32);
  v3 = *(void **)(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 56));
  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v1, 0, 1, v4);

  sub_1004C4938(v1, v2, (uint64_t *)&unk_1013E1A50);
  isa = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v2, 1, v4) != 1)
  {
    v7 = *(_QWORD *)(v0 + 24);
    isa = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v7, v4);
  }
  v8 = *(void (***)(_QWORD, _QWORD, _QWORD))(v0 + 40);
  ((void (**)(_QWORD, Class, _QWORD))v8)[2](v8, isa, 0);
  _Block_release(v8);

  v9 = *(_QWORD *)(v0 + 24);
  swift_task_dealloc(*(_QWORD *)(v0 + 32));
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005B42FC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void (**v3)(_QWORD, _QWORD, _QWORD);
  void *v4;
  uint64_t v5;

  v1 = *(void **)(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 56));

  v2 = *(_QWORD *)(v0 + 72);
  v3 = *(void (***)(_QWORD, _QWORD, _QWORD))(v0 + 40);
  v4 = (void *)_convertErrorToNSError(_:)(v2);
  swift_errorRelease(v2);
  ((void (**)(_QWORD, _QWORD, void *))v3)[2](v3, 0, v4);

  _Block_release(v3);
  v5 = *(_QWORD *)(v0 + 24);
  swift_task_dealloc(*(_QWORD *)(v0 + 32));
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005B4424()
{
  return type metadata accessor for CRLBoardFileReadAssistant(0);
}

uint64_t type metadata accessor for CRLBoardFileReadAssistant(uint64_t a1)
{
  uint64_t result;

  result = qword_1013E5158;
  if (!qword_1013E5158)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLBoardFileReadAssistant);
  return result;
}

uint64_t sub_1005B4468(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  result = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[3] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[4] = "\b";
    result = swift_updateClassMetadata2(a1, 256, 5, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLFileReadAssistantOptions()
{
  return &type metadata for CRLFileReadAssistantOptions;
}

unint64_t sub_1005B4510()
{
  unint64_t result;

  result = qword_1013E5168;
  if (!qword_1013E5168)
  {
    result = swift_getWitnessTable(&unk_100EFBFCC, &type metadata for CRLFileReadAssistantOptions);
    atomic_store(result, (unint64_t *)&qword_1013E5168);
  }
  return result;
}

unint64_t sub_1005B4558()
{
  unint64_t result;

  result = qword_1013E5170;
  if (!qword_1013E5170)
  {
    result = swift_getWitnessTable("e17", &type metadata for CRLFileReadAssistantOptions);
    atomic_store(result, (unint64_t *)&qword_1013E5170);
  }
  return result;
}

unint64_t sub_1005B45A0()
{
  unint64_t result;

  result = qword_1013E5178;
  if (!qword_1013E5178)
  {
    result = swift_getWitnessTable(&unk_100EFBFF4, &type metadata for CRLFileReadAssistantOptions);
    atomic_store(result, (unint64_t *)&qword_1013E5178);
  }
  return result;
}

unint64_t sub_1005B45E8()
{
  unint64_t result;

  result = qword_1013E5180;
  if (!qword_1013E5180)
  {
    result = swift_getWitnessTable(&unk_100EFC02C, &type metadata for CRLFileReadAssistantOptions);
    atomic_store(result, &qword_1013E5180);
  }
  return result;
}

_QWORD *sub_1005B462C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  return sub_1005B4640(a1, a2, a3, a4, a5, type metadata accessor for CRLItemProviderReadAssistant.ReadCoordinatorChannelProvider, (uint64_t)&off_10126D0C8);
}

_QWORD *sub_1005B4640(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t (*a6)(_QWORD), uint64_t a7)
{
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[5];

  v18[3] = a6(0);
  v18[4] = a7;
  v18[0] = a1;
  v13 = (char *)a5 + OBJC_IVAR____TtC8Freeform36CRLSerializableObjectReadCoordinator_metadata;
  v14 = type metadata accessor for CRLProto_ObjectMetadata(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  sub_1004E90B0((uint64_t)v18, (uint64_t)(a5 + 2));
  a5[7] = a2;
  a5[8] = a3;
  a5[9] = a4;
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v18);
  v15 = type metadata accessor for CRLUUIDRemapHelper();
  v16 = swift_allocObject(v15, 40, 7);
  *(_QWORD *)(v16 + 24) = _swiftEmptyDictionarySingleton;
  *(_QWORD *)(v16 + 32) = _swiftEmptyDictionarySingleton;
  *(_BYTE *)(v16 + 16) = (a4 & 4) != 0;
  a5[10] = v16;
  return a5;
}

uint64_t sub_1005B4718()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc(dword_1013E51AC);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1004CF80C;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_1013E51A8 + dword_1013E51A8))(v2, v3);
}

uint64_t sub_1005B4788()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1005B47B4()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc(dword_1013E51BC);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1004CFD00;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_1013E51B8 + dword_1013E51B8))(v2, v3);
}

uint64_t sub_1005B481C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = v0[3];
  v4 = (int *)v0[4];
  v5 = (_QWORD *)swift_task_alloc(dword_10140B7AC);
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_1004CFD00;
  return ((uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_10140B7A8 + dword_10140B7A8))(v2, v3, v4);
}

uint64_t sub_1005B4898(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_10140B7BC);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1004CFD00;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_10140B7B8 + dword_10140B7B8))(a1, v4, v5, v6);
}

uint64_t sub_1005B491C(uint64_t a1)
{
  char *v2;

  v2 = (char *)&value witness table for Builtin.BridgeObject + 64;
  return swift_initClassMetadata2(a1, 0, 1, &v2, a1 + 104);
}

uint64_t sub_1005B4960(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  v5 = a1 + *(int *)(type metadata accessor for CRLTaskQueue.CRLWrappedTaskProvider(0, a3, a4, a5) + 44);
  return static UUID.== infix(_:_:)(v5);
}

uint64_t sub_1005B49A0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_1005B4960(a1, a2, a3[2], a3[3], a3[4]);
}

uint64_t sub_1005B49B0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocClassInstance(v0, 24, 7);
}

uint64_t type metadata accessor for CRLTaskQueue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100502040(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CRLTaskQueue);
}

uint64_t sub_1005B49E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 32);
}

uint64_t sub_1005B49E8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for () + 64;
  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 0, 2, v4, a1 + 40);
    return 0;
  }
  return result;
}

_QWORD *sub_1005B4A60(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *a1 = v5;
    a1 = (_QWORD *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain(v5);
  }
  else
  {
    v6 = a2[1];
    *a1 = v5;
    a1[1] = v6;
    v7 = *(int *)(a3 + 44);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for UUID(0);
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_retain(v6);
    v11(v8, v9, v10);
  }
  return a1;
}

uint64_t sub_1005B4AFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release(*(_QWORD *)(a1 + 8));
  v4 = a1 + *(int *)(a2 + 44);
  v5 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_1005B4B44(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 44);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = type metadata accessor for UUID(0);
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_retain(v4);
  v9(v6, v7, v8);
  return a1;
}

_QWORD *sub_1005B4BB4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = *(int *)(a3 + 44);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  return a1;
}

_OWORD *sub_1005B4C28(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 44);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_1005B4C84(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;

  v6 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *a2;
  swift_release(v6);
  v7 = *(int *)(a3 + 44);
  v8 = a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_1005B4CF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005B4CFC);
}

uint64_t sub_1005B4CFC(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for UUID(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 44)], a2, v8);
  }
}

uint64_t sub_1005B4D78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005B4D84);
}

char *sub_1005B4D84(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 44)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for CRLTaskQueue.CRLWrappedTaskProvider(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100502040(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CRLTaskQueue.CRLWrappedTaskProvider);
}

__n128 sub_1005B4E04()
{
  __n128 result;

  __asm { FMOV            V0.2D, #12.0 }
  xmmword_10147EA70 = (__int128)result;
  *(__n128 *)&qword_10147EA80 = result;
  return result;
}

double sub_1005B4E18()
{
  double result;

  result = 0.0;
  __asm { FMOV            V1.2D, #16.0 }
  xmmword_1013E52D8 = xmmword_100EFC1E0;
  *(_OWORD *)&qword_1013E52E8 = _Q1;
  return result;
}

char *sub_1005B4E34(void *a1, void *a2, char a3, char a4, uint64_t a5, uint64_t a6, double a7)
{
  char *v7;
  uint64_t v15;
  void *v16;
  char *v17;
  id v18;
  id v19;
  char *v20;
  char *v21;
  uint64_t v22;
  objc_super v24;

  v15 = OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_builder;
  *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_builder] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_widthAnchorConstraint] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_contentView] = a1;
  v16 = *(void **)&v7[v15];
  *(_QWORD *)&v7[v15] = a2;
  v17 = v7;
  v18 = a1;
  v19 = a2;

  v17[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_useNavigationControllerWidth] = a3;
  *(double *)&v17[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_bottomPadding] = a7;
  v17[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_useUCBMargins] = a4;
  v20 = &v17[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_delegate];
  *(_QWORD *)v20 = a5;
  *((_QWORD *)v20 + 1) = a6;
  swift_unknownObjectRetain(a5);

  v24.receiver = v17;
  v24.super_class = (Class)type metadata accessor for CRLiOSMiniFormatterPopoverContainerViewController();
  v21 = (char *)objc_msgSendSuper2(&v24, "initWithNibName:bundle:", 0, 0);
  v22 = *(_QWORD *)&v21[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_builder];
  if (v22)
  {
    swift_unknownObjectWeakAssign(v22 + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_crlaxPopoverContainerViewController, v21);

  }
  swift_unknownObjectRelease(a5);
  return v21;
}

uint64_t sub_1005B5070()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  double *v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;

  v1 = v0;
  ObjectType = swift_getObjectType(v0);
  v3 = OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_contentView;
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_contentView), "setLayoutMarginsRelativeArrangement:", 1);
  v4 = *(void **)(v0 + v3);
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_useUCBMargins) == 1)
  {
    v5 = qword_1013DCAE0;
    v6 = v4;
    if (v5 != -1)
      swift_once(&qword_1013DCAE0, sub_1005B4E18);
    v7 = (double *)&xmmword_1013E52D8;
  }
  else
  {
    v8 = qword_1013DCAD8;
    v9 = v4;
    if (v8 != -1)
      swift_once(&qword_1013DCAD8, sub_1005B4E04);
    v7 = (double *)&xmmword_10147EA70;
  }
  objc_msgSend(v4, "setDirectionalLayoutMargins:", *v7, v7[1], v7[2], v7[3]);

  v10 = *(id *)(v1 + v3);
  sub_1005B53EC(v10);

  v11 = sub_1004B804C((uint64_t *)&unk_1013F9B80);
  v12 = swift_allocObject(v11, 48, 7);
  *(_OWORD *)(v12 + 16) = xmmword_100EF5E40;
  *(_QWORD *)(v12 + 32) = type metadata accessor for UITraitUserInterfaceStyle(0);
  *(_QWORD *)(v12 + 40) = &protocol witness table for UITraitUserInterfaceStyle;
  v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_delegate);
  if (v13)
  {
    v14 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_delegate + 8);
    v15 = swift_getObjectType(v13);
    v16 = (_QWORD *)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 + 8) + 32))(v1, v15);
  }
  else
  {
    v16 = _swiftEmptyArrayStorage;
  }
  sub_10061FEAC((uint64_t)v16);
  v17 = UIViewController.registerForTraitChanges<A>(_:handler:)(v12, sub_1005B6A88, 0, ObjectType);
  swift_bridgeObjectRelease(v12);
  return swift_unknownObjectRelease(v17);
}

void sub_1005B53EC(id a1)
{
  char *v1;
  char *v2;
  id v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  void *v35;
  id v36;
  double v37;
  CGFloat v38;
  double v39;
  CGFloat v40;
  double v41;
  CGFloat v42;
  double v43;
  CGFloat v44;
  double Width;
  id v46;
  void *v47;
  id v48;
  id v49;
  uint64_t v50;
  void *v51;
  void *v52;
  id v53;
  id v54;
  id v55;
  void *v56;
  id v57;
  char *i;
  id v59;
  void *v60;
  id v61;
  uint64_t v62;
  uint64_t ObjectType;
  double v64;
  id v65;
  uint64_t v66;
  void *v67;
  void *v68;
  id v69;
  id v70;
  void *v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  id v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  Class isa;
  uint64_t v88;
  CGRect v89;

  v2 = v1;
  v4 = objc_msgSend(v1, "view");
  if (!v4)
  {
    __break(1u);
    goto LABEL_45;
  }
  v5 = v4;
  v6 = (void *)objc_opt_self(UIColor);
  v7 = objc_msgSend(v6, "systemBackgroundColor");
  objc_msgSend(v5, "setBackgroundColor:", v7);

  v8 = objc_msgSend(v2, "view");
  if (!v8)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  v9 = v8;
  objc_msgSend(v8, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v10 = objc_msgSend(v6, "systemBackgroundColor");
  objc_msgSend(a1, "setBackgroundColor:", v10);

  objc_msgSend(a1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v11 = objc_msgSend(v2, "view");
  if (!v11)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  v12 = v11;
  objc_msgSend(v11, "addSubview:", a1);

  v13 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v14 = swift_allocObject(v13, 56, 7);
  *(_OWORD *)(v14 + 16) = xmmword_100EF7300;
  v15 = objc_msgSend(v2, "view");
  if (!v15)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  v16 = v15;
  v17 = objc_msgSend(v15, "safeAreaLayoutGuide");

  v18 = objc_msgSend(v17, "topAnchor");
  v19 = objc_msgSend(a1, "topAnchor");
  v20 = objc_msgSend(v18, "constraintEqualToAnchor:", v19);

  *(_QWORD *)(v14 + 32) = v20;
  v21 = objc_msgSend(v2, "view");
  if (!v21)
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  v22 = v21;
  v23 = objc_msgSend(v21, "safeAreaLayoutGuide");

  v24 = objc_msgSend(v23, "bottomAnchor");
  v25 = objc_msgSend(a1, "bottomAnchor");
  v26 = objc_msgSend(v24, "constraintEqualToAnchor:constant:", v25, *(double *)&v2[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_bottomPadding]);

  *(_QWORD *)(v14 + 40) = v26;
  v27 = objc_msgSend(v2, "view");
  if (!v27)
  {
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  v28 = v27;
  v29 = objc_msgSend(v27, "leadingAnchor");

  v30 = objc_msgSend(a1, "leadingAnchor");
  v31 = objc_msgSend(v29, "constraintEqualToAnchor:", v30);

  *(_QWORD *)(v14 + 48) = v31;
  v88 = v14;
  specialized Array._endMutation()(v32);
  v33 = v14;
  if (v2[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_useNavigationControllerWidth] != 1)
    goto LABEL_17;
  v34 = objc_msgSend(v2, "navigationController");
  if (!v34)
    goto LABEL_17;
  v35 = v34;
  v36 = objc_msgSend(v34, "view");

  if (!v36)
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  objc_msgSend(v36, "frame");
  v38 = v37;
  v40 = v39;
  v42 = v41;
  v44 = v43;

  v89.origin.x = v38;
  v89.origin.y = v40;
  v89.size.width = v42;
  v89.size.height = v44;
  Width = CGRectGetWidth(v89);
  v46 = objc_msgSend(v2, "view");
  if (!v46)
  {
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  v47 = v46;
  v48 = objc_msgSend(v46, "widthAnchor");

  v49 = objc_msgSend(v48, "constraintEqualToConstant:", Width);
  v50 = OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_widthAnchorConstraint;
  v51 = *(void **)&v2[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_widthAnchorConstraint];
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_widthAnchorConstraint] = v49;

  v52 = *(void **)&v2[v50];
  if (!v52)
  {
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  v53 = v52;
  v54 = objc_msgSend(a1, "widthAnchor");
  v55 = objc_msgSend(v2, "view");
  if (!v55)
  {
LABEL_56:
    __break(1u);
    return;
  }
  v56 = v55;
  v57 = objc_msgSend(v55, "widthAnchor");

  a1 = objc_msgSend(v54, "constraintEqualToAnchor:", v57);
  if ((unint64_t)v33 >> 62)
    goto LABEL_38;
  v2 = *(char **)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
  for (i = v2 + 2; __OFADD__(v2, 2); i = v2 + 2)
  {
    __break(1u);
LABEL_17:
    v59 = objc_msgSend(v2, "view");
    if (!v59)
      goto LABEL_50;
    v60 = v59;
    v61 = objc_msgSend(v59, "widthAnchor");

    if (*(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_delegate])
    {
      v62 = *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_delegate + 8];
      ObjectType = swift_getObjectType(*(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_delegate]);
      (*(void (**)(uint64_t, uint64_t))(v62 + 104))(ObjectType, v62);
    }
    else
    {
      if (qword_1013DCAF0 != -1)
        swift_once(&qword_1013DCAF0, sub_1005BA270);
      v64 = *(double *)&qword_10147EAA8;
    }
    v65 = objc_msgSend(v61, "constraintEqualToConstant:", v64);

    v66 = OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_widthAnchorConstraint;
    v67 = *(void **)&v2[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_widthAnchorConstraint];
    *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_widthAnchorConstraint] = v65;

    v68 = *(void **)&v2[v66];
    if (!v68)
      goto LABEL_51;
    v53 = v68;
    v69 = objc_msgSend(a1, "widthAnchor");
    v70 = objc_msgSend(v2, "view");
    if (!v70)
      goto LABEL_52;
    v71 = v70;
    v72 = objc_msgSend(v70, "widthAnchor");

    a1 = objc_msgSend(v69, "constraintEqualToAnchor:", v72);
    if ((unint64_t)v33 >> 62)
    {
      if (v33 < 0)
        v84 = v33;
      else
        v84 = v33 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v33);
      v85 = _CocoaArrayWrapper.endIndex.getter(v84);
      swift_bridgeObjectRelease(v33);
      i = (char *)(v85 + 2);
      if (!__OFADD__(v85, 2))
        break;
    }
    else
    {
      v73 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
      i = (char *)(v73 + 2);
      if (!__OFADD__(v73, 2))
        break;
    }
    __break(1u);
LABEL_38:
    if (v33 < 0)
      v86 = v33;
    else
      v86 = v33 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v33);
    v2 = (char *)_CocoaArrayWrapper.endIndex.getter(v86);
    swift_bridgeObjectRelease(v33);
  }
  v74 = sub_100DCD070(i, 1);
  specialized Array._endMutation()(v74);
  v75 = v53;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v75);
  v77 = *(_QWORD *)((v88 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v76 = *(_QWORD *)((v88 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v77 >= v76 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v76 > 1, v77 + 1, 1);
  v78 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v77, v75);
  specialized Array._endMutation()(v78);
  v79 = a1;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v79);
  v81 = *(_QWORD *)((v88 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v80 = *(_QWORD *)((v88 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v81 >= v80 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v80 > 1, v81 + 1, 1);
  v82 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v81, v79);
  specialized Array._endMutation()(v82);

  v83 = (void *)objc_opt_self(NSLayoutConstraint);
  sub_1004B8930(0, (unint64_t *)&qword_1013E1760, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v83, "activateConstraints:", isa, swift_bridgeObjectRelease(v88).n128_f64[0]);

}

void sub_1005B5BF8()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double Width;
  double v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  double (*v21)(uint64_t, uint64_t);
  id v22;
  double v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  double v28;
  double v29;
  objc_super v30;
  CGRect v31;

  v1 = v0;
  v30.receiver = v0;
  v30.super_class = (Class)type metadata accessor for CRLiOSMiniFormatterPopoverContainerViewController();
  objc_msgSendSuper2(&v30, "viewDidLayoutSubviews");
  v2 = *(void **)&v0[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_widthAnchorConstraint];
  if (v2)
  {
    if (v0[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_useNavigationControllerWidth] == 1)
    {
      v3 = v2;
      v4 = objc_msgSend(v1, "navigationController");
      if (!v4)
        goto LABEL_17;
      v5 = v4;
      v6 = objc_msgSend(v4, "view");

      if (!v6)
      {
        __break(1u);
        return;
      }
      objc_msgSend(v6, "frame");
      v8 = v7;
      v10 = v9;
      v12 = v11;
      v14 = v13;

      v31.origin.x = v8;
      v31.origin.y = v10;
      v31.size.width = v12;
      v31.size.height = v14;
      Width = CGRectGetWidth(v31);
      objc_msgSend(v3, "constant");
      if (Width == v16)
        goto LABEL_17;
    }
    else
    {
      v17 = &v0[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_delegate];
      v18 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_delegate];
      if (v18)
      {
        v19 = *((_QWORD *)v17 + 1);
        ObjectType = swift_getObjectType(*(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_delegate]);
        v21 = *(double (**)(uint64_t, uint64_t))(v19 + 104);
        v22 = v2;
        v23 = v21(ObjectType, v19);
        objc_msgSend(v22, "constant");
        if (v23 == v24)
        {
LABEL_17:

          return;
        }
        v25 = swift_getObjectType(v18);
        Width = v21(v25, v19);
      }
      else
      {
        v26 = qword_1013DCAF0;
        v27 = v2;
        if (v26 != -1)
          swift_once(&qword_1013DCAF0, sub_1005BA270);
        v28 = *(double *)&qword_10147EAA8;
        objc_msgSend(v27, "constant");
        if (v28 == v29)
          goto LABEL_17;
        if (qword_1013DCAF0 != -1)
          swift_once(&qword_1013DCAF0, sub_1005BA270);
        Width = *(double *)&qword_10147EAA8;
      }
    }
    objc_msgSend(v2, "setConstant:", Width);
    sub_1005B5E60();
    goto LABEL_17;
  }
}

void sub_1005B5E60()
{
  char *v0;
  void *v1;
  _QWORD *v2;
  uint64_t (*v3)(void);
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  char isEscapingClosureAtFileLocation;
  _QWORD v14[5];
  uint64_t v15;

  v1 = v0;
  v2 = *(_QWORD **)&v0[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_builder];
  if (v2 && ((*(uint64_t (**)(void))((swift_isaMask & *v2) + 0x110))() & 1) != 0)
  {
    v3 = *(uint64_t (**)(void))((swift_isaMask & *v2) + 0xF8);
    v4 = v2;
    v5 = (_QWORD *)v3();
    if (v5)
    {
      v6 = v5;
      sub_1005B62B4(v5, v4);

      v4 = v6;
    }

  }
  v7 = (void *)objc_opt_self(UIView);
  v8 = swift_allocObject(&unk_10126F518, 24, 7);
  *(_QWORD *)(v8 + 16) = v1;
  v9 = swift_allocObject(&unk_10126F540, 32, 7);
  *(_QWORD *)(v9 + 16) = sub_1005B7298;
  *(_QWORD *)(v9 + 24) = v8;
  v14[4] = sub_1005B72B0;
  v15 = v9;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = *(_QWORD *)"";
  v14[2] = sub_100618D24;
  v14[3] = &unk_10126F558;
  v10 = _Block_copy(v14);
  v11 = v15;
  v12 = v1;
  swift_retain(v9);
  objc_msgSend(v7, "performWithoutAnimation:", v10, swift_release(v11).n128_f64[0]);
  _Block_release(v10);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v9, "", 124, 132, 40, 1);
  swift_release(v8);
  swift_release(v9);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
}

void sub_1005B6008(void *a1)
{
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  char v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  id v16;
  id v17;

  v2 = objc_msgSend(a1, "navigationController");
  if (v2)
  {
    v17 = v2;
    v3 = objc_msgSend(a1, "navigationController");
    v4 = objc_msgSend(v3, "visibleViewController");

    if (v4)
    {
      sub_1004B8930(0, (unint64_t *)&qword_1013F6620, UIViewController_ptr);
      v5 = a1;
      v6 = v4;
      v7 = static NSObject.== infix(_:_:)(v6, v5);

      if ((v7 & 1) != 0)
      {
        sub_1005B6148(v8, v9, v10, v11);
        v13 = v12;
        v15 = v14;
        objc_msgSend(v17, "setPreferredContentSize:");
        v16 = objc_msgSend(v17, "parentViewController");
        objc_msgSend(v16, "setPreferredContentSize:", v13, v15);

      }
    }

  }
}

void sub_1005B6148(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  _BYTE *v5;
  id v6;
  void *v7;
  id v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double Width;
  uint64_t v18;
  uint64_t ObjectType;
  CGRect v20;

  v5 = v4;
  if (v4[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_useNavigationControllerWidth] != 1
    || (v6 = objc_msgSend(v4, "navigationController")) == 0)
  {
    if (*(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_delegate])
    {
      v18 = *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_delegate + 8];
      ObjectType = swift_getObjectType(*(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_delegate]);
      (*(void (**)(uint64_t, uint64_t))(v18 + 104))(ObjectType, v18);
    }
    else
    {
      if (qword_1013DCAF0 != -1)
        swift_once(&qword_1013DCAF0, sub_1005BA270);
      Width = *(double *)&qword_10147EAA8;
    }
    goto LABEL_10;
  }
  v7 = v6;
  v8 = objc_msgSend(v6, "view");

  if (v8)
  {
    objc_msgSend(v8, "frame");
    v10 = v9;
    v12 = v11;
    v14 = v13;
    v16 = v15;

    v20.origin.x = v10;
    v20.origin.y = v12;
    v20.size.width = v14;
    v20.size.height = v16;
    Width = CGRectGetWidth(v20);
LABEL_10:
    LODWORD(a3) = 1148846080;
    LODWORD(a4) = 1112014848;
    objc_msgSend(*(id *)&v5[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_contentView], "systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:", Width, UILayoutFittingCompressedSize.height, a3, a4);
    return;
  }
  __break(1u);
}

void sub_1005B62B4(void *a1, void *a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;
  void (*v10)(void *, char *, uint64_t, uint64_t);
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  char *v18;
  id v19;
  char isEscapingClosureAtFileLocation;
  _QWORD v21[5];
  uint64_t v22;

  v3 = v2;
  v6 = *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_delegate];
  if (v6)
  {
    v7 = *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_delegate + 8];
    ObjectType = swift_getObjectType(v6);
    v21[0] = v6;
    v9 = *(_QWORD *)(v7 + 8);
    v10 = *(void (**)(void *, char *, uint64_t, uint64_t))(v9 + 8);
    swift_unknownObjectRetain(v6);
    v10(a1, v3, ObjectType, v9);
    swift_unknownObjectRelease(v6);
  }
  v11 = *(void **)&v3[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_builder];
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_builder] = a2;
  v12 = a2;

  v13 = (void *)objc_opt_self(UIView);
  v14 = swift_allocObject(&unk_10126F4A0, 32, 7);
  *(_QWORD *)(v14 + 16) = v3;
  *(_QWORD *)(v14 + 24) = a1;
  v15 = swift_allocObject(&unk_10126F4C8, 32, 7);
  *(_QWORD *)(v15 + 16) = sub_1005B725C;
  *(_QWORD *)(v15 + 24) = v14;
  v21[4] = sub_1005B72B0;
  v22 = v15;
  v21[0] = _NSConcreteStackBlock;
  v21[1] = *(_QWORD *)"";
  v21[2] = sub_100618D24;
  v21[3] = &unk_10126F4E0;
  v16 = _Block_copy(v21);
  v17 = v22;
  v18 = v3;
  v19 = a1;
  swift_retain(v15);
  objc_msgSend(v13, "performWithoutAnimation:", v16, swift_release(v17).n128_f64[0]);
  _Block_release(v16);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v15, "", 124, 170, 40, 1);
  swift_release(v14);
  swift_release(v15);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
}

void sub_1005B6470(char *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  double *v13;
  id v14;
  void *v15;
  id v16;
  id v17;

  v4 = OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_contentView;
  objc_msgSend(*(id *)&a1[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_contentView], "removeFromSuperview");
  v5 = OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_widthAnchorConstraint;
  v6 = *(void **)&a1[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_widthAnchorConstraint];
  if (v6)
  {
    v7 = v6;
    v8 = objc_msgSend(a1, "view");
    if (!v8)
      goto LABEL_16;
    v9 = v8;
    objc_msgSend(v8, "removeConstraint:", v7);

    v10 = *(void **)&a1[v5];
    *(_QWORD *)&a1[v5] = 0;

  }
  v11 = *(void **)&a1[v4];
  *(_QWORD *)&a1[v4] = a2;
  v12 = a2;

  objc_msgSend(v12, "setLayoutMarginsRelativeArrangement:", 1);
  if (a1[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_useUCBMargins] == 1)
  {
    if (qword_1013DCAE0 != -1)
      swift_once(&qword_1013DCAE0, sub_1005B4E18);
    v13 = (double *)&xmmword_1013E52D8;
  }
  else
  {
    if (qword_1013DCAD8 != -1)
      swift_once(&qword_1013DCAD8, sub_1005B4E04);
    v13 = (double *)&xmmword_10147EA70;
  }
  objc_msgSend(v12, "setDirectionalLayoutMargins:", *v13, v13[1], v13[2], v13[3]);
  sub_1005B53EC(v12);
  v14 = objc_msgSend(a1, "view");
  if (v14)
  {
    v15 = v14;
    objc_msgSend(v14, "setNeedsLayout");

    v16 = objc_msgSend(a1, "view");
    if (v16)
    {
      v17 = v16;
      objc_msgSend(v16, "layoutIfNeeded");

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_16:
  __break(1u);
}

id sub_1005B6678()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSMiniFormatterPopoverContainerViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLiOSMiniFormatterPopoverContainerViewController()
{
  return objc_opt_self(_TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController);
}

void sub_1005B6720(uint64_t a1, void *a2, void *a3, _QWORD *a4, void *a5)
{
  double v8;
  double v9;
  double v10;
  double v11;
  uint64_t v12;
  uint64_t v13;

  sub_1005B62B4(a2, a3);
  sub_1005B6148(v8, v9, v10, v11);
  *a4 = v12;
  a4[1] = v13;
  sub_1005B62B4(a5, a3);
}

void sub_1005B6770(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  _BYTE v13[24];

  v9 = a2 + 16;
  swift_beginAccess(a2 + 16, v13, 0, 0);
  objc_msgSend(a1, "setPreferredContentSize:", *(double *)(a2 + 16), *(double *)(a2 + 24));
  v10 = objc_msgSend(a1, "parentViewController");
  if (v10)
  {
    v11 = v10;
    swift_beginAccess(v9, &v12, 0, 0);
    objc_msgSend(v11, "setPreferredContentSize:", *(double *)(a2 + 16), *(double *)(a2 + 24));

  }
  sub_1005B62B4(a4, a5);
}

uint64_t sub_1005B683C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t (*v6)(uint64_t, uint64_t);
  _QWORD *v7;

  v3 = *(_QWORD **)(*v2 + OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_builder);
  if (!v3)
    return 0;
  v6 = *(uint64_t (**)(uint64_t, uint64_t))((swift_isaMask & *v3) + 0x180);
  v7 = v3;
  LOBYTE(a2) = v6(a1, a2);

  return a2 & 1;
}

uint64_t sub_1005B68B8()
{
  _QWORD *v0;
  _QWORD *v1;

  v1 = *(_QWORD **)(*v0 + OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_builder);
  if (v1)
    return (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x188))() & 1;
  else
    return 0;
}

uint64_t sub_1005B690C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v2)(void);
  _QWORD *v3;

  v1 = *(_QWORD **)(*v0 + OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_builder);
  if (!v1)
    return 0;
  v2 = *(uint64_t (**)(void))((swift_isaMask & *v1) + 0x190);
  v3 = v1;
  LOBYTE(v2) = v2();

  return v2 & 1;
}

uint64_t sub_1005B6970()
{
  return sub_1005B6BBC();
}

uint64_t sub_1005B6990(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t (*v6)(uint64_t, uint64_t);
  _QWORD *v7;

  v3 = *(_QWORD **)(*v2 + OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_builder);
  if (!v3)
    return 0;
  v6 = *(uint64_t (**)(uint64_t, uint64_t))((swift_isaMask & *v3) + 0x1C0);
  v7 = v3;
  LOBYTE(a2) = v6(a1, a2);

  return a2 & 1;
}

uint64_t sub_1005B6A0C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t (*v6)(uint64_t, uint64_t);
  _QWORD *v7;

  v3 = *(_QWORD **)(*v2 + OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_builder);
  if (!v3)
    return 0;
  v6 = *(uint64_t (**)(uint64_t, uint64_t))((swift_isaMask & *v3) + 0x1C8);
  v7 = v3;
  LOBYTE(a2) = v6(a1, a2);

  return a2 & 1;
}

void sub_1005B6A88(char *a1, id a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  void (*v8)(char *, uint64_t, uint64_t);
  unsigned int v9;
  id v10;
  unsigned int v11;
  _QWORD *v12;
  uint64_t (*v13)(void);
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;

  v4 = *(_QWORD *)&a1[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_delegate];
  if (v4)
  {
    v5 = *(_QWORD *)&a1[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_delegate + 8];
    ObjectType = swift_getObjectType(*(_QWORD *)&a1[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_delegate]);
    v7 = *(_QWORD *)(v5 + 8);
    v8 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 24);
    swift_unknownObjectRetain(v4);
    v8(a1, ObjectType, v7);
    swift_unknownObjectRelease(v4);
  }
  v9 = objc_msgSend(a2, "crl_isUserInterfaceStyleDark");
  v10 = objc_msgSend(a1, "traitCollection");
  v11 = objc_msgSend(v10, "crl_isUserInterfaceStyleDark");

  if (v9 != v11)
  {
    v12 = *(_QWORD **)&a1[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_builder];
    if (v12)
    {
      v13 = *(uint64_t (**)(void))((swift_isaMask & *v12) + 0xF8);
      v14 = v12;
      v15 = (_QWORD *)v13();
      if (v15)
      {
        v16 = v15;
        sub_1005B62B4(v15, v14);

        v14 = v16;
      }

    }
  }
}

uint64_t sub_1005B6BBC()
{
  char *v0;
  void *v1;
  char *v2;
  char **v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v9)(void);
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  id v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  uint64_t v22;
  void *v23;
  _QWORD *v24;
  void (*v25)();
  void *v26;
  void (*v27)();
  char *v28;
  id v29;
  id v30;
  id v31;
  char *v32;
  id v33;
  char v34;
  id v35;
  void *v36;
  void (*v37)();
  void *v38;
  void (*v39)();
  _QWORD *v40;
  char *v41;
  id v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  NSString v47;
  uint64_t v49;
  uint64_t v50;
  id v51;
  void *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  void **aBlock;
  uint64_t v58;
  void *v59;
  void *v60;
  void *v61;
  void (*v62)();

  v1 = v0;
  v2 = (char *)OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_contentView;
  v3 = &selRef_alignToOrigin;
  v4 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_contentView], "arrangedSubviews");
  v5 = sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);

  if ((unint64_t)v6 >> 62)
  {
    if (v6 < 0)
      v49 = v6;
    else
      v49 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v6);
    v7 = _CocoaArrayWrapper.endIndex.getter(v49);
    swift_bridgeObjectRelease(v6);
  }
  else
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v6);
  v8 = *(_QWORD **)((char *)v1 + OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_builder);
  if (!v8)
    goto LABEL_15;
  v9 = *(uint64_t (**)(void))((swift_isaMask & *v8) + 0xF8);
  v10 = v8;
  v11 = v9();
  if (!v11)
  {

LABEL_15:
    v25 = 0;
    v24 = 0;
    goto LABEL_16;
  }
  v12 = (void *)v11;
  v54 = v5;
  v55 = v7;
  v56 = v2;
  v13 = *(id *)&v2[(_QWORD)v1];
  sub_1005B6148(v14, v15, v16, v17);
  v19 = v18;
  v21 = v20;
  v22 = swift_allocObject(&unk_10126F3B0, 32, 7);
  *(_QWORD *)(v22 + 24) = 0;
  *(_QWORD *)(v22 + 16) = 0;
  v23 = (void *)objc_opt_self(UIView);
  v24 = (_QWORD *)swift_allocObject(&unk_10126F3D8, 56, 7);
  v24[2] = v1;
  v24[3] = v12;
  v24[4] = v10;
  v24[5] = v22 + 16;
  v24[6] = v13;
  v25 = (void (*)())swift_allocObject(&unk_10126F400, 32, 7);
  *((_QWORD *)v25 + 2) = sub_1005B719C;
  *((_QWORD *)v25 + 3) = v24;
  v61 = sub_1005B71BC;
  v62 = v25;
  aBlock = _NSConcreteStackBlock;
  v58 = *(_QWORD *)"";
  v59 = sub_100618D24;
  v60 = &unk_10126F418;
  v26 = _Block_copy(&aBlock);
  v27 = v62;
  v53 = v10;
  v2 = (char *)v13;
  v28 = v1;
  v29 = v12;
  swift_retain(v25);
  v51 = v23;
  objc_msgSend(v23, "performWithoutAnimation:", v26, swift_release(v27).n128_f64[0]);
  _Block_release(v26);
  LOBYTE(v26) = swift_isEscapingClosureAtFileLocation(v25, "", 124, 224, 44, 1);
  swift_release(v25);
  if ((v26 & 1) != 0)
  {
    __break(1u);
    goto LABEL_35;
  }
  v52 = v2;
  v5 = v54;
  if (v19 == *(double *)(v22 + 16) && v21 == *(double *)(v22 + 24))
    goto LABEL_12;
  v30 = objc_msgSend(v28, "navigationController");
  v31 = objc_msgSend(v30, "visibleViewController");

  if (!v31)
    goto LABEL_12;
  sub_1004B8930(0, (unint64_t *)&qword_1013F6620, UIViewController_ptr);
  v32 = v28;
  v33 = v31;
  v34 = static NSObject.== infix(_:_:)(v33, v32);

  if ((v34 & 1) == 0)
    goto LABEL_12;
  v35 = objc_msgSend(v32, "navigationController");
  if (v35)
  {
    v36 = v35;
    v37 = (void (*)())swift_allocObject(&unk_10126F450, 56, 7);
    *((_QWORD *)v37 + 2) = v36;
    *((_QWORD *)v37 + 3) = v22;
    *((_QWORD *)v37 + 4) = v32;
    *((_QWORD *)v37 + 5) = v29;
    *((_QWORD *)v37 + 6) = v53;
    v61 = sub_1005B7220;
    v62 = v37;
    aBlock = _NSConcreteStackBlock;
    v58 = *(_QWORD *)"";
    v59 = sub_1005D2FC0;
    v60 = &unk_10126F468;
    v38 = _Block_copy(&aBlock);
    v39 = v62;
    v40 = v53;
    v41 = v32;
    v42 = v29;
    v43 = v36;
    swift_retain(v22);
    swift_release(v39);
    objc_msgSend(v51, "animateWithDuration:animations:", v38, 0.3);

    _Block_release(v38);
    swift_release(v22);

  }
  else
  {
LABEL_12:
    sub_1005B62B4(v29, v53);
    swift_release(v22);

  }
  v25 = sub_1005B719C;
  v7 = v55;
  v2 = v56;
  v3 = &selRef_alignToOrigin;
LABEL_16:
  v44 = objc_msgSend(*(id *)&v2[(_QWORD)v1], v3[194]);
  v45 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v44, v5);

  if ((unint64_t)v45 >> 62)
  {
    if (v45 < 0)
      v50 = v45;
    else
      v50 = v45 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v45);
    v46 = _CocoaArrayWrapper.endIndex.getter(v50);
    swift_bridgeObjectRelease(v45);
  }
  else
  {
    v46 = *(_QWORD *)((v45 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v45);
  if (v7 < v46)
  {
    if (qword_1013DD360 != -1)
      swift_once(&qword_1013DD360, sub_1008855F4);
    goto LABEL_23;
  }
  if (v46 < v7)
  {
    if (qword_1013DD368 == -1)
    {
LABEL_23:
      v47 = String._bridgeToObjectiveC()();
      CRLAccessibilityPostAnnouncementNotification(v1, v47);

      CRLAccessibilityPostLayoutChangedNotification(*(void **)&v2[(_QWORD)v1]);
      return sub_1004C1024((uint64_t)v25, (uint64_t)v24);
    }
LABEL_35:
    swift_once(&qword_1013DD368, sub_1008856E4);
    goto LABEL_23;
  }
  return sub_1004C1024((uint64_t)v25, (uint64_t)v24);
}

uint64_t sub_1005B7150()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1005B7160()
{
  id *v0;

  return swift_deallocObject(v0, 56, 7);
}

void sub_1005B719C()
{
  uint64_t v0;

  sub_1005B6720(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(_QWORD **)(v0 + 40), *(void **)(v0 + 48));
}

uint64_t sub_1005B71AC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1005B71BC()
{
  uint64_t v0;

  return sub_100618D04(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1005B71C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1005B71D4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1005B71DC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 56, 7);
}

void sub_1005B7220()
{
  uint64_t v0;

  sub_1005B6770(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(void **)(v0 + 40), *(void **)(v0 + 48));
}

uint64_t sub_1005B7230()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1005B725C()
{
  uint64_t v0;

  sub_1005B6470(*(char **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1005B7264()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1005B7274()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1005B7298()
{
  uint64_t v0;

  sub_1005B6008(*(void **)(v0 + 16));
}

uint64_t sub_1005B72A0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_1005B72D0()
{
  unint64_t result;

  result = qword_1013E5358;
  if (!qword_1013E5358)
  {
    result = swift_getWitnessTable(&unk_100EFC2E0, &type metadata for CRLAddStickyNoteToBoardIntent);
    atomic_store(result, (unint64_t *)&qword_1013E5358);
  }
  return result;
}

unint64_t sub_1005B7318()
{
  unint64_t result;

  result = qword_1013E5360;
  if (!qword_1013E5360)
  {
    result = swift_getWitnessTable(&unk_100EFC308, &type metadata for CRLAddStickyNoteToBoardIntent);
    atomic_store(result, (unint64_t *)&qword_1013E5360);
  }
  return result;
}

uint64_t sub_1005B735C(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &unk_101118950, 1) + 8);
}

uint64_t sub_1005B7380(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_101118928, 1);
}

uint64_t sub_1005B7390@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(_BYTE *, uint64_t, uint64_t);
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  void (*v38)(_BYTE *, uint64_t, uint64_t, uint64_t);
  _BYTE *v39;
  _BYTE *v40;
  uint64_t v41;
  _BYTE *v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(_BYTE *, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  _BYTE *v52;
  _BYTE *v53;
  _BYTE *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t result;
  _BYTE v58[12];
  unsigned int v59;
  void (*v60)(_BYTE *, uint64_t, uint64_t);
  uint64_t v61;
  unsigned int v62;
  void (*v63)(_BYTE *, uint64_t, uint64_t, uint64_t);
  _BYTE *v64;
  uint64_t v65;
  void (*v66)(_BYTE *, _QWORD, uint64_t, uint64_t);
  uint64_t v67;
  _BYTE *v68;
  _BYTE *v69;
  uint64_t v70;
  uint64_t *v71;
  _BYTE *v72;
  _BYTE *v73;
  _BYTE *v74;
  _BYTE *v75;
  uint64_t v76;
  _QWORD v77[2];
  char v78[56];

  v71 = a1;
  v1 = sub_1004B804C(&qword_1013E5380);
  __chkstk_darwin(v1);
  v72 = &v58[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v76 = type metadata accessor for InputConnectionBehavior(0);
  v70 = *(_QWORD *)(v76 - 8);
  __chkstk_darwin(v76);
  v75 = &v58[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_1004B804C(&qword_1013E1110);
  __chkstk_darwin(v4);
  v69 = &v58[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v74 = &v58[-v7];
  v8 = sub_1004B804C(&qword_1013FE140);
  __chkstk_darwin(v8);
  v68 = &v58[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_1004B804C(&qword_1013E1118);
  __chkstk_darwin(v10);
  v73 = &v58[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = &v58[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = type metadata accessor for Locale(0);
  __chkstk_darwin(v16);
  v18 = &v58[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v19);
  v21 = &v58[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v22 = type metadata accessor for LocalizedStringResource(0);
  v23 = *(_QWORD *)(v22 - 8);
  v67 = v22;
  __chkstk_darwin(v22);
  v25 = &v58[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v26);
  v64 = &v58[-v27];
  v65 = sub_1004B804C(&qword_1013E1120);
  v28 = String.LocalizationValue.init(stringLiteral:)(0x6472616F42, 0xE500000000000000);
  static Locale.current.getter(v28);
  v29 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v30 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v13 + 104);
  v30(v15, enum case for LocalizedStringResource.BundleDescription.main(_:), v12);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v21, 0x6E497070414C5243, 0xED000073746E6574, v18, v15, "Parameter title for a board", 27, 2);
  v31 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001DLL, 0x8000000100FB6800);
  static Locale.current.getter(v31);
  v59 = v29;
  v61 = v12;
  v30(v15, v29, v12);
  v60 = v30;
  v32 = v73;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v21, 0x6E497070414C5243, 0xED000073746E6574, v18, v15, "Parameter description for a board", 33, 2);
  v66 = *(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v23 + 56);
  v66(v32, 0, 1, v22);
  v33 = type metadata accessor for CRLBoardEntity(0);
  v34 = v68;
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v68, 1, 1, v33);
  v35 = String.LocalizationValue.init(stringLiteral:)(0x6F62206863696857, 0xEC0000003F647261);
  static Locale.current.getter(v35);
  v30(v15, v29, v12);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v21, 0x6E497070414C5243, 0xED000073746E6574, v18, v15, "Prompt for selecting a board from the list", 42, 2);
  v36 = v74;
  IntentDialog.init(_:)(v25);
  v37 = type metadata accessor for IntentDialog(0);
  v38 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56);
  v63 = v38;
  v38(v36, 0, 1, v37);
  v39 = v69;
  v38(v69, 1, 1, v37);
  v62 = enum case for InputConnectionBehavior.default(_:);
  v70 = *(_QWORD *)(v70 + 104);
  v40 = v75;
  ((void (*)(_BYTE *))v70)(v75);
  v41 = sub_1004B7878((unint64_t *)&qword_1013E1138, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F062EC);
  v42 = v64;
  v43 = v73;
  v44 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v64, v73, v34, v36, v39, v40, v41);
  v45 = v71;
  *v71 = v44;
  v69 = (_BYTE *)sub_1004B804C(&qword_1013E5388);
  v46 = String.LocalizationValue.init(stringLiteral:)(1954047316, 0xE400000000000000);
  static Locale.current.getter(v46);
  v47 = v59;
  v48 = v61;
  v49 = v60;
  v60(v15, v59, v61);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v21, 0x6E497070414C5243, 0xED000073746E6574, v18, v15, "Intent parameter title for text", 31, 2);
  v50 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000022, 0x8000000100FB6840);
  static Locale.current.getter(v50);
  v49(v15, v47, v48);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v21, 0x6E497070414C5243, 0xED000073746E6574, v18, v15, "Parameter description for text", 30, 2);
  v66(v43, 0, 1, v67);
  v51 = type metadata accessor for AttributedString(0);
  v52 = v72;
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v72, 1, 1, v51);
  v53 = v74;
  v63(v74, 1, 1, v37);
  v54 = v75;
  ((void (*)(_BYTE *, _QWORD, uint64_t))v70)(v75, v62, v76);
  v45[1] = IntentParameter<>.init(title:description:default:requestValueDialog:inputConnectionBehavior:)(v42, v43, v52, v53, v54);
  sub_1004B804C(&qword_1013E1128);
  v77[0] = 0xD00000000000001FLL;
  v77[1] = 0x8000000100FAFD20;
  AnyHashable.init<A>(_:)(v77, &type metadata for String, &protocol witness table for String);
  v55 = type metadata accessor for AppDependencyManager(0);
  v56 = static AppDependencyManager.shared.getter(v55);
  result = AppDependency.__allocating_init(key:manager:)(v78, v56);
  v45[2] = result;
  v45[6] = (uint64_t)&type metadata for CRLBoardItemInsertionPerformer;
  v45[7] = (uint64_t)&off_101291088;
  return result;
}

uint64_t sub_1005B7B18(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2[12] = a1;
  v2[13] = v1;
  v3 = sub_1004B804C(&qword_1013E5380);
  v2[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRLBoardEntity(0);
  v2[15] = v4;
  v5 = (*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[16] = swift_task_alloc(v5);
  v2[17] = swift_task_alloc(v5);
  v6 = type metadata accessor for Logger(0);
  v2[18] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[19] = v7;
  v2[20] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1005B7BD0, 0, 0);
}

uint64_t sub_1005B7BD0()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  char *v6;

  if (qword_1013DD838 != -1)
    swift_once(&qword_1013DD838, sub_100A04F30);
  v1 = (_QWORD *)v0[17];
  v2 = (_QWORD *)v0[14];
  swift_beginAccess(&static OS_os_log.appIntents, v0 + 7, 0, 0);
  Logger.init(_:)((id)static OS_os_log.appIntents);
  IntentParameter.wrappedValue.getter(v1);
  v3 = IntentParameter.wrappedValue.getter(v2);
  AppDependency.wrappedValue.getter(v3);
  v0[5] = &type metadata for CRLBoardLibraryProvidingDependency;
  v0[6] = &off_10129B490;
  v6 = (char *)&dword_101402390 + dword_101402390;
  v4 = (_QWORD *)swift_task_alloc(unk_101402394);
  v0[21] = v4;
  *v4 = v0;
  v4[1] = sub_1005B7CE8;
  return ((uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD *))v6)(6, v0[17], v0[14], v0 + 2);
}

uint64_t sub_1005B7CE8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 168);
  *(_QWORD *)(*(_QWORD *)v2 + 176) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = v4[17];
    sub_1005B858C(v4[14]);
    sub_1005761B8(v6);
    v7 = sub_1005B7E9C;
  }
  else
  {
    v8 = v4 + 2;
    v9 = v4[17];
    v10 = v4[14];

    sub_1005B858C(v10);
    sub_1005761B8(v9);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v8);
    v7 = sub_1005B7D94;
  }
  return swift_task_switch(v7, 0, 0);
}

uint64_t sub_1005B7D94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 144);
  v5 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD **)(v0 + 128);
  v11 = *(_QWORD *)(v0 + 136);
  v12 = *(_QWORD *)(v0 + 112);
  v6 = IntentParameter.wrappedValue.getter(v4);
  v7 = IntentParameter.projectedValue.getter(v6);
  *(_QWORD *)(v0 + 88) = v7;
  v8 = sub_1004B7878((unint64_t *)&qword_1013E3448, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F064FC);
  v9 = sub_1005761F4();
  static IntentResult.result<A, B>(value:opensIntent:)(v4, v0 + 88, v5, &type metadata for CRLOpenBoardIntent, v8, v9);
  swift_release(v7);
  sub_1005761B8((uint64_t)v4);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
  swift_task_dealloc(v2);
  swift_task_dealloc(v11);
  swift_task_dealloc(v4);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005B7E9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;

  v1 = *(_QWORD *)(v0 + 176);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 16));
  swift_errorRetain(v1);
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(_QWORD *)(v0 + 176);
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v6 = 138412290;
    swift_errorRetain(v5);
    v8 = _swift_stdlib_bridgeErrorToNSError(v5);
    *(_QWORD *)(v0 + 80) = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 80, v0 + 88, v6 + 4, v6 + 12);
    *v7 = v8;
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Error inserting sticky note: %@", v6, 0xCu);
    v9 = sub_1004B804C(&qword_1013E53A8);
    swift_arrayDestroy(v7, 1, v9);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

  }
  else
  {
    v10 = *(_QWORD *)(v0 + 176);

    swift_errorRelease(v10);
    swift_errorRelease(v10);
  }
  v11 = *(_QWORD *)(v0 + 176);
  v13 = *(_QWORD *)(v0 + 152);
  v12 = *(_QWORD *)(v0 + 160);
  v15 = *(_QWORD *)(v0 + 136);
  v14 = *(_QWORD *)(v0 + 144);
  v16 = *(_QWORD *)(v0 + 128);
  v17 = *(_QWORD *)(v0 + 112);
  v18 = type metadata accessor for _PrebuiltAppIntentError(0);
  v19 = sub_1004B7878((unint64_t *)&qword_1013E53A0, (uint64_t (*)(uint64_t))&type metadata accessor for _PrebuiltAppIntentError, (uint64_t)&protocol conformance descriptor for _PrebuiltAppIntentError);
  swift_allocError(v18, v19, 0, 0);
  v20.n128_f64[0] = static _UnrecoverableError.unknownError.getter();
  swift_willThrow(v20);
  swift_errorRelease(v11);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  swift_task_dealloc(v12);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005B80C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for LocalizedStringResource(0);
  sub_100501DE0(v10, qword_10147EA90);
  sub_1004F2A1C(v10, (uint64_t)qword_10147EA90);
  v11 = String.LocalizationValue.init(stringLiteral:)(0x6369745320646441, 0xEF65746F4E20796BLL);
  static Locale.current.getter(v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v9, 0x6E497070414C5243, 0xED000073746E6574, v6, v3, "App intent title", 16, 2);
}

uint64_t sub_1005B8254()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t KeyPath;
  uint64_t v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  Swift::String v13;
  uint64_t v15;

  v0 = sub_1004B804C(&qword_1013E53B0);
  __chkstk_darwin(v0);
  v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1004B804C(&qword_1013E53B8);
  __chkstk_darwin(v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1005B8548();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(25, 2, &type metadata for CRLAddStickyNoteToBoardIntent, v6);
  v7._object = (void *)0x8000000100FB6890;
  v7._countAndFlagsBits = 0xD000000000000015;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_100EFC350);
  v9 = sub_1004B804C(&qword_1013E53C0);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v3, v9);
  swift_release(KeyPath);
  v10._countAndFlagsBits = 544175136;
  v10._object = (void *)0xE400000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v10);
  v11 = swift_getKeyPath(&unk_100EFC378);
  v12 = sub_1004B804C(&qword_1013E53C8);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(v11, v3, v12);
  swift_release(v11);
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v13);
  ParameterSummaryString.init(stringInterpolation:)(v5, &type metadata for CRLAddStickyNoteToBoardIntent, v6);
  return IntentParameterSummary.init(_:table:)(v2, 0x6E497070414C5243, 0xED000073746E6574, &type metadata for CRLAddStickyNoteToBoardIntent, v6);
}

uint64_t sub_1005B841C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1013DCAE8 != -1)
    swift_once(&qword_1013DCAE8, sub_1005B80C0);
  v2 = type metadata accessor for LocalizedStringResource(0);
  v3 = sub_1004F2A1C(v2, (uint64_t)qword_10147EA90);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1005B8490(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1013E539C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1004CF80C;
  return sub_1005B7B18(a1);
}

uint64_t sub_1005B84E4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1005B8548();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for CRLAddStickyNoteToBoardIntent()
{
  return &type metadata for CRLAddStickyNoteToBoardIntent;
}

uint64_t sub_1005B851C()
{
  return sub_1004CBA30(&qword_1013E5370, &qword_1013E5378, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

unint64_t sub_1005B8548()
{
  unint64_t result;

  result = qword_1013E5390;
  if (!qword_1013E5390)
  {
    result = swift_getWitnessTable(&unk_100EFC250, &type metadata for CRLAddStickyNoteToBoardIntent);
    atomic_store(result, &qword_1013E5390);
  }
  return result;
}

uint64_t sub_1005B858C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B804C(&qword_1013E5380);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1005B85CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1005B85F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

id sub_1005B861C(char a1, char a2, uint64_t a3, uint64_t a4, void *a5)
{
  _BYTE *v5;
  objc_class *ObjectType;
  char v12;
  _OWORD *v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  double v21;
  id v22;
  uint64_t v23;
  double v24;
  objc_super v26;
  objc_super v27;
  void **aBlock;
  uint64_t v29;
  id (*v30)(uint64_t, uint64_t, uint64_t);
  void *v31;
  uint64_t v32;
  uint64_t v33;

  ObjectType = (objc_class *)swift_getObjectType(v5);
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform36CRLCollectionViewCompositionalLayout_footerViewHeight] = 0;
  v12 = a1 & 1;
  v13 = &v5[OBJC_IVAR____TtC8Freeform36CRLCollectionViewCompositionalLayout_footerViewContentInsets];
  v14 = *(_OWORD *)&NSDirectionalEdgeInsetsZero.bottom;
  *v13 = *(_OWORD *)&NSDirectionalEdgeInsetsZero.top;
  v13[1] = v14;
  v15 = OBJC_IVAR____TtC8Freeform36CRLCollectionViewCompositionalLayout_coreLayout;
  v16 = type metadata accessor for CRLItemCollectionCoreFooterAwareLayout();
  v17 = swift_allocObject(v16, 64, 7);
  *(_BYTE *)(v17 + 16) = 0;
  *(_QWORD *)(v17 + 56) = 0;
  *(_QWORD *)(v17 + 32) = 0;
  *(_QWORD *)(v17 + 40) = 0;
  *(_QWORD *)(v17 + 24) = 0;
  swift_unknownObjectWeakInit(v17 + 48, 0);
  *(_QWORD *)&v5[v15] = v17;
  v5[OBJC_IVAR____TtC8Freeform36CRLCollectionViewCompositionalLayout_layoutStyle] = v12;
  v5[OBJC_IVAR____TtC8Freeform36CRLCollectionViewCompositionalLayout_containsInvitations] = a2;
  if (a5)
  {
    v32 = a3;
    v33 = a4;
    aBlock = _NSConcreteStackBlock;
    v29 = *(_QWORD *)"";
    v30 = sub_1005B8810;
    v31 = &unk_10126F708;
    v18 = _Block_copy(&aBlock);
    v19 = v33;
    swift_retain(a4);
    v20 = a5;
    *(_QWORD *)&v21 = swift_release(v19).n128_u64[0];
    v26.receiver = v5;
    v26.super_class = ObjectType;
    v22 = objc_msgSendSuper2(&v26, "initWithSectionProvider:configuration:", v18, v20, v21);
    swift_release(a4);

  }
  else
  {
    v32 = a3;
    v33 = a4;
    aBlock = _NSConcreteStackBlock;
    v29 = *(_QWORD *)"";
    v30 = sub_1005B8810;
    v31 = &unk_10126F6E0;
    v18 = _Block_copy(&aBlock);
    v23 = v33;
    swift_retain(a4);
    *(_QWORD *)&v24 = swift_release(v23).n128_u64[0];
    v27.receiver = v5;
    v27.super_class = ObjectType;
    v22 = objc_msgSendSuper2(&v27, "initWithSectionProvider:", v18, v24);
    swift_release(a4);
  }
  _Block_release(v18);
  return v22;
}

id sub_1005B8810(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  void *v7;

  v6 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  swift_unknownObjectRetain(a3);
  v7 = (void *)v6(a2, a3);
  swift_release(v5);
  swift_unknownObjectRelease(a3);
  return v7;
}

double sub_1005B8898()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  double v3;
  double v4;
  uint64_t v5;
  double result;
  objc_super v7;

  ObjectType = (objc_class *)swift_getObjectType(v0);
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform36CRLCollectionViewCompositionalLayout_coreLayout];
  *(_QWORD *)(v2 + 56) = &off_10126F6C0;
  swift_unknownObjectWeakAssign(v2 + 48, v0);
  v3 = *(double *)&v0[OBJC_IVAR____TtC8Freeform36CRLCollectionViewCompositionalLayout_footerViewHeight];
  *(double *)(v2 + 24) = v3;
  *(_BYTE *)(v2 + 16) = v3 > 0.0;
  *(_QWORD *)(v2 + 32) = 0;
  *(_QWORD *)(v2 + 40) = 0;
  v7.receiver = v0;
  v7.super_class = ObjectType;
  *(_QWORD *)&v4 = swift_retain(v2).n128_u64[0];
  objc_msgSendSuper2(&v7, "prepareLayout", v4);
  *(double *)(v2 + 32) = sub_1005B90B8();
  *(_QWORD *)(v2 + 40) = v5;
  *(_QWORD *)&result = swift_release(v2).n128_u64[0];
  return result;
}

void *sub_1005B89B8()
{
  uint64_t v0;
  objc_class *ObjectType;
  uint64_t v2;
  void *result;
  void *v4;
  objc_super v5;

  ObjectType = (objc_class *)swift_getObjectType(v0);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform36CRLCollectionViewCompositionalLayout_coreLayout);
  result = (void *)swift_unknownObjectWeakLoadStrong(v2 + 48);
  if (result)
  {
    v4 = result;
    v5.receiver = result;
    v5.super_class = ObjectType;
    swift_retain(v2);
    objc_msgSendSuper2(&v5, "collectionViewContentSize");

    return (void *)swift_release(v2);
  }
  return result;
}

uint64_t sub_1005B8A6C(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  uint64_t v10;
  uint64_t Strong;
  void *v12;
  id v13;
  double v14;
  double v15;
  double v16;
  double v17;
  objc_super v20;

  ObjectType = (objc_class *)swift_getObjectType(v4);
  v10 = *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform36CRLCollectionViewCompositionalLayout_coreLayout];
  Strong = swift_unknownObjectWeakLoadStrong(v10 + 48);
  if (Strong)
  {
    v12 = (void *)Strong;
    swift_retain(v10);
    v13 = objc_msgSend(v12, "collectionView");

    if (v13)
    {
      objc_msgSend(v13, "bounds");
      v15 = v14;
      v17 = v16;
      swift_release(v10);

      if (v15 != a3 || v17 != a4)
        return 1;
    }
    else
    {
      swift_release(v10);
    }
  }
  v20.receiver = v4;
  v20.super_class = ObjectType;
  return (uint64_t)objc_msgSendSuper2(&v20, "shouldInvalidateLayoutForBoundsChange:", a1, a2, a3, a4);
}

void sub_1005B8CF8()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  NSString v3;
  Class isa;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16[40];
  objc_super v17;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType(v0);
  v3 = String._bridgeToObjectiveC()();
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v17.receiver = v1;
  v17.super_class = ObjectType;
  v5 = objc_msgSendSuper2(&v17, "layoutAttributesForSupplementaryViewOfKind:atIndexPath:", v3, isa);

  if (!v5)
    return;
  v6 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform36CRLCollectionViewCompositionalLayout_coreLayout];
  v7 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  inited = swift_initStackObject(v7, v16);
  *(_OWORD *)(inited + 16) = xmmword_100EEF400;
  *(_QWORD *)(inited + 32) = v5;
  v15 = inited;
  specialized Array._endMutation()(inited);
  v9 = v5;
  swift_retain(v6);
  sub_1005B9334(v15);
  v11 = v10;
  swift_bridgeObjectRelease(v15);
  if (!v11)
  {
    swift_release(v6);

LABEL_15:
    return;
  }
  if ((unint64_t)v11 >> 62)
  {
    if (v11 >= 0)
      v13 = v11 & 0xFFFFFFFFFFFFFF8;
    else
      v13 = v11;
    swift_bridgeObjectRetain(v11);
    v14 = _CocoaArrayWrapper.endIndex.getter(v13);
    swift_bridgeObjectRelease(v11);
    if (v14)
      goto LABEL_5;
    goto LABEL_14;
  }
  if (!*(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_14:
    swift_bridgeObjectRelease(v11);

    swift_release(v6);
    goto LABEL_15;
  }
LABEL_5:
  if ((v11 & 0xC000000000000001) != 0)
  {
    specialized _ArrayBuffer._getElementSlowPath(_:)(0, v11);
    goto LABEL_8;
  }
  if (*(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    v12 = *(id *)(v11 + 32);
LABEL_8:
    swift_bridgeObjectRelease(v11);

    swift_release(v6);
    return;
  }
  __break(1u);
}

uint64_t type metadata accessor for CRLCollectionViewCompositionalLayout()
{
  return objc_opt_self(_TtC8Freeform36CRLCollectionViewCompositionalLayout);
}

double sub_1005B90B8()
{
  uint64_t v0;
  void *Strong;
  void *v2;
  id v3;
  void *v4;
  objc_class *v5;
  id v6;
  double v7;
  double v8;
  double v9;
  double v10;
  char v11;
  char v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double MinY;
  double MaxY;
  objc_super v24;
  objc_super v25;
  objc_super v26;
  CGRect v27;
  CGRect v28;
  CGRect v29;
  CGRect v30;
  CGRect v31;

  if (*(_BYTE *)(v0 + 16) != 1)
    return 0.0;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + 48);
  if (!Strong)
    return 0.0;
  v2 = Strong;
  v3 = objc_msgSend(Strong, "collectionView");
  if (!v3)
  {

    return 0.0;
  }
  v4 = v3;
  v5 = (objc_class *)type metadata accessor for CRLCollectionViewCompositionalLayout();
  v26.receiver = v2;
  v26.super_class = v5;
  objc_msgSendSuper2(&v26, "collectionViewContentSize");
  v6 = objc_msgSend(v4, "superview");
  objc_msgSend(v4, "bounds");
  v8 = v7;
  v25.receiver = v2;
  v25.super_class = v5;
  objc_msgSendSuper2(&v25, "collectionViewContentSize");
  v10 = v9;
  v11 = sub_1005B92A8();
  if (v6)
  {
    v12 = v11;
    objc_msgSend(v6, "bounds");
    if ((v12 & 1) != 0)
      v14 = v10;
    else
      v14 = v13;
    if (v13 < v8)
      v10 = v14;
    else
      v10 = v13;
  }
  v24.receiver = v2;
  v24.super_class = v5;
  objc_msgSendSuper2(&v24, "collectionViewContentSize");
  v16 = v15;
  objc_msgSend(v4, "_effectiveContentInset");
  v18 = v17;
  objc_msgSend(v4, "safeAreaInsets");
  v20 = v10 - (v18 + v19);
  v27.origin.x = sub_1005B9628();
  MinY = CGRectGetMinY(v27);
  v28.origin.x = 0.0;
  v28.origin.y = 0.0;
  v28.size.width = v16;
  v28.size.height = v20;
  if (MinY >= CGRectGetMaxY(v28)
    || (v29.origin.x = sub_1005B9628(),
        MaxY = CGRectGetMaxY(v29),
        v30.origin.x = 0.0,
        v30.origin.y = 0.0,
        v30.size.width = v16,
        v30.size.height = v20,
        CGRectGetMaxY(v30) >= MaxY))
  {

  }
  else
  {
    v31.origin.x = sub_1005B9628();
    CGRectGetHeight(v31);

  }
  return v16;
}

unint64_t sub_1005B92A8()
{
  void *v0;
  unint64_t result;
  unint64_t v2;
  char *v3;
  char *v4;
  id v5;
  BOOL v6;

  result = (unint64_t)objc_msgSend(v0, "numberOfSections");
  if ((result & 0x8000000000000000) == 0)
  {
    v2 = result;
    if (!result)
      return 0;
    v3 = 0;
    v4 = (char *)(result - 1);
    while ((char *)v2 != v3)
    {
      v5 = objc_msgSend(v0, "numberOfItemsInSection:", v3);
      v6 = (uint64_t)v5 <= 0;
      result = (uint64_t)v5 > 0;
      if (!v6 || v4 == v3++)
        return result;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1005B9334(uint64_t a1)
{
  uint64_t v1;
  double *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t i;
  void *v22;
  objc_class *v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  id v30;
  void *v31;
  uint64_t Strong;
  uint64_t v33;
  unint64_t v34;
  objc_super v35;
  unint64_t v36;

  if (!a1)
    return;
  v3 = (double *)v1;
  if (*(_BYTE *)(v1 + 16) != 1)
  {
    swift_bridgeObjectRetain(a1);
    return;
  }
  v36 = (unint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 >= 0)
      v18 = a1 & 0xFFFFFFFFFFFFFF8;
    else
      v18 = a1;
    swift_bridgeObjectRetain_n(a1, 2);
    v4 = _CocoaArrayWrapper.endIndex.getter(v18);
    if (v4)
      goto LABEL_5;
LABEL_25:
    swift_bridgeObjectRelease(a1);
    v17 = (unint64_t)_swiftEmptyArrayStorage;
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
      goto LABEL_42;
    goto LABEL_26;
  }
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n(a1, 2);
  if (!v4)
    goto LABEL_25;
LABEL_5:
  if (v4 < 1)
  {
    __break(1u);
    goto LABEL_46;
  }
  v5 = 0;
  v34 = 0x8000000100FB2D50;
  do
  {
    if ((a1 & 0xC000000000000001) != 0)
      v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, a1);
    else
      v6 = *(id *)(a1 + 8 * v5 + 32);
    v7 = v6;
    v8 = objc_msgSend(v6, "representedElementKind", v34);
    if (!v8)
    {
LABEL_7:

      goto LABEL_8;
    }
    v9 = v8;
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v12 = v11;

    if (v10 == 0xD00000000000001DLL && v12 == v34)
    {
      swift_bridgeObjectRelease(0x8000000100FB2D50);
    }
    else
    {
      v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v12, 0xD00000000000001DLL, 0x8000000100FB2D50, 0);
      swift_bridgeObjectRelease(v12);
      if ((v14 & 1) == 0)
        goto LABEL_7;
    }
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v13);
    v15 = *(_QWORD *)(v36 + 16);
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v15);
    v16 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v7);
    specialized ContiguousArray._endMutation()(v16);
LABEL_8:
    ++v5;
  }
  while (v4 != v5);
  swift_bridgeObjectRelease(a1);
  v17 = v36;
  if ((v36 & 0x8000000000000000) == 0)
  {
LABEL_26:
    if ((v17 & 0x4000000000000000) != 0)
      goto LABEL_42;
    v19 = *(_QWORD *)(v17 + 16);
    v20 = swift_retain(v17);
    if (v19)
      goto LABEL_28;
LABEL_43:
    swift_release_n(v17, 2, v20);
    return;
  }
LABEL_42:
  swift_retain(v17);
  v19 = _CocoaArrayWrapper.endIndex.getter(v33);
  if (!v19)
    goto LABEL_43;
LABEL_28:
  if (v19 >= 1)
  {
    for (i = 0; i != v19; ++i)
    {
      if ((v17 & 0xC000000000000001) != 0)
        v30 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v17);
      else
        v30 = *(id *)(v17 + 8 * i + 32);
      v31 = v30;
      Strong = swift_unknownObjectWeakLoadStrong(v3 + 6);
      if (Strong)
      {
        v22 = (void *)Strong;
        v23 = (objc_class *)type metadata accessor for CRLCollectionViewCompositionalLayout();
        v35.receiver = v22;
        v35.super_class = v23;
        objc_msgSendSuper2(&v35, "collectionViewContentSize");
        v25 = v24;
        v27 = v26;

        if (v3[4] > v25)
          v28 = v3[4];
        else
          v28 = v25;
        if (v3[5] > v27)
          v29 = v3[5];
        else
          v29 = v27;
      }
      else
      {
        v28 = 0.0;
        v29 = 0.0;
      }
      objc_msgSend(v31, "setFrame:", 0.0, v29 - v3[3], v28);

    }
    goto LABEL_43;
  }
LABEL_46:
  __break(1u);
}

double sub_1005B9628()
{
  uint64_t v0;
  void *Strong;
  void *v2;
  void *v3;
  objc_super v5;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + 48);
  if (Strong)
  {
    v2 = Strong;
    v5.receiver = Strong;
    v5.super_class = (Class)type metadata accessor for CRLCollectionViewCompositionalLayout();
    objc_msgSendSuper2(&v5, "collectionViewContentSize");

  }
  v3 = (void *)swift_unknownObjectWeakLoadStrong(v0 + 48);
  if (v3)

  return 0.0;
}

uint64_t sub_1005B96EC()
{
  uint64_t v0;

  sub_1004CBB0C(v0 + 48);
  return swift_deallocClassInstance(v0, 64, 7);
}

uint64_t type metadata accessor for CRLItemCollectionCoreFooterAwareLayout()
{
  return objc_opt_self(_TtC8FreeformP33_82AE0C583BC26C0B0DD3D5BFBFE55FED38CRLItemCollectionCoreFooterAwareLayout);
}

uint64_t sub_1005B9730(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1005B9740(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

unint64_t sub_1005B9748()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E5580;
  if (!qword_1013E5580)
  {
    v1 = objc_opt_self(UICollectionViewLayoutAttributes);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1013E5580);
  }
  return result;
}

void sub_1005B9784()
{
  char *v0;
  char *v1;
  __int128 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform36CRLCollectionViewCompositionalLayout_footerViewHeight] = 0;
  v1 = &v0[OBJC_IVAR____TtC8Freeform36CRLCollectionViewCompositionalLayout_footerViewContentInsets];
  v2 = *(_OWORD *)&NSDirectionalEdgeInsetsZero.bottom;
  *(_OWORD *)v1 = *(_OWORD *)&NSDirectionalEdgeInsetsZero.top;
  *((_OWORD *)v1 + 1) = v2;
  v3 = OBJC_IVAR____TtC8Freeform36CRLCollectionViewCompositionalLayout_coreLayout;
  v4 = type metadata accessor for CRLItemCollectionCoreFooterAwareLayout();
  v5 = swift_allocObject(v4, 64, 7);
  *(_BYTE *)(v5 + 16) = 0;
  *(_QWORD *)(v5 + 56) = 0;
  *(_QWORD *)(v5 + 32) = 0;
  *(_QWORD *)(v5 + 40) = 0;
  *(_QWORD *)(v5 + 24) = 0;
  swift_unknownObjectWeakInit(v5 + 48);
  *(_QWORD *)&v0[v3] = v5;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100FAD6F0, "Freeform/CRLCollectionViewCompositionalLayout.swift", 51, 2, 45, 0);
  __break(1u);
}

double *sub_1005B9858(uint64_t a1, void *a2, void *a3)
{
  double *v5;

  v5 = sub_1005C4720(a1, (uint64_t)a2, (uint64_t)a3);

  return v5;
}

_QWORD *sub_1005B989C(uint64_t a1)
{
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  _BYTE v11[40];
  _QWORD *v12;

  v12 = _swiftEmptyArrayStorage;
  v2 = *(_QWORD *)(a1 + 16);
  specialized ContiguousArray.reserveCapacity(_:)(v2);
  if (!v2)
    return v12;
  for (i = a1 + 32; ; i += 40)
  {
    sub_1004B8968(i, (uint64_t)v11);
    v4 = sub_1004B804C(&qword_1013E0670);
    v5 = swift_dynamicCast(&v10, v11, &type metadata for AnyHashable, v4, 6);
    if (!(_DWORD)v5)
      break;
    v6 = v10;
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v5);
    v7 = v12[2];
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v7);
    v8 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v7, v6);
    specialized ContiguousArray._endMutation()(v8);
    if (!--v2)
      return v12;
  }
  v10 = 0;
  swift_release(v12);
  swift_unknownObjectRelease(v10);
  return 0;
}

_QWORD *sub_1005B99A0(unint64_t a1)
{
  return sub_1005B9BEC(a1, (void (*)(BOOL, unint64_t, uint64_t))sub_1006009FC);
}

_QWORD *sub_1005B99AC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t i;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;
  __int128 v16[2];
  uint64_t v17;
  id v18;
  __int128 v19[2];
  _QWORD *v20;

  v2 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
    goto LABEL_26;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  v20 = _swiftEmptyArrayStorage;
  sub_100600A50(0, v3 & ~(v3 >> 63), 0);
  v4 = v20;
  if (!v2)
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v2)
      return v4;
LABEL_10:
    for (i = 4; ; ++i)
    {
      v7 = i - 4;
      if ((a1 & 0xC000000000000001) != 0)
      {
        v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, a1);
        v9 = i - 3;
        if (__OFADD__(v7, 1))
          goto LABEL_25;
      }
      else
      {
        v8 = *(id *)(a1 + 8 * i);
        v9 = i - 3;
        if (__OFADD__(v7, 1))
        {
LABEL_25:
          __break(1u);
LABEL_26:
          if (a1 < 0)
            v15 = a1;
          else
            v15 = a1 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(a1);
          v3 = _CocoaArrayWrapper.endIndex.getter(v15);
          swift_bridgeObjectRelease(a1);
          goto LABEL_3;
        }
      }
      v18 = v8;
      v10 = sub_1004B8930(0, (unint64_t *)&qword_1013F6620, UIViewController_ptr);
      v11 = sub_1004B804C(&qword_1013E56C8);
      if (!swift_dynamicCast(v16, &v18, v10, v11, 6))
      {
        v17 = 0;
        memset(v16, 0, sizeof(v16));
        swift_release(v20);
        sub_1004CB800((uint64_t)v16, (uint64_t *)&unk_1013E56D0);
        return 0;
      }
      sub_1004DB728(v16, (uint64_t)v19);
      sub_1004DB728(v19, (uint64_t)v16);
      v4 = v20;
      if ((swift_isUniquelyReferenced_nonNull_native(v20) & 1) == 0)
      {
        sub_100600A50(0, v4[2] + 1, 1);
        v4 = v20;
      }
      v13 = v4[2];
      v12 = v4[3];
      if (v13 >= v12 >> 1)
      {
        sub_100600A50(v12 > 1, v13 + 1, 1);
        v4 = v20;
      }
      v4[2] = v13 + 1;
      sub_1004DB728(v16, (uint64_t)&v4[5 * v13 + 4]);
      if (v9 == v2)
        return v4;
    }
  }
  if (a1 < 0)
    v5 = a1;
  else
    v5 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v2 = _CocoaArrayWrapper.endIndex.getter(v5);
  swift_bridgeObjectRelease(a1);
  if (v2)
    goto LABEL_10;
  return v4;
}

_QWORD *sub_1005B9BE0(unint64_t a1)
{
  return sub_1005B9BEC(a1, (void (*)(BOOL, unint64_t, uint64_t))sub_100600BF4);
}

_QWORD *sub_1005B9BEC(unint64_t a1, void (*a2)(BOOL, unint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t i;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(BOOL, unint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  void (*v25)(BOOL, unint64_t, uint64_t);
  _QWORD *v26;
  uint64_t v28;
  void (*v29)(BOOL, unint64_t, uint64_t);
  uint64_t v30;

  v3 = a1;
  v4 = a1 >> 62;
  if (a1 >> 62)
    goto LABEL_43;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    a2(0, v5 & ~(v5 >> 63), 0);
    v6 = _swiftEmptyArrayStorage;
    if (v4)
      break;
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v4)
      return v6;
LABEL_10:
    v29 = a2;
    if ((v3 & 0xC000000000000001) != 0)
    {
      for (i = 0; ; ++i)
      {
        v9 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v3);
        v10 = i + 1;
        if (__OFADD__(i, 1))
          break;
        v11 = v9;
        ObjectType = swift_getObjectType(v9);
        v13 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for CRLFolderCollectionViewItem);
        if (v13)
          a2 = (void (*)(BOOL, unint64_t, uint64_t))v13;
        else
          a2 = 0;
        if (v13)
          v14 = v11;
        else
          v14 = 0;
        if (!v14)
        {
          swift_release(_swiftEmptyArrayStorage);
          swift_unknownObjectRelease(v11);
          return 0;
        }
        v16 = _swiftEmptyArrayStorage[2];
        v15 = _swiftEmptyArrayStorage[3];
        if (v16 >= v15 >> 1)
          v29(v15 > 1, v16 + 1, 1);
        _swiftEmptyArrayStorage[2] = v16 + 1;
        v17 = &_swiftEmptyArrayStorage[2 * v16];
        v17[4] = v14;
        v17[5] = a2;
        if (v10 == v4)
          return v6;
      }
      __break(1u);
    }
    else
    {
      v18 = 0;
      v30 = v3 + 32;
      while (1)
      {
        v19 = v18 + 1;
        if (__OFADD__(v18, 1))
          break;
        v20 = *(void (**)(BOOL, unint64_t, uint64_t))(v30 + 8 * v18);
        v21 = swift_getObjectType(v20);
        v22 = swift_conformsToProtocol2(v21, &protocol descriptor for CRLFolderCollectionViewItem);
        if (v22)
          v23 = v22;
        else
          v23 = 0;
        if (v22)
          a2 = v20;
        else
          a2 = 0;
        if (!a2)
        {
          swift_release(_swiftEmptyArrayStorage);
          return 0;
        }
        v3 = _swiftEmptyArrayStorage[2];
        v24 = _swiftEmptyArrayStorage[3];
        v25 = v20;
        if (v3 >= v24 >> 1)
          v29(v24 > 1, v3 + 1, 1);
        _swiftEmptyArrayStorage[2] = v3 + 1;
        v26 = &_swiftEmptyArrayStorage[2 * v3];
        v26[4] = a2;
        v26[5] = v23;
        ++v18;
        if (v19 == v4)
          return v6;
      }
    }
    __break(1u);
LABEL_43:
    if (v3 < 0)
      v28 = v3;
    else
      v28 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
    v5 = _CocoaArrayWrapper.endIndex.getter(v28);
    swift_bridgeObjectRelease(v3);
  }
  if (v3 < 0)
    v7 = v3;
  else
    v7 = v3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v3);
  v4 = _CocoaArrayWrapper.endIndex.getter(v7);
  swift_bridgeObjectRelease(v3);
  if (v4)
    goto LABEL_10;
  return v6;
}

double *sub_1005B9E38(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_18;
  specialized ContiguousArray.reserveCapacity(_:)(*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10));
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      for (i = 0; ; ++i)
      {
        v4 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v1);
        v5 = i + 1;
        if (__OFADD__(i, 1))
          break;
        v6 = v4;
        v7 = type metadata accessor for CRLShapeItem(0);
        v8 = swift_dynamicCastClass(v6, v7);
        if (!v8)
        {
          swift_unknownObjectRelease(v6);
          goto LABEL_15;
        }
        v9 = v8;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v8);
        v10 = _swiftEmptyArrayStorage[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(*(_QWORD *)&v10);
        v11 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(*(_QWORD *)&v10, v9);
        specialized ContiguousArray._endMutation()(v11);
        if (v5 == v2)
          return _swiftEmptyArrayStorage;
      }
      __break(1u);
    }
    else
    {
      v12 = 0;
      v13 = v1 + 32;
      while (1)
      {
        v14 = v12 + 1;
        if (__OFADD__(v12, 1))
          break;
        v15 = *(void **)(v13 + 8 * v12);
        v16 = type metadata accessor for CRLShapeItem(0);
        v17 = swift_dynamicCastClass(v15, v16);
        if (!v17)
        {
LABEL_15:
          swift_release(_swiftEmptyArrayStorage);
          return 0;
        }
        v1 = v17;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v15);
        v18 = _swiftEmptyArrayStorage[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(*(_QWORD *)&v18);
        v19 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(*(_QWORD *)&v18, v1);
        specialized ContiguousArray._endMutation()(v19);
        ++v12;
        if (v14 == v2)
          return _swiftEmptyArrayStorage;
      }
    }
    __break(1u);
LABEL_18:
    if (v1 < 0)
      v21 = v1;
    else
      v21 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v1);
    v22 = _CocoaArrayWrapper.endIndex.getter(v21);
    swift_bridgeObjectRelease();
    specialized ContiguousArray.reserveCapacity(_:)(v22);
    swift_bridgeObjectRetain(v1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v21);
    swift_bridgeObjectRelease();
  }
  return _swiftEmptyArrayStorage;
}

double sub_1005BA014()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  id v10;
  _QWORD *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double result;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_canvasLayerHosting);
  v2 = objc_msgSend(v1, "interactiveCanvasController");
  v3 = v2;
  if (v2)
  {
    v4 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_selectionPath);
    if (v4)
    {
      v5 = v4;
      v6 = objc_msgSend(v3, "infosForSelectionPath:", v5);
      v7 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v6, &type metadata for AnyHashable, &protocol witness table for AnyHashable);

      v8 = sub_1005FEFFC(v7);
      swift_bridgeObjectRelease(v7);
      v9 = sub_1005B989C((uint64_t)v8);

      swift_release(v8);
      if (v9)
      {
        v10 = v3;
        v11 = sub_1005C5238((uint64_t)v9, v10);
        swift_bridgeObjectRelease(v9);

        sub_100AF7B80((uint64_t)v11);
        v3 = v12;

        swift_bridgeObjectRelease(v11);
        goto LABEL_8;
      }

    }
    else
    {

    }
    v3 = 0;
  }
LABEL_8:
  v13 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_repsForCurrentSelectionPath);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_repsForCurrentSelectionPath) = v3;
  swift_bridgeObjectRelease(v13);
  v14 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_selectionPath);
  if (!v14)
  {
LABEL_14:
    v19 = 0;
    goto LABEL_15;
  }
  v15 = v14;
  v16 = objc_msgSend(v1, "interactiveCanvasController");
  if (!v16)
  {

    goto LABEL_14;
  }
  v17 = v16;
  v18 = objc_msgSend(v16, "selectionModelTranslator");
  v19 = v18;
  if (v18)
  {
    v20 = objc_msgSend(v18, "boardItemsForSelectionPath:", v15);

    v21 = type metadata accessor for CRLBoardItem(0);
    v22 = sub_1004B7878((unint64_t *)&qword_1013E4190, type metadata accessor for CRLBoardItem, (uint64_t)&protocol conformance descriptor for NSObject);
    v19 = (void *)static Set._unconditionallyBridgeFromObjectiveC(_:)(v20, v21, v22);

  }
LABEL_15:
  sub_1005C53B8((uint64_t)v19);
  v24 = v23;
  swift_bridgeObjectRelease(v19);
  v25 = *(_QWORD *)(v0
                  + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_flattenedBoardItemsForCurrentSelectionPath);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_flattenedBoardItemsForCurrentSelectionPath) = v24;
  *(_QWORD *)&result = swift_bridgeObjectRelease(v25).n128_u64[0];
  return result;
}

void sub_1005BA270()
{
  qword_10147EAA8 = 0x4074000000000000;
}

void sub_1005BA280()
{
  qword_10147EAB0 = 0x4071800000000000;
}

char *sub_1005BA294(void *a1, id a2)
{
  _BYTE *v2;
  char *result;
  char *v6;
  id v7;

  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_miniFormatterVC] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_ellipsisBuilder] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_ellipsisBaseButton] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_inspectorElementsBuilders] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_inspectorElementsBaseButtons] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_generalElementsBuilders] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_generalElementsBaseButtons] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_canvasElementsBuilders] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedAuxiliaryViewController] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_auxiliaryPresentedBuilder] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedWrappedNavigationController] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_selectionPath] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_repsForCurrentSelectionPath] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_flattenedBoardItemsForCurrentSelectionPath] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_secondLayerPresentedBuilder] = 0;
  v2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_shouldRepositionSecondLayerPopover] = 0;
  v2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_shouldUpdateSecondLayerPermittedArrowDirections] = 0;
  v2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_shouldUpdateSecondLayerPopoverPassthroughViews] = 0;
  v2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_isUpdatingMiniFormatter] = 0;
  v2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_isInProcessOfPresentingSecondLayerPopover] = 0;
  result = (char *)objc_msgSend(a2, "respondsToSelector:", "asiOSCVC");
  if ((result & 1) != 0)
  {
    v6 = v2;
    v7 = objc_msgSend(a2, "asiOSCVC");
    *(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_canvasViewController] = v7;

    return sub_1005D2FEC((uint64_t)a2, a1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1005BA4A0()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_miniFormatterVC);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = objc_msgSend(v2, "traitCollection");
  if ((objc_msgSend((id)objc_opt_self(UIDevice), "crl_phoneUI") & 1) != 0)
    v4 = 1;
  else
    v4 = (uint64_t)objc_msgSend(v3, "crl_isCompactWidth");

  return v4;
}

void sub_1005BA53C(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  unsigned int v20;
  char v21;
  void *v22;
  char v23;
  void *v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;

  v4 = OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_miniFormatterVC;
  if (*(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_miniFormatterVC))
  {
    v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_repsForCurrentSelectionPath);
    if (v6)
    {
      v7 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_repsForCurrentSelectionPath);
      v8 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_miniFormatterVC);
      if (!v8)
        goto LABEL_21;
LABEL_11:
      swift_bridgeObjectRetain(v6);
      v18 = v8;
      v19 = objc_msgSend(v18, "traitCollection");
      if ((objc_msgSend((id)objc_opt_self(UIDevice), "crl_phoneUI") & 1) != 0)
      {

      }
      else
      {
        v20 = objc_msgSend(v19, "crl_isCompactWidth");

        if (!v20)
        {

          goto LABEL_22;
        }
      }
      v21 = sub_100623088(a1, (uint64_t)v7);

      if ((v21 & 1) != 0)
      {
        swift_bridgeObjectRelease(v7);
        return;
      }
      goto LABEL_22;
    }
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
      && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
    {
      sub_1004B6DB8((uint64_t)_swiftEmptyArrayStorage);
      v7 = v22;
      v8 = *(void **)(v2 + v4);
      if (v8)
        goto LABEL_11;
    }
    else
    {
      v7 = &_swiftEmptySetSingleton;
      v8 = *(void **)(v2 + v4);
      if (v8)
        goto LABEL_11;
    }
LABEL_21:
    swift_bridgeObjectRetain(v6);
LABEL_22:
    v23 = sub_100623088(a1, (uint64_t)v7);
    swift_bridgeObjectRelease(v7);
    sub_1005BB634(1, 1, (v23 & 1) == 0);
    if ((v23 & 1) == 0)
    {
      v24 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_canvasLayerHosting);
      v25 = a2;
      v26 = objc_msgSend(v24, "interactiveCanvasController");
      if (v26)
      {
        v27 = v26;
        v28 = objc_msgSend(v26, "selectionModelTranslator");
        v29 = v28;
        if (v28)
        {
          v30 = objc_msgSend(v28, "boardItemsForSelectionPath:", v25);

          v31 = type metadata accessor for CRLBoardItem(0);
          v32 = sub_1004B7878((unint64_t *)&qword_1013E4190, type metadata accessor for CRLBoardItem, (uint64_t)&protocol conformance descriptor for NSObject);
          v29 = (void *)static Set._unconditionallyBridgeFromObjectiveC(_:)(v30, v31, v32);

        }
      }
      else
      {

        v29 = 0;
      }
      sub_100BF476C((uint64_t)v29);
      swift_bridgeObjectRelease(v29);
      sub_1005BA998(v25, 1);
    }
    return;
  }
  v9 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_canvasLayerHosting);
  v10 = a2;
  v11 = objc_msgSend(v9, "interactiveCanvasController");
  if (v11)
  {
    v12 = v11;
    v13 = objc_msgSend(v11, "selectionModelTranslator");
    v14 = v13;
    if (v13)
    {
      v15 = objc_msgSend(v13, "boardItemsForSelectionPath:", v10);

      v16 = type metadata accessor for CRLBoardItem(0);
      v17 = sub_1004B7878((unint64_t *)&qword_1013E4190, type metadata accessor for CRLBoardItem, (uint64_t)&protocol conformance descriptor for NSObject);
      v14 = (void *)static Set._unconditionallyBridgeFromObjectiveC(_:)(v15, v16, v17);

    }
  }
  else
  {

    v14 = 0;
  }
  sub_100BF476C((uint64_t)v14);
  swift_bridgeObjectRelease(v14);
  sub_1005BA998(v10, 1);
  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_canvasViewController), "becomeFirstResponderIfAppropriate");
}

void sub_1005BA998(void *a1, int a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  int v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  char *v19;
  char *v20;
  id v21;
  double v22;
  void *v23;
  uint64_t v24;
  id v25;
  char v26;
  void *v27;
  void *v28;
  uint64_t v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  void *v44;
  char *v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  char *v53;
  id v54;
  void *v55;
  void *v56;
  char *v57;
  uint64_t v58;
  void *v59;
  void *v60;
  id v61;
  unsigned __int8 v62;
  id v63;
  void *v64;
  uint64_t v65;
  id v66;
  void *v67;
  id v68;
  void *v69;
  id v70;
  void *v71;
  uint64_t v72;
  id v73;
  void *v74;
  id v75;
  char v76;
  char v77;
  double v78;
  id v79;
  _QWORD *v80;
  uint64_t (*v81)(void);
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  char *v87;
  id v88;
  uint64_t v89;
  char *v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  id v94[5];
  uint64_t v95;

  v3 = v2;
  v5 = OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_miniFormatterVC;
  if (*(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_miniFormatterVC])
  {
    sub_1005BB634(1, 0, 1);
    v6 = 0;
  }
  else
  {
    v6 = a2;
  }
  v7 = OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_selectionPath;
  v8 = *(void **)&v2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_selectionPath];
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_selectionPath] = a1;
  v9 = a1;

  sub_1005BA014();
  if ((sub_1005BB318() & 1) == 0
    || (v10 = *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_repsForCurrentSelectionPath]) == 0)
  {
    v23 = *(void **)&v3[v7];
    *(_QWORD *)&v3[v7] = 0;

    sub_1005BA014();
    return;
  }
  swift_bridgeObjectRetain(*(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_repsForCurrentSelectionPath]);
  sub_1005BD548();
  sub_1005BC954(0, 0);
  v12 = v11;
  v14 = v13;
  v15 = OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_inspectorElementsBuilders;
  v16 = *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_inspectorElementsBuilders];
  if (!((unint64_t)v16 >> 62))
  {
    v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
    v18 = v11;
    swift_bridgeObjectRetain(v16);
    if (v17)
      goto LABEL_8;
LABEL_18:
    swift_bridgeObjectRelease(v16);
LABEL_19:
    v22 = 12.0;
    goto LABEL_20;
  }
  if (v16 < 0)
    v24 = *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_inspectorElementsBuilders];
  else
    v24 = v16 & 0xFFFFFFFFFFFFFF8;
  v25 = v11;
  swift_bridgeObjectRetain(v16);
  if (!_CocoaArrayWrapper.endIndex.getter(v24))
    goto LABEL_18;
LABEL_8:
  if ((v16 & 0xC000000000000001) != 0)
  {
    v19 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v16);
  }
  else
  {
    if (!*(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_60:
      __break(1u);
      goto LABEL_61;
    }
    v19 = (char *)*(id *)(v16 + 32);
  }
  v20 = v19;
  swift_bridgeObjectRelease(v16);
  v21 = *(id *)&v20[OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_element];

  LOBYTE(v20) = objc_msgSend(v21, "options");
  v22 = 6.0;
  if ((v20 & 4) == 0)
    goto LABEL_19;
LABEL_20:
  v26 = sub_1005BB108(v12, v22, 6.0);

  if ((v26 & 1) == 0)
  {
    sub_1005BC954(1, 0);
    v28 = v27;
    v14 = v29;

    v12 = v28;
    LOBYTE(v28) = sub_1005BB108(v12, v22, 6.0);

    if ((v28 & 1) == 0)
    {
      sub_1005BC954(1, 1uLL);
      v31 = v30;
      v14 = v32;

      v12 = v31;
    }
  }
  v33 = *(_QWORD *)&v3[v15];
  swift_bridgeObjectRetain(v33);
  sub_100AF8208(v34);
  v36 = v35;
  swift_bridgeObjectRelease(v33);
  v37 = *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_generalElementsBuilders];
  swift_bridgeObjectRetain(v37);
  sub_100AF8208(v38);
  v40 = v39;
  swift_bridgeObjectRelease(v37);
  sub_100CA07E0(v40, v36);
  v95 = v41;
  v42 = *(void **)&v3[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_ellipsisBuilder];
  HIDWORD(v93) = v6;
  if (v42)
  {
    sub_100AD9FA8((Swift::Int *)v94, v42);

    v43 = v95;
  }
  else
  {
    v43 = v41;
  }
  v44 = (void *)type metadata accessor for CRLiOSMiniFormatterPresenter();
  v94[3] = v44;
  v94[4] = &off_10126F7E8;
  v94[0] = v3;
  v45 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLiOSMiniFormatterViewController());
  v46 = sub_1004CB9AC((uint64_t)v94, (uint64_t)v44);
  v47 = __chkstk_darwin(v46);
  v49 = (uint64_t *)((char *)v94 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v50 + 16))(v49, v47);
  v51 = *v49;
  swift_bridgeObjectRetain(v10);
  v52 = v12;
  swift_bridgeObjectRetain(v43);
  v53 = v3;
  v54 = sub_1005C58C8(v10, v52, v14, v43, v51, v45, v22, 6.0);

  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v94);
  v55 = *(void **)&v3[v5];
  *(_QWORD *)&v3[v5] = v54;

  v56 = *(void **)&v3[v5];
  if (!v56)
    goto LABEL_60;
  v57 = v56;
  v58 = sub_100857EA4(v10);
  swift_bridgeObjectRelease(v10);
  v59 = *(void **)&v57[OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_crlaxCurrentPresentedRep];
  *(_QWORD *)&v57[OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_crlaxCurrentPresentedRep] = v58;

  v60 = *(void **)&v53[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_canvasViewController];
  v61 = objc_msgSend(v60, "traitCollection");
  if ((objc_msgSend((id)objc_opt_self(UIDevice), "crl_phoneUI") & 1) != 0)
  {

  }
  else
  {
    v62 = objc_msgSend(v61, "crl_isCompactWidth");

    if ((v62 & 1) == 0)
      goto LABEL_37;
  }
  v63 = objc_msgSend(v60, "presentedViewController");
  if (v63)
  {
    v64 = v63;
    v65 = type metadata accessor for CRLScenesNavigatorViewController();
    if (!swift_dynamicCastClass(v64, v65) || (objc_msgSend(v64, "isBeingDismissed") & 1) != 0)
      goto LABEL_36;
    v66 = objc_msgSend(v60, "delegate");
    if (!v66)
    {
LABEL_64:
      __break(1u);
      return;
    }
    v67 = v66;
    if ((objc_msgSend(v66, "respondsToSelector:", "dismissPresentedViewController") & 1) != 0)
    {
      objc_msgSend(v67, "dismissPresentedViewController");
      swift_unknownObjectRelease(v67);
LABEL_36:

      goto LABEL_37;
    }

    swift_unknownObjectRelease(v67);
  }
LABEL_37:
  v68 = objc_msgSend(v60, "delegate");
  if (!v68)
  {
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  v69 = v68;
  if ((objc_msgSend(v68, "respondsToSelector:", "viewControllerForMiniFormatterForCanvasViewController:") & 1) != 0)
  {
    v70 = objc_msgSend(v69, "viewControllerForMiniFormatterForCanvasViewController:", v60);
    swift_unknownObjectRelease(v69);
    if (v70)
    {
      if (*(_QWORD *)&v3[v5])
      {
        objc_msgSend(v70, "addChildViewController:");
        v71 = *(void **)&v3[v5];
        if (v71)
        {
          v72 = v95;
          v73 = v71;
          swift_bridgeObjectRelease(v72);
          v74 = *(void **)&v3[v5];
          if (v74)
          {
            v75 = v74;
            v76 = sub_10080A2D8();

            v77 = v76 ^ 1;
          }
          else
          {
            v77 = 1;
          }
          sub_100806724((SEL *)v70, (char **)(BYTE4(v93) & 1), v77 & 1);

          goto LABEL_48;
        }
        goto LABEL_63;
      }
LABEL_62:
      __break(1u);
LABEL_63:
      __break(1u);
      goto LABEL_64;
    }
  }
  else
  {
    swift_unknownObjectRelease(v69);
  }
  *(_QWORD *)&v78 = swift_bridgeObjectRelease(v95).n128_u64[0];
LABEL_48:
  if ((v53[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_isUpdatingMiniFormatter] & 1) == 0)
    objc_msgSend(v60, "updateToolbarButtons", v78);
  v79 = &_swiftEmptySetSingleton;
  v94[0] = &_swiftEmptySetSingleton;
  if (*(_QWORD *)&v3[v5])
  {
    v79 = sub_1005BC570();
    v94[0] = v79;
  }
  v80 = *(_QWORD **)&v53[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_auxiliaryPresentedBuilder];
  if (v80)
  {
    v81 = *(uint64_t (**)(void))((swift_isaMask & *v80) + 0x178);
    v82 = v80;
    v83 = v81();
    sub_100511EB8(v83);

    v79 = v94[0];
  }
  v84 = OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_observedObjects;
  v85 = *(_QWORD *)&v53[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_observedObjects];
  *(_QWORD *)&v53[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_observedObjects] = v79;
  v86 = *(void **)&v53[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_changeNotifier];
  if (v86)
  {
    v87 = v53;
    v88 = v86;
    sub_1005C4B9C(v85, v88, (uint64_t)v87, (SEL *)&selRef_removeObserver_forChangeSource_);

    v89 = *(_QWORD *)&v53[v84];
    v90 = v87;
    v91 = v88;
    swift_bridgeObjectRetain(v89);
    sub_1005C4B9C(v92, v91, (uint64_t)v90, (SEL *)&selRef_addObserver_forChangeSource_);

    swift_bridgeObjectRelease(v85);
    swift_bridgeObjectRelease(v89);

  }
  else
  {

    swift_bridgeObjectRelease(v85);
  }
}

uint64_t sub_1005BB108(void *a1, double a2, double a3)
{
  uint64_t v3;
  void *v7;
  id v8;
  void *v9;
  unsigned __int8 v10;
  uint64_t result;
  void *v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  void *v21;
  id v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double Width;
  double v28;
  double v29;
  double v30;
  double v31;
  CGRect v32;

  v7 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_canvasViewController);
  v8 = objc_msgSend(v7, "traitCollection");
  v9 = (void *)objc_opt_self(UIDevice);
  if ((objc_msgSend(v9, "crl_phoneUI") & 1) != 0)
  {

  }
  else
  {
    v10 = objc_msgSend(v8, "crl_isCompactWidth");

    if ((v10 & 1) == 0)
      return 1;
  }
  if (objc_msgSend(v9, "crl_phoneUI")
    && (objc_msgSend((id)objc_opt_self(UIScreen), "crl_deviceIsLandscape") & 1) != 0)
  {
    return 1;
  }
  result = (uint64_t)objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_canvasLayerHosting), "interactiveCanvasController");
  if (result)
  {
    v12 = (void *)result;
    objc_msgSend((id)result, "visibleScaledRectForCanvasUI");
    v14 = v13;
    v16 = v15;
    v18 = v17;
    v20 = v19;

    result = (uint64_t)objc_msgSend(v7, "canvasView");
    if (result)
    {
      v21 = (void *)result;
      v22 = objc_msgSend((id)result, "window");

      if (v22)
      {
        objc_msgSend(v22, "safeAreaInsets");
        v24 = v23;
        v26 = v25;

        v32.origin.x = v14;
        v32.origin.y = v16;
        v32.size.width = v18;
        v32.size.height = v20;
        Width = CGRectGetWidth(v32);
        if (sub_1003A9250())
          v28 = v24;
        else
          v28 = v26;
        if (sub_1003A9250())
          v29 = v26;
        else
          v29 = v24;
        v30 = Width - v28 - v29;
        objc_msgSend(a1, "systemLayoutSizeFittingSize:", UILayoutFittingCompressedSize.width, UILayoutFittingCompressedSize.height);
        return v31 + a2 + a3 < v30;
      }
      else
      {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1005BB318()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  unsigned __int8 v6;
  uint64_t result;
  void *v8;
  id v9;
  unsigned __int8 v10;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_repsForCurrentSelectionPath);
  if (!v1)
    return 0;
  if ((v1 & 0xC000000000000001) != 0)
  {
    if (v1 >= 0)
      v2 = v1 & 0xFFFFFFFFFFFFFF8;
    else
      v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_repsForCurrentSelectionPath);
    swift_bridgeObjectRetain(*(_QWORD *)(v0
                                       + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_repsForCurrentSelectionPath));
    v3 = __CocoaSet.count.getter(v2);
    swift_bridgeObjectRelease(v1);
    if (v3 < 1)
      return 0;
  }
  else if (*(uint64_t *)(v1 + 16) < 1)
  {
    return 0;
  }
  if ((sub_1005D3180() & 1) != 0)
    return 0;
  v4 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_canvasLayerHosting), "interactiveCanvasController");
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(v4, "documentIsSharedReadOnly");

    if ((v6 & 1) != 0)
      return 0;
  }
  result = (uint64_t)objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_canvasViewController), "delegate");
  if (result)
  {
    v8 = (void *)result;
    if ((objc_msgSend((id)result, "respondsToSelector:", "currentDocumentMode") & 1) != 0)
    {
      v9 = objc_msgSend(v8, "currentDocumentMode");
      swift_unknownObjectRelease(v8);
      v10 = objc_msgSend(v9, "wantsToSuppressMiniFormatter");

      if ((v10 & 1) != 0)
        return 0;
    }
    else
    {
      swift_unknownObjectRelease(v8);
      sub_100757E04(&_mh_execute_header, (uint64_t)"shouldShowMiniFormatterForCurrentSelectionPathAndDocumentMode", 61, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Formatters/CRLiOSMiniFormatterPresenter.swift", 103, 2, 221, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"shouldShowMiniFormatterForCurrentSelectionPathAndDocumentMode", 61, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Formatters/CRLiOSMiniFormatterPresenter.swift", 103, 2u, 221, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    }
    return 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1005BB634(char a1, char a2, char a3)
{
  char *v3;
  void *v4;
  uint64_t v8;
  void *v9;
  char *v10;
  id v11;
  double v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t i;
  id v18;
  void *v19;
  uint64_t v20;
  __n128 v21;
  id v22;
  uint64_t v23;

  v4 = *(void **)&v3[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_miniFormatterVC];
  if (!v4)
    return;
  v8 = swift_allocObject(&unk_10126F9A8, 41, 7);
  *(_BYTE *)(v8 + 16) = a3 & 1;
  *(_QWORD *)(v8 + 24) = v3;
  *(_QWORD *)(v8 + 32) = v4;
  *(_BYTE *)(v8 + 40) = a2 & 1;
  if ((a1 & 1) == 0
    || (v9 = *(void **)&v3[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedWrappedNavigationController]) == 0)
  {
    v22 = v4;
    v13 = v3;
    goto LABEL_7;
  }
  v22 = v4;
  v10 = v3;
  v11 = v9;
  if ((objc_msgSend(v11, "isBeingDismissed") & 1) != 0)
  {

LABEL_7:
    sub_1005BB864(a3 & 1, v3, v4, a2 & 1, v12);
    swift_release(v8);
LABEL_8:

    return;
  }
  v14 = *(_QWORD *)&v10[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_generalElementsBaseButtons];
  v23 = *(_QWORD *)&v10[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_inspectorElementsBaseButtons];
  swift_bridgeObjectRetain(v23);
  swift_bridgeObjectRetain(v14);
  sub_10061EC48(v15);
  if ((unint64_t)v23 >> 62)
  {
    if (v23 < 0)
      v20 = v23;
    else
      v20 = v23 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v23);
    v16 = _CocoaArrayWrapper.endIndex.getter(v20);
    if (v16)
      goto LABEL_12;
LABEL_22:
    swift_bridgeObjectRelease_n(v23, 2);
    swift_retain(v8);
    sub_1005BBCBC(a2 & 1, (uint64_t)sub_1005C6028, v8);

    swift_release_n(v8, 2, v21);
    goto LABEL_8;
  }
  v16 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v23);
  if (!v16)
    goto LABEL_22;
LABEL_12:
  if (v16 >= 1)
  {
    for (i = 0; i != v16; ++i)
    {
      if ((v23 & 0xC000000000000001) != 0)
        v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v23);
      else
        v18 = *(id *)(v23 + 8 * i + 32);
      v19 = v18;
      objc_msgSend(v18, "setUserInteractionEnabled:", 0, v22);

    }
    goto LABEL_22;
  }
  __break(1u);
}

double sub_1005BB864(char a1, char *a2, void *a3, char a4, double result)
{
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  char v12;
  void *v13;
  id v14;
  id v15;
  char v16;
  void *v17;
  id v18;
  char v19;
  void *v20;
  _QWORD *v21;
  uint64_t (*v22)(void);
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  char *v29;
  uint64_t v30;
  id v31;
  char *v32;
  uint64_t v33;
  double v34;
  void *v35;
  void *v36;

  if ((a1 & 1) != 0)
  {
    if (!a3)
      return result;
    goto LABEL_12;
  }
  v8 = OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_miniFormatterVC;
  v9 = *(void **)&a2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_miniFormatterVC];
  if (!v9)
  {
    if (a3)
    {
LABEL_12:
      sub_100808A44(a4 & 1, 1);
      return result;
    }
    v17 = 0;
    goto LABEL_15;
  }
  if (!a3)
    return result;
  type metadata accessor for CRLiOSMiniFormatterViewController();
  v10 = a3;
  v11 = v9;
  v12 = static NSObject.== infix(_:_:)(v11, v10);

  if ((v12 & 1) == 0)
    goto LABEL_12;
  v13 = *(void **)&a2[v8];
  if (v13)
  {
    v14 = v10;
    v15 = v13;
    v16 = static NSObject.== infix(_:_:)(v15, v14);

    if ((v16 & 1) != 0)
    {
      v17 = *(void **)&a2[v8];
      if (v17)
      {
        v18 = v17;
        v19 = sub_10080A2D8();
        sub_100808A44(a4 & 1, (v19 & 1) == 0);

        v17 = *(void **)&a2[v8];
      }
LABEL_15:
      *(_QWORD *)&a2[v8] = 0;

      v20 = &_swiftEmptySetSingleton;
      v36 = &_swiftEmptySetSingleton;
      if (*(_QWORD *)&a2[v8])
      {
        v20 = sub_1005BC570();
        v36 = v20;
      }
      v21 = *(_QWORD **)&a2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_auxiliaryPresentedBuilder];
      if (v21)
      {
        v22 = *(uint64_t (**)(void))((swift_isaMask & *v21) + 0x178);
        v23 = v21;
        v24 = v22();
        sub_100511EB8(v24);

        v20 = v36;
      }
      v25 = OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_observedObjects;
      v26 = *(_QWORD *)&a2[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_observedObjects];
      *(_QWORD *)&a2[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_observedObjects] = v20;
      v27 = *(void **)&a2[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_changeNotifier];
      if (v27)
      {
        v28 = v27;
        v29 = a2;
        sub_1005C4B9C(v26, v28, (uint64_t)v29, (SEL *)&selRef_removeObserver_forChangeSource_);

        v30 = *(_QWORD *)&a2[v25];
        v31 = v28;
        v32 = v29;
        swift_bridgeObjectRetain(v30);
        sub_1005C4B9C(v33, v31, (uint64_t)v32, (SEL *)&selRef_addObserver_forChangeSource_);
        swift_bridgeObjectRelease(v26);
        swift_bridgeObjectRelease(v30);

      }
      else
      {
        *(_QWORD *)&v34 = swift_bridgeObjectRelease(v26).n128_u64[0];
      }
      if ((a2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_isUpdatingMiniFormatter] & 1) == 0)
        objc_msgSend(*(id *)&a2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_canvasViewController], "updateToolbarButtons", v34);
      v35 = *(void **)&a2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_selectionPath];
      *(_QWORD *)&a2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_selectionPath] = 0;

      return sub_1005BA014();
    }
  }
  return result;
}

double sub_1005BBAE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  id v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  double result;
  uint64_t v16;
  _QWORD *v17;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_generalElementsBaseButtons);
  v16 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_inspectorElementsBaseButtons);
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRetain(v1);
  sub_10061EC48(v2);
  v3 = sub_100520E94(v16);
  swift_bridgeObjectRelease(v16);
  v17 = v3;
  v4 = *(id *)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_ellipsisBaseButton);
  swift_bridgeObjectRetain(v3);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v5);
  v7 = v3[2];
  v6 = v3[3];
  if (v7 >= v6 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v6 > 1, v7 + 1, 1);
  v8 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v7, v4);
  specialized Array._endMutation()(v8);
  swift_bridgeObjectRelease(v3);

  v9 = v3[2];
  if (v9)
  {
    swift_bridgeObjectRetain(v3);
    v10 = 0;
    v11 = v9 - 1;
    while (1)
    {
      v12 = (void *)v17[v10 + 4];
      if (v12)
      {
        v13 = v12;
        v14 = objc_msgSend(v13, "contextMenuInteraction");
        objc_msgSend(v14, "dismissMenu");

      }
      if (v11 == v10)
        break;
      if (__OFADD__(++v10, 1))
      {
        __break(1u);
        break;
      }
    }
    swift_bridgeObjectRelease_n(v17, 2);
  }
  else
  {
    *(_QWORD *)&result = swift_bridgeObjectRelease(v3).n128_u64[0];
  }
  return result;
}

void sub_1005BBCBC(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *v4;
  void *v8;
  id v9;
  void *v10;
  id v11;
  double v12;
  void *v13;
  uint64_t v14;
  id v15;
  _QWORD aBlock[5];
  uint64_t v17;

  v4 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedWrappedNavigationController);
  if (v4)
  {
    v15 = v4;
    if ((objc_msgSend(v15, "isBeingDismissed") & 1) != 0)
      goto LABEL_7;
    v8 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_canvasViewController);
    v9 = objc_msgSend(v8, "presentedViewController");
    if (!v9)
      goto LABEL_7;
    v10 = v9;
    sub_1004B8930(0, (unint64_t *)&qword_1013F6620, UIViewController_ptr);
    v15 = v15;
    v11 = v10;
    LOBYTE(v10) = static NSObject.== infix(_:_:)(v11, v15);

    if ((v10 & 1) != 0)
    {
      if (a2)
      {
        aBlock[4] = a2;
        v17 = a3;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = *(_QWORD *)"";
        aBlock[2] = sub_1005D2FC0;
        aBlock[3] = &unk_10126F970;
        v13 = _Block_copy(aBlock);
        v14 = v17;
        swift_retain(a3);
        *(_QWORD *)&v12 = swift_release(v14).n128_u64[0];
      }
      else
      {
        v13 = 0;
      }
      objc_msgSend(v8, "dismissViewControllerAnimated:completion:", a1 & 1, v13, v12);
      _Block_release(v13);
      sub_1005BBE58();

    }
    else
    {
LABEL_7:

    }
  }
}

void sub_1005BBE58()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  char *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  void *v24;
  void *v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  void *v33;
  id v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  unint64_t v40;
  char *v41;
  id v42[5];

  sub_1005C04EC();
  if (v1)
  {
    v2 = v1;
    *((_BYTE *)v1 + OBJC_IVAR____TtC8Freeform34CRLiOSMiniFormatterBaseLayerButton_isPresentingPopover) = 0;
    objc_msgSend(v1, "setHighlighted:", 0);

  }
  v3 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_secondLayerPresentedBuilder);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_secondLayerPresentedBuilder) = 0;

  v4 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController) = 0;

  v5 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedWrappedNavigationController);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedWrappedNavigationController) = 0;

  v6 = *(char **)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_miniFormatterVC);
  if (!v6)
    goto LABEL_31;
  v37 = OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_miniFormatterVC;
  v7 = *(void **)&v6[OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_stackViewForDisplay];
  v39 = v6;
  v8 = objc_msgSend(v7, "arrangedSubviews");
  v36 = sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
  v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, v36);

  v38 = v0;
  if ((unint64_t)v9 >> 62)
  {
    if (v9 < 0)
      v32 = v9;
    else
      v32 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v9);
    v10 = _CocoaArrayWrapper.endIndex.getter(v32);
    v11 = (_QWORD *)&unk_1013E5000;
    if (v10)
      goto LABEL_6;
LABEL_28:
    swift_bridgeObjectRelease_n(v9, 2);

    v33 = *(void **)(v38 + v37);
    if (v33)
    {
      v34 = objc_msgSend(v33, "view");
      if (v34)
      {
        v42[0] = v34;
        v35 = (void *)_bridgeAnythingToObjectiveC<A>(_:)(v42, v36);

LABEL_32:
        CRLAccessibilityPostLayoutChangedNotification(v35);
        swift_unknownObjectRelease(v35);
        return;
      }
    }
LABEL_31:
    v35 = 0;
    goto LABEL_32;
  }
  v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v9);
  v11 = &unk_1013E5000;
  if (!v10)
    goto LABEL_28;
LABEL_6:
  if (v10 >= 1)
  {
    v12 = 0;
    v13 = (uint64_t)&v39[OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_delegate];
    v14 = v9 & 0xC000000000000001;
    v15 = (uint64_t *)&unk_1013E56A0;
    v40 = v9 & 0xC000000000000001;
    while (1)
    {
      v17 = v14
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v12, v9)
          : *(id *)(v9 + 8 * v12 + 32);
      v18 = v17;
      sub_1004E90B0(v13, (uint64_t)v42);
      v19 = sub_1004B804C(v15);
      v20 = type metadata accessor for CRLiOSMiniFormatterPresenter();
      if (swift_dynamicCast(&v41, v42, v19, v20, 6))
        break;
      v16 = 1;
LABEL_9:
      ++v12;
      objc_msgSend(v18, "setIsAccessibilityElement:", v16);

      if (v10 == v12)
        goto LABEL_28;
    }
    v21 = v9;
    v22 = v10;
    v23 = v15;
    v24 = v41;
    v25 = *(void **)&v41[v11[187]];
    if (v25 && (v26 = objc_msgSend(v25, "topViewController")) != 0)
    {
      v27 = v26;
      v28 = type metadata accessor for CRLiOSMiniFormatterPopoverContainerViewController();
      v29 = swift_dynamicCastClass(v27, v28);
      if (v29)
      {
        v30 = *(_QWORD *)(v29 + OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_builder);

        v31 = v30 == 0;
        v11 = (_QWORD *)&unk_1013E5000;
        v16 = v31;
        goto LABEL_22;
      }

    }
    else
    {

    }
    v16 = 1;
LABEL_22:
    v15 = v23;
    v10 = v22;
    v9 = v21;
    v14 = v40;
    goto LABEL_9;
  }
  __break(1u);
}

id sub_1005BC184()
{
  char *v0;
  char *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  _QWORD *v6;
  uint64_t (*v7)(void);
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  char *v14;
  uint64_t v15;
  id v16;
  char *v17;
  uint64_t v18;
  double v19;
  void *v21;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedAuxiliaryViewController];
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedAuxiliaryViewController] = 0;

  v3 = OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_auxiliaryPresentedBuilder;
  v4 = *(void **)&v0[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_auxiliaryPresentedBuilder];
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_auxiliaryPresentedBuilder] = 0;

  v5 = &_swiftEmptySetSingleton;
  v21 = &_swiftEmptySetSingleton;
  if (*(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_miniFormatterVC])
  {
    v5 = sub_1005BC570();
    v21 = v5;
  }
  v6 = *(_QWORD **)&v0[v3];
  if (v6)
  {
    v7 = *(uint64_t (**)(void))((swift_isaMask & *v6) + 0x178);
    v8 = v6;
    v9 = v7();
    sub_100511EB8(v9);

    v5 = v21;
  }
  v10 = OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_observedObjects;
  v11 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_observedObjects];
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_observedObjects] = v5;
  v12 = *(void **)&v1[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_changeNotifier];
  if (v12)
  {
    v13 = v12;
    v14 = v1;
    sub_1005C4B9C(v11, v13, (uint64_t)v14, (SEL *)&selRef_removeObserver_forChangeSource_);

    v15 = *(_QWORD *)&v1[v10];
    v16 = v13;
    v17 = v14;
    swift_bridgeObjectRetain(v15);
    sub_1005C4B9C(v18, v16, (uint64_t)v17, (SEL *)&selRef_addObserver_forChangeSource_);
    swift_bridgeObjectRelease(v11);
    swift_bridgeObjectRelease(v15);

  }
  else
  {
    *(_QWORD *)&v19 = swift_bridgeObjectRelease(v11).n128_u64[0];
  }
  return objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_canvasViewController], "becomeFirstResponderIfAppropriate", v19);
}

void sub_1005BC30C()
{
  _BYTE *v0;
  void *v1;
  _BYTE *v2;
  void *v3;
  uint64_t v4;
  id v5;
  char *v6;
  id v7;
  double v8;

  v1 = *(void **)&v0[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_selectionPath];
  if (v1)
  {
    v2 = v0;
    v3 = *(void **)&v0[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_miniFormatterVC];
    if (v3)
    {
      v4 = OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_isUpdatingMiniFormatter;
      v2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_isUpdatingMiniFormatter] = 1;
      v5 = v3;
      v6 = v2;
      v7 = v1;
      sub_1005BB864(0, v6, v3, 0, v8);

      sub_1005BA998(v7, 0);
      v2[v4] = 0;
    }
  }
}

BOOL sub_1005BC430()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _BOOL8 v6;
  void *v7;
  id v8;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController);
  if (!v1)
    return 0;
  v2 = objc_msgSend(v1, "topViewController");
  if (!v2)
    return 0;
  v3 = v2;
  v4 = type metadata accessor for CRLiOSMiniFormatterPopoverContainerViewController();
  v5 = swift_dynamicCastClass(v3, v4);
  v6 = v5 != 0;
  if (v5)
  {
    v7 = *(void **)(v5 + OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_builder);
    v8 = v7;

    if (v7)
    {
      v3 = v8;
      goto LABEL_6;
    }
    return 0;
  }
LABEL_6:

  return v6;
}

uint64_t sub_1005BC500()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_miniFormatterVC);
  if (!v1)
    return 0;
  v2 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_repTrackingViewHelper);
  if (!v2)
    return 0;
  v3 = v2;
  v4 = sub_10070DD5C();

  v5 = *(unsigned __int8 *)(v4 + 56);
  swift_release(v4);
  return v5;
}

void *sub_1005BC570()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *result;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v1 = v0;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_ellipsisBuilder);
  if (v2)
  {
    v3 = v2;
    v4 = sub_100704150();
    if (v4)
      sub_100511EB8(v4);
    sub_100511EB8((uint64_t)&_swiftEmptySetSingleton);

  }
  v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_inspectorElementsBuilders);
  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0)
      v20 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_inspectorElementsBuilders);
    else
      v20 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v5, 2);
    result = (void *)_CocoaArrayWrapper.endIndex.getter(v20);
    v6 = (uint64_t)result;
  }
  else
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = (void *)swift_bridgeObjectRetain_n(v5, 2);
  }
  if (v6)
  {
    if (v6 < 1)
    {
      __break(1u);
      goto LABEL_46;
    }
    v8 = 0;
    do
    {
      if ((v5 & 0xC000000000000001) != 0)
        v9 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v5);
      else
        v9 = *(id *)(v5 + 8 * v8 + 32);
      v10 = v9;
      ++v8;
      v11 = (*(uint64_t (**)(void))((swift_isaMask & *v9) + 0x178))();

      sub_10061EC54(v11);
    }
    while (v6 != v8);
  }
  swift_bridgeObjectRelease_n(v5, 2);
  sub_100AF7B64((uint64_t)_swiftEmptyArrayStorage);
  v13 = v12;
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  sub_100511EB8(v13);
  v14 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_generalElementsBuilders);
  if ((unint64_t)v14 >> 62)
  {
    if (v14 < 0)
      v21 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_generalElementsBuilders);
    else
      v21 = v14 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v14, 2);
    result = (void *)_CocoaArrayWrapper.endIndex.getter(v21);
    v15 = (uint64_t)result;
    if (!result)
      goto LABEL_31;
  }
  else
  {
    v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = (void *)swift_bridgeObjectRetain_n(v14, 2);
    if (!v15)
      goto LABEL_31;
  }
  if (v15 < 1)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  v16 = 0;
  do
  {
    if ((v14 & 0xC000000000000001) != 0)
      v17 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v16, v14);
    else
      v17 = *(id *)(v14 + 8 * v16 + 32);
    v18 = v17;
    ++v16;
    v19 = (*(uint64_t (**)(void))((swift_isaMask & *v17) + 0x178))();

    sub_10061EC54(v19);
  }
  while (v15 != v16);
LABEL_31:
  swift_bridgeObjectRelease_n(v14, 2);
  sub_100AF7B64((uint64_t)_swiftEmptyArrayStorage);
  v23 = v22;
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  sub_100511EB8(v23);
  v24 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_canvasElementsBuilders);
  if (!((unint64_t)v24 >> 62))
  {
    v25 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = (void *)swift_bridgeObjectRetain_n(v24, 2);
    if (v25)
      goto LABEL_33;
LABEL_44:
    swift_bridgeObjectRelease_n(v24, 2);
    sub_100AF7B64((uint64_t)_swiftEmptyArrayStorage);
    v32 = v31;
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    sub_100511EB8(v32);
    return &_swiftEmptySetSingleton;
  }
  if (v24 < 0)
    v30 = v24;
  else
    v30 = v24 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(v24, 2);
  result = (void *)_CocoaArrayWrapper.endIndex.getter(v30);
  v25 = (uint64_t)result;
  if (!result)
    goto LABEL_44;
LABEL_33:
  if (v25 >= 1)
  {
    v26 = 0;
    do
    {
      if ((v24 & 0xC000000000000001) != 0)
        v27 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v26, v24);
      else
        v27 = *(id *)(v24 + 8 * v26 + 32);
      v28 = v27;
      ++v26;
      v29 = (*(uint64_t (**)(void))((swift_isaMask & *v27) + 0x178))();

      sub_10061EC54(v29);
    }
    while (v25 != v26);
    goto LABEL_44;
  }
LABEL_47:
  __break(1u);
  return result;
}

void sub_1005BC954(char a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v6;
  uint64_t v7;
  int64_t v8;
  unint64_t *v9;
  _QWORD *v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t i;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  void *v38;
  id v39;
  uint64_t v40;
  _QWORD *v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __n128 v52;
  void *v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  id v62;
  double v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  Class isa;
  id v70;
  id v71;
  double v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  unint64_t v77;
  uint64_t v78;

  v3 = v2;
  v6 = (unint64_t)_swiftEmptyArrayStorage;
  v78 = (uint64_t)_swiftEmptyArrayStorage;
  v7 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_inspectorElementsBuilders);
  if ((unint64_t)v7 >> 62)
  {
    if (v7 < 0)
      v26 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_inspectorElementsBuilders);
    else
      v26 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v7);
    v8 = _CocoaArrayWrapper.endIndex.getter(v26);
  }
  else
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*(_QWORD *)(v2
                                       + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_inspectorElementsBuilders));
  }
  v76 = a2;
  if (v8)
  {
    v77 = (unint64_t)_swiftEmptyArrayStorage;
    v9 = &v77;
    specialized ContiguousArray.reserveCapacity(_:)(v8);
    if (v8 < 0)
    {
      __break(1u);
      goto LABEL_92;
    }
    v12 = 0;
    do
    {
      if ((v7 & 0xC000000000000001) != 0)
        v13 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v12, v7);
      else
        v13 = *(id *)(v7 + 8 * v12 + 32);
      v14 = v13;
      ++v12;
      v15 = (*(uint64_t (**)(void))((swift_isaMask & *v13) + 0xD8))();

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v16);
      v17 = *(_QWORD *)(v77 + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v17);
      v18 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v15);
      specialized ContiguousArray._endMutation()(v18);
    }
    while (v8 != v12);
    v19 = (_QWORD *)v77;
    swift_bridgeObjectRelease(v7);
    v6 = (unint64_t)_swiftEmptyArrayStorage;
  }
  else
  {
    swift_bridgeObjectRelease(v7);
    v19 = _swiftEmptyArrayStorage;
  }
  v20 = OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_inspectorElementsBaseButtons;
  v21 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_inspectorElementsBaseButtons);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_inspectorElementsBaseButtons) = v19;
  swift_bridgeObjectRelease(v21);
  v22 = *(_QWORD *)(v3 + v20);
  if ((unint64_t)v22 >> 62)
  {
    if (v22 < 0)
      v27 = *(_QWORD *)(v3 + v20);
    else
      v27 = v22 & 0xFFFFFFFFFFFFFF8;
    v28 = sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
    swift_bridgeObjectRetain(v22);
    v24 = _bridgeCocoaArray<A>(_:)(v27, v28);
  }
  else
  {
    swift_bridgeObjectRetain_n(v22, 2);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v23);
    sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
    v24 = v22;
  }
  swift_bridgeObjectRelease(v22);
  sub_10061EC3C(v24);
  v25 = v78;
  if (!((unint64_t)v78 >> 62))
  {
    v9 = *(unint64_t **)((v78 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v9)
      goto LABEL_16;
LABEL_31:
    v10 = _swiftEmptyArrayStorage;
    goto LABEL_32;
  }
  if (v78 < 0)
    v29 = v78;
  else
    v29 = v78 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v78);
  v30 = _CocoaArrayWrapper.endIndex.getter(v29);
  swift_bridgeObjectRelease(v25);
  if (!v30)
    goto LABEL_31;
  swift_bridgeObjectRetain(v25);
  v9 = (unint64_t *)_CocoaArrayWrapper.endIndex.getter(v29);
  swift_bridgeObjectRelease(v25);
LABEL_16:
  v10 = sub_100D0FD0C(0, 1, 1, _swiftEmptyArrayStorage);
  a2 = v10[2];
  v11 = v10[3];
  v8 = a2 + 1;
  if (a2 >= v11 >> 1)
LABEL_92:
    v10 = sub_100D0FD0C((_QWORD *)(v11 > 1), v8, 1, v10);
  v10[2] = v8;
  v10[a2 + 4] = v9;
LABEL_32:
  v31 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_generalElementsBuilders);
  v75 = (uint64_t)v10;
  if ((a1 & 1) == 0)
  {
    swift_bridgeObjectRetain(v31);
    if ((unint64_t)v31 >> 62)
      goto LABEL_54;
    goto LABEL_45;
  }
  v77 = (unint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)v31 >> 62)
    goto LABEL_95;
  v32 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v31);
  if (!v32)
    goto LABEL_99;
LABEL_35:
  if (v32 < 1)
  {
    __break(1u);
    goto LABEL_102;
  }
  for (i = 0; i != v32; ++i)
  {
    if ((v31 & 0xC000000000000001) != 0)
      v37 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v31);
    else
      v37 = (char *)*(id *)(v31 + 8 * i + 32);
    v38 = v37;
    v39 = objc_msgSend(*(id *)&v37[OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_element], "tag");
    if (v39 == (id)23)
    {

    }
    else
    {
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v39);
      v35 = *(_QWORD *)(v77 + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v35);
      v36 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v35, v38);
      specialized ContiguousArray._endMutation()(v36);
    }
  }
  swift_bridgeObjectRelease(v31);
  v31 = v77;
  v6 = (unint64_t)_swiftEmptyArrayStorage;
  if (v77 >> 62)
  {
LABEL_54:
    if (v31 < 0)
      v48 = v31;
    else
      v48 = v31 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v31);
    v40 = _CocoaArrayWrapper.endIndex.getter(v48);
    swift_bridgeObjectRelease(v31);
    if (v40)
      goto LABEL_46;
  }
  else
  {
LABEL_45:
    while (1)
    {
      v40 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v40)
        break;
LABEL_46:
      v77 = v6;
      specialized ContiguousArray.reserveCapacity(_:)(v40);
      if ((v40 & 0x8000000000000000) == 0)
      {
        v6 = 0;
        do
        {
          if ((v31 & 0xC000000000000001) != 0)
            v41 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v31);
          else
            v41 = *(id *)(v31 + 8 * v6 + 32);
          v42 = v41;
          ++v6;
          v43 = (*(uint64_t (**)(void))((swift_isaMask & *v41) + 0xD8))();

          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v44);
          v45 = *(_QWORD *)(v77 + 16);
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v45);
          v46 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v45, v43);
          specialized ContiguousArray._endMutation()(v46);
        }
        while (v40 != v6);
        v47 = (_QWORD *)v77;
        swift_bridgeObjectRelease(v31);
        goto LABEL_59;
      }
      __break(1u);
LABEL_94:
      __break(1u);
LABEL_95:
      if (v31 < 0)
        v74 = v31;
      else
        v74 = v31 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v31);
      v32 = _CocoaArrayWrapper.endIndex.getter(v74);
      if (v32)
        goto LABEL_35;
LABEL_99:
      swift_bridgeObjectRelease(v31);
      v31 = (uint64_t)_swiftEmptyArrayStorage;
      if ((unint64_t)_swiftEmptyArrayStorage >> 62)
        goto LABEL_54;
    }
  }
  swift_bridgeObjectRelease(v31);
  v47 = _swiftEmptyArrayStorage;
LABEL_59:
  v49 = OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_generalElementsBaseButtons;
  v50 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_generalElementsBaseButtons);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_generalElementsBaseButtons) = v47;
  swift_bridgeObjectRelease(v50);
  v51 = *(_QWORD *)(v3 + v49);
  if ((unint64_t)v51 >> 62)
  {
    if (v51 < 0)
      v65 = *(_QWORD *)(v3 + v49);
    else
      v65 = v51 & 0xFFFFFFFFFFFFFF8;
    v66 = sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
    swift_bridgeObjectRetain(v51);
    v31 = _bridgeCocoaArray<A>(_:)(v65, v66);
  }
  else
  {
    swift_bridgeObjectRetain_n(v51, 2);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v52);
    sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
    v31 = v51;
  }
  swift_bridgeObjectRelease(v51);
  sub_10061EC3C(v31);
  v53 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_ellipsisBuilder);
  if (v53)
  {
    v32 = v53;
    if (!sub_100DE2D28())
    {
LABEL_66:

      goto LABEL_67;
    }
    sub_100DE263C();
    v54 = OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_ellipsisBaseButton;
    v55 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_ellipsisBaseButton);
    *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_ellipsisBaseButton) = v56;

    v57 = *(void **)(v3 + v54);
    if (!v57)
    {
      __break(1u);
      return;
    }
    v3 = v57;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v3);
    v31 = *(_QWORD *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v33 = *(_QWORD *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v31 < v33 >> 1)
    {
LABEL_65:
      v58 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v31, v3);
      specialized Array._endMutation()(v58);
      goto LABEL_66;
    }
LABEL_102:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v33 > 1, v31 + 1, 1);
    goto LABEL_65;
  }
LABEL_67:
  v59 = v78;
  v60 = (unint64_t)v78 >> 62;
  if ((unint64_t)v78 >> 62)
  {
    if (v78 < 0)
      v67 = v78;
    else
      v67 = v78 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v78, 2);
    v3 = _CocoaArrayWrapper.endIndex.getter(v67);
    if (v3)
      goto LABEL_69;
  }
  else
  {
    v3 = *(_QWORD *)((v78 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n(v78, 2);
    if (v3)
    {
LABEL_69:
      if (v3 < 1)
        goto LABEL_94;
      v61 = 0;
      do
      {
        if ((v59 & 0xC000000000000001) != 0)
          v62 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v61, v59);
        else
          v62 = *(id *)(v59 + 8 * v61 + 32);
        v64 = v62;
        ++v61;
        LODWORD(v63) = 1144750080;
        objc_msgSend(v62, "setContentHuggingPriority:forAxis:", 1, v63);

      }
      while (v3 != v61);
    }
  }
  swift_bridgeObjectRelease_n(v59, 2);
  if (v60)
  {
    if (v59 < 0)
      v73 = v59;
    else
      v73 = v59 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v59);
    _CocoaArrayWrapper.endIndex.getter(v73);
    swift_bridgeObjectRelease(v59);
  }
  v68 = objc_allocWithZone((Class)UIStackView);
  sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v70 = objc_msgSend(v68, "initWithArrangedSubviews:", isa, swift_bridgeObjectRelease(v59).n128_f64[0]);

  v71 = objc_msgSend((id)objc_opt_self(UIColor), "tertiarySystemFillColor");
  sub_1005BD1C0(v75, (uint64_t)v71);
  swift_bridgeObjectRelease(v75);

  v72 = 12.0;
  if ((v76 & 1) != 0)
    v72 = 10.0;
  objc_msgSend(v70, "setSpacing:", v72);
  objc_msgSend(v70, "setDistribution:", 3);
  objc_msgSend(v70, "setAlignment:", 3);
}

uint64_t sub_1005BD1C0(uint64_t result, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;

  v3 = *(_QWORD *)(result + 16);
  if (v3)
  {
    v4 = result;
    swift_bridgeObjectRetain(result);
    v5 = 0;
    while (1)
    {
      v12 = *(_QWORD *)(v4 + 8 * v5 + 32);
      v13 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
      objc_msgSend(v13, "setBackgroundColor:", a2);
      v14 = objc_msgSend(v13, "layer");
      objc_msgSend(v14, "setMasksToBounds:", 1);

      v15 = objc_msgSend(v13, "layer");
      objc_msgSend(v15, "setCornerRadius:", 1.0);

      v16 = objc_msgSend(v13, "layer");
      objc_msgSend(v16, "setCornerCurve:", kCACornerCurveContinuous);

      objc_msgSend(v2, "insertArrangedSubview:atIndex:", v13, v12);
      v17 = objc_msgSend(v2, "axis");
      if (v17 == (id)1)
      {
        v6 = objc_msgSend(v13, "heightAnchor");
        v7 = objc_msgSend(v6, "constraintEqualToConstant:", 1.0);

        objc_msgSend(v7, "setActive:", 1);
        v8 = objc_msgSend(v13, "widthAnchor");
        v9 = objc_msgSend(v2, "widthAnchor");
        v10 = objc_msgSend(v8, "constraintEqualToAnchor:multiplier:", v9, 1.0);
      }
      else
      {
        if (v17)
        {
          result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001FLL, 0x8000000100FB7230, "Freeform/CRLiOSMiniFormatterPresenter.swift", 43, 2, 1279, 0);
          __break(1u);
          return result;
        }
        v18 = objc_msgSend(v13, "widthAnchor");
        v19 = objc_msgSend(v18, "constraintEqualToConstant:", 2.0);

        objc_msgSend(v19, "setActive:", 1);
        v20 = objc_msgSend(v13, "heightAnchor");
        v21 = objc_msgSend(v20, "constraintEqualToConstant:", 28.0);

        objc_msgSend(v21, "setActive:", 1);
        v8 = objc_msgSend(v13, "centerYAnchor");
        v9 = objc_msgSend(v2, "centerYAnchor");
        v10 = objc_msgSend(v8, "constraintEqualToAnchor:", v9);
      }
      ++v5;
      v11 = v10;

      objc_msgSend(v11, "setActive:", 1);
      if (v3 == v5)
        return swift_bridgeObjectRelease(v4);
    }
  }
  return result;
}

void sub_1005BD548()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSString v22;
  id v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  id v29;
  char *v30;
  id v31;
  id v32;

  v1 = v0;
  v2 = OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_generalElementsBuilders;
  v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_generalElementsBuilders];
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_generalElementsBuilders] = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v3);
  v4 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_generalElementsBaseButtons];
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_generalElementsBaseButtons] = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v4);
  v5 = OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_ellipsisBuilder;
  v6 = *(void **)&v0[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_ellipsisBuilder];
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_ellipsisBuilder] = 0;

  v7 = *(void **)&v0[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_ellipsisBaseButton];
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_ellipsisBaseButton] = 0;

  v8 = OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_inspectorElementsBuilders;
  v9 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_inspectorElementsBuilders];
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_inspectorElementsBuilders] = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_inspectorElementsBaseButtons];
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_inspectorElementsBaseButtons] = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v10);
  v11 = OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_canvasElementsBuilders;
  v12 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_canvasElementsBuilders];
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_canvasElementsBuilders] = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v12);
  sub_1005BD75C();
  v14 = v13;
  sub_1005BD94C(v13);
  v16 = v15;
  v18 = v17;
  v19 = *(_QWORD *)&v1[v11];
  *(_QWORD *)&v1[v11] = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v19);
  v20 = *(_QWORD *)&v1[v2];
  *(_QWORD *)&v1[v2] = v16;
  swift_bridgeObjectRelease(v20);
  v21 = *(_QWORD *)&v1[v8];
  *(_QWORD *)&v1[v8] = v18;
  swift_bridgeObjectRelease(v14);
  swift_bridgeObjectRelease(v21);
  v22 = String._bridgeToObjectiveC()();
  v23 = objc_msgSend((id)objc_opt_self(CRLQuickInspectorElement), "elementWithName:image:type:action:", v22, 0, 1, 0);

  v24 = *(void **)&v1[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_editorController];
  v25 = *(void **)&v1[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_canvasLayerHosting];
  v26 = v23;
  v27 = v24;
  v28 = objc_msgSend(v25, "interactiveCanvasController");
  v29 = objc_allocWithZone((Class)type metadata accessor for CRLiOSMiniFormatterEllipsisBuilder());
  v30 = v1;
  v31 = sub_1004CA6E8((uint64_t)v1, (uint64_t)&off_1012706E0, (uint64_t)&off_10126F768, v26, v27, v28);

  v32 = *(id *)&v1[v5];
  *(_QWORD *)&v1[v5] = v31;

}

void sub_1005BD75C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  void *v8;
  uint64_t v9;
  id v10;

  v1 = v0;
  sub_1004B8930(0, (unint64_t *)&unk_1013E5710, NSMutableArray_ptr);
  v2 = (void *)NSArray.init(arrayLiteral:)(_swiftEmptyArrayStorage);
  v3 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_editorController), "currentEditors");
  v4 = sub_1004B804C((uint64_t *)&unk_1013EFDD0);
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

  if (!((unint64_t)v5 >> 62))
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v6)
      goto LABEL_3;
LABEL_16:
    swift_bridgeObjectRelease(v5);
    sub_1004B8930(0, (unint64_t *)&unk_1013E5720, off_101229980);
    v10 = v2;
    static Array._conditionallyBridgeFromObjectiveC(_:result:)();

    return;
  }
  if (v5 < 0)
    v9 = v5;
  else
    v9 = v5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v5);
  v6 = _CocoaArrayWrapper.endIndex.getter(v9);
  swift_bridgeObjectRelease(v5);
  if (!v6)
    goto LABEL_16;
LABEL_3:
  if (v6 >= 1)
  {
    for (i = 0; i != v6; ++i)
    {
      if ((v5 & 0xC000000000000001) != 0)
      {
        v8 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v5);
      }
      else
      {
        v8 = *(void **)(v5 + 8 * i + 32);
        swift_unknownObjectRetain(v8);
      }
      if (objc_msgSend(v8, "respondsToSelector:", "addMiniFormatterElementsToArray:atPoint:"))
      {
        if ((objc_msgSend(v8, "respondsToSelector:", "addMiniFormatterElementsToArray:atPoint:") & 1) != 0)
          objc_msgSend(v8, "addMiniFormatterElementsToArray:atPoint:", v2, 0.0, 0.0);
      }
      swift_unknownObjectRelease(v8);
    }
    goto LABEL_16;
  }
  __break(1u);
}

void sub_1005BD94C(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  id v9;
  void *v10;
  id v11;
  char *v12;
  char *v13;
  unint64_t v14;
  unint64_t v15;
  void *v16;
  id v17;
  char *v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;

  v2 = v1;
  v21 = (unint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v20 = a1;
    else
      v20 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v4 = _CocoaArrayWrapper.endIndex.getter(v20);
    if (v4)
      goto LABEL_3;
LABEL_22:
    swift_bridgeObjectRelease(a1);
    return;
  }
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  if (!v4)
    goto LABEL_22;
LABEL_3:
  if (v4 >= 1)
  {
    v5 = 0;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v8 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, a1);
      else
        v8 = (char *)*(id *)(a1 + 8 * v5 + 32);
      v7 = v8;
      v9 = objc_msgSend(v8, "elementType", v21);
      if (v9 == (id)2)
      {
        v16 = *(void **)&v2[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_editorController];
        v17 = objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_canvasLayerHosting], "interactiveCanvasController");
        v18 = sub_1004CABC8(v7, v2, v16, v17);

        v13 = v18;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v13);
        v15 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v19 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v15 >= v19 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v19 > 1, v15 + 1, 1);
      }
      else
      {
        if (v9)
          goto LABEL_6;
        v10 = *(void **)&v2[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_editorController];
        v11 = objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_canvasLayerHosting], "interactiveCanvasController");
        v12 = sub_1004CABC8(v7, v2, v10, v11);

        v13 = v12;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v13);
        v15 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v14 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v15 >= v14 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v14 > 1, v15 + 1, 1);
      }
      v6 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v13);
      specialized Array._endMutation()(v6);

      v7 = v13;
LABEL_6:
      ++v5;

      if (v4 == v5)
        goto LABEL_22;
    }
  }
  __break(1u);
}

_QWORD *sub_1005BDBC8(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v6;
  id v7;
  char v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  id v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  id v26;
  _QWORD *v27;
  unint64_t v28;
  unint64_t v29;
  void *v30;
  id v31;
  id v32;
  uint64_t v33;
  unint64_t v34;
  id v35;
  id v36;
  _QWORD *v37;
  _QWORD *v38;
  void *v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  _UNKNOWN **v44;
  _QWORD *v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  void *v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  __int128 v60;
  uint64_t v61;
  _UNKNOWN **v62;
  _QWORD *v63;

  v3 = v2;
  v63 = _swiftEmptyArrayStorage;
  v6 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_miniFormatterVC);
  if (!v6)
    goto LABEL_27;
  v7 = v6;
  v8 = sub_10080A710();
  v9 = objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_canvasLayerHosting), "interactiveCanvasController");
  if (v9)
  {
    v10 = v9;
    v56 = a1;
    v11 = a2;
    v12 = objc_msgSend(v10, "infosForSelectionPath:", v11);
    v13 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v12, &type metadata for AnyHashable, &protocol witness table for AnyHashable);

    v14 = sub_1005FEFFC(v13);
    swift_bridgeObjectRelease(v13);
    v15 = sub_1005B989C((uint64_t)v14);

    swift_release(v14);
    if (v15)
    {
      v16 = v10;
      v17 = sub_1005C5238((uint64_t)v15, v16);
      swift_bridgeObjectRelease(v15);

      sub_100AF7B80((uint64_t)v17);
      v19 = v18;

      swift_bridgeObjectRelease(v17);
      if ((v19 & 0xC000000000000001) != 0)
      {
        if (v19 < 0)
          v20 = v19;
        else
          v20 = v19 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v19);
        v21 = __CocoaSet.count.getter(v20);
        swift_bridgeObjectRelease(v19);
      }
      else
      {
        v21 = *(_QWORD *)(v19 + 16);
      }
      v22 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_repsForCurrentSelectionPath);
      if (v22)
      {
        swift_bridgeObjectRetain(*(_QWORD *)(v3
                                           + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_repsForCurrentSelectionPath));
        swift_bridgeObjectRetain(v19);
        sub_1008D98D0(v23, v22);
        v25 = v24;
        swift_bridgeObjectRelease_n(v19, 2);
        swift_bridgeObjectRelease(v22);
        if ((v8 & 1) != 0)
        {
          a1 = v56;
          goto LABEL_23;
        }
        a1 = v56;
        if ((v25 & 1) == 0 && v21)
          goto LABEL_23;
      }
      else
      {
        swift_bridgeObjectRelease(v19);
        a1 = v56;
        if (v8 & 1 | (v21 != 0))
          goto LABEL_23;
      }
LABEL_26:

      goto LABEL_27;
    }

    a1 = v56;
  }
  if (*(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_repsForCurrentSelectionPath))
  {
    if ((v8 & 1) == 0)
      goto LABEL_26;
  }
  else if ((v8 & 1) == 0)
  {
    goto LABEL_26;
  }
LABEL_23:
  v26 = v7;
  v27 = sub_100D10AD0(0, 1, 1, _swiftEmptyArrayStorage);
  v29 = v27[2];
  v28 = v27[3];
  if (v29 >= v28 >> 1)
    v27 = sub_100D10AD0((_QWORD *)(v28 > 1), v29 + 1, 1, v27);
  v61 = type metadata accessor for CRLiOSMiniFormatterViewController();
  v62 = &off_101280948;
  *(_QWORD *)&v60 = v26;
  v27[2] = v29 + 1;
  sub_1004DB728(&v60, (uint64_t)&v27[5 * v29 + 4]);

  v63 = v27;
LABEL_27:
  v30 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController);
  if (v30)
  {
    v31 = v30;
    v32 = objc_msgSend(v31, "viewControllers");
    v33 = sub_1004B8930(0, (unint64_t *)&qword_1013F6620, UIViewController_ptr);
    v34 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v32, v33);

    v35 = a2;
    v36 = a1;
    v37 = sub_1005C5018(v34, (uint64_t)v36, (uint64_t)v35);
    swift_bridgeObjectRelease(v34);

    v38 = sub_1005B99AC((uint64_t)v37);
    swift_bridgeObjectRelease(v37);
    if (v38)
      sub_10061FFF4((uint64_t)v38);

  }
  v39 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedAuxiliaryViewController);
  if (!v39
    || (*(_QWORD *)&v60 = *(_QWORD *)(v3
                                    + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedAuxiliaryViewController),
        v40 = sub_1004B8930(0, (unint64_t *)&qword_1013F6620, UIViewController_ptr),
        v41 = v39,
        v42 = sub_1004B804C(&qword_1013E56C8),
        (swift_dynamicCast(&v57, &v60, v40, v42, 6) & 1) == 0))
  {
    v59 = 0;
    v57 = 0u;
    v58 = 0u;
    goto LABEL_42;
  }
  if (!*((_QWORD *)&v58 + 1))
  {
LABEL_42:
    sub_1004CB800((uint64_t)&v57, (uint64_t *)&unk_1013E56D0);
    return v63;
  }
  sub_1004DB728(&v57, (uint64_t)&v60);
  v43 = v61;
  v44 = v62;
  sub_1004BB5A4(&v60, v61);
  if ((((uint64_t (*)(void *, void *, uint64_t, _UNKNOWN **))v44[3])(a1, a2, v43, v44) & 1) != 0)
  {
    sub_1004E90B0((uint64_t)&v60, (uint64_t)&v57);
    v45 = v63;
    if ((swift_isUniquelyReferenced_nonNull_native(v63) & 1) == 0)
    {
      v45 = sub_100D10AD0(0, v45[2] + 1, 1, v45);
      v63 = v45;
    }
    v47 = v45[2];
    v46 = v45[3];
    if (v47 >= v46 >> 1)
      v63 = sub_100D10AD0((_QWORD *)(v46 > 1), v47 + 1, 1, v45);
    v48 = *((_QWORD *)&v58 + 1);
    v49 = v59;
    v50 = sub_1004CB9AC((uint64_t)&v57, *((uint64_t *)&v58 + 1));
    v51 = __chkstk_darwin(v50);
    v53 = (char *)&v56 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v54 + 16))(v53, v51);
    sub_1005C46A8(v47, (uint64_t)v53, (uint64_t *)&v63, v48, v49);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v57);
  }
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v60);
  return v63;
}

_QWORD *sub_1005BE100(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v6;
  id v7;
  char v8;
  id v9;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  void *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  _UNKNOWN **v26;
  _QWORD *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  _QWORD v38[4];
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  _UNKNOWN **v45;
  _QWORD *v46;

  v3 = v2;
  v46 = _swiftEmptyArrayStorage;
  v6 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_miniFormatterVC);
  if (v6)
  {
    v7 = v6;
    sub_100805094(a1, a2);
    if ((v8 & 1) != 0)
    {
      v9 = v7;
      v10 = sub_100D10AD0(0, 1, 1, _swiftEmptyArrayStorage);
      v12 = v10[2];
      v11 = v10[3];
      if (v12 >= v11 >> 1)
        v10 = sub_100D10AD0((_QWORD *)(v11 > 1), v12 + 1, 1, v10);
      v44 = type metadata accessor for CRLiOSMiniFormatterViewController();
      v45 = &off_101280948;
      *(_QWORD *)&v43 = v9;
      v10[2] = v12 + 1;
      sub_1004DB728(&v43, (uint64_t)&v10[5 * v12 + 4]);

      v46 = v10;
    }
    else
    {

    }
  }
  v13 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController);
  if (v13)
  {
    v14 = v13;
    v15 = objc_msgSend(v14, "viewControllers");
    v16 = sub_1004B8930(0, (unint64_t *)&qword_1013F6620, UIViewController_ptr);
    v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v15, v16);

    __chkstk_darwin(v18);
    v38[2] = a1;
    v38[3] = a2;
    v19 = sub_100767A40(sub_1005C5FE0, v38, v17);
    v20 = sub_1005B99AC((uint64_t)v19);
    swift_bridgeObjectRelease(v19);
    if (v20)
      sub_10061FFF4((uint64_t)v20);

  }
  v21 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedAuxiliaryViewController);
  if (!v21
    || (*(_QWORD *)&v43 = *(_QWORD *)(v3
                                    + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedAuxiliaryViewController),
        v22 = sub_1004B8930(0, (unint64_t *)&qword_1013F6620, UIViewController_ptr),
        v23 = v21,
        v24 = sub_1004B804C(&qword_1013E56C8),
        (swift_dynamicCast(&v40, &v43, v22, v24, 6) & 1) == 0))
  {
    v42 = 0;
    v40 = 0u;
    v41 = 0u;
    goto LABEL_22;
  }
  if (!*((_QWORD *)&v41 + 1))
  {
LABEL_22:
    sub_1004CB800((uint64_t)&v40, (uint64_t *)&unk_1013E56D0);
    return v46;
  }
  sub_1004DB728(&v40, (uint64_t)&v43);
  v25 = v44;
  v26 = v45;
  sub_1004BB5A4(&v43, v44);
  if ((((uint64_t (*)(uint64_t, uint64_t, uint64_t, _UNKNOWN **))v26[2])(a1, a2, v25, v26) & 1) != 0)
  {
    sub_1004E90B0((uint64_t)&v43, (uint64_t)&v40);
    v27 = v46;
    if ((swift_isUniquelyReferenced_nonNull_native(v46) & 1) == 0)
    {
      v27 = sub_100D10AD0(0, v27[2] + 1, 1, v27);
      v46 = v27;
    }
    v29 = v27[2];
    v28 = v27[3];
    if (v29 >= v28 >> 1)
      v46 = sub_100D10AD0((_QWORD *)(v28 > 1), v29 + 1, 1, v27);
    v30 = *((_QWORD *)&v41 + 1);
    v31 = v42;
    v32 = sub_1004CB9AC((uint64_t)&v40, *((uint64_t *)&v41 + 1));
    v33 = __chkstk_darwin(v32);
    v35 = (char *)&v39 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v36 + 16))(v35, v33);
    sub_1005C46A8(v29, (uint64_t)v35, (uint64_t *)&v46, v30, v31);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v40);
  }
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v43);
  return v46;
}

uint64_t sub_1005BE47C(id *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  __int128 v12[2];
  uint64_t v13;
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;
  id v17;

  v17 = *a1;
  v5 = sub_1004B8930(0, (unint64_t *)&qword_1013F6620, UIViewController_ptr);
  v6 = v17;
  v7 = sub_1004B804C(&qword_1013E56C8);
  if ((swift_dynamicCast(v12, &v17, v5, v7, 6) & 1) != 0)
  {
    sub_1004DB728(v12, (uint64_t)v14);
    v8 = v15;
    v9 = v16;
    sub_1004BB5A4(v14, v15);
    v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 16))(a2, a3, v8, v9);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v14);
  }
  else
  {
    v13 = 0;
    memset(v12, 0, sizeof(v12));
    sub_1004CB800((uint64_t)v12, (uint64_t *)&unk_1013E56D0);
    v10 = 0;
  }
  return v10 & 1;
}

_QWORD *sub_1005BE57C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  _QWORD *v5;
  unint64_t v6;
  uint64_t v7;
  int64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  _UNKNOWN **v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  void *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  _UNKNOWN **v27;
  _QWORD *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  _QWORD *v39;
  uint64_t v40;
  id v41;
  _QWORD *v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  _UNKNOWN **v48;
  _QWORD *v49;

  v1 = v0;
  v49 = _swiftEmptyArrayStorage;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_miniFormatterVC);
  if (!v2)
    goto LABEL_6;
  v3 = v2;
  if ((sub_10080A710() & 1) == 0)
  {

    goto LABEL_6;
  }
  v4 = v3;
  v5 = sub_100D10AD0(0, 1, 1, _swiftEmptyArrayStorage);
  v7 = v5[2];
  v6 = v5[3];
  v8 = v7 + 1;
  if (v7 >= v6 >> 1)
    goto LABEL_43;
  while (1)
  {
    v47 = type metadata accessor for CRLiOSMiniFormatterViewController();
    v48 = &off_101280948;
    *(_QWORD *)&v46 = v4;
    v5[2] = v8;
    sub_1004DB728(&v46, (uint64_t)&v5[5 * v7 + 4]);

    v49 = v5;
LABEL_6:
    v9 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController);
    if (!v9)
      goto LABEL_29;
    v5 = v9;
    v4 = objc_msgSend(v5, "viewControllers");
    v8 = sub_1004B8930(0, (unint64_t *)&qword_1013F6620, UIViewController_ptr);
    v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v8);

    v42 = _swiftEmptyArrayStorage;
    if ((unint64_t)v7 >> 62)
      break;
    v6 = v7 & 0xFFFFFFFFFFFFF8;
    v10 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v10)
      goto LABEL_25;
LABEL_9:
    if (v10 >= 1)
    {
      v39 = v5;
      v40 = v1;
      v11 = 0;
      while (1)
      {
        if ((v7 & 0xC000000000000001) != 0)
          v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v11, v7);
        else
          v12 = *(id *)(v7 + 8 * v11 + 32);
        v41 = v12;
        v13 = v12;
        v14 = sub_1004B804C(&qword_1013E56C8);
        if (swift_dynamicCast(&v43, &v41, v8, v14, 6))
        {
          sub_1004DB728(&v43, (uint64_t)&v46);
          v16 = v47;
          v15 = v48;
          sub_1004BB5A4(&v46, v47);
          LOBYTE(v15) = ((uint64_t (*)(uint64_t, _UNKNOWN **))v15[4])(v16, v15);
          v17 = _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v46);
          if ((v15 & 1) != 0)
          {
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v17);
            v18 = v42[2];
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v18);
            v19 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v13);
            specialized ContiguousArray._endMutation()(v19);
            goto LABEL_13;
          }
        }
        else
        {
          v45 = 0;
          v43 = 0u;
          v44 = 0u;
          sub_1004CB800((uint64_t)&v43, (uint64_t *)&unk_1013E56D0);
        }

LABEL_13:
        if (v10 == ++v11)
        {
          swift_bridgeObjectRelease(v7);
          v20 = v42;
          v5 = v39;
          v1 = v40;
          goto LABEL_26;
        }
      }
    }
    __break(1u);
LABEL_43:
    v5 = sub_100D10AD0((_QWORD *)(v6 > 1), v8, 1, v5);
  }
  if (v7 < 0)
    v4 = (id)v7;
  else
    v4 = (id)(v7 & 0xFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain(v7);
  v10 = _CocoaArrayWrapper.endIndex.getter(v4);
  swift_bridgeObjectRelease(v7);
  if (v10)
    goto LABEL_9;
LABEL_25:
  swift_bridgeObjectRelease(v7);
  v20 = _swiftEmptyArrayStorage;
LABEL_26:
  v21 = sub_1005B99AC((uint64_t)v20);
  swift_release(v20);
  if (v21)
    sub_10061FFF4((uint64_t)v21);

LABEL_29:
  v22 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedAuxiliaryViewController);
  if (!v22
    || (*(_QWORD *)&v46 = *(_QWORD *)(v1
                                    + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedAuxiliaryViewController),
        v23 = sub_1004B8930(0, (unint64_t *)&qword_1013F6620, UIViewController_ptr),
        v24 = v22,
        v25 = sub_1004B804C(&qword_1013E56C8),
        (swift_dynamicCast(&v43, &v46, v23, v25, 6) & 1) == 0))
  {
    v45 = 0;
    v43 = 0u;
    v44 = 0u;
    goto LABEL_40;
  }
  if (!*((_QWORD *)&v44 + 1))
  {
LABEL_40:
    sub_1004CB800((uint64_t)&v43, (uint64_t *)&unk_1013E56D0);
    return v49;
  }
  sub_1004DB728(&v43, (uint64_t)&v46);
  v26 = v47;
  v27 = v48;
  sub_1004BB5A4(&v46, v47);
  if ((((uint64_t (*)(uint64_t, _UNKNOWN **))v27[4])(v26, v27) & 1) != 0)
  {
    sub_1004E90B0((uint64_t)&v46, (uint64_t)&v43);
    v28 = v49;
    if ((swift_isUniquelyReferenced_nonNull_native(v49) & 1) == 0)
    {
      v28 = sub_100D10AD0(0, v28[2] + 1, 1, v28);
      v49 = v28;
    }
    v30 = v28[2];
    v29 = v28[3];
    if (v30 >= v29 >> 1)
      v49 = sub_100D10AD0((_QWORD *)(v29 > 1), v30 + 1, 1, v28);
    v31 = *((_QWORD *)&v44 + 1);
    v32 = v45;
    v33 = sub_1004CB9AC((uint64_t)&v43, *((uint64_t *)&v44 + 1));
    v34 = __chkstk_darwin(v33);
    v36 = (char *)&v39 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v37 + 16))(v36, v34);
    sub_1005C46A8(v30, (uint64_t)v36, (uint64_t *)&v49, v31, v32);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v43);
  }
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v46);
  return v49;
}

_QWORD *sub_1005BEA24()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;
  id v4;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_miniFormatterVC);
  if (v1)
  {
    v2 = sub_1004B804C((uint64_t *)&unk_1013E5700);
    v3 = (_QWORD *)swift_allocObject(v2, 72, 7);
    *((_OWORD *)v3 + 1) = xmmword_100EF5E40;
    v3[7] = type metadata accessor for CRLiOSMiniFormatterViewController();
    v3[8] = &off_101280948;
    v3[4] = v1;
  }
  else
  {
    v3 = _swiftEmptyArrayStorage;
  }
  v4 = v1;
  return v3;
}

double sub_1005BEAA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  double result;

  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v9 = (_QWORD *)(a1 + 32);
    swift_bridgeObjectRetain(a1);
    do
    {
      v10 = v9[3];
      v11 = v9[4];
      sub_1004BB5A4(v9, v10);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 48))(a2, a3, a4, v10, v11);
      v9 += 5;
      --v4;
    }
    while (v4);
    *(_QWORD *)&result = swift_bridgeObjectRelease(a1).n128_u64[0];
  }
  return result;
}

_QWORD *sub_1005BEB54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  id v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_miniFormatterVC);
  if (!v3)
    return _swiftEmptyArrayStorage;
  v6 = v3;
  sub_100805370(a1, a2);
  if ((v7 & 1) == 0)
  {

    return _swiftEmptyArrayStorage;
  }
  v8 = sub_1004B804C(&qword_1013E56F8);
  v9 = swift_allocObject(v8, 72, 7);
  *(_OWORD *)(v9 + 16) = xmmword_100EF5E40;
  *(_QWORD *)(v9 + 56) = type metadata accessor for CRLiOSMiniFormatterViewController();
  *(_QWORD *)(v9 + 64) = &off_101280930;
  *(_QWORD *)(v9 + 32) = v6;
  return (_QWORD *)v9;
}

void sub_1005BEBF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  double height;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  uint64_t *v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  uint64_t v25;
  void *v26;
  _BYTE *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  double v36;
  id v37;
  id v38;
  double v39;
  CGFloat v40;
  double v41;
  CGFloat v42;
  double v43;
  CGFloat v44;
  double v45;
  CGFloat v46;
  double Width;
  uint64_t v48;
  uint64_t ObjectType;
  double v50;
  uint64_t v51;
  void *v52;
  double v53;
  double v54;
  id v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  id v61;
  uint64_t Strong;
  void *v63;
  double v64;
  CGFloat v65;
  double v66;
  CGFloat v67;
  double v68;
  CGFloat v69;
  double v70;
  CGFloat v71;
  CGFloat v72;
  double MinY;
  double MaxY;
  double v75;
  int v76;
  _BOOL4 v77;
  uint64_t v78;
  CGFloat rect;
  CGFloat y;
  CGFloat x;
  double v82;
  double v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  id v87;
  id v88;
  id v89;
  _QWORD v91[6];
  CGRect v92;
  CGRect v93;
  CGRect v94;
  CGRect v95;
  CGRect v96;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = a1 + 32;
    height = UILayoutFittingCompressedSize.height;
    swift_bridgeObjectRetain(a1);
    while (1)
    {
      sub_1004E90B0(v2, (uint64_t)v91);
      v10 = sub_1004BB5A4(v91, v91[3]);
      v11 = *v10;
      v12 = *(void **)(*v10 + OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_repTrackingViewHelper);
      if (v12)
      {
        v13 = v12;
        sub_10070DE84();

      }
      v14 = sub_1004BB5A4((_QWORD *)(v11 + OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_delegate), *(_QWORD *)(v11 + OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_delegate + 24));
      v15 = *v14;
      v16 = OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController;
      v17 = *(void **)(*v14 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController);
      if (!v17)
        goto LABEL_11;
      v18 = objc_msgSend(v17, "topViewController");
      if (!v18)
        goto LABEL_11;
      v6 = v18;
      v19 = type metadata accessor for CRLiOSMiniFormatterPopoverContainerViewController();
      v20 = swift_dynamicCastClass(v6, v19);
      if (v20)
      {
        v21 = *(void **)(v20 + OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_builder);
        v22 = v21;

        if (!v21)
          goto LABEL_11;

        v23 = *(void **)(v15 + v16);
        if (!v23)
          goto LABEL_11;
        v6 = v23;
        v24 = objc_msgSend(v6, "visibleViewController");
        if (v24)
          break;
      }
LABEL_10:

LABEL_11:
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v91);
      v2 += 40;
      if (!--v1)
      {
        swift_bridgeObjectRelease(a1);
        return;
      }
    }
    v7 = v24;
    v25 = swift_dynamicCastClass(v24, v19);
    if (!v25 || (v26 = *(void **)(v15 + v16)) == 0)
    {
LABEL_9:

      v6 = v7;
      goto LABEL_10;
    }
    v27 = (_BYTE *)v25;
    v9 = v26;
    v28 = objc_msgSend(v9, "visibleViewController");
    if (!v28)
    {
LABEL_8:

      v6 = v7;
      v7 = v9;
      goto LABEL_9;
    }
    v89 = v9;
    v9 = v28;
    v29 = swift_dynamicCastClass(v28, v19);
    if (v29)
    {
      v30 = v29;
      sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
      if ((static NSObject.== infix(_:_:)(v30, v27) & 1) == 0)
      {
        v8 = v89;
        goto LABEL_7;
      }
      v31 = *(void **)(v15 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedWrappedNavigationController);
      if (v31)
      {
        v32 = objc_msgSend(v31, "presentationController");
        if (v32)
        {
          v5 = v32;
          v33 = objc_opt_self(UIPopoverPresentationController);
          v34 = swift_dynamicCastObjCClass(v5, v33);
          if (v34)
          {
            v87 = (id)v34;
            v88 = v5;
            if (v27[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_useNavigationControllerWidth] == 1
              && (v37 = objc_msgSend(v27, "navigationController")) != 0)
            {
              v84 = v37;
              v38 = objc_msgSend(v37, "view");

              if (!v38)
              {
                __break(1u);
                return;
              }
              objc_msgSend(v38, "frame");
              v40 = v39;
              v42 = v41;
              v44 = v43;
              v46 = v45;

              v92.origin.x = v40;
              v92.origin.y = v42;
              v92.size.width = v44;
              v92.size.height = v46;
              Width = CGRectGetWidth(v92);
            }
            else
            {
              v48 = *(_QWORD *)&v27[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_delegate];
              if (v48)
              {
                v85 = *(_QWORD *)&v27[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_delegate
                                    + 8];
                ObjectType = swift_getObjectType(v48);
                (*(void (**)(uint64_t))(v85 + 104))(ObjectType);
              }
              else
              {
                if (qword_1013DCAF0 != -1)
                  swift_once(&qword_1013DCAF0, sub_1005BA270);
                Width = *(double *)&qword_10147EAA8;
              }
            }
            LODWORD(v35) = 1148846080;
            LODWORD(v36) = 1112014848;
            objc_msgSend(*(id *)&v27[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_contentView], "systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:", Width, height, v35, v36);
            v51 = *(_QWORD *)(v15 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_miniFormatterVC);
            if (v51
              && (v52 = *(void **)(v51
                                 + OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_repTrackingViewHelper)) != 0)
            {
              v53 = v50;
              v54 = *(double *)&v27[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_bottomPadding];
              v55 = v52;
              v56 = sub_10070DD5C();

              v57 = *(unsigned __int8 *)(v56 + 56);
              v86 = v56;
              v58 = *(_QWORD *)(v56 + 16);
              swift_bridgeObjectRetain(v58);
              v60 = (void *)sub_100857EA4(v59);
              v61 = objc_msgSend(v60, "interactiveCanvasController", swift_bridgeObjectRelease(v58).n128_f64[0]);

              if (v61)
              {
                Strong = swift_unknownObjectWeakLoadStrong(v86 + 24);
                if (Strong)
                {
                  v63 = (void *)Strong;
                  v83 = v53 + v54 + 10.0;
                  objc_msgSend(v61, "visibleScaledRectForCanvasUI");
                  v65 = v64;
                  v67 = v66;
                  v69 = v68;
                  v71 = v70;
                  objc_msgSend(v63, "frame");
                  y = v93.origin.y;
                  x = v93.origin.x;
                  v72 = v93.size.width;
                  rect = v93.size.height;
                  MinY = CGRectGetMinY(v93);
                  v94.origin.x = v65;
                  v94.origin.y = v67;
                  v94.size.width = v69;
                  v94.size.height = v71;
                  v82 = MinY - CGRectGetMinY(v94);
                  v95.origin.x = v65;
                  v95.origin.y = v67;
                  v95.size.width = v69;
                  v95.size.height = v71;
                  MaxY = CGRectGetMaxY(v95);
                  v96.origin.y = y;
                  v96.origin.x = x;
                  v96.size.width = v72;
                  v96.size.height = rect;
                  v75 = CGRectGetMaxY(v96);

                  v76 = *(unsigned __int8 *)(v86 + 56);
                  swift_release(v86);
                  v77 = v83 <= MaxY - v75;
                  if (v76)
                    v77 = v83 <= v82;
                  v78 = 1;
                  if (v57)
                    v78 = 2;
                  if (v77)
                    v4 = v78;
                  else
                    v4 = 3;
                }
                else
                {
                  swift_release(v86);

                  v4 = 3;
                }
              }
              else
              {
                swift_release(v86);
                v4 = 3;
              }
            }
            else
            {
              v4 = 2;
            }
            objc_msgSend(v87, "setPermittedArrowDirections:", v4, *(_QWORD *)&rect, *(_QWORD *)&y, *(_QWORD *)&x);
            v5 = v89;
            v89 = v88;
          }

          v6 = v7;
          v7 = v5;
        }
      }
    }
    v8 = v9;
    v9 = v89;
LABEL_7:

    v6 = v7;
    v7 = v8;
    goto LABEL_8;
  }
}

double sub_1005BF1F4@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  id v8;
  double result;
  char v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t (*v30)(id, void *);
  uint64_t v31;
  uint64_t v32;
  id v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  void *v39;
  id v40;
  id v41;
  uint64_t v42;

  v5 = OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_miniFormatterVC;
  if (!*(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_miniFormatterVC))
    goto LABEL_19;
  if (sub_1005C5A74(a2))
  {
    if (*(_QWORD *)(v3 + v5))
    {
      v40 = *(id *)(v3 + v5);
      *(_QWORD *)(a3 + 24) = type metadata accessor for CRLiOSMiniFormatterViewController();
      *(_QWORD *)(a3 + 32) = &off_101280910;
      *(_QWORD *)a3 = v40;
      v8 = v40;
      return result;
    }
    goto LABEL_19;
  }
  v10 = sub_1005BF514(a1, (uint64_t)a2);
  v11 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController);
  if ((v10 & 1) == 0)
  {
    if (v11)
    {
      v37 = a3;
      v39 = a2;
      v41 = (id)a1;
      v38 = v11;
      v17 = objc_msgSend(v38, "viewControllers");
      v36 = sub_1004B8930(0, (unint64_t *)&qword_1013F6620, UIViewController_ptr);
      v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v17, v36);

      if ((unint64_t)v18 >> 62)
        goto LABEL_31;
      v19 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
      while (v19)
      {
        v20 = v18 & 0xC000000000000001;
        if ((v18 & 0xC000000000000001) != 0)
          v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v18);
        else
          v21 = *(id *)(v18 + 32);

        if (v19 == 1)
          break;
        v22 = 5;
        while (1)
        {
          v23 = v20
              ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v22 - 4, v18)
              : *(id *)(v18 + 8 * v22);
          v24 = v23;
          v25 = v22 - 3;
          if (__OFADD__(v22 - 4, 1))
            break;
          v26 = type metadata accessor for CRLiOSMiniFormatterPopoverContainerViewController();
          v27 = swift_dynamicCastClass(v24, v26);
          if (v27)
          {
            v28 = v27;
            v29 = *(_QWORD **)(v27 + OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_builder);
            if (v29)
            {
              v30 = *(uint64_t (**)(id, void *))((swift_isaMask & *v29) + 0x1C0);
              v31 = v19;
              v32 = v18;
              v33 = v24;
              v34 = v29;
              LOBYTE(v30) = v30(v41, v39);

              v18 = v32;
              v19 = v31;

              if ((v30 & 1) != 0)
              {

                swift_bridgeObjectRelease(v18);
                v42 = v28;
                v14 = sub_1004B804C((uint64_t *)&unk_1013E56E8);
                v16 = v36;
                a3 = v37;
                v15 = v37;
                goto LABEL_9;
              }
            }
          }

          ++v22;
          if (v25 == v19)
            goto LABEL_18;
        }
        __break(1u);
LABEL_31:
        v35 = v18 < 0 ? v18 : v18 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v18);
        v19 = _CocoaArrayWrapper.endIndex.getter(v35);
        swift_bridgeObjectRelease(v18);
      }
LABEL_18:

      swift_bridgeObjectRelease(v18);
      a3 = v37;
    }
    goto LABEL_19;
  }
  if (!v11)
    goto LABEL_19;
  v12 = objc_msgSend(v11, "topViewController");
  if (!v12)
    goto LABEL_19;
  v42 = (uint64_t)v12;
  v13 = sub_1004B8930(0, (unint64_t *)&qword_1013F6620, UIViewController_ptr);
  v14 = sub_1004B804C((uint64_t *)&unk_1013E56E8);
  v15 = a3;
  v16 = v13;
LABEL_9:
  if ((swift_dynamicCast(v15, &v42, v16, v14, 6) & 1) == 0)
  {
LABEL_19:
    *(_QWORD *)(a3 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1005BF514(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  _QWORD *v19;
  void *v20;
  char v21;

  sub_1005BD75C();
  v6 = v5;
  sub_1005BD94C(v5);
  v8 = v7;
  v10 = v9;
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease(v6);
  *(_QWORD *)&v11 = swift_bridgeObjectRelease(v8).n128_u64[0];
  v12 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController);
  if (!v12)
    goto LABEL_7;
  v13 = objc_msgSend(v12, "topViewController", v11);
  if (!v13)
    goto LABEL_7;
  v14 = v13;
  v15 = type metadata accessor for CRLiOSMiniFormatterPopoverContainerViewController();
  v16 = swift_dynamicCastClass(v14, v15);
  if (!v16)
  {
    swift_bridgeObjectRelease(v10);

    return 1;
  }
  v17 = *(void **)(v16 + OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_builder);
  v18 = v17;

  if (v17)
  {
    v19 = v18;
    v20 = sub_1005C4ED0(v10, (uint64_t)v19);
    swift_bridgeObjectRelease(v10);

    if (v20)
    {

      v21 = (*(uint64_t (**)(uint64_t, uint64_t))((swift_isaMask & *v19) + 0x1C0))(a1, a2);
      return v21 & 1;
    }

  }
  else
  {
LABEL_7:
    swift_bridgeObjectRelease(v10);
  }
  return 1;
}

double sub_1005BF66C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  char v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double result;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t (*v25)(uint64_t, uint64_t);
  id v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v33;

  v5 = sub_1005BF90C(a1, a2);
  v6 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController);
  if ((v5 & 1) == 0)
  {
    if (v6)
    {
      v30 = v6;
      v13 = objc_msgSend(v30, "viewControllers");
      v29 = sub_1004B8930(0, (unint64_t *)&qword_1013F6620, UIViewController_ptr);
      v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v13, v29);

      if ((unint64_t)v14 >> 62)
        goto LABEL_27;
      v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
      while (v15)
      {
        if ((v14 & 0xC000000000000001) != 0)
          v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v14);
        else
          v16 = *(id *)(v14 + 32);

        if (v15 == 1)
          break;
        v17 = 5;
        while (1)
        {
          v18 = (v14 & 0xC000000000000001) != 0
              ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v17 - 4, v14)
              : *(id *)(v14 + 8 * v17);
          v19 = v18;
          v20 = v17 - 3;
          if (__OFADD__(v17 - 4, 1))
            break;
          v21 = type metadata accessor for CRLiOSMiniFormatterPopoverContainerViewController();
          v22 = swift_dynamicCastClass(v19, v21);
          if (v22)
          {
            v23 = v22;
            v24 = *(_QWORD **)(v22 + OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_builder);
            if (v24)
            {
              v25 = *(uint64_t (**)(uint64_t, uint64_t))((swift_isaMask & *v24) + 0x1C8);
              v26 = v19;
              v27 = v24;
              LOBYTE(v25) = v25(a1, a2);

              if ((v25 & 1) != 0)
              {

                swift_bridgeObjectRelease(v14);
                v33 = v23;
                v9 = sub_1004B804C((uint64_t *)&unk_1013E56E8);
                v10 = a3;
                v11 = v29;
                goto LABEL_5;
              }
            }
          }

          ++v17;
          if (v20 == v15)
            goto LABEL_14;
        }
        __break(1u);
LABEL_27:
        v28 = v14 < 0 ? v14 : v14 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v14);
        v15 = _CocoaArrayWrapper.endIndex.getter(v28);
        swift_bridgeObjectRelease(v14);
      }
LABEL_14:

      swift_bridgeObjectRelease(v14);
    }
    goto LABEL_15;
  }
  if (!v6)
    goto LABEL_15;
  v7 = objc_msgSend(v6, "topViewController");
  if (!v7)
    goto LABEL_15;
  v33 = (uint64_t)v7;
  v8 = sub_1004B8930(0, (unint64_t *)&qword_1013F6620, UIViewController_ptr);
  v9 = sub_1004B804C((uint64_t *)&unk_1013E56E8);
  v10 = a3;
  v11 = v8;
LABEL_5:
  if ((swift_dynamicCast(v10, &v33, v11, v9, 6) & 1) == 0)
  {
LABEL_15:
    *(_QWORD *)(a3 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1005BF90C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  _QWORD *v19;
  void *v20;
  char v21;

  sub_1005BD75C();
  v6 = v5;
  sub_1005BD94C(v5);
  v8 = v7;
  v10 = v9;
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease(v6);
  *(_QWORD *)&v11 = swift_bridgeObjectRelease(v8).n128_u64[0];
  v12 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController);
  if (!v12)
    goto LABEL_7;
  v13 = objc_msgSend(v12, "topViewController", v11);
  if (!v13)
    goto LABEL_7;
  v14 = v13;
  v15 = type metadata accessor for CRLiOSMiniFormatterPopoverContainerViewController();
  v16 = swift_dynamicCastClass(v14, v15);
  if (!v16)
  {
    swift_bridgeObjectRelease(v10);

    return 1;
  }
  v17 = *(void **)(v16 + OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_builder);
  v18 = v17;

  if (v17)
  {
    v19 = v18;
    v20 = sub_1005C4ED0(v10, (uint64_t)v19);
    swift_bridgeObjectRelease(v10);

    if (v20)
    {

      v21 = (*(uint64_t (**)(uint64_t, uint64_t))((swift_isaMask & *v19) + 0x1C8))(a1, a2);
      return v21 & 1;
    }

  }
  else
  {
LABEL_7:
    swift_bridgeObjectRelease(v10);
  }
  return 1;
}

void sub_1005BFA64(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  char v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  char v14;
  void *v15;
  id v16;
  uint64_t v17;
  double v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  _BYTE v24[40];

  v2 = v1;
  sub_1004E90B0(a1, (uint64_t)v24);
  v3 = sub_1004B804C((uint64_t *)&unk_1013E56E8);
  v4 = sub_1004B8930(0, (unint64_t *)&qword_1013F6620, UIViewController_ptr);
  if (swift_dynamicCast(&v23, v24, v3, v4, 6))
  {
    v5 = v23;
    v6 = *(void **)&v2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_miniFormatterVC];
    if (v6
      && (v7 = v6,
          v8 = v5,
          v9 = static NSObject.== infix(_:_:)(v8, v7),
          v8,
          v7,
          (v9 & 1) != 0))
    {
      sub_1005BB634(1, 1, 0);

    }
    else
    {
      v10 = OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController;
      v11 = objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController], "topViewController");
      if (v11
        && (v12 = v11,
            v13 = v5,
            v14 = static NSObject.== infix(_:_:)(v13, v12),
            v13,
            v13,
            v12,
            (v14 & 1) != 0))
      {
        objc_msgSend(v2, "dismissSecondLayerPopover");

      }
      else
      {
        v15 = *(void **)&v2[v10];
        if (!v15)
          goto LABEL_13;
        v16 = objc_msgSend(v15, "viewControllers");
        v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v16, v4);

        LOBYTE(v16) = sub_100C9DB5C((uint64_t)v5, v17);
        *(_QWORD *)&v18 = swift_bridgeObjectRelease(v17).n128_u64[0];
        if ((v16 & 1) == 0)
          goto LABEL_13;
        v19 = *(void **)&v2[v10];
        if (v19
          && (objc_msgSend(v19, "popToViewController:animated:", v5, 1, v18),
              (v20 = *(void **)&v2[v10]) != 0))
        {
          v21 = v20;
          v22 = objc_msgSend(v21, "popViewControllerAnimated:", 1);

        }
        else
        {
LABEL_13:

        }
      }
    }
  }
}

void sub_1005BFC64()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  __n128 v10;
  Class isa;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  UIAccessibilityNotifications v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  _OWORD v27[2];
  unint64_t v28[4];

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController);
  if (!v1)
    return;
  v25 = v1;
  v2 = objc_msgSend(v25, "popoverPresentationController");
  if (!v2)
  {
LABEL_12:

    return;
  }
  v3 = v2;
  sub_1005C04EC();
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v3, "setSourceView:", v4);
    v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_generalElementsBaseButtons);
    v28[0] = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_inspectorElementsBaseButtons);
    swift_bridgeObjectRetain(v28[0]);
    swift_bridgeObjectRetain(v6);
    sub_10061EC48(v7);
    v8 = v5;
    v9 = (uint64_t)sub_1005C49C8(v28[0], (uint64_t)v8);
    swift_bridgeObjectRelease();

    if ((unint64_t)v9 >> 62)
    {
      if (v9 < 0)
        v23 = v9;
      else
        v23 = v9 & 0xFFFFFFFFFFFFFF8;
      v24 = sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
      _bridgeCocoaArray<A>(_:)(v23, v24);
    }
    else
    {
      v10 = swift_bridgeObjectRetain(v9);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v10);
      sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
    }
    swift_bridgeObjectRelease();
    sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v3, "setPassthroughViews:", isa, swift_bridgeObjectRelease().n128_f64[0]);

  }
  if (!UIAccessibilityIsVoiceOverRunning()
    || (v12 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection"),
        v13 = objc_msgSend(v12, "horizontalSizeClass"),
        v12,
        v13 != (id)2))
  {

    goto LABEL_12;
  }
  v14 = UIAccessibilityFocusedElement(UIAccessibilityNotificationVoiceOverIdentifier);
  if (v14)
  {
    v15 = v14;
    _bridgeAnyObjectToAny(_:)(v27, v14);
    swift_unknownObjectRelease(v15);
  }
  else
  {
    memset(v27, 0, sizeof(v27));
  }
  sub_1004D28A4((uint64_t)v27, (uint64_t)v28);
  if (v28[3])
  {
    v16 = sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
    if ((swift_dynamicCast(&v26, v28, (char *)&type metadata for Any + 8, v16, 6) & 1) != 0)
    {
      v17 = v26;
      v18 = objc_msgSend(v3, "presentedView");
      sub_1005BFFB0(v18, v17);
      v20 = v19;

      if (v20)
      {
        v21 = UIAccessibilityLayoutChangedNotification;
        v22 = v20;
        UIAccessibilityPostNotification(v21, v22);

      }
      else
      {

      }
    }
    else
    {

    }
  }
  else
  {

    sub_1004CB800((uint64_t)v28, &qword_1013E0230);
  }
}

void sub_1005BFFB0(void *a1, void *a2)
{
  void *v2;
  id v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  double v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  double v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  unint64_t v34;
  UIAccessibilityTraits v35;
  uint64_t v36;
  uint64_t v37;

  if (!a1)
    return;
  v4 = a1;
  if ((objc_msgSend(v4, "accessibilityElementsHidden") & 1) != 0)
  {
LABEL_3:

    return;
  }
  if (!objc_msgSend(v4, "isAccessibilityElement"))
  {
    v10 = objc_msgSend(v4, "subviews");
    v11 = sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
    v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v10, v11);

    v13 = (uint64_t)sub_1005B9858(v12, v2, a2);
    swift_bridgeObjectRelease();
    if ((unint64_t)v13 >> 62)
    {
      if (v13 < 0)
        v36 = v13;
      else
        v36 = v13 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v13);
      v37 = _CocoaArrayWrapper.endIndex.getter(v36);
      swift_bridgeObjectRelease();
      if (v37)
      {
LABEL_9:
        if ((v13 & 0xC000000000000001) != 0)
        {
          specialized _ArrayBuffer._getElementSlowPath(_:)(0, v13);
        }
        else
        {
          if (!*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            return;
          }
          v14 = *(id *)(v13 + 32);
        }
        swift_bridgeObjectRelease();

        return;
      }
    }
    else if (*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_9;
    }
    swift_bridgeObjectRelease();
    goto LABEL_3;
  }
  v5 = objc_msgSend(v4, "accessibilityLabel");
  if (v5)
  {
    v6 = v5;
    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
    v9 = v8;

  }
  else
  {
    v7 = 0;
    v9 = 0;
  }
  v15 = objc_msgSend(a2, "accessibilityLabel");
  if (v15)
  {
    v17 = v15;
    v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
    v20 = v19;

    if (v9)
    {
      if (!v20)
        goto LABEL_37;
      if (v7 == v18 && v9 == v20)
      {
        swift_bridgeObjectRelease();
        *(_QWORD *)&v16 = swift_bridgeObjectRelease().n128_u64[0];
      }
      else
      {
        v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9, v18, v20, 0);
        swift_bridgeObjectRelease();
        *(_QWORD *)&v16 = swift_bridgeObjectRelease().n128_u64[0];
        if ((v21 & 1) == 0)
          goto LABEL_3;
      }
    }
    else if (v20)
    {
      goto LABEL_37;
    }
  }
  else if (v9)
  {
    goto LABEL_37;
  }
  v22 = objc_msgSend(v4, "accessibilityIdentifier", v16);
  if (v22)
  {
    v23 = v22;
    v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
    v26 = v25;

  }
  else
  {
    v24 = 0;
    v26 = 0;
  }
  v27 = objc_msgSend(a2, "accessibilityIdentifier");
  if (v27)
  {
    v29 = v27;
    v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
    v32 = v31;

    if (v26)
    {
      if (v32)
      {
        if (v24 == v30 && v26 == v32)
        {
          swift_bridgeObjectRelease();
          *(_QWORD *)&v28 = swift_bridgeObjectRelease().n128_u64[0];
        }
        else
        {
          v33 = _stringCompareWithSmolCheck(_:_:expecting:)(v24, v26, v30, v32, 0);
          swift_bridgeObjectRelease();
          *(_QWORD *)&v28 = swift_bridgeObjectRelease().n128_u64[0];
          if ((v33 & 1) == 0)
            goto LABEL_3;
        }
        goto LABEL_40;
      }
LABEL_37:

      swift_bridgeObjectRelease();
      return;
    }
    if (v32)
      goto LABEL_37;
  }
  else if (v26)
  {
    goto LABEL_37;
  }
LABEL_40:
  v34 = (unint64_t)objc_msgSend(v4, "accessibilityTraits", v28);
  v35 = UIAccessibilityTraitNotEnabled | UIAccessibilityTraitSelected;
  if ((((unint64_t)objc_msgSend(a2, "accessibilityTraits") ^ v34) & ~v35) != 0)
    goto LABEL_3;
}

void sub_1005C0338()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  __n128 v10;
  Class isa;
  uint64_t v12;
  uint64_t v13;
  id v14;
  unint64_t v15;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController);
  if (v1)
  {
    v14 = v1;
    v2 = objc_msgSend(v14, "popoverPresentationController");
    if (v2)
    {
      v3 = v2;
      sub_1005C04EC();
      if (v4)
      {
        v5 = v4;
        v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_generalElementsBaseButtons);
        v15 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_inspectorElementsBaseButtons);
        swift_bridgeObjectRetain(v15);
        swift_bridgeObjectRetain(v6);
        sub_10061EC48(v7);
        v8 = v5;
        v9 = (uint64_t)sub_1005C49C8(v15, (uint64_t)v8);
        swift_bridgeObjectRelease();

        if ((unint64_t)v9 >> 62)
        {
          if (v9 < 0)
            v12 = v9;
          else
            v12 = v9 & 0xFFFFFFFFFFFFFF8;
          v13 = sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
          _bridgeCocoaArray<A>(_:)(v12, v13);
        }
        else
        {
          v10 = swift_bridgeObjectRetain(v9);
          dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v10);
          sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
        }
        swift_bridgeObjectRelease();
        sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
        isa = Array._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v3, "setPassthroughViews:", isa, swift_bridgeObjectRelease().n128_f64[0]);

      }
    }

  }
}

void sub_1005C04EC()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  char v13;
  uint64_t v14;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController);
  if (v1)
  {
    v2 = objc_msgSend(v1, "topViewController");
    if (v2)
    {
      v3 = v2;
      v4 = type metadata accessor for CRLiOSMiniFormatterPopoverContainerViewController();
      v5 = swift_dynamicCastClass(v3, v4);
      if (!v5)
        goto LABEL_11;
      v6 = *(void **)(v5 + OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_builder);
      v7 = v6;

      if (!v6)
        return;
      v8 = *(id *)&v7[OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_element];

      v9 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_inspectorElementsBuilders);
      v3 = v8;
      swift_bridgeObjectRetain(v9);
      v11 = sub_1005C4898(v10, (uint64_t)v3);
      v13 = v12;
      swift_bridgeObjectRelease(v9);

      if ((v13 & 1) != 0)
      {
LABEL_11:

      }
      else
      {
        v14 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_inspectorElementsBaseButtons);
        if ((v14 & 0xC000000000000001) != 0)
        {
          swift_bridgeObjectRetain(*(_QWORD *)(v0
                                             + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_inspectorElementsBaseButtons));
          specialized _ArrayBuffer._getElementSlowPath(_:)(v11, v14);
          swift_bridgeObjectRelease(v14);
          goto LABEL_10;
        }
        if ((v11 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v11 < *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          *(id *)(v14 + 8 * v11 + 32);
LABEL_10:

          return;
        }
        __break(1u);
      }
    }
  }
}

void sub_1005C0654(uint64_t a1, void *a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  double v18;
  double v19;
  double v20;
  void *v21;
  double v22;
  double v23;
  uint64_t v24;
  void *v25;
  double v26;
  double v27;
  void *v28;
  void *v29;
  double v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  double v36;
  double v37;
  id v38;

  v3 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController);
  if (v3)
  {
    v4 = v2;
    v38 = v3;
    v7 = objc_msgSend(v38, "visibleViewController");
    if (!v7)
    {
LABEL_30:

      return;
    }
    v8 = v7;
    v9 = type metadata accessor for CRLiOSMiniFormatterPopoverContainerViewController();
    v10 = swift_dynamicCastClass(v8, v9);
    if (!v10)
      goto LABEL_28;
    v11 = v10;
    sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
    if ((static NSObject.== infix(_:_:)(v11, a1) & 1) == 0)
    {
      v28 = v38;
      v38 = v8;
LABEL_29:

      goto LABEL_30;
    }
    v12 = *(void **)(v4 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedWrappedNavigationController);
    if (!v12 || (v13 = objc_msgSend(v12, "presentationController")) == 0)
    {
LABEL_28:
      v28 = v8;
      goto LABEL_29;
    }
    v14 = v13;
    v15 = objc_opt_self(UIPopoverPresentationController);
    v16 = swift_dynamicCastObjCClass(v14, v15);
    if (!v16)
    {
      v29 = v14;
LABEL_27:

      goto LABEL_28;
    }
    v21 = (void *)v16;
    if (a2)
    {
      objc_msgSend(a2, "systemLayoutSizeFittingSize:", UILayoutFittingCompressedSize.width, UILayoutFittingCompressedSize.height);
      if (qword_1013DCAD8 != -1)
      {
        v36 = v23;
        v37 = v22;
        swift_once(&qword_1013DCAD8, sub_1005B4E04);
        v22 = v37;
        v23 = v36;
      }
      v24 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_miniFormatterVC);
      if (v24)
      {
        v25 = *(void **)(v24 + OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_repTrackingViewHelper);
        if (v25)
        {
          v26 = v22 + *((double *)&xmmword_10147EA70 + 1) + unk_10147EA88;
          v27 = v23 + *(double *)&xmmword_10147EA70 + *(double *)&qword_10147EA80;
          goto LABEL_20;
        }
      }
    }
    else
    {
      sub_1005B6148(v17, v18, v19, v20);
      v31 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_miniFormatterVC);
      if (v31)
      {
        v25 = *(void **)(v31 + OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_repTrackingViewHelper);
        if (v25)
        {
          v26 = v22;
          v27 = v30;
LABEL_20:
          v32 = v25;
          v33 = sub_10070DD5C();

          v34 = *(unsigned __int8 *)(v33 + 56);
          LOBYTE(v32) = sub_1008E33D4(v26, v27 + 10.0);
          *(_QWORD *)&v22 = swift_release(v33).n128_u64[0];
          if ((v32 & 1) != 0)
          {
            if (v34)
              v35 = 2;
            else
              v35 = 1;
          }
          else
          {
            v35 = 3;
          }
          goto LABEL_26;
        }
      }
    }
    v35 = 2;
LABEL_26:
    objc_msgSend(v21, "setPermittedArrowDirections:", v35, v22);
    v29 = v38;
    v38 = v14;
    goto LABEL_27;
  }
}

void sub_1005C08F4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_inspectorElementsBuilders));
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_inspectorElementsBaseButtons));
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_generalElementsBuilders));
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_generalElementsBaseButtons));
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_canvasElementsBuilders));

  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_repsForCurrentSelectionPath));
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_flattenedBoardItemsForCurrentSelectionPath));

}

id sub_1005C0A10()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSMiniFormatterPresenter();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLiOSMiniFormatterPresenter()
{
  return objc_opt_self(_TtC8Freeform28CRLiOSMiniFormatterPresenter);
}

void sub_1005C0B88(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  __n128 v30;
  void *v31;
  int64_t v32;
  unint64_t v33;
  uint64_t v34;
  id v35;
  Swift::Int v36;
  uint64_t v37;
  unint64_t v38;
  id v39;
  char v40;
  uint64_t v41;
  id v42;
  char v43;
  uint64_t v44;
  int64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  _QWORD v51[5];

  v2 = a2;
  v4 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
  {
    if (a2 < 0)
      v5 = a2;
    else
      v5 = a2 & 0xFFFFFFFFFFFFFF8;
    if (!__CocoaSet.count.getter(v5))
      return;
  }
  else if (!*(_QWORD *)(a2 + 16))
  {
    return;
  }
  v6 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v7 = a1;
    else
      v7 = a1 & 0xFFFFFFFFFFFFFF8;
    if (!__CocoaSet.count.getter(v7))
      return;
  }
  else if (!*(_QWORD *)(a1 + 16))
  {
    return;
  }
  if (v4)
  {
    if (v2 < 0)
      v8 = v2;
    else
      v8 = v2 & 0xFFFFFFFFFFFFFF8;
    v9 = __CocoaSet.count.getter(v8);
    if (v6)
      goto LABEL_20;
  }
  else
  {
    v9 = *(_QWORD *)(v2 + 16);
    if (v6)
    {
LABEL_20:
      if (a1 < 0)
        v10 = a1;
      else
        v10 = a1 & 0xFFFFFFFFFFFFFF8;
      v11 = __CocoaSet.count.getter(v10);
      goto LABEL_26;
    }
  }
  v11 = *(_QWORD *)(a1 + 16);
LABEL_26:
  if (v9 >= v11)
    v12 = a1;
  else
    v12 = v2;
  if (v9 < v11)
    v2 = a1;
  if ((v12 & 0xC000000000000001) != 0)
  {
    if (v12 < 0)
      v13 = v12;
    else
      v13 = v12 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v12);
    swift_bridgeObjectRetain(v2);
    v14 = __CocoaSet.makeIterator()(v13);
    v15 = type metadata accessor for CRLBoardItem(0);
    v16 = sub_1004B7878((unint64_t *)&qword_1013E4190, type metadata accessor for CRLBoardItem, (uint64_t)&protocol conformance descriptor for NSObject);
    Set.Iterator.init(_cocoa:)(v51, v14, v15, v16);
    v12 = v51[0];
    v46 = v51[1];
    v17 = v51[2];
    v18 = v51[3];
    v19 = v51[4];
  }
  else
  {
    v20 = -1 << *(_BYTE *)(v12 + 32);
    v46 = v12 + 56;
    v17 = ~v20;
    v21 = -v20;
    if (v21 < 64)
      v22 = ~(-1 << v21);
    else
      v22 = -1;
    v19 = v22 & *(_QWORD *)(v12 + 56);
    swift_bridgeObjectRetain(v12);
    swift_bridgeObjectRetain(v2);
    v18 = 0;
  }
  v23 = type metadata accessor for CRLBoardItem(0);
  v45 = (unint64_t)(v17 + 64) >> 6;
  v24 = v2 & 0xC000000000000001;
  v47 = v2 + 56;
  v48 = v23;
  v44 = v12;
  while (1)
  {
    while (1)
    {
      v26 = v18;
      if ((v12 & 0x8000000000000000) == 0)
        break;
      v29 = __CocoaSet.Iterator.next()(v23);
      if (!v29)
        goto LABEL_74;
      v49 = v29;
      swift_dynamicCast(&v50, &v49, (char *)&type metadata for Swift.AnyObject + 8, v48, 7);
      v31 = v50;
      if (v24)
        goto LABEL_41;
LABEL_63:
      if (!*(_QWORD *)(v2 + 16))
        goto LABEL_70;
      v36 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
      v37 = -1 << *(_BYTE *)(v2 + 32);
      v38 = v36 & ~v37;
      if (((*(_QWORD *)(v47 + ((v38 >> 3) & 0xFFFFFFFFFFFFF8)) >> v38) & 1) == 0)
        goto LABEL_70;
      v39 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v38);
      v40 = static NSObject.== infix(_:_:)(v39, v31);

      if ((v40 & 1) != 0)
      {
LABEL_71:

        swift_bridgeObjectRelease(v2);
        v12 = v44;
LABEL_73:
        sub_1004D284C(v12);
        return;
      }
      v41 = ~v37;
      while (1)
      {
        v38 = (v38 + 1) & v41;
        if (((*(_QWORD *)(v47 + ((v38 >> 3) & 0xFFFFFFFFFFFFF8)) >> v38) & 1) == 0)
          break;
        v42 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v38);
        v43 = static NSObject.== infix(_:_:)(v42, v31);

        if ((v43 & 1) != 0)
          goto LABEL_71;
      }
LABEL_70:

      v12 = v44;
      v24 = v2 & 0xC000000000000001;
    }
    if (v19)
    {
      v27 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      v28 = v27 | (v18 << 6);
      goto LABEL_62;
    }
    v32 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      return;
    }
    if (v32 >= v45)
      goto LABEL_74;
    v33 = *(_QWORD *)(v46 + 8 * v32);
    ++v18;
    if (!v33)
    {
      v18 = v26 + 2;
      if (v26 + 2 >= v45)
        goto LABEL_74;
      v33 = *(_QWORD *)(v46 + 8 * v18);
      if (!v33)
      {
        v18 = v26 + 3;
        if (v26 + 3 >= v45)
          goto LABEL_74;
        v33 = *(_QWORD *)(v46 + 8 * v18);
        if (!v33)
        {
          v18 = v26 + 4;
          if (v26 + 4 >= v45)
            goto LABEL_74;
          v33 = *(_QWORD *)(v46 + 8 * v18);
          if (!v33)
            break;
        }
      }
    }
LABEL_61:
    v19 = (v33 - 1) & v33;
    v28 = __clz(__rbit64(v33)) + (v18 << 6);
LABEL_62:
    v31 = *(void **)(*(_QWORD *)(v12 + 48) + 8 * v28);
    v50 = v31;
    v35 = v31;
    if (!v24)
      goto LABEL_63;
LABEL_41:
    v25 = __CocoaSet.contains(_:)(v30);

    if ((v25 & 1) != 0)
    {
      swift_bridgeObjectRelease(v2);
      goto LABEL_73;
    }
  }
  v34 = v26 + 5;
  while (v45 != v34)
  {
    v33 = *(_QWORD *)(v46 + 8 * v34++);
    if (v33)
    {
      v18 = v34 - 1;
      goto LABEL_61;
    }
  }
LABEL_74:
  v50 = 0;
  swift_bridgeObjectRelease(v2);
  sub_1004D284C(v12);
}

void sub_1005C0FEC()
{
  _BYTE *v0;
  _BYTE *v1;
  id v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  id v18;
  char *v19;
  id v20;
  double v21;
  void *v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  void *v29;
  char *v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  id v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  void *v49;
  void *v50;
  id v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  BOOL v56;
  uint64_t v57;
  char *v58;
  unint64_t v59;
  char *v60;
  _BYTE v61[40];

  v1 = v0;
  v2 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_editorController], "selectionPath");
  v3 = OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_selectionPath;
  v4 = *(void **)&v0[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_selectionPath];
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_selectionPath] = v2;
  v5 = v2;

  sub_1005BA014();
  v6 = OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController;
  v7 = *(void **)&v1[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController];
  if (v7)
  {
    v8 = objc_msgSend(v7, "topViewController");
    if (v8)
    {
      v9 = v8;
      v10 = type metadata accessor for CRLiOSMiniFormatterPopoverContainerViewController();
      v11 = swift_dynamicCastClass(v9, v10);
      if (v11)
      {
        v12 = *(void **)(v11 + OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_builder);
        v13 = v12;

        if (v12)
        {

          v1[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_shouldRepositionSecondLayerPopover] = 1;
          v1[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_shouldUpdateSecondLayerPopoverPassthroughViews] = 1;
          v1[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_shouldUpdateSecondLayerPermittedArrowDirections] = 1;
        }
      }
      else
      {

      }
    }
  }
  v14 = OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_miniFormatterVC;
  v15 = *(void **)&v1[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_miniFormatterVC];
  if (v15)
  {
    v16 = *(void **)&v1[v3];
    if (v16)
    {
      v17 = OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_isUpdatingMiniFormatter;
      v1[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_isUpdatingMiniFormatter] = 1;
      v18 = v15;
      v19 = v1;
      v20 = v16;
      sub_1005BB864(0, v19, v15, 0, v21);

      sub_1005BA998(v20, 0);
      v1[v17] = 0;
    }
  }
  v22 = *(void **)&v1[v6];
  if (v22)
  {
    v23 = objc_msgSend(v22, "topViewController");
    if (v23)
    {
      v24 = v23;
      v25 = type metadata accessor for CRLiOSMiniFormatterPopoverContainerViewController();
      v26 = swift_dynamicCastClass(v24, v25);
      if (!v26)
      {
LABEL_16:

        goto LABEL_17;
      }
      v27 = *(void **)(v26 + OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_builder);
      v28 = v27;

      if (v27)
      {

        sub_1005C04EC();
        if (v29)
        {
          v24 = v29;
          *((_BYTE *)v29 + OBJC_IVAR____TtC8Freeform34CRLiOSMiniFormatterBaseLayerButton_isPresentingPopover) = 1;
          objc_msgSend(v29, "setHighlighted:", 1);
          goto LABEL_16;
        }
      }
    }
  }
LABEL_17:
  v30 = *(char **)&v1[v14];
  if (!v30)
    return;
  v31 = *(void **)&v30[OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_stackViewForDisplay];
  v58 = v30;
  v32 = objc_msgSend(v31, "arrangedSubviews");
  v33 = sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
  v34 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v32, v33);

  if ((unint64_t)v34 >> 62)
  {
    if (v34 < 0)
      v57 = v34;
    else
      v57 = v34 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v34);
    v35 = _CocoaArrayWrapper.endIndex.getter(v57);
    v36 = (_QWORD *)&unk_1013E5000;
    if (v35)
      goto LABEL_20;
LABEL_42:
    swift_bridgeObjectRelease_n(v34, 2);

    return;
  }
  v35 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v34);
  v36 = &unk_1013E5000;
  if (!v35)
    goto LABEL_42;
LABEL_20:
  if (v35 >= 1)
  {
    v37 = 0;
    v38 = (uint64_t)&v58[OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_delegate];
    v39 = v34 & 0xC000000000000001;
    v40 = (uint64_t *)&unk_1013E56A0;
    v59 = v34 & 0xC000000000000001;
    while (1)
    {
      v42 = v39
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v37, v34)
          : *(id *)(v34 + 8 * v37 + 32);
      v43 = v42;
      sub_1004E90B0(v38, (uint64_t)v61);
      v44 = sub_1004B804C(v40);
      v45 = type metadata accessor for CRLiOSMiniFormatterPresenter();
      if (swift_dynamicCast(&v60, v61, v44, v45, 6))
        break;
      v41 = 1;
LABEL_23:
      ++v37;
      objc_msgSend(v43, "setIsAccessibilityElement:", v41);

      if (v35 == v37)
        goto LABEL_42;
    }
    v46 = v34;
    v47 = v35;
    v48 = v40;
    v49 = v60;
    v50 = *(void **)&v60[v36[187]];
    if (v50 && (v51 = objc_msgSend(v50, "topViewController")) != 0)
    {
      v52 = v51;
      v53 = type metadata accessor for CRLiOSMiniFormatterPopoverContainerViewController();
      v54 = swift_dynamicCastClass(v52, v53);
      if (v54)
      {
        v55 = *(_QWORD *)(v54 + OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_builder);

        v56 = v55 == 0;
        v36 = (_QWORD *)&unk_1013E5000;
        v41 = v56;
        goto LABEL_36;
      }

    }
    else
    {

    }
    v41 = 1;
LABEL_36:
    v40 = v48;
    v35 = v47;
    v34 = v46;
    v39 = v59;
    goto LABEL_23;
  }
  __break(1u);
}

void sub_1005C1434()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedWrappedNavigationController);
  if (v1)
  {
    v7 = v1;
    if ((objc_msgSend(v7, "isBeingDismissed") & 1) == 0)
    {
      v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_canvasViewController);
      v3 = objc_msgSend(v2, "presentedViewController");
      if (v3)
      {
        v4 = v3;
        sub_1004B8930(0, (unint64_t *)&qword_1013F6620, UIViewController_ptr);
        v5 = v7;
        v6 = v4;
        LOBYTE(v4) = static NSObject.== infix(_:_:)(v6, v5);

        if ((v4 & 1) != 0)
        {
          objc_msgSend(v2, "dismissViewControllerAnimated:completion:", 1, 0);
          sub_1005BBE58();
        }
      }
    }

  }
}

uint64_t sub_1005C157C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  double v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_repsForCurrentSelectionPath);
  if (!v1)
    return 0;
  if ((v1 & 0xC000000000000001) != 0)
  {
    if (v1 >= 0)
      v2 = v1 & 0xFFFFFFFFFFFFFF8;
    else
      v2 = v1;
    swift_bridgeObjectRetain(v1);
    if (__CocoaSet.count.getter(v2) != 1)
      goto LABEL_20;
  }
  else
  {
    v3 = *(_QWORD *)(v1 + 16);
    swift_bridgeObjectRetain(v1);
    if (v3 != 1)
    {
LABEL_20:
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  v4 = (void *)sub_100857EA4(v1);
  *(_QWORD *)&v5 = swift_bridgeObjectRelease().n128_u64[0];
  if (v4)
  {
    v6 = objc_msgSend(v4, "knobs", v5);
    v7 = sub_1004B8930(0, &qword_1013E56E0, off_101229808);
    v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);

    if ((unint64_t)v8 >> 62)
      goto LABEL_24;
    v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    while (v9)
    {
      v10 = 4;
      while (1)
      {
        v11 = (v8 & 0xC000000000000001) != 0
            ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v10 - 4, v8)
            : *(id *)(v8 + 8 * v10);
        v12 = v11;
        v13 = v10 - 3;
        if (__OFADD__(v10 - 4, 1))
          break;
        v14 = type metadata accessor for CRLConnectionLineKnob();
        if (swift_dynamicCastClass(v12, v14))
        {
          swift_bridgeObjectRelease();

          return 1;
        }

        ++v10;
        if (v13 == v9)
          goto LABEL_19;
      }
      __break(1u);
LABEL_24:
      if (v8 < 0)
        v16 = v8;
      else
        v16 = v8 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v8);
      v9 = _CocoaArrayWrapper.endIndex.getter(v16);
      swift_bridgeObjectRelease();
    }
LABEL_19:

    goto LABEL_20;
  }
  return 0;
}

void sub_1005C1730(void *a1, void *a2, void *a3)
{
  void *v3;
  id v7;
  char *v8;
  id v9;
  double v10;
  double v11;
  double v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  double v17;
  double v18;
  id v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  char *v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  unint64_t v32;
  uint64_t v33;
  id v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  void *v39;
  id v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  BOOL v47;
  uint64_t v48;
  char *v49;
  unint64_t v50;
  char *v51;
  objc_class *v52;
  char *v53;
  _BYTE v54[40];

  v52 = (objc_class *)type metadata accessor for CRLiOSMiniFormatterPopoverContainerViewController();
  objc_allocWithZone(v52);
  v7 = a1;
  v8 = v3;
  v9 = a3;
  v51 = sub_1005B4E34(v7, a3, 0, 0, (uint64_t)v3, (uint64_t)&off_10126F768, 0.0);
  objc_msgSend(v7, "systemLayoutSizeFittingSize:", UILayoutFittingCompressedSize.width, UILayoutFittingCompressedSize.height);
  v11 = v10;
  v13 = v12;
  if (qword_1013DCAD8 != -1)
    swift_once(&qword_1013DCAD8, sub_1005B4E04);
  v14 = OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_miniFormatterVC;
  v15 = *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_miniFormatterVC];
  if (v15
    && (v16 = *(void **)(v15 + OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_repTrackingViewHelper)) != 0)
  {
    v17 = v11 + *((double *)&xmmword_10147EA70 + 1) + unk_10147EA88;
    v18 = v13 + *(double *)&xmmword_10147EA70 + *(double *)&qword_10147EA80;
    v19 = v16;
    v20 = sub_10070DD5C();

    v21 = *(unsigned __int8 *)(v20 + 56);
    LOBYTE(v19) = sub_1008E33D4(v17, v18 + 10.0);
    swift_release(v20);
    if ((v19 & 1) != 0)
    {
      if (v21)
        v22 = 2;
      else
        v22 = 1;
    }
    else
    {
      v22 = 3;
    }
  }
  else
  {
    v22 = 2;
  }
  sub_1005C1AF8((uint64_t)v51, a2, v22);
  v23 = *(char **)&v8[v14];
  if (!v23)
  {

    return;
  }
  v24 = *(void **)&v23[OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_stackViewForDisplay];
  v49 = v23;
  v25 = objc_msgSend(v24, "arrangedSubviews");
  v26 = sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
  v27 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v25, v26);

  if ((unint64_t)v27 >> 62)
  {
    if (v27 < 0)
      v48 = v27;
    else
      v48 = v27 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v27);
    v28 = _CocoaArrayWrapper.endIndex.getter(v48);
    if (v28)
      goto LABEL_14;
LABEL_35:
    swift_bridgeObjectRelease_n(v27, 2);

    return;
  }
  v28 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v27);
  if (!v28)
    goto LABEL_35;
LABEL_14:
  if (v28 >= 1)
  {
    v29 = 0;
    v30 = (uint64_t)&v49[OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_delegate];
    v31 = (uint64_t *)&unk_1013E56A0;
    v32 = v27 & 0xC000000000000001;
    v50 = v27 & 0xC000000000000001;
    while (1)
    {
      if (v32)
        v34 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v29, v27);
      else
        v34 = *(id *)(v27 + 8 * v29 + 32);
      v35 = v34;
      sub_1004E90B0(v30, (uint64_t)v54);
      v36 = sub_1004B804C(v31);
      v37 = type metadata accessor for CRLiOSMiniFormatterPresenter();
      if (swift_dynamicCast(&v53, v54, v36, v37, 6))
      {
        v38 = v53;
        v39 = *(void **)&v53[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController];
        if (v39 && (v40 = objc_msgSend(v39, "topViewController")) != 0)
        {
          v41 = v40;
          v42 = swift_dynamicCastClass(v40, v52);
          if (v42)
          {
            v43 = v30;
            v44 = v27;
            v45 = v31;
            v46 = *(_QWORD *)(v42 + OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_builder);

            v47 = v46 == 0;
            v31 = v45;
            v27 = v44;
            v30 = v43;
            v32 = v50;
            v33 = v47;
            goto LABEL_18;
          }

        }
        else
        {

        }
      }
      v33 = 1;
LABEL_18:
      ++v29;
      objc_msgSend(v35, "setIsAccessibilityElement:", v33);

      if (v28 == v29)
        goto LABEL_35;
    }
  }
  __break(1u);
}

double sub_1005C1AF8(uint64_t a1, void *a2, uint64_t a3)
{
  char *v3;
  char *v4;
  id v8;
  objc_class *v9;
  char *v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  Class isa;
  void *v24;
  id v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  char *v30;
  void *v31;
  _QWORD *v32;
  uint64_t (*v33)(void);
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  char *v39;
  id v40;
  uint64_t v41;
  char *v42;
  id v43;
  uint64_t v44;
  double result;
  uint64_t v46;
  uint64_t v47;
  unint64_t aBlock[5];
  uint64_t v49;
  objc_super v50;

  if ((v3[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_isInProcessOfPresentingSecondLayerPopover] & 1) == 0)
  {
    v4 = v3;
    v3[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_isInProcessOfPresentingSecondLayerPopover] = 1;
    sub_1005BBCBC(1, 0, 0);
    v8 = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "initWithRootViewController:", a1);
    objc_msgSend(v8, "setNavigationBarHidden:animated:", 1, 0);
    objc_msgSend(v8, "setDelegate:", v3);
    v9 = (objc_class *)type metadata accessor for CRLiOSMiniFormatterPopoverWrappedNavigationController();
    v10 = (char *)objc_allocWithZone(v9);
    *(_QWORD *)&v10[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterPopoverWrappedNavigationController_wrappedNavigationController] = v8;
    v50.receiver = v10;
    v50.super_class = v9;
    v11 = v8;
    v12 = objc_msgSendSuper2(&v50, "initWithNibName:bundle:", 0, 0);
    objc_msgSend(v12, "setModalPresentationStyle:", 7);
    v13 = *(void **)&v4[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedWrappedNavigationController];
    *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedWrappedNavigationController] = v12;
    v14 = v12;

    v15 = objc_msgSend(v14, "popoverPresentationController");
    if (v15)
    {
      v16 = v15;
      objc_msgSend(v15, "setDelegate:", v4);
      objc_msgSend(v16, "setSourceView:", a2);
      objc_msgSend(v16, "setPermittedArrowDirections:", a3);
      v17 = *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_generalElementsBaseButtons];
      aBlock[0] = *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_inspectorElementsBaseButtons];
      swift_bridgeObjectRetain(aBlock[0]);
      swift_bridgeObjectRetain(v17);
      sub_10061EC48(v18);
      v19 = a2;
      v20 = (uint64_t)sub_1005C49C8(aBlock[0], (uint64_t)v19);
      swift_bridgeObjectRelease(aBlock[0]);

      if ((unint64_t)v20 >> 62)
      {
        if (v20 < 0)
          v46 = v20;
        else
          v46 = v20 & 0xFFFFFFFFFFFFFF8;
        v47 = sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
        v22 = _bridgeCocoaArray<A>(_:)(v46, v47);
      }
      else
      {
        v21 = swift_bridgeObjectRetain(v20);
        dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v21);
        sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
        v22 = v20;
      }
      swift_bridgeObjectRelease(v20);
      sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v16, "setPassthroughViews:", isa, swift_bridgeObjectRelease(v22).n128_f64[0]);

      v24 = *(void **)&v4[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController];
      *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController] = v11;
      v25 = v11;

      v26 = *(void **)&v4[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_canvasViewController];
      v27 = swift_allocObject(&unk_10126F8E0, 24, 7);
      *(_QWORD *)(v27 + 16) = v4;
      aBlock[4] = (unint64_t)sub_1005C5224;
      v49 = v27;
      aBlock[0] = (unint64_t)_NSConcreteStackBlock;
      aBlock[1] = *(_QWORD *)"";
      aBlock[2] = (unint64_t)sub_1005D2FC0;
      aBlock[3] = (unint64_t)&unk_10126F8F8;
      v28 = _Block_copy(aBlock);
      v29 = v49;
      v30 = v4;
      objc_msgSend(v26, "presentViewController:animated:completion:", v14, 1, v28, swift_release(v29).n128_f64[0]);
      _Block_release(v28);
      v31 = &_swiftEmptySetSingleton;
      aBlock[0] = (unint64_t)&_swiftEmptySetSingleton;
      if (*(_QWORD *)&v30[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_miniFormatterVC])
      {
        v31 = sub_1005BC570();
        aBlock[0] = (unint64_t)v31;
      }
      v32 = *(_QWORD **)&v30[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_auxiliaryPresentedBuilder];
      if (v32)
      {
        v33 = *(uint64_t (**)(void))((swift_isaMask & *v32) + 0x178);
        v34 = v32;
        v35 = v33();
        sub_100511EB8(v35);

        v31 = (void *)aBlock[0];
      }
      v36 = OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_observedObjects;
      v37 = *(_QWORD *)&v30[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_observedObjects];
      *(_QWORD *)&v30[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_observedObjects] = v31;
      v38 = *(void **)&v30[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_changeNotifier];
      if (v38)
      {
        v39 = v30;
        v40 = v38;
        sub_1005C4B9C(v37, v40, (uint64_t)v39, (SEL *)&selRef_removeObserver_forChangeSource_);

        v41 = *(_QWORD *)&v30[v36];
        v42 = v39;
        v43 = v40;
        swift_bridgeObjectRetain(v41);
        sub_1005C4B9C(v44, v43, (uint64_t)v42, (SEL *)&selRef_addObserver_forChangeSource_);

        swift_bridgeObjectRelease(v37);
        swift_bridgeObjectRelease(v41);

      }
      else
      {

        *(_QWORD *)&result = swift_bridgeObjectRelease(v37).n128_u64[0];
      }
    }
    else
    {

    }
  }
  return result;
}

void sub_1005C1F98()
{
  uint64_t v0;
  id v1;
  unsigned __int8 v2;
  id v3;
  id v4;

  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_canvasViewController), "traitCollection");
  if ((objc_msgSend((id)objc_opt_self(UIDevice), "crl_phoneUI") & 1) != 0)
  {

  }
  else
  {
    v2 = objc_msgSend(v1, "crl_isCompactWidth");

    if ((v2 & 1) == 0)
      return;
  }
  v3 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_canvasLayerHosting), "interactiveCanvasController");
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v3, "unobscuredFrameDidChange");
    objc_msgSend(v4, "scrollCurrentSelectionToVisibleWithOptions:", 1);

  }
}

void sub_1005C2088(void *a1, void *a2)
{
  char *v2;
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  id v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  id v20;
  void *v21;
  double v22;
  CGFloat v23;
  double v24;
  CGFloat v25;
  double v26;
  CGFloat v27;
  double v28;
  CGFloat v29;
  CGFloat v30;
  double v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  double v35;
  CGFloat v36;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double v41;
  double v42;
  double v43;
  double v44;
  double MidX;
  double MidY;
  double v47;
  id v48;
  unsigned __int8 v49;
  void *v50;
  uint64_t v51;
  void *v52;
  CGFloat v53;
  CGFloat v54;
  CGFloat v55;
  CGFloat v56;
  id v57;
  _QWORD aBlock[5];
  uint64_t v59;
  CGRect v60;
  CGRect v61;
  CGRect v62;
  CGRect v63;
  CGRect v64;
  CGRect v65;
  CGRect v66;
  CGRect v67;

  v4 = *(void **)&v2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedAuxiliaryViewController];
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedAuxiliaryViewController] = a1;
  v5 = a1;

  v6 = *(void **)&v2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_auxiliaryPresentedBuilder];
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_auxiliaryPresentedBuilder] = a2;
  v7 = a2;

  objc_msgSend(v5, "setModalPresentationStyle:", 7);
  v8 = objc_msgSend(v5, "view");
  if (v8)
  {
    v9 = v8;
    objc_msgSend(v8, "setAccessibilityViewIsModal:", 1);

    v10 = objc_msgSend(v5, "popoverPresentationController");
    if (v10)
    {
      v57 = v10;
      objc_msgSend(v10, "setDelegate:", v2);
      objc_msgSend(v57, "setPermittedArrowDirections:", 12);
      v11 = *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_repsForCurrentSelectionPath];
      if (v11)
      {
        v12 = objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_canvasViewController], "canvasView", swift_bridgeObjectRetain(*(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_repsForCurrentSelectionPath]).n128_f64[0]);
        objc_msgSend(v57, "setSourceView:", v12);

        v13 = sub_1008E3598(v11);
        v15 = v14;
        v17 = v16;
        v19 = v18;
        v20 = objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_canvasLayerHosting], "interactiveCanvasController", swift_bridgeObjectRelease(v11).n128_f64[0]);
        if (v20)
        {
          v21 = v20;
          objc_msgSend(v20, "convertUnscaledToBoundsRect:", v13, v15, v17, v19);
          v23 = v22;
          v25 = v24;
          v27 = v26;
          v29 = v28;
          objc_msgSend(v21, "visibleScaledRectForCanvasUI");
          v67.origin.x = v30;
          v53 = v30;
          v32 = v31;
          v34 = v33;
          v36 = v35;
          v60.origin.x = v23;
          v60.origin.y = v25;
          v60.size.width = v27;
          v60.size.height = v29;
          v67.origin.y = v32;
          v67.size.width = v34;
          v67.size.height = v36;
          v61 = CGRectIntersection(v60, v67);
          x = v61.origin.x;
          y = v61.origin.y;
          width = v61.size.width;
          height = v61.size.height;
          v41 = CGRectGetWidth(v61);
          v54 = x;
          v55 = y;
          v62.origin.x = x;
          v62.origin.y = y;
          v56 = width;
          v62.size.width = width;
          v42 = height;
          v62.size.height = height;
          v43 = v41 * CGRectGetHeight(v62);
          v63.origin.x = v53;
          v63.origin.y = v32;
          v63.size.width = v34;
          v63.size.height = v36;
          v44 = CGRectGetWidth(v63);
          v64.origin.x = v53;
          v64.origin.y = v32;
          v64.size.width = v34;
          v64.size.height = v36;
          if (v44 * CGRectGetHeight(v64) >= v43 + v43)
          {
            MidY = v55;
            v47 = v56;
            MidX = v54;
          }
          else
          {
            v65.origin.x = x;
            v65.origin.y = v55;
            v65.size.width = v56;
            v65.size.height = height;
            MidX = CGRectGetMidX(v65);
            v66.origin.x = x;
            v66.origin.y = v55;
            v66.size.width = v56;
            v66.size.height = height;
            MidY = CGRectGetMidY(v66);
            v47 = 1.0;
            v42 = 1.0;
          }

        }
        else
        {
          v47 = 0.0;
          v42 = 0.0;
          MidX = 0.0;
          MidY = 0.0;
        }
        objc_msgSend(v57, "setSourceRect:", MidX, MidY, v47, v42);
      }
      else
      {
        sub_100757E04(&_mh_execute_header, (uint64_t)"presentAuxiliary(popoverVC:from:)", 33, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Formatters/CRLiOSMiniFormatterPresenter.swift", 103, 2, 1085, "Cannot present an auxiliary popover without any reps selected on casnvas", 72, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"presentAuxiliary(popoverVC:from:)", 33, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Formatters/CRLiOSMiniFormatterPresenter.swift", 103, 2u, 1085, (uint64_t)"Cannot present an auxiliary popover without any reps selected on casnvas", 72, 2u);
      }
      objc_msgSend(v2, "dismissSecondLayerPopover");
      v48 = objc_msgSend(v5, "traitCollection");
      if ((objc_msgSend((id)objc_opt_self(UIDevice), "crl_phoneUI") & 1) != 0)
      {

      }
      else if (!v48
             || (v49 = objc_msgSend(v48, "crl_isCompactWidth"), v48, (v49 & 1) == 0))
      {
        sub_1005BB634(1, 1, 0);
      }
      if (v11)
      {
        v50 = *(void **)&v2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_canvasViewController];
        v51 = swift_allocObject(&unk_10126F890, 24, 7);
        *(_QWORD *)(v51 + 16) = v5;
        aBlock[4] = sub_1005C3B00;
        v59 = v51;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = *(_QWORD *)"";
        aBlock[2] = sub_1005D2FC0;
        aBlock[3] = &unk_10126F8A8;
        v52 = _Block_copy(aBlock);
        objc_msgSend(v50, "presentViewController:animated:completion:", v5, 1, v52, swift_release(v59).n128_f64[0]);

        _Block_release(v52);
      }
      else
      {

      }
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_1005C25B0(void *a1)
{
  UIAccessibilityNotifications v1;
  id v2;

  v1 = UIAccessibilityScreenChangedNotification;
  v2 = objc_msgSend(a1, "view");
  UIAccessibilityPostNotification(v1, v2);

}

void sub_1005C2604(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  char v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  double v15;
  double v16;
  double v17;
  double v18;
  id v19;

  v2 = v1;
  v4 = OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController;
  v5 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController);
  if (v5)
  {
    v6 = objc_msgSend(v5, "topViewController");
    if (v6)
    {
      v7 = v6;
      sub_1004B8930(0, (unint64_t *)&qword_1013F6620, UIViewController_ptr);
      v8 = a1;
      v9 = v7;
      v10 = static NSObject.== infix(_:_:)(v9, v8);

      if ((v10 & 1) != 0 && (objc_msgSend(v8, "isBeingPresented") & 1) == 0)
      {
        v11 = *(void **)(v2 + v4);
        if (v11)
        {
          v12 = *(void **)(v2
                         + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedWrappedNavigationController);
          if (v12)
          {
            v13 = v11;
            v14 = v12;
            sub_1005B6148(v15, v16, v17, v18);
            objc_msgSend(v13, "setPreferredContentSize:");
            v19 = v14;
            objc_msgSend(v13, "preferredContentSize");
            objc_msgSend(v19, "setPreferredContentSize:");

          }
        }
      }
    }
  }
}

void sub_1005C2754()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  double v9;
  double v10;
  double v11;
  double v12;
  id v13;
  void *v14;
  id v15;

  v1 = OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController);
  if (v2)
  {
    v3 = objc_msgSend(v2, "topViewController");
    if (v3)
    {
      v15 = v3;
      v4 = type metadata accessor for CRLiOSMiniFormatterPopoverContainerViewController();
      if (swift_dynamicCastClass(v15, v4)
        && (v5 = *(void **)(v0 + v1)) != 0
        && (v6 = *(void **)(v0
                          + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedWrappedNavigationController)) != 0)
      {
        v7 = v5;
        v8 = v6;
        sub_1005B6148(v9, v10, v11, v12);
        objc_msgSend(v7, "setPreferredContentSize:");
        v13 = v8;
        objc_msgSend(v7, "preferredContentSize");
        objc_msgSend(v13, "setPreferredContentSize:");

        v14 = v13;
      }
      else
      {
        v14 = v15;
      }

    }
  }
}

double sub_1005C2858()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  double result;
  uint64_t v15;
  char *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  __n128 v20;
  uint64_t v21;
  void *v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD aBlock[5];
  uint64_t v35;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v32 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchTime(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&result = __chkstk_darwin(v13).n128_u64[0];
  v16 = (char *)&v28 - v15;
  v17 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController);
  if (v17)
  {
    v31 = v17;

    sub_1004B8930(0, (unint64_t *)&qword_1013DE090, OS_dispatch_queue_ptr);
    v29 = v3;
    v18 = static OS_dispatch_queue.main.getter();
    v30 = v6;
    v19 = (void *)v18;
    static DispatchTime.now()(v20);
    + infix(_:_:)(v12, 0.5);
    v28 = *(void (**)(char *, uint64_t))(v10 + 8);
    v28(v12, v9);
    v21 = swift_allocObject(&unk_10126F840, 24, 7);
    swift_unknownObjectWeakInit(v21 + 16);
    aBlock[4] = sub_1005C3ABC;
    v35 = v21;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(_QWORD *)"";
    aBlock[2] = sub_1005D2FC0;
    aBlock[3] = &unk_10126F858;
    v22 = _Block_copy(aBlock);
    v23 = swift_retain(v21);
    static DispatchQoS.unspecified.getter(v23);
    v33 = _swiftEmptyArrayStorage;
    v24 = sub_1004B7878((unint64_t *)&qword_1013E1D20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v25 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
    v26 = sub_100503E88();
    dispatch thunk of SetAlgebra.init<A>(_:)(&v33, v25, v26, v2, v24);
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v16, v8, v5, v22);
    _Block_release(v22);

    (*(void (**)(char *, uint64_t))(v29 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v8, v30);
    v28(v16, v9);
    v27 = v35;
    swift_release(v21);
    *(_QWORD *)&result = swift_release(v27).n128_u64[0];
  }
  return result;
}

void sub_1005C2B40(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  UIAccessibilityNotifications v8;
  id v9;
  _BYTE v10[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = *(void **)(Strong + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController);
    if (v4)
    {
      v5 = v4;
      v6 = objc_msgSend(v5, "topViewController");
      if (v6)
      {
        v7 = v6;
        v8 = UIAccessibilityLayoutChangedNotification;
        v9 = objc_msgSend(v6, "view");
        UIAccessibilityPostNotification(v8, v9);

        v3 = v7;
        v5 = v9;
      }

      v3 = v5;
    }

  }
}

void sub_1005C2C18()
{
  uint64_t v0;
  id v1;
  void *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  CKRecordID v14;
  Swift::String v15;
  uint64_t v16;
  _BYTE v17[24];

  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_canvasLayerHosting), "interactiveCanvasController");
  if (v1)
  {
    v2 = v1;
    v3 = (char *)objc_msgSend(v1, "commandController");

    if (v3)
    {
      sub_1006A9664(0);
      v4 = (uint64_t)&v3[OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas];
      swift_beginAccess(&v3[OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas], v17, 0, 0);
      v5 = *(_QWORD *)v4;
      if (*(_QWORD *)v4 >> 62)
      {
        if (v5 < 0)
          v13 = *(_QWORD *)v4;
        else
          v13 = v5 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(*(_QWORD *)v4);
        v6 = _CocoaArrayWrapper.endIndex.getter(v13);
        if (v6)
        {
LABEL_5:
          v7 = v6 - 1;
          if (!__OFSUB__(v6, 1))
          {
            if ((v5 & 0xC000000000000001) == 0)
            {
              if ((v7 & 0x8000000000000000) != 0)
              {
                __break(1u);
              }
              else if (v7 < *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
              {
                v6 = *(_QWORD *)(v5 + 8 * v7 + 32);
                swift_retain(v6);
LABEL_10:
                swift_bridgeObjectRelease(v5);
                v8 = *(unsigned __int8 *)(v6 + 16);
                if (v8 == 3 || v8 == 2 || v8 == 1)
                  goto LABEL_35;
                v4 = *(_QWORD *)v4;
                if (!((unint64_t)v4 >> 62))
                {
                  v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
                  swift_bridgeObjectRetain_n(v4, 2);
                  if (v9)
                  {
LABEL_15:
                    if (v9 < 1)
                    {
                      __break(1u);
                      return;
                    }
                    v10 = 0;
                    do
                    {
                      if ((v4 & 0xC000000000000001) != 0)
                      {
                        v11 = specialized _ArrayBuffer._getElementSlowPath(_:)(v10, v4);
                      }
                      else
                      {
                        v11 = *(_QWORD *)(v4 + 8 * v10 + 32);
                        swift_retain(v11);
                      }
                      ++v10;
                      v12 = *(id *)(v11 + 24);
                      sub_1006A72F4(v12, 0);
                      swift_release(v11);

                    }
                    while (v9 != v10);
                  }
LABEL_34:
                  swift_bridgeObjectRelease_n(v4, 2);
                  *(_BYTE *)(v6 + 16) = 1;
LABEL_35:

                  swift_release(v6);
                  return;
                }
LABEL_30:
                if (v4 < 0)
                  v16 = v4;
                else
                  v16 = v4 & 0xFFFFFFFFFFFFFF8;
                swift_bridgeObjectRetain_n(v4, 2);
                v9 = _CocoaArrayWrapper.endIndex.getter(v16);
                if (v9)
                  goto LABEL_15;
                goto LABEL_34;
              }
              __break(1u);
              goto LABEL_30;
            }
LABEL_27:
            v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v5);
            goto LABEL_10;
          }
LABEL_26:
          __break(1u);
          goto LABEL_27;
        }
      }
      else
      {
        v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(*(_QWORD *)v4);
        if (v6)
          goto LABEL_5;
      }
      swift_bridgeObjectRelease(v5);
      v3 = "enableProgressiveEnqueuingInCurrentGroup() called without a group being open.";
      v4 = (uint64_t)"enableProgressiveEnqueuingInCurrentGroup()";
      v5 = (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift";
      sub_100757E04(&_mh_execute_header, (uint64_t)"enableProgressiveEnqueuingInCurrentGroup()", 42, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 680, "enableProgressiveEnqueuingInCurrentGroup() called without a group being open.", 77, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"enableProgressiveEnqueuingInCurrentGroup() called without a group being open.");
      sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"enableProgressiveEnqueuingInCurrentGroup()", 42, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2u, 680, (uint64_t)"enableProgressiveEnqueuingInCurrentGroup() called without a group being open.", 77, 2u);
      SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v14, v15);
      v7 = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
      __break(1u);
      goto LABEL_26;
    }
  }
}

id sub_1005C2F30()
{
  uint64_t v0;
  id result;
  void *v2;
  char *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[24];

  result = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_canvasLayerHosting), "interactiveCanvasController");
  if (result)
  {
    v2 = result;
    v3 = (char *)objc_msgSend(result, "commandController");

    if (v3)
    {
      v4 = (uint64_t *)&v3[OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas];
      swift_beginAccess(&v3[OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas], v8, 0, 0);
      v5 = *v4;
      if ((unint64_t)*v4 >> 62)
      {
        if (v5 < 0)
          v7 = *v4;
        else
          v7 = v5 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v5);
        v6 = _CocoaArrayWrapper.endIndex.getter(v7);

        swift_bridgeObjectRelease(v5);
      }
      else
      {
        v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);

      }
      return (id)(v6 > 0);
    }
    else
    {
      return 0;
    }
  }
  return result;
}

void sub_1005C301C()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  double v5;
  double v6;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_miniFormatterVC);
  if (!v1)
    goto LABEL_9;
  v2 = objc_msgSend(v1, "view");
  if (!v2)
  {
    __break(1u);
    return;
  }
  v3 = v2;
  v4 = objc_msgSend(v2, "window");

  if (v4)
  {
    objc_msgSend(v4, "frame");
    v6 = v5;

    if (qword_1013DCAF0 != -1)
      swift_once(&qword_1013DCAF0, sub_1005BA270);
    if (*(double *)&qword_10147EAA8 >= v6 && qword_1013DCAF8 != -1)
      swift_once(&qword_1013DCAF8, sub_1005BA280);
  }
  else
  {
LABEL_9:
    if (qword_1013DCAF0 != -1)
      swift_once(&qword_1013DCAF0, sub_1005BA270);
  }
}

void sub_1005C3144(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  char v9;

  v2 = v1;
  v4 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController);
  if (v4)
  {
    v5 = objc_msgSend(v4, "visibleViewController");
    if (v5)
    {
      v6 = v5;
      sub_1004B8930(0, (unint64_t *)&qword_1013F6620, UIViewController_ptr);
      v7 = a1;
      v8 = v6;
      v9 = static NSObject.== infix(_:_:)(v8, v7);

      if ((v9 & 1) != 0)
        sub_1005BBE58();
    }
  }
}

id sub_1005C3204(uint64_t a1)
{
  uint64_t v1;
  id result;

  result = *(id *)(v1 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController);
  if (result)
    return objc_msgSend(result, "pushViewController:animated:", a1, 1);
  return result;
}

void sub_1005C323C()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;

  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_canvasLayerHosting), "interactiveCanvasController");
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v1, "commandController");

    if (v3)
    {
      sub_1006A984C(0);

    }
  }
}

void sub_1005C32DC(void *a1, uint64_t a2)
{
  sub_1005C0654(a2, a1);
}

void sub_1005C3308(void *a1)
{
  sub_1005C3144(a1);
}

void sub_1005C3328(void *a1)
{
  sub_1005C2604(a1);
}

uint64_t sub_1005C33B0(void *a1, void *a2)
{
  uint64_t v2;
  id v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  char v9;

  v4 = objc_msgSend(a1, "presentedViewController");
  v5 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedAuxiliaryViewController);
  if (v4)
  {
    v6 = v4;
    if (!v5)
    {

      return -1;
    }
    sub_1004B8930(0, (unint64_t *)&qword_1013F6620, UIViewController_ptr);
    v7 = v5;
    v8 = v6;
    v9 = static NSObject.== infix(_:_:)(v8, v7);

    if ((v9 & 1) == 0)
      return -1;
  }
  else if (v5)
  {
    return -1;
  }
  if ((objc_msgSend((id)objc_opt_self(UIDevice), "crl_phoneUI") & 1) != 0
    || (objc_msgSend(a2, "crl_isCompactWidth") & 1) != 0)
  {
    return 1;
  }
  return -1;
}

void sub_1005C34F0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  char v9;
  void *v10;
  id v11;
  id v12;
  char v13;
  id v14;
  id v15;

  v2 = v1;
  v4 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedWrappedNavigationController);
  v5 = v4;
  v6 = objc_msgSend(a1, "presentedViewController");
  v7 = v6;
  if (!v4)
  {
    if (!v6)
      goto LABEL_8;

LABEL_7:
    goto LABEL_9;
  }
  if (!v6)
    goto LABEL_7;
  sub_1004B8930(0, (unint64_t *)&qword_1013F6620, UIViewController_ptr);
  v8 = v5;
  v9 = static NSObject.== infix(_:_:)(v8, v7);

  if ((v9 & 1) != 0)
LABEL_8:
    sub_1005BBE58();
LABEL_9:
  v10 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedAuxiliaryViewController);
  v15 = v10;
  v11 = objc_msgSend(a1, "presentedViewController");
  if (!v10)
  {
    if (!v11)
      goto LABEL_14;
LABEL_16:

    return;
  }
  if (!v11)
  {
    v11 = v15;
    goto LABEL_16;
  }
  v14 = v11;
  sub_1004B8930(0, (unint64_t *)&qword_1013F6620, UIViewController_ptr);
  v12 = v15;
  v13 = static NSObject.== infix(_:_:)(v12, v14);

  if ((v13 & 1) != 0)
LABEL_14:
    sub_1005BC184();
}

void sub_1005C37B0()
{
  char *v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  Class isa;
  uint64_t v16;
  uint64_t v17;
  objc_super v18;

  v18.receiver = v0;
  v18.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v18, "viewDidLoad");
  v1 = objc_msgSend(v0, "view");
  if (!v1)
  {
    __break(1u);
    goto LABEL_12;
  }
  v2 = v1;
  v3 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
  objc_msgSend(v2, "setBackgroundColor:", v3);

  v4 = *(void **)&v0[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterPopoverWrappedNavigationController_wrappedNavigationController];
  objc_msgSend(v4, "willMoveToParentViewController:", v0);
  objc_msgSend(v0, "addChildViewController:", v4);
  v5 = objc_msgSend(v4, "view");
  if (!v5)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v6 = v5;
  objc_msgSend(v5, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v7 = objc_msgSend(v0, "view");
  if (!v7)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v8 = v7;
  v9 = objc_msgSend(v4, "view");
  if (!v9)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v10 = v9;
  objc_msgSend(v8, "addSubview:", v9);

  objc_msgSend(v4, "didMoveToParentViewController:", v0);
  v11 = objc_msgSend(v0, "view");
  if (!v11)
    return;
  v12 = v11;
  v13 = objc_msgSend(v4, "view");
  if (!v13)
  {
LABEL_15:
    __break(1u);
    return;
  }
  v14 = v13;
  isa = (Class)objc_msgSend(v13, "crl_constraintsToAllSidesOfItem:", v12);

  if (!isa)
  {
    v16 = sub_1004B8930(0, (unint64_t *)&qword_1013E1760, NSLayoutConstraint_ptr);
    v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)(0, v16);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v17);
  }
  objc_msgSend((id)objc_opt_self(NSLayoutConstraint), "activateConstraints:", isa);

}

uint64_t type metadata accessor for CRLiOSMiniFormatterPopoverWrappedNavigationController()
{
  return objc_opt_self(_TtC8Freeform53CRLiOSMiniFormatterPopoverWrappedNavigationController);
}

uint64_t sub_1005C3A98()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1005C3ABC()
{
  uint64_t v0;

  sub_1005C2B40(v0);
}

uint64_t sub_1005C3AC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1005C3AD4(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_1005C3ADC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1005C3B00()
{
  uint64_t v0;

  sub_1005C25B0(*(void **)(v0 + 16));
}

int64_t sub_1005C3B0C(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    v11 = *(_QWORD *)(v6 + 8 * v9);
    if (v11)
      return __clz(__rbit64(v11)) + (v9 << 6);
    v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      v11 = *(_QWORD *)(v6 + 8 * v9);
      if (v11)
        return __clz(__rbit64(v11)) + (v9 << 6);
      while (v10 - 3 != v5)
      {
        v11 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_1005C3BF0(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(_BYTE *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a4 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2)
    return *(_QWORD *)(*(_QWORD *)(a4 + 48) + 8 * result);
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_1005C3C44(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(_BYTE *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a4 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2)
    return *(unsigned int *)(*(_QWORD *)(a4 + 48) + 4 * result);
LABEL_8:
  __break(1u);
  return result;
}

void sub_1005C3C98(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  sub_1005C42F0(a1, a2, a3, a4, type metadata accessor for CRLBoardItem);
}

void sub_1005C3CA4(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  sub_1005C3CB8(a1, a2, a3, a4, (unint64_t *)&qword_1013E56B0, off_101229828);
}

void sub_1005C3CB8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, unint64_t *a5, _QWORD *a6)
{
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  Swift::Int v16;
  uint64_t v17;
  id v18;
  char v19;
  uint64_t v20;
  id v21;
  char v22;
  id v23;
  uint64_t v24;
  unint64_t *v25;

  v10 = a1;
  if ((a4 & 0xC000000000000001) == 0)
  {
    if ((a3 & 1) != 0)
      goto LABEL_13;
    if (a1 < 0 || 1 << *(_BYTE *)(a4 + 32) <= a1)
    {
      __break(1u);
    }
    else if (((*(_QWORD *)(a4 + (((unint64_t)a1 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> a1) & 1) != 0)
    {
      if (*(_DWORD *)(a4 + 36) == (_DWORD)a2)
        goto LABEL_20;
      __break(1u);
LABEL_13:
      if (__CocoaSet.Index.age.getter(a1, a2) == *(_DWORD *)(a4 + 36))
      {
        v14 = __CocoaSet.Index.element.getter(v10, a2);
        v24 = v14;
        v15 = sub_1004B8930(0, a5, a6);
        swift_unknownObjectRetain(v14);
        swift_dynamicCast(&v25, &v24, (char *)&type metadata for Swift.AnyObject + 8, v15, 7);
        a5 = v25;
        swift_unknownObjectRelease(v14);
        v16 = NSObject._rawHashValue(seed:)(*(_QWORD *)(a4 + 40));
        v17 = -1 << *(_BYTE *)(a4 + 32);
        v10 = v16 & ~v17;
        if (((*(_QWORD *)(a4 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
        {
          v18 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v10);
          v19 = static NSObject.== infix(_:_:)(v18, a5);

          if ((v19 & 1) == 0)
          {
            v20 = ~v17;
            do
            {
              v10 = (v10 + 1) & v20;
              if (((*(_QWORD *)(a4 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
                goto LABEL_24;
              v21 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v10);
              v22 = static NSObject.== infix(_:_:)(v21, a5);

            }
            while ((v22 & 1) == 0);
          }

LABEL_20:
          v23 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v10);
          return;
        }
LABEL_24:

        __break(1u);
        goto LABEL_25;
      }
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    __break(1u);
    goto LABEL_23;
  }
  if ((a3 & 1) == 0)
  {
LABEL_25:
    __break(1u);
    return;
  }
  if (a4 < 0)
    v11 = a4;
  else
    v11 = a4 & 0xFFFFFFFFFFFFFF8;
  v12 = __CocoaSet.element(at:)(a1, a2, v11);
  v24 = v12;
  v13 = sub_1004B8930(0, a5, a6);
  swift_unknownObjectRetain(v12);
  swift_dynamicCast(&v25, &v24, (char *)&type metadata for Swift.AnyObject + 8, v13, 7);
  swift_unknownObjectRelease(v12);
}

uint64_t sub_1005C3F18(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t ObjectType;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  Swift::Int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t, __n128);
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD v43[9];
  uint64_t v44;

  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = __chkstk_darwin(v10);
  v15 = (char *)&v39 - v14;
  if ((a4 & 0xC000000000000001) == 0)
  {
    if ((a3 & 1) == 0)
    {
      if ((a1 & 0x8000000000000000) != 0 || 1 << *(_BYTE *)(a4 + 32) <= (uint64_t)a1)
      {
        __break(1u);
      }
      else if (((*(_QWORD *)(a4 + ((a1 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> a1) & 1) != 0)
      {
        if (*(_DWORD *)(a4 + 36) == (_DWORD)a2)
        {
LABEL_20:
          v19 = *(_QWORD *)(*(_QWORD *)(a4 + 48) + 8 * a1);
          swift_retain(v19);
          return v19;
        }
        __break(1u);
        goto LABEL_13;
      }
      __break(1u);
      goto LABEL_24;
    }
LABEL_13:
    result = __CocoaSet.Index.age.getter(a1, a2);
    if ((_DWORD)result == *(_DWORD *)(a4 + 36))
    {
      v20 = __CocoaSet.Index.element.getter(a1, a2);
      v44 = v20;
      v21 = type metadata accessor for CRLTransactableHashableWrapper();
      swift_unknownObjectRetain(v20);
      swift_dynamicCast(v43, &v44, (char *)&type metadata for Swift.AnyObject + 8, v21, 7);
      v22 = v43[0];
      swift_unknownObjectRelease(v20);
      Hasher.init(_seed:)(v43, *(_QWORD *)(a4 + 40));
      v23 = *(_QWORD *)(v22 + 16);
      v24 = *(_QWORD *)(v22 + 24);
      v42 = v22;
      ObjectType = swift_getObjectType(v23);
      (*(void (**)(uint64_t, uint64_t))(v24 + 32))(ObjectType, v24);
      v26 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      dispatch thunk of Hashable.hash(into:)(v43, v8, v26);
      v27 = *(void (**)(char *, uint64_t))(v9 + 8);
      v41 = v8;
      v27(v15, v8);
      v28 = Hasher._finalize()();
      v29 = -1 << *(_BYTE *)(a4 + 32);
      a1 = v28 & ~v29;
      v40 = a4 + 56;
      if (((*(_QWORD *)(a4 + 56 + ((a1 >> 3) & 0xFFFFFFFFFFFFF8)) >> a1) & 1) != 0)
      {
        v39 = ~v29;
        while (1)
        {
          a3 = a4;
          v30 = *(_QWORD *)(*(_QWORD *)(a4 + 48) + 8 * a1);
          v31 = *(_QWORD *)(v30 + 24);
          v32 = swift_getObjectType(*(_QWORD *)(v30 + 16));
          v33 = *(void (**)(uint64_t, uint64_t, __n128))(v31 + 32);
          v34 = swift_retain(v30);
          v33(v32, v31, v34);
          v35 = *(_QWORD *)(v42 + 24);
          v36 = swift_getObjectType(*(_QWORD *)(v42 + 16));
          (*(void (**)(uint64_t, uint64_t))(v35 + 32))(v36, v35);
          v37 = static UUID.== infix(_:_:)(v15);
          v38 = v41;
          v27(v12, v41);
          v27(v15, v38);
          swift_release(v30);
          if ((v37 & 1) != 0)
            break;
          a1 = (a1 + 1) & v39;
          a4 = a3;
          if (((*(_QWORD *)(v40 + ((a1 >> 3) & 0xFFFFFFFFFFFFF8)) >> a1) & 1) == 0)
            goto LABEL_18;
        }
      }
      else
      {
LABEL_18:
        swift_release(v42);
        __break(1u);
      }
      swift_release(v42);
      a4 = a3;
      goto LABEL_20;
    }
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if ((a3 & 1) != 0)
  {
    if (a4 < 0)
      v16 = a4;
    else
      v16 = a4 & 0xFFFFFFFFFFFFFF8;
    v17 = __CocoaSet.element(at:)(a1, a2, v16);
    v44 = v17;
    v18 = type metadata accessor for CRLTransactableHashableWrapper();
    swift_unknownObjectRetain(v17);
    swift_dynamicCast(v43, &v44, (char *)&type metadata for Swift.AnyObject + 8, v18, 7);
    v19 = v43[0];
    swift_unknownObjectRelease(v17);
    return v19;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1005C427C@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  return sub_1005C4570(a1, a2, a3, type metadata accessor for CRLBoardIdentifier, a4);
}

uint64_t sub_1005C4288@<X0>(uint64_t result@<X0>, int a2@<W1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  if (result < 0 || 1 << *(_BYTE *)(a3 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a3 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a3 + 36) == a2)
    return sub_1004B8968(*(_QWORD *)(a3 + 48) + 40 * result, a4);
LABEL_8:
  __break(1u);
  return result;
}

void sub_1005C42E4(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  sub_1005C42F0(a1, a2, a3, a4, type metadata accessor for CRLSceneInfo);
}

void sub_1005C42F0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  void *v5;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  Swift::Int v15;
  uint64_t v16;
  id v17;
  char v18;
  uint64_t v19;
  id v20;
  char v21;
  id v22;
  uint64_t v23;
  void *v24;

  v9 = a1;
  if ((a4 & 0xC000000000000001) == 0)
  {
    if ((a3 & 1) != 0)
      goto LABEL_13;
    if (a1 < 0 || 1 << *(_BYTE *)(a4 + 32) <= a1)
    {
      __break(1u);
    }
    else if (((*(_QWORD *)(a4 + (((unint64_t)a1 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> a1) & 1) != 0)
    {
      if (*(_DWORD *)(a4 + 36) == (_DWORD)a2)
        goto LABEL_20;
      __break(1u);
LABEL_13:
      if (__CocoaSet.Index.age.getter(a1, a2) == *(_DWORD *)(a4 + 36))
      {
        v13 = __CocoaSet.Index.element.getter(v9, a2);
        v23 = v13;
        v14 = a5(0);
        swift_unknownObjectRetain(v13);
        swift_dynamicCast(&v24, &v23, (char *)&type metadata for Swift.AnyObject + 8, v14, 7);
        v5 = v24;
        swift_unknownObjectRelease(v13);
        v15 = NSObject._rawHashValue(seed:)(*(_QWORD *)(a4 + 40));
        v16 = -1 << *(_BYTE *)(a4 + 32);
        v9 = v15 & ~v16;
        if (((*(_QWORD *)(a4 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0)
        {
          v17 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v9);
          v18 = static NSObject.== infix(_:_:)(v17, v5);

          if ((v18 & 1) == 0)
          {
            v19 = ~v16;
            do
            {
              v9 = (v9 + 1) & v19;
              if (((*(_QWORD *)(a4 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
                goto LABEL_24;
              v20 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v9);
              v21 = static NSObject.== infix(_:_:)(v20, v5);

            }
            while ((v21 & 1) == 0);
          }

LABEL_20:
          v22 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v9);
          return;
        }
LABEL_24:

        __break(1u);
        goto LABEL_25;
      }
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    __break(1u);
    goto LABEL_23;
  }
  if ((a3 & 1) == 0)
  {
LABEL_25:
    __break(1u);
    return;
  }
  if (a4 < 0)
    v10 = a4;
  else
    v10 = a4 & 0xFFFFFFFFFFFFFF8;
  v11 = __CocoaSet.element(at:)(a1, a2, v10);
  v23 = v11;
  v12 = a5(0);
  swift_unknownObjectRetain(v11);
  swift_dynamicCast(&v24, &v23, (char *)&type metadata for Swift.AnyObject + 8, v12, 7);
  swift_unknownObjectRelease(v11);
}

void sub_1005C453C(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  sub_1005C3CB8(a1, a2, a3, a4, &qword_1013FA4F0, UIOpenURLContext_ptr);
}

void sub_1005C4550(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  sub_1005C3CB8(a1, a2, a3, a4, (unint64_t *)&qword_1013E1770, CKRecordZoneID_ptr);
}

uint64_t sub_1005C4564@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  return sub_1005C4570(a1, a2, a3, type metadata accessor for CRLBoardLibraryViewModel.Item, a4);
}

uint64_t sub_1005C4570@<X0>(uint64_t result@<X0>, int a2@<W1>, uint64_t a3@<X3>, uint64_t (*a4)(_QWORD)@<X4>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;

  if (result < 0 || (v5 = result, 1 << *(_BYTE *)(a3 + 32) <= result))
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a3 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a3 + 36) == a2)
  {
    v8 = *(_QWORD *)(a3 + 48);
    v9 = a4(0);
    return sub_1004B8460(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * v5, a5, a4);
  }
LABEL_8:
  __break(1u);
  return result;
}

void sub_1005C4608(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  sub_1005C3CB8(a1, a2, a3, a4, &qword_101407270, UITouch_ptr);
}

uint64_t sub_1005C4620(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 72);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_1005C46A8(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v9;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v13 = a4;
  v14 = a5;
  v9 = sub_10050D1B0(&v12);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(v9, a2, a4);
  v10 = *a3;
  *(_QWORD *)(v10 + 16) = a1 + 1;
  return sub_1004DB728(&v12, v10 + 40 * a1 + 32);
}

double *sub_1005C4720(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;

  if ((unint64_t)a1 >> 62)
    goto LABEL_15;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v4; v4 = _CocoaArrayWrapper.endIndex.getter(v14))
  {
    v5 = 4;
    while (1)
    {
      v7 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5 - 4, a1)
         : *(id *)(a1 + 8 * v5);
      v8 = v7;
      v9 = v5 - 3;
      if (__OFADD__(v5 - 4, 1))
        break;
      v10 = sub_1005BFFB0(v7, a3);

      if (v10)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v11);
        v13 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v12 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v13 >= v12 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v12 > 1, v13 + 1, 1);
        v6 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, v10);
        specialized Array._endMutation()(v6);
      }
      ++v5;
      if (v9 == v4)
        goto LABEL_19;
    }
    __break(1u);
LABEL_15:
    if (a1 < 0)
      v14 = a1;
    else
      v14 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
LABEL_19:
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1005C4898(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t i;
  char *v6;
  void *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  if (!((unint64_t)a1 >> 62))
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v4)
      goto LABEL_3;
    return 0;
  }
LABEL_13:
  if (a1 < 0)
    v10 = a1;
  else
    v10 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v4 = _CocoaArrayWrapper.endIndex.getter(v10);
  swift_bridgeObjectRelease(a1);
  if (!v4)
    return 0;
LABEL_3:
  sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
  for (i = 0; ; ++i)
  {
    v6 = (a1 & 0xC000000000000001) != 0
       ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1)
       : (char *)*(id *)(a1 + 8 * i + 32);
    v7 = v6;
    v8 = static NSObject.== infix(_:_:)(*(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_element], a2);

    if ((v8 & 1) != 0)
      break;
    v9 = i + 1;
    if (__OFADD__(i, 1))
    {
      __break(1u);
      goto LABEL_13;
    }
    if (v9 == v4)
      return 0;
  }
  return i;
}

_QWORD *sub_1005C49C8(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  char **v7;
  id v8;
  void *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char **v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v2 = a1;
  if (a1 >> 62)
    goto LABEL_17;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      v4 = 0;
      v5 = v2 & 0xC000000000000001;
      v6 = v2 & 0xFFFFFFFFFFFFFF8;
      v7 = &selRef_parentMapOfItemsFrom_;
      v21 = v2 & 0xFFFFFFFFFFFFFF8;
      while (v5)
      {
        v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v2);
LABEL_9:
        v9 = v8;
        v10 = v4 + 1;
        if (__OFADD__(v4, 1))
          goto LABEL_16;
        if (objc_msgSend(v8, v7[34])
          || (sub_1004B8930(0, (unint64_t *)&unk_1013DFBC0, UIButton_ptr),
              v11 = static NSObject.== infix(_:_:)(v9, a2),
              (v11 & 1) != 0))
        {

        }
        else
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v11);
          v12 = v3;
          v13 = v5;
          v14 = v2;
          v15 = v7;
          v16 = _swiftEmptyArrayStorage[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v16);
          v17 = v16;
          v7 = v15;
          v2 = v14;
          v5 = v13;
          v3 = v12;
          v6 = v21;
          v18 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v9);
          specialized ContiguousArray._endMutation()(v18);
        }
        ++v4;
        if (v10 == v3)
          return _swiftEmptyArrayStorage;
      }
      if (v4 < *(_QWORD *)(v6 + 16))
        break;
      __break(1u);
LABEL_16:
      __break(1u);
LABEL_17:
      if (v2 < 0)
        v20 = v2;
      else
        v20 = v2 & 0xFFFFFFFFFFFFFF8;
      v3 = _CocoaArrayWrapper.endIndex.getter(v20);
      if (!v3)
        return _swiftEmptyArrayStorage;
    }
    v8 = *(id *)(v2 + 8 * v4 + 32);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

void sub_1005C4B64(uint64_t a1, void *a2, uint64_t a3)
{
  sub_1005C4B9C(a1, a2, a3, (SEL *)&selRef_removeObserver_forChangeSource_);
}

void sub_1005C4B80(uint64_t a1, void *a2, uint64_t a3)
{
  sub_1005C4B9C(a1, a2, a3, (SEL *)&selRef_addObserver_forChangeSource_);
}

void sub_1005C4B9C(uint64_t a1, void *a2, uint64_t a3, SEL *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  int64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v33;
  _QWORD v34[5];
  void *v35;

  v6 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v7 = a1;
    else
      v7 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v8 = __CocoaSet.makeIterator()(v7);
    v9 = type metadata accessor for CRLBoardItem(0);
    v10 = sub_1004B7878((unint64_t *)&qword_1013E4190, type metadata accessor for CRLBoardItem, (uint64_t)&protocol conformance descriptor for NSObject);
    v11 = Set.Iterator.init(_cocoa:)(v34, v8, v9, v10);
    v6 = v34[0];
    v31 = v34[1];
    v12 = v34[2];
    v13 = v34[3];
    v14 = v34[4];
  }
  else
  {
    v15 = -1 << *(_BYTE *)(a1 + 32);
    v31 = a1 + 56;
    v16 = ~v15;
    v17 = -v15;
    if (v17 < 64)
      v18 = ~(-1 << v17);
    else
      v18 = -1;
    v14 = v18 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain(a1);
    v12 = v16;
    v13 = 0;
  }
  v29 = v12;
  v30 = (unint64_t)(v12 + 64) >> 6;
  if (v6 < 0)
    goto LABEL_13;
  while (1)
  {
    if (v14)
    {
      v19 = (v14 - 1) & v14;
      v20 = __clz(__rbit64(v14)) | (v13 << 6);
      v21 = v13;
      goto LABEL_32;
    }
    v26 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v26 >= v30)
      goto LABEL_35;
    v27 = *(_QWORD *)(v31 + 8 * v26);
    v21 = v13 + 1;
    if (!v27)
    {
      v21 = v13 + 2;
      if (v13 + 2 >= v30)
        goto LABEL_35;
      v27 = *(_QWORD *)(v31 + 8 * v21);
      if (!v27)
      {
        v21 = v13 + 3;
        if (v13 + 3 >= v30)
          goto LABEL_35;
        v27 = *(_QWORD *)(v31 + 8 * v21);
        if (!v27)
        {
          v21 = v13 + 4;
          if (v13 + 4 >= v30)
            goto LABEL_35;
          v27 = *(_QWORD *)(v31 + 8 * v21);
          if (!v27)
          {
            v21 = v13 + 5;
            if (v13 + 5 >= v30)
              goto LABEL_35;
            v27 = *(_QWORD *)(v31 + 8 * v21);
            if (!v27)
            {
              v28 = v13 + 6;
              while (v30 != v28)
              {
                v27 = *(_QWORD *)(v31 + 8 * v28++);
                if (v27)
                {
                  v21 = v28 - 1;
                  goto LABEL_31;
                }
              }
LABEL_35:
              sub_1004D284C(v6);
              return;
            }
          }
        }
      }
    }
LABEL_31:
    v19 = (v27 - 1) & v27;
    v20 = __clz(__rbit64(v27)) + (v21 << 6);
LABEL_32:
    v25 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v20);
    if (!v25)
      goto LABEL_35;
    while (1)
    {
      objc_msgSend(a2, *a4, a3, v25, v29);

      v13 = v21;
      v14 = v19;
      if ((v6 & 0x8000000000000000) == 0)
        break;
LABEL_13:
      v22 = __CocoaSet.Iterator.next()(v11);
      if (v22)
      {
        v23 = v22;
        v33 = v22;
        v24 = type metadata accessor for CRLBoardItem(0);
        swift_unknownObjectRetain(v23);
        swift_dynamicCast(&v35, &v33, (char *)&type metadata for Swift.AnyObject + 8, v24, 7);
        v25 = v35;
        swift_unknownObjectRelease(v23);
        v21 = v13;
        v19 = v14;
        if (v25)
          continue;
      }
      goto LABEL_35;
    }
  }
  __break(1u);
}

uint64_t sub_1005C4E78(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(_BYTE *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a4 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2)
    return *(_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * result);
LABEL_8:
  __break(1u);
  return result;
}

void *sub_1005C4ED0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  if ((unint64_t)a1 >> 62)
    goto LABEL_13;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v4; v4 = _CocoaArrayWrapper.endIndex.getter(v9))
  {
    sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
    a2 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_element);
    v5 = 4;
    while (1)
    {
      v6 = (a1 & 0xC000000000000001) != 0
         ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v5 - 4, a1)
         : (char *)*(id *)(a1 + 8 * v5);
      v7 = v6;
      v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1))
        break;
      if ((static NSObject.== infix(_:_:)(*(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_element], a2) & 1) != 0)
      {
        swift_bridgeObjectRelease(a1);
        return v7;
      }

      ++v5;
      if (v8 == v4)
        goto LABEL_17;
    }
    __break(1u);
LABEL_13:
    if (a1 < 0)
      v9 = a1;
    else
      v9 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
LABEL_17:
  swift_bridgeObjectRelease(a1);
  return 0;
}

_QWORD *sub_1005C5018(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t *v7;
  id v8;
  void *v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v28;
  __int128 v29[2];
  uint64_t v30;
  id v31;
  _QWORD v32[3];
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;

  v3 = a1;
  v35 = _swiftEmptyArrayStorage;
  if (a1 >> 62)
    goto LABEL_19;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      v25 = v3;
      v5 = 0;
      v6 = v3 & 0xC000000000000001;
      v7 = (unint64_t *)&qword_1013F6620;
      v28 = v3 & 0xFFFFFFFFFFFFFF8;
      while (v6)
      {
        v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v3);
LABEL_9:
        v9 = v8;
        v10 = v5 + 1;
        if (__OFADD__(v5, 1))
          goto LABEL_18;
        v31 = v8;
        v11 = sub_1004B8930(0, v7, UIViewController_ptr);
        v12 = v9;
        v13 = sub_1004B804C(&qword_1013E56C8);
        if (swift_dynamicCast(v29, &v31, v11, v13, 6))
        {
          v14 = v7;
          v15 = v4;
          v16 = v6;
          sub_1004DB728(v29, (uint64_t)v32);
          v17 = v33;
          v18 = v34;
          sub_1004BB5A4(v32, v33);
          v19 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 24))(a2, a3, v17, v18);
          v20 = _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v32);
          if ((v19 & 1) != 0)
          {
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v20);
            v21 = v35[2];
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v21);
            v22 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v21, v12);
            specialized ContiguousArray._endMutation()(v22);
          }
          else
          {

          }
          v6 = v16;
          v4 = v15;
          v7 = v14;
          v3 = v25;
        }
        else
        {
          v30 = 0;
          memset(v29, 0, sizeof(v29));
          sub_1004CB800((uint64_t)v29, (uint64_t *)&unk_1013E56D0);

        }
        ++v5;
        if (v10 == v4)
          return v35;
      }
      if (v5 < *(_QWORD *)(v28 + 16))
        break;
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      if (v3 < 0)
        v24 = v3;
      else
        v24 = v3 & 0xFFFFFFFFFFFFFF8;
      v4 = _CocoaArrayWrapper.endIndex.getter(v24);
      if (!v4)
        return _swiftEmptyArrayStorage;
    }
    v8 = *(id *)(v3 + 8 * v5 + 32);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

void sub_1005C5224()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16)
           + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_isInProcessOfPresentingSecondLayerPopover) = 0;
}

_QWORD *sub_1005C5238(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if ((unint64_t)a1 >> 62)
    goto LABEL_12;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  while (v4)
  {
    v5 = 4;
    while (1)
    {
      v6 = v5 - 4;
      if ((a1 & 0xC000000000000001) == 0)
        break;
      v7 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5 - 4, a1);
      v8 = v5 - 3;
      if (__OFADD__(v6, 1))
        goto LABEL_11;
LABEL_9:
      v9 = objc_msgSend(a2, "repsForInfo:", v7);
      v10 = sub_1004B8930(0, (unint64_t *)&qword_1013E56B0, off_101229828);
      v11 = sub_1004F619C();
      v12 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v9, v10, v11);
      swift_unknownObjectRelease(v7);

      sub_10061F240(v12);
      ++v5;
      if (v8 == v4)
        goto LABEL_16;
    }
    v7 = *(_QWORD *)(a1 + 8 * v5);
    swift_unknownObjectRetain(v7);
    v8 = v5 - 3;
    if (!__OFADD__(v6, 1))
      goto LABEL_9;
LABEL_11:
    __break(1u);
LABEL_12:
    if (a1 < 0)
      v13 = a1;
    else
      v13 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v4 = _CocoaArrayWrapper.endIndex.getter(v13);
  }
LABEL_16:
  swift_bridgeObjectRelease(a1);
  return _swiftEmptyArrayStorage;
}

void sub_1005C53B8(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  char v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t);
  char v20;
  char v21;
  char v22;
  void *v23;
  void *v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t inited;
  uint64_t v36;
  uint64_t v37;
  id v38;
  void *v39;
  void *v40;
  uint64_t v41;
  uint64_t i;
  void *v43;
  uint64_t j;
  void *v45;
  _QWORD *v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v51;
  void (*v52)(_QWORD *, _QWORD);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  void *v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  id v65;
  _QWORD v66[4];
  _BYTE v67[40];
  uint64_t v68;
  uint64_t v69;
  char v70;
  _QWORD *v71;

  v1 = a1;
  if (!a1)
    return;
  v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 >= 0)
      a1 &= 0xFFFFFFFFFFFFFF8uLL;
    v3 = __CocoaSet.count.getter(a1);
  }
  else
  {
    v3 = *(_QWORD *)(a1 + 16);
  }
  v4 = _swiftEmptyArrayStorage;
  if (!v3)
  {
LABEL_62:
    v58 = v4[2];
    if (v58)
    {
      swift_bridgeObjectRetain(v4);
      v59 = 0;
      v60 = &_swiftEmptySetSingleton;
      do
      {
        v61 = v60;
        v62 = v4[v59++ + 4];
        swift_bridgeObjectRetain(v62);
        swift_bridgeObjectRetain(v61);
        sub_100CA0398(v62, v61);
        v60 = v63;
        swift_bridgeObjectRelease(v61);
      }
      while (v58 != v59);
      swift_bridgeObjectRelease(v4);
    }
    swift_bridgeObjectRelease(v4);
    return;
  }
  v71 = _swiftEmptyArrayStorage;
  sub_10060083C(0, v3 & ~(v3 >> 63), 0);
  if (v2)
  {
    if (v1 >= 0)
      v5 = v1 & 0xFFFFFFFFFFFFFF8;
    else
      v5 = v1;
    v6 = __CocoaSet.startIndex.getter(v5);
    v8 = 1;
  }
  else
  {
    v6 = sub_1005C4620(v1);
    v8 = v9 & 1;
  }
  v68 = v6;
  v69 = v7;
  v70 = v8;
  if (v3 < 0)
    goto LABEL_70;
  v10 = 0;
  v11 = v1 & 0xFFFFFFFFFFFFFF8;
  if (v1 < 0)
    v11 = v1;
  v64 = v11;
  v12 = type metadata accessor for CRLBoardItem;
  while (v10 != v3)
  {
    sub_1005C42F0(v68, v69, v70, v1, v12);
    v24 = v23;
    v25 = type metadata accessor for CRLGroupItem(0);
    if (swift_dynamicCastClass(v24, v25))
    {
      v26 = v24;
      sub_1004E36C0();
      v28 = v27;
      v29 = (unint64_t)v27 >> 62;
      if ((unint64_t)v27 >> 62)
      {
        if (v27 < 0)
          v54 = v27;
        else
          v54 = v27 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v27);
        v30 = _CocoaArrayWrapper.endIndex.getter(v54);
        swift_bridgeObjectRelease(v28);
      }
      else
      {
        v30 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      v31 = type metadata accessor for CRLBoardItem(0);
      v32 = sub_1004B7878((unint64_t *)&qword_1013E4190, v12, (uint64_t)&protocol conformance descriptor for NSObject);
      v66[0] = Set.init(minimumCapacity:)(v30, v31, v32);
      if (v29)
      {
        if (v28 < 0)
          v41 = v28;
        else
          v41 = v28 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v28);
        v33 = _CocoaArrayWrapper.endIndex.getter(v41);
        swift_bridgeObjectRelease(v28);
        if (!v33)
          goto LABEL_41;
      }
      else
      {
        v33 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (!v33)
        {
LABEL_41:

          swift_bridgeObjectRelease(v28);
          v40 = (void *)v66[0];
          goto LABEL_42;
        }
      }
      if (v33 < 1)
        goto LABEL_69;
      if ((v28 & 0xC000000000000001) != 0)
      {
        for (i = 0; i != v33; ++i)
        {
          v43 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v28);
          sub_100AD7814((Swift::Int *)&v65, v43);

        }
      }
      else
      {
        for (j = 0; j != v33; ++j)
        {
          v45 = *(void **)(v28 + 8 * j + 32);
          sub_100AD7814((Swift::Int *)&v65, v45);

        }
      }
      goto LABEL_41;
    }
    v34 = sub_1004B804C((uint64_t *)&unk_1013E4180);
    inited = swift_initStackObject(v34, v67);
    *(_OWORD *)(inited + 16) = xmmword_100EEF400;
    *(_QWORD *)(inited + 32) = v24;
    v66[0] = inited;
    specialized Array._endMutation()(inited);
    v36 = v66[0];
    if (v66[0] >> 62)
    {
      if (v66[0] < 0)
        v55 = v66[0];
      else
        v55 = v66[0] & 0xFFFFFFFFFFFFFF8;
      v56 = v24;
      swift_bridgeObjectRetain(v36);
      v57 = _CocoaArrayWrapper.endIndex.getter(v55);
      swift_bridgeObjectRelease(v36);
      if (!v57)
      {
LABEL_60:
        swift_bridgeObjectRelease(v36);

        v40 = &_swiftEmptySetSingleton;
        goto LABEL_42;
      }
    }
    else
    {
      v37 = *(_QWORD *)((v66[0] & 0xFFFFFFFFFFFFF8) + 0x10);
      v38 = v24;
      if (!v37)
        goto LABEL_60;
    }
    sub_1004B5FB0(v36);
    v40 = v39;
    swift_bridgeObjectRelease(v36);

LABEL_42:
    v46 = v71;
    if ((swift_isUniquelyReferenced_nonNull_native(v71) & 1) == 0)
    {
      sub_10060083C(0, v46[2] + 1, 1);
      v46 = v71;
    }
    v48 = v46[2];
    v47 = v46[3];
    if (v48 >= v47 >> 1)
    {
      sub_10060083C(v47 > 1, v48 + 1, 1);
      v46 = v71;
    }
    v46[2] = v48 + 1;
    v46[v48 + 4] = v40;
    if (v2)
    {
      if ((v70 & 1) == 0)
        goto LABEL_71;
      v49 = __CocoaSet.Index.handleBitPattern.getter(v68, v69);
      if (v49)
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v49);
      else
        isUniquelyReferenced_nonNull_native = 1;
      v51 = sub_1004B804C(&qword_1013E56C0);
      v52 = (void (*)(_QWORD *, _QWORD))Set.Index._asCocoa.modify(v66, v51);
      __CocoaSet.formIndex(after:isUnique:)(v53, isUniquelyReferenced_nonNull_native, v64);
      v52(v66, 0);
    }
    else
    {
      v13 = v68;
      v14 = v69;
      v15 = v70;
      v16 = sub_1005C3B0C(v68, v69, v70, v1);
      v18 = v17;
      v19 = v12;
      v21 = v20;
      sub_100503494(v13, v14, v15);
      v68 = v16;
      v69 = v18;
      v22 = v21 & 1;
      v12 = v19;
      v2 = 0;
      v70 = v22;
    }
    if (++v10 == v3)
    {
      sub_100503494(v68, v69, v70);
      v4 = v71;
      goto LABEL_62;
    }
  }
  __break(1u);
LABEL_69:
  __break(1u);
LABEL_70:
  __break(1u);
LABEL_71:
  __break(1u);
}

id sub_1005C58C8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, char *a6, double a7, double a8)
{
  uint64_t v16;
  id v17;
  char *v18;
  id v19;
  id v20;
  objc_super v22;
  _QWORD v23[5];

  v23[3] = type metadata accessor for CRLiOSMiniFormatterPresenter();
  v23[4] = &off_10126F7E8;
  v23[0] = a5;
  v16 = OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_contentView;
  v17 = objc_allocWithZone((Class)UIView);
  v18 = a6;
  *(_QWORD *)&a6[v16] = objc_msgSend(v17, "init");
  *(_QWORD *)&v18[OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_repTrackingViewHelper] = 0;
  *(_QWORD *)&v18[OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_fixedPositionDynamicOperationViewHelper] = 0;
  v18[OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_viewDidAppear] = 0;
  v18[OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_isAnimatingDisplay] = 0;
  v18[OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_isAnimatingHide] = 0;
  v18[OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_needsRefreshWhenAppears] = 0;
  v18[OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_isHidingMiniFormatter] = 0;
  *(_QWORD *)&v18[OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_crlaxCurrentPresentedRep] = 0;
  *(_QWORD *)&v18[OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_reps] = a1;
  *(_QWORD *)&v18[OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_stackViewForDisplay] = a2;
  *(_QWORD *)&v18[OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_numberOfButtons] = a3;
  *(_QWORD *)&v18[OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_builders] = a4;
  sub_1004E90B0((uint64_t)v23, (uint64_t)&v18[OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_delegate]);
  *(double *)&v18[OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_leadingMargin] = a7;
  *(double *)&v18[OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_trailingMargin] = a8;
  v19 = a2;

  v22.receiver = v18;
  v22.super_class = (Class)type metadata accessor for CRLiOSMiniFormatterViewController();
  v20 = objc_msgSendSuper2(&v22, "initWithNibName:bundle:", 0, 0);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v23);
  return v20;
}

BOOL sub_1005C5A74(void *a1)
{
  uint64_t v1;
  void *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  unsigned int v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[5];
  uint64_t v30;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_canvasLayerHosting);
  v4 = objc_msgSend(v3, "interactiveCanvasController");
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(v4, "editorController");
    if (v6)
    {
      v7 = v6;
      v8 = swift_allocObject(&unk_10126F930, 17, 7);
      *(_BYTE *)(v8 + 16) = 0;
      v29[4] = sub_1005C5FD8;
      v30 = v8;
      v29[0] = _NSConcreteStackBlock;
      v29[1] = *(_QWORD *)"";
      v29[2] = sub_100541BD8;
      v29[3] = &unk_10126F948;
      v9 = _Block_copy(v29);
      v10 = v30;
      swift_retain(v8);
      objc_msgSend(v7, "enumerateEditorsOnStackUsingBlock:", v9, swift_release(v10).n128_f64[0]);

      _Block_release(v9);
      swift_beginAccess(v8 + 16, v29, 0, 0);
      LOBYTE(v7) = *(_BYTE *)(v8 + 16);

      swift_release(v8);
      if ((v7 & 1) != 0)
        return 1;
    }
    else
    {

    }
  }
  v11 = a1;
  v12 = objc_msgSend(v3, "interactiveCanvasController");
  if (v12)
  {
    v13 = v12;
    v14 = objc_msgSend(v12, "selectionModelTranslator");
    v15 = v14;
    if (v14)
    {
      v16 = objc_msgSend(v14, "boardItemsForSelectionPath:", v11);

      v17 = type metadata accessor for CRLBoardItem(0);
      v18 = sub_1004B7878((unint64_t *)&qword_1013E4190, type metadata accessor for CRLBoardItem, (uint64_t)&protocol conformance descriptor for NSObject);
      v15 = (void *)static Set._unconditionallyBridgeFromObjectiveC(_:)(v16, v17, v18);

    }
  }
  else
  {

    v15 = 0;
  }
  sub_1005C53B8((uint64_t)v15);
  v20 = v19;
  swift_bridgeObjectRelease(v15);
  if (!v20)
    return 1;
  v21 = *(_QWORD *)(v1
                  + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_flattenedBoardItemsForCurrentSelectionPath);
  if (!v21)
    goto LABEL_19;
  v22 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_canvasViewController), "traitCollection", swift_bridgeObjectRetain(v21).n128_f64[0]);
  if ((objc_msgSend((id)objc_opt_self(UIDevice), "crl_phoneUI") & 1) == 0)
  {
    v24 = objc_msgSend(v22, "crl_isCompactWidth");

    if (v24)
    {
      swift_bridgeObjectRelease(v21);
      goto LABEL_20;
    }
    sub_1005C0B88(v21, v20);
    v26 = v25;
    swift_bridgeObjectRelease(v21);
    if ((v26 & 1) == 0)
      goto LABEL_20;
LABEL_19:
    swift_bridgeObjectRelease(v20);
    return 1;
  }
  swift_bridgeObjectRelease(v21);

LABEL_20:
  if ((v20 & 0xC000000000000001) != 0)
  {
    if (v20 >= 0)
      v27 = v20 & 0xFFFFFFFFFFFFFF8;
    else
      v27 = v20;
    v28 = __CocoaSet.count.getter(v27);
  }
  else
  {
    v28 = *(_QWORD *)(v20 + 16);
  }
  swift_bridgeObjectRelease(v20);
  return v28 == 0;
}

void sub_1005C5D98()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;

  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_shouldRepositionSecondLayerPopover) == 1)
  {
    *(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_shouldRepositionSecondLayerPopover) = 0;
    sub_1005BFC64();
  }
  if (*(_BYTE *)(v0
                + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_shouldUpdateSecondLayerPopoverPassthroughViews) == 1)
  {
    *(_BYTE *)(v0
             + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_shouldUpdateSecondLayerPopoverPassthroughViews) = 0;
    sub_1005C0338();
  }
  v1 = OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_shouldUpdateSecondLayerPermittedArrowDirections;
  if (*(_BYTE *)(v0
                + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_shouldUpdateSecondLayerPermittedArrowDirections) == 1)
  {
    v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController);
    if (v2)
    {
      v8 = v2;
      v3 = objc_msgSend(v8, "visibleViewController");
      if (v3)
      {
        v4 = v3;
        v5 = type metadata accessor for CRLiOSMiniFormatterPopoverContainerViewController();
        v6 = swift_dynamicCastClass(v4, v5);
        if (v6)
        {
          *(_BYTE *)(v0 + v1) = 0;
          sub_1005C0654(v6, 0);
          v7 = v8;
          v8 = v4;
        }
        else
        {
          v7 = v4;
        }

      }
    }
  }
}

void sub_1005C5E90(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  double v14;
  double v15;
  double v16;
  double v17;
  id v18;
  id v19;

  v5 = type metadata accessor for CRLiOSMiniFormatterPopoverContainerViewController();
  v6 = swift_dynamicCastClass(a2, v5);
  if (v6)
  {
    v7 = *(void **)(v6 + OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_builder);
    v8 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_secondLayerPresentedBuilder);
    *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_secondLayerPresentedBuilder) = v7;
    v19 = a2;
    v9 = v7;

    objc_msgSend(a1, "setNavigationBarHidden:animated:", 1, 1);
    v10 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController);
    if (v10)
    {
      v11 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedWrappedNavigationController);
      if (v11)
      {
        v12 = v10;
        v13 = v11;
        sub_1005B6148(v14, v15, v16, v17);
        objc_msgSend(v12, "setPreferredContentSize:");
        v18 = v13;
        objc_msgSend(v12, "preferredContentSize");
        objc_msgSend(v18, "setPreferredContentSize:");

      }
    }
    sub_1005C1F98();

  }
}

uint64_t sub_1005C5FC8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1005C5FD8(void *a1, _BYTE *a2)
{
  uint64_t v2;

  return sub_100B655C4(a1, a2, v2);
}

uint64_t sub_1005C5FE0(id *a1)
{
  uint64_t v1;

  return sub_1005BE47C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24)) & 1;
}

uint64_t sub_1005C5FFC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 41, 7);
}

double sub_1005C6028(double a1)
{
  uint64_t v1;

  return sub_1005BB864(*(_BYTE *)(v1 + 16), *(char **)(v1 + 24), *(void **)(v1 + 32), *(_BYTE *)(v1 + 40), a1);
}

uint64_t sub_1005C605C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjCClassFromMetadata;
  id v6;
  void *v7;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
  v2 = type metadata accessor for CRLUSDZEditor();
  v4 = v2;
  if (v2)
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v2, v3);
  else
    ObjCClassFromMetadata = 0;
  v6 = objc_msgSend(v1, "mostSpecificCurrentEditorOfClass:", ObjCClassFromMetadata);
  v7 = (void *)swift_dynamicCastClass(v6, v4);
  if (v7)
    objc_msgSend(v7, "showMediaReplaceUI:", v0);
  return swift_unknownObjectRelease(v6);
}

id sub_1005C60EC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLMiniFormatterUSDZDataProvider();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLMiniFormatterUSDZDataProvider()
{
  return objc_opt_self(_TtC8Freeform32CRLMiniFormatterUSDZDataProvider);
}

uint64_t CRLWPWritingDirection.asNSWritingDirection.getter(uint64_t result)
{
  if ((unint64_t)(result + 1) >= 3)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"asNSWritingDirection", 20, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPWritingDirection.swift", 87, 2, 39, "Unknown direction.", 18, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"asNSWritingDirection", 20, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPWritingDirection.swift", 87, 2u, 39, (uint64_t)"Unknown direction.", 18, 2u);
    return -1;
  }
  return result;
}

uint64_t CRLWPWritingDirection.description.getter(uint64_t a1)
{
  switch(a1)
  {
    case -1:
      return 0x6C61727574614ELL;
    case 0:
      return 0x206F74207466654CLL;
    case 1:
      return 0x6F74207468676952;
  }
  sub_100757E04(&_mh_execute_header, (uint64_t)"description", 11, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPWritingDirection.swift", 87, 2, 55, "Unknown writing direction.", 26, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"description", 11, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPWritingDirection.swift", 87, 2u, 55, (uint64_t)"Unknown writing direction.", 26, 2u);
  return 0x2E6E776F6E6B6E55;
}

uint64_t initializeBufferWithCopyOfBuffer for CRLColorModelCMYKData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t destroy for CRLColorModelCMYKData(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
}

uint64_t assignWithCopy for CRLColorModelCMYKData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t assignWithTake for CRLColorModelCMYKData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLColorModelCMYKData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLColorModelCMYKData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLSceneSavedRectData()
{
  return &type metadata for CRLSceneSavedRectData;
}

uint64_t *sub_1005C64A8(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v18);
  }
  else
  {
    v7 = sub_1004B804C((uint64_t *)&unk_1013F02F0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1004B804C((uint64_t *)&unk_101405CB0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = sub_1004B804C(&qword_101405CC0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = *(uint64_t *)((char *)a2 + v16);
    *(uint64_t *)((char *)a1 + v16) = v17;
    swift_bridgeObjectRetain(v17);
  }
  return a1;
}

double sub_1005C65A0(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double result;

  v4 = sub_1004B804C((uint64_t *)&unk_1013F02F0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  v6 = sub_1004B804C((uint64_t *)&unk_101405CB0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  v8 = sub_1004B804C(&qword_101405CC0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[7])).n128_u64[0];
  return result;
}

uint64_t sub_1005C6640(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_1004B804C((uint64_t *)&unk_1013F02F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1004B804C((uint64_t *)&unk_101405CB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1004B804C(&qword_101405CC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = *(_QWORD *)(a2 + v15);
  *(_QWORD *)(a1 + v15) = v16;
  swift_bridgeObjectRetain(v16);
  return a1;
}

uint64_t sub_1005C670C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_1004B804C((uint64_t *)&unk_1013F02F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1004B804C((uint64_t *)&unk_101405CB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1004B804C(&qword_101405CC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = *(_QWORD *)(a2 + v15);
  v17 = *(_QWORD *)(a1 + v15);
  *(_QWORD *)(a1 + v15) = v16;
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRelease(v17);
  return a1;
}

uint64_t sub_1005C67E4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_1004B804C((uint64_t *)&unk_1013F02F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1004B804C((uint64_t *)&unk_101405CB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1004B804C(&qword_101405CC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1005C68AC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_1004B804C((uint64_t *)&unk_1013F02F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1004B804C((uint64_t *)&unk_101405CB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1004B804C(&qword_101405CC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = *(_QWORD *)(a1 + v15);
  *(_QWORD *)(a1 + v15) = *(_QWORD *)(a2 + v15);
  swift_bridgeObjectRelease(v16);
  return a1;
}

uint64_t sub_1005C697C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005C6988);
}

uint64_t sub_1005C6988(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v16;

  v6 = sub_1004B804C((uint64_t *)&unk_1013F02F0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1004B804C((uint64_t *)&unk_101405CB0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[5];
LABEL_7:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = sub_1004B804C(&qword_101405CC0);
  v12 = *(_QWORD *)(v14 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v14;
    v13 = a3[6];
    goto LABEL_7;
  }
  v16 = *(_QWORD *)(a1 + a3[7]);
  if (v16 >= 0xFFFFFFFF)
    LODWORD(v16) = -1;
  return (v16 + 1);
}

uint64_t sub_1005C6A60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005C6A6C);
}

uint64_t sub_1005C6A6C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;

  v8 = sub_1004B804C((uint64_t *)&unk_1013F02F0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  v13 = sub_1004B804C((uint64_t *)&unk_101405CB0);
  v14 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v13;
    v15 = a4[5];
LABEL_7:
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  result = sub_1004B804C(&qword_101405CC0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v15 = a4[6];
    goto LABEL_7;
  }
  *(_QWORD *)(a1 + a4[7]) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for CRLBoardScenesCRDTData(uint64_t a1)
{
  return sub_1004BD408(a1, (uint64_t *)&unk_1013E5810, (uint64_t)&nominal type descriptor for CRLBoardScenesCRDTData);
}

void sub_1005C6B54(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[4];

  sub_1005C6C00(319);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_1005C6C80(319);
    if (v5 <= 0x3F)
    {
      v8[1] = *(_QWORD *)(v4 - 8) + 64;
      sub_1005C6D28(319);
      if (v7 <= 0x3F)
      {
        v8[2] = *(_QWORD *)(v6 - 8) + 64;
        v8[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
        swift_initStructMetadata(a1, 256, 4, v8, a1 + 16);
      }
    }
  }
}

void sub_1005C6C00(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_1013E5820)
  {
    v2 = type metadata accessor for UUID(255);
    v3 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v4 = type metadata accessor for CROrderedSet(a1, v2, &protocol witness table for UUID, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1013E5820);
  }
}

void sub_1005C6C80(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[6];

  if (!qword_1013E5828)
  {
    v4[0] = type metadata accessor for UUID(255);
    v4[1] = &type metadata for String;
    v4[2] = &protocol witness table for UUID;
    v4[3] = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v4[4] = &protocol witness table for String;
    v4[5] = &protocol witness table for String;
    v2 = type metadata accessor for CRDictionary(a1, v4);
    if (!v3)
      atomic_store(v2, (unint64_t *)&qword_1013E5828);
  }
}

void sub_1005C6D28(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[6];

  if (!qword_1013E5830)
  {
    v4[0] = type metadata accessor for UUID(255);
    v4[1] = &type metadata for CRLSceneSavedRectData;
    v4[2] = &protocol witness table for UUID;
    v4[3] = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v4[4] = sub_1005C6DD8();
    v4[5] = sub_1005C6E1C();
    v2 = type metadata accessor for CRDictionary(a1, v4);
    if (!v3)
      atomic_store(v2, (unint64_t *)&qword_1013E5830);
  }
}

unint64_t sub_1005C6DD8()
{
  unint64_t result;

  result = qword_1013E5838;
  if (!qword_1013E5838)
  {
    result = swift_getWitnessTable(&unk_100EFC8F0, &type metadata for CRLSceneSavedRectData);
    atomic_store(result, (unint64_t *)&qword_1013E5838);
  }
  return result;
}

unint64_t sub_1005C6E1C()
{
  unint64_t result;

  result = qword_1013E5840;
  if (!qword_1013E5840)
  {
    result = swift_getWitnessTable(&unk_100EFCAA8, &type metadata for CRLSceneSavedRectData);
    atomic_store(result, (unint64_t *)&qword_1013E5840);
  }
  return result;
}

uint64_t sub_1005C6E60()
{
  uint64_t result;

  qword_10147EAB8 = 97;
  unk_10147EAC0 = 0xE100000000000000;
  qword_10147EAC8 = swift_getKeyPath(&unk_100EFCB10);
  unk_10147EAD0 = 98;
  qword_10147EAD8 = 0xE100000000000000;
  qword_10147EAE0 = swift_getKeyPath(&unk_100EFCB30);
  qword_10147EAE8 = 99;
  qword_10147EAF0 = 0xE100000000000000;
  result = swift_getKeyPath(&unk_100EFCB50);
  qword_10147EAF8 = result;
  return result;
}

uint64_t sub_1005C6ECC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int8 *v5;
  uint64_t v6;
  uint64_t inited;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  void (*v13)(__int8 *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  float64_t *v18;
  float64x2_t v19;
  float64x2_t v20;
  int8x16_t v21;
  uint64_t v22;
  int8x16_t v24;
  _QWORD *v25;
  _BYTE v26[72];

  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v24.i8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v6, v26);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v8 = UUID.uuidString.getter(inited);
  v10 = v9;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v8;
  *(_QWORD *)(inited + 40) = v10;
  v11 = sub_1004B804C((uint64_t *)&unk_1013F02F0);
  if ((CROrderedSet.contains(_:)(a1, v11) & 1) != 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"insertScene(from:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Scenes/CRLScenesData.swift", 96, 2, 50, "Trying to insert scene which already exists for UUID %{public}", 62, 2u, inited);
    sub_1004F5394(inited, (uint64_t)"insertScene(from:)", 18, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Scenes/CRLScenesData.swift", 96, 2u, 50, (uint64_t)"Trying to insert scene which already exists for UUID %{public}", 62, 2u);
  }
  v12 = swift_bridgeObjectRelease();
  CROrderedSet.append(_:)(a1, v11, v12);
  v13 = *(void (**)(__int8 *, uint64_t, uint64_t))(v3 + 16);
  v13(v5, a1, v2);
  v14 = type metadata accessor for CRLSceneDataValue(0);
  v15 = (uint64_t *)(a1 + *(int *)(v14 + 20));
  v16 = v15[1];
  v24.i64[0] = *v15;
  v24.i64[1] = v16;
  type metadata accessor for CRLBoardScenesCRDTData(0);
  swift_bridgeObjectRetain(v16);
  v17 = sub_1004B804C((uint64_t *)&unk_101405CB0);
  CRDictionary.subscript.setter(&v24, v5, v17);
  v13(v5, a1, v2);
  v18 = (float64_t *)(a1 + *(int *)(v14 + 24));
  v19.f64[0] = *v18;
  v20.f64[0] = v18[1];
  v19.f64[1] = v18[2];
  v20.f64[1] = v18[3];
  *(float32x2_t *)&v19.f64[0] = vcvt_f32_f64(v19);
  v21.i64[0] = LODWORD(v19.f64[0]);
  v21.i64[1] = HIDWORD(v19.f64[0]);
  v24 = vorrq_s8((int8x16_t)vshll_n_s32((int32x2_t)vcvt_f32_f64(v20), 0x20uLL), v21);
  v25 = _swiftEmptyDictionarySingleton;
  v22 = sub_1004B804C(&qword_101405CC0);
  return CRDictionary.subscript.setter(&v24, v5, v22);
}

BOOL sub_1005C7148(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  void *v14;
  uint64_t v15;
  uint64_t inited;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v25[72];
  uint64_t v26;

  v2 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v2);
  v4 = &v25[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v25[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_1004B804C((uint64_t *)&unk_1013F02F0);
  CROrderedSet.remove(_:)(a1, v9);
  v10 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (v10 == 1)
  {
    sub_1004CB800((uint64_t)v4, (uint64_t *)&unk_1013E1A50);
    if (qword_1013DD7E0 != -1)
      swift_once(&qword_1013DD7E0, sub_100A03F14);
    swift_beginAccess(&static OS_os_log.crlScenes, &v26, 0, 0);
    v14 = (void *)static OS_os_log.crlScenes;
    v15 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v15, v25);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v17 = v14;
    v18 = UUID.uuidString.getter(v17);
    v20 = v19;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = sub_1004CFC2C();
    *(_QWORD *)(inited + 32) = v18;
    *(_QWORD *)(inited + 40) = v20;
    v22 = static os_log_type_t.default.getter(v21);
    sub_100A06EBC((uint64_t)v17, &_mh_execute_header, v22, "Scene attribute lookup failed for UUID %{public}", 48, 2, inited);
    swift_setDeallocating(inited);
    v23 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v23);

  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 32))(v8, v4, v5);
    type metadata accessor for CRLBoardScenesCRDTData(0);
    v11 = sub_1004B804C((uint64_t *)&unk_101405CB0);
    CRDictionary.removeValue(forKey:)(&v26, v8, v11);
    swift_bridgeObjectRelease();
    v12 = sub_1004B804C(&qword_101405CC0);
    CRDictionary.removeValue(forKey:)(&v26, v8, v12);
    v13 = swift_bridgeObjectRelease();
    (*(void (**)(_BYTE *, uint64_t, __n128))(v6 + 8))(v8, v5, v13);
  }
  return v10 != 1;
}

uint64_t sub_1005C73D0(uint64_t a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  float64x2_t v12;
  float32x2_t v13;
  float64x2_t v14;
  int8x16_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t inited;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v28;
  __n128 v29;
  __n128 v30;
  __n128 v31;
  _BYTE v32[72];
  int8x16_t v33;
  _QWORD *v34;

  v30 = a3;
  v31 = a5;
  v28 = a2;
  v29 = a4;
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C((uint64_t *)&unk_1013F02F0);
  v11 = CROrderedSet.contains(_:)(a1, v10);
  if ((v11 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
    *(_QWORD *)&v12.f64[0] = v28.n128_u64[0];
    *(_QWORD *)&v12.f64[1] = v29.n128_u64[0];
    v13 = vcvt_f32_f64(v12);
    *(_QWORD *)&v14.f64[0] = v30.n128_u64[0];
    *(_QWORD *)&v14.f64[1] = v31.n128_u64[0];
    v15.i64[0] = v13.u32[0];
    v15.i64[1] = v13.u32[1];
    v33 = vorrq_s8((int8x16_t)vshll_n_s32((int32x2_t)vcvt_f32_f64(v14), 0x20uLL), v15);
    v34 = _swiftEmptyDictionarySingleton;
    type metadata accessor for CRLBoardScenesCRDTData(0);
    v16 = sub_1004B804C(&qword_101405CC0);
    CRDictionary.subscript.setter(&v33, v9, v16);
  }
  else
  {
    if (qword_1013DD7E0 != -1)
      swift_once(&qword_1013DD7E0, sub_100A03F14);
    swift_beginAccess(&static OS_os_log.crlScenes, &v33, 0, 0);
    v17 = (void *)static OS_os_log.crlScenes;
    v18 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v18, v32);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v20 = v17;
    v21 = UUID.uuidString.getter(v20);
    v23 = v22;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = sub_1004CFC2C();
    *(_QWORD *)(inited + 32) = v21;
    *(_QWORD *)(inited + 40) = v23;
    v25 = static os_log_type_t.default.getter(v24);
    sub_100A06EBC((uint64_t)v20, &_mh_execute_header, v25, "Scene rename failed for UUID %{public}", 38, 2, inited);
    swift_setDeallocating(inited);
    v26 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v26);

  }
  return v11 & 1;
}

uint64_t sub_1005C75D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  __n128 v23;
  uint64_t v24;
  char *v25;
  void (*v26)(char *, uint64_t, uint64_t, __n128);
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  id v31;
  __n128 v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  __n128 v40;
  void (*v41)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  char *v43;
  char v44;
  void (*v45)(char *, uint64_t);
  _QWORD *v46;
  __n128 v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  __n128 v60;
  uint64_t v61;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  void (*v82)(char *, uint64_t, uint64_t, __n128);
  void (*v83)(char *, char *, uint64_t);
  unsigned int (*v84)(char *, uint64_t, uint64_t);
  uint64_t v85;
  _QWORD v86[4];

  v3 = sub_1004B804C(&qword_1013E5968);
  __chkstk_darwin(v3);
  v69 = (char *)&v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C(&qword_1013E5970);
  v72 = *(_QWORD *)(v5 - 8);
  v73 = v5;
  __chkstk_darwin(v5);
  v71 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UUID(0);
  v85 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v81 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v64 - v10;
  v12 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v12);
  v14 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v77 = (char *)&v64 - v16;
  v17 = sub_1004B804C((uint64_t *)&unk_1013F02F0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v66 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v64 - v21;
  v79 = sub_1004B804C(&qword_1013F0320);
  v74 = *(_QWORD *)(v79 - 8);
  v23 = __chkstk_darwin(v79);
  v25 = (char *)&v64 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = v18;
  v26 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v18 + 16);
  v70 = v1;
  v26(v22, v1, v17, v23);
  v27 = sub_1004CBA30(&qword_1013E1A60, (uint64_t *)&unk_1013F02F0, (uint64_t)&protocol conformance descriptor for CROrderedSet<A>);
  swift_bridgeObjectRetain(a1);
  v68 = v17;
  v65 = v27;
  v28 = v27;
  v29 = v77;
  dispatch thunk of Sequence.makeIterator()(v17, v28);
  v30 = sub_1004CBA30(&qword_1013E1A68, &qword_1013F0320, (uint64_t)&protocol conformance descriptor for CROrderedSet<A>.Iterator);
  v78 = v25;
  v76 = v30;
  dispatch thunk of IteratorProtocol.next()(v79, v30);
  v84 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v85 + 48);
  if (v84(v29, 1, v7) != 1)
  {
    v83 = *(void (**)(char *, char *, uint64_t))(v85 + 32);
    v75 = a1;
    v34 = v81;
    do
    {
      v83(v11, v29, v7);
      v35 = *(_QWORD *)(a1 + 16);
      v36 = v11;
      if (v35)
      {
        v37 = a1 + ((*(unsigned __int8 *)(v85 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80));
        v38 = a1;
        v39 = (_QWORD *)v85;
        v40 = swift_bridgeObjectRetain(v38);
        v80 = v39[9];
        v82 = (void (*)(char *, uint64_t, uint64_t, __n128))v39[2];
        while (1)
        {
          v82(v14, v37, v7, v40);
          v41 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v39[7];
          v41(v14, 0, 1, v7);
          if (v84(v14, 1, v7) == 1)
            break;
          v83(v34, v14, v7);
          v42 = sub_1004B7878((unint64_t *)&qword_1013E4880, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
          v43 = v36;
          v44 = dispatch thunk of static Equatable.== infix(_:_:)(v34, v36);
          v45 = (void (*)(char *, uint64_t))v39[1];
          v45(v34, v7);
          if ((v44 & 1) != 0)
          {
            v48 = v75;
            v49 = swift_bridgeObjectRelease();
            ((void (*)(char *, uint64_t, __n128))v45)(v43, v7, v49);
            (*(void (**)(char *, uint64_t))(v74 + 8))(v78, v79);
            swift_bridgeObjectRelease();
            v86[0] = v48;
            v50 = sub_1004B804C(&qword_1013F0310);
            v51 = sub_1004CBA30(&qword_1013E5978, &qword_1013F0310, (uint64_t)&protocol conformance descriptor for [A]);
            v52 = sub_1004CBA30(&qword_1013E5980, (uint64_t *)&unk_1013F02F0, (uint64_t)&protocol conformance descriptor for CROrderedSet<A>);
            v53 = v71;
            v54 = v50;
            v55 = v68;
            BidirectionalCollection<>.difference<A>(from:)(v70, v54, v68, v51, v52, v42);
            v56 = sub_1004CBA30(&qword_1013E5988, (uint64_t *)&unk_1013F02F0, (uint64_t)&protocol conformance descriptor for CROrderedSet<A>);
            v57 = (uint64_t)v69;
            RangeReplaceableCollection.applying(_:)(v53, v55, v56);
            v58 = v67;
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v67 + 48))(v57, 1, v55) != 1)
            {
              v63 = v66;
              (*(void (**)(char *, uint64_t, uint64_t))(v58 + 32))(v66, v57, v55);
              CROrderedSet.removeAll()();
              CROrderedSet.append<A>(contentsOf:)(v63, v55, v55, v65);
              (*(void (**)(char *, uint64_t))(v58 + 8))(v63, v55);
              (*(void (**)(char *, uint64_t))(v72 + 8))(v53, v73);
              return 1;
            }
            sub_1004CB800(v57, &qword_1013E5968);
            if (qword_1013DD7E0 != -1)
              swift_once(&qword_1013DD7E0, sub_100A03F14);
            swift_beginAccess(&static OS_os_log.crlScenes, v86, 0, 0);
            v59 = (id)static OS_os_log.crlScenes;
            v61 = static os_log_type_t.default.getter(v60);
            sub_100A06EBC((uint64_t)v59, &_mh_execute_header, v61, "Failed to apply scene reordering.", 33, 2, (uint64_t)_swiftEmptyArrayStorage);

            (*(void (**)(char *, uint64_t))(v72 + 8))(v53, v73);
            return 0;
          }
          v37 += v80;
          --v35;
          v39 = (_QWORD *)v85;
          v36 = v43;
          if (!v35)
            goto LABEL_13;
        }
      }
      else
      {
        swift_bridgeObjectRetain(a1);
        v39 = (_QWORD *)v85;
        v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v85 + 56);
LABEL_13:
        v41(v14, 1, 1, v7);
      }
      v46 = v39;
      a1 = v75;
      v47 = swift_bridgeObjectRelease();
      ((void (*)(char *, uint64_t, __n128))v46[1])(v36, v7, v47);
      v29 = v77;
      v11 = v36;
      dispatch thunk of IteratorProtocol.next()(v79, v76);
    }
    while (v84(v29, 1, v7) != 1);
  }
  (*(void (**)(char *, uint64_t))(v74 + 8))(v78, v79);
  swift_bridgeObjectRelease();
  if (qword_1013DD7E0 != -1)
    swift_once(&qword_1013DD7E0, sub_100A03F14);
  swift_beginAccess(&static OS_os_log.crlScenes, v86, 0, 0);
  v31 = (id)static OS_os_log.crlScenes;
  v33 = static os_log_type_t.default.getter(v32);
  sub_100A06EBC((uint64_t)v31, &_mh_execute_header, v33, "Reordered scene IDs are not equal to existing scene IDs.", 56, 2, (uint64_t)_swiftEmptyArrayStorage);

  return 0;
}

double sub_1005C7D1C@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double result;

  if (qword_1013DCB00 != -1)
    swift_once(&qword_1013DCB00, sub_1005C6E60);
  v2 = unk_10147EAC0;
  v4 = qword_10147EAC8;
  v3 = unk_10147EAD0;
  v5 = qword_10147EAD8;
  v6 = qword_10147EAE0;
  v7 = qword_10147EAE8;
  v8 = qword_10147EAF0;
  v9 = qword_10147EAF8;
  *a1 = qword_10147EAB8;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  a1[4] = v5;
  a1[5] = v6;
  a1[6] = v7;
  a1[7] = v8;
  a1[8] = v9;
  swift_bridgeObjectRetain(v2);
  swift_retain(v4);
  swift_bridgeObjectRetain(v5);
  swift_retain(v6);
  swift_bridgeObjectRetain(v8);
  *(_QWORD *)&result = swift_retain(v9).n128_u64[0];
  return result;
}

uint64_t sub_1005C7DC8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_1013E5960, type metadata accessor for CRLBoardScenesCRDTData, (uint64_t)&unk_100EFC7D0);
  return static CRStruct_3.fieldKeys.getter(a1, v2);
}

uint64_t sub_1005C7E08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v4 = type metadata accessor for UUID(0);
  v5 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  CROrderedSet.init()(v4, &protocol witness table for UUID, v5);
  CRDictionary.init()(v4, &type metadata for String, &protocol witness table for UUID, v5, &protocol witness table for String, &protocol witness table for String);
  v6 = sub_1005C6DD8();
  v7 = sub_1005C6E1C();
  result = CRDictionary.init()(v4, &type metadata for CRLSceneSavedRectData, &protocol witness table for UUID, v5, v6, v7);
  *(_QWORD *)(a2 + *(int *)(a1 + 28)) = _swiftEmptyDictionarySingleton;
  return result;
}

uint64_t sub_1005C7F00(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_1013E5888, type metadata accessor for CRLBoardScenesCRDTData, (uint64_t)&unk_100EFC608);
  return CRType.context.getter(a1, v2);
}

uint64_t sub_1005C7F40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E5960, type metadata accessor for CRLBoardScenesCRDTData, (uint64_t)&unk_100EFC7D0);
  return CRStruct_3.actionUndoingDifference(from:)(a1, a2, v4);
}

uint64_t sub_1005C7F98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E5960, type metadata accessor for CRLBoardScenesCRDTData, (uint64_t)&unk_100EFC7D0);
  return CRStruct_3.apply(_:)(a1, a2, v4);
}

uint64_t sub_1005C7FE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E5960, type metadata accessor for CRLBoardScenesCRDTData, (uint64_t)&unk_100EFC7D0);
  return CRStruct_3.hasDelta(from:)(a1, a2, v4);
}

uint64_t sub_1005C8038(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B7878(&qword_1013E5960, type metadata accessor for CRLBoardScenesCRDTData, (uint64_t)&unk_100EFC7D0);
  return CRStruct_3.delta(_:from:)(a1, a2, a3, v6);
}

uint64_t sub_1005C80A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E5960, type metadata accessor for CRLBoardScenesCRDTData, (uint64_t)&unk_100EFC7D0);
  return CRStruct_3.canMerge(delta:)(a1, a2, v4);
}

uint64_t sub_1005C80F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E5960, type metadata accessor for CRLBoardScenesCRDTData, (uint64_t)&unk_100EFC7D0);
  return CRStruct_3.merge(delta:)(a1, a2, v4);
}

uint64_t sub_1005C8140(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E5960, type metadata accessor for CRLBoardScenesCRDTData, (uint64_t)&unk_100EFC7D0);
  return CRStruct_3.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_1005C8198(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B7878(&qword_1013E5960, type metadata accessor for CRLBoardScenesCRDTData, (uint64_t)&unk_100EFC7D0);
  return CRStruct_3.observableDifference(from:with:)(a1, a2, a3, v6);
}

uint64_t sub_1005C8200(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E5960, type metadata accessor for CRLBoardScenesCRDTData, (uint64_t)&unk_100EFC7D0);
  return CRStruct_3.visitReferences(_:)(a1, a2, v4);
}

BOOL sub_1005C8250()
{
  sub_1004B7878(&qword_1013E5960, type metadata accessor for CRLBoardScenesCRDTData, (uint64_t)&unk_100EFC7D0);
  return CRStruct_3.needToFinalizeTimestamps()();
}

uint64_t sub_1005C8290(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E5960, type metadata accessor for CRLBoardScenesCRDTData, (uint64_t)&unk_100EFC7D0);
  return CRStruct_3.finalizeTimestamps(_:)(a1, a2, v4);
}

uint64_t sub_1005C82E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E5960, type metadata accessor for CRLBoardScenesCRDTData, (uint64_t)&unk_100EFC7D0);
  return CRStruct_3.merge(_:)(a1, a2, v4);
}

uint64_t sub_1005C8330(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B7878(&qword_1013E58A0, type metadata accessor for CRLBoardScenesCRDTData, (uint64_t)&unk_100EFC668);
  return CRDT.serializedData(_:version:)(a1, a2, a3, v6);
}

uint64_t sub_1005C8394(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B7878(&qword_1013E58A0, type metadata accessor for CRLBoardScenesCRDTData, (uint64_t)&unk_100EFC668);
  return CRDT.init(serializedData:)(a1, a2, a3, v6);
}

uint64_t sub_1005C8408(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E5960, type metadata accessor for CRLBoardScenesCRDTData, (uint64_t)&unk_100EFC7D0);
  return CRStruct_3.init(from:)(a1, a2, v4);
}

uint64_t sub_1005C846C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E5960, type metadata accessor for CRLBoardScenesCRDTData, (uint64_t)&unk_100EFC7D0);
  return CRStruct_3.encode(to:)(a1, a2, v4);
}

uint64_t sub_1005C84C8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_1013E5960, type metadata accessor for CRLBoardScenesCRDTData, (uint64_t)&unk_100EFC7D0);
  return CRStruct_3.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_1005C8518()
{
  return sub_1004B7878(&qword_1013E5878, type metadata accessor for CRLBoardScenesCRDTData, (uint64_t)&unk_100EFC588);
}

uint64_t sub_1005C8544()
{
  return sub_1004B7878(&qword_1013E5880, type metadata accessor for CRLBoardScenesCRDTData, (uint64_t)&unk_100EFC5D0);
}

uint64_t sub_1005C8570()
{
  return sub_1004B7878(&qword_1013E5888, type metadata accessor for CRLBoardScenesCRDTData, (uint64_t)&unk_100EFC608);
}

uint64_t sub_1005C859C()
{
  return sub_1004CBA30(&qword_1013E5890, &qword_1013E5898, (uint64_t)&protocol conformance descriptor for CRStructMergeableDelta_3<A>);
}

uint64_t sub_1005C85C8()
{
  return sub_1004B7878(&qword_1013E58A0, type metadata accessor for CRLBoardScenesCRDTData, (uint64_t)&unk_100EFC668);
}

uint64_t sub_1005C85F4()
{
  return sub_1004B7878(&qword_1013E58A8, type metadata accessor for CRLBoardScenesCRDTData, (uint64_t)&unk_100EFC6E8);
}

uint64_t sub_1005C8620()
{
  return sub_1004CBA30(&qword_1013E58B0, (uint64_t *)&unk_1013F02F0, (uint64_t)&protocol conformance descriptor for CROrderedSet<A>);
}

uint64_t sub_1005C864C()
{
  return sub_1004CBA30(&qword_1013E58B8, (uint64_t *)&unk_101405CB0, (uint64_t)&protocol conformance descriptor for CRDictionary<A, B>);
}

uint64_t sub_1005C8678()
{
  return sub_1004CBA30(&qword_1013E58C0, &qword_101405CC0, (uint64_t)&protocol conformance descriptor for CRDictionary<A, B>);
}

uint64_t sub_1005C86A4()
{
  return sub_1004B7878(&qword_1013E58C8, type metadata accessor for CRLBoardScenesCRDTData, (uint64_t)&unk_100EFC748);
}

uint64_t sub_1005C86D0()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000010;
  else
    return 0x6174614474636572;
}

uint64_t sub_1005C8710@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1005C917C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1005C8734(_QWORD *a1@<X8>)
{
  *a1 = &off_101264038;
}

uint64_t sub_1005C8744(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = sub_1005C8D40();
  v5 = sub_1005C8D88();
  return static CodingKey<>.intCases.getter(a1, a2, v4, v5);
}

uint64_t sub_1005C8788(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1005C8D88();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005C87B0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1005C8D88();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1005C87D8(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  __int128 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;
  char v17;
  __int128 v18;

  v3 = v1;
  v5 = sub_1004B804C(&qword_1013E5948);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_1005C8D88();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLSceneSavedRectData.CodingKeys, &type metadata for CRLSceneSavedRectData.CodingKeys, v11, v9, v10);
  v18 = *v3;
  v17 = 0;
  v12 = sub_1005C944C();
  KeyedEncodingContainer.encode<A>(_:forKey:)(&v18, &v17, v5, &type metadata for CRLRectData, v12);
  if (!v2)
  {
    *(_QWORD *)&v18 = *((_QWORD *)v3 + 2);
    v17 = 1;
    v13 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    v14 = sub_1004F31B4();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v18, &v17, v5, v13, v14);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t SyncEvent.SentDatabaseChanges.deletedZoneIDs.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease(*(_QWORD *)(v1 + 16));
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *SyncEvent.SentRecordZoneChanges.deletedRecordIDs.modify())(CKRecordID recordID, Swift::String recordType)
{
  return SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
}

uint64_t sub_1005C8960(float32x4_t *a1, float32x4_t *a2)
{
  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vceqq_f32(*a1, *a2)), 0xFuLL))) & 1) != 0)
    return sub_100C9E04C(a1[1].i64[0], a2[1].i64[0]);
  else
    return 0;
}

double sub_1005C8998@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  uint64_t v6;

  sub_1005C9268(a1, &v5);
  if (!v2)
  {
    result = *(double *)&v5;
    *(_OWORD *)a2 = v5;
    *(_QWORD *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_1005C89D8(_QWORD *a1)
{
  return sub_1005C87D8(a1);
}

uint64_t sub_1005C89EC(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_1005C9490();
  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_1005C8A2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t v7;

  v6 = sub_1005C6DD8();
  v7 = sub_1005C6E1C();
  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_1005C8A88(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_1005C9490();
  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_1005C8AC0(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_1005C8E8C();
  return CRValueStruct.init(from:)(a1, a2, v4);
}

uint64_t sub_1005C8B0C(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_1005C8E8C();
  return CRValueStruct.encode(to:)(a1, a2, v4);
}

uint64_t sub_1005C8B50(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1005C8E8C();
  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

unint64_t sub_1005C8B8C()
{
  unint64_t result;

  result = qword_1013E58D0;
  if (!qword_1013E58D0)
  {
    result = swift_getWitnessTable(&unk_100EFC7F8, &type metadata for CRLSceneSavedRectData);
    atomic_store(result, (unint64_t *)&qword_1013E58D0);
  }
  return result;
}

unint64_t sub_1005C8BD4()
{
  unint64_t result;

  result = qword_1013E58D8;
  if (!qword_1013E58D8)
  {
    result = swift_getWitnessTable(&unk_100EFC840, &type metadata for CRLSceneSavedRectData);
    atomic_store(result, (unint64_t *)&qword_1013E58D8);
  }
  return result;
}

unint64_t sub_1005C8C20()
{
  unint64_t result;

  result = qword_1013E58E0;
  if (!qword_1013E58E0)
  {
    result = swift_getWitnessTable(&unk_100EFC8C8, &type metadata for CRLSceneSavedRectData);
    atomic_store(result, (unint64_t *)&qword_1013E58E0);
  }
  return result;
}

unint64_t sub_1005C8C68()
{
  unint64_t result;

  result = qword_1013E58E8;
  if (!qword_1013E58E8)
  {
    result = swift_getWitnessTable(&unk_100EFC8A0, &type metadata for CRLSceneSavedRectData);
    atomic_store(result, (unint64_t *)&qword_1013E58E8);
  }
  return result;
}

unint64_t sub_1005C8CB0()
{
  unint64_t result;

  result = qword_1013E58F0;
  if (!qword_1013E58F0)
  {
    result = swift_getWitnessTable(&unk_100EFC970, &type metadata for CRLSceneSavedRectData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E58F0);
  }
  return result;
}

unint64_t sub_1005C8CF8()
{
  unint64_t result;

  result = qword_1013E58F8;
  if (!qword_1013E58F8)
  {
    result = swift_getWitnessTable(&unk_100EFCA80, &type metadata for CRLSceneSavedRectData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E58F8);
  }
  return result;
}

unint64_t sub_1005C8D40()
{
  unint64_t result;

  result = qword_1013E5900;
  if (!qword_1013E5900)
  {
    result = swift_getWitnessTable(&unk_100EFCA48, &type metadata for CRLSceneSavedRectData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E5900);
  }
  return result;
}

unint64_t sub_1005C8D88()
{
  unint64_t result;

  result = qword_1013E5908;
  if (!qword_1013E5908)
  {
    result = swift_getWitnessTable(&unk_100EFC9A8, &type metadata for CRLSceneSavedRectData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E5908);
  }
  return result;
}

unint64_t sub_1005C8DD0()
{
  unint64_t result;

  result = qword_1013E5910;
  if (!qword_1013E5910)
  {
    result = swift_getWitnessTable(&unk_100EFCA20, &type metadata for CRLSceneSavedRectData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E5910);
  }
  return result;
}

unint64_t sub_1005C8E18()
{
  unint64_t result;

  result = qword_1013E5918;
  if (!qword_1013E5918)
  {
    result = swift_getWitnessTable(&unk_100EFC9F8, &type metadata for CRLSceneSavedRectData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E5918);
  }
  return result;
}

uint64_t sub_1005C8E5C()
{
  return sub_1004CBA30(&qword_1013E5920, &qword_1013E5928, (uint64_t)&protocol conformance descriptor for [A]);
}

unint64_t sub_1005C8E8C()
{
  unint64_t result;

  result = qword_1013E5930;
  if (!qword_1013E5930)
  {
    result = swift_getWitnessTable(&unk_100EFC928, &type metadata for CRLSceneSavedRectData);
    atomic_store(result, (unint64_t *)&qword_1013E5930);
  }
  return result;
}

uint64_t sub_1005C8ED0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  char *v21;
  char *v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v27;

  v4 = type metadata accessor for CRLBoardScenesCRDTData(0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v5);
  v10 = (char *)&v27 - v9;
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v27 - v12;
  __chkstk_darwin(v11);
  v15 = (char *)&v27 - v14;
  v16 = type metadata accessor for UUID(0);
  v17 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v18 = static CROrderedSet.== infix(_:_:)(a1, a2, v16, &protocol witness table for UUID, v17);
  sub_1005C90FC(a1, (uint64_t)v15);
  sub_1005C90FC(a2, (uint64_t)v13);
  if ((v18 & 1) == 0)
  {
    sub_1005C9140((uint64_t)v13);
    sub_1005C9140((uint64_t)v15);
    sub_1005C90FC(a1, (uint64_t)v10);
    sub_1005C90FC(a2, (uint64_t)v7);
    goto LABEL_5;
  }
  v19 = static CRDictionary.== infix(_:_:)(&v15[*(int *)(v4 + 20)], &v13[*(int *)(v4 + 20)], v16, &type metadata for String, &protocol witness table for UUID, v17, &protocol witness table for String, &protocol witness table for String);
  sub_1005C9140((uint64_t)v13);
  sub_1005C9140((uint64_t)v15);
  sub_1005C90FC(a1, (uint64_t)v10);
  sub_1005C90FC(a2, (uint64_t)v7);
  if ((v19 & 1) == 0)
  {
LABEL_5:
    v25 = 0;
    goto LABEL_6;
  }
  v20 = *(int *)(v4 + 24);
  v21 = &v10[v20];
  v22 = &v7[v20];
  v23 = sub_1005C6DD8();
  v24 = sub_1005C6E1C();
  v25 = static CRDictionary.== infix(_:_:)(v21, v22, v16, &type metadata for CRLSceneSavedRectData, &protocol witness table for UUID, v17, v23, v24);
LABEL_6:
  sub_1005C9140((uint64_t)v7);
  sub_1005C9140((uint64_t)v10);
  return v25 & 1;
}

uint64_t sub_1005C90FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLBoardScenesCRDTData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005C9140(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CRLBoardScenesCRDTData(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1005C917C(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v7;

  if (a1 == 0x6174614474636572 && a2 == 0xE800000000000000)
  {
    v5 = 0xE800000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6174614474636572, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0xD000000000000010 && a2 == 0x8000000100FAF1E0)
  {
    swift_bridgeObjectRelease(0x8000000100FAF1E0);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x8000000100FAF1E0, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1005C9268@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t result;
  _QWORD v19[2];
  char v20;

  v5 = sub_1004B804C(&qword_1013E5938);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_1005C8D88();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLSceneSavedRectData.CodingKeys, &type metadata for CRLSceneSavedRectData.CodingKeys, v11, v9, v10);
  if (v2)
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  v20 = 0;
  v12 = sub_1005C9408();
  KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for CRLRectData, &v20, v5, &type metadata for CRLRectData, v12);
  v13 = v19[0];
  v14 = v19[1];
  v15 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
  v20 = 1;
  v16 = sub_1004F3130();
  KeyedDecodingContainer.decode<A>(_:forKey:)(v15, &v20, v5, v15, v16);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v17 = v19[0];
  result = _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  *a2 = v13;
  a2[1] = v14;
  a2[2] = v17;
  return result;
}

unint64_t sub_1005C9408()
{
  unint64_t result;

  result = qword_1013E5940;
  if (!qword_1013E5940)
  {
    result = swift_getWitnessTable(&unk_100F10F84, &type metadata for CRLRectData);
    atomic_store(result, (unint64_t *)&qword_1013E5940);
  }
  return result;
}

unint64_t sub_1005C944C()
{
  unint64_t result;

  result = qword_1013E5950;
  if (!qword_1013E5950)
  {
    result = swift_getWitnessTable(&unk_100F10F5C, &type metadata for CRLRectData);
    atomic_store(result, (unint64_t *)&qword_1013E5950);
  }
  return result;
}

unint64_t sub_1005C9490()
{
  unint64_t result;

  result = qword_1013E5958;
  if (!qword_1013E5958)
  {
    result = swift_getWitnessTable(&unk_100EFCAD0, &type metadata for CRLSceneSavedRectData);
    atomic_store(result, (unint64_t *)&qword_1013E5958);
  }
  return result;
}

uint64_t type metadata accessor for CRLSceneDataValue(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1013E59E8, (uint64_t)&nominal type descriptor for CRLSceneDataValue);
}

uint64_t *sub_1005C94E8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  __int128 v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v16);
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (_OWORD *)((char *)a1 + v9);
    v14 = (_OWORD *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    swift_bridgeObjectRetain(v12);
  }
  return a1;
}

uint64_t sub_1005C958C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(a2 + 20) + 8));
}

uint64_t sub_1005C95D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  __int128 v14;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_OWORD *)(a1 + v8);
  v13 = (_OWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  swift_bridgeObjectRetain(v11);
  return a1;
}

uint64_t sub_1005C964C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v10 = v9[1];
  v11 = v8[1];
  v8[1] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  v12 = *(int *)(a3 + 24);
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  *v13 = *v14;
  v13[1] = v14[1];
  v13[2] = v14[2];
  v13[3] = v14[3];
  return a1;
}

uint64_t sub_1005C96F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  __int128 v10;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  return a1;
}

uint64_t sub_1005C9760(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  __int128 v16;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  v12 = v8[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease(v12);
  v13 = *(int *)(a3 + 24);
  v14 = (_OWORD *)(a1 + v13);
  v15 = (_OWORD *)(a2 + v13);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  return a1;
}

uint64_t sub_1005C97E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005C97EC);
}

uint64_t sub_1005C97EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1005C986C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005C9878);
}

uint64_t sub_1005C9878(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1005C98F4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100EFCB88;
    v4[2] = &unk_100EFCBA0;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CRLSceneSavedRectData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1005C99BC + 4 * byte_100EFC545[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1005C99F0 + 4 * asc_100EFC540[v4]))();
}

uint64_t sub_1005C99F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1005C99F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1005C9A00);
  return result;
}

uint64_t sub_1005C9A0C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1005C9A14);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1005C9A18(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1005C9A20(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLSceneSavedRectData.CodingKeys()
{
  return &type metadata for CRLSceneSavedRectData.CodingKeys;
}

unint64_t sub_1005C9A40()
{
  unint64_t result;

  result = qword_1013E5A28;
  if (!qword_1013E5A28)
  {
    result = swift_getWitnessTable(&unk_100EFCC3C, &type metadata for CRLSceneSavedRectData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E5A28);
  }
  return result;
}

id sub_1005C9A88(void *a1)
{
  char *v1;
  uint64_t v3;
  void *v4;
  char *v5;
  id v6;
  objc_super v8;

  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_playNormalImage] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_playPressedImage] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_pauseNormalImage] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_pausePressedImage] = 0;
  v3 = OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_imageRenderable;
  v4 = (void *)objc_opt_self(CRLCanvasRenderable);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "renderable");
  v5[OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_isPlaying] = 0;
  v5[OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_isBeingTracked] = 0;

  v8.receiver = v5;
  v8.super_class = (Class)type metadata accessor for CRLUSDZPlayPauseKnob();
  v6 = objc_msgSendSuper2(&v8, "initWithType:position:radius:tag:onRep:", 0, 5, a1, 0.0, 0.0, 24.0);
  sub_1005C9C3C();
  objc_msgSend(v6, "setWorksWithStylus:", 1);
  objc_msgSend(v6, "setWorksWhenRepLocked:", 1);
  objc_msgSend(v6, "setWorksWhenDocumentIsSharedReadOnly:", 1);
  sub_1005CA394();
  sub_1005CA188();

  return v6;
}

id sub_1005C9C3C()
{
  void *v0;
  id result;
  void *v2;
  uint64_t v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  void *v10;
  id v11;
  double v12;
  double v13;
  double v14;
  int v15;
  double v16;

  result = objc_msgSend(v0, "rep");
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  v2 = result;
  v3 = type metadata accessor for CRLUSDZRep(0);
  objc_msgSend((id)swift_dynamicCastClassUnconditional(v2, v3, 0, 0, 0), "boundsForStandardKnobs");
  v5 = v4;
  v7 = v6;

  objc_msgSend(v0, "radius");
  v9 = v8;
  result = objc_msgSend(v0, "rep");
  if (!result)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  v10 = result;
  v11 = objc_msgSend((id)swift_dynamicCastClassUnconditional(result, v3, 0, 0, 0), "canvas");

  if (v11)
  {
    objc_msgSend(v11, "viewScale");
    v13 = v12;

  }
  else
  {
    v13 = 1.0;
  }
  v14 = (v9 + 8.0) / v13;
  v15 = sub_1003A91F4();
  v16 = v5 * 0.5 - v14;
  if (v15)
    v16 = -v16;
  return objc_msgSend(v0, "setOffset:", v16, v7 * 0.5 - v14);
}

uint64_t sub_1005C9D90()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  char v7;
  char v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  id v13;

  v1 = v0;
  v2 = objc_msgSend(v0, "knobImage");
  v3 = *(void **)&v0[OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_playNormalImage];
  if (v2)
  {
    v4 = v2;
    if (v3)
    {
      sub_1005CA7B4();
      v5 = v3;
      v6 = v4;
      v7 = static NSObject.== infix(_:_:)(v6, v5);

      if ((v7 & 1) != 0)
        goto LABEL_6;
    }
    else
    {

    }
  }
  else if (!v3)
  {
LABEL_6:
    v8 = 1;
    return v8 & 1;
  }
  v9 = objc_msgSend(v1, "knobImage");
  v10 = *(void **)&v1[OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_playPressedImage];
  v8 = v10 == 0;
  if (v9)
  {
    v11 = v9;
    if (v10)
    {
      sub_1005CA7B4();
      v12 = v10;
      v13 = v11;
      v8 = static NSObject.== infix(_:_:)(v13, v12);

      v11 = v12;
    }
    else
    {
      v8 = 0;
    }

  }
  return v8 & 1;
}

void sub_1005C9ED8()
{
  void *v0;
  double v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  id v8;

  objc_msgSend(v0, "radius");
  v2 = -v1;
  objc_msgSend(v0, "radius");
  v4 = -v3;
  objc_msgSend(v0, "radius");
  v6 = v5 + v5;
  objc_msgSend(v0, "radius");
  v8 = objc_msgSend((id)objc_opt_self(CRLBezierPath), "bezierPathWithOvalInRect:", v2, v4, v6, v7 + v7);
  objc_msgSend(v0, "setHitRegionPath:", v8);

}

id sub_1005C9FCC()
{
  char *v0;
  id v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  id v14;

  v1 = objc_msgSend((id)objc_opt_self(CRLCanvasShapeRenderable), "renderable");
  objc_msgSend(v1, "addSubrenderable:", *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_imageRenderable]);
  objc_msgSend(v0, "radius");
  v2 = sub_10005FDDC();
  v4 = v3;
  v6 = v5;
  v8 = v7;
  objc_msgSend(v0, "radius");
  v10 = objc_msgSend((id)objc_opt_self(CRLBezierPath), "bezierPathWithContinuousCornerRoundedRect:cornerRadius:", v2, v4, v6, v8, v9);
  objc_msgSend(v1, "setBounds:", v2, v4, v6, v8);
  v11 = objc_msgSend(v10, "CGPath");
  objc_msgSend(v1, "setPath:", v11);

  sub_1005CA848();
  if (v12)
  {
    v13 = v12;
    v14 = objc_msgSend(v12, "CGColor");

  }
  else
  {
    v14 = 0;
  }
  objc_msgSend(v1, "setFillColor:", v14);

  return v1;
}

void sub_1005CA188()
{
  char *v0;
  id v1;
  void *v2;
  void *v3;
  id v4;
  double v5;
  void *v6;
  id v7;
  double v8;
  uint64_t v9;
  id v10;
  CGFloat v11;
  CGFloat v12;
  CGFloat v13;
  CGFloat v14;
  double v15;
  double v16;
  double v17;
  char v18;
  double v19;
  id v20;
  id v21;
  id v22;

  v22 = objc_msgSend(v0, "knobImage");
  if (v22)
  {
    v1 = objc_msgSend(v0, "renderable");
    if (v1)
    {
      v2 = v1;
      v3 = (void *)objc_opt_self(CATransaction);
      objc_msgSend(v3, "begin");
      objc_msgSend(v3, "disableActions");
      v4 = objc_msgSend(v0, "rep");
      v5 = 1.0;
      if (v4)
      {
        v6 = v4;
        v7 = objc_msgSend(v4, "canvas");

        if (v7)
        {
          objc_msgSend(v7, "contentsScale");
          v5 = v8;

        }
      }
      v9 = OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_imageRenderable;
      v10 = *(id *)&v0[OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_imageRenderable];
      objc_msgSend(v22, "size");
      objc_msgSend(v10, "setBounds:", sub_10005FDDC());

      objc_msgSend(v2, "bounds");
      v15 = sub_100061400(v11, v12, v13, v14);
      v17 = v16;
      v18 = sub_1005C9D90();
      v19 = v15 + 2.88;
      if ((v18 & 1) == 0)
        v19 = v15;
      objc_msgSend(*(id *)&v0[v9], "setPosition:", v19, v17);
      v20 = *(id *)&v0[v9];
      v21 = objc_msgSend(v22, "CGImageForContentsScale:", v5);
      objc_msgSend(v20, "setContents:", v21);

      objc_msgSend(v3, "commit");
    }

  }
}

void sub_1005CA394()
{
  uint64_t v0;
  id v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;

  v1 = sub_1005CA5D8(0x6C69662E79616C70, 0xE90000000000006CLL);
  v3 = v2;
  v4 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_playNormalImage);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_playNormalImage) = v1;
  v5 = v1;

  v6 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_playPressedImage);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_playPressedImage) = v3;
  v7 = v3;

  v8 = sub_1005CA5D8(0x69662E6573756170, 0xEA00000000006C6CLL);
  v10 = v9;
  v11 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_pauseNormalImage);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_pauseNormalImage) = v8;
  v12 = v8;

  v13 = *(id *)(v0 + OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_pausePressedImage);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_pausePressedImage) = v10;

}

void sub_1005CA47C(void **a1)
{
  id v2;
  id v3;
  void *v4;

  v2 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  v3 = objc_msgSend(objc_allocWithZone((Class)CRLColor), "initWithUIColor:", v2);

  v4 = *a1;
  *a1 = v3;

}

id sub_1005CA520()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLUSDZPlayPauseKnob();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLUSDZPlayPauseKnob()
{
  return objc_opt_self(_TtC8Freeform20CRLUSDZPlayPauseKnob);
}

id sub_1005CA5D8(uint64_t a1, uint64_t a2)
{
  id v3;
  id v4;
  NSString v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;

  v3 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:weight:", 3, 22.0);
  swift_bridgeObjectRetain(a2);
  v4 = v3;
  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v6 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v5, v4);

  if (v6)
  {
    v7 = objc_msgSend(objc_allocWithZone((Class)CRLImage), "initWithUIImage:", v6);

  }
  else
  {
    v7 = 0;
  }
  v8 = (void *)objc_opt_self(CRLColor);
  v9 = objc_msgSend(v8, "whiteColor");
  if (v7)
    v10 = objc_msgSend(v7, "compositedImageWithColor:alpha:blendMode:", v9, 20, 1.0);
  else
    v10 = 0;
  v11 = v10;
  v12 = objc_msgSend(v8, "blackColor");
  if (v10)
  {
    v13 = v11;
    objc_msgSend(v13, "compositedImageWithColor:alpha:blendMode:", v12, 20, 0.333333333);

  }
  else
  {

  }
  return v10;
}

unint64_t sub_1005CA7B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E45F0;
  if (!qword_1013E45F0)
  {
    v1 = objc_opt_self(CRLImage);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1013E45F0);
  }
  return result;
}

uint64_t sub_1005CA7F0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t *v2;
  uint64_t *v3;

  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_isBeingTracked))
    v1 = &OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_pausePressedImage;
  else
    v1 = &OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_pauseNormalImage;
  v2 = &OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_playPressedImage;
  if (!*(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_isBeingTracked))
    v2 = &OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_playNormalImage;
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_isPlaying))
    v3 = v1;
  else
    v3 = v2;
  return *(_QWORD *)(v0 + *v3);
}

void sub_1005CA848()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  _QWORD aBlock[5];
  uint64_t v8;
  uint64_t v9;

  v9 = 0;
  v0 = objc_opt_self(UITraitCollection);
  v1 = objc_msgSend((id)v0, "traitCollectionWithUserInterfaceStyle:", 1);
  v2 = swift_allocObject(&unk_10126FEB8, 24, 7);
  *(_QWORD *)(v2 + 16) = &v9;
  v3 = swift_allocObject(&unk_10126FEE0, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_1005CA9C8;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_1005B71BC;
  v8 = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_100618D24;
  aBlock[3] = &unk_10126FEF8;
  v4 = _Block_copy(aBlock);
  v5 = v8;
  v6 = v1;
  swift_retain(v3);
  objc_msgSend((id)v0, "crl_withTraitCollectionAsCurrent:performBlock:", v6, v4, swift_release(v5).n128_f64[0]);

  _Block_release(v4);
  LOBYTE(v0) = swift_isEscapingClosureAtFileLocation(v3, "", 91, 173, 77, 1);
  swift_release(v3);
  if ((v0 & 1) != 0)
    __break(1u);
  else
    swift_release(v2);
}

uint64_t sub_1005CA9B8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1005CA9C8()
{
  uint64_t v0;

  sub_1005CA47C(*(void ***)(v0 + 16));
}

uint64_t sub_1005CA9D0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1005CA9E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1005CA9F0(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_1005CA9F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v3[11] = a2;
  v3[12] = a3;
  v3[10] = a1;
  v4 = sub_1004B804C(&qword_1013E04D0);
  v3[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for URL(0);
  v3[14] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[15] = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[16] = swift_task_alloc(v7);
  v3[17] = swift_task_alloc(v7);
  return swift_task_switch(sub_1005CAA90, 0, 0);
}

uint64_t sub_1005CAA90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  unint64_t v7;
  _QWORD *v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 80) + 16);
  *(_QWORD *)(v0 + 144) = v1;
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 88);
    sub_1004BB5A4(*(_QWORD **)(v0 + 96), *(_QWORD *)(*(_QWORD *)(v0 + 96) + 24));
    v3 = v2 + *(int *)(type metadata accessor for CRLBoardEntity(0) + 40);
    v4 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 152) = v4;
    *(_QWORD *)(v0 + 160) = static MainActor.shared.getter(v4);
    v5 = (_QWORD *)swift_task_alloc(dword_10140E224);
    *(_QWORD *)(v0 + 168) = v5;
    *v5 = v0;
    v5[1] = sub_1005CAB90;
    return sub_100CA2984(v3);
  }
  else
  {
    v7 = sub_1005CB368();
    swift_allocError(&type metadata for CRLAppIntentsBoardItemsImporterError, v7, 0, 0);
    *v8 = 0;
    swift_willThrow(v9);
    v10 = *(_QWORD *)(v0 + 128);
    v11 = *(_QWORD *)(v0 + 104);
    swift_task_dealloc(*(_QWORD *)(v0 + 136));
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1005CAB90(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)();
  uint64_t v11;

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 168);
  *(_QWORD *)(*v2 + 176) = v1;
  swift_task_dealloc(v5);
  v6 = *(_QWORD *)(v4 + 152);
  if (v1)
  {
    v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
    v9 = v8;
    v10 = sub_1005CAFCC;
  }
  else
  {
    *(_QWORD *)(v4 + 184) = a1;
    v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
    v9 = v11;
    v10 = sub_1005CAC34;
  }
  return swift_task_switch(v10, v7, v9);
}

uint64_t sub_1005CAC34()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[23];
  swift_release(v0[20]);
  v0[5] = &type metadata for CRLBoardLibraryHeadlessControllerDependency;
  v0[6] = &off_10129B470;
  v0[2] = v1;
  return swift_task_switch(sub_1005CAC8C, 0, 0);
}

uint64_t sub_1005CAC8C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  double *v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t (*v11)(_QWORD, _QWORD, _QWORD);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  __n128 v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v31;
  unint64_t v32;
  void (*v33)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t (*v34)(uint64_t, uint64_t);
  double *v35;

  v1 = v0[15];
  v2 = v0[10];
  v3 = _swiftEmptyArrayStorage;
  v32 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v4 = v2 + v32;
  v5 = *(_QWORD *)(v1 + 72);
  v33 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v1 + 16);
  v35 = _swiftEmptyArrayStorage;
  v6 = swift_bridgeObjectRetain(v2);
  v7 = 0;
  v31 = v5;
  while (1)
  {
    v9 = v0[13];
    v8 = v0[14];
    v33(v9, v4, v8, v6);
    v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 56);
    v10(v9, 0, 1, v8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v9, 1, v8) == 1)
      break;
    v11 = *(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v1 + 32);
    v12 = v11(v0[17], v0[13], v0[14]);
    v13 = URL.scheme.getter(v12);
    if (v14)
    {
      v15 = v13;
      v16 = v14;
      if (v13 == 0x7370747468 && v14 == 0xE500000000000000
        || (_stringCompareWithSmolCheck(_:_:expecting:)(v13, v14, 0x7370747468, 0xE500000000000000, 0) & 1) != 0
        || v15 == 1886680168 && v16 == 0xE400000000000000)
      {
        v17 = swift_bridgeObjectRelease();
LABEL_12:
        ((void (*)(_QWORD, _QWORD, _QWORD, __n128))v11)(v0[16], v0[17], v0[14], v17);
        if ((swift_isUniquelyReferenced_nonNull_native(v3) & 1) == 0)
        {
          sub_1006009A8(0, *((_QWORD *)v3 + 2) + 1, 1);
          v3 = v35;
        }
        v19 = *((_QWORD *)v3 + 2);
        v18 = *((_QWORD *)v3 + 3);
        if (v19 >= v18 >> 1)
        {
          sub_1006009A8(v18 > 1, v19 + 1, 1);
          v3 = v35;
        }
        v20 = v0[16];
        v21 = v0[14];
        *((_QWORD *)v3 + 2) = v19 + 1;
        v22 = (char *)v3 + v32 + v19 * v31;
        v5 = v31;
        v11(v22, v20, v21);
        v35 = v3;
        goto LABEL_3;
      }
      v23 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v16, 1886680168, 0xE400000000000000, 0);
      v17 = swift_bridgeObjectRelease();
      if ((v23 & 1) != 0)
        goto LABEL_12;
    }
    (*(void (**)(_QWORD, _QWORD))(v1 + 8))(v0[17], v0[14]);
LABEL_3:
    ++v7;
    v4 += v5;
    if (v7 == v0[18])
    {
      v10(v0[13], 1, 1, v0[14]);
      break;
    }
  }
  v0[24] = v3;
  v24 = v0[18];
  v25 = v0[13];
  swift_bridgeObjectRelease();
  sub_1005534BC(v25);
  if (*((_QWORD *)v3 + 2) != v24)
  {
    if (qword_1013DD838 != -1)
      swift_once(&qword_1013DD838, sub_100A04F30);
    swift_beginAccess(&static OS_os_log.appIntents, v0 + 7, 0, 0);
    v26 = (id)static OS_os_log.appIntents;
    v28 = static os_log_type_t.debug.getter(v27);
    sub_100A06EBC((uint64_t)v26, &_mh_execute_header, v28, "Attempted to import non web urls as link previews", 49, 2, (uint64_t)_swiftEmptyArrayStorage);

  }
  v34 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1013F2F30 + dword_1013F2F30);
  v29 = (_QWORD *)swift_task_alloc(unk_1013F2F34);
  v0[25] = v29;
  *v29 = v0;
  v29[1] = sub_1005CB058;
  return v34((uint64_t)v3, (uint64_t)(v0 + 2));
}

uint64_t sub_1005CAFCC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 160));
  return swift_task_switch(sub_1005CB008, 0, 0);
}

uint64_t sub_1005CB008()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 104);
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005CB058(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v5)();

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 200);
  v3[26] = a1;
  v3[27] = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v5 = sub_1005CB240;
  }
  else
  {
    swift_release(v3[24]);
    v5 = sub_1005CB0CC;
  }
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_1005CB0CC()
{
  _QWORD *v0;
  _QWORD *v1;

  sub_1004BB5A4(v0 + 2, v0[5]);
  v1 = (_QWORD *)swift_task_alloc(dword_101409BB4);
  v0[28] = v1;
  *v1 = v0;
  v1[1] = sub_1005CB128;
  return sub_100C00668(v0[26]);
}

uint64_t sub_1005CB128()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 224));
  return swift_task_switch(sub_1005CB17C, 0, 0);
}

uint64_t sub_1005CB17C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *sub_1004BB5A4(*(_QWORD **)(v0 + 96), *(_QWORD *)(*(_QWORD *)(v0 + 96) + 24));
  v2 = (_QWORD *)swift_task_alloc(dword_10140AD0C);
  *(_QWORD *)(v0 + 232) = v2;
  *v2 = v0;
  v2[1] = sub_1005CB1DC;
  return sub_100C151E4(v0 + 16, v1);
}

uint64_t sub_1005CB1DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 232);
  *(_QWORD *)(*(_QWORD *)v1 + 240) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1005CB304;
  else
    v3 = sub_1005CB2A4;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1005CB240()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 192));
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 16));
  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 104);
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005CB2A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 104);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 16));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 208));
}

uint64_t sub_1005CB304()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 16));
  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 104);
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_1005CB368()
{
  unint64_t result;

  result = qword_1013E5A98;
  if (!qword_1013E5A98)
  {
    result = swift_getWitnessTable(&unk_100F1EC18, &type metadata for CRLAppIntentsBoardItemsImporterError);
    atomic_store(result, (unint64_t *)&qword_1013E5A98);
  }
  return result;
}

uint64_t initializeWithCopy for CRLInsertURLToBoardIntentPerformer(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

_QWORD *assignWithCopy for CRLInsertURLToBoardIntentPerformer(_QWORD *a1, _QWORD *a2)
{
  sub_1004EA5C8(a1, a2);
  return a1;
}

uint64_t assignWithTake for CRLInsertURLToBoardIntentPerformer(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for CRLInsertURLToBoardIntentPerformer()
{
  return &type metadata for CRLInsertURLToBoardIntentPerformer;
}

void UUID.init(crl_data:)(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1005CB49C(__n128 a1)
{
  int v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  __n128 v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v36;
  char v37;
  char v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unsigned int v46;

  if (BYTE6(v2) == 16)
  {
    if (!v1)
    {
      v14 = v4 >> 8;
      v15 = v4 >> 16;
      v16 = v4 >> 24;
      v17 = HIDWORD(v4);
      v18 = v4 >> 40;
      v19 = HIWORD(v4);
      v20 = HIBYTE(v4);
      v22 = v2 >> 8;
      v23 = v2 >> 16;
      v9 = v2 >> 24;
      v24 = HIDWORD(v2);
      v13 = v4;
      v21 = v2;
      v25 = v2 >> 40;
      goto LABEL_13;
    }
    *(_QWORD *)(v7 - 72) = v3;
    if (v1 == 1)
    {
      if ((int)v4 <= (uint64_t)v4 >> 32)
      {
        v8 = __DataStorage._bytes.getter(a1);
        if (!v8)
        {
LABEL_18:
          __DataStorage._length.getter();
          __break(1u);
          goto LABEL_19;
        }
        v9 = v8;
        v10 = __DataStorage._offset.getter();
        v11 = (int)v4 - v10;
        if (!__OFSUB__((int)v4, v10))
        {
          __DataStorage._length.getter();
          v12 = (_BYTE *)(v9 + v11);
          v13 = *(unsigned __int8 *)(v9 + v11);
          v14 = *(unsigned __int8 *)(v9 + v11 + 1);
          v15 = *(unsigned __int8 *)(v9 + v11 + 2);
          v16 = *(unsigned __int8 *)(v9 + v11 + 3);
          v17 = *(unsigned __int8 *)(v9 + v11 + 4);
          v18 = *(unsigned __int8 *)(v9 + v11 + 5);
          v19 = *(unsigned __int8 *)(v9 + v11 + 6);
          v20 = *(unsigned __int8 *)(v9 + v11 + 7);
          v21 = *(_BYTE *)(v9 + v11 + 8);
          LOBYTE(v22) = *(_BYTE *)(v9 + v11 + 9);
          LOBYTE(v23) = *(_BYTE *)(v9 + v11 + 10);
          LOBYTE(v9) = *(_BYTE *)(v9 + v11 + 11);
          LOBYTE(v24) = v12[12];
          LOBYTE(v25) = v12[13];
          v5 = v12[14];
          v6 = v12[15];
LABEL_13:
          HIBYTE(v36) = v6;
          BYTE6(v36) = v5;
          BYTE5(v36) = v25;
          BYTE4(v36) = v24;
          BYTE3(v36) = v9;
          BYTE2(v36) = v23;
          BYTE1(v36) = v22;
          LOBYTE(v36) = v21;
          UUID.init(uuid:)(v13, v14, v15, v16, v17, v18, v19, v20, v36);
          return sub_1004BBBC8(v4, v2);
        }
LABEL_17:
        __break(1u);
        goto LABEL_18;
      }
      __break(1u);
    }
    else
    {
      v28 = *(_QWORD *)(v4 + 16);
      swift_retain(v4);
      v29 = swift_retain(v2 & 0x3FFFFFFFFFFFFFFFLL);
      v30 = __DataStorage._bytes.getter(v29);
      if (!v30)
      {
LABEL_19:
        __DataStorage._length.getter();
        __break(1u);
        JUMPOUT(0x1005CB708);
      }
      v9 = v30;
      v31 = __DataStorage._offset.getter();
      v32 = __OFSUB__(v28, v31);
      v33 = v28 - v31;
      if (!v32)
      {
        __DataStorage._length.getter();
        v34 = (_BYTE *)(v9 + v33);
        v46 = *(unsigned __int8 *)(v9 + v33);
        v45 = *(unsigned __int8 *)(v9 + v33 + 1);
        v44 = *(unsigned __int8 *)(v9 + v33 + 2);
        v43 = *(unsigned __int8 *)(v9 + v33 + 3);
        v42 = *(unsigned __int8 *)(v9 + v33 + 4);
        v41 = *(unsigned __int8 *)(v9 + v33 + 5);
        v40 = *(unsigned __int8 *)(v9 + v33 + 6);
        v39 = *(unsigned __int8 *)(v9 + v33 + 7);
        v38 = *(_BYTE *)(v9 + v33 + 8);
        v37 = *(_BYTE *)(v9 + v33 + 9);
        LOBYTE(v23) = *(_BYTE *)(v9 + v33 + 10);
        LOBYTE(v9) = *(_BYTE *)(v9 + v33 + 11);
        LOBYTE(v24) = v34[12];
        LOBYTE(v25) = v34[13];
        v5 = v34[14];
        v6 = v34[15];
        swift_release(v2 & 0x3FFFFFFFFFFFFFFFLL);
        swift_release(v4);
        v21 = v38;
        LOBYTE(v22) = v37;
        v20 = v39;
        v19 = v40;
        v13 = v46;
        v18 = v41;
        v17 = v42;
        v16 = v43;
        v15 = v44;
        v14 = v45;
        goto LABEL_13;
      }
    }
    __break(1u);
    goto LABEL_17;
  }
  v26 = sub_1005CB718();
  swift_allocError(&type metadata for UUID.UUIDCodingError, v26, 0, 0);
  swift_willThrow(v27);
  return sub_1004BBBC8(v4, v2);
}

unint64_t sub_1005CB718()
{
  unint64_t result;

  result = qword_1013E5AA0;
  if (!qword_1013E5AA0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for UUID.UUIDCodingError, &type metadata for UUID.UUIDCodingError);
    atomic_store(result, (unint64_t *)&qword_1013E5AA0);
  }
  return result;
}

uint64_t UUID.crl_data()()
{
  char v0;
  char v1;
  char v2;
  char v3;
  char v4;
  char v5;
  char v6;
  char v7;
  uint64_t __src;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;

  __src = UUID.uuid.getter();
  v10 = v0;
  v11 = v1;
  v12 = v2;
  v13 = v3;
  v14 = v4;
  v15 = v5;
  v16 = v6;
  v17 = v7;
  UUID.uuid.getter();
  return sub_1005CB82C(&__src, 16);
}

uint64_t sub_1005CB82C(_BYTE *__src, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  if (!a2)
    return 0;
  if (a2 <= 14)
    return sub_100AF390C(__src, &__src[a2]);
  v4 = type metadata accessor for __DataStorage(0);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  __DataStorage.init(bytes:length:)(__src, a2);
  if ((unint64_t)a2 < 0x7FFFFFFF)
    return a2 << 32;
  v6 = type metadata accessor for Data.RangeReference(0);
  result = swift_allocObject(v6, 32, 7);
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = a2;
  return result;
}

unint64_t sub_1005CB8DC()
{
  unint64_t result;

  result = qword_1013E5AA8;
  if (!qword_1013E5AA8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for UUID.UUIDCodingError, &type metadata for UUID.UUIDCodingError);
    atomic_store(result, (unint64_t *)&qword_1013E5AA8);
  }
  return result;
}

uint64_t _s15UUIDCodingErrorOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1005CB960 + 4 * byte_100EFCD14[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1005CB980 + 4 * byte_100EFCD19[v4]))();
}

_BYTE *sub_1005CB960(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1005CB980(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1005CB988(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1005CB990(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1005CB998(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1005CB9A0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for UUID.UUIDCodingError()
{
  return &type metadata for UUID.UUIDCodingError;
}

double sub_1005CB9BC@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjCClassFromMetadata;
  id v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  double result;
  id v14;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
  v4 = sub_1004B8930(0, (unint64_t *)&qword_1013E5AE0, off_1012297D8);
  if (v4)
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v4, v5);
  else
    ObjCClassFromMetadata = 0;
  v7 = objc_msgSend(v3, "mostSpecificCurrentEditorOfClass:", ObjCClassFromMetadata);
  v8 = objc_opt_self(CRLBoardItemEditor);
  v9 = (void *)swift_dynamicCastObjCClass(v7, v8);
  if (!v9)
  {
    swift_unknownObjectRelease(v7);
LABEL_9:
    *(_QWORD *)(a1 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    return result;
  }
  v10 = objc_msgSend(v9, "anyBoardItem");
  swift_unknownObjectRelease(v7);
  if (!v10)
    goto LABEL_9;
  v14 = v10;
  v11 = type metadata accessor for CRLBoardItem(0);
  v12 = sub_1004B804C(&qword_1013E5AE8);
  if ((swift_dynamicCast(a1, &v14, v11, v12, 6) & 1) == 0)
    goto LABEL_9;
  return result;
}

uint64_t sub_1005CBAD0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  uint64_t v11;
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;

  v0 = sub_1004B804C((uint64_t *)&unk_1013E9BE0);
  __chkstk_darwin(v0);
  v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005CB9BC((uint64_t)&v10);
  if (!v11)
  {
    sub_1004CB800((uint64_t)&v10, &qword_1013F13D0);
    v8 = type metadata accessor for CRLAssetData(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v2, 1, 1, v8);
    goto LABEL_5;
  }
  sub_1004DB728(&v10, (uint64_t)v12);
  v3 = v13;
  v4 = v14;
  sub_1004BB5A4(v12, v13);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v12);
  v5 = type metadata accessor for CRLAssetData(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v2, 1, v5) == 1)
  {
LABEL_5:
    sub_1004CB800((uint64_t)v2, (uint64_t *)&unk_1013E9BE0);
    return 0;
  }
  v6 = &v2[*(int *)(v5 + 20)];
  v7 = *(_QWORD *)v6;
  swift_bridgeObjectRetain(*((_QWORD *)v6 + 1));
  sub_1005CC194((uint64_t)v2);
  return v7;
}

id sub_1005CBC1C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  char *v22;
  id v23;
  void *v24;
  os_unfair_lock_s *v25;
  id v26;
  NSURL *v27;
  void *v28;
  void *v29;
  __int128 v31;
  uint64_t v32;
  _QWORD v33[3];
  uint64_t v34;
  uint64_t v35;

  v0 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v0);
  v2 = (char *)&v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C((uint64_t *)&unk_1013E9BE0);
  __chkstk_darwin(v7);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005CB9BC((uint64_t)&v31);
  if (v32)
  {
    sub_1004DB728(&v31, (uint64_t)v33);
    v10 = v34;
    v11 = v35;
    sub_1004BB5A4(v33, v34);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v11);
    v12 = type metadata accessor for CRLAssetData(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v9, 1, v12) == 1)
    {
      sub_1004CB800((uint64_t)v9, (uint64_t *)&unk_1013E9BE0);
    }
    else
    {
      v14 = v34;
      v15 = v35;
      sub_1004BB5A4(v33, v34);
      v16 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(v15 + 16))(v14, v15);
      v17 = *(_QWORD *)&v16[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v17 + 16));
      v18 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
      v19 = *(void **)&v16[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
      if (v19)
      {
        v20 = *(id *)&v16[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
      }
      else
      {
        v21 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager(0));
        v22 = v16;
        v23 = sub_100C7EE84((uint64_t)v22);

        v24 = *(void **)&v16[v18];
        *(_QWORD *)&v16[v18] = v23;
        v20 = v23;

        v19 = 0;
      }
      v25 = *(os_unfair_lock_s **)(v17 + 16);
      v26 = v19;
      os_unfair_lock_unlock(v25);
      sub_100C7857C((uint64_t)v9, 0, 3, 0, v2);

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) != 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
        URL._bridgeToObjectiveC()(v27);
        v29 = v28;
        v13 = objc_msgSend(v28, "crl_fileSize");

        (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
        sub_1005CC194((uint64_t)v9);
        goto LABEL_12;
      }
      sub_1004CB800((uint64_t)v2, &qword_1013E04D0);

      sub_1005CC194((uint64_t)v9);
    }
    v13 = 0;
LABEL_12:
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v33);
    return v13;
  }
  sub_1004CB800((uint64_t)&v31, &qword_1013F13D0);
  return 0;
}

id sub_1005CBF0C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjCClassFromMetadata;
  id v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  void *v9;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
  v2 = sub_1004B8930(0, &qword_1013E5AD8, off_101229930);
  if (v2)
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v2, v3);
  else
    ObjCClassFromMetadata = 0;
  v5 = objc_msgSend(v1, "mostSpecificCurrentEditorOfClass:", ObjCClassFromMetadata);
  v6 = objc_opt_self(CRLMediaEditor);
  v7 = (id)swift_dynamicCastObjCClass(v5, v6);
  if (v7)
  {
    v8 = objc_opt_self(CRLImageEditor);
    v9 = (void *)swift_dynamicCastObjCClass(v7, v8);
    if (v9)
      v7 = objc_msgSend(v9, "canRemoveImageBackground");
    else
      v7 = 0;
  }
  swift_unknownObjectRelease(v5);
  return v7;
}

double sub_1005CBFDC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjCClassFromMetadata;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  double result;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
  v2 = sub_1004B8930(0, &qword_1013E5AD8, off_101229930);
  if (v2)
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v2, v3);
  else
    ObjCClassFromMetadata = 0;
  v5 = objc_msgSend(v1, "mostSpecificCurrentEditorOfClass:", ObjCClassFromMetadata);
  v6 = objc_opt_self(CRLMediaEditor);
  v7 = swift_dynamicCastObjCClass(v5, v6);
  if (v7)
  {
    v8 = v7;
    v9 = objc_opt_self(CRLImageEditor);
    v10 = (void *)swift_dynamicCastObjCClass(v8, v9);
    if (v10)
      objc_msgSend(v10, "removeImageBackground:", v0);
  }
  *(_QWORD *)&result = swift_unknownObjectRelease(v5).n128_u64[0];
  return result;
}

uint64_t sub_1005CC0A4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjCClassFromMetadata;
  id v5;
  uint64_t v6;
  void *v7;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
  v2 = sub_1004B8930(0, &qword_1013E5AD8, off_101229930);
  if (v2)
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v2, v3);
  else
    ObjCClassFromMetadata = 0;
  v5 = objc_msgSend(v1, "mostSpecificCurrentEditorOfClass:", ObjCClassFromMetadata);
  v6 = objc_opt_self(CRLMediaEditor);
  v7 = (void *)swift_dynamicCastObjCClass(v5, v6);
  if (v7)
    objc_msgSend(v7, "showMediaReplaceUI:", v0);
  return swift_unknownObjectRelease(v5);
}

id sub_1005CC144()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLMiniFormatterMediaDataProvider();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLMiniFormatterMediaDataProvider()
{
  return objc_opt_self(_TtC8Freeform33CRLMiniFormatterMediaDataProvider);
}

uint64_t sub_1005CC194(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CRLAssetData(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1005CC1D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[5];
  uint64_t v27;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v2 = a1;
    else
      v2 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = __CocoaSet.makeIterator()(v2);
    v4 = type metadata accessor for AnyCancellable(0);
    v5 = sub_1005034A0(&qword_1013E4A10, 255, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
    v6 = Set.Iterator.init(_cocoa:)(v26, v3, v4, v5);
    v1 = v26[0];
    v24 = v26[1];
    v7 = v26[2];
    v8 = v26[3];
    v9 = v26[4];
  }
  else
  {
    v10 = -1 << *(_BYTE *)(a1 + 32);
    v24 = a1 + 56;
    v7 = ~v10;
    v11 = -v10;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v9 = v12 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain(a1);
    v8 = 0;
  }
  v13 = (unint64_t)(v7 + 64) >> 6;
  if (v1 < 0)
    goto LABEL_13;
  while (1)
  {
    if (v9)
    {
      v14 = (v9 - 1) & v9;
      v15 = __clz(__rbit64(v9)) | (v8 << 6);
      v16 = v8;
      goto LABEL_32;
    }
    v21 = v8 + 1;
    if (__OFADD__(v8, 1))
      break;
    if (v21 >= v13)
      goto LABEL_35;
    v22 = *(_QWORD *)(v24 + 8 * v21);
    v16 = v8 + 1;
    if (!v22)
    {
      v16 = v8 + 2;
      if (v8 + 2 >= v13)
        goto LABEL_35;
      v22 = *(_QWORD *)(v24 + 8 * v16);
      if (!v22)
      {
        v16 = v8 + 3;
        if (v8 + 3 >= v13)
          goto LABEL_35;
        v22 = *(_QWORD *)(v24 + 8 * v16);
        if (!v22)
        {
          v16 = v8 + 4;
          if (v8 + 4 >= v13)
            goto LABEL_35;
          v22 = *(_QWORD *)(v24 + 8 * v16);
          if (!v22)
          {
            v16 = v8 + 5;
            if (v8 + 5 >= v13)
              goto LABEL_35;
            v22 = *(_QWORD *)(v24 + 8 * v16);
            if (!v22)
            {
              v23 = v8 + 6;
              while (v13 != v23)
              {
                v22 = *(_QWORD *)(v24 + 8 * v23++);
                if (v22)
                {
                  v16 = v23 - 1;
                  goto LABEL_31;
                }
              }
LABEL_35:
              sub_1004D284C(v1);
              return;
            }
          }
        }
      }
    }
LABEL_31:
    v14 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v16 << 6);
LABEL_32:
    v20 = *(_QWORD *)(*(_QWORD *)(v1 + 48) + 8 * v15);
    swift_retain(v20);
    if (!v20)
      goto LABEL_35;
    while (1)
    {
      AnyCancellable.cancel()();
      swift_release(v20);
      v8 = v16;
      v9 = v14;
      if ((v1 & 0x8000000000000000) == 0)
        break;
LABEL_13:
      v17 = __CocoaSet.Iterator.next()(v6);
      if (v17)
      {
        v18 = v17;
        v25 = v17;
        v19 = type metadata accessor for AnyCancellable(0);
        swift_unknownObjectRetain(v18);
        swift_dynamicCast(&v27, &v25, (char *)&type metadata for Swift.AnyObject + 8, v19, 7);
        v20 = v27;
        swift_unknownObjectRelease(v18);
        v16 = v8;
        v14 = v9;
        if (v20)
          continue;
      }
      goto LABEL_35;
    }
  }
  __break(1u);
}

void sub_1005CC474(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  char *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  void (*v19)(char *, unint64_t, uint64_t);
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, __n128);
  __n128 v29;
  int64_t v30;
  unint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  int64_t v42;
  char v43[24];
  _QWORD *v44;

  v40 = sub_1004B804C(&qword_1013E60D0);
  v2 = __chkstk_darwin(v40);
  v39 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __chkstk_darwin(v2);
  v38 = (uint64_t)&v34 - v5;
  __chkstk_darwin(v4);
  v37 = (char *)&v34 - v6;
  v44 = _swiftEmptyArrayStorage;
  v7 = *(_QWORD *)(a1 + 64);
  v35 = a1 + 64;
  v8 = 1 << *(_BYTE *)(a1 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & v7;
  v36 = (unint64_t)(v8 + 63) >> 6;
  v41 = a1;
  swift_bridgeObjectRetain(a1);
  v11 = 0;
  v12 = v39;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v42 = v11;
      v14 = v13 | (v11 << 6);
      goto LABEL_5;
    }
    v30 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v30 >= v36)
      goto LABEL_23;
    v31 = *(_QWORD *)(v35 + 8 * v30);
    v32 = v11 + 1;
    if (!v31)
    {
      v32 = v11 + 2;
      if (v11 + 2 >= v36)
        goto LABEL_23;
      v31 = *(_QWORD *)(v35 + 8 * v32);
      if (!v31)
      {
        v32 = v11 + 3;
        if (v11 + 3 >= v36)
          goto LABEL_23;
        v31 = *(_QWORD *)(v35 + 8 * v32);
        if (!v31)
        {
          v32 = v11 + 4;
          if (v11 + 4 >= v36)
            goto LABEL_23;
          v31 = *(_QWORD *)(v35 + 8 * v32);
          if (!v31)
            break;
        }
      }
    }
LABEL_22:
    v10 = (v31 - 1) & v31;
    v42 = v32;
    v14 = __clz(__rbit64(v31)) + (v32 << 6);
LABEL_5:
    v15 = v41;
    v16 = *(_QWORD *)(v41 + 48);
    v17 = type metadata accessor for UUID(0);
    v18 = *(_QWORD **)(v17 - 8);
    v19 = (void (*)(char *, unint64_t, uint64_t))v18[2];
    v20 = v37;
    v19(v37, v16 + v18[9] * v14, v17);
    v21 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 8 * v14);
    v22 = v40;
    *(_QWORD *)&v20[*(int *)(v40 + 48)] = v21;
    v23 = (uint64_t)v20;
    v24 = v38;
    sub_1004C4938(v23, v38, &qword_1013E60D0);
    v25 = *(int *)(v22 + 48);
    v19(v12, v24, v17);
    v26 = *(_QWORD *)(v24 + v25);
    *(_QWORD *)&v12[v25] = v26;
    swift_beginAccess(v26 + 16, v43, 0, 0);
    v27 = *(_QWORD *)(v26 + 16);
    v28 = (void (*)(char *, uint64_t, __n128))v18[1];
    swift_retain(v21);
    v29 = swift_bridgeObjectRetain(v27);
    v28(v12, v17, v29);
    sub_1004CB800(v24, &qword_1013E60D0);
    sub_100620168(v27);
    v11 = v42;
  }
  v33 = v11 + 5;
  if (v11 + 5 >= v36)
  {
LABEL_23:
    swift_release(v41);
    return;
  }
  v31 = *(_QWORD *)(v35 + 8 * v33);
  if (v31)
  {
    v32 = v11 + 5;
    goto LABEL_22;
  }
  while (1)
  {
    v32 = v33 + 1;
    if (__OFADD__(v33, 1))
      break;
    if (v32 >= v36)
      goto LABEL_23;
    v31 = *(_QWORD *)(v35 + 8 * v32);
    ++v33;
    if (v31)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
}

void sub_1005CC77C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  void *Strong;
  id v5;
  _QWORD *v6;
  unint64_t v7;
  _QWORD *v8;
  __n128 v9;
  _BYTE v10[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v10, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    v6 = sub_1005D26D4(v5);
    a2[3] = type metadata accessor for CRLCloudAssetDownloader();
    a2[4] = &off_101270828;

    *a2 = v6;
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"init(store:)", 12, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLAssetDownloadManager.swift", 95, 2, 23, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(store:)", 12, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLAssetDownloadManager.swift", 95, 2u, 23, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    v7 = sub_1005D2A0C();
    swift_allocError(&type metadata for CRLAssetError, v7, 0, 0);
    *v8 = 0xD00000000000002CLL;
    v8[1] = 0x8000000100FB7BE0;
    swift_willThrow(v9);
  }
}

uint64_t sub_1005CC8D8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  SCNetworkReachabilityRef v3;
  SCNetworkReachabilityRef v4;
  uint64_t v5;
  uint64_t result;
  id v7;
  uint64_t v8;
  unint64_t v9;
  _BYTE *v10;
  __n128 v11;
  sockaddr v12;
  _BYTE v13[24];

  *(_QWORD *)&v12.sa_data[6] = 0;
  *(_QWORD *)v12.sa_data = 0;
  *(_WORD *)&v12.sa_len = 528;
  v3 = SCNetworkReachabilityCreateWithAddress(0, &v12);
  if (v3)
  {
    v4 = v3;
    v5 = type metadata accessor for CRLNetworkReachabilityListener();
    swift_allocObject(v5, 88, 7);
    result = sub_1008F07BC(v4);
    if (!v1)
    {
      a1[3] = v5;
      a1[4] = (uint64_t)&off_101286E28;
      *a1 = result;
    }
  }
  else
  {
    if (qword_1013DD720 != -1)
      swift_once(&qword_1013DD720, sub_100A01CD8);
    swift_beginAccess(&static OS_os_log.crlNetworkReachability, v13, 0, 0);
    v7 = (id)static OS_os_log.crlNetworkReachability;
    v8 = static os_log_type_t.error.getter();
    sub_100A06EBC((uint64_t)v7, &_mh_execute_header, v8, "Failed to create network rechability for zero address.", 54, 2, (uint64_t)_swiftEmptyArrayStorage);

    v9 = sub_1005D29C8();
    swift_allocError(&type metadata for CRLNetworkReachabilityListenerError, v9, 0, 0);
    *v10 = 0;
    return swift_willThrow(v11);
  }
  return result;
}

uint64_t sub_1005CCA54(uint64_t (*a1)(uint64_t))
{
  return a1(1);
}

double sub_1005CCA7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];
  _BYTE v12[24];

  *(_QWORD *)&result = swift_beginAccess(v2 + 272, v12, 0, 0).n128_u64[0];
  v6 = *(_QWORD *)(v2 + 272);
  if (*(_QWORD *)(v6 + 16))
  {
    swift_bridgeObjectRetain(v6);
    v7 = sub_100842EFC(a1);
    if ((v8 & 1) != 0)
    {
      v9 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v7);
      swift_retain(v9);
      swift_bridgeObjectRelease();
      swift_beginAccess(v9+ OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_observers, v11, 33, 0);
      v10 = sub_100847068(a2);
      swift_endAccess(v11);
      swift_release(v9);
      *(_QWORD *)&result = swift_release(v10).n128_u64[0];
    }
    else
    {
      *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
    }
  }
  return result;
}

double sub_1005CCB48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  double result;
  _BYTE v7[24];

  v4 = sub_1004B804C(&qword_1013E60A0);
  swift_beginAccess(*(_QWORD *)(a1 + *(int *)(v4 + 48))+ OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_observers, v7, 33, 0);
  v5 = sub_100847068(a2);
  swift_endAccess(v7);
  *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  return result;
}

uint64_t sub_1005CCBD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 16) = a4;
  *(_QWORD *)(v5 + 24) = a5;
  return swift_task_switch(sub_1005CCBEC, a4, 0);
}

uint64_t sub_1005CCBEC()
{
  uint64_t v0;

  sub_1005CCF88(*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005CCC1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 16) = a4;
  *(_QWORD *)(v5 + 24) = a5;
  return swift_task_switch(sub_1005CCC34, a4, 0);
}

uint64_t sub_1005CCC34()
{
  uint64_t v0;

  sub_1005CCC64(*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1005CCC64(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t inited;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  _BYTE v22[72];
  _BYTE v23[72];
  _BYTE v24[32];

  if (qword_1013DD728 != -1)
    swift_once(&qword_1013DD728, sub_100A01E30);
  swift_beginAccess(&static OS_os_log.crlAssetDownloadManager, v24, 0, 0);
  v2 = (void *)static OS_os_log.crlAssetDownloadManager;
  v3 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v3, v23);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v5 = v2;
  v6 = UUID.uuidString.getter(v5);
  v8 = v7;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v9 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v9;
  *(_QWORD *)(inited + 32) = v6;
  v10 = inited + 32;
  *(_QWORD *)(inited + 40) = v8;
  v12 = static os_log_type_t.default.getter(v11);
  sub_100A06EBC((uint64_t)v5, &_mh_execute_header, v12, "The AssetDownloadManager was being informed that an asset is ready to download asset: %{public}@. Resetting download attempts.", 126, 2, inited);
  swift_setDeallocating(inited);
  v13 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v10, 1, v13);

  v14 = sub_1005CFF38(a1);
  v15 = (void *)static OS_os_log.crlAssetDownloadManager;
  v16 = swift_initStackObject(v3, v22);
  *(_OWORD *)(v16 + 16) = xmmword_100EF5E40;
  v17 = v15;
  v18 = UUID.uuidString.getter(v17);
  *(_QWORD *)(v16 + 56) = &type metadata for String;
  *(_QWORD *)(v16 + 64) = v9;
  *(_QWORD *)(v16 + 32) = v18;
  *(_QWORD *)(v16 + 40) = v19;
  v21 = static os_log_type_t.default.getter(v20);
  sub_100A06EBC((uint64_t)v17, &_mh_execute_header, v21, "resetDownloadAttempts for assetUUID: %@", 39, 2, v16);
  swift_setDeallocating(v16);
  swift_arrayDestroy(v16 + 32, 1, v13);

  *(_QWORD *)(v14
            + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadAttempts) = 0;
  swift_release(v14);
  sub_1005CCF88(a1);
}

_QWORD *sub_1005CCE78@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *result;
  _BYTE v8[24];
  _BYTE v9[40];
  _BYTE v10[24];
  __int128 v11;
  uint64_t v12;

  v4 = v1 + 176;
  swift_beginAccess(v1 + 176, v10, 0, 0);
  sub_1004CB7BC(v1 + 176, (uint64_t)&v11, &qword_1013E6148);
  v5 = v12;
  v6 = sub_1004CB800((uint64_t)&v11, &qword_1013E6148);
  if (!v5)
  {
    result = (*(_QWORD *(**)(__int128 *__return_ptr, uint64_t))(v1 + 120))(&v11, v6);
    if (v2)
      return result;
    sub_1004C4938((uint64_t)&v11, (uint64_t)v9, &qword_1013E6148);
    swift_beginAccess(v4, v8, 33, 0);
    sub_100582338((uint64_t)v9, v4, &qword_1013E6148);
    swift_endAccess(v8);
  }
  result = (_QWORD *)sub_1004CB7BC(v4, (uint64_t)&v11, &qword_1013E6148);
  if (v12)
    return (_QWORD *)sub_1004DB728(&v11, a1);
  __break(1u);
  return result;
}

void sub_1005CCF88(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v3 = type metadata accessor for UUID(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v7);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005CED6C();
  sub_1005CEF5C();
  v10 = sub_1005CFF38(a1);
  v11 = v10;
  if (*(_QWORD *)(v10
                 + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadTask))
  {
    swift_release(v10);
  }
  else
  {
    if ((double)*(uint64_t *)(v10
                            + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadAttempts)
       * (double)*(uint64_t *)(v10
                            + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadAttempts) <= 273.0)
      v12 = (double)*(uint64_t *)(v10
                               + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadAttempts)
          * (double)*(uint64_t *)(v10
                               + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadAttempts);
    else
      v12 = 273.0;
    v13 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v9, 1, 1, v13);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
    v23 = sub_1005034A0(&qword_1013E60F0, v14, (uint64_t (*)(uint64_t))type metadata accessor for CRLAssetDownloadManager, (uint64_t)&unk_100EFCF50);
    v15 = *(unsigned __int8 *)(v4 + 80);
    v16 = (v15 + 40) & ~v15;
    v17 = (v5 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
    v18 = (v17 + 15) & 0xFFFFFFFFFFFFFFF8;
    v19 = swift_allocObject(&unk_101270618, v18 + 8, v15 | 7);
    v20 = v23;
    *(_QWORD *)(v19 + 16) = v1;
    *(_QWORD *)(v19 + 24) = v20;
    *(double *)(v19 + 32) = v12;
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v19 + v16, v6, v3);
    *(_QWORD *)(v19 + v17) = v1;
    *(_QWORD *)(v19 + v18) = v11;
    swift_retain_n(v1, 2);
    swift_retain(v11);
    v21 = sub_100521B98((uint64_t)v9, (uint64_t)&unk_1013E6140, v19);
    sub_1005D0780(v21);
    swift_release(v11);
    swift_release(v21);
  }
}

uint64_t sub_1005CD1B4(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  *(_QWORD *)(v7 + 168) = a6;
  *(_QWORD *)(v7 + 176) = a7;
  *(_QWORD *)(v7 + 160) = a5;
  *(double *)(v7 + 152) = a1;
  return swift_task_switch(sub_1005CD1D4, a6, 0);
}

void sub_1005CD1D4()
{
  uint64_t v0;
  double v1;
  void *v2;
  uint64_t v3;
  uint64_t inited;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  unint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;

  v1 = *(double *)(v0 + 152);
  if (v1 <= 0.0)
  {
    v15 = (_QWORD *)swift_task_alloc(dword_1013E5B1C);
    *(_QWORD *)(v0 + 192) = v15;
    *v15 = v0;
    v15[1] = sub_1005CD478;
    v16 = *(_QWORD *)(v0 + 168);
    v15[32] = *(_QWORD *)(v0 + 176);
    v15[33] = v16;
    swift_task_switch(sub_1005CD4D8, v16, 0);
    return;
  }
  if (qword_1013DD728 != -1)
  {
    swift_once(&qword_1013DD728, sub_100A01E30);
    v1 = *(double *)(v0 + 152);
  }
  swift_beginAccess(&static OS_os_log.crlAssetDownloadManager, v0 + 128, 0, 0);
  v2 = (void *)static OS_os_log.crlAssetDownloadManager;
  v3 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v3, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  v5 = v2;
  v6 = UUID.uuidString.getter(v5);
  v8 = v7;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v6;
  *(_QWORD *)(inited + 40) = v8;
  *(_QWORD *)(inited + 96) = &type metadata for Double;
  *(_QWORD *)(inited + 104) = &protocol witness table for Double;
  *(double *)(inited + 72) = v1;
  v10 = static os_log_type_t.default.getter(v9);
  sub_100A06EBC((uint64_t)v5, &_mh_execute_header, v10, "CRLAssetDownloadManager download task for assetUUID %@ delayed by %.2f seconds", 78, 2, inited);
  swift_setDeallocating(inited);
  v11 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 2, v11);

  v12 = v1 * 1000000000.0;
  if ((~COERCE__INT64(v1 * 1000000000.0) & 0x7FF0000000000000) != 0)
  {
    if (v12 > -1.0)
    {
      if (v12 < 1.84467441e19)
      {
        v13 = (unint64_t)v12;
        v14 = (_QWORD *)swift_task_alloc(async function pointer to static Task<>.sleep(nanoseconds:)[1]);
        *(_QWORD *)(v0 + 184) = v14;
        *v14 = v0;
        v14[1] = sub_1005CD3F4;
        static Task<>.sleep(nanoseconds:)(v13);
        return;
      }
      goto LABEL_11;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_11:
  __break(1u);
}

uint64_t sub_1005CD3F4()
{
  uint64_t v0;
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v2 = (_QWORD *)*v1;
  v3 = *(_QWORD *)(*v1 + 184);
  v4 = *v1;
  swift_task_dealloc(v3);
  if (v0)
    swift_errorRelease(v0);
  v5 = (_QWORD *)swift_task_alloc(dword_1013E5B1C);
  v2[24] = v5;
  *v5 = v4;
  v5[1] = sub_1005CD478;
  v6 = v2[21];
  v5[32] = v2[22];
  v5[33] = v6;
  return swift_task_switch(sub_1005CD4D8, v6, 0);
}

uint64_t sub_1005CD478()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 192));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1005CD4C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 256) = a1;
  *(_QWORD *)(v2 + 264) = v1;
  return swift_task_switch(sub_1005CD4D8, v1, 0);
}

uint64_t sub_1005CD4D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  char isCancelled;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = *(_QWORD *)(v0 + 256);
  if ((*(_BYTE *)(v1
                 + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_wasCancelled) & 1) != 0
    || (v2 = *(_QWORD *)(v1
                       + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadTask)) != 0
    && (v3 = swift_retain(*(_QWORD *)(v1
                                    + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadTask)),
        isCancelled = swift_task_isCancelled(v3),
        swift_release(v2),
        v1 = *(_QWORD *)(v0 + 256),
        (isCancelled & 1) != 0))
  {
    sub_1005D04AC(1);
    sub_1005CD810(v1);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v6 = OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_assetUUID;
    *(_QWORD *)(v0 + 272) = OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_assetUUID;
    v7 = v1 + v6;
    v8 = (_QWORD *)swift_task_alloc(dword_1013E5B24);
    *(_QWORD *)(v0 + 280) = v8;
    *v8 = v0;
    v8[1] = sub_1005CD5B0;
    return sub_1005CDD38(v7);
  }
}

uint64_t sub_1005CD5B0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 280);
  *(_QWORD *)(*v1 + 288) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_1005CD64C;
  else
    v4 = sub_1005CD614;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 264), 0);
}

uint64_t sub_1005CD614()
{
  uint64_t v0;

  sub_1005CE4B0(*(_QWORD *)(v0 + 256) + *(_QWORD *)(v0 + 272));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005CD64C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t inited;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  if (qword_1013DD728 != -1)
    swift_once(&qword_1013DD728, sub_100A01E30);
  v1 = *(_QWORD *)(v0 + 288);
  v17 = *(_QWORD *)(v0 + 256);
  swift_beginAccess(&static OS_os_log.crlAssetDownloadManager, v0 + 168, 0, 0);
  v2 = (void *)static OS_os_log.crlAssetDownloadManager;
  v3 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v3, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5550;
  v5 = v2;
  v6 = UUID.uuidString.getter(v5);
  v8 = v7;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v9 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v9;
  *(_QWORD *)(inited + 32) = v6;
  *(_QWORD *)(inited + 40) = v8;
  swift_getErrorValue(v1, v0 + 240, v0 + 192);
  v10 = Error.publicDescription.getter(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 208));
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v9;
  *(_QWORD *)(inited + 72) = v10;
  *(_QWORD *)(inited + 80) = v11;
  swift_getErrorValue(v1, v0 + 248, v0 + 216);
  v12 = Error.fullDescription.getter(*(_QWORD *)(v0 + 224));
  *(_QWORD *)(inited + 136) = &type metadata for String;
  *(_QWORD *)(inited + 144) = v9;
  *(_QWORD *)(inited + 112) = v12;
  *(_QWORD *)(inited + 120) = v13;
  v14 = static os_log_type_t.error.getter(v12);
  sub_100A06EBC((uint64_t)v5, &_mh_execute_header, v14, "Failed to perform download task for asset. assetUUID=%@ error=%{public}@ %@", 75, 2, inited);
  swift_setDeallocating(inited);
  v15 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 3, v15);

  sub_1005CD810(v17);
  swift_errorRelease(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1005CD810(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  __n128 v16;
  char isCancelled;
  void *v18;
  uint64_t v19;
  uint64_t inited;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _BYTE v59[72];
  _BYTE v60[24];
  _BYTE v61[32];

  v3 = type metadata accessor for UUID(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1
     + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_assetUUID;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16))(v7, a1+ OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_assetUUID, v3, v5);
  v9 = swift_beginAccess(v1 + 272, v61, 0, 0);
  v10 = *(_QWORD *)(v1 + 272);
  if (!*(_QWORD *)(v10 + 16))
    goto LABEL_11;
  swift_bridgeObjectRetain(v10);
  v11 = sub_100842EFC((uint64_t)v7);
  if ((v12 & 1) == 0)
  {
    v9 = swift_bridgeObjectRelease(v10);
LABEL_11:
    (*(void (**)(char *, uint64_t, __n128))(v4 + 8))(v7, v3, v9);
    goto LABEL_12;
  }
  v13 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v11);
  swift_retain(v13);
  v14 = swift_bridgeObjectRelease(v10);
  (*(void (**)(char *, uint64_t, __n128))(v4 + 8))(v7, v3, v14);
  swift_release(v13);
  if (v13 == a1)
  {
    if ((*(_BYTE *)(a1
                   + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_wasCancelled) & 1) != 0
      || (v15 = *(_QWORD *)(a1
                          + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadTask)) != 0
      && (v16 = swift_retain(*(_QWORD *)(a1
                                       + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadTask)),
          isCancelled = swift_task_isCancelled(v16),
          swift_release(v15),
          (isCancelled & 1) != 0))
    {
      if (qword_1013DD728 != -1)
        swift_once(&qword_1013DD728, sub_100A01E30);
      swift_beginAccess(&static OS_os_log.crlAssetDownloadManager, v60, 0, 0);
      v18 = (void *)static OS_os_log.crlAssetDownloadManager;
      v19 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v19, &v56);
      *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
      v21 = v18;
      v22 = UUID.uuidString.getter(v21);
      v24 = v23;
      *(_QWORD *)(inited + 56) = &type metadata for String;
      v25 = sub_1004CFC2C();
      *(_QWORD *)(inited + 64) = v25;
      *(_QWORD *)(inited + 32) = v22;
      *(_QWORD *)(inited + 40) = v24;
      v26 = static os_log_type_t.error.getter(v25);
      sub_100A06EBC((uint64_t)v21, &_mh_execute_header, v26, "Stopped trying to download asset. Notifying of cancel. assetUUID=%@", 67, 2, inited);
      swift_setDeallocating(inited);
      v27 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(inited + 32, 1, v27);

      sub_1005D174C();
    }
    else
    {
      if (qword_1013DD728 != -1)
        swift_once(&qword_1013DD728, sub_100A01E30);
      swift_beginAccess(&static OS_os_log.crlAssetDownloadManager, v60, 0, 0);
      v38 = (void *)static OS_os_log.crlAssetDownloadManager;
      v55 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v39 = swift_initStackObject(v55, &v58);
      v54 = xmmword_100EF5E40;
      *(_OWORD *)(v39 + 16) = xmmword_100EF5E40;
      v40 = v38;
      v41 = UUID.uuidString.getter(v40);
      v43 = v42;
      *(_QWORD *)(v39 + 56) = &type metadata for String;
      v44 = sub_1004CFC2C();
      *(_QWORD *)(v39 + 64) = v44;
      *(_QWORD *)(v39 + 32) = v41;
      v45 = v39 + 32;
      *(_QWORD *)(v39 + 40) = v43;
      v46 = static os_log_type_t.error.getter(v44);
      sub_100A06EBC((uint64_t)v40, &_mh_execute_header, v46, "Failed to download asset. Notifying of failure. assetUUID=%@", 60, 2, v39);
      swift_setDeallocating(v39);
      v47 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(v45, 1, v47);

      sub_1005D1160();
      if (*(uint64_t *)(a1
                      + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadAttempts) <= 2)
      {
        v48 = (void *)static OS_os_log.crlAssetDownloadManager;
        v49 = swift_initStackObject(v55, &v57);
        *(_OWORD *)(v49 + 16) = v54;
        v50 = v48;
        v51 = UUID.uuidString.getter(v50);
        *(_QWORD *)(v49 + 56) = &type metadata for String;
        *(_QWORD *)(v49 + 64) = v44;
        *(_QWORD *)(v49 + 32) = v51;
        *(_QWORD *)(v49 + 40) = v52;
        v53 = static os_log_type_t.error.getter(v51);
        sub_100A06EBC((uint64_t)v50, &_mh_execute_header, v53, "Failed to download asset. Auto-Retrying. assetUUID=%@", 53, 2, v49);
        swift_setDeallocating(v49);
        swift_arrayDestroy(v49 + 32, 1, v47);

        sub_1005CCF88(v8);
      }
    }
    return;
  }
LABEL_12:
  if (qword_1013DD728 != -1)
    swift_once(&qword_1013DD728, sub_100A01E30);
  swift_beginAccess(&static OS_os_log.crlAssetDownloadManager, v60, 0, 0);
  v28 = (void *)static OS_os_log.crlAssetDownloadManager;
  v29 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  v30 = swift_initStackObject(v29, v59);
  *(_OWORD *)(v30 + 16) = xmmword_100EF5E40;
  v31 = v28;
  v32 = UUID.uuidString.getter(v31);
  v34 = v33;
  *(_QWORD *)(v30 + 56) = &type metadata for String;
  v35 = sub_1004CFC2C();
  *(_QWORD *)(v30 + 64) = v35;
  *(_QWORD *)(v30 + 32) = v32;
  *(_QWORD *)(v30 + 40) = v34;
  v36 = static os_log_type_t.error.getter(v35);
  sub_100A06EBC((uint64_t)v31, &_mh_execute_header, v36, "The AssetRequestInfo associated with ended download task no longer exists but we are trying to end it. assetUUID=%@", 115, 2, v30);
  swift_setDeallocating(v30);
  v37 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v30 + 32, 1, v37);

}

uint64_t sub_1005CDD38(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v2[19] = a1;
  v2[20] = v1;
  v3 = type metadata accessor for URL(0);
  v2[21] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[22] = v4;
  v5 = (*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[23] = swift_task_alloc(v5);
  v2[24] = swift_task_alloc(v5);
  v6 = (*(_QWORD *)(*(_QWORD *)(sub_1004B804C(&qword_1013E04D0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[25] = swift_task_alloc(v6);
  v2[26] = swift_task_alloc(v6);
  return swift_task_switch(sub_1005CDDDC, v1, 0);
}

uint64_t sub_1005CDDDC()
{
  uint64_t *v0;
  uint64_t **v1;

  v0[27] = *(_QWORD *)(v0[20] + 112);
  v1 = (uint64_t **)swift_task_alloc(dword_10140C61C);
  v0[28] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = (uint64_t *)sub_1005CDE44;
  return sub_100C78DC8(v0[26], v0[19], 0, 0, 3);
}

uint64_t sub_1005CDE44()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 160);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 224));
  return swift_task_switch(sub_1005CDE9C, v1, 0);
}

uint64_t sub_1005CDE9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);
  int v4;
  void *v5;
  uint64_t v6;
  uint64_t inited;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;

  v1 = *(_QWORD *)(v0 + 208);
  v2 = *(_QWORD *)(v0 + 168);
  v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 176) + 48);
  *(_QWORD *)(v0 + 232) = v3;
  v4 = v3(v1, 1, v2);
  sub_1004CB800(v1, &qword_1013E04D0);
  if (v4 == 1)
  {
    if (qword_1013DD728 != -1)
      swift_once(&qword_1013DD728, sub_100A01E30);
    swift_beginAccess(&static OS_os_log.crlAssetDownloadManager, v0 + 128, 0, 0);
    v5 = (void *)static OS_os_log.crlAssetDownloadManager;
    v6 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v6, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v8 = v5;
    v9 = UUID.uuidString.getter(v8);
    v11 = v10;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = sub_1004CFC2C();
    *(_QWORD *)(inited + 32) = v9;
    *(_QWORD *)(inited + 40) = v11;
    v13 = static os_log_type_t.default.getter(v12);
    sub_100A06EBC((uint64_t)v8, &_mh_execute_header, v13, "CRLAssetDownloadManager _performDownloadRequest() assetUUID: %@", 63, 2, inited);
    swift_setDeallocating(inited);
    v14 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v14);

    sub_1005CCE78(v0 + 88);
    sub_1004BB5A4((_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 112));
    v18 = (_QWORD *)swift_task_alloc(dword_1013E6354);
    *(_QWORD *)(v0 + 240) = v18;
    *v18 = v0;
    v18[1] = sub_1005CE0D8;
    return sub_1005D4764(*(_QWORD *)(v0 + 152));
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 200);
    v17 = *(_QWORD *)(v0 + 184);
    v16 = *(_QWORD *)(v0 + 192);
    swift_task_dealloc(*(_QWORD *)(v0 + 208));
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1005CE0D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v5)();

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 240);
  v3[31] = a1;
  v3[32] = v1;
  swift_task_dealloc(v4);
  if (v1)
    v5 = sub_1005CE2CC;
  else
    v5 = sub_1005CE144;
  return swift_task_switch(v5, v3[20], 0);
}

uint64_t sub_1005CE144()
{
  uint64_t v0;
  unsigned int (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v1 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 232);
  v2 = *(_QWORD *)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 168);
  sub_1004CB7BC(*(_QWORD *)(v0 + 248) + OBJC_IVAR____TtC8Freeform24CRLAssetSyncRemoteRecord_downloadedFileURL, v2, &qword_1013E04D0);
  if (v1(v2, 1, v3) == 1)
  {
    v4 = *(_QWORD *)(v0 + 248);
    sub_1004CB800(*(_QWORD *)(v0 + 200), &qword_1013E04D0);
    v5 = sub_1005D2A0C();
    swift_allocError(&type metadata for CRLAssetError, v5, 0, 0);
    *v6 = 0;
    v6[1] = 0;
    swift_willThrow(v7);
    swift_release(v4);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 88));
    v8 = *(_QWORD *)(v0 + 200);
    v10 = *(_QWORD *)(v0 + 184);
    v9 = *(_QWORD *)(v0 + 192);
    swift_task_dealloc(*(_QWORD *)(v0 + 208));
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v12 = *(_QWORD *)(v0 + 248);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 176) + 32))(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 168));
    v13 = v12 + OBJC_IVAR____TtC8Freeform24CRLAssetSyncRemoteRecord_metadata;
    v14 = (uint64_t *)(v13 + *(int *)(type metadata accessor for CRLAssetSyncMetadata(0) + 20));
    v15 = *v14;
    v16 = v14[1];
    v17 = (_QWORD *)swift_task_alloc(dword_10140C624);
    *(_QWORD *)(v0 + 264) = v17;
    *v17 = v0;
    v17[1] = sub_1005CE32C;
    return sub_100C7DAC8(*(_QWORD *)(v0 + 184), v13, v15, v16, *(_QWORD *)(v0 + 192), 0);
  }
}

uint64_t sub_1005CE2CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 88));
  v1 = *(_QWORD *)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 192);
  swift_task_dealloc(*(_QWORD *)(v0 + 208));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005CE32C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 264);
  *(_QWORD *)(*(_QWORD *)v1 + 272) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = v2[20];
    v5 = sub_1005CE42C;
  }
  else
  {
    v6 = v2[23];
    v8 = v2[20];
    v7 = v2[21];
    v9 = *(void (**)(uint64_t, uint64_t))(v2[22] + 8);
    v2[35] = v9;
    v9(v6, v7);
    v5 = sub_1005CE3A8;
    v4 = v8;
  }
  return swift_task_switch(v5, v4, 0);
}

uint64_t sub_1005CE3A8()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, __n128);
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(void (**)(uint64_t, uint64_t, __n128))(v0 + 280);
  v2 = *(_QWORD *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 168);
  v4 = swift_release(*(_QWORD *)(v0 + 248));
  v1(v2, v3, v4);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 88));
  v5 = *(_QWORD *)(v0 + 200);
  v7 = *(_QWORD *)(v0 + 184);
  v6 = *(_QWORD *)(v0 + 192);
  swift_task_dealloc(*(_QWORD *)(v0 + 208));
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005CE42C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 176);
  v4 = swift_release(*(_QWORD *)(v0 + 248));
  (*(void (**)(uint64_t, uint64_t, __n128))(v3 + 8))(v1, v2, v4);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 88));
  v5 = *(_QWORD *)(v0 + 200);
  v7 = *(_QWORD *)(v0 + 184);
  v6 = *(_QWORD *)(v0 + 192);
  swift_task_dealloc(*(_QWORD *)(v0 + 208));
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1005CE4B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[24];
  _BYTE v10[24];

  v3 = v1 + 272;
  swift_beginAccess(v1 + 272, v10, 0, 0);
  v4 = *(_QWORD *)(v1 + 272);
  if (*(_QWORD *)(v4 + 16))
  {
    swift_bridgeObjectRetain(v4);
    v5 = sub_100842EFC(a1);
    if ((v6 & 1) != 0)
    {
      v7 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v5);
      swift_retain(v7);
      swift_bridgeObjectRelease(v4);
      sub_1005D0C14();
      swift_release(v7);
    }
    else
    {
      swift_bridgeObjectRelease(v4);
    }
  }
  swift_beginAccess(v3, v9, 33, 0);
  v8 = sub_100846F6C(a1);
  swift_endAccess(v9);
  swift_release(v8);
  if (!*(_QWORD *)(*(_QWORD *)v3 + 16))
  {
    sub_1005CEE6C();
    sub_1005CF3B4();
  }
}

double sub_1005CE5A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  int v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  double result;
  _QWORD v23[4];

  v1 = v0;
  v2 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v2);
  v4 = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TaskPriority(0);
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  v7 = (_QWORD *)swift_allocObject(&unk_1012705C8, 40, 7);
  v7[2] = 0;
  v8 = v7 + 2;
  v7[3] = 0;
  v7[4] = v1;
  v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  v10 = swift_retain(v1);
  if (v9 == 1)
  {
    sub_1004CB800((uint64_t)v4, &qword_1013E01F0);
    v11 = 0;
    v12 = 0;
    v13 = 7168;
  }
  else
  {
    v14 = TaskPriority.rawValue.getter(v10);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    v13 = v14 | 0x1C00;
    v15 = *v8;
    if (*v8)
    {
      v16 = v7[3];
      ObjectType = swift_getObjectType(*v8);
      swift_unknownObjectRetain(v15);
      v11 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v16);
      v12 = v18;
      swift_unknownObjectRelease(v15);
    }
    else
    {
      v11 = 0;
      v12 = 0;
    }
  }
  v19 = swift_allocObject(&unk_1012705F0, 32, 7);
  *(_QWORD *)(v19 + 16) = &unk_1013E6130;
  *(_QWORD *)(v19 + 24) = v7;
  if (v12 | v11)
  {
    v23[0] = 0;
    v23[1] = 0;
    v20 = v23;
    v23[2] = v11;
    v23[3] = v12;
  }
  else
  {
    v20 = 0;
  }
  v21 = swift_task_create(v13, v20, (char *)&type metadata for () + 8, &unk_1013E6138);
  *(_QWORD *)&result = swift_release(v21).n128_u64[0];
  return result;
}

uint64_t sub_1005CE774(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch(sub_1005CE78C, a4, 0);
}

uint64_t sub_1005CE78C()
{
  uint64_t v0;

  sub_1005CE7BC();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1005CE7BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t inited;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int64_t v42;
  uint64_t v43;
  int64_t v44;
  char *v45;
  uint64_t v46;
  __int128 v47;
  int64_t v48;
  char v49[112];
  char v50[24];
  char v51[32];

  v1 = sub_1004B804C(&qword_1013E60E0);
  __chkstk_darwin(v1);
  v3 = (char *)&v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v41 - v5;
  swift_beginAccess(v0 + 272, v51, 0, 0);
  v7 = *(_QWORD *)(v0 + 272);
  v8 = *(_QWORD *)(v7 + 64);
  v43 = v7 + 64;
  v9 = 1 << *(_BYTE *)(v7 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & v8;
  v44 = (unint64_t)(v9 + 63) >> 6;
  v42 = v44 - 1;
  v46 = v7;
  swift_bridgeObjectRetain(v7);
  v48 = 0;
  v12 = &qword_1013E60A0;
  v47 = xmmword_100EF5A10;
  v45 = (char *)&type metadata for () + 8;
  while (1)
  {
    if (v11)
    {
      v14 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v15 = v14 | (v48 << 6);
LABEL_7:
      v16 = v46;
      v17 = *(_QWORD *)(v46 + 48);
      v18 = type metadata accessor for UUID(0);
      (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v3, v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v15, v18);
      v19 = *(_QWORD *)(v16 + 56);
      v20 = sub_1004B804C(v12);
      v21 = *(_QWORD *)(v19 + 8 * v15);
      *(_QWORD *)&v3[*(int *)(v20 + 48)] = v21;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v3, 0, 1, v20);
      swift_retain(v21);
      goto LABEL_26;
    }
    v22 = v48 + 1;
    if (__OFADD__(v48, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v22 < v44)
    {
      v23 = *(_QWORD *)(v43 + 8 * v22);
      if (v23)
        goto LABEL_11;
      v24 = v48 + 2;
      ++v48;
      if (v22 + 1 < v44)
      {
        v23 = *(_QWORD *)(v43 + 8 * v24);
        if (v23)
          goto LABEL_14;
        v48 = v22 + 1;
        if (v22 + 2 < v44)
        {
          v23 = *(_QWORD *)(v43 + 8 * (v22 + 2));
          if (v23)
          {
            v22 += 2;
            goto LABEL_11;
          }
          v24 = v22 + 3;
          v48 = v22 + 2;
          if (v22 + 3 < v44)
            break;
        }
      }
    }
LABEL_25:
    v25 = sub_1004B804C(v12);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v3, 1, 1, v25);
    v11 = 0;
LABEL_26:
    sub_1004C4938((uint64_t)v3, (uint64_t)v6, &qword_1013E60E0);
    v26 = sub_1004B804C(v12);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v6, 1, v26) == 1)
    {
      swift_release(v46);
      return;
    }
    v27 = v12;
    v28 = *(_QWORD *)&v6[*(int *)(v26 + 48)];
    *(_BYTE *)(v28
             + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_wasCancelled) = 1;
    if (qword_1013DD728 != -1)
      swift_once(&qword_1013DD728, sub_100A01E30);
    swift_beginAccess(&static OS_os_log.crlAssetDownloadManager, v50, 0, 0);
    v29 = (void *)static OS_os_log.crlAssetDownloadManager;
    v30 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v30, v49);
    *(_OWORD *)(inited + 16) = v47;
    v32 = v29;
    v33 = UUID.uuidString.getter(v32);
    v35 = v34;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = sub_1004CFC2C();
    *(_QWORD *)(inited + 32) = v33;
    *(_QWORD *)(inited + 40) = v35;
    v36 = *(_QWORD *)(v28
                    + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadAttempts);
    *(_QWORD *)(inited + 96) = &type metadata for Int;
    *(_QWORD *)(inited + 104) = &protocol witness table for Int;
    *(_QWORD *)(inited + 72) = v36;
    v38 = static os_log_type_t.default.getter(v37);
    sub_100A06EBC((uint64_t)v32, &_mh_execute_header, v38, "Asset %{public}@ download was cancelled on the %d attempt", 57, 2, inited);
    swift_setDeallocating(inited);
    v39 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 2, v39);

    v40 = *(_QWORD *)(v28
                    + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadTask);
    if (v40)
    {
      swift_retain(*(_QWORD *)(v28
                             + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadTask));
      Task.cancel()();
      swift_release(v28);
      v28 = v40;
    }
    v12 = v27;
    swift_release(v28);
    v13 = type metadata accessor for UUID(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v6, v13);
  }
  v23 = *(_QWORD *)(v43 + 8 * v24);
  if (v23)
  {
LABEL_14:
    v22 = v24;
LABEL_11:
    v11 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v22 << 6);
    v48 = v22;
    goto LABEL_7;
  }
  while (1)
  {
    v22 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v22 >= v44)
    {
      v48 = v42;
      goto LABEL_25;
    }
    v23 = *(_QWORD *)(v43 + 8 * v22);
    ++v24;
    if (v23)
      goto LABEL_11;
  }
LABEL_33:
  __break(1u);
}

uint64_t sub_1005CECB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 40) = a4;
  *(_QWORD *)(v5 + 48) = a5;
  return swift_task_switch(sub_1005CECD0, a4, 0);
}

uint64_t sub_1005CECD0()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 40);
  swift_beginAccess(v1 + 272, v0 + 16, 0, 0);
  v3 = *(_QWORD *)(v1 + 272);
  if (*(_QWORD *)(v3 + 16))
  {
    v4 = *(_QWORD *)(v0 + 48);
    swift_bridgeObjectRetain(v3);
    v5 = sub_100842EFC(v4);
    if ((v6 & 1) != 0)
    {
      v7 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v5);
      swift_retain(v7);
      swift_bridgeObjectRelease(v3);
      sub_1005D04AC(0);
      v2 = swift_release(v7);
    }
    else
    {
      v2 = swift_bridgeObjectRelease(v3);
    }
  }
  return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
}

void sub_1005CED6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;

  if (!*(_QWORD *)(v0 + 216))
  {
    v1 = type metadata accessor for CRLAssetDownloadManager.CullingListener();
    v2 = swift_allocObject(v1, 24, 7);
    v3 = swift_weakInit(v2 + 16, 0);
    swift_weakAssign(v3, v0);
    v4 = *(_QWORD *)(v0 + 216);
    *(_QWORD *)(v0 + 216) = v2;
    swift_retain_n(v2, 2);
    swift_release(v4);
    if (qword_1013DD5C8 != -1)
      swift_once(&qword_1013DD5C8, sub_100963160);
    os_unfair_lock_lock(*((os_unfair_lock_t *)off_1013FC680 + 2));
    if (qword_1013DD5D0 != -1)
      swift_once(&qword_1013DD5D0, sub_1009631B4);
    objc_msgSend((id)qword_1013FC688, "addObject:", v2);
    os_unfair_lock_unlock(*((os_unfair_lock_t *)off_1013FC680 + 2));
    swift_release_n(v2, 2, v5);
  }
}

double sub_1005CEE6C()
{
  uint64_t v0;
  uint64_t v1;
  double result;
  uint64_t v3;
  uint64_t v4;
  _BYTE v5[24];

  v1 = *(_QWORD *)(v0 + 216);
  if (v1)
  {
    *(_QWORD *)&result = swift_beginAccess(v0 + 272, v5, 0, 0).n128_u64[0];
    if (!*(_QWORD *)(*(_QWORD *)(v0 + 272) + 16))
    {
      v3 = qword_1013DD5C8;
      swift_retain(v1);
      if (v3 != -1)
        swift_once(&qword_1013DD5C8, sub_100963160);
      os_unfair_lock_lock(*((os_unfair_lock_t *)off_1013FC680 + 2));
      if (qword_1013DD5D0 != -1)
        swift_once(&qword_1013DD5D0, sub_1009631B4);
      objc_msgSend((id)qword_1013FC688, "removeObject:", v1);
      os_unfair_lock_unlock(*((os_unfair_lock_t *)off_1013FC680 + 2));
      swift_release(v1);
      v4 = *(_QWORD *)(v0 + 216);
      *(_QWORD *)(v0 + 216) = 0;
      *(_QWORD *)&result = swift_release(v4).n128_u64[0];
    }
  }
  return result;
}

uint64_t sub_1005CEF5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _BYTE v11[40];
  _QWORD v12[5];
  _BYTE v13[32];
  _BYTE v14[24];
  _QWORD v15[3];
  uint64_t v16;

  v1 = v0;
  v2 = v0 + 224;
  swift_beginAccess(v0 + 224, v14, 0, 0);
  sub_1004CB7BC(v0 + 224, (uint64_t)v15, &qword_1013E6100);
  v3 = v16;
  result = sub_1004CB800((uint64_t)v15, &qword_1013E6100);
  if (!v3)
  {
    (*(void (**)(_QWORD *__return_ptr, uint64_t))(v0 + 136))(v15, result);
    sub_1004E90B0((uint64_t)v15, (uint64_t)v12);
    sub_1004C4938((uint64_t)v12, (uint64_t)v11, &qword_1013E6100);
    swift_beginAccess(v2, v13, 33, 0);
    sub_100582338((uint64_t)v11, v2, &qword_1013E6100);
    swift_endAccess(v13);
    v5 = *sub_1004BB5A4(v15, v16);
    v6 = sub_1004B804C(&qword_1013E6108);
    OS_dispatch_queue.sync<A>(execute:)(sub_1005D2C74, v5, v6);
    v7 = swift_allocObject(&unk_101270578, 24, 7);
    swift_weakInit(v7 + 16, v0);
    v8 = sub_1004CBA30(&qword_1013E6110, &qword_1013E6108, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
    v9 = Publisher<>.sink(receiveValue:)(sub_1005D2CB0, v7, v6, v8);
    swift_release(v7);
    swift_release(v12[0]);
    swift_beginAccess(v1 + 264, v12, 33, 0);
    AnyCancellable.store(in:)(v1 + 264);
    swift_endAccess(v12);
    swift_release(v9);
    v10 = sub_1004BB5A4(v15, v16);
    OS_dispatch_queue.sync<A>(execute:)(sub_1005D2CB8, *v10, (char *)&type metadata for () + 8);
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v15);
  }
  return result;
}

double sub_1005CF278(_BYTE *a1, uint64_t a2)
{
  uint64_t v4;
  double result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t Strong;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _BYTE v15[24];

  v4 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v4);
  v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (*a1 == 1)
  {
    v8 = a2 + 16;
    swift_beginAccess(v8, v15, 0, 0);
    Strong = swift_weakLoadStrong(v8);
    if (Strong)
    {
      v10 = Strong;
      v11 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v7, 1, 1, v11);
      v12 = (_QWORD *)swift_allocObject(&unk_1012705A0, 40, 7);
      v12[2] = 0;
      v12[3] = 0;
      v12[4] = v10;
      v13 = sub_100521B98((uint64_t)v7, (uint64_t)&unk_1013E6120, (uint64_t)v12);
      *(_QWORD *)&result = swift_release(v13).n128_u64[0];
    }
  }
  return result;
}

uint64_t sub_1005CF36C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch(sub_1005CF384, a4, 0);
}

uint64_t sub_1005CF384()
{
  uint64_t v0;

  sub_1005CF59C();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005CF3B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[24];
  _BYTE v9[32];
  _BYTE v10[24];
  _BYTE v11[24];
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  _QWORD v15[5];

  v1 = v0;
  v2 = v0 + 224;
  swift_beginAccess(v0 + 224, v11, 0, 0);
  sub_1004CB7BC(v0 + 224, (uint64_t)&v12, &qword_1013E6100);
  if (!*((_QWORD *)&v13 + 1))
    return sub_1004CB800((uint64_t)&v12, &qword_1013E6100);
  sub_1004DB728(&v12, (uint64_t)v15);
  swift_beginAccess(v0 + 272, v10, 0, 0);
  if (!*(_QWORD *)(*(_QWORD *)(v0 + 272) + 16))
  {
    v3 = sub_1004BB5A4(v15, v15[3]);
    OS_dispatch_queue.sync<A>(execute:)(sub_1005D2C5C, *v3, (char *)&type metadata for () + 8);
    swift_beginAccess(v0 + 264, v9, 1, 0);
    v5 = *(_QWORD *)(v0 + 264);
    swift_bridgeObjectRetain(*(_QWORD *)(v1 + 264));
    sub_1005CC1D0(v6);
    swift_bridgeObjectRelease(v5);
    v7 = *(_QWORD *)(v1 + 264);
    *(_QWORD *)(v1 + 264) = &_swiftEmptySetSingleton;
    swift_bridgeObjectRelease(v7);
    v14 = 0;
    v12 = 0u;
    v13 = 0u;
    swift_beginAccess(v2, v8, 33, 0);
    sub_100582338((uint64_t)&v12, v2, &qword_1013E6100);
    swift_endAccess(v8);
  }
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v15);
}

void sub_1005CF59C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  __n128 v35;
  char isCancelled;
  void *v37;
  uint64_t v38;
  uint64_t inited;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  double v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  __n128 v71;
  uint64_t v72;
  uint64_t v73;
  unsigned __int8 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t ObjectType;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  __n128 v84;
  uint64_t v85;
  int64_t v86;
  char *v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  __int128 v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  int64_t v99;
  uint64_t v100;
  char *i;
  char *v102;
  int64_t v103;
  unint64_t v104;
  _QWORD v105[4];
  char v106[56];
  char v107[8];
  char v108[8];

  v1 = v0;
  v2 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v2);
  v96 = (uint64_t)&v85 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v90 = (char *)&v85 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v85 - v8;
  v10 = sub_1004B804C(&qword_1013E60E0);
  __chkstk_darwin(v10);
  v12 = (char *)&v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v85 - v14;
  swift_beginAccess(v0 + 272, v108, 0, 0);
  v16 = *(_QWORD *)(v0 + 272);
  v17 = *(_QWORD *)(v16 + 64);
  v94 = v16 + 64;
  v18 = 1 << *(_BYTE *)(v16 + 32);
  v19 = -1;
  if (v18 < 64)
    v19 = ~(-1 << v18);
  v104 = v19 & v17;
  v88 = v6 + 7;
  v99 = (unint64_t)(v18 + 63) >> 6;
  v86 = v99 - 1;
  v100 = v16;
  swift_bridgeObjectRetain(v16);
  v103 = 0;
  v95 = xmmword_100EF5E40;
  v87 = (char *)&type metadata for () + 8;
  v97 = v4;
  v98 = v5;
  v89 = v9;
  v102 = v12;
  for (i = v15; ; v15 = i)
  {
    if (v104)
    {
      v20 = __clz(__rbit64(v104));
      v104 &= v104 - 1;
      v21 = v20 | (v103 << 6);
LABEL_8:
      v22 = v100;
      (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v12, *(_QWORD *)(v100 + 48) + *(_QWORD *)(v5 + 72) * v21, v4);
      v23 = *(_QWORD *)(v22 + 56);
      v24 = sub_1004B804C(&qword_1013E60A0);
      v25 = *(_QWORD *)(v23 + 8 * v21);
      *(_QWORD *)&v12[*(int *)(v24 + 48)] = v25;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v12, 0, 1, v24);
      swift_retain(v25);
      goto LABEL_27;
    }
    v26 = v103 + 1;
    if (__OFADD__(v103, 1))
    {
      __break(1u);
      goto LABEL_56;
    }
    if (v26 < v99)
    {
      v27 = *(_QWORD *)(v94 + 8 * v26);
      if (v27)
        goto LABEL_12;
      v28 = v103 + 2;
      ++v103;
      if (v26 + 1 < v99)
      {
        v27 = *(_QWORD *)(v94 + 8 * v28);
        if (v27)
          goto LABEL_15;
        v103 = v26 + 1;
        if (v26 + 2 < v99)
        {
          v27 = *(_QWORD *)(v94 + 8 * (v26 + 2));
          if (v27)
          {
            v26 += 2;
            goto LABEL_12;
          }
          v28 = v26 + 3;
          v103 = v26 + 2;
          if (v26 + 3 < v99)
            break;
        }
      }
    }
LABEL_26:
    v29 = sub_1004B804C(&qword_1013E60A0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v12, 1, 1, v29);
    v104 = 0;
LABEL_27:
    sub_1004C4938((uint64_t)v12, (uint64_t)v15, &qword_1013E60E0);
    v30 = sub_1004B804C(&qword_1013E60A0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48))(v15, 1, v30) == 1)
    {
      swift_release(v100);
      return;
    }
    v31 = *(_QWORD *)&v15[*(int *)(v30 + 48)];
    v32 = v15;
    v33 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    v33(v9, v32, v4);
    if ((*(_BYTE *)(v31
                   + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_wasCancelled) & 1) != 0
      || (v34 = *(_QWORD *)(v31
                          + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadTask)) != 0
      && (v35 = swift_retain(*(_QWORD *)(v31
                                       + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadTask)),
          isCancelled = swift_task_isCancelled(v35),
          swift_release(v34),
          (isCancelled & 1) != 0))
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
      swift_release(v31);
    }
    else
    {
      if (qword_1013DD728 != -1)
        swift_once(&qword_1013DD728, sub_100A01E30);
      swift_beginAccess(&static OS_os_log.crlAssetDownloadManager, v107, 0, 0);
      v37 = (void *)static OS_os_log.crlAssetDownloadManager;
      v38 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v38, v106);
      *(_OWORD *)(inited + 16) = v95;
      v40 = v37;
      v41 = UUID.uuidString.getter(v40);
      v43 = v42;
      *(_QWORD *)(inited + 56) = &type metadata for String;
      *(_QWORD *)(inited + 64) = sub_1004CFC2C();
      *(_QWORD *)(inited + 32) = v41;
      *(_QWORD *)(inited + 40) = v43;
      v45 = static os_log_type_t.default.getter(v44);
      sub_100A06EBC((uint64_t)v40, &_mh_execute_header, v45, "resetDownloadAttempts for assetUUID: %@", 39, 2, inited);
      swift_setDeallocating(inited);
      v46 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(inited + 32, 1, v46);

      *(_QWORD *)(v31
                + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadAttempts) = 0;
      v5 = v98;
      if (!*(_QWORD *)(v1 + 216))
      {
        v47 = type metadata accessor for CRLAssetDownloadManager.CullingListener();
        v48 = swift_allocObject(v47, 24, 7);
        v49 = swift_weakInit(v48 + 16, 0);
        swift_weakAssign(v49, v1);
        v50 = *(_QWORD *)(v1 + 216);
        *(_QWORD *)(v1 + 216) = v48;
        swift_retain_n(v48, 2);
        swift_release(v50);
        if (qword_1013DD5C8 != -1)
          swift_once(&qword_1013DD5C8, sub_100963160);
        os_unfair_lock_lock(*((os_unfair_lock_t *)off_1013FC680 + 2));
        if (qword_1013DD5D0 != -1)
          swift_once(&qword_1013DD5D0, sub_1009631B4);
        objc_msgSend((id)qword_1013FC688, "addObject:", v48);
        os_unfair_lock_unlock(*((os_unfair_lock_t *)off_1013FC680 + 2));
        swift_release_n(v48, 2, v51);
      }
      sub_1005CEF5C();
      v52 = sub_1005CFF38((uint64_t)v9);
      v53 = v52;
      if (!*(_QWORD *)(v52
                      + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadTask))
      {
        if ((double)*(uint64_t *)(v52
                                + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadAttempts)
           * (double)*(uint64_t *)(v52
                                + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadAttempts) <= 273.0)
          v54 = (double)*(uint64_t *)(v52
                                   + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadAttempts)
              * (double)*(uint64_t *)(v52
                                   + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadAttempts);
        else
          v54 = 273.0;
        v55 = type metadata accessor for TaskPriority(0);
        v93 = v53;
        v56 = v55;
        v92 = *(_QWORD *)(v55 - 8);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v92 + 56))(v96, 1, 1, v55);
        v57 = v9;
        v58 = v90;
        v59 = v97;
        (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v90, v57, v97);
        v91 = sub_1005034A0(&qword_1013E60F0, v60, (uint64_t (*)(uint64_t))type metadata accessor for CRLAssetDownloadManager, (uint64_t)&unk_100EFCF50);
        v61 = *(unsigned __int8 *)(v5 + 80);
        v62 = (v61 + 40) & ~v61;
        v63 = (v88 + v62) & 0xFFFFFFFFFFFFFFF8;
        v64 = (v63 + 15) & 0xFFFFFFFFFFFFFFF8;
        v65 = swift_allocObject(&unk_101270528, v64 + 8, v61 | 7);
        v66 = v91;
        *(_QWORD *)(v65 + 16) = v1;
        *(_QWORD *)(v65 + 24) = v66;
        *(double *)(v65 + 32) = v54;
        v67 = v65 + v62;
        v68 = v56;
        v53 = v93;
        v69 = v58;
        v70 = v92;
        v33((char *)v67, v69, v59);
        *(_QWORD *)(v65 + v63) = v1;
        *(_QWORD *)(v65 + v64) = v53;
        LODWORD(v59) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v70 + 48))(v96, 1, v68);
        swift_retain_n(v1, 2);
        v71 = swift_retain(v53);
        if ((_DWORD)v59 == 1)
        {
          sub_1004CB800(v96, &qword_1013E01F0);
          v72 = 0;
        }
        else
        {
          v73 = v96;
          v74 = TaskPriority.rawValue.getter(v71);
          (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v73, v68);
          v72 = v74;
        }
        v75 = *(_QWORD *)(v65 + 16);
        v9 = v89;
        if (v75)
        {
          v76 = *(_QWORD *)(v65 + 24);
          ObjectType = swift_getObjectType(*(_QWORD *)(v65 + 16));
          swift_unknownObjectRetain(v75);
          v78 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v76);
          v80 = v79;
          swift_unknownObjectRelease(v75);
        }
        else
        {
          v78 = 0;
          v80 = 0;
        }
        v81 = swift_allocObject(&unk_101270550, 32, 7);
        *(_QWORD *)(v81 + 16) = &unk_1013E60F8;
        *(_QWORD *)(v81 + 24) = v65;
        if (v80 | v78)
        {
          v105[0] = 0;
          v105[1] = 0;
          v82 = v105;
          v105[2] = v78;
          v105[3] = v80;
        }
        else
        {
          v82 = 0;
        }
        v5 = v98;
        v83 = swift_task_create(v72 | 0x1C00, v82, v87, &unk_1013FE730);
        sub_1005D0780(v83);
        swift_release(v83);
      }
      swift_release(v31);
      v84 = swift_release(v53);
      v4 = v97;
      (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v9, v97, v84);
    }
    v12 = v102;
  }
  v27 = *(_QWORD *)(v94 + 8 * v28);
  if (v27)
  {
LABEL_15:
    v26 = v28;
LABEL_12:
    v104 = (v27 - 1) & v27;
    v21 = __clz(__rbit64(v27)) + (v26 << 6);
    v103 = v26;
    goto LABEL_8;
  }
  while (1)
  {
    v26 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v26 >= v99)
    {
      v103 = v86;
      goto LABEL_26;
    }
    v27 = *(_QWORD *)(v94 + 8 * v26);
    ++v28;
    if (v27)
      goto LABEL_12;
  }
LABEL_56:
  __break(1u);
}

uint64_t sub_1005CFF38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  __n128 v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t, __n128);
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  __n128 v17;
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[24];
  _BYTE v22[24];

  v3 = type metadata accessor for UUID(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (_QWORD *)(v1 + 272);
  swift_beginAccess(v1 + 272, v22, 0, 0);
  v9 = *(_QWORD *)(v1 + 272);
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_5;
  swift_bridgeObjectRetain(v9);
  v10 = sub_100842EFC(a1);
  if ((v11 & 1) == 0)
  {
    v8 = swift_bridgeObjectRelease(v9);
LABEL_5:
    v13 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16);
    v13(v6, a1, v3, v8);
    v14 = type metadata accessor for CRLAssetDownloadManager.AssetRequestInfo(0);
    v12 = swift_allocObject(v14, *(unsigned int *)(v14 + 48), *(unsigned __int16 *)(v14 + 52));
    *(_QWORD *)(v12
              + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadTask) = 0;
    *(_BYTE *)(v12
             + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_wasCancelled) = 0;
    *(_QWORD *)(v12
              + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadAttempts) = 0;
    *(_QWORD *)(v12
              + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_observers) = &_swiftEmptyDictionarySingleton;
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v12+ OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_assetUUID, v6, v3);
    ((void (*)(char *, uint64_t, uint64_t))v13)(v6, a1, v3);
    swift_beginAccess(v7, v21, 33, 0);
    swift_retain(v12);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v7);
    v20 = *v7;
    *v7 = 0x8000000000000000;
    sub_100825CF4(v12, (uint64_t)v6, isUniquelyReferenced_nonNull_native);
    v16 = *v7;
    *v7 = v20;
    v17 = swift_bridgeObjectRelease(v16);
    (*(void (**)(char *, uint64_t, __n128))(v4 + 8))(v6, v3, v17);
    swift_endAccess(v21);
    return v12;
  }
  v12 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v10);
  swift_retain(v12);
  swift_bridgeObjectRelease(v9);
  return v12;
}

void sub_1005D010C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  __n128 v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  char v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  void (**v37)(_QWORD);
  id v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD aBlock[5];
  uint64_t v43;
  uint64_t v44;
  char v45[24];

  v9 = type metadata accessor for UUID(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = v4;
  v13 = (_QWORD *)(v4
                 + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_observers);
  swift_beginAccess(v4+ OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_observers, v45, 0, 0);
  v15 = *v13;
  if (!*(_QWORD *)(*v13 + 16))
  {
LABEL_10:
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))(v12, a1, v9, v14);
    v26 = type metadata accessor for CRLAssetDownloadManager.ObserverHandlerInfos();
    v27 = swift_allocObject(v26, 24, 7);
    v28 = sub_1004B804C(&qword_1013E60D8);
    v29 = swift_allocObject(v28, 56, 7);
    *(_OWORD *)(v29 + 16) = xmmword_100EF5E40;
    v30 = swift_allocObject(&unk_101270488, 32, 7);
    *(_QWORD *)(v30 + 16) = a3;
    *(_QWORD *)(v30 + 24) = a4;
    *(_QWORD *)(v29 + 32) = a2;
    *(_QWORD *)(v29 + 40) = sub_1005D2F5C;
    *(_QWORD *)(v29 + 48) = v30;
    *(_QWORD *)(v27 + 16) = v29;
    swift_beginAccess(v13, aBlock, 33, 0);
    swift_retain(a4);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v13);
    v44 = *v13;
    *v13 = 0x8000000000000000;
    sub_100825D00(v27, (uint64_t)v12, isUniquelyReferenced_nonNull_native);
    v32 = *v13;
    *v13 = v44;
    v33 = swift_bridgeObjectRelease(v32);
    (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v33);
    swift_endAccess(aBlock);
    if ((a2 & 1) == 0)
      return;
    goto LABEL_11;
  }
  swift_bridgeObjectRetain(*v13);
  v16 = sub_100842EFC(a1);
  if ((v17 & 1) == 0)
  {
    v14 = swift_bridgeObjectRelease(v15);
    goto LABEL_10;
  }
  v18 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 8 * v16);
  swift_retain(v18);
  swift_bridgeObjectRelease(v15);
  v19 = swift_allocObject(&unk_101270500, 32, 7);
  *(_QWORD *)(v19 + 16) = a3;
  *(_QWORD *)(v19 + 24) = a4;
  v20 = (_QWORD *)(v18 + 16);
  swift_beginAccess(v18 + 16, aBlock, 33, 0);
  v21 = *(_QWORD **)(v18 + 16);
  swift_retain(a4);
  v22 = swift_isUniquelyReferenced_nonNull_native(v21);
  *(_QWORD *)(v18 + 16) = v21;
  if ((v22 & 1) == 0)
  {
    v21 = sub_100D0F530(0, v21[2] + 1, 1, v21);
    *v20 = v21;
  }
  v24 = v21[2];
  v23 = v21[3];
  if (v24 >= v23 >> 1)
  {
    v21 = sub_100D0F530((_QWORD *)(v23 > 1), v24 + 1, 1, v21);
    *v20 = v21;
  }
  v21[2] = v24 + 1;
  v25 = &v21[3 * v24];
  v25[4] = a2;
  v25[5] = sub_1005D2F5C;
  v25[6] = v19;
  swift_endAccess(aBlock);
  swift_release(v18);
  if ((a2 & 1) != 0)
  {
LABEL_11:
    if (*(_QWORD *)(v41
                   + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadTask))
    {
      v34 = swift_allocObject(&unk_1012704B0, 32, 7);
      *(_QWORD *)(v34 + 16) = a3;
      *(_QWORD *)(v34 + 24) = a4;
      aBlock[4] = sub_1005D2B88;
      v43 = v34;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(_QWORD *)"";
      aBlock[2] = sub_1005D2FC0;
      aBlock[3] = &unk_1012704C8;
      v35 = _Block_copy(aBlock);
      v36 = v43;
      swift_retain(a4);
      swift_release(v36);
      v37 = v35;
      if (+[NSThread isMainThread](NSThread, "isMainThread"))
      {
        v37[2](v37);
      }
      else
      {
        v38 = &_dispatch_main_q;
        v39 = &_dispatch_main_q;
        dispatch_async((dispatch_queue_t)&_dispatch_main_q, v37);

      }
      _Block_release(v37);
    }
  }
}

void sub_1005D04AC(char a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  uint64_t v5;
  uint64_t inited;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[112];
  _BYTE v16[24];

  v2 = v1;
  *(_BYTE *)(v1
           + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_wasCancelled) = 1;
  if (qword_1013DD728 != -1)
    swift_once(&qword_1013DD728, sub_100A01E30);
  swift_beginAccess(&static OS_os_log.crlAssetDownloadManager, v16, 0, 0);
  v4 = (void *)static OS_os_log.crlAssetDownloadManager;
  v5 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v5, v15);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  v7 = v4;
  v8 = UUID.uuidString.getter(v7);
  v10 = v9;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v8;
  *(_QWORD *)(inited + 40) = v10;
  v11 = *(_QWORD *)(v2
                  + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadAttempts);
  *(_QWORD *)(inited + 96) = &type metadata for Int;
  *(_QWORD *)(inited + 104) = &protocol witness table for Int;
  *(_QWORD *)(inited + 72) = v11;
  v12 = static os_log_type_t.default.getter();
  sub_100A06EBC((uint64_t)v7, &_mh_execute_header, v12, "Asset %{public}@ download was cancelled on the %d attempt", 57, 2, inited);
  swift_setDeallocating(inited);
  v13 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 2, v13);

  v14 = *(_QWORD *)(v2
                  + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadTask);
  if (v14)
  {
    swift_retain(*(_QWORD *)(v2
                           + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadTask));
    Task.cancel()();
    swift_release(v14);
  }
  else if ((a1 & 1) != 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"cancelDownload(expectDownloadTask:)", 35, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLAssetDownloadManager.swift", 95, 2, 471, "Download task was expected during cancellation.", 47, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"cancelDownload(expectDownloadTask:)", 35, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLAssetDownloadManager.swift", 95, 2u, 471, (uint64_t)"Download task was expected during cancellation.", 47, 2u);
  }
}

uint64_t sub_1005D06F0(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  void (*v7)(uint64_t *);
  uint64_t v8;

  v2 = *(_QWORD *)(result + 16);
  if (v2)
  {
    v4 = result;
    v5 = (uint64_t *)(swift_bridgeObjectRetain(result) + 40);
    do
    {
      v7 = (void (*)(uint64_t *))*(v5 - 1);
      v6 = *v5;
      v8 = a2;
      swift_retain(v6);
      v7(&v8);
      swift_release(v6);
      v5 += 2;
      --v2;
    }
    while (v2);
    return swift_bridgeObjectRelease(v4);
  }
  return result;
}

void sub_1005D0780(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  void *v29;
  uint64_t v30;
  void *v31;
  char *v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD aBlock[5];
  uint64_t v48;
  char v49[24];

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v44 = *(_QWORD *)(v3 - 8);
  v45 = v3;
  __chkstk_darwin(v3);
  v43 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v41 = *(_QWORD *)(v5 - 8);
  v42 = v5;
  __chkstk_darwin(v5);
  v40 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadTask;
  v8 = *(_QWORD *)(v1
                 + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadTask);
  if (v8)
  {
    swift_retain(*(_QWORD *)(v1
                           + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadTask));
    sub_100757E04(&_mh_execute_header, (uint64_t)"notifyDownloadStarted(downloadTask:)", 36, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLAssetDownloadManager.swift", 95, 2, 499, "expected nil value, but non-nil found", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"notifyDownloadStarted(downloadTask:)", 36, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLAssetDownloadManager.swift", 95, 2u, 499, (uint64_t)"expected nil value, but non-nil found", 37, 2u);
    swift_release(v8);
    v9 = *(_QWORD *)(v1 + v7);
  }
  else
  {
    v9 = 0;
  }
  *(_QWORD *)(v1 + v7) = a1;
  swift_retain(a1);
  swift_release(v9);
  *(_BYTE *)(v1
           + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_wasCancelled) = 0;
  v10 = *(_QWORD *)(v1
                  + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadAttempts);
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1
              + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadAttempts) = v12;
    v13 = (_QWORD *)(v1
                   + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_observers);
    swift_beginAccess(v13, v49, 0, 0);
    v14 = *v13;
    swift_bridgeObjectRetain(*v13);
    sub_1005CC474(v15);
    v17 = v16;
    swift_bridgeObjectRelease(v14);
    v18 = *(_QWORD *)(v17 + 16);
    if (v18)
    {
      swift_bridgeObjectRetain(v17);
      v39 = v17;
      v19 = (uint64_t *)(v17 + 48);
      v20 = _swiftEmptyArrayStorage;
      do
      {
        v22 = *(v19 - 2);
        v21 = *(v19 - 1);
        v23 = *v19;
        v24 = swift_allocObject(&unk_1012703E8, 32, 7);
        *(_QWORD *)(v24 + 16) = v21;
        *(_QWORD *)(v24 + 24) = v23;
        if ((v22 & 1) != 0)
        {
          v25 = swift_allocObject(&unk_101270460, 32, 7);
          *(_QWORD *)(v25 + 16) = sub_1005D2F9C;
          *(_QWORD *)(v25 + 24) = v24;
          swift_retain(v23);
          if ((swift_isUniquelyReferenced_nonNull_native(v20) & 1) == 0)
            v20 = sub_100D10AE4(0, v20[2] + 1, 1, v20);
          v27 = v20[2];
          v26 = v20[3];
          if (v27 >= v26 >> 1)
            v20 = sub_100D10AE4((_QWORD *)(v26 > 1), v27 + 1, 1, v20);
          v20[2] = v27 + 1;
          v28 = &v20[2 * v27];
          v28[4] = sub_1005D2F5C;
          v28[5] = v25;
        }
        else
        {
          swift_retain(v23);
          swift_release(v24);
        }
        v19 += 3;
        --v18;
      }
      while (v18);
      v17 = v39;
      swift_bridgeObjectRelease(v39);
    }
    else
    {
      v20 = _swiftEmptyArrayStorage;
    }
    swift_bridgeObjectRelease(v17);
    if (v20[2])
    {
      sub_100503E34();
      v29 = (void *)static OS_dispatch_queue.main.getter();
      v30 = swift_allocObject(&unk_101270410, 32, 7);
      *(_QWORD *)(v30 + 16) = v20;
      *(_QWORD *)(v30 + 24) = 0;
      aBlock[4] = sub_1005D2F58;
      v48 = v30;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(_QWORD *)"";
      aBlock[2] = sub_1005D2FC0;
      aBlock[3] = &unk_101270428;
      v31 = _Block_copy(aBlock);
      v32 = v40;
      static DispatchQoS.unspecified.getter(v33);
      v46 = _swiftEmptyArrayStorage;
      v34 = sub_1005034A0((unint64_t *)&qword_1013E1D20, 255, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v35 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
      v36 = sub_1004CBA30((unint64_t *)&qword_1013E1D30, (uint64_t *)&unk_1013DFBF0, (uint64_t)&protocol conformance descriptor for [A]);
      v37 = v43;
      v38 = v45;
      dispatch thunk of SetAlgebra.init<A>(_:)(&v46, v35, v36, v45, v34);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v32, v37, v31);
      _Block_release(v31);

      (*(void (**)(char *, uint64_t))(v44 + 8))(v37, v38);
      (*(void (**)(char *, uint64_t))(v41 + 8))(v32, v42);
      swift_release(v48);
    }
    else
    {
      swift_bridgeObjectRelease(v20);
    }
  }
}

double sub_1005D0C14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t inited;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  void *v35;
  uint64_t v36;
  void *v37;
  char *v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  double result;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD aBlock[5];
  uint64_t v53;
  char v54[24];
  char v55[112];
  char v56[8];

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = type metadata accessor for DispatchQoS(0);
  v49 = *(_QWORD *)(v50 - 8);
  __chkstk_darwin(v50);
  v48 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadTask);
  *(_QWORD *)(v0
            + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadTask) = 0;
  swift_release(v7);
  *(_BYTE *)(v0
           + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_wasCancelled) = 0;
  if (qword_1013DD728 != -1)
    swift_once(&qword_1013DD728, sub_100A01E30);
  swift_beginAccess(&static OS_os_log.crlAssetDownloadManager, v56, 0, 0);
  v8 = (void *)static OS_os_log.crlAssetDownloadManager;
  v9 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v9, v55);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  v11 = v8;
  v12 = UUID.uuidString.getter(v11);
  v14 = v13;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v12;
  *(_QWORD *)(inited + 40) = v14;
  v15 = *(_QWORD *)(v1
                  + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadAttempts);
  *(_QWORD *)(inited + 96) = &type metadata for Int;
  *(_QWORD *)(inited + 104) = &protocol witness table for Int;
  *(_QWORD *)(inited + 72) = v15;
  v17 = static os_log_type_t.default.getter(v16);
  sub_100A06EBC((uint64_t)v11, &_mh_execute_header, v17, "Successful asset %{public}@ download on attempt %d", 50, 2, inited);
  swift_setDeallocating(inited);
  v18 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 2, v18);

  v19 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_observers);
  swift_beginAccess(v1+ OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_observers, v54, 0, 0);
  v20 = *v19;
  swift_bridgeObjectRetain(*v19);
  sub_1005CC474(v21);
  v23 = v22;
  swift_bridgeObjectRelease(v20);
  v24 = *(_QWORD *)(v23 + 16);
  if (v24)
  {
    v45 = v5;
    v46 = v3;
    v47 = v2;
    swift_bridgeObjectRetain(v23);
    v44 = v23;
    v25 = (uint64_t *)(v23 + 48);
    v26 = _swiftEmptyArrayStorage;
    do
    {
      v28 = *(v25 - 2);
      v27 = *(v25 - 1);
      v29 = *v25;
      v30 = swift_allocObject(&unk_101270348, 32, 7);
      *(_QWORD *)(v30 + 16) = v27;
      *(_QWORD *)(v30 + 24) = v29;
      if ((v28 & 2) != 0)
      {
        v31 = swift_allocObject(&unk_1012703C0, 32, 7);
        *(_QWORD *)(v31 + 16) = sub_1005D2F9C;
        *(_QWORD *)(v31 + 24) = v30;
        swift_retain(v29);
        if ((swift_isUniquelyReferenced_nonNull_native(v26) & 1) == 0)
          v26 = sub_100D10AE4(0, v26[2] + 1, 1, v26);
        v33 = v26[2];
        v32 = v26[3];
        if (v33 >= v32 >> 1)
          v26 = sub_100D10AE4((_QWORD *)(v32 > 1), v33 + 1, 1, v26);
        v26[2] = v33 + 1;
        v34 = &v26[2 * v33];
        v34[4] = sub_1005D2F5C;
        v34[5] = v31;
      }
      else
      {
        swift_retain(v29);
        swift_release(v30);
      }
      v25 += 3;
      --v24;
    }
    while (v24);
    v23 = v44;
    swift_bridgeObjectRelease(v44);
    v2 = v47;
    v3 = v46;
    v5 = v45;
  }
  else
  {
    v26 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease(v23);
  if (v26[2])
  {
    sub_100503E34();
    v35 = (void *)static OS_dispatch_queue.main.getter();
    v36 = swift_allocObject(&unk_101270370, 32, 7);
    *(_QWORD *)(v36 + 16) = v26;
    *(_QWORD *)(v36 + 24) = 1;
    aBlock[4] = sub_1005D2F58;
    v53 = v36;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(_QWORD *)"";
    aBlock[2] = sub_1005D2FC0;
    aBlock[3] = &unk_101270388;
    v37 = _Block_copy(aBlock);
    v38 = v48;
    static DispatchQoS.unspecified.getter(v39);
    v51 = _swiftEmptyArrayStorage;
    v40 = sub_1005034A0((unint64_t *)&qword_1013E1D20, 255, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v41 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
    v42 = sub_1004CBA30((unint64_t *)&qword_1013E1D30, (uint64_t *)&unk_1013DFBF0, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v51, v41, v42, v2, v40);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v38, v5, v37);
    _Block_release(v37);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v38, v50);
    *(_QWORD *)&result = swift_release(v53).n128_u64[0];
  }
  else
  {
    *(_QWORD *)&result = swift_bridgeObjectRelease(v26).n128_u64[0];
  }
  return result;
}

double sub_1005D1160()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t inited;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  void *v34;
  uint64_t v35;
  void *v36;
  char *v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  double result;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD aBlock[5];
  uint64_t v53;
  char v54[24];
  char v55[112];
  char v56[8];

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v50 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v49 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = type metadata accessor for DispatchQoS(0);
  v47 = *(_QWORD *)(v48 - 8);
  __chkstk_darwin(v48);
  v46 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadTask;
  v6 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadTask);
  if (!v6)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"notifyFailure()", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLAssetDownloadManager.swift", 95, 2, 516, "invalid nil value found", 23, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"notifyFailure()", 15, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLAssetDownloadManager.swift", 95, 2u, 516, (uint64_t)"invalid nil value found", 23, 2u);
    v6 = *(_QWORD *)(v0 + v5);
  }
  *(_QWORD *)(v0 + v5) = 0;
  swift_release(v6);
  *(_BYTE *)(v0
           + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_wasCancelled) = 0;
  if (qword_1013DD728 != -1)
    swift_once(&qword_1013DD728, sub_100A01E30);
  swift_beginAccess(&static OS_os_log.crlAssetDownloadManager, v56, 0, 0);
  v7 = (void *)static OS_os_log.crlAssetDownloadManager;
  v8 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v8, v55);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  v10 = v7;
  v11 = UUID.uuidString.getter(v10);
  v13 = v12;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v11;
  *(_QWORD *)(inited + 40) = v13;
  v14 = *(_QWORD *)(v1
                  + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadAttempts);
  *(_QWORD *)(inited + 96) = &type metadata for Int;
  *(_QWORD *)(inited + 104) = &protocol witness table for Int;
  *(_QWORD *)(inited + 72) = v14;
  v16 = static os_log_type_t.default.getter(v15);
  sub_100A06EBC((uint64_t)v10, &_mh_execute_header, v16, "Failed asset %{public}@ download on attempt %d", 46, 2, inited);
  swift_setDeallocating(inited);
  v17 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 2, v17);

  v18 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_observers);
  swift_beginAccess(v1+ OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_observers, v54, 0, 0);
  v19 = *v18;
  swift_bridgeObjectRetain(*v18);
  sub_1005CC474(v20);
  v22 = v21;
  swift_bridgeObjectRelease(v19);
  v23 = *(_QWORD *)(v22 + 16);
  if (v23)
  {
    v45 = v2;
    swift_bridgeObjectRetain(v22);
    v44 = v22;
    v24 = (uint64_t *)(v22 + 48);
    v25 = _swiftEmptyArrayStorage;
    do
    {
      v27 = *(v24 - 2);
      v26 = *(v24 - 1);
      v28 = *v24;
      v29 = swift_allocObject(&unk_1012702A8, 32, 7);
      *(_QWORD *)(v29 + 16) = v26;
      *(_QWORD *)(v29 + 24) = v28;
      if ((v27 & 4) != 0)
      {
        v30 = swift_allocObject(&unk_101270320, 32, 7);
        *(_QWORD *)(v30 + 16) = sub_1005D2F9C;
        *(_QWORD *)(v30 + 24) = v29;
        swift_retain(v28);
        if ((swift_isUniquelyReferenced_nonNull_native(v25) & 1) == 0)
          v25 = sub_100D10AE4(0, v25[2] + 1, 1, v25);
        v32 = v25[2];
        v31 = v25[3];
        if (v32 >= v31 >> 1)
          v25 = sub_100D10AE4((_QWORD *)(v31 > 1), v32 + 1, 1, v25);
        v25[2] = v32 + 1;
        v33 = &v25[2 * v32];
        v33[4] = sub_1005D2F5C;
        v33[5] = v30;
      }
      else
      {
        swift_retain(v28);
        swift_release(v29);
      }
      v24 += 3;
      --v23;
    }
    while (v23);
    v22 = v44;
    swift_bridgeObjectRelease(v44);
    v2 = v45;
  }
  else
  {
    v25 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease(v22);
  if (v25[2])
  {
    sub_100503E34();
    v34 = (void *)static OS_dispatch_queue.main.getter();
    v35 = swift_allocObject(&unk_1012702D0, 32, 7);
    *(_QWORD *)(v35 + 16) = v25;
    *(_QWORD *)(v35 + 24) = 2;
    aBlock[4] = sub_1005D2F58;
    v53 = v35;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(_QWORD *)"";
    aBlock[2] = sub_1005D2FC0;
    aBlock[3] = &unk_1012702E8;
    v36 = _Block_copy(aBlock);
    v37 = v46;
    static DispatchQoS.unspecified.getter(v38);
    v51 = _swiftEmptyArrayStorage;
    v39 = sub_1005034A0((unint64_t *)&qword_1013E1D20, 255, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v40 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
    v41 = sub_1004CBA30((unint64_t *)&qword_1013E1D30, (uint64_t *)&unk_1013DFBF0, (uint64_t)&protocol conformance descriptor for [A]);
    v42 = v49;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v51, v40, v41, v2, v39);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v37, v42, v36);
    _Block_release(v36);

    (*(void (**)(char *, uint64_t))(v50 + 8))(v42, v2);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v37, v48);
    *(_QWORD *)&result = swift_release(v53).n128_u64[0];
  }
  else
  {
    *(_QWORD *)&result = swift_bridgeObjectRelease(v25).n128_u64[0];
  }
  return result;
}

double sub_1005D174C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t inited;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  void *v31;
  uint64_t v32;
  void *v33;
  char *v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  double result;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char v49[72];
  _QWORD *v50;
  _QWORD aBlock[5];
  uint64_t v52;
  char v53[32];

  v48 = type metadata accessor for DispatchWorkItemFlags(0);
  v47 = *(_QWORD *)(v48 - 8);
  __chkstk_darwin(v48);
  v46 = (char *)&v42 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = type metadata accessor for DispatchQoS(0);
  v44 = *(_QWORD *)(v45 - 8);
  __chkstk_darwin(v45);
  v43 = (char *)&v42 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadTask;
  v4 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadTask);
  if (v4)
  {
    v5 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v5, v49);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    aBlock[0] = v4;
    swift_retain_n(v4, 2);
    v7 = sub_1004B804C(&qword_1013E60C8);
    v8 = String.init<A>(describing:)(aBlock, v7);
    v10 = v9;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v11 = sub_1004CFC2C();
    *(_QWORD *)(inited + 32) = v8;
    *(_QWORD *)(inited + 64) = v11;
    *(_QWORD *)(inited + 40) = v10;
    if ((swift_task_isCancelled(v12) & 1) != 0)
    {
      swift_setDeallocating(inited);
      v13 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(inited + 32, 1, v13);
    }
    else
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"notifyCancelled()", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLAssetDownloadManager.swift", 95, 2, 527, "Task was expected to be cancelled. task=%@", 42, 2u, inited);
      sub_1004F5394(inited, (uint64_t)"notifyCancelled()", 17, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLAssetDownloadManager.swift", 95, 2u, 527, (uint64_t)"Task was expected to be cancelled. task=%@", 42, 2u);
      swift_bridgeObjectRelease(inited);
    }
    swift_release(v4);
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"notifyCancelled()", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLAssetDownloadManager.swift", 95, 2, 525, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"notifyCancelled()", 17, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLAssetDownloadManager.swift", 95, 2u, 525, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  }
  v14 = *(_QWORD *)(v0 + v3);
  *(_QWORD *)(v0 + v3) = 0;
  swift_release(v14);
  *(_BYTE *)(v0
           + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_wasCancelled) = 1;
  v15 = (_QWORD *)(v0
                 + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_observers);
  swift_beginAccess(v15, v53, 0, 0);
  v16 = *v15;
  swift_bridgeObjectRetain(*v15);
  sub_1005CC474(v17);
  v19 = v18;
  swift_bridgeObjectRelease(v16);
  v20 = *(_QWORD *)(v19 + 16);
  if (v20)
  {
    swift_bridgeObjectRetain(v19);
    v42 = v19;
    v21 = (uint64_t *)(v19 + 48);
    v22 = _swiftEmptyArrayStorage;
    do
    {
      v24 = *(v21 - 2);
      v23 = *(v21 - 1);
      v25 = *v21;
      v26 = swift_allocObject(&unk_101270208, 32, 7);
      *(_QWORD *)(v26 + 16) = v23;
      *(_QWORD *)(v26 + 24) = v25;
      if ((v24 & 8) != 0)
      {
        v27 = swift_allocObject(&unk_101270280, 32, 7);
        *(_QWORD *)(v27 + 16) = sub_1004CBAD4;
        *(_QWORD *)(v27 + 24) = v26;
        swift_retain(v25);
        if ((swift_isUniquelyReferenced_nonNull_native(v22) & 1) == 0)
          v22 = sub_100D10AE4(0, v22[2] + 1, 1, v22);
        v29 = v22[2];
        v28 = v22[3];
        if (v29 >= v28 >> 1)
          v22 = sub_100D10AE4((_QWORD *)(v28 > 1), v29 + 1, 1, v22);
        v22[2] = v29 + 1;
        v30 = &v22[2 * v29];
        v30[4] = sub_1005D2B64;
        v30[5] = v27;
      }
      else
      {
        swift_retain(v25);
        swift_release(v26);
      }
      v21 += 3;
      --v20;
    }
    while (v20);
    v19 = v42;
    swift_bridgeObjectRelease(v42);
  }
  else
  {
    v22 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease(v19);
  if (v22[2])
  {
    sub_100503E34();
    v31 = (void *)static OS_dispatch_queue.main.getter();
    v32 = swift_allocObject(&unk_101270230, 32, 7);
    *(_QWORD *)(v32 + 16) = v22;
    *(_QWORD *)(v32 + 24) = 3;
    aBlock[4] = sub_1005D2B20;
    v52 = v32;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(_QWORD *)"";
    aBlock[2] = sub_1005D2FC0;
    aBlock[3] = &unk_101270248;
    v33 = _Block_copy(aBlock);
    v34 = v43;
    static DispatchQoS.unspecified.getter(v35);
    v50 = _swiftEmptyArrayStorage;
    v36 = sub_1005034A0((unint64_t *)&qword_1013E1D20, 255, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v37 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
    v38 = sub_1004CBA30((unint64_t *)&qword_1013E1D30, (uint64_t *)&unk_1013DFBF0, (uint64_t)&protocol conformance descriptor for [A]);
    v39 = v46;
    v40 = v48;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v50, v37, v38, v48, v36);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v34, v39, v33);
    _Block_release(v33);

    (*(void (**)(char *, uint64_t))(v47 + 8))(v39, v40);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v34, v45);
    *(_QWORD *)&result = swift_release(v52).n128_u64[0];
  }
  else
  {
    *(_QWORD *)&result = swift_bridgeObjectRelease(v22).n128_u64[0];
  }
  return result;
}

uint64_t sub_1005D1D2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0
     + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_assetUUID;
  v2 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release(*(_QWORD *)(v0
                          + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadTask));
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_observers));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1005D1D9C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;

  v32 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v32 - 8);
  __chkstk_darwin(v32);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v6);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = swift_weakLoadStrong(v1 + 16);
  if (result)
  {
    v10 = result;
    if ((unint64_t)a1 >> 62)
    {
      if (a1 < 0)
        v27 = a1;
      else
        v27 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a1);
      v11 = _CocoaArrayWrapper.endIndex.getter(v27);
      swift_bridgeObjectRelease(a1);
    }
    else
    {
      v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v12 = _swiftEmptyArrayStorage;
    if (v11)
    {
      v33 = _swiftEmptyArrayStorage;
      result = sub_100600724(0, v11 & ~(v11 >> 63), 0);
      if (v11 < 0)
      {
        __break(1u);
        return result;
      }
      v30 = v8;
      v31 = v11;
      v29 = v10;
      v13 = 0;
      v12 = v33;
      v14 = a1 & 0xC000000000000001;
      v15 = a1;
      do
      {
        if (v14)
          v16 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v13, a1);
        else
          v16 = (char *)*(id *)(a1 + 8 * v13 + 32);
        v17 = v16;
        v18 = &v16[OBJC_IVAR____TtC8Freeform8CRLAsset_storage];
        v20 = *((_QWORD *)v18 + 3);
        v19 = *((_QWORD *)v18 + 4);
        sub_1004BB5A4(v18, v20);
        (*(void (**)(uint64_t, uint64_t))(v19 + 24))(v20, v19);

        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v12);
        v33 = v12;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_100600724(0, v12[2] + 1, 1);
          v12 = v33;
        }
        v23 = v12[2];
        v22 = v12[3];
        if (v23 >= v22 >> 1)
        {
          sub_100600724(v22 > 1, v23 + 1, 1);
          v12 = v33;
        }
        ++v13;
        v12[2] = v23 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))((unint64_t)v12+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v23, v5, v32);
        v33 = v12;
        a1 = v15;
      }
      while (v31 != v13);
      v10 = v29;
      v8 = v30;
    }
    static TaskPriority.high.getter();
    v24 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v8, 0, 1, v24);
    v25 = (_QWORD *)swift_allocObject(&unk_1012701E0, 48, 7);
    v25[2] = 0;
    v25[3] = 0;
    v25[4] = v10;
    v25[5] = v12;
    swift_retain(v10);
    v26 = sub_1009880C4((uint64_t)v8, (uint64_t)&unk_1013E60C0, (uint64_t)v25);
    swift_release(v26);
    swift_release(v10);
    return sub_1004CB800((uint64_t)v8, &qword_1013E01F0);
  }
  return result;
}

uint64_t sub_1005D2064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5[22] = a4;
  v5[23] = a5;
  v7 = type metadata accessor for UUID(0);
  v5[24] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v5[25] = v8;
  v5[26] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  v5[27] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1005D20EC, a4, 0);
}

uint64_t sub_1005D20EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  void (*v7)(_QWORD, _QWORD, _QWORD);
  __n128 v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t inited;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v33)(_QWORD, _QWORD, _QWORD);
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;

  v1 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 200);
    v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v5 = (_QWORD *)(*(_QWORD *)(v0 + 176) + 272);
    swift_bridgeObjectRetain(v1);
    swift_beginAccess(v5, v0 + 128, 0, 0);
    v6 = *(_QWORD *)(v3 + 72);
    v7 = *(void (**)(_QWORD, _QWORD, _QWORD))(v3 + 16);
    v35 = v5;
    v36 = v3;
    v33 = v7;
    v34 = v6;
    while (1)
    {
      v10 = *(_QWORD *)(v0 + 216);
      v11 = *(_QWORD *)(v0 + 192);
      v7(v10, v4, v11);
      v12 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56);
      v12(v10, 0, 1, v11);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v10, 1, v11) == 1)
        break;
      (*(void (**)(_QWORD, _QWORD, _QWORD))(v3 + 32))(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 192));
      v13 = *v5;
      if (*(_QWORD *)(*v5 + 16))
      {
        v14 = *(_QWORD *)(v0 + 208);
        swift_bridgeObjectRetain(*v5);
        v15 = sub_100842EFC(v14);
        if ((v16 & 1) != 0)
        {
          v17 = *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v15);
          swift_retain(v17);
          swift_bridgeObjectRelease(v13);
          *(_BYTE *)(v17
                   + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_wasCancelled) = 1;
          if (qword_1013DD728 != -1)
            swift_once(&qword_1013DD728, sub_100A01E30);
          swift_beginAccess(&static OS_os_log.crlAssetDownloadManager, v0 + 152, 0, 0);
          v18 = (void *)static OS_os_log.crlAssetDownloadManager;
          v19 = sub_1004B804C((uint64_t *)&unk_1013E0180);
          inited = swift_initStackObject(v19, v0 + 16);
          *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
          v21 = v18;
          v22 = UUID.uuidString.getter(v21);
          v24 = v23;
          *(_QWORD *)(inited + 56) = &type metadata for String;
          *(_QWORD *)(inited + 64) = sub_1004CFC2C();
          *(_QWORD *)(inited + 32) = v22;
          *(_QWORD *)(inited + 40) = v24;
          v25 = *(_QWORD *)(v17
                          + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadAttempts);
          *(_QWORD *)(inited + 96) = &type metadata for Int;
          *(_QWORD *)(inited + 104) = &protocol witness table for Int;
          *(_QWORD *)(inited + 72) = v25;
          v27 = static os_log_type_t.default.getter(v26);
          sub_100A06EBC((uint64_t)v21, &_mh_execute_header, v27, "Asset %{public}@ download was cancelled on the %d attempt", 57, 2, inited);
          swift_setDeallocating(inited);
          v28 = sub_1004B804C(&qword_1013E0190);
          swift_arrayDestroy(inited + 32, 2, v28);

          v29 = *(_QWORD *)(v17
                          + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadTask);
          if (v29)
          {
            swift_retain(*(_QWORD *)(v17
                                   + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadTask));
            Task.cancel()();
            swift_release(v29);
          }
          v8 = swift_release(v17);
          v5 = v35;
          v3 = v36;
          v7 = v33;
          v6 = v34;
        }
        else
        {
          v8 = swift_bridgeObjectRelease(v13);
        }
      }
      (*(void (**)(_QWORD, _QWORD, __n128))(v3 + 8))(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 192), v8);
      v4 += v6;
      if (!--v2)
        goto LABEL_14;
    }
  }
  else
  {
    v12 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v0 + 200) + 56);
    v9 = swift_bridgeObjectRetain(v1);
LABEL_14:
    ((void (*)(_QWORD, uint64_t, uint64_t, _QWORD, __n128))v12)(*(_QWORD *)(v0 + 216), 1, 1, *(_QWORD *)(v0 + 192), v9);
  }
  v30 = *(_QWORD *)(v0 + 208);
  v31 = *(_QWORD *)(v0 + 216);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 184));
  swift_task_dealloc(v31);
  swift_task_dealloc(v30);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005D24DC()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocClassInstance(v0, 24, 7);
}

uint64_t sub_1005D2500()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 128));
  swift_release(*(_QWORD *)(v0 + 144));
  sub_1004CB800(v0 + 176, &qword_1013E6148);
  swift_release(*(_QWORD *)(v0 + 216));
  sub_1004CB800(v0 + 224, &qword_1013E6100);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 264));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 272));
  swift_defaultActor_destroy(v0);
  return v0;
}

uint64_t sub_1005D256C()
{
  uint64_t v0;

  sub_1005D2500();
  return swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for CRLAssetDownloadManager()
{
  return objc_opt_self(_TtC8Freeform23CRLAssetDownloadManager);
}

uint64_t sub_1005D25A4()
{
  return type metadata accessor for CRLAssetDownloadManager.AssetRequestInfo(0);
}

uint64_t type metadata accessor for CRLAssetDownloadManager.AssetRequestInfo(uint64_t a1)
{
  uint64_t result;

  result = qword_1013E5D98;
  if (!qword_1013E5D98)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLAssetDownloadManager.AssetRequestInfo);
  return result;
}

uint64_t sub_1005D25E8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = "\b";
    v4[2] = &unk_100EFCEC0;
    v4[3] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
    result = swift_updateClassMetadata2(a1, 256, 5, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for CRLAssetDownloadManager.ObserverHandlerInfos()
{
  return objc_opt_self(_TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F20ObserverHandlerInfos);
}

uint64_t type metadata accessor for CRLAssetDownloadManager.CullingListener()
{
  return objc_opt_self(_TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F15CullingListener);
}

ValueMetadata *type metadata accessor for CRLAssetDownloadManager.CRLAssetDownloadManagerThrottlingConfiguration()
{
  return &type metadata for CRLAssetDownloadManager.CRLAssetDownloadManagerThrottlingConfiguration;
}

_QWORD *sub_1005D26D4(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v16;
  uint64_t v17;
  _UNKNOWN **v18;
  _QWORD v19[5];

  v2 = type metadata accessor for CRLCloudKitOperationSink();
  v3 = swift_allocObject(v2, 24, 7);
  if (qword_1013DCB60 != -1)
    swift_once(&qword_1013DCB60, sub_100637218);
  v4 = (void *)qword_10147ECC0;
  *(_QWORD *)(v3 + 16) = qword_10147ECC0;
  v19[3] = v2;
  v19[4] = &off_101270838;
  v19[0] = v3;
  v5 = type metadata accessor for CRLCloudAssetDownloader();
  v6 = (_QWORD *)swift_allocObject(v5, 184, 15);
  v7 = sub_1004CB9AC((uint64_t)v19, v2);
  __chkstk_darwin(v7);
  v9 = (uint64_t *)((char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v10 + 16))(v9);
  v11 = *v9;
  v17 = v2;
  v18 = &off_101270838;
  *(_QWORD *)&v16 = v11;
  v12 = v4;
  swift_retain(v3);
  swift_defaultActor_initialize(v6, v13);
  v6[15] = 0;
  v14 = swift_unknownObjectWeakInit(v6 + 14, 0);
  v6[21] = &_swiftEmptySetSingleton;
  v6[22] = &_swiftEmptyDictionarySingleton;
  v6[15] = &off_101270198;
  swift_unknownObjectWeakAssign(v14, a1);

  sub_1004DB728(&v16, (uint64_t)(v6 + 16));
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v19);
  swift_release(v3);
  return v6;
}

uint64_t sub_1005D2858(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  char *v8;
  id v9;
  void *v10;
  os_unfair_lock_s *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = swift_allocObject(&unk_1012701B8, 24, 7);
  swift_unknownObjectWeakInit(v2 + 16, a1);
  v3 = *(_QWORD *)&a1[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v3 + 16));
  v4 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
  v5 = *(void **)&a1[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  if (v5)
  {
    v6 = *(id *)&a1[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  }
  else
  {
    v7 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager(0));
    v8 = a1;
    v9 = sub_100C7EE84((uint64_t)v8);

    v10 = *(void **)&a1[v4];
    *(_QWORD *)&a1[v4] = v9;
    v6 = v9;

    v5 = 0;
  }
  v11 = *(os_unfair_lock_s **)(v3 + 16);
  v12 = v5;
  os_unfair_lock_unlock(v11);
  v13 = type metadata accessor for CRLAssetDownloadManager();
  v14 = swift_allocObject(v13, 280, 15);
  swift_defaultActor_initialize(v14, v15);
  *(_OWORD *)(v14 + 224) = 0u;
  *(_OWORD *)(v14 + 240) = 0u;
  *(_QWORD *)(v14 + 256) = 0;
  *(_QWORD *)(v14 + 264) = &_swiftEmptySetSingleton;
  *(_OWORD *)(v14 + 192) = 0u;
  *(_OWORD *)(v14 + 208) = 0u;
  *(_QWORD *)(v14 + 272) = &_swiftEmptyDictionarySingleton;
  *(_QWORD *)(v14 + 112) = v6;
  *(_QWORD *)(v14 + 120) = sub_1005D29B0;
  *(_QWORD *)(v14 + 128) = v2;
  *(_QWORD *)(v14 + 136) = sub_1005CC8D8;
  *(_QWORD *)(v14 + 144) = 0;
  *(_QWORD *)(v14 + 152) = 3;
  *(_OWORD *)(v14 + 160) = xmmword_100EFCE10;
  *(_OWORD *)(v14 + 176) = 0u;
  return v14;
}

uint64_t sub_1005D298C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1005D29B0(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_1005CC77C(v1, a1);
}

unint64_t sub_1005D29C8()
{
  unint64_t result;

  result = qword_1013E6088;
  if (!qword_1013E6088)
  {
    result = swift_getWitnessTable(&unk_100F1658C, &type metadata for CRLNetworkReachabilityListenerError);
    atomic_store(result, (unint64_t *)&qword_1013E6088);
  }
  return result;
}

unint64_t sub_1005D2A0C()
{
  unint64_t result;

  result = qword_1013E6090;
  if (!qword_1013E6090)
  {
    result = swift_getWitnessTable(&unk_100F22994, &type metadata for CRLAssetError);
    atomic_store(result, &qword_1013E6090);
  }
  return result;
}

uint64_t sub_1005D2A50()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_bridgeObjectRelease(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1005D2A84(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1013E60BC);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1004CFD00;
  return sub_1005D2064(a1, v4, v5, v7, v6);
}

uint64_t sub_1005D2AFC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1005D2B20()
{
  uint64_t v0;

  return sub_1005D06F0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1005D2B28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1005D2B38(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_1005D2B40()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1005D2B64(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

uint64_t sub_1005D2B88()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 16))(0);
}

uint64_t sub_1005D2BB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(type metadata accessor for UUID(0) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = *(_QWORD *)(v0 + 32);
  v6 = v0 + v3;
  v7 = *(_QWORD *)(v0 + v4);
  v8 = *(_QWORD *)(v0 + ((v4 + 15) & 0xFFFFFFFFFFFFF8));
  v9 = (_QWORD *)swift_task_alloc(dword_1013E60EC);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_1004CFD00;
  v9[21] = v7;
  v9[22] = v8;
  v9[20] = v6;
  v9[19] = v5;
  return swift_task_switch(sub_1005CD1D4, v7, 0);
}

void sub_1005D2C5C()
{
  _QWORD *v0;

  sub_1008F0FD0(v0);
}

double sub_1005D2C74@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1008F11A4(v1, a1);
}

uint64_t sub_1005D2C8C()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_1005D2CB0(_BYTE *a1)
{
  uint64_t v1;

  return sub_1005CF278(a1, v1);
}

void sub_1005D2CB8()
{
  uint64_t v0;

  sub_1008F0C14(v0);
}

uint64_t sub_1005D2CD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc(dword_1013E611C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1004CFD00;
  v3[2] = v2;
  return swift_task_switch(sub_1005CF384, v2, 0);
}

uint64_t sub_1005D2D38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc(dword_1013E612C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1004CFD00;
  v3[2] = v2;
  return swift_task_switch(sub_1005CE78C, v2, 0);
}

uint64_t sub_1005D2D98(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1013E1904);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1004CF80C;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1013E1900 + dword_1013E1900))(a1, v4);
}

uint64_t sub_1005D2E0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  swift_release(*(_QWORD *)(v0 + v7));
  return swift_deallocObject(v0, v7 + 8, v5);
}

uint64_t sub_1005D2EAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(type metadata accessor for UUID(0) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = *(_QWORD *)(v0 + 32);
  v6 = v0 + v3;
  v7 = *(_QWORD *)(v0 + v4);
  v8 = *(_QWORD *)(v0 + ((v4 + 15) & 0xFFFFFFFFFFFFF8));
  v9 = (_QWORD *)swift_task_alloc(dword_1013E60EC);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_1004CF80C;
  v9[21] = v7;
  v9[22] = v8;
  v9[20] = v6;
  v9[19] = v5;
  return swift_task_switch(sub_1005CD1D4, v7, 0);
}

double sub_1005D2FC0(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  double result;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = swift_retain(v2);
  v1(v3);
  *(_QWORD *)&result = swift_release(v2).n128_u64[0];
  return result;
}

char *sub_1005D2FEC(uint64_t a1, void *a2)
{
  _BYTE *v2;
  char *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  char *v12;
  id v13;
  objc_super v15;

  v2[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_isInDynamicMode] = 0;
  v5 = v2;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
    && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    sub_1004B5FB0((uint64_t)_swiftEmptyArrayStorage);
  }
  else
  {
    v6 = &_swiftEmptySetSingleton;
  }
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_observedObjects] = v6;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_canvasLayerHosting] = a1;
  v7 = objc_msgSend((id)swift_unknownObjectRetain(a1), "interactiveCanvasController");
  v8 = objc_msgSend(v7, "changeNotifier");

  *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_changeNotifier] = v8;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_editorController] = a2;
  v9 = a2;

  v15.receiver = v5;
  v15.super_class = (Class)type metadata accessor for CRLMiniFormatterStateManager();
  v10 = objc_msgSendSuper2(&v15, "init");
  v11 = (void *)objc_opt_self(NSNotificationCenter);
  v12 = (char *)v10;
  v13 = objc_msgSend(v11, "defaultCenter");
  objc_msgSend(v13, "addObserver:selector:name:object:", v12, "selectionPathDidChangeWithNotification:", CFSTR("CRLEditorControllerSelectionPathDidChangeNotification"), *(_QWORD *)&v12[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_editorController]);

  sub_1005D3634();
  swift_unknownObjectRelease(a1);

  return v12;
}

id sub_1005D3180()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  _QWORD v8[5];
  uint64_t v9;

  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_canvasLayerHosting), "interactiveCanvasController");
  if (!v1)
    return 0;
  v2 = v1;
  v3 = objc_msgSend(v1, "editorController");
  if (v3)
  {
    v4 = swift_allocObject(&unk_1012707D0, 17, 7);
    *(_BYTE *)(v4 + 16) = 0;
    v8[4] = sub_1005C5FD8;
    v9 = v4;
    v8[0] = _NSConcreteStackBlock;
    v8[1] = *(_QWORD *)"";
    v8[2] = sub_100541BD8;
    v8[3] = &unk_1012707E8;
    v5 = _Block_copy(v8);
    v6 = v9;
    swift_retain(v4);
    objc_msgSend(v3, "enumerateEditorsOnStackUsingBlock:", v5, swift_release(v6).n128_f64[0]);

    _Block_release(v5);
    swift_beginAccess(v4 + 16, v8, 0, 0);
    v3 = (id)*(unsigned __int8 *)(v4 + 16);

    swift_release(v4);
  }
  else
  {

  }
  return v3;
}

void CRLMiniFormatterStateManager.processChanges(_:forChangeSource:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  char *v10;
  _QWORD v11[5];
  uint64_t v12;
  _OWORD v13[2];

  if ((v2[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_isInDynamicMode] & 1) == 0)
  {
    v5 = objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_canvasLayerHosting], "interactiveCanvasController");
    if (v5)
    {
      v6 = v5;
      sub_1004CB6E8(a2, (uint64_t)v13);
      v7 = swift_allocObject(&unk_101270670, 64, 7);
      *(_QWORD *)(v7 + 16) = a1;
      *(_QWORD *)(v7 + 24) = v2;
      sub_10050CB14(v13, (_OWORD *)(v7 + 32));
      v11[4] = sub_1005D3A88;
      v12 = v7;
      v11[0] = _NSConcreteStackBlock;
      v11[1] = *(_QWORD *)"";
      v11[2] = sub_1005D2FC0;
      v11[3] = &unk_101270688;
      v8 = _Block_copy(v11);
      v9 = v12;
      swift_bridgeObjectRetain(a1);
      v10 = v2;
      objc_msgSend(v6, "performBlockOnMainThreadAfterLayoutIfNecessary:", v8, swift_release(v9).n128_f64[0]);
      _Block_release(v8);

    }
  }
}

void sub_1005D33E4(void *a1)
{
  char *v1;
  char *v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  _QWORD *v14;
  void *v15;
  _QWORD *v16;
  id v17;
  char *v18;
  id v19;
  _QWORD v20[5];
  _QWORD *v21;
  _QWORD v22[2];
  __int128 v23;
  __int128 v24;

  v2 = v1;
  v3 = objc_msgSend(a1, "userInfo");
  if (v3)
  {
    v4 = v3;
    v5 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v3, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

    v22[0] = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("CRLEditorControllerOldSelectionPathKey"));
    v22[1] = v6;
    AnyHashable.init<A>(_:)(v22, &type metadata for String, &protocol witness table for String);
    if (*(_QWORD *)(v5 + 16) && (v7 = sub_1008432BC((uint64_t)v20), (v8 & 1) != 0))
    {
      sub_1004CB6E8(*(_QWORD *)(v5 + 56) + 32 * v7, (uint64_t)&v23);
    }
    else
    {
      v23 = 0u;
      v24 = 0u;
    }
    swift_bridgeObjectRelease(v5);
    sub_1004B89A4((uint64_t)v20);
    if (*((_QWORD *)&v24 + 1))
    {
      v9 = sub_1004B8930(0, (unint64_t *)&qword_1013E6268, off_1012299A0);
      if ((swift_dynamicCast(v22, &v23, (char *)&type metadata for Any + 8, v9, 6) & 1) != 0)
      {
        v10 = (void *)v22[0];
        v11 = objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_editorController], "selectionPath");
        if (v2[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_isInDynamicMode] == 1
          || (v12 = objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_canvasLayerHosting], "interactiveCanvasController")) == 0)
        {

        }
        else
        {
          v13 = v12;
          v14 = (_QWORD *)swift_allocObject(&unk_101270780, 40, 7);
          v14[2] = v11;
          v14[3] = v2;
          v14[4] = v10;
          v20[4] = sub_1005D41D8;
          v21 = v14;
          v20[0] = _NSConcreteStackBlock;
          v20[1] = *(_QWORD *)"";
          v20[2] = sub_1005D2FC0;
          v20[3] = &unk_101270798;
          v15 = _Block_copy(v20);
          v16 = v21;
          v17 = v11;
          v18 = v2;
          v19 = v10;
          objc_msgSend(v13, "performBlockOnMainThreadAfterLayoutIfNecessary:", v15, swift_release(v16).n128_f64[0]);
          _Block_release(v15);

        }
      }
    }
    else
    {
      sub_1004CB800((uint64_t)&v23, &qword_1013E0230);
    }
  }
}

void sub_1005D3634()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  _QWORD v5[5];
  uint64_t v6;

  v0 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  if (qword_1013DD908 != -1)
    swift_once(&qword_1013DD908, sub_100A16088);
  v1 = qword_101480600;
  v2 = swift_allocObject(&unk_101270730, 24, 7);
  swift_unknownObjectWeakInit(v2 + 16);
  v5[4] = sub_1005D419C;
  v6 = v2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = *(_QWORD *)"";
  v5[2] = sub_100568280;
  v5[3] = &unk_101270748;
  v3 = _Block_copy(v5);
  v4 = objc_msgSend(v0, "addObserverForName:object:queue:usingBlock:", v1, 0, 0, v3, swift_release(v6).n128_f64[0]);
  _Block_release(v3);
  swift_unknownObjectRelease(v4);

}

void sub_1005D383C(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, void *, _QWORD, uint64_t);
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t (*v19)(void *, uint64_t, __n128);
  uint64_t (*v20)(void *, uint64_t);
  void (*v21)(__int128 *__return_ptr, id, uint64_t);
  __int128 v22;
  uint64_t v23;
  _QWORD v24[5];

  if (!((unint64_t)a1 >> 62))
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v6)
      goto LABEL_3;
LABEL_21:
    swift_bridgeObjectRelease(a1);
    return;
  }
  if (a1 < 0)
    v18 = a1;
  else
    v18 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v6 = _CocoaArrayWrapper.endIndex.getter(v18);
  if (!v6)
    goto LABEL_21;
LABEL_3:
  if (v6 < 1)
  {
    __break(1u);
  }
  else
  {
    v7 = 0;
    v20 = *(uint64_t (**)(void *, uint64_t))((swift_isaMask & *a2) + 0x120);
    v21 = *(void (**)(__int128 *__return_ptr, id, uint64_t))((swift_isaMask & *a2) + 0x138);
    v19 = *(uint64_t (**)(void *, uint64_t, __n128))((swift_isaMask & *a2) + 0x100);
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, a1);
      else
        v8 = *(id *)(a1 + 8 * v7 + 32);
      v9 = v8;
      v21(&v22, v8, a3);
      if (v23)
      {
        sub_1004DB728(&v22, (uint64_t)v24);
        (*(void (**)(_QWORD *))((swift_isaMask & *a2) + 0x140))(v24);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v24);
      }
      else
      {
        sub_1004CB800((uint64_t)&v22, &qword_1013E6278);
      }
      v10 = v20(v9, a3);
      if (v10)
      {
        v12 = v10;
        (*(void (**)(void))((swift_isaMask & *a2) + 0x128))();
        v11 = swift_bridgeObjectRelease(v12);
      }
      v13 = v19(v9, a3, v11);
      if (v13)
      {
        v14 = v13;
        v15 = *(void (**)(uint64_t, void *, _QWORD, uint64_t))((swift_isaMask & *a2) + 0x118);
        v16 = v6;
        v17 = v9;
        v15(v14, v9, 0, 1);
        swift_bridgeObjectRelease(v14);

        v6 = v16;
      }
      ++v7;

    }
    while (v6 != v7);
    swift_bridgeObjectRelease(a1);
  }
}

uint64_t sub_1005D3A54()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 64, 7);
}

void sub_1005D3A88()
{
  uint64_t v0;

  sub_1005D383C(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24), v0 + 32);
}

uint64_t sub_1005D3A94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1005D3AA4(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

void sub_1005D3B3C(void *a1, _QWORD *a2, void *a3)
{
  id v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, void *, void *, _QWORD);
  id v11;
  id v12;
  __int128 v13;
  uint64_t v14;
  _QWORD v15[5];

  sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
  v6 = objc_msgSend(*(id *)((char *)a2 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_editorController), "selectionPath");
  v7 = static NSObject.== infix(_:_:)(a1, v6);

  if ((v7 & 1) != 0)
  {
    (*(void (**)(__int128 *__return_ptr, void *, void *))((swift_isaMask & *a2) + 0x130))(&v13, a3, a1);
    if (v14)
    {
      sub_1004DB728(&v13, (uint64_t)v15);
      (*(void (**)(_QWORD *))((swift_isaMask & *a2) + 0x140))(v15);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v15);
    }
    else
    {
      sub_1004CB800((uint64_t)&v13, &qword_1013E6278);
    }
    v8 = (*(uint64_t (**)(void *, void *))((swift_isaMask & *a2) + 0xF8))(a3, a1);
    if (v8)
    {
      v9 = v8;
      v10 = *(void (**)(uint64_t, void *, void *, _QWORD))((swift_isaMask & *a2) + 0x118);
      v11 = a3;
      v12 = a1;
      v10(v9, a3, a1, 0);
      swift_bridgeObjectRelease(v9);

    }
  }
}

double sub_1005D3D14@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)(a1 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

void CRLMiniFormatterStateManager.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("Freeform.CRLMiniFormatterStateManager", 37, "init()", 6, 0);
  __break(1u);
}

id CRLMiniFormatterStateManager.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLMiniFormatterStateManager();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLMiniFormatterStateManager()
{
  return objc_opt_self(_TtC8Freeform28CRLMiniFormatterStateManager);
}

void sub_1005D3E24()
{
  uint64_t v0;
  id v1;
  void *v2;
  char *v3;

  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_isInDynamicMode) & 1) == 0)
  {
    *(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_isInDynamicMode) = 1;
    v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_canvasLayerHosting), "interactiveCanvasController");
    if (v1)
    {
      v2 = v1;
      v3 = (char *)objc_msgSend(v1, "editingCoordinator");

      if (v3)
      {
        if (*(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_suspendResumeCoordinator])
        {
          sub_10066AAE4(0xD00000000000001BLL, 0x8000000100FB8240);

        }
        else
        {
          __break(1u);
        }
      }
    }
  }
}

void sub_1005D3EF4()
{
  _QWORD *v0;
  _QWORD *v1;
  id v2;
  void *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;

  if (*((_BYTE *)v0 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_isInDynamicMode) == 1)
  {
    v1 = v0;
    *((_BYTE *)v0 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_isInDynamicMode) = 0;
    v2 = objc_msgSend(*(id *)((char *)v0 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_canvasLayerHosting), "interactiveCanvasController");
    if (v2)
    {
      v3 = v2;
      v4 = (char *)objc_msgSend(v2, "editingCoordinator");

      if (v4)
      {
        if (!*(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_suspendResumeCoordinator])
        {
          __break(1u);
          return;
        }
        sub_10066B1AC(0xD00000000000001BLL, 0x8000000100FB8240);

      }
    }
    v5 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x110))();
    if (v5)
    {
      v6 = v5;
      (*(void (**)(uint64_t, uint64_t, _QWORD, uint64_t))((swift_isaMask & *v1) + 0x118))(v5, 2, 0, 2);
      swift_bridgeObjectRelease(v6);
    }
  }
}

void sub_1005D4018(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *Strong;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[40];

  v3 = Notification.userInfo.getter(a1);
  if (v3)
  {
    v4 = v3;
    *(_QWORD *)&v13 = 0xD000000000000021;
    *((_QWORD *)&v13 + 1) = 0x8000000100FB8210;
    AnyHashable.init<A>(_:)(&v13, &type metadata for String, &protocol witness table for String);
    if (*(_QWORD *)(v4 + 16) && (v5 = sub_1008432BC((uint64_t)v15), (v6 & 1) != 0))
    {
      sub_1004CB6E8(*(_QWORD *)(v4 + 56) + 32 * v5, (uint64_t)&v13);
    }
    else
    {
      v13 = 0u;
      v14 = 0u;
    }
    swift_bridgeObjectRelease(v4);
    sub_1004B89A4((uint64_t)v15);
    v7 = *((_QWORD *)&v14 + 1);
    sub_1004CB800((uint64_t)&v13, &qword_1013E0230);
    if (v7)
    {
      v8 = a2 + 16;
      swift_beginAccess(v8, v15, 0, 0);
      Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v8);
      if (Strong)
      {
        v10 = Strong;
        if (*((_BYTE *)Strong + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_isInDynamicMode) == 1
          || (v11 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x108))()) == 0)
        {

        }
        else
        {
          v12 = v11;
          (*(void (**)(uint64_t, uint64_t, _QWORD, uint64_t))((swift_isaMask & *v10) + 0x118))(v11, 1, 0, 2);

          swift_bridgeObjectRelease(v12);
        }
      }
    }
  }
}

uint64_t sub_1005D4178()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1005D419C(uint64_t a1)
{
  uint64_t v1;

  sub_1005D4018(a1, v1);
}

uint64_t sub_1005D41A4()
{
  id *v0;

  return swift_deallocObject(v0, 40, 7);
}

void sub_1005D41D8()
{
  uint64_t v0;

  sub_1005D3B3C(*(void **)(v0 + 16), *(_QWORD **)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1005D41E4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

void sub_1005D4210(void *a1, id a2)
{
  uint64_t v2;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char v14;
  char **v15;
  id v16;

  v4 = *(void **)(v2 + 16);
  v5 = objc_msgSend(a2, "ownerName");
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v8 = v7;

  if (v6)
    v9 = 0;
  else
    v9 = v8 == 0xE000000000000000;
  if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)(v6, v8, 0, 0xE000000000000000, 0) & 1) != 0)
    goto LABEL_13;
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(CKCurrentUserDefaultName);
  if (v6 == v10 && v8 == v11)
  {
    swift_bridgeObjectRelease(v8);
    goto LABEL_13;
  }
  v13 = v11;
  v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v8, v10, v11, 0);
  swift_bridgeObjectRelease(v13);
  if ((v14 & 1) != 0)
  {
LABEL_13:
    v15 = &selRef_privateCloudDatabase;
    goto LABEL_14;
  }
  v15 = &selRef_sharedCloudDatabase;
LABEL_14:
  v16 = objc_msgSend(v4, *v15);
  swift_bridgeObjectRelease(v8);
  objc_msgSend(a1, "setDatabase:", v16);
  objc_msgSend(v16, "addOperation:", a1);

}

uint64_t sub_1005D4354()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 24, 7);
}

uint64_t type metadata accessor for CRLCloudKitOperationSink()
{
  return objc_opt_self(_TtC8Freeform24CRLCloudKitOperationSink);
}

uint64_t sub_1005D4398(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t inited;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  char *v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  _BYTE v50[24];
  uint64_t v51;
  _QWORD v52[3];
  uint64_t v53;
  uint64_t v54;
  _BYTE v55[32];

  v4 = v3;
  v8 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v8);
  v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  v11 = (char *)&v46 - v10;
  v48 = a3;
  if ((a3 & 1) != 0)
  {
    v46 = (char *)&v46 - v10;
    v47 = v4;
    swift_errorRetain(a2);
    v22 = a2;
    if (qword_1013DD8C0 != -1)
      swift_once(&qword_1013DD8C0, sub_100A0685C);
    swift_beginAccess(&static OS_os_log.assetManagement, v55, 0, 0);
    v23 = (void *)static OS_os_log.assetManagement;
    v24 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v24, &v54);
    *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
    v26 = v23;
    v27 = UUID.uuidString.getter(v26);
    v29 = v28;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v30 = sub_1004CFC2C();
    *(_QWORD *)(inited + 64) = v30;
    *(_QWORD *)(inited + 32) = v27;
    *(_QWORD *)(inited + 40) = v29;
    swift_getErrorValue(v22, &v53, v52);
    v31 = Error.localizedDescription.getter(v52[1], v52[2]);
    *(_QWORD *)(inited + 96) = &type metadata for String;
    *(_QWORD *)(inited + 104) = v30;
    *(_QWORD *)(inited + 72) = v31;
    *(_QWORD *)(inited + 80) = v32;
    v34 = static os_log_type_t.default.getter(v33);
    sub_100A06EBC((uint64_t)v26, &_mh_execute_header, v34, "CRLCloudAssetDownloader _downloadFinished(assetUUID:%@, result: failed) - %@ ", 77, 2, inited);
    swift_setDeallocating(inited);
    v35 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 2, v35);

    sub_1005D820C(v22, 1);
    a2 = v22;
    v11 = v46;
    v4 = v47;
  }
  else
  {
    if (qword_1013DD8C0 != -1)
      swift_once(&qword_1013DD8C0, sub_100A0685C);
    swift_beginAccess(&static OS_os_log.assetManagement, v55, 0, 0);
    v12 = (void *)static OS_os_log.assetManagement;
    v13 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v14 = swift_initStackObject(v13, &v49);
    *(_OWORD *)(v14 + 16) = xmmword_100EF5E40;
    v15 = v12;
    v16 = UUID.uuidString.getter(v15);
    v18 = v17;
    *(_QWORD *)(v14 + 56) = &type metadata for String;
    *(_QWORD *)(v14 + 64) = sub_1004CFC2C();
    *(_QWORD *)(v14 + 32) = v16;
    *(_QWORD *)(v14 + 40) = v18;
    v20 = static os_log_type_t.default.getter(v19);
    sub_100A06EBC((uint64_t)v15, &_mh_execute_header, v20, "CRLCloudAssetDownloader _downloadFinished(assetUUID:%@, result: success) ", 73, 2, v14);
    swift_setDeallocating(v14);
    v21 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v14 + 32, 1, v21);

  }
  swift_beginAccess(v4 + 176, &v51, 0, 0);
  v36 = *(_QWORD *)(v4 + 176);
  if (*(_QWORD *)(v36 + 16))
  {
    swift_bridgeObjectRetain(*(_QWORD *)(v4 + 176));
    v37 = sub_100842EFC(a1);
    if ((v38 & 1) != 0)
    {
      v39 = v11;
      v40 = a2;
      v41 = v48 & 1;
      v42 = *(_QWORD *)(*(_QWORD *)(v36 + 56) + 8 * v37);
      swift_retain(v42);
      swift_bridgeObjectRelease(v36);
      v43 = v40;
      v11 = v39;
      sub_1005D7A4C(v43, v41);
      swift_release(v42);
    }
    else
    {
      swift_bridgeObjectRelease(v36);
    }
  }
  swift_beginAccess(v4 + 176, v50, 33, 0);
  v44 = sub_100847948(a1);
  swift_endAccess(v50);
  swift_release(v44);
  swift_beginAccess(v4 + 168, v50, 33, 0);
  sub_100B26E60(a1, (uint64_t)v11);
  sub_1004CB800((uint64_t)v11, (uint64_t *)&unk_1013E1A50);
  return swift_endAccess(v50);
}

uint64_t sub_1005D4764(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v2[54] = a1;
  v2[55] = v1;
  v3 = type metadata accessor for UUID(0);
  v2[56] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[57] = v4;
  v5 = (*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[58] = swift_task_alloc(v5);
  v2[59] = swift_task_alloc(v5);
  v2[60] = swift_task_alloc(v5);
  return swift_task_switch(sub_1005D47E0, v1, 0);
}

uint64_t sub_1005D47E0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  __n128 v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t **v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  __n128 v24;
  void *v25;
  uint64_t v26;
  uint64_t inited;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  uint64_t v46;
  uint64_t **v47;
  uint64_t (*v48)(void);
  uint64_t v49;

  v1 = v0[54];
  v2 = (uint64_t *)(v0[55] + 168);
  swift_beginAccess(v2, v0 + 42, 0, 0);
  v3 = *v2;
  swift_bridgeObjectRetain(*v2);
  LOBYTE(v1) = sub_10062158C(v1, v3);
  v4 = swift_bridgeObjectRelease(v3);
  if ((v1 & 1) == 0)
  {
    v11 = v0[60];
    v13 = v0[57];
    v12 = v0[58];
    v14 = v0[56];
    (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v13 + 16))(v12, v0[54], v14, v4);
    swift_beginAccess(v2, v0 + 48, 33, 0);
    sub_100AD569C(v11, v12);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v14);
    swift_endAccess(v0 + 48);
    v15 = (uint64_t **)swift_task_alloc(dword_1013E635C);
    v0[68] = (uint64_t)v15;
    *v15 = v0;
    v15[1] = (uint64_t *)sub_1005D4DFC;
    return sub_1005D4FDC(v0[54]);
  }
  v5 = (_QWORD *)(v0[55] + 176);
  swift_beginAccess(v5, v0 + 45, 0, 0);
  v6 = *v5;
  if (!*(_QWORD *)(*v5 + 16))
    goto LABEL_7;
  v7 = v0[54];
  swift_bridgeObjectRetain(v6);
  v8 = sub_100842EFC(v7);
  if ((v9 & 1) == 0)
  {
    swift_bridgeObjectRelease(v6);
LABEL_7:
    v17 = v0[60];
    v19 = v0[56];
    v18 = v0[57];
    v20 = v0[54];
    v21 = sub_1004B804C(&qword_1013E64A0);
    v10 = swift_allocObject(v21, 24, 7);
    *(_QWORD *)(v10 + 16) = _swiftEmptyArrayStorage;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v17, v20, v19);
    swift_beginAccess(v5, v0 + 39, 33, 0);
    swift_retain(v10);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v5);
    v49 = *v5;
    *v5 = 0x8000000000000000;
    sub_1008278B0(v10, v17, isUniquelyReferenced_nonNull_native);
    v23 = *v5;
    *v5 = v49;
    v24 = swift_bridgeObjectRelease(v23);
    (*(void (**)(uint64_t, uint64_t, __n128))(v18 + 8))(v17, v19, v24);
    swift_endAccess(v0 + 39);
    goto LABEL_8;
  }
  v10 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v8);
  swift_retain(v10);
  swift_bridgeObjectRelease(v6);
LABEL_8:
  v0[61] = v10;
  if (qword_1013DD870 != -1)
    swift_once(&qword_1013DD870, sub_100A059E0);
  swift_beginAccess(&static OS_os_log.dataSync, v0 + 51, 0, 0);
  v25 = (void *)static OS_os_log.dataSync;
  v26 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  v0[62] = v26;
  inited = swift_initStackObject(v26, v0 + 30);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v28 = v25;
  v29 = UUID.uuidString.getter(v28);
  v31 = v30;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v32 = sub_1004CFC2C();
  v0[63] = v32;
  *(_QWORD *)(inited + 64) = v32;
  *(_QWORD *)(inited + 32) = v29;
  v33 = inited + 32;
  *(_QWORD *)(inited + 40) = v31;
  v35 = static os_log_type_t.default.getter(v34);
  sub_100A06EBC((uint64_t)v28, &_mh_execute_header, v35, "Waiting on an ongoing download for asset: %@", 44, 2, inited);
  swift_setDeallocating(inited);
  v36 = sub_1004B804C(&qword_1013E0190);
  v0[64] = v36;
  swift_arrayDestroy(v33, 1, v36);

  UUID.init()(v37);
  v38 = (void *)static OS_os_log.dataSync;
  v39 = swift_initStackObject(v26, v0 + 16);
  *(_OWORD *)(v39 + 16) = xmmword_100EF5A10;
  v40 = v38;
  v41 = UUID.uuidString.getter(v40);
  *(_QWORD *)(v39 + 56) = &type metadata for String;
  *(_QWORD *)(v39 + 64) = v32;
  *(_QWORD *)(v39 + 32) = v41;
  *(_QWORD *)(v39 + 40) = v42;
  v43 = UUID.uuidString.getter(v41);
  *(_QWORD *)(v39 + 96) = &type metadata for String;
  *(_QWORD *)(v39 + 104) = v32;
  *(_QWORD *)(v39 + 72) = v43;
  *(_QWORD *)(v39 + 80) = v44;
  v46 = static os_log_type_t.default.getter(v45);
  sub_100A06EBC((uint64_t)v40, &_mh_execute_header, v46, "Adding observer %{public}@ for asset %{public}@", 47, 2, v39);
  swift_setDeallocating(v39);
  swift_arrayDestroy(v39 + 32, 2, v36);

  v48 = (uint64_t (*)(void))((char *)&dword_1013E64A8 + dword_1013E64A8);
  v47 = (uint64_t **)swift_task_alloc(unk_1013E64AC);
  v0[65] = (uint64_t)v47;
  *v47 = v0;
  v47[1] = (uint64_t *)sub_1005D4C3C;
  return v48();
}

uint64_t sub_1005D4C3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 520);
  *(_QWORD *)(*v2 + 528) = v1;
  swift_task_dealloc(v5);
  v6 = *(_QWORD *)(v4 + 440);
  if (v1)
  {
    v7 = sub_1005D4EF0;
  }
  else
  {
    *(_QWORD *)(v4 + 536) = a1;
    v7 = sub_1005D4CB0;
  }
  return swift_task_switch(v7, v6, 0);
}

uint64_t sub_1005D4CB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t inited;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 504);
  v2 = *(_QWORD *)(v0 + 512);
  v3 = *(_QWORD *)(v0 + 472);
  v18 = *(_QWORD *)(v0 + 488);
  v19 = *(_QWORD *)(v0 + 456);
  v20 = *(_QWORD *)(v0 + 448);
  v4 = (void *)static OS_os_log.dataSync;
  inited = swift_initStackObject(*(_QWORD *)(v0 + 496), v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  v6 = v4;
  v7 = UUID.uuidString.getter(v6);
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = v1;
  *(_QWORD *)(inited + 32) = v7;
  *(_QWORD *)(inited + 40) = v8;
  v9 = UUID.uuidString.getter(v7);
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v1;
  *(_QWORD *)(inited + 72) = v9;
  *(_QWORD *)(inited + 80) = v10;
  v12 = static os_log_type_t.default.getter(v11);
  sub_100A06EBC((uint64_t)v6, &_mh_execute_header, v12, "Observer %{public}@ received asset download result for asset %{public}@", 71, 2, inited);
  swift_setDeallocating(inited);
  swift_arrayDestroy(inited + 32, 2, v2);

  v13 = swift_release(v18);
  (*(void (**)(uint64_t, uint64_t, __n128))(v19 + 8))(v3, v20, v13);
  v14 = *(_QWORD *)(v0 + 536);
  v15 = *(_QWORD *)(v0 + 472);
  v16 = *(_QWORD *)(v0 + 464);
  swift_task_dealloc(*(_QWORD *)(v0 + 480));
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v14);
}

uint64_t sub_1005D4DFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 544);
  *(_QWORD *)(*v2 + 552) = v1;
  swift_task_dealloc(v5);
  v6 = *(_QWORD *)(v4 + 440);
  if (v1)
  {
    v7 = sub_1005D4F60;
  }
  else
  {
    *(_QWORD *)(v4 + 560) = a1;
    v7 = sub_1005D4E70;
  }
  return swift_task_switch(v7, v6, 0);
}

uint64_t sub_1005D4E70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 560);
  v2 = *(_QWORD *)(v0 + 432);
  swift_retain(v1);
  sub_1005D4398(v2, v1, 0);
  swift_release(v1);
  v3 = *(_QWORD *)(v0 + 560);
  v4 = *(_QWORD *)(v0 + 472);
  v5 = *(_QWORD *)(v0 + 464);
  swift_task_dealloc(*(_QWORD *)(v0 + 480));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v3);
}

uint64_t sub_1005D4EF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 472);
  v2 = *(_QWORD *)(v0 + 448);
  v3 = *(_QWORD *)(v0 + 456);
  v4 = swift_release(*(_QWORD *)(v0 + 488));
  (*(void (**)(uint64_t, uint64_t, __n128))(v3 + 8))(v1, v2, v4);
  v5 = *(_QWORD *)(v0 + 472);
  v6 = *(_QWORD *)(v0 + 464);
  swift_task_dealloc(*(_QWORD *)(v0 + 480));
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005D4F60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 552);
  v2 = *(_QWORD *)(v0 + 432);
  swift_errorRetain(v1);
  sub_1005D4398(v2, v1, 1);
  swift_errorRelease(v1);
  swift_willThrow(v3);
  v4 = *(_QWORD *)(v0 + 472);
  v5 = *(_QWORD *)(v0 + 464);
  swift_task_dealloc(*(_QWORD *)(v0 + 480));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005D4FDC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2[17] = a1;
  v2[18] = v1;
  v3 = type metadata accessor for UUID(0);
  v2[19] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[20] = v4;
  v5 = (*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[21] = swift_task_alloc(v5);
  v2[22] = swift_task_alloc(v5);
  v6 = type metadata accessor for CRLAssetReferrerIdentifier(0);
  v2[23] = v6;
  v7 = (*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[24] = swift_task_alloc(v7);
  v2[25] = swift_task_alloc(v7);
  v8 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[26] = swift_task_alloc(v8);
  v2[27] = swift_task_alloc(v8);
  v9 = type metadata accessor for CRLCloudAssetDownloader.DownloadRequest(0);
  v2[28] = v9;
  v2[29] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CRLAssetAddress(0);
  v2[30] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v2[31] = v11;
  v2[32] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1005D50FC, v1, 0);
}

uint64_t sub_1005D50FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t inited;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t Strong;
  unint64_t v22;
  _QWORD *v23;
  __n128 v24;

  static Task<>.checkCancellation()(a1);
  if (qword_1013DD8C0 != -1)
    swift_once(&qword_1013DD8C0, sub_100A0685C);
  v9 = *(_QWORD *)(v1 + 144);
  swift_beginAccess(&static OS_os_log.assetManagement, v1 + 88, 0, 0);
  v10 = (void *)static OS_os_log.assetManagement;
  v11 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v11, v1 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v13 = v10;
  v14 = UUID.uuidString.getter(v13);
  v16 = v15;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v14;
  *(_QWORD *)(inited + 40) = v16;
  v18 = static os_log_type_t.default.getter(v17);
  sub_100A06EBC((uint64_t)v13, &_mh_execute_header, v18, "CRLCloudAssetDownloader _downloadAsset(assetUUID:%@) ", 53, 2, inited);
  swift_setDeallocating(inited);
  v19 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v19);

  Strong = swift_unknownObjectWeakLoadStrong(v9 + 112);
  *(_QWORD *)(v1 + 264) = Strong;
  if (Strong)
    return swift_task_switch(sub_1005D53B4, 0, 0);
  sub_100757E04(&_mh_execute_header, (uint64_t)"_downloadAsset(assetUUID:)", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLCloudAssetDownloader.swift", 88, 2, 119, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_downloadAsset(assetUUID:)", 26, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLCloudAssetDownloader.swift", 88, 2u, 119, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  v22 = sub_1005D2A0C();
  swift_allocError(&type metadata for CRLAssetError, v22, 0, 0);
  *v23 = 0xD00000000000002CLL;
  v23[1] = 0x8000000100FB8600;
  swift_willThrow(v24);
  v2 = *(_QWORD *)(v1 + 232);
  v4 = *(_QWORD *)(v1 + 208);
  v3 = *(_QWORD *)(v1 + 216);
  v6 = *(_QWORD *)(v1 + 192);
  v5 = *(_QWORD *)(v1 + 200);
  v8 = *(_QWORD *)(v1 + 168);
  v7 = *(_QWORD *)(v1 + 176);
  swift_task_dealloc(*(_QWORD *)(v1 + 256));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1005D53B4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v1 = v0[33];
  v2 = v0[17];
  v3 = swift_task_alloc(32);
  v0[34] = v3;
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  v0[35] = v4;
  v5 = sub_1004B804C(&qword_1013E6498);
  *v4 = v0;
  v4[1] = sub_1005D5468;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0xD000000000000019, 0x8000000100FB8630, sub_1005D816C, v3, v5);
}

uint64_t sub_1005D5468()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 280);
  *(_QWORD *)(*v1 + 288) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1005D5984;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 272));
    v4 = sub_1005D54D4;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1005D54D4()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[18];
  v0[37] = v0[16];
  return swift_task_switch(sub_1005D54F0, v1, 0);
}

uint64_t sub_1005D54F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _OWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (**v34)(_QWORD, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t *v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  int *v47;
  uint64_t v48;
  uint64_t v49;
  Swift::String v50;
  void *object;
  Swift::String v52;
  Class isa;
  void (*v54)(uint64_t, uint64_t);
  Swift::String v55;
  Class v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  void (*v72)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 296);
  v2 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 304) = v2;
  if (v2)
  {
    v4 = *(_QWORD *)(v0 + 240);
    v3 = *(_QWORD *)(v0 + 248);
    *(_QWORD *)(v0 + 312) = sub_1004B8930(0, &qword_1013E8810, CKRecordID_ptr);
    v5 = *(_DWORD *)(v3 + 80);
    *(_DWORD *)(v0 + 384) = v5;
    v6 = (v5 + 32) & ~(unint64_t)v5;
    *(_QWORD *)(v0 + 320) = sub_1004B8930(0, (unint64_t *)&qword_1013E1770, CKRecordZoneID_ptr);
    *(_QWORD *)(v0 + 328) = CKCurrentUserDefaultName;
    v7 = *(_QWORD *)(v3 + 72);
    *(_QWORD *)(v0 + 344) = 0;
    *(_QWORD *)(v0 + 352) = 0;
    *(_QWORD *)(v0 + 336) = v7;
    v8 = *(_QWORD *)(v0 + 256);
    v9 = *(_QWORD *)(v0 + 200);
    v10 = *(_QWORD *)(v0 + 184);
    sub_1004B8460(v1 + v6, v8, type metadata accessor for CRLAssetAddress);
    v11 = v8 + *(int *)(v4 + 24);
    sub_1004B8460(v11, v9, type metadata accessor for CRLAssetReferrerIdentifier);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v9, v10);
    v13 = *(_QWORD *)(v0 + 216);
    v14 = *(_QWORD *)(v0 + 200);
    if (EnumCaseMultiPayload == 1)
    {
      v15 = *(_QWORD *)(v0 + 152);
      v16 = *(_QWORD *)(v0 + 160);
      v17 = sub_1004B804C((uint64_t *)&unk_1013E1780);
      sub_1004B84E0(v14 + *(int *)(v17 + 48), v13, type metadata accessor for CRLBoardIdentifier);
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
    }
    else
    {
      sub_1004B84E0(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 216), type metadata accessor for CRLBoardIdentifier);
    }
    v30 = *(_QWORD *)(v0 + 184);
    v29 = *(_QWORD *)(v0 + 192);
    sub_1004B8460(v11, v29, type metadata accessor for CRLAssetReferrerIdentifier);
    if (swift_getEnumCaseMultiPayload(v29, v30) == 1)
    {
      v31 = *(_QWORD *)(v0 + 192);
      v32 = v31 + *(int *)(sub_1004B804C((uint64_t *)&unk_1013E1780) + 48);
      v33 = *(_QWORD *)(v0 + 160);
      v34 = (void (**)(_QWORD, uint64_t, uint64_t))(v33 + 32);
    }
    else
    {
      sub_1004B84E0(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 208), type metadata accessor for CRLBoardIdentifier);
      v31 = *(_QWORD *)(v0 + 208);
      v33 = *(_QWORD *)(v0 + 160);
      v34 = (void (**)(_QWORD, uint64_t, uint64_t))(v33 + 16);
      v32 = v31;
    }
    v35 = *(_QWORD *)(v0 + 216);
    v36 = *(_QWORD *)(v0 + 168);
    v37 = *(_QWORD *)(v0 + 152);
    (*v34)(*(_QWORD *)(v0 + 176), v31, v37);
    v38 = sub_1004B84A4(v32, type metadata accessor for CRLBoardIdentifier);
    v39 = UUID.uuidString.getter(v38);
    v70 = v40;
    v71 = v39;
    v72 = *(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16);
    v72(v36, v35, v37);
    v41 = (uint64_t *)(v35 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
    v42 = *v41;
    v43 = (void *)v41[1];
    if (!*v41 && v43 == (void *)0xE000000000000000
      || (_stringCompareWithSmolCheck(_:_:expecting:)(v42, v43, 0, 0xE000000000000000, 0) & 1) != 0)
    {
      v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(v0 + 328));
      v42 = v44;
      v43 = v45;
    }
    else
    {
      swift_bridgeObjectRetain(v43);
    }
    v46 = *(_QWORD *)(v0 + 232);
    v68 = *(_QWORD *)(v0 + 240);
    v69 = *(_QWORD *)(v0 + 256);
    v47 = *(int **)(v0 + 224);
    v67 = *(_QWORD *)(v0 + 216);
    v48 = *(_QWORD *)(v0 + 168);
    v66 = *(_QWORD *)(v0 + 176);
    v49 = *(_QWORD *)(v0 + 152);
    v65 = *(_QWORD *)(v0 + 160);
    *(_QWORD *)(v0 + 112) = 0x5F6472616F42;
    *(_QWORD *)(v0 + 120) = 0xE600000000000000;
    v50._countAndFlagsBits = UUID.uuidString.getter(v44);
    object = v50._object;
    String.append(_:)(v50);
    swift_bridgeObjectRelease(object);
    v52._countAndFlagsBits = v42;
    v52._object = v43;
    isa = CKRecordZoneID.init(zoneName:ownerName:)(*(Swift::String *)(v0 + 112), v52).super.isa;
    v54 = *(void (**)(uint64_t, uint64_t))(v65 + 8);
    v54(v48, v49);
    v55._object = v70;
    v55._countAndFlagsBits = v71;
    v56 = CKRecordID.init(recordName:zoneID:)(v55, (CKRecordZoneID)isa).super.isa;
    v54(v66, v49);
    sub_1004B84A4(v67, type metadata accessor for CRLBoardIdentifier);
    v57 = (uint64_t *)(v69 + *(int *)(v68 + 20));
    v59 = *v57;
    v58 = v57[1];
    ((void (*)(uint64_t))v72)(v46);
    *(_QWORD *)(v46 + v47[5]) = v56;
    v60 = (_QWORD *)(v46 + v47[6]);
    *v60 = v59;
    v60[1] = v58;
    v61 = (_QWORD *)(v46 + v47[7]);
    *v61 = v59;
    v61[1] = v58;
    v62 = dword_1013E6364;
    swift_bridgeObjectRetain_n(v58, 2);
    v63 = (_QWORD *)swift_task_alloc(v62);
    *(_QWORD *)(v0 + 360) = v63;
    *v63 = v0;
    v63[1] = sub_1005D5A60;
    v64 = *(_QWORD *)(v0 + 144);
    v63[2] = *(_QWORD *)(v0 + 232);
    v63[3] = v64;
    return swift_task_switch(sub_1005D6030, v64, 0);
  }
  else
  {
    v18 = *(_QWORD *)(v0 + 264);
    swift_bridgeObjectRelease(v1);
    v19 = sub_1005D2A0C();
    swift_allocError(&type metadata for CRLAssetError, v19, 0, 0);
    *v20 = xmmword_100EFD000;
    swift_willThrow((__n128)xmmword_100EFD000);
    swift_unknownObjectRelease(v18);
    v21 = *(_QWORD *)(v0 + 232);
    v23 = *(_QWORD *)(v0 + 208);
    v22 = *(_QWORD *)(v0 + 216);
    v25 = *(_QWORD *)(v0 + 192);
    v24 = *(_QWORD *)(v0 + 200);
    v27 = *(_QWORD *)(v0 + 168);
    v26 = *(_QWORD *)(v0 + 176);
    swift_task_dealloc(*(_QWORD *)(v0 + 256));
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1005D5984()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 144);
  swift_task_dealloc(*(_QWORD *)(v0 + 272));
  return swift_task_switch(sub_1005D59C4, v1, 0);
}

uint64_t sub_1005D59C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 264));
  v1 = *(_QWORD *)(v0 + 232);
  v3 = *(_QWORD *)(v0 + 208);
  v2 = *(_QWORD *)(v0 + 216);
  v5 = *(_QWORD *)(v0 + 192);
  v4 = *(_QWORD *)(v0 + 200);
  v7 = *(_QWORD *)(v0 + 168);
  v6 = *(_QWORD *)(v0 + 176);
  swift_task_dealloc(*(_QWORD *)(v0 + 256));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005D5A60(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 360);
  *(_QWORD *)(*(_QWORD *)v2 + 368) = v1;
  swift_task_dealloc(v5);
  v6 = v4[29];
  v7 = v4[18];
  if (v1)
  {
    sub_1004B84A4(v6, type metadata accessor for CRLCloudAssetDownloader.DownloadRequest);
    v8 = sub_1005D5BD0;
  }
  else
  {
    v4[47] = a1;
    sub_1004B84A4(v6, type metadata accessor for CRLCloudAssetDownloader.DownloadRequest);
    v8 = sub_1005D5AF4;
  }
  return swift_task_switch(v8, v7, 0);
}

uint64_t sub_1005D5AF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 344);
  v2 = *(_QWORD *)(v0 + 296);
  v4 = *(_QWORD *)(v0 + 256);
  v3 = *(_QWORD *)(v0 + 264);
  v5 = *(_QWORD *)(v0 + 232);
  v7 = *(_QWORD *)(v0 + 208);
  v6 = *(_QWORD *)(v0 + 216);
  v9 = *(_QWORD *)(v0 + 192);
  v8 = *(_QWORD *)(v0 + 200);
  v11 = *(_QWORD *)(v0 + 176);
  v12 = *(_QWORD *)(v0 + 168);
  sub_1004B84A4(v4, type metadata accessor for CRLAssetAddress);
  swift_bridgeObjectRelease(v2);
  swift_errorRelease(v1);
  swift_unknownObjectRelease(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 376));
}

uint64_t sub_1005D5BD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int EnumCaseMultiPayload;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (**v31)(_QWORD, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t *v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  int *v44;
  uint64_t v45;
  uint64_t v46;
  Swift::String v47;
  void *object;
  Swift::String v49;
  Class isa;
  void (*v51)(uint64_t, uint64_t);
  Swift::String v52;
  Class v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  void (*v69)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 304);
  v2 = *(_QWORD *)(v0 + 256);
  v3 = *(_QWORD *)(v0 + 352) + 1;
  swift_errorRelease(*(_QWORD *)(v0 + 344));
  sub_1004B84A4(v2, type metadata accessor for CRLAssetAddress);
  if (v3 == v1)
  {
    v4 = *(_QWORD *)(v0 + 264);
    v5 = swift_bridgeObjectRelease(*(_QWORD *)(v0 + 296));
    swift_willThrow(v5);
    swift_unknownObjectRelease(v4);
    v6 = *(_QWORD *)(v0 + 232);
    v8 = *(_QWORD *)(v0 + 208);
    v7 = *(_QWORD *)(v0 + 216);
    v10 = *(_QWORD *)(v0 + 192);
    v9 = *(_QWORD *)(v0 + 200);
    v12 = *(_QWORD *)(v0 + 168);
    v11 = *(_QWORD *)(v0 + 176);
    swift_task_dealloc(*(_QWORD *)(v0 + 256));
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 352) + 1;
    *(_QWORD *)(v0 + 344) = *(_QWORD *)(v0 + 368);
    *(_QWORD *)(v0 + 352) = v14;
    v15 = *(_QWORD *)(v0 + 256);
    v16 = *(_QWORD *)(v0 + 240);
    v17 = *(_QWORD *)(v0 + 200);
    v18 = *(_QWORD *)(v0 + 184);
    sub_1004B8460(*(_QWORD *)(v0 + 296)+ ((*(unsigned __int8 *)(v0 + 384) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 384))+ *(_QWORD *)(v0 + 336) * v14, v15, type metadata accessor for CRLAssetAddress);
    v19 = v15 + *(int *)(v16 + 24);
    sub_1004B8460(v19, v17, type metadata accessor for CRLAssetReferrerIdentifier);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v17, v18);
    v21 = *(_QWORD *)(v0 + 216);
    v22 = *(_QWORD *)(v0 + 200);
    if (EnumCaseMultiPayload == 1)
    {
      v23 = *(_QWORD *)(v0 + 152);
      v24 = *(_QWORD *)(v0 + 160);
      v25 = sub_1004B804C((uint64_t *)&unk_1013E1780);
      sub_1004B84E0(v22 + *(int *)(v25 + 48), v21, type metadata accessor for CRLBoardIdentifier);
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
    }
    else
    {
      sub_1004B84E0(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 216), type metadata accessor for CRLBoardIdentifier);
    }
    v27 = *(_QWORD *)(v0 + 184);
    v26 = *(_QWORD *)(v0 + 192);
    sub_1004B8460(v19, v26, type metadata accessor for CRLAssetReferrerIdentifier);
    if (swift_getEnumCaseMultiPayload(v26, v27) == 1)
    {
      v28 = *(_QWORD *)(v0 + 192);
      v29 = v28 + *(int *)(sub_1004B804C((uint64_t *)&unk_1013E1780) + 48);
      v30 = *(_QWORD *)(v0 + 160);
      v31 = (void (**)(_QWORD, uint64_t, uint64_t))(v30 + 32);
    }
    else
    {
      sub_1004B84E0(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 208), type metadata accessor for CRLBoardIdentifier);
      v28 = *(_QWORD *)(v0 + 208);
      v30 = *(_QWORD *)(v0 + 160);
      v31 = (void (**)(_QWORD, uint64_t, uint64_t))(v30 + 16);
      v29 = v28;
    }
    v32 = *(_QWORD *)(v0 + 216);
    v33 = *(_QWORD *)(v0 + 168);
    v34 = *(_QWORD *)(v0 + 152);
    (*v31)(*(_QWORD *)(v0 + 176), v28, v34);
    v35 = sub_1004B84A4(v29, type metadata accessor for CRLBoardIdentifier);
    v36 = UUID.uuidString.getter(v35);
    v67 = v37;
    v68 = v36;
    v69 = *(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16);
    v69(v33, v32, v34);
    v38 = (uint64_t *)(v32 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
    v39 = *v38;
    v40 = (void *)v38[1];
    if (!*v38 && v40 == (void *)0xE000000000000000
      || (_stringCompareWithSmolCheck(_:_:expecting:)(v39, v40, 0, 0xE000000000000000, 0) & 1) != 0)
    {
      v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(v0 + 328));
      v39 = v41;
      v40 = v42;
    }
    else
    {
      swift_bridgeObjectRetain(v40);
    }
    v43 = *(_QWORD *)(v0 + 232);
    v65 = *(_QWORD *)(v0 + 240);
    v66 = *(_QWORD *)(v0 + 256);
    v44 = *(int **)(v0 + 224);
    v64 = *(_QWORD *)(v0 + 216);
    v45 = *(_QWORD *)(v0 + 168);
    v63 = *(_QWORD *)(v0 + 176);
    v46 = *(_QWORD *)(v0 + 152);
    v62 = *(_QWORD *)(v0 + 160);
    *(_QWORD *)(v0 + 112) = 0x5F6472616F42;
    *(_QWORD *)(v0 + 120) = 0xE600000000000000;
    v47._countAndFlagsBits = UUID.uuidString.getter(v41);
    object = v47._object;
    String.append(_:)(v47);
    swift_bridgeObjectRelease(object);
    v49._countAndFlagsBits = v39;
    v49._object = v40;
    isa = CKRecordZoneID.init(zoneName:ownerName:)(*(Swift::String *)(v0 + 112), v49).super.isa;
    v51 = *(void (**)(uint64_t, uint64_t))(v62 + 8);
    v51(v45, v46);
    v52._object = v67;
    v52._countAndFlagsBits = v68;
    v53 = CKRecordID.init(recordName:zoneID:)(v52, (CKRecordZoneID)isa).super.isa;
    v51(v63, v46);
    sub_1004B84A4(v64, type metadata accessor for CRLBoardIdentifier);
    v54 = (uint64_t *)(v66 + *(int *)(v65 + 20));
    v56 = *v54;
    v55 = v54[1];
    ((void (*)(uint64_t))v69)(v43);
    *(_QWORD *)(v43 + v44[5]) = v53;
    v57 = (_QWORD *)(v43 + v44[6]);
    *v57 = v56;
    v57[1] = v55;
    v58 = (_QWORD *)(v43 + v44[7]);
    *v58 = v56;
    v58[1] = v55;
    v59 = dword_1013E6364;
    swift_bridgeObjectRetain_n(v55, 2);
    v60 = (_QWORD *)swift_task_alloc(v59);
    *(_QWORD *)(v0 + 360) = v60;
    *v60 = v0;
    v60[1] = sub_1005D5A60;
    v61 = *(_QWORD *)(v0 + 144);
    v60[2] = *(_QWORD *)(v0 + 232);
    v60[3] = v61;
    return swift_task_switch(sub_1005D6030, v61, 0);
  }
}

uint64_t sub_1005D6018(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch(sub_1005D6030, v1, 0);
}

uint64_t sub_1005D6030()
{
  uint64_t v0;
  id v1;
  int *v2;
  uint64_t *v3;
  Swift::String v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  Swift::String v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  Class isa;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  _QWORD *v21;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v23 = *(_OWORD *)(v0 + 16);
  v1 = objc_msgSend(objc_allocWithZone((Class)CKFetchRecordsOperation), "init");
  *(_QWORD *)(v0 + 32) = v1;
  v2 = (int *)type metadata accessor for CRLCloudAssetDownloader.DownloadRequest(0);
  v3 = (uint64_t *)(v23 + v2[6]);
  v24 = *v3;
  v27 = v3[1];
  swift_bridgeObjectRetain(v27);
  v4._countAndFlagsBits = 0x7465737341;
  v4._object = (void *)0xE500000000000000;
  String.append(_:)(v4);
  v5 = v24;
  v6 = v27;
  v7 = (uint64_t *)(v23 + v2[7]);
  v25 = *v7;
  v28 = v7[1];
  swift_bridgeObjectRetain(v28);
  v8._countAndFlagsBits = 0x74654D7465737341;
  v8._object = (void *)0xED00006174616461;
  String.append(_:)(v8);
  v9 = v25;
  v10 = *(void **)(v23 + v2[5]);
  v11 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v12 = swift_allocObject(v11, 40, 7);
  *(_OWORD *)(v12 + 16) = xmmword_100EEF400;
  *(_QWORD *)(v12 + 32) = v10;
  v26 = v12;
  specialized Array._endMutation()(v12);
  sub_1004B8930(0, &qword_1013E8810, CKRecordID_ptr);
  v13 = v10;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v1, "setRecordIDs:", isa, swift_bridgeObjectRelease(v26).n128_f64[0]);

  v15 = sub_1004B804C((uint64_t *)&unk_1013DFC30);
  v16 = swift_allocObject(v15, 64, 7);
  *(_OWORD *)(v16 + 16) = xmmword_100EF5A10;
  *(_QWORD *)(v16 + 32) = v5;
  *(_QWORD *)(v16 + 40) = v6;
  *(_QWORD *)(v16 + 48) = v9;
  *(_QWORD *)(v16 + 56) = v28;
  CKFetchRecordsOperation.desiredKeys.setter();
  v17 = swift_task_alloc(32);
  *(_QWORD *)(v0 + 40) = v17;
  *(_QWORD *)(v17 + 16) = v13;
  *(_QWORD *)(v17 + 24) = v1;
  v18 = swift_task_alloc(48);
  *(_QWORD *)(v0 + 48) = v18;
  *(_QWORD *)(v18 + 16) = v1;
  *(_QWORD *)(v18 + 24) = v13;
  *(_OWORD *)(v18 + 32) = v23;
  v19 = unk_1013E6484;
  *(_QWORD *)&v23 = (char *)&dword_1013E6480 + dword_1013E6480;
  v20 = v1;
  v21 = (_QWORD *)swift_task_alloc(v19);
  *(_QWORD *)(v0 + 56) = v21;
  *v21 = v0;
  v21[1] = sub_1005D6278;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v23)((uint64_t)&unk_1013E6478, v18, (uint64_t)sub_1005D7670, v17, 0, 0);
}

uint64_t sub_1005D6278(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 56);
  *(_QWORD *)(*v2 + 64) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = *(_QWORD *)(v4 + 24);
    v7 = sub_1005D634C;
  }
  else
  {
    v9 = *(_QWORD *)(v4 + 40);
    v8 = *(_QWORD *)(v4 + 48);
    v10 = *(_QWORD *)(v4 + 24);

    *(_QWORD *)(v4 + 72) = a1;
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    v7 = sub_1005D6314;
    v6 = v10;
  }
  return swift_task_switch(v7, v6, 0);
}

uint64_t sub_1005D6314()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 72));
}

uint64_t sub_1005D634C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(void **)(v0 + 32);

  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_1005D63A0(void *a1, void *a2)
{
  void *v4;
  uint64_t v5;
  uint64_t inited;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[112];
  _BYTE v23[24];

  if (qword_1013DD870 != -1)
    swift_once(&qword_1013DD870, sub_100A059E0);
  swift_beginAccess(&static OS_os_log.dataSync, v23, 0, 0);
  v4 = (void *)static OS_os_log.dataSync;
  v5 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v5, v22);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  v7 = v4;
  v8 = objc_msgSend(a1, "recordName");
  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v11 = v10;

  *(_QWORD *)(inited + 56) = &type metadata for String;
  v12 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v12;
  *(_QWORD *)(inited + 32) = v9;
  *(_QWORD *)(inited + 40) = v11;
  v13 = objc_msgSend(a1, "zoneID");
  v14 = objc_msgSend(v13, "zoneName");

  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  v17 = v16;

  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v12;
  *(_QWORD *)(inited + 72) = v15;
  *(_QWORD *)(inited + 80) = v17;
  v19 = static os_log_type_t.default.getter(v18);
  sub_100A06EBC((uint64_t)v7, &_mh_execute_header, v19, "Cancelling the asset fetch request because the task was cancelled. RecordID: %@ zoneName: %@", 92, 2, inited);
  swift_setDeallocating(inited);
  v20 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 2, v20);

  return objc_msgSend(a2, "cancel");
}

uint64_t sub_1005D6564(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return swift_task_switch(sub_1005D6584, a5, 0);
}

uint64_t sub_1005D6584(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  v4 = *(_QWORD *)(v2 + 40);
  v3 = *(_QWORD *)(v2 + 48);
  v5 = sub_1005034A0(&qword_1013E6488, a2, (uint64_t (*)(uint64_t))type metadata accessor for CRLCloudAssetDownloader, (uint64_t)&unk_100EFD0D8);
  v6 = swift_task_alloc(48);
  *(_QWORD *)(v2 + 56) = v6;
  *(_OWORD *)(v6 + 16) = *(_OWORD *)(v2 + 24);
  *(_QWORD *)(v6 + 32) = v4;
  *(_QWORD *)(v6 + 40) = v3;
  v7 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v2 + 64) = v7;
  v8 = type metadata accessor for CRLAssetSyncRemoteRecord(0);
  *v7 = v2;
  v7[1] = sub_1005D6654;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(*(_QWORD *)(v2 + 16), v3, v5, 0xD000000000000024, 0x8000000100FB8310, sub_1005D7FB4, v6, v8);
}

uint64_t sub_1005D6654()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 64);
  v3 = *v1;
  *(_QWORD *)(v3 + 72) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_1005D66C8, *(_QWORD *)(v3 + 48), 0);
  swift_task_dealloc(*(_QWORD *)(v3 + 56));
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_1005D66C8()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 56));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_1005D66FC(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  double result;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;

  v30 = a5;
  v27 = a1;
  v28 = a3;
  v26 = a2;
  v6 = sub_1004B804C(&qword_1013E6490);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for CRLCloudAssetDownloader.DownloadRequest(0);
  v10 = *(_QWORD *)(v29 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v29);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = swift_allocObject(&unk_101270858, 24, 7);
  *(_QWORD *)(v13 + 16) = _swiftEmptyDictionarySingleton;
  v14 = swift_retain(v13);
  CKFetchRecordsOperation.perRecordResultBlock.setter(sub_1005D7FE4, v13, v14);
  sub_1004B8460(a4, (uint64_t)v12, type metadata accessor for CRLCloudAssetDownloader.DownloadRequest);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v27, v6);
  v15 = *(unsigned __int8 *)(v10 + 80);
  v16 = (v15 + 32) & ~v15;
  v17 = *(unsigned __int8 *)(v7 + 80);
  v18 = (v11 + v17 + v16) & ~v17;
  v19 = swift_allocObject(&unk_101270880, v18 + v8, v15 | v17 | 7);
  v20 = v28;
  *(_QWORD *)(v19 + 16) = v13;
  *(_QWORD *)(v19 + 24) = v20;
  sub_1004B84E0((uint64_t)v12, v19 + v16, type metadata accessor for CRLCloudAssetDownloader.DownloadRequest);
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v19 + v18, v9, v6);
  swift_retain(v13);
  v21 = v20;
  v22 = v26;
  CKFetchRecordsOperation.fetchRecordsResultBlock.setter(sub_1005D80EC, v19);
  objc_msgSend(v22, "setQueuePriority:", 4);
  sub_1004BB5A4((_QWORD *)(v30 + 128), *(_QWORD *)(v30 + 152));
  v23 = objc_msgSend(*(id *)(a4 + *(int *)(v29 + 20)), "zoneID");
  sub_1005D4210(v22, v23);

  *(_QWORD *)&result = swift_release(v13).n128_u64[0];
  return result;
}

uint64_t sub_1005D6918(void *a1, void *a2, char a3, uint64_t a4)
{
  id v8;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v12;
  _BYTE v13[24];

  swift_beginAccess(a4 + 16, v13, 33, 0);
  v8 = a1;
  sub_10059BC74(a2, a3 & 1);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(a4 + 16));
  v12 = *(_QWORD *)(a4 + 16);
  *(_QWORD *)(a4 + 16) = 0x8000000000000000;
  sub_100827A0C((uint64_t)a2, a3 & 1, v8, isUniquelyReferenced_nonNull_native);
  v10 = *(_QWORD *)(a4 + 16);
  *(_QWORD *)(a4 + 16) = v12;

  swift_bridgeObjectRelease(v10);
  return swift_endAccess(v13);
}

void sub_1005D69D4(uint64_t a1, char a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v10;
  id v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  void *v15;
  char v16;
  void *v17;
  uint64_t v18;
  uint64_t inited;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  id v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __n128 v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  id v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  id v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  __n128 v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  void *v97;
  uint64_t v98;
  id v99;
  id v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  id v104;
  id v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  __n128 v109;
  uint64_t v110;
  uint64_t v111;
  void *v112;
  uint64_t v113;
  id v114;
  Swift::String v115;
  id v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  id v120;
  id v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  _QWORD *v129;
  uint64_t v130;
  void *v131;
  uint64_t v132;
  id v133;
  uint64_t v134;
  uint64_t v135;
  id v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  id v140;
  id v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  uint64_t v148;
  _OWORD *v149;
  uint64_t v150;
  void *v151;
  uint64_t v152;
  uint64_t v153;
  _BYTE v154[112];
  _BYTE v155[152];
  _QWORD v156[2];
  _BYTE v157[152];
  _BYTE v158[112];
  _QWORD v159[3];
  _BYTE v160[8];
  _BYTE v161[152];
  _QWORD v162[3];
  _BYTE v163[8];
  _BYTE v164[152];
  uint64_t v165;
  _BYTE v166[72];
  _BYTE v167[32];

  swift_beginAccess(a3 + 16, v167, 32, 0);
  v10 = *(_QWORD *)(a3 + 16);
  if (*(_QWORD *)(v10 + 16))
  {
    v11 = a4;
    v12 = sub_100843848((uint64_t)v11);
    if ((v13 & 1) != 0)
    {
      v14 = *(_QWORD *)(v10 + 56) + 16 * v12;
      v15 = *(void **)v14;
      v16 = *(_BYTE *)(v14 + 8);
      swift_endAccess(v167);
      sub_10059BC74(v15, v16);

      if ((v16 & 1) != 0)
      {
        swift_errorRetain(v15);
        if (qword_1013DD870 != -1)
          swift_once(&qword_1013DD870, sub_100A059E0);
        swift_beginAccess(&static OS_os_log.dataSync, v167, 0, 0);
        v17 = (void *)static OS_os_log.dataSync;
        v18 = sub_1004B804C((uint64_t *)&unk_1013E0180);
        inited = swift_initStackObject(v18, v161);
        *(_OWORD *)(inited + 16) = xmmword_100EF5550;
        v20 = v17;
        v21 = objc_msgSend(v11, "recordName");
        v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
        v24 = v23;

        *(_QWORD *)(inited + 56) = &type metadata for String;
        v25 = sub_1004CFC2C();
        *(_QWORD *)(inited + 64) = v25;
        *(_QWORD *)(inited + 32) = v22;
        *(_QWORD *)(inited + 40) = v24;
        v26 = objc_msgSend(v11, "zoneID");
        v27 = objc_msgSend(v26, "zoneName");

        v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
        v30 = v29;

        *(_QWORD *)(inited + 96) = &type metadata for String;
        *(_QWORD *)(inited + 104) = v25;
        *(_QWORD *)(inited + 72) = v28;
        *(_QWORD *)(inited + 80) = v30;
        swift_getErrorValue(v15, v160, v159);
        v31 = Error.localizedDescription.getter(v159[1], v159[2]);
        *(_QWORD *)(inited + 136) = &type metadata for String;
        *(_QWORD *)(inited + 144) = v25;
        *(_QWORD *)(inited + 112) = v31;
        *(_QWORD *)(inited + 120) = v32;
        v34 = static os_log_type_t.default.getter(v33);
        sub_100A06EBC((uint64_t)v20, &_mh_execute_header, v34, "Failed to download asset. RecordID: %@ zoneName: %@. Error %@", 61, 2, inited);
        swift_setDeallocating(inited);
        v35 = sub_1004B804C(&qword_1013E0190);
        swift_arrayDestroy(inited + 32, 3, v35);

        v156[0] = v15;
        v36 = sub_1004B804C(&qword_1013E6490);
        CheckedContinuation.resume(throwing:)(v156, v36);
        sub_1004E1E08(v15, 1);
      }
      else
      {
        v151 = v15;
        v73 = qword_1013DD870;
        v15;
        if (v73 != -1)
          swift_once(&qword_1013DD870, sub_100A059E0);
        swift_beginAccess(&static OS_os_log.dataSync, v167, 0, 0);
        v74 = (void *)static OS_os_log.dataSync;
        v152 = sub_1004B804C((uint64_t *)&unk_1013E0180);
        v75 = swift_initStackObject(v152, v158);
        *(_OWORD *)(v75 + 16) = xmmword_100EF5A10;
        v76 = v74;
        v77 = objc_msgSend(v11, "recordName");
        v78 = static String._unconditionallyBridgeFromObjectiveC(_:)(v77);
        v80 = v79;

        *(_QWORD *)(v75 + 56) = &type metadata for String;
        v81 = sub_1004CFC2C();
        *(_QWORD *)(v75 + 64) = v81;
        *(_QWORD *)(v75 + 32) = v78;
        *(_QWORD *)(v75 + 40) = v80;
        v82 = objc_msgSend(v11, "zoneID");
        v83 = objc_msgSend(v82, "zoneName");

        v84 = static String._unconditionallyBridgeFromObjectiveC(_:)(v83);
        v86 = v85;

        *(_QWORD *)(v75 + 96) = &type metadata for String;
        *(_QWORD *)(v75 + 104) = v81;
        v87 = v81;
        *(_QWORD *)(v75 + 72) = v84;
        *(_QWORD *)(v75 + 80) = v86;
        v89 = static os_log_type_t.default.getter(v88);
        sub_100A06EBC((uint64_t)v76, &_mh_execute_header, v89, "Downloaded record containing asset. RecordID: %@ zoneName: %@", 61, 2, v75);
        swift_setDeallocating(v75);
        v90 = sub_1004B804C(&qword_1013E0190);
        swift_arrayDestroy(v75 + 32, 2, v90);

        v91 = (uint64_t *)(a5 + *(int *)(type metadata accessor for CRLCloudAssetDownloader.DownloadRequest(0) + 24));
        v93 = *v91;
        v92 = v91[1];
        v94 = sub_100B382BC(*v91, v92);
        if (v94)
        {
          v95 = v94;
          v96 = static UUID.== infix(_:_:)(v94 + OBJC_IVAR____TtC8Freeform24CRLAssetSyncRemoteRecord_metadata);
          v97 = (void *)static OS_os_log.dataSync;
          if ((v96 & 1) != 0)
          {
            v98 = swift_initStackObject(v152, v154);
            *(_OWORD *)(v98 + 16) = xmmword_100EF5A10;
            v99 = v97;
            v100 = objc_msgSend(v11, "recordName");
            v101 = static String._unconditionallyBridgeFromObjectiveC(_:)(v100);
            v103 = v102;

            *(_QWORD *)(v98 + 56) = &type metadata for String;
            *(_QWORD *)(v98 + 64) = v81;
            *(_QWORD *)(v98 + 32) = v101;
            *(_QWORD *)(v98 + 40) = v103;
            v104 = objc_msgSend(v11, "zoneID");
            v105 = objc_msgSend(v104, "zoneName");

            v106 = static String._unconditionallyBridgeFromObjectiveC(_:)(v105);
            v108 = v107;

            *(_QWORD *)(v98 + 96) = &type metadata for String;
            *(_QWORD *)(v98 + 104) = v81;
            *(_QWORD *)(v98 + 72) = v106;
            *(_QWORD *)(v98 + 80) = v108;
            v110 = static os_log_type_t.default.getter(v109);
            sub_100A06EBC((uint64_t)v99, &_mh_execute_header, v110, "Successfully downloaded asset. RecordID: %@ zoneName: %@", 56, 2, v98);
            swift_setDeallocating(v98);
            swift_arrayDestroy(v98 + 32, 2, v90);

            v156[0] = v95;
            swift_retain(v95);
            v111 = sub_1004B804C(&qword_1013E6490);
            CheckedContinuation.resume(returning:)(v156, v111);
          }
          else
          {
            v153 = v90;
            v132 = swift_initStackObject(v152, v155);
            *(_OWORD *)(v132 + 16) = xmmword_100EF5550;
            v133 = v97;
            v134 = UUID.uuidString.getter(v133);
            *(_QWORD *)(v132 + 56) = &type metadata for String;
            *(_QWORD *)(v132 + 64) = v87;
            *(_QWORD *)(v132 + 32) = v134;
            *(_QWORD *)(v132 + 40) = v135;
            v136 = objc_msgSend(v11, "recordName");
            v137 = static String._unconditionallyBridgeFromObjectiveC(_:)(v136);
            v139 = v138;

            *(_QWORD *)(v132 + 96) = &type metadata for String;
            *(_QWORD *)(v132 + 104) = v87;
            *(_QWORD *)(v132 + 72) = v137;
            *(_QWORD *)(v132 + 80) = v139;
            v140 = objc_msgSend(v11, "zoneID");
            v141 = objc_msgSend(v140, "zoneName");

            v142 = static String._unconditionallyBridgeFromObjectiveC(_:)(v141);
            v144 = v143;

            *(_QWORD *)(v132 + 136) = &type metadata for String;
            *(_QWORD *)(v132 + 144) = v87;
            *(_QWORD *)(v132 + 112) = v142;
            *(_QWORD *)(v132 + 120) = v144;
            v146 = static os_log_type_t.error.getter(v145);
            sub_100A06EBC((uint64_t)v133, &_mh_execute_header, v146, "Couldn't find asset with UUID %{public}@. RecordID: %@ zoneName: %@", 67, 2, v132);
            swift_setDeallocating(v132);
            swift_arrayDestroy(v132 + 32, 3, v153);

            v147 = sub_1005D2A0C();
            v148 = swift_allocError(&type metadata for CRLAssetError, v147, 0, 0);
            *v149 = xmmword_100EFD010;
            v156[0] = v148;
            v150 = sub_1004B804C(&qword_1013E6490);
            CheckedContinuation.resume(throwing:)(v156, v150);
          }
          v131 = v151;
          sub_1004E1E08(v151, 0);
          swift_release(v95);
        }
        else
        {
          v112 = (void *)static OS_os_log.dataSync;
          v113 = swift_initStackObject(v152, v157);
          *(_OWORD *)(v113 + 16) = xmmword_100EF5550;
          v156[1] = v92;
          v114 = v112;
          swift_bridgeObjectRetain(v92);
          v115._countAndFlagsBits = 0x7465737341;
          v115._object = (void *)0xE500000000000000;
          String.append(_:)(v115);
          *(_QWORD *)(v113 + 56) = &type metadata for String;
          *(_QWORD *)(v113 + 64) = v81;
          *(_QWORD *)(v113 + 32) = v93;
          *(_QWORD *)(v113 + 40) = v92;
          v116 = objc_msgSend(v11, "recordName");
          v117 = static String._unconditionallyBridgeFromObjectiveC(_:)(v116);
          v119 = v118;

          *(_QWORD *)(v113 + 96) = &type metadata for String;
          *(_QWORD *)(v113 + 104) = v81;
          *(_QWORD *)(v113 + 72) = v117;
          *(_QWORD *)(v113 + 80) = v119;
          v120 = objc_msgSend(v11, "zoneID");
          v121 = objc_msgSend(v120, "zoneName");

          v122 = static String._unconditionallyBridgeFromObjectiveC(_:)(v121);
          v124 = v123;

          *(_QWORD *)(v113 + 136) = &type metadata for String;
          *(_QWORD *)(v113 + 144) = v81;
          *(_QWORD *)(v113 + 112) = v122;
          *(_QWORD *)(v113 + 120) = v124;
          v126 = static os_log_type_t.error.getter(v125);
          sub_100A06EBC((uint64_t)v114, &_mh_execute_header, v126, "Couldn't find asset with key %@. RecordID: %@ zoneName: %@", 58, 2, v113);
          swift_setDeallocating(v113);
          swift_arrayDestroy(v113 + 32, 3, v90);

          v127 = sub_1005D2A0C();
          v128 = swift_allocError(&type metadata for CRLAssetError, v127, 0, 0);
          *v129 = 0;
          v129[1] = 0;
          v156[0] = v128;
          v130 = sub_1004B804C(&qword_1013E6490);
          CheckedContinuation.resume(throwing:)(v156, v130);
          v131 = v151;
          sub_1004E1E08(v151, 0);
        }
        sub_1004E1E08(v131, 0);
      }
      return;
    }

  }
  swift_endAccess(v167);
  if ((a2 & 1) != 0)
  {
    swift_errorRetain(a1);
    if (qword_1013DD870 != -1)
      swift_once(&qword_1013DD870, sub_100A059E0);
    swift_beginAccess(&static OS_os_log.dataSync, v167, 0, 0);
    v54 = (void *)static OS_os_log.dataSync;
    v55 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v56 = swift_initStackObject(v55, v164);
    *(_OWORD *)(v56 + 16) = xmmword_100EF5550;
    v57 = v54;
    v58 = objc_msgSend(a4, "recordName");
    v59 = static String._unconditionallyBridgeFromObjectiveC(_:)(v58);
    v61 = v60;

    *(_QWORD *)(v56 + 56) = &type metadata for String;
    v62 = sub_1004CFC2C();
    *(_QWORD *)(v56 + 64) = v62;
    *(_QWORD *)(v56 + 32) = v59;
    *(_QWORD *)(v56 + 40) = v61;
    v63 = objc_msgSend(a4, "zoneID");
    v64 = objc_msgSend(v63, "zoneName");

    v65 = static String._unconditionallyBridgeFromObjectiveC(_:)(v64);
    v67 = v66;

    *(_QWORD *)(v56 + 96) = &type metadata for String;
    *(_QWORD *)(v56 + 104) = v62;
    *(_QWORD *)(v56 + 72) = v65;
    *(_QWORD *)(v56 + 80) = v67;
    swift_getErrorValue(a1, v163, v162);
    v68 = Error.localizedDescription.getter(v162[1], v162[2]);
    *(_QWORD *)(v56 + 136) = &type metadata for String;
    *(_QWORD *)(v56 + 144) = v62;
    *(_QWORD *)(v56 + 112) = v68;
    *(_QWORD *)(v56 + 120) = v69;
    v71 = static os_log_type_t.default.getter(v70);
    sub_100A06EBC((uint64_t)v57, &_mh_execute_header, v71, "Failed to download asset. RecordID: %@ zoneName: %@. Error %@", 61, 2, v56);
    swift_setDeallocating(v56);
    v72 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v56 + 32, 3, v72);

    v156[0] = a1;
    v52 = sub_1004B804C(&qword_1013E6490);
    v53 = v156;
  }
  else
  {
    if (qword_1013DD870 != -1)
      swift_once(&qword_1013DD870, sub_100A059E0);
    swift_beginAccess(&static OS_os_log.dataSync, v167, 0, 0);
    v37 = (void *)static OS_os_log.dataSync;
    v38 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v39 = swift_initStackObject(v38, v166);
    *(_OWORD *)(v39 + 16) = xmmword_100EF5E40;
    v40 = v37;
    v41 = objc_msgSend(a4, "recordName");
    v42 = static String._unconditionallyBridgeFromObjectiveC(_:)(v41);
    v44 = v43;

    *(_QWORD *)(v39 + 56) = &type metadata for String;
    v45 = sub_1004CFC2C();
    *(_QWORD *)(v39 + 64) = v45;
    *(_QWORD *)(v39 + 32) = v42;
    *(_QWORD *)(v39 + 40) = v44;
    v46 = static os_log_type_t.error.getter(v45);
    sub_100A06EBC((uint64_t)v40, &_mh_execute_header, v46, "Encountered internal CloudKit logic error when fetching a record ID: %{public}@", 79, 2, v39);
    swift_setDeallocating(v39);
    v47 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v39 + 32, 1, v47);

    type metadata accessor for CKError(0);
    v49 = v48;
    v165 = 1;
    v50 = sub_1007AE6B0((uint64_t)_swiftEmptyArrayStorage);
    v51 = sub_1005034A0((unint64_t *)&qword_1013DE570, 255, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_100EF1474);
    _BridgedStoredNSError.init(_:userInfo:)(v156, &v165, v50, v49, v51);
    v165 = v156[0];
    v52 = sub_1004B804C(&qword_1013E6490);
    v53 = &v165;
  }
  CheckedContinuation.resume(throwing:)(v53, v52);
}

uint64_t sub_1005D75D8()
{
  _QWORD *v0;

  sub_1004CBB0C((uint64_t)(v0 + 14));
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 16);
  swift_bridgeObjectRelease(v0[21]);
  swift_bridgeObjectRelease(v0[22]);
  swift_defaultActor_destroy(v0);
  return swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for CRLCloudAssetDownloader()
{
  return objc_opt_self(_TtC8Freeform23CRLCloudAssetDownloader);
}

uint64_t type metadata accessor for CRLCloudAssetDownloader.DownloadRequest(uint64_t a1)
{
  uint64_t result;

  result = qword_1013E6518;
  if (!qword_1013E6518)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLCloudAssetDownloader.DownloadRequest);
  return result;
}

id sub_1005D7670()
{
  uint64_t v0;

  return sub_1005D63A0(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1005D7678(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  v5 = *(_QWORD *)(v1 + 32);
  v4 = *(_QWORD *)(v1 + 40);
  v6 = swift_task_alloc(dword_1013E6474);
  v7 = *(_OWORD *)(v1 + 16);
  *(_QWORD *)(v2 + 16) = v6;
  *(_QWORD *)v6 = v2;
  *(_QWORD *)(v6 + 8) = sub_1004CF80C;
  *(_QWORD *)(v6 + 40) = v5;
  *(_QWORD *)(v6 + 48) = v4;
  *(_OWORD *)(v6 + 24) = v7;
  *(_QWORD *)(v6 + 16) = a1;
  return swift_task_switch(sub_1005D6584, v4, 0);
}

uint64_t sub_1005D76F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v15[24];

  v4 = sub_1004B804C(&qword_1013E64B8);
  __chkstk_darwin(v4);
  v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v7);
  v9 = &v15[-v8 - 8];
  v10 = sub_1004B804C(&qword_1013E6490);
  v11 = *(_QWORD *)(v10 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v9, a1, v10);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
  sub_1005D817C((uint64_t)v9, (uint64_t)v6);
  v12 = a2 + *(_QWORD *)(*(_QWORD *)a2 + 88);
  swift_beginAccess(v12, v15, 33, 0);
  sub_1005D81C4((uint64_t)v6, v12);
  return swift_endAccess(v15);
}

uint64_t sub_1005D77FC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 48) = v0;
  return swift_task_switch(sub_1005D7814, 0, 0);
}

uint64_t sub_1005D7814()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;

  v1 = v0[6];
  v2 = sub_1004B804C(&qword_1013E64B0);
  v3 = swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  v0[7] = v3;
  v4 = v3 + *(_QWORD *)(*(_QWORD *)v3 + 88);
  v5 = sub_1004B804C(&qword_1013E6490);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  swift_beginAccess(v1 + 16, v0 + 2, 33, 0);
  swift_retain(v3);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v6);
  v7 = *(_QWORD *)(v1 + 16) & 0xFFFFFFFFFFFFFF8;
  v9 = *(_QWORD *)(v7 + 0x10);
  v8 = *(_QWORD *)(v7 + 24);
  if (v9 >= v8 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v8 > 1, v9 + 1, 1);
  v10 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v9, v3);
  specialized Array._endMutation()(v10);
  swift_endAccess(v0 + 2);
  v11 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  v0[8] = v11;
  v12 = type metadata accessor for CRLAssetSyncRemoteRecord(0);
  *v11 = v0;
  v11[1] = sub_1005D7974;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 5, 0, 0, 0x286576726573626FLL, 0xE900000000000029, sub_1005D8174, v3, v12);
}

uint64_t sub_1005D7974()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 64);
  *(_QWORD *)(*v1 + 72) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1005D7A18;
  }
  else
  {
    *(_QWORD *)(v2 + 80) = *(_QWORD *)(v2 + 40);
    v4 = sub_1005D79E0;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1005D79E0()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_release(*(_QWORD *)(v0 + 56));
  return (*(uint64_t (**)(_QWORD, __n128))(v0 + 8))(*(_QWORD *)(v0 + 80), v1);
}

uint64_t sub_1005D7A18()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_release(*(_QWORD *)(v0 + 56));
  return (*(uint64_t (**)(__n128))(v0 + 8))(v1);
}

void sub_1005D7A4C(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  unint64_t v23;
  _QWORD v24[3];
  _BYTE v25[24];
  _BYTE v26[24];

  v3 = v2;
  v22 = a2;
  v21 = a1;
  v4 = sub_1004B804C(&qword_1013E6490);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C(&qword_1013E64B8);
  __chkstk_darwin(v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v21 - v12;
  swift_beginAccess(v3 + 16, v26, 0, 0);
  v14 = *(_QWORD *)(v3 + 16);
  if (!((unint64_t)v14 >> 62))
  {
    v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*(_QWORD *)(v3 + 16));
    if (v15)
      goto LABEL_3;
LABEL_19:
    swift_bridgeObjectRelease(v14);
    return;
  }
  if (v14 < 0)
    v20 = *(_QWORD *)(v3 + 16);
  else
    v20 = v14 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v14);
  v15 = _CocoaArrayWrapper.endIndex.getter(v20);
  if (!v15)
    goto LABEL_19;
LABEL_3:
  if (v15 >= 1)
  {
    v16 = 0;
    v23 = v14 & 0xC000000000000001;
    v17 = v14;
    do
    {
      if (v23)
      {
        v18 = specialized _ArrayBuffer._getElementSlowPath(_:)(v16, v14);
      }
      else
      {
        v18 = *(_QWORD *)(v14 + 8 * v16 + 32);
        swift_retain(v18);
      }
      v19 = v18 + *(_QWORD *)(*(_QWORD *)v18 + 88);
      swift_beginAccess(v19, v25, 0, 0);
      sub_1005D8218(v19, (uint64_t)v13);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v13, 1, v4))
      {
        sub_1004CB800((uint64_t)v13, &qword_1013E64B8);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v13, v4);
        sub_1004CB800((uint64_t)v13, &qword_1013E64B8);
        v24[0] = v21;
        if ((v22 & 1) != 0)
        {
          swift_errorRetain(v21);
          CheckedContinuation.resume(throwing:)(v24, v4);
        }
        else
        {
          swift_retain(v21);
          CheckedContinuation.resume(returning:)(v24, v4);
        }
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      }
      ++v16;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v10, 1, 1, v4);
      swift_beginAccess(v19, v24, 33, 0);
      sub_1005D81C4((uint64_t)v10, v19);
      swift_endAccess(v24);
      swift_release(v18);
      v14 = v17;
    }
    while (v15 != v16);
    goto LABEL_19;
  }
  __break(1u);
}

uint64_t sub_1005D7CF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6[6] = a3;
  v6[7] = a4;
  v6[4] = a1;
  v6[5] = a2;
  if (sub_100DE6FA0(2, 18, 0, 0))
  {
    v13 = (_QWORD *)swift_task_alloc(async function pointer to withTaskCancellationHandler<A>(operation:onCancel:isolation:)[1]);
    v6[8] = v13;
    v14 = type metadata accessor for CRLAssetSyncRemoteRecord(0);
    *v13 = v6;
    v13[1] = sub_1005D7E10;
    return withTaskCancellationHandler<A>(operation:onCancel:isolation:)(v6 + 2, a1, a2, a3, a4, a5, a6, v14);
  }
  else
  {
    if (a5)
    {
      ObjectType = swift_getObjectType(a5);
      v17 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, a6);
      v19 = v18;
    }
    else
    {
      v17 = 0;
      v19 = 0;
    }
    v6[9] = v17;
    v6[10] = v19;
    return swift_task_switch(sub_1005D7E74, v17, v19);
  }
}

uint64_t sub_1005D7E10()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 64);
  v4 = *v1;
  swift_task_dealloc(v3);
  if (v0)
    return (*(uint64_t (**)(void))(v4 + 8))();
  else
    return (*(uint64_t (**)(_QWORD))(v4 + 8))(*(_QWORD *)(v2 + 16));
}

uint64_t sub_1005D7E74()
{
  _QWORD *v0;
  int *v1;
  _QWORD *v2;
  uint64_t (*v4)(_QWORD *);

  v1 = (int *)v0[4];
  v0[11] = swift_task_addCancellationHandler(v0[6], v0[7]);
  v4 = (uint64_t (*)(_QWORD *))((char *)v1 + *v1);
  v2 = (_QWORD *)swift_task_alloc(v1[1]);
  v0[12] = v2;
  *v2 = v0;
  v2[1] = sub_1005D7EE8;
  return v4(v0 + 3);
}

uint64_t sub_1005D7EE8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 96);
  *(_QWORD *)(*v1 + 104) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_1005D7F80;
  else
    v4 = sub_1005D7F48;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 72), *(_QWORD *)(v2 + 80));
}

uint64_t sub_1005D7F48()
{
  uint64_t v0;

  swift_task_removeCancellationHandler(*(_QWORD *)(v0 + 88));
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 24));
}

uint64_t sub_1005D7F80()
{
  uint64_t v0;

  swift_task_removeCancellationHandler(*(_QWORD *)(v0 + 88));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_1005D7FB4(uint64_t a1)
{
  uint64_t v1;

  return sub_1005D66FC(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1005D7FC0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005D7FE4(void *a1, void *a2, char a3)
{
  uint64_t v3;

  return sub_1005D6918(a1, a2, a3 & 1, v3);
}

uint64_t sub_1005D7FF0()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;

  v1 = (int *)type metadata accessor for CRLCloudAssetDownloader.DownloadRequest(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = sub_1004B804C(&qword_1013E6490);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v5 + v8) & ~v8;
  v10 = v9 + *(_QWORD *)(v7 + 64);
  v11 = v3 | v8 | 7;
  swift_release(*(_QWORD *)(v0 + 16));

  v12 = v0 + v4;
  v13 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);

  swift_bridgeObjectRelease(*(_QWORD *)(v12 + v1[6] + 8));
  v14 = swift_bridgeObjectRelease(*(_QWORD *)(v12 + v1[7] + 8));
  (*(void (**)(uint64_t, uint64_t, __n128))(v7 + 8))(v0 + v9, v6, v14);
  return swift_deallocObject(v0, v10, v11);
}

void sub_1005D80EC(uint64_t a1, char a2)
{
  uint64_t v2;
  char v4;
  uint64_t v5;
  unint64_t v6;

  v4 = a2 & 1;
  v5 = type metadata accessor for CRLCloudAssetDownloader.DownloadRequest(0);
  v6 = (*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  sub_1004B804C(&qword_1013E6490);
  sub_1005D69D4(a1, v4, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24), v2 + v6);
}

double sub_1005D816C(uint64_t a1)
{
  uint64_t v1;

  return sub_100ABF088(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1005D8174(uint64_t a1)
{
  uint64_t v1;

  return sub_1005D76F0(a1, v1);
}

uint64_t sub_1005D817C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013E64B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005D81C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013E64B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

double sub_1005D820C(uint64_t a1, char a2)
{
  double result;

  if ((a2 & 1) != 0)
    swift_errorRelease(a1);
  else
    *(_QWORD *)&result = swift_release(a1).n128_u64[0];
  return result;
}

uint64_t sub_1005D8218(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013E64B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t *sub_1005D8260(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v19);
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v10;
    v11 = (uint64_t *)((char *)a1 + v9);
    v12 = (uint64_t *)((char *)a2 + v9);
    v13 = v12[1];
    *v11 = *v12;
    v11[1] = v13;
    v14 = a3[7];
    v15 = (uint64_t *)((char *)a1 + v14);
    v16 = (uint64_t *)((char *)a2 + v14);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    v18 = v10;
    swift_bridgeObjectRetain(v13);
    swift_bridgeObjectRetain(v17);
  }
  return a1;
}

uint64_t sub_1005D8320(uint64_t a1, int *a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[6] + 8));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[7] + 8));
}

uint64_t sub_1005D8384(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  id v17;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = *(void **)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v9;
  v10 = (_QWORD *)(a1 + v8);
  v11 = (_QWORD *)(a2 + v8);
  v12 = v11[1];
  *v10 = *v11;
  v10[1] = v12;
  v13 = a3[7];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  v17 = v9;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRetain(v16);
  return a1;
}

uint64_t sub_1005D8418(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(void **)(a2 + v7);
  v9 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  v10 = v8;

  v11 = a3[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v14 = v13[1];
  v15 = v12[1];
  v12[1] = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease(v15);
  v16 = a3[7];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)(a2 + v16);
  *v17 = *v18;
  v19 = v18[1];
  v20 = v17[1];
  v17[1] = v19;
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRelease(v20);
  return a1;
}

uint64_t sub_1005D84D8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1005D8548(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);

  v9 = a3[6];
  v10 = (_QWORD *)(a1 + v9);
  v11 = (uint64_t *)(a2 + v9);
  v13 = *v11;
  v12 = v11[1];
  v14 = v10[1];
  *v10 = v13;
  v10[1] = v12;
  swift_bridgeObjectRelease(v14);
  v15 = a3[7];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (uint64_t *)(a2 + v15);
  v19 = *v17;
  v18 = v17[1];
  v20 = v16[1];
  *v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease(v20);
  return a1;
}

uint64_t sub_1005D85E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005D85F0);
}

uint64_t sub_1005D85F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1005D866C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005D8678);
}

uint64_t sub_1005D8678(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_1005D86F0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[2] = &unk_100EFD120;
    v4[3] = &unk_100EFD120;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
    return 0;
  }
  return result;
}

id sub_1005D8770()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CRLAnalyticsActiveUseManager()), "init");
  static CRLAnalyticsActiveUseManager.shared = (uint64_t)result;
  return result;
}

uint64_t *CRLAnalyticsActiveUseManager.shared.unsafeMutableAddressor()
{
  if (qword_1013DCB08 != -1)
    swift_once(&qword_1013DCB08, sub_1005D8770);
  return &static CRLAnalyticsActiveUseManager.shared;
}

id static CRLAnalyticsActiveUseManager.shared.getter()
{
  if (qword_1013DCB08 != -1)
    swift_once(&qword_1013DCB08, sub_1005D8770);
  return (id)static CRLAnalyticsActiveUseManager.shared;
}

char *sub_1005D885C()
{
  char *v0;
  char *v1;
  char *v2;
  char *v3;
  char *v4;
  char *v5;
  char *v6;
  char *v7;
  id v8;
  char *v9;
  id v10;
  NSString v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  char *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  id v49;
  id v50;
  id v51;
  void **v53;
  uint64_t v54;
  uint64_t (*v55)(uint64_t, uint64_t);
  void *v56;
  void (*v57)(uint64_t);
  uint64_t v58;
  objc_super v59;

  v1 = &v0[OBJC_IVAR____TtC8Freeform28CRLAnalyticsActiveUseManager_appForegroundedAnalyticsDomain];
  *(_QWORD *)v1 = 0xD000000000000010;
  *((_QWORD *)v1 + 1) = 0x8000000100FAAA70;
  v2 = &v0[OBJC_IVAR____TtC8Freeform28CRLAnalyticsActiveUseManager_deviceIDAnalyticsKey];
  *(_QWORD *)v2 = 0x4449656369766564;
  *((_QWORD *)v2 + 1) = 0xE800000000000000;
  v3 = &v0[OBJC_IVAR____TtC8Freeform28CRLAnalyticsActiveUseManager_userIDAnalyticsKey];
  *(_QWORD *)v3 = 0x444972657375;
  *((_QWORD *)v3 + 1) = 0xE600000000000000;
  v4 = &v0[OBJC_IVAR____TtC8Freeform28CRLAnalyticsActiveUseManager_supportsEndToEndEncryptionKey];
  *(_QWORD *)v4 = 0xD00000000000001ALL;
  *((_QWORD *)v4 + 1) = 0x8000000100FAAA90;
  v5 = &v0[OBJC_IVAR____TtC8Freeform28CRLAnalyticsActiveUseManager_overriddenUserIDAnalyticsKey];
  *(_QWORD *)v5 = 0xD000000000000010;
  *((_QWORD *)v5 + 1) = 0x8000000100FAAAB0;
  v6 = &v0[OBJC_IVAR____TtC8Freeform28CRLAnalyticsActiveUseManager_hadiCloudAccountAnalyticsKey];
  *(_QWORD *)v6 = 0xD000000000000010;
  *((_QWORD *)v6 + 1) = 0x8000000100FAAAD0;
  v7 = &v0[OBJC_IVAR____TtC8Freeform28CRLAnalyticsActiveUseManager_hadQuotaViolationKey];
  *(_QWORD *)v7 = 0xD000000000000011;
  *((_QWORD *)v7 + 1) = 0x8000000100FAAAF0;
  v8 = objc_allocWithZone((Class)NSOperationQueue);
  v9 = v0;
  v10 = objc_msgSend(v8, "init");
  objc_msgSend(v10, "setMaxConcurrentOperationCount:", 1);
  v11 = String._bridgeToObjectiveC()();
  objc_msgSend(v10, "setName:", v11);

  v12 = objc_allocWithZone((Class)type metadata accessor for CRLAnalyticsDataStore(0));
  v13 = v10;
  *(_QWORD *)&v9[OBJC_IVAR____TtC8Freeform28CRLAnalyticsActiveUseManager_dataStore] = CRLAnalyticsDataStore.init(queue:)(v13);

  v59.receiver = v9;
  v59.super_class = (Class)type metadata accessor for CRLAnalyticsActiveUseManager();
  v14 = objc_msgSendSuper2(&v59, "init");
  v15 = (void *)objc_opt_self(NSNotificationCenter);
  v16 = (char *)v14;
  v17 = objc_msgSend(v15, "defaultCenter");
  v18 = swift_allocObject(&unk_1012708C8, 24, 7);
  swift_unknownObjectWeakInit(v18 + 16);
  v19 = swift_allocObject(&unk_1012708F0, 32, 7);
  *(_QWORD *)(v19 + 16) = v13;
  *(_QWORD *)(v19 + 24) = v18;
  v57 = sub_1005DA0B4;
  v58 = v19;
  v53 = _NSConcreteStackBlock;
  v54 = *(_QWORD *)"";
  v55 = sub_100568280;
  v56 = &unk_101270908;
  v20 = _Block_copy(&v53);
  v21 = v58;
  v22 = v13;
  v23 = objc_msgSend(v17, "addObserverForName:object:queue:usingBlock:", UIApplicationWillEnterForegroundNotification, 0, v22, v20, swift_release(v21).n128_f64[0]);
  _Block_release(v20);
  swift_unknownObjectRelease(v23);

  if (qword_1013DCA68 != -1)
    swift_once(&qword_1013DCA68, sub_10056AA8C);
  v24 = qword_10147E9A0;
  v25 = OBJC_IVAR____TtC8Freeform28CRLAnalyticsActiveUseManager_dataStore;
  v26 = *(void **)&v16[OBJC_IVAR____TtC8Freeform28CRLAnalyticsActiveUseManager_dataStore];
  v27 = swift_allocObject(&unk_1012708C8, 24, 7);
  swift_unknownObjectWeakInit(v27 + 16);
  v28 = swift_allocObject(&unk_101270940, 32, 7);
  *(_QWORD *)(v28 + 16) = v22;
  *(_QWORD *)(v28 + 24) = v27;
  v57 = sub_1005DA0F8;
  v58 = v28;
  v53 = _NSConcreteStackBlock;
  v54 = *(_QWORD *)"";
  v55 = sub_100568280;
  v56 = &unk_101270958;
  v29 = _Block_copy(&v53);
  v30 = v58;
  v31 = v22;
  v32 = v26;
  v33 = objc_msgSend(v17, "addObserverForName:object:queue:usingBlock:", v24, v32, v31, v29, swift_release(v30).n128_f64[0]);
  _Block_release(v29);
  swift_unknownObjectRelease(v33);

  if (qword_1013DCA70 != -1)
    swift_once(&qword_1013DCA70, sub_10056AAC0);
  v34 = qword_10147E9A8;
  v35 = *(void **)&v16[v25];
  v36 = swift_allocObject(&unk_1012708C8, 24, 7);
  swift_unknownObjectWeakInit(v36 + 16);
  v37 = swift_allocObject(&unk_101270990, 32, 7);
  *(_QWORD *)(v37 + 16) = v31;
  *(_QWORD *)(v37 + 24) = v36;
  v57 = sub_1005DA104;
  v58 = v37;
  v53 = _NSConcreteStackBlock;
  v54 = *(_QWORD *)"";
  v55 = sub_100568280;
  v56 = &unk_1012709A8;
  v38 = _Block_copy(&v53);
  v39 = v58;
  v40 = v31;
  v41 = v35;
  v42 = objc_msgSend(v17, "addObserverForName:object:queue:usingBlock:", v34, v41, v40, v38, swift_release(v39).n128_f64[0]);
  _Block_release(v38);
  swift_unknownObjectRelease(v42);

  if (qword_1013DCA78 != -1)
    swift_once(&qword_1013DCA78, sub_10056AAF4);
  v43 = qword_10147E9B0;
  v44 = *(void **)&v16[v25];
  v45 = swift_allocObject(&unk_1012708C8, 24, 7);
  swift_unknownObjectWeakInit(v45 + 16);
  v46 = swift_allocObject(&unk_1012709E0, 32, 7);
  *(_QWORD *)(v46 + 16) = v40;
  *(_QWORD *)(v46 + 24) = v45;
  v57 = sub_1005DA15C;
  v58 = v46;
  v53 = _NSConcreteStackBlock;
  v54 = *(_QWORD *)"";
  v55 = sub_100568280;
  v56 = &unk_1012709F8;
  v47 = _Block_copy(&v53);
  v48 = v58;
  v49 = v40;
  v50 = v44;
  v51 = objc_msgSend(v17, "addObserverForName:object:queue:usingBlock:", v43, v50, v49, v47, swift_release(v48).n128_f64[0]);

  _Block_release(v47);
  swift_unknownObjectRelease(v51);

  return v16;
}

void sub_1005D8E8C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *Strong;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  _QWORD aBlock[5];
  uint64_t v17;
  _BYTE v18[24];

  v6 = type metadata accessor for Notification(0, a2);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  a3 += 16;
  v9 = swift_allocObject(&unk_1012708C8, 24, 7);
  swift_beginAccess(a3, v18, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a3);
  swift_unknownObjectWeakInit(v9 + 16);

  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&aBlock[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  v11 = *(unsigned __int8 *)(v7 + 80);
  v12 = (v11 + 24) & ~v11;
  v13 = swift_allocObject(&unk_101270A80, v12 + v8, v11 | 7);
  *(_QWORD *)(v13 + 16) = v9;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v13 + v12, (char *)&aBlock[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  aBlock[4] = sub_1005DA218;
  v17 = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1005D2FC0;
  aBlock[3] = &unk_101270A98;
  v14 = _Block_copy(aBlock);
  objc_msgSend(a2, "addOperationWithBlock:", v14, swift_release(v17).n128_f64[0]);
  _Block_release(v14);
}

void sub_1005D9018(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_1005D9A94(a2);

  }
}

double sub_1005D9070(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  double result;
  void *v4;
  unint64_t v5;
  void *v6;
  NSString v7;
  Class isa;
  _BYTE v9[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = sub_1005D961C(0, 0xE000000000000000, 1);
    if (*(_QWORD *)(v5 + 16))
    {
      v6 = (void *)objc_opt_self(CRLAnalyticsLogger);
      v7 = String._bridgeToObjectiveC()();
      sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v6, "sendEventInDomain:lazily:eventPayload:", v7, 1, isa, swift_bridgeObjectRelease(v5).n128_f64[0]);

    }
    else
    {

      *(_QWORD *)&result = swift_bridgeObjectRelease(v5).n128_u64[0];
    }
  }
  return result;
}

void sub_1005D9184(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  void *Strong;
  void *v11;
  _QWORD aBlock[5];
  uint64_t v13;
  _BYTE v14[24];

  v8 = a3 + 16;
  v9 = swift_allocObject(&unk_1012708C8, 24, 7);
  swift_beginAccess(v8, v14, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v8);
  swift_unknownObjectWeakInit(v9 + 16);

  aBlock[4] = a4;
  v13 = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1005D2FC0;
  aBlock[3] = a5;
  v11 = _Block_copy(aBlock);
  objc_msgSend(a2, "addOperationWithBlock:", v11, swift_release(v13).n128_f64[0]);
  _Block_release(v11);
}

double sub_1005D9268(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  double result;
  void *v4;
  unint64_t v5;
  void *v6;
  NSString v7;
  Class isa;
  _BYTE v9[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = sub_1005D961C(0, 0xE000000000000000, 0);
    if (*(_QWORD *)(v5 + 16))
    {
      v6 = (void *)objc_opt_self(CRLAnalyticsLogger);
      v7 = String._bridgeToObjectiveC()();
      sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v6, "sendEventInDomain:lazily:eventPayload:", v7, 1, isa, swift_bridgeObjectRelease(v5).n128_f64[0]);

    }
    else
    {

      *(_QWORD *)&result = swift_bridgeObjectRelease(v5).n128_u64[0];
    }
  }
  return result;
}

id CRLAnalyticsActiveUseManager.__deallocating_deinit()
{
  void *v0;
  id v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  objc_super v10;

  v1 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  objc_msgSend(v1, "removeObserver:name:object:", v0, UIApplicationWillEnterForegroundNotification, 0);
  v2 = qword_1013DCA68;
  v3 = v0;
  if (v2 != -1)
    swift_once(&qword_1013DCA68, sub_10056AA8C);
  v4 = OBJC_IVAR____TtC8Freeform28CRLAnalyticsActiveUseManager_dataStore;
  objc_msgSend(v1, "removeObserver:name:object:", v3, qword_10147E9A0, *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform28CRLAnalyticsActiveUseManager_dataStore]);

  v5 = qword_1013DCA70;
  v6 = v3;
  if (v5 != -1)
    swift_once(&qword_1013DCA70, sub_10056AAC0);
  objc_msgSend(v1, "removeObserver:name:object:", v6, qword_10147E9A8, *(_QWORD *)&v3[v4]);

  v7 = qword_1013DCA78;
  v8 = v6;
  if (v7 != -1)
    swift_once(&qword_1013DCA78, sub_10056AAF4);
  objc_msgSend(v1, "removeObserver:name:object:", v8, qword_10147E9B0, *(_QWORD *)&v3[v4]);

  v10.receiver = v8;
  v10.super_class = (Class)type metadata accessor for CRLAnalyticsActiveUseManager();
  return objc_msgSendSuper2(&v10, "dealloc");
}

uint64_t type metadata accessor for CRLAnalyticsActiveUseManager()
{
  return objc_opt_self(_TtC8Freeform28CRLAnalyticsActiveUseManager);
}

unint64_t sub_1005D961C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  NSString v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t inited;
  uint64_t v20;
  id v21;
  NSString v22;
  id v23;
  uint64_t v24;
  id v25;
  NSString v26;
  id v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  id v31;
  NSString v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  Swift::Bool BOOLeanLiteral;
  char v47;
  _BYTE v48[176];
  _BYTE v49[72];
  _BYTE v50[32];

  v4 = v3;
  v7 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform28CRLAnalyticsActiveUseManager_dataStore);
  sub_10056973C();
  v8 = sub_1008D5C30((uint64_t)_swiftEmptyArrayStorage);
  v9 = *(void **)(v7 + OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_userDefaults);
  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend(v9, "stringForKey:", v10);

  if (v11)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    v13 = v12;

    sub_100568454();
    if (v14)
    {
      v15 = v14;
      v47 = a3;
      swift_bridgeObjectRelease(v8);
      v16 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
      v17 = objc_msgSend(v16, "ubiquityIdentityToken");

      if (v17)
        swift_unknownObjectRelease(v17);
      BOOLeanLiteral = v17 != 0;
      v18 = sub_1004B804C(&qword_1013E65C0);
      inited = swift_initStackObject(v18, v48);
      *(_OWORD *)(inited + 16) = xmmword_100EFD140;
      v20 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform28CRLAnalyticsActiveUseManager_deviceIDAnalyticsKey + 8);
      *(_QWORD *)(inited + 32) = *(_QWORD *)(v4
                                           + OBJC_IVAR____TtC8Freeform28CRLAnalyticsActiveUseManager_deviceIDAnalyticsKey);
      *(_QWORD *)(inited + 40) = v20;
      v21 = objc_allocWithZone((Class)NSString);
      swift_bridgeObjectRetain(v20);
      v22 = String._bridgeToObjectiveC()();
      v23 = objc_msgSend(v21, "initWithString:", v22, swift_bridgeObjectRelease(v13).n128_f64[0]);

      *(_QWORD *)(inited + 48) = v23;
      v24 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform28CRLAnalyticsActiveUseManager_userIDAnalyticsKey + 8);
      *(_QWORD *)(inited + 56) = *(_QWORD *)(v4
                                           + OBJC_IVAR____TtC8Freeform28CRLAnalyticsActiveUseManager_userIDAnalyticsKey);
      *(_QWORD *)(inited + 64) = v24;
      v25 = objc_allocWithZone((Class)NSString);
      swift_bridgeObjectRetain(v24);
      v26 = String._bridgeToObjectiveC()();
      v27 = objc_msgSend(v25, "initWithString:", v26, swift_bridgeObjectRelease(v15).n128_f64[0]);

      *(_QWORD *)(inited + 72) = v27;
      v28 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform28CRLAnalyticsActiveUseManager_supportsEndToEndEncryptionKey + 8);
      *(_QWORD *)(inited + 80) = *(_QWORD *)(v4
                                           + OBJC_IVAR____TtC8Freeform28CRLAnalyticsActiveUseManager_supportsEndToEndEncryptionKey);
      *(_QWORD *)(inited + 88) = v28;
      sub_1004B8930(0, (unint64_t *)&qword_1013F07F0, NSNumber_ptr);
      v29 = (_BYTE *)(v7 + OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_supportsEndToEndEncryption);
      swift_beginAccess(v29, v50, 0, 0);
      LOBYTE(v29) = *v29;
      swift_bridgeObjectRetain(v28);
      *(NSNumber *)(inited + 96) = NSNumber.init(BOOLeanLiteral:)((Swift::Bool)v29);
      v30 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform28CRLAnalyticsActiveUseManager_overriddenUserIDAnalyticsKey + 8);
      *(_QWORD *)(inited + 104) = *(_QWORD *)(v4
                                            + OBJC_IVAR____TtC8Freeform28CRLAnalyticsActiveUseManager_overriddenUserIDAnalyticsKey);
      *(_QWORD *)(inited + 112) = v30;
      v31 = objc_allocWithZone((Class)NSString);
      swift_bridgeObjectRetain(v30);
      swift_bridgeObjectRetain(a2);
      v32 = String._bridgeToObjectiveC()();
      v33 = objc_msgSend(v31, "initWithString:", v32, swift_bridgeObjectRelease(a2).n128_f64[0]);

      *(_QWORD *)(inited + 120) = v33;
      v34 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform28CRLAnalyticsActiveUseManager_hadiCloudAccountAnalyticsKey + 8);
      *(_QWORD *)(inited + 128) = *(_QWORD *)(v4
                                            + OBJC_IVAR____TtC8Freeform28CRLAnalyticsActiveUseManager_hadiCloudAccountAnalyticsKey);
      *(_QWORD *)(inited + 136) = v34;
      swift_bridgeObjectRetain(v34);
      *(NSNumber *)(inited + 144) = NSNumber.init(BOOLeanLiteral:)(BOOLeanLiteral);
      v35 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform28CRLAnalyticsActiveUseManager_hadQuotaViolationKey + 8);
      *(_QWORD *)(inited + 152) = *(_QWORD *)(v4
                                            + OBJC_IVAR____TtC8Freeform28CRLAnalyticsActiveUseManager_hadQuotaViolationKey);
      *(_QWORD *)(inited + 160) = v35;
      swift_bridgeObjectRetain(v35);
      *(NSNumber *)(inited + 168) = NSNumber.init(BOOLeanLiteral:)(v47 & 1);
      return sub_1008D5C30(inited);
    }
    swift_bridgeObjectRelease(v13);
  }
  if (qword_1013DD730 != -1)
    swift_once(&qword_1013DD730, sub_100A01F88);
  swift_beginAccess(&static OS_os_log.crlAnalytics, v50, 0, 0);
  v36 = (void *)static OS_os_log.crlAnalytics;
  v37 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  v38 = swift_initStackObject(v37, v49);
  *(_OWORD *)(v38 + 16) = xmmword_100EF5E40;
  v40 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform28CRLAnalyticsActiveUseManager_appForegroundedAnalyticsDomain);
  v39 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform28CRLAnalyticsActiveUseManager_appForegroundedAnalyticsDomain + 8);
  *(_QWORD *)(v38 + 56) = &type metadata for String;
  *(_QWORD *)(v38 + 64) = sub_1004CFC2C();
  *(_QWORD *)(v38 + 32) = v40;
  *(_QWORD *)(v38 + 40) = v39;
  v41 = v36;
  v42 = swift_bridgeObjectRetain(v39);
  v43 = static os_log_type_t.debug.getter(v42);
  sub_100A06EBC((uint64_t)v41, &_mh_execute_header, v43, "Error generating payload for event: %@", 38, 2, v38);
  swift_setDeallocating(v38);
  v44 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v38 + 32, 1, v44);

  return v8;
}

double sub_1005D9A94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  char v4;
  uint64_t v5;
  unint64_t v6;
  void *v7;
  NSString v8;
  Class isa;
  double result;
  void *v11;
  uint64_t v12;
  uint64_t inited;
  id v14;
  Class v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[72];
  __int128 v23;
  __int128 v24;

  v1 = Notification.userInfo.getter(a1);
  if (!v1)
  {
    v23 = 0u;
    v24 = 0u;
LABEL_11:
    sub_1004D28EC((uint64_t)&v23);
    goto LABEL_12;
  }
  v2 = v1;
  v19[0] = 0xD000000000000010;
  v19[1] = 0x8000000100FAAAB0;
  AnyHashable.init<A>(_:)(v19, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v2 + 16) && (v3 = sub_1008432BC((uint64_t)&v20), (v4 & 1) != 0))
  {
    sub_1004CB6E8(*(_QWORD *)(v2 + 56) + 32 * v3, (uint64_t)&v23);
  }
  else
  {
    v23 = 0u;
    v24 = 0u;
  }
  swift_bridgeObjectRelease(v2);
  sub_1004B89A4((uint64_t)&v20);
  if (!*((_QWORD *)&v24 + 1))
    goto LABEL_11;
  if ((swift_dynamicCast(&v20, &v23, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
  {
    v5 = v21;
    v6 = sub_1005D961C(v20, v21, 0);
    if (*(_QWORD *)(v6 + 16))
    {
      v7 = (void *)objc_opt_self(CRLAnalyticsLogger);
      v8 = String._bridgeToObjectiveC()();
      sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v7, "sendEventInDomain:lazily:eventPayload:", v8, 1, isa, swift_bridgeObjectRelease(v6).n128_f64[0]);
      swift_bridgeObjectRelease(v5);

    }
    else
    {
      swift_bridgeObjectRelease(v5);
      *(_QWORD *)&result = swift_bridgeObjectRelease(v6).n128_u64[0];
    }
    return result;
  }
LABEL_12:
  if (qword_1013DD730 != -1)
    swift_once(&qword_1013DD730, sub_100A01F88);
  swift_beginAccess(&static OS_os_log.crlAnalytics, &v20, 0, 0);
  v11 = (void *)static OS_os_log.crlAnalytics;
  v12 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v12, v22);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v14 = v11;
  v15 = Notification._bridgeToObjectiveC()().super.isa;
  *(_QWORD *)(inited + 56) = sub_1004B8930(0, &qword_1013E2DA0, NSNotification_ptr);
  *(_QWORD *)(inited + 64) = sub_1005DA034();
  *(_QWORD *)(inited + 32) = v15;
  v17 = static os_log_type_t.default.getter(v16);
  sub_100A06EBC((uint64_t)v14, &_mh_execute_header, v17, "Unable to get CRLAnalyticsDataStore.overriddenUserIDKey from notification: %@", 77, 2, inited);
  swift_setDeallocating(inited);
  v18 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v18);

  return result;
}

double sub_1005D9DFC()
{
  unint64_t v0;
  unint64_t v1;
  void *v2;
  NSString v3;
  double result;
  Class isa;

  v0 = sub_1005D961C(0, 0xE000000000000000, 1);
  v1 = v0;
  if (*(_QWORD *)(v0 + 16))
  {
    v2 = (void *)objc_opt_self(CRLAnalyticsLogger);
    v3 = String._bridgeToObjectiveC()();
    sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v2, "sendEventInDomain:lazily:eventPayload:", v3, 1, isa, swift_bridgeObjectRelease(v1).n128_f64[0]);

  }
  else
  {
    *(_QWORD *)&result = swift_bridgeObjectRelease(v0).n128_u64[0];
  }
  return result;
}

double sub_1005D9F18()
{
  unint64_t v0;
  unint64_t v1;
  void *v2;
  NSString v3;
  double result;
  Class isa;

  v0 = sub_1005D961C(0, 0xE000000000000000, 0);
  v1 = v0;
  if (*(_QWORD *)(v0 + 16))
  {
    v2 = (void *)objc_opt_self(CRLAnalyticsLogger);
    v3 = String._bridgeToObjectiveC()();
    sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v2, "sendEventInDomain:lazily:eventPayload:", v3, 1, isa, swift_bridgeObjectRelease(v1).n128_f64[0]);

  }
  else
  {
    *(_QWORD *)&result = swift_bridgeObjectRelease(v0).n128_u64[0];
  }
  return result;
}

unint64_t sub_1005DA034()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E2DA8;
  if (!qword_1013E2DA8)
  {
    v1 = sub_1004B8930(255, &qword_1013E2DA0, NSNotification_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1013E2DA8);
  }
  return result;
}

uint64_t sub_1005DA08C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1005DA0B4(uint64_t a1)
{
  uint64_t v1;

  sub_1005D9184(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), (uint64_t)sub_1005DA184, (uint64_t)&unk_101270AC0);
}

uint64_t sub_1005DA0DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1005DA0EC(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

void sub_1005DA0F8(uint64_t a1)
{
  uint64_t v1;

  sub_1005D8E8C(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1005DA104(uint64_t a1)
{
  uint64_t v1;

  sub_1005D9184(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), (uint64_t)sub_1005DA19C, (uint64_t)&unk_101270A48);
}

uint64_t sub_1005DA130()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1005DA15C(uint64_t a1)
{
  uint64_t v1;

  sub_1005D9184(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), (uint64_t)sub_1005DA184, (uint64_t)&unk_101270A20);
}

double sub_1005DA184()
{
  uint64_t v0;

  return sub_1005D9268(v0);
}

double sub_1005DA19C()
{
  uint64_t v0;

  return sub_1005D9070(v0);
}

uint64_t sub_1005DA1A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;

  v3 = type metadata accessor for Notification(0, a2);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v5 + 24) & ~v5;
  v7 = v6 + *(_QWORD *)(v4 + 64);
  v8 = v5 | 7;
  v9 = swift_release(*(_QWORD *)(v2 + 16));
  (*(void (**)(uint64_t, uint64_t, __n128))(v4 + 8))(v2 + v6, v3, v9);
  return swift_deallocObject(v2, v7, v8);
}

void sub_1005DA218(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Notification(0, a2) - 8) + 80);
  sub_1005D9018(*(_QWORD *)(v2 + 16), v2 + ((v3 + 24) & ~v3));
}

uint64_t sub_1005DA284(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  char v26;
  void (*v27)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;

  v29 = a2;
  v5 = type metadata accessor for CRLBoardItemCommonAbstractCRDTData(0, a3, a4, a4);
  v30 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v29 - v9;
  v11 = type metadata accessor for UUID(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v29 - v16;
  v18 = sub_1004B804C(&qword_1013E1A80);
  CRRegister.wrappedValue.getter(v18);
  v19 = sub_1004B804C(&qword_1013E1A80);
  v20 = v29;
  CRRegister.wrappedValue.getter(v19);
  v21 = static UUID.== infix(_:_:)(v17);
  v22 = *(void (**)(char *, uint64_t))(v12 + 8);
  v22(v14, v11);
  v23 = v11;
  v24 = v30;
  v22(v17, v23);
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 16);
  v25(v10, a1, v5);
  v25(v7, v20, v5);
  if ((v21 & 1) != 0)
    v26 = sub_1005E021C((uint64_t)v7, v5);
  else
    v26 = 0;
  v27 = *(void (**)(char *, uint64_t))(v24 + 8);
  v27(v7, v5);
  v27(v10, v5);
  return v26 & 1;
}

uint64_t sub_1005DA448(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[24];

  v3 = *(_QWORD **)v1;
  swift_beginAccess(v1 + *(_QWORD *)(*(_QWORD *)v1 + 632), v8, 33, 0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v3[77], v3[76], &protocol descriptor for CRLBoardItemCommonDataTypeSpecifying.NumRequirements, &unk_101119CA4);
  v6 = type metadata accessor for CRLBoardItemCommonAbstractCRDTData(0, AssociatedTypeWitness, v3[78], v5);
  sub_1005DF620(a1, v6, (uint64_t)&off_101270C18);
  return swift_endAccess(v8);
}

uint64_t *sub_1005DA4F0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t AssociatedTypeWitness;
  uint64_t v4;
  uint64_t v5;

  v1 = *v0;
  v2 = (uint64_t)v0 + *(_QWORD *)(*v0 + 632);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, *(_QWORD *)(*v0 + 616), *(_QWORD *)(*v0 + 608), &protocol descriptor for CRLBoardItemCommonDataTypeSpecifying.NumRequirements, &unk_101119CA4);
  v5 = type metadata accessor for CRLBoardItemCommonAbstractCRDTData(0, AssociatedTypeWitness, *(_QWORD *)(v1 + 624), v4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v2, v5);
  return v0;
}

uint64_t sub_1005DA564()
{
  return 0x1000000000000;
}

uint64_t sub_1005DA574()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t inited;
  unint64_t v5;
  __n128 v6;
  _BYTE v8[72];

  v1 = v0;
  v2 = *v0;
  v3 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v3, v8);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v5 = v1[3];
  *(_QWORD *)(inited + 56) = &type metadata for UInt64;
  *(_QWORD *)(inited + 64) = &protocol witness table for UInt64;
  *(_QWORD *)(inited + 32) = v5;
  if (sub_1001E9730() < v5)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"computedMinRequiredVersion", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItemData.swift", 87, 2, 242, "Call to computedMinRequiredVersion while current minRequiredVersion is higher than current: %{public}d", 102, 2u, inited);
    sub_1004F5394(inited, (uint64_t)"computedMinRequiredVersion", 26, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItemData.swift", 87, 2u, 242, (uint64_t)"Call to computedMinRequiredVersion while current minRequiredVersion is higher than current: %{public}d", 102, 2u);
  }
  v6 = swift_bridgeObjectRelease(inited);
  return (*(uint64_t (**)(__n128))(v2 + 104))(v6);
}

uint64_t sub_1005DA690()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t inited;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _BYTE v7[72];
  _BYTE v8[80];

  v1 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v1, v8);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v3 = *(_QWORD *)(v0 + 24);
  *(_QWORD *)(inited + 56) = &type metadata for UInt64;
  *(_QWORD *)(inited + 64) = &protocol witness table for UInt64;
  *(_QWORD *)(inited + 32) = v3;
  if (sub_1001E9730() < v3)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"computedMinRequiredVersionForGoodEnoughFidelity", 47, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItemData.swift", 87, 2, 250, "Call to computedMinRequiredVersionForGoodEnoughFidelity while current minRequiredVersion is higher than current: %{public}d", 123, 2u, inited);
    sub_1004F5394(inited, (uint64_t)"computedMinRequiredVersionForGoodEnoughFidelity", 47, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItemData.swift", 87, 2u, 250, (uint64_t)"Call to computedMinRequiredVersionForGoodEnoughFidelity while current minRequiredVersion is higher than current: %{public}d", 123, 2u);
  }
  swift_bridgeObjectRelease();
  v4 = swift_initStackObject(v1, v7);
  *(_OWORD *)(v4 + 16) = xmmword_100EF5E40;
  v5 = *(_QWORD *)(v0 + 32);
  *(_QWORD *)(v4 + 56) = &type metadata for UInt64;
  *(_QWORD *)(v4 + 64) = &protocol witness table for UInt64;
  *(_QWORD *)(v4 + 32) = v5;
  if (sub_1001E9730() < v5)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"computedMinRequiredVersionForGoodEnoughFidelity", 47, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItemData.swift", 87, 2, 251, "Call to computedMinRequiredVersionForGoodEnoughFidelity while current minRequiredVersionForGoodEnoughFidelity is higher than current: %{public}d", 144, 2u, v4);
    sub_1004F5394(v4, (uint64_t)"computedMinRequiredVersionForGoodEnoughFidelity", 47, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItemData.swift", 87, 2u, 251, (uint64_t)"Call to computedMinRequiredVersionForGoodEnoughFidelity while current minRequiredVersionForGoodEnoughFidelity is higher than current: %{public}d", 144, 2u);
  }
  swift_bridgeObjectRelease();
  return 0x2000400000000;
}

uint64_t sub_1005DA870()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t inited;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v10[72];
  char v11[72];
  char v12[80];

  v1 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v1, v12);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v3 = v0[3];
  *(_QWORD *)(inited + 56) = &type metadata for UInt64;
  *(_QWORD *)(inited + 64) = &protocol witness table for UInt64;
  *(_QWORD *)(inited + 32) = v3;
  if (sub_1001E9730() < v3)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"computedMinRequiredVersionForFullFidelity", 41, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItemData.swift", 87, 2, 259, "Call to computedMinRequiredVersionForFullFidelity while current minRequiredVersion is higher than current: %{public}d", 117, 2u, inited);
    sub_1004F5394(inited, (uint64_t)"computedMinRequiredVersionForFullFidelity", 41, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItemData.swift", 87, 2u, 259, (uint64_t)"Call to computedMinRequiredVersionForFullFidelity while current minRequiredVersion is higher than current: %{public}d", 117, 2u);
  }
  swift_bridgeObjectRelease(inited);
  v4 = swift_initStackObject(v1, v11);
  *(_OWORD *)(v4 + 16) = xmmword_100EF5E40;
  v5 = v0[5];
  *(_QWORD *)(v4 + 56) = &type metadata for UInt64;
  *(_QWORD *)(v4 + 64) = &protocol witness table for UInt64;
  *(_QWORD *)(v4 + 32) = v5;
  if (sub_1001E9730() < v5)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"computedMinRequiredVersionForFullFidelity", 41, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItemData.swift", 87, 2, 260, "Call to computedMinRequiredVersionForFullFidelity while current minRequiredVersionForFullFidelity is higher than current: %{public}d", 132, 2u, v4);
    sub_1004F5394(v4, (uint64_t)"computedMinRequiredVersionForFullFidelity", 41, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItemData.swift", 87, 2u, 260, (uint64_t)"Call to computedMinRequiredVersionForFullFidelity while current minRequiredVersionForFullFidelity is higher than current: %{public}d", 132, 2u);
  }
  swift_bridgeObjectRelease(v4);
  if (v0[5] >= 0x2000400000000uLL)
    v6 = v0[5];
  else
    v6 = 0x2000400000000;
  if (v0[4] == 0x2000400000000)
    v7 = v0[5];
  else
    v7 = v6;
  v8 = swift_initStackObject(v1, v10);
  *(_OWORD *)(v8 + 16) = xmmword_100EF5E40;
  *(_QWORD *)(v8 + 56) = &type metadata for UInt64;
  *(_QWORD *)(v8 + 64) = &protocol witness table for UInt64;
  *(_QWORD *)(v8 + 32) = v7;
  swift_bridgeObjectRelease(v8);
  return v7;
}

uint64_t sub_1005DAA88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t inited;
  unint64_t v3;
  _BYTE v5[72];

  v1 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v1, v5);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v3 = *(_QWORD *)(v0 + 24);
  *(_QWORD *)(inited + 56) = &type metadata for UInt64;
  *(_QWORD *)(inited + 64) = &protocol witness table for UInt64;
  *(_QWORD *)(inited + 32) = v3;
  if (sub_1001E9730() < v3)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"computedMinRequiredVersionMakesBoardUnsupported", 47, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItemData.swift", 87, 2, 276, "Call to computedMinRequiredVersionMakesBoardUnsupported while current minRequiredVersion is higher than current: %{public}d", 123, 2u, inited);
    sub_1004F5394(inited, (uint64_t)"computedMinRequiredVersionMakesBoardUnsupported", 47, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItemData.swift", 87, 2u, 276, (uint64_t)"Call to computedMinRequiredVersionMakesBoardUnsupported while current minRequiredVersion is higher than current: %{public}d", 123, 2u);
  }
  swift_bridgeObjectRelease(inited);
  return 0;
}

unint64_t sub_1005DAB90(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  uint64_t v6;
  unint64_t result;
  uint64_t v8;
  uint64_t v9;

  v4[3] = a1;
  v4[4] = a2;
  v4[5] = a3;
  if ((a4 & 1) != 0)
  {
    v6 = v4[2];
    if ((v6 & 1) == 0)
      v4[2] = v6 | 1;
  }
  result = sub_1005E1074();
  if ((a4 & 4) != 0)
  {
    v8 = v4[2];
    if ((v8 & 4) == 0)
      v4[2] = v8 | 4;
  }
  if ((a4 & 2) != 0)
  {
    v9 = v4[2];
    if ((v9 & 2) == 0)
      v4[2] = v9 | 2;
  }
  return result;
}

uint64_t sub_1005DABF4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  _BYTE v13[24];

  v1 = *v0;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, *(_QWORD *)(*v0 + 616), *(_QWORD *)(*v0 + 608), &protocol descriptor for CRLBoardItemCommonDataTypeSpecifying.NumRequirements, &unk_101119CA4);
  v4 = type metadata accessor for CRLBoardItemCommonAbstractCRDTData(0, AssociatedTypeWitness, *(_QWORD *)(v1 + 624), v3);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v13[-v6 - 8];
  v8 = (uint64_t)v0 + *(_QWORD *)(v1 + 632);
  v9 = swift_beginAccess(v8, v13, 0, 0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))(v7, v8, v4, v9);
  v10 = sub_1004B804C(&qword_1013E1A80);
  CRRegister.wrappedValue.getter(v10);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1005DACE0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  _BYTE v12[24];

  v1 = *v0;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, *(_QWORD *)(*v0 + 616), *(_QWORD *)(*v0 + 608), &protocol descriptor for CRLBoardItemCommonDataTypeSpecifying.NumRequirements, &unk_101119CA4);
  v4 = type metadata accessor for CRLBoardItemCommonAbstractCRDTData(0, AssociatedTypeWitness, *(_QWORD *)(v1 + 624), v3);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v12[-v6 - 8];
  v8 = (uint64_t)v0 + *(_QWORD *)(v1 + 632);
  v9 = swift_beginAccess(v8, v12, 0, 0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))(v7, v8, v4, v9);
  sub_1005DFA8C(v4);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1005DADC4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  _BYTE v12[24];

  v3 = *(_QWORD **)v1;
  v4 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v4);
  v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1004CB7BC(a1, (uint64_t)v6, (uint64_t *)&unk_1013E1A50);
  swift_beginAccess(v1 + *(_QWORD *)(*(_QWORD *)v1 + 632), v12, 33, 0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v3[77], v3[76], &protocol descriptor for CRLBoardItemCommonDataTypeSpecifying.NumRequirements, &unk_101119CA4);
  v9 = type metadata accessor for CRLBoardItemCommonAbstractCRDTData(0, AssociatedTypeWitness, v3[78], v8);
  sub_1005DFB20((uint64_t)v6, v9);
  swift_endAccess(v12);
  return sub_1004CB800(a1, (uint64_t *)&unk_1013E1A50);
}

id sub_1005DAEB8()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  char *v13;
  __n128 v14;
  double v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t inited;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  _BYTE v28[72];
  char v29[24];
  __int128 v30;
  float v31;
  unsigned __int8 v32;
  unsigned __int8 v33;
  unsigned __int8 v34;
  unsigned __int8 v35;

  v1 = v0;
  v2 = (_QWORD *)*v0;
  v3 = type metadata accessor for UUID(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v28[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v2[77], v2[76], &protocol descriptor for CRLBoardItemCommonDataTypeSpecifying.NumRequirements, &unk_101119CA4);
  v9 = type metadata accessor for CRLBoardItemCommonAbstractCRDTData(0, AssociatedTypeWitness, v2[78], v8);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v28[-v11];
  v13 = (char *)v1 + v2[79];
  v14 = swift_beginAccess(v13, v29, 0, 0);
  (*(void (**)(_BYTE *, char *, uint64_t, __n128))(v10 + 16))(v12, v13, v9, v14);
  v15 = sub_1005DFC10(v9, &v30);
  (*(void (**)(_BYTE *, uint64_t, double))(v10 + 8))(v12, v9, v15);
  v16 = objc_allocWithZone((Class)CRLCanvasInfoGeometry);
  v17 = objc_msgSend(v16, "initWithPosition:size:widthValid:heightValid:horizontalFlip:verticalFlip:angle:", v32, v33, v34, v35, *(float *)&v30, *((float *)&v30 + 1), *((float *)&v30 + 2), *((float *)&v30 + 3), v31);
  sub_1005E4184((uint64_t)&v30);
  if ((objc_msgSend(v17, "allValuesValidNumbers") & 1) == 0)
  {
    v18 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v18, v28);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v20 = sub_1005DABF4();
    v21 = UUID.uuidString.getter(v20);
    v23 = v22;
    (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = sub_1004CFC2C();
    *(_QWORD *)(inited + 32) = v21;
    *(_QWORD *)(inited + 40) = v23;
    swift_setDeallocating(inited);
    v24 = *(_QWORD *)(inited + 16);
    v25 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, v24, v25);
    v26 = objc_msgSend(objc_allocWithZone((Class)CRLCanvasInfoGeometry), "init");

    return v26;
  }
  return v17;
}

void sub_1005DB194(void *a1)
{
  uint64_t v1;
  _QWORD *v3;
  id v4;
  double v5;
  float v6;
  double v7;
  float v8;
  double v9;
  float v10;
  double v11;
  float v12;
  double v13;
  float v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  uint64_t AssociatedTypeWitness;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[24];
  _DWORD v23[5];
  unsigned __int8 v24;
  unsigned __int8 v25;
  unsigned __int8 v26;
  unsigned __int8 v27;
  _QWORD *v28;

  v3 = *(_QWORD **)v1;
  if ((objc_msgSend(a1, "allValuesValidNumbers") & 1) == 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"geometry", 8, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItemData.swift", 87, 2, 573, "Setting a new geometry with invalid numbers (NaN).", 50, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"geometry", 8, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItemData.swift", 87, 2u, 573, (uint64_t)"Setting a new geometry with invalid numbers (NaN).", 50, 2u);
  }
  v4 = a1;
  objc_msgSend(v4, "position");
  v6 = v5;
  v8 = v7;
  objc_msgSend(v4, "size");
  v10 = v9;
  v12 = v11;
  objc_msgSend(v4, "angle");
  v14 = v13;
  v15 = objc_msgSend(v4, "widthValid");
  v16 = objc_msgSend(v4, "heightValid");
  v17 = objc_msgSend(v4, "horizontalFlip");
  v18 = objc_msgSend(v4, "verticalFlip");

  *(float *)v23 = v6;
  *(float *)&v23[1] = v8;
  *(float *)&v23[2] = v10;
  *(float *)&v23[3] = v12;
  *(float *)&v23[4] = v14;
  v24 = v15;
  v25 = v16;
  v26 = v17;
  v27 = v18;
  v28 = _swiftEmptyDictionarySingleton;
  swift_beginAccess(v1 + *(_QWORD *)(*(_QWORD *)v1 + 632), v22, 33, 0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v3[77], v3[76], &protocol descriptor for CRLBoardItemCommonDataTypeSpecifying.NumRequirements, &unk_101119CA4);
  v21 = type metadata accessor for CRLBoardItemCommonAbstractCRDTData(0, AssociatedTypeWitness, v3[78], v20);
  sub_1005DFCB0((uint64_t)v23, v21);
  swift_endAccess(v22);

}

uint64_t sub_1005DB3B8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[32];

  v1 = *v0;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, *(_QWORD *)(*v0 + 616), *(_QWORD *)(*v0 + 608), &protocol descriptor for CRLBoardItemCommonDataTypeSpecifying.NumRequirements, &unk_101119CA4);
  v4 = type metadata accessor for CRLBoardItemCommonAbstractCRDTData(0, AssociatedTypeWitness, *(_QWORD *)(v1 + 624), v3);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v13[-v6];
  v8 = (uint64_t)v0 + *(_QWORD *)(v1 + 632);
  v9 = swift_beginAccess(v8, v13, 0, 0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v5 + 16))(v7, v8, v4, v9);
  v10 = sub_1004B804C((uint64_t *)&unk_1013F5590);
  CRRegister.wrappedValue.getter(v10);
  v11 = v13[31];
  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  return v11;
}

uint64_t sub_1005DB4AC(char a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  _BYTE v9[31];
  char v10;

  v3 = *(_QWORD **)v1;
  swift_beginAccess(v1 + *(_QWORD *)(*(_QWORD *)v1 + 632), v9, 33, 0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v3[77], v3[76], &protocol descriptor for CRLBoardItemCommonDataTypeSpecifying.NumRequirements, &unk_101119CA4);
  type metadata accessor for CRLBoardItemCommonAbstractCRDTData(0, AssociatedTypeWitness, v3[78], v5);
  v10 = a1;
  v6 = sub_1004B804C((uint64_t *)&unk_1013F5590);
  CRRegister.wrappedValue.setter(&v10, v6, v7);
  return swift_endAccess(v9);
}

uint64_t sub_1005DB554()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[32];

  v1 = *v0;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, *(_QWORD *)(*v0 + 616), *(_QWORD *)(*v0 + 608), &protocol descriptor for CRLBoardItemCommonDataTypeSpecifying.NumRequirements, &unk_101119CA4);
  v4 = type metadata accessor for CRLBoardItemCommonAbstractCRDTData(0, AssociatedTypeWitness, *(_QWORD *)(v1 + 624), v3);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v13[-v6];
  v8 = (uint64_t)v0 + *(_QWORD *)(v1 + 632);
  v9 = swift_beginAccess(v8, v13, 0, 0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v5 + 16))(v7, v8, v4, v9);
  v10 = sub_1004B804C((uint64_t *)&unk_1013F5590);
  CRRegister.wrappedValue.getter(v10);
  v11 = v13[31];
  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  return v11;
}

uint64_t sub_1005DB648(char a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  _BYTE v9[31];
  char v10;

  v3 = *(_QWORD **)v1;
  swift_beginAccess(v1 + *(_QWORD *)(*(_QWORD *)v1 + 632), v9, 33, 0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v3[77], v3[76], &protocol descriptor for CRLBoardItemCommonDataTypeSpecifying.NumRequirements, &unk_101119CA4);
  type metadata accessor for CRLBoardItemCommonAbstractCRDTData(0, AssociatedTypeWitness, v3[78], v5);
  v10 = a1;
  v6 = sub_1004B804C((uint64_t *)&unk_1013F5590);
  CRRegister.wrappedValue.setter(&v10, v6, v7);
  return swift_endAccess(v9);
}

uint64_t sub_1005DB6F0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v14[24];
  uint64_t v15;

  v1 = *v0;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, *(_QWORD *)(*v0 + 616), *(_QWORD *)(*v0 + 608), &protocol descriptor for CRLBoardItemCommonDataTypeSpecifying.NumRequirements, &unk_101119CA4);
  v4 = type metadata accessor for CRLBoardItemCommonAbstractCRDTData(0, AssociatedTypeWitness, *(_QWORD *)(v1 + 624), v3);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v14[-v6 - 8];
  v8 = (uint64_t)v0 + *(_QWORD *)(v1 + 632);
  v9 = swift_beginAccess(v8, v14, 0, 0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))(v7, v8, v4, v9);
  v10 = sub_1004B804C(&qword_1013E1980);
  CRRegister.wrappedValue.getter(v10);
  v11 = v15;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v11;
}

uint64_t sub_1005DB7E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  _BYTE v11[24];
  _QWORD v12[2];

  v5 = *(_QWORD **)v2;
  swift_beginAccess(v2 + *(_QWORD *)(*(_QWORD *)v2 + 632), v11, 33, 0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v5[77], v5[76], &protocol descriptor for CRLBoardItemCommonDataTypeSpecifying.NumRequirements, &unk_101119CA4);
  type metadata accessor for CRLBoardItemCommonAbstractCRDTData(0, AssociatedTypeWitness, v5[78], v7);
  v12[0] = a1;
  v12[1] = a2;
  v8 = sub_1004B804C(&qword_1013E1980);
  CRRegister.wrappedValue.setter(v12, v8, v9);
  return swift_endAccess(v11);
}

id sub_1005DB894()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  id v10;
  CGColorSpace *v11;
  double v12;
  double v13;
  double v14;
  double v15;
  id v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20[16];
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  _OWORD v35[2];
  _OWORD v36[5];
  uint64_t v37;
  _BYTE v38[16];
  float v39;
  uint64_t v40;

  v1 = *v0;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, *(_QWORD *)(*v0 + 616), *(_QWORD *)(*v0 + 608), &protocol descriptor for CRLBoardItemCommonDataTypeSpecifying.NumRequirements, &unk_101119CA4);
  v4 = type metadata accessor for CRLBoardItemCommonAbstractCRDTData(0, AssociatedTypeWitness, *(_QWORD *)(v1 + 624), v3);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v18 - v6;
  v8 = (uint64_t)v0 + *(_QWORD *)(v1 + 632);
  v9 = swift_beginAccess(v8, &v19, 0, 0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))(v7, v8, v4, v9);
  sub_1005DF9C8((uint64_t)v20);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1004C4938((uint64_t)v20, (uint64_t)&v21, (uint64_t *)&unk_1013F02D0);
  v10 = 0;
  if (sub_1005E3F34((uint64_t)&v21) != 1)
  {
    v33 = v25;
    v34 = v26;
    v35[0] = v27;
    v35[1] = v28;
    v29 = v21;
    v30 = v22;
    v31 = v23;
    v32 = v24;
    sub_1005E40F4();
    v36[2] = v23;
    v36[3] = v24;
    v36[4] = v25;
    v37 = v26;
    v36[0] = v21;
    v36[1] = v22;
    sub_1005E4130(v36);
    v11 = sub_1006C52C0((uint64_t)v36);
    v12 = *((float *)&v34 + 2);
    v13 = *((float *)&v34 + 3);
    v14 = *(float *)v35;
    v15 = *((float *)v35 + 1);
    sub_1004C4938((uint64_t)v35 + 8, (uint64_t)v38, &qword_1013E6B28);
    sub_1004C4938((uint64_t)v38, (uint64_t)&v39, &qword_1013E6B28);
    if (v40)
      v16 = objc_msgSend(objc_allocWithZone((Class)CRLCurvedShadow), "initWithOffset:angle:radius:curve:opacity:color:enabled:", v11, 1, v13, v12, v14, v39, v15);
    else
      v16 = objc_msgSend(objc_allocWithZone((Class)CRLDropShadow), "initWithAngle:offset:radius:opacity:color:enabled:", v11, 1, v12, v13, v14, v15);
    v10 = v16;

    sub_1005E402C(v20);
  }
  return v10;
}

void sub_1005DBAFC(void *a1)
{
  uint64_t v1;
  _QWORD *v2;
  id v3;
  Swift::String v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[24];
  _OWORD v10[8];
  _BYTE v11[128];

  v2 = *(_QWORD **)v1;
  if (a1)
  {
    v3 = a1;
    sub_10080C2C4(v3, (uint64_t)v10);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)((CKRecordID)v10, v4);
    sub_1004C4938((uint64_t)v10, (uint64_t)v11, (uint64_t *)&unk_1013F02D0);
    swift_beginAccess(v1 + *(_QWORD *)(*(_QWORD *)v1 + 632), v9, 33, 0);
    AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v2[77], v2[76], &protocol descriptor for CRLBoardItemCommonDataTypeSpecifying.NumRequirements, &unk_101119CA4);
    type metadata accessor for CRLBoardItemCommonAbstractCRDTData(0, AssociatedTypeWitness, v2[78], v6);
    sub_1005DFA38((uint64_t)v11);
    swift_endAccess(v9);

  }
  else
  {
    sub_1004C3A10(v10);
    sub_1004C4938((uint64_t)v10, (uint64_t)v11, (uint64_t *)&unk_1013F02D0);
    swift_beginAccess(v1 + *(_QWORD *)(*(_QWORD *)v1 + 632), v9, 33, 0);
    v7 = swift_getAssociatedTypeWitness(255, v2[77], v2[76], &protocol descriptor for CRLBoardItemCommonDataTypeSpecifying.NumRequirements, &unk_101119CA4);
    type metadata accessor for CRLBoardItemCommonAbstractCRDTData(0, v7, v2[78], v8);
    sub_1005DFA38((uint64_t)v11);
    swift_endAccess(v9);
  }
}

void sub_1005DBC44(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t WitnessTable;
  _BYTE v14[24];
  _BYTE v15[24];

  v3 = *v1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, *(_QWORD *)(*v1 + 616), *(_QWORD *)(*v1 + 608), &protocol descriptor for CRLBoardItemCommonDataTypeSpecifying.NumRequirements, &unk_101119CA4);
  v6 = type metadata accessor for CRLBoardItemCommonAbstractCRDTData(0, AssociatedTypeWitness, *(_QWORD *)(v3 + 624), v5);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v14[-v8];
  v10 = swift_dynamicCastClass(a1, v3);
  if (v10)
  {
    v11 = v10 + *(_QWORD *)(*(_QWORD *)v10 + 632);
    v12 = swift_beginAccess(v11, v15, 0, 0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v7 + 16))(v9, v11, v6, v12);
    swift_beginAccess((char *)v1 + *(_QWORD *)(*v1 + 632), v14, 33, 0);
    swift_retain(a1);
    WitnessTable = swift_getWitnessTable(&unk_100EFD5F4, v6);
    CRStruct_6.merge(_:)(v9, v6, WitnessTable);
    (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
    swift_endAccess(v14);
    swift_release(a1);
  }
  else
  {
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001ALL, 0x8000000100FB8B70, "Freeform/CRLBoardItemData.swift", 31, 2, 653, 0);
    __break(1u);
  }
}

uint64_t sub_1005DBDD8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t WitnessTable;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v24[24];

  v5 = *v2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, *(_QWORD *)(*v2 + 616), *(_QWORD *)(*v2 + 608), &protocol descriptor for CRLBoardItemCommonDataTypeSpecifying.NumRequirements, &unk_101119CA4);
  v8 = type metadata accessor for CRLBoardItemCommonAbstractCRDTData(0, AssociatedTypeWitness, *(_QWORD *)(v5 + 624), v7);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v24[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v12);
  v14 = &v24[-v13 - 8];
  v15 = (uint64_t)v2 + *(_QWORD *)(v5 + 632);
  v16 = swift_beginAccess(v15, v24, 0, 0);
  if ((a2 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16))(v11, v15, v8, v16);
    WitnessTable = swift_getWitnessTable(&unk_100EFD5F4, v8);
    CRStruct_6.copy(renamingReferences:)(0, v8, WitnessTable);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16))(v14, v15, v8, v16);
  }
  if (qword_1013DCB10 != -1)
    swift_once(&qword_1013DCB10, sub_1005DE88C);
  v18 = type metadata accessor for CRCodableVersion(0);
  v19 = sub_1004F2A1C(v18, (uint64_t)qword_10147EB08);
  v20 = swift_getWitnessTable(&unk_100EFD44C, v8);
  v21 = CRDT.serializedData(_:version:)(a1, v19, v8, v20);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  return v21;
}

uint64_t sub_1005DBFC0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  void (*v17)(_BYTE *, uint64_t, uint64_t, __n128);
  uint64_t v18;
  __n128 v19;
  uint64_t WitnessTable;
  void (*v21)(_BYTE *, uint64_t);
  uint64_t result;
  _BYTE v23[24];
  char v24[24];

  v3 = *v1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, *(_QWORD *)(*v1 + 616), *(_QWORD *)(*v1 + 608), &protocol descriptor for CRLBoardItemCommonDataTypeSpecifying.NumRequirements, &unk_101119CA4);
  v6 = type metadata accessor for CRLBoardItemCommonAbstractCRDTData(0, AssociatedTypeWitness, *(_QWORD *)(v3 + 624), v5);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v23[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  v12 = &v23[-v11];
  v13 = swift_dynamicCastClass(a1, v3);
  if (v13)
  {
    v14 = v13;
    v15 = (uint64_t)v1 + *(_QWORD *)(v3 + 632);
    v16 = swift_beginAccess(v15, v24, 0, 0);
    v17 = *(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v7 + 16);
    v17(v12, v15, v6, v16);
    v18 = v14 + *(_QWORD *)(*(_QWORD *)v14 + 632);
    v19 = swift_beginAccess(v18, v23, 0, 0);
    v17(v9, v18, v6, v19);
    WitnessTable = swift_getWitnessTable(&unk_100EFD5F4, v6);
    LOBYTE(v18) = CRStruct_6.hasDelta(from:)(v9, v6, WitnessTable);
    v21 = *(void (**)(_BYTE *, uint64_t))(v7 + 8);
    v21(v9, v6);
    v21(v12, v6);
    return v18 & 1;
  }
  else
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100FB8B40, "Freeform/CRLBoardItemData.swift", 31, 2, 623, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_1005DC18C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t, __n128);
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  __n128 v48;
  uint64_t result;
  uint64_t v50;
  char *v51;
  uint64_t WitnessTable;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58[24];
  char v59[24];
  uint64_t v60;

  v3 = v2;
  v57 = a2;
  v5 = *v2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, *(_QWORD *)(*v2 + 616), *(_QWORD *)(*v2 + 608), &protocol descriptor for CRLBoardItemCommonDataTypeSpecifying.NumRequirements, &unk_101119CA4);
  v8 = type metadata accessor for CRLBoardItemCommonAbstractCRDTData(0, AssociatedTypeWitness, *(_QWORD *)(v5 + 624), v7);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v50 - v13;
  WitnessTable = swift_getWitnessTable(&unk_100EFD5F4, v8);
  v55 = type metadata accessor for CRStructMergeableDelta_6(255, v8);
  v15 = type metadata accessor for Optional(0, v55);
  v53 = *(_QWORD *)(v15 - 8);
  v54 = v15;
  __chkstk_darwin(v15);
  v17 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v50 - v19;
  v56 = a1;
  v21 = swift_dynamicCastClass(a1, v5);
  if (v21)
  {
    v22 = v21;
    v23 = (uint64_t)v3 + *(_QWORD *)(v5 + 632);
    v24 = swift_beginAccess(v23, v59, 0, 0);
    v25 = v9;
    v26 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16);
    v26(v14, v23, v8, v24);
    v27 = v22 + *(_QWORD *)(*(_QWORD *)v22 + 632);
    v28 = swift_beginAccess(v27, v58, 0, 0);
    v26(v11, v27, v8, v28);
    v29 = v56;
    swift_retain(v56);
    v30 = v57;
    CRStruct_6.delta(_:from:)(v57, v11, v8, WitnessTable);
    v31 = *(void (**)(char *, uint64_t))(v25 + 8);
    v31(v11, v8);
    v31(v14, v8);
    v32 = v53;
    v33 = v54;
    (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v17, v20, v54);
    v34 = v55;
    v35 = *(_QWORD *)(v55 - 8);
    v36 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48))(v17, 1, v55);
    v37 = v30;
    v38 = v17;
    v39 = v32;
    if (v36 == 1)
    {
      v40 = *(void (**)(char *, uint64_t))(v32 + 8);
      v40(v20, v33);
      v41 = swift_release(v29);
      ((void (*)(char *, uint64_t, __n128))v40)(v38, v33, v41);
      return 0;
    }
    else
    {
      v51 = v38;
      WitnessTable = (uint64_t)v20;
      v43 = v60;
      if (qword_1013DCB10 != -1)
        swift_once(&qword_1013DCB10, sub_1005DE88C);
      v44 = type metadata accessor for CRCodableVersion(0);
      v42 = sub_1004F2A1C(v44, (uint64_t)qword_10147EB08);
      v45 = swift_getWitnessTable(&protocol conformance descriptor for CRStructMergeableDelta_6<A>, v34);
      v46 = v51;
      v47 = PartialCRDT.deltaSerializedData(_:version:)(v37, v42, v34, v45);
      if (!v43)
        v42 = v47;
      v48 = swift_release(v29);
      (*(void (**)(uint64_t, uint64_t, __n128))(v39 + 8))(WitnessTable, v33, v48);
      (*(void (**)(char *, uint64_t))(v35 + 8))(v46, v34);
    }
    return v42;
  }
  else
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000031, 0x8000000100FAF260, "Freeform/CRLBoardItemData.swift", 31, 2, 634, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_1005DC558(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t WitnessTable;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t inited;
  id v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  char *v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48[112];
  _BYTE v49[32];
  uint64_t v50;

  v5 = *(_QWORD **)v2;
  v43 = type metadata accessor for UUID(0);
  v42 = *(_QWORD *)(v43 - 8);
  __chkstk_darwin(v43);
  v41 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v5[77];
  v44 = v5[76];
  v45 = v7;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v7, v44, &protocol descriptor for CRLBoardItemCommonDataTypeSpecifying.NumRequirements, &unk_101119CA4);
  v9 = v5[78];
  v11 = type metadata accessor for CRLBoardItemCommonAbstractCRDTData(255, AssociatedTypeWitness, v9, v10);
  WitnessTable = swift_getWitnessTable(&unk_100EFD5F4, v11);
  v13 = type metadata accessor for CRStructMergeableDelta_6(0, v11);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v36 - v15;
  sub_1004BE310(a1, a2);
  v17 = swift_getWitnessTable(&protocol conformance descriptor for CRStructMergeableDelta_6<A>, v13);
  LOBYTE(v2) = v13;
  v18 = v47;
  PartialCRDT.init(serializedData:)(a1, a2, v13, v17);
  if (!v18)
  {
    v40 = v9;
    v47 = v14;
    v19 = v46;
    swift_beginAccess(v46 + *(_QWORD *)(*(_QWORD *)v46 + 632), v49, 33, 0);
    LODWORD(v2) = CRStruct_6.merge(delta:)(v16, v11, WitnessTable);
    swift_endAccess(v49);
    if ((v2 & 1) == 0)
    {
      v38 = v2;
      v39 = 0;
      v37 = v16;
      if (qword_1013DD888 != -1)
        swift_once(&qword_1013DD888, sub_100A05DE4);
      swift_beginAccess(&static OS_os_log.realTimeSync, v49, 0, 0);
      v2 = static OS_os_log.realTimeSync;
      v20 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v20, v48);
      *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
      v22 = (id)v2;
      v23 = v41;
      v24 = sub_1005DABF4();
      v25 = UUID.uuidString.getter(v24);
      v27 = v26;
      (*(void (**)(char *, uint64_t))(v42 + 8))(v23, v43);
      *(_QWORD *)(inited + 56) = &type metadata for String;
      v28 = sub_1004CFC2C();
      *(_QWORD *)(inited + 64) = v28;
      *(_QWORD *)(inited + 32) = v25;
      *(_QWORD *)(inited + 40) = v27;
      v50 = v19;
      v29 = type metadata accessor for CRLBoardItemCommonAbstractData(0, v44, v45, v40);
      swift_retain(v19);
      v30 = String.init<A>(describing:)(&v50, v29);
      *(_QWORD *)(inited + 96) = &type metadata for String;
      *(_QWORD *)(inited + 104) = v28;
      *(_QWORD *)(inited + 72) = v30;
      *(_QWORD *)(inited + 80) = v31;
      v32 = static os_log_type_t.error.getter(v30);
      sub_100A06EBC((uint64_t)v22, &_mh_execute_header, v32, "Delta failed to apply for %{public}@%{public}@", 46, 2, inited);
      swift_setDeallocating(inited);
      v33 = *(_QWORD *)(inited + 16);
      v34 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(inited + 32, v33, v34);

      v16 = v37;
      LOBYTE(v2) = v38;
    }
    (*(void (**)(char *, uint64_t))(v47 + 8))(v16, v13);
  }
  return v2 & 1;
}

uint64_t sub_1005DC8CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t (*v22)(void);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;

  v8 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v8);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for UUID(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)v3 + 488))(a1, a2, v13);
  if (!v4)
  {
    v39 = result;
    v40 = v17;
    v18 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 504))(a1, a2);
    v20 = v19;
    if (v40 >> 60 == 15 && v19 >> 60 == 15)
    {
      v33 = type metadata accessor for CRLBoardItemDeltaChange(0);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(a3, 1, 1, v33);
    }
    else
    {
      v22 = *(uint64_t (**)(void))(*(_QWORD *)v3 + 256);
      v38 = v18;
      v23 = v22();
      v24 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 264))(v23);
      v36 = *(_OWORD *)(v3 + 24);
      v35 = *(_QWORD *)(v3 + 40);
      v37 = *(_QWORD *)(v3 + 16);
      v25 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 408))(v24);
      if ((v26 & 1) != 0)
        v27 = v25 + 2;
      else
        v27 = v25;
      (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(a3, v15, v11);
      v28 = (int *)type metadata accessor for CRLBoardItemDeltaChange(0);
      sub_1004C4938((uint64_t)v10, a3 + v28[5], (uint64_t *)&unk_1013E1A50);
      v29 = a3 + v28[6];
      *(_OWORD *)v29 = v36;
      *(_QWORD *)(v29 + 16) = v35;
      *(_QWORD *)(a3 + v28[7]) = v37;
      *(_QWORD *)(a3 + v28[8]) = v27;
      v30 = (uint64_t *)(a3 + v28[9]);
      v31 = v40;
      *v30 = v39;
      v30[1] = v31;
      v32 = (uint64_t *)(a3 + v28[10]);
      *v32 = v38;
      v32[1] = v20;
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)v28 - 1) + 56))(a3, 0, 1, v28);
    }
  }
  return result;
}

void sub_1005DCB20(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  int *TupleTypeMetadata;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  __n128 v25;
  void (*v26)(char *, char *, uint64_t, __n128);
  uint64_t v27;
  __n128 v28;
  uint64_t WitnessTable;
  void (*v30)(char *, uint64_t);
  __n128 v31;
  _QWORD *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  _QWORD *v46;
  _QWORD *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  char *v56;
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  char *v62;
  _QWORD *v63;
  uint64_t v64;
  char v65[24];
  _QWORD v66[2];
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v3 = v2;
  v63 = a2;
  v5 = (_QWORD *)*v2;
  v66[0] = sub_1004CB6A4(&qword_1013E6B08);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v5[77], v5[76], &protocol descriptor for CRLBoardItemCommonDataTypeSpecifying.NumRequirements, &unk_101119CA4);
  v7 = v5[78];
  v61 = type metadata accessor for CRRegister.MutatingAction(255, AssociatedTypeWitness, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v7 + 8) + 8) + 8));
  v66[1] = type metadata accessor for Optional(255, v61);
  v67 = sub_1004CB6A4(&qword_1013E6B10);
  v68 = v67;
  v69 = sub_1004CB6A4(&qword_1013E6B18);
  v70 = sub_1004CB6A4(&qword_1013E6B20);
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata(0, 6, v66, 0, 0);
  v62 = (char *)*((_QWORD *)TupleTypeMetadata - 1);
  __chkstk_darwin(TupleTypeMetadata);
  v10 = (char *)&v53 - v9;
  v12 = type metadata accessor for CRLBoardItemCommonAbstractCRDTData(0, AssociatedTypeWitness, v7, v11);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v53 - v17;
  v19 = type metadata accessor for Optional(0, TupleTypeMetadata);
  v59 = *(char **)(v19 - 8);
  v60 = (char *)v19;
  __chkstk_darwin(v19);
  v21 = (char *)&v53 - v20;
  v64 = a1;
  v22 = swift_dynamicCastClass(a1, v5);
  if (v22)
  {
    v23 = v22;
    v24 = (char *)v3 + v5[79];
    v25 = swift_beginAccess(v24, v66, 0, 0);
    v26 = *(void (**)(char *, char *, uint64_t, __n128))(v13 + 16);
    v26(v18, v24, v12, v25);
    v27 = v23 + *(_QWORD *)(*(_QWORD *)v23 + 632);
    v28 = swift_beginAccess(v27, v65, 0, 0);
    v26(v15, (char *)v27, v12, v28);
    swift_retain(v64);
    WitnessTable = swift_getWitnessTable(&unk_100EFD5F4, v12);
    CRStruct_6.actionUndoingDifference(from:)(v15, v12, WitnessTable);
    v30 = *(void (**)(char *, uint64_t))(v13 + 8);
    v30(v15, v12);
    v30(v18, v12);
    if ((*((unsigned int (**)(char *, uint64_t, int *))v62 + 6))(v21, 1, TupleTypeMetadata) == 1)
    {
      v31 = swift_release(v64);
      (*((void (**)(char *, char *, __n128))v59 + 1))(v21, v60, v31);
      v32 = v63;
      *(_OWORD *)v63 = 0u;
      *((_OWORD *)v32 + 1) = 0u;
    }
    else
    {
      v33 = TupleTypeMetadata[12];
      v34 = &v21[v33];
      v35 = TupleTypeMetadata[16];
      v54 = &v21[v35];
      v36 = TupleTypeMetadata[20];
      v55 = &v21[v36];
      v37 = TupleTypeMetadata[24];
      v56 = &v21[v37];
      v38 = TupleTypeMetadata[28];
      v39 = &v10[v33];
      v62 = &v10[v33];
      v40 = (uint64_t)&v10[v35];
      v41 = (uint64_t)&v10[v36];
      v59 = &v10[v35];
      v60 = &v10[v36];
      v42 = (uint64_t)&v10[v37];
      v43 = (uint64_t)&v10[v38];
      v57 = &v21[v38];
      v58 = &v10[v38];
      sub_1004C4938((uint64_t)v21, (uint64_t)v10, &qword_1013E6B08);
      v44 = type metadata accessor for Optional(0, v61);
      v45 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32);
      v45(v39, v34, v44);
      sub_1004C4938((uint64_t)v54, v40, &qword_1013E6B10);
      sub_1004C4938((uint64_t)v55, v41, &qword_1013E6B10);
      sub_1004C4938((uint64_t)v56, v42, &qword_1013E6B18);
      sub_1004C4938((uint64_t)v57, v43, &qword_1013E6B20);
      v46 = v63;
      v63[3] = TupleTypeMetadata;
      v47 = sub_10050D1B0(v46);
      v48 = (char *)v47 + TupleTypeMetadata[12];
      v49 = (uint64_t)v47 + TupleTypeMetadata[16];
      v50 = (uint64_t)v47 + TupleTypeMetadata[20];
      v51 = (uint64_t)v47 + TupleTypeMetadata[24];
      v52 = (uint64_t)v47 + TupleTypeMetadata[28];
      sub_1004C4938((uint64_t)v10, (uint64_t)v47, &qword_1013E6B08);
      v45(v48, v62, v44);
      sub_1004C4938((uint64_t)v59, v49, &qword_1013E6B10);
      sub_1004C4938((uint64_t)v60, v50, &qword_1013E6B10);
      sub_1004C4938(v42, v51, &qword_1013E6B18);
      sub_1004C4938((uint64_t)v58, v52, &qword_1013E6B20);
      swift_release(v64);
    }
  }
  else
  {
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002ELL, 0x8000000100FB8B10, "Freeform/CRLBoardItemData.swift", 31, 2, 662, 0);
    __break(1u);
  }
}

_QWORD *sub_1005DCFC4(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t TupleTypeMetadata;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  void (*v39)(char *, uint64_t, uint64_t, __n128);
  uint64_t v40;
  __n128 v41;
  uint64_t WitnessTable;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  __n128 v47;
  _QWORD *v48;
  int *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  int v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  unint64_t v107;
  unint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD *v116;
  unint64_t v117;
  unint64_t v118;
  _QWORD *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  _QWORD *v126;
  unint64_t v127;
  unint64_t v128;
  _QWORD *v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  __n128 v140;
  uint64_t v141;
  int *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  unint64_t v148;
  _QWORD *v149;
  __n128 v150;
  _QWORD *result;
  _QWORD *v152;
  _QWORD *v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  char *v162;
  char *v163;
  int *v164;
  char *v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  char v179[80];
  char v180[8];
  _QWORD v181[6];

  v3 = (_QWORD *)*v1;
  strcpy(v179, "id parentAffinity locked aspectRatioLocked accessibilityDescription shadow ");
  v181[0] = sub_1004CB6A4(&qword_1013E9C40);
  v4 = v3[78];
  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v4 + 8) + 8) + 8) + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v3[77], v3[76], &protocol descriptor for CRLBoardItemCommonDataTypeSpecifying.NumRequirements, &unk_101119CA4);
  v167 = swift_getAssociatedTypeWitness(255, v5, AssociatedTypeWitness, &protocol requirements base descriptor for CRType, &associated type descriptor for CRType.ObservableDifference);
  v181[1] = type metadata accessor for Optional(255, v167);
  v181[2] = v181[0];
  v181[3] = v181[0];
  v181[4] = v181[0];
  v181[5] = v181[0];
  TupleTypeMetadata = swift_getTupleTypeMetadata(0, 65542, v181, v179, 0);
  v170 = *(_QWORD *)(TupleTypeMetadata - 8);
  __chkstk_darwin(TupleTypeMetadata);
  v161 = (uint64_t)&v154 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v163 = (char *)&v154 - v10;
  __chkstk_darwin(v11);
  v162 = (char *)&v154 - v12;
  __chkstk_darwin(v13);
  v160 = (char *)&v154 - v14;
  __chkstk_darwin(v15);
  v159 = (uint64_t)&v154 - v16;
  __chkstk_darwin(v17);
  v158 = (uint64_t)&v154 - v18;
  __chkstk_darwin(v19);
  v178 = (uint64_t)&v154 - v20;
  v22 = type metadata accessor for CRLBoardItemCommonAbstractCRDTData(0, AssociatedTypeWitness, v4, v21);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v25 = (char *)&v154 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v28 = (char *)&v154 - v27;
  v164 = (int *)TupleTypeMetadata;
  v169 = type metadata accessor for Optional(0, TupleTypeMetadata);
  v168 = *(_QWORD *)(v169 - 8);
  __chkstk_darwin(v169);
  v30 = (char *)&v154 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v33 = (char *)&v154 - v32;
  v34 = a1;
  v35 = swift_dynamicCastClass(a1, v3);
  if (v35)
  {
    v36 = v35;
    v37 = v177 + v3[79];
    v38 = swift_beginAccess(v37, v181, 0, 0);
    v39 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v23 + 16);
    v39(v28, v37, v22, v38);
    v40 = v36 + *(_QWORD *)(*(_QWORD *)v36 + 632);
    v41 = swift_beginAccess(v40, v180, 0, 0);
    v39(v25, v40, v22, v41);
    swift_retain(v34);
    WitnessTable = swift_getWitnessTable(&unk_100EFD3EC, v22);
    CRType.observableDifference(from:)(v25, v22, WitnessTable);
    v43 = *(void (**)(char *, uint64_t))(v23 + 8);
    v43(v25, v22);
    v43(v28, v22);
    v44 = v168;
    v45 = v169;
    (*(void (**)(char *, char *, uint64_t))(v168 + 16))(v30, v33, v169);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v170 + 48))(v30, 1, v164) == 1)
    {
      v46 = *(void (**)(char *, uint64_t))(v44 + 8);
      v46(v33, v45);
      v47 = swift_release(v34);
      ((void (*)(char *, uint64_t, __n128))v46)(v30, v45, v47);
      return _swiftEmptyArrayStorage;
    }
    else
    {
      v155 = v33;
      v156 = v34;
      v49 = v164;
      v50 = v164[12];
      v51 = v178;
      v52 = v178 + v50;
      v173 = v178 + v50;
      v53 = v164[16];
      v54 = v178 + v53;
      v174 = v178 + v53;
      v55 = v164[20];
      v56 = v178 + v55;
      v175 = v178 + v55;
      v57 = v164[24];
      v176 = v178 + v57;
      v58 = v164[28];
      v59 = v178 + v58;
      v177 = v178 + v58;
      v60 = &v30[v50];
      v165 = &v30[v53];
      v166 = &v30[v55];
      v171 = &v30[v57];
      v172 = &v30[v58];
      sub_1004C4938((uint64_t)v30, v178, &qword_1013E9C40);
      v61 = type metadata accessor for Optional(0, v167);
      v62 = *(_QWORD *)(v61 - 8);
      (*(void (**)(uint64_t, char *, uint64_t))(v62 + 32))(v52, v60, v61);
      sub_1004C4938((uint64_t)v165, v54, &qword_1013E9C40);
      sub_1004C4938((uint64_t)v166, v56, &qword_1013E9C40);
      v63 = v176;
      sub_1004C4938((uint64_t)v171, v176, &qword_1013E9C40);
      sub_1004C4938((uint64_t)v172, v59, &qword_1013E9C40);
      v64 = v158;
      v65 = v158 + v49[12];
      v66 = v158 + v49[16];
      v67 = v158 + v49[20];
      v172 = (char *)(v158 + v49[24]);
      v68 = v158 + v49[28];
      v69 = v51;
      v70 = v62;
      v71 = v65;
      sub_1004CB7BC(v69, v158, &qword_1013E9C40);
      v171 = *(char **)(v70 + 16);
      ((void (*)(uint64_t, uint64_t, uint64_t))v171)(v71, v173, v61);
      sub_1004CB7BC(v174, v66, &qword_1013E9C40);
      sub_1004CB7BC(v175, v67, &qword_1013E9C40);
      v72 = v63;
      v73 = v172;
      sub_1004CB7BC(v72, (uint64_t)v172, &qword_1013E9C40);
      sub_1004CB7BC(v177, v68, &qword_1013E9C40);
      v74 = type metadata accessor for CRValueObservableDifference(0);
      v75 = *(char **)(*(_QWORD *)(v74 - 8) + 48);
      v166 = (char *)v74;
      v165 = v75;
      v76 = ((uint64_t (*)(uint64_t, uint64_t))v75)(v64, 1);
      v157 = v61;
      if (v76 == 1)
      {
        sub_1004CB800(v68, &qword_1013E9C40);
        sub_1004CB800((uint64_t)v73, &qword_1013E9C40);
        sub_1004CB800(v67, &qword_1013E9C40);
        sub_1004CB800(v66, &qword_1013E9C40);
        v172 = *(char **)(v70 + 8);
        ((void (*)(uint64_t, uint64_t))v172)(v71, v61);
        sub_1004CB800(v64, &qword_1013E9C40);
        v77 = _swiftEmptyArrayStorage;
        v78 = v178;
        v79 = v177;
      }
      else
      {
        sub_1004CB800(v64, &qword_1013E9C40);
        sub_1004CB800(v68, &qword_1013E9C40);
        sub_1004CB800((uint64_t)v73, &qword_1013E9C40);
        sub_1004CB800(v67, &qword_1013E9C40);
        sub_1004CB800(v66, &qword_1013E9C40);
        v172 = *(char **)(v70 + 8);
        ((void (*)(uint64_t, uint64_t))v172)(v71, v61);
        v77 = sub_100D0EF94(0, 1, 1, _swiftEmptyArrayStorage);
        v81 = v77[2];
        v80 = v77[3];
        if (v81 >= v80 >> 1)
          v77 = sub_100D0EF94((_QWORD *)(v80 > 1), v81 + 1, 1, v77);
        v78 = v178;
        v79 = v177;
        v77[2] = v81 + 1;
        v82 = &v77[2 * v81];
        v82[4] = 25705;
        v82[5] = 0xE200000000000000;
      }
      v83 = v159;
      v84 = v159 + v49[12];
      v85 = v159 + v49[16];
      v86 = v159 + v49[20];
      v87 = v159 + v49[24];
      v88 = v159 + v49[28];
      sub_1004CB7BC(v78, v159, &qword_1013E9C40);
      ((void (*)(uint64_t, uint64_t, uint64_t))v171)(v84, v173, v157);
      v159 = v85;
      sub_1004CB7BC(v174, v85, &qword_1013E9C40);
      sub_1004CB7BC(v175, v86, &qword_1013E9C40);
      sub_1004CB7BC(v176, v87, &qword_1013E9C40);
      sub_1004CB7BC(v79, v88, &qword_1013E9C40);
      if ((*(unsigned int (**)(uint64_t, uint64_t))(*(_QWORD *)(v167 - 8) + 48))(v84, 1) == 1)
      {
        v167 = (uint64_t)v77;
        sub_1004CB800(v88, &qword_1013E9C40);
        sub_1004CB800(v87, &qword_1013E9C40);
        sub_1004CB800(v86, &qword_1013E9C40);
        sub_1004CB800(v159, &qword_1013E9C40);
        v89 = v84;
        v90 = v157;
        ((void (*)(uint64_t, uint64_t))v172)(v89, v157);
        sub_1004CB800(v83, &qword_1013E9C40);
        v91 = (uint64_t)v160;
        v92 = v178;
      }
      else
      {
        v93 = v157;
        ((void (*)(uint64_t, uint64_t))v172)(v84, v157);
        sub_1004CB800(v88, &qword_1013E9C40);
        sub_1004CB800(v87, &qword_1013E9C40);
        sub_1004CB800(v86, &qword_1013E9C40);
        sub_1004CB800(v159, &qword_1013E9C40);
        sub_1004CB800(v83, &qword_1013E9C40);
        v90 = v93;
        if ((swift_isUniquelyReferenced_nonNull_native(v77) & 1) == 0)
          v77 = sub_100D0EF94(0, v77[2] + 1, 1, v77);
        v91 = (uint64_t)v160;
        v95 = v77[2];
        v94 = v77[3];
        v92 = v178;
        if (v95 >= v94 >> 1)
        {
          v77 = sub_100D0EF94((_QWORD *)(v94 > 1), v95 + 1, 1, v77);
          v92 = v178;
        }
        v77[2] = v95 + 1;
        v167 = (uint64_t)v77;
        v96 = (char *)&v77[2 * v95];
        strcpy(v96 + 32, "parentAffinity");
        v96[47] = -18;
      }
      v97 = (char *)(v91 + v49[12]);
      v98 = v91 + v49[16];
      v99 = v91 + v49[20];
      v100 = v91 + v49[24];
      v101 = v91 + v49[28];
      sub_1004CB7BC(v92, v91, &qword_1013E9C40);
      v160 = v97;
      v102 = v97;
      v103 = v90;
      ((void (*)(char *, uint64_t, uint64_t))v171)(v102, v173, v90);
      sub_1004CB7BC(v174, v98, &qword_1013E9C40);
      sub_1004CB7BC(v175, v99, &qword_1013E9C40);
      sub_1004CB7BC(v176, v100, &qword_1013E9C40);
      sub_1004CB7BC(v177, v101, &qword_1013E9C40);
      if (((unsigned int (*)(uint64_t, uint64_t, char *))v165)(v98, 1, v166) == 1)
      {
        sub_1004CB800(v101, &qword_1013E9C40);
        sub_1004CB800(v100, &qword_1013E9C40);
        sub_1004CB800(v99, &qword_1013E9C40);
        sub_1004CB800(v98, &qword_1013E9C40);
        ((void (*)(char *, uint64_t))v172)(v160, v90);
        sub_1004CB800(v91, &qword_1013E9C40);
        v104 = (uint64_t)v162;
        v105 = v90;
      }
      else
      {
        sub_1004CB800(v98, &qword_1013E9C40);
        sub_1004CB800(v101, &qword_1013E9C40);
        sub_1004CB800(v100, &qword_1013E9C40);
        sub_1004CB800(v99, &qword_1013E9C40);
        ((void (*)(char *, uint64_t))v172)(v160, v90);
        sub_1004CB800(v91, &qword_1013E9C40);
        v106 = (_QWORD *)v167;
        v105 = v103;
        if ((swift_isUniquelyReferenced_nonNull_native(v167) & 1) == 0)
          v106 = sub_100D0EF94(0, v106[2] + 1, 1, v106);
        v108 = v106[2];
        v107 = v106[3];
        v104 = (uint64_t)v162;
        if (v108 >= v107 >> 1)
        {
          v152 = sub_100D0EF94((_QWORD *)(v107 > 1), v108 + 1, 1, v106);
          v104 = (uint64_t)v162;
          v106 = v152;
        }
        v106[2] = v108 + 1;
        v167 = (uint64_t)v106;
        v109 = &v106[2 * v108];
        v109[4] = 0x64656B636F6CLL;
        v109[5] = 0xE600000000000000;
      }
      v110 = v104 + v49[12];
      v111 = v104 + v49[16];
      v112 = v104 + v49[20];
      v113 = v104 + v49[24];
      v114 = v104 + v49[28];
      sub_1004CB7BC(v178, v104, &qword_1013E9C40);
      ((void (*)(uint64_t, uint64_t, uint64_t))v171)(v110, v173, v105);
      sub_1004CB7BC(v174, v111, &qword_1013E9C40);
      sub_1004CB7BC(v175, v112, &qword_1013E9C40);
      sub_1004CB7BC(v176, v113, &qword_1013E9C40);
      sub_1004CB7BC(v177, v114, &qword_1013E9C40);
      if (((unsigned int (*)(uint64_t, uint64_t, char *))v165)(v112, 1, v166) == 1)
      {
        sub_1004CB800(v114, &qword_1013E9C40);
        sub_1004CB800(v113, &qword_1013E9C40);
        sub_1004CB800(v112, &qword_1013E9C40);
        sub_1004CB800(v111, &qword_1013E9C40);
        ((void (*)(uint64_t, uint64_t))v172)(v110, v105);
        sub_1004CB800(v104, &qword_1013E9C40);
        v115 = (uint64_t)v163;
      }
      else
      {
        sub_1004CB800(v112, &qword_1013E9C40);
        sub_1004CB800(v114, &qword_1013E9C40);
        sub_1004CB800(v113, &qword_1013E9C40);
        sub_1004CB800(v111, &qword_1013E9C40);
        ((void (*)(uint64_t, uint64_t))v172)(v110, v105);
        sub_1004CB800(v104, &qword_1013E9C40);
        v116 = (_QWORD *)v167;
        if ((swift_isUniquelyReferenced_nonNull_native(v167) & 1) == 0)
          v116 = sub_100D0EF94(0, v116[2] + 1, 1, v116);
        v118 = v116[2];
        v117 = v116[3];
        v115 = (uint64_t)v163;
        if (v118 >= v117 >> 1)
        {
          v153 = sub_100D0EF94((_QWORD *)(v117 > 1), v118 + 1, 1, v116);
          v115 = (uint64_t)v163;
          v116 = v153;
        }
        v116[2] = v118 + 1;
        v167 = (uint64_t)v116;
        v119 = &v116[2 * v118];
        v119[4] = 0xD000000000000011;
        v119[5] = 0x8000000100FB8AF0;
      }
      v120 = v115 + v49[12];
      v121 = v115 + v49[16];
      v122 = v115 + v49[20];
      v123 = v115 + v49[24];
      v124 = v115 + v49[28];
      sub_1004CB7BC(v178, v115, &qword_1013E9C40);
      ((void (*)(uint64_t, uint64_t, uint64_t))v171)(v120, v173, v105);
      sub_1004CB7BC(v174, v121, &qword_1013E9C40);
      sub_1004CB7BC(v175, v122, &qword_1013E9C40);
      sub_1004CB7BC(v176, v123, &qword_1013E9C40);
      sub_1004CB7BC(v177, v124, &qword_1013E9C40);
      if (((unsigned int (*)(uint64_t, uint64_t, char *))v165)(v123, 1, v166) == 1)
      {
        sub_1004CB800(v124, &qword_1013E9C40);
        sub_1004CB800(v123, &qword_1013E9C40);
        sub_1004CB800(v122, &qword_1013E9C40);
        sub_1004CB800(v121, &qword_1013E9C40);
        ((void (*)(uint64_t, uint64_t))v172)(v120, v105);
        sub_1004CB800(v115, &qword_1013E9C40);
        v125 = v105;
      }
      else
      {
        sub_1004CB800(v123, &qword_1013E9C40);
        sub_1004CB800(v124, &qword_1013E9C40);
        sub_1004CB800(v122, &qword_1013E9C40);
        sub_1004CB800(v121, &qword_1013E9C40);
        ((void (*)(uint64_t, uint64_t))v172)(v120, v105);
        sub_1004CB800(v115, &qword_1013E9C40);
        v126 = (_QWORD *)v167;
        if ((swift_isUniquelyReferenced_nonNull_native(v167) & 1) == 0)
          v126 = sub_100D0EF94(0, v126[2] + 1, 1, v126);
        v128 = v126[2];
        v127 = v126[3];
        if (v128 >= v127 >> 1)
          v126 = sub_100D0EF94((_QWORD *)(v127 > 1), v128 + 1, 1, v126);
        v126[2] = v128 + 1;
        v167 = (uint64_t)v126;
        v129 = &v126[2 * v128];
        v129[4] = 0xD000000000000018;
        v129[5] = 0x8000000100FB8AD0;
        v125 = v105;
      }
      v130 = v161;
      v131 = (char *)(v161 + v49[12]);
      v132 = v161 + v49[16];
      v133 = v161 + v49[20];
      v134 = v161 + v49[24];
      v135 = v161 + v49[28];
      v136 = v178;
      sub_1004CB7BC(v178, v161, &qword_1013E9C40);
      v163 = v131;
      v137 = v131;
      v138 = v132;
      ((void (*)(char *, uint64_t, uint64_t))v171)(v137, v173, v125);
      sub_1004CB7BC(v174, v132, &qword_1013E9C40);
      v139 = v175;
      v175 = v133;
      sub_1004CB7BC(v139, v133, &qword_1013E9C40);
      sub_1004CB7BC(v176, v134, &qword_1013E9C40);
      sub_1004CB7BC(v177, v135, &qword_1013E9C40);
      if (((unsigned int (*)(uint64_t, uint64_t, char *))v165)(v135, 1, v166) == 1)
      {
        v140 = swift_release(v156);
        (*(void (**)(uint64_t, int *, __n128))(v170 + 8))(v136, v49, v140);
        (*(void (**)(char *, uint64_t))(v168 + 8))(v155, v169);
        sub_1004CB800(v135, &qword_1013E9C40);
        sub_1004CB800(v134, &qword_1013E9C40);
        sub_1004CB800(v175, &qword_1013E9C40);
        sub_1004CB800(v132, &qword_1013E9C40);
        ((void (*)(char *, uint64_t))v172)(v163, v125);
        sub_1004CB800(v130, &qword_1013E9C40);
        return (_QWORD *)v167;
      }
      else
      {
        v141 = v125;
        v142 = v49;
        sub_1004CB800(v135, &qword_1013E9C40);
        sub_1004CB800(v134, &qword_1013E9C40);
        sub_1004CB800(v175, &qword_1013E9C40);
        sub_1004CB800(v138, &qword_1013E9C40);
        ((void (*)(char *, uint64_t))v172)(v163, v141);
        sub_1004CB800(v130, &qword_1013E9C40);
        v48 = (_QWORD *)v167;
        if ((swift_isUniquelyReferenced_nonNull_native(v167) & 1) == 0)
          v48 = sub_100D0EF94(0, v48[2] + 1, 1, v48);
        v143 = v156;
        v144 = v170;
        v145 = v169;
        v146 = v168;
        v148 = v48[2];
        v147 = v48[3];
        if (v148 >= v147 >> 1)
          v48 = sub_100D0EF94((_QWORD *)(v147 > 1), v148 + 1, 1, v48);
        v48[2] = v148 + 1;
        v149 = &v48[2 * v148];
        v149[4] = 0x776F64616873;
        v149[5] = 0xE600000000000000;
        v150 = swift_release(v143);
        (*(void (**)(uint64_t, int *, __n128))(v144 + 8))(v178, v142, v150);
        (*(void (**)(char *, uint64_t))(v146 + 8))(v155, v145);
      }
    }
    return v48;
  }
  else
  {
    result = (_QWORD *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002FLL, 0x8000000100FB8AA0, "Freeform/CRLBoardItemData.swift", 31, 2, 693, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_1005DE398(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  int *TupleTypeMetadata;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  int v17;
  void (*v18)(char *, _QWORD, uint64_t, int *);
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t WitnessTable;
  char *v37;
  char *v38;
  char *v39;
  char *v40;
  char *v41;
  char *v42;
  char *v43;
  void (*v44)(char *, _QWORD, uint64_t, int *);
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v52[2];
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v3 = (_QWORD *)*v1;
  v52[0] = sub_1004CB6A4(&qword_1013E6B08);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v3[77], v3[76], &protocol descriptor for CRLBoardItemCommonDataTypeSpecifying.NumRequirements, &unk_101119CA4);
  v48 = v3[78];
  v5 = type metadata accessor for CRRegister.MutatingAction(255, AssociatedTypeWitness, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v48 + 8) + 8) + 8));
  v52[1] = type metadata accessor for Optional(255, v5);
  v53 = sub_1004CB6A4(&qword_1013E6B10);
  v54 = v53;
  v55 = sub_1004CB6A4(&qword_1013E6B18);
  v56 = sub_1004CB6A4(&qword_1013E6B20);
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata(255, 6, v52, 0, 0);
  v7 = type metadata accessor for Optional(0, TupleTypeMetadata);
  v50 = *(_QWORD *)(v7 - 8);
  v51 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v37 - v11;
  v13 = *((_QWORD *)TupleTypeMetadata - 1);
  __chkstk_darwin(v14);
  v16 = (char *)&v37 - v15;
  sub_1004CB7BC(a1, (uint64_t)v52, &qword_1013E0230);
  if (v54)
  {
    v17 = swift_dynamicCast(v12, v52, (char *)&type metadata for Any + 8, TupleTypeMetadata, 6);
    v18 = *(void (**)(char *, _QWORD, uint64_t, int *))(v13 + 56);
    v18(v12, v17 ^ 1u, 1, TupleTypeMetadata);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v13 + 48))(v12, 1, TupleTypeMetadata) != 1)
    {
      v19 = TupleTypeMetadata[12];
      v20 = &v16[v19];
      v21 = TupleTypeMetadata[16];
      v22 = (uint64_t)&v16[v21];
      v41 = &v16[v21];
      v42 = &v16[v19];
      v23 = TupleTypeMetadata[20];
      v45 = AssociatedTypeWitness;
      v46 = &v16[v23];
      v24 = TupleTypeMetadata[24];
      v47 = &v16[v24];
      v25 = TupleTypeMetadata[28];
      v43 = &v16[v25];
      v44 = v18;
      v37 = &v12[v19];
      v38 = &v12[v21];
      v26 = (uint64_t)&v12[v23];
      v39 = &v12[v24];
      v40 = &v12[v25];
      sub_1004C4938((uint64_t)v12, (uint64_t)v16, &qword_1013E6B08);
      v27 = type metadata accessor for Optional(0, v5);
      v28 = *(_QWORD *)(v27 - 8);
      (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v20, v37, v27);
      sub_1004C4938((uint64_t)v38, v22, &qword_1013E6B10);
      sub_1004C4938(v26, (uint64_t)v46, &qword_1013E6B10);
      sub_1004C4938((uint64_t)v39, (uint64_t)v47, &qword_1013E6B18);
      v29 = (uint64_t)v43;
      sub_1004C4938((uint64_t)v40, (uint64_t)v43, &qword_1013E6B20);
      v30 = &v9[TupleTypeMetadata[12]];
      v31 = (uint64_t)&v9[TupleTypeMetadata[16]];
      v32 = (uint64_t)&v9[TupleTypeMetadata[20]];
      v39 = &v9[TupleTypeMetadata[24]];
      v40 = &v9[TupleTypeMetadata[28]];
      sub_1004CB7BC((uint64_t)v16, (uint64_t)v9, &qword_1013E6B08);
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v30, v42, v27);
      sub_1004CB7BC((uint64_t)v41, v31, &qword_1013E6B10);
      sub_1004CB7BC((uint64_t)v46, v32, &qword_1013E6B10);
      sub_1004CB7BC((uint64_t)v47, (uint64_t)v39, &qword_1013E6B18);
      sub_1004CB7BC(v29, (uint64_t)v40, &qword_1013E6B20);
      v44(v9, 0, 1, TupleTypeMetadata);
      swift_beginAccess(v49 + *(_QWORD *)(*(_QWORD *)v49 + 632), v52, 33, 0);
      v34 = type metadata accessor for CRLBoardItemCommonAbstractCRDTData(0, v45, v48, v33);
      WitnessTable = swift_getWitnessTable(&unk_100EFD5F4, v34);
      CRStruct_6.apply(_:)(v9, v34, WitnessTable);
      (*(void (**)(char *, uint64_t))(v50 + 8))(v9, v51);
      swift_endAccess(v52);
      return (*(uint64_t (**)(char *, int *))(v13 + 8))(v16, TupleTypeMetadata);
    }
  }
  else
  {
    sub_1004CB800((uint64_t)v52, &qword_1013E0230);
    (*(void (**)(char *, uint64_t, uint64_t, int *))(v13 + 56))(v12, 1, 1, TupleTypeMetadata);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v12, v51);
}

unint64_t sub_1005DE7EC()
{
  return sub_1008D5968((uint64_t)_swiftEmptyArrayStorage);
}

uint64_t sub_1005DE7F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v3 = *(_QWORD **)v1;
  v4 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 632);
  swift_beginAccess(v4, v9, 0, 0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v3[77], v3[76], &protocol descriptor for CRLBoardItemCommonDataTypeSpecifying.NumRequirements, &unk_101119CA4);
  v7 = type metadata accessor for CRLBoardItemCommonAbstractCRDTData(0, AssociatedTypeWitness, v3[78], v6);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, v4, v7);
}

uint64_t sub_1005DE88C()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for CRCodableVersion(0);
  sub_100501DE0(v0, qword_10147EB08);
  v1 = sub_1004F2A1C(v0, (uint64_t)qword_10147EB08);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v1, enum case for CRCodableVersion.version3(_:), v0);
}

BOOL sub_1005DE8E4(char *a1, char *a2)
{
  return qword_100EFDB28[*a1] == qword_100EFDB28[*a2];
}

Swift::Int sub_1005DE908()
{
  char *v0;
  uint64_t v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(qword_100EFDB28[v1]);
  return Hasher._finalize()();
}

void sub_1005DE954()
{
  char *v0;

  Hasher._combine(_:)(qword_100EFDB28[*v0]);
}

Swift::Int sub_1005DE988(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(qword_100EFDB28[v2]);
  return Hasher._finalize()();
}

_QWORD *sub_1005DE9D0@<X0>(_QWORD *result@<X0>, _BYTE *a2@<X8>)
{
  unint64_t v2;
  BOOL v3;
  unsigned int v4;

  v2 = *result + 1;
  v3 = v2 >= 3;
  v4 = 0x10002u >> (8 * v2);
  if (v3)
    LOBYTE(v4) = 3;
  *a2 = v4;
  return result;
}

void sub_1005DE9FC(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_100EFDB28[*v1];
}

unint64_t sub_1005DEA14()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000010;
  if (*v0 == 1)
    v1 = 0x797274656D6F6567;
  if (*v0)
    return v1;
  else
    return 0xD000000000000013;
}

uint64_t sub_1005DEA74@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1005E3CE0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1005DEA98()
{
  char *v0;

  return qword_100EFDB28[*v0];
}

uint64_t sub_1005DEAB0@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  unsigned int v2;

  v2 = 0x10002u >> (8 * (result + 1));
  if ((unint64_t)(result + 1) >= 3)
    LOBYTE(v2) = 3;
  *a2 = v2;
  return result;
}

void sub_1005DEAD8(_QWORD *a1@<X8>)
{
  *a1 = &off_101264258;
}

uint64_t sub_1005DEAE8(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = sub_1005E36BC();
  v5 = sub_1005E3704();
  return static CodingKey<>.intCases.getter(a1, a2, v4, v5);
}

uint64_t sub_1005DEB2C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1005E3704();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005DEB54(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1005E3704();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1005DEB7C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t, uint64_t);
  id v11;
  double v12;
  float v13;
  double v14;
  float v15;
  double v16;
  float v17;
  double v18;
  float v19;
  double v20;
  float v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  uint64_t v26;
  char *v27;
  uint64_t v29;
  uint64_t v30;

  v30 = a1;
  v29 = type metadata accessor for CRLBoardItemParentAffinity(0);
  __chkstk_darwin(v29);
  v2 = (char *)&v29 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v3);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v29 - v7;
  v9 = type metadata accessor for UUID(0);
  v10 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56);
  v10(v8, 1, 1, v9);
  v11 = objc_msgSend(objc_allocWithZone((Class)CRLCanvasInfoGeometry), "init");
  objc_msgSend(v11, "position");
  v13 = v12;
  v15 = v14;
  objc_msgSend(v11, "size");
  v17 = v16;
  v19 = v18;
  objc_msgSend(v11, "angle");
  v21 = v20;
  v22 = objc_msgSend(v11, "widthValid");
  v23 = objc_msgSend(v11, "heightValid");
  v24 = objc_msgSend(v11, "horizontalFlip");
  v25 = objc_msgSend(v11, "verticalFlip");
  sub_1004CB7BC((uint64_t)v8, (uint64_t)v5, (uint64_t *)&unk_1013E1A50);
  v10(v2, 1, 1, v9);
  v26 = v29;
  *(_QWORD *)&v2[*(int *)(v29 + 24)] = _swiftEmptyDictionarySingleton;
  sub_1005E388C((uint64_t)v5, (uint64_t)v2);
  v27 = &v2[*(int *)(v26 + 20)];
  *(float *)v27 = v13;
  *((float *)v27 + 1) = v15;
  *((float *)v27 + 2) = v17;
  *((float *)v27 + 3) = v19;
  *((float *)v27 + 4) = v21;
  v27[20] = v22;
  v27[21] = v23;
  v27[22] = v24;
  v27[23] = v25;
  *((_QWORD *)v27 + 3) = _swiftEmptyDictionarySingleton;
  sub_1005E38D4((uint64_t)v2, v30);

  return sub_1004CB800((uint64_t)v8, (uint64_t *)&unk_1013E1A50);
}

uint64_t sub_1005DEDCC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 *v15;
  int v16;
  char v17;
  char v18;
  char v19;
  char v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v26;
  char v27;
  __int128 v28;
  int v29;
  char v30;
  char v31;
  char v32;
  char v33;
  uint64_t v34;

  v3 = v1;
  v5 = sub_1004B804C(&qword_1013E6AF8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_1005E3704();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLBoardItemParentAffinity.CodingKeys, &type metadata for CRLBoardItemParentAffinity.CodingKeys, v11, v9, v10);
  LOBYTE(v28) = 0;
  v12 = type metadata accessor for UUID(0);
  v13 = sub_1004B7878(&qword_1013E4860, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v3, &v28, v5, v12, v13);
  if (!v2)
  {
    v14 = type metadata accessor for CRLBoardItemParentAffinity(0);
    v15 = (__int128 *)(v3 + *(int *)(v14 + 20));
    v16 = *((_DWORD *)v15 + 4);
    v17 = *((_BYTE *)v15 + 20);
    v18 = *((_BYTE *)v15 + 21);
    v19 = *((_BYTE *)v15 + 22);
    v20 = *((_BYTE *)v15 + 23);
    v21 = *((_QWORD *)v15 + 3);
    v28 = *v15;
    v29 = v16;
    v30 = v17;
    v31 = v18;
    v32 = v19;
    v33 = v20;
    v34 = v21;
    v27 = 1;
    v22 = sub_1005E3EF0();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v28, &v27, v5, &type metadata for CRLCanvasInfoGeometryData, v22);
    *(_QWORD *)&v28 = *(_QWORD *)(v3 + *(int *)(v14 + 24));
    v27 = 2;
    v23 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    v24 = sub_1004F31B4();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v28, &v27, v5, v23, v24);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1005DEFBC(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  int v22;
  char v23;
  char v24;
  char v25;
  char v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  int v40;
  char v41;
  char v42;
  char v43;
  char v44;
  uint64_t v45;
  char v46;

  v33 = a2;
  v3 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v3);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_1004B804C(&qword_1013E6AE8);
  v6 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CRLBoardItemParentAffinity(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for UUID(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v35 = v9;
  v13 = *(int *)(v9 + 24);
  v36 = a1;
  v37 = v13;
  *(_QWORD *)&v11[v13] = _swiftEmptyDictionarySingleton;
  v15 = a1[3];
  v14 = a1[4];
  sub_1004BB5A4(a1, v15);
  v16 = sub_1005E3704();
  v17 = v38;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLBoardItemParentAffinity.CodingKeys, &type metadata for CRLBoardItemParentAffinity.CodingKeys, v16, v15, v14);
  if (v17)
  {
    v21 = v37;
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v36);
    sub_1004CB800((uint64_t)v11, (uint64_t *)&unk_1013E1A50);
    swift_bridgeObjectRelease(*(_QWORD *)&v11[v21]);
  }
  else
  {
    LOBYTE(v39) = 0;
    v18 = sub_1004B7878(&qword_1013E4810, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v19 = v34;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v12, &v39, v34, v12, v18);
    sub_1005E388C((uint64_t)v5, (uint64_t)v11);
    v46 = 1;
    v20 = sub_1005E3E2C();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for CRLCanvasInfoGeometryData, &v46, v19, &type metadata for CRLCanvasInfoGeometryData, v20);
    v22 = v40;
    v23 = v41;
    v24 = v42;
    v25 = v43;
    v26 = v44;
    v27 = v45;
    v28 = &v11[*(int *)(v35 + 20)];
    *(_OWORD *)v28 = v39;
    *((_DWORD *)v28 + 4) = v22;
    v28[20] = v23;
    v28[21] = v24;
    v28[22] = v25;
    v28[23] = v26;
    *((_QWORD *)v28 + 3) = v27;
    v29 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    v46 = 2;
    v30 = sub_1004F3130();
    KeyedDecodingContainer.decode<A>(_:forKey:)(v29, &v46, v19, v29, v30);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v19);
    v31 = v39;
    v32 = v37;
    swift_bridgeObjectRelease(*(_QWORD *)&v11[v37]);
    *(_QWORD *)&v11[v32] = v31;
    sub_1005E3E70((uint64_t)v11, v33);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v36);
    sub_1005E3EB4((uint64_t)v11);
  }
}

uint64_t sub_1005DF30C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1004CB7BC(v1, a1, (uint64_t *)&unk_1013E1A50);
}

uint64_t sub_1005DF330(uint64_t a1)
{
  uint64_t v1;

  return sub_1005E388C(a1, v1);
}

uint64_t sub_1005DF338@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1005E3CA4(v2 + *(int *)(a1 + 20), a2);
}

uint64_t sub_1005DF348(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1005E3C68(a1, v2 + *(int *)(a2 + 20));
}

uint64_t sub_1005DF354(uint64_t a1)
{
  uint64_t v1;

  return swift_bridgeObjectRetain(*(_QWORD *)(v1 + *(int *)(a1 + 24)));
}

uint64_t sub_1005DF360(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t result;

  v4 = *(int *)(a2 + 24);
  result = swift_bridgeObjectRelease(*(_QWORD *)(v2 + v4));
  *(_QWORD *)(v2 + v4) = a1;
  return result;
}

Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *sub_1005DF394())(CKRecordID recordID, Swift::String recordType)
{
  return SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
}

void sub_1005DF3AC(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1005DEFBC(a1, a2);
}

uint64_t sub_1005DF3C0(_QWORD *a1)
{
  return sub_1005DEDCC(a1);
}

uint64_t sub_1005DF3D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E6AD8, type metadata accessor for CRLBoardItemParentAffinity, (uint64_t)&unk_100EFD8F4);
  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_1005DF42C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1004B7878(&qword_1013E6A78, type metadata accessor for CRLBoardItemParentAffinity, (uint64_t)&unk_100EFD714);
  v7 = sub_1004B7878(&qword_1013E6AE0, type metadata accessor for CRLBoardItemParentAffinity, (uint64_t)&unk_100EFD8CC);
  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_1005DF4C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E6AD8, type metadata accessor for CRLBoardItemParentAffinity, (uint64_t)&unk_100EFD8F4);
  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_1005DF510(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E6AD0, type metadata accessor for CRLBoardItemParentAffinity, (uint64_t)&unk_100EFD74C);
  return CRValueStruct.init(from:)(a1, a2, v4);
}

uint64_t sub_1005DF574(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E6AD0, type metadata accessor for CRLBoardItemParentAffinity, (uint64_t)&unk_100EFD74C);
  return CRValueStruct.encode(to:)(a1, a2, v4);
}

uint64_t sub_1005DF5D0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_1013E6AD0, type metadata accessor for CRLBoardItemParentAffinity, (uint64_t)&unk_100EFD74C);
  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

void sub_1005DF620(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v6 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v6);
  v26 = (uint64_t)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v24 - v9;
  v11 = type metadata accessor for UUID(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  __chkstk_darwin(v13);
  v15 = (char *)&v24 - v14;
  v18 = __chkstk_darwin(v16);
  v20 = (char *)&v24 - v19;
  v27 = a1;
  if (*(_BYTE *)(a1 + 16) == 1)
  {
    v25 = v17;
    v21 = a2;
    (*(void (**)(uint64_t, uint64_t, __n128))(a3 + 8))(a2, a3, v18);
    sub_1008FD76C((uint64_t)v15, (uint64_t)v20);
    v24 = *(void (**)(char *, uint64_t))(v12 + 8);
    v24(v15, v11);
    (*(void (**)(char *, uint64_t, uint64_t))(a3 + 16))(v20, a2, a3);
    (*(void (**)(uint64_t, uint64_t))(a3 + 32))(a2, a3);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    {
      sub_1004CB800((uint64_t)v10, (uint64_t *)&unk_1013E1A50);
    }
    else
    {
      v22 = v25;
      (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v25, v10, v11);
      v23 = v26;
      sub_1008FD76C(v22, v26);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(v23, 0, 1, v11);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 40))(v23, v21, a3);
      v24((char *)v22, v11);
    }
  }
}

uint64_t sub_1005DF858()
{
  uint64_t v0;

  v0 = sub_1004B804C(&qword_1013E1A80);
  return CRRegister.wrappedValue.getter(v0);
}

uint64_t sub_1005DF884(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v10;

  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))(v6, a1, v2, v4);
  v7 = sub_1004B804C(&qword_1013E1A80);
  CRRegister.wrappedValue.setter(v6, v7, v8);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

uint64_t sub_1005DF928(uint64_t a1)
{
  uint64_t v1;

  v1 = type metadata accessor for CRRegister(0, *(_QWORD *)(a1 + 16), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 24) + 8) + 8) + 8));
  return CRRegister.wrappedValue.getter(v1);
}

uint64_t sub_1005DF96C(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  _BYTE v4[128];

  sub_1004C4938(a1, (uint64_t)v4, (uint64_t *)&unk_1013F02D0);
  v1 = sub_1004B804C((uint64_t *)&unk_1013F02D0);
  v2 = sub_1005E3390();
  return CRRegister.init(wrappedValue:)(v4, v1, v2);
}

uint64_t sub_1005DF9C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  _BYTE v5[128];

  v2 = sub_1004B804C(qword_1013E6988);
  CRRegister.wrappedValue.getter(v2);
  sub_1004C4938((uint64_t)&v4, (uint64_t)v5, (uint64_t *)&unk_1013F02D0);
  return sub_1004C4938((uint64_t)v5, a1, (uint64_t *)&unk_1013F02D0);
}

uint64_t sub_1005DFA38(uint64_t a1)
{
  uint64_t v1;
  __n128 v2;
  _BYTE v4[128];

  sub_1004C4938(a1, (uint64_t)v4, (uint64_t *)&unk_1013F02D0);
  v1 = sub_1004B804C(qword_1013E6988);
  return CRRegister.wrappedValue.setter(v4, v1, v2);
}

uint64_t sub_1005DFA8C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(a1);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005DF928(v6);
  (*(void (**)(uint64_t))(*(_QWORD *)(a1 + 24) + 32))(v2);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1005DFB20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(_BYTE *, _QWORD);
  _BYTE v12[32];

  v4 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v4);
  v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1004CB7BC(a1, (uint64_t)v6, (uint64_t *)&unk_1013E1A50);
  v8 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v9 = type metadata accessor for CRRegister(0, v8, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v7 + 8) + 8) + 8));
  v10 = (void (*)(_BYTE *, _QWORD))CRRegister.wrappedValue.modify(v12, v9);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 40))(v6, v8, v7);
  v10(v12, 0);
  return sub_1004CB800(a1, (uint64_t *)&unk_1013E1A50);
}

double sub_1005DFC10@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double result;
  __int128 v10;
  _OWORD v11[2];

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(a1);
  v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005DF928(v8);
  (*(void (**)(_OWORD *__return_ptr, uint64_t))(*(_QWORD *)(a1 + 24) + 56))(v11, v4);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  result = *(double *)v11;
  v10 = v11[1];
  *a2 = v11[0];
  a2[1] = v10;
  return result;
}

uint64_t sub_1005DFCB0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_BYTE *, _QWORD);
  _BYTE v8[32];

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  v5 = type metadata accessor for CRRegister(0, v3, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v4 + 8) + 8) + 8));
  v6 = (uint64_t (*)(_BYTE *, _QWORD))CRRegister.wrappedValue.modify(v8, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 64))(a1, v3, v4);
  return v6(v8, 0);
}

uint64_t sub_1005DFD3C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  KeyPath = swift_getKeyPath(&unk_100EFD9B8);
  v3 = swift_getKeyPath(&unk_100EFD9D8);
  v4 = swift_getKeyPath(&unk_100EFD9F8);
  v5 = swift_getKeyPath(&unk_100EFDA18);
  v6 = swift_getKeyPath(&unk_100EFDA38);
  result = swift_getKeyPath(&unk_100EFDA58);
  *a1 = 97;
  a1[1] = 0xE100000000000000;
  a1[2] = KeyPath;
  a1[3] = 98;
  a1[4] = 0xE100000000000000;
  a1[5] = v3;
  a1[6] = 99;
  a1[7] = 0xE100000000000000;
  a1[8] = v4;
  a1[9] = 100;
  a1[10] = 0xE100000000000000;
  a1[11] = v5;
  a1[12] = 101;
  a1[13] = 0xE100000000000000;
  a1[14] = v6;
  a1[15] = 102;
  a1[16] = 0xE100000000000000;
  a1[17] = result;
  return result;
}

uint64_t sub_1005DFE4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE v13[128];
  _OWORD v14[8];

  __chkstk_darwin(a1);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for UUID(0);
  __chkstk_darwin(v8);
  v10 = &v13[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  UUID.init()(v11);
  sub_1004C3A10(v14);
  sub_1004C4938((uint64_t)v14, (uint64_t)v13, (uint64_t *)&unk_1013F02D0);
  (*(void (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
  return sub_1005DFF5C((uint64_t)v10, (uint64_t)v7, 0, 0, 0, 0xE000000000000000, (uint64_t)v13, a1, a3, a2);
}

uint64_t sub_1005DFF5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char *v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[16];
  _BYTE v43[128];
  _OWORD v44[8];

  v38 = a7;
  v35 = a5;
  v36 = a6;
  v34 = a4;
  v32 = a3;
  v31 = a2;
  v41 = a1;
  v30 = a10;
  v12 = sub_1004B804C(qword_1013E6988);
  v39 = *(_QWORD *)(v12 - 8);
  v40 = v12;
  __chkstk_darwin(v12);
  v37 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a8 - 8);
  __chkstk_darwin(v15);
  v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for UUID(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v29 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for CRLBoardItemCommonAbstractCRDTData(0, a8, a10, v22);
  v33 = a9 + *(int *)(v23 + 52);
  sub_1004C3A10(v44);
  sub_1004C4938((uint64_t)v44, (uint64_t)v43, (uint64_t *)&unk_1013F02D0);
  sub_1005DF96C((uint64_t)v43);
  *(_QWORD *)(a9 + *(int *)(v23 + 56)) = _swiftEmptyDictionarySingleton;
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v21, v41, v18);
  CRRegister.init(_:)(v21, v18, &protocol witness table for UUID);
  v24 = v31;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, v31, a8);
  CRRegister.init(_:)(v17, a8, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v30 + 8) + 8) + 8));
  LOBYTE(v42[0]) = v32;
  CRRegister.init(_:)(v42, &type metadata for Bool, &protocol witness table for Bool);
  LOBYTE(v42[0]) = v34;
  CRRegister.init(_:)(v42, &type metadata for Bool, &protocol witness table for Bool);
  v42[0] = v35;
  v42[1] = v36;
  CRRegister.init(_:)(v42, &type metadata for String, &protocol witness table for String);
  sub_1004C4938(v38, (uint64_t)v42, (uint64_t *)&unk_1013F02D0);
  v25 = sub_1004B804C((uint64_t *)&unk_1013F02D0);
  v26 = sub_1005E3390();
  v27 = v37;
  CRRegister.init(_:)(v42, v25, v26);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v24, a8);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v41, v18);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v39 + 40))(v33, v27, v40);
}

uint64_t sub_1005E021C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  void (*v35)(char *);
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  char v41;
  void (*v42)(char *, uint64_t);
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  int v51;
  char *v52;
  char *v53;
  BOOL v54;
  char *v55;
  char *v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  char v64;
  __n128 v65;
  char *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  char *v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  _OWORD v76[8];
  _OWORD v77[8];
  uint64_t v78[16];
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  _OWORD v95[8];
  _OWORD v96[8];
  _BYTE v97[128];
  _BYTE v98[128];
  uint64_t v99[16];
  uint64_t v100[16];
  uint64_t v101[16];
  _BYTE v102[128];
  _OWORD v103[9];

  v67 = *(_QWORD *)(a2 - 8);
  __chkstk_darwin(a1);
  v75 = (char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v70 = (char *)&v66 - v7;
  __chkstk_darwin(v8);
  v71 = (char *)&v66 - v9;
  __chkstk_darwin(v10);
  v72 = (char *)&v66 - v11;
  __chkstk_darwin(v12);
  v68 = (char *)&v66 - v13;
  __chkstk_darwin(v14);
  v69 = (char *)&v66 - v15;
  __chkstk_darwin(v16);
  v66 = (char *)&v66 - v17;
  __chkstk_darwin(v18);
  v20 = (char *)&v66 - v19;
  v22 = *(_QWORD *)(v21 + 16);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v24);
  v26 = (char *)&v66 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v29 = (char *)&v66 - v28;
  v30 = v2;
  sub_1005DF928(v31);
  sub_1005DF928(a2);
  v32 = dispatch thunk of static Equatable.== infix(_:_:)(v29, v26);
  v33 = *(void (**)(char *, uint64_t))(v23 + 8);
  v33(v26, v22);
  v33(v29, v22);
  v34 = v67;
  v35 = *(void (**)(char *))(v67 + 16);
  v36 = v30;
  v37 = v66;
  v73 = v36;
  v35(v20);
  v74 = a1;
  ((void (*)(char *, uint64_t, uint64_t))v35)(v37, a1, a2);
  if ((v32 & 1) != 0)
  {
    v38 = sub_1004B804C((uint64_t *)&unk_1013F5590);
    CRRegister.wrappedValue.getter(v38);
    v39 = v95[0];
    v40 = sub_1004B804C((uint64_t *)&unk_1013F5590);
    CRRegister.wrappedValue.getter(v40);
    v41 = v39 ^ LOBYTE(v95[0]) ^ 1;
  }
  else
  {
    v41 = 0;
  }
  v42 = *(void (**)(char *, uint64_t))(v34 + 8);
  v42(v37, a2);
  v42(v20, a2);
  v43 = v69;
  v44 = v73;
  ((void (*)(char *, uint64_t, uint64_t))v35)(v69, v73, a2);
  v45 = v68;
  v46 = v74;
  ((void (*)(char *, uint64_t, uint64_t))v35)(v68, v74, a2);
  v47 = v75;
  if ((v41 & 1) == 0)
  {
    v42(v45, a2);
    v42(v43, a2);
    v55 = v72;
    ((void (*)(char *, uint64_t, uint64_t))v35)(v72, v44, a2);
    v53 = v71;
    ((void (*)(char *, uint64_t, uint64_t))v35)(v71, v46, a2);
    v56 = v70;
LABEL_10:
    v42(v53, a2);
    v42(v55, a2);
    ((void (*)(char *, uint64_t, uint64_t))v35)(v56, v44, a2);
    ((void (*)(char *, uint64_t, uint64_t))v35)(v47, v46, a2);
LABEL_11:
    v42(v47, a2);
    v42(v56, a2);
    goto LABEL_12;
  }
  v48 = sub_1004B804C((uint64_t *)&unk_1013F5590);
  CRRegister.wrappedValue.getter(v48);
  v49 = LOBYTE(v95[0]);
  v44 = v73;
  v46 = v74;
  v50 = sub_1004B804C((uint64_t *)&unk_1013F5590);
  CRRegister.wrappedValue.getter(v50);
  v51 = LOBYTE(v95[0]);
  v42(v45, a2);
  v42(v43, a2);
  v52 = v72;
  ((void (*)(char *, uint64_t, uint64_t))v35)(v72, v44, a2);
  v53 = v71;
  ((void (*)(char *, uint64_t, uint64_t))v35)(v71, v46, a2);
  v54 = v49 == v51;
  v55 = v52;
  v47 = v75;
  v56 = v70;
  if (!v54)
    goto LABEL_10;
  v57 = sub_1004B804C(&qword_1013E1980);
  CRRegister.wrappedValue.getter(v57);
  v58 = *((_QWORD *)&v95[0] + 1);
  v59 = *(_QWORD *)&v95[0];
  v60 = sub_1004B804C(&qword_1013E1980);
  CRRegister.wrappedValue.getter(v60);
  v61 = *((_QWORD *)&v95[0] + 1);
  if (__PAIR128__(v58, v59) == v95[0])
  {
    swift_bridgeObjectRelease_n(v58, 2);
    v42(v71, a2);
    v42(v72, a2);
    ((void (*)(char *, uint64_t, uint64_t))v35)(v56, v73, a2);
    v47 = v75;
    ((void (*)(char *, uint64_t, uint64_t))v35)(v75, v74, a2);
  }
  else
  {
    v64 = _stringCompareWithSmolCheck(_:_:expecting:)(v59, v58, *(_QWORD *)&v95[0], *((_QWORD *)&v95[0] + 1), 0);
    swift_bridgeObjectRelease(v58);
    v65 = swift_bridgeObjectRelease(v61);
    ((void (*)(char *, uint64_t, __n128))v42)(v71, a2, v65);
    v42(v72, a2);
    ((void (*)(char *, uint64_t, uint64_t))v35)(v56, v73, a2);
    v47 = v75;
    ((void (*)(char *, uint64_t, uint64_t))v35)(v75, v74, a2);
    if ((v64 & 1) == 0)
      goto LABEL_11;
  }
  sub_1005DF9C8((uint64_t)v99);
  sub_1004C4938((uint64_t)v99, (uint64_t)v97, (uint64_t *)&unk_1013F02D0);
  sub_1005DF9C8((uint64_t)v100);
  sub_1004C4938((uint64_t)v100, (uint64_t)v98, (uint64_t *)&unk_1013F02D0);
  sub_1004C4938((uint64_t)v99, (uint64_t)v95, (uint64_t *)&unk_1013F02D0);
  sub_1004C4938((uint64_t)v100, (uint64_t)v96, (uint64_t *)&unk_1013F02D0);
  sub_1004C4938((uint64_t)v99, (uint64_t)v102, (uint64_t *)&unk_1013F02D0);
  if (sub_1005E3F34((uint64_t)v102) == 1)
  {
    v42(v47, a2);
    v42(v56, a2);
    sub_1004C4938((uint64_t)v96, (uint64_t)v103, (uint64_t *)&unk_1013F02D0);
    sub_1004C4938((uint64_t)v103, (uint64_t)&v79, (uint64_t *)&unk_1013F02D0);
    if (sub_1005E3F34((uint64_t)&v79) == 1)
    {
      sub_1004C4938((uint64_t)v95, (uint64_t)v101, (uint64_t *)&unk_1013F02D0);
      sub_1005E402C(v101);
      v62 = 1;
      return v62 & 1;
    }
  }
  else
  {
    sub_1004C4938((uint64_t)v100, (uint64_t)v101, (uint64_t *)&unk_1013F02D0);
    if (sub_1005E3F34((uint64_t)v101) != 1)
    {
      sub_1004C4938((uint64_t)v97, (uint64_t)v76, (uint64_t *)&unk_1013F02D0);
      v103[4] = v76[4];
      v103[5] = v76[5];
      v103[6] = v76[6];
      v103[7] = v76[7];
      v103[0] = v76[0];
      v103[1] = v76[1];
      v103[2] = v76[2];
      v103[3] = v76[3];
      sub_1004C4938((uint64_t)v98, (uint64_t)v77, (uint64_t *)&unk_1013F02D0);
      v83 = v77[4];
      v84 = v77[5];
      v85 = v77[6];
      v86 = v77[7];
      v79 = v77[0];
      v80 = v77[1];
      v81 = v77[2];
      v82 = v77[3];
      sub_1005E4084(v76);
      v62 = sub_10080B508(v103, &v79);
      sub_1005E402C(v100);
      sub_1005E402C(v99);
      v42(v47, a2);
      v42(v56, a2);
      sub_1004C4938((uint64_t)v95, (uint64_t)v78, (uint64_t *)&unk_1013F02D0);
      sub_1005E402C(v78);
      return v62 & 1;
    }
    sub_1004C4938((uint64_t)v97, (uint64_t)&v79, (uint64_t *)&unk_1013F02D0);
    sub_1005E4084(&v79);
    v42(v47, a2);
    v42(v56, a2);
    sub_1005E402C(v99);
  }
  v91 = v96[4];
  v92 = v96[5];
  v93 = v96[6];
  v94 = v96[7];
  v87 = v96[0];
  v88 = v96[1];
  v89 = v96[2];
  v90 = v96[3];
  v83 = v95[4];
  v84 = v95[5];
  v85 = v95[6];
  v86 = v95[7];
  v79 = v95[0];
  v80 = v95[1];
  v81 = v95[2];
  v82 = v95[3];
  sub_1005E3F4C((uint64_t)&v79);
LABEL_12:
  v62 = 0;
  return v62 & 1;
}

uint64_t sub_1005E09A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1005DA284(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

__n128 sub_1005E09C4@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 result;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  __int128 v24;

  sub_1005DFD3C(&v13);
  v2 = v15;
  v3 = v17;
  v4 = v19;
  v5 = v21;
  v6 = v23;
  result = v14;
  v8 = v16;
  v9 = v18;
  v10 = v20;
  v11 = v22;
  v12 = v24;
  *(_QWORD *)a1 = v13;
  *(__n128 *)(a1 + 8) = result;
  *(_QWORD *)(a1 + 24) = v2;
  *(_OWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 48) = v3;
  *(_OWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 72) = v4;
  *(_OWORD *)(a1 + 80) = v10;
  *(_QWORD *)(a1 + 96) = v5;
  *(_OWORD *)(a1 + 104) = v11;
  *(_QWORD *)(a1 + 120) = v6;
  *(_OWORD *)(a1 + 128) = v12;
  return result;
}

uint64_t sub_1005E0A58(uint64_t a1)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100EFD5F4, a1);
  return static CRStruct_6.fieldKeys.getter(a1, WitnessTable);
}

uint64_t sub_1005E0A8C(uint64_t a1)
{
  uint64_t v1;

  return swift_bridgeObjectRetain(*(_QWORD *)(v1 + *(int *)(a1 + 56)));
}

uint64_t sub_1005E0A98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t result;

  v4 = *(int *)(a2 + 56);
  result = swift_bridgeObjectRelease(*(_QWORD *)(v2 + v4));
  *(_QWORD *)(v2 + v4) = a1;
  return result;
}

Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *sub_1005E0ACC())(CKRecordID recordID, Swift::String recordType)
{
  return SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
}

uint64_t sub_1005E0AE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1005DFE4C(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a2);
}

uint64_t sub_1005E0AEC(uint64_t a1)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100EFD3EC, a1);
  return CRType.context.getter(a1, WitnessTable);
}

uint64_t sub_1005E0B20(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100EFD5F4, a2);
  return CRStruct_6.actionUndoingDifference(from:)(a1, a2, WitnessTable);
}

uint64_t sub_1005E0B68(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100EFD5F4, a2);
  return CRStruct_6.apply(_:)(a1, a2, WitnessTable);
}

uint64_t sub_1005E0BA8(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100EFD5F4, a2);
  return CRStruct_6.hasDelta(from:)(a1, a2, WitnessTable);
}

uint64_t sub_1005E0BE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100EFD5F4, a3);
  return CRStruct_6.delta(_:from:)(a1, a2, a3, WitnessTable);
}

uint64_t sub_1005E0C44(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100EFD5F4, a2);
  return CRStruct_6.canMerge(delta:)(a1, a2, WitnessTable);
}

uint64_t sub_1005E0C84(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100EFD5F4, a2);
  return CRStruct_6.merge(delta:)(a1, a2, WitnessTable);
}

uint64_t sub_1005E0CC4(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100EFD5F4, a2);
  return CRStruct_6.copy(renamingReferences:)(a1, a2, WitnessTable);
}

uint64_t sub_1005E0D0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100EFD5F4, a3);
  return CRStruct_6.observableDifference(from:with:)(a1, a2, a3, WitnessTable);
}

uint64_t sub_1005E0D68(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100EFD5F4, a2);
  return CRStruct_6.visitReferences(_:)(a1, a2, WitnessTable);
}

BOOL sub_1005E0DA8(uint64_t a1)
{
  swift_getWitnessTable(&unk_100EFD5F4, a1);
  return CRStruct_6.needToFinalizeTimestamps()();
}

uint64_t sub_1005E0DDC(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100EFD5F4, a2);
  return CRStruct_6.finalizeTimestamps(_:)(a1, a2, WitnessTable);
}

uint64_t sub_1005E0E1C(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100EFD5F4, a2);
  return CRStruct_6.merge(_:)(a1, a2, WitnessTable);
}

uint64_t sub_1005E0E5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100EFD44C, a3);
  return CRDT.serializedData(_:version:)(a1, a2, a3, WitnessTable);
}

uint64_t sub_1005E0EB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100EFD44C, a3);
  return CRDT.init(serializedData:)(a1, a2, a3, WitnessTable);
}

uint64_t sub_1005E0F1C(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100EFD5F4, a2);
  return CRStruct_6.init(from:)(a1, a2, WitnessTable);
}

uint64_t sub_1005E0F70(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100EFD5F4, a2);
  return CRStruct_6.encode(to:)(a1, a2, WitnessTable);
}

uint64_t sub_1005E0FBC(uint64_t a1)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100EFD5F4, a1);
  return CRStruct_6.minEncodingVersion.getter(a1, WitnessTable);
}

_QWORD *sub_1005E1000(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = v4;
  v6 = a4;
  v7 = *v4;
  v5[3] = a1;
  v5[4] = a2;
  v5[5] = a3;
  if (((*(unsigned int (**)(void))(v7 + 128))() & ((a4 & 2) == 0)) != 0)
    v6 |= 2uLL;
  if (((*(unsigned int (**)(void))(v7 + 136))() & ((v6 & 4) == 0)) != 0)
    v8 = v6 | 4;
  else
    v8 = v6;
  v5[2] = v8;
  return v5;
}

unint64_t sub_1005E1074()
{
  _QWORD *v0;
  id v1;
  unsigned int v2;
  unint64_t v3;
  unint64_t result;
  char v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;

  v1 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v2 = objc_msgSend(v1, "BOOLForKey:", CFSTR("CRLAllowInteractionWithUnsupportedBoardAndBoardItemsUserDefault"));

  v3 = v0[3];
  result = sub_1001E9730();
  if (result < v3 && v2 == 0)
    return result;
  v0[3] = (*(uint64_t (**)(void))(*v0 + 208))();
  v6 = (*(uint64_t (**)(void))(*v0 + 232))();
  v7 = v0[2];
  if ((v6 & 1) != 0)
  {
    if ((v7 & 1) == 0)
    {
      v8 = v7 | 1;
LABEL_10:
      v0[2] = v8;
    }
  }
  else if ((v7 & 1) != 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    goto LABEL_10;
  }
  v9 = v0[4];
  if (sub_1001E9730() >= v9)
    v0[4] = (*(uint64_t (**)(void))(*v0 + 216))();
  v10 = v0[5];
  result = sub_1001E9730();
  if (result >= v10)
  {
    result = (*(uint64_t (**)(void))(*v0 + 224))();
    v0[5] = result;
  }
  return result;
}

void sub_1005E1168()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x656469727265764FLL, 0xED00007369687420, "Freeform/CRLBoardItemData.swift", 31, 2, 334, 0);
  __break(1u);
}

void sub_1005E11C8()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x656469727265764FLL, 0xED00007369687420, "Freeform/CRLBoardItemData.swift", 31, 2, 337, 0);
  __break(1u);
}

void sub_1005E1228()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x656469727265764FLL, 0xED00007369687420, "Freeform/CRLBoardItemData.swift", 31, 2, 338, 0);
  __break(1u);
}

void sub_1005E1288()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x656469727265764FLL, 0xED00007369687420, "Freeform/CRLBoardItemData.swift", 31, 2, 341, 0);
  __break(1u);
}

void sub_1005E12E8()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x656469727265764FLL, 0xED00007369687420, "Freeform/CRLBoardItemData.swift", 31, 2, 342, 0);
  __break(1u);
}

void sub_1005E1348()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x656469727265764FLL, 0xED00007369687420, "Freeform/CRLBoardItemData.swift", 31, 2, 345, 0);
  __break(1u);
}

void sub_1005E13A8()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x656469727265764FLL, 0xED00007369687420, "Freeform/CRLBoardItemData.swift", 31, 2, 346, 0);
  __break(1u);
}

void sub_1005E1408()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x656469727265764FLL, 0xED00007369687420, "Freeform/CRLBoardItemData.swift", 31, 2, 349, 0);
  __break(1u);
}

void sub_1005E1468()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x656469727265764FLL, 0xED00007369687420, "Freeform/CRLBoardItemData.swift", 31, 2, 350, 0);
  __break(1u);
}

void sub_1005E14C8()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x656469727265764FLL, 0xED00007369687420, "Freeform/CRLBoardItemData.swift", 31, 2, 353, 0);
  __break(1u);
}

void sub_1005E1528()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x656469727265764FLL, 0xED00007369687420, "Freeform/CRLBoardItemData.swift", 31, 2, 354, 0);
  __break(1u);
}

void sub_1005E1588()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x656469727265764FLL, 0xED00007369687420, "Freeform/CRLBoardItemData.swift", 31, 2, 357, 0);
  __break(1u);
}

void sub_1005E15E8()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x656469727265764FLL, 0xED00007369687420, "Freeform/CRLBoardItemData.swift", 31, 2, 358, 0);
  __break(1u);
}

void sub_1005E1648()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x656469727265764FLL, 0xED00007369687420, "Freeform/CRLBoardItemData.swift", 31, 2, 362, 0);
  __break(1u);
}

void sub_1005E16A8()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x656469727265764FLL, 0xED00007369687420, "Freeform/CRLBoardItemData.swift", 31, 2, 378, 0);
  __break(1u);
}

void sub_1005E1708()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x656469727265764FLL, 0xED00007369687420, "Freeform/CRLBoardItemData.swift", 31, 2, 382, 0);
  __break(1u);
}

void sub_1005E1768()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x656469727265764FLL, 0xED00007369687420, "Freeform/CRLBoardItemData.swift", 31, 2, 386, 0);
  __break(1u);
}

void sub_1005E17C8()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x656469727265764FLL, 0xED00007369687420, "Freeform/CRLBoardItemData.swift", 31, 2, 398, 0);
  __break(1u);
}

void sub_1005E1828()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x656469727265764FLL, 0xED00007369687420, "Freeform/CRLBoardItemData.swift", 31, 2, 402, 0);
  __break(1u);
}

void sub_1005E1888()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x656469727265764FLL, 0xED00007369687420, "Freeform/CRLBoardItemData.swift", 31, 2, 406, 0);
  __break(1u);
}

void sub_1005E18E8()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x656469727265764FLL, 0xED00007369687420, "Freeform/CRLBoardItemData.swift", 31, 2, 414, 0);
  __break(1u);
}

void sub_1005E1948()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x656469727265764FLL, 0xED00007369687420, "Freeform/CRLBoardItemData.swift", 31, 2, 418, 0);
  __break(1u);
}

void sub_1005E19A8()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x656469727265764FLL, 0xED00007369687420, "Freeform/CRLBoardItemData.swift", 31, 2, 422, 0);
  __break(1u);
}

void sub_1005E1A08()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x656469727265764FLL, 0xED00007369687420, "Freeform/CRLBoardItemData.swift", 31, 2, 426, 0);
  __break(1u);
}

void sub_1005E1A68()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x656469727265764FLL, 0xED00007369687420, "Freeform/CRLBoardItemData.swift", 31, 2, 479, 0);
  __break(1u);
}

void sub_1005E1AC8()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x656469727265764FLL, 0xED00007369687420, "Freeform/CRLBoardItemData.swift", 31, 2, 483, 0);
  __break(1u);
}

void sub_1005E1B28()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x656469727265764FLL, 0xED00007369687420, "Freeform/CRLBoardItemData.swift", 31, 2, 487, 0);
  __break(1u);
}

void sub_1005E1B88()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x656469727265764FLL, 0xED00007369687420, "Freeform/CRLBoardItemData.swift", 31, 2, 502, 0);
  __break(1u);
}

void sub_1005E1BE8()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x656469727265764FLL, 0xED00007369687420, "Freeform/CRLBoardItemData.swift", 31, 2, 513, 0);
  __break(1u);
}

void sub_1005E1C48()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x656469727265764FLL, 0xED00007369687420, "Freeform/CRLBoardItemData.swift", 31, 2, 534, 0);
  __break(1u);
}

uint64_t sub_1005E1CA8()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 48, 7);
}

uint64_t type metadata accessor for CRLBoardItemData()
{
  return objc_opt_self(_TtC8Freeform16CRLBoardItemData);
}

uint64_t sub_1005E1CD8(_QWORD *a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t result;
  unint64_t v5;
  uint64_t v6;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, a1[77], a1[76], &protocol descriptor for CRLBoardItemCommonDataTypeSpecifying.NumRequirements, &unk_101119CA4);
  result = type metadata accessor for CRLBoardItemCommonAbstractCRDTData(319, AssociatedTypeWitness, a1[78], v3);
  if (v5 <= 0x3F)
  {
    v6 = *(_QWORD *)(result - 8) + 64;
    result = swift_initClassMetadata2(a1, 0, 1, &v6, a1 + 79);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1005E1D6C(uint64_t a1, _QWORD *a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a1 + 448))(*a2) & 1;
}

uint64_t sub_1005E1D9C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 408))();
}

uint64_t sub_1005E1DC4()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t sub_1005E1DCC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t sub_1005E1DD8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 600))();
}

uint64_t sub_1005E1DF4()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 24);
}

uint64_t sub_1005E1E04()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_1005E1E0C()
{
  return 0x2000400000000;
}

uint64_t sub_1005E1E1C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t AssociatedTypeWitness;
  uint64_t v4;
  uint64_t v5;

  v1 = *v0;
  v2 = (uint64_t)v0 + *(_QWORD *)(*v0 + 632);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, *(_QWORD *)(*v0 + 616), *(_QWORD *)(*v0 + 608), &protocol descriptor for CRLBoardItemCommonDataTypeSpecifying.NumRequirements, &unk_101119CA4);
  v5 = type metadata accessor for CRLBoardItemCommonAbstractCRDTData(0, AssociatedTypeWitness, *(_QWORD *)(v1 + 624), v4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v2, v5);
}

uint64_t sub_1005E1E88()
{
  uint64_t v0;

  sub_1005DA4F0();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t type metadata accessor for CRLBoardItemCommonAbstractData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100502040(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CRLBoardItemCommonAbstractData);
}

uint64_t type metadata accessor for CRLBoardItemCommonAbstractCRDTData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100502040(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CRLBoardItemCommonAbstractCRDTData);
}

uint64_t *sub_1005E1EC4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v10);
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = *(int *)(a3 + 20);
    v12 = *(int *)(a3 + 24);
    v13 = (char *)a1 + v11;
    v14 = (char *)a2 + v11;
    *(_OWORD *)v13 = *(_OWORD *)v14;
    *((_DWORD *)v13 + 4) = *((_DWORD *)v14 + 4);
    *((_DWORD *)v13 + 5) = *((_DWORD *)v14 + 5);
    v15 = *((_QWORD *)v14 + 3);
    *((_QWORD *)v13 + 3) = v15;
    v16 = *(uint64_t *)((char *)a2 + v12);
    *(uint64_t *)((char *)a1 + v12) = v16;
    swift_bridgeObjectRetain(v15);
    swift_bridgeObjectRetain(v16);
  }
  return a1;
}

uint64_t sub_1005E1FE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(a2 + 20) + 24));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(a2 + 24)));
}

char *sub_1005E2058(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = *(int *)(a3 + 20);
  v10 = *(int *)(a3 + 24);
  v11 = &a1[v9];
  v12 = &a2[v9];
  *(_OWORD *)v11 = *(_OWORD *)v12;
  *((_DWORD *)v11 + 4) = *((_DWORD *)v12 + 4);
  *((_DWORD *)v11 + 5) = *((_DWORD *)v12 + 5);
  v13 = *((_QWORD *)v12 + 3);
  *((_QWORD *)v11 + 3) = v13;
  v14 = *(_QWORD *)&a2[v10];
  *(_QWORD *)&a1[v10] = v14;
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRetain(v14);
  return a1;
}

char *sub_1005E2148(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  *(_DWORD *)v13 = *(_DWORD *)v14;
  *((_DWORD *)v13 + 1) = *((_DWORD *)v14 + 1);
  *((_DWORD *)v13 + 2) = *((_DWORD *)v14 + 2);
  *((_DWORD *)v13 + 3) = *((_DWORD *)v14 + 3);
  *((_DWORD *)v13 + 4) = *((_DWORD *)v14 + 4);
  v13[20] = v14[20];
  v13[21] = v14[21];
  v13[22] = v14[22];
  v13[23] = v14[23];
  v15 = *((_QWORD *)v14 + 3);
  v16 = *((_QWORD *)v13 + 3);
  *((_QWORD *)v13 + 3) = v15;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRelease(v16);
  v17 = *(int *)(a3 + 24);
  v18 = *(_QWORD *)&a2[v17];
  v19 = *(_QWORD *)&a1[v17];
  *(_QWORD *)&a1[v17] = v18;
  swift_bridgeObjectRetain(v18);
  swift_bridgeObjectRelease(v19);
  return a1;
}

char *sub_1005E22CC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  __int128 v13;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = *(int *)(a3 + 20);
  v10 = *(int *)(a3 + 24);
  v11 = &a1[v9];
  v12 = &a2[v9];
  v13 = *((_OWORD *)v12 + 1);
  *(_OWORD *)v11 = *(_OWORD *)v12;
  *((_OWORD *)v11 + 1) = v13;
  *(_QWORD *)&a1[v10] = *(_QWORD *)&a2[v10];
  return a1;
}

char *sub_1005E2398(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *((_DWORD *)v13 + 4) = *((_DWORD *)v14 + 4);
  v13[20] = v14[20];
  v13[21] = v14[21];
  v13[22] = v14[22];
  v13[23] = v14[23];
  v15 = *((_QWORD *)v13 + 3);
  *((_QWORD *)v13 + 3) = *((_QWORD *)v14 + 3);
  swift_bridgeObjectRelease(v15);
  v16 = *(int *)(a3 + 24);
  v17 = *(_QWORD *)&a1[v16];
  *(_QWORD *)&a1[v16] = *(_QWORD *)&a2[v16];
  swift_bridgeObjectRelease(v17);
  return a1;
}

uint64_t sub_1005E24F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005E2500);
}

uint64_t sub_1005E2500(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 24);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1005E2584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005E2590);
}

uint64_t sub_1005E2590(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for CRLBoardItemParentAffinity(uint64_t a1)
{
  uint64_t result;

  result = qword_1013E6940;
  if (!qword_1013E6940)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLBoardItemParentAffinity);
  return result;
}

void sub_1005E264C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  sub_1005E26CC(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = " ";
    v4[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
  }
}

void sub_1005E26CC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1013E6950)
  {
    v2 = type metadata accessor for UUID(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1013E6950);
  }
}

uint64_t sub_1005E2720(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 48);
}

void sub_1005E2728(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD v12[2];
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;

  sub_1005E32D0(319);
  if (v3 <= 0x3F)
  {
    v12[0] = *(_QWORD *)(v2 - 8) + 64;
    v4 = type metadata accessor for CRRegister(319, *(_QWORD *)(a1 + 16), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 24) + 8) + 8) + 8));
    if (v5 <= 0x3F)
    {
      v12[1] = *(_QWORD *)(v4 - 8) + 64;
      sub_100560D4C(319, (unint64_t *)&qword_1013E2870, (uint64_t)&type metadata for Bool, (uint64_t)&protocol witness table for Bool);
      if (v7 <= 0x3F)
      {
        v13 = *(_QWORD *)(v6 - 8) + 64;
        v14 = v13;
        sub_100560D4C(319, &qword_1013E6A18, (uint64_t)&type metadata for String, (uint64_t)&protocol witness table for String);
        if (v9 <= 0x3F)
        {
          v15 = *(_QWORD *)(v8 - 8) + 64;
          sub_1005E332C(319);
          if (v11 <= 0x3F)
          {
            v16 = *(_QWORD *)(v10 - 8) + 64;
            v17 = (char *)&value witness table for Builtin.BridgeObject + 64;
            swift_initStructMetadata(a1, 0, 7, v12, a1 + 32);
          }
        }
      }
    }
  }
}

char *sub_1005E284C(char *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v27 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = (char *)(v27 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v27);
  }
  else
  {
    v7 = sub_1004B804C(&qword_1013E1A80);
    (*(void (**)(char *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 36);
    v9 = &a1[v8];
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for CRRegister(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) + 8) + 8) + 8));
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = *(int *)(a3 + 40);
    v13 = &a1[v12];
    v14 = (char *)a2 + v12;
    v15 = sub_1004B804C((uint64_t *)&unk_1013F5590);
    v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    v16(v13, v14, v15);
    v16(&a1[*(int *)(a3 + 44)], (char *)a2 + *(int *)(a3 + 44), v15);
    v17 = *(int *)(a3 + 48);
    v18 = &a1[v17];
    v19 = (char *)a2 + v17;
    v20 = sub_1004B804C(&qword_1013E1980);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
    v21 = *(int *)(a3 + 52);
    v22 = &a1[v21];
    v23 = (char *)a2 + v21;
    v24 = sub_1004B804C(qword_1013E6988);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
    v25 = *(int *)(a3 + 56);
    v26 = *(uint64_t *)((char *)a2 + v25);
    *(_QWORD *)&a1[v25] = v26;
    swift_bridgeObjectRetain(v26);
  }
  return a1;
}

double sub_1005E29D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double result;

  v4 = sub_1004B804C(&qword_1013E1A80);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 36);
  v6 = type metadata accessor for CRRegister(0, *(_QWORD *)(a2 + 16), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) + 8) + 8) + 8));
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + *(int *)(a2 + 40);
  v8 = sub_1004B804C((uint64_t *)&unk_1013F5590);
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
  v9(v7, v8);
  v9(a1 + *(int *)(a2 + 44), v8);
  v10 = a1 + *(int *)(a2 + 48);
  v11 = sub_1004B804C(&qword_1013E1980);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  v12 = a1 + *(int *)(a2 + 52);
  v13 = sub_1004B804C(qword_1013E6988);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(a2 + 56))).n128_u64[0];
  return result;
}

uint64_t sub_1005E2AE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v6 = sub_1004B804C(&qword_1013E1A80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 36);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for CRRegister(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) + 8) + 8) + 8));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = *(int *)(a3 + 40);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1004B804C((uint64_t *)&unk_1013F5590);
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
  v15(v12, v13, v14);
  v15(a1 + *(int *)(a3 + 44), a2 + *(int *)(a3 + 44), v14);
  v16 = *(int *)(a3 + 48);
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = sub_1004B804C(&qword_1013E1980);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  v20 = *(int *)(a3 + 52);
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = sub_1004B804C(qword_1013E6988);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
  v24 = *(int *)(a3 + 56);
  v25 = *(_QWORD *)(a2 + v24);
  *(_QWORD *)(a1 + v24) = v25;
  swift_bridgeObjectRetain(v25);
  return a1;
}

uint64_t sub_1005E2C40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v6 = sub_1004B804C(&qword_1013E1A80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 36);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for CRRegister(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) + 8) + 8) + 8));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = *(int *)(a3 + 40);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1004B804C((uint64_t *)&unk_1013F5590);
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24);
  v15(v12, v13, v14);
  v15(a1 + *(int *)(a3 + 44), a2 + *(int *)(a3 + 44), v14);
  v16 = *(int *)(a3 + 48);
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = sub_1004B804C(&qword_1013E1980);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 24))(v17, v18, v19);
  v20 = *(int *)(a3 + 52);
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = sub_1004B804C(qword_1013E6988);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 24))(v21, v22, v23);
  v24 = *(int *)(a3 + 56);
  v25 = *(_QWORD *)(a2 + v24);
  v26 = *(_QWORD *)(a1 + v24);
  *(_QWORD *)(a1 + v24) = v25;
  swift_bridgeObjectRetain(v25);
  swift_bridgeObjectRelease(v26);
  return a1;
}

uint64_t sub_1005E2DA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = sub_1004B804C(&qword_1013E1A80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 36);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for CRRegister(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) + 8) + 8) + 8));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = *(int *)(a3 + 40);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1004B804C((uint64_t *)&unk_1013F5590);
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32);
  v15(v12, v13, v14);
  v15(a1 + *(int *)(a3 + 44), a2 + *(int *)(a3 + 44), v14);
  v16 = *(int *)(a3 + 48);
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = sub_1004B804C(&qword_1013E1980);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
  v20 = *(int *)(a3 + 52);
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = sub_1004B804C(qword_1013E6988);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
  *(_QWORD *)(a1 + *(int *)(a3 + 56)) = *(_QWORD *)(a2 + *(int *)(a3 + 56));
  return a1;
}

uint64_t sub_1005E2EF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v6 = sub_1004B804C(&qword_1013E1A80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 36);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for CRRegister(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) + 8) + 8) + 8));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 40);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1004B804C((uint64_t *)&unk_1013F5590);
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40);
  v15(v12, v13, v14);
  v15(a1 + *(int *)(a3 + 44), a2 + *(int *)(a3 + 44), v14);
  v16 = *(int *)(a3 + 48);
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = sub_1004B804C(&qword_1013E1980);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 40))(v17, v18, v19);
  v20 = *(int *)(a3 + 52);
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = sub_1004B804C(qword_1013E6988);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 40))(v21, v22, v23);
  v24 = *(int *)(a3 + 56);
  v25 = *(_QWORD *)(a1 + v24);
  *(_QWORD *)(a1 + v24) = *(_QWORD *)(a2 + v24);
  swift_bridgeObjectRelease(v25);
  return a1;
}

uint64_t sub_1005E3054(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005E3060);
}

uint64_t sub_1005E3060(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v18;

  v6 = sub_1004B804C(&qword_1013E1A80);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = type metadata accessor for CRRegister(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) + 8) + 8) + 8));
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = *(int *)(a3 + 36);
LABEL_11:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = sub_1004B804C((uint64_t *)&unk_1013F5590);
  v12 = *(_QWORD *)(v14 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v14;
    v13 = *(int *)(a3 + 40);
    goto LABEL_11;
  }
  v15 = sub_1004B804C(&qword_1013E1980);
  v12 = *(_QWORD *)(v15 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v15;
    v13 = *(int *)(a3 + 48);
    goto LABEL_11;
  }
  v16 = sub_1004B804C(qword_1013E6988);
  v12 = *(_QWORD *)(v16 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v16;
    v13 = *(int *)(a3 + 52);
    goto LABEL_11;
  }
  v18 = *(_QWORD *)(a1 + *(int *)(a3 + 56));
  if (v18 >= 0xFFFFFFFF)
    LODWORD(v18) = -1;
  return (v18 + 1);
}

uint64_t sub_1005E3194(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005E31A0);
}

uint64_t sub_1005E31A0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;

  v8 = sub_1004B804C(&qword_1013E1A80);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  v13 = type metadata accessor for CRRegister(0, *(_QWORD *)(a4 + 16), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 24) + 8) + 8) + 8));
  v14 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v13;
    v15 = *(int *)(a4 + 36);
LABEL_11:
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  v16 = sub_1004B804C((uint64_t *)&unk_1013F5590);
  v14 = *(_QWORD *)(v16 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v16;
    v15 = *(int *)(a4 + 40);
    goto LABEL_11;
  }
  v17 = sub_1004B804C(&qword_1013E1980);
  v14 = *(_QWORD *)(v17 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v17;
    v15 = *(int *)(a4 + 48);
    goto LABEL_11;
  }
  result = sub_1004B804C(qword_1013E6988);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v15 = *(int *)(a4 + 52);
    goto LABEL_11;
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 56)) = (a2 - 1);
  return result;
}

void sub_1005E32D0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1013E6A10)
  {
    v2 = type metadata accessor for UUID(255);
    v3 = type metadata accessor for CRRegister(a1, v2, &protocol witness table for UUID);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1013E6A10);
  }
}

void sub_1005E332C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_1013E6A20)
  {
    v2 = sub_1004CB6A4((uint64_t *)&unk_1013F02D0);
    v3 = sub_1005E3390();
    v4 = type metadata accessor for CRRegister(a1, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1013E6A20);
  }
}

unint64_t sub_1005E3390()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E6A28;
  if (!qword_1013E6A28)
  {
    v1 = sub_1004CB6A4((uint64_t *)&unk_1013F02D0);
    sub_1005E33F4();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1013E6A28);
  }
  return result;
}

unint64_t sub_1005E33F4()
{
  unint64_t result;

  result = qword_1013E6A30;
  if (!qword_1013E6A30)
  {
    result = swift_getWitnessTable(&unk_100F0EBFC, &type metadata for CRLShadowData);
    atomic_store(result, (unint64_t *)&qword_1013E6A30);
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardItemCommonSimpleDataTypeSpecifying()
{
  return &type metadata for CRLBoardItemCommonSimpleDataTypeSpecifying;
}

uint64_t sub_1005E3448(uint64_t a1)
{
  return swift_getWitnessTable(&unk_100EFD36C, a1);
}

uint64_t sub_1005E3458(uint64_t a1)
{
  return swift_getWitnessTable(&unk_100EFD3B4, a1);
}

uint64_t sub_1005E3468(uint64_t a1)
{
  return swift_getWitnessTable(&unk_100EFD3EC, a1);
}

uint64_t sub_1005E3478(uint64_t a1)
{
  return swift_getWitnessTable(&protocol conformance descriptor for CRStructMergeableDelta_6<A>, a1);
}

uint64_t sub_1005E3488(uint64_t a1)
{
  return swift_getWitnessTable(&unk_100EFD44C, a1);
}

uint64_t sub_1005E3498(uint64_t a1)
{
  return swift_getWitnessTable(&unk_100EFD4CC, a1);
}

uint64_t sub_1005E34A8()
{
  return sub_1004CBA30(&qword_1013E6A50, &qword_1013E1A80, (uint64_t)&protocol conformance descriptor for CRRegister<A>);
}

uint64_t sub_1005E34D4(uint64_t a1)
{
  return swift_getWitnessTable(&protocol conformance descriptor for CRRegister<A>, a1);
}

uint64_t sub_1005E34E4()
{
  return sub_1004CBA30(&qword_1013E6A58, &qword_1013E1980, (uint64_t)&protocol conformance descriptor for CRRegister<A>);
}

uint64_t sub_1005E3510()
{
  return sub_1004CBA30(&qword_1013E6A60, qword_1013E6988, (uint64_t)&protocol conformance descriptor for CRRegister<A>);
}

uint64_t sub_1005E353C(uint64_t a1)
{
  return swift_getWitnessTable(&unk_100EFD52C, a1);
}

uint64_t sub_1005E354C()
{
  return sub_1004B7878(&qword_1013E6A68, type metadata accessor for CRLBoardItemParentAffinity, (uint64_t)&unk_100EFD61C);
}

uint64_t sub_1005E3578()
{
  return sub_1004B7878(&qword_1013E6A70, type metadata accessor for CRLBoardItemParentAffinity, (uint64_t)&unk_100EFD664);
}

uint64_t sub_1005E35A4()
{
  return sub_1004B7878(&qword_1013E6A78, type metadata accessor for CRLBoardItemParentAffinity, (uint64_t)&unk_100EFD714);
}

uint64_t sub_1005E35D0()
{
  return sub_1004B7878(&qword_1013E6A80, type metadata accessor for CRLBoardItemParentAffinity, (uint64_t)&unk_100EFD6EC);
}

uint64_t sub_1005E35FC()
{
  return sub_1004B7878(&qword_1013E6A88, type metadata accessor for CRLBoardItemParentAffinity, (uint64_t)&unk_100EFD6C4);
}

unint64_t sub_1005E362C()
{
  unint64_t result;

  result = qword_1013E6A90;
  if (!qword_1013E6A90)
  {
    result = swift_getWitnessTable(&unk_100EFD794, &type metadata for CRLBoardItemParentAffinity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E6A90);
  }
  return result;
}

unint64_t sub_1005E3674()
{
  unint64_t result;

  result = qword_1013E6A98;
  if (!qword_1013E6A98)
  {
    result = swift_getWitnessTable(&unk_100EFD8A4, &type metadata for CRLBoardItemParentAffinity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E6A98);
  }
  return result;
}

unint64_t sub_1005E36BC()
{
  unint64_t result;

  result = qword_1013E6AA0;
  if (!qword_1013E6AA0)
  {
    result = swift_getWitnessTable(&unk_100EFD86C, &type metadata for CRLBoardItemParentAffinity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E6AA0);
  }
  return result;
}

unint64_t sub_1005E3704()
{
  unint64_t result;

  result = qword_1013E6AA8;
  if (!qword_1013E6AA8)
  {
    result = swift_getWitnessTable(&unk_100EFD7CC, &type metadata for CRLBoardItemParentAffinity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E6AA8);
  }
  return result;
}

unint64_t sub_1005E374C()
{
  unint64_t result;

  result = qword_1013E6AB0;
  if (!qword_1013E6AB0)
  {
    result = swift_getWitnessTable(&unk_100EFD844, &type metadata for CRLBoardItemParentAffinity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E6AB0);
  }
  return result;
}

unint64_t sub_1005E3794()
{
  unint64_t result;

  result = qword_1013E6AB8;
  if (!qword_1013E6AB8)
  {
    result = swift_getWitnessTable(&unk_100EFD81C, &type metadata for CRLBoardItemParentAffinity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E6AB8);
  }
  return result;
}

uint64_t sub_1005E37D8()
{
  return sub_1004CBA30(&qword_1013E6AC0, &qword_1013E6AC8, (uint64_t)&protocol conformance descriptor for [A]);
}

uint64_t sub_1005E3804()
{
  return sub_1004B7878(&qword_1013E6AD0, type metadata accessor for CRLBoardItemParentAffinity, (uint64_t)&unk_100EFD74C);
}

uint64_t sub_1005E3830(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1004B7878(&qword_1013E6AD8, type metadata accessor for CRLBoardItemParentAffinity, (uint64_t)&unk_100EFD8F4);
  result = sub_1004B7878(&qword_1013E6AE0, type metadata accessor for CRLBoardItemParentAffinity, (uint64_t)&unk_100EFD8CC);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1005E388C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005E38D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLBoardItemParentAffinity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005E3918(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unsigned int (*v20)(uint64_t, uint64_t, uint64_t);
  char *v21;
  char v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _OWORD *v27;
  __int128 v28;
  _OWORD *v29;
  __int128 v30;
  char v31;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD v37[2];
  _OWORD v38[2];

  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v34 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C((uint64_t *)&unk_1013F62D0);
  __chkstk_darwin(v7);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v11);
  v16 = (char *)&v33 - v15;
  __chkstk_darwin(v14);
  v18 = (char *)&v33 - v17;
  v35 = a1;
  sub_1004CB7BC(a1, (uint64_t)&v33 - v17, (uint64_t *)&unk_1013E1A50);
  v36 = a2;
  sub_1004CB7BC(a2, (uint64_t)v16, (uint64_t *)&unk_1013E1A50);
  v19 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_1004CB7BC((uint64_t)v18, (uint64_t)v9, (uint64_t *)&unk_1013E1A50);
  sub_1004CB7BC((uint64_t)v16, v19, (uint64_t *)&unk_1013E1A50);
  v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v20((uint64_t)v9, 1, v4) == 1)
  {
    sub_1004CB800((uint64_t)v16, (uint64_t *)&unk_1013E1A50);
    sub_1004CB800((uint64_t)v18, (uint64_t *)&unk_1013E1A50);
    if (v20(v19, 1, v4) == 1)
    {
      sub_1004CB800((uint64_t)v9, (uint64_t *)&unk_1013E1A50);
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  sub_1004CB7BC((uint64_t)v9, (uint64_t)v13, (uint64_t *)&unk_1013E1A50);
  if (v20(v19, 1, v4) == 1)
  {
    sub_1004CB800((uint64_t)v16, (uint64_t *)&unk_1013E1A50);
    sub_1004CB800((uint64_t)v18, (uint64_t *)&unk_1013E1A50);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v4);
LABEL_6:
    sub_1004CB800((uint64_t)v9, (uint64_t *)&unk_1013F62D0);
LABEL_10:
    v31 = 0;
    return v31 & 1;
  }
  v21 = v34;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v34, v19, v4);
  sub_1004B7878((unint64_t *)&qword_1013E4880, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v22 = dispatch thunk of static Equatable.== infix(_:_:)(v13, v21);
  v23 = *(void (**)(char *, uint64_t))(v5 + 8);
  v23(v21, v4);
  sub_1004CB800((uint64_t)v16, (uint64_t *)&unk_1013E1A50);
  sub_1004CB800((uint64_t)v18, (uint64_t *)&unk_1013E1A50);
  v23(v13, v4);
  sub_1004CB800((uint64_t)v9, (uint64_t *)&unk_1013E1A50);
  if ((v22 & 1) == 0)
    goto LABEL_10;
LABEL_8:
  v24 = type metadata accessor for CRLBoardItemParentAffinity(0);
  v26 = v35;
  v25 = v36;
  v27 = (_OWORD *)(v35 + *(int *)(v24 + 20));
  v28 = v27[1];
  v37[0] = *v27;
  v37[1] = v28;
  v29 = (_OWORD *)(v36 + *(int *)(v24 + 20));
  v30 = v29[1];
  v38[0] = *v29;
  v38[1] = v30;
  if ((sub_100D58170((uint64_t)v37, (uint64_t)v38) & 1) == 0)
    goto LABEL_10;
  v31 = sub_100C9E04C(*(_QWORD *)(v26 + *(int *)(v24 + 24)), *(_QWORD *)(v25 + *(int *)(v24 + 24)));
  return v31 & 1;
}

uint64_t sub_1005E3C68(uint64_t a1, uint64_t a2)
{
  assignWithTake for CRLCanvasInfoGeometryData(a2, a1);
  return a2;
}

uint64_t sub_1005E3CA4(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for CRLCanvasInfoGeometryData(a2, a1);
  return a2;
}

uint64_t sub_1005E3CE0(uint64_t a1, unint64_t a2)
{
  unint64_t v4;
  unint64_t v6;
  char v7;

  if (a1 == 0xD000000000000013)
  {
    v4 = 0x8000000100FB8A10;
    if (a2 == 0x8000000100FB8A10)
      goto LABEL_5;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000013, 0x8000000100FB8A10, a1, a2, 0) & 1) != 0)
  {
    v4 = a2;
LABEL_5:
    swift_bridgeObjectRelease(v4);
    return 0;
  }
  if (a1 == 0x797274656D6F6567 && a2 == 0xE800000000000000)
  {
    v6 = 0xE800000000000000;
LABEL_11:
    swift_bridgeObjectRelease(v6);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x797274656D6F6567, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
    v6 = a2;
    goto LABEL_11;
  }
  if (a1 == 0xD000000000000010 && a2 == 0x8000000100FAF1E0)
  {
    swift_bridgeObjectRelease(0x8000000100FAF1E0);
    return 2;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x8000000100FAF1E0, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

unint64_t sub_1005E3E2C()
{
  unint64_t result;

  result = qword_1013E6AF0;
  if (!qword_1013E6AF0)
  {
    result = swift_getWitnessTable(&unk_100F35B1C, &type metadata for CRLCanvasInfoGeometryData);
    atomic_store(result, (unint64_t *)&qword_1013E6AF0);
  }
  return result;
}

uint64_t sub_1005E3E70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLBoardItemParentAffinity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005E3EB4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CRLBoardItemParentAffinity(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1005E3EF0()
{
  unint64_t result;

  result = qword_1013E6B00;
  if (!qword_1013E6B00)
  {
    result = swift_getWitnessTable(&unk_100F35AF4, &type metadata for CRLCanvasInfoGeometryData);
    atomic_store(result, (unint64_t *)&qword_1013E6B00);
  }
  return result;
}

uint64_t sub_1005E3F34(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 80);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

uint64_t sub_1005E3F4C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 136);
  v15 = *(_QWORD *)(a1 + 128);
  v3 = *(_QWORD *)(a1 + 144);
  v4 = *(_QWORD *)(a1 + 152);
  v5 = *(_QWORD *)(a1 + 160);
  v6 = *(_QWORD *)(a1 + 168);
  v7 = *(_QWORD *)(a1 + 176);
  v8 = *(_QWORD *)(a1 + 184);
  v13 = *(_OWORD *)(a1 + 208);
  v14 = *(_OWORD *)(a1 + 192);
  v12 = *(_OWORD *)(a1 + 224);
  v10 = *(_QWORD *)(a1 + 240);
  v9 = *(_QWORD *)(a1 + 248);
  sub_1004C3718(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120));
  sub_1004C3718(v15, v2, v3, v4, v5, v6, v7, v8, v14, *((uint64_t *)&v14 + 1), v13, *((uint64_t *)&v13 + 1), v12, *((uint64_t *)&v12 + 1), v10, v9);
  return a1;
}

uint64_t *sub_1005E402C(uint64_t *a1)
{
  sub_1004C3718(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15]);
  return a1;
}

_QWORD *sub_1005E4084(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = a1[4];
  v3 = a1[7];
  v4 = a1[9];
  v5 = a1[10];
  v6 = a1[15];
  swift_bridgeObjectRetain(a1[14]);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  return a1;
}

unint64_t sub_1005E40F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013FBC20;
  if (!qword_1013FBC20)
  {
    v1 = objc_opt_self(CRLColor);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1013FBC20);
  }
  return result;
}

_QWORD *sub_1005E4130(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[4];
  v3 = a1[7];
  v4 = a1[10];
  swift_bridgeObjectRetain(a1[9]);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t sub_1005E4184(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  return a1;
}

uint64_t storeEnumTagSinglePayload for CRLBoardItemParentAffinity.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1005E41F8 + 4 * byte_100EFD175[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1005E422C + 4 * asc_100EFD170[v4]))();
}

uint64_t sub_1005E422C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1005E4234(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1005E423CLL);
  return result;
}

uint64_t sub_1005E4248(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1005E4250);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1005E4254(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1005E425C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardItemParentAffinity.CodingKeys()
{
  return &type metadata for CRLBoardItemParentAffinity.CodingKeys;
}

unint64_t sub_1005E427C()
{
  unint64_t result;

  result = qword_1013E6B30;
  if (!qword_1013E6B30)
  {
    result = swift_getWitnessTable(&unk_100EFDAFC, &type metadata for CRLBoardItemParentAffinity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E6B30);
  }
  return result;
}

unint64_t sub_1005E42C4()
{
  unint64_t result;

  result = qword_1013E6B38;
  if (!qword_1013E6B38)
  {
    result = swift_getWitnessTable(&unk_100EFDBA0, &type metadata for CRLCreateBoardIntent);
    atomic_store(result, (unint64_t *)&qword_1013E6B38);
  }
  return result;
}

uint64_t sub_1005E4308()
{
  return sub_1004B7878((unint64_t *)&qword_1013E1138, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F062EC);
}

unint64_t sub_1005E4338()
{
  unint64_t result;

  result = qword_1013E6B40;
  if (!qword_1013E6B40)
  {
    result = swift_getWitnessTable(&unk_100EFDBC8, &type metadata for CRLCreateBoardIntent);
    atomic_store(result, (unint64_t *)&qword_1013E6B40);
  }
  return result;
}

unint64_t sub_1005E4380()
{
  unint64_t result;

  result = qword_1013E6B48;
  if (!qword_1013E6B48)
  {
    result = swift_getWitnessTable(&unk_100EFDC58, &type metadata for CRLCreateBoardIntent);
    atomic_store(result, (unint64_t *)&qword_1013E6B48);
  }
  return result;
}

unint64_t sub_1005E43C8()
{
  unint64_t result;

  result = qword_1013E6B50;
  if (!qword_1013E6B50)
  {
    result = swift_getWitnessTable(&unk_100EFDC80, &type metadata for CRLCreateBoardIntent);
    atomic_store(result, (unint64_t *)&qword_1013E6B50);
  }
  return result;
}

uint64_t sub_1005E440C(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &unk_101119FC4, 1) + 8);
}

uint64_t sub_1005E4430(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_101119F9C, 1);
}

uint64_t sub_1005E4440()
{
  uint64_t v1;

  IntentParameter.wrappedValue.getter(&v1);
  return v1;
}

uint64_t sub_1005E4470@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t result;
  _QWORD v37[2];
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  _QWORD v44[2];
  _QWORD v45[6];

  v43 = a1;
  v1 = type metadata accessor for InputConnectionBehavior(0);
  v41 = *(_QWORD *)(v1 - 8);
  v42 = v1;
  __chkstk_darwin(v1);
  v40 = (char *)v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1004B804C(&qword_1013E1110);
  __chkstk_darwin(v3);
  v39 = (char *)v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C(&qword_1013E6B70);
  __chkstk_darwin(v5);
  v38 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_1013E1118);
  __chkstk_darwin(v7);
  v9 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Locale(0);
  __chkstk_darwin(v14);
  v16 = (char *)v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v17);
  v19 = (char *)v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for LocalizedStringResource(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)v37 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37[1] = sub_1004B804C(&qword_1013E6B78);
  v24 = String.LocalizationValue.init(stringLiteral:)(1701667150, 0xE400000000000000);
  static Locale.current.getter(v24);
  v25 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v26 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
  v26(v13, enum case for LocalizedStringResource.BundleDescription.main(_:), v10);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v19, 0x6E497070414C5243, 0xED000073746E6574, v16, v13, "Parameter title for new board name", 34, 2);
  v27 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000021, 0x8000000100FB90A0);
  static Locale.current.getter(v27);
  v26(v13, v25, v10);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v19, 0x6E497070414C5243, 0xED000073746E6574, v16, v13, "Parameter description for new board name", 40, 2);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v9, 0, 1, v20);
  v28 = type metadata accessor for String.IntentInputOptions(0);
  v45[0] = 0;
  v45[1] = 0;
  v29 = v38;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v38, 1, 1, v28);
  v30 = type metadata accessor for IntentDialog(0);
  v31 = v39;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v39, 1, 1, v30);
  v32 = v40;
  (*(void (**)(char *, _QWORD, uint64_t))(v41 + 104))(v40, enum case for InputConnectionBehavior.default(_:), v42);
  v33 = IntentParameter<>.init(title:description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)(v23, v9, v45, v29, v31, v32);
  v34 = v43;
  *v43 = v33;
  sub_1004B804C(&qword_1013E1128);
  v44[0] = 0xD00000000000001FLL;
  v44[1] = 0x8000000100FAFD20;
  AnyHashable.init<A>(_:)(v44, &type metadata for String, &protocol witness table for String);
  type metadata accessor for AppDependencyManager(0);
  v35 = static AppDependencyManager.shared.getter();
  result = AppDependency.__allocating_init(key:manager:)(v45, v35);
  v34[1] = result;
  v34[5] = (uint64_t)&type metadata for CRLCreateBoardIntentPerformer;
  v34[6] = (uint64_t)&off_101283D10;
  return result;
}

uint64_t sub_1005E48BC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2[69] = v1;
  v2[68] = a1;
  v3 = type metadata accessor for LocalizedStringResource(0);
  v2[70] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1004B804C(&qword_1013E1110);
  v2[71] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CRLBoardEntity(0);
  v2[72] = v5;
  v6 = (*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[73] = swift_task_alloc(v6);
  v2[74] = swift_task_alloc(v6);
  v2[75] = swift_task_alloc(v6);
  v2[76] = swift_task_alloc(v6);
  return swift_task_switch(sub_1005E4988, 0, 0);
}

uint64_t sub_1005E4988()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  sub_1004BB5A4((_QWORD *)(v0[69] + 16), *(_QWORD *)(v0[69] + 40));
  v1 = IntentParameter.wrappedValue.getter(v0 + 60);
  v2 = v0[60];
  v3 = v0[61];
  v0[77] = v3;
  AppDependency.wrappedValue.getter(v1);
  v0[38] = &type metadata for CRLBoardLibraryProvidingDependency;
  v0[39] = &off_10129B490;
  v4 = (_QWORD *)swift_task_alloc(dword_1013F6AEC);
  v0[78] = v4;
  *v4 = v0;
  v4[1] = sub_1005E4A3C;
  return sub_100884630(v0[76], v2, v3, (uint64_t)(v0 + 35));
}

uint64_t sub_1005E4A3C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 624);
  *(_QWORD *)(*v1 + 632) = v0;
  swift_task_dealloc(v3);
  swift_bridgeObjectRelease(*(_QWORD *)(v2 + 616));
  if (v0)
  {
    v4 = sub_1005E4C00;
  }
  else
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v2 + 280));
    v4 = sub_1005E4ABC;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1005E4ABC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 608);
  v2 = *(_QWORD *)(v0 + 600);
  v3 = *(_QWORD *)(v0 + 592);
  v4 = *(_QWORD *)(v0 + 584);
  v5 = *(_QWORD *)(v0 + 576);
  v10 = *(_QWORD *)(v0 + 568);
  v11 = *(_QWORD *)(v0 + 560);
  sub_1005112BC(v1, v2);
  v6 = sub_100880218();
  sub_1005112BC(v2, v3);
  sub_1005112BC(v3, v4);
  IntentParameter.wrappedValue.setter(v4);
  sub_1005761B8(v3);
  sub_1005761B8(v2);
  *(_QWORD *)(v0 + 536) = v6;
  v7 = sub_1004B7878((unint64_t *)&qword_1013E3448, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F064FC);
  v8 = sub_1005761F4();
  static IntentResult.result<A, B>(value:opensIntent:)(v1, v0 + 536, v5, &type metadata for CRLOpenBoardIntent, v7, v8);
  swift_release(v6);
  sub_1005761B8(v1);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005E4C00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  void *v6;
  uint64_t v7;
  uint64_t inited;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v53;
  uint64_t v54;
  uint64_t v55;

  v1 = *(_QWORD *)(v0 + 632);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 280));
  *(_QWORD *)(v0 + 528) = v1;
  swift_errorRetain(v1);
  v2 = sub_1004B804C(&qword_1013E0210);
  if (swift_dynamicCast(v0 + 416, v0 + 528, v2, &type metadata for CRLBoardTitleValidator.Error, 0))
  {
    swift_errorRelease(*(_QWORD *)(v0 + 632));
    v3 = *(_QWORD *)(v0 + 416);
    v4 = *(_QWORD *)(v0 + 424);
    v5 = *(unsigned __int8 *)(v0 + 432);
    if (qword_1013DD838 != -1)
      swift_once(&qword_1013DD838, sub_100A04F30);
    v54 = *(_QWORD *)(v0 + 560);
    v55 = *(_QWORD *)(v0 + 568);
    swift_beginAccess(&static OS_os_log.appIntents, v0 + 344, 0, 0);
    v6 = (void *)static OS_os_log.appIntents;
    v7 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v7, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100EF5550;
    v53 = v6;
    IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 464));
    *(_OWORD *)(v0 + 496) = *(_OWORD *)(v0 + 464);
    v9 = sub_1004B804C((uint64_t *)&unk_1013E1C80);
    v10 = String.init<A>(describing:)(v0 + 496, v9);
    v12 = v11;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v13 = sub_1004CFC2C();
    *(_QWORD *)(inited + 64) = v13;
    *(_QWORD *)(inited + 32) = v10;
    *(_QWORD *)(inited + 40) = v12;
    sub_1005E5784(v3, v4, v5);
    v14 = sub_10089E3D0(v3, v4, v5);
    v16 = v15;
    sub_1005E579C(v3, v4, v5);
    *(_QWORD *)(inited + 96) = &type metadata for String;
    *(_QWORD *)(inited + 104) = v13;
    *(_QWORD *)(inited + 72) = v14;
    *(_QWORD *)(inited + 80) = v16;
    *(_QWORD *)(v0 + 440) = v3;
    *(_QWORD *)(v0 + 448) = v4;
    *(_BYTE *)(v0 + 456) = v5;
    sub_1005E5784(v3, v4, v5);
    v17 = String.init<A>(reflecting:)(v0 + 440, &type metadata for CRLBoardTitleValidator.Error);
    *(_QWORD *)(inited + 136) = &type metadata for String;
    *(_QWORD *)(inited + 144) = v13;
    *(_QWORD *)(inited + 112) = v17;
    *(_QWORD *)(inited + 120) = v18;
    v20 = static os_log_type_t.debug.getter(v19);
    sub_100A06EBC((uint64_t)v53, &_mh_execute_header, v20, "Invalid name for board provided: %@ - %{public}@ <%@>", 53, 2, inited);
    swift_setDeallocating(inited);
    v21 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 3, v21);

    v23 = IntentParameter.projectedValue.getter(v22);
    sub_100631970(v3, v4, v5);
    sub_1005E579C(v3, v4, v5);
    IntentDialog.init(_:)(v54);
    v24 = type metadata accessor for IntentDialog(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v55, 0, 1, v24);
    v25 = type metadata accessor for AppIntentError(0);
    v26 = sub_1004B7878(&qword_1013E3458, (uint64_t (*)(uint64_t))&type metadata accessor for AppIntentError, (uint64_t)&protocol conformance descriptor for AppIntentError);
    swift_allocError(v25, v26, 0, 0);
    IntentParameter.needsValueError(_:)(v55);
    swift_release(v23);
    sub_100576238(v55);
    swift_willThrow(v27);
    v28 = *(_QWORD *)(v0 + 528);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 528));
    if (qword_1013DD838 != -1)
      swift_once(&qword_1013DD838, sub_100A04F30);
    v29 = *(_QWORD *)(v0 + 632);
    swift_beginAccess(&static OS_os_log.appIntents, v0 + 320, 0, 0);
    v30 = (void *)static OS_os_log.appIntents;
    v31 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v32 = swift_initStackObject(v31, v0 + 168);
    *(_OWORD *)(v32 + 16) = xmmword_100EF5A10;
    swift_getErrorValue(v29, v0 + 520, v0 + 368);
    v33 = *(_QWORD *)(v0 + 376);
    v34 = *(_QWORD *)(v0 + 384);
    v35 = v30;
    v36 = Error.publicDescription.getter(v33, v34);
    v38 = v37;
    *(_QWORD *)(v32 + 56) = &type metadata for String;
    v39 = sub_1004CFC2C();
    *(_QWORD *)(v32 + 64) = v39;
    *(_QWORD *)(v32 + 32) = v36;
    *(_QWORD *)(v32 + 40) = v38;
    swift_getErrorValue(v29, v0 + 512, v0 + 392);
    v40 = Error.fullDescription.getter(*(_QWORD *)(v0 + 400));
    *(_QWORD *)(v32 + 96) = &type metadata for String;
    *(_QWORD *)(v32 + 104) = v39;
    *(_QWORD *)(v32 + 72) = v40;
    *(_QWORD *)(v32 + 80) = v41;
    v42 = static os_log_type_t.error.getter(v40);
    sub_100A06EBC((uint64_t)v35, &_mh_execute_header, v42, "Error creating a board: %{public}@ <%@>", 39, 2, v32);
    swift_setDeallocating(v32);
    v43 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v32 + 32, 2, v43);

    v44 = type metadata accessor for _PrebuiltAppIntentError(0);
    v45 = sub_1004B7878((unint64_t *)&qword_1013E53A0, (uint64_t (*)(uint64_t))&type metadata accessor for _PrebuiltAppIntentError, (uint64_t)&protocol conformance descriptor for _PrebuiltAppIntentError);
    swift_allocError(v44, v45, 0, 0);
    v46.n128_f64[0] = static _UnrecoverableError.unknownError.getter();
    swift_willThrow(v46);
    v28 = v29;
  }
  swift_errorRelease(v28);
  v47 = *(_QWORD *)(v0 + 600);
  v48 = *(_QWORD *)(v0 + 592);
  v49 = *(_QWORD *)(v0 + 584);
  v50 = *(_QWORD *)(v0 + 568);
  v51 = *(_QWORD *)(v0 + 560);
  swift_task_dealloc(*(_QWORD *)(v0 + 608));
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005E513C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for LocalizedStringResource(0);
  sub_100501DE0(v10, qword_10147EB20);
  sub_1004F2A1C(v10, (uint64_t)qword_10147EB20);
  v11 = String.LocalizationValue.init(stringLiteral:)(0x4220657461657243, 0xEC0000006472616FLL);
  static Locale.current.getter(v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v9, 0x6E497070414C5243, 0xED000073746E6574, v6, v3, "App intent title", 16, 2);
}

uint64_t sub_1005E52CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1013DCB18 != -1)
    swift_once(&qword_1013DCB18, sub_1005E513C);
  v2 = type metadata accessor for LocalizedStringResource(0);
  v3 = sub_1004F2A1C(v2, (uint64_t)qword_10147EB20);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1005E533C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  Swift::String v10;
  uint64_t KeyPath;
  uint64_t v12;
  Swift::String v13;
  uint64_t v15;

  v4 = sub_1004B804C(&qword_1013E6B88);
  __chkstk_darwin(v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_1013E6B90);
  __chkstk_darwin(v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(13, 1, a1, a2);
  v10._countAndFlagsBits = 0x20657461657243;
  v10._object = (void *)0xE700000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v10);
  KeyPath = swift_getKeyPath(&unk_100EFDCB8);
  v12 = sub_1004B804C(&qword_1013E6B98);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v7, v12);
  swift_release(KeyPath);
  v13._countAndFlagsBits = 0x6472616F6220;
  v13._object = (void *)0xE600000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v13);
  ParameterSummaryString.init(stringInterpolation:)(v9, a1, a2);
  return IntentParameterSummary.init(_:table:)(v6, 0x6E497070414C5243, 0xED000073746E6574, a1, a2);
}

uint64_t sub_1005E54B8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1013E6B84);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1004CF80C;
  return sub_1005E48BC(a1);
}

uint64_t sub_1005E550C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1005E4338();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

uint64_t destroy for CRLCreateBoardIntent(_QWORD *a1)
{
  swift_release(*a1);
  swift_release(a1[1]);
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1 + 2);
}

uint64_t initializeWithCopy for CRLCreateBoardIntent(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  __int128 v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t *, uint64_t);

  v3 = *a2;
  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = a2 + 2;
  v6 = *(_OWORD *)(a2 + 5);
  *(_OWORD *)(a1 + 40) = v6;
  v7 = v6;
  v8 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v6 - 8);
  swift_retain(v3);
  swift_retain(v4);
  v8(a1 + 16, v5, v7);
  return a1;
}

uint64_t *assignWithCopy for CRLCreateBoardIntent(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  sub_1004EA5C8(a1 + 2, a2 + 2);
  return a1;
}

__n128 initializeWithTake for CRLLineEndData(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t *assignWithTake for CRLCreateBoardIntent(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  v5 = a1[1];
  a1[1] = a2[1];
  swift_release(v5);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1 + 2);
  v6 = *((_OWORD *)a2 + 2);
  *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
  *((_OWORD *)a1 + 2) = v6;
  a1[6] = a2[6];
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLCreateBoardIntent(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLCreateBoardIntent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLCreateBoardIntent()
{
  return &type metadata for CRLCreateBoardIntent;
}

uint64_t sub_1005E5758()
{
  return sub_1004CBA30(&qword_1013E6B60, &qword_1013E6B68, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

uint64_t sub_1005E5784(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return swift_bridgeObjectRetain(a2);
  return result;
}

uint64_t sub_1005E579C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return swift_bridgeObjectRelease(a2);
  return result;
}

uint64_t sub_1005E57B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1005E57DC()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1013E6BCC);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1004CFD00;
  return sub_1005E5824();
}

uint64_t sub_1005E5824()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 200) = v0;
  v2 = sub_1004B804C(&qword_1013E01F0);
  *(_QWORD *)(v1 + 208) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1005E5880, v0, 0);
}

uint64_t sub_1005E5880()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 200);
  v2 = *(_QWORD *)(v1 + 136);
  if (v2)
    goto LABEL_3;
  v3 = *(_QWORD *)(v0 + 208);
  v4 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v5 = swift_allocObject(&unk_101271368, 24, 7);
  swift_weakInit(v5 + 16, v1);
  v6 = (_QWORD *)swift_allocObject(&unk_101271390, 40, 7);
  v6[2] = 0;
  v6[3] = 0;
  v6[4] = v5;
  v7 = sub_100618A7C(v3, (uint64_t)&unk_1013E6CE8, (uint64_t)v6);
  v8 = *(_QWORD *)(v1 + 136);
  *(_QWORD *)(v1 + 136) = v7;
  swift_release(v8);
  v2 = *(_QWORD *)(v1 + 136);
  if (v2)
  {
LABEL_3:
    *(_QWORD *)(v0 + 216) = v2;
    v9 = async function pointer to Task.value.getter[1];
    swift_retain(v2);
    v10 = (_QWORD *)swift_task_alloc(v9);
    *(_QWORD *)(v0 + 224) = v10;
    v11 = sub_1004B804C((uint64_t *)&unk_101405F80);
    v12 = sub_1004B804C(&qword_1013E0210);
    *(_QWORD *)(v0 + 232) = v12;
    *v10 = v0;
    v10[1] = sub_1005E59E0;
    return Task.value.getter(v0 + 16, v2, v11, v12, &protocol self-conformance witness table for Error);
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v0 + 208));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1005E59E0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 224);
  *(_QWORD *)(*v1 + 240) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_1005E5AE4;
  else
    v4 = sub_1005E5A44;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 200), 0);
}

uint64_t sub_1005E5A44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 200);
  swift_release(*(_QWORD *)(v0 + 216));
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(_BYTE *)(v0 + 88);
  v4 = *(_QWORD *)(v1 + 152);
  v5 = *(_QWORD *)(v1 + 160);
  v6 = *(_QWORD *)(v1 + 168);
  v7 = *(_QWORD *)(v1 + 176);
  v8 = *(_QWORD *)(v1 + 184);
  v9 = *(_QWORD *)(v1 + 192);
  v10 = *(_QWORD *)(v1 + 200);
  v11 = *(_QWORD *)(v1 + 208);
  v12 = *(_QWORD *)(v1 + 216);
  v13 = *(_BYTE *)(v1 + 224);
  v14 = *(_OWORD *)(v0 + 32);
  v15 = *(_OWORD *)(v0 + 48);
  v16 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v1 + 152) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v1 + 168) = v14;
  *(_OWORD *)(v1 + 184) = v15;
  *(_OWORD *)(v1 + 200) = v16;
  *(_QWORD *)(v1 + 216) = v2;
  *(_BYTE *)(v1 + 224) = v3;
  sub_1005E6090(v4, v5, v6, v7, v8, v9, v10, v11, v12, v13);
  v17 = *(_QWORD *)(v0 + 200);
  *(_BYTE *)(v17 + 144) = 1;
  v18 = *(_QWORD *)(v17 + 136);
  *(_QWORD *)(v17 + 136) = 0;
  swift_release(v18);
  swift_task_dealloc(*(_QWORD *)(v0 + 208));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005E5AE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t inited;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (qword_1013DD6C8 != -1)
    swift_once(&qword_1013DD6C8, sub_100A00D28);
  v2 = *(_QWORD *)(v0 + 232);
  v1 = *(_QWORD *)(v0 + 240);
  v3 = *(_QWORD *)(v0 + 216);
  swift_beginAccess(&static OS_os_log.crlError, v0 + 168, 0, 0);
  v4 = (void *)static OS_os_log.crlError;
  v5 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v5, v0 + 96);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_QWORD *)(v0 + 192) = v1;
  v7 = v4;
  swift_errorRetain(v1);
  v8 = String.init<A>(describing:)(v0 + 192, v2);
  v10 = v9;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v8;
  *(_QWORD *)(inited + 40) = v10;
  v12 = static os_log_type_t.debug.getter(v11);
  sub_100A06EBC((uint64_t)v7, &_mh_execute_header, v12, "Error trying to fetch view state from database. %@", 50, 2, inited);
  swift_release(v3);
  swift_setDeallocating(inited);
  v13 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v13);

  swift_errorRelease(v1);
  v14 = *(_QWORD *)(v0 + 200);
  *(_BYTE *)(v14 + 144) = 1;
  v15 = *(_QWORD *)(v14 + 136);
  *(_QWORD *)(v14 + 136) = 0;
  swift_release(v15);
  swift_task_dealloc(*(_QWORD *)(v0 + 208));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005E5C6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 120) = a1;
  *(_QWORD *)(v4 + 128) = a4;
  return swift_task_switch(sub_1005E5C84, 0, 0);
}

uint64_t sub_1005E5C84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 128) + 16;
  swift_beginAccess(v1, v0 + 96, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  *(_QWORD *)(v0 + 136) = Strong;
  if (Strong)
    return swift_task_switch(sub_1005E5D18, Strong, 0);
  v4 = *(_QWORD *)(v0 + 120);
  *(_QWORD *)(v4 + 64) = 0;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)v4 = 0u;
  *(_OWORD *)(v4 + 16) = 0u;
  *(_BYTE *)(v4 + 72) = 2;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005E5D18()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(void **)(v0[17] + 112);
  v0[18] = v1;
  v2 = dword_101405F7C;
  v1;
  v3 = (_QWORD *)swift_task_alloc(v2);
  v0[19] = v3;
  *v3 = v0;
  v3[1] = sub_1005E5D8C;
  return sub_100B109C4((uint64_t)(v0 + 2));
}

uint64_t sub_1005E5D8C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 152);
  *(_QWORD *)(*v1 + 160) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1005E5E40;
  }
  else
  {

    v4 = sub_1005E5DF8;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1005E5DF8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 120);
  swift_release(*(_QWORD *)(v0 + 136));
  sub_1005E6168(v0 + 16, v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005E5E40()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;

  v1 = *(_QWORD *)(v0 + 136);

  v2 = swift_release(v1);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
}

uint64_t sub_1005E5E7C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 136));
  sub_1005E6090(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 216), *(_BYTE *)(v0 + 224));
  swift_defaultActor_destroy(v0);
  return swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for CRLViewStateRestorationHelper()
{
  return objc_opt_self(_TtC8Freeform29CRLViewStateRestorationHelper);
}

uint64_t sub_1005E5F04(void *a1, void *a2, void *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v18;

  v7 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_defaultActor_initialize(v3, v10);
  *(_BYTE *)(v3 + 144) = 0;
  *(_OWORD *)(v3 + 152) = 0u;
  *(_OWORD *)(v3 + 168) = 0u;
  *(_OWORD *)(v3 + 184) = 0u;
  *(_OWORD *)(v3 + 200) = 0u;
  *(_QWORD *)(v3 + 216) = 0;
  *(_BYTE *)(v3 + 224) = 2;
  *(_QWORD *)(v3 + 112) = a1;
  *(_QWORD *)(v3 + 120) = a2;
  *(_QWORD *)(v3 + 128) = a3;
  *(_QWORD *)(v3 + 136) = 0;
  v11 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v9, 1, 1, v11);
  v12 = (_QWORD *)swift_allocObject(&unk_101271340, 40, 7);
  v12[2] = 0;
  v12[3] = 0;
  v12[4] = v3;
  v13 = a1;
  v14 = a2;
  v15 = a3;
  swift_retain(v3);
  v16 = sub_1009880C4((uint64_t)v9, (uint64_t)&unk_1013E6CD8, (uint64_t)v12);
  swift_release(v16);
  sub_10056805C((uint64_t)v9);
  return v3;
}

uint64_t sub_1005E6028()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)swift_task_alloc(dword_1013E6CD4);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1004CF80C;
  v2 = (_QWORD *)swift_task_alloc(dword_1013E6BCC);
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_1004CFD00;
  return sub_1005E5824();
}

uint64_t sub_1005E6090(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, unint64_t a9, char a10)
{
  uint64_t result;

  if (a10 != 2)
  {
    sub_1004BE2FC(a6, a7);
    return sub_1004BE2FC(a8, a9);
  }
  return result;
}

uint64_t sub_1005E60DC()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005E6104(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 32);
  v5 = (_QWORD *)swift_task_alloc(dword_1013E6CE4);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1004CF80C;
  v5[15] = a1;
  v5[16] = v4;
  return swift_task_switch(sub_1005E5C84, 0, 0);
}

uint64_t sub_1005E6168(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C((uint64_t *)&unk_101405F80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *sub_1005E6200()
{
  uint64_t v0;
  void *Strong;
  void *v2;
  id v3;
  uint64_t v4;
  void *v5;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_interactiveCanvasController);
  v2 = Strong;
  if (Strong)
  {
    v3 = objc_msgSend(Strong, "layoutForInfo:", *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_textStorage));

    if (v3)
    {
      v4 = type metadata accessor for CRLWPLayout();
      v5 = (void *)swift_dynamicCastClass(v3, v4);
      v2 = v5;
      if (v5)
      {
        if ((objc_msgSend(v5, "layoutIsValid") & 1) == 0)
          objc_msgSend(v2, "validate");
      }
      else
      {

      }
    }
    else
    {
      return 0;
    }
  }
  return v2;
}

char *sub_1005E62E4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  void *v3;
  uint64_t v4;
  id v5;
  char *v6;
  id v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  objc_class *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  id v15;
  char *v16;
  char *v17;
  char *v18;
  objc_super v20;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_textStorage);
  v2 = *(char **)(v1 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange);
  if (!v2)
    return 0;
  v3 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_selectedMarkedTextRangeFromOS);
  if (!v3)
    return 0;
  v4 = *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
  v5 = objc_allocWithZone((Class)type metadata accessor for CRLTextPosition());
  v6 = v2;
  v7 = v3;
  v8 = (char *)objc_msgSend(v5, "init:caretAffinity:", v4, 0);
  NSNotFound.getter(v8);
  v9 = *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
  v10 = *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity];
  v11 = (objc_class *)type metadata accessor for CRLTextRange();
  v12 = (char *)objc_allocWithZone(v11);
  v13 = OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity;
  *(_QWORD *)&v12[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge] = 0;
  v14 = &v12[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
  *(_QWORD *)v14 = v9;
  *((_QWORD *)v14 + 1) = v9;
  *(_QWORD *)&v12[v13] = v10;
  v20.receiver = v12;
  v20.super_class = v11;
  v15 = objc_msgSendSuper2(&v20, "init");

  v16 = (char *)objc_msgSend(v7, "start");
  v17 = *(char **)&v16[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

  v18 = sub_10060F758(v17);
  return v18;
}

char *sub_1005E6498()
{
  uint64_t v0;
  _BYTE *Strong;
  char v2;
  void *v3;
  id v5;

  Strong = (_BYTE *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_editor);
  if (Strong)
  {
    v2 = Strong[OBJC_IVAR____TtC8Freeform11CRLWPEditor_isResigning];

    if ((v2 & 1) != 0)
      return 0;
  }
  if (*(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_textStorage)
                 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange))
    return sub_1005E62E4();
  v3 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager__selectedTextRange);
  v5 = v3;
  return (char *)v3;
}

void sub_1005E65EC()
{
  uint64_t v0;
  _BYTE *Strong;
  char v2;
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  Strong = (_BYTE *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_editor);
  if (!Strong || (v2 = Strong[OBJC_IVAR____TtC8Freeform11CRLWPEditor_isResigning], Strong, (v2 & 1) == 0))
  {
    if (*(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_textStorage)
                   + OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange))
    {
      v3 = sub_1005E62E4();
      if (!v3)
        return;
    }
    else
    {
      v3 = *(char **)(v0 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager__selectedTextRange);
      v7 = v3;
      if (!v3)
        return;
    }
    v4 = (char *)objc_msgSend(v3, "start");
    v5 = *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

    if (v5 == NSNotFound.getter(v6))
    {

    }
    else
    {
      v8 = *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
      v9 = *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];

      if (__OFSUB__(v9, v8))
        __break(1u);
    }
  }
}

void sub_1005E6814()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _BYTE *Strong;
  char v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[3];
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;

  v1 = sub_1004B804C(&qword_1013F3D90);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = (_BYTE *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_editor);
  if (!Strong
    || (v12 = Strong[OBJC_IVAR____TtC8Freeform11CRLWPEditor_isResigning], Strong, (v12 & 1) == 0))
  {
    v13 = OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_textStorage;
    if (*(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_textStorage)
                   + OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange))
    {
      v14 = sub_1005E62E4();
      if (!v14)
        return;
    }
    else
    {
      v14 = *(char **)(v0 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager__selectedTextRange);
      v27 = v14;
      if (!v14)
        return;
    }
    v29 = v2;
    v15 = *(_QWORD *)&v14[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
    v16 = *(_QWORD *)&v14[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];

    v17 = *(id *)(v0 + v13);
    sub_1007D484C();
    v19 = v18;

    sub_1007D7CB8(v15, v16, v30);
    v20 = (void *)v30[0];
    v21 = *(_QWORD *)(v30[0] + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData);
    if (v21)
    {
      v22 = v30[1];
      v23 = v30[2];
      (*(void (**)(void))(*(_QWORD *)v21 + 760))();
      sub_1004D29BC((uint64_t)&v7[*(int *)(v5 + 20)], (uint64_t)v10);
      sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLWPShapeItemCRDTData);
      v24 = sub_1004B804C((uint64_t *)&unk_1013E8570);
      CRAttributedString.subscript.getter(v22, v23, v24);
      sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLWPStorageCRDTData);
      v25 = (void *)CRAttributedString.Substring.attributedString.getter(v1);
      (*(void (**)(char *, uint64_t))(v29 + 8))(v4, v1);
      v26 = objc_msgSend(v25, "string");

      if (v26)
      {

        v33 = v31;
        v34 = v32;
        sub_1005A73A4((id *)&v33);
        String.init(_:)(v26);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

id sub_1005E6AE4()
{
  uint64_t v0;
  id v1;
  void *v2;
  void *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  objc_class *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  objc_super v14;

  v1 = *(id *)(v0 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_textStorage);
  sub_1007D484C();
  v3 = v2;

  v4 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CRLTextPosition()), "init:caretAffinity:", 0, 0);
  NSNotFound.getter(v4);
  v5 = *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
  v6 = *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity];
  v7 = (objc_class *)type metadata accessor for CRLTextRange();
  v8 = (char *)objc_allocWithZone(v7);
  v9 = OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity;
  *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge] = 0;
  v10 = &v8[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
  *(_QWORD *)v10 = v5;
  *((_QWORD *)v10 + 1) = v5;
  *(_QWORD *)&v8[v9] = v6;
  v14.receiver = v8;
  v14.super_class = v7;
  v11 = objc_msgSendSuper2(&v14, "init");

  v12 = objc_msgSend(v11, "start");
  return v12;
}

id sub_1005E6C38()
{
  uint64_t v0;
  id v1;
  void *v2;
  void *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  objc_class *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  objc_super v14;

  v1 = *(id *)(v0 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_textStorage);
  sub_1007D484C();
  v3 = v2;

  v4 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CRLTextPosition()), "init:caretAffinity:", objc_msgSend(v3, "length"), 0);
  NSNotFound.getter(v4);
  v5 = *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
  v6 = *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity];
  v7 = (objc_class *)type metadata accessor for CRLTextRange();
  v8 = (char *)objc_allocWithZone(v7);
  v9 = OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity;
  *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge] = 0;
  v10 = &v8[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
  *(_QWORD *)v10 = v5;
  *((_QWORD *)v10 + 1) = v5;
  *(_QWORD *)&v8[v9] = v6;
  v14.receiver = v8;
  v14.super_class = v7;
  v11 = objc_msgSendSuper2(&v14, "init");

  v12 = objc_msgSend(v11, "start");
  return v12;
}

void *sub_1005E6D70(double a1, double a2)
{
  _QWORD *v2;
  _QWORD *v3;
  void *v6;
  uint64_t v7;
  uint64_t inited;
  uint64_t v9;
  char *Strong;
  id v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v21;

  v3 = v2;
  if (qword_1013DCB58 != -1)
    swift_once(&qword_1013DCB58, sub_1006185A4);
  v6 = (void *)qword_10147ECB0;
  v7 = sub_1004B804C((uint64_t *)&unk_1013E8830);
  inited = swift_initStackObject(v7, &v21);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  type metadata accessor for CGPoint(0);
  *(_QWORD *)(inited + 56) = v9;
  *(double *)(inited + 32) = a1;
  *(double *)(inited + 40) = a2;
  Strong = (char *)swift_unknownObjectWeakLoadStrong((char *)v3 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_editor);
  v11 = v6;
  if (Strong)
  {
    v12 = sub_1005E893C(0, a1, a2);
    v13 = objc_msgSend(*(id *)&Strong[OBJC_IVAR____TtC8Freeform11CRLWPEditor_editorHelper], "rangeForSelectionAtCharIndex:caretIndex:", v12, v12);
    v15 = v14;
    v16 = objc_allocWithZone((Class)type metadata accessor for CRLTextRange());
    v17 = (void *)sub_10060EDE4((uint64_t)v13, v15);
    v18 = *(void **)((char *)v3 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager__selectedTextRange);
    *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager__selectedTextRange) = v17;
    v19 = v17;

    (*(void (**)(void))((swift_isaMask & *v3) + 0x268))();
    swift_release(inited);

  }
  else
  {
    swift_release(inited);
    v17 = 0;
  }

  return v17;
}

id sub_1005E6F54(void *a1, void *a2, void *a3)
{
  char *v3;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  objc_class *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  char *v25;
  id v26;
  objc_super v27;
  objc_super v28;
  objc_super v29;

  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_minimumCaretHitRegionWidth] = 0;
  v6 = OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager__selectedTextRange;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager__selectedTextRange] = 0;
  v7 = &v3[OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_interactiveCanvasController];
  swift_unknownObjectWeakInit(&v3[OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_interactiveCanvasController], 0);
  v8 = &v3[OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_editor];
  swift_unknownObjectWeakInit(&v3[OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_editor], 0);
  v9 = OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_selectionViewController;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_selectionViewController] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_lastEditingShape] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_textStorage] = a1;
  v25 = v3;
  v26 = a1;
  v10 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CRLTextPosition()), "init:caretAffinity:", objc_msgSend(v26, "length"), 0);
  NSNotFound.getter(v10);
  v11 = *(_QWORD *)&v10[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
  v12 = *(_QWORD *)&v10[OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity];
  v13 = (objc_class *)type metadata accessor for CRLTextRange();
  v14 = (char *)objc_allocWithZone(v13);
  v15 = OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity;
  *(_QWORD *)&v14[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge] = 0;
  v16 = &v14[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
  *(_QWORD *)v16 = v11;
  *((_QWORD *)v16 + 1) = v11;
  *(_QWORD *)&v14[v15] = v12;
  v29.receiver = v14;
  v29.super_class = v13;
  v17 = objc_msgSendSuper2(&v29, "init");

  v18 = *(void **)&v3[v6];
  *(_QWORD *)&v3[v6] = v17;

  swift_unknownObjectWeakAssign(v7, a2);
  swift_unknownObjectWeakAssign(v8, a3);
  if (a2)
  {
    v19 = a2;
    v20 = sub_100705718(v19, (uint64_t)a3);
    v21 = *(void **)&v3[v9];
    *(_QWORD *)&v3[v9] = v20;

    v27.receiver = v25;
    v27.super_class = (Class)type metadata accessor for CRLWPTextSelectionManager();
    v22 = objc_msgSendSuper2(&v27, "init");

  }
  else
  {

    sub_100757E04(&_mh_execute_header, (uint64_t)"init(with:in:backLinkTo:)", 25, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPTextSelectionManager.swift", 98, 2, 150, "Need an icc here!", 17, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(with:in:backLinkTo:)", 25, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPTextSelectionManager.swift", 98, 2u, 150, (uint64_t)"Need an icc here!", 17, 2u);
    v28.receiver = v25;
    v28.super_class = (Class)type metadata accessor for CRLWPTextSelectionManager();
    v22 = objc_msgSendSuper2(&v28, "init");
    v19 = v26;
  }

  return v22;
}

id sub_1005E720C()
{
  char *v0;
  void *v1;
  char *v2;
  void *v3;
  char *v4;
  id v5;
  objc_super v7;

  v1 = v0;
  v2 = *(char **)&v0[OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_selectionViewController];
  if (v2)
  {
    v3 = *(void **)&v2[OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_icc];
    v4 = v2;
    v5 = objc_msgSend(v3, "removeDecorator:", v4);
    (*(void (**)(id))((swift_isaMask & *(_QWORD *)v4) + 0x180))(v5);
    sub_1007053B4();

  }
  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for CRLWPTextSelectionManager();
  return objc_msgSendSuper2(&v7, "dealloc");
}

void sub_1005E734C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  _QWORD v23[3];
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;

  v3 = sub_1004B804C(&qword_1013F3D90);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v7);
  v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v10);
  v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(id *)(v1 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_textStorage);
  sub_1007D484C();
  v15 = v14;

  sub_1007D7CB8(*(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform12CRLTextRange_range), *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8), v23);
  v16 = (void *)v23[0];
  v17 = *(_QWORD *)(v23[0] + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData);
  if (v17)
  {
    v18 = v23[1];
    v19 = v23[2];
    (*(void (**)(void))(*(_QWORD *)v17 + 760))();
    sub_1004D29BC((uint64_t)&v9[*(int *)(v7 + 20)], (uint64_t)v12);
    sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLWPShapeItemCRDTData);
    v20 = sub_1004B804C((uint64_t *)&unk_1013E8570);
    CRAttributedString.subscript.getter(v18, v19, v20);
    sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLWPStorageCRDTData);
    v21 = (void *)CRAttributedString.Substring.attributedString.getter(v3);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v22 = objc_msgSend(v21, "string");

    if (v22)
    {

      v26 = v24;
      v27 = v25;
      sub_1005A73A4((id *)&v26);
      String.init(_:)(v22);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_1005E7634(char *a1, uint64_t a2)
{
  uint64_t v2;
  void *v5;
  uint64_t v6;
  uint64_t inited;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  uint64_t v16;

  if (qword_1013DCB58 != -1)
    swift_once(&qword_1013DCB58, sub_1006185A4);
  v5 = (void *)qword_10147ECB0;
  v6 = sub_1004B804C((uint64_t *)&unk_1013E8830);
  inited = swift_initStackObject(v6, &v16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  v8 = type metadata accessor for CRLTextPosition();
  *(_QWORD *)(inited + 32) = a1;
  *(_QWORD *)(inited + 88) = &type metadata for Int;
  *(_QWORD *)(inited + 56) = v8;
  *(_QWORD *)(inited + 64) = a2;
  v9 = *(_QWORD *)&a1[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
  v10 = v5;
  if (v9 == NSNotFound.getter(a1))
  {
    swift_release(inited);
    v11 = 0;
  }
  else
  {
    v12 = *(id *)(v2 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_textStorage);
    sub_1007D484C();
    v14 = v13;

    v11 = sub_1008AE4EC(a2, (uint64_t)v14);
    swift_release(inited);

  }
  return v11;
}

double sub_1005E78B4(void *a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t inited;
  uint64_t Strong;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  char *v17;
  id v18;
  double x;
  id v20;
  id v21;
  double v23;
  _BYTE v24[64];

  if (qword_1013DCB58 != -1)
    swift_once(&qword_1013DCB58, sub_1006185A4);
  v3 = (void *)qword_10147ECB0;
  v4 = sub_1004B804C((uint64_t *)&unk_1013E8830);
  v5 = swift_allocObject(v4, 64, 7);
  *(_OWORD *)(v5 + 16) = xmmword_100EF5E40;
  *(_QWORD *)(v5 + 56) = type metadata accessor for CRLTextRange();
  *(_QWORD *)(v5 + 32) = a1;
  inited = swift_initStackObject(v4, v24);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_QWORD *)(inited + 56) = sub_1004B804C((uint64_t *)&unk_1013E91F0);
  *(_QWORD *)(inited + 32) = v5;
  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_interactiveCanvasController);
  if (!Strong)
  {
    v20 = v3;
    v21 = a1;
    swift_bridgeObjectRetain(v5);
    goto LABEL_11;
  }
  v8 = (void *)Strong;
  v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_textStorage);
  v10 = v3;
  v11 = a1;
  v12 = objc_msgSend(v8, "layoutForInfo:", v9, swift_bridgeObjectRetain(v5).n128_f64[0]);

  if (!v12)
  {
LABEL_11:
    x = CGRectInfinite.origin.x;
    goto LABEL_12;
  }
  v13 = type metadata accessor for CRLWPLayout();
  v14 = (void *)swift_dynamicCastClass(v12, v13);
  if (!v14)
  {

    goto LABEL_11;
  }
  v15 = v14;
  if ((objc_msgSend(v14, "layoutIsValid") & 1) == 0)
    objc_msgSend(v15, "validate");
  v16 = (void *)qword_10147ECB0;
  v17 = (char *)v11;
  v18 = v16;
  sub_1006255CC((char *)v15, v17, &v23);

  x = v23;
LABEL_12:
  swift_release(inited);

  swift_bridgeObjectRelease(v5);
  return x;
}

void sub_1005E7ACC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X3>, _OWORD *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *Strong;
  void *v18;
  id v19;
  void *v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t v25;
  id v26;
  char *v27;
  char *v28;
  uint64_t v29;
  void *v30;
  id v31;
  id v32;
  char *v33;
  char *v34;
  uint64_t v35;
  id v36;
  void *v37;
  id v38;
  uint64_t v39;
  id v40;
  char *v41;
  char *v42;
  uint64_t v43;
  void *v44;
  _QWORD *v45;
  id v46;
  void *v47;
  id v48;
  char *v49;
  __int128 v50;
  uint64_t v51;
  char *v52;
  void (*v53)(char *, uint64_t);
  void (*v54)(char *, char *, uint64_t);
  id v55;
  id v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  id v60;
  _OWORD v61[2];

  v58 = a4;
  v59 = a3;
  v60 = (id)a2;
  v7 = sub_1004B804C((uint64_t *)&unk_1013E8570);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_interactiveCanvasController);
  if (!Strong)
    goto LABEL_8;
  v18 = Strong;
  v57 = OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_textStorage;
  v19 = objc_msgSend(Strong, "layoutForInfo:", *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_textStorage));

  if (!v19)
    goto LABEL_8;
  v20 = v19;
  v21 = type metadata accessor for CRLWPLayout();
  v22 = (void *)swift_dynamicCastClass(v19, v21);
  if (!v22)
    goto LABEL_7;
  v23 = v22;
  v24 = objc_msgSend(v22, "layoutIsValid");
  if ((v24 & 1) == 0)
    v24 = objc_msgSend(v23, "validate");
  v25 = NSNotFound.getter(v24);
  if ((id)v25 == v60)
  {
LABEL_7:

LABEL_8:
    *a5 = 0u;
    a5[1] = 0u;
    return;
  }
  v52 = (char *)v23;
  v55 = v20;
  v26 = *(id *)(a1 + v57);
  sub_1007D484C();
  v28 = v27;

  v56 = v28;
  v29 = *(_QWORD *)&v28[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
  if (!v29)
  {
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  (*(void (**)(void))(*(_QWORD *)v29 + 760))();
  sub_1004D29BC((uint64_t)&v13[*(int *)(v11 + 20)], (uint64_t)v16);
  sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLWPShapeItemCRDTData);
  v54 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v54(v10, v16, v7);
  sub_1004B84A4((uint64_t)v16, type metadata accessor for CRLWPStorageCRDTData);
  v30 = (void *)CRAttributedString.attributedString.getter(v7);
  v53 = *(void (**)(char *, uint64_t))(v8 + 8);
  v53(v10, v7);
  v31 = objc_msgSend(v30, "length");

  if ((uint64_t)v31 < (uint64_t)v60)
  {

    goto LABEL_8;
  }
  v32 = *(id *)(a1 + v57);
  sub_1007D484C();
  v34 = v33;

  v56 = v34;
  v35 = *(_QWORD *)&v34[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
  if (!v35)
    goto LABEL_22;
  v36 = v60;
  v51 = (uint64_t)v60 + v59;
  (*(void (**)(void))(*(_QWORD *)v35 + 760))();
  sub_1004D29BC((uint64_t)&v13[*(int *)(v11 + 20)], (uint64_t)v16);
  sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLWPShapeItemCRDTData);
  v54(v10, v16, v7);
  sub_1004B84A4((uint64_t)v16, type metadata accessor for CRLWPStorageCRDTData);
  v37 = (void *)CRAttributedString.attributedString.getter(v7);
  v53(v10, v7);
  v38 = objc_msgSend(v37, "length");

  v39 = v59;
  if ((uint64_t)v38 < v51)
  {
    v40 = *(id *)(a1 + v57);
    sub_1007D484C();
    v42 = v41;

    v43 = *(_QWORD *)&v42[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
    if (v43)
    {
      (*(void (**)(void))(*(_QWORD *)v43 + 760))();
      sub_1004D29BC((uint64_t)&v13[*(int *)(v11 + 20)], (uint64_t)v16);
      sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLWPShapeItemCRDTData);
      v54(v10, v16, v7);
      sub_1004B84A4((uint64_t)v16, type metadata accessor for CRLWPStorageCRDTData);
      v44 = (void *)CRAttributedString.attributedString.getter(v7);
      v53(v10, v7);
      v36 = objc_msgSend(v44, "length");

      v39 = 0;
      goto LABEL_16;
    }
LABEL_23:
    __break(1u);
    return;
  }
LABEL_16:
  v45 = v58;
  if (v58)
  {
    *v58 = v36;
    v45[1] = v39;
  }
  v46 = objc_allocWithZone((Class)type metadata accessor for CRLTextRange());
  v47 = (void *)sub_10060EDE4((uint64_t)v60, v59);
  if (qword_1013DCB58 != -1)
    swift_once(&qword_1013DCB58, sub_1006185A4);
  v48 = (id)qword_10147ECB0;
  v49 = v47;
  sub_1006255CC(v52, v49, (double *)v61);

  v50 = v61[1];
  *a5 = v61[0];
  a5[1] = v50;
}

double sub_1005E8048(void *a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t inited;
  uint64_t Strong;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  void *v14;
  void *v15;
  double x;
  id v17;
  id v18;
  _BYTE v20[64];

  if (qword_1013DCB58 != -1)
    swift_once(&qword_1013DCB58, sub_1006185A4);
  v3 = (void *)qword_10147ECB0;
  v4 = sub_1004B804C((uint64_t *)&unk_1013E8830);
  v5 = swift_allocObject(v4, 64, 7);
  *(_OWORD *)(v5 + 16) = xmmword_100EF5E40;
  *(_QWORD *)(v5 + 56) = type metadata accessor for CRLTextPosition();
  *(_QWORD *)(v5 + 32) = a1;
  inited = swift_initStackObject(v4, v20);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_QWORD *)(inited + 56) = sub_1004B804C((uint64_t *)&unk_1013E91F0);
  *(_QWORD *)(inited + 32) = v5;
  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_interactiveCanvasController);
  if (!Strong)
  {
    v17 = v3;
    v18 = a1;
    swift_bridgeObjectRetain(v5);
    goto LABEL_11;
  }
  v8 = (void *)Strong;
  v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_textStorage);
  v10 = v3;
  v11 = a1;
  v12 = objc_msgSend(v8, "layoutForInfo:", v9, swift_bridgeObjectRetain(v5).n128_f64[0]);

  if (!v12)
  {
LABEL_11:
    x = CGRectInfinite.origin.x;
    swift_release(inited);
    goto LABEL_12;
  }
  v13 = type metadata accessor for CRLWPLayout();
  v14 = (void *)swift_dynamicCastClass(v12, v13);
  if (!v14)
  {

    goto LABEL_11;
  }
  v15 = v14;
  if ((objc_msgSend(v14, "layoutIsValid") & 1) == 0)
    objc_msgSend(v15, "validate");
  x = sub_100625E38(v11);
  swift_release(inited);

LABEL_12:
  swift_bridgeObjectRelease(v5);
  return x;
}

double sub_1005E8250(void *a1, uint64_t a2, void *a3, double (*a4)(id))
{
  id v6;
  id v7;
  double v8;

  v6 = a3;
  v7 = a1;
  v8 = a4(v6);

  return v8;
}

void *sub_1005E82C8(double a1, double a2)
{
  uint64_t v2;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t inited;
  uint64_t Strong;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  void *v21;
  _BYTE v22[64];

  if (qword_1013DCB58 != -1)
    swift_once(&qword_1013DCB58, sub_1006185A4);
  v5 = (void *)qword_10147ECB0;
  v6 = sub_1004B804C((uint64_t *)&unk_1013E8830);
  v7 = swift_allocObject(v6, 64, 7);
  *(_OWORD *)(v7 + 16) = xmmword_100EF5E40;
  type metadata accessor for CGPoint(0);
  *(_QWORD *)(v7 + 56) = v8;
  *(double *)(v7 + 32) = a1;
  *(double *)(v7 + 40) = a2;
  inited = swift_initStackObject(v6, v22);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_QWORD *)(inited + 56) = sub_1004B804C((uint64_t *)&unk_1013E91F0);
  *(_QWORD *)(inited + 32) = v7;
  Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_interactiveCanvasController);
  if (!Strong)
  {
    v19 = v5;
    swift_bridgeObjectRetain(v7);
    goto LABEL_11;
  }
  v11 = (void *)Strong;
  v12 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_textStorage);
  v13 = v5;
  v14 = objc_msgSend(v11, "layoutForInfo:", v12, swift_bridgeObjectRetain(v7).n128_f64[0]);

  if (!v14)
  {
LABEL_11:
    swift_release(inited);
    v17 = 0;
    goto LABEL_12;
  }
  v15 = type metadata accessor for CRLWPLayout();
  v16 = (void *)swift_dynamicCastClass(v14, v15);
  v17 = v16;
  if (v16)
  {
    if ((objc_msgSend(v16, "layoutIsValid") & 1) == 0)
      objc_msgSend(v17, "validate");
    v18 = (id)qword_10147ECB0;
    sub_100627450(v17, 1, &v21, a1, a2);

    v17 = v21;
  }
  swift_release(inited);

LABEL_12:
  swift_bridgeObjectRelease(v7);
  return v17;
}

char *sub_1005E84F8(void *a1, double a2, double a3)
{
  uint64_t v3;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t Strong;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  char *v21;
  char *v22;
  void *v23;
  uint64_t v24;
  id v25;
  id v26;
  void *v27;
  char *v28;
  id v29;
  void *v30;
  void *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  id v37;
  id v38;
  id v40;
  __int128 v41;
  _QWORD v42[4];
  char v43[72];

  if (qword_1013DCB58 != -1)
    swift_once(&qword_1013DCB58, sub_1006185A4);
  v7 = (void *)qword_10147ECB0;
  v8 = sub_1004B804C((uint64_t *)&unk_1013E8830);
  v9 = swift_allocObject(v8, 96, 7);
  *(_OWORD *)(v9 + 16) = xmmword_100EF5A10;
  type metadata accessor for CGPoint(0);
  v11 = v10;
  *(_QWORD *)(v9 + 56) = v10;
  *(double *)(v9 + 32) = a2;
  *(double *)(v9 + 40) = a3;
  *(_QWORD *)(v9 + 88) = type metadata accessor for CRLTextRange();
  *(_QWORD *)(v9 + 64) = a1;
  inited = swift_initStackObject(v8, v43);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v13 = sub_1004B804C((uint64_t *)&unk_1013E91F0);
  *(_QWORD *)(inited + 56) = v13;
  *(_QWORD *)(inited + 32) = v9;
  Strong = swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_interactiveCanvasController);
  if (!Strong)
  {
    v37 = v7;
    v38 = a1;
    swift_bridgeObjectRetain(v9);
    goto LABEL_16;
  }
  v15 = (void *)Strong;
  v16 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_textStorage);
  v17 = v7;
  v18 = a1;
  v19 = objc_msgSend(v15, "layoutForInfo:", v16, swift_bridgeObjectRetain(v9).n128_f64[0]);

  if (!v19)
  {
LABEL_16:
    swift_release(inited);
LABEL_17:
    v22 = 0;
    goto LABEL_18;
  }
  v20 = type metadata accessor for CRLWPLayout();
  v21 = (char *)swift_dynamicCastClass(v19, v20);
  v22 = v21;
  if (!v21)
  {
    swift_release(inited);

    goto LABEL_18;
  }
  if ((objc_msgSend(v21, "layoutIsValid") & 1) == 0)
    objc_msgSend(v22, "validate");
  v23 = (void *)qword_10147ECB0;
  v24 = swift_allocObject(v8, 64, 7);
  *(_OWORD *)(v24 + 16) = xmmword_100EF5E40;
  *(_QWORD *)(v24 + 56) = v11;
  *(double *)(v24 + 32) = a2;
  *(double *)(v24 + 40) = a3;
  v41 = xmmword_100EF5E40;
  v42[3] = v13;
  v42[0] = v24;
  v25 = v23;
  swift_bridgeObjectRetain(v24);
  v26 = v25;
  sub_100627450(v22, 1, &v40, a2, a3);

  if (!v40)
  {
    swift_arrayDestroy(v42, 1, (char *)&type metadata for Any + 8);
    swift_release(inited);

    swift_bridgeObjectRelease(v24);
    goto LABEL_17;
  }
  v27 = *(void **)&v22[OBJC_IVAR____TtC8Freeform11CRLWPLayout_wpStorage];
  v28 = (char *)v40;
  v29 = v27;
  sub_1007D484C();
  v31 = v30;

  v32 = (char *)objc_msgSend(v31, "range");
  v33 = *(_QWORD *)&v28[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
  v35 = &v32[v34];
  if ((uint64_t)&v32[v34] >= v33)
    v35 = *(char **)&v28[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
  if (v33 >= (uint64_t)v32)
    v36 = v35;
  else
    v36 = v32;
  v22 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CRLTextPosition()), "init:caretAffinity:", v36, 0);

  swift_arrayDestroy(v42, v41, (char *)&type metadata for Any + 8);
  swift_release(inited);

  swift_bridgeObjectRelease(v24);
LABEL_18:

  swift_bridgeObjectRelease(v9);
  return v22;
}

uint64_t sub_1005E893C(char a1, double a2, double a3)
{
  uint64_t v3;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t inited;
  uint64_t Strong;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  uint64_t v23;
  id v24;
  char *v26;
  char v27[64];

  if (qword_1013DCB58 != -1)
    swift_once(&qword_1013DCB58, sub_1006185A4);
  v7 = (void *)qword_10147ECB0;
  v8 = sub_1004B804C((uint64_t *)&unk_1013E8830);
  v9 = swift_allocObject(v8, 96, 7);
  *(_OWORD *)(v9 + 16) = xmmword_100EF5A10;
  type metadata accessor for CGPoint(0);
  *(_QWORD *)(v9 + 56) = v10;
  *(double *)(v9 + 32) = a2;
  *(double *)(v9 + 40) = a3;
  *(_QWORD *)(v9 + 88) = &type metadata for Bool;
  *(_BYTE *)(v9 + 64) = a1 & 1;
  inited = swift_initStackObject(v8, v27);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_QWORD *)(inited + 56) = sub_1004B804C((uint64_t *)&unk_1013E91F0);
  *(_QWORD *)(inited + 32) = v9;
  Strong = swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_interactiveCanvasController);
  if (!Strong)
  {
    v24 = v7;
    swift_bridgeObjectRetain(v9);
    goto LABEL_12;
  }
  v13 = (void *)Strong;
  v14 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_textStorage);
  v15 = v7;
  v16 = objc_msgSend(v13, "layoutForInfo:", v14, swift_bridgeObjectRetain(v9).n128_f64[0]);

  if (!v16)
  {
LABEL_12:
    v23 = NSNotFound.getter(v17);
    swift_release(inited);
    goto LABEL_13;
  }
  v18 = type metadata accessor for CRLWPLayout();
  v19 = (void *)swift_dynamicCastClass(v16, v18);
  if (!v19)
  {

    goto LABEL_12;
  }
  v20 = v19;
  if ((objc_msgSend(v19, "layoutIsValid") & 1) == 0)
    objc_msgSend(v20, "validate");
  v21 = (id)qword_10147ECB0;
  sub_100627450(v20, a1 & 1, &v26, a2, a3);

  v22 = v26;
  if (!v26)
    goto LABEL_12;
  v23 = *(_QWORD *)&v26[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
  swift_release(inited);

LABEL_13:
  swift_bridgeObjectRelease(v9);
  return v23;
}

void sub_1005E8BB8(double a1, double a2)
{
  _QWORD *v2;
  void *Strong;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  double v16;
  double v17;
  double v18;
  double v19;
  id v20;
  void *v21;
  uint64_t v22;
  BOOL v23;
  objc_class *v24;
  char *v25;
  uint64_t v26;
  uint64_t *v27;
  id v28;
  void *v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  objc_super v35;
  char *v36;

  Strong = (void *)swift_unknownObjectWeakLoadStrong((char *)v2 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_interactiveCanvasController);
  if (!Strong)
    return;
  v6 = Strong;
  v34 = objc_msgSend(Strong, "layoutForInfo:", *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_textStorage));

  if (!v34)
    return;
  v7 = type metadata accessor for CRLWPLayout();
  v8 = (void *)swift_dynamicCastClass(v34, v7);
  if (!v8)
    goto LABEL_17;
  v9 = v8;
  if ((objc_msgSend(v8, "layoutIsValid") & 1) == 0)
    objc_msgSend(v9, "validate");
  v10 = swift_unknownObjectWeakLoadStrong((char *)v2 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_editor);
  if (!v10)
  {
LABEL_17:
    v31 = v34;
LABEL_20:

    return;
  }
  v33 = (id)v10;
  v11 = (void *)swift_unknownObjectWeakLoadStrong(v10 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc);
  if (!v11
    || (v12 = v11,
        v32 = objc_msgSend(v11, "hitRep:", a1, a2),
        v12,
        !v32))
  {
LABEL_19:

    v31 = v33;
    goto LABEL_20;
  }
  v13 = objc_opt_self(CRLWPRep);
  v14 = swift_dynamicCastObjCClass(v32, v13);
  if (!v14)
  {

    goto LABEL_19;
  }
  v15 = (void *)v14;
  objc_msgSend(v9, "convertNaturalPointFromUnscaledCanvas:", a1, a2);
  v17 = v16;
  v19 = v18;
  if (qword_1013DCB58 != -1)
    swift_once(&qword_1013DCB58, sub_1006185A4);
  v20 = (id)qword_10147ECB0;
  sub_100627450(v9, 1, &v36, v17, v19);

  v21 = v36;
  if (!v36)
  {

    v31 = v32;
    goto LABEL_20;
  }
  v22 = *(_QWORD *)&v36[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
  if ((sub_1005E9510(v22, v15, a1, a2) & 1) != 0 && (v23 = __OFSUB__(v22, 1), --v22, v23))
  {
    __break(1u);
  }
  else
  {
    v24 = (objc_class *)type metadata accessor for CRLTextRange();
    v25 = (char *)objc_allocWithZone(v24);
    v26 = OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity;
    *(_QWORD *)&v25[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = 0;
    *(_QWORD *)&v25[OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge] = 0;
    v27 = (uint64_t *)&v25[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
    *v27 = v22;
    v27[1] = v22;
    *(_QWORD *)&v25[v26] = 0;
    v35.receiver = v25;
    v35.super_class = v24;
    v28 = objc_msgSendSuper2(&v35, "init");
    v29 = *(void **)((char *)v2 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager__selectedTextRange);
    *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager__selectedTextRange) = v28;
    v30 = v28;

    (*(void (**)(void))((swift_isaMask & *v2) + 0x268))();
    sub_100727440(0, 1);

  }
}

void sub_1005E8FD8()
{
  uint64_t v0;
  _QWORD *v1;
  void (*v2)(void);
  _QWORD *v3;

  v1 = *(_QWORD **)(v0 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_selectionViewController);
  if (v1)
  {
    v2 = *(void (**)(void))((swift_isaMask & *v1) + 0x188);
    v3 = v1;
    v2();

  }
}

uint64_t type metadata accessor for CRLWPTextSelectionManager()
{
  return objc_opt_self(_TtC8Freeform25CRLWPTextSelectionManager);
}

char *sub_1005E9458(void *a1, void *a2, void *a3)
{
  char v6;
  objc_class *v7;
  char *v8;
  id v9;
  char *result;
  _QWORD v11[5];

  v11[3] = &type metadata for CRLUIKitFeatureFlags;
  v11[4] = sub_1005E9710();
  v6 = isFeatureEnabled(_:)(v11);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v11);
  if ((v6 & 1) != 0)
    v7 = (objc_class *)type metadata accessor for CRLWPTextSelectionManager_i();
  else
    v7 = (objc_class *)type metadata accessor for CRLWPTextSelectionManager_x();
  v8 = (char *)objc_allocWithZone(v7);
  *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform27CRLWPTextSelectionManager_i_loupeSession] = 0;
  v9 = a2;
  result = (char *)sub_1005E6F54(a1, a2, a3);
  *(_QWORD *)&result[OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_minimumCaretHitRegionWidth] = 0x4044000000000000;
  return result;
}

id sub_1005E9510(uint64_t a1, id a2, double a3, double a4)
{
  uint64_t v4;
  id result;
  id v10;
  id v11;
  double v12;
  double v13;
  double v14;
  CGFloat v15;
  double v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  double v23;
  CGFloat v24;
  double v25;
  CGFloat v26;
  double v27;
  CGFloat v28;
  double v29;
  double v30;
  double MidY;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  CGFloat v37;
  CGFloat v38;
  double v39;
  double v40;
  CGFloat v41;
  CGRect v42;
  CGRect v43;

  v4 = a1 - 1;
  if (a1 < 1)
    return 0;
  result = objc_msgSend(a2, "selection");
  if (!result)
    return result;
  v10 = result;
  v11 = objc_msgSend(result, "caretAffinity");

  objc_msgSend(a2, "convertNaturalPointFromUnscaledCanvas:", a3, a4);
  v39 = v13;
  v40 = v12;
  objc_msgSend(a2, "caretRectForCharIndex:caretAffinity:", a1, v11);
  v15 = v14;
  v41 = v16;
  v18 = v17;
  v20 = v19;
  objc_msgSend(a2, "caretRectForCharIndex:caretAffinity:", v4, v11);
  v22 = v21;
  v24 = v23;
  v26 = v25;
  v28 = v27;
  objc_msgSend(a2, "caretRect");
  v30 = v29 * 0.5;
  v42.origin.x = v22;
  v42.origin.y = v24;
  v37 = v26;
  v42.size.width = v26;
  v42.size.height = v28;
  MidY = CGRectGetMidY(v42);
  v38 = v20;
  v43.origin.x = v15;
  v43.origin.y = v41;
  v43.size.width = v18;
  v43.size.height = v20;
  if (v30 > vabdd_f64(MidY, CGRectGetMidY(v43)))
    return 0;
  v32 = sub_100061400(v22, v24, v37, v28);
  v34 = sub_10006108C(v40, v39, v32, v33);
  v35 = sub_100061400(v15, v41, v18, v38);
  return (id)(v34 < sub_10006108C(v40, v39, v35, v36));
}

unint64_t sub_1005E96D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E6D50;
  if (!qword_1013E6D50)
  {
    v1 = objc_opt_self(UITextSelectionRect);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1013E6D50);
  }
  return result;
}

unint64_t sub_1005E9710()
{
  unint64_t result;

  result = qword_1013EE6E0;
  if (!qword_1013EE6E0)
  {
    result = swift_getWitnessTable(&unk_100F214C8, &type metadata for CRLUIKitFeatureFlags);
    atomic_store(result, (unint64_t *)&qword_1013EE6E0);
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLTipStencilLibraryCompact()
{
  return &type metadata for CRLTipStencilLibraryCompact;
}

void *sub_1005E9764()
{
  return &protocol witness table for String;
}

uint64_t sub_1005E9770(uint64_t a1)
{
  return sub_1005E9808(a1, qword_10147EB38, 0xD000000000000019, 0x8000000100FB9650);
}

uint64_t sub_1005E9794(uint64_t a1)
{
  return sub_1005E9808(a1, qword_10147EB50, 0xD000000000000010, 0x8000000100FB9630);
}

uint64_t sub_1005E97B8(uint64_t a1)
{
  return sub_1005E9808(a1, qword_10147EB68, 0xD000000000000013, 0x8000000100FB9610);
}

uint64_t sub_1005E97DC(uint64_t a1)
{
  return sub_1005E9808(a1, qword_10147EB80, 0x746361706D6F632BLL, 0xEE0074756F79614CLL);
}

uint64_t sub_1005E9808(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  char v9;

  v7 = sub_1004B804C((uint64_t *)&unk_1013E1B00);
  sub_100501DE0(v7, a2);
  sub_1004F2A1C(v7, (uint64_t)a2);
  v9 = 0;
  return Tips.Parameter.init<A>(_:_:_:_:)(&type metadata for CRLTipStencilLibraryCompact, a3, a4, &v9, _swiftEmptyArrayStorage, &type metadata for Bool, &type metadata for CRLTipStencilLibraryCompact, &protocol witness table for Bool, &protocol witness table for Bool);
}

uint64_t sub_1005E98A8()
{
  uint64_t v0;

  v0 = sub_1004B804C(&qword_1013E6D60);
  sub_100501DE0(v0, qword_10147EB98);
  sub_1004F2A1C(v0, (uint64_t)qword_10147EB98);
  return Tips.Event.init<>(id:)(0xD000000000000023, 0x8000000100FB95E0);
}

uint64_t sub_1005E990C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1005E9914(a1, 0, a2);
}

uint64_t sub_1005E9914@<X0>(uint64_t a1@<X0>, char a2@<W1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[15];
  char v18;

  v6 = sub_1004B804C(&qword_1013E6DF8);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_1004B804C(&qword_1013E6E00);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = &v17[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = sub_1004CBA30(&qword_1013E6E08, &qword_1013E6E00, (uint64_t)&protocol conformance descriptor for PredicateExpressions.Variable<A>);
  static PredicateExpressions.build_Arg<A>(_:)(a1, v10, v14);
  v18 = a2;
  static PredicateExpressions.build_Arg<A>(_:)(&v18, &type metadata for Bool);
  a3[3] = sub_1004B804C(&qword_1013E6E10);
  a3[4] = sub_1005EA7E4();
  sub_10050D1B0(a3);
  v15 = sub_1004CBA30(&qword_1013E6E30, &qword_1013E6DF8, (uint64_t)&protocol conformance descriptor for PredicateExpressions.Value<A>);
  static PredicateExpressions.build_Equal<A, B>(lhs:rhs:)(v13, v9, v10, v6, v14, v15, &protocol witness table for Bool);
  (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_1005E9AAC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1005E9914(a1, 1, a2);
}

uint64_t sub_1005E9AB4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t KeyPath;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  __n128 v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v60 = a2;
  v3 = type metadata accessor for PredicateExpressions.ComparisonOperator(0);
  v58 = *(_QWORD *)(v3 - 8);
  v59 = v3;
  __chkstk_darwin(v3);
  v57 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C(&qword_1013E6D78);
  v6 = *(_QWORD *)(v5 - 8);
  v61 = v5;
  v62 = v6;
  v7 = __chkstk_darwin(v5);
  v56 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Tips.DonationTimeRange(0, v7);
  v52 = *(_QWORD *)(v9 - 8);
  v53 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1004B804C(&qword_1013E6D80);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1004B804C(&qword_1013E6D88);
  v50 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1004B804C(&qword_1013E6D90);
  v51 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v21 = (char *)&v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1004B804C(&qword_1013E6D98);
  v23 = *(_QWORD *)(v22 - 8);
  v54 = v22;
  v55 = v23;
  __chkstk_darwin(v22);
  v49 = (char *)&v48 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_1004CBA30(&qword_1013E6DA0, &qword_1013E6D80, (uint64_t)&protocol conformance descriptor for PredicateExpressions.Variable<A>);
  static PredicateExpressions.build_Arg<A>(_:)(a1, v12, v25);
  KeyPath = swift_getKeyPath(&unk_100EFDE50);
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)(v15, KeyPath, v12, v25);
  v27 = swift_release(KeyPath);
  v28 = (*(uint64_t (**)(char *, uint64_t, __n128))(v13 + 8))(v15, v12, v27);
  static Tips.DonationTimeRange.day.getter(v28);
  v29 = type metadata accessor for Tips.EmptyDonation(0);
  v30 = sub_1005EA5D8(&qword_1013E6D68, (uint64_t)&protocol conformance descriptor for Tips.EmptyDonation);
  v31 = sub_1005EA5D8(&qword_1013E6D70, (uint64_t)&protocol conformance descriptor for Tips.EmptyDonation);
  v32 = sub_1005EA664();
  static PredicateExpressions.build_donatedWithin<A, B>(_:_:)(v18, v11, v29, v16, v30, v31, v32);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v11, v53);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v18, v16);
  v33 = swift_getKeyPath(&unk_100EFDE88);
  v34 = sub_1004CBA30(&qword_1013E6DB8, &qword_1013E6D90, (uint64_t)&protocol conformance descriptor for PredicateExpressions.DonatedWithin<A, B>);
  v35 = v49;
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)(v21, v33, v19, v34);
  v36 = swift_release(v33);
  (*(void (**)(char *, uint64_t, __n128))(v51 + 8))(v21, v19, v36);
  v63 = 1;
  v37 = v56;
  static PredicateExpressions.build_Arg<A>(_:)(&v63, &type metadata for Int);
  v39 = v57;
  v38 = v58;
  v40 = v59;
  (*(void (**)(char *, _QWORD, uint64_t))(v58 + 104))(v57, enum case for PredicateExpressions.ComparisonOperator.lessThan(_:), v59);
  v41 = sub_1004B804C(&qword_1013E6DC0);
  v42 = v60;
  v60[3] = v41;
  v42[4] = sub_1005EA6E4();
  sub_10050D1B0(v42);
  v43 = sub_1004CBA30(&qword_1013E6DE8, &qword_1013E6D98, (uint64_t)&protocol conformance descriptor for PredicateExpressions.KeyPath<A, B>);
  v44 = sub_1004CBA30(&qword_1013E6DF0, &qword_1013E6D78, (uint64_t)&protocol conformance descriptor for PredicateExpressions.Value<A>);
  v45 = v54;
  v46 = v61;
  static PredicateExpressions.build_Comparison<A, B>(lhs:rhs:op:)(v35, v37, v39, v54, v61, v43, v44, &protocol witness table for Int);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v40);
  (*(void (**)(char *, uint64_t))(v62 + 8))(v37, v46);
  return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v35, v45);
}

uint64_t sub_1005E9F2C()
{
  return sub_1005EA910();
}

uint64_t sub_1005E9F4C()
{
  return sub_1005EAA10();
}

uint64_t sub_1005E9F60()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v0 = sub_1004B804C(&qword_1013E6E38);
  __chkstk_darwin(v0);
  v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = Image.init(systemName:)(0x65762E736B6F6F62, 0xEE006C6163697472);
  static SymbolRenderingMode.multicolor.getter();
  v4 = type metadata accessor for SymbolRenderingMode(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v2, 0, 1, v4);
  v5 = Image.symbolRenderingMode(_:)(v2, v3);
  swift_release(v3);
  sub_1005EA8CC((uint64_t)v2);
  return v5;
}

uint64_t sub_1005EA040@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v4;
  uint64_t result;
  uint64_t v6;

  v4 = sub_10054FA70();
  result = Tip.id.getter(a1, v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

unint64_t sub_1005EA080()
{
  unint64_t result;

  result = qword_1013E6D58;
  if (!qword_1013E6D58)
  {
    result = swift_getWitnessTable("U67", &type metadata for CRLTipStencilLibraryCompact);
    atomic_store(result, (unint64_t *)&qword_1013E6D58);
  }
  return result;
}

unint64_t sub_1005EA0C4(uint64_t a1)
{
  unint64_t result;

  result = sub_10054FA70();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1005EA0E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  void (*v13)(char *, uint64_t, uint64_t, __n128);
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char v45[24];
  char v46[24];
  char v47[24];
  char v48[24];

  v0 = sub_1004B804C(&qword_1013E6D60);
  v43 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v44 = (char *)&v41 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_1004B804C((uint64_t *)&unk_1013E1B00);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Tips.Rule(0, v4);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1013DCB20 != -1)
    swift_once(&qword_1013DCB20, sub_1005E9770);
  v11 = sub_1004F2A1C(v2, (uint64_t)qword_10147EB38);
  v12 = swift_beginAccess(v11, v48, 0, 0);
  v13 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16);
  v13(v6, v11, v2, v12);
  Tips.Rule.init<A>(_:_:)(v6, sub_1005E990C, 0, &type metadata for Bool, &protocol witness table for Bool, &protocol witness table for Bool);
  v42 = static Tips.RuleBuilder.buildExpression(_:)(v10);
  v14 = *(void (**)(char *, uint64_t))(v8 + 8);
  v14(v10, v7);
  if (qword_1013DCB28 != -1)
    swift_once(&qword_1013DCB28, sub_1005E9794);
  v15 = sub_1004F2A1C(v2, (uint64_t)qword_10147EB50);
  v16 = swift_beginAccess(v15, v47, 0, 0);
  v13(v6, v15, v2, v16);
  Tips.Rule.init<A>(_:_:)(v6, sub_1005E990C, 0, &type metadata for Bool, &protocol witness table for Bool, &protocol witness table for Bool);
  v17 = static Tips.RuleBuilder.buildExpression(_:)(v10);
  v14(v10, v7);
  if (qword_1013DCB30 != -1)
    swift_once(&qword_1013DCB30, sub_1005E97B8);
  v18 = sub_1004F2A1C(v2, (uint64_t)qword_10147EB68);
  v19 = swift_beginAccess(v18, v46, 0, 0);
  v13(v6, v18, v2, v19);
  Tips.Rule.init<A>(_:_:)(v6, sub_1005E990C, 0, &type metadata for Bool, &protocol witness table for Bool, &protocol witness table for Bool);
  v20 = static Tips.RuleBuilder.buildExpression(_:)(v10);
  v14(v10, v7);
  if (qword_1013DCB38 != -1)
    swift_once(&qword_1013DCB38, sub_1005E97DC);
  v21 = sub_1004F2A1C(v2, (uint64_t)qword_10147EB80);
  v22 = swift_beginAccess(v21, v45, 0, 0);
  v13(v6, v21, v2, v22);
  Tips.Rule.init<A>(_:_:)(v6, sub_1005E9AAC, 0, &type metadata for Bool, &protocol witness table for Bool, &protocol witness table for Bool);
  v23 = static Tips.RuleBuilder.buildExpression(_:)(v10);
  v14(v10, v7);
  if (qword_1013DCB40 != -1)
    swift_once(&qword_1013DCB40, sub_1005E98A8);
  v24 = sub_1004F2A1C(v0, (uint64_t)qword_10147EB98);
  v25 = v44;
  (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v44, v24, v0);
  v26 = type metadata accessor for Tips.EmptyDonation(0);
  v27 = sub_1005EA5D8(&qword_1013E6D68, (uint64_t)&protocol conformance descriptor for Tips.EmptyDonation);
  v28 = sub_1005EA5D8(&qword_1013E6D70, (uint64_t)&protocol conformance descriptor for Tips.EmptyDonation);
  Tips.Rule.init<A>(_:_:)(v25, sub_1005E9AB4, 0, v26, v27, v28);
  v29 = static Tips.RuleBuilder.buildExpression(_:)(v10);
  v14(v10, v7);
  v30 = v42;
  v31 = static Tips.RuleBuilder.buildPartialBlock(first:)(v42);
  v32 = swift_bridgeObjectRelease(v30);
  v33 = static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)(v31, v17, v32);
  swift_bridgeObjectRelease(v31);
  v34 = swift_bridgeObjectRelease(v17);
  v35 = static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)(v33, v20, v34);
  swift_bridgeObjectRelease(v33);
  v36 = swift_bridgeObjectRelease(v20);
  v37 = static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)(v35, v23, v36);
  swift_bridgeObjectRelease(v35);
  v38 = swift_bridgeObjectRelease(v23);
  v39 = static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)(v37, v29, v38);
  swift_bridgeObjectRelease(v37);
  swift_bridgeObjectRelease(v29);
  return v39;
}

uint64_t sub_1005EA5D8(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for Tips.EmptyDonation(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1005EA618()
{
  return sub_1005EA5D8(&qword_1013E6D68, (uint64_t)&protocol conformance descriptor for Tips.EmptyDonation);
}

uint64_t sub_1005EA63C()
{
  return sub_1005EA5D8(&qword_1013E6D70, (uint64_t)&protocol conformance descriptor for Tips.EmptyDonation);
}

unint64_t sub_1005EA664()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E6DA8;
  if (!qword_1013E6DA8)
  {
    v1 = sub_1004CB6A4(&qword_1013E6D88);
    sub_1004CBA30(&qword_1013E6DB0, &qword_1013E6D80, (uint64_t)&protocol conformance descriptor for PredicateExpressions.Variable<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> PredicateExpressions.KeyPath<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1013E6DA8);
  }
  return result;
}

unint64_t sub_1005EA6E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E6DC8;
  if (!qword_1013E6DC8)
  {
    v1 = sub_1004CB6A4(&qword_1013E6DC0);
    sub_1005EA768();
    sub_1004CBA30(&qword_1013E6DE0, &qword_1013E6D78, (uint64_t)&protocol conformance descriptor for PredicateExpressions.Value<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> PredicateExpressions.Comparison<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1013E6DC8);
  }
  return result;
}

unint64_t sub_1005EA768()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E6DD0;
  if (!qword_1013E6DD0)
  {
    v1 = sub_1004CB6A4(&qword_1013E6D98);
    sub_1004CBA30(&qword_1013E6DD8, &qword_1013E6D90, (uint64_t)&protocol conformance descriptor for PredicateExpressions.DonatedWithin<A, B>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> PredicateExpressions.KeyPath<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1013E6DD0);
  }
  return result;
}

unint64_t sub_1005EA7E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E6E18;
  if (!qword_1013E6E18)
  {
    v1 = sub_1004CB6A4(&qword_1013E6E10);
    sub_1004CBA30(&qword_1013E6E20, &qword_1013E6E00, (uint64_t)&protocol conformance descriptor for PredicateExpressions.Variable<A>);
    sub_1005EA868();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> PredicateExpressions.Equal<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1013E6E18);
  }
  return result;
}

unint64_t sub_1005EA868()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E6E28;
  if (!qword_1013E6E28)
  {
    v1 = sub_1004CB6A4(&qword_1013E6DF8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> PredicateExpressions.Value<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1013E6E28);
  }
  return result;
}

uint64_t sub_1005EA8CC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B804C(&qword_1013E6E38);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1005EA910()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v9[2];

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  v9[0] = v4;
  v9[1] = v6;
  v7 = sub_1004D292C();
  return Text.init<A>(_:)(v9, &type metadata for String, v7);
}

uint64_t sub_1005EAA10()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v9[2];

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  v9[0] = v4;
  v9[1] = v6;
  v7 = sub_1004D292C();
  return Text.init<A>(_:)(v9, &type metadata for String, v7);
}

uint64_t sub_1005EAAFC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  void *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  id v17;
  uint64_t v18;
  uint64_t inited;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  NSString *v23;
  id v24;
  unint64_t v25;
  Class isa;
  double v27;
  id v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  void *v36;
  __n128 v37;
  uint64_t v39;
  NSString v40;
  NSString v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __n128 v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  id v65;
  char *v66;
  __n128 v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t, __n128);
  uint64_t v70;
  uint64_t v71;
  NSString *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  unint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  char v86[72];

  v76 = a4;
  v77 = a1;
  v83 = type metadata accessor for URL(0);
  v81 = *(_QWORD *)(v83 - 8);
  __chkstk_darwin(v83);
  v78 = (char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v80 = (char *)&v73 - v9;
  v75 = type metadata accessor for UUID(0);
  v74 = *(_QWORD *)(v75 - 8);
  __chkstk_darwin(v75);
  v73 = (char *)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = type metadata accessor for UTType(0);
  v79 = *(_QWORD *)(v84 - 8);
  __chkstk_darwin(v84);
  v12 = (char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v14 = __chkstk_darwin(v13).n128_u64[0];
  v16 = (char *)&v73 - v15;
  v17 = objc_msgSend(v4, "length", v14);
  v18 = sub_1004B804C(&qword_1013E6E40);
  inited = swift_initStackObject(v18, v86);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_QWORD *)(inited + 32) = NSDocumentTypeDocumentAttribute;
  if ((unint64_t)a3 >= 3)
  {
    v85 = a3;
    v72 = NSDocumentTypeDocumentAttribute;
    while (1)
    {
      _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for CRLSupportedRichTextType, &v85, &type metadata for CRLSupportedRichTextType, &type metadata for Int);
      __break(1u);
      v85 = a3;
    }
  }
  v20 = inited;
  v21 = *(void **)*(&off_101271470 + (_QWORD)a3);
  type metadata accessor for DocumentType(0);
  *(_QWORD *)(v20 + 64) = v22;
  *(_QWORD *)(v20 + 40) = v21;
  v23 = NSDocumentTypeDocumentAttribute;
  v24 = v21;
  v25 = sub_1008D67F4(v20);
  type metadata accessor for DocumentAttributeKey(0);
  sub_1005EB160();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  *(_QWORD *)&v27 = swift_bridgeObjectRelease(v25).n128_u64[0];
  v85 = 0;
  v28 = objc_msgSend(v4, "dataFromRange:documentAttributes:error:", 0, v17, isa, &v85, v27);

  v29 = v85;
  if (v28)
  {
    v30 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v28);
    v32 = v31;

    if (a3 == (void *)2)
    {
      static UTType.flatRTFD.getter(v33);
      v34 = v84;
      v35 = v79;
    }
    else
    {
      v34 = v84;
      v35 = v79;
      if (a3 == (void *)1)
        static UTType.rtfd.getter(v33);
      else
        static UTType.rtf.getter(v33);
    }
    (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v16, v12, v34);
    v39 = HIBYTE(a2) & 0xF;
    if ((a2 & 0x2000000000000000) == 0)
      v39 = v77 & 0xFFFFFFFFFFFFLL;
    if (v39)
    {
      v40 = String._bridgeToObjectiveC()();
      v41 = String._bridgeToObjectiveC()();
      v42 = objc_msgSend(v40, "crl_filenameFromDisplayNameWithExtension:", v41);

      v43 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
      v45 = v44;

      v46 = v80;
    }
    else
    {
      v47 = UTType.localizedDescription.getter();
      v46 = v80;
      if (v48)
      {
        v43 = v47;
        v45 = v48;
      }
      else
      {
        v49 = v73;
        v50 = UUID.init()(v47);
        v51 = UUID.uuidString.getter(v50);
        v53 = v52;
        (*(void (**)(char *, uint64_t))(v74 + 8))(v49, v75);
        v54 = sub_100C48F54(5, v51, v53);
        v56 = v55;
        v58 = v57;
        v79 = v32;
        v60 = v59;
        v61 = swift_bridgeObjectRelease(v53);
        v43 = static String._fromSubstring(_:)(v54, v56, v58, v60, v61);
        v45 = v62;
        v63 = v60;
        v32 = v79;
        swift_bridgeObjectRelease(v63);
      }
    }
    v64 = objc_msgSend(objc_allocWithZone((Class)NSFileManager), "init");
    v65 = objc_msgSend(v64, "temporaryDirectory");

    v66 = v78;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v65);

    URL.appendingPathComponent(_:conformingTo:)(v43, v45, v16);
    v67 = swift_bridgeObjectRelease(v45);
    v68 = v81;
    v69 = *(void (**)(char *, uint64_t, __n128))(v81 + 8);
    v70 = v83;
    v69(v66, v83, v67);
    v71 = v82;
    Data.write(to:options:)(v46, 0, v30, v32);
    if (v71)
      ((void (*)(char *, uint64_t))v69)(v46, v70);
    else
      (*(void (**)(uint64_t, char *, uint64_t))(v68 + 32))(v76, v46, v70);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v16, v84);
    return sub_1004BBBC8(v30, v32);
  }
  else
  {
    v36 = v29;
    _convertNSErrorToError(_:)(v29);

    return swift_willThrow(v37);
  }
}

unint64_t sub_1005EB160()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013DEDE0;
  if (!qword_1013DEDE0)
  {
    type metadata accessor for DocumentAttributeKey(255);
    result = swift_getWitnessTable(&unk_100EF4528, v1);
    atomic_store(result, (unint64_t *)&qword_1013DEDE0);
  }
  return result;
}

BOOL sub_1005EB1A8(void *a1)
{
  _BOOL8 v2;
  uint64_t v4[14];
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD v15[2];
  _OWORD v16[2];
  _BYTE v17[16];
  _BYTE v18[32];
  _BYTE v19[32];
  _BYTE v20[24];
  uint64_t v21;
  _BYTE v22[24];
  uint64_t v23;
  _BOOL8 v24;
  char v25;

  if (!objc_msgSend(a1, "isEmpty"))
    return 0;
  sub_1005EB330(a1, (uint64_t)v4);
  sub_1004C4938((uint64_t)v4, (uint64_t)&v5, &qword_1013E6E48);
  if (!*((_QWORD *)&v6 + 1))
    return 0;
  v15[1] = v9;
  v16[0] = v10;
  v16[1] = v11;
  v12 = v5;
  v13 = v6;
  v14 = v7;
  v15[0] = v8;
  sub_1004C4938((uint64_t)&v14, (uint64_t)v17, &qword_1013E6E50);
  sub_1004C4938((uint64_t)v17, (uint64_t)&v24, &qword_1013E6E50);
  if ((v25 & 1) != 0)
  {
    sub_1004C4938((uint64_t)v15, (uint64_t)v18, &qword_1013E6E58);
    sub_1004C4938((uint64_t)v18, (uint64_t)v22, &qword_1013E6E58);
    if (v23)
    {
      sub_1005EB804(v4);
      return 0;
    }
    else
    {
      sub_1004C4938((uint64_t)v16, (uint64_t)v19, &qword_1013E6E58);
      sub_1004C4938((uint64_t)v19, (uint64_t)v20, &qword_1013E6E58);
      v2 = v21 != 0;
      sub_1005EB804(v4);
    }
  }
  else
  {
    v2 = v24;
    sub_1005EB804(v4);
  }
  return v2;
}

void sub_1005EB330(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 *v46;
  uint64_t v47;
  BOOL v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 *v56;
  uint64_t v57;
  char *v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD v66[10];
  __int128 v67;
  __int128 v68;
  _QWORD v69[6];
  __int128 v70;
  __int128 v71;
  uint64_t v72;
  _QWORD v73[5];
  unsigned __int8 v74;
  uint64_t v75;
  uint64_t v76;
  __int128 v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;

  v4 = sub_1004B804C(&qword_1013E6E60);
  __chkstk_darwin(v4);
  v6 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_1013E6E68);
  v64 = *(_QWORD *)(v7 - 8);
  v65 = v7;
  __chkstk_darwin(v7);
  v62 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C(&qword_1013E6E70);
  v63 = *(_QWORD *)(v9 - 8);
  *(_QWORD *)&v10 = __chkstk_darwin(v9).n128_u64[0];
  v12 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v61 = a1;
  v13 = (char *)objc_msgSend(a1, "start", v10);
  v14 = *(_QWORD *)&v13[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

  sub_1007CB480(v14);
  v18 = 0uLL;
  if (!v15)
  {
    v24 = 0;
    v25 = 0;
    v26 = 0;
    v27 = 0;
    v28 = 0uLL;
    v29 = 0uLL;
    v30 = 0uLL;
    v31 = 0uLL;
LABEL_7:
    *(_OWORD *)a2 = v18;
    *(_QWORD *)(a2 + 16) = v24;
    *(_QWORD *)(a2 + 24) = v25;
    *(_QWORD *)(a2 + 32) = v26;
    *(_QWORD *)(a2 + 40) = v27;
    *(_OWORD *)(a2 + 48) = v28;
    *(_OWORD *)(a2 + 64) = v29;
    *(_OWORD *)(a2 + 80) = v30;
    *(_OWORD *)(a2 + 96) = v31;
    return;
  }
  v19 = v15;
  v20 = v16;
  v21 = v17;
  v22 = sub_1004B804C(&qword_1013E6E78);
  v23 = sub_1004CBA30(&qword_1013E6E80, &qword_1013E6E70, (uint64_t)&protocol conformance descriptor for Regex<A>);
  Regex.init<A>(_:)(sub_1005EB9A0, 0, v22, v9, v23);
  Regex.firstMatch(in:)(v20, v21, v9);
  v33 = v64;
  v32 = v65;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v6, 1, v65) == 1)
  {

    v34 = swift_bridgeObjectRelease(v21);
    (*(void (**)(char *, uint64_t, __n128))(v63 + 8))(v12, v9, v34);
    sub_1004CB800((uint64_t)v6, &qword_1013E6E60);
LABEL_6:
    v24 = 0;
    v25 = 0;
    v26 = 0;
    v27 = 0;
    v28 = 0uLL;
    v29 = 0uLL;
    v30 = 0uLL;
    v31 = 0uLL;
    v18 = 0uLL;
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v62, v6, v32);
  *(_QWORD *)&v77 = Regex.Match.range.getter(v32);
  *((_QWORD *)&v77 + 1) = v35;
  v73[0] = v20;
  v73[1] = v21;
  v36 = sub_1004B804C(&qword_1013E6E88);
  v37 = sub_1004CBA30((unint64_t *)&qword_1013E6E90, &qword_1013E6E88, (uint64_t)&protocol conformance descriptor for Range<A>);
  v38 = sub_1004D292C();
  v39 = _NSRange.init<A, B>(_:in:)(&v77, v73, v36, &type metadata for String, v37, v38);
  v41 = v40;
  v42 = (char *)objc_msgSend(v19, "start");
  v43 = *(_QWORD *)&v42[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

  v45 = NSNotFound.getter(v44);
  v46 = (__int128 *)&v19[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
  if (v43 == v45)
    v46 = &xmmword_100EEE418;
  v47 = *(_QWORD *)v46;
  v48 = __OFADD__(v39, v47);
  v49 = v39 + v47;
  if (!v48)
  {
    v50 = v49 + v41;
    v51 = v61;
    v52 = (char *)objc_msgSend((id)v61, "start");
    v53 = *(_QWORD *)&v52[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

    v55 = NSNotFound.getter(v54);
    v56 = (__int128 *)(v51 + OBJC_IVAR____TtC8Freeform12CRLTextRange_range);
    if (v53 == v55)
      v56 = &xmmword_100EEE418;
    if (v50 == *(_QWORD *)v56)
    {
      v57 = v65;
      v58 = v62;
      Regex.Match.output.getter(&v77, v65);
      v61 = v77;
      v24 = v78;
      v25 = v79;
      swift_bridgeObjectRelease(v80);
      swift_bridgeObjectRelease(v81);
      Regex.Match.output.getter(v73, v57);
      swift_bridgeObjectRelease(v73[3]);
      v26 = v73[4];
      v27 = v74;
      swift_bridgeObjectRelease(v75);
      swift_bridgeObjectRelease(v76);
      Regex.Match.output.getter(v69, v65);
      swift_bridgeObjectRelease(v69[3]);
      v59 = v71;
      v60 = v70;
      swift_bridgeObjectRelease(v72);
      Regex.Match.output.getter(v66, v65);

      (*(void (**)(char *, uint64_t))(v64 + 8))(v58, v65);
      (*(void (**)(char *, uint64_t))(v63 + 8))(v12, v9);
      swift_bridgeObjectRelease(v66[3]);
      swift_bridgeObjectRelease(v66[9]);
      v29 = v59;
      v28 = v60;
      v18 = v61;
      v30 = v67;
      v31 = v68;
      goto LABEL_7;
    }

    (*(void (**)(char *, uint64_t))(v64 + 8))(v62, v65);
    (*(void (**)(char *, uint64_t))(v63 + 8))(v12, v9);
    goto LABEL_6;
  }
  __break(1u);
}

uint64_t *sub_1005EB804(uint64_t *a1)
{
  sub_1005EB854(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13]);
  return a1;
}

uint64_t sub_1005EB854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t result;

  if (a4)
  {
    swift_bridgeObjectRelease(a4);
    swift_bridgeObjectRelease(a10);
    return swift_bridgeObjectRelease(a14);
  }
  return result;
}

uint64_t sub_1005EB890()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, uint64_t);
  uint64_t v11;

  v0 = sub_1004B804C(&qword_1013E6E98);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v11 - v5;
  v7 = sub_1004B804C(&qword_1013E6E78);
  ChoiceOf.init(_:)(sub_1005EBF2C, 0, v7);
  v8 = sub_1004CBA30(&qword_1013E6EA0, &qword_1013E6E98, (uint64_t)&protocol conformance descriptor for ChoiceOf<A>);
  static RegexComponentBuilder.buildExpression<A>(_:)(v3, v0, v8);
  v9 = *(void (**)(char *, uint64_t))(v1 + 8);
  v9(v3, v0);
  static RegexComponentBuilder.buildPartialBlock<A>(first:)(v6, v0, v8);
  return ((uint64_t (*)(char *, uint64_t))v9)(v6, v0);
}

uint64_t sub_1005EB9A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  __n128 v35;
  uint64_t v36;
  char *v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  char *v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  _QWORD *v45;
  uint64_t v46;
  char *v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  char *v53;
  _QWORD *v54;
  uint64_t v55;
  _QWORD *v56;
  void (*v57)(_QWORD *, uint64_t);
  _QWORD *v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  char *v63;
  void (*v64)(char *, uint64_t);
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  _QWORD *v73;
  char *v74;
  uint64_t v75;
  char *v76;

  v72 = a1;
  v1 = sub_1004B804C(&qword_1013E6E70);
  __chkstk_darwin(v1);
  v71 = (char *)&v59 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1004B804C(&qword_1013E6EA8);
  __chkstk_darwin(v3);
  v66 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C(&qword_1013E6EB0);
  v6 = *(_QWORD *)(v5 - 8);
  v69 = v5;
  v70 = v6;
  __chkstk_darwin(v5);
  v67 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C(&qword_1013E6EB8);
  v9 = __chkstk_darwin(v8);
  v63 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = type metadata accessor for _RegexFactory(0, v9);
  v62 = *(_QWORD *)(v75 - 8);
  __chkstk_darwin(v75);
  v12 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = sub_1004B804C(&qword_1013E6EC0);
  v68 = *(_QWORD *)(v65 - 8);
  __chkstk_darwin(v65);
  v74 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1004B804C(&qword_1013E6EC8);
  v61 = *(_QWORD **)(v14 - 8);
  __chkstk_darwin(v14);
  v16 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (_QWORD **)((char *)&v59 - v18);
  __chkstk_darwin(v20);
  v73 = (_QWORD **)((char *)&v59 - v21);
  v22 = sub_1004B804C(&qword_1013E6ED0);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v25 = (char *)&v59 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v28 = (_QWORD **)((char *)&v59 - v27);
  v76 = (char *)&v59 - v27;
  v29 = sub_1004B804C(&qword_1013E6ED8);
  v30 = sub_1004CBA30(&qword_1013E6EE0, &qword_1013E6ED0, (uint64_t)&protocol conformance descriptor for Regex<A>);
  Regex.init<A>(_:)(sub_1005EBF30, 0, v29, v22, v30);
  static AlternationBuilder.buildExpression<A>(_:)(v28, v25, v22, v30);
  v64 = *(void (**)(char *, uint64_t))(v23 + 8);
  v60 = v22;
  v64(v25, v22);
  v31 = sub_1004B804C(&qword_1013E6EE8);
  v32 = sub_1004CBA30(&qword_1013E6EF0, &qword_1013E6EC8, (uint64_t)&protocol conformance descriptor for Regex<A>);
  Regex.init<A>(_:)(sub_1005EC77C, 0, v31, v14, v32);
  v33 = v73;
  static AlternationBuilder.buildExpression<A>(_:)(v73, v19, v14, v32);
  v34 = (_QWORD *)v61[1];
  v59 = v19;
  ((void (*)(_QWORD *, uint64_t))v34)(v19, v14);
  v61 = v34;
  Regex.init<A>(_:)(sub_1005ECDEC, 0, v31, v14, v32);
  static AlternationBuilder.buildExpression<A>(_:)(v19, v16, v14, v32);
  v35.n128_f64[0] = ((double (*)(char *, uint64_t))v34)(v16, v14);
  makeFactory()(v35);
  v36 = sub_1004B804C(&qword_1013E6EF8);
  v37 = v63;
  _RegexFactory.orderedChoice<A, B>(_:)(v76, v36, v22, v30);
  v38 = *(void (**)(char *, uint64_t))(v62 + 8);
  v39 = v75;
  v38(v12, v75);
  v40 = v74;
  ChoiceOf.init(_:)(v37, v36);
  makeFactory()(v41);
  v42 = sub_1004B804C(&qword_1013E6F00);
  v43 = sub_1004CBA30(&qword_1013E6F08, &qword_1013E6EC0, (uint64_t)&protocol conformance descriptor for ChoiceOf<A>);
  v44 = v66;
  v45 = v33;
  v46 = v65;
  _RegexFactory.accumulateAlternation<A, B, C>(_:_:)(v40, v45, v42, v65, v14, v43, v32);
  v38(v12, v39);
  v47 = v67;
  ChoiceOf.init(_:)(v44, v42);
  makeFactory()(v48);
  v49 = sub_1004B804C(&qword_1013E6E78);
  v50 = sub_1004CBA30(&qword_1013E6F10, &qword_1013E6EB0, (uint64_t)&protocol conformance descriptor for ChoiceOf<A>);
  v51 = v71;
  v52 = v47;
  v53 = v47;
  v54 = v59;
  v55 = v69;
  _RegexFactory.accumulateAlternation<A, B, C>(_:_:)(v52, v59, v49, v69, v14, v50, v32);
  v38(v12, v75);
  ChoiceOf.init(_:)(v51, v49);
  (*(void (**)(char *, uint64_t))(v70 + 8))(v53, v55);
  (*(void (**)(char *, uint64_t))(v68 + 8))(v74, v46);
  v56 = v54;
  v57 = (void (*)(_QWORD *, uint64_t))v61;
  ((void (*)(_QWORD *, uint64_t))v61)(v56, v14);
  v57(v73, v14);
  return ((uint64_t (*)(char *, uint64_t))v64)(v76, v60);
}

uint64_t sub_1005EBF30@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  unint64_t v35;
  uint64_t v36;
  void (**v37)(char *, uint64_t);
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  __n128 v57;
  char *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t);
  uint64_t v63;
  void (**v64)(char *, uint64_t);
  __n128 v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  void (**v80)(char *, uint64_t);
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  double (*v92)(char *, uint64_t);
  char *v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;

  v88 = a1;
  v97 = sub_1004B804C(&qword_1013E6F40);
  v86 = *(_QWORD *)(v97 - 8);
  __chkstk_darwin(v97);
  v84 = (char *)&v71 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v96 = (char *)&v71 - v3;
  v4 = sub_1004B804C(&qword_1013E6F50);
  __chkstk_darwin(v4);
  v6 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = type metadata accessor for CharacterClass(0);
  v80 = *(void (***)(char *, uint64_t))(v77 - 8);
  __chkstk_darwin(v77);
  v8 = (char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = sub_1004B804C(&qword_1013E6F58);
  v82 = *(_QWORD *)(v76 - 8);
  __chkstk_darwin(v76);
  v78 = (char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v79 = (char *)&v71 - v11;
  v85 = sub_1004B804C(&qword_1013E6ED0);
  v87 = *(_QWORD *)(v85 - 8);
  v12 = __chkstk_darwin(v85);
  v93 = (char *)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = type metadata accessor for _RegexFactory(0, v12);
  v71 = *(_QWORD *)(v90 - 8);
  __chkstk_darwin(v90);
  v15 = (char *)&v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v75 = (char *)&v71 - v17;
  v94 = sub_1004B804C(&qword_1013E6F60);
  v83 = *(_QWORD *)(v94 - 8);
  __chkstk_darwin(v94);
  v81 = (char *)&v71 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v91 = (char *)&v71 - v20;
  v21 = sub_1004B804C(&qword_1013E6F20);
  v73 = *(_QWORD *)(v21 - 8);
  v22 = v73;
  __chkstk_darwin(v21);
  v24 = (char *)&v71 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v27 = (char *)&v71 - v26;
  v29 = __chkstk_darwin(v28);
  v95 = (char *)&v71 - v30;
  Regex.init(_regexString:version:)(3104303, 0xE300000000000000, 1, &type metadata for Substring, v29);
  v89 = sub_1004CBA30(&qword_1013E6F28, &qword_1013E6F20, (uint64_t)&protocol conformance descriptor for Regex<A>);
  static RegexComponentBuilder.buildExpression<A>(_:)(v27, v21, v89);
  v92 = *(double (**)(char *, uint64_t))(v22 + 8);
  v31.n128_f64[0] = v92(v27, v21);
  v32 = makeFactory()(v31);
  static RegexComponent<>.digit.getter(v32);
  v33 = type metadata accessor for RegexRepetitionBehavior(0);
  v34.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v6, 1, 1, v33);
  makeFactory()(v34);
  v35 = sub_1005ED1E4();
  v36 = v77;
  _RegexFactory.oneOrMore<A, B>(_:_:)(v8, v6, &type metadata for Substring, v77, v35);
  sub_1004CB800((uint64_t)v6, &qword_1013E6F50);
  v80[1](v8, v36);
  v37 = *(void (***)(char *, uint64_t))(v71 + 8);
  v38 = v90;
  ((void (*)(char *, uint64_t))v37)(v15, v90);
  v80 = v37;
  v39 = v78;
  OneOrMore.init(_:)(v24, &type metadata for Substring);
  v40 = sub_1004CBA30(&qword_1013E6F70, &qword_1013E6F58, (uint64_t)&protocol conformance descriptor for OneOrMore<A>);
  v41 = v79;
  v42 = v39;
  v43 = v76;
  static RegexComponentBuilder.buildExpression<A>(_:)(v39, v76, v40);
  v44 = *(void (**)(char *, uint64_t))(v82 + 8);
  v44(v42, v43);
  v74 = v24;
  static RegexComponentBuilder.buildPartialBlock<A>(first:)(v41, v43, v40);
  v44(v41, v43);
  (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v27, v24, v21);
  v45 = sub_1004B804C(&qword_1013E6ED8);
  v46 = v89;
  v47 = v93;
  v82 = v45;
  v48 = v75;
  _RegexFactory.capture<A, B, C, D>(_:_:_:)(v27, 0, 1, sub_1005EC6B0, 0, v45, &type metadata for Substring, &type metadata for Int, v21, v89);
  v92(v27, v21);
  ((void (*)(char *, uint64_t))v37)(v48, v38);
  v49 = v81;
  Capture.init(_:)(v47, v45);
  v50 = sub_1004CBA30(&qword_1013E6F78, &qword_1013E6F60, (uint64_t)&protocol conformance descriptor for Capture<A>);
  v51 = v91;
  v52 = v49;
  v53 = v49;
  v54 = v94;
  static RegexComponentBuilder.buildExpression<A>(_:)(v52, v94, v50);
  v83 = *(_QWORD *)(v83 + 8);
  ((void (*)(char *, uint64_t))v83)(v53, v54);
  v55 = v84;
  ChoiceOf.init(_:)(sub_1005EC76C, 0, &type metadata for Substring);
  v81 = (char *)sub_1004CBA30(&qword_1013E6F48, &qword_1013E6F40, (uint64_t)&protocol conformance descriptor for ChoiceOf<A>);
  v56 = v97;
  static RegexComponentBuilder.buildExpression<A>(_:)(v55, v97, v81);
  v86 = *(_QWORD *)(v86 + 8);
  ((void (*)(char *, uint64_t))v86)(v55, v56);
  v72 = v27;
  static RegexComponentBuilder.buildPartialBlock<A>(first:)(v95, v21, v46);
  makeFactory()(v57);
  v58 = v74;
  _RegexFactory.ignoreCapturesInTypedOutput<A>(_:)(v27, v21, v46);
  v59 = v93;
  v60 = v51;
  v61 = v82;
  _RegexFactory.accumulate<A, B, C>(_:_:)(v58, v60, v82, v21, v54, v46, v50);
  v62 = (void (*)(char *, uint64_t))v92;
  v92(v58, v21);
  v63 = v90;
  v64 = v80;
  v65.n128_f64[0] = ((double (*)(char *, uint64_t))v80)(v48, v90);
  makeFactory()(v65);
  v66 = v96;
  _RegexFactory.ignoreCapturesInTypedOutput<A>(_:)(v96, v97, v81);
  v67 = sub_1004CBA30(&qword_1013E6EE0, &qword_1013E6ED0, (uint64_t)&protocol conformance descriptor for Regex<A>);
  v68 = v61;
  v69 = v85;
  _RegexFactory.accumulate<A, B, C>(_:_:)(v59, v58, v68, v85, v21, v67, v89);
  v62(v58, v21);
  ((void (*)(char *, uint64_t))v64)(v48, v63);
  (*(void (**)(char *, uint64_t))(v87 + 8))(v59, v69);
  v62(v72, v21);
  ((void (*)(char *, uint64_t))v86)(v66, v97);
  ((void (*)(char *, uint64_t))v83)(v91, v94);
  return ((uint64_t (*)(char *, uint64_t))v62)(v95, v21);
}

void sub_1005EC6B0(unint64_t *a1@<X0>, unsigned __int8 **a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  __int16 v8;
  unsigned __int8 *v9;
  char v10;
  char v11;

  v3 = *a1;
  v4 = a1[1];
  if ((v4 ^ *a1) < 0x4000)
    goto LABEL_6;
  v6 = a1[2];
  v5 = a1[3];
  v7 = sub_100B46D40(*a1, v4, v6, v5, 10);
  if ((v8 & 0x100) != 0)
  {
    swift_bridgeObjectRetain(v5);
    v9 = sub_100B469B8(v3, v4, v6, v5, 10);
    v11 = v10;
    swift_bridgeObjectRelease(v5);
    if ((v11 & 1) == 0)
      goto LABEL_7;
LABEL_6:
    v9 = 0;
    goto LABEL_7;
  }
  if ((v8 & 1) != 0)
    goto LABEL_6;
  v9 = (unsigned __int8 *)v7;
LABEL_7:
  *a2 = v9;
}

uint64_t sub_1005EC76C@<X0>(uint64_t a1@<X8>)
{
  return sub_1005ECBF8(46, 41, 0xE100000000000000, a1);
}

uint64_t sub_1005EC77C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  double (*v25)(char *, uint64_t);
  __n128 v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, uint64_t);
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  __n128 v39;
  char *v40;
  void (*v41)(char *, uint64_t);
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;

  v54 = a1;
  v1 = sub_1004B804C(&qword_1013E6F40);
  v43 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v3 = (char *)&v43 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v47 = (char *)&v43 - v5;
  v6 = sub_1004B804C(&qword_1013E6EC8);
  v7 = __chkstk_darwin(v6);
  v50 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = type metadata accessor for _RegexFactory(0, v7);
  v51 = *(_QWORD *)(v56 - 8);
  __chkstk_darwin(v56);
  v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1004B804C(&qword_1013E6F18);
  v12 = *(_QWORD *)(v11 - 8);
  v52 = v11;
  v53 = v12;
  __chkstk_darwin(v11);
  v48 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v49 = (char *)&v43 - v15;
  v16 = sub_1004B804C(&qword_1013E6F20);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v55 = (char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v43 - v20;
  v23 = __chkstk_darwin(v22);
  v46 = (char *)&v43 - v24;
  Regex.init(_regexString:version:)(3104303, 0xE300000000000000, 1, &type metadata for Substring, v23);
  v45 = sub_1004CBA30(&qword_1013E6F28, &qword_1013E6F20, (uint64_t)&protocol conformance descriptor for Regex<A>);
  static RegexComponentBuilder.buildExpression<A>(_:)(v21, v16, v45);
  v25 = *(double (**)(char *, uint64_t))(v17 + 8);
  v26.n128_f64[0] = v25(v21, v16);
  v44 = (void (*)(char *, uint64_t))v25;
  makeFactory()(v26);
  ChoiceOf.init(_:)(sub_1005ECBE4, 0, &type metadata for Substring);
  v27 = sub_1004CBA30(&qword_1013E6F48, &qword_1013E6F40, (uint64_t)&protocol conformance descriptor for ChoiceOf<A>);
  v28 = v47;
  static RegexComponentBuilder.buildExpression<A>(_:)(v3, v1, v27);
  v29 = *(void (**)(char *, uint64_t))(v43 + 8);
  v29(v3, v1);
  v30 = v55;
  static RegexComponentBuilder.buildPartialBlock<A>(first:)(v28, v1, v27);
  v29(v28, v1);
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v21, v30, v16);
  v31 = sub_1004B804C(&qword_1013E6EE8);
  v32 = v50;
  v33 = v45;
  _RegexFactory.capture<A, B>(_:)(v21, v31, v16, v45);
  v25(v21, v16);
  v51 = *(_QWORD *)(v51 + 8);
  ((void (*)(char *, uint64_t))v51)(v10, v56);
  v34 = v48;
  Capture.init(_:)(v32, v31);
  v35 = sub_1004CBA30(&qword_1013E6F38, &qword_1013E6F18, (uint64_t)&protocol conformance descriptor for Capture<A>);
  v36 = v49;
  v37 = v52;
  static RegexComponentBuilder.buildExpression<A>(_:)(v34, v52, v35);
  v53 = *(_QWORD *)(v53 + 8);
  ((void (*)(char *, uint64_t))v53)(v34, v37);
  v38 = v46;
  static RegexComponentBuilder.buildPartialBlock<A>(first:)(v46, v16, v33);
  makeFactory()(v39);
  v40 = v55;
  _RegexFactory.ignoreCapturesInTypedOutput<A>(_:)(v21, v16, v33);
  _RegexFactory.accumulate<A, B, C>(_:_:)(v40, v36, v31, v16, v37, v33, v35);
  v41 = v44;
  v44(v40, v16);
  ((void (*)(char *, uint64_t))v51)(v10, v56);
  v41(v21, v16);
  ((void (*)(char *, uint64_t))v53)(v36, v37);
  return ((uint64_t (*)(char *, uint64_t))v41)(v38, v16);
}

uint64_t sub_1005ECBE4@<X0>(uint64_t a1@<X8>)
{
  return sub_1005ECBF8(42, 10649826, 0xA300000000000000, a1);
}

uint64_t sub_1005ECBF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  unint64_t v19;
  __n128 v20;
  unint64_t v21;
  uint64_t v22;
  __n128 v23;
  _QWORD v25[2];
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;

  v25[1] = a4;
  v7 = sub_1004B804C(&qword_1013E6F20);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25[0] = type metadata accessor for _RegexFactory(0, v8);
  v11 = *(_QWORD *)(v25[0] - 8);
  __chkstk_darwin(v25[0]);
  v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1004B804C(&qword_1013E6F40);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = a1;
  v29 = 0xE100000000000000;
  v18 = sub_1005ED1A0();
  static AlternationBuilder.buildExpression<A>(_:)(&v30, &v28, &type metadata for String, v18);
  v26 = a2;
  v27 = a3;
  static AlternationBuilder.buildExpression<A>(_:)(&v28, &v26, &type metadata for String, v18);
  v19 = v31;
  v26 = v30;
  v27 = v31;
  static AlternationBuilder.buildPartialBlock<A>(first:)(&v26, &type metadata for String, v18);
  v20 = swift_bridgeObjectRelease(v19);
  v21 = v29;
  v26 = v28;
  v27 = v29;
  makeFactory()(v20);
  v22 = sub_1004CBA30(&qword_1013E6F48, &qword_1013E6F40, (uint64_t)&protocol conformance descriptor for ChoiceOf<A>);
  _RegexFactory.accumulateAlternation<A, B, C>(_:_:)(v17, &v26, &type metadata for Substring, v14, &type metadata for String, v22, v18);
  (*(void (**)(char *, _QWORD))(v11 + 8))(v13, v25[0]);
  ChoiceOf.init(_:)(v10, &type metadata for Substring);
  v23 = swift_bridgeObjectRelease(v21);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v15 + 8))(v17, v14, v23);
}

uint64_t sub_1005ECDEC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  double (*v22)(char *, uint64_t);
  __n128 v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  __n128 v32;
  char *v33;
  void (*v34)(char *, uint64_t);
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  char *v38;
  char *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;

  v45 = a1;
  v1 = sub_1004B804C(&qword_1013E6EC8);
  v2 = __chkstk_darwin(v1);
  v39 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for _RegexFactory(0, v2);
  v42 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_1013E6F18);
  v43 = *(_QWORD *)(v7 - 8);
  v44 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v40 = (char *)&v36 - v11;
  v12 = sub_1004B804C(&qword_1013E6F20);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v41 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v36 - v16;
  v19 = __chkstk_darwin(v18);
  v38 = (char *)&v36 - v20;
  Regex.init(_regexString:version:)(3104303, 0xE300000000000000, 1, &type metadata for Substring, v19);
  v21 = sub_1004CBA30(&qword_1013E6F28, &qword_1013E6F20, (uint64_t)&protocol conformance descriptor for Regex<A>);
  static RegexComponentBuilder.buildExpression<A>(_:)(v17, v12, v21);
  v22 = *(double (**)(char *, uint64_t))(v13 + 8);
  v23.n128_f64[0] = v22(v17, v12);
  v37 = (void (*)(char *, uint64_t))v22;
  makeFactory()(v23);
  v46 = 45;
  v47 = 0xE100000000000000;
  v24 = sub_1005ED1A0();
  static RegexComponentBuilder.buildExpression<A>(_:)(&v46, &type metadata for String, v24);
  v25 = v49;
  v46 = v48;
  v47 = v49;
  static RegexComponentBuilder.buildPartialBlock<A>(first:)(&v46, &type metadata for String, v24);
  swift_bridgeObjectRelease(v25);
  v26 = sub_1004B804C(&qword_1013E6EE8);
  v27 = v39;
  _RegexFactory.capture<A, B>(_:)(v17, v26, v12, v21);
  v22(v17, v12);
  v42 = *(_QWORD *)(v42 + 8);
  ((void (*)(char *, uint64_t))v42)(v6, v4);
  Capture.init(_:)(v27, v26);
  v28 = sub_1004CBA30(&qword_1013E6F38, &qword_1013E6F18, (uint64_t)&protocol conformance descriptor for Capture<A>);
  v29 = v40;
  v30 = v44;
  static RegexComponentBuilder.buildExpression<A>(_:)(v9, v44, v28);
  v43 = *(_QWORD *)(v43 + 8);
  ((void (*)(char *, uint64_t))v43)(v9, v30);
  v31 = v38;
  static RegexComponentBuilder.buildPartialBlock<A>(first:)(v38, v12, v21);
  makeFactory()(v32);
  v33 = v41;
  _RegexFactory.ignoreCapturesInTypedOutput<A>(_:)(v17, v12, v21);
  _RegexFactory.accumulate<A, B, C>(_:_:)(v33, v29, v26, v12, v30, v21, v28);
  v34 = v37;
  v37(v33, v12);
  ((void (*)(char *, uint64_t))v42)(v6, v36);
  v34(v17, v12);
  ((void (*)(char *, uint64_t))v43)(v29, v30);
  return ((uint64_t (*)(char *, uint64_t))v34)(v31, v12);
}

unint64_t sub_1005ED1A0()
{
  unint64_t result;

  result = qword_1013E6F30;
  if (!qword_1013E6F30)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_1013E6F30);
  }
  return result;
}

unint64_t sub_1005ED1E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E6F68;
  if (!qword_1013E6F68)
  {
    v1 = type metadata accessor for CharacterClass(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for CharacterClass, v1);
    atomic_store(result, (unint64_t *)&qword_1013E6F68);
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLWPSmartListGenerator()
{
  return &type metadata for CRLWPSmartListGenerator;
}

uint64_t destroy for CRLWPSmartListGenerator.RegexMatch(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[3]);
  swift_bridgeObjectRelease(a1[9]);
  return swift_bridgeObjectRelease(a1[13]);
}

uint64_t initializeWithCopy for CRLWPSmartListGenerator.RegexMatch(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  v4 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v4;
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  v5 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v5;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  return a1;
}

uint64_t assignWithCopy for CRLWPSmartListGenerator.RegexMatch(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v7 = *(_QWORD *)(a2 + 72);
  v8 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 72) = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease(v8);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  v9 = *(_QWORD *)(a2 + 104);
  v10 = *(_QWORD *)(a1 + 104);
  *(_QWORD *)(a1 + 104) = v9;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRelease(v10);
  return a1;
}

__n128 initializeWithTake for CRLFillData(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t assignWithTake for CRLWPSmartListGenerator.RegexMatch(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  v6 = *(_QWORD *)(a2 + 72);
  v7 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  swift_bridgeObjectRelease(v7);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  v8 = *(_QWORD *)(a2 + 104);
  v9 = *(_QWORD *)(a1 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v8;
  swift_bridgeObjectRelease(v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLWPSmartListGenerator.RegexMatch(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 112))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLWPSmartListGenerator.RegexMatch(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 112) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 112) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLWPSmartListGenerator.RegexMatch()
{
  return &type metadata for CRLWPSmartListGenerator.RegexMatch;
}

id CRLiOSAlignmentToolsController.__allocating_init(delegate:)(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  uint64_t v4;
  id v5;
  objc_super v7;

  v3 = (char *)objc_allocWithZone(v1);
  v4 = swift_unknownObjectWeakInit(&v3[OBJC_IVAR____TtC8Freeform30CRLiOSAlignmentToolsController_delegate], 0);
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform30CRLiOSAlignmentToolsController____lazy_storage___viewController] = 0;
  swift_unknownObjectWeakAssign(v4, a1);
  v7.receiver = v3;
  v7.super_class = v1;
  v5 = objc_msgSendSuper2(&v7, "init");
  swift_unknownObjectRelease(a1);
  return v5;
}

id CRLiOSAlignmentToolsController.init(delegate:)(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  objc_super v6;

  v3 = swift_unknownObjectWeakInit(&v1[OBJC_IVAR____TtC8Freeform30CRLiOSAlignmentToolsController_delegate]);
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform30CRLiOSAlignmentToolsController____lazy_storage___viewController] = 0;
  swift_unknownObjectWeakAssign(v3, a1);
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for CRLiOSAlignmentToolsController();
  v4 = objc_msgSendSuper2(&v6, "init");
  swift_unknownObjectRelease(a1);
  return v4;
}

uint64_t type metadata accessor for CRLiOSAlignmentToolsController()
{
  return objc_opt_self(_TtC8Freeform30CRLiOSAlignmentToolsController);
}

id sub_1005ED6B8()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  char *v4;
  char *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  _QWORD v13[21];

  v1 = OBJC_IVAR____TtC8Freeform30CRLiOSAlignmentToolsController____lazy_storage___viewController;
  v2 = *(void **)&v0[OBJC_IVAR____TtC8Freeform30CRLiOSAlignmentToolsController____lazy_storage___viewController];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC8Freeform30CRLiOSAlignmentToolsController____lazy_storage___viewController];
  }
  else
  {
    v4 = v0;
    v5 = v0;
    sub_1005ED7D0(v0, v13);
    v6 = objc_allocWithZone((Class)sub_1004B804C(&qword_1013E6FB8));
    v7 = (void *)UIHostingController.init(rootView:)(v13);
    objc_msgSend(v7, "setModalPresentationStyle:", 2);
    v8 = objc_msgSend(v7, "presentationController");
    if (v8)
    {
      v9 = v8;
      objc_msgSend(v8, "setDelegate:", v5);

    }
    v10 = *(void **)&v4[v1];
    *(_QWORD *)&v4[v1] = v7;
    v3 = v7;

    v2 = 0;
  }
  v11 = v2;
  return v3;
}

void sub_1005ED7D0(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  NSString v13;
  NSString v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  NSString v20;
  NSString v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  NSString v27;
  NSString v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  NSString v34;
  NSString v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  NSString v41;
  NSString v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  NSString v48;
  NSString v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  NSString v55;
  NSString v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  NSString v62;
  NSString v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  swift_unknownObjectWeakInit(a2, 0);
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("CRLSnapToGrid"));
  a2[1] = AppStorage.init<A>(wrappedValue:_:store:)(0, v3, v4, 0);
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("CRLDisplayCenterGuides"));
  a2[2] = AppStorage.init<A>(wrappedValue:_:store:)(1, v5, v6, 0);
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("CRLDisplayEdgeGuides"));
  a2[3] = AppStorage.init<A>(wrappedValue:_:store:)(0, v7, v8, 0);
  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("CRLDisplaySpacingGuides"));
  a2[4] = AppStorage.init<A>(wrappedValue:_:store:)(1, v9, v10, 0);
  v11 = (void *)objc_opt_self(NSBundle);
  v12 = objc_msgSend(v11, "mainBundle");
  v13 = String._bridgeToObjectiveC()();
  v14 = String._bridgeToObjectiveC()();
  v15 = objc_msgSend(v12, "localizedStringForKey:value:table:", v13, v14, 0);

  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v18 = v17;

  a2[5] = v16;
  a2[6] = v18;
  v19 = objc_msgSend(v11, "mainBundle");
  v20 = String._bridgeToObjectiveC()();
  v21 = String._bridgeToObjectiveC()();
  v22 = objc_msgSend(v19, "localizedStringForKey:value:table:", v20, v21, 0);

  v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
  v25 = v24;

  a2[7] = v23;
  a2[8] = v25;
  v26 = objc_msgSend(v11, "mainBundle");
  v27 = String._bridgeToObjectiveC()();
  v28 = String._bridgeToObjectiveC()();
  v29 = objc_msgSend(v26, "localizedStringForKey:value:table:", v27, v28, 0);

  v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
  v32 = v31;

  a2[9] = v30;
  a2[10] = v32;
  v33 = objc_msgSend(v11, "mainBundle");
  v34 = String._bridgeToObjectiveC()();
  v35 = String._bridgeToObjectiveC()();
  v36 = objc_msgSend(v33, "localizedStringForKey:value:table:", v34, v35, 0);

  v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
  v39 = v38;

  a2[11] = v37;
  a2[12] = v39;
  v40 = objc_msgSend(v11, "mainBundle");
  v41 = String._bridgeToObjectiveC()();
  v42 = String._bridgeToObjectiveC()();
  v43 = objc_msgSend(v40, "localizedStringForKey:value:table:", v41, v42, 0);

  v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(v43);
  v46 = v45;

  a2[13] = v44;
  a2[14] = v46;
  v47 = objc_msgSend(v11, "mainBundle");
  v48 = String._bridgeToObjectiveC()();
  v49 = String._bridgeToObjectiveC()();
  v50 = objc_msgSend(v47, "localizedStringForKey:value:table:", v48, v49, 0);

  v51 = static String._unconditionallyBridgeFromObjectiveC(_:)(v50);
  v53 = v52;

  a2[15] = v51;
  a2[16] = v53;
  v54 = objc_msgSend(v11, "mainBundle");
  v55 = String._bridgeToObjectiveC()();
  v56 = String._bridgeToObjectiveC()();
  v57 = objc_msgSend(v54, "localizedStringForKey:value:table:", v55, v56, 0);

  v58 = static String._unconditionallyBridgeFromObjectiveC(_:)(v57);
  v60 = v59;

  a2[17] = v58;
  a2[18] = v60;
  v61 = objc_msgSend(v11, "mainBundle");
  v62 = String._bridgeToObjectiveC()();
  v63 = String._bridgeToObjectiveC()();
  v64 = objc_msgSend(v61, "localizedStringForKey:value:table:", v62, v63, 0);

  v65 = static String._unconditionallyBridgeFromObjectiveC(_:)(v64);
  v67 = v66;

  a2[19] = v65;
  a2[20] = v67;
  swift_unknownObjectWeakAssign(a2, a1);

}

Swift::Void __swiftcall CRLiOSAlignmentToolsController.dismissAlignmentTools()()
{
  uint64_t v0;
  void *Strong;
  void *v2;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform30CRLiOSAlignmentToolsController_delegate);
  if (Strong)
  {
    v2 = Strong;
    objc_msgSend(Strong, "alignmentToolsControllerShouldDismiss:", v0);
    swift_unknownObjectRelease(v2);
  }
}

void CRLiOSAlignmentToolsController.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("Freeform.CRLiOSAlignmentToolsController", 39, "init()", 6, 0);
  __break(1u);
}

id CRLiOSAlignmentToolsController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSAlignmentToolsController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

Swift::Void __swiftcall CRLiOSAlignmentToolsController.presentationControllerDidDismiss(_:)(UIPresentationController a1)
{
  uint64_t v1;
  void *Strong;
  void *v3;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform30CRLiOSAlignmentToolsController_delegate);
  if (Strong)
  {
    v3 = Strong;
    objc_msgSend(Strong, "userDismissedAlignmentToolsController:", v1);
    swift_unknownObjectRelease(v3);
  }
}

uint64_t destroy for CRLiOSAlignmentToolsView(_QWORD *a1)
{
  swift_unknownObjectWeakDestroy(a1);
  swift_release(a1[1]);
  swift_release(a1[2]);
  swift_release(a1[3]);
  swift_release(a1[4]);
  swift_bridgeObjectRelease(a1[6]);
  swift_bridgeObjectRelease(a1[8]);
  swift_bridgeObjectRelease(a1[10]);
  swift_bridgeObjectRelease(a1[12]);
  swift_bridgeObjectRelease(a1[14]);
  swift_bridgeObjectRelease(a1[16]);
  swift_bridgeObjectRelease(a1[18]);
  return swift_bridgeObjectRelease(a1[20]);
}

_QWORD *initializeWithCopy for CRLiOSAlignmentToolsView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  swift_unknownObjectWeakCopyInit(a1, a2);
  v4 = a2[1];
  v5 = a2[2];
  a1[1] = v4;
  a1[2] = v5;
  v6 = a2[3];
  v7 = a2[4];
  a1[3] = v6;
  a1[4] = v7;
  v8 = a2[6];
  a1[5] = a2[5];
  a1[6] = v8;
  v9 = a2[8];
  a1[7] = a2[7];
  a1[8] = v9;
  v10 = a2[10];
  a1[9] = a2[9];
  a1[10] = v10;
  v11 = a2[12];
  a1[11] = a2[11];
  a1[12] = v11;
  v12 = a2[14];
  a1[13] = a2[13];
  a1[14] = v12;
  v17 = a2[16];
  a1[15] = a2[15];
  a1[16] = v17;
  v16 = a2[18];
  a1[17] = a2[17];
  a1[18] = v16;
  v13 = a2[19];
  v14 = a2[20];
  a1[19] = v13;
  a1[20] = v14;
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v7);
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRetain(v17);
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRetain(v14);
  return a1;
}

_QWORD *assignWithCopy for CRLiOSAlignmentToolsView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  swift_unknownObjectWeakCopyAssign(a1, a2);
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[2];
  v7 = a1[2];
  a1[2] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = a2[3];
  v9 = a1[3];
  a1[3] = v8;
  swift_retain(v8);
  swift_release(v9);
  v10 = a2[4];
  v11 = a1[4];
  a1[4] = v10;
  swift_retain(v10);
  swift_release(v11);
  a1[5] = a2[5];
  v12 = a2[6];
  v13 = a1[6];
  a1[6] = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13);
  a1[7] = a2[7];
  v14 = a2[8];
  v15 = a1[8];
  a1[8] = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease(v15);
  a1[9] = a2[9];
  v16 = a2[10];
  v17 = a1[10];
  a1[10] = v16;
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRelease(v17);
  a1[11] = a2[11];
  v18 = a2[12];
  v19 = a1[12];
  a1[12] = v18;
  swift_bridgeObjectRetain(v18);
  swift_bridgeObjectRelease(v19);
  a1[13] = a2[13];
  v20 = a2[14];
  v21 = a1[14];
  a1[14] = v20;
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRelease(v21);
  a1[15] = a2[15];
  v22 = a2[16];
  v23 = a1[16];
  a1[16] = v22;
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRelease(v23);
  a1[17] = a2[17];
  v24 = a2[18];
  v25 = a1[18];
  a1[18] = v24;
  swift_bridgeObjectRetain(v24);
  swift_bridgeObjectRelease(v25);
  a1[19] = a2[19];
  v26 = a2[20];
  v27 = a1[20];
  a1[20] = v26;
  swift_bridgeObjectRetain(v26);
  swift_bridgeObjectRelease(v27);
  return a1;
}

__n128 initializeWithTake for CRLiOSAlignmentToolsView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;

  v3 = swift_unknownObjectWeakTakeInit();
  *(_OWORD *)(v3 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(v3 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(v3 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(v3 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(v3 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(v3 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(v3 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(v3 + 136) = *(_OWORD *)(a2 + 136);
  result = *(__n128 *)(a2 + 152);
  *(__n128 *)(v3 + 152) = result;
  return result;
}

_QWORD *assignWithTake for CRLiOSAlignmentToolsView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v4 = *(_QWORD *)(swift_unknownObjectWeakTakeAssign() + 8);
  a1[1] = a2[1];
  swift_release(v4);
  v5 = a1[2];
  a1[2] = a2[2];
  swift_release(v5);
  v6 = a1[3];
  a1[3] = a2[3];
  swift_release(v6);
  v7 = a1[4];
  a1[4] = a2[4];
  swift_release(v7);
  v8 = a2[6];
  v9 = a1[6];
  a1[5] = a2[5];
  a1[6] = v8;
  swift_bridgeObjectRelease(v9);
  v10 = a2[8];
  v11 = a1[8];
  a1[7] = a2[7];
  a1[8] = v10;
  swift_bridgeObjectRelease(v11);
  v12 = a2[10];
  v13 = a1[10];
  a1[9] = a2[9];
  a1[10] = v12;
  swift_bridgeObjectRelease(v13);
  v14 = a2[12];
  v15 = a1[12];
  a1[11] = a2[11];
  a1[12] = v14;
  swift_bridgeObjectRelease(v15);
  v16 = a2[14];
  v17 = a1[14];
  a1[13] = a2[13];
  a1[14] = v16;
  swift_bridgeObjectRelease(v17);
  v18 = a2[16];
  v19 = a1[16];
  a1[15] = a2[15];
  a1[16] = v18;
  swift_bridgeObjectRelease(v19);
  v20 = a2[18];
  v21 = a1[18];
  a1[17] = a2[17];
  a1[18] = v20;
  swift_bridgeObjectRelease(v21);
  v22 = a2[20];
  v23 = a1[20];
  a1[19] = a2[19];
  a1[20] = v22;
  swift_bridgeObjectRelease(v23);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLiOSAlignmentToolsView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 168))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLiOSAlignmentToolsView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 168) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 168) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLiOSAlignmentToolsView()
{
  return &type metadata for CRLiOSAlignmentToolsView;
}

uint64_t sub_1005EE574(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10111A414, 1);
}

uint64_t sub_1005EE584@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t OpaqueTypeConformance2;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37[16];
  uint64_t v38;
  char v39[16];
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  unint64_t v44;
  _QWORD v45[3];

  v35 = a2;
  v36 = type metadata accessor for ToolbarTitleDisplayMode(0);
  v34 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin(v36);
  v33 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1004B804C(&qword_1013E6FE0);
  v29 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_1013E6FD8);
  v30 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C(&qword_1013E6FD0);
  v11 = *(_QWORD *)(v10 - 8);
  v31 = v10;
  v32 = v11;
  __chkstk_darwin(v10);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = a1;
  v14 = sub_1004B804C(&qword_1013E7018);
  v15 = sub_1004CBA30(&qword_1013E7020, &qword_1013E7018, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  Form.init(content:)(sub_1005EF8B8, v39, v14, v15);
  v38 = a1;
  v16 = sub_1004B804C(&qword_1013E6FE8);
  v17 = sub_1004CBA30(&qword_1013E6FF0, &qword_1013E6FE0, (uint64_t)&protocol conformance descriptor for Form<A>);
  v18 = sub_1004CB6A4(&qword_1013E6FF8);
  v19 = sub_1004CBA30((unint64_t *)&unk_1013E7000, &qword_1013E6FF8, (uint64_t)&protocol conformance descriptor for ToolbarItem<A, B>);
  v41 = v18;
  v42 = (void *)v19;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v41, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
  View.toolbar<A>(content:)(sub_1005EF8C0, v37, v4, v16, v17, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v6, v4);
  v21 = *(_QWORD *)(a1 + 48);
  v45[0] = *(_QWORD *)(a1 + 40);
  v45[1] = v21;
  v41 = v4;
  v42 = (void *)v16;
  v43 = v17;
  v44 = OpaqueTypeConformance2;
  v22 = swift_getOpaqueTypeConformance2(&v41, &opaque type descriptor for <<opaque return type of View.toolbar<A>(content:)>>, 1);
  v23 = sub_1004D292C();
  View.navigationTitle<A>(_:)(v45, v7, &type metadata for String, v22, v23);
  v24 = (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v9, v7);
  v25 = v33;
  static ToolbarTitleDisplayMode.inline.getter(v24);
  v41 = v7;
  v42 = &type metadata for String;
  v43 = v22;
  v44 = v23;
  v26 = swift_getOpaqueTypeConformance2(&v41, &opaque type descriptor for <<opaque return type of View.navigationTitle<A>(_:)>>, 1);
  v27 = v31;
  View.toolbarTitleDisplayMode(_:)(v25, v31, v26);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v25, v36);
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v13, v27);
}

uint64_t sub_1005EE8A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  void (*v52)(char *, uint64_t);
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64[16];
  uint64_t v65;
  char v66[16];
  uint64_t v67;
  char v68[16];
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;

  v63 = a2;
  v3 = sub_1004B804C(&qword_1013E7060);
  v61 = *(_QWORD *)(v3 - 8);
  v62 = v3;
  __chkstk_darwin(v3);
  v60 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v58 = (char *)&v54 - v6;
  v59 = sub_1004B804C(&qword_1013E7068);
  v55 = *(_QWORD *)(v59 - 8);
  v7 = v55;
  __chkstk_darwin(v59);
  v9 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v54 - v11;
  v13 = sub_1004B804C(&qword_1013E7070);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1004B804C(&qword_1013E7078);
  __chkstk_darwin(v17);
  v19 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v54 - v21;
  v69 = a1;
  v23 = sub_1004B804C(&qword_1013E7080);
  v24 = sub_1005EFAA0();
  v25 = Section<>.init(content:)(sub_1005EFA98, v68, v23, v24);
  v26 = static Alignment.center.getter(v25);
  v28 = sub_1006C9300(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v19, 0.0, 1, 0.0, 1, v26, v27);
  (*(void (**)(char *, uint64_t, __n128))(v14 + 8))(v16, v13, v28);
  v29 = v19;
  v57 = v22;
  sub_1005EFB24((uint64_t)v19, (uint64_t)v22);
  v67 = a1;
  v30 = sub_1004B804C(&qword_1013E70A0);
  v31 = sub_1004CBA30(&qword_1013E70A8, &qword_1013E70A0, (uint64_t)&protocol conformance descriptor for Toggle<A>);
  v54 = v12;
  Section<>.init(content:)(sub_1005EFB6C, v66, v30, v31);
  v32 = *(_QWORD *)(a1 + 96);
  v70 = *(_QWORD *)(a1 + 88);
  v71 = v32;
  v33 = sub_1004D292C();
  swift_bridgeObjectRetain(v32);
  v70 = Text.init<A>(_:)(&v70, &type metadata for String, v33);
  v71 = v34;
  v72 = v35 & 1;
  v73 = v36;
  v65 = a1;
  v37 = sub_1004B804C(&qword_1013E70B0);
  v38 = sub_1004CBA30(&qword_1013E70B8, &qword_1013E70B0, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  v39 = v58;
  Section<>.init(header:content:)(&v70, sub_1005EFB74, v64, &type metadata for Text, v37, &protocol witness table for Text, v38);
  v56 = v19;
  sub_1005EFB7C((uint64_t)v22, (uint64_t)v19);
  v40 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  v41 = v59;
  v40(v9, v12, v59);
  v42 = v60;
  v43 = v61;
  v44 = *(void (**)(char *, char *, uint64_t))(v61 + 16);
  v45 = v39;
  v46 = v62;
  v44(v60, v39, v62);
  v47 = (uint64_t)v29;
  v48 = v63;
  sub_1005EFB7C(v47, v63);
  v49 = sub_1004B804C(&qword_1013E70C0);
  v40((char *)(v48 + *(int *)(v49 + 48)), v9, v41);
  v44((char *)(v48 + *(int *)(v49 + 64)), v42, v46);
  v50 = *(void (**)(char *, uint64_t))(v43 + 8);
  v51 = v46;
  v50(v45, v46);
  v52 = *(void (**)(char *, uint64_t))(v55 + 8);
  v52(v54, v41);
  sub_1005EFBC4((uint64_t)v57);
  v50(v42, v51);
  v52(v9, v41);
  return sub_1005EFBC4((uint64_t)v56);
}

uint64_t sub_1005EECD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t result;
  _QWORD v29[2];

  v3 = *(_QWORD *)(a1 + 64);
  v29[0] = *(_QWORD *)(a1 + 56);
  v29[1] = v3;
  v4 = sub_1004D292C();
  swift_bridgeObjectRetain(v3);
  v5 = Text.init<A>(_:)(v29, &type metadata for String, v4);
  v7 = v6;
  v9 = v8;
  v11 = v10 & 1;
  v12 = static Font.footnote.getter();
  v13 = Text.font(_:)(v12, v5, v7, v11, v9);
  v15 = v14;
  v17 = v16;
  v19 = v18;
  swift_release(v12);
  sub_1005EFC24(v5, v7, v11);
  v20 = swift_bridgeObjectRelease(v9);
  LODWORD(v29[0]) = static HierarchicalShapeStyle.secondary.getter(v20);
  v21 = Text.foregroundStyle<A>(_:)(v29, v13, v15, v17 & 1, v19, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v23 = v22;
  LOBYTE(v9) = v24;
  v26 = v25;
  sub_1005EFC24(v13, v15, v17 & 1);
  v27 = swift_bridgeObjectRelease(v19);
  v29[0] = static Color.clear.getter(v27);
  result = AnyView.init<A>(_:)(v29, &type metadata for Color, &protocol witness table for Color);
  *(_QWORD *)a2 = v21;
  *(_QWORD *)(a2 + 8) = v23;
  *(_BYTE *)(a2 + 16) = v9 & 1;
  *(_QWORD *)(a2 + 24) = v26;
  *(_QWORD *)(a2 + 32) = result;
  return result;
}

uint64_t sub_1005EEE2C(uint64_t a1)
{
  _QWORD v3[3];
  _QWORD v4[2];
  unsigned __int8 v5;

  AppStorage.projectedValue.getter(v4, *(_QWORD *)(a1 + 8), &type metadata for Bool);
  v3[2] = a1;
  return Toggle.init(isOn:label:)(v4[0], v4[1], v5, sub_1005EFC1C, v3, &type metadata for Text, &protocol witness table for Text);
}

uint64_t sub_1005EEE98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t result;
  uint64_t v6;
  char v7;
  uint64_t v8;
  _QWORD v9[2];

  v3 = *(_QWORD *)(a1 + 80);
  v9[0] = *(_QWORD *)(a1 + 72);
  v9[1] = v3;
  v4 = sub_1004D292C();
  swift_bridgeObjectRetain(v3);
  result = Text.init<A>(_:)(v9, &type metadata for String, v4);
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v6;
  *(_BYTE *)(a2 + 16) = v7 & 1;
  *(_QWORD *)(a2 + 24) = v8;
  return result;
}

uint64_t sub_1005EEF00@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  _BYTE v32[16];
  _QWORD *v33;
  _BYTE v34[16];
  _QWORD *v35;
  _BYTE v36[16];
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  unsigned __int8 v40;

  v31 = a2;
  v3 = sub_1004B804C(&qword_1013E70A0);
  v29 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v30 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v28 - v6;
  __chkstk_darwin(v8);
  v10 = (char *)&v28 - v9;
  __chkstk_darwin(v11);
  v13 = (char *)&v28 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)&v28 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v28 - v18;
  AppStorage.projectedValue.getter(&v38, a1[2], &type metadata for Bool);
  v37 = a1;
  Toggle.init(isOn:label:)(v38, v39, v40, sub_1005EFC04, v36, &type metadata for Text, &protocol witness table for Text);
  AppStorage.projectedValue.getter(&v38, a1[3], &type metadata for Bool);
  v35 = a1;
  Toggle.init(isOn:label:)(v38, v39, v40, sub_1005EFC0C, v34, &type metadata for Text, &protocol witness table for Text);
  AppStorage.projectedValue.getter(&v38, a1[4], &type metadata for Bool);
  v33 = a1;
  Toggle.init(isOn:label:)(v38, v39, v40, sub_1005EFC14, v32, &type metadata for Text, &protocol witness table for Text);
  v20 = v29;
  v21 = *(void (**)(char *, char *, uint64_t))(v29 + 16);
  v22 = v10;
  v28 = v10;
  v21(v10, v19, v3);
  v21(v7, v16, v3);
  v23 = v30;
  v21(v30, v13, v3);
  v24 = v31;
  v21(v31, v22, v3);
  v25 = sub_1004B804C(&qword_1013E70C8);
  v21(&v24[*(int *)(v25 + 48)], v7, v3);
  v21(&v24[*(int *)(v25 + 64)], v23, v3);
  v26 = *(void (**)(char *, uint64_t))(v20 + 8);
  v26(v13, v3);
  v26(v16, v3);
  v26(v19, v3);
  v26(v23, v3);
  v26(v7, v3);
  return ((uint64_t (*)(char *, uint64_t))v26)(v28, v3);
}

uint64_t sub_1005EF1B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t result;
  uint64_t v6;
  char v7;
  uint64_t v8;
  _QWORD v9[2];

  v3 = *(_QWORD *)(a1 + 112);
  v9[0] = *(_QWORD *)(a1 + 104);
  v9[1] = v3;
  v4 = sub_1004D292C();
  swift_bridgeObjectRetain(v3);
  result = Text.init<A>(_:)(v9, &type metadata for String, v4);
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v6;
  *(_BYTE *)(a2 + 16) = v7 & 1;
  *(_QWORD *)(a2 + 24) = v8;
  return result;
}

uint64_t sub_1005EF220@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t result;
  uint64_t v6;
  char v7;
  uint64_t v8;
  _QWORD v9[2];

  v3 = *(_QWORD *)(a1 + 128);
  v9[0] = *(_QWORD *)(a1 + 120);
  v9[1] = v3;
  v4 = sub_1004D292C();
  swift_bridgeObjectRetain(v3);
  result = Text.init<A>(_:)(v9, &type metadata for String, v4);
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v6;
  *(_BYTE *)(a2 + 16) = v7 & 1;
  *(_QWORD *)(a2 + 24) = v8;
  return result;
}

uint64_t sub_1005EF288@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t result;
  uint64_t v6;
  char v7;
  uint64_t v8;
  _QWORD v9[2];

  v3 = *(_QWORD *)(a1 + 144);
  v9[0] = *(_QWORD *)(a1 + 136);
  v9[1] = v3;
  v4 = sub_1004D292C();
  swift_bridgeObjectRetain(v3);
  result = Text.init<A>(_:)(v9, &type metadata for String, v4);
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v6;
  *(_BYTE *)(a2 + 16) = v7 & 1;
  *(_QWORD *)(a2 + 24) = v8;
  return result;
}

uint64_t sub_1005EF2F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _BYTE v14[16];
  uint64_t v15;

  v2 = type metadata accessor for ToolbarItemPlacement(0);
  __chkstk_darwin(v2);
  v4 = &v14[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_1004B804C(&qword_1013E6FF8);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = &v14[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  static ToolbarItemPlacement.topBarTrailing.getter(v7);
  v15 = a1;
  v10 = sub_1004B804C(&qword_1013E7028);
  v11 = sub_1005EF8D0();
  ToolbarItem<>.init(placement:content:)(v4, sub_1005EF8C8, v14, v10, v11);
  v12 = sub_1004CBA30((unint64_t *)&unk_1013E7000, &qword_1013E6FF8, (uint64_t)&protocol conformance descriptor for ToolbarItem<A, B>);
  static ToolbarContentBuilder.buildBlock<A>(_:)(v9, v5, v12);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_1005EF420@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  __n128 v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t KeyPath;
  uint64_t *v22;
  _QWORD v24[21];
  _QWORD v25[3];

  v4 = sub_1004B804C(&qword_1013E7038);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C(&qword_1013E7058);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[20];
  v25[0] = a1[19];
  v25[1] = v12;
  sub_1005EF99C(a1, v24);
  v13 = swift_allocObject(&unk_1012715F0, 184, 7);
  sub_1005EFA54((uint64_t)v24, v13 + 16);
  v14 = sub_1004D292C();
  v15 = swift_bridgeObjectRetain(v12);
  v16 = Button<>.init<A>(_:action:)(v25, sub_1005EFA88, v13, &type metadata for String, v14, v15);
  v17 = static Font.Weight.bold.getter(v16);
  v18 = sub_1004CBA30(&qword_1013E7040, &qword_1013E7038, (uint64_t)&protocol conformance descriptor for Button<A>);
  View.fontWeight(_:)(*(_QWORD *)&v17, 0, v4, v18);
  v19 = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v20 = static Color.accentColor.getter(v19);
  KeyPath = swift_getKeyPath(&unk_100EFDFD0);
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 16))(a2, v11, v8);
  v22 = (uint64_t *)(a2 + *(int *)(sub_1004B804C(&qword_1013E7028) + 36));
  *v22 = KeyPath;
  v22[1] = v20;
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

void sub_1005EF5EC(uint64_t a1)
{
  uint64_t Strong;
  void *v2;
  void *v3;
  id v4;

  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v4 = (id)Strong;
    v2 = (void *)swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC8Freeform30CRLiOSAlignmentToolsController_delegate);
    if (v2)
    {
      v3 = v2;
      objc_msgSend(v2, "alignmentToolsControllerShouldDismiss:", v4);

      swift_unknownObjectRelease(v3);
    }
    else
    {

    }
  }
}

uint64_t sub_1005EF678()
{
  return static View._viewListCount(inputs:)();
}

uint64_t sub_1005EF690@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t OpaqueTypeConformance2;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  _QWORD v21[2];
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  unint64_t v27;

  v21[1] = a1;
  v2 = sub_1004B804C(&qword_1013E6FC0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = v1;
  v21[0] = sub_1004B804C(&qword_1013E6FC8);
  v6 = sub_1004CB6A4(&qword_1013E6FD0);
  v7 = sub_1004CB6A4(&qword_1013E6FD8);
  v8 = sub_1004CB6A4(&qword_1013E6FE0);
  v9 = sub_1004CB6A4(&qword_1013E6FE8);
  v10 = sub_1004CBA30(&qword_1013E6FF0, &qword_1013E6FE0, (uint64_t)&protocol conformance descriptor for Form<A>);
  v11 = sub_1004CB6A4(&qword_1013E6FF8);
  v12 = sub_1004CBA30((unint64_t *)&unk_1013E7000, &qword_1013E6FF8, (uint64_t)&protocol conformance descriptor for ToolbarItem<A, B>);
  v24 = v11;
  v25 = (void *)v12;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v24, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
  v24 = v8;
  v25 = (void *)v9;
  v26 = v10;
  v27 = OpaqueTypeConformance2;
  v14 = swift_getOpaqueTypeConformance2(&v24, &opaque type descriptor for <<opaque return type of View.toolbar<A>(content:)>>, 1);
  v15 = sub_1004D292C();
  v24 = v7;
  v25 = &type metadata for String;
  v26 = v14;
  v27 = v15;
  v16 = swift_getOpaqueTypeConformance2(&v24, &opaque type descriptor for <<opaque return type of View.navigationTitle<A>(_:)>>, 1);
  v24 = v6;
  v25 = (void *)v16;
  v17 = swift_getOpaqueTypeConformance2(&v24, &opaque type descriptor for <<opaque return type of View.toolbarTitleDisplayMode(_:)>>, 1);
  NavigationStack.init<>(root:)(sub_1005EF8B0, v22, v21[0], v17);
  v18 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v19 = sub_1004CBA30(&qword_1013E7010, &qword_1013E6FC0, (uint64_t)&protocol conformance descriptor for NavigationStack<A, B>);
  View.defaultAppStorage(_:)(v18, v2, v19);

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1005EF8B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1005EE584(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1005EF8B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1005EE8A4(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1005EF8C0()
{
  uint64_t v0;

  return sub_1005EF2F0(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1005EF8C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1005EF420(*(_QWORD **)(v1 + 16), a1);
}

unint64_t sub_1005EF8D0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1013E7030;
  if (!qword_1013E7030)
  {
    v1 = sub_1004CB6A4(&qword_1013E7028);
    v2[0] = sub_1004CB6A4(&qword_1013E7038);
    v2[1] = sub_1004CBA30(&qword_1013E7040, &qword_1013E7038, (uint64_t)&protocol conformance descriptor for Button<A>);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.fontWeight(_:)>>, 1);
    sub_1004CBA30(&qword_1013E7048, &qword_1013E7050, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1013E7030);
  }
  return result;
}

_QWORD *sub_1005EF99C(_QWORD *a1, _QWORD *a2)
{
  initializeWithCopy for CRLiOSAlignmentToolsView(a2, a1);
  return a2;
}

uint64_t sub_1005EF9D0()
{
  _QWORD *v0;

  swift_unknownObjectWeakDestroy(v0 + 2);
  swift_release(v0[3]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  swift_release(v0[6]);
  swift_bridgeObjectRelease(v0[8]);
  swift_bridgeObjectRelease(v0[10]);
  swift_bridgeObjectRelease(v0[12]);
  swift_bridgeObjectRelease(v0[14]);
  swift_bridgeObjectRelease(v0[16]);
  swift_bridgeObjectRelease(v0[18]);
  swift_bridgeObjectRelease(v0[20]);
  swift_bridgeObjectRelease(v0[22]);
  return swift_deallocObject(v0, 184, 7);
}

uint64_t sub_1005EFA54(uint64_t a1, uint64_t a2)
{
  initializeWithTake for CRLiOSAlignmentToolsView(a2, a1);
  return a2;
}

void sub_1005EFA88()
{
  uint64_t v0;

  sub_1005EF5EC(v0 + 16);
}

uint64_t sub_1005EFA98@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1005EECD4(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_1005EFAA0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E7088;
  if (!qword_1013E7088)
  {
    v1 = sub_1004CB6A4(&qword_1013E7080);
    sub_1004CBA30(&qword_1013E7090, &qword_1013E7098, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1013E7088);
  }
  return result;
}

uint64_t sub_1005EFB24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013E7078);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005EFB6C()
{
  uint64_t v0;

  return sub_1005EEE2C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1005EFB74@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_1005EEF00(*(_QWORD **)(v1 + 16), a1);
}

uint64_t sub_1005EFB7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013E7078);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005EFBC4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B804C(&qword_1013E7078);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1005EFC04@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1005EF1B8(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1005EFC0C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1005EF220(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1005EFC14@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1005EF288(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1005EFC1C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1005EEE98(*(_QWORD *)(v1 + 16), a1);
}

void sub_1005EFC24(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    swift_release(a1);
  else
    swift_bridgeObjectRelease(a2);
}

uint64_t sub_1005EFC34()
{
  _QWORD v1[2];

  v1[0] = sub_1004CB6A4(&qword_1013E6FC0);
  v1[1] = sub_1004CBA30(&qword_1013E7010, &qword_1013E6FC0, (uint64_t)&protocol conformance descriptor for NavigationStack<A, B>);
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.defaultAppStorage(_:)>>, 1);
}

void sub_1005EFC98(uint64_t a1)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t i;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  unint64_t v34;

  v2 = &qword_101405F50;
  v3 = sub_1004B804C(&qword_101405F50);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v30 - v7;
  v34 = (unint64_t)_swiftEmptyArrayStorage;
  v9 = *(_QWORD *)(a1 + 64);
  v32 = a1 + 64;
  v10 = 1 << *(_BYTE *)(a1 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & v9;
  v33 = (unint64_t)(v10 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v13 = 0;
  v31 = a1;
  if (v12)
    goto LABEL_6;
LABEL_7:
  v16 = v13 + 1;
  if (!__OFADD__(v13, 1))
  {
    if (v16 < v33)
    {
      v17 = *(_QWORD *)(v32 + 8 * v16);
      ++v13;
      if (v17)
        goto LABEL_22;
      v13 = v16 + 1;
      if (v16 + 1 >= v33)
        goto LABEL_28;
      v17 = *(_QWORD *)(v32 + 8 * v13);
      if (v17)
        goto LABEL_22;
      v13 = v16 + 2;
      if (v16 + 2 >= v33)
        goto LABEL_28;
      v17 = *(_QWORD *)(v32 + 8 * v13);
      if (v17)
        goto LABEL_22;
      v13 = v16 + 3;
      if (v16 + 3 >= v33)
        goto LABEL_28;
      v17 = *(_QWORD *)(v32 + 8 * v13);
      if (v17)
      {
LABEL_22:
        v12 = (v17 - 1) & v17;
        for (i = __clz(__rbit64(v17)) + (v13 << 6); ; i = v14 | (v13 << 6))
        {
          v19 = *(_QWORD *)(a1 + 48);
          v20 = type metadata accessor for UUID(0);
          (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v8, v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * i, v20);
          v21 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * i);
          *(_QWORD *)&v8[*(int *)(v3 + 48)] = v21;
          sub_1005FC0A4((uint64_t)v8, (uint64_t)v6);
          v22 = *(_QWORD *)(*(_QWORD *)&v6[*(int *)(v3 + 48)] + OBJC_IVAR____TtC8Freeform19CRLTransactableData_data);
          if (v22 < 0)
          {
            v23 = v3;
            v24 = v22 & 0x7FFFFFFFFFFFFFFFLL;
            swift_retain(v21);
            swift_retain(v24);
            v25 = v2;
            v26 = sub_1004CB800((uint64_t)v6, v2);
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v26);
            v28 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
            v27 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v28 >= v27 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v27 > 1, v28 + 1, 1);
            v29 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v28, v24);
            specialized Array._endMutation()(v29);
            v2 = v25;
            v3 = v23;
            a1 = v31;
            if (!v12)
              goto LABEL_7;
          }
          else
          {
            swift_retain(v21);
            sub_1004CB800((uint64_t)v6, v2);
            if (!v12)
              goto LABEL_7;
          }
LABEL_6:
          v14 = __clz(__rbit64(v12));
          v12 &= v12 - 1;
        }
      }
      v18 = v16 + 4;
      if (v18 < v33)
      {
        v17 = *(_QWORD *)(v32 + 8 * v18);
        if (v17)
        {
          v13 = v18;
          goto LABEL_22;
        }
        while (1)
        {
          v13 = v18 + 1;
          if (__OFADD__(v18, 1))
            goto LABEL_30;
          if (v13 >= v33)
            break;
          v17 = *(_QWORD *)(v32 + 8 * v13);
          ++v18;
          if (v17)
            goto LABEL_22;
        }
      }
    }
LABEL_28:
    swift_release(a1);
    return;
  }
  __break(1u);
LABEL_30:
  __break(1u);
}

void sub_1005EFF90(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _UNKNOWN ****v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  void (*v45)(char *, char *, uint64_t);
  char *v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  _QWORD v51[2];
  char *v52;
  _QWORD *v53;
  char *v54;
  uint64_t v55;
  int64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _BYTE v62[24];
  _QWORD v63[6];
  uint64_t v64;

  v2 = sub_1004B804C(&qword_1013F5530);
  __chkstk_darwin(v2);
  v58 = (uint64_t)v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v4);
  v6 = (char *)v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UUID(0);
  v60 = *(_QWORD *)(v7 - 8);
  v8 = __chkstk_darwin(v7);
  v52 = (char *)v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v51[0] = (char *)v51 - v10;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v11 = a1;
    else
      v11 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v12 = __CocoaSet.makeIterator()(v11);
    v13 = type metadata accessor for CRLTransactableHashableWrapper();
    v14 = sub_1004B7878((unint64_t *)&qword_101405D90, (uint64_t (*)(uint64_t))type metadata accessor for CRLTransactableHashableWrapper, (uint64_t)&unk_100F393F8);
    v15 = Set.Iterator.init(_cocoa:)(v63, v12, v13, v14);
    a1 = v63[0];
    v57 = v63[1];
    v16 = v63[2];
    v17 = v63[3];
    v18 = v63[4];
  }
  else
  {
    v19 = -1 << *(_BYTE *)(a1 + 32);
    v20 = *(_QWORD *)(a1 + 56);
    v57 = a1 + 56;
    v16 = ~v19;
    v21 = -v19;
    if (v21 < 64)
      v22 = ~(-1 << v21);
    else
      v22 = -1;
    v18 = v22 & v20;
    swift_bridgeObjectRetain(a1);
    v17 = 0;
  }
  v55 = a1 & 0x7FFFFFFFFFFFFFFFLL;
  v51[1] = v16;
  v53 = _swiftEmptyArrayStorage;
  v56 = (unint64_t)(v16 + 64) >> 6;
  v54 = (char *)&type metadata for Swift.AnyObject + 8;
  v59 = a1;
  while (1)
  {
    v23 = v17;
    if ((a1 & 0x8000000000000000) == 0)
      break;
    v26 = __CocoaSet.Iterator.next()(v15);
    if (!v26)
    {
      a1 = v59;
LABEL_49:
      sub_1004D284C(a1);
      return;
    }
    v27 = v26;
    v61 = v26;
    v28 = type metadata accessor for CRLTransactableHashableWrapper();
    swift_unknownObjectRetain(v27);
    swift_dynamicCast(&v64, &v61, v54, v28, 7);
    v29 = v64;
    swift_unknownObjectRelease(v27);
    a1 = v59;
    if (!v29)
      goto LABEL_49;
LABEL_34:
    v33 = *(_QWORD *)(v29 + 16);
    v34 = type metadata accessor for CRLFreehandDrawingShapeItem(0);
    v35 = swift_dynamicCastClass(v33, v34);
    if (v35)
    {
      v36 = *(_UNKNOWN *****)(v35 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
      if (*v36 == &off_1013E3B70)
        v37 = *(_QWORD *)(v35 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
      else
        v37 = 0;
      v38 = v37 + *(_QWORD *)(*(_QWORD *)v37 + 632);
      swift_beginAccess(v38, v62, 0, 0);
      v39 = v38;
      v40 = v58;
      sub_100583AC4(v39, v58);
      swift_unknownObjectRetain(v33);
      swift_retain(v36);
      v41 = sub_1004B804C(&qword_1013E1A80);
      CRRegister.wrappedValue.getter(v41);
      a1 = v59;
      sub_1004CB800(v40, &qword_1013F5530);
      swift_release(v36);
      swift_unknownObjectRelease(v33);
      v42 = 0;
    }
    else
    {
      v42 = 1;
    }
    v43 = v60;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v60 + 56))(v6, v42, 1, v7);
    v44 = swift_release(v29);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v43 + 48))(v6, 1, v7, v44) == 1)
    {
      v15 = (_QWORD *)sub_1004CB800((uint64_t)v6, (uint64_t *)&unk_1013E1A50);
    }
    else
    {
      v45 = *(void (**)(char *, char *, uint64_t))(v60 + 32);
      v46 = (char *)v51[0];
      v45((char *)v51[0], v6, v7);
      v45(v52, v46, v7);
      v47 = (unint64_t)v53;
      if ((swift_isUniquelyReferenced_nonNull_native(v53) & 1) == 0)
        v47 = sub_100D0EC28(0, *(_QWORD *)(v47 + 16) + 1, 1, v47);
      v49 = *(_QWORD *)(v47 + 16);
      v48 = *(_QWORD *)(v47 + 24);
      if (v49 >= v48 >> 1)
        v47 = sub_100D0EC28(v48 > 1, v49 + 1, 1, v47);
      *(_QWORD *)(v47 + 16) = v49 + 1;
      v50 = (*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
      v53 = (_QWORD *)v47;
      v15 = (_QWORD *)((uint64_t (*)(unint64_t, char *, uint64_t))v45)(v47 + v50 + *(_QWORD *)(v60 + 72) * v49, v52, v7);
      a1 = v59;
    }
  }
  if (v18)
  {
    v24 = __clz(__rbit64(v18));
    v18 &= v18 - 1;
    v25 = v24 | (v17 << 6);
LABEL_33:
    v29 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v25);
    swift_retain(v29);
    if (!v29)
      goto LABEL_49;
    goto LABEL_34;
  }
  v30 = v17 + 1;
  if (!__OFADD__(v17, 1))
  {
    if (v30 >= v56)
      goto LABEL_49;
    v31 = *(_QWORD *)(v57 + 8 * v30);
    ++v17;
    if (!v31)
    {
      v17 = v23 + 2;
      if (v23 + 2 >= v56)
        goto LABEL_49;
      v31 = *(_QWORD *)(v57 + 8 * v17);
      if (!v31)
      {
        v17 = v23 + 3;
        if (v23 + 3 >= v56)
          goto LABEL_49;
        v31 = *(_QWORD *)(v57 + 8 * v17);
        if (!v31)
        {
          v17 = v23 + 4;
          if (v23 + 4 >= v56)
            goto LABEL_49;
          v31 = *(_QWORD *)(v57 + 8 * v17);
          if (!v31)
          {
            v17 = v23 + 5;
            if (v23 + 5 >= v56)
              goto LABEL_49;
            v31 = *(_QWORD *)(v57 + 8 * v17);
            if (!v31)
            {
              v32 = v23 + 6;
              while (v56 != v32)
              {
                v31 = *(_QWORD *)(v57 + 8 * v32++);
                if (v31)
                {
                  v17 = v32 - 1;
                  goto LABEL_32;
                }
              }
              goto LABEL_49;
            }
          }
        }
      }
    }
LABEL_32:
    v18 = (v31 - 1) & v31;
    v25 = __clz(__rbit64(v31)) + (v17 << 6);
    goto LABEL_33;
  }
  __break(1u);
}

void sub_1005F050C(uint64_t a1)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  __n128 v15;
  int64_t v16;
  unint64_t v17;
  unint64_t i;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  char v26;
  void (*v27)(char *, char *, uint64_t);
  char *v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char *v32;
  char *v33;
  unint64_t v34;
  char *v35;
  char *v36;
  char *v37;
  uint64_t v38;
  int64_t v39;

  v2 = (uint64_t *)&unk_1013E1A50;
  v3 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v3);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v36 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v35 = (char *)&v34 - v10;
  v11 = *(_QWORD *)(a1 + 64);
  v38 = a1 + 64;
  v12 = 1 << *(_BYTE *)(a1 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & v11;
  v39 = (unint64_t)(v12 + 63) >> 6;
  v15 = swift_bridgeObjectRetain(a1);
  v16 = 0;
  v37 = (char *)_swiftEmptyArrayStorage;
  if (v14)
    goto LABEL_7;
LABEL_8:
  while (2)
  {
    v19 = v16 + 1;
    if (!__OFADD__(v16, 1))
    {
      if (v19 < v39)
      {
        v20 = *(_QWORD *)(v38 + 8 * v19);
        ++v16;
        if (v20)
          goto LABEL_23;
        v16 = v19 + 1;
        if (v19 + 1 >= v39)
          goto LABEL_34;
        v20 = *(_QWORD *)(v38 + 8 * v16);
        if (v20)
          goto LABEL_23;
        v16 = v19 + 2;
        if (v19 + 2 >= v39)
          goto LABEL_34;
        v20 = *(_QWORD *)(v38 + 8 * v16);
        if (v20)
          goto LABEL_23;
        v16 = v19 + 3;
        if (v19 + 3 >= v39)
          goto LABEL_34;
        v20 = *(_QWORD *)(v38 + 8 * v16);
        if (v20)
        {
LABEL_23:
          v14 = (v20 - 1) & v20;
          for (i = __clz(__rbit64(v20)) + (v16 << 6); ; i = v17 | (v16 << 6))
          {
            v22 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * i);
            v23 = *(_QWORD *)(v22 + OBJC_IVAR____TtC8Freeform19CRLTransactableData_data);
            if ((v23 & 0x8000000000000000) == 0)
              break;
            v24 = v2;
            v25 = (*(uint64_t (**)(__n128))(*(_QWORD *)(v23 & 0x7FFFFFFFFFFFFFFFLL) + 408))(v15);
            if ((v26 & 1) != 0 && v25 == 9)
              break;
            (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v5, v22 + OBJC_IVAR____TtC8Freeform19CRLTransactableData_id, v6);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
              goto LABEL_6;
            v27 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
            v28 = v35;
            v27(v35, v5, v6);
            v27(v36, v28, v6);
            if ((swift_isUniquelyReferenced_nonNull_native(v37) & 1) == 0)
              v37 = (char *)sub_100D0EC28(0, *((_QWORD *)v37 + 2) + 1, 1, (unint64_t)v37);
            v30 = *((_QWORD *)v37 + 2);
            v29 = *((_QWORD *)v37 + 3);
            v31 = v30 + 1;
            if (v30 >= v29 >> 1)
            {
              v34 = v30 + 1;
              v33 = (char *)sub_100D0EC28(v29 > 1, v30 + 1, 1, (unint64_t)v37);
              v31 = v34;
              v37 = v33;
            }
            v32 = v37;
            *((_QWORD *)v37 + 2) = v31;
            v27(&v32[((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v30], v36, v6);
            v2 = v24;
            if (!v14)
              goto LABEL_8;
LABEL_7:
            v17 = __clz(__rbit64(v14));
            v14 &= v14 - 1;
          }
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
LABEL_6:
          sub_1004CB800((uint64_t)v5, v2);
          if (!v14)
            continue;
          goto LABEL_7;
        }
        v21 = v19 + 4;
        if (v21 < v39)
        {
          v20 = *(_QWORD *)(v38 + 8 * v21);
          if (v20)
          {
            v16 = v21;
            goto LABEL_23;
          }
          while (1)
          {
            v16 = v21 + 1;
            if (__OFADD__(v21, 1))
              goto LABEL_36;
            if (v16 >= v39)
              break;
            v20 = *(_QWORD *)(v38 + 8 * v16);
            ++v21;
            if (v20)
              goto LABEL_23;
          }
        }
      }
LABEL_34:
      swift_release(a1);
      return;
    }
    break;
  }
  __break(1u);
LABEL_36:
  __break(1u);
}

uint64_t sub_1005F08C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  _QWORD *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  int64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  _QWORD v38[2];
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  _QWORD *v53;

  v48 = sub_1004B804C(&qword_101405F50);
  v3 = __chkstk_darwin(v48);
  v47 = (uint64_t)v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v3);
  v46 = (char *)v38 - v6;
  __chkstk_darwin(v5);
  v45 = (char *)v38 - v7;
  v52 = type metadata accessor for UUID(0);
  v8 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v51 = (char *)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = _swiftEmptyArrayStorage;
  if (!v10)
    return (uint64_t)v11;
  v38[1] = v1;
  v53 = _swiftEmptyArrayStorage;
  sub_100600724(0, v10, 0);
  result = sub_10051FA44(a1);
  v14 = result;
  v15 = 0;
  v16 = a1 + 64;
  v39 = a1 + 80;
  v40 = v10;
  v17 = a1;
  v43 = v8;
  v44 = a1;
  v41 = v13;
  v42 = a1 + 64;
  v18 = v48;
  while ((v14 & 0x8000000000000000) == 0 && v14 < 1 << *(_BYTE *)(v17 + 32))
  {
    v21 = (unint64_t)v14 >> 6;
    if ((*(_QWORD *)(v16 + 8 * ((unint64_t)v14 >> 6)) & (1 << v14)) == 0)
      goto LABEL_25;
    if (*(_DWORD *)(v17 + 36) != (_DWORD)v13)
      goto LABEL_26;
    v49 = v15;
    v22 = *(int *)(v18 + 48);
    v23 = *(_QWORD *)(v17 + 48);
    v50 = *(_QWORD *)(v8 + 72);
    v24 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    v25 = (uint64_t)v45;
    v26 = v52;
    v24(v45, v23 + v50 * v14, v52);
    v27 = *(_QWORD *)(*(_QWORD *)(v17 + 56) + 8 * v14);
    *(_QWORD *)(v25 + v22) = v27;
    v28 = v46;
    v24(v46, v25, v26);
    *(_QWORD *)&v28[*(int *)(v18 + 48)] = v27;
    v29 = (uint64_t)v28;
    v30 = v47;
    sub_1005FC0A4(v29, v47);
    swift_retain_n(v27, 2);
    sub_1004CB800(v25, &qword_101405F50);
    v24(v51, *(_QWORD *)(v30 + *(int *)(v18 + 48)) + OBJC_IVAR____TtC8Freeform19CRLTransactableData_id, v26);
    sub_1004CB800(v30, &qword_101405F50);
    v11 = v53;
    if ((swift_isUniquelyReferenced_nonNull_native(v53) & 1) == 0)
    {
      sub_100600724(0, v11[2] + 1, 1);
      v11 = v53;
    }
    v32 = v11[2];
    v31 = v11[3];
    v8 = v43;
    if (v32 >= v31 >> 1)
    {
      sub_100600724(v31 > 1, v32 + 1, 1);
      v11 = v53;
    }
    v11[2] = v32 + 1;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v8 + 32))((unint64_t)v11+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ v32 * v50, v51, v52);
    v53 = v11;
    v17 = v44;
    v19 = 1 << *(_BYTE *)(v44 + 32);
    if (v14 >= v19)
      goto LABEL_27;
    v16 = v42;
    v33 = *(_QWORD *)(v42 + 8 * v21);
    if ((v33 & (1 << v14)) == 0)
      goto LABEL_28;
    LODWORD(v13) = v41;
    if (*(_DWORD *)(v44 + 36) != (_DWORD)v41)
      goto LABEL_29;
    v34 = v33 & (-2 << (v14 & 0x3F));
    if (v34)
    {
      v19 = __clz(__rbit64(v34)) | v14 & 0xFFFFFFFFFFFFFFC0;
      v20 = v40;
    }
    else
    {
      v35 = v21 + 1;
      v36 = (unint64_t)(v19 + 63) >> 6;
      v20 = v40;
      if (v21 + 1 < v36)
      {
        v37 = *(_QWORD *)(v42 + 8 * v35);
        if (v37)
        {
LABEL_22:
          v19 = __clz(__rbit64(v37)) + (v35 << 6);
        }
        else
        {
          while (v36 - 2 != v21)
          {
            v37 = *(_QWORD *)(v39 + 8 * v21++);
            if (v37)
            {
              v35 = v21 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    v15 = v49 + 1;
    v14 = v19;
    if (v49 + 1 == v20)
      return (uint64_t)v11;
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1005F0C80(uint64_t *a1, uint64_t *a2)
{
  return sub_1005F9944(*a1, *a2);
}

uint64_t sub_1005F0C8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8Freeform19CRLTransactableData_id;
  v2 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform19CRLTransactableData_data) & 0x7FFFFFFFFFFFFFFFLL);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1005F0CF0()
{
  return type metadata accessor for CRLTransactableData(0);
}

uint64_t type metadata accessor for CRLTransactableData(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1013E70F8, (uint64_t)&nominal type descriptor for CRLTransactableData);
}

uint64_t sub_1005F0D0C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = "\b";
    result = swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1005F0D80(uint64_t *a1, uint64_t *a2)
{
  return sub_1005F9784(*a1, *a2);
}

uint64_t sub_1005F0D8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 + *(int *)(sub_1004B804C(&qword_101405F50) + 48))
     + OBJC_IVAR____TtC8Freeform19CRLTransactableData_id;
  v4 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, v3, v4);
}

void sub_1005F0DFC(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  unsigned __int8 v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t inited;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[16];
  uint64_t v43;
  _BYTE v44[72];
  _BYTE v45[32];

  v6 = sub_1004B804C(&qword_1013E7558);
  __chkstk_darwin(v6);
  v8 = &v42[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for UUID(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v42[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform19CRLTransactableData_data);
  if ((v13 & 0x8000000000000000) == 0)
    goto LABEL_12;
  v14 = v13 & 0x7FFFFFFFFFFFFFFFLL;
  v15 = (void *)objc_opt_self(NSUserDefaults);
  v16 = objc_msgSend(v15, "standardUserDefaults", swift_retain(v14).n128_f64[0]);
  v17 = objc_msgSend(v16, "BOOLForKey:", CFSTR("CRLAllowInteractionWithUnsupportedBoardAndBoardItemsUserDefault"));

  if (*(_UNKNOWN ****)v14 == &off_101400278 && (v17 & 1) == 0)
  {
    v18 = type metadata accessor for CRLBoardItemDeltaChange(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a3, 1, 1, v18);
    swift_release(v14);
    return;
  }
  (*(void (**)(void))(*(_QWORD *)v14 + 256))();
  if (!*(_QWORD *)(a2 + 16)
    || (v19 = sub_100842EFC((uint64_t)v12), (v20 & 1) == 0)
    || (v21 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 16 * v19),
        v22 = type metadata accessor for CRLBoardItemBase(0),
        (v23 = swift_dynamicCastClass(v21, v22)) == 0))
  {
    if (qword_1013DD888 != -1)
      swift_once(&qword_1013DD888, sub_100A05DE4);
    swift_beginAccess(&static OS_os_log.realTimeSync, v45, 0, 0);
    v28 = (void *)static OS_os_log.realTimeSync;
    v29 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v29, v44);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v31 = v28;
    v32 = UUID.uuidString.getter(v31);
    v34 = v33;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v35 = sub_1004CFC2C();
    *(_QWORD *)(inited + 64) = v35;
    *(_QWORD *)(inited + 32) = v32;
    *(_QWORD *)(inited + 40) = v34;
    v36 = static os_log_type_t.error.getter(v35);
    sub_100A06EBC((uint64_t)v31, &_mh_execute_header, v36, "Could not calculate delta for board item %@ without snapshot.", 61, 2, inited);
    swift_setDeallocating(inited);
    v37 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v37);
    swift_release(v14);

    (*(void (**)(_BYTE *, uint64_t, __n128))(v10 + 8))(v12, v9, v38);
    goto LABEL_12;
  }
  v24 = *(void **)(*(_QWORD *)(v23 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store)
                 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_crdtContext);
  v25 = *(_QWORD *)(v23 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  swift_unknownObjectRetain(v21);
  v26 = v24;
  swift_retain(v25);
  v43 = v21;
  sub_1005DC8CC(v27, (uint64_t)v26, (uint64_t)v8);
  (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v12, v9);
  swift_unknownObjectRelease(v43);

  swift_release(v14);
  swift_release(v25);
  v40 = type metadata accessor for CRLBoardItemDeltaChange(0);
  v41 = *(_QWORD *)(v40 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v41 + 48))(v8, 1, v40) == 1)
  {
    sub_1004CB800((uint64_t)v8, &qword_1013E7558);
LABEL_12:
    v39 = type metadata accessor for CRLBoardItemDeltaChange(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(a3, 1, 1, v39);
    return;
  }
  sub_1004B84E0((uint64_t)v8, a3, type metadata accessor for CRLBoardItemDeltaChange);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v41 + 56))(a3, 0, 1, v40);
}

Swift::Int sub_1005F1370()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  v3 = *((_QWORD *)v0 + 1);
  v2 = *((_QWORD *)v0 + 2);
  Hasher.init(_seed:)(v5, 0);
  Hasher._combine(_:)(v1 + 5);
  if (v2)
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v2);
    String.hash(into:)(v5, v3, v2);
    swift_bridgeObjectRelease(v2);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  return Hasher._finalize()();
}

void sub_1005F13FC(uint64_t a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;

  v2 = v1;
  v5 = *((_QWORD *)v2 + 1);
  v4 = *((_QWORD *)v2 + 2);
  Hasher._combine(_:)(*v2 + 5);
  if (v4)
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v4);
    String.hash(into:)(a1, v5, v4);
    swift_bridgeObjectRelease(v4);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
}

Swift::Int sub_1005F1474(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[9];

  v2 = *v1;
  v4 = *((_QWORD *)v1 + 1);
  v3 = *((_QWORD *)v1 + 2);
  Hasher.init(_seed:)(v6, a1);
  Hasher._combine(_:)(v2 + 5);
  if (v3)
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v3);
    String.hash(into:)(v6, v4, v3);
    swift_bridgeObjectRelease(v3);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  return Hasher._finalize()();
}

uint64_t sub_1005F14FC(uint64_t a1, uint64_t a2)
{
  return sub_1005F9714(*(_BYTE *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)a2, *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16));
}

uint64_t (*sub_1005F1514(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_snapshots, a1, 33, 0);
  return j__swift_endAccess;
}

BOOL sub_1005F155C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[24];
  _BYTE v8[24];
  _BYTE v9[24];

  if (*(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedItemDatas) + 16))
    return 1;
  if (*(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_modifiedItemDatas) + 16))
    return 1;
  if (*(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_addedItemDatas) + 16))
    return 1;
  v1 = v0 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_boardAuxiliaryChanges;
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_boardAuxiliaryChanges, v9, 0, 0);
  if (*(_QWORD *)(*(_QWORD *)v1 + 16))
    return 1;
  v2 = v0 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_coalescableBoardAuxiliaryChanges;
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_coalescableBoardAuxiliaryChanges, v8, 0, 0);
  if (*(_QWORD *)(*(_QWORD *)v2 + 16))
    return 1;
  v3 = v0 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedNewlyCreatedItemIds;
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedNewlyCreatedItemIds, v7, 0, 0);
  if (*(_QWORD *)(*(_QWORD *)v3 + 16))
    return 1;
  v5 = v0 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_peerServerSyncedItemDatas;
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_peerServerSyncedItemDatas, &v6, 0, 0);
  return *(_QWORD *)(*(_QWORD *)v5 + 16) != 0;
}

uint64_t sub_1005F1674(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  _QWORD v36[3];

  v4 = v3;
  v35 = a3;
  v34 = a2;
  v32 = a1;
  v33 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v31 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_lockCounter) = 0;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_peerServerSyncedItemDatas) = _swiftEmptyDictionarySingleton;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_peerServerSyncedItemDatasToProcessAfterUnlock) = _swiftEmptyDictionarySingleton;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_processingQueue) = _swiftEmptyArrayStorage;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_addedItemDatas) = _swiftEmptyDictionarySingleton;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_modifiedItemDatas) = _swiftEmptyDictionarySingleton;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_undoableModifiedItemDatas) = _swiftEmptyDictionarySingleton;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_snapshots) = 0;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedItemDatas) = _swiftEmptyDictionarySingleton;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedNewlyCreatedItemIds) = &_swiftEmptySetSingleton;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedFreehandItemIDsSubset) = &_swiftEmptySetSingleton;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedAsOrphanItemIDs) = &_swiftEmptySetSingleton;
  v13 = OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_uncommittedChangeAvailablePublisher;
  v14 = sub_1004B804C(&qword_1013E7560);
  swift_allocObject(v14, *(unsigned int *)(v14 + 48), *(unsigned __int16 *)(v14 + 52));
  *(_QWORD *)(v3 + v13) = PassthroughSubject.init()();
  *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_realTimePeerCreatedItemDatas) = _swiftEmptyDictionarySingleton;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_realTimePeerDeletedItemIds) = &_swiftEmptySetSingleton;
  sub_100503E34();
  static DispatchQoS.unspecified.getter(v15);
  v36[0] = _swiftEmptyArrayStorage;
  v16 = sub_1004B7878((unint64_t *)&qword_1013E3A70, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v17 = sub_1004B804C(&qword_1013FF6B0);
  v18 = sub_1005FC154((unint64_t *)&qword_1013E3A78, &qword_1013FF6B0);
  v19 = v17;
  v20 = v32;
  dispatch thunk of SetAlgebra.init<A>(_:)(v36, v19, v18, v7, v16);
  (*(void (**)(char *, _QWORD, uint64_t))(v31 + 104))(v6, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v33);
  v21 = v6;
  v22 = v34;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_accessQueue) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD00000000000002BLL, 0x8000000100FB9EE0, v12, v9, v21, 0);
  sub_1004B8460(v20, v3 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_boardIdentifier, type metadata accessor for CRLBoardIdentifier);
  v23 = v3 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_rootContainerUUID;
  v24 = type metadata accessor for UUID(0);
  v25 = *(_QWORD *)(v24 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v23, v22, v24);
  v26 = 0;
  if ((v35 & 1) != 0)
    v26 = sub_1008D513C((uint64_t)_swiftEmptyArrayStorage);
  v27 = (unint64_t *)(v4 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_snapshots);
  swift_beginAccess(v4 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_snapshots, v36, 1, 0);
  v28 = *v27;
  *v27 = v26;
  swift_bridgeObjectRelease(v28);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_boardAuxiliaryChanges) = _swiftEmptyArrayStorage;
  v29 = sub_1008D52D0((uint64_t)_swiftEmptyArrayStorage);
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v22, v24);
  sub_1004B84A4(v20, type metadata accessor for CRLBoardIdentifier);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_coalescableBoardAuxiliaryChanges) = v29;
  return v4;
}

void sub_1005F1A18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t (*v13)(_QWORD);
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  _BYTE v17[24];
  _BYTE v18[32];
  _BYTE v19[24];

  v4 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_addedItemDatas);
  *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_addedItemDatas) = _swiftEmptyDictionarySingleton;
  swift_bridgeObjectRelease(v4);
  v5 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_undoableModifiedItemDatas);
  *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_undoableModifiedItemDatas) = _swiftEmptyDictionarySingleton;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedItemDatas);
  *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedItemDatas) = _swiftEmptyDictionarySingleton;
  swift_bridgeObjectRelease(v6);
  v7 = (uint64_t *)(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedNewlyCreatedItemIds);
  swift_beginAccess(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedNewlyCreatedItemIds, v19, 1, 0);
  v8 = *v7;
  *v7 = (uint64_t)&_swiftEmptySetSingleton;
  swift_bridgeObjectRelease(v8);
  v9 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedFreehandItemIDsSubset);
  *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedFreehandItemIDsSubset) = &_swiftEmptySetSingleton;
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedAsOrphanItemIDs);
  *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedAsOrphanItemIDs) = &_swiftEmptySetSingleton;
  swift_bridgeObjectRelease(v10);
  v11 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_modifiedItemDatas);
  *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_modifiedItemDatas) = _swiftEmptyDictionarySingleton;
  swift_bridgeObjectRelease(v11);
  v13 = sub_1005F1514((uint64_t)v18);
  if (*v12)
  {
    v14 = v12;
    swift_bridgeObjectRelease(*v12);
    *v14 = _swiftEmptyDictionarySingleton;
  }
  ((void (*)(_BYTE *, _QWORD))v13)(v18, 0);
  v15 = (uint64_t *)(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_peerServerSyncedItemDatas);
  swift_beginAccess(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_peerServerSyncedItemDatas, v18, 1, 0);
  v16 = *v15;
  *v15 = (uint64_t)_swiftEmptyDictionarySingleton;
  swift_bridgeObjectRelease(v16);
  if (a2)
  {
    swift_beginAccess(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_realTimePeerCreatedItemDatas, v17, 33, 0);
    sub_1005F1B90(a2);
    swift_endAccess(v17);
  }
}

void sub_1005F1B90(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  __n128 v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  char v26;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v28;
  unint64_t v29;
  void (*v30)(unint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;

  v2 = v1;
  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v34 - v9;
  v11 = *(_QWORD *)(a1 + 56);
  v36 = a1 + 56;
  v37 = a1;
  v12 = -1 << *(_BYTE *)(a1 + 32);
  if (-v12 < 64)
    v13 = ~(-1 << -(char)v12);
  else
    v13 = -1;
  v14 = v13 & v11;
  v34 = -1 << *(_BYTE *)(a1 + 32);
  v35 = (unint64_t)(63 - v12) >> 6;
  v15 = swift_bridgeObjectRetain(a1);
  v38 = 0;
  while (v14)
  {
    v16 = __clz(__rbit64(v14));
    v14 &= v14 - 1;
    v17 = v16 | (v38 << 6);
LABEL_22:
    v22 = *(_QWORD *)(v5 + 72);
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v5 + 16))(v10, *(_QWORD *)(v37 + 48) + v22 * v17, v4, v15);
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v10, v4);
    v23 = *v2;
    swift_bridgeObjectRetain(*v2);
    v24 = sub_100842EFC((uint64_t)v8);
    v26 = v25;
    swift_bridgeObjectRelease(v23);
    if ((v26 & 1) != 0)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
      v28 = *v2;
      v39 = *v2;
      *v2 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_10082CCAC();
        v28 = v39;
      }
      v29 = *(_QWORD *)(v28 + 48) + v24 * v22;
      v30 = *(void (**)(unint64_t, uint64_t))(v5 + 8);
      v30(v29, v4);
      v31 = v39;
      v32 = *(_QWORD *)(*(_QWORD *)(v39 + 56) + 8 * v24);
      sub_10051A11C(v24, v39);
      v33 = *v2;
      *v2 = v31;
      swift_release(v32);
      swift_bridgeObjectRelease(v33);
      v30((unint64_t)v8, v4);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    }
  }
  v18 = v38 + 1;
  if (__OFADD__(v38, 1))
  {
    __break(1u);
    goto LABEL_28;
  }
  if (v18 >= v35)
    goto LABEL_26;
  v19 = *(_QWORD *)(v36 + 8 * v18);
  v20 = v38 + 1;
  if (v19)
    goto LABEL_21;
  v20 = v38 + 2;
  if (v38 + 2 >= v35)
    goto LABEL_26;
  v19 = *(_QWORD *)(v36 + 8 * v20);
  if (v19)
    goto LABEL_21;
  v20 = v38 + 3;
  if (v38 + 3 >= v35)
    goto LABEL_26;
  v19 = *(_QWORD *)(v36 + 8 * v20);
  if (v19)
  {
LABEL_21:
    v14 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v20 << 6);
    v38 = v20;
    goto LABEL_22;
  }
  v21 = v38 + 4;
  if (v38 + 4 >= v35)
  {
LABEL_26:
    sub_1004D284C(v37);
    return;
  }
  v19 = *(_QWORD *)(v36 + 8 * v21);
  if (v19)
  {
    v20 = v38 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    v20 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v20 >= v35)
      goto LABEL_26;
    v19 = *(_QWORD *)(v36 + 8 * v20);
    ++v21;
    if (v19)
      goto LABEL_21;
  }
LABEL_28:
  __break(1u);
}

void sub_1005F1E58(uint64_t a1)
{
  uint64_t v1;
  BOOL v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t inited;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[72];
  _BYTE v15[24];

  v1 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_lockCounter);
  v2 = __OFADD__(v1, 1);
  v3 = v1 + 1;
  if (v2)
  {
    __break(1u);
    goto LABEL_5;
  }
  *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_lockCounter) = v3;
  if (qword_1013DD888 != -1)
LABEL_5:
    swift_once(&qword_1013DD888, sub_100A05DE4);
  swift_beginAccess(&static OS_os_log.realTimeSync, v15, 0, 0);
  v4 = (void *)static OS_os_log.realTimeSync;
  v5 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v5, v14);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v7 = v4;
  v8 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v10 = v9;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v8;
  *(_QWORD *)(inited + 40) = v10;
  v12 = static os_log_type_t.default.getter(v11);
  sub_100A06EBC((uint64_t)v7, &_mh_execute_header, v12, "CRLBoardChangeSet lock() lockCounter: %{public}@", 48, 2, inited);
  swift_setDeallocating(inited);
  v13 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v13);

}

void sub_1005F1FB8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t inited;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t i;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54[32];
  char v55[24];
  char v56[24];
  uint64_t v57[3];
  char v58[72];
  char v59[32];

  v2 = OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_lockCounter;
  v3 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_lockCounter);
  if (v3 <= 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"unlock()", 8, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardChangeSet.swift", 89, 2, 274, "Cannot unlock if lockCounter is already 0, we're already unlocked", 65, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"unlock()", 8, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardChangeSet.swift", 89, 2u, 274, (uint64_t)"Cannot unlock if lockCounter is already 0, we're already unlocked", 65, 2u);
    v3 = *(_QWORD *)(a1 + v2);
  }
  v4 = __OFSUB__(v3, 1);
  v5 = v3 - 1;
  if (v4)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a1 + v2) = v5;
    if (qword_1013DD888 == -1)
      goto LABEL_5;
  }
  swift_once(&qword_1013DD888, sub_100A05DE4);
LABEL_5:
  swift_beginAccess(&static OS_os_log.realTimeSync, v59, 0, 0);
  v6 = (void *)static OS_os_log.realTimeSync;
  v7 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v7, v58);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v57[0] = *(_QWORD *)(a1 + v2);
  v9 = v6;
  v10 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v12 = v11;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v10;
  *(_QWORD *)(inited + 40) = v12;
  v14 = static os_log_type_t.default.getter(v13);
  sub_100A06EBC((uint64_t)v9, &_mh_execute_header, v14, "CRLBoardChangeSet unlock() lockCounter: %{public}@", 50, 2, inited);
  swift_setDeallocating(inited);
  v15 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v15);

  if (*(_QWORD *)(a1 + v2))
    return;
  v16 = (uint64_t *)(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_processingQueue);
  swift_beginAccess(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_processingQueue, v57, 1, 0);
  v17 = *v16;
  if ((unint64_t)*v16 >> 62)
  {
    if (v17 < 0)
      v28 = *v16;
    else
      v28 = v17 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v16);
    v29 = _CocoaArrayWrapper.endIndex.getter(v28);
    swift_bridgeObjectRelease(v17);
    if (v29 >= 1)
    {
LABEL_8:
      v18 = OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_addedItemDatas;
      v19 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_addedItemDatas);
      v51 = OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedItemDatas;
      v20 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedItemDatas);
      v21 = (uint64_t *)(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedNewlyCreatedItemIds);
      swift_beginAccess(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedNewlyCreatedItemIds, v54, 0, 0);
      v22 = *v21;
      v49 = v21;
      v50 = OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_modifiedItemDatas;
      v23 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_modifiedItemDatas);
      v24 = *v16;
      v52 = v23;
      v53 = *v21;
      if ((unint64_t)*v16 >> 62)
      {
        if (v24 < 0)
          v31 = *v16;
        else
          v31 = v24 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v19);
        swift_bridgeObjectRetain(v20);
        swift_bridgeObjectRetain(v22);
        swift_bridgeObjectRetain(v23);
        swift_bridgeObjectRetain(v24);
        v25 = _CocoaArrayWrapper.endIndex.getter(v31);
        if (!v25)
          goto LABEL_27;
      }
      else
      {
        v25 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(v19);
        swift_bridgeObjectRetain(v20);
        swift_bridgeObjectRetain(v22);
        swift_bridgeObjectRetain(v23);
        swift_bridgeObjectRetain(v24);
        if (!v25)
          goto LABEL_27;
      }
      if (v25 < 1)
      {
        __break(1u);
        return;
      }
      for (i = 0; i != v25; ++i)
      {
        if ((v24 & 0xC000000000000001) != 0)
        {
          v27 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v24);
        }
        else
        {
          v27 = *(_QWORD *)(v24 + 8 * i + 32);
          swift_retain(v27);
        }
        sub_1005F2744(v27);
        swift_release(v27);
      }
LABEL_27:
      swift_bridgeObjectRelease(v24);
      v32 = *(_QWORD *)(a1 + v18);
      swift_bridgeObjectRetain(v32);
      v33 = sub_100C9ECF8(v19, v32);
      swift_bridgeObjectRelease(v32);
      swift_bridgeObjectRelease(v19);
      if ((v33 & 1) != 0)
      {
        v34 = *(_QWORD *)(a1 + v51);
        swift_bridgeObjectRetain(v34);
        v35 = sub_100C9ECF8(v20, v34);
        swift_bridgeObjectRelease(v34);
        swift_bridgeObjectRelease(v20);
        if ((v35 & 1) != 0)
        {
          v36 = *(_QWORD *)(a1 + v50);
          swift_bridgeObjectRetain(v36);
          v37 = sub_100C9ECF8(v52, v36);
          swift_bridgeObjectRelease(v36);
          swift_bridgeObjectRelease(v52);
          if ((v37 & 1) != 0)
          {
            v38 = *v49;
            swift_bridgeObjectRetain(*v49);
            v39 = sub_1008D9BD4(v53, v38);
            swift_bridgeObjectRelease(v38);
            swift_bridgeObjectRelease(v53);
            v30 = v39 ^ 1;
            goto LABEL_35;
          }
        }
        else
        {
          swift_bridgeObjectRelease(v52);
        }
        v40 = v53;
      }
      else
      {
        swift_bridgeObjectRelease(v20);
        swift_bridgeObjectRelease(v52);
        v40 = v53;
      }
      swift_bridgeObjectRelease(v40);
      v30 = 1;
      goto LABEL_35;
    }
  }
  else if (*(uint64_t *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10) >= 1)
  {
    goto LABEL_8;
  }
  v30 = 0;
LABEL_35:
  v41 = *v16;
  *v16 = (uint64_t)_swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v41);
  v42 = (uint64_t *)(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_peerServerSyncedItemDatasToProcessAfterUnlock);
  swift_beginAccess(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_peerServerSyncedItemDatasToProcessAfterUnlock, v56, 1, 0);
  v43 = *v42;
  if (*(_QWORD *)(*v42 + 16))
  {
    v44 = (uint64_t *)(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_peerServerSyncedItemDatas);
    swift_beginAccess(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_peerServerSyncedItemDatas, v55, 1, 0);
    v45 = *v44;
    swift_bridgeObjectRetain(*v44);
    swift_bridgeObjectRetain(v43);
    v47 = sub_1005F82F8(v46, v45, (uint64_t)sub_1005F865C, (void (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t *))sub_1005F9048);
    v48 = *v44;
    *v44 = v47;
    swift_bridgeObjectRelease(v48);
    v43 = *v42;
  }
  *v42 = (uint64_t)&_swiftEmptyDictionarySingleton;
  swift_bridgeObjectRelease(v43);
  if ((v30 & 1) != 0)
    sub_1005F44D4();
}

void sub_1005F2548(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  id v9;
  __n128 v10;
  uint64_t v11;
  _BYTE v12[24];

  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_active) == 1)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"updateWithChange(from:)", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardChangeSet.swift", 89, 2, 315, "Pending changes should only come from closed transactions.", 58, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateWithChange(from:)", 23, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardChangeSet.swift", 89, 2u, 315, (uint64_t)"Pending changes should only come from closed transactions.", 58, 2u);
  }
  if (*(uint64_t *)(a2 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_lockCounter) <= 0)
  {
    if (qword_1013DD888 != -1)
      swift_once(&qword_1013DD888, sub_100A05DE4);
    swift_beginAccess(&static OS_os_log.realTimeSync, v12, 0, 0);
    v9 = (id)static OS_os_log.realTimeSync;
    v11 = static os_log_type_t.default.getter(v10);
    sub_100A06EBC((uint64_t)v9, &_mh_execute_header, v11, "CRLBoardChangeSet updateWithChange()", 36, 2, (uint64_t)_swiftEmptyArrayStorage);

    if ((sub_1005F2744(a1) & 1) != 0)
      sub_1005F44D4();
  }
  else
  {
    v4 = (_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_processingQueue);
    swift_beginAccess(v4, v12, 33, 0);
    swift_retain(a1);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v5);
    v7 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v6 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v7 >= v6 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v6 > 1, v7 + 1, 1);
    v8 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v7, a1);
    specialized Array._endMutation()(v8);
    swift_endAccess(v12);
  }
}

uint64_t sub_1005F2744(uint64_t a1)
{
  unint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  id v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  Swift::Int v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t ObjectType;
  void (*v61)(uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t (*v80)(_QWORD);
  uint64_t v81;
  uint64_t v82;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v84;
  uint64_t v85;
  _BOOL8 v86;
  uint64_t v87;
  char v88;
  unint64_t v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  BOOL v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  __n128 v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  __n128 v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t *v145;
  uint64_t v146;
  _QWORD *v147;
  uint64_t v148;
  uint64_t *v149;
  uint64_t v150;
  unint64_t v151;
  uint64_t v152;
  char v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t *v157;
  uint64_t v158;
  uint64_t v159;
  void *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t *v192;
  uint64_t *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  void *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  __n128 v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t *v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  __n128 v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  char v228;
  uint64_t v229;
  char v230;
  uint64_t v231;
  int v232;
  uint64_t v233;
  char v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  void *v238;
  uint64_t v239;
  uint64_t inited;
  uint64_t v241;
  __n128 v242;
  uint64_t v243;
  unint64_t v244;
  uint64_t v245;
  uint64_t v246;
  unint64_t v247;
  uint64_t v248;
  __n128 v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  __n128 v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  __n128 v258;
  uint64_t v259;
  id v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  void *v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  void *v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  void *v280;
  uint64_t v281;
  uint64_t v282;
  void *v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  _QWORD *v287;
  uint64_t v288;
  uint64_t *v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t *v292;
  uint64_t v293;
  unint64_t v294;
  uint64_t v295;
  uint64_t v296;
  char v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t *v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t result;
  CKRecordID v318;
  Swift::String v319;
  _QWORD *v320;
  _QWORD *v321;
  uint64_t v322;
  uint64_t v323;
  _QWORD *v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  unint64_t v329;
  uint64_t v330;
  char *v331;
  uint64_t v332;
  uint64_t *v333;
  _QWORD *v334;
  uint64_t *v335;
  uint64_t v336;
  uint64_t v337;
  char *v338;
  uint64_t v339;
  __int128 v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  _QWORD *v346;
  uint64_t v347;
  uint64_t v348;
  _BYTE v349[24];
  _BYTE v350[24];
  uint64_t v351;
  uint64_t v352;
  _QWORD v353[6];
  _BYTE v354[24];
  _QWORD v355[3];
  _QWORD v356[4];
  char v357[24];
  char v358[24];
  char v359[24];
  char v360[24];
  _QWORD v361[6];

  v4 = type metadata accessor for CRLBoardCRDTData(0);
  v5 = __chkstk_darwin(v4);
  v336 = (uint64_t)&v320 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v335 = (uint64_t *)((char *)&v320 - v7);
  v339 = type metadata accessor for UUID(0);
  v8 = *(_QWORD *)(v339 - 8);
  v9 = __chkstk_darwin(v339);
  v338 = (char *)&v320 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v346 = (_QWORD **)((char *)&v320 - v11);
  v12 = type metadata accessor for DispatchPredicate(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (_QWORD **)((char *)&v320 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_accessQueue);
  *v15 = v16;
  (*(void (**)(_QWORD *, _QWORD, unint64_t))(v13 + 104))(v15, enum case for DispatchPredicate.onQueue(_:), v12);
  v17 = v16;
  LOBYTE(v16) = _dispatchPreconditionTest(_:)(v15);
  (*(void (**)(_QWORD *, unint64_t))(v13 + 8))(v15, v12);
  if ((v16 & 1) == 0)
  {
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  v345 = v8;
  v329 = v1;
  v18 = (_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_deletedObjects);
  swift_beginAccess(a1 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_deletedObjects, v360, 0, 0);
  v324 = v18;
  v19 = *v18;
  swift_bridgeObjectRetain(v19);
  v330 = sub_100DB0284(v20);
  swift_bridgeObjectRelease(v19);
  v21 = (uint64_t *)(a1 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_deletedNewlyCreatedObjects);
  swift_beginAccess(a1 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_deletedNewlyCreatedObjects, v359, 0, 0);
  v22 = *v21;
  swift_bridgeObjectRetain(v22);
  v328 = sub_100DB0284(v23);
  swift_bridgeObjectRelease(v22);
  v24 = (uint64_t *)(a1 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_deletedOrphans);
  swift_beginAccess(a1 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_deletedOrphans, v358, 0, 0);
  v25 = *v24;
  swift_bridgeObjectRetain(v25);
  v326 = sub_100AF7994(v26);
  swift_bridgeObjectRelease(v25);
  v27 = (_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_createdObjects);
  swift_beginAccess(a1 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_createdObjects, v357, 0, 0);
  v28 = *v27;
  swift_bridgeObjectRetain(*v27);
  v325 = sub_100DB0284(v29);
  swift_bridgeObjectRelease(v28);
  v30 = *v27;
  swift_retain(a1);
  swift_bridgeObjectRetain(v30);
  v32 = sub_1005FC740(v31, a1);
  v327 = a1;
  v33 = a1;
  v34 = v32;
  swift_release(v33);
  v323 = 0;
  v321 = v27;
  if ((v34 & 0xC000000000000001) != 0)
  {
    v36 = __CocoaSet.makeIterator()(v34);
    v37 = type metadata accessor for CRLTransactableHashableWrapper();
    v38 = sub_1004B7878((unint64_t *)&qword_101405D90, (uint64_t (*)(uint64_t))type metadata accessor for CRLTransactableHashableWrapper, (uint64_t)&unk_100F393F8);
    v35 = Set.Iterator.init(_cocoa:)(v361, v36, v37, v38);
    v34 = v361[0];
    v334 = (_QWORD *)v361[1];
    v39 = v361[2];
    v40 = v361[3];
    v12 = v361[4];
  }
  else
  {
    v40 = 0;
    v41 = -1 << *(_BYTE *)(v34 + 32);
    v42 = *(_QWORD *)(v34 + 56);
    v334 = (_QWORD *)(v34 + 56);
    v39 = ~v41;
    v43 = -v41;
    if (v43 < 64)
      v44 = ~(-1 << v43);
    else
      v44 = -1;
    v12 = v44 & v42;
  }
  v45 = v339;
  v332 = v34 & 0x7FFFFFFFFFFFFFFFLL;
  v322 = v39;
  v2 = &_swiftEmptyDictionarySingleton;
  v333 = (uint64_t *)((unint64_t)(v39 + 64) >> 6);
  v331 = (char *)&type metadata for Swift.AnyObject + 8;
  v337 = v34;
  while (v34 < 0)
  {
    v51 = __CocoaSet.Iterator.next()(v35);
    if (!v51)
      goto LABEL_45;
    v52 = v51;
    v355[0] = v51;
    v53 = type metadata accessor for CRLTransactableHashableWrapper();
    swift_unknownObjectRetain(v52);
    swift_dynamicCast(v356, v355, v331, v53, 7);
    v54 = v356[0];
    swift_unknownObjectRelease(v52);
    v50 = v40;
    v48 = v12;
    if (!v54)
      goto LABEL_45;
LABEL_32:
    v341 = v48;
    v342 = v50;
    v59 = *(_QWORD *)(v54 + 16);
    v58 = *(_QWORD *)(v54 + 24);
    v343 = v54;
    ObjectType = swift_getObjectType(v59);
    v61 = *(void (**)(uint64_t, uint64_t))(v58 + 32);
    v61(ObjectType, v58);
    v62 = type metadata accessor for CRLTransactableData(0);
    v63 = swift_allocObject(v62, *(unsigned int *)(v62 + 48), *(unsigned __int16 *)(v62 + 52));
    swift_unknownObjectRetain(v59);
    v64 = v338;
    v61(ObjectType, v58);
    v344 = v63;
    (*(void (**)(uint64_t, char *, uint64_t))(v345 + 32))(v63 + OBJC_IVAR____TtC8Freeform19CRLTransactableData_id, v64, v45);
    v65 = type metadata accessor for CRLBoard(0);
    v66 = swift_dynamicCastClass(v59, v65);
    if (v66)
    {
      v67 = *(_QWORD *)(v66 + OBJC_IVAR____TtC8Freeform8CRLBoard_data);
      v68 = v67 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
      swift_beginAccess(v67 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, &v347, 0, 0);
      v69 = v335;
      sub_1004B8460(v68, (uint64_t)v335, type metadata accessor for CRLBoardCRDTData);
      v340 = *(_OWORD *)(v67 + 24);
      v70 = *(_QWORD *)(v67 + 40);
      v71 = v336;
      sub_1004B8460((uint64_t)v69, v336, type metadata accessor for CRLBoardCRDTData);
      v72 = v2;
      v74 = *(_QWORD *)(v67 + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
      v73 = *(_QWORD *)(v67 + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName + 8);
      v75 = type metadata accessor for CRLBoardData(0);
      v76 = swift_allocObject(v75, *(unsigned int *)(v75 + 48), *(unsigned __int16 *)(v75 + 52));
      *(_QWORD *)(v76 + 16) = 7;
      *(_OWORD *)(v76 + 24) = v340;
      *(_QWORD *)(v76 + 40) = v70;
      sub_1004B84E0(v71, v76 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, type metadata accessor for CRLBoardCRDTData);
      v77 = (_QWORD *)(v76 + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
      *v77 = v74;
      v77[1] = v73;
      v2 = v72;
      swift_retain(v67);
      swift_bridgeObjectRetain(v73);
      sub_1004B84A4((uint64_t)v69, type metadata accessor for CRLBoardCRDTData);
      swift_release(v67);
      swift_unknownObjectRelease(v59);
    }
    else
    {
      v78 = type metadata accessor for CRLBoardItem(0);
      v79 = (_QWORD *)swift_dynamicCastClass(v59, v78);
      if (!v79)
        goto LABEL_73;
      v80 = *(uint64_t (**)(_QWORD))((swift_isaMask & *v79) + 0x1C0);
      swift_unknownObjectRetain(v59);
      v81 = v80(0);
      swift_unknownObjectRelease_n(v59, 2);
      v76 = v81 | 0x8000000000000000;
    }
    v34 = v337;
    v82 = v344;
    *(_QWORD *)(v344 + OBJC_IVAR____TtC8Freeform19CRLTransactableData_data) = v76;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v2);
    v356[0] = v2;
    v12 = sub_100842EFC((uint64_t)v346);
    v85 = v2[2];
    v86 = (v84 & 1) == 0;
    v87 = v85 + v86;
    if (__OFADD__(v85, v86))
    {
      __break(1u);
LABEL_68:
      __break(1u);
LABEL_69:
      __break(1u);
      goto LABEL_70;
    }
    v88 = v84;
    if (v2[3] >= v87)
    {
      v45 = v339;
      v91 = v345;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_10082CCAC();
    }
    else
    {
      sub_100815638(v87, isUniquelyReferenced_nonNull_native);
      v89 = sub_100842EFC((uint64_t)v346);
      v45 = v339;
      v91 = v345;
      if ((v88 & 1) != (v90 & 1))
      {
        KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v339);
        __break(1u);
LABEL_73:
        sub_100757E04(&_mh_execute_header, (uint64_t)"init(_:)", 8, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardChangeSet.swift", 89, 2, 42, "Invalid/unknown transactable type", 33, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Invalid/unknown transactable type");
        sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(_:)", 8, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardChangeSet.swift", 89, 2u, 42, (uint64_t)"Invalid/unknown transactable type", 33, 2u);
        SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v318, v319);
        result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
        __break(1u);
        return result;
      }
      v12 = v89;
    }
    v92 = v343;
    v2 = (_QWORD *)v356[0];
    if ((v88 & 1) != 0)
    {
      v46 = *(_QWORD *)(v356[0] + 56);
      swift_release(*(_QWORD *)(v46 + 8 * v12));
      *(_QWORD *)(v46 + 8 * v12) = v82;
    }
    else
    {
      *(_QWORD *)(v356[0] + 8 * (v12 >> 6) + 64) |= 1 << v12;
      (*(void (**)(unint64_t, _QWORD *, uint64_t))(v91 + 16))(v2[6] + *(_QWORD *)(v91 + 72) * v12, v346, v45);
      *(_QWORD *)(v2[7] + 8 * v12) = v82;
      v93 = v2[2];
      v94 = __OFADD__(v93, 1);
      v95 = v93 + 1;
      if (v94)
        goto LABEL_68;
      v2[2] = v95;
    }
    v47 = swift_bridgeObjectRelease(0x8000000000000000);
    (*(void (**)(_QWORD *, uint64_t, __n128))(v91 + 8))(v346, v45, v47);
    swift_release(v92);
    v12 = v341;
    v40 = v342;
  }
  if (v12)
  {
    v48 = (v12 - 1) & v12;
    v49 = __clz(__rbit64(v12)) | (v40 << 6);
    v50 = v40;
    goto LABEL_31;
  }
  v55 = v40 + 1;
  if (__OFADD__(v40, 1))
    goto LABEL_69;
  if (v55 >= (uint64_t)v333)
    goto LABEL_45;
  v56 = v334[v55];
  v50 = v40 + 1;
  if (v56)
    goto LABEL_30;
  v50 = v40 + 2;
  if (v40 + 2 >= (uint64_t)v333)
    goto LABEL_45;
  v56 = v334[v50];
  if (v56)
    goto LABEL_30;
  v50 = v40 + 3;
  if (v40 + 3 >= (uint64_t)v333)
    goto LABEL_45;
  v56 = v334[v50];
  if (v56)
    goto LABEL_30;
  v50 = v40 + 4;
  if (v40 + 4 >= (uint64_t)v333)
    goto LABEL_45;
  v56 = v334[v50];
  if (v56)
  {
LABEL_30:
    v48 = (v56 - 1) & v56;
    v49 = __clz(__rbit64(v56)) + (v50 << 6);
LABEL_31:
    v54 = *(_QWORD *)(*(_QWORD *)(v34 + 48) + 8 * v49);
    swift_retain(v54);
    if (!v54)
      goto LABEL_45;
    goto LABEL_32;
  }
  v57 = (uint64_t *)(v40 + 5);
  while (v333 != v57)
  {
    v56 = v334[(_QWORD)v57];
    v57 = (uint64_t *)((char *)v57 + 1);
    if (v56)
    {
      v50 = (uint64_t)v57 - 1;
      goto LABEL_30;
    }
  }
LABEL_45:
  sub_1004D284C(v34);
  v96 = v327;
  if (*(_BYTE *)(v327 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_trackChanges) != 1)
  {
    swift_bridgeObjectRelease(v325);
    v127 = OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_addedItemDatas;
    v128 = v329;
    v129 = *(_QWORD *)(v329 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_addedItemDatas);
    swift_bridgeObjectRetain(v129);
    v130 = v330;
    sub_1005F3F60(v330, v129);
    v132 = v131;
    swift_bridgeObjectRelease(v129);
    v133 = *(_QWORD *)(v128 + v127);
    *(_QWORD *)(v128 + v127) = v132;
    swift_bridgeObjectRelease(v133);
    v134 = OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedItemDatas;
    v135 = *(_QWORD *)(v128 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedItemDatas);
    swift_bridgeObjectRetain(v135);
    sub_1005F3F60(v130, v135);
    v137 = v136;
    swift_bridgeObjectRelease(v135);
    v138 = *(_QWORD *)(v128 + v134);
    *(_QWORD *)(v128 + v134) = v137;
    swift_bridgeObjectRelease(v138);
    v139 = OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_modifiedItemDatas;
    v140 = *(_QWORD *)(v128 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_modifiedItemDatas);
    swift_bridgeObjectRetain(v140);
    sub_1005F3F60(v130, v140);
    v142 = v141;
    swift_bridgeObjectRelease(v140);
    v143 = *(_QWORD *)(v128 + v139);
    *(_QWORD *)(v128 + v139) = v142;
    swift_bridgeObjectRelease(v143);
    swift_beginAccess(v128 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedNewlyCreatedItemIds, v356, 33, 0);
    v144 = v328;
    sub_100DB6134(v328);
    swift_endAccess(v356);
    swift_bridgeObjectRelease(v144);
    v145 = (uint64_t *)(v96 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_markedDeletedObjectIds);
    swift_beginAccess(v96 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_markedDeletedObjectIds, v356, 0, 0);
    v146 = *v145;
    v147 = (_QWORD *)(v128 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_realTimePeerCreatedItemDatas);
    swift_beginAccess(v128 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_realTimePeerCreatedItemDatas, v355, 33, 0);
    swift_bridgeObjectRetain(v146);
    sub_1005F1B90(v148);
    swift_endAccess(v355);
    swift_bridgeObjectRelease(v146);
    v149 = (uint64_t *)(v96 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_markedCreatedObjectIds);
    swift_beginAccess(v96 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_markedCreatedObjectIds, v355, 0, 0);
    v150 = *v149;
    v151 = v128 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_realTimePeerDeletedItemIds;
    swift_beginAccess(v128 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_realTimePeerDeletedItemIds, v354, 33, 0);
    swift_bridgeObjectRetain(v150);
    sub_100DB6134(v152);
    swift_endAccess(v354);
    swift_bridgeObjectRelease(v150);
    swift_beginAccess(v147, v354, 33, 0);
    swift_bridgeObjectRetain(v2);
    v153 = swift_isUniquelyReferenced_nonNull_native(*v147);
    v353[0] = *v147;
    *v147 = 0x8000000000000000;
    sub_1005F86D0((uint64_t)v2, (uint64_t)sub_100B29BA0, 0, v153, (uint64_t)v353);
    v154 = *v147;
    *v147 = v353[0];
    swift_bridgeObjectRelease(v154);
    swift_endAccess(v354);
    swift_bridgeObjectRelease(v2);
    v155 = *v145;
    swift_beginAccess(v151, v354, 33, 0);
    swift_bridgeObjectRetain(v155);
    sub_10051257C(v156);
    swift_endAccess(v354);
    v157 = (uint64_t *)(v128 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_snapshots);
    swift_beginAccess(v128 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_snapshots, v354, 1, 0);
    v158 = *v157;
    if (*v157)
    {
      v159 = v326;
      if (*(_QWORD *)(v326 + 16) <= *(_QWORD *)(v130 + 16) >> 3)
      {
        v353[0] = v130;
        swift_bridgeObjectRetain(v158);
        sub_100DB6134(v159);
        swift_bridgeObjectRelease(v159);
        v160 = (void *)v353[0];
      }
      else
      {
        swift_bridgeObjectRetain(*v157);
        v160 = sub_100DB730C(v159, v130);
        swift_bridgeObjectRelease(v159);
      }
      sub_1005F4218((uint64_t)v160, v158);
      v316 = v315;
      swift_bridgeObjectRelease(v160);
      swift_bridgeObjectRelease(v158);
      v234 = 0;
      v130 = *v157;
      *v157 = v316;
    }
    else
    {
      swift_bridgeObjectRelease(v326);
      v234 = 0;
    }
    goto LABEL_66;
  }
  v97 = *v321;
  swift_bridgeObjectRetain(*v321);
  v345 = sub_1005FA3C0(v98);
  swift_bridgeObjectRelease(v97);
  v99 = *v324;
  swift_bridgeObjectRetain(*v324);
  v342 = sub_1005FA3C0(v100);
  swift_bridgeObjectRelease(v99);
  v101 = (uint64_t *)(v96 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_markedDeletedObjectIds);
  swift_beginAccess(v96 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_markedDeletedObjectIds, v356, 0, 0);
  *(_QWORD *)&v340 = v101;
  v102 = *v101;
  v103 = (uint64_t *)(v96 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_modifications);
  swift_beginAccess(v96 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_modifications, v355, 0, 0);
  v104 = *v103;
  v343 = v102;
  swift_bridgeObjectRetain(v102);
  swift_bridgeObjectRetain(v104);
  sub_100A65018(v105);
  v107 = v106;
  v108 = sub_1005FA3C0(v106);
  swift_bridgeObjectRelease(v107);
  v109 = (_QWORD *)(v96 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_undoableModifications);
  swift_beginAccess(v96 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_undoableModifications, v354, 0, 0);
  swift_bridgeObjectRetain(*v109);
  sub_100A65018(v110);
  v112 = v111;
  v337 = sub_1005FA3C0(v111);
  swift_bridgeObjectRelease(v112);
  v113 = OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_addedItemDatas;
  v114 = v329;
  v115 = *(_QWORD *)(v329 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_addedItemDatas);
  swift_bridgeObjectRetain(v115);
  v116 = swift_bridgeObjectRetain(v108);
  v117 = sub_100A651C8(v116);
  swift_bridgeObjectRetain(v115);
  v119 = sub_1008DE3F0(v118, v117);
  swift_bridgeObjectRelease(v115);
  swift_bridgeObjectRetain(v108);
  swift_retain(v119);
  v120 = v323;
  v121 = sub_1005FCFF0(v108, v119);
  swift_bridgeObjectRelease(v115);
  v341 = v108;
  v122 = swift_bridgeObjectRelease(v108);
  swift_release_n(v119, 2, v122);
  v123 = *(_QWORD *)(v121 + 16);
  v320 = v2;
  v333 = v103;
  if (v123)
  {
    v124 = *(_QWORD *)(v114 + v113);
    swift_bridgeObjectRetain(v124);
    v125 = sub_1005F82F8(v121, v124, (uint64_t)sub_100B29BA0, (void (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t *))sub_1005F8A0C);
    v126 = *(_QWORD *)(v114 + v113);
    *(_QWORD *)(v114 + v113) = v125;
    swift_bridgeObjectRelease(v126);
  }
  else
  {
    swift_release(v121);
  }
  v161 = v330;
  v346 = (_QWORD *)v113;
  v162 = *(_QWORD *)(v114 + v113);
  swift_bridgeObjectRetain(v162);
  v163 = v345;
  swift_bridgeObjectRetain(v345);
  v165 = sub_1005F82F8(v164, v162, (uint64_t)sub_100B29BA0, (void (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t *))sub_1005F8A0C);
  sub_1005F3F60(v161, v165);
  v167 = v166;
  swift_bridgeObjectRelease(v165);
  v168 = v328;
  sub_1005F3F60(v328, v167);
  v170 = v169;
  swift_bridgeObjectRelease(v167);
  v171 = *(_QWORD *)(v114 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedItemDatas);
  v172 = OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedItemDatas;
  v344 = OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedItemDatas;
  swift_bridgeObjectRetain(v171);
  v174 = sub_1005F08C0(v173);
  v175 = sub_100AF7994(v174);
  swift_bridgeObjectRelease(v171);
  swift_bridgeObjectRelease(v174);
  sub_1005F3F60(v175, v170);
  v177 = v176;
  swift_bridgeObjectRelease(v170);
  swift_bridgeObjectRelease(v175);
  v178 = *(_QWORD *)(v114 + v172);
  swift_bridgeObjectRetain(v178);
  v179 = sub_1005F827C(v342, v178);
  v180 = sub_1005F08C0(v163);
  v181 = sub_100AF7994(v180);
  swift_bridgeObjectRelease(v180);
  sub_1005F3F60(v181, v179);
  v183 = v182;
  swift_bridgeObjectRelease(v179);
  swift_bridgeObjectRelease(v181);
  v184 = *(_QWORD *)((char *)v346 + v114);
  swift_bridgeObjectRetain(v184);
  v186 = sub_1005F08C0(v185);
  v187 = sub_100AF7994(v186);
  swift_bridgeObjectRelease(v184);
  swift_bridgeObjectRelease(v186);
  sub_1005F3F60(v187, v183);
  v189 = v188;
  swift_bridgeObjectRelease(v183);
  v190 = v187;
  v12 = v329;
  swift_bridgeObjectRelease(v190);
  v191 = v343;
  sub_1005F3F60(v343, v189);
  v335 = v192;
  swift_bridgeObjectRelease(v189);
  swift_bridgeObjectRelease(v191);
  v193 = (uint64_t *)(v12 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedNewlyCreatedItemIds);
  v343 = 1;
  swift_beginAccess(v12 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedNewlyCreatedItemIds, v353, 1, 0);
  v194 = *v193;
  swift_bridgeObjectRetain(*v193);
  swift_bridgeObjectRetain(v168);
  v196 = sub_100CA03B4(v195, v194);
  swift_bridgeObjectRetain(v163);
  v198 = sub_100DB8B18(v197, v196);
  swift_bridgeObjectRelease(v163);
  v199 = *(_QWORD *)((char *)v346 + v12);
  swift_bridgeObjectRetain(v199);
  v334 = sub_100DB8B18(v200, (uint64_t)v198);
  swift_bridgeObjectRelease(v199);
  v342 = OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_modifiedItemDatas;
  v201 = *(_QWORD *)(v12 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_modifiedItemDatas);
  swift_bridgeObjectRetain(v201);
  v202 = sub_1005F82F8(v341, v201, (uint64_t)sub_100B29BA0, (void (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t *))sub_1005F8A0C);
  v203 = v330;
  sub_1005F3F60(v330, v202);
  v205 = v204;
  swift_bridgeObjectRelease(v202);
  sub_1005F3F60(v168, v205);
  v207 = v206;
  swift_bridgeObjectRelease(v205);
  v208 = swift_bridgeObjectRetain(v177);
  v209 = sub_100A651C8(v208);
  sub_1005F3F60(v209, v207);
  v341 = v210;
  swift_bridgeObjectRelease(v207);
  swift_bridgeObjectRelease(v209);
  v338 = (char *)OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_undoableModifiedItemDatas;
  v211 = *(_QWORD *)(v12 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_undoableModifiedItemDatas);
  swift_bridgeObjectRetain(v211);
  v212 = v335;
  v213 = sub_1005F82F8(v337, v211, (uint64_t)sub_100B29BA0, (void (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t *))sub_1005F8A0C);
  v336 = v120;
  v214 = v177;
  v215 = (uint64_t)v334;
  v216 = v203;
  v217 = v344;
  sub_1005F3F60(v216, v213);
  v219 = v218;
  swift_bridgeObjectRelease(v213);
  v220 = v168;
  v2 = v346;
  sub_1005F3F60(v220, v219);
  v222 = v221;
  swift_bridgeObjectRelease(v219);
  v223 = swift_bridgeObjectRetain(v214);
  v224 = sub_100A651C8(v223);
  sub_1005F3F60(v224, v222);
  v337 = v225;
  swift_bridgeObjectRelease(v222);
  swift_bridgeObjectRelease(v224);
  v226 = *(_QWORD *)((char *)v2 + v12);
  swift_bridgeObjectRetain(v226);
  LOBYTE(v224) = sub_100C9ECF8(v214, v226);
  swift_bridgeObjectRelease(v226);
  if ((v224 & 1) != 0)
  {
    v227 = *(_QWORD *)(v12 + v217);
    swift_bridgeObjectRetain(v227);
    v228 = sub_100C9ECF8((uint64_t)v212, v227);
    swift_bridgeObjectRelease(v227);
    if ((v228 & 1) != 0
      && (v229 = *(_QWORD *)(v12 + v342),
          swift_bridgeObjectRetain(v229),
          v230 = sub_100C9ECF8(v341, v229),
          swift_bridgeObjectRelease(v229),
          (v230 & 1) != 0))
    {
      v231 = *v193;
      swift_bridgeObjectRetain(*v193);
      v232 = sub_1008D9BD4(v215, v231);
      swift_bridgeObjectRelease(v231);
      v233 = v232 ^ 1u;
    }
    else
    {
      v233 = 1;
    }
    v343 = v233;
  }
  v235 = *(_QWORD *)((char *)v2 + v12);
  *(_QWORD *)((char *)v2 + v12) = v214;
  swift_bridgeObjectRelease(v235);
  v236 = *(_QWORD *)(v12 + v217);
  *(_QWORD *)(v12 + v217) = v212;
  swift_bridgeObjectRelease(v236);
  v237 = *v193;
  *v193 = v215;
  swift_bridgeObjectRelease(v237);
  v335 = v193;
  if (qword_1013DD888 != -1)
LABEL_71:
    swift_once(&qword_1013DD888, sub_100A05DE4);
  swift_beginAccess(&static OS_os_log.realTimeSync, &v352, 0, 0);
  v238 = (void *)static OS_os_log.realTimeSync;
  v239 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v239, &v351);
  *(_OWORD *)(inited + 16) = xmmword_100EF5550;
  v241 = *(_QWORD *)((char *)v2 + v12);
  type metadata accessor for CRLTransactableData(0);
  sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v334 = v238;
  v242 = swift_bridgeObjectRetain(v241);
  v243 = Dictionary.Keys.description.getter(v242);
  v244 = v12;
  v246 = v245;
  swift_bridgeObjectRelease(v241);
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v247 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v247;
  *(_QWORD *)(inited + 32) = v243;
  *(_QWORD *)(inited + 40) = v246;
  v248 = *(_QWORD *)(v244 + v344);
  v249 = swift_bridgeObjectRetain(v248);
  v250 = Dictionary.Keys.description.getter(v249);
  v252 = v251;
  swift_bridgeObjectRelease(v248);
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v247;
  *(_QWORD *)(inited + 72) = v250;
  *(_QWORD *)(inited + 80) = v252;
  v253 = *v335;
  v254 = swift_bridgeObjectRetain(*v335);
  v255 = Set.description.getter(v254);
  v257 = v256;
  v258 = swift_bridgeObjectRelease(v253);
  *(_QWORD *)(inited + 136) = &type metadata for String;
  *(_QWORD *)(inited + 144) = v247;
  *(_QWORD *)(inited + 112) = v255;
  *(_QWORD *)(inited + 120) = v257;
  v259 = static os_log_type_t.default.getter(v258);
  v260 = v334;
  sub_100A06EBC((uint64_t)v334, &_mh_execute_header, v259, "CRLBoardChangeSet _applyChange addedItemDatas: %{public}@, removedItemDatas: %{public}@, removedNewlyCreatedItemIds: %{public}@", 127, 2, inited);
  swift_setDeallocating(inited);
  v261 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 3, v261);

  v262 = *v324;
  swift_bridgeObjectRetain(*v324);
  sub_1005EFF90(v263);
  v265 = v264;
  swift_bridgeObjectRelease(v262);
  v266 = OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedFreehandItemIDsSubset;
  v267 = *(_QWORD *)(v244 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedFreehandItemIDsSubset);
  swift_bridgeObjectRetain(v267);
  v268 = sub_100CE51CC(v265, v267);
  swift_bridgeObjectRelease(v265);
  v269 = v345;
  swift_bridgeObjectRetain(v345);
  v271 = sub_100DB8B18(v270, v268);
  swift_bridgeObjectRelease(v269);
  v272 = (uint64_t)v346;
  v273 = *(_QWORD *)((char *)v346 + v244);
  swift_bridgeObjectRetain(v273);
  v275 = sub_100DB8B18(v274, (uint64_t)v271);
  swift_bridgeObjectRelease(v273);
  v276 = *(_QWORD *)(v244 + v266);
  *(_QWORD *)(v244 + v266) = v275;
  swift_bridgeObjectRelease(v276);
  v277 = OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedAsOrphanItemIDs;
  v278 = *(_QWORD *)(v244 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedAsOrphanItemIDs);
  swift_bridgeObjectRetain(v278);
  v279 = sub_100CA03B4(v326, v278);
  v280 = sub_100DB8B18(v269, v279);
  swift_bridgeObjectRelease(v269);
  v281 = *(_QWORD *)(v244 + v272);
  swift_bridgeObjectRetain(v281);
  v283 = sub_100DB8B18(v282, (uint64_t)v280);
  swift_bridgeObjectRelease(v281);
  v284 = *(_QWORD *)(v244 + v277);
  *(_QWORD *)(v244 + v277) = v283;
  swift_bridgeObjectRelease(v284);
  v285 = *(_QWORD *)(v244 + v342);
  *(_QWORD *)(v244 + v342) = v341;
  swift_bridgeObjectRelease(v285);
  v286 = *(_QWORD *)&v338[v244];
  *(_QWORD *)&v338[v244] = v337;
  swift_bridgeObjectRelease(v286);
  v287 = (_QWORD *)(v244 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_realTimePeerCreatedItemDatas);
  swift_beginAccess(v244 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_realTimePeerCreatedItemDatas, v350, 33, 0);
  v288 = v325;
  sub_1005F1B90(v325);
  v289 = (uint64_t *)v340;
  v290 = *(_QWORD *)v340;
  swift_bridgeObjectRetain(*(_QWORD *)v340);
  sub_1005F1B90(v291);
  swift_endAccess(v350);
  swift_bridgeObjectRelease(v290);
  v292 = (uint64_t *)(v327 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_markedCreatedObjectIds);
  swift_beginAccess(v327 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_markedCreatedObjectIds, v350, 0, 0);
  v293 = *v292;
  v294 = v244 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_realTimePeerDeletedItemIds;
  swift_beginAccess(v244 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_realTimePeerDeletedItemIds, v349, 33, 0);
  swift_bridgeObjectRetain(v293);
  sub_100DB6134(v295);
  swift_endAccess(v349);
  swift_bridgeObjectRelease(v293);
  swift_beginAccess(v287, v349, 33, 0);
  v296 = (uint64_t)v320;
  swift_bridgeObjectRetain(v320);
  v297 = swift_isUniquelyReferenced_nonNull_native(*v287);
  v348 = *v287;
  *v287 = 0x8000000000000000;
  sub_1005F86D0(v296, (uint64_t)sub_100B29BA0, 0, v297, (uint64_t)&v348);
  v298 = *v287;
  *v287 = v348;
  swift_bridgeObjectRelease(v298);
  swift_endAccess(v349);
  swift_bridgeObjectRelease(v296);
  v299 = *v289;
  swift_beginAccess(v294, v349, 33, 0);
  swift_bridgeObjectRetain(v299);
  sub_10051257C(v300);
  swift_endAccess(v349);
  v301 = (uint64_t *)(v244 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_snapshots);
  swift_beginAccess(v244 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_snapshots, v349, 1, 0);
  v302 = *v301;
  if (*v301)
  {
    v303 = *v333;
    swift_bridgeObjectRetain(*v301);
    swift_bridgeObjectRetain(v303);
    v305 = sub_100DB0550(v304);
    swift_bridgeObjectRelease(v303);
    v306 = sub_1005F82F8(v305, v302, (uint64_t)sub_1005F85D8, (void (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t *))sub_1005F8D10);
    v307 = v330;
    sub_1005F4218(v330, v306);
    v309 = v308;
    swift_bridgeObjectRelease(v306);
    swift_bridgeObjectRelease(v307);
    v310 = v328;
    sub_1005F4218(v328, v309);
    v312 = v311;
    swift_bridgeObjectRelease(v309);
    swift_bridgeObjectRelease(v310);
    sub_1005F4218(v288, v312);
    v314 = v313;
    swift_bridgeObjectRelease(v312);
    swift_bridgeObjectRelease(v288);
    v130 = *v301;
    *v301 = v314;
  }
  else
  {
    swift_bridgeObjectRelease(v288);
    swift_bridgeObjectRelease(v328);
    v130 = v330;
  }
  v234 = v343;
LABEL_66:
  swift_bridgeObjectRelease(v130);
  return v234 & 1;
}

void sub_1005F3F60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  __n128 v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  int64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  char v26;
  int isUniquelyReferenced_nonNull_native;
  unint64_t v28;
  void (*v29)(unint64_t, uint64_t);
  uint64_t v30;
  _QWORD v31[2];
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)v31 - v9;
  v11 = *(_QWORD *)(a1 + 56);
  v33 = a1 + 56;
  v12 = -1 << *(_BYTE *)(a1 + 32);
  if (-v12 < 64)
    v13 = ~(-1 << -(char)v12);
  else
    v13 = -1;
  v14 = v13 & v11;
  v31[1] = -1 << *(_BYTE *)(a1 + 32);
  v32 = (unint64_t)(63 - v12) >> 6;
  swift_bridgeObjectRetain(a2);
  v34 = a1;
  v15 = swift_bridgeObjectRetain(a1);
  v16 = 0;
  while (v14)
  {
    v17 = __clz(__rbit64(v14));
    v14 &= v14 - 1;
    v18 = v17 | (v16 << 6);
LABEL_22:
    v23 = *(_QWORD *)(v5 + 72);
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v5 + 16))(v10, *(_QWORD *)(v34 + 48) + v23 * v18, v4, v15);
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v10, v4);
    swift_bridgeObjectRetain(a2);
    v24 = sub_100842EFC((uint64_t)v8);
    v26 = v25;
    swift_bridgeObjectRelease(a2);
    if ((v26 & 1) != 0)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(a2);
      v35 = a2;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_10082CCAC();
        a2 = v35;
      }
      v28 = *(_QWORD *)(a2 + 48) + v24 * v23;
      v29 = *(void (**)(unint64_t, uint64_t))(v5 + 8);
      v29(v28, v4);
      a2 = v35;
      v30 = *(_QWORD *)(*(_QWORD *)(v35 + 56) + 8 * v24);
      sub_10051A11C(v24, v35);
      swift_release(v30);
      swift_bridgeObjectRelease(0x8000000000000000);
      v29((unint64_t)v8, v4);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    }
  }
  v19 = v16 + 1;
  if (__OFADD__(v16, 1))
  {
    __break(1u);
    goto LABEL_28;
  }
  if (v19 >= v32)
    goto LABEL_26;
  v20 = *(_QWORD *)(v33 + 8 * v19);
  v21 = v16 + 1;
  if (v20)
    goto LABEL_21;
  v21 = v16 + 2;
  if (v16 + 2 >= v32)
    goto LABEL_26;
  v20 = *(_QWORD *)(v33 + 8 * v21);
  if (v20)
    goto LABEL_21;
  v21 = v16 + 3;
  if (v16 + 3 >= v32)
    goto LABEL_26;
  v20 = *(_QWORD *)(v33 + 8 * v21);
  if (v20)
  {
LABEL_21:
    v14 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v21 << 6);
    v16 = v21;
    goto LABEL_22;
  }
  v22 = v16 + 4;
  if (v16 + 4 >= v32)
  {
LABEL_26:
    sub_1004D284C(v34);
    return;
  }
  v20 = *(_QWORD *)(v33 + 8 * v22);
  if (v20)
  {
    v21 = v16 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    v21 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v21 >= v32)
      goto LABEL_26;
    v20 = *(_QWORD *)(v33 + 8 * v21);
    ++v22;
    if (v20)
      goto LABEL_21;
  }
LABEL_28:
  __break(1u);
}

void sub_1005F4218(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  __n128 v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  int64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  char v26;
  int isUniquelyReferenced_nonNull_native;
  unint64_t v28;
  void (*v29)(unint64_t, uint64_t);
  uint64_t v30;
  _QWORD v31[2];
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)v31 - v9;
  v11 = *(_QWORD *)(a1 + 56);
  v33 = a1 + 56;
  v12 = -1 << *(_BYTE *)(a1 + 32);
  if (-v12 < 64)
    v13 = ~(-1 << -(char)v12);
  else
    v13 = -1;
  v14 = v13 & v11;
  v31[1] = -1 << *(_BYTE *)(a1 + 32);
  v32 = (unint64_t)(63 - v12) >> 6;
  swift_bridgeObjectRetain(a2);
  v34 = a1;
  v15 = swift_bridgeObjectRetain(a1);
  v16 = 0;
  while (v14)
  {
    v17 = __clz(__rbit64(v14));
    v14 &= v14 - 1;
    v18 = v17 | (v16 << 6);
LABEL_22:
    v23 = *(_QWORD *)(v5 + 72);
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v5 + 16))(v10, *(_QWORD *)(v34 + 48) + v23 * v18, v4, v15);
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v10, v4);
    swift_bridgeObjectRetain(a2);
    v24 = sub_100842EFC((uint64_t)v8);
    v26 = v25;
    swift_bridgeObjectRelease(a2);
    if ((v26 & 1) != 0)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(a2);
      v35 = a2;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_10082C13C();
        a2 = v35;
      }
      v28 = *(_QWORD *)(a2 + 48) + v24 * v23;
      v29 = *(void (**)(unint64_t, uint64_t))(v5 + 8);
      v29(v28, v4);
      a2 = v35;
      v30 = *(_QWORD *)(*(_QWORD *)(v35 + 56) + 16 * v24);
      sub_10051945C(v24, v35);
      swift_unknownObjectRelease(v30);
      swift_bridgeObjectRelease(0x8000000000000000);
      v29((unint64_t)v8, v4);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    }
  }
  v19 = v16 + 1;
  if (__OFADD__(v16, 1))
  {
    __break(1u);
    goto LABEL_28;
  }
  if (v19 >= v32)
    goto LABEL_26;
  v20 = *(_QWORD *)(v33 + 8 * v19);
  v21 = v16 + 1;
  if (v20)
    goto LABEL_21;
  v21 = v16 + 2;
  if (v16 + 2 >= v32)
    goto LABEL_26;
  v20 = *(_QWORD *)(v33 + 8 * v21);
  if (v20)
    goto LABEL_21;
  v21 = v16 + 3;
  if (v16 + 3 >= v32)
    goto LABEL_26;
  v20 = *(_QWORD *)(v33 + 8 * v21);
  if (v20)
  {
LABEL_21:
    v14 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v21 << 6);
    v16 = v21;
    goto LABEL_22;
  }
  v22 = v16 + 4;
  if (v16 + 4 >= v32)
  {
LABEL_26:
    sub_1004D284C(v34);
    return;
  }
  v20 = *(_QWORD *)(v33 + 8 * v22);
  if (v20)
  {
    v21 = v16 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    v21 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v21 >= v32)
      goto LABEL_26;
    v20 = *(_QWORD *)(v33 + 8 * v21);
    ++v22;
    if (v20)
      goto LABEL_21;
  }
LABEL_28:
  __break(1u);
}

void sub_1005F44D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  id v6;
  uint64_t v7;
  BOOL v8;
  __n128 v9;
  uint64_t v10;
  _BYTE v11[31];
  BOOL v12;

  v1 = type metadata accessor for DispatchPredicate(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_accessQueue);
  *v4 = v5;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for DispatchPredicate.onQueue(_:), v1);
  v6 = v5;
  LOBYTE(v5) = _dispatchPreconditionTest(_:)(v4);
  (*(void (**)(_QWORD *, uint64_t))(v2 + 8))(v4, v1);
  if ((v5 & 1) != 0)
  {
    if (sub_1005F155C())
    {
      v7 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_uncommittedChangeAvailablePublisher);
      if (*(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedItemDatas) + 16)
        || *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_addedItemDatas) + 16))
      {
        v8 = 1;
      }
      else
      {
        v10 = v0 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedNewlyCreatedItemIds;
        swift_beginAccess(v10, v11, 0, 0);
        v8 = *(_QWORD *)(*(_QWORD *)v10 + 16) != 0;
      }
      v12 = v8;
      v9 = swift_retain(v7);
      PassthroughSubject.send(_:)(&v12, v9);
      swift_release(v7);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_1005F4624(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, _BYTE *a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  int64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  unint64_t v43;
  unint64_t i;
  int64_t v45;
  unint64_t v46;
  int64_t v47;
  void (*v48)(char *, unint64_t, uint64_t);
  unint64_t v49;
  char v50;
  void (*v51)(char *, uint64_t, uint64_t, __n128);
  uint64_t v52;
  __n128 v53;
  uint64_t v54;
  char v55;
  char v56;
  char *v57;
  __n128 v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  __n128 v65;
  void (*v66)(uint64_t, uint64_t);
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  __n128 v71;
  __n128 v72;
  uint64_t v73;
  uint64_t v74;
  __n128 v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  char v79;
  __n128 v80;
  int64_t v81;
  unint64_t v82;
  __n128 v83;
  uint64_t v84;
  __n128 v85;
  uint64_t v86;
  unint64_t v87;
  char v88;
  uint64_t v89;
  __n128 v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v97;
  int64_t v98;
  uint64_t v99;
  uint64_t v100;
  _UNKNOWN ****v101;
  _UNKNOWN ****v102;
  int64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  Swift::Int v107;
  Swift::Int v108;
  unint64_t v109;
  uint64_t v110;
  __n128 v111;
  uint64_t v112;
  int64_t v113;
  unint64_t v114;
  BOOL v115;
  int64_t v116;
  char ***v117;
  char **v118;
  char **v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  Swift::Int v123;
  Swift::Int v124;
  uint64_t v125;
  __n128 v126;
  uint64_t v127;
  uint64_t v128;
  int64_t v129;
  _QWORD *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  _QWORD *v134;
  uint64_t v135;
  uint64_t v136;
  _QWORD *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  int64_t v143;
  uint64_t v144;
  uint64_t v145;
  char **v146;
  char **v147;
  int64_t v148;
  uint64_t v149;
  uint64_t v150;
  Swift::Int v151;
  Swift::Int v152;
  unint64_t v153;
  uint64_t v154;
  __n128 v155;
  uint64_t v156;
  uint64_t v157;
  unint64_t v158;
  uint64_t v159;
  int64_t v160;
  char **v161;
  char **v162;
  char **v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  Swift::Int v167;
  Swift::Int v168;
  uint64_t v169;
  __n128 v170;
  uint64_t v171;
  uint64_t v172;
  int64_t v173;
  _QWORD *v174;
  uint64_t v175;
  uint64_t v176;
  _QWORD *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  _QWORD *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  char **v197;
  char **v198;
  uint64_t v199;
  uint64_t v200;
  Swift::Int v201;
  Swift::Int v202;
  uint64_t v203;
  unint64_t v204;
  uint64_t v205;
  uint64_t v206;
  __n128 v207;
  uint64_t v208;
  uint64_t v209;
  unint64_t v210;
  _QWORD *v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  __n128 v215;
  unint64_t v216;
  unint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  _QWORD *v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  _QWORD *v244;
  uint64_t v245;
  uint64_t v246;
  _BOOL4 v247;
  unint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  unint64_t v252;
  uint64_t v253;
  __n128 v254;
  unint64_t v255;
  unint64_t v256;
  uint64_t v257;
  uint64_t v258;
  unint64_t v259;
  unint64_t v260;
  uint64_t v261;
  __n128 v262;
  unint64_t v263;
  unint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  _QWORD *v268;
  uint64_t v269;
  uint64_t v270;
  __n128 v271;
  uint64_t v272;
  unint64_t v273;
  unint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  _QWORD *v279;
  uint64_t (*v280)(__n128);
  __n128 v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  char *v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  _QWORD *v290;
  uint64_t v291;
  int *v292;
  _BYTE *v293;
  uint64_t v294;
  CKRecordID v295;
  uint64_t v296;
  uint64_t v298;
  _QWORD *v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  _BYTE *v303;
  uint64_t v304;
  _QWORD *v305;
  char *v306;
  uint64_t v307;
  _QWORD *v308;
  char *v309;
  char *v310;
  void (*v311)(char *, uint64_t, uint64_t, __n128);
  _QWORD *v312;
  char *v313;
  uint64_t v314;
  char *v315;
  _QWORD *v316;
  unint64_t v317;
  uint64_t v318;
  int64_t v319;
  unint64_t v320;
  uint64_t v321;
  uint64_t v322;
  _QWORD v323[3];
  _QWORD *v324;
  _QWORD *v325;
  unint64_t v326;
  unint64_t v327;
  unint64_t v328;
  char v329[8];
  char v330[8];
  uint64_t v331;

  v307 = a2;
  v321 = type metadata accessor for UUID(0);
  v8 = *(_QWORD *)(v321 - 8);
  v9 = __chkstk_darwin(v321);
  v306 = (char *)&v298 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v298 - v12;
  v14 = __chkstk_darwin(v11);
  v313 = (char *)&v298 - v15;
  v16 = __chkstk_darwin(v14);
  v308 = (uint64_t *)((char *)&v298 - v17);
  v18 = __chkstk_darwin(v16);
  v310 = (char *)&v298 - v19;
  v20 = __chkstk_darwin(v18);
  v315 = (char *)&v298 - v21;
  v22 = __chkstk_darwin(v20);
  v24 = (uint64_t)&v298 - v23;
  __chkstk_darwin(v22);
  v309 = (char *)&v298 - v25;
  v26 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v26);
  v28 = (char *)&v298 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!sub_1005F155C() || *(uint64_t *)(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_lockCounter) > 0)
  {
    v29 = type metadata accessor for CRLBoardDataStoreChangeSet(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(a4, 1, 1, v29);
    return;
  }
  v317 = (unint64_t)v13;
  v299 = a3;
  v303 = a4;
  v331 = (uint64_t)_swiftEmptyArrayStorage;
  v30 = (_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_realTimePeerCreatedItemDatas);
  swift_beginAccess(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_realTimePeerCreatedItemDatas, v330, 0, 0);
  v305 = v30;
  v31 = *v30;
  swift_bridgeObjectRetain(v31);
  v33 = sub_1005F08C0(v32);
  v304 = v4;
  v34 = sub_100AF7994(v33);
  swift_bridgeObjectRelease(v31);
  swift_bridgeObjectRelease(v33);
  v35 = *(_QWORD *)(v34 + 56);
  v316 = (_QWORD *)(v34 + 56);
  v36 = 1 << *(_BYTE *)(v34 + 32);
  v37 = -1;
  if (v36 < 64)
    v37 = ~(-1 << v36);
  v38 = v37 & v35;
  v314 = OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_addedItemDatas;
  v312 = (_QWORD *)OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_modifiedItemDatas;
  v320 = a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_peerServerSyncedItemDatas;
  swift_beginAccess(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_peerServerSyncedItemDatas, v329, 0, 0);
  v39 = 0;
  v318 = a1;
  v319 = (unint64_t)(v36 + 63) >> 6;
  v40 = v34;
  v41 = v321;
  v322 = v8;
  v311 = (void (*)(char *, uint64_t, uint64_t, __n128))v40;
  if (v38)
    goto LABEL_10;
LABEL_11:
  v45 = v39 + 1;
  if (__OFADD__(v39, 1))
    goto LABEL_219;
  if (v45 >= v319)
    goto LABEL_42;
  v46 = v316[v45];
  ++v39;
  if (v46)
    goto LABEL_24;
  v39 = v45 + 1;
  if (v45 + 1 >= v319)
    goto LABEL_42;
  v46 = v316[v39];
  if (v46)
    goto LABEL_24;
  v39 = v45 + 2;
  if (v45 + 2 >= v319)
    goto LABEL_42;
  v46 = v316[v39];
  if (v46)
  {
LABEL_24:
    v38 = (v46 - 1) & v46;
    for (i = __clz(__rbit64(v46)) + (v39 << 6); ; i = v43 | (v39 << 6))
    {
      v48 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
      v48(v28, *(_QWORD *)(v40 + 48) + *(_QWORD *)(v8 + 72) * i, v41);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v28, 0, 1, v41);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v28, 1, v41) == 1)
      {
        v72 = swift_release(v40);
        goto LABEL_43;
      }
      (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v24, v28, v41);
      v33 = *(_QWORD *)v320;
      if (!*(_QWORD *)(*(_QWORD *)v320 + 16))
        goto LABEL_9;
      swift_bridgeObjectRetain(*(_QWORD *)v320);
      v49 = sub_100842EFC(v24);
      if ((v50 & 1) == 0)
      {
        v42 = swift_bridgeObjectRelease(v33);
LABEL_9:
        (*(void (**)(uint64_t, uint64_t, __n128))(v8 + 8))(v24, v41, v42);
        if (!v38)
          goto LABEL_11;
        goto LABEL_10;
      }
      v51 = (void (*)(char *, uint64_t, uint64_t, __n128))v48;
      v52 = *(_QWORD *)(*(_QWORD *)(v33 + 56) + 8 * v49);
      swift_retain(v52);
      v53 = swift_bridgeObjectRelease(v33);
      v54 = *(_QWORD *)(v318 + v314);
      if (*(_QWORD *)(v54 + 16))
      {
        swift_bridgeObjectRetain(*(_QWORD *)(v318 + v314));
        sub_100842EFC(v24);
        v56 = v55;
        v53 = swift_bridgeObjectRelease(v54);
        if ((v56 & 1) != 0)
          break;
      }
      v59 = (uint64_t)v315;
      v51(v315, v24, v41, v53);
      v60 = *(_QWORD *)((char *)v312 + v318);
      if (*(_QWORD *)(v60 + 16))
      {
        swift_bridgeObjectRetain(*(_QWORD *)((char *)v312 + v318));
        v61 = sub_100842EFC(v59);
        v62 = v59;
        if ((v63 & 1) != 0)
        {
          v64 = *(_QWORD *)(*(_QWORD *)(v60 + 56) + 8 * v61);
          swift_retain(v64);
          v65 = swift_bridgeObjectRelease(v60);
          v33 = *(_QWORD *)(v322 + 8);
          ((void (*)(uint64_t, uint64_t, __n128))v33)(v62, v41, v65);
          v58 = swift_release(v64);
          goto LABEL_34;
        }
        swift_bridgeObjectRelease(v60);
      }
      v66 = *(void (**)(uint64_t, uint64_t))(v322 + 8);
      v66(v59, v41);
      swift_retain(v52);
      v33 = (uint64_t)&v331;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v67);
      v69 = *(_QWORD *)((v331 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v68 = *(_QWORD *)((v331 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v69 >= v68 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v68 > 1, v69 + 1, 1);
      v70 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v69, v52);
      specialized Array._endMutation()(v70);
      v71 = swift_release(v52);
      ((void (*)(uint64_t, uint64_t, __n128))v66)(v24, v41, v71);
LABEL_39:
      v8 = v322;
      v40 = (uint64_t)v311;
      if (!v38)
        goto LABEL_11;
LABEL_10:
      v43 = __clz(__rbit64(v38));
      v38 &= v38 - 1;
    }
    v57 = v315;
    v51(v315, v24, v41, v53);
    v33 = *(_QWORD *)(v322 + 8);
    ((void (*)(char *, uint64_t))v33)(v57, v41);
LABEL_34:
    ((void (*)(uint64_t, uint64_t, __n128))v33)(v24, v41, v58);
    swift_release(v52);
    goto LABEL_39;
  }
  v47 = v45 + 3;
  if (v47 < v319)
  {
    v46 = v316[v47];
    if (v46)
    {
      v39 = v47;
      goto LABEL_24;
    }
    while (1)
    {
      v39 = v47 + 1;
      if (__OFADD__(v47, 1))
        goto LABEL_220;
      if (v39 >= v319)
        break;
      v46 = v316[v39];
      ++v47;
      if (v46)
        goto LABEL_24;
    }
  }
LABEL_42:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v28, 1, 1, v41);
  v72 = swift_release(v40);
  v48 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
LABEL_43:
  v73 = v318;
  v24 = v318 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_boardIdentifier;
  v74 = (uint64_t)v309;
  ((void (*)(char *, uint64_t, uint64_t, __n128))v48)(v309, v318 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_boardIdentifier, v41, v72);
  v76 = *(_QWORD *)(v73 + v314);
  v77 = *(_QWORD *)(v76 + 16);
  v311 = (void (*)(char *, uint64_t, uint64_t, __n128))v48;
  if (!v77)
    goto LABEL_48;
  swift_bridgeObjectRetain(v76);
  v78 = sub_100842EFC(v74);
  if ((v79 & 1) == 0)
  {
    v75 = swift_bridgeObjectRelease(v76);
LABEL_48:
    v81 = *(_QWORD *)(v8 + 8);
    ((void (*)(uint64_t, uint64_t, __n128))v81)(v74, v41, v75);
    LODWORD(v315) = 0;
    v82 = 0;
    v28 = 0;
    goto LABEL_49;
  }
  v28 = *(char **)(*(_QWORD *)(v76 + 56) + 8 * v78);
  swift_retain(v28);
  v80 = swift_bridgeObjectRelease(v76);
  v81 = *(_QWORD *)(v8 + 8);
  ((void (*)(uint64_t, uint64_t, __n128))v81)(v74, v41, v80);
  v82 = *(_QWORD *)&v28[OBJC_IVAR____TtC8Freeform19CRLTransactableData_data];
  if ((v82 & 0x8000000000000000) != 0)
    goto LABEL_355;
  v83 = swift_retain(*(_QWORD *)&v28[OBJC_IVAR____TtC8Freeform19CRLTransactableData_data]);
  LODWORD(v315) = 1;
LABEL_49:
  v84 = (uint64_t)v310;
  v311(v310, v24, v41, v83);
  v86 = *(_QWORD *)((char *)v312 + v318);
  if (*(_QWORD *)(v86 + 16))
  {
    swift_bridgeObjectRetain(*(_QWORD *)((char *)v312 + v318));
    v87 = sub_100842EFC(v84);
    if ((v88 & 1) != 0)
    {
      v89 = *(_QWORD *)(*(_QWORD *)(v86 + 56) + 8 * v87);
      swift_retain(v89);
      v90 = swift_bridgeObjectRelease(v86);
      ((void (*)(uint64_t, uint64_t, __n128))v81)(v84, v41, v90);
      swift_retain(v89);
      if ((_DWORD)v315)
      {
        v81 = (int64_t)"getBoardDataStoreChangeSet(freehandDrawingBucketManager:ancestorDependencyProvider:)";
        sub_100757E04(&_mh_execute_header, (uint64_t)"getBoardDataStoreChangeSet(freehandDrawingBucketManager:ancestorDependencyProvider:)", 84, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardChangeSet.swift", 89, 2, 490, "Shouldn't have a board modification if we're creating the board.", 64, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"getBoardDataStoreChangeSet(freehandDrawingBucketManager:ancestorDependencyProvider:)", 84, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardChangeSet.swift", 89, 2u, 490, (uint64_t)"Shouldn't have a board modification if we're creating the board.", 64, 2u);
      }
      swift_release(v82);
      v82 = *(_QWORD *)(v89 + OBJC_IVAR____TtC8Freeform19CRLTransactableData_data);
      if ((v82 & 0x8000000000000000) != 0)
      {
        sub_100757E04(&_mh_execute_header, (uint64_t)"getBoardDataStoreChangeSet(freehandDrawingBucketManager:ancestorDependencyProvider:)", 84, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardChangeSet.swift", 89, 2, 494, "Non-board data found associted with boardUUID", 45, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Non-board data found associted with boardUUID");
        sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"getBoardDataStoreChangeSet(freehandDrawingBucketManager:ancestorDependencyProvider:)", 84, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardChangeSet.swift", 89, 2u, 494, (uint64_t)"Non-board data found associted with boardUUID", 45, 2u);
        goto LABEL_357;
      }
      swift_retain(*(_QWORD *)(v89 + OBJC_IVAR____TtC8Freeform19CRLTransactableData_data));
      v302 = v89;
      swift_release(v89);
      goto LABEL_57;
    }
    v85 = swift_bridgeObjectRelease(v86);
  }
  ((void (*)(uint64_t, uint64_t, __n128))v81)(v84, v41, v85);
  v302 = 0;
LABEL_57:
  v91 = v304;
  v309 = v28;
  v310 = (char *)v82;
  v92 = *(_QWORD *)(v318 + v314);
  swift_bridgeObjectRetain(v92);
  sub_1005EFC98(v93);
  v95 = v94;
  v40 = v91;
  swift_bridgeObjectRelease(v92);
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(v95);
  v328 = v95;
  if (!(_DWORD)isUniquelyReferenced_nonNull_bridgeObject || v95 < 0 || (v95 & 0x4000000000000000) != 0)
  {
    isUniquelyReferenced_nonNull_bridgeObject = sub_100D14ED8(v95);
    v95 = isUniquelyReferenced_nonNull_bridgeObject;
    v328 = isUniquelyReferenced_nonNull_bridgeObject;
  }
  v97 = v95 & 0xFFFFFFFFFFFFFF8;
  v98 = *(_QWORD *)((v95 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v28 = (char *)&off_1013E3B70;
  v39 = 0;
  if (v98)
  {
    v99 = v97 + 32;
    v100 = v97 + 24;
    do
    {
      v101 = *(_UNKNOWN *****)(v99 + 8 * v39);
      if (*v101 == &off_1013E3B70)
      {
        if (v39 >= v98 - 1)
          break;
        while (1)
        {
          v102 = *(_UNKNOWN *****)(v100 + 8 * v98);
          if (*v102 != &off_1013E3B70)
            break;
          v103 = v98 - 2;
          --v98;
          if (v39 >= v103)
            goto LABEL_69;
        }
        *(_QWORD *)(v99 + 8 * v39) = v102;
        *(_QWORD *)(v100 + 8 * v98--) = v101;
      }
      ++v39;
    }
    while (v39 < v98);
  }
LABEL_69:
  v104 = specialized Array._endMutation()(isUniquelyReferenced_nonNull_bridgeObject);
  v33 = v328;
  v38 = v328 >> 62;
  if (v328 >> 62)
    goto LABEL_221;
  v105 = *(_QWORD *)((v328 & 0xFFFFFFFFFFFFF8) + 0x10);
  v106 = v105;
  if (v105 < v39)
    goto LABEL_228;
  while (1)
  {
    if (v105 < 0)
      goto LABEL_229;
    if ((v33 & 0xC000000000000001) != 0 && v39 != v105)
    {
      if (v39 >= (unint64_t)v105)
      {
        while (1)
        {
          __break(1u);
LABEL_341:
          __break(1u);
LABEL_342:
          swift_unknownObjectRelease(v104);
LABEL_110:
          v130 = sub_1005FF558(v33, v105, v24, v39);
          v131 = v318;
LABEL_117:
          swift_unknownObjectRelease(v33);
          v136 = *(_QWORD *)((char *)v312 + v131);
          swift_bridgeObjectRetain(v136);
          v137 = (_QWORD *)v320;
          sub_1005EFC98(v138);
          v140 = v139;
          v38 = (int64_t)v137;
          swift_bridgeObjectRelease(v136);
          v141 = swift_isUniquelyReferenced_nonNull_bridgeObject(v140);
          v327 = v140;
          if ((v141 & 1) == 0 || v140 < 0 || (v140 & 0x4000000000000000) != 0)
          {
            v141 = sub_100D14ED8(v140);
            v140 = v141;
            v327 = v141;
          }
          v142 = v140 & 0xFFFFFFFFFFFFFF8;
          v143 = *(_QWORD *)((v140 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v143)
          {
            v81 = 0;
            v144 = v142 + 32;
            v145 = v142 + 24;
            while (1)
            {
              v146 = *(char ***)(v144 + 8 * v81);
              if (*v146 == v28)
              {
                if (v81 >= v143 - 1)
                  goto LABEL_131;
                while (1)
                {
                  v147 = *(char ***)(v145 + 8 * v143);
                  if (*v147 != v28)
                    break;
                  v148 = v143 - 2;
                  --v143;
                  if (v81 >= v148)
                    goto LABEL_131;
                }
                *(_QWORD *)(v144 + 8 * v81) = v147;
                *(_QWORD *)(v145 + 8 * v143--) = v146;
              }
              if (++v81 >= v143)
                goto LABEL_131;
            }
          }
          v81 = 0;
LABEL_131:
          v319 = (int64_t)v130;
          v149 = specialized Array._endMutation()(v141);
          v122 = v327;
          v24 = v327 >> 62;
          if (v327 >> 62)
            goto LABEL_237;
          v150 = *(_QWORD *)((v327 & 0xFFFFFFFFFFFFF8) + 0x10);
          v39 = v150;
          if (v150 < v81)
            goto LABEL_244;
LABEL_133:
          if (v150 < 0)
            goto LABEL_245;
          if ((v122 & 0xC000000000000001) != 0 && v81 != v150)
          {
            if (v81 >= (unint64_t)v150)
            {
              __break(1u);
              goto LABEL_344;
            }
            type metadata accessor for CRLBoardItemData();
            v151 = v81;
            do
            {
              v152 = v151 + 1;
              _ArrayBuffer._typeCheckSlowPath(_:)(v151);
              v151 = v152;
            }
            while (v150 != v152);
          }
          if (v24)
          {
            if (v122 < 0)
              v154 = v122;
            else
              v154 = v122 & 0xFFFFFFFFFFFFFF8;
            v155 = swift_bridgeObjectRetain(v122);
            v40 = _CocoaArrayWrapper.subscript.getter(v81, v150, v154, v155);
            v105 = v156;
            v24 = v157;
            v153 = v158;
            swift_bridgeObjectRelease(v122);
          }
          else
          {
            v40 = v122 & 0xFFFFFFFFFFFFFF8;
            v105 = (v122 & 0xFFFFFFFFFFFFFF8) + 32;
            v153 = (2 * v150) | 1;
            swift_bridgeObjectRetain(v122);
            v24 = v81;
          }
          v39 = v153 >> 1;
          v115 = __OFSUB__(v153 >> 1, v24);
          v159 = (v153 >> 1) - v24;
          if (v115)
            goto LABEL_246;
          if (!v159)
          {
            swift_unknownObjectRelease(v40);
            v24 = (uint64_t)_swiftEmptyArrayStorage;
LABEL_159:
            v39 = v327;
            v105 = v327 >> 62;
            if (!(v327 >> 62))
            {
              v166 = *(_QWORD *)((v327 & 0xFFFFFFFFFFFFF8) + 0x10);
              if (v166 >= v81)
                goto LABEL_161;
LABEL_252:
              __break(1u);
LABEL_253:
              v225 = v24;
              if (v166 < 0)
                v226 = v166;
              else
                v226 = v166 & 0xFFFFFFFFFFFFFF8;
              swift_bridgeObjectRetain(v166);
              v227 = _CocoaArrayWrapper.endIndex.getter(v226);
              swift_bridgeObjectRelease(v166);
              if (v227 < 0)
                goto LABEL_354;
              swift_bridgeObjectRetain(v166);
              v200 = _CocoaArrayWrapper.endIndex.getter(v226);
              swift_bridgeObjectRelease(v166);
              v24 = v225;
LABEL_195:
              v300 = v40;
              if (v200 < v159)
              {
                __break(1u);
              }
              else
              {
                if (v159 && (v166 & 0xC000000000000001) != 0)
                {
                  type metadata accessor for CRLBoardItemData();
                  v201 = 0;
                  do
                  {
                    v202 = v201 + 1;
                    _ArrayBuffer._typeCheckSlowPath(_:)(v201);
                    v201 = v202;
                  }
                  while (v159 != v202);
                }
                v301 = v24;
                if (v81)
                {
                  if (v166 < 0)
                    v206 = v166;
                  else
                    v206 = v166 & 0xFFFFFFFFFFFFFF8;
                  v207 = swift_bridgeObjectRetain(v166);
                  v203 = _CocoaArrayWrapper.subscript.getter(0, v159, v206, v207);
                  v24 = v208;
                  v205 = v209;
                  v204 = v210;
                  swift_bridgeObjectRelease(v166);
                }
                else
                {
                  v203 = v166 & 0xFFFFFFFFFFFFFF8;
                  v24 = (v166 & 0xFFFFFFFFFFFFFF8) + 32;
                  v204 = (2 * v159) | 1;
                  swift_bridgeObjectRetain(v166);
                  v205 = 0;
                }
                v40 = (uint64_t)v308;
                v211 = sub_1005FBFAC(v203, v24, v205, v204);
                swift_unknownObjectRelease(v203);
                v212 = v318;
                swift_retain(v318);
                v159 = (uint64_t)sub_1005FB4F0((uint64_t)v211, v212);
                v314 = v39;
                swift_bridgeObjectRelease(v211);
                swift_release(v212);
                if (!((unint64_t)v159 >> 62))
                {
                  v105 = *(_QWORD *)((v159 & 0xFFFFFFFFFFFFF8) + 0x10);
                  v28 = v313;
                  if (v105)
                    goto LABEL_208;
LABEL_263:
                  swift_bridgeObjectRelease(v159);
                  v24 = (uint64_t)_swiftEmptyArrayStorage;
                  goto LABEL_264;
                }
              }
              if (v159 < 0)
                v228 = v159;
              else
                v228 = v159 & 0xFFFFFFFFFFFFFF8;
              v105 = _CocoaArrayWrapper.endIndex.getter(v228);
              v28 = v313;
              if (!v105)
                goto LABEL_263;
LABEL_208:
              v323[0] = _swiftEmptyArrayStorage;
              v33 = (uint64_t)v323;
              v104 = sub_100600724(0, v105 & ~(v105 >> 63), 0);
              if (v105 < 0)
                goto LABEL_336;
              v213 = 0;
              v24 = v323[0];
              do
              {
                if ((v159 & 0xC000000000000001) != 0)
                {
                  v214 = specialized _ArrayBuffer._getElementSlowPath(_:)(v213, v159);
                }
                else
                {
                  v214 = *(_QWORD *)(v159 + 8 * v213 + 32);
                  v215 = swift_retain(v214);
                }
                (*(void (**)(__n128))(*(_QWORD *)v214 + 256))(v215);
                swift_release(v214);
                v323[0] = v24;
                v217 = *(_QWORD *)(v24 + 16);
                v216 = *(_QWORD *)(v24 + 24);
                if (v217 >= v216 >> 1)
                {
                  sub_100600724(v216 > 1, v217 + 1, 1);
                  v24 = v323[0];
                }
                ++v213;
                *(_QWORD *)(v24 + 16) = v217 + 1;
                (*(void (**)(unint64_t, uint64_t, uint64_t))(v322 + 32))(v24+ ((*(unsigned __int8 *)(v322 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v322 + 80))+ *(_QWORD *)(v322 + 72) * v217, v40, v321);
              }
              while (v105 != v213);
              swift_bridgeObjectRelease(v159);
              v28 = v313;
LABEL_264:
              v229 = sub_100AF7994(v24);
              swift_bridgeObjectRelease(v24);
              v230 = *v305;
              swift_bridgeObjectRetain(*v305);
              v231 = v314;
              sub_1005F050C(v232);
              v234 = v233;
              swift_bridgeObjectRelease(v230);
              v235 = sub_100CE51CC(v234, v229);
              swift_bridgeObjectRelease(v234);
              v313 = (char *)sub_1005FF460(v235);
              swift_bridgeObjectRelease(v235);
              v236 = v307;
              if (v307)
              {
                swift_retain(v307);
                v237 = v316;
                v238 = v301;
                v239 = (uint64_t)v312;
                sub_100A289F0((uint64_t)v316, v301, (uint64_t)v312);
                swift_bridgeObjectRelease(v237);
                swift_bridgeObjectRelease(v238);
                swift_bridgeObjectRelease(v239);
                v240 = *(_QWORD *)(v236 + 16);
                v325 = _swiftEmptyDictionarySingleton;
                v241 = swift_beginAccess(v240 + 16, v323, 0, 0);
                v242 = *(_QWORD *)(v240 + 16);
                __chkstk_darwin(v241);
                swift_retain(v240);
                swift_bridgeObjectRetain(v242);
                sub_1005FABC4(v243, (void (*)(uint64_t, uint64_t))sub_1005FC09C);
                swift_release(v240);
                swift_bridgeObjectRelease(v242);
                v244 = v325;
                v308 = sub_1005F9384((uint64_t)v325);
                v314 = v231;
                swift_release(v236);
                v245 = v318;
                v105 = v319;
                v246 = v321;
              }
              else
              {
                v314 = v231;
                swift_bridgeObjectRelease(v316);
                swift_bridgeObjectRelease(v301);
                v308 = _swiftEmptyDictionarySingleton;
                v245 = v318;
                v105 = v319;
                v246 = v321;
                v244 = v312;
              }
              swift_bridgeObjectRelease(v244);
              v247 = v105 < 0 || (v105 & 0x4000000000000000) != 0;
              if (!v247)
              {
                if (*(_QWORD *)(v105 + 16))
                  goto LABEL_275;
LABEL_272:
                v248 = v320;
                if ((v320 & 0x8000000000000000) == 0 && (v320 & 0x4000000000000000) == 0)
                {
                  v249 = *(_QWORD *)(v320 + 16);
                  if (!v249)
                    goto LABEL_347;
                  goto LABEL_275;
                }
                swift_bridgeObjectRetain(v320);
                v249 = _CocoaArrayWrapper.endIndex.getter(v294);
                swift_release(v248);
                if (v249)
                  goto LABEL_275;
LABEL_347:
                v285 = v310;
LABEL_330:
                if ((_DWORD)v315 && *(_QWORD *)(*(_QWORD *)(v245 + v298) + 16))
                {
                  sub_100757E04(&_mh_execute_header, (uint64_t)"getBoardDataStoreChangeSet(freehandDrawingBucketManager:ancestorDependencyProvider:)", 84, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardChangeSet.swift", 89, 2, 572, "A board creation should not include deleted items", 49, 2u, (uint64_t)_swiftEmptyArrayStorage);
                  v245 = v318;
                  v105 = v319;
                  v246 = v321;
                  sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"getBoardDataStoreChangeSet(freehandDrawingBucketManager:ancestorDependencyProvider:)", 84, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardChangeSet.swift", 89, 2u, 572, (uint64_t)"A board creation should not include deleted items", 49, 2u);
                }
                swift_release(v302);
                swift_release(v309);
                v292 = (int *)type metadata accessor for CRLBoardDataStoreChangeSet(0);
                v293 = v303;
                sub_1004B8460(v304, (uint64_t)&v303[v292[5]], type metadata accessor for CRLBoardIdentifier);
                ((void (*)(_BYTE *, uint64_t, uint64_t))v311)(&v293[v292[6]], v245 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_rootContainerUUID, v246);
                *v293 = (_BYTE)v315;
                *(_QWORD *)&v293[v292[7]] = v285;
                *(_QWORD *)&v293[v292[8]] = v105;
                *(_QWORD *)&v293[v292[9]] = v320;
                *(_QWORD *)&v293[v292[10]] = v300;
                *(_QWORD *)&v293[v292[11]] = v313;
                *(_QWORD *)&v293[v292[12]] = v308;
                *(_QWORD *)&v293[v292[13]] = v249;
                *(_QWORD *)&v293[v292[14]] = v331;
                (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(*((_QWORD *)v292 - 1) + 56))(v293, 0, 1, v292);
                swift_bridgeObjectRelease(v326);
                swift_bridgeObjectRelease(v327);
                swift_bridgeObjectRelease(v328);
                return;
              }
              swift_bridgeObjectRetain(v105);
              v276 = _CocoaArrayWrapper.endIndex.getter(v275);
              swift_release(v105);
              if (!v276)
                goto LABEL_272;
LABEL_275:
              v325 = _swiftEmptyArrayStorage;
              if (v247)
              {
                swift_bridgeObjectRetain(v105);
                v251 = _CocoaArrayWrapper.endIndex.getter(v250);
                swift_release(v105);
              }
              else
              {
                v251 = *(_QWORD *)(v105 + 16);
              }
              v40 = (uint64_t)v306;
              v39 = (int64_t)_swiftEmptyArrayStorage;
              if (v251)
              {
                v324 = _swiftEmptyArrayStorage;
                v33 = (uint64_t)&v324;
                v104 = sub_100600724(0, v251 & ~(v251 >> 63), 0);
                if (v251 < 0)
                  goto LABEL_337;
                v24 = 0;
                v39 = (int64_t)v324;
                v252 = v319 & 0xC000000000000001;
                do
                {
                  if (v252)
                  {
                    v253 = specialized _ArrayBuffer._getElementSlowPath(_:)(v24, v319);
                  }
                  else
                  {
                    v253 = *(_QWORD *)(v319 + 8 * v24 + 32);
                    v254 = swift_retain(v253);
                  }
                  (*(void (**)(__n128))(*(_QWORD *)v253 + 256))(v254);
                  swift_release(v253);
                  v324 = (_QWORD *)v39;
                  v256 = *(_QWORD *)(v39 + 16);
                  v255 = *(_QWORD *)(v39 + 24);
                  v105 = v256 + 1;
                  if (v256 >= v255 >> 1)
                  {
                    sub_100600724(v255 > 1, v256 + 1, 1);
                    v39 = (int64_t)v324;
                  }
                  ++v24;
                  *(_QWORD *)(v39 + 16) = v105;
                  (*(void (**)(unint64_t, char *, uint64_t))(v322 + 32))(v39+ ((*(unsigned __int8 *)(v322 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v322 + 80))+ *(_QWORD *)(v322 + 72) * v256, v28, v321);
                }
                while (v251 != v24);
              }
              swift_bridgeObjectRetain(v39);
              sub_1006202D0(v257);
              if ((v320 & 0x8000000000000000) != 0 || (v320 & 0x4000000000000000) != 0)
              {
                swift_bridgeObjectRetain(v320);
                v258 = _CocoaArrayWrapper.endIndex.getter(v320);
                swift_release(v320);
              }
              else
              {
                v258 = *(_QWORD *)(v320 + 16);
              }
              if (v258)
              {
                v324 = _swiftEmptyArrayStorage;
                v33 = (uint64_t)&v324;
                v104 = sub_100600724(0, v258 & ~(v258 >> 63), 0);
                if (v258 < 0)
                  goto LABEL_338;
                v28 = 0;
                v24 = (uint64_t)v324;
                v259 = v320;
                v316 = (_QWORD *)(v320 & 0xC000000000000001);
                v260 = v317;
                do
                {
                  if (v316)
                  {
                    v261 = specialized _ArrayBuffer._getElementSlowPath(_:)(v28, v259);
                  }
                  else
                  {
                    v261 = *(_QWORD *)(v259 + 8 * (_QWORD)v28 + 32);
                    v262 = swift_retain(v261);
                  }
                  (*(void (**)(__n128))(*(_QWORD *)v261 + 256))(v262);
                  swift_release(v261);
                  v324 = (_QWORD *)v24;
                  v264 = *(_QWORD *)(v24 + 16);
                  v263 = *(_QWORD *)(v24 + 24);
                  v105 = v264 + 1;
                  if (v264 >= v263 >> 1)
                  {
                    sub_100600724(v263 > 1, v264 + 1, 1);
                    v24 = (uint64_t)v324;
                  }
                  ++v28;
                  *(_QWORD *)(v24 + 16) = v105;
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v322 + 32))(v24+ ((*(unsigned __int8 *)(v322 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v322 + 80))+ *(_QWORD *)(v322 + 72) * v264, v260, v321);
                  v259 = v320;
                }
                while ((char *)v258 != v28);
              }
              else
              {
                v24 = (uint64_t)_swiftEmptyArrayStorage;
              }
              sub_1006202D0(v24);
              v265 = v331;
              if ((unint64_t)v331 >> 62)
              {
                if (v331 < 0)
                  v277 = v331;
                else
                  v277 = v331 & 0xFFFFFFFFFFFFFF8;
                swift_bridgeObjectRetain(v331);
                v266 = _CocoaArrayWrapper.endIndex.getter(v277);
                if (v266)
                  goto LABEL_303;
LABEL_319:
                swift_bridgeObjectRelease(v265);
                v268 = _swiftEmptyArrayStorage;
              }
              else
              {
                v266 = *(_QWORD *)((v331 & 0xFFFFFFFFFFFFF8) + 0x10);
                swift_bridgeObjectRetain(v331);
                if (!v266)
                  goto LABEL_319;
LABEL_303:
                v324 = _swiftEmptyArrayStorage;
                v33 = (uint64_t)&v324;
                v104 = sub_100600724(0, v266 & ~(v266 >> 63), 0);
                if (v266 < 0)
                  goto LABEL_339;
                v267 = 0;
                v268 = v324;
                v317 = v265 & 0xC000000000000001;
                v269 = v265;
                do
                {
                  if (v317)
                  {
                    v270 = specialized _ArrayBuffer._getElementSlowPath(_:)(v267, v265);
                  }
                  else
                  {
                    v270 = *(_QWORD *)(v265 + 8 * v267 + 32);
                    v271 = swift_retain(v270);
                  }
                  (*(void (**)(__n128))(*(_QWORD *)v270 + 256))(v271);
                  swift_release(v270);
                  v324 = v268;
                  v272 = v40;
                  v274 = v268[2];
                  v273 = v268[3];
                  if (v274 >= v273 >> 1)
                  {
                    sub_100600724(v273 > 1, v274 + 1, 1);
                    v268 = v324;
                  }
                  ++v267;
                  v268[2] = v274 + 1;
                  (*(void (**)(unint64_t, uint64_t, uint64_t))(v322 + 32))((unint64_t)v268+ ((*(unsigned __int8 *)(v322 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v322 + 80))+ *(_QWORD *)(v322 + 72) * v274, v272, v321);
                  v40 = v272;
                  v265 = v269;
                }
                while (v266 != v267);
                swift_bridgeObjectRelease(v269);
              }
              sub_1006202D0((uint64_t)v268);
              v278 = v299[4];
              sub_1004BB5A4(v299, v299[3]);
              v279 = v325;
              v280 = *(uint64_t (**)(__n128))(v278 + 8);
              v281 = swift_bridgeObjectRetain(v325);
              v282 = v280(v281);
              swift_bridgeObjectRelease(v279);
              swift_bridgeObjectRelease(v39);
              if ((v282 & 0xC000000000000001) != 0)
              {
                if (v282 < 0)
                  v283 = v282;
                else
                  v283 = v282 & 0xFFFFFFFFFFFFFF8;
                v284 = __CocoaSet.count.getter(v283);
              }
              else
              {
                v284 = *(_QWORD *)(v282 + 16);
              }
              v285 = v310;
              if (v284)
              {
                v286 = *v305;
                swift_bridgeObjectRetain(*v305);
                v287 = v314;
                v289 = sub_1005F08C0(v288);
                v290 = (_QWORD *)sub_100AF7994(v289);
                swift_bridgeObjectRelease(v286);
                swift_bridgeObjectRelease(v289);
                swift_bridgeObjectRetain(v290);
                sub_1005F9EB4(v282, v290);
                v249 = v291;
                v314 = v287;
                swift_bridgeObjectRelease(v282);
                swift_bridgeObjectRelease(v279);
                swift_bridgeObjectRelease_n(v290, 2);
              }
              else
              {
                swift_bridgeObjectRelease(v282);
                swift_bridgeObjectRelease(v279);
                v249 = 0;
              }
              v245 = v318;
              v105 = v319;
              v246 = v321;
              goto LABEL_330;
            }
LABEL_247:
            if (v39 < 0)
              v224 = v39;
            else
              v224 = v39 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v39);
            v159 = _CocoaArrayWrapper.endIndex.getter(v224);
            swift_bridgeObjectRelease(v39);
            if (v159 < 0)
              goto LABEL_353;
            swift_bridgeObjectRetain(v39);
            v166 = _CocoaArrayWrapper.endIndex.getter(v224);
            swift_bridgeObjectRelease(v39);
            if (v166 < v81)
              goto LABEL_252;
LABEL_161:
            if (v81 && (v39 & 0xC000000000000001) != 0)
            {
              type metadata accessor for CRLBoardItemData();
              v167 = 0;
              do
              {
                v168 = v167 + 1;
                _ArrayBuffer._typeCheckSlowPath(_:)(v167);
                v167 = v168;
              }
              while (v81 != v168);
            }
            if (!v105)
            {
              v122 = v39 & 0xFFFFFFFFFFFFFF8;
              v150 = (v39 & 0xFFFFFFFFFFFFFF8) + 32;
              v81 = (2 * v81) | 1;
              swift_bridgeObjectRetain(v39);
              if ((v81 & 1) != 0)
                goto LABEL_173;
LABEL_172:
              v174 = sub_1005FF558(v122, v150, v105, v81);
LABEL_179:
              v320 = (unint64_t)v174;
              swift_unknownObjectRelease(v122);
              v179 = OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedItemDatas;
              v180 = v318;
              v181 = *(_QWORD *)(v318 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedItemDatas);
              swift_bridgeObjectRetain(v181);
              sub_1005EFC98(v182);
              v184 = v183;
              swift_bridgeObjectRelease(v181);
              swift_retain(v180);
              v40 = (uint64_t)sub_1005FB4F0(v184, v180);
              swift_bridgeObjectRelease(v184);
              swift_release(v180);
              v185 = *(_QWORD *)(v180 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedFreehandItemIDsSubset);
              swift_bridgeObjectRetain(v185);
              v187 = sub_1005FF460(v186);
              swift_bridgeObjectRelease(v185);
              swift_retain(v180);
              v312 = (_QWORD *)sub_1005FAD48((uint64_t)v187, v180);
              swift_release(v180);
              v298 = v179;
              v188 = *(_QWORD *)(v180 + v179);
              swift_bridgeObjectRetain(v188);
              sub_1005EFC98(v189);
              v191 = v190;
              v39 = v38;
              swift_bridgeObjectRelease(v188);
              v192 = swift_isUniquelyReferenced_nonNull_bridgeObject(v191);
              v326 = v191;
              if ((v192 & 1) == 0 || v191 < 0 || (v191 & 0x4000000000000000) != 0)
              {
                v192 = sub_100D14ED8(v191);
                v191 = v192;
                v326 = v192;
              }
              v193 = v191 & 0xFFFFFFFFFFFFFF8;
              v194 = *(_QWORD *)((v191 & 0xFFFFFFFFFFFFFF8) + 0x10);
              if (v194)
              {
                v159 = 0;
                v195 = v193 + 32;
                v196 = v193 + 24;
                while (1)
                {
                  v197 = *(char ***)(v195 + 8 * v159);
                  if (*v197 == v28)
                  {
                    if (v159 >= v194 - 1)
                      goto LABEL_193;
                    while (1)
                    {
                      v198 = *(char ***)(v196 + 8 * v194);
                      if (*v198 != v28)
                        break;
                      v199 = v194 - 2;
                      --v194;
                      if (v159 >= v199)
                        goto LABEL_193;
                    }
                    *(_QWORD *)(v195 + 8 * v159) = v198;
                    *(_QWORD *)(v196 + 8 * v194--) = v197;
                  }
                  if (++v159 >= v194)
                    goto LABEL_193;
                }
              }
              v159 = 0;
LABEL_193:
              specialized Array._endMutation()(v192);
              v166 = v326;
              v81 = v326 >> 62;
              if (v326 >> 62)
                goto LABEL_253;
              v200 = *(_QWORD *)((v326 & 0xFFFFFFFFFFFFF8) + 0x10);
              goto LABEL_195;
            }
            if (v39 < 0)
              v169 = v39;
            else
              v169 = v39 & 0xFFFFFFFFFFFFFF8;
            v170 = swift_bridgeObjectRetain(v39);
            v122 = _CocoaArrayWrapper.subscript.getter(0, v81, v169, v170);
            v150 = v171;
            v105 = v172;
            v81 = v173;
            swift_bridgeObjectRelease(v39);
            if ((v81 & 1) == 0)
              goto LABEL_172;
LABEL_173:
            v175 = type metadata accessor for __ContiguousArrayStorageBase(0);
            v176 = swift_unknownObjectRetain_n(v122, 2);
            v177 = (_QWORD *)swift_dynamicCastClass(v176, v175);
            if (!v177)
            {
              swift_unknownObjectRelease(v122);
              v177 = _swiftEmptyArrayStorage;
            }
            v178 = v177[2];
            swift_release(v177);
            if (!__OFSUB__((unint64_t)v81 >> 1, v105))
            {
              v149 = v122;
              if (v178 == ((unint64_t)v81 >> 1) - v105)
              {
                v174 = (_QWORD *)swift_dynamicCastClass(v122, v175);
                if (!v174)
                {
                  swift_unknownObjectRelease(v122);
                  v174 = _swiftEmptyArrayStorage;
                }
                goto LABEL_179;
              }
LABEL_345:
              swift_unknownObjectRelease(v149);
              goto LABEL_172;
            }
LABEL_344:
            __break(1u);
            goto LABEL_345;
          }
          v320 = v38;
          v323[0] = _swiftEmptyArrayStorage;
          v33 = (uint64_t)v323;
          v104 = specialized ContiguousArray.reserveCapacity(_:)(v159);
          if ((v159 & 0x8000000000000000) == 0)
            break;
LABEL_335:
          __break(1u);
LABEL_336:
          __break(1u);
LABEL_337:
          __break(1u);
LABEL_338:
          __break(1u);
LABEL_339:
          __break(1u);
        }
        if (v24 <= v39)
          v160 = v39;
        else
          v160 = v24;
        v38 = v160 - v24;
        v39 = v105 + 8 * v24;
        while (v38)
        {
          v162 = *(char ***)v39;
          v39 += 8;
          v161 = v162;
          if (*v162 == v28)
            v163 = v161;
          else
            v163 = 0;
          swift_retain(v161);
          v33 = (uint64_t)v323;
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v164);
          v24 = *(_QWORD *)(v323[0] + 16);
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v24);
          v165 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v24, v163);
          specialized ContiguousArray._endMutation()(v165);
          --v38;
          if (!--v159)
          {
            v24 = v323[0];
            swift_unknownObjectRelease(v40);
            v38 = v320;
            goto LABEL_159;
          }
        }
        goto LABEL_218;
      }
      v106 = type metadata accessor for CRLBoardItemData();
      v107 = v39;
      do
      {
        v108 = v107 + 1;
        _ArrayBuffer._typeCheckSlowPath(_:)(v107);
        v107 = v108;
      }
      while (v105 != v108);
    }
    v304 = v24;
    v320 = v40;
    if (v38)
    {
      if (v33 < 0)
        v110 = v33;
      else
        v110 = v33 & 0xFFFFFFFFFFFFFF8;
      v111 = swift_bridgeObjectRetain(v33);
      v40 = _CocoaArrayWrapper.subscript.getter(v39, v105, v110, v111);
      v24 = v112;
      v38 = v113;
      v109 = v114;
      swift_bridgeObjectRelease(v33);
    }
    else
    {
      v40 = v33 & 0xFFFFFFFFFFFFFF8;
      v24 = (v33 & 0xFFFFFFFFFFFFFF8) + 32;
      v109 = (2 * v105) | 1;
      swift_bridgeObjectRetain(v33);
      v38 = v39;
    }
    v81 = v109 >> 1;
    v115 = __OFSUB__(v109 >> 1, v38);
    v105 = (v109 >> 1) - v38;
    if (v115)
      goto LABEL_230;
    if (!v105)
    {
      swift_unknownObjectRelease(v40);
      v316 = _swiftEmptyArrayStorage;
LABEL_97:
      v106 = v328;
      v24 = v328 >> 62;
      if (!(v328 >> 62))
      {
        v122 = *(_QWORD *)((v328 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v122 >= v39)
          goto LABEL_99;
        goto LABEL_236;
      }
LABEL_231:
      if (v106 < 0)
        v221 = v106;
      else
        v221 = v106 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v106);
      v222 = _CocoaArrayWrapper.endIndex.getter(v221);
      swift_bridgeObjectRelease(v106);
      if (v222 < 0)
        goto LABEL_350;
      swift_bridgeObjectRetain(v106);
      v122 = _CocoaArrayWrapper.endIndex.getter(v221);
      swift_bridgeObjectRelease(v106);
      if (v122 >= v39)
      {
LABEL_99:
        if (v39 && (v106 & 0xC000000000000001) != 0)
        {
          type metadata accessor for CRLBoardItemData();
          v123 = 0;
          do
          {
            v124 = v123 + 1;
            _ArrayBuffer._typeCheckSlowPath(_:)(v123);
            v123 = v124;
          }
          while (v39 != v124);
        }
        if (v24)
        {
          if (v106 < 0)
            v125 = v106;
          else
            v125 = v106 & 0xFFFFFFFFFFFFFF8;
          v126 = swift_bridgeObjectRetain(v106);
          v33 = _CocoaArrayWrapper.subscript.getter(0, v39, v125, v126);
          v105 = v127;
          v24 = v128;
          v39 = v129;
          swift_bridgeObjectRelease(v106);
          if ((v39 & 1) != 0)
          {
LABEL_111:
            v132 = type metadata accessor for __ContiguousArrayStorageBase(0);
            v133 = swift_unknownObjectRetain_n(v33, 2);
            v134 = (_QWORD *)swift_dynamicCastClass(v133, v132);
            if (!v134)
            {
              swift_unknownObjectRelease(v33);
              v134 = _swiftEmptyArrayStorage;
            }
            v135 = v134[2];
            swift_release(v134);
            if (!__OFSUB__((unint64_t)v39 >> 1, v24))
            {
              v104 = v33;
              if (v135 == ((unint64_t)v39 >> 1) - v24)
              {
                v130 = (_QWORD *)swift_dynamicCastClass(v33, v132);
                v131 = v318;
                if (!v130)
                {
                  swift_unknownObjectRelease(v33);
                  v130 = _swiftEmptyArrayStorage;
                }
                goto LABEL_117;
              }
              goto LABEL_342;
            }
            goto LABEL_341;
          }
        }
        else
        {
          v33 = v106 & 0xFFFFFFFFFFFFFF8;
          v105 = (v106 & 0xFFFFFFFFFFFFFF8) + 32;
          v39 = (2 * v39) | 1;
          swift_bridgeObjectRetain(v106);
          if ((v39 & 1) != 0)
            goto LABEL_111;
        }
        goto LABEL_110;
      }
LABEL_236:
      __break(1u);
LABEL_237:
      if (v122 < 0)
        v223 = v122;
      else
        v223 = v122 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v122);
      v150 = _CocoaArrayWrapper.endIndex.getter(v223);
      swift_bridgeObjectRelease(v122);
      if (v150 < v81)
        goto LABEL_351;
      swift_bridgeObjectRetain(v122);
      v105 = _CocoaArrayWrapper.endIndex.getter(v223);
      swift_bridgeObjectRelease(v122);
      if (v105 < v81)
        goto LABEL_352;
      swift_bridgeObjectRetain(v122);
      v39 = _CocoaArrayWrapper.endIndex.getter(v223);
      swift_bridgeObjectRelease(v122);
      if (v39 >= v150)
        goto LABEL_133;
      __break(1u);
LABEL_244:
      __break(1u);
LABEL_245:
      __break(1u);
LABEL_246:
      __break(1u);
      goto LABEL_247;
    }
    v323[0] = _swiftEmptyArrayStorage;
    v33 = (uint64_t)v323;
    v104 = specialized ContiguousArray.reserveCapacity(_:)(v105);
    if (v105 < 0)
    {
      __break(1u);
      goto LABEL_335;
    }
    v116 = v38 <= v81 ? v81 : v38;
    v81 = v116 - v38;
    v117 = (char ***)(v24 + 8 * v38);
    while (v81)
    {
      v119 = *v117++;
      v118 = v119;
      if (*v119 == v28)
        v24 = (uint64_t)v118;
      else
        v24 = 0;
      swift_retain(v118);
      v33 = (uint64_t)v323;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v120);
      v38 = *(_QWORD *)(v323[0] + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v38);
      v121 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v38, v24);
      specialized ContiguousArray._endMutation()(v121);
      --v81;
      if (!--v105)
      {
        v316 = (_QWORD *)v323[0];
        swift_unknownObjectRelease(v40);
        goto LABEL_97;
      }
    }
    __break(1u);
LABEL_218:
    __break(1u);
LABEL_219:
    __break(1u);
LABEL_220:
    __break(1u);
LABEL_221:
    v81 = v40;
    v218 = v24;
    v219 = v33 < 0 ? v33 : v33 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v33);
    v105 = _CocoaArrayWrapper.endIndex.getter(v219);
    swift_bridgeObjectRelease(v33);
    if (v105 < v39)
      break;
    swift_bridgeObjectRetain(v33);
    v220 = _CocoaArrayWrapper.endIndex.getter(v219);
    swift_bridgeObjectRelease(v33);
    if (v220 < v39)
      goto LABEL_349;
    swift_bridgeObjectRetain(v33);
    v106 = _CocoaArrayWrapper.endIndex.getter(v219);
    swift_bridgeObjectRelease(v33);
    v24 = v218;
    v40 = v81;
    if (v106 < v105)
    {
      __break(1u);
LABEL_228:
      __break(1u);
LABEL_229:
      __break(1u);
LABEL_230:
      __break(1u);
      goto LABEL_231;
    }
  }
  __break(1u);
LABEL_349:
  __break(1u);
LABEL_350:
  __break(1u);
LABEL_351:
  __break(1u);
LABEL_352:
  __break(1u);
LABEL_353:
  __break(1u);
LABEL_354:
  __break(1u);
LABEL_355:
  swift_retain(v28);
  sub_100757E04(&_mh_execute_header, (uint64_t)"getBoardDataStoreChangeSet(freehandDrawingBucketManager:ancestorDependencyProvider:)", 84, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardChangeSet.swift", 89, 2, 483, "Non-board data found associted with boardUUID", 45, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Non-board data found associted with boardUUID");
  sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"getBoardDataStoreChangeSet(freehandDrawingBucketManager:ancestorDependencyProvider:)", 84, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardChangeSet.swift", 89, 2u, 483, (uint64_t)"Non-board data found associted with boardUUID", 45, 2u);
LABEL_357:
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v295, *(Swift::String *)&v296);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
  __break(1u);
}

void sub_1005F6794(uint64_t a1, uint64_t a2)
{
  uint64_t *v3;
  _QWORD *v4;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  _BYTE v14[24];
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;

  sub_1004E90B0(a2, (uint64_t)v15);
  v3 = (uint64_t *)(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_boardAuxiliaryChanges);
  swift_beginAccess(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_boardAuxiliaryChanges, v14, 33, 0);
  v4 = (_QWORD *)*v3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  *v3 = (uint64_t)v4;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v4 = sub_100D10C24(0, v4[2] + 1, 1, v4);
    *v3 = (uint64_t)v4;
  }
  v7 = v4[2];
  v6 = v4[3];
  if (v7 >= v6 >> 1)
    *v3 = (uint64_t)sub_100D10C24((_QWORD *)(v6 > 1), v7 + 1, 1, v4);
  v8 = v16;
  v9 = v17;
  v10 = sub_1004CB9AC((uint64_t)v15, v16);
  __chkstk_darwin(v10);
  v12 = &v14[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *))(v13 + 16))(v12);
  sub_1005C46A8(v7, (uint64_t)v12, v3, v8, v9);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v15);
  swift_endAccess(v14);
  if (*(uint64_t *)(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_lockCounter) <= 0)
    sub_1005F44D4();
}

void sub_1005F68FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _BYTE v5[24];

  swift_beginAccess(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_boardAuxiliaryChanges, v5, 33, 0);
  swift_bridgeObjectRetain(a2);
  sub_1006202E4(v4);
  swift_endAccess(v5);
  if (*(uint64_t *)(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_lockCounter) <= 0)
    sub_1005F44D4();
}

uint64_t sub_1005F6980(uint64_t a1, char a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  char v5;
  _QWORD *v11;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t result;
  __int128 v24[2];
  _BYTE v25[24];
  _QWORD v26[5];

  sub_1004E90B0((uint64_t)a5, (uint64_t)v26);
  v11 = (_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_coalescableBoardAuxiliaryChanges);
  swift_beginAccess(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_coalescableBoardAuxiliaryChanges, v25, 33, 0);
  swift_bridgeObjectRetain(a4);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v11);
  *(_QWORD *)&v24[0] = *v11;
  v13 = *(_QWORD *)&v24[0];
  *v11 = 0x8000000000000000;
  v15 = sub_10084303C(a2, a3, a4);
  v16 = *(_QWORD *)(v13 + 16);
  v17 = (v14 & 1) == 0;
  v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
    goto LABEL_12;
  }
  v5 = v14;
  if (*(_QWORD *)(v13 + 24) >= v18)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_6;
LABEL_12:
    sub_10082FDAC();
    v13 = *(_QWORD *)&v24[0];
    goto LABEL_6;
  }
  sub_10081C098(v18, isUniquelyReferenced_nonNull_native);
  v13 = *(_QWORD *)&v24[0];
  v19 = sub_10084303C(a2, a3, a4);
  if ((v5 & 1) != (v20 & 1))
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v26);
    result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for CRLBoardCoalescableAuxiliaryChangeIdentity);
    __break(1u);
    return result;
  }
  v15 = v19;
LABEL_6:
  v21 = *v11;
  *v11 = v13;
  swift_bridgeObjectRelease(v21);
  v22 = (_QWORD *)*v11;
  if ((v5 & 1) == 0)
  {
    sub_1004E90B0((uint64_t)v26, (uint64_t)v24);
    sub_10082B69C(v15, a2, a3, a4, v24, v22);
    swift_bridgeObjectRetain(a4);
  }
  sub_1004EA5C8((_QWORD *)(v22[7] + 40 * v15), a5);
  swift_endAccess(v25);
  swift_bridgeObjectRelease(a4);
  if (*(uint64_t *)(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_lockCounter) <= 0)
    sub_1005F44D4();
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v26);
}

uint64_t sub_1005F6B50@<X0>(char *a1@<X0>, double *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  __n128 v19;
  void (*v20)(char *, uint64_t, __n128);
  char *v21;
  __n128 v22;
  uint64_t v23;
  double *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  unint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t inited;
  uint64_t v45;
  id v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  __n128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  void *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  unint64_t *v81;
  unint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  __n128 v86;
  int *v87;
  uint64_t *v88;
  uint64_t v89;
  char **v90;
  unint64_t v91;
  CKRecordID v92;
  Swift::String v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  char *v100;
  double *v101;
  uint64_t v102;
  uint64_t v103;
  void (*v104)(char *);
  char *v105;
  uint64_t v106;
  _QWORD v107[3];
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _BYTE v112[24];
  char v113[24];
  _QWORD *v114;
  char v115[24];
  char v116[24];
  char v117[32];

  v3 = v2;
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v94 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v94 - v11;
  if (!sub_1005F155C() || *(uint64_t *)&a1[OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_lockCounter] > 0)
  {
    v13 = type metadata accessor for CRLBoardPeerChangeSet(0);
    return (*(uint64_t (**)(double *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a2, 1, 1, v13);
  }
  v101 = a2;
  v102 = 0x2000400000000;
  v104 = *(void (**)(char *))(v7 + 16);
  v105 = &a1[OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_boardIdentifier];
  v104(v12);
  v98 = OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_undoableModifiedItemDatas;
  v15 = *(_QWORD *)&a1[OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_undoableModifiedItemDatas];
  v16 = *(_QWORD *)(v15 + 16);
  v106 = 0x1000000000000;
  v103 = v6;
  if (v16)
  {
    swift_bridgeObjectRetain(v15);
    v17 = sub_100842EFC((uint64_t)v12);
    if ((v18 & 1) != 0)
    {
      v96 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 8 * v17);
      swift_retain(v96);
      v19 = swift_bridgeObjectRelease();
      v20 = *(void (**)(char *, uint64_t, __n128))(v7 + 8);
      v20(v12, v6, v19);
      v21 = &a1[OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_snapshots];
      v22 = swift_beginAccess(&a1[OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_snapshots], &v111, 0, 0);
      v23 = *(_QWORD *)v21;
      v24 = v101;
      if (v23)
      {
        ((void (*)(char *, char *, uint64_t, __n128))v104)(v9, v105, v6, v22);
        v25 = v106;
        if (*(_QWORD *)(v23 + 16))
        {
          v26 = v96;
          swift_retain(v96);
          swift_bridgeObjectRetain(v23);
          v27 = sub_100842EFC((uint64_t)v9);
          if ((v28 & 1) != 0)
          {
            v29 = *(_QWORD *)(*(_QWORD *)(v23 + 56) + 16 * v27);
            v30 = swift_unknownObjectRetain(v29);
            v20(v9, v103, v30);
            swift_bridgeObjectRelease();
            v31 = type metadata accessor for CRLBoard(0);
            v32 = swift_dynamicCastClass(v29, v31);
            if (v32)
            {
              v95 = v29;
              v33 = v96;
              v34 = *(_QWORD *)(v96 + OBJC_IVAR____TtC8Freeform19CRLTransactableData_data);
              if ((v34 & 0x8000000000000000) != 0)
              {
LABEL_31:
                sub_100757E04(&_mh_execute_header, (uint64_t)"getBoardPeerChangeSet()", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardChangeSet.swift", 89, 2, 642, "Non-board data found associted with boardUUID", 45, 2u, (uint64_t)_swiftEmptyArrayStorage);
                sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Non-board data found associted with boardUUID");
                sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"getBoardPeerChangeSet()", 23, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardChangeSet.swift", 89, 2u, 642, (uint64_t)"Non-board data found associted with boardUUID", 45, 2u);
                SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v92, v93);
                result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
                __break(1u);
                return result;
              }
              v35 = *(_QWORD *)(v32 + OBJC_IVAR____TtC8Freeform8CRLBoard_store);
              v106 = *(_QWORD *)(v34 + 24);
              v102 = *(_QWORD *)(v34 + 32);
              v36 = *(void **)(v35 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_crdtContext);
              v97 = *(_QWORD *)(v34 + 40);
              v37 = *(_QWORD *)(v32 + OBJC_IVAR____TtC8Freeform8CRLBoard_data);
              swift_retain(v34);
              v38 = v36;
              swift_retain(v37);
              v40 = sub_100DD08A4(v39, (uint64_t)v38);
              if (v3)
              {
                v100 = v38;
                swift_release(v37);
                if (qword_1013DD888 != -1)
                  swift_once(&qword_1013DD888, sub_100A05DE4);
                swift_beginAccess(&static OS_os_log.realTimeSync, &v110, 0, 0);
                v42 = (void *)static OS_os_log.realTimeSync;
                v43 = sub_1004B804C((uint64_t *)&unk_1013E0180);
                inited = swift_initStackObject(v43, &v109);
                *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
                swift_getErrorValue(v3, &v108, v107);
                v99 = v107[1];
                v45 = v107[2];
                v46 = v42;
                v47 = Error.localizedDescription.getter(v99, v45);
                v99 = v48;
                *(_QWORD *)(inited + 56) = &type metadata for String;
                v49 = sub_1004CFC2C();
                *(_QWORD *)(inited + 64) = v49;
                *(_QWORD *)(inited + 32) = v47;
                *(_QWORD *)(inited + 40) = v99;
                v50 = static os_log_type_t.error.getter(v49);
                v51 = v46;
                sub_100A06EBC((uint64_t)v46, &_mh_execute_header, v50, "Failed to serialize delta for board with error: %@", 50, 2, inited);
                v33 = v96;
                swift_release(v96);
                swift_release(v34);
                swift_unknownObjectRelease(v95);

                swift_setDeallocating(inited);
                v52 = sub_1004B804C(&qword_1013E0190);
                swift_arrayDestroy(inited + 32, 1, v52);

                swift_errorRelease(v3);
                v99 = 0xF000000000000000;
                v100 = 0;
              }
              else
              {
                v99 = v41;
                v100 = v40;
                swift_release(v33);
                swift_release(v34);
                swift_unknownObjectRelease(v95);

                swift_release(v37);
              }
            }
            else
            {
              swift_unknownObjectRelease(v29);
              v33 = v96;
              swift_release(v96);
              v99 = 0xF000000000000000;
              v100 = 0;
              v97 = v25;
            }
          }
          else
          {
            ((void (*)(char *, uint64_t))v20)(v9, v103);
            swift_release(v26);
            swift_bridgeObjectRelease();
            v99 = 0xF000000000000000;
            v100 = 0;
            v97 = v25;
            v33 = v26;
          }
        }
        else
        {
          ((void (*)(char *, uint64_t))v20)(v9, v6);
          v99 = 0xF000000000000000;
          v100 = 0;
          v97 = v25;
          v33 = v96;
        }
      }
      else
      {
        v99 = 0xF000000000000000;
        v100 = 0;
        v97 = v106;
        v33 = v96;
      }
    }
    else
    {
      v53 = swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v12, v6, v53);
      v33 = 0;
      v99 = 0xF000000000000000;
      v100 = 0;
      v97 = v106;
      v24 = v101;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    v33 = 0;
    v99 = 0xF000000000000000;
    v100 = 0;
    v97 = 0x1000000000000;
    v24 = v101;
  }
  swift_bridgeObjectRetain(*(_QWORD *)&a1[OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_addedItemDatas]);
  sub_1005EFC98(v54);
  v56 = v55;
  swift_bridgeObjectRelease();
  swift_retain(a1);
  v101 = sub_1005FBA8C(v56, a1);
  swift_bridgeObjectRelease();
  swift_release(a1);
  v57 = *(_QWORD *)&a1[v98];
  v58 = &a1[OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_snapshots];
  swift_beginAccess(&a1[OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_snapshots], v117, 0, 0);
  v60 = *(_QWORD *)v58;
  if (!v60)
  {
    swift_bridgeObjectRetain(v57);
    sub_1004BE2FC((uint64_t)v100, v99);
    __break(1u);
    goto LABEL_31;
  }
  __chkstk_darwin(v59);
  swift_bridgeObjectRetain(v57);
  swift_bridgeObjectRetain(v60);
  sub_1005F9ADC(v57, (void (*)(char *, uint64_t, __n128))sub_1005FC100);
  v98 = v61;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain(*(_QWORD *)&a1[OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedItemDatas]);
  v63 = sub_1005F08C0(v62);
  v64 = sub_100AF7994(v63);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v65 = &a1[OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_realTimePeerCreatedItemDatas];
  swift_beginAccess(&a1[OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_realTimePeerCreatedItemDatas], v116, 0, 0);
  swift_bridgeObjectRetain(*(_QWORD *)v65);
  v67 = sub_1005F08C0(v66);
  v68 = sub_100AF7994(v67);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain(*(_QWORD *)&a1[OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedAsOrphanItemIDs]);
  v70 = sub_100CDEC3C(v69, v68);
  swift_bridgeObjectRelease();
  v71 = &a1[OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_realTimePeerDeletedItemIds];
  swift_beginAccess(&a1[OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_realTimePeerDeletedItemIds], v115, 0, 0);
  v72 = *(_QWORD *)v71;
  if (*(_QWORD *)(v72 + 16) <= *(_QWORD *)(v70 + 16) >> 3)
  {
    v114 = (_QWORD *)v70;
    swift_bridgeObjectRetain(v72);
    sub_100DB6134(v75);
    swift_bridgeObjectRelease();
    v74 = v114;
  }
  else
  {
    swift_bridgeObjectRetain(v72);
    v74 = sub_100DB730C(v73, v70);
    swift_bridgeObjectRelease();
  }
  if (v74[2] <= *(_QWORD *)(v64 + 16) >> 3)
  {
    v114 = (_QWORD *)v64;
    sub_100DB6134((uint64_t)v74);
    swift_bridgeObjectRelease();
    v76 = v114;
  }
  else
  {
    v76 = sub_100DB730C((uint64_t)v74, v64);
    swift_bridgeObjectRelease();
  }
  v77 = &a1[OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedNewlyCreatedItemIds];
  swift_beginAccess(&a1[OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedNewlyCreatedItemIds], &v114, 0, 0);
  swift_bridgeObjectRetain(*(_QWORD *)v77);
  v79 = sub_100CA03B4(v78, (uint64_t)v76);
  v80 = sub_1005FF460(v79);
  swift_bridgeObjectRelease();
  v81 = (unint64_t *)&a1[OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_coalescableBoardAuxiliaryChanges];
  swift_beginAccess(&a1[OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_coalescableBoardAuxiliaryChanges], v113, 1, 0);
  v82 = *v81;
  v83 = &a1[OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_boardAuxiliaryChanges];
  swift_beginAccess(v83, v112, 33, 0);
  swift_bridgeObjectRetain(v82);
  sub_10062046C(v84);
  swift_endAccess(v112);
  *v81 = sub_1008D52D0((uint64_t)_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease();
  v85 = *(_QWORD *)v83;
  swift_bridgeObjectRetain(*(_QWORD *)v83);
  swift_release(v33);
  *(_QWORD *)v83 = _swiftEmptyArrayStorage;
  v86 = swift_bridgeObjectRelease();
  ((void (*)(double *, char *, uint64_t, __n128))v104)(v24, v105, v103, v86);
  v87 = (int *)type metadata accessor for CRLBoardPeerChangeSet(0);
  v88 = (uint64_t *)((char *)v24 + v87[5]);
  v89 = v102;
  *v88 = v106;
  v88[1] = v89;
  v88[2] = v97;
  v90 = (char **)((char *)v24 + v87[6]);
  v91 = v99;
  *v90 = v100;
  v90[1] = (char *)v91;
  *(_QWORD *)((char *)v24 + v87[7]) = v98;
  *(_QWORD *)((char *)v24 + v87[8]) = v101;
  *(_QWORD *)((char *)v24 + v87[9]) = v80;
  *(_QWORD *)((char *)v24 + v87[10]) = v85;
  return (*(uint64_t (**)(double *, _QWORD, uint64_t, int *))(*((_QWORD *)v87 - 1) + 56))(v24, 0, 1, v87);
}

double sub_1005F7574(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double result;
  uint64_t v18;
  _QWORD *v19;
  _QWORD aBlock[5];
  uint64_t v21;

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_accessQueue);
  v11 = swift_allocObject(&unk_101271768, 32, 7);
  *(_QWORD *)(v11 + 16) = v1;
  *(_QWORD *)(v11 + 24) = a1;
  aBlock[4] = sub_1005FC134;
  v21 = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1005D2FC0;
  aBlock[3] = &unk_101271780;
  v12 = _Block_copy(aBlock);
  swift_retain(v1);
  v13 = swift_bridgeObjectRetain(a1);
  static DispatchQoS.unspecified.getter(v13);
  v19 = _swiftEmptyArrayStorage;
  v14 = sub_1004B7878((unint64_t *)&qword_1013E1D20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v15 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
  v16 = sub_1005FC154((unint64_t *)&qword_1013E1D30, (uint64_t *)&unk_1013DFBF0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v19, v15, v16, v3, v14);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v6, v12);
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  *(_QWORD *)&result = swift_release(v21).n128_u64[0];
  return result;
}

void sub_1005F776C(uint64_t a1, unint64_t a2)
{
  sub_1005F77A8(a2);
  if (*(uint64_t *)(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_lockCounter) <= 0)
    sub_1005F44D4();
}

void sub_1005F77A8(unint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  id v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  void (*v25)(void);
  uint64_t v26;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v28;
  uint64_t v29;
  _BOOL8 v30;
  uint64_t v31;
  char v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  _BOOL8 v40;
  uint64_t v41;
  char v42;
  unint64_t v43;
  char v44;
  uint64_t v45;
  BOOL v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __n128 v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  _BYTE v63[24];

  v3 = type metadata accessor for UUID(0);
  v59 = *(_QWORD *)(v3 - 8);
  v60 = v3;
  __chkstk_darwin(v3);
  v61 = (uint64_t)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v58 = (uint64_t)&v54 - v6;
  v7 = type metadata accessor for DispatchPredicate(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (uint64_t *)((char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = *(void **)((char *)v1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_accessQueue);
  *v11 = v12;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v8 + 104))(v11, enum case for DispatchPredicate.onQueue(_:), v7, v9);
  v13 = v12;
  v14 = _dispatchPreconditionTest(_:)(v11);
  (*(void (**)(_QWORD *, uint64_t))(v8 + 8))(v11, v7);
  if ((v14 & 1) == 0)
  {
LABEL_42:
    __break(1u);
LABEL_43:
    if ((a1 & 0x8000000000000000) != 0)
      v53 = a1;
    else
      v53 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v15 = _CocoaArrayWrapper.endIndex.getter(v53);
    if (v15)
      goto LABEL_4;
LABEL_47:
    swift_bridgeObjectRelease(a1);
    return;
  }
  v57 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_lockCounter);
  if (a1 >> 62)
    goto LABEL_43;
  v15 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  if (!v15)
    goto LABEL_47;
LABEL_4:
  v55 = (_QWORD *)((char *)v1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_peerServerSyncedItemDatas);
  v16 = (_QWORD *)((char *)v1
                 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_peerServerSyncedItemDatasToProcessAfterUnlock);
  v56 = a1 & 0xC000000000000001;
  v17 = 4;
  while (1)
  {
    v21 = v17 - 4;
    if (v56)
    {
      v22 = specialized _ArrayBuffer._getElementSlowPath(_:)(v17 - 4, a1);
      v23 = v17 - 3;
      if (__OFADD__(v21, 1))
        goto LABEL_37;
    }
    else
    {
      v22 = *(_QWORD *)(a1 + 8 * v17);
      swift_retain(v22);
      v23 = v17 - 3;
      if (__OFADD__(v21, 1))
      {
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
    }
    v24 = a1;
    v25 = *(void (**)(void))(*(_QWORD *)v22 + 256);
    if (v57 <= 0)
      break;
    v26 = v61;
    v25();
    swift_beginAccess(v16, v63, 33, 0);
    swift_retain(v22);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v16);
    v62 = (_QWORD *)*v16;
    v1 = v62;
    *v16 = 0x8000000000000000;
    a1 = sub_100842EFC(v26);
    v29 = v1[2];
    v30 = (v28 & 1) == 0;
    v31 = v29 + v30;
    if (__OFADD__(v29, v30))
      goto LABEL_38;
    v32 = v28;
    if (v1[3] >= v31)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v1 = v62;
        if ((v28 & 1) == 0)
          goto LABEL_26;
      }
      else
      {
        sub_10082FDA0();
        v1 = v62;
        if ((v32 & 1) == 0)
          goto LABEL_26;
      }
    }
    else
    {
      sub_10081C08C(v31, isUniquelyReferenced_nonNull_native);
      v33 = sub_100842EFC(v61);
      if ((v32 & 1) != (v34 & 1))
        goto LABEL_48;
      a1 = v33;
      v1 = v62;
      if ((v32 & 1) == 0)
      {
LABEL_26:
        v1[(a1 >> 6) + 8] |= 1 << a1;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v59 + 16))(v1[6] + *(_QWORD *)(v59 + 72) * a1, v61, v60);
        *(_QWORD *)(v1[7] + 8 * a1) = v22;
        v45 = v1[2];
        v46 = __OFADD__(v45, 1);
        v47 = v45 + 1;
        if (v46)
          goto LABEL_40;
        v1[2] = v47;
        goto LABEL_6;
      }
    }
    v18 = v1[7];
    swift_release(*(_QWORD *)(v18 + 8 * a1));
    *(_QWORD *)(v18 + 8 * a1) = v22;
LABEL_6:
    v19 = *v16;
    *v16 = v1;
    v20 = swift_bridgeObjectRelease(v19);
    (*(void (**)(uint64_t, uint64_t, __n128))(v59 + 8))(v61, v60, v20);
LABEL_7:
    swift_endAccess(v63);
    a1 = v24;
    swift_release(v22);
    ++v17;
    if (v23 == v15)
      goto LABEL_47;
  }
  v35 = v58;
  v25();
  v36 = v55;
  swift_beginAccess(v55, v63, 33, 0);
  swift_retain(v22);
  v37 = swift_isUniquelyReferenced_nonNull_native(*v36);
  v62 = (_QWORD *)*v36;
  v1 = v62;
  *v36 = 0x8000000000000000;
  a1 = sub_100842EFC(v35);
  v39 = v1[2];
  v40 = (v38 & 1) == 0;
  v41 = v39 + v40;
  if (__OFADD__(v39, v40))
    goto LABEL_39;
  v42 = v38;
  if (v1[3] >= v41)
  {
    if ((v37 & 1) != 0)
    {
      v1 = v62;
      if ((v38 & 1) == 0)
        goto LABEL_34;
    }
    else
    {
      sub_10082FDA0();
      v1 = v62;
      if ((v42 & 1) == 0)
        goto LABEL_34;
    }
    goto LABEL_30;
  }
  sub_10081C08C(v41, v37);
  v43 = sub_100842EFC(v58);
  if ((v42 & 1) == (v44 & 1))
  {
    a1 = v43;
    v1 = v62;
    if ((v42 & 1) == 0)
    {
LABEL_34:
      v1[(a1 >> 6) + 8] |= 1 << a1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v59 + 16))(v1[6] + *(_QWORD *)(v59 + 72) * a1, v58, v60);
      *(_QWORD *)(v1[7] + 8 * a1) = v22;
      v49 = v1[2];
      v46 = __OFADD__(v49, 1);
      v50 = v49 + 1;
      if (v46)
        goto LABEL_41;
      v1[2] = v50;
      goto LABEL_36;
    }
LABEL_30:
    v48 = v1[7];
    swift_release(*(_QWORD *)(v48 + 8 * a1));
    *(_QWORD *)(v48 + 8 * a1) = v22;
LABEL_36:
    v51 = *v55;
    *v55 = v1;
    v52 = swift_bridgeObjectRelease(v51);
    (*(void (**)(uint64_t, uint64_t, __n128))(v59 + 8))(v58, v60, v52);
    goto LABEL_7;
  }
LABEL_48:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v60);
  __break(1u);
}

uint64_t sub_1005F7C94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1004B84A4(v0 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_boardIdentifier, type metadata accessor for CRLBoardIdentifier);
  v1 = v0 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_rootContainerUUID;
  v2 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_peerServerSyncedItemDatas));
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_peerServerSyncedItemDatasToProcessAfterUnlock));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_processingQueue));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_boardAuxiliaryChanges));
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_coalescableBoardAuxiliaryChanges));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_addedItemDatas));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_modifiedItemDatas));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_undoableModifiedItemDatas));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_snapshots));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedItemDatas));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedNewlyCreatedItemIds));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedFreehandItemIDsSubset));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedAsOrphanItemIDs));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_uncommittedChangeAvailablePublisher));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_realTimePeerCreatedItemDatas));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_realTimePeerDeletedItemIds));
  return v0;
}

uint64_t sub_1005F7E00()
{
  uint64_t v0;

  sub_1005F7C94();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1005F7E24()
{
  return type metadata accessor for CRLBoardChangeSet(0);
}

uint64_t type metadata accessor for CRLBoardChangeSet(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1013E71E0, (uint64_t)&nominal type descriptor for CRLBoardChangeSet);
}

uint64_t sub_1005F7E40(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[20];

  result = type metadata accessor for CRLBoardIdentifierStorage(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for UUID(319);
    if (v4 <= 0x3F)
    {
      v5[1] = *(_QWORD *)(result - 8) + 64;
      v5[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
      v5[3] = (char *)&value witness table for Builtin.Int64 + 64;
      v5[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v5[5] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v5[6] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v5[7] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v5[8] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v5[9] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v5[10] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v5[11] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v5[12] = "\b";
      v5[13] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v5[14] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v5[15] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v5[16] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v5[17] = (char *)&value witness table for Builtin.NativeObject + 64;
      v5[18] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v5[19] = (char *)&value witness table for Builtin.BridgeObject + 64;
      return swift_updateClassMetadata2(a1, 256, 20, v5, a1 + 80);
    }
  }
  return result;
}

uint64_t sub_1005F7F24(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t assignWithCopy for CRLBoardCoalescableAuxiliaryChangeIdentity(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t assignWithTake for CRLBoardCoalescableAuxiliaryChangeIdentity(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLBoardCoalescableAuxiliaryChangeIdentity(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLBoardCoalescableAuxiliaryChangeIdentity(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardCoalescableAuxiliaryChangeIdentity()
{
  return &type metadata for CRLBoardCoalescableAuxiliaryChangeIdentity;
}

_QWORD *initializeBufferWithCopyOfBuffer for CRLTransactableData.DataType(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = *a2 & 0x7FFFFFFFFFFFFFFFLL;
  *a1 = *a2;
  swift_retain(v3);
  return a1;
}

double destroy for CRLTransactableData.DataType(_QWORD *a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*a1 & 0x7FFFFFFFFFFFFFFFLL).n128_u64[0];
  return result;
}

uint64_t *assignWithCopy for CRLTransactableData.DataType(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a2 & 0x7FFFFFFFFFFFFFFFLL;
  v4 = *a1;
  *a1 = *a2;
  v5 = v4 & 0x7FFFFFFFFFFFFFFFLL;
  swift_retain(v3);
  swift_release(v5);
  return a1;
}

uint64_t *assignWithTake for CRLTransactableData.DataType(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a1;
  *a1 = *a2;
  swift_release(v3 & 0x7FFFFFFFFFFFFFFFLL);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLTransactableData.DataType(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7F && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 127);
  v3 = (((*(_QWORD *)a1 >> 57) >> 6) | (2 * ((*(_QWORD *)a1 >> 57) & 0x38 | *(_QWORD *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7E)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for CRLTransactableData.DataType(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7E)
  {
    *(_QWORD *)result = a2 - 127;
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 1) & 0x3F | ((-a2 & 0x7F) << 6);
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1005F81F4(_QWORD *a1)
{
  return *a1 >> 63;
}

_QWORD *sub_1005F8200(_QWORD *result)
{
  *result &= ~0x8000000000000000;
  return result;
}

uint64_t *sub_1005F8210(uint64_t *result, uint64_t a2)
{
  *result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 63);
  return result;
}

ValueMetadata *type metadata accessor for CRLTransactableData.DataType()
{
  return &type metadata for CRLTransactableData.DataType;
}

unint64_t sub_1005F8238()
{
  unint64_t result;

  result = qword_1013E7538;
  if (!qword_1013E7538)
  {
    result = swift_getWitnessTable(&unk_100EFE11C, &type metadata for CRLBoardCoalescableAuxiliaryChangeIdentity);
    atomic_store(result, (unint64_t *)&qword_1013E7538);
  }
  return result;
}

uint64_t sub_1005F827C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v8;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(a2);
  v8 = a2;
  sub_1005F86D0(a1, (uint64_t)sub_100B29BA0, 0, isUniquelyReferenced_nonNull_native, (uint64_t)&v8);
  v6 = v8;
  swift_bridgeObjectRelease(0x8000000000000000);
  if (v2)
    swift_bridgeObjectRelease(v6);
  return v6;
}

uint64_t sub_1005F82F8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t *))
{
  uint64_t v4;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v12;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(a2);
  v12 = a2;
  a4(a1, a3, 0, isUniquelyReferenced_nonNull_native, &v12);
  v10 = v12;
  swift_bridgeObjectRelease(0x8000000000000000);
  if (v4)
    swift_bridgeObjectRelease(v10);
  return v10;
}

double sub_1005F8380(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  char isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  double result;
  uint64_t v9;

  if (*(_BYTE *)(a2 + *(_QWORD *)(*(_QWORD *)a2 + 136)) == 1)
  {
    swift_retain(a2);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a3);
    v9 = *a3;
    *a3 = 0x8000000000000000;
    sub_100825D0C(a2, a1, isUniquelyReferenced_nonNull_native);
    v7 = *a3;
    *a3 = v9;
    *(_QWORD *)&result = swift_bridgeObjectRelease(v7).n128_u64[0];
  }
  return result;
}

_QWORD *sub_1005F840C(char a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  void (*v12)(char *, char *, uint64_t);
  char v13;
  uint64_t v14;
  char *v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  char *v20;
  __int128 v21;
  __int128 v23;
  __int128 v24;
  _BYTE v25[24];

  v2 = v1;
  v4 = sub_1004B804C(&qword_101405EC0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v23 - v9;
  v11 = (char *)v2 + *(_QWORD *)(*v2 + 120);
  swift_beginAccess(v11, v25, 0, 0);
  if ((a1 & 1) != 0)
  {
    v12 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v12(v8, v11, v4);
    Capsule.copy()(v4);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    v13 = 0;
  }
  else
  {
    v12 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v12(v10, v11, v4);
    v13 = *((_BYTE *)v2 + *(_QWORD *)(*v2 + 136));
  }
  v14 = v2[2];
  v12(v8, v10, v4);
  v15 = (char *)v2 + *(_QWORD *)(*v2 + 128);
  v16 = *(_OWORD *)v15;
  v23 = *((_OWORD *)v15 + 1);
  v24 = v16;
  v17 = *((_QWORD *)v15 + 4);
  v18 = sub_1004B804C((uint64_t *)&unk_101406AD0);
  v19 = (_QWORD *)swift_allocObject(v18, *(unsigned int *)(v18 + 48), *(unsigned __int16 *)(v18 + 52));
  *((_BYTE *)v19 + *(_QWORD *)(*v19 + 136)) = 0;
  v19[2] = v14;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))((char *)v19 + *(_QWORD *)(*v19 + 120), v8, v4);
  *((_BYTE *)v19 + *(_QWORD *)(*v19 + 136)) = v13;
  v20 = (char *)v19 + *(_QWORD *)(*v19 + 128);
  v21 = v23;
  *(_OWORD *)v20 = v24;
  *((_OWORD *)v20 + 1) = v21;
  *((_QWORD *)v20 + 4) = v17;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  return v19;
}

uint64_t sub_1005F85D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;

  v4 = *(int *)(sub_1004B804C(&qword_1013E7568) + 48);
  v5 = *(int *)(sub_1004B804C(&qword_1013E7570) + 48);
  v6 = type metadata accessor for UUID(0);
  v8 = *(_OWORD *)(a1 + v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  *(_OWORD *)(a2 + v5) = v8;
  return swift_unknownObjectRetain(v8);
}

double sub_1005F865C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double result;

  v4 = *(int *)(sub_1004B804C(&qword_1013E7540) + 48);
  v5 = *(int *)(sub_1004B804C(&qword_1013E7548) + 48);
  v6 = *(_QWORD *)(a1 + v4);
  v7 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a2, a1, v7);
  *(_QWORD *)(a2 + v5) = v6;
  *(_QWORD *)&result = swift_retain(v6).n128_u64[0];
  return result;
}

void sub_1005F86D0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  char v30;
  unint64_t v31;
  uint64_t v32;
  _BOOL8 v33;
  uint64_t v34;
  char v35;
  unint64_t v36;
  char v37;
  _QWORD *v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, char *, uint64_t);

  v10 = type metadata accessor for UUID(0);
  v45 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1004B804C(&qword_1013E7580);
  __chkstk_darwin(v13);
  v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = -1 << *(_BYTE *)(a1 + 32);
  v17 = ~v16;
  v18 = *(_QWORD *)(a1 + 64);
  v19 = -v16;
  v46 = a1;
  v47 = a1 + 64;
  if (v19 < 64)
    v20 = ~(-1 << v19);
  else
    v20 = -1;
  v48 = v17;
  v49 = 0;
  v50 = v20 & v18;
  v51 = a2;
  v52 = a3;
  v44 = a1;
  swift_bridgeObjectRetain(a1);
  v43 = a3;
  swift_retain(a3);
  sub_100CE052C((uint64_t)v15);
  v21 = sub_1004B804C((uint64_t *)&unk_101405F40);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v15, 1, v21) == 1)
  {
LABEL_5:
    swift_release(v43);
    swift_bridgeObjectRelease(v44);
    sub_1004D284C(v46);
    swift_release(v52);
    return;
  }
  v53 = *(void (**)(char *, char *, uint64_t))(v45 + 32);
  while (1)
  {
    v26 = *(int *)(v21 + 48);
    v27 = v10;
    v53(v12, v15, v10);
    v28 = *(_QWORD *)&v15[v26];
    v29 = *(_QWORD **)a5;
    v31 = sub_100842EFC((uint64_t)v12);
    v32 = v29[2];
    v33 = (v30 & 1) == 0;
    v34 = v32 + v33;
    if (__OFADD__(v32, v33))
      break;
    v35 = v30;
    if (v29[3] >= v34)
    {
      if ((a4 & 1) != 0)
      {
        v38 = *(_QWORD **)a5;
        if ((v30 & 1) != 0)
          goto LABEL_7;
      }
      else
      {
        sub_10082CCAC();
        v38 = *(_QWORD **)a5;
        if ((v35 & 1) != 0)
          goto LABEL_7;
      }
    }
    else
    {
      sub_100815638(v34, a4 & 1);
      v36 = sub_100842EFC((uint64_t)v12);
      if ((v35 & 1) != (v37 & 1))
        goto LABEL_22;
      v31 = v36;
      v38 = *(_QWORD **)a5;
      if ((v35 & 1) != 0)
      {
LABEL_7:
        v22 = 8 * v31;
        v23 = *(_QWORD *)(v38[7] + 8 * v31);
        swift_retain(v23);
        v24 = swift_release(v28);
        v10 = v27;
        (*(void (**)(char *, uint64_t, __n128))(v45 + 8))(v12, v27, v24);
        v25 = *(_QWORD *)(*(_QWORD *)a5 + 56);
        swift_release(*(_QWORD *)(v25 + v22));
        *(_QWORD *)(v25 + v22) = v23;
        goto LABEL_8;
      }
    }
    v38[(v31 >> 6) + 8] |= 1 << v31;
    v10 = v27;
    v53((char *)(v38[6] + *(_QWORD *)(v45 + 72) * v31), v12, v27);
    *(_QWORD *)(v38[7] + 8 * v31) = v28;
    v39 = v38[2];
    v40 = __OFADD__(v39, 1);
    v41 = v39 + 1;
    if (v40)
      goto LABEL_21;
    v38[2] = v41;
LABEL_8:
    sub_100CE052C((uint64_t)v15);
    v21 = sub_1004B804C((uint64_t *)&unk_101405F40);
    a4 = 1;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v15, 1, v21) == 1)
      goto LABEL_5;
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v27);
  __break(1u);
}

void sub_1005F8A0C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  uint64_t v28;
  _BOOL8 v29;
  uint64_t v30;
  char v31;
  unint64_t v32;
  char v33;
  _QWORD *v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v49 = type metadata accessor for UUID(0);
  v41 = *(_QWORD *)(v49 - 8);
  __chkstk_darwin(v49);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1004B804C(&qword_1013E7580);
  __chkstk_darwin(v12);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = -1 << *(_BYTE *)(a1 + 32);
  v16 = ~v15;
  v17 = *(_QWORD *)(a1 + 64);
  v18 = -v15;
  v42 = a1;
  v43 = a1 + 64;
  if (v18 < 64)
    v19 = ~(-1 << v18);
  else
    v19 = -1;
  v44 = v16;
  v45 = 0;
  v46 = v19 & v17;
  v47 = a2;
  v48 = a3;
  v40 = a1;
  swift_bridgeObjectRetain(a1);
  v39 = a3;
  swift_retain(a3);
  sub_100CE052C((uint64_t)v14);
  v20 = sub_1004B804C((uint64_t *)&unk_101405F40);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v14, 1, v20) == 1)
  {
LABEL_5:
    swift_release(v39);
    swift_bridgeObjectRelease(v40);
    sub_1004D284C(v42);
    swift_release(v48);
    return;
  }
  v21 = *(void (**)(char *, char *, uint64_t))(v41 + 32);
  while (1)
  {
    v23 = *(int *)(v20 + 48);
    v21(v11, v14, v49);
    v24 = *(_QWORD *)&v14[v23];
    v25 = *a5;
    v27 = sub_100842EFC((uint64_t)v11);
    v28 = *(_QWORD *)(v25 + 16);
    v29 = (v26 & 1) == 0;
    v30 = v28 + v29;
    if (__OFADD__(v28, v29))
      break;
    v31 = v26;
    if (*(_QWORD *)(v25 + 24) >= v30)
    {
      if ((a4 & 1) != 0)
      {
        if ((v26 & 1) != 0)
          goto LABEL_7;
      }
      else
      {
        sub_10082CCAC();
        if ((v31 & 1) != 0)
          goto LABEL_7;
      }
    }
    else
    {
      sub_100815638(v30, a4 & 1);
      v32 = sub_100842EFC((uint64_t)v11);
      if ((v31 & 1) != (v33 & 1))
        goto LABEL_22;
      v27 = v32;
      if ((v31 & 1) != 0)
      {
LABEL_7:
        (*(void (**)(char *, uint64_t))(v41 + 8))(v11, v49);
        v22 = *(_QWORD *)(*a5 + 56);
        swift_release(*(_QWORD *)(v22 + 8 * v27));
        *(_QWORD *)(v22 + 8 * v27) = v24;
        goto LABEL_8;
      }
    }
    v34 = (_QWORD *)*a5;
    *(_QWORD *)(*a5 + 8 * (v27 >> 6) + 64) |= 1 << v27;
    v21((char *)(v34[6] + *(_QWORD *)(v41 + 72) * v27), v11, v49);
    *(_QWORD *)(v34[7] + 8 * v27) = v24;
    v35 = v34[2];
    v36 = __OFADD__(v35, 1);
    v37 = v35 + 1;
    if (v36)
      goto LABEL_21;
    v34[2] = v37;
LABEL_8:
    sub_100CE052C((uint64_t)v14);
    v20 = sub_1004B804C((uint64_t *)&unk_101405F40);
    a4 = 1;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v14, 1, v20) == 1)
      goto LABEL_5;
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v49);
  __break(1u);
}

void sub_1005F8D10(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  char v26;
  unint64_t v27;
  uint64_t v28;
  _BOOL8 v29;
  uint64_t v30;
  char v31;
  unint64_t v32;
  char v33;
  _QWORD *v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v10 = type metadata accessor for UUID(0);
  v50 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1004B804C(&qword_1013E7578);
  __chkstk_darwin(v13);
  v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = -1 << *(_BYTE *)(a1 + 32);
  v17 = ~v16;
  v18 = *(_QWORD *)(a1 + 64);
  v19 = -v16;
  v43 = a1;
  v44 = a1 + 64;
  if (v19 < 64)
    v20 = ~(-1 << v19);
  else
    v20 = -1;
  v45 = v17;
  v46 = 0;
  v47 = v20 & v18;
  v48 = a2;
  v49 = a3;
  v40 = a1;
  swift_bridgeObjectRetain(a1);
  v39 = a3;
  swift_retain(a3);
  sub_100CE0BF4((uint64_t)v15);
  v21 = sub_1004B804C(&qword_1013E7570);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v15, 1, v21) == 1)
  {
LABEL_5:
    swift_release(v39);
    swift_bridgeObjectRelease(v40);
    sub_1004D284C(v43);
    swift_release(v49);
    return;
  }
  v22 = *(void (**)(char *, char *, uint64_t))(v50 + 32);
  while (1)
  {
    v24 = *(int *)(v21 + 48);
    v22(v12, v15, v10);
    v42 = *(_OWORD *)&v15[v24];
    v25 = *(_QWORD **)a5;
    v27 = sub_100842EFC((uint64_t)v12);
    v28 = v25[2];
    v29 = (v26 & 1) == 0;
    v30 = v28 + v29;
    if (__OFADD__(v28, v29))
      break;
    v31 = v26;
    if (v25[3] >= v30)
    {
      if ((a4 & 1) != 0)
      {
        v34 = *(_QWORD **)a5;
        if ((v26 & 1) != 0)
          goto LABEL_7;
      }
      else
      {
        sub_10082C13C();
        v34 = *(_QWORD **)a5;
        if ((v31 & 1) != 0)
          goto LABEL_7;
      }
    }
    else
    {
      sub_100813BF8(v30, a4 & 1);
      v32 = sub_100842EFC((uint64_t)v12);
      if ((v31 & 1) != (v33 & 1))
        goto LABEL_22;
      v27 = v32;
      v34 = *(_QWORD **)a5;
      if ((v31 & 1) != 0)
      {
LABEL_7:
        v41 = *(_OWORD *)(v34[7] + 16 * v27);
        swift_unknownObjectRetain(v41);
        swift_unknownObjectRelease(v42);
        (*(void (**)(char *, uint64_t))(v50 + 8))(v12, v10);
        v23 = *(_QWORD *)(*(_QWORD *)a5 + 56);
        swift_unknownObjectRelease(*(_QWORD *)(v23 + 16 * v27));
        *(_OWORD *)(v23 + 16 * v27) = v41;
        goto LABEL_8;
      }
    }
    v34[(v27 >> 6) + 8] |= 1 << v27;
    v22((char *)(v34[6] + *(_QWORD *)(v50 + 72) * v27), v12, v10);
    *(_OWORD *)(v34[7] + 16 * v27) = v42;
    v35 = v34[2];
    v36 = __OFADD__(v35, 1);
    v37 = v35 + 1;
    if (v36)
      goto LABEL_21;
    v34[2] = v37;
LABEL_8:
    sub_100CE0BF4((uint64_t)v15);
    v21 = sub_1004B804C(&qword_1013E7570);
    a4 = 1;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v15, 1, v21) == 1)
      goto LABEL_5;
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v10);
  __break(1u);
}

void sub_1005F9048(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  char v30;
  unint64_t v31;
  uint64_t v32;
  _BOOL8 v33;
  uint64_t v34;
  char v35;
  unint64_t v36;
  char v37;
  _QWORD *v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, char *, uint64_t);

  v10 = type metadata accessor for UUID(0);
  v45 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1004B804C(&qword_1013E7550);
  __chkstk_darwin(v13);
  v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = -1 << *(_BYTE *)(a1 + 32);
  v17 = ~v16;
  v18 = *(_QWORD *)(a1 + 64);
  v19 = -v16;
  v46 = a1;
  v47 = a1 + 64;
  if (v19 < 64)
    v20 = ~(-1 << v19);
  else
    v20 = -1;
  v48 = v17;
  v49 = 0;
  v50 = v20 & v18;
  v51 = a2;
  v52 = a3;
  v44 = a1;
  swift_bridgeObjectRetain(a1);
  v43 = a3;
  swift_retain(a3);
  sub_100CE0F3C((uint64_t)v15);
  v21 = sub_1004B804C(&qword_1013E7548);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v15, 1, v21) == 1)
  {
LABEL_5:
    swift_release(v43);
    swift_bridgeObjectRelease(v44);
    sub_1004D284C(v46);
    swift_release(v52);
    return;
  }
  v53 = *(void (**)(char *, char *, uint64_t))(v45 + 32);
  while (1)
  {
    v26 = *(int *)(v21 + 48);
    v27 = v10;
    v53(v12, v15, v10);
    v28 = *(_QWORD *)&v15[v26];
    v29 = *(_QWORD **)a5;
    v31 = sub_100842EFC((uint64_t)v12);
    v32 = v29[2];
    v33 = (v30 & 1) == 0;
    v34 = v32 + v33;
    if (__OFADD__(v32, v33))
      break;
    v35 = v30;
    if (v29[3] >= v34)
    {
      if ((a4 & 1) != 0)
      {
        v38 = *(_QWORD **)a5;
        if ((v30 & 1) != 0)
          goto LABEL_7;
      }
      else
      {
        sub_10082FDA0();
        v38 = *(_QWORD **)a5;
        if ((v35 & 1) != 0)
          goto LABEL_7;
      }
    }
    else
    {
      sub_10081C08C(v34, a4 & 1);
      v36 = sub_100842EFC((uint64_t)v12);
      if ((v35 & 1) != (v37 & 1))
        goto LABEL_22;
      v31 = v36;
      v38 = *(_QWORD **)a5;
      if ((v35 & 1) != 0)
      {
LABEL_7:
        v22 = 8 * v31;
        v23 = *(_QWORD *)(v38[7] + 8 * v31);
        swift_retain(v23);
        v24 = swift_release(v28);
        v10 = v27;
        (*(void (**)(char *, uint64_t, __n128))(v45 + 8))(v12, v27, v24);
        v25 = *(_QWORD *)(*(_QWORD *)a5 + 56);
        swift_release(*(_QWORD *)(v25 + v22));
        *(_QWORD *)(v25 + v22) = v23;
        goto LABEL_8;
      }
    }
    v38[(v31 >> 6) + 8] |= 1 << v31;
    v10 = v27;
    v53((char *)(v38[6] + *(_QWORD *)(v45 + 72) * v31), v12, v27);
    *(_QWORD *)(v38[7] + 8 * v31) = v28;
    v39 = v38[2];
    v40 = __OFADD__(v39, 1);
    v41 = v39 + 1;
    if (v40)
      goto LABEL_21;
    v38[2] = v41;
LABEL_8:
    sub_100CE0F3C((uint64_t)v15);
    v21 = sub_1004B804C(&qword_1013E7548);
    a4 = 1;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v15, 1, v21) == 1)
      goto LABEL_5;
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v27);
  __break(1u);
}

_QWORD *sub_1005F9384(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *result;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  unint64_t i;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  char *v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  char *v34;
  __int128 v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int64_t v50;
  __int128 v51;
  __int128 v52;
  int v53;
  unint64_t v54;
  char v55[32];
  uint64_t v56;

  v2 = sub_1004B804C(&qword_101405EC0);
  v46 = *(_QWORD *)(v2 - 8);
  v47 = v2;
  v3 = __chkstk_darwin(v2);
  v45 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v44 = (char *)&v39 - v5;
  sub_1004B804C((uint64_t *)&unk_101405F30);
  result = (_QWORD *)static _DictionaryStorage.copy(original:)(a1);
  v7 = 0;
  v48 = a1;
  v10 = *(_QWORD *)(a1 + 64);
  v9 = a1 + 64;
  v8 = v10;
  v11 = 1 << *(_BYTE *)(v9 - 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v8;
  v40 = v9;
  v41 = (unint64_t)(v11 + 63) >> 6;
  v42 = result + 8;
  v43 = result;
  v14 = v46;
  v15 = v47;
  v17 = v44;
  v16 = v45;
  if (!v13)
    goto LABEL_5;
LABEL_4:
  v49 = (v13 - 1) & v13;
  v50 = v7;
  for (i = __clz(__rbit64(v13)) | (v7 << 6); ; i = __clz(__rbit64(v20)) + (v21 << 6))
  {
    v54 = i;
    v23 = 8 * i;
    v24 = *(_QWORD *)(v48 + 56);
    v56 = *(_QWORD *)(*(_QWORD *)(v48 + 48) + 8 * i);
    v25 = *(_QWORD **)(v24 + 8 * i);
    v26 = (char *)v25 + *(_QWORD *)(*v25 + 120);
    swift_beginAccess(v26, v55, 0, 0);
    v27 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
    v27(v17, v26, v15);
    v53 = *((unsigned __int8 *)v25 + *(_QWORD *)(*v25 + 136));
    v28 = v25[2];
    v27(v16, v17, v15);
    v29 = (char *)v25 + *(_QWORD *)(*v25 + 128);
    v30 = *(_OWORD *)v29;
    v51 = *((_OWORD *)v29 + 1);
    v52 = v30;
    v31 = *((_QWORD *)v29 + 4);
    v32 = sub_1004B804C((uint64_t *)&unk_101406AD0);
    v33 = (_QWORD *)swift_allocObject(v32, *(unsigned int *)(v32 + 48), *(unsigned __int16 *)(v32 + 52));
    *((_BYTE *)v33 + *(_QWORD *)(*v33 + 136)) = 0;
    v33[2] = v28;
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))((char *)v33 + *(_QWORD *)(*v33 + 120), v16, v15);
    *((_BYTE *)v33 + *(_QWORD *)(*v33 + 136)) = v53;
    v34 = (char *)v33 + *(_QWORD *)(*v33 + 128);
    v35 = v51;
    *(_OWORD *)v34 = v52;
    *((_OWORD *)v34 + 1) = v35;
    *((_QWORD *)v34 + 4) = v31;
    (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v15);
    result = v43;
    *(_QWORD *)((char *)v42 + ((v54 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v54;
    *(_QWORD *)(result[6] + v23) = v56;
    *(_QWORD *)(result[7] + v23) = v33;
    v36 = result[2];
    v37 = __OFADD__(v36, 1);
    v38 = v36 + 1;
    if (v37)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    result[2] = v38;
    v13 = v49;
    v7 = v50;
    if (v49)
      goto LABEL_4;
LABEL_5:
    v19 = v7 + 1;
    if (__OFADD__(v7, 1))
      goto LABEL_24;
    if (v19 >= v41)
      return result;
    v20 = *(_QWORD *)(v40 + 8 * v19);
    v21 = v7 + 1;
    if (!v20)
    {
      v21 = v7 + 2;
      if (v7 + 2 >= v41)
        return result;
      v20 = *(_QWORD *)(v40 + 8 * v21);
      if (!v20)
      {
        v21 = v7 + 3;
        if (v7 + 3 >= v41)
          return result;
        v20 = *(_QWORD *)(v40 + 8 * v21);
        if (!v20)
          break;
      }
    }
LABEL_18:
    v49 = (v20 - 1) & v20;
    v50 = v21;
  }
  v22 = v7 + 4;
  if (v7 + 4 >= v41)
    return result;
  v20 = *(_QWORD *)(v40 + 8 * v22);
  if (v20)
  {
    v21 = v7 + 4;
    goto LABEL_18;
  }
  while (1)
  {
    v21 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v21 >= v41)
      return result;
    v20 = *(_QWORD *)(v40 + 8 * v21);
    ++v22;
    if (v20)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1005F96E0(_QWORD *a1, uint64_t (*a2)(_QWORD, _QWORD))
{
  return a2(*a1, a1[1]);
}

uint64_t sub_1005F9714(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  if (a1 == a4)
  {
    if (a3)
    {
      if (a6)
      {
        if (a2 == a5 && a3 == a6)
          return 1;
        if ((_stringCompareWithSmolCheck(_:_:expecting:)(a2, a3, a5, a6, 0) & 1) != 0)
          return 1;
      }
    }
    else if (!a6)
    {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_1005F9784(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v16;
  uint64_t (*v17)(__n128);
  __n128 v18;
  _BYTE v19[24];
  _BYTE v20[24];

  v4 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v4);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v9 = &v19[-v8];
  if ((static UUID.== infix(_:_:)(a1 + OBJC_IVAR____TtC8Freeform19CRLTransactableData_id) & 1) == 0)
    goto LABEL_6;
  v10 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform19CRLTransactableData_data);
  v11 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform19CRLTransactableData_data);
  if (v10 < 0)
  {
    if (v11 < 0)
    {
      v16 = v11 & 0x7FFFFFFFFFFFFFFFLL;
      v17 = *(uint64_t (**)(__n128))(*(_QWORD *)(v10 & 0x7FFFFFFFFFFFFFFFLL) + 448);
      swift_retain(v10 & 0x7FFFFFFFFFFFFFFFLL);
      v18 = swift_retain(v16);
      LOBYTE(v17) = v17(v18);
      swift_release(v10 & 0x7FFFFFFFFFFFFFFFLL);
      swift_release(v16);
      return v17 & 1;
    }
    goto LABEL_6;
  }
  if (v11 < 0)
  {
LABEL_6:
    v14 = 0;
    return v14 & 1;
  }
  v12 = v10 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v10 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v20, 0, 0);
  sub_1004B8460(v12, (uint64_t)v9, type metadata accessor for CRLBoardCRDTData);
  v13 = v11 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v11 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v19, 0, 0);
  sub_1004B8460(v13, (uint64_t)v6, type metadata accessor for CRLBoardCRDTData);
  swift_retain(v10);
  swift_retain(v11);
  v14 = sub_100DD19C0((uint64_t)v9, (uint64_t)v6);
  sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLBoardCRDTData);
  sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLBoardCRDTData);
  swift_release(v10);
  swift_release(v11);
  return v14 & 1;
}

uint64_t sub_1005F9944(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(__n128);
  __n128 v17;
  _BYTE v18[24];
  _BYTE v19[24];

  v4 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v4);
  v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v9 = &v18[-v8];
  if (a1 < 0)
  {
    if (a2 < 0)
    {
      v14 = a1 & 0x7FFFFFFFFFFFFFFFLL;
      v15 = a2 & 0x7FFFFFFFFFFFFFFFLL;
      v16 = *(uint64_t (**)(__n128))(*(_QWORD *)v14 + 448);
      swift_retain(v14);
      v17 = swift_retain(v15);
      LOBYTE(v16) = v16(v17);
      swift_release(v14);
      swift_release(v15);
      return v16 & 1;
    }
    goto LABEL_5;
  }
  if (a2 < 0)
  {
LABEL_5:
    v12 = 0;
    return v12 & 1;
  }
  v10 = a1 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(a1 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v19, 0, 0);
  sub_1004B8460(v10, (uint64_t)v9, type metadata accessor for CRLBoardCRDTData);
  v11 = a2 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(a2 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v18, 0, 0);
  sub_1004B8460(v11, (uint64_t)v6, type metadata accessor for CRLBoardCRDTData);
  swift_retain(a1);
  swift_retain(a2);
  v12 = sub_100DD19C0((uint64_t)v9, (uint64_t)v6);
  sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLBoardCRDTData);
  sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLBoardCRDTData);
  swift_release(a1);
  swift_release(a2);
  return v12 & 1;
}

void sub_1005F9ADC(uint64_t a1, void (*a2)(char *, uint64_t, __n128))
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t i;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  double *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double *v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, __n128);
  uint64_t v39;

  v38 = a2;
  v3 = sub_1004B804C(&qword_1013E7558);
  __chkstk_darwin(v3);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = type metadata accessor for CRLBoardItemDeltaChange(0);
  v39 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v37);
  v33 = (uint64_t)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v32 = (uint64_t)&v31 - v8;
  v9 = sub_1004B804C(&qword_101405F50);
  __chkstk_darwin(v9);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a1 + 64);
  v35 = a1 + 64;
  v13 = 1 << *(_BYTE *)(a1 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v12;
  v36 = (unint64_t)(v13 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v16 = 0;
  v34 = _swiftEmptyArrayStorage;
  if (!v15)
    goto LABEL_7;
LABEL_4:
  v17 = __clz(__rbit64(v15));
  v15 &= v15 - 1;
  for (i = v17 | (v16 << 6); ; i = __clz(__rbit64(v24)) + (v16 << 6))
  {
    v19 = *(_QWORD *)(a1 + 48);
    v20 = type metadata accessor for UUID(0);
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v11, v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * i, v20);
    v21 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * i);
    *(_QWORD *)&v11[*(int *)(v9 + 48)] = v21;
    v22 = swift_retain(v21);
    v38(v11, v21, v22);
    sub_1004CB800((uint64_t)v11, &qword_101405F50);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v5, 1, v37) == 1)
    {
      sub_1004CB800((uint64_t)v5, &qword_1013E7558);
      if (v15)
        goto LABEL_4;
    }
    else
    {
      v26 = v32;
      sub_1004B84E0((uint64_t)v5, v32, type metadata accessor for CRLBoardItemDeltaChange);
      sub_1004B84E0(v26, v33, type metadata accessor for CRLBoardItemDeltaChange);
      if ((swift_isUniquelyReferenced_nonNull_native(v34) & 1) == 0)
        v34 = (double *)sub_100D10C10(0, *((_QWORD *)v34 + 2) + 1, 1, (unint64_t)v34);
      v28 = *((_QWORD *)v34 + 2);
      v27 = *((_QWORD *)v34 + 3);
      if (v28 >= v27 >> 1)
        v34 = (double *)sub_100D10C10(v27 > 1, v28 + 1, 1, (unint64_t)v34);
      v29 = v33;
      v30 = v34;
      *((_QWORD *)v34 + 2) = v28 + 1;
      sub_1004B84E0(v29, (uint64_t)v30+ ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))+ *(_QWORD *)(v39 + 72) * v28, type metadata accessor for CRLBoardItemDeltaChange);
      if (v15)
        goto LABEL_4;
    }
LABEL_7:
    v23 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v23 >= v36)
      goto LABEL_29;
    v24 = *(_QWORD *)(v35 + 8 * v23);
    ++v16;
    if (!v24)
    {
      v16 = v23 + 1;
      if (v23 + 1 >= v36)
        goto LABEL_29;
      v24 = *(_QWORD *)(v35 + 8 * v16);
      if (!v24)
      {
        v16 = v23 + 2;
        if (v23 + 2 >= v36)
          goto LABEL_29;
        v24 = *(_QWORD *)(v35 + 8 * v16);
        if (!v24)
        {
          v16 = v23 + 3;
          if (v23 + 3 >= v36)
            goto LABEL_29;
          v24 = *(_QWORD *)(v35 + 8 * v16);
          if (!v24)
            break;
        }
      }
    }
LABEL_22:
    v15 = (v24 - 1) & v24;
  }
  v25 = v23 + 4;
  if (v25 >= v36)
  {
LABEL_29:
    swift_release(a1);
    return;
  }
  v24 = *(_QWORD *)(v35 + 8 * v25);
  if (v24)
  {
    v16 = v25;
    goto LABEL_22;
  }
  while (1)
  {
    v16 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v16 >= v36)
      goto LABEL_29;
    v24 = *(_QWORD *)(v35 + 8 * v16);
    ++v25;
    if (v24)
      goto LABEL_22;
  }
LABEL_31:
  __break(1u);
}

void sub_1005F9EB4(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, unint64_t, uint64_t);
  char v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  _QWORD v47[2];
  char *v48;
  uint64_t v49;
  int64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  _QWORD *v57;
  char *v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD v61[6];
  unint64_t v62;

  v57 = a2;
  v3 = type metadata accessor for UUID(0);
  v56 = *(_QWORD **)(v3 - 8);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v58 = (char *)v47 - v7;
  v62 = (unint64_t)_swiftEmptyArrayStorage;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v8 = a1;
    else
      v8 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v9 = __CocoaSet.makeIterator()(v8);
    v10 = type metadata accessor for CRLBoardItem(0);
    v11 = sub_1004B7878((unint64_t *)&qword_1013E4190, type metadata accessor for CRLBoardItem, (uint64_t)&protocol conformance descriptor for NSObject);
    v12 = Set.Iterator.init(_cocoa:)(v61, v9, v10, v11);
    a1 = v61[0];
    v51 = v61[1];
    v13 = v61[2];
    v14 = v61[3];
    v15 = v61[4];
  }
  else
  {
    v16 = -1 << *(_BYTE *)(a1 + 32);
    v17 = *(_QWORD *)(a1 + 56);
    v51 = a1 + 56;
    v18 = ~v16;
    v19 = -v16;
    if (v19 < 64)
      v20 = ~(-1 << v19);
    else
      v20 = -1;
    v15 = v20 & v17;
    swift_bridgeObjectRetain(a1);
    v13 = v18;
    v14 = 0;
  }
  v47[1] = v13;
  v49 = a1 & 0x7FFFFFFFFFFFFFFFLL;
  v50 = (unint64_t)(v13 + 64) >> 6;
  v55 = v57 + 7;
  v48 = (char *)&type metadata for Swift.AnyObject + 8;
  v52 = a1;
  if ((a1 & 0x8000000000000000) == 0)
    goto LABEL_13;
LABEL_33:
  v28 = __CocoaSet.Iterator.next()(v12);
  if (!v28)
    goto LABEL_45;
  v29 = v28;
  v59 = v28;
  v30 = type metadata accessor for CRLBoardItem(0);
  swift_unknownObjectRetain(v29);
  swift_dynamicCast(&v60, &v59, v48, v30, 7);
  v27 = v60;
  swift_unknownObjectRelease(v29);
  v23 = v14;
  v21 = v15;
  if (!v27)
    goto LABEL_45;
  while (1)
  {
    v53 = v21;
    v54 = v23;
    (*(void (**)(void))((swift_isaMask & *v27) + 0x88))();
    if (!v57[2])
      goto LABEL_49;
    v31 = v57;
    v32 = v57[5];
    v33 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v34 = dispatch thunk of Hashable._rawHashValue(seed:)(v32, v3, v33);
    v35 = -1 << *((_BYTE *)v31 + 32);
    v36 = v34 & ~v35;
    if (((*(_QWORD *)((char *)v55 + ((v36 >> 3) & 0xFFFFFFFFFFFFF8)) >> v36) & 1) != 0)
    {
      v37 = ~v35;
      v38 = v56[9];
      v39 = (void (*)(char *, unint64_t, uint64_t))v56[2];
      while (1)
      {
        v39(v6, v57[6] + v38 * v36, v3);
        sub_1004B7878((unint64_t *)&qword_1013E4880, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        v40 = dispatch thunk of static Equatable.== infix(_:_:)(v6, v58);
        v41 = (void (*)(char *, uint64_t))v56[1];
        v41(v6, v3);
        if ((v40 & 1) != 0)
          break;
        v36 = (v36 + 1) & v37;
        if (((*(_QWORD *)((char *)v55 + ((v36 >> 3) & 0xFFFFFFFFFFFFF8)) >> v36) & 1) == 0)
          goto LABEL_12;
      }
      v41(v58, v3);
      v42 = (*(uint64_t (**)(_QWORD))((swift_isaMask & *v27) + 0x1C0))(0);

      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v43);
      v45 = *(_QWORD *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v44 = *(_QWORD *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x18);
      a1 = v52;
      if (v45 >= v44 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v44 > 1, v45 + 1, 1);
      v46 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v45, v42);
      v12 = (_QWORD *)specialized Array._endMutation()(v46);
      v15 = v53;
      v14 = v54;
      if (a1 < 0)
        goto LABEL_33;
    }
    else
    {
LABEL_49:
    {
LABEL_12:
      ((void (*)(char *, uint64_t))v56[1])(v58, v3);

      v15 = v53;
      v14 = v54;
      a1 = v52;
      if (v52 < 0)
        goto LABEL_33;
    }
    }
LABEL_13:
    if (!v15)
      break;
    v21 = (v15 - 1) & v15;
    v22 = __clz(__rbit64(v15)) | (v14 << 6);
    v23 = v14;
LABEL_31:
    v27 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v22);
    if (!v27)
      goto LABEL_45;
  }
  v24 = v14 + 1;
  if (__OFADD__(v14, 1))
  {
    __break(1u);
    return;
  }
  if (v24 >= v50)
    goto LABEL_45;
  v25 = *(_QWORD *)(v51 + 8 * v24);
  v23 = v14 + 1;
  if (v25)
    goto LABEL_30;
  v23 = v14 + 2;
  if (v14 + 2 >= v50)
    goto LABEL_45;
  v25 = *(_QWORD *)(v51 + 8 * v23);
  if (v25)
    goto LABEL_30;
  v23 = v14 + 3;
  if (v14 + 3 >= v50)
    goto LABEL_45;
  v25 = *(_QWORD *)(v51 + 8 * v23);
  if (v25)
    goto LABEL_30;
  v23 = v14 + 4;
  if (v14 + 4 >= v50)
    goto LABEL_45;
  v25 = *(_QWORD *)(v51 + 8 * v23);
  if (v25)
    goto LABEL_30;
  v23 = v14 + 5;
  if (v14 + 5 >= v50)
    goto LABEL_45;
  v25 = *(_QWORD *)(v51 + 8 * v23);
  if (v25)
  {
LABEL_30:
    v21 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v23 << 6);
    goto LABEL_31;
  }
  v26 = v14 + 6;
  while (v50 != v26)
  {
    v25 = *(_QWORD *)(v51 + 8 * v26++);
    if (v25)
    {
      v23 = v26 - 1;
      goto LABEL_30;
    }
  }
LABEL_45:
  sub_1004D284C(a1);
}

uint64_t sub_1005FA3C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t);
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t ObjectType;
  void (*v39)(uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t (*v57)(_QWORD);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v62;
  unint64_t v63;
  uint64_t v64;
  _BOOL8 v65;
  uint64_t v66;
  char v67;
  unint64_t v68;
  char v69;
  uint64_t (*v70)(uint64_t);
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  uint64_t result;
  CKRecordID v75;
  Swift::String v76;
  _QWORD v77[2];
  char *v78;
  uint64_t v79;
  int64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  __int128 v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t (*v91)(uint64_t);
  uint64_t v92;
  uint64_t (*v93)(uint64_t);
  uint64_t v94;
  char v95[24];
  uint64_t (*v96)(uint64_t);
  _QWORD v97[6];

  v2 = type metadata accessor for CRLBoardCRDTData(0);
  v3 = __chkstk_darwin(v2);
  v83 = (uint64_t)v77 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v82 = (uint64_t)v77 - v5;
  v6 = (uint64_t (*)(uint64_t))type metadata accessor for UUID(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = __chkstk_darwin(v6);
  v87 = (char *)v77 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v11 = (char *)v77 - v10;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v12 = a1;
    else
      v12 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v13 = __CocoaSet.makeIterator()(v12);
    v14 = type metadata accessor for CRLTransactableHashableWrapper();
    v15 = sub_1004B7878((unint64_t *)&qword_101405D90, (uint64_t (*)(uint64_t))type metadata accessor for CRLTransactableHashableWrapper, (uint64_t)&unk_100F393F8);
    v16 = Set.Iterator.init(_cocoa:)(v97, v13, v14, v15);
    a1 = v97[0];
    v81 = v97[1];
    v17 = v97[2];
    v18 = v97[3];
    v19 = v97[4];
  }
  else
  {
    v20 = -1 << *(_BYTE *)(a1 + 32);
    v21 = *(_QWORD *)(a1 + 56);
    v81 = a1 + 56;
    v17 = ~v20;
    v22 = -v20;
    if (v22 < 64)
      v23 = ~(-1 << v22);
    else
      v23 = -1;
    v19 = v23 & v21;
    swift_bridgeObjectRetain(a1);
    v18 = 0;
  }
  v79 = a1 & 0x7FFFFFFFFFFFFFFFLL;
  v77[1] = v17;
  v24 = (uint64_t (*)(uint64_t))&_swiftEmptyDictionarySingleton;
  v80 = (unint64_t)(v17 + 64) >> 6;
  v78 = (char *)&type metadata for Swift.AnyObject + 8;
  v93 = v6;
  v84 = a1;
  v85 = v7;
  v86 = v11;
  while (1)
  {
    if (a1 < 0)
    {
      v30 = __CocoaSet.Iterator.next()(v16);
      if (!v30)
        goto LABEL_49;
      v31 = v30;
      v94 = v30;
      v32 = type metadata accessor for CRLTransactableHashableWrapper();
      swift_unknownObjectRetain(v31);
      swift_dynamicCast(&v96, &v94, v78, v32, 7);
      v6 = v96;
      swift_unknownObjectRelease(v31);
      v29 = v18;
      v27 = v19;
      if (!v6)
        goto LABEL_49;
    }
    else
    {
      if (v19)
      {
        v27 = (v19 - 1) & v19;
        v28 = __clz(__rbit64(v19)) | (v18 << 6);
        v29 = v18;
      }
      else
      {
        v33 = v18 + 1;
        if (__OFADD__(v18, 1))
          goto LABEL_52;
        if (v33 >= v80)
          goto LABEL_49;
        v34 = *(_QWORD *)(v81 + 8 * v33);
        v29 = v18 + 1;
        if (!v34)
        {
          v29 = v18 + 2;
          if (v18 + 2 >= v80)
            goto LABEL_49;
          v34 = *(_QWORD *)(v81 + 8 * v29);
          if (!v34)
          {
            v29 = v18 + 3;
            if (v18 + 3 >= v80)
              goto LABEL_49;
            v34 = *(_QWORD *)(v81 + 8 * v29);
            if (!v34)
            {
              v29 = v18 + 4;
              if (v18 + 4 >= v80)
                goto LABEL_49;
              v34 = *(_QWORD *)(v81 + 8 * v29);
              if (!v34)
              {
                v35 = v18 + 5;
                while (v80 != v35)
                {
                  v34 = *(_QWORD *)(v81 + 8 * v35++);
                  if (v34)
                  {
                    v29 = v35 - 1;
                    goto LABEL_32;
                  }
                }
LABEL_49:
                sub_1004D284C(a1);
                return (uint64_t)v24;
              }
            }
          }
        }
LABEL_32:
        v27 = (v34 - 1) & v34;
        v28 = __clz(__rbit64(v34)) + (v29 << 6);
      }
      v6 = *(uint64_t (**)(uint64_t))(*(_QWORD *)(a1 + 48) + 8 * v28);
      swift_retain(v6);
      if (!v6)
        goto LABEL_49;
    }
    v89 = v27;
    v90 = v29;
    v37 = *((_QWORD *)v6 + 2);
    v36 = *((_QWORD *)v6 + 3);
    ObjectType = swift_getObjectType(v37);
    v39 = *(void (**)(uint64_t, uint64_t))(v36 + 32);
    v39(ObjectType, v36);
    v40 = type metadata accessor for CRLTransactableData(0);
    v41 = swift_allocObject(v40, *(unsigned int *)(v40 + 48), *(unsigned __int16 *)(v40 + 52));
    swift_unknownObjectRetain(v37);
    v42 = v87;
    v39(ObjectType, v36);
    v92 = v41;
    (*(void (**)(uint64_t, char *, uint64_t (*)(uint64_t)))(v7 + 32))(v41 + OBJC_IVAR____TtC8Freeform19CRLTransactableData_id, v42, v93);
    v43 = type metadata accessor for CRLBoard(0);
    v44 = swift_dynamicCastClass(v37, v43);
    v91 = v6;
    if (v44)
    {
      v45 = *(_QWORD *)(v44 + OBJC_IVAR____TtC8Freeform8CRLBoard_data);
      v46 = v45 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
      swift_beginAccess(v45 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v95, 0, 0);
      v47 = v82;
      v6 = type metadata accessor for CRLBoardCRDTData;
      sub_1004B8460(v46, v82, type metadata accessor for CRLBoardCRDTData);
      v88 = *(_OWORD *)(v45 + 24);
      v48 = *(_QWORD *)(v45 + 40);
      v49 = v83;
      sub_1004B8460(v47, v83, type metadata accessor for CRLBoardCRDTData);
      v51 = *(_QWORD *)(v45 + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
      v50 = *(_QWORD *)(v45 + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName + 8);
      v52 = type metadata accessor for CRLBoardData(0);
      v53 = swift_allocObject(v52, *(unsigned int *)(v52 + 48), *(unsigned __int16 *)(v52 + 52));
      *(_QWORD *)(v53 + 16) = 7;
      *(_OWORD *)(v53 + 24) = v88;
      *(_QWORD *)(v53 + 40) = v48;
      sub_1004B84E0(v49, v53 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, type metadata accessor for CRLBoardCRDTData);
      v54 = (_QWORD *)(v53 + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
      *v54 = v51;
      v54[1] = v50;
      swift_retain(v45);
      swift_bridgeObjectRetain(v50);
      sub_1004B84A4(v47, type metadata accessor for CRLBoardCRDTData);
      swift_release(v45);
      swift_unknownObjectRelease(v37);
    }
    else
    {
      v55 = type metadata accessor for CRLBoardItem(0);
      v56 = (_QWORD *)swift_dynamicCastClass(v37, v55);
      if (!v56)
        goto LABEL_54;
      v57 = *(uint64_t (**)(_QWORD))((swift_isaMask & *v56) + 0x1C0);
      swift_unknownObjectRetain(v37);
      v58 = v57(0);
      swift_unknownObjectRelease_n(v37, 2);
      v53 = v58 | 0x8000000000000000;
    }
    v59 = (uint64_t)v86;
    v60 = v92;
    *(_QWORD *)(v92 + OBJC_IVAR____TtC8Freeform19CRLTransactableData_data) = v53;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v24);
    v96 = v24;
    v63 = sub_100842EFC(v59);
    v64 = *((_QWORD *)v24 + 2);
    v65 = (v62 & 1) == 0;
    v66 = v64 + v65;
    if (__OFADD__(v64, v65))
      break;
    v67 = v62;
    if (*((_QWORD *)v24 + 3) >= v66)
    {
      v6 = v93;
      v7 = v85;
      v70 = v91;
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v24 = v96;
        if ((v62 & 1) != 0)
          goto LABEL_11;
      }
      else
      {
        sub_10082CCAC();
        v24 = v96;
        if ((v67 & 1) != 0)
          goto LABEL_11;
      }
    }
    else
    {
      sub_100815638(v66, isUniquelyReferenced_nonNull_native);
      v68 = sub_100842EFC(v59);
      v6 = v93;
      v7 = v85;
      v70 = v91;
      if ((v67 & 1) != (v69 & 1))
        goto LABEL_53;
      v63 = v68;
      v24 = v96;
      if ((v67 & 1) != 0)
      {
LABEL_11:
        v25 = *((_QWORD *)v24 + 7);
        swift_release(*(_QWORD *)(v25 + 8 * v63));
        *(_QWORD *)(v25 + 8 * v63) = v60;
        goto LABEL_12;
      }
    }
    *((_QWORD *)v24 + (v63 >> 6) + 8) |= 1 << v63;
    (*(void (**)(unint64_t, uint64_t, uint64_t (*)(uint64_t)))(v7 + 16))(*((_QWORD *)v24 + 6) + *(_QWORD *)(v7 + 72) * v63, v59, v6);
    *(_QWORD *)(*((_QWORD *)v24 + 7) + 8 * v63) = v60;
    v71 = *((_QWORD *)v24 + 2);
    v72 = __OFADD__(v71, 1);
    v73 = v71 + 1;
    if (v72)
      goto LABEL_51;
    *((_QWORD *)v24 + 2) = v73;
LABEL_12:
    v26 = swift_bridgeObjectRelease(0x8000000000000000);
    (*(void (**)(uint64_t, uint64_t (*)(uint64_t), __n128))(v7 + 8))(v59, v6, v26);
    swift_release(v70);
    v19 = v89;
    v18 = v90;
    a1 = v84;
  }
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v6);
  __break(1u);
LABEL_54:
  sub_100757E04(&_mh_execute_header, (uint64_t)"init(_:)", 8, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardChangeSet.swift", 89, 2, 42, "Invalid/unknown transactable type", 33, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Invalid/unknown transactable type");
  sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(_:)", 8, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardChangeSet.swift", 89, 2u, 42, (uint64_t)"Invalid/unknown transactable type", 33, 2u);
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v75, v76);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
  __break(1u);
  return result;
}

void sub_1005FABC4(uint64_t a1, void (*a2)(uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;

  v4 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v9 = 0;
  while (1)
  {
    if (v7)
    {
      v10 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v11 = v10 | (v9 << 6);
      goto LABEL_5;
    }
    v15 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v15 >= v8)
      goto LABEL_23;
    v16 = *(_QWORD *)(v4 + 8 * v15);
    ++v9;
    if (!v16)
    {
      v9 = v15 + 1;
      if (v15 + 1 >= v8)
        goto LABEL_23;
      v16 = *(_QWORD *)(v4 + 8 * v9);
      if (!v16)
      {
        v9 = v15 + 2;
        if (v15 + 2 >= v8)
          goto LABEL_23;
        v16 = *(_QWORD *)(v4 + 8 * v9);
        if (!v16)
        {
          v9 = v15 + 3;
          if (v15 + 3 >= v8)
            goto LABEL_23;
          v16 = *(_QWORD *)(v4 + 8 * v9);
          if (!v16)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v16 - 1) & v16;
    v11 = __clz(__rbit64(v16)) + (v9 << 6);
LABEL_5:
    v12 = 8 * v11;
    v13 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + v12);
    v14 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + v12);
    swift_retain(v14);
    a2(v13, v14);
    swift_release(v14);
  }
  v17 = v15 + 4;
  if (v17 >= v8)
  {
LABEL_23:
    swift_release(a1);
    return;
  }
  v16 = *(_QWORD *)(v4 + 8 * v17);
  if (v16)
  {
    v9 = v17;
    goto LABEL_22;
  }
  while (1)
  {
    v9 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v9 >= v8)
      goto LABEL_23;
    v16 = *(_QWORD *)(v4 + 8 * v9);
    ++v17;
    if (v16)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_1005FAD48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t result;
  unint64_t v25;
  unint64_t v26;
  void (*v27)(char *, unint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  _QWORD *v37;
  unint64_t v38;
  unint64_t v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char isUniquelyReferenced_nonNull_native;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  char v57;
  __n128 v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  unint64_t v70;
  char *v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unsigned int (*v76)(char *, uint64_t, uint64_t);
  void (*v77)(char *, uint64_t, uint64_t, uint64_t);
  void (*v78)(char *, char *, uint64_t);
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  void (*v84)(char *, unint64_t, uint64_t);
  uint64_t v85;
  char v86[32];
  _QWORD *v87;

  v4 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v59 - v8;
  v10 = type metadata accessor for UUID(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v69 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v12);
  v82 = (char *)&v59 - v15;
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v59 - v17;
  v19 = __chkstk_darwin(v16);
  v68 = (char *)&v59 - v20;
  __chkstk_darwin(v19);
  v22 = (char *)&v59 - v21;
  v87 = _swiftEmptyArrayStorage;
  v23 = *(_QWORD *)(a1 + 16);
  v65 = OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedAsOrphanItemIDs;
  v67 = a2;
  v59 = (_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_realTimePeerCreatedItemDatas);
  result = swift_beginAccess(a2 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_realTimePeerCreatedItemDatas, v86, 0, 0);
  v66 = v23;
  if (v23)
  {
    v25 = 0;
    v71 = v7;
    v81 = v22;
    v64 = a1;
    v63 = v9;
    v79 = v11;
    while (1)
    {
      if (v25 >= *(_QWORD *)(a1 + 16))
      {
        __break(1u);
        return result;
      }
      v72 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
      v26 = a1 + v72 + *(_QWORD *)(v11 + 72) * v25;
      v27 = *(void (**)(char *, unint64_t, uint64_t))(v11 + 16);
      v83 = *(_QWORD *)(v11 + 72);
      v84 = v27;
      v27(v9, v26, v10);
      v77 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
      v77(v9, 0, 1, v10);
      v76 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
      if (v76(v9, 1, v10) == 1)
        goto LABEL_36;
      v70 = v25;
      v78 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
      v78(v22, v9, v10);
      v28 = *(_QWORD *)(v67 + v65);
      if (!*(_QWORD *)(v28 + 16))
        goto LABEL_11;
      v29 = *(_QWORD *)(v28 + 40);
      v30 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      swift_bridgeObjectRetain(v28);
      v75 = v30;
      v31 = dispatch thunk of Hashable._rawHashValue(seed:)(v29, v10, v30);
      v32 = -1 << *(_BYTE *)(v28 + 32);
      v33 = v31 & ~v32;
      if (((*(_QWORD *)(v28 + 56 + ((v33 >> 3) & 0xFFFFFFFFFFFFF8)) >> v33) & 1) == 0)
        break;
      v80 = ~v32;
      while (1)
      {
        v84(v18, *(_QWORD *)(v28 + 48) + v33 * v83, v10);
        sub_1004B7878((unint64_t *)&qword_1013E4880, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        v34 = dispatch thunk of static Equatable.== infix(_:_:)(v18, v81);
        v35 = *(void (**)(char *, uint64_t))(v11 + 8);
        v35(v18, v10);
        if ((v34 & 1) != 0)
          break;
        v11 = v79;
        v33 = (v33 + 1) & v80;
        if (((*(_QWORD *)(v28 + 56 + ((v33 >> 3) & 0xFFFFFFFFFFFFF8)) >> v33) & 1) == 0)
          goto LABEL_10;
      }
      v40 = swift_bridgeObjectRelease(v28);
      ((void (*)(char *, char *, uint64_t, __n128))v84)(v68, v81, v10, v40);
      swift_bridgeObjectRetain(*v59);
      v61 = v41;
      v42 = v62;
      v43 = sub_1005F08C0(v41);
      v62 = v42;
      v44 = *(_QWORD *)(v43 + 16);
      v45 = Set.init(minimumCapacity:)(v44, v10, v75);
      v74 = v44;
      v60 = v43;
      if (v44)
      {
        v46 = 0;
        v73 = v43 + v72;
        v47 = v82;
        while (1)
        {
          v84(v7, v73 + v46 * v83, v10);
          v77(v7, 0, 1, v10);
          if (v76(v7, 1, v10) == 1)
            break;
          v80 = v46;
          v78(v47, v7, v10);
          v50 = *(_QWORD *)(v45 + 40);
          swift_bridgeObjectRetain(v45);
          v51 = dispatch thunk of Hashable._rawHashValue(seed:)(v50, v10, v75);
          v52 = -1 << *(_BYTE *)(v45 + 32);
          v53 = v51 & ~v52;
          if (((*(_QWORD *)(v45 + 56 + ((v53 >> 3) & 0xFFFFFFFFFFFFF8)) >> v53) & 1) != 0)
          {
            v54 = ~v52;
            while (1)
            {
              v84(v18, *(_QWORD *)(v45 + 48) + v53 * v83, v10);
              v55 = dispatch thunk of static Equatable.== infix(_:_:)(v18, v82);
              v35(v18, v10);
              if ((v55 & 1) != 0)
                break;
              v53 = (v53 + 1) & v54;
              if (((*(_QWORD *)(v45 + 56 + ((v53 >> 3) & 0xFFFFFFFFFFFFF8)) >> v53) & 1) == 0)
                goto LABEL_21;
            }
            v49 = swift_bridgeObjectRelease(v45);
            v7 = v71;
            v47 = v82;
          }
          else
          {
LABEL_21:
            swift_bridgeObjectRelease(v45);
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v45);
            v47 = v82;
            v84(v18, (unint64_t)v82, v10);
            v85 = v45;
            sub_100AE3AA4((uint64_t)v18, v53, isUniquelyReferenced_nonNull_native);
            v45 = v85;
            v49 = swift_bridgeObjectRelease(0x8000000000000000);
            v7 = v71;
          }
          v46 = v80 + 1;
          ((void (*)(char *, uint64_t, __n128))v35)(v47, v10, v49);
          if (v46 == v74)
            goto LABEL_30;
        }
      }
      else
      {
LABEL_30:
        v77(v7, 1, 1, v10);
      }
      swift_bridgeObjectRelease(v61);
      swift_bridgeObjectRelease(v60);
      v56 = (uint64_t)v68;
      v57 = sub_10062158C((uint64_t)v68, v45);
      v58 = swift_bridgeObjectRelease(v45);
      ((void (*)(uint64_t, uint64_t, __n128))v35)(v56, v10, v58);
      if ((v57 & 1) == 0)
      {
        a1 = v64;
        v9 = v63;
        v11 = v79;
        v22 = v81;
        goto LABEL_12;
      }
      v22 = v81;
      result = ((uint64_t (*)(char *, uint64_t))v35)(v81, v10);
      a1 = v64;
      v9 = v63;
      v11 = v79;
LABEL_17:
      v25 = v70 + 1;
      if (v70 + 1 == v66)
        goto LABEL_35;
    }
LABEL_10:
    swift_bridgeObjectRelease(v28);
    a1 = v64;
    v9 = v63;
    v22 = v81;
LABEL_11:
    v36 = (uint64_t)v68;
    v84(v68, (unint64_t)v22, v10);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v36, v10);
LABEL_12:
    v78(v69, v22, v10);
    v37 = v87;
    if ((swift_isUniquelyReferenced_nonNull_native(v87) & 1) == 0)
    {
      sub_100600724(0, v37[2] + 1, 1);
      v37 = v87;
    }
    v39 = v37[2];
    v38 = v37[3];
    if (v39 >= v38 >> 1)
    {
      sub_100600724(v38 > 1, v39 + 1, 1);
      v37 = v87;
    }
    v37[2] = v39 + 1;
    result = ((uint64_t (*)(char *, char *, uint64_t))v78)((char *)v37 + v72 + v39 * v83, v69, v10);
    v87 = v37;
    v22 = v81;
    goto LABEL_17;
  }
  v77 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
LABEL_35:
  v77(v9, 1, 1, v10);
LABEL_36:
  swift_bridgeObjectRelease(a1);
  sub_1004CB800((uint64_t)v9, (uint64_t *)&unk_1013E1A50);
  return (uint64_t)v87;
}

_QWORD *sub_1005FB4F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  unint64_t v21;
  uint64_t v22;
  void (*v23)(__n128);
  __n128 v24;
  char v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char isUniquelyReferenced_nonNull_native;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  char v41;
  __n128 v42;
  uint64_t v43;
  char v44;
  __n128 v45;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(__n128);
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  void (*v63)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t (*v70)(char *, uint64_t, __n128);
  void (*v71)(char *, uint64_t, uint64_t);
  uint64_t v72;
  char v73[32];
  _QWORD *v74;

  v3 = v2;
  v57 = a2;
  v5 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v5);
  v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v48 - v13;
  v74 = _swiftEmptyArrayStorage;
  if ((unint64_t)a1 >> 62)
    goto LABEL_34;
  v15 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  v56 = OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedAsOrphanItemIDs;
  v48 = (_QWORD *)(v57 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_realTimePeerCreatedItemDatas);
  swift_beginAccess(v57 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_realTimePeerCreatedItemDatas, v73, 0, 0);
  if (v15)
  {
    v16 = 0;
    v55 = a1 & 0xC000000000000001;
    v54 = a1 & 0xFFFFFFFFFFFFFF8;
    v51 = a1 + 32;
    v53 = a1;
    v61 = v9;
    v62 = v7;
    v52 = v15;
    while (1)
    {
      if (v55)
      {
        v19 = specialized _ArrayBuffer._getElementSlowPath(_:)(v16, a1);
        v20 = __OFADD__(v16, 1);
        v21 = v16 + 1;
        if (v20)
        {
LABEL_30:
          __break(1u);
          return v74;
        }
      }
      else
      {
        if (v16 >= *(_QWORD *)(v54 + 16))
        {
          __break(1u);
LABEL_34:
          if (a1 < 0)
            v47 = a1;
          else
            v47 = a1 & 0xFFFFFFFFFFFFFF8;
          v15 = _CocoaArrayWrapper.endIndex.getter(v47);
          goto LABEL_3;
        }
        v19 = *(_QWORD *)(v51 + 8 * v16);
        swift_retain(v19);
        v20 = __OFADD__(v16, 1);
        v21 = v16 + 1;
        if (v20)
          goto LABEL_30;
      }
      v59 = v21;
      v22 = *(_QWORD *)(v57 + v56);
      v23 = *(void (**)(__n128))(*(_QWORD *)v19 + 256);
      v24 = swift_bridgeObjectRetain(v22);
      v60 = v19;
      v58 = v23;
      v23(v24);
      v25 = sub_10062158C((uint64_t)v14, v22);
      v26 = swift_bridgeObjectRelease(v22);
      v70 = *(uint64_t (**)(char *, uint64_t, __n128))(v9 + 8);
      v27 = v70(v14, v8, v26);
      if ((v25 & 1) == 0)
        goto LABEL_5;
      swift_bridgeObjectRetain(*v48);
      v50 = v28;
      v29 = sub_1005F08C0(v28);
      v30 = *(_QWORD *)(v29 + 16);
      v66 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v31 = Set.init(minimumCapacity:)(v30, v8, v66);
      v67 = v30;
      if (v30)
      {
        v49 = v3;
        v32 = 0;
        v33 = *(unsigned __int8 *)(v9 + 80);
        v64 = v29;
        v65 = v29 + ((v33 + 32) & ~v33);
        v69 = *(_QWORD *)(v9 + 72);
        v71 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
        v71(v7, v65, v8);
        while (1)
        {
          v63 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
          v63(v7, 0, 1, v8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
          {
            v3 = v49;
            goto LABEL_26;
          }
          v68 = v32;
          (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v12, v7, v8);
          v36 = *(_QWORD *)(v31 + 40);
          swift_bridgeObjectRetain(v31);
          v37 = dispatch thunk of Hashable._rawHashValue(seed:)(v36, v8, v66);
          v38 = -1 << *(_BYTE *)(v31 + 32);
          v39 = v37 & ~v38;
          if (((*(_QWORD *)(v31 + 56 + ((v39 >> 3) & 0xFFFFFFFFFFFFF8)) >> v39) & 1) != 0)
          {
            v40 = ~v38;
            while (1)
            {
              v71(v14, *(_QWORD *)(v31 + 48) + v39 * v69, v8);
              sub_1004B7878((unint64_t *)&qword_1013E4880, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
              v41 = dispatch thunk of static Equatable.== infix(_:_:)(v14, v12);
              ((void (*)(char *, uint64_t))v70)(v14, v8);
              if ((v41 & 1) != 0)
                break;
              v39 = (v39 + 1) & v40;
              if (((*(_QWORD *)(v31 + 56 + ((v39 >> 3) & 0xFFFFFFFFFFFFF8)) >> v39) & 1) == 0)
                goto LABEL_13;
            }
            v35 = swift_bridgeObjectRelease(v31);
          }
          else
          {
LABEL_13:
            swift_bridgeObjectRelease(v31);
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v31);
            v71(v14, (uint64_t)v12, v8);
            v72 = v31;
            sub_100AE3AA4((uint64_t)v14, v39, isUniquelyReferenced_nonNull_native);
            v31 = v72;
            v35 = swift_bridgeObjectRelease(0x8000000000000000);
          }
          v32 = v68 + 1;
          v70(v12, v8, v35);
          v9 = v61;
          v7 = v62;
          v29 = v64;
          if (v32 == v67)
            break;
          v71(v62, v65 + v69 * v32, v8);
        }
        v3 = v49;
        v63(v62, 1, 1, v8);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
      }
LABEL_26:
      swift_bridgeObjectRelease(v50);
      v42 = swift_bridgeObjectRelease(v29);
      v43 = v60;
      v58(v42);
      v44 = sub_10062158C((uint64_t)v14, v31);
      v45 = swift_bridgeObjectRelease(v31);
      v27 = v70(v14, v8, v45);
      if ((v44 & 1) != 0)
      {
        swift_release(v43);
        v16 = v59;
      }
      else
      {
LABEL_5:
        v16 = v59;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v27);
        v17 = v74[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v17);
        v18 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v60);
        specialized ContiguousArray._endMutation()(v18);
      }
      a1 = v53;
      if (v16 == v52)
        return v74;
    }
  }
  return _swiftEmptyArrayStorage;
}

double *sub_1005FBA8C(uint64_t a1, char *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  char isUniquelyReferenced_nonNull_native;
  __n128 v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  char v36;
  __n128 v37;
  uint64_t v38;
  char v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  void (*v55)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char v65[32];
  double *v66;

  v3 = v2;
  v6 = type metadata accessor for UUID(0);
  v61 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v62 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v44 - v9;
  v11 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v11);
  v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = _swiftEmptyArrayStorage;
  v44 = a1;
  if ((unint64_t)a1 >> 62)
    goto LABEL_33;
  v14 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  v49 = &a2[OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_realTimePeerCreatedItemDatas];
  swift_beginAccess(&a2[OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_realTimePeerCreatedItemDatas], v65, 0, 0);
  if (v14)
  {
    a1 = 0;
    v48 = v44 & 0xC000000000000001;
    v47 = v44 & 0xFFFFFFFFFFFFFF8;
    v46 = v44 + 32;
    a2 = v62;
    v54 = v13;
    v45 = v14;
    while (1)
    {
      if (v48)
      {
        v17 = specialized _ArrayBuffer._getElementSlowPath(_:)(a1, v44);
        v18 = __OFADD__(a1, 1);
        v19 = a1 + 1;
        if (v18)
        {
LABEL_29:
          __break(1u);
          return v66;
        }
      }
      else
      {
        if ((unint64_t)a1 >= *(_QWORD *)(v47 + 16))
        {
          __break(1u);
LABEL_33:
          if (a1 < 0)
            v43 = a1;
          else
            v43 = a1 & 0xFFFFFFFFFFFFFF8;
          v14 = _CocoaArrayWrapper.endIndex.getter(v43);
          goto LABEL_3;
        }
        swift_retain(*(_QWORD *)(v46 + 8 * a1));
        v18 = __OFADD__(a1, 1);
        v19 = a1 + 1;
        if (v18)
          goto LABEL_29;
      }
      v52 = v17;
      v53 = v19;
      swift_bridgeObjectRetain(*(_QWORD *)v49);
      v51 = v20;
      v21 = sub_1005F08C0(v20);
      v22 = *(_QWORD *)(v21 + 16);
      v58 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v23 = Set.init(minimumCapacity:)(v22, v6, v58);
      v59 = v22;
      if (v22)
      {
        v50 = v3;
        v24 = 0;
        v25 = v61;
        v26 = *(unsigned __int8 *)(v61 + 80);
        v56 = v21;
        v57 = v21 + ((v26 + 32) & ~v26);
        v63 = *(_QWORD *)(v61 + 72);
        v27 = *(void (**)(char *, uint64_t, uint64_t))(v61 + 16);
        v27(v13, v57, v6);
        while (1)
        {
          v55 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56);
          v55(v13, 0, 1, v6);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v13, 1, v6) == 1)
          {
            v3 = v50;
            v14 = v45;
            goto LABEL_25;
          }
          v60 = v24;
          (*(void (**)(char *, char *, uint64_t))(v25 + 32))(a2, v13, v6);
          v31 = *(_QWORD *)(v23 + 40);
          swift_bridgeObjectRetain(v23);
          v32 = dispatch thunk of Hashable._rawHashValue(seed:)(v31, v6, v58);
          v33 = -1 << *(_BYTE *)(v23 + 32);
          v34 = v32 & ~v33;
          if (((*(_QWORD *)(v23 + 56 + ((v34 >> 3) & 0xFFFFFFFFFFFFF8)) >> v34) & 1) != 0)
          {
            v35 = ~v33;
            while (1)
            {
              v27(v10, *(_QWORD *)(v23 + 48) + v34 * v63, v6);
              sub_1004B7878((unint64_t *)&qword_1013E4880, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
              v36 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v62);
              v30 = *(void (**)(char *, uint64_t))(v25 + 8);
              v30(v10, v6);
              if ((v36 & 1) != 0)
                break;
              v34 = (v34 + 1) & v35;
              v25 = v61;
              if (((*(_QWORD *)(v23 + 56 + ((v34 >> 3) & 0xFFFFFFFFFFFFF8)) >> v34) & 1) == 0)
                goto LABEL_12;
            }
            v29 = swift_bridgeObjectRelease();
            a2 = v62;
          }
          else
          {
LABEL_12:
            swift_bridgeObjectRelease();
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v23);
            a2 = v62;
            v27(v10, (uint64_t)v62, v6);
            v64 = v23;
            sub_100AE3AA4((uint64_t)v10, v34, isUniquelyReferenced_nonNull_native);
            v23 = v64;
            v29 = swift_bridgeObjectRelease();
            v30 = *(void (**)(char *, uint64_t))(v25 + 8);
          }
          v24 = v60 + 1;
          ((void (*)(char *, uint64_t, __n128))v30)(a2, v6, v29);
          v25 = v61;
          v13 = v54;
          if (v24 == v59)
            break;
          v27(v54, v57 + v63 * v24, v6);
        }
        v3 = v50;
        v14 = v45;
        v55(v54, 1, 1, v6);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v61 + 56))(v13, 1, 1, v6);
      }
LABEL_25:
      swift_bridgeObjectRelease();
      v37 = swift_bridgeObjectRelease();
      v38 = v52;
      (*(void (**)(__n128))(*(_QWORD *)v52 + 256))(v37);
      v39 = sub_10062158C((uint64_t)v10, v23);
      v40 = swift_bridgeObjectRelease();
      v41 = (*(uint64_t (**)(char *, uint64_t, __n128))(v61 + 8))(v10, v6, v40);
      if ((v39 & 1) != 0)
      {
        swift_release(v38);
      }
      else
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v41);
        v15 = *((_QWORD *)v66 + 2);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v15);
        v16 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v38);
        specialized ContiguousArray._endMutation()(v16);
      }
      a1 = v53;
      if (v53 == v14)
        return v66;
    }
  }
  return _swiftEmptyArrayStorage;
}

_QWORD *sub_1005FBFAC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  _QWORD *result;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  if ((a4 & 1) == 0)
    return sub_1005FF558(a1, a2, a3, a4);
  v9 = type metadata accessor for __ContiguousArrayStorageBase(0);
  v10 = swift_unknownObjectRetain_n(a1, 2);
  v11 = (_QWORD *)swift_dynamicCastClass(v10, v9);
  if (!v11)
  {
    swift_unknownObjectRelease(a1);
    v11 = _swiftEmptyArrayStorage;
  }
  v12 = v11[2];
  swift_release(v11);
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_11;
  }
  v13 = a1;
  if (v12 != (a4 >> 1) - a3)
  {
LABEL_11:
    swift_unknownObjectRelease(v13);
    return sub_1005FF558(a1, a2, a3, a4);
  }
  result = (_QWORD *)swift_dynamicCastClass(a1, v9);
  if (!result)
  {
    swift_unknownObjectRelease(a1);
    return _swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t type metadata accessor for CRLBoardDataStoreChangeSet(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1013E7688, (uint64_t)&nominal type descriptor for CRLBoardDataStoreChangeSet);
}

double sub_1005FC09C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1005F8380(a1, a2, *(_QWORD **)(v2 + 16));
}

uint64_t sub_1005FC0A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_101405F50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for CRLBoardPeerChangeSet(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1013E75E0, (uint64_t)&nominal type descriptor for CRLBoardPeerChangeSet);
}

void sub_1005FC100(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_1005F0DFC(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1005FC108()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1005FC134()
{
  uint64_t v0;

  sub_1005F776C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1005FC13C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1005FC14C(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_1005FC154(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_1004CB6A4(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v4);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1005FC194(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  char *v15;
  __n128 v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t ObjectType;
  void (*v27)(uint64_t, uint64_t, __n128);
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  void (*v35)(char *, unint64_t, uint64_t);
  uint64_t v36;
  char v37;
  void (*v38)(char *, uint64_t);
  __n128 v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  int64_t v47;
  uint64_t *v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int64_t v53;
  char *v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  char v58[24];
  char *v59;

  v43 = a2;
  v44 = a1;
  v6 = type metadata accessor for UUID(0);
  v56 = *(_QWORD **)(v6 - 8);
  v57 = v6;
  v7 = __chkstk_darwin(v6);
  v54 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v59 = (char *)&v42 - v9;
  v49 = a3;
  v10 = *(_QWORD *)(a3 + 56);
  v46 = a3 + 56;
  v11 = 1 << *(_BYTE *)(a3 + 32);
  if (v11 < 64)
    v12 = ~(-1 << v11);
  else
    v12 = -1;
  v13 = v12 & v10;
  v48 = (uint64_t *)(a4 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_markedCreatedObjectIds);
  swift_beginAccess(a4 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_markedCreatedObjectIds, v58, 0, 0);
  v45 = 0;
  v14 = 0;
  v47 = (unint64_t)(v11 + 63) >> 6;
  v15 = v54;
  while (1)
  {
    if (v13)
    {
      v52 = (v13 - 1) & v13;
      v53 = v14;
      v17 = __clz(__rbit64(v13)) | (v14 << 6);
      goto LABEL_22;
    }
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v18 >= v47)
      goto LABEL_31;
    v19 = *(_QWORD *)(v46 + 8 * v18);
    v20 = v14 + 1;
    if (!v19)
    {
      v20 = v14 + 2;
      if (v14 + 2 >= v47)
        goto LABEL_31;
      v19 = *(_QWORD *)(v46 + 8 * v20);
      if (!v19)
      {
        v20 = v14 + 3;
        if (v14 + 3 >= v47)
          goto LABEL_31;
        v19 = *(_QWORD *)(v46 + 8 * v20);
        if (!v19)
          break;
      }
    }
LABEL_21:
    v52 = (v19 - 1) & v19;
    v53 = v20;
    v17 = __clz(__rbit64(v19)) + (v20 << 6);
LABEL_22:
    v22 = *(_QWORD *)(v49 + 48);
    v50 = v17;
    v23 = *(_QWORD *)(v22 + 8 * v17);
    v24 = *v48;
    v25 = *(_QWORD *)(v23 + 24);
    ObjectType = swift_getObjectType(*(_QWORD *)(v23 + 16));
    v27 = *(void (**)(uint64_t, uint64_t, __n128))(v25 + 32);
    v51 = v23;
    swift_retain(v23);
    v28 = swift_bridgeObjectRetain(v24);
    v27(ObjectType, v25, v28);
    if (*(_QWORD *)(v24 + 16)
      && (v29 = *(_QWORD *)(v24 + 40),
          v30 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID), v31 = dispatch thunk of Hashable._rawHashValue(seed:)(v29, v57, v30), v32 = -1 << *(_BYTE *)(v24 + 32), v33 = v31 & ~v32, ((*(_QWORD *)(v24 + 56 + ((v33 >> 3) & 0xFFFFFFFFFFFFF8)) >> v33) & 1) != 0))
    {
      v55 = ~v32;
      v34 = v56[9];
      v35 = (void (*)(char *, unint64_t, uint64_t))v56[2];
      while (1)
      {
        v36 = v57;
        v35(v15, *(_QWORD *)(v24 + 48) + v34 * v33, v57);
        sub_1004B7878((unint64_t *)&qword_1013E4880, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        v37 = dispatch thunk of static Equatable.== infix(_:_:)(v15, v59);
        v38 = (void (*)(char *, uint64_t))v56[1];
        v38(v15, v36);
        if ((v37 & 1) != 0)
          break;
        v33 = (v33 + 1) & v55;
        if (((*(_QWORD *)(v24 + 56 + ((v33 >> 3) & 0xFFFFFFFFFFFFF8)) >> v33) & 1) == 0)
          goto LABEL_5;
      }
      v39 = swift_bridgeObjectRelease(v24);
      ((void (*)(char *, uint64_t, __n128))v38)(v59, v57, v39);
      swift_release(v51);
      *(unint64_t *)((char *)v44 + ((v50 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v50;
      v40 = __OFADD__(v45++, 1);
      v13 = v52;
      v14 = v53;
      if (v40)
      {
        __break(1u);
LABEL_31:
        v41 = v49;
        swift_retain(v49);
        sub_100CD7B48(v44, v43, v45, v41);
        return;
      }
    }
    else
    {
LABEL_5:
      v16 = swift_bridgeObjectRelease(v24);
      ((void (*)(char *, uint64_t, __n128))v56[1])(v59, v57, v16);
      swift_release(v51);
      v13 = v52;
      v14 = v53;
    }
  }
  v21 = v14 + 4;
  if (v14 + 4 >= v47)
    goto LABEL_31;
  v19 = *(_QWORD *)(v46 + 8 * v21);
  if (v19)
  {
    v20 = v14 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    v20 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v20 >= v47)
      goto LABEL_31;
    v19 = *(_QWORD *)(v46 + 8 * v20);
    ++v21;
    if (v19)
      goto LABEL_21;
  }
LABEL_33:
  __break(1u);
}

uint64_t sub_1005FC57C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v6;
  unsigned int v7;
  unint64_t v8;
  size_t v9;
  uint64_t isStackAllocationSafe;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  void *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v18;

  v3 = v2;
  v6 = *(_BYTE *)(a1 + 32);
  v7 = v6 & 0x3F;
  v8 = (unint64_t)((1 << v6) + 63) >> 6;
  v9 = 8 * v8;
  isStackAllocationSafe = swift_retain_n(a2, 2);
  if (v7 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(v9, 8), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v18 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    swift_retain(a2);
    sub_1005FC194((unint64_t *)((char *)&v18 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0)), v8, a1, a2);
    v12 = v11;
    swift_release(a1);
    v13 = swift_release(a2);
    if (v3)
      swift_willThrow(v13);
    swift_release_n(a2, 2, v13);
  }
  else
  {
    v14 = (void *)swift_slowAlloc(v9, -1);
    bzero(v14, v9);
    swift_retain(a2);
    sub_1005FC194((unint64_t *)v14, v8, a1, a2);
    v12 = v15;
    swift_release(a1);
    swift_release(a2);
    swift_slowDealloc(v14, -1, -1);
    swift_release_n(a2, 2, v16);
  }
  return v12;
}

Swift::Int sub_1005FC740(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  Swift::Int result;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  void (*v21)(uint64_t, uint64_t, __n128);
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  void (*v28)(char *, unint64_t, uint64_t);
  char *v29;
  uint64_t v30;
  char v31;
  void (*v32)(char *, uint64_t);
  __n128 v33;
  uint64_t v34;
  _QWORD *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  char v46;
  unint64_t v47;
  BOOL v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD v51[2];
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  _QWORD *v59;
  uint64_t v60;
  char *v61;
  _QWORD v62[9];
  uint64_t v63;
  char v64[32];
  _QWORD *v65;

  v4 = v3;
  v7 = type metadata accessor for UUID(0);
  v59 = *(_QWORD **)(v7 - 8);
  v60 = v7;
  v8 = __chkstk_darwin(v7);
  v58 = (char *)v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v61 = (char *)v51 - v10;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v2 = &_swiftEmptySetSingleton;
    v65 = &_swiftEmptySetSingleton;
    if (a1 < 0)
      v11 = a1;
    else
      v11 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_retain(a2);
    v12 = __CocoaSet.makeIterator()(v11);
    v55 = (uint64_t *)(a2 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_markedCreatedObjectIds);
    v13 = swift_beginAccess(a2 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_markedCreatedObjectIds, v64, 0, 0);
    v56 = v12;
    v14 = __CocoaSet.Iterator.next()(v13);
    if (v14)
    {
      v15 = v14;
      v51[0] = a2;
      v51[1] = v4;
      v54 = type metadata accessor for CRLTransactableHashableWrapper();
      v53 = (char *)&type metadata for Swift.AnyObject + 8;
      do
      {
        v62[0] = v15;
        swift_dynamicCast(&v63, v62, v53, v54, 7);
        v18 = *v55;
        v19 = *(_QWORD *)(v63 + 24);
        ObjectType = swift_getObjectType(*(_QWORD *)(v63 + 16));
        v21 = *(void (**)(uint64_t, uint64_t, __n128))(v19 + 32);
        v22 = swift_bridgeObjectRetain(v18);
        v21(ObjectType, v19, v22);
        if (*(_QWORD *)(v18 + 16)
          && (v23 = *(_QWORD *)(v18 + 40),
              v52 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID), v24 = dispatch thunk of Hashable._rawHashValue(seed:)(v23, v60, v52), v25 = -1 << *(_BYTE *)(v18 + 32), v26 = v24 & ~v25, ((*(_QWORD *)(v18 + 56 + ((v26 >> 3) & 0xFFFFFFFFFFFFF8)) >> v26) & 1) != 0))
        {
          v57 = ~v25;
          v27 = v59[9];
          v28 = (void (*)(char *, unint64_t, uint64_t))v59[2];
          while (1)
          {
            v29 = v58;
            v30 = v60;
            v28(v58, *(_QWORD *)(v18 + 48) + v27 * v26, v60);
            sub_1004B7878((unint64_t *)&qword_1013E4880, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
            v31 = dispatch thunk of static Equatable.== infix(_:_:)(v29, v61);
            v32 = (void (*)(char *, uint64_t))v59[1];
            v32(v29, v30);
            if ((v31 & 1) != 0)
              break;
            v26 = (v26 + 1) & v57;
            if (((*(_QWORD *)(v18 + 56 + ((v26 >> 3) & 0xFFFFFFFFFFFFF8)) >> v26) & 1) == 0)
              goto LABEL_7;
          }
          v33 = swift_bridgeObjectRelease(v18);
          ((void (*)(char *, uint64_t, __n128))v32)(v61, v60, v33);
          v34 = v63;
          v35 = v65;
          v36 = v65[2];
          if (v65[3] <= v36)
          {
            sub_100ADCB34(v36 + 1);
            v35 = v65;
          }
          Hasher.init(_seed:)(v62, v35[5]);
          v37 = *(_QWORD *)(v34 + 24);
          v38 = swift_getObjectType(*(_QWORD *)(v34 + 16));
          v39 = v58;
          (*(void (**)(uint64_t, uint64_t))(v37 + 32))(v38, v37);
          v40 = v60;
          dispatch thunk of Hashable.hash(into:)(v62, v60, v52);
          v32(v39, v40);
          result = Hasher._finalize()();
          v41 = v35 + 7;
          v42 = -1 << *((_BYTE *)v35 + 32);
          v43 = result & ~v42;
          v44 = v43 >> 6;
          if (((-1 << v43) & ~v35[(v43 >> 6) + 7]) != 0)
          {
            v45 = __clz(__rbit64((-1 << v43) & ~v35[(v43 >> 6) + 7])) | v43 & 0x7FFFFFFFFFFFFFC0;
          }
          else
          {
            v46 = 0;
            v47 = (unint64_t)(63 - v42) >> 6;
            do
            {
              if (++v44 == v47 && (v46 & 1) != 0)
              {
                __break(1u);
                return result;
              }
              v48 = v44 == v47;
              if (v44 == v47)
                v44 = 0;
              v46 |= v48;
              v49 = v41[v44];
            }
            while (v49 == -1);
            v45 = __clz(__rbit64(~v49)) + (v44 << 6);
          }
          *(_QWORD *)((char *)v41 + ((v45 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v45;
          *(_QWORD *)(v35[6] + 8 * v45) = v34;
          ++v35[2];
        }
        else
        {
LABEL_7:
          v16 = swift_bridgeObjectRelease(v18);
          ((void (*)(char *, uint64_t, __n128))v59[1])(v61, v60, v16);
          swift_release(v63);
        }
        v15 = __CocoaSet.Iterator.next()(result);
      }
      while (v15);
      v2 = v65;
      a2 = v51[0];
    }
    swift_release(a2);
    swift_release(v56);
  }
  else
  {
    v50 = sub_1005FC57C(a1, a2);
    if (!v3)
      return v50;
  }
  return (Swift::Int)v2;
}

uint64_t sub_1005FCBBC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  char *v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  __n128 v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  void (*v28)(char *, unint64_t, uint64_t);
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  void (*v40)(char *, uint64_t);
  __n128 v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  int64_t v48;
  unint64_t v49;
  char *v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  int64_t v55;
  uint64_t v56;
  char *v57;
  _QWORD *v58;

  v44 = a2;
  v45 = a1;
  v51 = sub_1004B804C(&qword_101405F50);
  __chkstk_darwin(v51);
  v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UUID(0);
  v58 = *(_QWORD **)(v8 - 8);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = __chkstk_darwin(v9);
  v14 = (char *)&v43 - v13;
  v15 = 0;
  v52 = (_QWORD *)a3;
  v16 = *(_QWORD *)(a3 + 64);
  v46 = 0;
  v47 = a3 + 64;
  v17 = 1 << *(_BYTE *)(a3 + 32);
  if (v17 < 64)
    v18 = ~(-1 << v17);
  else
    v18 = -1;
  v19 = v18 & v16;
  v48 = (unint64_t)(v17 + 63) >> 6;
  v56 = a4 + 56;
  v57 = v7;
  v50 = v14;
  while (1)
  {
    if (v19)
    {
      v54 = (v19 - 1) & v19;
      v55 = v15;
      v21 = __clz(__rbit64(v19)) | (v15 << 6);
      goto LABEL_23;
    }
    v22 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v22 >= v48)
      return sub_100835910(v45, v44, v46, v52);
    v23 = *(_QWORD *)(v47 + 8 * v22);
    v24 = v15 + 1;
    if (!v23)
    {
      v24 = v15 + 2;
      if (v15 + 2 >= v48)
        return sub_100835910(v45, v44, v46, v52);
      v23 = *(_QWORD *)(v47 + 8 * v24);
      if (!v23)
      {
        v24 = v15 + 3;
        if (v15 + 3 >= v48)
          return sub_100835910(v45, v44, v46, v52);
        v23 = *(_QWORD *)(v47 + 8 * v24);
        if (!v23)
          break;
      }
    }
LABEL_22:
    v54 = (v23 - 1) & v23;
    v55 = v24;
    v21 = __clz(__rbit64(v23)) + (v24 << 6);
LABEL_23:
    v26 = v52;
    v27 = v58[9];
    v28 = (void (*)(char *, unint64_t, uint64_t))v58[2];
    v28(v14, v52[6] + v27 * v21, v8);
    v29 = v14;
    v30 = *(_QWORD *)(v26[7] + 8 * v21);
    v28(v7, (unint64_t)v29, v8);
    *(_QWORD *)&v7[*(int *)(v51 + 48)] = v30;
    v31 = *(_QWORD *)(a4 + 16);
    v53 = v30;
    if (!v31)
    {
      swift_retain_n(v30, 2);
      goto LABEL_6;
    }
    v49 = v21;
    v32 = *(_QWORD *)(a4 + 40);
    v33 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    swift_retain_n(v30, 2);
    v34 = dispatch thunk of Hashable._rawHashValue(seed:)(v32, v8, v33);
    v35 = -1 << *(_BYTE *)(a4 + 32);
    v36 = v34 & ~v35;
    if (((*(_QWORD *)(v56 + ((v36 >> 3) & 0xFFFFFFFFFFFFF8)) >> v36) & 1) != 0)
    {
      v37 = ~v35;
      while (1)
      {
        v38 = a4;
        v28(v11, *(_QWORD *)(a4 + 48) + v36 * v27, v8);
        sub_1004B7878((unint64_t *)&qword_1013E4880, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        v39 = dispatch thunk of static Equatable.== infix(_:_:)(v11, v57);
        v40 = (void (*)(char *, uint64_t))v58[1];
        v40(v11, v8);
        if ((v39 & 1) != 0)
          break;
        v36 = (v36 + 1) & v37;
        a4 = v38;
        if (((*(_QWORD *)(v56 + ((v36 >> 3) & 0xFFFFFFFFFFFFF8)) >> v36) & 1) == 0)
          goto LABEL_6;
      }
      v7 = v57;
      sub_1004CB800((uint64_t)v57, &qword_101405F50);
      v41 = swift_release(v53);
      v14 = v50;
      result = ((uint64_t (*)(char *, uint64_t, __n128))v40)(v50, v8, v41);
      *(unint64_t *)((char *)v45 + ((v49 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v49;
      v42 = __OFADD__(v46++, 1);
      a4 = v38;
      v19 = v54;
      v15 = v55;
      if (v42)
      {
        __break(1u);
        return sub_100835910(v45, v44, v46, v52);
      }
    }
    else
    {
LABEL_6:
      v7 = v57;
      sub_1004CB800((uint64_t)v57, &qword_101405F50);
      v20 = swift_release(v53);
      v14 = v50;
      result = ((uint64_t (*)(char *, uint64_t, __n128))v58[1])(v50, v8, v20);
      v19 = v54;
      v15 = v55;
    }
  }
  v25 = v15 + 4;
  if (v15 + 4 >= v48)
    return sub_100835910(v45, v44, v46, v52);
  v23 = *(_QWORD *)(v47 + 8 * v25);
  if (v23)
  {
    v24 = v15 + 4;
    goto LABEL_22;
  }
  while (1)
  {
    v24 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v24 >= v48)
      return sub_100835910(v45, v44, v46, v52);
    v23 = *(_QWORD *)(v47 + 8 * v24);
    ++v25;
    if (v23)
      goto LABEL_22;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1005FCFF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v5;
  unsigned int v6;
  unint64_t v7;
  size_t v8;
  uint64_t isStackAllocationSafe;
  uint64_t v10;
  __n128 v11;
  void *v12;
  uint64_t v14;

  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v7 = (unint64_t)((1 << v5) + 63) >> 6;
  v8 = 8 * v7;
  isStackAllocationSafe = swift_bridgeObjectRetain_n(a2, 2);
  if (v6 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(v8, 8), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v14 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    swift_bridgeObjectRetain(a2);
    v10 = sub_1005FCBBC((unint64_t *)((char *)&v14 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0)), v7, a1, a2);
    v11 = swift_bridgeObjectRelease(a2);
    if (v2)
      swift_willThrow(v11);
    swift_bridgeObjectRelease_n(a2, 2);
  }
  else
  {
    v12 = (void *)swift_slowAlloc(v8, -1);
    bzero(v12, v8);
    swift_bridgeObjectRetain(a2);
    v10 = sub_1005FCBBC((unint64_t *)v12, v7, a1, a2);
    swift_bridgeObjectRelease(a2);
    swift_slowDealloc(v12, -1, -1);
    swift_bridgeObjectRelease_n(a2, 2);
  }
  return v10;
}

uint64_t *sub_1005FD1A4(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  uint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v15);
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *(_OWORD *)v10 = *(_OWORD *)v11;
    *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
    v12 = (char *)a1 + v9;
    v13 = (uint64_t *)((char *)a2 + v9);
    v14 = *(uint64_t *)((char *)a2 + v9 + 8);
    if (v14 >> 60 == 15)
    {
      *(_OWORD *)v12 = *(_OWORD *)v13;
    }
    else
    {
      v16 = *v13;
      sub_1004BE310(*v13, v14);
      *(_QWORD *)v12 = v16;
      *((_QWORD *)v12 + 1) = v14;
    }
    v17 = a3[7];
    v18 = a3[8];
    v19 = *(uint64_t *)((char *)a2 + v17);
    *(uint64_t *)((char *)a1 + v17) = v19;
    v20 = *(uint64_t *)((char *)a2 + v18);
    *(uint64_t *)((char *)a1 + v18) = v20;
    v21 = a3[9];
    v22 = a3[10];
    v23 = *(uint64_t *)((char *)a2 + v21);
    *(uint64_t *)((char *)a1 + v21) = v23;
    v24 = *(uint64_t *)((char *)a2 + v22);
    *(uint64_t *)((char *)a1 + v22) = v24;
    swift_bridgeObjectRetain(v19);
    swift_bridgeObjectRetain(v20);
    swift_bridgeObjectRetain(v23);
    swift_bridgeObjectRetain(v24);
  }
  return a1;
}

double sub_1005FD2C0(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t *v5;
  unint64_t v6;
  double result;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = (uint64_t *)(a1 + a2[6]);
  v6 = v5[1];
  if (v6 >> 60 != 15)
    sub_1004BBBC8(*v5, v6);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[7]));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[8]));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[9]));
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[10])).n128_u64[0];
  return result;
}

uint64_t sub_1005FD348(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v10 + 16);
  v11 = a1 + v8;
  v12 = (uint64_t *)(a2 + v8);
  v13 = *(_QWORD *)(a2 + v8 + 8);
  if (v13 >> 60 == 15)
  {
    *(_OWORD *)v11 = *(_OWORD *)v12;
  }
  else
  {
    v14 = *v12;
    sub_1004BE310(*v12, v13);
    *(_QWORD *)v11 = v14;
    *(_QWORD *)(v11 + 8) = v13;
  }
  v15 = a3[7];
  v16 = a3[8];
  v17 = *(_QWORD *)(a2 + v15);
  *(_QWORD *)(a1 + v15) = v17;
  v18 = *(_QWORD *)(a2 + v16);
  *(_QWORD *)(a1 + v16) = v18;
  v19 = a3[9];
  v20 = a3[10];
  v21 = *(_QWORD *)(a2 + v19);
  *(_QWORD *)(a1 + v19) = v21;
  v22 = *(_QWORD *)(a2 + v20);
  *(_QWORD *)(a1 + v20) = v22;
  swift_bridgeObjectRetain(v17);
  swift_bridgeObjectRetain(v18);
  swift_bridgeObjectRetain(v21);
  swift_bridgeObjectRetain(v22);
  return a1;
}

uint64_t sub_1005FD438(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  v8[2] = v9[2];
  v10 = a3[6];
  v11 = (uint64_t *)(a1 + v10);
  v12 = (uint64_t *)(a2 + v10);
  v13 = *(_QWORD *)(a2 + v10 + 8);
  if (*(_QWORD *)(a1 + v10 + 8) >> 60 != 15)
  {
    if (v13 >> 60 != 15)
    {
      v15 = *v12;
      sub_1004BE310(v15, v13);
      v16 = *v11;
      v17 = v11[1];
      *v11 = v15;
      v11[1] = v13;
      sub_1004BBBC8(v16, v17);
      goto LABEL_8;
    }
    sub_100586C00((uint64_t)v11);
    goto LABEL_6;
  }
  if (v13 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)v11 = *(_OWORD *)v12;
    goto LABEL_8;
  }
  v14 = *v12;
  sub_1004BE310(v14, v13);
  *v11 = v14;
  v11[1] = v13;
LABEL_8:
  v18 = a3[7];
  v19 = *(_QWORD *)(a2 + v18);
  v20 = *(_QWORD *)(a1 + v18);
  *(_QWORD *)(a1 + v18) = v19;
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRelease(v20);
  v21 = a3[8];
  v22 = *(_QWORD *)(a2 + v21);
  v23 = *(_QWORD *)(a1 + v21);
  *(_QWORD *)(a1 + v21) = v22;
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRelease(v23);
  v24 = a3[9];
  v25 = *(_QWORD *)(a2 + v24);
  v26 = *(_QWORD *)(a1 + v24);
  *(_QWORD *)(a1 + v24) = v25;
  swift_bridgeObjectRetain(v25);
  swift_bridgeObjectRelease(v26);
  v27 = a3[10];
  v28 = *(_QWORD *)(a2 + v27);
  v29 = *(_QWORD *)(a1 + v27);
  *(_QWORD *)(a1 + v27) = v28;
  swift_bridgeObjectRetain(v28);
  swift_bridgeObjectRelease(v29);
  return a1;
}

uint64_t sub_1005FD5A4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v10 + 16);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  v11 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);
  v12 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  return a1;
}

uint64_t sub_1005FD640(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v10 + 16);
  v11 = (uint64_t *)(a1 + v8);
  v12 = (uint64_t *)(a2 + v8);
  v13 = *(_QWORD *)(a1 + v8 + 8);
  if (v13 >> 60 != 15)
  {
    v14 = v12[1];
    if (v14 >> 60 != 15)
    {
      v15 = *v11;
      *v11 = *v12;
      v11[1] = v14;
      sub_1004BBBC8(v15, v13);
      goto LABEL_6;
    }
    sub_100586C00((uint64_t)v11);
  }
  *(_OWORD *)v11 = *(_OWORD *)v12;
LABEL_6:
  v16 = a3[7];
  v17 = *(_QWORD *)(a1 + v16);
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);
  swift_bridgeObjectRelease(v17);
  v18 = a3[8];
  v19 = *(_QWORD *)(a1 + v18);
  *(_QWORD *)(a1 + v18) = *(_QWORD *)(a2 + v18);
  swift_bridgeObjectRelease(v19);
  v20 = a3[9];
  v21 = *(_QWORD *)(a1 + v20);
  *(_QWORD *)(a1 + v20) = *(_QWORD *)(a2 + v20);
  swift_bridgeObjectRelease(v21);
  v22 = a3[10];
  v23 = *(_QWORD *)(a1 + v22);
  *(_QWORD *)(a1 + v22) = *(_QWORD *)(a2 + v22);
  swift_bridgeObjectRelease(v23);
  return a1;
}

uint64_t sub_1005FD750(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005FD75C);
}

uint64_t sub_1005FD75C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1005FD7D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005FD7E4);
}

uint64_t sub_1005FD7E4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  return result;
}

uint64_t sub_1005FD85C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[7];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100EFE1C8;
    v4[2] = &unk_100EFE1E0;
    v4[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[5] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[6] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_initStructMetadata(a1, 256, 7, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t *sub_1005FD8EC(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  _BYTE *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t, __n128);
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v36 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v36 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v36);
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = a3[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for UUID(0);
    v11 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v10 - 8) + 16);
    ((void (*)(_BYTE *, char *, uint64_t))v11)(v8, v9, v10);
    v12 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
    v13 = &v8[v12];
    v14 = &v9[v12];
    v15 = *((_QWORD *)v14 + 1);
    *v13 = *(_QWORD *)v14;
    v13[1] = v15;
    v16 = a3[6];
    v17 = (char *)v4 + v16;
    v18 = (char *)a2 + v16;
    v19 = swift_bridgeObjectRetain(v15);
    v11(v17, v18, v10, v19);
    v20 = a3[7];
    v21 = a3[8];
    v22 = *(uint64_t *)((char *)a2 + v20);
    *(uint64_t *)((char *)v4 + v20) = v22;
    v23 = *(uint64_t *)((char *)a2 + v21);
    *(uint64_t *)((char *)v4 + v21) = v23;
    v24 = a3[9];
    v25 = a3[10];
    v26 = *(uint64_t *)((char *)a2 + v24);
    *(uint64_t *)((char *)v4 + v24) = v26;
    v27 = *(uint64_t *)((char *)a2 + v25);
    *(uint64_t *)((char *)v4 + v25) = v27;
    v28 = a3[11];
    v29 = a3[12];
    v30 = *(uint64_t *)((char *)a2 + v28);
    *(uint64_t *)((char *)v4 + v28) = v30;
    v31 = *(uint64_t *)((char *)a2 + v29);
    *(uint64_t *)((char *)v4 + v29) = v31;
    v32 = a3[13];
    v33 = a3[14];
    v34 = *(uint64_t *)((char *)a2 + v32);
    *(uint64_t *)((char *)v4 + v32) = v34;
    v35 = *(uint64_t *)((char *)a2 + v33);
    *(uint64_t *)((char *)v4 + v33) = v35;
    swift_retain(v22);
    swift_bridgeObjectRetain(v23);
    swift_bridgeObjectRetain(v26);
    swift_bridgeObjectRetain(v27);
    swift_bridgeObjectRetain(v30);
    swift_bridgeObjectRetain(v31);
    swift_bridgeObjectRetain(v34);
    swift_bridgeObjectRetain(v35);
  }
  return v4;
}

double sub_1005FDA58(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  __n128 v8;
  double result;

  v4 = a1 + a2[5];
  v5 = type metadata accessor for UUID(0);
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v7 = type metadata accessor for CRLBoardIdentifierStorage(0);
  v8 = swift_bridgeObjectRelease(*(_QWORD *)(v4 + *(int *)(v7 + 20) + 8));
  ((void (*)(uint64_t, uint64_t, __n128))v6)(a1 + a2[6], v5, v8);
  swift_release(*(_QWORD *)(a1 + a2[7]));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[8]));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[9]));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[10]));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[11]));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[12]));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[13]));
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[14])).n128_u64[0];
  return result;
}

_BYTE *sub_1005FDB34(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  void (*v10)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for UUID(0);
  v10 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  v11 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  v12 = &v7[v11];
  v13 = &v8[v11];
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[6];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = swift_bridgeObjectRetain(v14);
  ((void (*)(_BYTE *, _BYTE *, uint64_t, __n128))v10)(v16, v17, v9, v18);
  v19 = a3[7];
  v20 = a3[8];
  v21 = *(_QWORD *)&a2[v19];
  *(_QWORD *)&a1[v19] = v21;
  v22 = *(_QWORD *)&a2[v20];
  *(_QWORD *)&a1[v20] = v22;
  v23 = a3[9];
  v24 = a3[10];
  v25 = *(_QWORD *)&a2[v23];
  *(_QWORD *)&a1[v23] = v25;
  v26 = *(_QWORD *)&a2[v24];
  *(_QWORD *)&a1[v24] = v26;
  v27 = a3[11];
  v28 = a3[12];
  v29 = *(_QWORD *)&a2[v27];
  *(_QWORD *)&a1[v27] = v29;
  v30 = *(_QWORD *)&a2[v28];
  *(_QWORD *)&a1[v28] = v30;
  v31 = a3[13];
  v32 = a3[14];
  v33 = *(_QWORD *)&a2[v31];
  *(_QWORD *)&a1[v31] = v33;
  v34 = *(_QWORD *)&a2[v32];
  *(_QWORD *)&a1[v32] = v34;
  swift_retain(v21);
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRetain(v25);
  swift_bridgeObjectRetain(v26);
  swift_bridgeObjectRetain(v29);
  swift_bridgeObjectRetain(v30);
  swift_bridgeObjectRetain(v33);
  swift_bridgeObjectRetain(v34);
  return a1;
}

_BYTE *sub_1005FDC74(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  void (*v10)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for UUID(0);
  v10 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v11 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  v12 = &v7[v11];
  v13 = &v8[v11];
  *v12 = *v13;
  v14 = v13[1];
  v15 = v12[1];
  v12[1] = v14;
  swift_bridgeObjectRetain(v14);
  v16 = swift_bridgeObjectRelease(v15);
  ((void (*)(_BYTE *, _BYTE *, uint64_t, __n128))v10)(&a1[a3[6]], &a2[a3[6]], v9, v16);
  v17 = a3[7];
  v18 = *(_QWORD *)&a1[v17];
  v19 = *(_QWORD *)&a2[v17];
  *(_QWORD *)&a1[v17] = v19;
  swift_retain(v19);
  swift_release(v18);
  v20 = a3[8];
  v21 = *(_QWORD *)&a2[v20];
  v22 = *(_QWORD *)&a1[v20];
  *(_QWORD *)&a1[v20] = v21;
  swift_bridgeObjectRetain(v21);
  swift_bridgeObjectRelease(v22);
  v23 = a3[9];
  v24 = *(_QWORD *)&a2[v23];
  v25 = *(_QWORD *)&a1[v23];
  *(_QWORD *)&a1[v23] = v24;
  swift_bridgeObjectRetain(v24);
  swift_bridgeObjectRelease(v25);
  v26 = a3[10];
  v27 = *(_QWORD *)&a2[v26];
  v28 = *(_QWORD *)&a1[v26];
  *(_QWORD *)&a1[v26] = v27;
  swift_bridgeObjectRetain(v27);
  swift_bridgeObjectRelease(v28);
  v29 = a3[11];
  v30 = *(_QWORD *)&a2[v29];
  v31 = *(_QWORD *)&a1[v29];
  *(_QWORD *)&a1[v29] = v30;
  swift_bridgeObjectRetain(v30);
  swift_bridgeObjectRelease(v31);
  v32 = a3[12];
  v33 = *(_QWORD *)&a2[v32];
  v34 = *(_QWORD *)&a1[v32];
  *(_QWORD *)&a1[v32] = v33;
  swift_bridgeObjectRetain(v33);
  swift_bridgeObjectRelease(v34);
  v35 = a3[13];
  v36 = *(_QWORD *)&a1[v35];
  v37 = *(_QWORD *)&a2[v35];
  *(_QWORD *)&a1[v35] = v37;
  swift_bridgeObjectRetain(v37);
  swift_bridgeObjectRelease(v36);
  v38 = a3[14];
  v39 = *(_QWORD *)&a2[v38];
  v40 = *(_QWORD *)&a1[v38];
  *(_QWORD *)&a1[v38] = v39;
  swift_bridgeObjectRetain(v39);
  swift_bridgeObjectRelease(v40);
  return a1;
}

_BYTE *sub_1005FDE14(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  void (*v10)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for UUID(0);
  v10 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = type metadata accessor for CRLBoardIdentifierStorage(0);
  *(_OWORD *)&v7[*(int *)(v11 + 20)] = *(_OWORD *)&v8[*(int *)(v11 + 20)];
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  v12 = a3[8];
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  *(_QWORD *)&a1[v12] = *(_QWORD *)&a2[v12];
  v13 = a3[10];
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  *(_QWORD *)&a1[v13] = *(_QWORD *)&a2[v13];
  v14 = a3[12];
  *(_QWORD *)&a1[a3[11]] = *(_QWORD *)&a2[a3[11]];
  *(_QWORD *)&a1[v14] = *(_QWORD *)&a2[v14];
  v15 = a3[14];
  *(_QWORD *)&a1[a3[13]] = *(_QWORD *)&a2[a3[13]];
  *(_QWORD *)&a1[v15] = *(_QWORD *)&a2[v15];
  return a1;
}

_BYTE *sub_1005FDF04(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  void (*v10)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for UUID(0);
  v10 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 40);
  v10(v7, v8, v9);
  v11 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  v12 = &v7[v11];
  v13 = (uint64_t *)&v8[v11];
  v15 = *v13;
  v14 = v13[1];
  v16 = v12[1];
  *v12 = v15;
  v12[1] = v14;
  v17 = swift_bridgeObjectRelease(v16);
  ((void (*)(_BYTE *, _BYTE *, uint64_t, __n128))v10)(&a1[a3[6]], &a2[a3[6]], v9, v17);
  v18 = a3[7];
  v19 = *(_QWORD *)&a1[v18];
  *(_QWORD *)&a1[v18] = *(_QWORD *)&a2[v18];
  swift_release(v19);
  v20 = a3[8];
  v21 = *(_QWORD *)&a1[v20];
  *(_QWORD *)&a1[v20] = *(_QWORD *)&a2[v20];
  swift_bridgeObjectRelease(v21);
  v22 = a3[9];
  v23 = *(_QWORD *)&a1[v22];
  *(_QWORD *)&a1[v22] = *(_QWORD *)&a2[v22];
  swift_bridgeObjectRelease(v23);
  v24 = a3[10];
  v25 = *(_QWORD *)&a1[v24];
  *(_QWORD *)&a1[v24] = *(_QWORD *)&a2[v24];
  swift_bridgeObjectRelease(v25);
  v26 = a3[11];
  v27 = *(_QWORD *)&a1[v26];
  *(_QWORD *)&a1[v26] = *(_QWORD *)&a2[v26];
  swift_bridgeObjectRelease(v27);
  v28 = a3[12];
  v29 = *(_QWORD *)&a1[v28];
  *(_QWORD *)&a1[v28] = *(_QWORD *)&a2[v28];
  swift_bridgeObjectRelease(v29);
  v30 = a3[13];
  v31 = *(_QWORD *)&a1[v30];
  *(_QWORD *)&a1[v30] = *(_QWORD *)&a2[v30];
  swift_bridgeObjectRelease(v31);
  v32 = a3[14];
  v33 = *(_QWORD *)&a1[v32];
  *(_QWORD *)&a1[v32] = *(_QWORD *)&a2[v32];
  swift_bridgeObjectRelease(v33);
  return a1;
}

uint64_t sub_1005FE054(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005FE060);
}

uint64_t sub_1005FE060(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v12;

  v6 = type metadata accessor for CRLBoardIdentifier(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = a3[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v10 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v10 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v10;
    v9 = a3[6];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v12 = *(_QWORD *)(a1 + a3[8]);
  if (v12 >= 0xFFFFFFFF)
    LODWORD(v12) = -1;
  return (v12 + 1);
}

uint64_t sub_1005FE104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005FE110);
}

uint64_t sub_1005FE110(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  v8 = type metadata accessor for CRLBoardIdentifier(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = a4[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
  }
  result = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = a4[6];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
  }
  *(_QWORD *)(a1 + a4[8]) = (a2 - 1);
  return result;
}

uint64_t sub_1005FE1B0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[11];

  v5[0] = &unk_100EFE220;
  result = type metadata accessor for CRLBoardIdentifierStorage(319);
  if (v3 <= 0x3F)
  {
    v5[1] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for UUID(319);
    if (v4 <= 0x3F)
    {
      v5[2] = *(_QWORD *)(result - 8) + 64;
      v5[3] = "\b";
      v5[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v5[5] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v5[6] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v5[7] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v5[8] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v5[9] = "\b";
      v5[10] = (char *)&value witness table for Builtin.BridgeObject + 64;
      swift_initStructMetadata(a1, 256, 11, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

uint64_t sub_1005FE268(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1005FE2EC(a1, a2, a3, &qword_1013DF538, type metadata accessor for CRLTombstoneBoardItemRealTimeChangeRecord, (uint64_t)"E)7");
}

uint64_t sub_1005FE294(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1005FE404(a1, a2, a3, &qword_1013E4D80, type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecord, (uint64_t)&unk_100EFBB5C);
}

uint64_t sub_1005FE2C0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1005FE2EC(a1, a2, a3, &qword_1013E76E8, type metadata accessor for CRLBoardRealTimeChangeRecord, (uint64_t)&unk_100F107D0);
}

uint64_t sub_1005FE2EC(_QWORD *a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t (*a5)(uint64_t), uint64_t a6)
{
  uint64_t *v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v16;

  v16 = *v6;
  v11 = a1[3];
  v12 = a1[4];
  sub_1004BB5A4(a1, v11);
  v13 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 8);
  v14 = sub_1004B7878(a4, a5, a6);
  return v13(&v16, a2, v14, v11, v12);
}

uint64_t sub_1005FE380(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1005FE2EC(a1, a2, a3, &qword_1013E76F0, (uint64_t (*)(uint64_t))type metadata accessor for CRLSharePlayRealTimeChangeRecord, (uint64_t)&unk_100F28344);
}

uint64_t sub_1005FE3AC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1005FE2EC(a1, a2, a3, &qword_1013E76F8, type metadata accessor for CRLBoardItemRealTimeChangeRecord, (uint64_t)&unk_100F2D410);
}

uint64_t sub_1005FE3D8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1005FE404(a1, a2, a3, (unint64_t *)&unk_1013E7700, type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecordLegacy, (uint64_t)&unk_100F2DD94);
}

uint64_t sub_1005FE404(_QWORD *a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v14;

  v11 = a1[3];
  v12 = a1[4];
  sub_1004BB5A4(a1, v11);
  v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 8);
  v14 = sub_1004B7878(a4, a5, a6);
  return v13(v6, a2, v14, v11, v12);
}

uint64_t sub_1005FE494(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[5];
  uint64_t v17;
  _OWORD v18[2];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v3 = type metadata accessor for __ContiguousArrayStorageBase(0);
    swift_bridgeObjectRetain(a1);
    v5 = swift_unknownObjectRetain_n(v4, 2);
    v6 = (_QWORD *)swift_dynamicCastClass(v5, v3);
    if (!v6)
    {
      swift_bridgeObjectRelease(a1);
      v6 = _swiftEmptyArrayStorage;
    }
    v7 = v6[2];
    swift_release(v6);
    if (v7 == v2 - 1)
    {
      v8 = (char *)swift_dynamicCastClass(a1, v3);
      if (!v8)
      {
        swift_bridgeObjectRelease(a1);
        v8 = (char *)_swiftEmptyArrayStorage;
      }
    }
    else
    {
      swift_bridgeObjectRelease(a1);
      v8 = sub_1005FF6D8(a1, a1 + 32, 1, (2 * v2) | 1);
    }
    swift_bridgeObjectRelease(a1);
    v9 = *(_OWORD *)(a1 + 48);
    v18[0] = *(_OWORD *)(a1 + 32);
    v18[1] = v9;
    v10 = sub_1005FE494(v8);
    swift_release(v8);
    __chkstk_darwin(v11);
    v16[2] = v18;
    v12 = sub_100B108A0((void (*)(uint64_t *__return_ptr, uint64_t *, __n128))sub_10060482C, (uint64_t)v16, v10);
    v17 = v10;
    sub_100620968((uint64_t)v12);
    return v17;
  }
  else
  {
    v14 = sub_1004B804C(&qword_1013E7A58);
    v13 = swift_allocObject(v14, 40, 7);
    *(_OWORD *)(v13 + 16) = xmmword_100EF5E40;
    *(_QWORD *)(v13 + 32) = a1;
    swift_bridgeObjectRetain(a1);
  }
  return v13;
}

double CRLImageFaceAnalyzerResult.interestingFacesRect.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC8Freeform26CRLImageFaceAnalyzerResult_interestingFacesRect);
}

void CRLImageFaceAnalyzerResult.__allocating_init(faceRectValues:)(uint64_t a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  CRLImageFaceAnalyzerResult.init(faceRectValues:)(a1);
}

void CRLImageFaceAnalyzerResult.init(faceRectValues:)(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  double *v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t ObjectType;
  uint64_t v37;
  _QWORD *v38;
  objc_class *v39;
  char *v40;
  double *v41;
  uint64_t v42;
  objc_super v43;
  uint64_t v44;

  v2 = v1;
  if (!a1)
    goto LABEL_25;
  v4 = a1 & 0xFFFFFFFFFFFFFF8;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v4 = a1;
    v33 = v2;
    swift_bridgeObjectRetain(a1);
    v34 = _CocoaArrayWrapper.endIndex.getter(v4);
    swift_bridgeObjectRelease(a1);
    if (v34)
    {
      swift_bridgeObjectRetain(a1);
      v4 = (uint64_t)sub_1005FFD18(v35, (uint64_t (*)(_QWORD *, uint64_t, uint64_t, __n128))sub_100603030);
      swift_bridgeObjectRelease(a1);
      goto LABEL_5;
    }
    goto LABEL_24;
  }
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v6 = v2;
  if (!v5)
  {
LABEL_24:
    swift_bridgeObjectRelease(a1);

LABEL_25:
    ObjectType = swift_getObjectType(v2);
    swift_deallocPartialClassInstance(v2, ObjectType, 48, 7);
    return;
  }
  swift_bridgeObjectRetain(a1);
LABEL_5:
  v44 = v4;
  sub_100600D28(&v44);
  swift_bridgeObjectRelease(a1);
  v7 = v44;
  if ((v44 & 0x8000000000000000) == 0 && (v44 & 0x4000000000000000) == 0)
  {
    v8 = *(_QWORD *)(v44 + 16);
    if (v8)
      goto LABEL_8;
LABEL_27:
    swift_release(v7);
    v10 = _swiftEmptyArrayStorage;
    v24 = _swiftEmptyArrayStorage[2];
    if (v24)
    {
LABEL_17:
      v25 = (double *)(v10 + 7);
      v26 = 0.0;
      v27 = 0.0;
      v28 = 0.0;
      v29 = 0.0;
      do
      {
        v28 = sub_100060C2C(v28, v29, v26, v27, *(v25 - 3), *(v25 - 2), *(v25 - 1), *v25);
        v29 = v30;
        v26 = v31;
        v27 = v32;
        v25 += 4;
        --v24;
      }
      while (v24);
      goto LABEL_29;
    }
LABEL_28:
    v26 = 0.0;
    v27 = 0.0;
    v28 = 0.0;
    v29 = 0.0;
LABEL_29:
    v38 = sub_1006044D4(v10);

    swift_bridgeObjectRelease(v10);
    v39 = (objc_class *)type metadata accessor for CRLImageFaceAnalyzerResult();
    v40 = (char *)objc_allocWithZone(v39);
    v41 = (double *)&v40[OBJC_IVAR____TtC8Freeform26CRLImageFaceAnalyzerResult_interestingFacesRect];
    *v41 = v28;
    v41[1] = v29;
    v41[2] = v26;
    v41[3] = v27;
    *(_QWORD *)&v40[OBJC_IVAR____TtC8Freeform26CRLImageFaceAnalyzerResult_faceRectCombinations] = v38;
    v43.receiver = v40;
    v43.super_class = v39;
    objc_msgSendSuper2(&v43, "init");
    v42 = swift_getObjectType(v2);
    swift_deallocPartialClassInstance(v2, v42, 48, 7);
    return;
  }
  swift_bridgeObjectRetain(v44);
  v8 = _CocoaArrayWrapper.endIndex.getter(v37);
  swift_release(v7);
  if (!v8)
    goto LABEL_27;
LABEL_8:
  v44 = (uint64_t)_swiftEmptyArrayStorage;
  sub_100600A6C(0, v8 & ~(v8 >> 63), 0);
  if ((v8 & 0x8000000000000000) == 0)
  {
    v9 = 0;
    v10 = (_QWORD *)v44;
    do
    {
      if ((v7 & 0xC000000000000001) != 0)
        v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v7);
      else
        v11 = *(id *)(v7 + 8 * v9 + 32);
      v12 = v11;
      objc_msgSend(v11, "CGRectValue");
      v14 = v13;
      v16 = v15;
      v18 = v17;
      v20 = v19;

      v44 = (uint64_t)v10;
      v22 = v10[2];
      v21 = v10[3];
      if (v22 >= v21 >> 1)
      {
        sub_100600A6C(v21 > 1, v22 + 1, 1);
        v10 = (_QWORD *)v44;
      }
      ++v9;
      v10[2] = v22 + 1;
      v23 = &v10[4 * v22];
      v23[4] = v14;
      v23[5] = v16;
      v23[6] = v18;
      v23[7] = v20;
    }
    while (v8 != v9);
    swift_release(v7);
    v24 = v10[2];
    if (v24)
      goto LABEL_17;
    goto LABEL_28;
  }
  __break(1u);
  swift_release(v44);
  __break(1u);
}

void CRLImageFaceAnalyzerResult.maskCenterForFaces(imageSize:maskSize:defaultCenter:)(float64_t a1, float64_t a2, double a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  unint64_t v9;
  unint64_t v10;
  float64x2_t v11;
  uint64_t v12;
  float64x2_t v13;
  float64x2_t v14;
  unint64_t v15;
  unint64_t v16;
  float64x2_t *v17;
  double v18;
  double *v19;
  unint64_t v20;
  unint64_t v21;
  __int128 v22;
  double *v23;
  unint64_t *v25;
  double v26;
  CGFloat v27;
  CGFloat v28;
  CGFloat v29;
  CGFloat v30;
  unint64_t v31;
  unint64_t v32;
  double *v33;
  double v34;
  double v35;
  double v36;
  unint64_t v37;
  double *v38;
  double v39;
  double v40;
  CGFloat v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  CGFloat v47;
  CGFloat v48;
  CGFloat v49;
  double v50;
  CGFloat v51;
  CGFloat v52;
  CGFloat v53;
  float64x2_t v54;
  float64x2_t v57;
  __int128 v58;
  CGFloat v59;
  float64x2_t v60;
  __int128 v61;
  CGFloat v62;

  v5 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform26CRLImageFaceAnalyzerResult_faceRectCombinations);
  v6 = *(_QWORD *)(v5 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain(v5);
    sub_100600A6C(0, v6, 0);
    v9 = 0;
    v10 = *(_QWORD *)&_swiftEmptyArrayStorage[2];
    v11.f64[0] = a1;
    v11.f64[1] = a2;
    v12 = 4 * v10;
    do
    {
      v13 = *(float64x2_t *)(v5 + v9 + 32);
      v14 = *(float64x2_t *)(v5 + v9 + 48);
      v15 = *(_QWORD *)&_swiftEmptyArrayStorage[3];
      v16 = v10 + 1;
      if (v10 >= v15 >> 1)
      {
        v57 = *(float64x2_t *)(v5 + v9 + 32);
        v60 = v11;
        v54 = *(float64x2_t *)(v5 + v9 + 48);
        sub_100600A6C(v15 > 1, v10 + 1, 1);
        v14 = v54;
        v13 = v57;
        v11 = v60;
      }
      *(_QWORD *)&_swiftEmptyArrayStorage[2] = v16;
      v17 = (float64x2_t *)&_swiftEmptyArrayStorage[v12 + v9 / 8];
      v17[2] = vmulq_f64(v13, v11);
      v17[3] = vmulq_f64(v14, v11);
      v9 += 32;
      v10 = v16;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease(v5);
    v18 = _swiftEmptyArrayStorage[2];
    if (v18 == 0.0)
    {
      v25 = (unint64_t *)&_swiftEmptyArrayStorage[2];
      v26 = _swiftEmptyArrayStorage[2];
      if (v26 == 0.0)
      {
LABEL_36:
        swift_release(_swiftEmptyArrayStorage);
        swift_release(_swiftEmptyArrayStorage);
        __break(1u);
        return;
      }
    }
    else
    {
      swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
      v19 = &_swiftEmptyArrayStorage[6];
      do
      {
        if (*v19 <= a3 && v19[1] <= a4)
        {
          v58 = *((_OWORD *)v19 - 1);
          v61 = *(_OWORD *)v19;
          if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
            sub_100600A6C(0, *(_QWORD *)&_swiftEmptyArrayStorage[2] + 1, 1);
          v21 = *(_QWORD *)&_swiftEmptyArrayStorage[2];
          v20 = *(_QWORD *)&_swiftEmptyArrayStorage[3];
          v22 = v61;
          if (v21 >= v20 >> 1)
          {
            sub_100600A6C(v20 > 1, v21 + 1, 1);
            v22 = v61;
          }
          *(_QWORD *)&_swiftEmptyArrayStorage[2] = v21 + 1;
          v23 = &_swiftEmptyArrayStorage[4 * v21];
          *((_OWORD *)v23 + 2) = v58;
          *((_OWORD *)v23 + 3) = v22;
        }
        v19 += 4;
        --*(_QWORD *)&v18;
      }
      while (v18 != 0.0);
      swift_release(_swiftEmptyArrayStorage);
      v25 = (unint64_t *)&_swiftEmptyArrayStorage[2];
      v26 = _swiftEmptyArrayStorage[2];
      if (v26 == 0.0)
      {
        swift_release(_swiftEmptyArrayStorage);
        if (*(_QWORD *)&_swiftEmptyArrayStorage[2])
        {
          v27 = _swiftEmptyArrayStorage[4];
          v28 = _swiftEmptyArrayStorage[5];
          v29 = _swiftEmptyArrayStorage[6];
          v30 = _swiftEmptyArrayStorage[7];
LABEL_31:
          swift_release(_swiftEmptyArrayStorage);
          v39 = sub_10005FDDC();
          v41 = v40;
          v62 = v42;
          v59 = v43;
          v44 = sub_100061400(v27, v28, v29, v30);
          v46 = sub_10005FD98(v44, v45, a3);
          v50 = sub_100061AD8(v46, v47, v48, v49, v39, v41, v62, v59);
          sub_100061400(v50, v51, v52, v53);
          return;
        }
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
    }
    swift_release(_swiftEmptyArrayStorage);
    v31 = 0;
    v32 = 0;
    v33 = &_swiftEmptyArrayStorage[7];
    v34 = 1.79769313e308;
    do
    {
      v35 = a4 - *v33;
      v36 = a3 - *(v33 - 1) + v35;
      if (v36 < v34)
        v31 = v32;
      v37 = v32 + 1;
      if (v36 < v34)
        v34 = a3 - *(v33 - 1) + v35;
      v33 += 4;
      ++v32;
    }
    while (*(_QWORD *)&v26 != v37);
    if ((v31 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v31 < *v25)
    {
      v38 = &_swiftEmptyArrayStorage[4 * v31 + 4];
      v27 = *v38;
      v28 = v38[1];
      v29 = v38[2];
      v30 = v38[3];
      goto LABEL_31;
    }
    __break(1u);
    goto LABEL_35;
  }
}

void CRLImageFaceAnalyzerResult.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("Freeform.CRLImageFaceAnalyzerResult", 35, "init()", 6, 0);
  __break(1u);
}

id CRLImageFaceAnalyzerResult.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLImageFaceAnalyzerResult();
  return objc_msgSendSuper2(&v2, "dealloc");
}

_QWORD *sub_1005FEE3C(uint64_t a1)
{
  return sub_1005FFD18(a1, (uint64_t (*)(_QWORD *, uint64_t, uint64_t, __n128))&specialized _ArrayBuffer._copyContents(initializing:));
}

_QWORD *sub_1005FEE48(uint64_t a1)
{
  return sub_1005FFAC8(a1, (uint64_t (*)(uint64_t *, char *, uint64_t, uint64_t, __n128))sub_10062B390);
}

_QWORD *sub_1005FEE54(uint64_t a1)
{
  return sub_1006005E8(a1, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t, __n128))sub_10062B6E0);
}

double *sub_1005FEE60(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  double *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  double *result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
    goto LABEL_18;
  if (!v5)
    return _swiftEmptyArrayStorage;
  v8 = 8 * v5;
  if (v5 <= 0)
  {
    v10 = _swiftEmptyArrayStorage;
    if (v4 != a3)
      goto LABEL_7;
    goto LABEL_17;
  }
  v9 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v10 = (double *)swift_allocObject(v9, v8 + 32, 7);
  v11 = j__malloc_size(v10);
  v12 = v11 - 32;
  if (v11 < 32)
    v12 = v11 - 25;
  *((_QWORD *)v10 + 2) = v5;
  *((_QWORD *)v10 + 3) = (2 * (v12 >> 3)) | 1;
  if (v4 == a3)
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
LABEL_7:
  if (v5 < 0)
  {
LABEL_19:
    result = (double *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_20;
  }
  v13 = a2 + 8 * a3;
  if (v13 >= (unint64_t)&v10[(unint64_t)v8 / 8 + 4] || (unint64_t)(v10 + 4) >= v13 + v8)
  {
    sub_1004B8930(0, (unint64_t *)&unk_1013DFBC0, UIButton_ptr);
    swift_arrayInitWithCopy(v10 + 4);
    return v10;
  }
  result = (double *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_20:
  __break(1u);
  return result;
}

_QWORD *sub_1005FEFF0(uint64_t a1)
{
  return sub_1005FFD18(a1, (uint64_t (*)(_QWORD *, uint64_t, uint64_t, __n128))sub_1006026F0);
}

_QWORD *sub_1005FEFFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return _swiftEmptyArrayStorage;
  v3 = sub_1004B804C(&qword_1013E7788);
  v4 = (_QWORD *)swift_allocObject(v3, 40 * v1 + 32, 7);
  v5 = j__malloc_size(v4);
  v4[2] = v1;
  v4[3] = 2 * ((uint64_t)(v5 - 32) / 40);
  v6 = sub_10062B708((uint64_t)&v9, (uint64_t)(v4 + 4), v1, a1);
  v7 = v9;
  swift_bridgeObjectRetain(a1);
  sub_1004D284C(v7);
  if (v6 != v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v4;
}

_QWORD *sub_1005FF0EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return _swiftEmptyArrayStorage;
  v3 = sub_1004B804C(&qword_1013E79C8);
  v4 = (_QWORD *)swift_allocObject(v3, 8 * v1 + 32, 7);
  v5 = j__malloc_size(v4);
  v6 = v5 - 32;
  if (v5 < 32)
    v6 = v5 - 25;
  v4[2] = v1;
  v4[3] = 2 * (v6 >> 3);
  v7 = sub_10062B910(&v10, v4 + 4, v1, a1);
  v8 = v10;
  swift_bridgeObjectRetain(a1);
  sub_1004D284C(v8);
  if (v7 != (_QWORD *)v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v4;
}

_QWORD *sub_1005FF1D0(uint64_t a1)
{
  return sub_1005FFD18(a1, (uint64_t (*)(_QWORD *, uint64_t, uint64_t, __n128))sub_100602970);
}

double *sub_1005FF1DC(char *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int64_t v7;
  uint64_t v8;
  char *v9;
  double *result;

  if (!a2)
    return _swiftEmptyArrayStorage;
  if (a2 <= 0)
  {
    result = (double *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
  }
  else
  {
    v4 = sub_1004B804C(&qword_1013E77B0);
    v5 = 4 * a2;
    v6 = (char *)swift_allocObject(v4, 4 * a2 + 32, 7);
    v7 = j__malloc_size(v6);
    v8 = v7 - 32;
    if (v7 < 32)
      v8 = v7 - 29;
    *((_QWORD *)v6 + 2) = a2;
    *((_QWORD *)v6 + 3) = 2 * (v8 >> 2);
    v9 = v6 + 32;
    if (&v6[v5 + 32] <= a1 || v9 >= &a1[v5])
    {
      memcpy(v9, a1, 4 * a2);
      return (double *)v6;
    }
    result = (double *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  }
  __break(1u);
  return result;
}

double *sub_1005FF310(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return _swiftEmptyArrayStorage;
  v3 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v4 = (_QWORD *)swift_allocObject(v3, 8 * v1 + 32, 7);
  v5 = j__malloc_size(v4);
  v6 = v5 - 32;
  if (v5 < 32)
    v6 = v5 - 25;
  v4[2] = v1;
  v4[3] = (2 * (v6 >> 3)) | 1;
  v7 = sub_10062BAA4((uint64_t)&v10, v4 + 4, v1, a1);
  v8 = v10;
  swift_bridgeObjectRetain(a1);
  sub_1004D284C(v8);
  if (v7 != v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return (double *)v4;
}

_QWORD *sub_1005FF3F8(uint64_t a1)
{
  return sub_1006005E8(a1, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t, __n128))sub_10062BC9C);
}

_QWORD *sub_1005FF404(uint64_t a1)
{
  return sub_1005FFBE8(a1, (void (*)(_QWORD))type metadata accessor for CRLBoardItem, &qword_1013E7868, &qword_1013E7860, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_10060199C);
}

_QWORD *sub_1005FF428(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1006000AC(a1, a2, a3, a4, &qword_1013E79D8, (uint64_t (*)(_QWORD))&type metadata accessor for IntentFile);
}

_QWORD *sub_1005FF43C(uint64_t a1)
{
  return sub_1005FFBE8(a1, (void (*)(_QWORD))type metadata accessor for CRLBoardLibraryViewModelItemNode, &qword_1013E7770, &qword_1013E7768, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_10060199C);
}

_QWORD *sub_1005FF460(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *result;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return _swiftEmptyArrayStorage;
  v3 = sub_1004B804C(&qword_1013E77A8);
  v4 = *(_QWORD *)(type metadata accessor for UUID(0) - 8);
  v5 = *(_QWORD *)(v4 + 72);
  v6 = *(unsigned __int8 *)(v4 + 80);
  v7 = (v6 + 32) & ~v6;
  v8 = (_QWORD *)swift_allocObject(v3, v7 + v5 * v1, v6 | 7);
  result = (_QWORD *)j__malloc_size(v8);
  if (v5)
  {
    if ((_QWORD *)((char *)result - v7) != (_QWORD *)0x8000000000000000 || v5 != -1)
    {
      v8[2] = v1;
      v8[3] = 2 * (((uint64_t)result - v7) / v5);
      swift_bridgeObjectRetain(a1);
      v11 = sub_10062BCB0(&v12, (uint64_t)v8 + v7, v1, a1);
      sub_1004D284C(v12);
      if (v11 == v1)
        return v8;
      __break(1u);
      return _swiftEmptyArrayStorage;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *sub_1005FF558(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
    goto LABEL_18;
  if (!v5)
    return _swiftEmptyArrayStorage;
  v8 = 8 * v5;
  if (v5 <= 0)
  {
    v10 = _swiftEmptyArrayStorage;
    if (v4 != a3)
      goto LABEL_7;
    goto LABEL_17;
  }
  v9 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v10 = (_QWORD *)swift_allocObject(v9, v8 + 32, 7);
  v11 = j__malloc_size(v10);
  v12 = v11 - 32;
  if (v11 < 32)
    v12 = v11 - 25;
  v10[2] = v5;
  v10[3] = (2 * (v12 >> 3)) | 1;
  if (v4 == a3)
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
LABEL_7:
  if (v5 < 0)
  {
LABEL_19:
    result = (_QWORD *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_20;
  }
  v13 = a2 + 8 * a3;
  if (v13 >= (unint64_t)&v10[(unint64_t)v8 / 8 + 4] || (unint64_t)(v10 + 4) >= v13 + v8)
  {
    type metadata accessor for CRLBoardItemData();
    swift_arrayInitWithCopy(v10 + 4);
    return v10;
  }
  result = (_QWORD *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_20:
  __break(1u);
  return result;
}

char *sub_1005FF6D8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
    goto LABEL_18;
  if (!v5)
    return (char *)_swiftEmptyArrayStorage;
  v8 = 32 * v5;
  if (v5 <= 0)
  {
    v10 = (char *)_swiftEmptyArrayStorage;
    if (v4 != a3)
      goto LABEL_7;
    goto LABEL_17;
  }
  v9 = sub_1004B804C(&qword_1013E7A50);
  v10 = (char *)swift_allocObject(v9, v8 + 32, 7);
  v11 = j__malloc_size(v10);
  v12 = v11 - 32;
  if (v11 < 32)
    v12 = v11 - 1;
  *((_QWORD *)v10 + 2) = v5;
  *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  if (v4 == a3)
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
LABEL_7:
  if (v5 < 0)
  {
LABEL_19:
    result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_20;
  }
  v13 = v10 + 32;
  v14 = (char *)(a2 + 32 * a3);
  if (v14 >= &v10[v8 + 32] || v13 >= &v14[v8])
  {
    memcpy(v13, v14, 32 * v5);
    return v10;
  }
  result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_20:
  __break(1u);
  return result;
}

double *sub_1005FF840(uint64_t a1)
{
  return sub_1005FFE50(a1, &qword_1013E78D8, _s17CategoryViewModelVMa, (uint64_t (*)(uint64_t *, char *, uint64_t, uint64_t))sub_10062C20C);
}

_QWORD *sub_1005FF85C(uint64_t a1)
{
  return sub_1005FFBE8(a1, (void (*)(_QWORD))type metadata accessor for CRLTextSelectionRect, (unint64_t *)&unk_1013E77E0, &qword_1013E77D8, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_10060199C);
}

_QWORD *sub_1005FF880(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1006000AC(a1, a2, a3, a4, &qword_1013E79D0, type metadata accessor for CRLBoardEntity);
}

double *sub_1005FF894(uint64_t a1)
{
  return sub_1005FFE50(a1, &qword_1013E79D0, type metadata accessor for CRLBoardEntity, (uint64_t (*)(uint64_t *, char *, uint64_t, uint64_t))sub_10062C218);
}

_QWORD *sub_1005FF8B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return _swiftEmptyArrayStorage;
  v3 = sub_1004B804C((uint64_t *)&unk_1013DFC30);
  v4 = (_QWORD *)swift_allocObject(v3, 16 * v1 + 32, 7);
  v5 = j__malloc_size(v4);
  v6 = v5 - 32;
  if (v5 < 32)
    v6 = v5 - 17;
  v4[2] = v1;
  v4[3] = 2 * (v6 >> 4);
  v7 = sub_10062C4D4((uint64_t)&v10, v4 + 4, v1, a1);
  v8 = v10;
  swift_bridgeObjectRetain(a1);
  sub_1004D284C(v8);
  if (v7 != v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v4;
}

_QWORD *sub_1005FF994(uint64_t a1)
{
  return sub_1006005E8(a1, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t, __n128))sub_10062B6F4);
}

double *sub_1005FF9A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return _swiftEmptyArrayStorage;
  v3 = sub_1004B804C((uint64_t *)&unk_1013E7A20);
  v4 = (_QWORD *)swift_allocObject(v3, 56 * v1 + 32, 7);
  v5 = j__malloc_size(v4);
  v4[2] = v1;
  v4[3] = 2 * ((uint64_t)(v5 - 32) / 56);
  v6 = sub_10062C6D0((uint64_t)&v9, (uint64_t)(v4 + 4), v1, a1);
  v7 = v9;
  swift_bridgeObjectRetain(a1);
  sub_1004D284C(v7);
  if (v6 != v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return (double *)v4;
}

_QWORD *sub_1005FFA98(uint64_t a1)
{
  return sub_1006005E8(a1, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t, __n128))sub_10062C8DC);
}

_QWORD *sub_1005FFAA4(uint64_t a1)
{
  return sub_1006005E8(a1, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t, __n128))sub_10062CBDC);
}

_QWORD *sub_1005FFAB0(uint64_t a1)
{
  return sub_1006005E8(a1, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t, __n128))sub_10062CEF0);
}

_QWORD *sub_1005FFABC(uint64_t a1)
{
  return sub_1005FFAC8(a1, (uint64_t (*)(uint64_t *, char *, uint64_t, uint64_t, __n128))sub_10062CF0C);
}

_QWORD *sub_1005FFAC8(uint64_t a1, uint64_t (*a2)(uint64_t *, char *, uint64_t, uint64_t, __n128))
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *result;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return _swiftEmptyArrayStorage;
  v5 = sub_1004B804C(&qword_1013E77A8);
  v6 = *(_QWORD *)(type metadata accessor for UUID(0) - 8);
  v7 = *(_QWORD *)(v6 + 72);
  v8 = *(unsigned __int8 *)(v6 + 80);
  v9 = (v8 + 32) & ~v8;
  v10 = (_QWORD *)swift_allocObject(v5, v9 + v7 * v2, v8 | 7);
  result = (_QWORD *)j__malloc_size(v10);
  if (v7)
  {
    if ((_QWORD *)((char *)result - v9) != (_QWORD *)0x8000000000000000 || v7 != -1)
    {
      v10[2] = v2;
      v10[3] = 2 * (((uint64_t)result - v9) / v7);
      v13 = swift_bridgeObjectRetain(a1);
      v14 = a2(&v15, (char *)v10 + v9, v2, a1, v13);
      sub_1004D284C(v15);
      if (v14 == v2)
        return v10;
      __break(1u);
      return _swiftEmptyArrayStorage;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *sub_1005FFBC4(uint64_t a1)
{
  return sub_1005FFBE8(a1, (void (*)(_QWORD))type metadata accessor for CRLCommand, &qword_1013E7948, &qword_1013E7940, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_100601A9C);
}

_QWORD *sub_1005FFBE8(uint64_t a1, void (*a2)(_QWORD), unint64_t *a3, uint64_t *a4, uint64_t (*a5)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v17;

  if ((unint64_t)a1 >> 62)
    goto LABEL_10;
  v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v10)
    return _swiftEmptyArrayStorage;
  while (1)
  {
    if (v10 <= 0)
    {
      v12 = _swiftEmptyArrayStorage;
    }
    else
    {
      v11 = sub_1004B804C((uint64_t *)&unk_1013E4180);
      v12 = (_QWORD *)swift_allocObject(v11, 8 * v10 + 32, 7);
      v13 = j__malloc_size(v12);
      v14 = v13 - 32;
      if (v13 < 32)
        v14 = v13 - 25;
      v12[2] = v10;
      v12[3] = (2 * (v14 >> 3)) | 1;
    }
    swift_bridgeObjectRetain(a1);
    v15 = sub_100601EAC((unint64_t)(v12 + 4), v10, a1, a2, a3, a4, a5);
    a5 = v16;
    swift_bridgeObjectRelease(v15);
    if (a5 == (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))v10)
      break;
    __break(1u);
LABEL_10:
    if (a1 < 0)
      v17 = a1;
    else
      v17 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v10 = _CocoaArrayWrapper.endIndex.getter(v17);
    swift_bridgeObjectRelease(a1);
    if (!v10)
      return _swiftEmptyArrayStorage;
  }
  return v12;
}

_QWORD *sub_1005FFD0C(uint64_t a1)
{
  return sub_1005FFD18(a1, (uint64_t (*)(_QWORD *, uint64_t, uint64_t, __n128))sub_100603CE4);
}

_QWORD *sub_1005FFD18(uint64_t a1, uint64_t (*a2)(_QWORD *, uint64_t, uint64_t, __n128))
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  int64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD *, uint64_t, uint64_t, __n128);
  uint64_t v12;

  if ((unint64_t)a1 >> 62)
    goto LABEL_10;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return _swiftEmptyArrayStorage;
  while (1)
  {
    if (v4 <= 0)
    {
      v6 = _swiftEmptyArrayStorage;
    }
    else
    {
      v5 = sub_1004B804C((uint64_t *)&unk_1013E4180);
      v6 = (_QWORD *)swift_allocObject(v5, 8 * v4 + 32, 7);
      v7 = j__malloc_size(v6);
      v8 = v7 - 32;
      if (v7 < 32)
        v8 = v7 - 25;
      v6[2] = v4;
      v6[3] = (2 * (v8 >> 3)) | 1;
    }
    v9 = swift_bridgeObjectRetain(a1);
    v10 = a2(v6 + 4, v4, a1, v9);
    a2 = v11;
    swift_bridgeObjectRelease(v10);
    if (a2 == (uint64_t (*)(_QWORD *, uint64_t, uint64_t, __n128))v4)
      break;
    __break(1u);
LABEL_10:
    if (a1 < 0)
      v12 = a1;
    else
      v12 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v4 = _CocoaArrayWrapper.endIndex.getter(v12);
    swift_bridgeObjectRelease(a1);
    if (!v4)
      return _swiftEmptyArrayStorage;
  }
  return v6;
}

double *sub_1005FFE18(uint64_t a1)
{
  return sub_1005FFE50(a1, &qword_1013E7938, (uint64_t (*)(_QWORD))&type metadata accessor for UTType, (uint64_t (*)(uint64_t *, char *, uint64_t, uint64_t))sub_10062D25C);
}

double *sub_1005FFE34(uint64_t a1)
{
  return sub_1005FFE50(a1, &qword_1013E7870, type metadata accessor for CRLBoardIdentifier, (uint64_t (*)(uint64_t *, char *, uint64_t, uint64_t))sub_10062D524);
}

double *sub_1005FFE50(uint64_t a1, uint64_t *a2, uint64_t (*a3)(_QWORD), uint64_t (*a4)(uint64_t *, char *, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  double *result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
    return _swiftEmptyArrayStorage;
  v8 = sub_1004B804C(a2);
  v9 = *(_QWORD *)(a3(0) - 8);
  v10 = *(_QWORD *)(v9 + 72);
  v11 = *(unsigned __int8 *)(v9 + 80);
  v12 = (v11 + 32) & ~v11;
  v13 = (_QWORD *)swift_allocObject(v8, v12 + v10 * v4, v11 | 7);
  result = (double *)j__malloc_size(v13);
  if (v10)
  {
    if ((double *)((char *)result - v12) != (double *)0x8000000000000000 || v10 != -1)
    {
      v13[2] = v4;
      v13[3] = 2 * (((uint64_t)result - v12) / v10);
      v16 = a4(&v18, (char *)v13 + v12, v4, a1);
      v17 = v18;
      swift_bridgeObjectRetain(a1);
      sub_1004D284C(v17);
      if (v16 == v4)
        return (double *)v13;
      __break(1u);
      return _swiftEmptyArrayStorage;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

double *sub_1005FFF6C(char *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int64_t v7;
  int64_t v8;
  char *v9;
  double *result;

  if (!a2)
    return _swiftEmptyArrayStorage;
  if (a2 <= 0)
  {
    result = (double *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_14;
  }
  v4 = sub_1004B804C((uint64_t *)&unk_1013E77B8);
  v5 = 2 * a2;
  v6 = (char *)swift_allocObject(v4, 2 * a2 + 32, 7);
  v7 = j__malloc_size(v6);
  v8 = v7 - 32;
  if (v7 < 32)
    v8 = v7 - 31;
  *((_QWORD *)v6 + 2) = a2;
  *((_QWORD *)v6 + 3) = v8 & 0xFFFFFFFFFFFFFFFELL;
  v9 = v6 + 32;
  if (&v6[v5 + 32] <= a1 || v9 >= &a1[v5])
  {
    memcpy(v9, a1, 2 * a2);
    return (double *)v6;
  }
  result = (double *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_14:
  __break(1u);
  return result;
}

_QWORD *sub_100600098(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1006000AC(a1, a2, a3, a4, &qword_1013E78E0, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
}

_QWORD *sub_1006000AC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  _QWORD *result;

  v6 = a4 >> 1;
  v7 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
    goto LABEL_21;
  if (!v7)
    return _swiftEmptyArrayStorage;
  if (v7 > 0)
  {
    v11 = sub_1004B804C(a5);
    v12 = *(_QWORD *)(a6(0) - 8);
    v13 = *(_QWORD *)(v12 + 72);
    v14 = *(unsigned __int8 *)(v12 + 80);
    v15 = (v14 + 32) & ~v14;
    v16 = (_QWORD *)swift_allocObject(v11, v15 + v13 * v7, v14 | 7);
    v17 = j__malloc_size(v16);
    if (!v13)
    {
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    if (v17 - v15 == 0x8000000000000000 && v13 == -1)
      goto LABEL_23;
    v16[2] = v7;
    v16[3] = 2 * ((uint64_t)(v17 - v15) / v13);
    if (v6 != a3)
      goto LABEL_10;
    goto LABEL_20;
  }
  v16 = _swiftEmptyArrayStorage;
  if (v6 == a3)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
LABEL_10:
  if (v7 < 0)
  {
LABEL_24:
    result = (_QWORD *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_25;
  }
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (char *)v16 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
  v21 = *(_QWORD *)(v19 + 72);
  v22 = a2 + v21 * a3;
  v23 = v21 * v7;
  v24 = &v20[v23];
  v25 = v22 + v23;
  if (v22 >= (unint64_t)v24 || (unint64_t)v20 >= v25)
  {
    swift_arrayInitWithCopy(v20);
    return v16;
  }
  result = (_QWORD *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_25:
  __break(1u);
  return result;
}

_QWORD *sub_100600274(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return _swiftEmptyArrayStorage;
  v3 = sub_1004B804C(&qword_1013E7878);
  v4 = (_QWORD *)swift_allocObject(v3, 32 * v1 + 32, 7);
  v5 = j__malloc_size(v4);
  v6 = v5 - 32;
  if (v5 < 32)
    v6 = v5 - 1;
  v4[2] = v1;
  v4[3] = 2 * (v6 >> 5);
  v7 = sub_10062D7E0(&v10, (uint64_t)(v4 + 4), v1, a1);
  v8 = v10;
  swift_bridgeObjectRetain(a1);
  sub_1004D284C(v8);
  if (v7 != (_QWORD *)v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v4;
}

_QWORD *sub_100600358(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return _swiftEmptyArrayStorage;
  v3 = sub_1004B804C((uint64_t *)&unk_1013DFC30);
  v4 = (_QWORD *)swift_allocObject(v3, 16 * v1 + 32, 7);
  v5 = j__malloc_size(v4);
  v6 = v5 - 32;
  if (v5 < 32)
    v6 = v5 - 17;
  v4[2] = v1;
  v4[3] = 2 * (v6 >> 4);
  v7 = sub_10062D9EC((uint64_t)&v10, v4 + 4, v1, a1);
  v8 = v10;
  swift_bridgeObjectRetain(a1);
  sub_1004D284C(v8);
  if (v7 != v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v4;
}

double *sub_10060043C(uint64_t a1)
{
  return sub_1005FFE50(a1, &qword_1013E7870, type metadata accessor for CRLBoardIdentifier, (uint64_t (*)(uint64_t *, char *, uint64_t, uint64_t))sub_10062DBE8);
}

double *sub_100600458(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  double *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  double *result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
    goto LABEL_18;
  if (!v5)
    return _swiftEmptyArrayStorage;
  v8 = 8 * v5;
  if (v5 <= 0)
  {
    v10 = _swiftEmptyArrayStorage;
    if (v4 != a3)
      goto LABEL_7;
    goto LABEL_17;
  }
  v9 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v10 = (double *)swift_allocObject(v9, v8 + 32, 7);
  v11 = j__malloc_size(v10);
  v12 = v11 - 32;
  if (v11 < 32)
    v12 = v11 - 25;
  *((_QWORD *)v10 + 2) = v5;
  *((_QWORD *)v10 + 3) = (2 * (v12 >> 3)) | 1;
  if (v4 == a3)
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
LABEL_7:
  if (v5 < 0)
  {
LABEL_19:
    result = (double *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_20;
  }
  v13 = a2 + 8 * a3;
  if (v13 >= (unint64_t)&v10[(unint64_t)v8 / 8 + 4] || (unint64_t)(v10 + 4) >= v13 + v8)
  {
    sub_1004B804C(&qword_1013E79E0);
    swift_arrayInitWithCopy(v10 + 4);
    return v10;
  }
  result = (double *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_20:
  __break(1u);
  return result;
}

_QWORD *sub_1006005DC(uint64_t a1)
{
  return sub_1006005E8(a1, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t, __n128))sub_10062DEAC);
}

_QWORD *sub_1006005E8(uint64_t a1, uint64_t (*a2)(uint64_t *, _QWORD *, uint64_t, uint64_t, __n128))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  int64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  _QWORD *result;
  uint64_t v12;

  v3 = a1;
  if ((a1 & 0xC000000000000001) == 0)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4)
      goto LABEL_5;
    return _swiftEmptyArrayStorage;
  }
  if (a1 >= 0)
    a1 &= 0xFFFFFFFFFFFFFF8uLL;
  v4 = __CocoaSet.count.getter(a1);
  if (!v4)
    return _swiftEmptyArrayStorage;
LABEL_5:
  if (v4 <= 0)
  {
    v6 = _swiftEmptyArrayStorage;
  }
  else
  {
    v5 = sub_1004B804C((uint64_t *)&unk_1013E4180);
    v6 = (_QWORD *)swift_allocObject(v5, 8 * v4 + 32, 7);
    v7 = j__malloc_size(v6);
    v8 = v7 - 32;
    if (v7 < 32)
      v8 = v7 - 25;
    v6[2] = v4;
    v6[3] = (2 * (v8 >> 3)) | 1;
  }
  v9 = swift_bridgeObjectRetain(v3);
  v10 = a2(&v12, v6 + 4, v4, v3, v9);
  result = (_QWORD *)sub_1004D284C(v12);
  if (v10 == v4)
    return v6;
  __break(1u);
  return result;
}

uint64_t sub_1006006EC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_100D12254(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_100600708(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_100D123D0(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_100600724(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100D123BC(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_100600740(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_100D1252C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_10060075C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_100D12688(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_100600778(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_100D12694(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_100600794(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_100D126A0(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1006007B0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_100D126AC(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1006007CC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_100D126B8(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1006007E8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_100D1281C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_100600804(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_100D12968(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_100600820(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100D12AC4(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_10060083C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100D12AD8(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_100600858(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100D12AEC(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_100600874(char a1, int64_t a2, char a3)
{
  double **v3;
  uint64_t result;

  result = sub_100D12C74(a1, a2, a3, *v3);
  *v3 = (double *)result;
  return result;
}

uint64_t sub_100600890(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100D12E18(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1006008AC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100D12E2C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1006008C8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_100D12E40(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1006008E4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100D12FBC(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_100600900(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100D12FD0(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

uint64_t sub_10060091C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100D1313C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_100600938(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100D13150(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_100600954(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100D13164(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_100600970(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100D13178(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_10060098C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100D1318C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1006009A8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100D131A0(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1006009C4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100D131B4(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1006009E0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_100D131C8(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1006009FC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100D131D4(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_100600A18(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100D131E8(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_100600A34(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100D131FC(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_100600A50(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100D13210(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_100600A6C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_100D133C8(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_100600A88(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100D13524(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_100600AA4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100D136D4(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

uint64_t sub_100600AC0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100D13838(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

uint64_t sub_100600ADC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100D139BC(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

uint64_t sub_100600AF8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100D139D0(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

uint64_t sub_100600B14(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100D13B50(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_100600B30(char a1, int64_t a2, char a3)
{
  double **v3;
  uint64_t result;

  result = sub_100D13B64(a1, a2, a3, *v3);
  *v3 = (double *)result;
  return result;
}

uint64_t sub_100600B4C(char a1, int64_t a2, char a3)
{
  double **v3;
  uint64_t result;

  result = sub_100D13CEC(a1, a2, a3, *v3);
  *v3 = (double *)result;
  return result;
}

uint64_t sub_100600B68(char a1, int64_t a2, char a3)
{
  double **v3;
  uint64_t result;

  result = sub_100D13D00(a1, a2, a3, *v3);
  *v3 = (double *)result;
  return result;
}

uint64_t sub_100600B84(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_100D13EA0(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_100600BA0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100D13538(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_100600BBC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100D141A8(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_100600BD8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100D141BC(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_100600BF4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100D141D0(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_100600C10(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100D141E4(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_100600C2C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100D141F8(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

uint64_t sub_100600C48(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100D144B4(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_100600C64(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100D144C8(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_100600C80(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_100D14668(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_100600C9C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100D147BC(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_100600CB8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100D147D0(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_100600CD4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100D149C4(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_100600CF0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100D14B64(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_100600D0C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100D14D58(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

uint64_t sub_100600D28(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a1);
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v2 = sub_100D19694(v2);
    *a1 = v2;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v7[0] = v2 + 32;
  v7[1] = v4;
  sub_100600DA0(v7);
  return specialized ContiguousArray._endMutation()(v5);
}

void sub_100600DA0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;
  Swift::Int v5;
  __n128 v6;
  __n128 v7;
  uint64_t v8;
  Swift::Int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  Swift::Int v17;
  void *v18;
  id v19;
  id v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  id *v31;
  void *v32;
  id v33;
  id v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  uint64_t *v43;
  Swift::Int v44;
  Swift::Int v45;
  uint64_t *v46;
  uint64_t v47;
  Swift::Int v48;
  uint64_t v49;
  void *v50;
  Swift::Int v51;
  uint64_t v52;
  void *v53;
  id v54;
  id v55;
  double v56;
  double v57;
  double v58;
  double v59;
  double v60;
  double v61;
  double v62;
  double v63;
  void *v64;
  unint64_t v65;
  unint64_t v66;
  char *v67;
  char *v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  BOOL v80;
  unint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  BOOL v90;
  uint64_t v91;
  char v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  BOOL v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  char *v113;
  unint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  unint64_t v126;
  uint64_t *v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  Swift::Int v131;
  Swift::Int v132;
  Swift::Int v133;
  Swift::Int v134;
  void **v135;
  uint64_t v136;

  v2 = v1;
  v4 = a1[1];
  v5 = _minimumMergeRunLength(_:)(v4);
  if (v5 >= v4)
  {
    if (v4 < 0)
      goto LABEL_133;
    if (v4)
      sub_100601540(0, v4, 1, a1);
    return;
  }
  if (v4 >= 0)
    v8 = v4;
  else
    v8 = v4 + 1;
  if (v4 < -1)
    goto LABEL_141;
  v9 = v5;
  v127 = a1;
  if (v4 < 2)
  {
    v13 = (char *)_swiftEmptyArrayStorage;
    v136 = (uint64_t)_swiftEmptyArrayStorage;
    v135 = (void **)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v4 != 1)
    {
      v16 = _swiftEmptyArrayStorage[2];
LABEL_99:
      v119 = v13;
      if (v16 >= 2)
      {
        v121 = *v127;
        do
        {
          v122 = v16 - 2;
          if (v16 < 2)
            goto LABEL_128;
          if (!v121)
            goto LABEL_140;
          v110 = v119;
          v123 = *(_QWORD *)&v119[16 * v122 + 32];
          v124 = *(_QWORD *)&v119[16 * v16 + 24];
          sub_10060164C((void **)(v121 + 8 * v123), (id *)(v121 + 8 * *(_QWORD *)&v119[16 * v16 + 16]), v121 + 8 * v124, v135, v6, v7);
          if (v2)
            goto LABEL_95;
          if (v124 < v123)
            goto LABEL_129;
          if ((swift_isUniquelyReferenced_nonNull_native(v110) & 1) == 0)
            v110 = sub_100D1664C((uint64_t)v110);
          if (v122 >= *((_QWORD *)v110 + 2))
            goto LABEL_130;
          v125 = &v110[16 * v122 + 32];
          *(_QWORD *)v125 = v123;
          *((_QWORD *)v125 + 1) = v124;
          v126 = *((_QWORD *)v110 + 2);
          if (v16 > v126)
            goto LABEL_131;
          memmove(&v110[16 * v16 + 16], &v110[16 * v16 + 32], 16 * (v126 - v16));
          v119 = v110;
          *((_QWORD *)v110 + 2) = v126 - 1;
          v16 = v126 - 1;
        }
        while (v126 > 2);
      }
LABEL_96:
      swift_bridgeObjectRelease(v119);
      *(_QWORD *)((v136 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      specialized Array._endMutation()(v120);
      swift_bridgeObjectRelease(v136);
      return;
    }
  }
  else
  {
    v10 = v8 >> 1;
    v11 = sub_1004B8930(0, (unint64_t *)&qword_10140B930, NSValue_ptr);
    v12 = static Array._allocateBufferUninitialized(minimumCapacity:)(v10, v11);
    *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) = v10;
    v135 = (void **)((v12 & 0xFFFFFFFFFFFFFF8) + 32);
    v136 = v12;
  }
  v131 = v9;
  v14 = 0;
  v15 = *a1;
  v128 = *a1 - 8;
  v129 = *a1 + 16;
  v13 = (char *)_swiftEmptyArrayStorage;
  v132 = v4;
  while (1)
  {
    v17 = v14++;
    v133 = v17;
    if (v14 < v4)
    {
      v18 = *(void **)(v15 + 8 * v17);
      v19 = *(id *)(v15 + 8 * v14);
      v20 = v18;
      objc_msgSend(v19, "CGRectValue");
      v22 = v21;
      v24 = v23;
      objc_msgSend(v20, "CGRectValue");
      v26 = v25;
      v28 = v27;

      v29 = v22 * v24;
      v30 = v26 * v28;
      v14 = v17 + 2;
      if (v17 + 2 < v4)
      {
        v31 = (id *)(v129 + 8 * v17);
        while (1)
        {
          v32 = *(v31 - 1);
          v33 = *v31;
          v34 = v32;
          objc_msgSend(v33, "CGRectValue");
          v36 = v35;
          v38 = v37;
          objc_msgSend(v34, "CGRectValue");
          v40 = v39;
          v42 = v41;

          if (v30 < v29 == v40 * v42 >= v36 * v38)
            break;
          ++v14;
          ++v31;
          if (v4 == v14)
          {
            v14 = v4;
            break;
          }
        }
        v17 = v133;
      }
      if (v30 < v29)
      {
        if (v14 < v17)
          goto LABEL_134;
        if (v17 < v14)
        {
          v43 = (uint64_t *)(v128 + 8 * v14);
          v44 = v14;
          v45 = v17;
          v46 = (uint64_t *)(v15 + 8 * v17);
          do
          {
            if (v45 != --v44)
            {
              if (!v15)
                goto LABEL_139;
              v47 = *v46;
              *v46 = *v43;
              *v43 = v47;
            }
            ++v45;
            --v43;
            ++v46;
          }
          while (v45 < v44);
        }
      }
    }
    if (v14 >= v4)
      goto LABEL_47;
    if (__OFSUB__(v14, v17))
      goto LABEL_132;
    if (v14 - v17 >= v131)
      goto LABEL_47;
    if (__OFADD__(v17, v131))
      goto LABEL_135;
    v48 = v17 + v131 >= v4 ? v4 : v17 + v131;
    if (v48 < v17)
      break;
    if (v14 != v48)
    {
      v130 = v13;
      v49 = v128 + 8 * v14;
      do
      {
        v50 = *(void **)(v15 + 8 * v14);
        v51 = v17;
        v52 = v49;
        do
        {
          v53 = *(void **)v52;
          v54 = v50;
          v55 = v53;
          objc_msgSend(v54, "CGRectValue");
          v57 = v56;
          v59 = v58;
          objc_msgSend(v55, "CGRectValue");
          v61 = v60;
          v63 = v62;

          if (v61 * v63 >= v57 * v59)
            break;
          if (!v15)
            goto LABEL_137;
          v64 = *(void **)v52;
          v50 = *(void **)(v52 + 8);
          *(_QWORD *)v52 = v50;
          *(_QWORD *)(v52 + 8) = v64;
          v52 -= 8;
          ++v51;
        }
        while (v14 != v51);
        ++v14;
        v49 += 8;
        v17 = v133;
      }
      while (v14 != v48);
      v14 = v48;
      v13 = v130;
    }
LABEL_47:
    if (v14 < v17)
      goto LABEL_127;
    if ((swift_isUniquelyReferenced_nonNull_native(v13) & 1) == 0)
      v13 = sub_100D15FCC(0, *((_QWORD *)v13 + 2) + 1, 1, v13);
    v66 = *((_QWORD *)v13 + 2);
    v65 = *((_QWORD *)v13 + 3);
    v16 = v66 + 1;
    if (v66 >= v65 >> 1)
      v13 = sub_100D15FCC((char *)(v65 > 1), v66 + 1, 1, v13);
    *((_QWORD *)v13 + 2) = v16;
    v67 = v13 + 32;
    v68 = &v13[16 * v66 + 32];
    *(_QWORD *)v68 = v17;
    *((_QWORD *)v68 + 1) = v14;
    if (v66)
    {
      v134 = v14;
      while (1)
      {
        v69 = v16 - 1;
        if (v16 >= 4)
        {
          v74 = &v67[16 * v16];
          v75 = *((_QWORD *)v74 - 8);
          v76 = *((_QWORD *)v74 - 7);
          v80 = __OFSUB__(v76, v75);
          v77 = v76 - v75;
          if (v80)
            goto LABEL_116;
          v79 = *((_QWORD *)v74 - 6);
          v78 = *((_QWORD *)v74 - 5);
          v80 = __OFSUB__(v78, v79);
          v72 = v78 - v79;
          v73 = v80;
          if (v80)
            goto LABEL_117;
          v81 = v16 - 2;
          v82 = &v67[16 * v16 - 32];
          v84 = *(_QWORD *)v82;
          v83 = *((_QWORD *)v82 + 1);
          v80 = __OFSUB__(v83, v84);
          v85 = v83 - v84;
          if (v80)
            goto LABEL_119;
          v80 = __OFADD__(v72, v85);
          v86 = v72 + v85;
          if (v80)
            goto LABEL_122;
          if (v86 >= v77)
          {
            v104 = &v67[16 * v69];
            v106 = *(_QWORD *)v104;
            v105 = *((_QWORD *)v104 + 1);
            v80 = __OFSUB__(v105, v106);
            v107 = v105 - v106;
            if (v80)
              goto LABEL_126;
            v97 = v72 < v107;
            goto LABEL_85;
          }
        }
        else
        {
          if (v16 != 3)
          {
            v98 = *((_QWORD *)v13 + 4);
            v99 = *((_QWORD *)v13 + 5);
            v80 = __OFSUB__(v99, v98);
            v91 = v99 - v98;
            v92 = v80;
            goto LABEL_79;
          }
          v71 = *((_QWORD *)v13 + 4);
          v70 = *((_QWORD *)v13 + 5);
          v80 = __OFSUB__(v70, v71);
          v72 = v70 - v71;
          v73 = v80;
        }
        if ((v73 & 1) != 0)
          goto LABEL_118;
        v81 = v16 - 2;
        v87 = &v67[16 * v16 - 32];
        v89 = *(_QWORD *)v87;
        v88 = *((_QWORD *)v87 + 1);
        v90 = __OFSUB__(v88, v89);
        v91 = v88 - v89;
        v92 = v90;
        if (v90)
          goto LABEL_121;
        v93 = &v67[16 * v69];
        v95 = *(_QWORD *)v93;
        v94 = *((_QWORD *)v93 + 1);
        v80 = __OFSUB__(v94, v95);
        v96 = v94 - v95;
        if (v80)
          goto LABEL_124;
        if (__OFADD__(v91, v96))
          goto LABEL_125;
        if (v91 + v96 >= v72)
        {
          v97 = v72 < v96;
LABEL_85:
          if (v97)
            v69 = v81;
          goto LABEL_87;
        }
LABEL_79:
        if ((v92 & 1) != 0)
          goto LABEL_120;
        v100 = &v67[16 * v69];
        v102 = *(_QWORD *)v100;
        v101 = *((_QWORD *)v100 + 1);
        v80 = __OFSUB__(v101, v102);
        v103 = v101 - v102;
        if (v80)
          goto LABEL_123;
        if (v103 < v91)
          goto LABEL_14;
LABEL_87:
        v108 = v69 - 1;
        if (v69 - 1 >= v16)
        {
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
          goto LABEL_136;
        }
        v109 = v15;
        if (!v15)
          goto LABEL_138;
        v110 = v13;
        v111 = &v67[16 * v108];
        v112 = *(_QWORD *)v111;
        v113 = v67;
        v114 = v69;
        v115 = &v67[16 * v69];
        v116 = *((_QWORD *)v115 + 1);
        v117 = v109;
        sub_10060164C((void **)(v109 + 8 * *(_QWORD *)v111), (id *)(v109 + 8 * *(_QWORD *)v115), v109 + 8 * v116, v135, v6, v7);
        if (v1)
        {
LABEL_95:
          v119 = v110;
          goto LABEL_96;
        }
        if (v116 < v112)
          goto LABEL_113;
        if (v114 > *((_QWORD *)v110 + 2))
          goto LABEL_114;
        *(_QWORD *)v111 = v112;
        *(_QWORD *)&v113[16 * v108 + 8] = v116;
        v118 = *((_QWORD *)v110 + 2);
        if (v114 >= v118)
          goto LABEL_115;
        v13 = v110;
        v16 = v118 - 1;
        memmove(v115, v115 + 16, 16 * (v118 - 1 - v114));
        v67 = v113;
        *((_QWORD *)v110 + 2) = v118 - 1;
        v15 = v117;
        v14 = v134;
        if (v118 <= 2)
          goto LABEL_14;
      }
    }
    v16 = 1;
LABEL_14:
    v4 = v132;
    if (v14 >= v132)
    {
      v2 = v1;
      goto LABEL_99;
    }
  }
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
}

void sub_100601540(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  void *v22;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = *a4;
    v7 = *a4 + 8 * a3 - 8;
LABEL_5:
    v8 = *(void **)(v6 + 8 * v4);
    v9 = a1;
    v10 = v7;
    while (1)
    {
      v11 = *(void **)v10;
      v12 = v8;
      v13 = v11;
      objc_msgSend(v12, "CGRectValue");
      v15 = v14;
      v17 = v16;
      objc_msgSend(v13, "CGRectValue");
      v19 = v18;
      v21 = v20;

      if (v19 * v21 >= v15 * v17)
      {
LABEL_4:
        ++v4;
        v7 += 8;
        if (v4 == a2)
          return;
        goto LABEL_5;
      }
      if (!v6)
        break;
      v22 = *(void **)v10;
      v8 = *(void **)(v10 + 8);
      *(_QWORD *)v10 = v8;
      *(_QWORD *)(v10 + 8) = v22;
      v10 -= 8;
      if (v4 == ++v9)
        goto LABEL_4;
    }
    __break(1u);
  }
}

uint64_t sub_10060164C(void **__src, id *a2, unint64_t a3, void **a4, __n128 a5, __n128 a6)
{
  id *v7;
  void **v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void **v15;
  void **v16;
  void *v17;
  id v18;
  id v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  id *v28;
  id *v29;
  id *v30;
  void **v31;
  id *v32;
  id *v33;
  void *v34;
  id v35;
  id v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  uint64_t result;
  char *v47;
  void **v48;
  id *v49;

  v7 = a2;
  v8 = __src;
  v9 = (char *)a2 - (char *)__src;
  v10 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v10 = (char *)a2 - (char *)__src;
  v11 = v10 >> 3;
  v12 = a3 - (_QWORD)a2;
  v13 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v13 = a3 - (_QWORD)a2;
  v14 = v13 >> 3;
  v49 = __src;
  v48 = a4;
  if (v11 >= v13 >> 3)
  {
    if (v12 < -7)
      goto LABEL_46;
    if (a4 != a2 || &a2[v14] <= a4)
      memmove(a4, a2, 8 * v14);
    v29 = &a4[v14];
    v47 = (char *)v29;
    v49 = v7;
    if (v8 >= v7 || v12 < 8)
      goto LABEL_45;
    v30 = (id *)(a3 - 8);
    v31 = v7;
    while (1)
    {
      v32 = v30 + 1;
      v33 = v29 - 1;
      v34 = *--v31;
      v35 = *(v29 - 1);
      v36 = v34;
      objc_msgSend(v35, "CGRectValue");
      v38 = v37;
      v40 = v39;
      objc_msgSend(v36, "CGRectValue");
      v42 = v41;
      v44 = v43;

      a5.n128_f64[0] = v38 * v40;
      a6.n128_f64[0] = v42 * v44;
      if (v42 * v44 < v38 * v40)
        break;
      v47 = (char *)(v29 - 1);
      if (v32 < v29 || v30 >= v29)
      {
        *v30 = *v33;
        v31 = v7;
        --v29;
        goto LABEL_43;
      }
      if (v32 != v29)
        *v30 = *v33;
      v31 = v7;
      --v29;
      if (v7 <= v8)
        goto LABEL_45;
LABEL_44:
      --v30;
      v7 = v31;
      if (v29 <= a4)
        goto LABEL_45;
    }
    if (v32 != v7 || v30 >= v7)
      *v30 = *v31;
    v49 = v31;
LABEL_43:
    if (v31 <= v8)
      goto LABEL_45;
    goto LABEL_44;
  }
  if (v9 >= -7)
  {
    if (a4 != __src || &__src[v11] <= a4)
      memmove(a4, __src, 8 * v11);
    v15 = &a4[v11];
    v47 = (char *)v15;
    if ((unint64_t)v7 < a3 && v9 >= 8)
    {
      v16 = a4;
      do
      {
        v17 = *v16;
        v18 = *v7;
        v19 = v17;
        objc_msgSend(v18, "CGRectValue");
        v21 = v20;
        v23 = v22;
        objc_msgSend(v19, "CGRectValue");
        v25 = v24;
        v27 = v26;

        a5.n128_f64[0] = v21 * v23;
        a6.n128_f64[0] = v25 * v27;
        if (v25 * v27 >= v21 * v23)
        {
          if (v8 != v16)
            *v8 = *v16;
          v48 = ++v16;
          v28 = v7;
        }
        else
        {
          v28 = v7 + 1;
          if (v8 < v7 || v8 >= v28 || v8 != v7)
            *v8 = *v7;
        }
        ++v8;
        if (v16 >= v15)
          break;
        v7 = v28;
      }
      while ((unint64_t)v28 < a3);
      v49 = v8;
    }
LABEL_45:
    sub_100D162E4(&v49, &v48, &v47, a5, a6);
    return 1;
  }
LABEL_46:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

void (*sub_10060199C(uint64_t (**a1)(), unint64_t a2, uint64_t a3))(_QWORD *)
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_100601BC4(v6, a2, a3);
  return sub_1006019F0;
}

void (*sub_1006019F4(uint64_t (**a1)(), unint64_t a2, uint64_t a3))(_QWORD *)
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_100601C30(v6, a2, a3);
  return sub_1006019F0;
}

void (*sub_100601A48(uint64_t (**a1)(), unint64_t a2, uint64_t a3))(_QWORD *)
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_100601C9C(v6, a2, a3);
  return sub_1006019F0;
}

void (*sub_100601A9C(void (**a1)(id *a1), unint64_t a2, uint64_t a3))(_QWORD *)
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_100601D08(v6, a2, a3);
  return sub_1006019F0;
}

void (*sub_100601AF0(uint64_t **a1, unint64_t a2, uint64_t a3))(_QWORD *)
{
  uint64_t *v6;

  v6 = (uint64_t *)malloc(0x28uLL);
  *a1 = v6;
  v6[4] = (uint64_t)sub_100601D7C(v6, a2, a3);
  return sub_1006019F0;
}

void (*sub_100601B44(uint64_t **a1, unint64_t a2, uint64_t a3))(_QWORD *)
{
  uint64_t *v6;

  v6 = (uint64_t *)malloc(0x28uLL);
  *a1 = v6;
  v6[4] = (uint64_t)sub_100601DF0(v6, a2, a3);
  return sub_1006019F0;
}

void sub_100601B98(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t (*sub_100601BC4(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v3)();
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return j__s8Freeform9SyncEventO22FetchedDatabaseChangesV8DeletionVwxx;
  }
  __break(1u);
  return result;
}

uint64_t (*sub_100601C30(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = swift_unknownObjectRetain(*(_QWORD *)(a3 + 8 * a2 + 32));
LABEL_5:
    *v3 = v4;
    return sub_10060484C;
  }
  __break(1u);
  return result;
}

uint64_t (*sub_100601C9C(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = swift_retain(*(_QWORD *)(a3 + 8 * a2 + 32));
LABEL_5:
    *v3 = v4;
    return _s11ClientSceneC22InternalAnimationStateOwxx;
  }
  __break(1u);
  return result;
}

void (*sub_100601D08(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return destroy for SyncEvent.FetchedDatabaseChanges.Deletion;
  }
  __break(1u);
  return result;
}

void destroy for SyncEvent.FetchedDatabaseChanges.Deletion(id *a1)
{

}

uint64_t *sub_100601D7C(uint64_t *result, unint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = swift_unknownObjectRetain(*(_QWORD *)(a3 + 8 * a2 + 32));
LABEL_5:
    *v3 = v4;
    return (uint64_t *)sub_100601DE8;
  }
  __break(1u);
  return result;
}

uint64_t sub_100601DE8(_QWORD *a1)
{
  return swift_unknownObjectRelease(*a1);
}

uint64_t *sub_100601DF0(uint64_t *result, unint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    swift_retain(*(_QWORD *)(a3 + 8 * a2 + 32));
LABEL_5:
    *v3 = v4;
    return (uint64_t *)_s11ClientSceneC15ImageBasedLightVwxx;
  }
  __break(1u);
  return result;
}

double _s11ClientSceneC15ImageBasedLightVwxx(_QWORD *a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*a1).n128_u64[0];
  return result;
}

uint64_t sub_100601E64(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100601EAC(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for CRLBoardLibraryViewModelItemNode, &qword_1013E7770, &qword_1013E7768, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_10060199C);
}

uint64_t sub_100601E88(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100601EAC(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for CRLBoardItem, &qword_1013E7868, &qword_1013E7860, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_10060199C);
}

uint64_t sub_100601EAC(unint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD), unint64_t *a5, uint64_t *a6, uint64_t (*a7)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t i;
  uint64_t v22;
  void (*v23)(_BYTE *, _QWORD);
  id *v24;
  id v25;
  uint64_t v26;
  uint64_t result;
  _BYTE v28[32];

  v14 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v26 = a3;
    else
      v26 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v15 = _CocoaArrayWrapper.endIndex.getter(v26);
    swift_bridgeObjectRelease(a3);
    if (!v15)
      return a3;
  }
  else
  {
    v15 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v15)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v16 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v14)
  {
    if (a3 < 0)
      v18 = a3;
    else
      v18 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v19 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(a3);
    if (v19 <= a2)
    {
      if (v15 >= 1)
      {
        v20 = sub_1006047EC(a5, a6);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v15; ++i)
        {
          v22 = sub_1004B804C(a6);
          v23 = (void (*)(_BYTE *, _QWORD))a7(v28, i, a3, v22, v20);
          v25 = *v24;
          v23(v28, 0);
          *(_QWORD *)(a1 + 8 * i) = v25;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v17 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v17 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v16 + 32 >= a1 + 8 * v17 || v16 + 32 + 8 * v17 <= a1)
  {
    a4(0);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1006020B4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1006047EC(&qword_1013E77A0, &qword_1013E7798);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_1004B804C(&qword_1013E7798);
          v13 = sub_10060199C(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1004B8930(0, (unint64_t *)&qword_1013E7790, CALayer_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1006022C8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1006047EC(&qword_1013E78A8, &qword_1013E78A0);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_1004B804C(&qword_1013E78A0);
          v13 = sub_10060199C(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1004B8930(0, (unint64_t *)&qword_1013E1760, NSLayoutConstraint_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1006024DC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1006047EC(&qword_1013E77D0, &qword_1013E77C8);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_1004B804C(&qword_1013E77C8);
          v13 = sub_10060199C(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1006026F0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1006047EC(&qword_1013E79C0, &qword_1013E79B8);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_1004B804C(&qword_1013E79B8);
          v13 = sub_10060199C(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100602904(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100601EAC(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for CRLiOSMiniFormatterBaseLayerButton, &qword_1013E7780, &qword_1013E7778, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_10060199C);
}

uint64_t sub_100602928(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100603F1C(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for CRLBoardItemDatabaseResult, (unint64_t *)&unk_1013E78B8, &qword_1013E78B0, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_100601A48);
}

uint64_t sub_10060294C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100601EAC(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for CRLCommandController.CRLCommandControllerCommandGroup, &qword_1013E7988, &qword_1013E7980, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_10060199C);
}

uint64_t sub_100602970(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1006047EC(&qword_1013E7750, (uint64_t *)&unk_1013E19B0);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_1004B804C((uint64_t *)&unk_1013E19B0);
          v13 = sub_10060199C(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1004B8930(0, (unint64_t *)&qword_1013E19A0, UIBarButtonItem_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100602B84(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100601EAC(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for CRLCommand, &qword_1013E7948, &qword_1013E7940, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_100601A9C);
}

uint64_t sub_100602BA8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100601EAC(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for CRLCollaboratorPresence, &qword_1013E79B0, &qword_1013E8B70, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_10060199C);
}

uint64_t sub_100602BCC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100602C14(a1, a2, a3, &qword_1013E0670, &qword_1013E78D0, &qword_1013E78C8, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1006019F4);
}

uint64_t sub_100602BF0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100602C14(a1, a2, a3, &qword_1013E7918, (unint64_t *)&unk_1013E7928, &qword_1013E7920, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_100601AF0);
}

uint64_t sub_100602C14(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, unint64_t *a5, uint64_t *a6, uint64_t (*a7)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t i;
  uint64_t v22;
  void (*v23)(_BYTE *, _QWORD);
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  _BYTE v28[32];

  v14 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v26 = a3;
    else
      v26 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v15 = _CocoaArrayWrapper.endIndex.getter(v26);
    swift_bridgeObjectRelease(a3);
    if (!v15)
      return a3;
  }
  else
  {
    v15 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v15)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v16 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v14)
  {
    if (a3 < 0)
      v18 = a3;
    else
      v18 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v19 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(a3);
    if (v19 <= a2)
    {
      if (v15 >= 1)
      {
        v20 = sub_1006047EC(a5, a6);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v15; ++i)
        {
          v22 = sub_1004B804C(a6);
          v23 = (void (*)(_BYTE *, _QWORD))a7(v28, i, a3, v22, v20);
          v25 = *v24;
          swift_unknownObjectRetain(*v24);
          v23(v28, 0);
          *(_QWORD *)(a1 + 8 * i) = v25;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v17 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v17 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v16 + 32 >= a1 + 8 * v17 || v16 + 32 + 8 * v17 <= a1)
  {
    sub_1004B804C(a4);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100602E1C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease();
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1006047EC(&qword_1013E7A08, &qword_1013E7A00);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_1004B804C(&qword_1013E7A00);
          v13 = sub_10060199C(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1004B8930(0, &qword_1013E79F8, UILabel_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100603030(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1006047EC(&qword_1013E7A48, &qword_1013E7A40);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_1004B804C(&qword_1013E7A40);
          v13 = sub_10060199C(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1004B8930(0, (unint64_t *)&qword_10140B930, NSValue_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100603244(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1006047EC(&qword_1013E7A38, &qword_1013E7A30);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_1004B804C(&qword_1013E7A30);
          v13 = sub_10060199C(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1004B8930(0, (unint64_t *)&qword_1013FC960, off_101229810);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100603458(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1006047EC((unint64_t *)&unk_1013E79A0, &qword_1013E7998);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_1004B804C(&qword_1013E7998);
          v13 = sub_10060199C(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1004B8930(0, &qword_1013E7990, UIKeyCommand_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10060366C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100603ADC(a1, a2, a3, &qword_1013E7968, &qword_1013E7978, &qword_1013E7970, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_100601A48);
}

uint64_t sub_100603690(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1006047EC((unint64_t *)&unk_1013E7890, &qword_1013E7888);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_1004B804C(&qword_1013E7888);
          v13 = sub_10060199C(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1004B8930(0, &qword_1013E7880, UIMenuElement_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1006038A4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease();
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1006047EC(&qword_1013E7828, &qword_1013E7820);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_1004B804C(&qword_1013E7820);
          v13 = sub_10060199C(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1004B8930(0, &qword_1013E8810, CKRecordID_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100603AB8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100603ADC(a1, a2, a3, &qword_1013E7830, &qword_1013E7840, &qword_1013E7838, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_100601A48);
}

uint64_t sub_100603ADC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, unint64_t *a5, uint64_t *a6, uint64_t (*a7)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t i;
  uint64_t v22;
  void (*v23)(_BYTE *, _QWORD, __n128);
  _QWORD *v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t result;
  _BYTE v29[32];

  v14 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v27 = a3;
    else
      v27 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v15 = _CocoaArrayWrapper.endIndex.getter(v27);
    swift_bridgeObjectRelease(a3);
    if (!v15)
      return a3;
  }
  else
  {
    v15 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v15)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v16 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v14)
  {
    if (a3 < 0)
      v18 = a3;
    else
      v18 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v19 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(a3);
    if (v19 <= a2)
    {
      if (v15 >= 1)
      {
        v20 = sub_1006047EC(a5, a6);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v15; ++i)
        {
          v22 = sub_1004B804C(a6);
          v23 = (void (*)(_BYTE *, _QWORD, __n128))a7(v29, i, a3, v22, v20);
          v25 = *v24;
          v26 = swift_retain(*v24);
          v23(v29, 0, v26);
          *(_QWORD *)(a1 + 8 * i) = v25;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v17 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v17 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v16 + 32 >= a1 + 8 * v17 || v16 + 32 + 8 * v17 <= a1)
  {
    sub_1004B804C(a4);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100603CE4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1006047EC((unint64_t *)&unk_1013E78F8, &qword_1013E78F0);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_1004B804C(&qword_1013E78F0);
          v13 = sub_10060199C(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1004B8930(0, &qword_1013E78E8, UIAccessibilityCustomAction_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100603EF8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100603F1C(a1, a2, a3, (void (*)(_QWORD))&type metadata accessor for AnyCancellable, &qword_1013E7A18, &qword_1013E7A10, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_100601B44);
}

uint64_t sub_100603F1C(unint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD), unint64_t *a5, uint64_t *a6, uint64_t (*a7)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t i;
  uint64_t v22;
  void (*v23)(_BYTE *, _QWORD, __n128);
  _QWORD *v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t result;
  _BYTE v29[32];

  v14 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v27 = a3;
    else
      v27 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v15 = _CocoaArrayWrapper.endIndex.getter(v27);
    swift_bridgeObjectRelease(a3);
    if (!v15)
      return a3;
  }
  else
  {
    v15 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v15)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v16 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v14)
  {
    if (a3 < 0)
      v18 = a3;
    else
      v18 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v19 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(a3);
    if (v19 <= a2)
    {
      if (v15 >= 1)
      {
        v20 = sub_1006047EC(a5, a6);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v15; ++i)
        {
          v22 = sub_1004B804C(a6);
          v23 = (void (*)(_BYTE *, _QWORD, __n128))a7(v29, i, a3, v22, v20);
          v25 = *v24;
          v26 = swift_retain(*v24);
          v23(v29, 0, v26);
          *(_QWORD *)(a1 + 8 * i) = v25;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v17 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v17 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v16 + 32 >= a1 + 8 * v17 || v16 + 32 + 8 * v17 <= a1)
  {
    a4(0);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100604124(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease();
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1006047EC(&qword_1013E7910, &qword_1013E7908);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_1004B804C(&qword_1013E7908);
          v13 = sub_10060199C(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1004B8930(0, (unint64_t *)&qword_1013E56B0, off_101229828);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100604338(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100603ADC(a1, a2, a3, &qword_1013E77F0, &qword_1013E7800, &qword_1013E77F8, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_100601A48);
}

uint64_t sub_10060435C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100603F1C(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for CRLBoardItemData, (unint64_t *)&unk_1013E7810, &qword_1013E7808, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_100601A48);
}

uint64_t sub_100604380(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100603ADC(a1, a2, a3, &qword_1013E7950, &qword_1013E7960, &qword_1013E7958, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_100601A48);
}

uint64_t sub_1006043A4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100601EAC(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for CRLFreehandDrawingItem, &qword_1013E7760, &qword_1013E7758, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_10060199C);
}

uint64_t sub_1006043C8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100602C14(a1, a2, a3, &qword_1013E79E0, &qword_1013E79F0, &qword_1013E79E8, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1006019F4);
}

uint64_t sub_1006043EC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100603ADC(a1, a2, a3, &qword_1013E7848, &qword_1013E7858, &qword_1013E7850, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_100601A48);
}

uint64_t sub_100604410@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;

  v4 = (_QWORD *)*a1;
  v5 = *a2;
  v6 = a2[1];
  v7 = a2[2];
  v8 = a2[3];
  swift_bridgeObjectRetain(*a1);
  result = swift_isUniquelyReferenced_nonNull_native(v9);
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_100D10D64(0, v4[2] + 1, 1, v4);
    v4 = (_QWORD *)result;
  }
  v12 = v4[2];
  v11 = v4[3];
  if (v12 >= v11 >> 1)
  {
    result = (uint64_t)sub_100D10D64((_QWORD *)(v11 > 1), v12 + 1, 1, v4);
    v4 = (_QWORD *)result;
  }
  v4[2] = v12 + 1;
  v13 = &v4[4 * v12];
  v13[4] = v5;
  v13[5] = v6;
  v13[6] = v7;
  v13[7] = v8;
  *a3 = v4;
  return result;
}

_QWORD *sub_1006044D4(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t inited;
  uint64_t v20;
  double *v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  unint64_t v29;
  unint64_t v30;
  double *v31;
  uint64_t v33;
  _BYTE v34[64];
  _QWORD *v35;

  v1 = a1[2];
  if (!v1)
    return _swiftEmptyArrayStorage;
  v2 = a1;
  if (v1 == 1)
  {
    swift_bridgeObjectRetain(a1);
  }
  else
  {
    if (v1 >= 16)
      v3 = 16;
    else
      v3 = a1[2];
    v4 = type metadata accessor for __ContiguousArrayStorageBase(0);
    swift_bridgeObjectRetain(v2);
    v6 = swift_unknownObjectRetain_n(v5, 2);
    v7 = (_QWORD *)swift_dynamicCastClass(v6, v4);
    if (!v7)
    {
      swift_bridgeObjectRelease(v2);
      v7 = _swiftEmptyArrayStorage;
    }
    v8 = v7[2];
    swift_release(v7);
    if (v8 == v3 - 1)
    {
      v9 = (char *)swift_dynamicCastClass(v2, v4);
      if (!v9)
      {
        swift_bridgeObjectRelease(v2);
        v9 = (char *)_swiftEmptyArrayStorage;
      }
    }
    else
    {
      swift_bridgeObjectRelease(v2);
      v9 = sub_1005FF6D8((uint64_t)v2, (uint64_t)(v2 + 4), 1, (2 * v3) | 1);
    }
    swift_bridgeObjectRelease(v2);
    v10 = sub_1005FE494((uint64_t)v9);
    swift_release(v9);
    v11 = *(_QWORD *)(v10 + 16);
    if (v11)
    {
      v35 = _swiftEmptyArrayStorage;
      sub_100600A6C(0, v11, 0);
      v12 = 0;
      v13 = v2[4];
      v14 = v2[5];
      v15 = v2[6];
      v16 = v2[7];
      do
      {
        v17 = *(_QWORD *)(v10 + 32 + 8 * v12);
        v18 = sub_1004B804C(&qword_1013E7A50);
        inited = swift_initStackObject(v18, v34);
        *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
        *(_QWORD *)(inited + 32) = v13;
        *(_QWORD *)(inited + 40) = v14;
        *(_QWORD *)(inited + 48) = v15;
        *(_QWORD *)(inited + 56) = v16;
        v33 = inited;
        swift_bridgeObjectRetain_n(v17, 2);
        sub_100620AC8(v17);
        v20 = *(_QWORD *)(v33 + 16);
        if (v20)
        {
          v21 = (double *)(v33 + 56);
          v22 = 0.0;
          v23 = 0.0;
          v24 = 0.0;
          v25 = 0.0;
          do
          {
            v24 = sub_100060C2C(v24, v25, v22, v23, *(v21 - 3), *(v21 - 2), *(v21 - 1), *v21);
            v25 = v26;
            v22 = v27;
            v23 = v28;
            v21 += 4;
            --v20;
          }
          while (v20);
        }
        else
        {
          v22 = 0.0;
          v23 = 0.0;
          v24 = 0.0;
          v25 = 0.0;
        }
        swift_bridgeObjectRelease(v33);
        swift_bridgeObjectRelease(v17);
        v2 = v35;
        if ((swift_isUniquelyReferenced_nonNull_native(v35) & 1) == 0)
        {
          sub_100600A6C(0, v2[2] + 1, 1);
          v2 = v35;
        }
        v30 = v2[2];
        v29 = v2[3];
        if (v30 >= v29 >> 1)
        {
          sub_100600A6C(v29 > 1, v30 + 1, 1);
          v2 = v35;
        }
        ++v12;
        v2[2] = v30 + 1;
        v31 = (double *)&v2[4 * v30];
        v31[4] = v24;
        v31[5] = v25;
        v31[6] = v22;
        v31[7] = v23;
      }
      while (v12 != v11);
      swift_bridgeObjectRelease(v10);
    }
    else
    {
      swift_bridgeObjectRelease(v10);
      return _swiftEmptyArrayStorage;
    }
  }
  return v2;
}

uint64_t type metadata accessor for CRLImageFaceAnalyzerResult()
{
  return objc_opt_self(_TtC8Freeform26CRLImageFaceAnalyzerResult);
}

uint64_t sub_1006047EC(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_1004CB6A4(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10060482C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_100604410(a1, *(uint64_t **)(v2 + 16), a2);
}

id sub_1006048E4(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  NSString v5;

  v3 = a1 + *a3;
  v4 = *(_QWORD *)(v3 + 8);
  if (v4)
  {
    swift_bridgeObjectRetain(*(_QWORD *)(v3 + 8));
    v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v4);
  }
  else
  {
    v5 = 0;
  }
  return v5;
}

id sub_10060493C(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8, double a9, double a10)
{
  objc_class *v10;
  id v21;

  v21 = objc_allocWithZone(v10);
  return sub_1006049DC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

id sub_1006049DC(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8, double a9, double a10)
{
  _QWORD *v10;
  uint64_t v16;
  uint64_t v17;
  id v18;
  char *v23;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  objc_super v31;

  if (a9 <= a10)
  {
    v23 = (char *)v10 + OBJC_IVAR____TtC8Freeform28CRLCommandSetMoviePosterTime_id;
    v25 = type metadata accessor for UUID(0);
    v26 = *(_QWORD *)(v25 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v23, a1, v25);
    *(_QWORD *)((char *)v10 + OBJC_IVAR____TtC8Freeform28CRLCommandSetMoviePosterTime_movieData) = a2;
    *(_QWORD *)((char *)v10 + OBJC_IVAR____TtC8Freeform28CRLCommandSetMoviePosterTime_posterImageData) = a3;
    *(double *)((char *)v10 + OBJC_IVAR____TtC8Freeform28CRLCommandSetMoviePosterTime_posterTime) = a8;
    *(double *)((char *)v10 + OBJC_IVAR____TtC8Freeform28CRLCommandSetMoviePosterTime_startTime) = a9;
    *(double *)((char *)v10 + OBJC_IVAR____TtC8Freeform28CRLCommandSetMoviePosterTime_endTime) = a10;
    v27 = (_QWORD *)((char *)v10 + OBJC_IVAR____TtC8Freeform28CRLCommandSetMoviePosterTime_title);
    *v27 = a4;
    v27[1] = a5;
    v28 = (_QWORD *)((char *)v10 + OBJC_IVAR____TtC8Freeform28CRLCommandSetMoviePosterTime_creator);
    *v28 = a6;
    v28[1] = a7;
    v31.receiver = v10;
    v31.super_class = (Class)type metadata accessor for CRLCommandSetMoviePosterTime(0);
    v18 = objc_msgSendSuper2(&v31, "init");
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(a1, v25);
  }
  else
  {
    swift_bridgeObjectRelease(a5);
    swift_bridgeObjectRelease(a7);
    sub_100757E04(&_mh_execute_header, (uint64_t)"init(id:movieData:posterImageData:posterTime:startTime:endTime:title:creator:)", 78, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetMoviePosterTime.swift", 100, 2, 23, "Attempting to set startTime after endTime will only lead to misery.", 67, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(id:movieData:posterImageData:posterTime:startTime:endTime:title:creator:)", 78, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetMoviePosterTime.swift", 100, 2u, 23, (uint64_t)"Attempting to set startTime after endTime will only lead to misery.", 67, 2u);

    v16 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(a1, v16);
    v17 = type metadata accessor for CRLCommandSetMoviePosterTime(0);
    swift_deallocPartialClassInstance(v10, v17, *(unsigned int *)((swift_isaMask & *v10) + 0x30), *(unsigned __int16 *)((swift_isaMask & *v10) + 0x34));
    return 0;
  }
  return v18;
}

id sub_100604D30(char *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8, double a9, double a10)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void (*v23)(uint64_t);
  uint64_t v24;
  NSUUID v25;
  NSString v26;
  NSString v27;
  id v28;
  _QWORD v30[4];

  v30[2] = a6;
  v30[1] = a4;
  v18 = type metadata accessor for UUID(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin();
  v21 = (char *)v30 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *(_QWORD *)&a1[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
  v23 = *(void (**)(uint64_t))(*(_QWORD *)v22 + 256);
  v24 = swift_retain(v22);
  v23(v24);
  swift_release(v22);
  v25.super.isa = UUID._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  if (!a5)
  {
    v26 = 0;
    if (a7)
      goto LABEL_3;
LABEL_5:
    v27 = 0;
    goto LABEL_6;
  }
  v26 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a5);
  if (!a7)
    goto LABEL_5;
LABEL_3:
  v27 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a7);
LABEL_6:
  v28 = objc_msgSend((id)v30[3], "initWithId:movieData:posterImageData:posterTime:startTime:endTime:title:creator:", v25.super.isa, a2, a3, v26, v27, a8, a9, a10);

  return v28;
}

void sub_100604FA0(void *a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  Class isa;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  double v21;
  double v22;
  double v23;
  _UNKNOWN ****v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  _UNKNOWN ****v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  id v36;
  CKRecordID v37;
  Swift::String v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  int v44;
  void *v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE v49[24];

  v5 = v3;
  v48 = type metadata accessor for CRLMovieItemAssetData(0);
  __chkstk_darwin(v48);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v39 - v12;
  isa = UUID._bridgeToObjectiveC()().super.isa;
  v15 = objc_msgSend(a1, "getBoardItemForUUID:", isa);

  if (!v15)
    goto LABEL_13;
  v16 = type metadata accessor for CRLMovieItem(0);
  v17 = swift_dynamicCastClass(v15, v16);
  if (!v17)
  {

LABEL_13:
    sub_100757E04(&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetMoviePosterTime.swift", 100, 2, 42, "Unable to retrieve movie item", 29, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Unable to retrieve movie item");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commit(with:transaction:undoable:)", 34, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetMoviePosterTime.swift", 100, 2u, 42, (uint64_t)"Unable to retrieve movie item", 29, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v37, v38);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
    return;
  }
  v18 = v17;
  v19 = v15;
  sub_100DBEE64(v18, (uint64_t)&off_10127C5E0);

  if (v4)
  {

  }
  else
  {
    v20 = *(void **)(v5 + OBJC_IVAR____TtC8Freeform28CRLCommandSetMoviePosterTime_movieData);
    v45 = *(void **)(v5 + OBJC_IVAR____TtC8Freeform28CRLCommandSetMoviePosterTime_posterImageData);
    v46 = v20;
    v21 = *(double *)(v5 + OBJC_IVAR____TtC8Freeform28CRLCommandSetMoviePosterTime_posterTime);
    v22 = *(double *)(v5 + OBJC_IVAR____TtC8Freeform28CRLCommandSetMoviePosterTime_startTime);
    v23 = *(double *)(v5 + OBJC_IVAR____TtC8Freeform28CRLCommandSetMoviePosterTime_endTime);
    v42 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
    v47 = a2;
    v24 = *(_UNKNOWN *****)(v18 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (*v24 == &off_1013E07D8)
      v25 = *(_QWORD *)(v18 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    else
      v25 = 0;
    swift_beginAccess(v25 + qword_10147E7D8, v49, 32, 0);
    swift_retain(v24);
    v26 = sub_1004B804C(&qword_10140FCF0);
    v44 = a3;
    v39 = v26;
    CRRegister.wrappedValue.getter(v26);
    v27 = (uint64_t)v10;
    v28 = v48;
    v43 = v13[*(int *)(v48 + 36)];
    swift_endAccess(v49);
    sub_1004BF6D4((uint64_t)v13);
    swift_release(v24);
    v29 = *(_QWORD *)(v5 + OBJC_IVAR____TtC8Freeform28CRLCommandSetMoviePosterTime_title);
    v40 = *(_QWORD *)(v5 + OBJC_IVAR____TtC8Freeform28CRLCommandSetMoviePosterTime_title + 8);
    v41 = v29;
    v30 = (uint64_t *)(v5 + OBJC_IVAR____TtC8Freeform28CRLCommandSetMoviePosterTime_creator);
    v31 = *(_UNKNOWN *****)(v18 + v42);
    v32 = *v30;
    v33 = v30[1];
    if (*v31 == &off_1013E07D8)
      v34 = *(_QWORD *)(v18 + v42);
    else
      v34 = 0;
    swift_beginAccess(v34 + qword_10147E7D8, v49, 32, 0);
    swift_retain(v31);
    CRRegister.wrappedValue.getter(v39);
    v35 = *(_BYTE *)(v27 + *(int *)(v28 + 48));
    swift_endAccess(v49);
    sub_1004BF6D4(v27);
    swift_release(v31);
    sub_100A327BC(v46, v45, v43, v41, v40, v32, v33, v35 & 1, v21, v22, v23);
    v36 = v19;
    sub_100DB0D78(v18, (uint64_t)&off_10127C5E0, v44);

  }
}

uint64_t sub_1006053D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8Freeform28CRLCommandSetMoviePosterTime_id;
  v2 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform28CRLCommandSetMoviePosterTime_title + 8));
  return swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform28CRLCommandSetMoviePosterTime_creator + 8));
}

id sub_10060545C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCommandSetMoviePosterTime(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100605518()
{
  return type metadata accessor for CRLCommandSetMoviePosterTime(0);
}

uint64_t type metadata accessor for CRLCommandSetMoviePosterTime(uint64_t a1)
{
  uint64_t result;

  result = qword_1013E7A88;
  if (!qword_1013E7A88)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLCommandSetMoviePosterTime);
  return result;
}

uint64_t sub_10060555C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[8];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[2] = "\b";
    v4[3] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[4] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[5] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[6] = &unk_100EFE2C8;
    v4[7] = &unk_100EFE2C8;
    result = swift_updateClassMetadata2(a1, 256, 8, v4, a1 + 200);
    if (!result)
      return 0;
  }
  return result;
}

unint64_t sub_100605600()
{
  unint64_t result;

  result = qword_1013E7A98;
  if (!qword_1013E7A98)
  {
    result = swift_getWitnessTable(&unk_100EFE370, &type metadata for CRLChangeBoardCanvasGridIntent);
    atomic_store(result, (unint64_t *)&qword_1013E7A98);
  }
  return result;
}

unint64_t sub_100605648()
{
  unint64_t result;

  result = qword_1013E7AA0;
  if (!qword_1013E7AA0)
  {
    result = swift_getWitnessTable(&unk_100EFE398, &type metadata for CRLChangeBoardCanvasGridIntent);
    atomic_store(result, (unint64_t *)&qword_1013E7AA0);
  }
  return result;
}

uint64_t sub_10060568C(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &unk_10111A93C, 1) + 8);
}

uint64_t sub_1006056B0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10111A914, 1);
}

_QWORD *sub_1006056C0@<X0>(_QWORD *a1@<X8>)
{
  return IntentParameter.wrappedValue.getter(a1);
}

uint64_t sub_1006056E0()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t sub_100605700()
{
  uint64_t v1;

  IntentParameter.wrappedValue.getter(&v1);
  return v1;
}

uint64_t sub_100605730()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t sub_100605750(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4[11] = a3;
  v4[12] = a4;
  v4[9] = a1;
  v4[10] = a2;
  v5 = type metadata accessor for CRLBoardIdentifier(0);
  v4[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CRLBoardEntity(0);
  v4[14] = v6;
  v7 = (*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[15] = swift_task_alloc(v7);
  v4[16] = swift_task_alloc(v7);
  v4[17] = swift_task_alloc(v7);
  v4[18] = swift_task_alloc(v7);
  v8 = type metadata accessor for Logger(0);
  v4[19] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v4[20] = v9;
  v4[21] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100605820, 0, 0);
}

uint64_t sub_100605820()
{
  uint64_t v0;
  _QWORD *v1;
  char v2;
  _QWORD *v3;
  __n128 v4;
  char v5;
  char v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;

  if (qword_1013DD838 != -1)
    swift_once(&qword_1013DD838, sub_100A04F30);
  swift_beginAccess(&static OS_os_log.appIntents, v0 + 16, 0, 0);
  Logger.init(_:)((id)static OS_os_log.appIntents);
  v1 = IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 225));
  if (*(_BYTE *)(v0 + 225))
  {
    if (*(_BYTE *)(v0 + 225) == 1)
    {
      v2 = 0;
    }
    else
    {
      v3 = *(_QWORD **)(v0 + 144);
      IntentParameter.wrappedValue.getter(v3);
      EntityProperty.wrappedValue.getter(v4);
      v5 = *(_BYTE *)(v0 + 224);
      v1 = (_QWORD *)sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLBoardEntity);
      v2 = v5 ^ 1;
    }
  }
  else
  {
    v2 = 1;
  }
  v6 = v2 & 1;
  *(_BYTE *)(v0 + 227) = v2 & 1;
  v7 = *(_QWORD **)(v0 + 144);
  v9 = *(_QWORD *)(v0 + 104);
  v8 = *(_QWORD *)(v0 + 112);
  AppDependency.wrappedValue.getter(v1);
  *(_QWORD *)(v0 + 176) = *(_QWORD *)(v0 + 48);
  v10 = sub_1004B804C(&qword_1013EF520);
  v11 = type metadata accessor for CRLBoardIdentifierAndValue(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 72);
  v14 = *(unsigned __int8 *)(v12 + 80);
  v15 = (v14 + 32) & ~v14;
  v16 = swift_allocObject(v10, v15 + v13, v14 | 7);
  *(_OWORD *)(v16 + 16) = xmmword_100EF5E40;
  v17 = v16 + v15;
  IntentParameter.wrappedValue.getter(v7);
  sub_1004B8460((uint64_t)v7 + *(int *)(v8 + 40), v9, type metadata accessor for CRLBoardIdentifier);
  sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLBoardEntity);
  sub_1004DB5FC(v9, v17);
  *(_BYTE *)(v17 + *(int *)(v11 + 20)) = v6;
  v18 = sub_100AF83A8(v16);
  *(_QWORD *)(v0 + 184) = v18;
  swift_setDeallocating(v16);
  swift_arrayDestroy(v17, *(_QWORD *)(v16 + 16), v11);
  swift_deallocClassInstance(v16, 32, 7);
  v19 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 192) = v19;
  *(_QWORD *)(v0 + 200) = static MainActor.shared.getter(v19);
  v20 = (_QWORD *)swift_task_alloc(dword_10140E164);
  *(_QWORD *)(v0 + 208) = v20;
  *v20 = v0;
  v20[1] = sub_100605A68;
  return sub_100CA6CEC(v18);
}

uint64_t sub_100605A68()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 208);
  *(_QWORD *)(*v1 + 216) = v0;
  swift_task_dealloc(v3);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(*(_QWORD *)(v2 + 192), &protocol witness table for MainActor);
  if (v0)
    v6 = sub_100605CD4;
  else
    v6 = sub_100605AEC;
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_100605AEC()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;

  v1 = (void *)v0[22];
  v2 = v0[23];
  swift_release(v0[25]);
  swift_bridgeObjectRelease(v2);

  return swift_task_switch(sub_100605B38, 0, 0);
}

uint64_t sub_100605B38()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(_BYTE *)(v0 + 227);
  v2 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD **)(v0 + 144);
  v12 = *(_QWORD *)(v0 + 160);
  v13 = *(_QWORD *)(v0 + 152);
  v4 = *(_QWORD *)(v0 + 128);
  v5 = *(_QWORD **)(v0 + 136);
  v6 = *(_QWORD *)(v0 + 120);
  v14 = *(_QWORD *)(v0 + 104);
  v11 = *(_QWORD *)(v0 + 112);
  IntentParameter.wrappedValue.getter(v3);
  *(_BYTE *)(v0 + 226) = v1;
  EntityProperty.wrappedValue.setter(v0 + 226);
  sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLBoardEntity);
  IntentParameter.wrappedValue.getter(v3);
  IntentParameter.wrappedValue.getter(v5);
  v7 = sub_100880218();
  sub_1004B8460((uint64_t)v5, v4, type metadata accessor for CRLBoardEntity);
  sub_1004B8460(v4, v6, type metadata accessor for CRLBoardEntity);
  IntentParameter.wrappedValue.setter(v6);
  sub_1004B84A4(v4, type metadata accessor for CRLBoardEntity);
  sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLBoardEntity);
  *(_QWORD *)(v0 + 64) = v7;
  v8 = sub_1004B7878((unint64_t *)&qword_1013E3448, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F064FC);
  v9 = sub_1005761F4();
  static IntentResult.result<A, B>(value:opensIntent:)(v3, v0 + 64, v11, &type metadata for CRLOpenBoardIntent, v8, v9);
  swift_release(v7);
  sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLBoardEntity);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v2, v13);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v5);
  swift_task_dealloc(v4);
  swift_task_dealloc(v6);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100605CD4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 200));
  return swift_task_switch(sub_100605D10, 0, 0);
}

uint64_t sub_100605D10()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  __n128 v17;
  __n128 v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  __n128 v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v1 = *(_QWORD *)(v0 + 216);
  v2 = *(void **)(v0 + 176);
  v4 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 80);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 184));

  swift_retain(v5);
  swift_retain(v4);
  swift_retain(v3);
  swift_errorRetain(v1);
  swift_retain(v5);
  swift_retain(v4);
  swift_retain(v3);
  v6 = swift_errorRetain(v1);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.error.getter(v7);
  if (os_log_type_enabled(v7, v8))
  {
    v9 = *(_QWORD *)(v0 + 216);
    v10 = *(_QWORD **)(v0 + 144);
    v12 = *(_QWORD *)(v0 + 104);
    v11 = *(_QWORD *)(v0 + 112);
    v41 = *(_QWORD *)(v0 + 88);
    v42 = *(_QWORD *)(v0 + 96);
    v40 = *(_QWORD *)(v0 + 80);
    v13 = swift_slowAlloc(22, -1);
    v43 = (uint64_t *)swift_slowAlloc(8, -1);
    v45 = swift_slowAlloc(32, -1);
    v47 = v45;
    *(_DWORD *)v13 = 136315394;
    IntentParameter.wrappedValue.getter(v10);
    sub_1004B8460((uint64_t)v10 + *(int *)(v11 + 40), v12, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLBoardEntity);
    v14 = sub_10067AD38();
    v16 = v15;
    sub_1004B84A4(v12, type metadata accessor for CRLBoardIdentifier);
    *(_QWORD *)(v0 + 40) = sub_100BF0F1C(v14, v16, &v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v0 + 48, v13 + 4, v13 + 12);
    v17 = swift_bridgeObjectRelease(v16);
    swift_release_n(v40, 2, v17);
    swift_release_n(v41, 2, v18);
    swift_release_n(v42, 2, v19);
    *(_WORD *)(v13 + 12) = 2112;
    swift_errorRetain(v9);
    v20 = _swift_stdlib_bridgeErrorToNSError(v9);
    *(_QWORD *)(v0 + 56) = v20;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 56, v0 + 64, v13 + 14, v13 + 22);
    *v43 = v20;
    swift_errorRelease(v9);
    swift_errorRelease(v9);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Problem changing dot grid for board: %s - %@", (uint8_t *)v13, 0x16u);
    v21 = sub_1004B804C(&qword_1013E53A8);
    swift_arrayDestroy(v43, 1, v21);
    swift_slowDealloc(v43, -1, -1);
    swift_arrayDestroy(v45, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v45, -1, -1);
    swift_slowDealloc(v13, -1, -1);

  }
  else
  {
    v22 = *(_QWORD *)(v0 + 216);
    v24 = *(_QWORD *)(v0 + 88);
    v23 = *(_QWORD *)(v0 + 96);
    v25 = *(_QWORD *)(v0 + 80);

    swift_release_n(v25, 2, v26);
    swift_release_n(v24, 2, v27);
    swift_release_n(v23, 2, v28);
    swift_errorRelease(v22);
    swift_errorRelease(v22);
  }
  v29 = *(_QWORD *)(v0 + 216);
  v30 = *(_QWORD *)(v0 + 160);
  v31 = *(_QWORD *)(v0 + 168);
  v33 = *(_QWORD *)(v0 + 144);
  v32 = *(_QWORD *)(v0 + 152);
  v34 = *(_QWORD *)(v0 + 128);
  v35 = *(_QWORD *)(v0 + 136);
  v44 = *(_QWORD *)(v0 + 120);
  v46 = *(_QWORD *)(v0 + 104);
  v36 = type metadata accessor for _PrebuiltAppIntentError(0);
  v37 = sub_1004B7878((unint64_t *)&qword_1013E53A0, (uint64_t (*)(uint64_t))&type metadata accessor for _PrebuiltAppIntentError, (uint64_t)&protocol conformance descriptor for _PrebuiltAppIntentError);
  swift_allocError(v36, v37, 0, 0);
  v38.n128_f64[0] = static _UnrecoverableError.unknownError.getter();
  swift_willThrow(v38);
  swift_errorRelease(v29);
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v31, v32);
  swift_task_dealloc(v31);
  swift_task_dealloc(v33);
  swift_task_dealloc(v35);
  swift_task_dealloc(v34);
  swift_task_dealloc(v44);
  swift_task_dealloc(v46);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1006060B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for LocalizedStringResource(0);
  sub_100501DE0(v10, qword_10147EC70);
  sub_1004F2A1C(v10, (uint64_t)qword_10147EC70);
  v11 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000012, 0x8000000100FBA5A0);
  static Locale.current.getter(v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v9, 0x6E497070414C5243, 0xED000073746E6574, v6, v3, "App intent title", 16, 2);
}

uint64_t sub_100606240()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t KeyPath;
  uint64_t v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  Swift::String v13;
  uint64_t v15;

  v0 = sub_1004B804C(&qword_1013E7AE0);
  __chkstk_darwin(v0);
  v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1004B804C(&qword_1013E7AE8);
  __chkstk_darwin(v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100606EAC();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(14, 2, &type metadata for CRLChangeBoardCanvasGridIntent, v6);
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_100EFE3E0);
  v9 = sub_1004B804C(&qword_1013E7AF0);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v3, v9);
  swift_release(KeyPath);
  v10._countAndFlagsBits = 0x69726720746F6420;
  v10._object = (void *)0xEE0020726F662064;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v10);
  v11 = swift_getKeyPath(&unk_100EFE408);
  v12 = sub_1004B804C(&qword_1013E7AF8);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(v11, v3, v12);
  swift_release(v11);
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v13);
  ParameterSummaryString.init(stringInterpolation:)(v5, &type metadata for CRLChangeBoardCanvasGridIntent, v6);
  return IntentParameterSummary.init(_:table:)(v2, 0x6E497070414C5243, 0xED000073746E6574, &type metadata for CRLChangeBoardCanvasGridIntent, v6);
}

uint64_t sub_10060640C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1013DCB48 != -1)
    swift_once(&qword_1013DCB48, sub_1006060B4);
  v2 = type metadata accessor for LocalizedStringResource(0);
  v3 = sub_1004F2A1C(v2, (uint64_t)qword_10147EC70);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_100606480(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = *v1;
  v5 = v1[1];
  v6 = v1[2];
  v7 = (_QWORD *)swift_task_alloc(dword_1013E7ADC);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1004CF80C;
  return sub_100605750(a1, v4, v5, v6);
}

_BYTE *sub_1006064EC@<X0>(_QWORD *a1@<X8>)
{
  _BYTE *result;
  uint64_t v3;
  uint64_t v4;

  result = sub_100606740();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  return result;
}

uint64_t sub_100606514(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100606EAC();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

double destroy for CRLChangeBoardCanvasGridIntent(_QWORD *a1)
{
  double result;

  swift_release(*a1);
  swift_release(a1[1]);
  *(_QWORD *)&result = swift_release(a1[2]).n128_u64[0];
  return result;
}

uint64_t *_s8Freeform30CRLChangeBoardCanvasGridIntentVwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[2];
  a1[2] = v5;
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  return a1;
}

uint64_t *assignWithCopy for CRLChangeBoardCanvasGridIntent(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = a2[2];
  v9 = a1[2];
  a1[2] = v8;
  swift_retain(v8);
  swift_release(v9);
  return a1;
}

_QWORD *assignWithTake for CRLChangeBoardCanvasGridIntent(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  v5 = a1[2];
  a1[2] = *(_QWORD *)(a2 + 16);
  swift_release(v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLStrokePatternData(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLStrokePatternData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLChangeBoardCanvasGridIntent()
{
  return &type metadata for CRLChangeBoardCanvasGridIntent;
}

uint64_t sub_100606714()
{
  return sub_1004CBA30(&qword_1013E7AB0, &qword_1013E7AB8, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

_BYTE *sub_100606740()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(_BYTE *, uint64_t, uint64_t);
  uint64_t v27;
  void (*v28)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  _BYTE *v33;
  uint64_t v34;
  void (*v35)(_BYTE *, uint64_t, uint64_t, uint64_t);
  _BYTE *v36;
  _BYTE *v37;
  uint64_t v38;
  _BYTE *v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(_BYTE *, uint64_t, uint64_t);
  uint64_t v45;
  _BYTE *v46;
  _BYTE *v47;
  _BYTE *v48;
  unint64_t v49;
  uint64_t v50;
  _BYTE v52[4];
  unsigned int v53;
  uint64_t v54;
  void (*v55)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v56;
  _BYTE *v57;
  void (*v58)(_BYTE *, _QWORD, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _BYTE *v62;
  _BYTE *v63;
  _BYTE *v64;
  _BYTE *v65;
  _BYTE *v66;
  uint64_t v67;
  _QWORD v68[2];
  _BYTE v69[56];

  v67 = type metadata accessor for InputConnectionBehavior(0);
  v61 = *(_QWORD *)(v67 - 8);
  __chkstk_darwin(v67);
  v66 = &v52[-((v0 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v1 = sub_1004B804C(&qword_1013E1110);
  __chkstk_darwin(v1);
  v65 = &v52[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  v64 = &v52[-v4];
  v5 = sub_1004B804C(&qword_1013FE140);
  __chkstk_darwin(v5);
  v63 = &v52[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_1004B804C(&qword_1013E1118);
  __chkstk_darwin(v7);
  v62 = &v52[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v52[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for Locale(0);
  __chkstk_darwin(v13);
  v15 = &v52[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v16);
  v18 = &v52[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = type metadata accessor for LocalizedStringResource(0);
  v20 = *(_QWORD *)(v19 - 8);
  v59 = v19;
  __chkstk_darwin(v19);
  v56 = &v52[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v22);
  v57 = &v52[-v23];
  v60 = sub_1004B804C(&qword_1013E1120);
  v24 = String.LocalizationValue.init(stringLiteral:)(0x6472616F42, 0xE500000000000000);
  static Locale.current.getter(v24);
  v25 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v26 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v10 + 104);
  v26(v12, enum case for LocalizedStringResource.BundleDescription.main(_:), v9);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v18, 0x6E497070414C5243, 0xED000073746E6574, v15, v12, "Parameter title for board", 25, 2);
  v27 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000026, 0x8000000100FBA4B0);
  static Locale.current.getter(v27);
  v53 = v25;
  v54 = v9;
  v28 = v26;
  v55 = v26;
  v26(v12, v25, v9);
  v29 = v62;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v18, 0x6E497070414C5243, 0xED000073746E6574, v15, v12, "Parameter description for boards", 32, 2);
  v58 = *(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v20 + 56);
  v58(v29, 0, 1, v19);
  v30 = type metadata accessor for CRLBoardEntity(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v63, 1, 1);
  v31 = String.LocalizationValue.init(stringLiteral:)(0x6F62206863696857, 0xEC0000003F647261);
  static Locale.current.getter(v31);
  v28(v12, v25, v9);
  v32 = v56;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v18, 0x6E497070414C5243, 0xED000073746E6574, v15, v12, "Prompt for selecting a board from the list", 42, 2);
  v33 = v64;
  IntentDialog.init(_:)(v32);
  v34 = type metadata accessor for IntentDialog(0);
  v35 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56);
  v35(v33, 0, 1, v34);
  v36 = v65;
  v35(v65, 1, 1, v34);
  LODWORD(v56) = enum case for InputConnectionBehavior.default(_:);
  v61 = *(_QWORD *)(v61 + 104);
  v37 = v66;
  ((void (*)(_BYTE *))v61)(v66);
  v38 = sub_1004B7878((unint64_t *)&qword_1013E1138, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F062EC);
  v39 = v57;
  v40 = v62;
  v63 = (_BYTE *)IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v57, v62, v63, v33, v36, v37, v38);
  v60 = sub_1004B804C(&qword_1013E7AC0);
  v41 = String.LocalizationValue.init(stringLiteral:)(0x6574617453, 0xE500000000000000);
  static Locale.current.getter(v41);
  v42 = v53;
  v43 = v54;
  v44 = v55;
  v55(v12, v53, v54);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v18, 0x6E497070414C5243, 0xED000073746E6574, v15, v12, "Parameter title for operation", 29, 2);
  v45 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000033, 0x8000000100FBA530);
  static Locale.current.getter(v45);
  v44(v12, v42, v43);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v18, 0x6E497070414C5243, 0xED000073746E6574, v15, v12, "Parameter description for operation", 35, 2);
  v58(v40, 0, 1, v59);
  v69[0] = 0;
  v46 = v64;
  v35(v64, 1, 1, v34);
  v47 = v65;
  v35(v65, 1, 1, v34);
  v48 = v66;
  ((void (*)(_BYTE *, _QWORD, uint64_t))v61)(v66, v56, v67);
  v49 = sub_100606E68();
  IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)(v39, v40, v69, v46, v47, v48, &off_101264AC0, v49);
  sub_1004B804C(&qword_1013E1128);
  v68[0] = 0xD00000000000001FLL;
  v68[1] = 0x8000000100FAFD20;
  AnyHashable.init<A>(_:)(v68, &type metadata for String, &protocol witness table for String);
  type metadata accessor for AppDependencyManager(0);
  v50 = static AppDependencyManager.shared.getter();
  AppDependency.__allocating_init(key:manager:)(v69, v50);
  return v63;
}

unint64_t sub_100606E68()
{
  unint64_t result;

  result = qword_1013E7AC8;
  if (!qword_1013E7AC8)
  {
    result = swift_getWitnessTable(&unk_100F1F09C, &type metadata for CRLVisibilityOperation);
    atomic_store(result, (unint64_t *)&qword_1013E7AC8);
  }
  return result;
}

unint64_t sub_100606EAC()
{
  unint64_t result;

  result = qword_1013E7AD0;
  if (!qword_1013E7AD0)
  {
    result = swift_getWitnessTable(&unk_100EFE2E0, &type metadata for CRLChangeBoardCanvasGridIntent);
    atomic_store(result, &qword_1013E7AD0);
  }
  return result;
}

uint64_t sub_100606EF0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100606F18@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

id sub_100606F40()
{
  return objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:weight:scale:", 4, 3, 17.0);
}

id sub_100606F78()
{
  id v0;
  void *v1;
  id v2;
  NSString v3;
  NSString v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  Class isa;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v25;

  if (sub_1003A91F4())
    v0 = sub_10060752C();
  else
    v0 = sub_100607248();
  v1 = v0;
  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v3 = String._bridgeToObjectiveC()();
  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend(v2, "localizedStringForKey:value:table:", v3, v4, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v7 = v6;

  v8 = sub_1004C7D68();
  swift_bridgeObjectRelease(v7);
  v9 = sub_1006080E0(v1, v8);

  if (sub_1003A91F4())
    v10 = sub_100607248();
  else
    v10 = sub_10060752C();
  v11 = v10;
  v12 = sub_1004C7D68();
  v13 = sub_1006080E0(v11, v12);

  v14 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v15 = swift_allocObject(v14, 48, 7);
  *(_OWORD *)(v15 + 16) = xmmword_100EF5560;
  *(_QWORD *)(v15 + 32) = v9;
  *(_QWORD *)(v15 + 40) = v13;
  v25 = v15;
  specialized Array._endMutation()(v15);
  v16 = objc_allocWithZone((Class)UIStackView);
  sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
  v17 = v9;
  v18 = v13;
  isa = Array._bridgeToObjectiveC()().super.isa;
  v20 = objc_msgSend(v16, "initWithArrangedSubviews:", isa, swift_bridgeObjectRelease(v25).n128_f64[0]);

  objc_msgSend(v20, "setAxis:", 0);
  objc_msgSend(v20, "setDistribution:", 1);
  objc_msgSend(v20, "setSpacing:", 1.0);
  v21 = objc_msgSend(v1, "heightAnchor");
  v22 = objc_msgSend(v11, "heightAnchor");
  v23 = objc_msgSend(v21, "constraintEqualToAnchor:", v22);

  objc_msgSend(v23, "setActive:", 1);
  return v20;
}

void *sub_100607248()
{
  char *v0;
  void *v1;
  void *v2;
  void *v3;
  char v4;
  char v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  uint64_t v19;
  id v20;
  id v21;
  double *preferredElementSize;
  Swift::String v23;
  Class isa;
  Swift::OpaquePointer children;
  void *v27;
  UIImage_optional v28;

  v1 = v0;
  swift_getObjectType(v0);
  v2 = *(void **)&v0[OBJC_IVAR____TtC8Freeform34CRLiOSMiniFormatterLineEndsBuilder_lineDataProvider];
  v3 = (void *)sub_100557658();
  if (!v3)
    goto LABEL_5;
  sub_100949CD0(&v27, (unint64_t)v3, (uint64_t)v2);
  v5 = v4;
  swift_bridgeObjectRelease(v3);
  v3 = v27;
  if (v27)
  {
    if (v27 == (void *)1)
    {
      v3 = 0;
LABEL_5:
      v6 = 10;
      goto LABEL_6;
    }
    if ((v5 & 1) != 0)
    {
      v9 = 0;
      v6 = 10;
      goto LABEL_13;
    }
    v6 = (uint64_t)objc_msgSend((id)objc_opt_self(CRLLineEnd), "lineEndTypeFromLineEnd:", v27);
LABEL_6:
    v7 = sub_100607CE8(v6);
    if (v7)
    {
      v8 = v7;
      v9 = objc_msgSend(v7, "imageWithHorizontallyFlippedOrientation");

    }
    else
    {
      v9 = 0;
    }
    goto LABEL_13;
  }
  v9 = 0;
  v6 = 10;
  if ((v5 & 1) == 0)
    goto LABEL_6;
LABEL_13:
  v10 = objc_msgSend((id)objc_opt_self(CRLLineEnd), "accessibilityDescriptionFor:", v6);
  if (v10)
  {
    v11 = v10;
    v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v14 = v13;

  }
  else
  {
    v12 = 0;
    v14 = 0;
  }
  v15 = (void *)objc_opt_self(UIColor);
  v16 = objc_msgSend(v15, "labelColor");
  v17 = objc_msgSend(v15, "labelColor");
  v18 = sub_1004C7A58(v9, 0, 0, 0, 0, 0, v16, v17, 6.0, 0, 5, 0, v12, v14, 0);

  objc_msgSend(v18, "setShowsMenuAsPrimaryAction:", 1, swift_bridgeObjectRelease(v14).n128_f64[0]);
  v19 = swift_allocObject(&unk_1012719B8, 24, 7);
  *(_QWORD *)(v19 + 16) = v2;
  v20 = v1;
  swift_retain(v19);
  v21 = v2;
  preferredElementSize = sub_100607E6C((uint64_t)&off_101263338, v6, (uint64_t)sub_1006082F8, v19, 1);

  swift_release(v19);
  sub_1004B8930(0, &qword_1013E1090, UIMenu_ptr);
  v23._countAndFlagsBits = 0;
  v23._object = (void *)0xE000000000000000;
  v28.value.super.isa = 0;
  v28.is_nil = 0;
  isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v23, (Swift::String_optional)0, v28, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)preferredElementSize, children).super.super.isa;
  objc_msgSend(v18, "setMenu:", isa, swift_release(v19).n128_f64[0]);

  return v18;
}

id sub_10060752C()
{
  char *v0;
  void *v1;
  void *v2;
  unint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  UIMenuElementSize preferredElementSize;
  Swift::String v36;
  Class isa;
  Swift::OpaquePointer children;
  id v40;
  id v41;
  void *v42;
  void *v43;
  void *v44;
  double *v45;
  UIImage_optional v46;

  v1 = v0;
  swift_getObjectType(v0);
  v2 = *(void **)&v0[OBJC_IVAR____TtC8Freeform34CRLiOSMiniFormatterLineEndsBuilder_lineDataProvider];
  v3 = sub_100557658();
  if (!v3)
    goto LABEL_5;
  sub_100949CC4(&v45, v3, (uint64_t)v2);
  v5 = v4;
  swift_bridgeObjectRelease(v3);
  v3 = (unint64_t)v45;
  if (v45)
  {
    if (v45 == (double *)1)
    {
      v3 = 0;
LABEL_5:
      v6 = 10;
LABEL_6:
      v7 = sub_100607CE8(v6);
      goto LABEL_7;
    }
    if ((v5 & 1) == 0)
    {
      v6 = (uint64_t)objc_msgSend((id)objc_opt_self(CRLLineEnd), "lineEndTypeFromLineEnd:", v45);
      goto LABEL_6;
    }
    v7 = 0;
    v6 = 10;
  }
  else
  {
    v7 = 0;
    v6 = 10;
    if ((v5 & 1) == 0)
      goto LABEL_6;
  }
LABEL_7:
  v44 = (void *)v3;
  v8 = (void *)objc_opt_self(CRLLineEnd);
  v9 = objc_msgSend(v8, "accessibilityDescriptionFor:", v6);
  v42 = v8;
  if (v9)
  {
    v10 = v9;
    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    v13 = v12;

  }
  else
  {
    v11 = 0;
    v13 = 0;
  }
  v14 = (void *)objc_opt_self(UIColor);
  v15 = objc_msgSend(v14, "labelColor");
  v16 = objc_msgSend(v14, "labelColor");
  v43 = v7;
  v17 = sub_1004C7A58(v7, 0, 0, 0, 0, 0, v15, v16, 6.0, 0, 10, 0, v11, v13, 0);

  v41 = v17;
  objc_msgSend(v17, "setShowsMenuAsPrimaryAction:", 1, swift_bridgeObjectRelease(v13).n128_f64[0]);
  v18 = swift_allocObject(&unk_101271940, 24, 7);
  *(_QWORD *)(v18 + 16) = v2;
  v45 = _swiftEmptyArrayStorage;
  v40 = v1;
  swift_retain(v18);
  v19 = v2;
  specialized ContiguousArray.reserveCapacity(_:)(7);
  sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
  v20 = (void *)objc_opt_self(NSAttributedString);
  v21 = 0;
  v22 = v6;
  do
  {
    v23 = *(uint64_t *)((char *)&off_1012632E0 + v21 + 32);
    v24 = (_QWORD *)swift_allocObject(&unk_101271968, 40, 7);
    v24[2] = sub_100608288;
    v24[3] = v18;
    v24[4] = v23;
    swift_retain(v18);
    v25 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, v22 == v23, sub_1006082CC, v24);
    v26 = objc_msgSend(objc_allocWithZone((Class)NSTextAttachment), "init");
    v27 = sub_100607CE8(v23);
    objc_msgSend(v26, "setImage:", v27);

    v28 = v25;
    v29 = objc_msgSend(v20, "attributedStringWithAttachment:", v26);
    objc_msgSend(v28, "setAttributedTitle:", v29);

    v30 = v28;
    v31 = objc_msgSend(v42, "accessibilityDescriptionFor:", v23);
    objc_msgSend(v30, "setAccessibilityLabel:", v31);

    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v32);
    v33 = *((_QWORD *)v45 + 2);
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v33);
    v34 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v33, v30);
    specialized ContiguousArray._endMutation()(v34);
    v21 += 8;
  }
  while (v21 != 56);
  preferredElementSize = (UIMenuElementSize)v45;

  swift_release(v18);
  sub_1004B8930(0, &qword_1013E1090, UIMenu_ptr);
  v36._countAndFlagsBits = 0;
  v36._object = (void *)0xE000000000000000;
  v46.value.super.isa = 0;
  v46.is_nil = 0;
  isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v36, (Swift::String_optional)0, v46, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, children).super.super.isa;
  objc_msgSend(v41, "setMenu:", isa, swift_release(v18).n128_f64[0]);

  return v41;
}

void *sub_1006079BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v7;

  v0 = sub_100704150();
  if (v0)
    sub_100511EB8(v0);
  v1 = sub_100557658();
  if (v1)
  {
    v2 = v1;
    v3 = v1 & 0xFFFFFFFFFFFFFF8;
    if ((unint64_t)v1 >> 62)
    {
      if (v1 < 0)
        v3 = v1;
      v7 = type metadata accessor for CRLBoardItem(0);
      v5 = _bridgeCocoaArray<A>(_:)(v3, v7);
    }
    else
    {
      v4 = swift_bridgeObjectRetain(v1);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v4);
      type metadata accessor for CRLBoardItem(0);
      v5 = v2;
    }
    swift_bridgeObjectRelease(v2);
    sub_10051FB14(v5);
    swift_bridgeObjectRelease(v5);
  }
  return &_swiftEmptySetSingleton;
}

uint64_t sub_100607AA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1004CB6E8(a2, (uint64_t)&v19);
  v4 = type metadata accessor for CRLShapeItem(0);
  if ((swift_dynamicCast(v18, &v19, (char *)&type metadata for Any + 8, v4, 6) & 1) == 0)
    goto LABEL_10;
  v5 = (void *)v18[0];
  v6 = sub_100557658();
  if (!v6 || (v7 = v6, v8 = sub_100C9D9C0((uint64_t)v5, v6), swift_bridgeObjectRelease(v7), (v8 & 1) == 0))
  {

LABEL_10:
    v16 = sub_1004C9944(a1, a2);
    return v16 & 1;
  }
  v9 = *(char **)(a1 + OBJC_IVAR____TtC8Freeform15CRLChangeRecord_details);
  v10 = &v9[OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data];
  v11 = v9;
  swift_beginAccess(v10, v18, 0, 0);
  v12 = *(_QWORD *)v10;
  if (*(_QWORD *)(*(_QWORD *)v10 + 16))
  {
    v13 = sub_100843260(21);
    if ((v14 & 1) != 0)
      goto LABEL_8;
  }
  v19 = 0;
  v20 = 0;
  v21 = 0;
  v22 = 1;
  sub_100607CA8((uint64_t)&v19);
  v12 = *(_QWORD *)v10;
  if (*(_QWORD *)(*(_QWORD *)v10 + 16) && (v13 = sub_100843260(22), (v15 & 1) != 0))
  {
LABEL_8:
    sub_1004F370C(*(_QWORD *)(v12 + 56) + 32 * v13, (uint64_t)&v19);
    sub_100607CA8((uint64_t)&v19);

    v16 = 1;
  }
  else
  {
    v19 = 0;
    v20 = 0;
    v21 = 0;
    v22 = 1;
    sub_100607CA8((uint64_t)&v19);

    v16 = 0;
  }
  return v16 & 1;
}

void sub_100607C38()
{
  uint64_t v0;

}

id sub_100607C48()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSMiniFormatterLineEndsBuilder();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLiOSMiniFormatterLineEndsBuilder()
{
  return objc_opt_self(_TtC8Freeform34CRLiOSMiniFormatterLineEndsBuilder);
}

uint64_t sub_100607CA8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B804C((uint64_t *)&unk_1013DFC00);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_100607CE8(uint64_t a1)
{
  id v1;
  NSString v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v8;
  uint64_t v9;

  v1 = 0;
  switch(a1)
  {
    case 0:
    case 1:
    case 3:
    case 4:
    case 7:
    case 9:
    case 10:
      v2 = String._bridgeToObjectiveC()();
      v1 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v2);

      if (v1)
      {
        v3 = (void *)objc_opt_self(UIColor);
        v4 = v1;
        v5 = objc_msgSend(v3, "labelColor");
        v1 = objc_msgSend(v4, "imageWithTintColor:", v5);

      }
      break;
    case 2:
    case 5:
    case 6:
    case 8:
    case 11:
      return v1;
    default:
      type metadata accessor for CRLLineEndType(0);
      v9 = a1;
      _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v8, &v9, v8, &type metadata for Int);
      __break(1u);
      JUMPOUT(0x100607E3CLL);
  }
  return v1;
}

double *sub_100607E6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  double *result;
  uint64_t *v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  uint64_t v26;
  id v27;
  id v29;
  id v30;

  v6 = *(_QWORD *)(a1 + 16);
  result = _swiftEmptyArrayStorage;
  if (v6)
  {
    specialized ContiguousArray.reserveCapacity(_:)(v6);
    v10 = (uint64_t *)(a1 + 32);
    sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
    v30 = (id)objc_opt_self(NSAttributedString);
    v29 = (id)objc_opt_self(CRLLineEnd);
    v11 = a3;
    do
    {
      v20 = *v10++;
      v19 = v20;
      v21 = (_QWORD *)swift_allocObject(&unk_101271990, 40, 7);
      v21[2] = v11;
      v21[3] = a4;
      v21[4] = v20;
      swift_retain(a4);
      v22 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, v20 == a2, sub_1006082CC, v21);
      v23 = objc_msgSend(objc_allocWithZone((Class)NSTextAttachment), "init");
      v24 = sub_100607CE8(v20);
      v25 = v24;
      if ((a5 & 1) != 0)
      {
        if (v24)
        {
          v26 = a5;
          v27 = objc_msgSend(v24, "imageWithHorizontallyFlippedOrientation");

          v25 = v27;
          a5 = v26;
          v11 = a3;
        }
      }
      objc_msgSend(v23, "setImage:", v25);

      v12 = v22;
      v13 = objc_msgSend(v30, "attributedStringWithAttachment:", v23);
      objc_msgSend(v12, "setAttributedTitle:", v13);

      v14 = v12;
      v15 = objc_msgSend(v29, "accessibilityDescriptionFor:", v19);
      objc_msgSend(v14, "setAccessibilityLabel:", v15);

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v16);
      v17 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(*(_QWORD *)&v17);
      v18 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(*(_QWORD *)&v17, v14);
      specialized ContiguousArray._endMutation()(v18);
      --v6;
    }
    while (v6);
    return _swiftEmptyArrayStorage;
  }
  return result;
}

id sub_1006080E0(void *a1, void *a2)
{
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  Class isa;
  id v12;
  uint64_t v14;

  v4 = objc_msgSend(a1, "heightAnchor");
  if (qword_1013DC8B0 != -1)
    swift_once(&qword_1013DC8B0, sub_1004C5444);
  v5 = objc_msgSend(v4, "constraintGreaterThanOrEqualToConstant:", *(double *)&qword_10147E6D0);

  objc_msgSend(v5, "setActive:", 1);
  v6 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v7 = swift_allocObject(v6, 48, 7);
  *(_OWORD *)(v7 + 16) = xmmword_100EF5560;
  *(_QWORD *)(v7 + 32) = a2;
  *(_QWORD *)(v7 + 40) = a1;
  v14 = v7;
  specialized Array._endMutation()(v7);
  v8 = objc_allocWithZone((Class)UIStackView);
  sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
  v9 = a2;
  v10 = a1;
  isa = Array._bridgeToObjectiveC()().super.isa;
  v12 = objc_msgSend(v8, "initWithArrangedSubviews:", isa, swift_bridgeObjectRelease(v14).n128_f64[0]);

  objc_msgSend(v12, "setAxis:", 1);
  objc_msgSend(v12, "setSpacing:", 8.0);
  return v12;
}

uint64_t sub_100608264()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100608288(uint64_t a1)
{
  sub_10074BAE8(a1);
}

uint64_t sub_1006082A8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1006082D0()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32));
}

void sub_1006082F8(uint64_t a1)
{
  sub_10074BAE0(a1);
}

void sub_10060839C(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;

  if (qword_1013DCB08 != -1)
    swift_once(&qword_1013DCB08, sub_1005D8770);
  v2 = (void *)static CRLAnalyticsActiveUseManager.shared;
  v4 = *(id *)(a1 + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_activeUseManager);
  *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_activeUseManager) = static CRLAnalyticsActiveUseManager.shared;
  v3 = v2;

}

id sub_10060841C(id result)
{
  if (result != (id)2)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"application(_:didFinishLaunchingWithOptions:)", 45, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSAppDelegate.swift", 85, 2, 95, "Shape library data failed to load.", 34, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"application(_:didFinishLaunchingWithOptions:)", 45, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSAppDelegate.swift", 85, 2u, 95, (uint64_t)"Shape library data failed to load.", 34, 2u);
    return objc_msgSend((id)objc_opt_self(CRLAssertionHandler), "logFullBacktrace");
  }
  return result;
}

double sub_1006084F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void (*v4)(uint64_t);
  double result;

  v4 = *(void (**)(uint64_t))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v4(a2);
  *(_QWORD *)&result = swift_release(v3).n128_u64[0];
  return result;
}

uint64_t sub_100608530()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = type metadata accessor for MainActor(0);
  v0[2] = v1;
  v0[3] = static MainActor.shared.getter(v1);
  v2 = (_QWORD *)swift_task_alloc(dword_10140E23C);
  v0[4] = v2;
  *v2 = v0;
  v2[1] = sub_1004DF470;
  return sub_100CA0CFC();
}

uint64_t sub_1006085A0(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  char v14;

  v6 = a4;
  if (a4)
  {
    type metadata accessor for LaunchOptionsKey(0);
    v10 = v9;
    v11 = sub_1004B7878(&qword_1013DEDF0, (uint64_t (*)(uint64_t))type metadata accessor for LaunchOptionsKey, (uint64_t)&unk_100EF4568);
    v6 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v6, v10, (char *)&type metadata for Any + 8, v11);
  }
  v12 = a3;
  v13 = a1;
  v14 = a5();

  swift_bridgeObjectRelease(v6);
  return v14 & 1;
}

void sub_100608650()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  __n128 v4;
  uint64_t v5;
  _BYTE v6[24];

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardLibrary);
  if (v1)
  {
    v2 = v1;
    sub_100CA1B34();

    sub_100608978();
    if (qword_1013DD820 != -1)
      swift_once(&qword_1013DD820, sub_100A04A9C);
    swift_beginAccess(&static OS_os_log.sceneManagement, v6, 0, 0);
    v3 = (id)static OS_os_log.sceneManagement;
    v5 = static os_log_type_t.default.getter(v4);
    sub_100A06EBC((uint64_t)v3, &_mh_execute_header, v5, "Calling updateAppShortcutParameters()", 37, 2, (uint64_t)_swiftEmptyArrayStorage);

    sub_10060BF8C();
    static AppShortcutsProvider.updateAppShortcutParameters()();
  }
  else
  {
    __break(1u);
  }
}

void sub_1006087BC()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  __n128 v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  void **v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[24];

  v1 = v0;
  if (qword_1013DD6B8 != -1)
    swift_once(&qword_1013DD6B8, sub_100A00A6C);
  swift_beginAccess(&static OS_os_log.crlDefault, v16, 0, 0);
  v2 = (id)static OS_os_log.crlDefault;
  v4 = static os_log_type_t.default.getter(v3);
  sub_100A06EBC((uint64_t)v2, &_mh_execute_header, v4, "CloudKit syncing is enabled", 27, 2, (uint64_t)_swiftEmptyArrayStorage);

  v5 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardDataStore);
  if (v5)
  {
    v6 = type metadata accessor for CRLSyncPriorityProvider(0);
    swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
    v7 = v5;
    v8 = (void **)sub_10057FAD8();
    v9 = type metadata accessor for CRLSyncDriver();
    swift_allocObject(v9, 138, 7);
    v10 = sub_100B0321C(v7, v8);
    v11 = OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_syncDriver;
    v12 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_syncDriver);
    *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_syncDriver) = v10;
    swift_release(v12);
    v13 = *(_QWORD *)(v1 + v11);
    if (v13)
    {
      swift_retain(*(_QWORD *)(v1 + v11));
      sub_10079A9B8(1);
      sub_10079A9B8(1);
      swift_release(v13);
      v14 = *(_QWORD *)(v1 + v11);
      if (v14)
      {
        swift_retain(*(_QWORD *)(v1 + v11));
        sub_10079AC64(0);
        sub_10079AC64(0);
        swift_release(v14);
        v15 = *(_QWORD *)(v1 + v11);
        if (v15)
        {
          swift_retain(v15);
          sub_100A98BBC(0, 0);
          sub_100B04894();
          swift_release(v15);
        }
      }
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_100608978()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  char *v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  unint64_t v26;
  id v27;
  id v28;
  uint64_t v29;
  _QWORD v30[3];
  uint64_t v31;

  v1 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v31 - v5;
  v7 = OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardLibrary;
  v8 = *(char **)(v0 + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardLibrary);
  if (!v8)
  {
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_storeHierarchySnapshot];
  v10 = sub_1004B804C(&qword_1013E1790);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  v12 = v11(v6, 1, 5, v10);
  __chkstk_darwin(v12);
  v30[2] = v6;
  swift_bridgeObjectRetain(v9);
  v13 = v8;
  sub_1007C2808(1, (uint64_t (*)(id))sub_1005A1254, (uint64_t)v30, v9);
  v15 = v14;
  swift_bridgeObjectRelease(v9);
  sub_10060AA30((uint64_t)v6);

  if (!v15)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"logAppLaunchAnalytics()", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSAppDelegate.swift", 85, 2, 224, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"logAppLaunchAnalytics()", 23, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSAppDelegate.swift", 85, 2u, 224, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    return;
  }
  v16 = objc_msgSend(v15, "children");

  v17 = type metadata accessor for CRLBoardLibraryViewModelItemNode(0);
  v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v16, v17);

  if ((unint64_t)v18 >> 62)
  {
    if (v18 < 0)
      v29 = v18;
    else
      v29 = v18 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v18);
    v19 = _CocoaArrayWrapper.endIndex.getter(v29);
    swift_bridgeObjectRelease(v18);
  }
  else
  {
    v19 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v20 = swift_bridgeObjectRelease(v18);
  v21 = *(_QWORD *)(v0 + v7);
  if (!v21)
    goto LABEL_19;
  v22 = *(_QWORD *)(v21 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_storeFolderBoardCount);
  if (!v22)
  {
LABEL_20:
    __break(1u);
    return;
  }
  ((void (*)(char *, uint64_t, uint64_t, uint64_t, __n128))v11)(v3, 3, 5, v10, v20);
  if (*(_QWORD *)(v22 + 16))
  {
    swift_bridgeObjectRetain(v22);
    v23 = sub_1008436B8((uint64_t)v3);
    if ((v24 & 1) != 0)
    {
      v25 = *(_QWORD *)(*(_QWORD *)(v22 + 56) + 8 * v23);
      swift_bridgeObjectRelease(v22);
      sub_10060AA30((uint64_t)v3);
      v26 = sub_1006E9D04();
      v27 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
      v28 = objc_msgSend(v27, "traitCollection");

      LODWORD(v27) = objc_msgSend(v28, "crl_isUserInterfaceStyleDark");
      sub_1006EB194(v19, v25, (int)v27, v26, 0);
      swift_bridgeObjectRelease(v26);
      return;
    }
    swift_bridgeObjectRelease(v22);
  }
  sub_10060AA30((uint64_t)v3);
}

void sub_100608CD8(void *a1)
{
  char *v1;
  char *v2;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  char v9;
  void *v10;
  id v11;
  NSString v12;
  NSString v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  NSString v21;
  NSString v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  UIMenuElementSize v30;
  id v31;
  id v32;
  __n128 v33;
  UIMenuElementSize preferredElementSize;
  Swift::String v35;
  id v36;
  NSString v37;
  NSString v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  UIMenuElementSize v45;
  id v46;
  __n128 v47;
  UIMenuElementSize v48;
  Swift::String v49;
  id v50;
  NSString v51;
  NSString v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  id v58;
  NSString v59;
  NSString v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  id v66;
  NSString v67;
  NSString v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  UIMenuElementSize v75;
  id v76;
  id v77;
  id v78;
  __n128 v79;
  UIMenuElementSize v80;
  Swift::String v81;
  id v82;
  NSString v83;
  NSString v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  NSString v90;
  NSString v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  id v96;
  NSString v97;
  NSString v98;
  id v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  id v103;
  NSString v104;
  NSString v105;
  id v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  id v110;
  NSString v111;
  NSString v112;
  id v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  id v117;
  NSString v118;
  NSString v119;
  id v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  id v124;
  NSString v125;
  NSString v126;
  id v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  id v131;
  NSString v132;
  NSString v133;
  id v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  void *v138;
  uint64_t v139;
  uint64_t v140;
  id v141;
  uint64_t v142;
  id v143;
  id v144;
  id v145;
  id v146;
  id v147;
  NSString v148;
  NSString v149;
  id v150;
  uint64_t v151;
  void *v152;
  void *v153;
  __n128 v154;
  UIMenuElementSize v155;
  Swift::String v156;
  Class isa;
  uint64_t v158;
  uint64_t v159;
  id v160;
  id v161;
  uint64_t v162;
  uint64_t v163;
  id v164;
  uint64_t v165;
  uint64_t v166;
  id v167;
  id v168;
  id v169;
  uint64_t v170;
  uint64_t v171;
  Swift::OpaquePointer children;
  Swift::OpaquePointer childrena;
  Swift::OpaquePointer childrenb;
  Swift::OpaquePointer childrenc;
  void *v176;
  void *v177;
  void *v178;
  void *v179;
  void *v180;
  id v181;
  void *v182;
  id v183;
  void *v184;
  id v185;
  void *v186;
  id v187;
  void *v188;
  id v189;
  void *v190;
  id v191;
  UIMenu v192;
  void *v193;
  void *v194;
  void *v195;
  UIMenu v196;
  void *v197;
  UIMenu v198;
  void *v199;
  void *v200;
  void *v201;
  uint64_t v202;
  id v203;
  void *v204;
  void *v205;
  __int128 v206;
  __int128 v207;
  objc_super v208;
  UIImage_optional v209;
  UIImage_optional v210;
  UIImage_optional v211;
  UIImage_optional v212;

  v2 = v1;
  v208.receiver = v1;
  v208.super_class = (Class)type metadata accessor for CRLiOSAppDelegate();
  objc_msgSendSuper2(&v208, "buildMenuWithBuilder:", a1);
  sub_10060A6B8();
  if (v4)
  {
    v5 = v4;
    v6 = sub_100903068();

    if (v6)
    {

      objc_msgSend(a1, "removeMenuForIdentifier:", *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_insertMenuIdentifier]);
      objc_msgSend(a1, "removeMenuForIdentifier:", *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_autoFillMenuIdentifier]);
    }
  }
  sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
  v7 = objc_msgSend(a1, "system");
  v8 = objc_msgSend((id)objc_opt_self(UIMenuSystem), "mainSystem");
  v9 = static NSObject.== infix(_:_:)(v7, v8);

  if ((v9 & 1) != 0)
  {
    v205 = a1;
    v10 = (void *)objc_opt_self(NSBundle);
    v11 = objc_msgSend(v10, "mainBundle");
    v12 = String._bridgeToObjectiveC()();
    v13 = String._bridgeToObjectiveC()();
    v14 = objc_msgSend(v11, "localizedStringForKey:value:table:", v12, v13, 0);

    v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
    v17 = v16;

    sub_1004B8930(0, &qword_1013E7990, UIKeyCommand_ptr);
    v206 = 0u;
    v207 = 0u;
    v18 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v15, v17, 0, "newBoard:", 78, 0xE100000000000000, 0x100000, &v206, _swiftEmptyArrayStorage, 0, 0, 0, 0);
    v19 = v10;
    v20 = objc_msgSend(v10, "mainBundle");
    v21 = String._bridgeToObjectiveC()();
    v22 = String._bridgeToObjectiveC()();
    v23 = objc_msgSend(v20, "localizedStringForKey:value:table:", v21, v22, 0);

    v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
    v26 = v25;

    v206 = 0u;
    v207 = 0u;
    v27 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v24, v26, 0, "closeBoardShortcut:", 87, 0xE100000000000000, 0x100000, &v206, _swiftEmptyArrayStorage, 0, 0, 0, 0);
    v28 = sub_1004B804C((uint64_t *)&unk_1013E4180);
    v29 = swift_allocObject(v28, 48, 7);
    *(_OWORD *)(v29 + 16) = xmmword_100EF5560;
    *(_QWORD *)(v29 + 32) = v18;
    *(_QWORD *)(v29 + 40) = v27;
    *(_QWORD *)&v206 = v29;
    specialized Array._endMutation()(v29);
    v30 = (uint64_t)v206;
    v199 = v27;
    if ((unint64_t)v206 >> 62)
    {
      if ((uint64_t)v206 < 0)
        v158 = v206;
      else
        v158 = v206 & 0xFFFFFFFFFFFFFF8;
      v159 = sub_1004B8930(0, &qword_1013E7880, UIMenuElement_ptr);
      v160 = v18;
      v161 = v27;
      swift_bridgeObjectRetain(v30);
      preferredElementSize = _bridgeCocoaArray<A>(_:)(v158, v159);
      swift_bridgeObjectRelease(v30);
    }
    else
    {
      v31 = v18;
      v32 = v27;
      v33 = swift_bridgeObjectRetain(v30);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v33);
      sub_1004B8930(0, &qword_1013E7880, UIMenuElement_ptr);
      preferredElementSize = v30;
    }
    swift_bridgeObjectRelease(v30);
    sub_1004B8930(0, &qword_1013E1090, UIMenu_ptr);
    v35._countAndFlagsBits = 0;
    v35._object = (void *)0xE000000000000000;
    v209.value.super.isa = 0;
    v209.is_nil = 0;
    v198.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v35, (Swift::String_optional)0, v209, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, children).super.super.isa;
    objc_msgSend(v205, "insertChildMenu:atStartOfMenuForIdentifier:");
    v204 = v19;
    v36 = objc_msgSend(v19, "mainBundle");
    v37 = String._bridgeToObjectiveC()();
    v38 = String._bridgeToObjectiveC()();
    v39 = objc_msgSend(v36, "localizedStringForKey:value:table:", v37, v38, 0);

    v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
    v42 = v41;

    v206 = 0u;
    v207 = 0u;
    v43 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v40, v42, 0, "duplicate:", 68, 0xE100000000000000, 0x100000, &v206, _swiftEmptyArrayStorage, 0, 0, 0, 0);
    v44 = swift_allocObject(v28, 40, 7);
    *(_OWORD *)(v44 + 16) = xmmword_100EEF400;
    *(_QWORD *)(v44 + 32) = v43;
    *(_QWORD *)&v206 = v44;
    specialized Array._endMutation()(v44);
    v45 = (uint64_t)v206;
    v200 = v18;
    v197 = v43;
    v202 = v28;
    if ((unint64_t)v206 >> 62)
    {
      if ((uint64_t)v206 < 0)
        v162 = v206;
      else
        v162 = v206 & 0xFFFFFFFFFFFFFF8;
      v163 = sub_1004B8930(0, &qword_1013E7880, UIMenuElement_ptr);
      v164 = v43;
      swift_bridgeObjectRetain(v45);
      v48 = _bridgeCocoaArray<A>(_:)(v162, v163);
      swift_bridgeObjectRelease(v45);
    }
    else
    {
      v46 = v43;
      v47 = swift_bridgeObjectRetain(v45);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v47);
      sub_1004B8930(0, &qword_1013E7880, UIMenuElement_ptr);
      v48 = v45;
    }
    swift_bridgeObjectRelease(v45);
    v49._countAndFlagsBits = 0;
    v49._object = (void *)0xE000000000000000;
    v210.value.super.isa = 0;
    v210.is_nil = 0;
    v196.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v49, (Swift::String_optional)0, v210, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v48, childrena).super.super.isa;
    objc_msgSend(v205, "insertChildMenu:atEndOfMenuForIdentifier:");
    v50 = objc_msgSend(v19, "mainBundle");
    v51 = String._bridgeToObjectiveC()();
    v52 = String._bridgeToObjectiveC()();
    v53 = objc_msgSend(v50, "localizedStringForKey:value:table:", v51, v52, 0);

    v54 = static String._unconditionallyBridgeFromObjectiveC(_:)(v53);
    v56 = v55;

    v206 = 0u;
    v207 = 0u;
    v57 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v54, v56, 0, "createSceneShortcut:", 83, 0xE100000000000000, 1179648, &v206, _swiftEmptyArrayStorage, 0, 0, 0, 0);
    v58 = objc_msgSend(v19, "mainBundle");
    v59 = String._bridgeToObjectiveC()();
    v60 = String._bridgeToObjectiveC()();
    v61 = objc_msgSend(v58, "localizedStringForKey:value:table:", v59, v60, 0);

    v62 = static String._unconditionallyBridgeFromObjectiveC(_:)(v61);
    v64 = v63;

    v206 = 0u;
    v207 = 0u;
    v65 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v62, v64, 0, "nextSceneShortcut:", 93, 0xE100000000000000, 1572864, &v206, _swiftEmptyArrayStorage, 0, 0, 0, 0);
    v66 = objc_msgSend(v19, "mainBundle");
    v67 = String._bridgeToObjectiveC()();
    v68 = String._bridgeToObjectiveC()();
    v69 = objc_msgSend(v66, "localizedStringForKey:value:table:", v67, v68, 0);

    v70 = static String._unconditionallyBridgeFromObjectiveC(_:)(v69);
    v72 = v71;

    v206 = 0u;
    v207 = 0u;
    v73 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v70, v72, 0, "previousSceneShortcut:", 91, 0xE100000000000000, 1572864, &v206, _swiftEmptyArrayStorage, 0, 0, 0, 0);
    v74 = swift_allocObject(v202, 56, 7);
    *(_OWORD *)(v74 + 16) = xmmword_100EF7300;
    *(_QWORD *)(v74 + 32) = v57;
    *(_QWORD *)(v74 + 40) = v65;
    *(_QWORD *)(v74 + 48) = v73;
    *(_QWORD *)&v206 = v74;
    specialized Array._endMutation()(v74);
    v75 = (uint64_t)v206;
    v194 = v65;
    v195 = v57;
    v193 = v73;
    if ((unint64_t)v206 >> 62)
    {
      if ((uint64_t)v206 < 0)
        v165 = v206;
      else
        v165 = v206 & 0xFFFFFFFFFFFFFF8;
      v166 = sub_1004B8930(0, &qword_1013E7880, UIMenuElement_ptr);
      v167 = v57;
      v168 = v65;
      v169 = v73;
      swift_bridgeObjectRetain(v75);
      v80 = _bridgeCocoaArray<A>(_:)(v165, v166);
      swift_bridgeObjectRelease(v75);
    }
    else
    {
      v76 = v57;
      v77 = v65;
      v78 = v73;
      v79 = swift_bridgeObjectRetain(v75);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v79);
      sub_1004B8930(0, &qword_1013E7880, UIMenuElement_ptr);
      v80 = v75;
    }
    swift_bridgeObjectRelease(v75);
    v81._countAndFlagsBits = 0;
    v81._object = (void *)0xE000000000000000;
    v211.value.super.isa = 0;
    v211.is_nil = 0;
    v192.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v81, (Swift::String_optional)0, v211, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v80, childrenb).super.super.isa;
    objc_msgSend(v205, "insertChildMenu:atStartOfMenuForIdentifier:");
    v82 = objc_msgSend(v19, "mainBundle");
    v83 = String._bridgeToObjectiveC()();
    v84 = String._bridgeToObjectiveC()();
    v85 = objc_msgSend(v82, "localizedStringForKey:value:table:", v83, v84, 0);

    v86 = static String._unconditionallyBridgeFromObjectiveC(_:)(v85);
    v88 = v87;

    v206 = 0u;
    v207 = 0u;
    v190 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v86, v88, 0, "bringForward:", 70, 0xE100000000000000, 1703936, &v206, _swiftEmptyArrayStorage, 0, 0, 0, 0);
    v89 = objc_msgSend(v19, "mainBundle");
    v90 = String._bridgeToObjectiveC()();
    v91 = String._bridgeToObjectiveC()();
    v92 = objc_msgSend(v89, "localizedStringForKey:value:table:", v90, v91, 0);

    v93 = static String._unconditionallyBridgeFromObjectiveC(_:)(v92);
    v95 = v94;

    v206 = 0u;
    v207 = 0u;
    v179 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v93, v95, 0, "bringToFront:", 70, 0xE100000000000000, 1179648, &v206, _swiftEmptyArrayStorage, 0, 0, 0, 0);
    v96 = objc_msgSend(v19, "mainBundle");
    v97 = String._bridgeToObjectiveC()();
    v98 = String._bridgeToObjectiveC()();
    v99 = objc_msgSend(v96, "localizedStringForKey:value:table:", v97, v98, 0);

    v100 = static String._unconditionallyBridgeFromObjectiveC(_:)(v99);
    v102 = v101;

    v206 = 0u;
    v207 = 0u;
    v188 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v100, v102, 0, "sendBackward:", 66, 0xE100000000000000, 1703936, &v206, _swiftEmptyArrayStorage, 0, 0, 0, 0);
    v103 = objc_msgSend(v19, "mainBundle");
    v104 = String._bridgeToObjectiveC()();
    v105 = String._bridgeToObjectiveC()();
    v106 = objc_msgSend(v103, "localizedStringForKey:value:table:", v104, v105, 0);

    v107 = static String._unconditionallyBridgeFromObjectiveC(_:)(v106);
    v109 = v108;

    v206 = 0u;
    v207 = 0u;
    v186 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v107, v109, 0, "sendToBack:", 66, 0xE100000000000000, 1179648, &v206, _swiftEmptyArrayStorage, 0, 0, 0, 0);
    v110 = objc_msgSend(v19, "mainBundle");
    v111 = String._bridgeToObjectiveC()();
    v112 = String._bridgeToObjectiveC()();
    v113 = objc_msgSend(v110, "localizedStringForKey:value:table:", v111, v112, 0);

    v114 = static String._unconditionallyBridgeFromObjectiveC(_:)(v113);
    v116 = v115;

    v206 = 0u;
    v207 = 0u;
    v184 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v114, v116, 0, "lock:", 76, 0xE100000000000000, 0x100000, &v206, _swiftEmptyArrayStorage, 0, 0, 0, 0);
    v117 = objc_msgSend(v19, "mainBundle");
    v118 = String._bridgeToObjectiveC()();
    v119 = String._bridgeToObjectiveC()();
    v120 = objc_msgSend(v117, "localizedStringForKey:value:table:", v118, v119, 0);

    v121 = static String._unconditionallyBridgeFromObjectiveC(_:)(v120);
    v123 = v122;

    v206 = 0u;
    v207 = 0u;
    v182 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v121, v123, 0, "unlock:", 76, 0xE100000000000000, 1572864, &v206, _swiftEmptyArrayStorage, 0, 0, 0, 0);
    v124 = objc_msgSend(v19, "mainBundle");
    v125 = String._bridgeToObjectiveC()();
    v126 = String._bridgeToObjectiveC()();
    v127 = objc_msgSend(v124, "localizedStringForKey:value:table:", v125, v126, 0);

    v128 = static String._unconditionallyBridgeFromObjectiveC(_:)(v127);
    v130 = v129;

    v206 = 0u;
    v207 = 0u;
    v180 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v128, v130, 0, "group:", 71, 0xE100000000000000, 1572864, &v206, _swiftEmptyArrayStorage, 0, 0, 0, 0);
    v131 = objc_msgSend(v19, "mainBundle");
    v132 = String._bridgeToObjectiveC()();
    v133 = String._bridgeToObjectiveC()();
    v134 = objc_msgSend(v131, "localizedStringForKey:value:table:", v132, v133, 0);

    v135 = static String._unconditionallyBridgeFromObjectiveC(_:)(v134);
    v137 = v136;

    v206 = 0u;
    v207 = 0u;
    v176 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v135, v137, 0, "ungroup:", 71, 0xE100000000000000, 1703936, &v206, _swiftEmptyArrayStorage, 0, 0, 0, 0);
    v206 = 0u;
    v207 = 0u;
    v178 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(0, 0xE000000000000000, 0, "zoomIn:", 62, 0xE100000000000000, 0x100000, &v206, _swiftEmptyArrayStorage, 0, 0, 0, 0);
    v206 = 0u;
    v207 = 0u;
    v201 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(0, 0xE000000000000000, 0, "zoomOut:", 60, 0xE100000000000000, 0x100000, &v206, _swiftEmptyArrayStorage, 0, 0, 0, 0);
    v206 = 0u;
    v207 = 0u;
    v138 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(0, 0xE000000000000000, 0, "maskWithSelection:", 77, 0xE100000000000000, 1179648, &v206, _swiftEmptyArrayStorage, 0, 0, 0, 0);
    v206 = 0u;
    v207 = 0u;
    v177 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(0, 0xE000000000000000, 0, "hideMaskControl:", 13, 0xE100000000000000, 0, &v206, _swiftEmptyArrayStorage, 0, 0, 0, 0);
    objc_msgSend(v177, "setWantsPriorityOverSystemBehavior:", 1);
    v139 = swift_allocObject(v202, 128, 7);
    *(_OWORD *)(v139 + 16) = xmmword_100EFE460;
    *(_QWORD *)(v139 + 32) = v190;
    *(_QWORD *)(v139 + 40) = v179;
    *(_QWORD *)(v139 + 48) = v188;
    *(_QWORD *)(v139 + 56) = v186;
    *(_QWORD *)(v139 + 64) = v184;
    *(_QWORD *)(v139 + 72) = v182;
    *(_QWORD *)(v139 + 80) = v180;
    *(_QWORD *)(v139 + 88) = v176;
    *(_QWORD *)(v139 + 96) = v178;
    *(_QWORD *)(v139 + 104) = v201;
    *(_QWORD *)(v139 + 112) = v138;
    *(_QWORD *)(v139 + 120) = v177;
    *(_QWORD *)&v206 = v139;
    specialized Array._endMutation()(v139);
    v140 = v206;
    v203 = v190;
    v191 = v179;
    v189 = v188;
    v187 = v186;
    v185 = v184;
    v183 = v182;
    v181 = v180;
    v141 = v176;
    v142 = v140;
    v143 = v178;
    v144 = v201;
    v145 = v138;
    v146 = v177;
    v147 = objc_msgSend(v204, "mainBundle");
    v148 = String._bridgeToObjectiveC()();
    v149 = String._bridgeToObjectiveC()();
    v150 = objc_msgSend(v147, "localizedStringForKey:value:table:", v148, v149, 0);

    v151 = static String._unconditionallyBridgeFromObjectiveC(_:)(v150);
    v153 = v152;

    if ((unint64_t)v142 >> 62)
    {
      if (v142 < 0)
        v170 = v142;
      else
        v170 = v142 & 0xFFFFFFFFFFFFFF8;
      v171 = sub_1004B8930(0, &qword_1013E7880, UIMenuElement_ptr);
      swift_bridgeObjectRetain(v142);
      v155 = _bridgeCocoaArray<A>(_:)(v170, v171);
      swift_bridgeObjectRelease(v142);
    }
    else
    {
      v154 = swift_bridgeObjectRetain(v142);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v154);
      sub_1004B8930(0, &qword_1013E7880, UIMenuElement_ptr);
      v155 = v142;
    }
    swift_bridgeObjectRelease(v142);
    v156._countAndFlagsBits = v151;
    v156._object = v153;
    v212.value.super.isa = 0;
    v212.is_nil = 0;
    isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v156, (Swift::String_optional)0, v212, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v155, childrenc).super.super.isa;
    objc_msgSend(v205, "insertSiblingMenu:afterMenuForIdentifier:", isa, UIMenuFormat);

  }
}

