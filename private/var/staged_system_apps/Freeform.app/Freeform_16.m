uint64_t sub_100C09420@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  double v14;
  float v15;
  double v16;
  float v17;
  double v18;
  float v19;
  double v20;
  float v21;
  double v22;
  float v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  unsigned __int8 v26;
  float *v27;
  _BYTE *v28;
  float *v29;
  uint64_t v30;
  id v31;
  double v32;
  double v33;
  id v34;
  uint64_t v35;
  int *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE v41[4];
  unsigned int v42;
  void (*v43)(_BYTE *, uint64_t, uint64_t, uint64_t);
  _BYTE *v44;
  uint64_t v45;

  v45 = a1;
  v1 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v1);
  v3 = &v41[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  v6 = &v41[-v5];
  v7 = type metadata accessor for CRLBoardItemParentAffinity(0);
  __chkstk_darwin(v7);
  v9 = &v41[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  v44 = &v41[-v11];
  v12 = type metadata accessor for UUID(0);
  v43 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
  v43(v6, 1, 1, v12);
  v13 = objc_msgSend(objc_allocWithZone((Class)CRLCanvasInfoGeometry), "init");
  objc_msgSend(v13, "position");
  v15 = v14;
  v17 = v16;
  objc_msgSend(v13, "size");
  v19 = v18;
  v21 = v20;
  objc_msgSend(v13, "angle");
  v23 = v22;
  v42 = objc_msgSend(v13, "widthValid");
  v24 = objc_msgSend(v13, "heightValid");
  v25 = objc_msgSend(v13, "horizontalFlip");
  v26 = objc_msgSend(v13, "verticalFlip");
  sub_1004CB7BC((uint64_t)v6, (uint64_t)v3, (uint64_t *)&unk_1013E1A50);
  v43(v9, 1, 1, v12);
  *(_QWORD *)&v9[*(int *)(v7 + 24)] = _swiftEmptyDictionarySingleton;
  sub_100582338((uint64_t)v3, (uint64_t)v9, (uint64_t *)&unk_1013E1A50);
  v27 = (float *)&v9[*(int *)(v7 + 20)];
  *v27 = v15;
  v27[1] = v17;
  v27[2] = v19;
  v27[3] = v21;
  v27[4] = v23;
  *((_BYTE *)v27 + 20) = v42;
  *((_BYTE *)v27 + 21) = v24;
  *((_BYTE *)v27 + 22) = v25;
  *((_BYTE *)v27 + 23) = v26;
  *((_QWORD *)v27 + 3) = _swiftEmptyDictionarySingleton;
  v28 = v44;
  sub_1004B84E0((uint64_t)v9, (uint64_t)v44, type metadata accessor for CRLBoardItemParentAffinity);

  sub_1004CB800((uint64_t)v6, (uint64_t *)&unk_1013E1A50);
  v29 = (float *)&v28[*(int *)(v7 + 20)];
  v30 = (uint64_t)v28;
  v31 = objc_msgSend(objc_allocWithZone((Class)CRLCanvasInfoGeometry), "initWithPosition:size:widthValid:heightValid:horizontalFlip:verticalFlip:angle:", *((unsigned __int8 *)v29 + 20), *((unsigned __int8 *)v29 + 21), *((unsigned __int8 *)v29 + 22), *((unsigned __int8 *)v29 + 23), *v29, v29[1], v29[2], v29[3], v29[4]);
  objc_msgSend(v31, "size");
  v34 = objc_msgSend((id)objc_opt_self(CRLPathSource), "pathSourceForShapeType:naturalSize:", 3, v32, v33);
  v35 = v45;
  sub_1004B8460(v30, v45, type metadata accessor for CRLBoardItemParentAffinity);
  v36 = (int *)type metadata accessor for CRLShapeItemParentAffinity(0);
  sub_10092BFC8(v34, v35 + v36[5]);
  v37 = v35 + v36[6];
  v38 = type metadata accessor for CRLPKStrokePathData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v37, 1, 1, v38);

  v39 = v35 + v36[7];
  *(_QWORD *)v39 = 0;
  *(_BYTE *)(v39 + 8) = -1;
  *(_QWORD *)(v35 + v36[8]) = _swiftEmptyDictionarySingleton;
  return sub_1004B84A4(v30, type metadata accessor for CRLBoardItemParentAffinity);
}

uint64_t sub_100C097DC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;

  v3 = v1;
  v5 = sub_1004B804C(&qword_10140AA20);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_100C0F1E8();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLShapeItemParentAffinity.CodingKeys, &type metadata for CRLShapeItemParentAffinity.CodingKeys, v11, v9, v10);
  LOBYTE(v30) = 0;
  v12 = type metadata accessor for CRLBoardItemParentAffinity(0);
  v13 = sub_1004B7878(&qword_1013E6A88, type metadata accessor for CRLBoardItemParentAffinity, (uint64_t)&unk_100EFD6C4);
  KeyedEncodingContainer.encode<A>(_:forKey:)(v3, &v30, v5, v12, v13);
  if (!v2)
  {
    v14 = (int *)type metadata accessor for CRLShapeItemParentAffinity(0);
    v15 = v3 + v14[5];
    LOBYTE(v30) = 1;
    v16 = type metadata accessor for CRLPathSourceData(0);
    v17 = sub_1004B7878(&qword_1013F7A48, type metadata accessor for CRLPathSourceData, (uint64_t)&unk_100F173F8);
    KeyedEncodingContainer.encode<A>(_:forKey:)(v15, &v30, v5, v16, v17);
    v18 = v3 + v14[6];
    LOBYTE(v30) = 2;
    v19 = type metadata accessor for CRLPKStrokePathData(0);
    v20 = sub_1004B7878(&qword_10140AA28, type metadata accessor for CRLPKStrokePathData, (uint64_t)&unk_100F1EE08);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v18, &v30, v5, v19, v20);
    v21 = (uint64_t *)(v3 + v14[7]);
    v22 = *v21;
    LOBYTE(v21) = *((_BYTE *)v21 + 8);
    v30 = v22;
    v31 = (char)v21;
    v29 = 3;
    v23 = sub_1004B804C(&qword_10140AA10);
    v24 = sub_100C11090(&qword_10140AA30, (uint64_t)&protocol conformance descriptor for <> CRExtensible<A>);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(&v30, &v29, v5, v23, v24);
    v30 = *(_QWORD *)(v3 + v14[8]);
    v29 = 4;
    v25 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    v26 = sub_1004F31B4();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v30, &v29, v5, v25, v26);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100C09A84(uint64_t a1)
{
  uint64_t v1;

  return sub_100582338(a1, v1, (uint64_t *)&unk_1013E1A50);
}

uint64_t sub_100C09AA4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for CRLBoardItemParentAffinity(0) + 20);
  return sub_1005E3CA4(v3, a1);
}

uint64_t sub_100C09AD4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for CRLBoardItemParentAffinity(0) + 20);
  return sub_1005E3C68(a1, v3);
}

void sub_100C09B08(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_100C08CF4(a1, a2);
}

uint64_t sub_100C09B1C(_QWORD *a1)
{
  return sub_100C097DC(a1);
}

uint64_t sub_100C09B30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_10140A9C0, type metadata accessor for CRLShapeItemParentAffinity, (uint64_t)&unk_100F2E4C0);
  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100C09B88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1004B7878(&qword_10140A8D8, type metadata accessor for CRLShapeItemParentAffinity, (uint64_t)&unk_100F2E2E0);
  v7 = sub_1004B7878(&qword_10140A9C8, type metadata accessor for CRLShapeItemParentAffinity, (uint64_t)&unk_100F2E498);
  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_100C09C1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_10140A9C0, type metadata accessor for CRLShapeItemParentAffinity, (uint64_t)&unk_100F2E4C0);
  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_100C09C6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_10140A930, type metadata accessor for CRLShapeItemParentAffinity, (uint64_t)&unk_100F2E318);
  return CRValueStruct.init(from:)(a1, a2, v4);
}

uint64_t sub_100C09CD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_10140A930, type metadata accessor for CRLShapeItemParentAffinity, (uint64_t)&unk_100F2E318);
  return CRValueStruct.encode(to:)(a1, a2, v4);
}

uint64_t sub_100C09D2C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_10140A930, type metadata accessor for CRLShapeItemParentAffinity, (uint64_t)&unk_100F2E318);
  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_100C09D7C()
{
  uint64_t result;

  qword_101481040 = 97;
  *(_QWORD *)algn_101481048 = 0xE100000000000000;
  result = swift_getKeyPath(&unk_100F2EA48);
  qword_101481050 = result;
  return result;
}

uint64_t sub_100C09DBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1004B8460(v1, a1, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
}

uint64_t sub_100C09DE0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_10140A998, type metadata accessor for CRLShapeItemCRDTData, (uint64_t)&unk_100F2E870);
  return CRType.context.getter(a1, v2);
}

uint64_t sub_100C09E20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_10140A9F0, type metadata accessor for CRLShapeItemCRDTData, (uint64_t)&unk_100F2E9B8);
  return CRStruct_1.actionUndoingDifference(from:)(a1, a2, v4);
}

uint64_t sub_100C09E78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_10140A9F0, type metadata accessor for CRLShapeItemCRDTData, (uint64_t)&unk_100F2E9B8);
  return CRStruct_1.apply(_:)(a1, a2, v4);
}

uint64_t sub_100C09EC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_10140A9F0, type metadata accessor for CRLShapeItemCRDTData, (uint64_t)&unk_100F2E9B8);
  return CRStruct_1.hasDelta(from:)(a1, a2, v4);
}

uint64_t sub_100C09F18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B7878(&qword_10140A9F0, type metadata accessor for CRLShapeItemCRDTData, (uint64_t)&unk_100F2E9B8);
  return CRStruct_1.delta(_:from:)(a1, a2, a3, v6);
}

uint64_t sub_100C09F80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_10140A9F0, type metadata accessor for CRLShapeItemCRDTData, (uint64_t)&unk_100F2E9B8);
  return CRStruct_1.canMerge(delta:)(a1, a2, v4);
}

uint64_t sub_100C09FD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_10140A9F0, type metadata accessor for CRLShapeItemCRDTData, (uint64_t)&unk_100F2E9B8);
  return CRStruct_1.merge(delta:)(a1, a2, v4);
}

uint64_t sub_100C0A020()
{
  uint64_t v0;
  uint64_t v1;

  if (qword_1013DDDD8 != -1)
    swift_once(&qword_1013DDDD8, sub_100C09D7C);
  v0 = qword_101481040;
  v1 = qword_101481050;
  swift_bridgeObjectRetain(*(_QWORD *)algn_101481048);
  swift_retain(v1);
  return v0;
}

uint64_t sub_100C0A094(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_10140A9F0, type metadata accessor for CRLShapeItemCRDTData, (uint64_t)&unk_100F2E9B8);
  return CRStruct_1.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100C0A0EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B7878(&qword_10140A9F0, type metadata accessor for CRLShapeItemCRDTData, (uint64_t)&unk_100F2E9B8);
  return CRStruct_1.observableDifference(from:with:)(a1, a2, a3, v6);
}

uint64_t sub_100C0A154(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_10140A9F0, type metadata accessor for CRLShapeItemCRDTData, (uint64_t)&unk_100F2E9B8);
  return CRStruct_1.visitReferences(_:)(a1, a2, v4);
}

BOOL sub_100C0A1A4()
{
  sub_1004B7878(&qword_10140A9F0, type metadata accessor for CRLShapeItemCRDTData, (uint64_t)&unk_100F2E9B8);
  return CRStruct_1.needToFinalizeTimestamps()();
}

uint64_t sub_100C0A1E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_10140A9F0, type metadata accessor for CRLShapeItemCRDTData, (uint64_t)&unk_100F2E9B8);
  return CRStruct_1.finalizeTimestamps(_:)(a1, a2, v4);
}

uint64_t sub_100C0A234(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_10140A9F0, type metadata accessor for CRLShapeItemCRDTData, (uint64_t)&unk_100F2E9B8);
  return CRStruct_1.merge(_:)(a1, a2, v4);
}

uint64_t sub_100C0A284(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B7878(&qword_1013E2978, type metadata accessor for CRLShapeItemCRDTData, (uint64_t)&unk_100F2E938);
  return CRDT.serializedData(_:version:)(a1, a2, a3, v6);
}

uint64_t sub_100C0A2E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B7878(&qword_1013E2978, type metadata accessor for CRLShapeItemCRDTData, (uint64_t)&unk_100F2E938);
  return CRDT.init(serializedData:)(a1, a2, a3, v6);
}

uint64_t sub_100C0A35C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_10140A9F0, type metadata accessor for CRLShapeItemCRDTData, (uint64_t)&unk_100F2E9B8);
  return static CRStruct_1.fieldKeys.getter(a1, v2);
}

uint64_t sub_100C0A39C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  _OWORD v5[7];
  _BYTE v6[232];
  _OWORD v7[3];
  uint64_t v8;
  _BYTE v9[232];

  memset(v5, 0, sizeof(v5));
  sub_1004C39E8((uint64_t)v9);
  sub_1004C4938((uint64_t)v9, (uint64_t)v6, (uint64_t *)&unk_1013F1530);
  memset(v7, 0, sizeof(v7));
  v8 = 0;
  result = sub_100C085D8((uint64_t)v5, (uint64_t)v6, (uint64_t)v7, (uint64_t)v7, a2, 0.0);
  *(_QWORD *)(a2 + *(int *)(a1 + 20)) = _swiftEmptyDictionarySingleton;
  return result;
}

uint64_t sub_100C0A438(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_10140A9F0, type metadata accessor for CRLShapeItemCRDTData, (uint64_t)&unk_100F2E9B8);
  return CRStruct_1.init(from:)(a1, a2, v4);
}

uint64_t sub_100C0A49C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_10140A9F0, type metadata accessor for CRLShapeItemCRDTData, (uint64_t)&unk_100F2E9B8);
  return CRStruct_1.encode(to:)(a1, a2, v4);
}

uint64_t sub_100C0A4F8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_10140A9F0, type metadata accessor for CRLShapeItemCRDTData, (uint64_t)&unk_100F2E9B8);
  return CRStruct_1.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_100C0A548()
{
  uint64_t result;

  qword_101481058 = 97;
  unk_101481060 = 0xE100000000000000;
  qword_101481068 = swift_getKeyPath(&unk_100F2EA68);
  unk_101481070 = 98;
  qword_101481078 = 0xE100000000000000;
  qword_101481080 = swift_getKeyPath(&unk_100F2EA88);
  qword_101481088 = 99;
  qword_101481090 = 0xE100000000000000;
  qword_101481098 = swift_getKeyPath(&unk_100F2EAA8);
  unk_1014810A0 = 100;
  qword_1014810A8 = 0xE100000000000000;
  qword_1014810B0 = swift_getKeyPath(&unk_100F2EAC8);
  qword_1014810B8 = 101;
  qword_1014810C0 = 0xE100000000000000;
  result = swift_getKeyPath(&unk_100F2EAE8);
  qword_1014810C8 = result;
  return result;
}

double sub_100C0A5E4@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double result;

  if (qword_1013DDDE0 != -1)
    swift_once(&qword_1013DDDE0, sub_100C0A548);
  v2 = unk_101481060;
  v4 = qword_101481068;
  v3 = unk_101481070;
  v5 = qword_101481078;
  v6 = qword_101481080;
  v7 = qword_101481088;
  v8 = qword_101481090;
  v10 = qword_101481098;
  v9 = unk_1014810A0;
  v11 = qword_1014810A8;
  v12 = qword_1014810B0;
  v13 = qword_1014810B8;
  v14 = qword_1014810C0;
  v15 = qword_1014810C8;
  *a1 = qword_101481058;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  a1[4] = v5;
  a1[5] = v6;
  a1[6] = v7;
  a1[7] = v8;
  a1[8] = v10;
  a1[9] = v9;
  a1[10] = v11;
  a1[11] = v12;
  a1[12] = v13;
  a1[13] = v14;
  a1[14] = v15;
  swift_bridgeObjectRetain(v2);
  swift_retain(v4);
  swift_bridgeObjectRetain(v5);
  swift_retain(v6);
  swift_bridgeObjectRetain(v8);
  swift_retain(v10);
  swift_bridgeObjectRetain(v11);
  swift_retain(v12);
  swift_bridgeObjectRetain(v14);
  *(_QWORD *)&result = swift_retain(v15).n128_u64[0];
  return result;
}

uint64_t sub_100C0A6D8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_10140A9F8, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData, (uint64_t)&unk_100F2E768);
  return static CRStruct_5.fieldKeys.getter(a1, v2);
}

uint64_t sub_100C0A718(uint64_t a1)
{
  uint64_t v1;

  return swift_bridgeObjectRetain(*(_QWORD *)(v1 + *(int *)(a1 + 36)));
}

uint64_t sub_100C0A724(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t result;

  v4 = *(int *)(a2 + 36);
  result = swift_bridgeObjectRelease(*(_QWORD *)(v2 + v4));
  *(_QWORD *)(v2 + v4) = a1;
  return result;
}

Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *sub_100C0A758())(CKRecordID recordID, Swift::String recordType)
{
  return SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
}

uint64_t sub_100C0A76C@<X0>(uint64_t a1@<X8>)
{
  _OWORD v3[7];
  _BYTE v4[232];
  _OWORD v5[3];
  uint64_t v6;
  _BYTE v7[232];

  memset(v3, 0, sizeof(v3));
  sub_1004C39E8((uint64_t)v7);
  sub_1004C4938((uint64_t)v7, (uint64_t)v4, (uint64_t *)&unk_1013F1530);
  memset(v5, 0, sizeof(v5));
  v6 = 0;
  return sub_100C085D8((uint64_t)v3, (uint64_t)v4, (uint64_t)v5, (uint64_t)v5, a1, 0.0);
}

uint64_t sub_100C0A7EC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878((unint64_t *)&qword_1013FA6E8, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData, (uint64_t)&unk_100F2E580);
  return CRType.context.getter(a1, v2);
}

uint64_t sub_100C0A82C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_10140A9F8, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData, (uint64_t)&unk_100F2E768);
  return CRStruct_5.actionUndoingDifference(from:)(a1, a2, v4);
}

uint64_t sub_100C0A884(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_10140A9F8, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData, (uint64_t)&unk_100F2E768);
  return CRStruct_5.apply(_:)(a1, a2, v4);
}

uint64_t sub_100C0A8D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_10140A9F8, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData, (uint64_t)&unk_100F2E768);
  return CRStruct_5.hasDelta(from:)(a1, a2, v4);
}

uint64_t sub_100C0A924(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B7878(&qword_10140A9F8, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData, (uint64_t)&unk_100F2E768);
  return CRStruct_5.delta(_:from:)(a1, a2, a3, v6);
}

uint64_t sub_100C0A98C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_10140A9F8, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData, (uint64_t)&unk_100F2E768);
  return CRStruct_5.canMerge(delta:)(a1, a2, v4);
}

uint64_t sub_100C0A9DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_10140A9F8, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData, (uint64_t)&unk_100F2E768);
  return CRStruct_5.merge(delta:)(a1, a2, v4);
}

uint64_t sub_100C0AA2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_10140A9F8, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData, (uint64_t)&unk_100F2E768);
  return CRStruct_5.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100C0AA84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B7878(&qword_10140A9F8, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData, (uint64_t)&unk_100F2E768);
  return CRStruct_5.observableDifference(from:with:)(a1, a2, a3, v6);
}

uint64_t sub_100C0AAEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_10140A9F8, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData, (uint64_t)&unk_100F2E768);
  return CRStruct_5.visitReferences(_:)(a1, a2, v4);
}

BOOL sub_100C0AB3C()
{
  sub_1004B7878(&qword_10140A9F8, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData, (uint64_t)&unk_100F2E768);
  return CRStruct_5.needToFinalizeTimestamps()();
}

uint64_t sub_100C0AB7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_10140A9F8, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData, (uint64_t)&unk_100F2E768);
  return CRStruct_5.finalizeTimestamps(_:)(a1, a2, v4);
}

uint64_t sub_100C0ABCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_10140A9F8, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData, (uint64_t)&unk_100F2E768);
  return CRStruct_5.merge(_:)(a1, a2, v4);
}

uint64_t sub_100C0AC1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B7878(&qword_10140A958, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData, (uint64_t)&unk_100F2E5E0);
  return CRDT.serializedData(_:version:)(a1, a2, a3, v6);
}

uint64_t sub_100C0AC80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B7878(&qword_10140A958, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData, (uint64_t)&unk_100F2E5E0);
  return CRDT.init(serializedData:)(a1, a2, a3, v6);
}

uint64_t sub_100C0ACF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_10140A9F8, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData, (uint64_t)&unk_100F2E768);
  return CRStruct_5.init(from:)(a1, a2, v4);
}

uint64_t sub_100C0AD58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_10140A9F8, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData, (uint64_t)&unk_100F2E768);
  return CRStruct_5.encode(to:)(a1, a2, v4);
}

uint64_t sub_100C0ADB4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_10140A9F8, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData, (uint64_t)&unk_100F2E768);
  return CRStruct_5.minEncodingVersion.getter(a1, v2);
}

void sub_100C0AE04()
{
  uint64_t v0;

}

uint64_t sub_100C0AE14()
{
  uint64_t v0;

  sub_1004CB800(v0 + *(_QWORD *)(*(_QWORD *)v0 + 632), &qword_1013F5530);

  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t type metadata accessor for CRLShapeItemCommonData(uint64_t a1)
{
  return sub_1004BD408(a1, qword_10140A340, (uint64_t)&nominal type descriptor for CRLShapeItemCommonData);
}

uint64_t sub_100C0AE70(uint64_t a1)
{
  const char *v2;

  v2 = "\b";
  return swift_initClassMetadata2(a1, 256, 1, &v2, a1 + 672);
}

uint64_t sub_100C0AEB0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 736));
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    result = swift_initClassMetadata2(a1, 0, 1, &v4, a1 + 752);
    if (!result)
      return 0;
  }
  return result;
}

_QWORD *sub_100C0AF20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
  return sub_100C06CA8(a1, a2, a3, a4, a5, a6);
}

_QWORD *sub_100C0AF98(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30;
  _BYTE v31[24];

  v2 = v1;
  v3 = a1;
  v4 = *v1;
  v5 = *(_QWORD *)(*v1 + 736);
  v30 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(a1);
  v7 = &v31[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v8);
  v10 = &v31[-v9 - 8];
  v11 = sub_1004B804C(&qword_1013F5530);
  __chkstk_darwin(v11);
  v13 = &v31[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v14);
  v16 = &v31[-v15 - 8];
  v17 = (uint64_t)v2 + *(_QWORD *)(v4 + 632);
  swift_beginAccess(v17, v31, 0, 0);
  if ((v3 & 1) != 0)
  {
    sub_1004CB7BC(v17, (uint64_t)v13, &qword_1013F5530);
    v18 = sub_1004CBA30(&qword_1013E2A20, &qword_1013F5530, (uint64_t)&unk_100EFD5F4);
    CRStruct_6.copy(renamingReferences:)(0, v11, v18);
    v19 = sub_1004CB800((uint64_t)v13, &qword_1013F5530);
    (*(void (**)(uint64_t))(*v2 + 760))(v19);
    v20 = *(_QWORD *)(v4 + 744);
    dispatch thunk of CRType.copy(renamingReferences:)(0, v5, *(_QWORD *)(*(_QWORD *)(v20 + 8) + 16));
    (*(void (**)(char *, uint64_t))(v30 + 8))(v7, v5);
  }
  else
  {
    v22 = sub_1004CB7BC(v17, (uint64_t)v16, &qword_1013F5530);
    (*(void (**)(uint64_t))(*v2 + 760))(v22);
    v20 = *(_QWORD *)(v4 + 744);
  }
  v23 = type metadata accessor for CRLAbstractShapeItemData(0, v5, v20, v21);
  v24 = v2[4];
  v25 = v2[5];
  v28 = v2 + 2;
  v26 = v2[2];
  v27 = v28[1];
  swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
  return sub_100C06CA8((uint64_t)v16, (uint64_t)v10, v27, v24, v25, v26);
}

uint64_t sub_100C0B1C4()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 736) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 752));
}

uint64_t sub_100C0B1E0()
{
  uint64_t v0;

  sub_100C06D38();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t type metadata accessor for CRLAbstractShapeItemData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100502040(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CRLAbstractShapeItemData);
}

ValueMetadata *type metadata accessor for CRLShapeItemCommonDataTypeSpecifying()
{
  return &type metadata for CRLShapeItemCommonDataTypeSpecifying;
}

char *sub_100C0B220(char *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v26 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = (char *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v26);
  }
  else
  {
    v7 = sub_1004B804C((uint64_t *)&unk_1014148A0);
    (*(void (**)(char *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = (int *)type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
    v9 = v8[5];
    v10 = &a1[v9];
    v11 = (char *)a2 + v9;
    v12 = sub_1004B804C(&qword_1013E0A88);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    v13 = v8[6];
    v14 = &a1[v13];
    v15 = (char *)a2 + v13;
    v16 = sub_1004B804C((uint64_t *)&unk_1013F62E0);
    v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
    v17(v14, v15, v16);
    v17(&a1[v8[7]], (char *)a2 + v8[7], v16);
    v18 = v8[8];
    v19 = &a1[v18];
    v20 = (char *)a2 + v18;
    v21 = sub_1004B804C(&qword_1013F55A0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
    v22 = v8[9];
    v23 = *(uint64_t *)((char *)a2 + v22);
    *(_QWORD *)&a1[v22] = v23;
    v24 = *(int *)(a3 + 20);
    v25 = *(uint64_t *)((char *)a2 + v24);
    *(_QWORD *)&a1[v24] = v25;
    swift_bridgeObjectRetain(v23);
    swift_bridgeObjectRetain(v25);
  }
  return a1;
}

uint64_t type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(uint64_t a1)
{
  return sub_1004BD408(a1, (uint64_t *)&unk_10140A7B0, (uint64_t)&nominal type descriptor for CRLShapeItemCRDTData.ShapeStyleData);
}

double sub_100C0B39C(uint64_t a1)
{
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  double result;

  v2 = sub_1004B804C((uint64_t *)&unk_1014148A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  v3 = (int *)type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  v4 = a1 + v3[5];
  v5 = sub_1004B804C(&qword_1013E0A88);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + v3[6];
  v7 = sub_1004B804C((uint64_t *)&unk_1013F62E0);
  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
  v8(v6, v7);
  v8(a1 + v3[7], v7);
  v9 = a1 + v3[8];
  v10 = sub_1004B804C(&qword_1013F55A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  swift_bridgeObjectRelease();
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_100C0B498(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = sub_1004B804C((uint64_t *)&unk_1014148A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = (int *)type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  v8 = v7[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1004B804C(&qword_1013E0A88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  v12 = v7[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_1004B804C((uint64_t *)&unk_1013F62E0);
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
  v16(v13, v14, v15);
  v16(a1 + v7[7], a2 + v7[7], v15);
  v17 = v7[8];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = sub_1004B804C(&qword_1013F55A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  v21 = v7[9];
  v22 = *(_QWORD *)(a2 + v21);
  *(_QWORD *)(a1 + v21) = v22;
  v23 = *(int *)(a3 + 20);
  v24 = *(_QWORD *)(a2 + v23);
  *(_QWORD *)(a1 + v23) = v24;
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRetain(v24);
  return a1;
}

uint64_t sub_100C0B5D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = sub_1004B804C((uint64_t *)&unk_1014148A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = (int *)type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  v8 = v7[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1004B804C(&qword_1013E0A88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  v12 = v7[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_1004B804C((uint64_t *)&unk_1013F62E0);
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 24);
  v16(v13, v14, v15);
  v16(a1 + v7[7], a2 + v7[7], v15);
  v17 = v7[8];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = sub_1004B804C(&qword_1013F55A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 24))(v18, v19, v20);
  v21 = v7[9];
  v22 = *(_QWORD *)(a2 + v21);
  *(_QWORD *)(a1 + v21) = v22;
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRelease();
  v23 = *(int *)(a3 + 20);
  v24 = *(_QWORD *)(a2 + v23);
  *(_QWORD *)(a1 + v23) = v24;
  swift_bridgeObjectRetain(v24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100C0B724(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_1004B804C((uint64_t *)&unk_1014148A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = (int *)type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  v8 = v7[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1004B804C(&qword_1013E0A88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v12 = v7[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_1004B804C((uint64_t *)&unk_1013F62E0);
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
  v16(v13, v14, v15);
  v16(a1 + v7[7], a2 + v7[7], v15);
  v17 = v7[8];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = sub_1004B804C(&qword_1013F55A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
  *(_QWORD *)(a1 + v7[9]) = *(_QWORD *)(a2 + v7[9]);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100C0B854(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_1004B804C((uint64_t *)&unk_1014148A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = (int *)type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  v8 = v7[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1004B804C(&qword_1013E0A88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = v7[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_1004B804C((uint64_t *)&unk_1013F62E0);
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 40);
  v16(v13, v14, v15);
  v16(a1 + v7[7], a2 + v7[7], v15);
  v17 = v7[8];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = sub_1004B804C(&qword_1013F55A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 40))(v18, v19, v20);
  *(_QWORD *)(a1 + v7[9]) = *(_QWORD *)(a2 + v7[9]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100C0B994(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C0B9A0);
}

uint64_t sub_100C0B9A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_100C0BA1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C0BA28);
}

uint64_t sub_100C0BA28(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for CRLShapeItemCRDTData(uint64_t a1)
{
  return sub_1004BD408(a1, qword_10140A720, (uint64_t)&nominal type descriptor for CRLShapeItemCRDTData);
}

uint64_t sub_100C0BAB4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

char *sub_100C0BB28(char *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = (char *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v23);
  }
  else
  {
    v7 = sub_1004B804C((uint64_t *)&unk_1014148A0);
    (*(void (**)(char *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = &a1[v8];
    v10 = (char *)a2 + v8;
    v11 = sub_1004B804C(&qword_1013E0A88);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = &a1[v12];
    v14 = (char *)a2 + v12;
    v15 = sub_1004B804C((uint64_t *)&unk_1013F62E0);
    v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    v16(v13, v14, v15);
    v16(&a1[a3[7]], (char *)a2 + a3[7], v15);
    v17 = a3[8];
    v18 = &a1[v17];
    v19 = (char *)a2 + v17;
    v20 = sub_1004B804C(&qword_1013F55A0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
    v21 = a3[9];
    v22 = *(uint64_t *)((char *)a2 + v21);
    *(_QWORD *)&a1[v21] = v22;
    swift_bridgeObjectRetain(v22);
  }
  return a1;
}

double sub_100C0BC70(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  double result;

  v4 = sub_1004B804C((uint64_t *)&unk_1014148A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  v6 = sub_1004B804C(&qword_1013E0A88);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  v8 = sub_1004B804C((uint64_t *)&unk_1013F62E0);
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
  v9(v7, v8);
  v9(a1 + a2[7], v8);
  v10 = a1 + a2[8];
  v11 = sub_1004B804C(&qword_1013F55A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_100C0BD54(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = sub_1004B804C((uint64_t *)&unk_1014148A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1004B804C(&qword_1013E0A88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1004B804C((uint64_t *)&unk_1013F62E0);
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
  v15(v12, v13, v14);
  v15(a1 + a3[7], a2 + a3[7], v14);
  v16 = a3[8];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = sub_1004B804C(&qword_1013F55A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  v20 = a3[9];
  v21 = *(_QWORD *)(a2 + v20);
  *(_QWORD *)(a1 + v20) = v21;
  swift_bridgeObjectRetain(v21);
  return a1;
}

uint64_t sub_100C0BE70(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = sub_1004B804C((uint64_t *)&unk_1014148A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1004B804C(&qword_1013E0A88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1004B804C((uint64_t *)&unk_1013F62E0);
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24);
  v15(v12, v13, v14);
  v15(a1 + a3[7], a2 + a3[7], v14);
  v16 = a3[8];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = sub_1004B804C(&qword_1013F55A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 24))(v17, v18, v19);
  v20 = a3[9];
  v21 = *(_QWORD *)(a2 + v20);
  *(_QWORD *)(a1 + v20) = v21;
  swift_bridgeObjectRetain(v21);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100C0BF98(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_1004B804C((uint64_t *)&unk_1014148A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1004B804C(&qword_1013E0A88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1004B804C((uint64_t *)&unk_1013F62E0);
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32);
  v15(v12, v13, v14);
  v15(a1 + a3[7], a2 + a3[7], v14);
  v16 = a3[8];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = sub_1004B804C(&qword_1013F55A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_100C0C0B0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_1004B804C((uint64_t *)&unk_1014148A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1004B804C(&qword_1013E0A88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1004B804C((uint64_t *)&unk_1013F62E0);
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40);
  v15(v12, v13, v14);
  v15(a1 + a3[7], a2 + a3[7], v14);
  v16 = a3[8];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = sub_1004B804C(&qword_1013F55A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 40))(v17, v18, v19);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100C0C1D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C0C1DC);
}

uint64_t sub_100C0C1DC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v17;

  v6 = sub_1004B804C((uint64_t *)&unk_1014148A0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1004B804C(&qword_1013E0A88);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[5];
LABEL_9:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = sub_1004B804C((uint64_t *)&unk_1013F62E0);
  v12 = *(_QWORD *)(v14 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v14;
    v13 = a3[6];
    goto LABEL_9;
  }
  v15 = sub_1004B804C(&qword_1013F55A0);
  v12 = *(_QWORD *)(v15 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v15;
    v13 = a3[8];
    goto LABEL_9;
  }
  v17 = *(_QWORD *)(a1 + a3[9]);
  if (v17 >= 0xFFFFFFFF)
    LODWORD(v17) = -1;
  return (v17 + 1);
}

uint64_t sub_100C0C2DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C0C2E8);
}

uint64_t sub_100C0C2E8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;

  v8 = sub_1004B804C((uint64_t *)&unk_1014148A0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  v13 = sub_1004B804C(&qword_1013E0A88);
  v14 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v13;
    v15 = a4[5];
LABEL_9:
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  v16 = sub_1004B804C((uint64_t *)&unk_1013F62E0);
  v14 = *(_QWORD *)(v16 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v16;
    v15 = a4[6];
    goto LABEL_9;
  }
  result = sub_1004B804C(&qword_1013F55A0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v15 = a4[8];
    goto LABEL_9;
  }
  *(_QWORD *)(a1 + a4[9]) = (a2 - 1);
  return result;
}

void sub_100C0C3E4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[2];
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;

  sub_100C0C50C(319, &qword_10140A7C0, &qword_1013F3148, &qword_10140A7C8, (void (*)(void))sub_1007E66A8);
  if (v3 <= 0x3F)
  {
    v10[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_100C0C50C(319, &qword_1013E0B10, (uint64_t *)&unk_1013F1530, (unint64_t *)&qword_1013E0B18, (void (*)(void))sub_1004EF934);
    if (v5 <= 0x3F)
    {
      v10[1] = *(_QWORD *)(v4 - 8) + 64;
      sub_100C0C50C(319, &qword_10140A7D0, &qword_10140A7D8, (unint64_t *)&unk_10140A7E0, (void (*)(void))sub_100785B38);
      if (v7 <= 0x3F)
      {
        v11 = *(_QWORD *)(v6 - 8) + 64;
        v12 = v11;
        sub_100C0C5F0();
        if (v9 <= 0x3F)
        {
          v13 = *(_QWORD *)(v8 - 8) + 64;
          v14 = (char *)&value witness table for Builtin.BridgeObject + 64;
          swift_initStructMetadata(a1, 256, 6, v10, a1 + 16);
        }
      }
    }
  }
}

void sub_100C0C50C(uint64_t a1, unint64_t *a2, uint64_t *a3, unint64_t *a4, void (*a5)(void))
{
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  if (!*a2)
  {
    v10 = sub_1004CB6A4(a3);
    v11 = sub_100C0C58C(a4, a3, a5);
    v12 = type metadata accessor for CRRegister(a1, v10, v11);
    if (!v13)
      atomic_store(v12, a2);
  }
}

uint64_t sub_100C0C58C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_1004CB6A4(a2);
    a3();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v6);
    atomic_store(result, a1);
  }
  return result;
}

void sub_100C0C5F0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1013E2858)
  {
    v0 = type metadata accessor for CRRegister(0, &type metadata for Float, &protocol witness table for Float);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1013E2858);
  }
}

uint64_t *sub_100C0C64C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  int *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, _QWORD, uint64_t, int *, __n128);
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t *v61;
  uint64_t *v62;
  int *v63;
  uint64_t v64;
  unsigned int (*v65)(uint64_t *, uint64_t, int *, __n128);
  __n128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __n128 v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v91;
  void (*v92)(char *, char *, uint64_t, __n128);
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  unsigned int (*v100)(uint64_t *, uint64_t, uint64_t);
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t *v104;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v10);
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    v8 = *(_QWORD *)(v7 - 8);
    v100 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    v101 = v8;
    v102 = v7;
    if (v100(a2, 1, v7))
    {
      v9 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = type metadata accessor for CRLBoardItemParentAffinity(0);
    v12 = *(int *)(v11 + 20);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    *(_OWORD *)v13 = *(_OWORD *)v14;
    *((_DWORD *)v13 + 4) = *((_DWORD *)v14 + 4);
    *((_DWORD *)v13 + 5) = *((_DWORD *)v14 + 5);
    v15 = *((_QWORD *)v14 + 3);
    *((_QWORD *)v13 + 3) = v15;
    v16 = *(int *)(v11 + 24);
    v17 = *(uint64_t *)((char *)a2 + v16);
    *(uint64_t *)((char *)a1 + v16) = v17;
    v103 = a3;
    v18 = *(int *)(a3 + 20);
    v19 = (char *)a1 + v18;
    v104 = a2;
    v20 = (char *)a2 + v18;
    *(_WORD *)v19 = *(_WORD *)((char *)a2 + v18);
    v21 = *(uint64_t *)((char *)a2 + v18 + 16);
    *((_QWORD *)v19 + 1) = *(uint64_t *)((char *)a2 + v18 + 8);
    *((_QWORD *)v19 + 2) = v21;
    v22 = *(uint64_t *)((char *)a2 + v18 + 32);
    *((_QWORD *)v19 + 3) = *(uint64_t *)((char *)a2 + v18 + 24);
    *((_QWORD *)v19 + 4) = v22;
    *((_QWORD *)v19 + 5) = *(uint64_t *)((char *)a2 + v18 + 40);
    v19[48] = *((_BYTE *)a2 + v18 + 48);
    *(_OWORD *)(v19 + 52) = *(_OWORD *)((char *)a2 + v18 + 52);
    v24 = *(uint64_t *)((char *)a2 + v18 + 72);
    v23 = *(uint64_t *)((char *)a2 + v18 + 80);
    v19[88] = v20[88];
    *((_QWORD *)v19 + 9) = v24;
    *((_QWORD *)v19 + 10) = v23;
    *((_DWORD *)v19 + 23) = *((_DWORD *)v20 + 23);
    *((_QWORD *)v19 + 12) = *((_QWORD *)v20 + 12);
    v19[104] = v20[104];
    v19[105] = v20[105];
    v25 = *((_QWORD *)v20 + 14);
    *((_QWORD *)v19 + 14) = v25;
    v26 = *((_QWORD *)v20 + 15);
    swift_bridgeObjectRetain(v15);
    swift_bridgeObjectRetain(v17);
    swift_bridgeObjectRetain(v21);
    swift_bridgeObjectRetain(v22);
    swift_bridgeObjectRetain(v24);
    swift_bridgeObjectRetain(v25);
    if (v26)
    {
      v27 = *((_QWORD *)v20 + 16);
      v28 = *((_QWORD *)v20 + 17);
      *((_QWORD *)v19 + 15) = v26;
      *((_QWORD *)v19 + 16) = v27;
      *((_QWORD *)v19 + 17) = v28;
      swift_bridgeObjectRetain(v26);
      swift_bridgeObjectRetain(v28);
    }
    else
    {
      *(_OWORD *)(v19 + 120) = *(_OWORD *)(v20 + 120);
      *((_QWORD *)v19 + 17) = *((_QWORD *)v20 + 17);
    }
    *((_QWORD *)v19 + 18) = *((_QWORD *)v20 + 18);
    *((_QWORD *)v19 + 19) = *((_QWORD *)v20 + 19);
    v19[160] = v20[160];
    *(_QWORD *)(v19 + 164) = *(_QWORD *)(v20 + 164);
    v29 = *((_QWORD *)v20 + 22);
    *((_QWORD *)v19 + 22) = v29;
    v30 = v19 + 184;
    v31 = v20 + 184;
    v32 = *((_QWORD *)v20 + 25);
    swift_bridgeObjectRetain(v29);
    if (v32)
    {
      *v30 = *v31;
      v19[192] = v20[192];
      v33 = *((_QWORD *)v20 + 26);
      v34 = *((_QWORD *)v20 + 27);
      *((_QWORD *)v19 + 25) = v32;
      *((_QWORD *)v19 + 26) = v33;
      *((_QWORD *)v19 + 27) = v34;
      *((_QWORD *)v19 + 28) = *((_QWORD *)v20 + 28);
      *((_QWORD *)v19 + 29) = *((_QWORD *)v20 + 29);
      v19[240] = v20[240];
      *(_QWORD *)(v19 + 244) = *(_QWORD *)(v20 + 244);
      v36 = *((_QWORD *)v20 + 32);
      v35 = *((_QWORD *)v20 + 33);
      *((_QWORD *)v19 + 32) = v36;
      *((_QWORD *)v19 + 33) = v35;
      v19[272] = v20[272];
      *(_QWORD *)(v19 + 276) = *(_QWORD *)(v20 + 276);
      v37 = *((_QWORD *)v20 + 36);
      *((_QWORD *)v19 + 36) = v37;
      v19[296] = v20[296];
      v38 = *((_QWORD *)v20 + 38);
      *((_QWORD *)v19 + 38) = v38;
      swift_bridgeObjectRetain(v32);
      swift_bridgeObjectRetain(v34);
      swift_bridgeObjectRetain(v36);
      swift_bridgeObjectRetain(v37);
      swift_bridgeObjectRetain(v38);
    }
    else
    {
      v39 = *(_OWORD *)(v20 + 264);
      *(_OWORD *)(v19 + 248) = *(_OWORD *)(v20 + 248);
      *(_OWORD *)(v19 + 264) = v39;
      v40 = *(_OWORD *)(v20 + 296);
      *(_OWORD *)(v19 + 280) = *(_OWORD *)(v20 + 280);
      *(_OWORD *)(v19 + 296) = v40;
      v41 = *(_OWORD *)(v20 + 200);
      *(_OWORD *)v30 = *(_OWORD *)v31;
      *(_OWORD *)(v19 + 200) = v41;
      v42 = *(_OWORD *)(v20 + 232);
      *(_OWORD *)(v19 + 216) = *(_OWORD *)(v20 + 216);
      *(_OWORD *)(v19 + 232) = v42;
    }
    v43 = type metadata accessor for CRLPathSourceData(0);
    v44 = *(int *)(v43 + 52);
    v45 = &v19[v44];
    v46 = &v20[v44];
    v47 = (int *)type metadata accessor for CRLEditableBezierPathSourceData(0);
    v48 = *((_QWORD *)v47 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v48 + 48))(v46, 1, v47))
    {
      v49 = sub_1004B804C(&qword_1013F7920);
      memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v101 + 16))(v45, v46, v102);
      v50 = v47[5];
      v51 = *(_QWORD *)&v46[v50];
      *(_QWORD *)&v45[v50] = v51;
      *(_QWORD *)&v45[v47[6]] = *(_QWORD *)&v46[v47[6]];
      v52 = v47[7];
      v53 = *(_QWORD *)&v46[v52];
      *(_QWORD *)&v45[v52] = v53;
      v54 = *(void (**)(char *, _QWORD, uint64_t, int *, __n128))(v48 + 56);
      swift_bridgeObjectRetain(v51);
      v55 = swift_bridgeObjectRetain(v53);
      v54(v45, 0, 1, v47, v55);
    }
    v56 = *(int *)(v43 + 56);
    v57 = *(_QWORD *)&v20[v56];
    *(_QWORD *)&v19[v56] = v57;
    v58 = v103;
    v59 = *(int *)(v103 + 24);
    v60 = (uint64_t *)((char *)a1 + v59);
    v61 = v104;
    v62 = (uint64_t *)((char *)v104 + v59);
    v63 = (int *)type metadata accessor for CRLPKStrokePathData(0);
    v64 = *((_QWORD *)v63 - 1);
    v65 = *(unsigned int (**)(uint64_t *, uint64_t, int *, __n128))(v64 + 48);
    v66 = swift_bridgeObjectRetain(v57);
    if (v65(v62, 1, v63, v66))
    {
      v67 = sub_1004B804C(&qword_1013FA6D8);
      memcpy(v60, v62, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
    }
    else
    {
      v99 = v64;
      v68 = *v62;
      v69 = v62[1];
      *v60 = *v62;
      v60[1] = v69;
      v71 = v62[2];
      v70 = v62[3];
      v60[2] = v71;
      v60[3] = v70;
      v72 = v62[4];
      v91 = v62[5];
      v60[4] = v72;
      v60[5] = v91;
      v93 = v62[6];
      v94 = v62[7];
      v60[6] = v93;
      v60[7] = v94;
      v74 = v62[8];
      v73 = v62[9];
      v60[8] = v74;
      v60[9] = v73;
      v95 = v74;
      v96 = v62[10];
      v60[10] = v96;
      *((_DWORD *)v60 + 22) = *((_DWORD *)v62 + 22);
      v75 = v63[16];
      v97 = (char *)v62 + v75;
      v98 = (char *)v60 + v75;
      v76 = type metadata accessor for Date(0);
      v92 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v76 - 8) + 16);
      swift_bridgeObjectRetain(v68);
      swift_bridgeObjectRetain(v69);
      swift_bridgeObjectRetain(v71);
      swift_bridgeObjectRetain(v70);
      swift_bridgeObjectRetain(v72);
      swift_bridgeObjectRetain(v91);
      swift_bridgeObjectRetain(v93);
      swift_bridgeObjectRetain(v94);
      swift_bridgeObjectRetain(v95);
      v77 = swift_bridgeObjectRetain(v96);
      v92(v98, v97, v76, v77);
      *(_DWORD *)((char *)v60 + v63[17]) = *(_DWORD *)((char *)v62 + v63[17]);
      *(_DWORD *)((char *)v60 + v63[18]) = *(_DWORD *)((char *)v62 + v63[18]);
      v78 = v63[19];
      v79 = (char *)v60 + v78;
      v80 = (char *)v62 + v78;
      if (v100((uint64_t *)((char *)v62 + v78), 1, v102))
      {
        v81 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
        memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v101 + 16))(v79, v80, v102);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v101 + 56))(v79, 0, 1, v102);
      }
      v82 = v63[20];
      v83 = (char *)v60 + v82;
      v84 = (char *)v62 + v82;
      *(_QWORD *)v83 = *(_QWORD *)v84;
      v83[8] = v84[8];
      *((_BYTE *)v60 + v63[21]) = *((_BYTE *)v62 + v63[21]);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, int *))(v99 + 56))(v60, 0, 1, v63);
      v61 = v104;
      v58 = v103;
    }
    v85 = *(int *)(v58 + 28);
    v86 = *(int *)(v58 + 32);
    v87 = (char *)a1 + v85;
    v88 = (uint64_t)v61 + v85;
    *(_QWORD *)v87 = *(_QWORD *)v88;
    v87[8] = *(_BYTE *)(v88 + 8);
    v89 = *(uint64_t *)((char *)v61 + v86);
    *(uint64_t *)((char *)a1 + v86) = v89;
    swift_bridgeObjectRetain(v89);
  }
  return a1;
}

double sub_100C0CC7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double result;

  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  type metadata accessor for CRLBoardItemParentAffinity(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v7 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v7 + 120))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v7 + 200))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v8 = v7 + *(int *)(type metadata accessor for CRLPathSourceData(0) + 52);
  v9 = type metadata accessor for CRLEditableBezierPathSourceData(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v8, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v10 = a1 + *(int *)(a2 + 24);
  v11 = type metadata accessor for CRLPKStrokePathData(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v12 = v10 + *(int *)(v11 + 64);
    v13 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
    v14 = v10 + *(int *)(v11 + 76);
    if (!v6(v14, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v14, v4);
  }
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

char *sub_100C0CED4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  int *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, _QWORD, uint64_t, int *, __n128);
  __n128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  char *v60;
  int *v61;
  uint64_t v62;
  unsigned int (*v63)(char *, uint64_t, int *, __n128);
  __n128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __n128 v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v89;
  void (*v90)(char *, char *, uint64_t, __n128);
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  unsigned int (*v98)(char *, uint64_t, uint64_t);
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  v98 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v99 = v7;
  v100 = v6;
  if (v98(a2, 1, v6))
  {
    v8 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = type metadata accessor for CRLBoardItemParentAffinity(0);
  v10 = *(int *)(v9 + 20);
  v11 = &a1[v10];
  v12 = &a2[v10];
  *(_OWORD *)v11 = *(_OWORD *)v12;
  *((_DWORD *)v11 + 4) = *((_DWORD *)v12 + 4);
  *((_DWORD *)v11 + 5) = *((_DWORD *)v12 + 5);
  v13 = *((_QWORD *)v12 + 3);
  *((_QWORD *)v11 + 3) = v13;
  v14 = *(int *)(v9 + 24);
  v15 = *(_QWORD *)&a2[v14];
  *(_QWORD *)&a1[v14] = v15;
  v101 = a3;
  v16 = *(int *)(a3 + 20);
  v17 = &a1[v16];
  v102 = a2;
  v18 = &a2[v16];
  *(_WORD *)v17 = *(_WORD *)v18;
  v19 = *((_QWORD *)v18 + 2);
  *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
  *((_QWORD *)v17 + 2) = v19;
  v20 = *((_QWORD *)v18 + 4);
  *((_QWORD *)v17 + 3) = *((_QWORD *)v18 + 3);
  *((_QWORD *)v17 + 4) = v20;
  *((_QWORD *)v17 + 5) = *((_QWORD *)v18 + 5);
  v17[48] = v18[48];
  *(_OWORD *)(v17 + 52) = *(_OWORD *)(v18 + 52);
  v22 = *((_QWORD *)v18 + 9);
  v21 = *((_QWORD *)v18 + 10);
  v17[88] = v18[88];
  *((_QWORD *)v17 + 9) = v22;
  *((_QWORD *)v17 + 10) = v21;
  *((_DWORD *)v17 + 23) = *((_DWORD *)v18 + 23);
  *((_QWORD *)v17 + 12) = *((_QWORD *)v18 + 12);
  v17[104] = v18[104];
  v17[105] = v18[105];
  v23 = *((_QWORD *)v18 + 14);
  *((_QWORD *)v17 + 14) = v23;
  v24 = *((_QWORD *)v18 + 15);
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRetain(v23);
  if (v24)
  {
    v25 = *((_QWORD *)v18 + 16);
    v26 = *((_QWORD *)v18 + 17);
    *((_QWORD *)v17 + 15) = v24;
    *((_QWORD *)v17 + 16) = v25;
    *((_QWORD *)v17 + 17) = v26;
    swift_bridgeObjectRetain(v24);
    swift_bridgeObjectRetain(v26);
  }
  else
  {
    *(_OWORD *)(v17 + 120) = *(_OWORD *)(v18 + 120);
    *((_QWORD *)v17 + 17) = *((_QWORD *)v18 + 17);
  }
  *((_QWORD *)v17 + 18) = *((_QWORD *)v18 + 18);
  *((_QWORD *)v17 + 19) = *((_QWORD *)v18 + 19);
  v17[160] = v18[160];
  *(_QWORD *)(v17 + 164) = *(_QWORD *)(v18 + 164);
  v27 = *((_QWORD *)v18 + 22);
  *((_QWORD *)v17 + 22) = v27;
  v28 = v17 + 184;
  v29 = v18 + 184;
  v30 = *((_QWORD *)v18 + 25);
  swift_bridgeObjectRetain(v27);
  if (v30)
  {
    *v28 = *v29;
    v17[192] = v18[192];
    v31 = *((_QWORD *)v18 + 26);
    v32 = *((_QWORD *)v18 + 27);
    *((_QWORD *)v17 + 25) = v30;
    *((_QWORD *)v17 + 26) = v31;
    *((_QWORD *)v17 + 27) = v32;
    *((_QWORD *)v17 + 28) = *((_QWORD *)v18 + 28);
    *((_QWORD *)v17 + 29) = *((_QWORD *)v18 + 29);
    v17[240] = v18[240];
    *(_QWORD *)(v17 + 244) = *(_QWORD *)(v18 + 244);
    v34 = *((_QWORD *)v18 + 32);
    v33 = *((_QWORD *)v18 + 33);
    *((_QWORD *)v17 + 32) = v34;
    *((_QWORD *)v17 + 33) = v33;
    v17[272] = v18[272];
    *(_QWORD *)(v17 + 276) = *(_QWORD *)(v18 + 276);
    v35 = *((_QWORD *)v18 + 36);
    *((_QWORD *)v17 + 36) = v35;
    v17[296] = v18[296];
    v36 = *((_QWORD *)v18 + 38);
    *((_QWORD *)v17 + 38) = v36;
    swift_bridgeObjectRetain(v30);
    swift_bridgeObjectRetain(v32);
    swift_bridgeObjectRetain(v34);
    swift_bridgeObjectRetain(v35);
    swift_bridgeObjectRetain(v36);
  }
  else
  {
    v37 = *(_OWORD *)(v18 + 264);
    *(_OWORD *)(v17 + 248) = *(_OWORD *)(v18 + 248);
    *(_OWORD *)(v17 + 264) = v37;
    v38 = *(_OWORD *)(v18 + 296);
    *(_OWORD *)(v17 + 280) = *(_OWORD *)(v18 + 280);
    *(_OWORD *)(v17 + 296) = v38;
    v39 = *(_OWORD *)(v18 + 200);
    *(_OWORD *)v28 = *(_OWORD *)v29;
    *(_OWORD *)(v17 + 200) = v39;
    v40 = *(_OWORD *)(v18 + 232);
    *(_OWORD *)(v17 + 216) = *(_OWORD *)(v18 + 216);
    *(_OWORD *)(v17 + 232) = v40;
  }
  v41 = type metadata accessor for CRLPathSourceData(0);
  v42 = *(int *)(v41 + 52);
  v43 = &v17[v42];
  v44 = &v18[v42];
  v45 = (int *)type metadata accessor for CRLEditableBezierPathSourceData(0);
  v46 = *((_QWORD *)v45 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v46 + 48))(v44, 1, v45))
  {
    v47 = sub_1004B804C(&qword_1013F7920);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v99 + 16))(v43, v44, v100);
    v48 = v45[5];
    v49 = *(_QWORD *)&v44[v48];
    *(_QWORD *)&v43[v48] = v49;
    *(_QWORD *)&v43[v45[6]] = *(_QWORD *)&v44[v45[6]];
    v50 = v45[7];
    v51 = *(_QWORD *)&v44[v50];
    *(_QWORD *)&v43[v50] = v51;
    v52 = *(void (**)(char *, _QWORD, uint64_t, int *, __n128))(v46 + 56);
    swift_bridgeObjectRetain(v49);
    v53 = swift_bridgeObjectRetain(v51);
    v52(v43, 0, 1, v45, v53);
  }
  v54 = *(int *)(v41 + 56);
  v55 = *(_QWORD *)&v18[v54];
  *(_QWORD *)&v17[v54] = v55;
  v56 = v101;
  v57 = *(int *)(v101 + 24);
  v58 = &a1[v57];
  v59 = v102;
  v60 = &v102[v57];
  v61 = (int *)type metadata accessor for CRLPKStrokePathData(0);
  v62 = *((_QWORD *)v61 - 1);
  v63 = *(unsigned int (**)(char *, uint64_t, int *, __n128))(v62 + 48);
  v64 = swift_bridgeObjectRetain(v55);
  if (v63(v60, 1, v61, v64))
  {
    v65 = sub_1004B804C(&qword_1013FA6D8);
    memcpy(v58, v60, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
  }
  else
  {
    v97 = v62;
    v66 = *(_QWORD *)v60;
    v67 = *((_QWORD *)v60 + 1);
    *(_QWORD *)v58 = *(_QWORD *)v60;
    *((_QWORD *)v58 + 1) = v67;
    v69 = *((_QWORD *)v60 + 2);
    v68 = *((_QWORD *)v60 + 3);
    *((_QWORD *)v58 + 2) = v69;
    *((_QWORD *)v58 + 3) = v68;
    v71 = *((_QWORD *)v60 + 4);
    v70 = *((_QWORD *)v60 + 5);
    *((_QWORD *)v58 + 4) = v71;
    *((_QWORD *)v58 + 5) = v70;
    v91 = *((_QWORD *)v60 + 6);
    v92 = *((_QWORD *)v60 + 7);
    *((_QWORD *)v58 + 6) = v91;
    *((_QWORD *)v58 + 7) = v92;
    v73 = *((_QWORD *)v60 + 8);
    v72 = *((_QWORD *)v60 + 9);
    *((_QWORD *)v58 + 8) = v73;
    *((_QWORD *)v58 + 9) = v72;
    v93 = v73;
    v94 = *((_QWORD *)v60 + 10);
    *((_QWORD *)v58 + 10) = v94;
    *((_DWORD *)v58 + 22) = *((_DWORD *)v60 + 22);
    v74 = v61[16];
    v95 = &v60[v74];
    v96 = &v58[v74];
    v89 = type metadata accessor for Date(0);
    v90 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v89 - 8) + 16);
    swift_bridgeObjectRetain(v66);
    swift_bridgeObjectRetain(v67);
    swift_bridgeObjectRetain(v69);
    swift_bridgeObjectRetain(v68);
    swift_bridgeObjectRetain(v71);
    swift_bridgeObjectRetain(v70);
    swift_bridgeObjectRetain(v91);
    swift_bridgeObjectRetain(v92);
    swift_bridgeObjectRetain(v93);
    v75 = swift_bridgeObjectRetain(v94);
    v90(v96, v95, v89, v75);
    *(_DWORD *)&v58[v61[17]] = *(_DWORD *)&v60[v61[17]];
    *(_DWORD *)&v58[v61[18]] = *(_DWORD *)&v60[v61[18]];
    v76 = v61[19];
    v77 = &v58[v76];
    v78 = &v60[v76];
    if (v98(&v60[v76], 1, v100))
    {
      v79 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
      memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v99 + 16))(v77, v78, v100);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v99 + 56))(v77, 0, 1, v100);
    }
    v80 = v61[20];
    v81 = &v58[v80];
    v82 = &v60[v80];
    *(_QWORD *)v81 = *(_QWORD *)v82;
    v81[8] = v82[8];
    v58[v61[21]] = v60[v61[21]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v97 + 56))(v58, 0, 1, v61);
    v59 = v102;
    v56 = v101;
  }
  v83 = *(int *)(v56 + 28);
  v84 = *(int *)(v56 + 32);
  v85 = &a1[v83];
  v86 = &v59[v83];
  *(_QWORD *)v85 = *(_QWORD *)v86;
  v85[8] = v86[8];
  v87 = *(_QWORD *)&v59[v84];
  *(_QWORD *)&a1[v84] = v87;
  swift_bridgeObjectRetain(v87);
  return a1;
}

char *sub_100C0D4CC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _OWORD *v28;
  uint64_t v29;
  _OWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  int *v71;
  uint64_t v72;
  uint64_t (*v73)(char *, uint64_t, int *);
  int v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(char *, _QWORD, uint64_t, int *, __n128);
  __n128 v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  int *v90;
  uint64_t v91;
  uint64_t (*v92)(char *, uint64_t, int *);
  int v93;
  int v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  __n128 v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  int v131;
  int v132;
  uint64_t v133;
  char *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v149;
  uint64_t v150;
  void (*v151)(char *, char *, uint64_t, __n128);
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  char *v157;
  uint64_t (*v158)(char *, uint64_t, uint64_t);
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  v159 = v7;
  v160 = v6;
  v158 = v8;
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  v12 = type metadata accessor for CRLBoardItemParentAffinity(0);
  v13 = *(int *)(v12 + 20);
  v14 = &a1[v13];
  v15 = &a2[v13];
  *(_DWORD *)v14 = *(_DWORD *)v15;
  *((_DWORD *)v14 + 1) = *((_DWORD *)v15 + 1);
  *((_DWORD *)v14 + 2) = *((_DWORD *)v15 + 2);
  *((_DWORD *)v14 + 3) = *((_DWORD *)v15 + 3);
  *((_DWORD *)v14 + 4) = *((_DWORD *)v15 + 4);
  v14[20] = v15[20];
  v14[21] = v15[21];
  v14[22] = v15[22];
  v14[23] = v15[23];
  v16 = *((_QWORD *)v15 + 3);
  *((_QWORD *)v14 + 3) = v16;
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRelease();
  v17 = *(int *)(v12 + 24);
  v18 = *(_QWORD *)&a2[v17];
  *(_QWORD *)&a1[v17] = v18;
  swift_bridgeObjectRetain(v18);
  swift_bridgeObjectRelease();
  v19 = *(int *)(a3 + 20);
  v20 = &a1[v19];
  v161 = a2;
  v21 = &a2[v19];
  *v20 = *v21;
  v20[1] = v21[1];
  *((_QWORD *)v20 + 1) = *((_QWORD *)v21 + 1);
  v22 = *((_QWORD *)v21 + 2);
  *((_QWORD *)v20 + 2) = v22;
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRelease();
  *((_QWORD *)v20 + 3) = *((_QWORD *)v21 + 3);
  v23 = *((_QWORD *)v21 + 4);
  *((_QWORD *)v20 + 4) = v23;
  swift_bridgeObjectRetain(v23);
  swift_bridgeObjectRelease();
  v24 = *((_QWORD *)v21 + 5);
  v20[48] = v21[48];
  *((_QWORD *)v20 + 5) = v24;
  *((_DWORD *)v20 + 13) = *((_DWORD *)v21 + 13);
  *((_DWORD *)v20 + 14) = *((_DWORD *)v21 + 14);
  *((_DWORD *)v20 + 15) = *((_DWORD *)v21 + 15);
  *((_DWORD *)v20 + 16) = *((_DWORD *)v21 + 16);
  v25 = *((_QWORD *)v21 + 9);
  *((_QWORD *)v20 + 9) = v25;
  swift_bridgeObjectRetain(v25);
  swift_bridgeObjectRelease();
  v26 = *((_QWORD *)v21 + 10);
  v20[88] = v21[88];
  *((_QWORD *)v20 + 10) = v26;
  *((_DWORD *)v20 + 23) = *((_DWORD *)v21 + 23);
  *((_DWORD *)v20 + 24) = *((_DWORD *)v21 + 24);
  *((_DWORD *)v20 + 25) = *((_DWORD *)v21 + 25);
  v20[104] = v21[104];
  v20[105] = v21[105];
  v27 = *((_QWORD *)v21 + 14);
  *((_QWORD *)v20 + 14) = v27;
  swift_bridgeObjectRetain(v27);
  swift_bridgeObjectRelease();
  v28 = v20 + 120;
  v30 = v21 + 120;
  v29 = *((_QWORD *)v21 + 15);
  if (*((_QWORD *)v20 + 15))
  {
    if (v29)
    {
      *((_QWORD *)v20 + 15) = v29;
      swift_bridgeObjectRetain(v29);
      swift_bridgeObjectRelease();
      *((_DWORD *)v20 + 32) = *((_DWORD *)v21 + 32);
      *((_DWORD *)v20 + 33) = *((_DWORD *)v21 + 33);
      v31 = *((_QWORD *)v21 + 17);
      *((_QWORD *)v20 + 17) = v31;
      swift_bridgeObjectRetain(v31);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1008ABCA8((_QWORD *)v20 + 15);
      v33 = *((_QWORD *)v21 + 17);
      *v28 = *v30;
      *((_QWORD *)v20 + 17) = v33;
    }
  }
  else if (v29)
  {
    *((_QWORD *)v20 + 15) = v29;
    *((_QWORD *)v20 + 16) = *((_QWORD *)v21 + 16);
    v32 = *((_QWORD *)v21 + 17);
    *((_QWORD *)v20 + 17) = v32;
    swift_bridgeObjectRetain(v29);
    swift_bridgeObjectRetain(v32);
  }
  else
  {
    v34 = *v30;
    *((_QWORD *)v20 + 17) = *((_QWORD *)v21 + 17);
    *v28 = v34;
  }
  *((_DWORD *)v20 + 36) = *((_DWORD *)v21 + 36);
  *((_DWORD *)v20 + 37) = *((_DWORD *)v21 + 37);
  *((_DWORD *)v20 + 38) = *((_DWORD *)v21 + 38);
  *((_DWORD *)v20 + 39) = *((_DWORD *)v21 + 39);
  v20[160] = v21[160];
  *((_DWORD *)v20 + 41) = *((_DWORD *)v21 + 41);
  *((_DWORD *)v20 + 42) = *((_DWORD *)v21 + 42);
  v35 = *((_QWORD *)v21 + 22);
  *((_QWORD *)v20 + 22) = v35;
  swift_bridgeObjectRetain(v35);
  swift_bridgeObjectRelease();
  v36 = v20 + 184;
  v37 = (uint64_t *)(v21 + 184);
  v38 = *((_QWORD *)v21 + 25);
  v162 = a3;
  if (*((_QWORD *)v20 + 25))
  {
    if (v38)
    {
      v39 = *v37;
      v20[192] = v21[192];
      *v36 = v39;
      v40 = *((_QWORD *)v21 + 25);
      *((_QWORD *)v20 + 25) = v40;
      swift_bridgeObjectRetain(v40);
      swift_bridgeObjectRelease();
      *((_DWORD *)v20 + 52) = *((_DWORD *)v21 + 52);
      *((_DWORD *)v20 + 53) = *((_DWORD *)v21 + 53);
      v41 = *((_QWORD *)v21 + 27);
      *((_QWORD *)v20 + 27) = v41;
      swift_bridgeObjectRetain(v41);
      swift_bridgeObjectRelease();
      *((_DWORD *)v20 + 56) = *((_DWORD *)v21 + 56);
      *((_DWORD *)v20 + 57) = *((_DWORD *)v21 + 57);
      v42 = *((_QWORD *)v21 + 29);
      v20[240] = v21[240];
      *((_QWORD *)v20 + 29) = v42;
      *((_DWORD *)v20 + 61) = *((_DWORD *)v21 + 61);
      *((_DWORD *)v20 + 62) = *((_DWORD *)v21 + 62);
      v43 = *((_QWORD *)v21 + 32);
      *((_QWORD *)v20 + 32) = v43;
      swift_bridgeObjectRetain(v43);
      swift_bridgeObjectRelease();
      v44 = *((_QWORD *)v21 + 33);
      v20[272] = v21[272];
      *((_QWORD *)v20 + 33) = v44;
      *((_DWORD *)v20 + 69) = *((_DWORD *)v21 + 69);
      *((_DWORD *)v20 + 70) = *((_DWORD *)v21 + 70);
      v45 = *((_QWORD *)v21 + 36);
      *((_QWORD *)v20 + 36) = v45;
      swift_bridgeObjectRetain(v45);
      swift_bridgeObjectRelease();
      v20[296] = v21[296];
      v46 = *((_QWORD *)v21 + 38);
      *((_QWORD *)v20 + 38) = v46;
      swift_bridgeObjectRetain(v46);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1008ABCDC((_QWORD *)v20 + 23);
      v55 = *(_OWORD *)(v21 + 232);
      v57 = *(_OWORD *)v37;
      v56 = *(_OWORD *)(v21 + 200);
      *(_OWORD *)(v20 + 216) = *(_OWORD *)(v21 + 216);
      *(_OWORD *)(v20 + 232) = v55;
      *(_OWORD *)v36 = v57;
      *(_OWORD *)(v20 + 200) = v56;
      v58 = *(_OWORD *)(v21 + 296);
      v60 = *(_OWORD *)(v21 + 248);
      v59 = *(_OWORD *)(v21 + 264);
      *(_OWORD *)(v20 + 280) = *(_OWORD *)(v21 + 280);
      *(_OWORD *)(v20 + 296) = v58;
      *(_OWORD *)(v20 + 248) = v60;
      *(_OWORD *)(v20 + 264) = v59;
    }
  }
  else if (v38)
  {
    v47 = *v37;
    v20[192] = v21[192];
    *v36 = v47;
    v48 = *((_QWORD *)v21 + 25);
    *((_QWORD *)v20 + 25) = v48;
    *((_QWORD *)v20 + 26) = *((_QWORD *)v21 + 26);
    v49 = *((_QWORD *)v21 + 27);
    *((_QWORD *)v20 + 27) = v49;
    *((_DWORD *)v20 + 56) = *((_DWORD *)v21 + 56);
    *((_DWORD *)v20 + 57) = *((_DWORD *)v21 + 57);
    v50 = *((_QWORD *)v21 + 29);
    v20[240] = v21[240];
    *((_QWORD *)v20 + 29) = v50;
    *(_QWORD *)(v20 + 244) = *(_QWORD *)(v21 + 244);
    v51 = *((_QWORD *)v21 + 32);
    *((_QWORD *)v20 + 32) = v51;
    v52 = *((_QWORD *)v21 + 33);
    v20[272] = v21[272];
    *((_QWORD *)v20 + 33) = v52;
    *(_QWORD *)(v20 + 276) = *(_QWORD *)(v21 + 276);
    v53 = *((_QWORD *)v21 + 36);
    *((_QWORD *)v20 + 36) = v53;
    v20[296] = v21[296];
    v54 = *((_QWORD *)v21 + 38);
    *((_QWORD *)v20 + 38) = v54;
    swift_bridgeObjectRetain(v48);
    swift_bridgeObjectRetain(v49);
    swift_bridgeObjectRetain(v51);
    swift_bridgeObjectRetain(v53);
    swift_bridgeObjectRetain(v54);
  }
  else
  {
    v61 = *(_OWORD *)v37;
    v62 = *(_OWORD *)(v21 + 200);
    v63 = *(_OWORD *)(v21 + 232);
    *(_OWORD *)(v20 + 216) = *(_OWORD *)(v21 + 216);
    *(_OWORD *)(v20 + 232) = v63;
    *(_OWORD *)v36 = v61;
    *(_OWORD *)(v20 + 200) = v62;
    v64 = *(_OWORD *)(v21 + 248);
    v65 = *(_OWORD *)(v21 + 264);
    v66 = *(_OWORD *)(v21 + 296);
    *(_OWORD *)(v20 + 280) = *(_OWORD *)(v21 + 280);
    *(_OWORD *)(v20 + 296) = v66;
    *(_OWORD *)(v20 + 248) = v64;
    *(_OWORD *)(v20 + 264) = v65;
  }
  v67 = type metadata accessor for CRLPathSourceData(0);
  v68 = *(int *)(v67 + 52);
  v69 = &v20[v68];
  v70 = &v21[v68];
  v71 = (int *)type metadata accessor for CRLEditableBezierPathSourceData(0);
  v72 = *((_QWORD *)v71 - 1);
  v73 = *(uint64_t (**)(char *, uint64_t, int *))(v72 + 48);
  v74 = v73(v69, 1, v71);
  v75 = v73(v70, 1, v71);
  if (v74)
  {
    if (!v75)
    {
      (*(void (**)(char *, char *, uint64_t))(v159 + 16))(v69, v70, v160);
      v76 = v71[5];
      v77 = *(_QWORD *)&v70[v76];
      *(_QWORD *)&v69[v76] = v77;
      *(_QWORD *)&v69[v71[6]] = *(_QWORD *)&v70[v71[6]];
      v78 = v71[7];
      v79 = *(_QWORD *)&v70[v78];
      *(_QWORD *)&v69[v78] = v79;
      v80 = *(void (**)(char *, _QWORD, uint64_t, int *, __n128))(v72 + 56);
      swift_bridgeObjectRetain(v77);
      v81 = swift_bridgeObjectRetain(v79);
      v80(v69, 0, 1, v71, v81);
      goto LABEL_28;
    }
    goto LABEL_27;
  }
  if (v75)
  {
    sub_1004B84A4((uint64_t)v69, type metadata accessor for CRLEditableBezierPathSourceData);
LABEL_27:
    v82 = sub_1004B804C(&qword_1013F7920);
    memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
    goto LABEL_28;
  }
  (*(void (**)(char *, char *, uint64_t))(v159 + 24))(v69, v70, v160);
  v107 = v71[5];
  v108 = *(_QWORD *)&v70[v107];
  *(_QWORD *)&v69[v107] = v108;
  swift_bridgeObjectRetain(v108);
  swift_bridgeObjectRelease();
  v109 = v71[6];
  v110 = &v69[v109];
  v111 = &v70[v109];
  *(_DWORD *)v110 = *(_DWORD *)v111;
  *((_DWORD *)v110 + 1) = *((_DWORD *)v111 + 1);
  v112 = v71[7];
  v113 = *(_QWORD *)&v70[v112];
  *(_QWORD *)&v69[v112] = v113;
  swift_bridgeObjectRetain(v113);
  swift_bridgeObjectRelease();
LABEL_28:
  v83 = v161;
  v84 = v162;
  v85 = *(int *)(v67 + 56);
  v86 = *(_QWORD *)&v21[v85];
  *(_QWORD *)&v20[v85] = v86;
  swift_bridgeObjectRetain(v86);
  swift_bridgeObjectRelease();
  v87 = *(int *)(v162 + 24);
  v88 = &a1[v87];
  v89 = &v161[v87];
  v90 = (int *)type metadata accessor for CRLPKStrokePathData(0);
  v91 = *((_QWORD *)v90 - 1);
  v92 = *(uint64_t (**)(char *, uint64_t, int *))(v91 + 48);
  v93 = v92(v88, 1, v90);
  v94 = v92(v89, 1, v90);
  if (!v93)
  {
    if (v94)
    {
      sub_1004B84A4((uint64_t)v88, type metadata accessor for CRLPKStrokePathData);
      goto LABEL_34;
    }
    v114 = *(_QWORD *)v89;
    *(_QWORD *)v88 = *(_QWORD *)v89;
    swift_bridgeObjectRetain(v114);
    swift_bridgeObjectRelease();
    v115 = *((_QWORD *)v89 + 1);
    *((_QWORD *)v88 + 1) = v115;
    swift_bridgeObjectRetain(v115);
    swift_bridgeObjectRelease();
    v116 = *((_QWORD *)v89 + 2);
    *((_QWORD *)v88 + 2) = v116;
    swift_bridgeObjectRetain(v116);
    swift_bridgeObjectRelease();
    v117 = *((_QWORD *)v89 + 3);
    *((_QWORD *)v88 + 3) = v117;
    swift_bridgeObjectRetain(v117);
    swift_bridgeObjectRelease();
    v118 = *((_QWORD *)v89 + 4);
    *((_QWORD *)v88 + 4) = v118;
    swift_bridgeObjectRetain(v118);
    swift_bridgeObjectRelease();
    v119 = *((_QWORD *)v89 + 5);
    *((_QWORD *)v88 + 5) = v119;
    swift_bridgeObjectRetain(v119);
    swift_bridgeObjectRelease();
    v120 = *((_QWORD *)v89 + 6);
    *((_QWORD *)v88 + 6) = v120;
    swift_bridgeObjectRetain(v120);
    swift_bridgeObjectRelease();
    v121 = *((_QWORD *)v89 + 7);
    *((_QWORD *)v88 + 7) = v121;
    swift_bridgeObjectRetain(v121);
    swift_bridgeObjectRelease();
    v122 = *((_QWORD *)v89 + 8);
    *((_QWORD *)v88 + 8) = v122;
    swift_bridgeObjectRetain(v122);
    swift_bridgeObjectRelease();
    *((_QWORD *)v88 + 9) = *((_QWORD *)v89 + 9);
    v123 = *((_QWORD *)v89 + 10);
    *((_QWORD *)v88 + 10) = v123;
    swift_bridgeObjectRetain(v123);
    swift_bridgeObjectRelease();
    *((_DWORD *)v88 + 22) = *((_DWORD *)v89 + 22);
    v124 = v90[16];
    v125 = &v88[v124];
    v126 = &v89[v124];
    v127 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v127 - 8) + 24))(v125, v126, v127);
    *(_DWORD *)&v88[v90[17]] = *(_DWORD *)&v89[v90[17]];
    *(_DWORD *)&v88[v90[18]] = *(_DWORD *)&v89[v90[18]];
    v128 = v90[19];
    v129 = &v88[v128];
    v130 = &v89[v128];
    v131 = v158(&v88[v128], 1, v160);
    v132 = v158(v130, 1, v160);
    if (v131)
    {
      if (!v132)
      {
        (*(void (**)(char *, char *, uint64_t))(v159 + 16))(v129, v130, v160);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v159 + 56))(v129, 0, 1, v160);
LABEL_44:
        v138 = v90[20];
        v139 = &v88[v138];
        v140 = &v89[v138];
        v141 = *(_QWORD *)v140;
        v139[8] = v140[8];
        *(_QWORD *)v139 = v141;
        v88[v90[21]] = v89[v90[21]];
LABEL_45:
        v84 = v162;
        goto LABEL_46;
      }
    }
    else
    {
      if (!v132)
      {
        (*(void (**)(char *, char *, uint64_t))(v159 + 24))(v129, v130, v160);
        goto LABEL_44;
      }
      (*(void (**)(char *, uint64_t))(v159 + 8))(v129, v160);
    }
    v137 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
    memcpy(v129, v130, *(_QWORD *)(*(_QWORD *)(v137 - 8) + 64));
    goto LABEL_44;
  }
  if (!v94)
  {
    v95 = *(_QWORD *)v89;
    *(_QWORD *)v88 = *(_QWORD *)v89;
    v96 = *((_QWORD *)v89 + 1);
    *((_QWORD *)v88 + 1) = v96;
    v97 = *((_QWORD *)v89 + 2);
    *((_QWORD *)v88 + 2) = v97;
    v98 = *((_QWORD *)v89 + 3);
    *((_QWORD *)v88 + 3) = v98;
    v99 = *((_QWORD *)v89 + 4);
    *((_QWORD *)v88 + 4) = v99;
    v150 = *((_QWORD *)v89 + 5);
    *((_QWORD *)v88 + 5) = v150;
    v152 = *((_QWORD *)v89 + 6);
    *((_QWORD *)v88 + 6) = v152;
    v153 = *((_QWORD *)v89 + 7);
    *((_QWORD *)v88 + 7) = v153;
    v155 = *((_QWORD *)v89 + 8);
    *((_QWORD *)v88 + 8) = v155;
    *((_QWORD *)v88 + 9) = *((_QWORD *)v89 + 9);
    v154 = *((_QWORD *)v89 + 10);
    *((_QWORD *)v88 + 10) = v154;
    *((_DWORD *)v88 + 22) = *((_DWORD *)v89 + 22);
    v100 = v90[16];
    v156 = &v89[v100];
    v157 = &v88[v100];
    v149 = type metadata accessor for Date(0);
    v151 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v149 - 8) + 16);
    swift_bridgeObjectRetain(v95);
    swift_bridgeObjectRetain(v96);
    swift_bridgeObjectRetain(v97);
    swift_bridgeObjectRetain(v98);
    swift_bridgeObjectRetain(v99);
    swift_bridgeObjectRetain(v150);
    swift_bridgeObjectRetain(v152);
    swift_bridgeObjectRetain(v153);
    swift_bridgeObjectRetain(v155);
    v101 = swift_bridgeObjectRetain(v154);
    v151(v157, v156, v149, v101);
    *(_DWORD *)&v88[v90[17]] = *(_DWORD *)&v89[v90[17]];
    *(_DWORD *)&v88[v90[18]] = *(_DWORD *)&v89[v90[18]];
    v102 = v90[19];
    v103 = &v88[v102];
    v104 = &v89[v102];
    if (v158(&v89[v102], 1, v160))
    {
      v105 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
      memcpy(v103, v104, *(_QWORD *)(*(_QWORD *)(v105 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v159 + 16))(v103, v104, v160);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v159 + 56))(v103, 0, 1, v160);
    }
    v83 = v161;
    v133 = v90[20];
    v134 = &v88[v133];
    v135 = &v89[v133];
    v136 = *(_QWORD *)v135;
    v134[8] = v135[8];
    *(_QWORD *)v134 = v136;
    v88[v90[21]] = v89[v90[21]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v91 + 56))(v88, 0, 1, v90);
    goto LABEL_45;
  }
LABEL_34:
  v106 = sub_1004B804C(&qword_1013FA6D8);
  memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v106 - 8) + 64));
LABEL_46:
  v142 = *(int *)(v84 + 28);
  v143 = &a1[v142];
  v144 = &v83[v142];
  v145 = *(_QWORD *)v144;
  v143[8] = v144[8];
  *(_QWORD *)v143 = v145;
  v146 = *(int *)(v84 + 32);
  v147 = *(_QWORD *)&v83[v146];
  *(_QWORD *)&a1[v146] = v147;
  swift_bridgeObjectRetain(v147);
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_100C0E0B8(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  __int128 v13;
  uint64_t v14;
  char *v15;
  char *v16;
  __int128 v17;
  __int128 v18;
  char *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  int *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  int *v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  unsigned int (*v57)(char *, uint64_t, uint64_t);
  uint64_t v58;
  int *v59;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  v57 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v58 = v7;
  if (v57(a2, 1, v6))
  {
    v8 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = type metadata accessor for CRLBoardItemParentAffinity(0);
  v10 = *(int *)(v9 + 20);
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = *((_OWORD *)v12 + 1);
  *(_OWORD *)v11 = *(_OWORD *)v12;
  *((_OWORD *)v11 + 1) = v13;
  *(_QWORD *)&a1[*(int *)(v9 + 24)] = *(_QWORD *)&a2[*(int *)(v9 + 24)];
  v59 = a3;
  v14 = a3[5];
  v15 = &a1[v14];
  v16 = &a2[v14];
  *(_WORD *)v15 = *(_WORD *)&a2[v14];
  *(_OWORD *)(v15 + 8) = *(_OWORD *)&a2[v14 + 8];
  *(_OWORD *)(v15 + 24) = *(_OWORD *)&a2[v14 + 24];
  *((_QWORD *)v15 + 9) = *(_QWORD *)&a2[v14 + 72];
  *(_OWORD *)(v15 + 56) = *(_OWORD *)&a2[v14 + 56];
  *(_OWORD *)(v15 + 40) = *(_OWORD *)&a2[v14 + 40];
  *((_QWORD *)v15 + 14) = *(_QWORD *)&a2[v14 + 112];
  v17 = *(_OWORD *)&a2[v14 + 96];
  *((_OWORD *)v15 + 5) = *(_OWORD *)&a2[v14 + 80];
  *((_OWORD *)v15 + 6) = v17;
  *((_QWORD *)v15 + 17) = *(_QWORD *)&a2[v14 + 136];
  *(_OWORD *)(v15 + 120) = *(_OWORD *)&a2[v14 + 120];
  *((_QWORD *)v15 + 22) = *(_QWORD *)&a2[v14 + 176];
  v18 = *(_OWORD *)&a2[v14 + 160];
  *((_OWORD *)v15 + 9) = *(_OWORD *)&a2[v14 + 144];
  *((_OWORD *)v15 + 10) = v18;
  v19 = &a1[v14 + 184];
  v20 = *(_OWORD *)(v16 + 184);
  v21 = *(_OWORD *)(v16 + 200);
  v22 = *(_OWORD *)(v16 + 216);
  *(_OWORD *)(v15 + 232) = *(_OWORD *)(v16 + 232);
  *(_OWORD *)(v15 + 216) = v22;
  *(_OWORD *)(v15 + 200) = v21;
  *(_OWORD *)(v15 + 184) = v20;
  v23 = *(_OWORD *)(v16 + 248);
  v24 = *(_OWORD *)(v16 + 264);
  v25 = *(_OWORD *)(v16 + 296);
  *((_OWORD *)v19 + 6) = *(_OWORD *)(v16 + 280);
  *((_OWORD *)v19 + 7) = v25;
  *((_OWORD *)v19 + 5) = v24;
  *(_OWORD *)(v15 + 248) = v23;
  v26 = type metadata accessor for CRLPathSourceData(0);
  v27 = *(int *)(v26 + 52);
  v28 = &v15[v27];
  v29 = &v16[v27];
  v30 = (int *)type metadata accessor for CRLEditableBezierPathSourceData(0);
  v31 = *((_QWORD *)v30 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v31 + 48))(v29, 1, v30))
  {
    v32 = sub_1004B804C(&qword_1013F7920);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v28, v29, v6);
    *(_QWORD *)&v28[v30[5]] = *(_QWORD *)&v29[v30[5]];
    *(_QWORD *)&v28[v30[6]] = *(_QWORD *)&v29[v30[6]];
    *(_QWORD *)&v28[v30[7]] = *(_QWORD *)&v29[v30[7]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v31 + 56))(v28, 0, 1, v30);
  }
  *(_QWORD *)&v15[*(int *)(v26 + 56)] = *(_QWORD *)&v16[*(int *)(v26 + 56)];
  v33 = v59[6];
  v34 = &a1[v33];
  v35 = &a2[v33];
  v36 = (int *)type metadata accessor for CRLPKStrokePathData(0);
  v37 = *((_QWORD *)v36 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v37 + 48))(v35, 1, v36))
  {
    v38 = sub_1004B804C(&qword_1013FA6D8);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  else
  {
    v39 = *((_OWORD *)v35 + 1);
    *(_OWORD *)v34 = *(_OWORD *)v35;
    *((_OWORD *)v34 + 1) = v39;
    v40 = *((_OWORD *)v35 + 3);
    *((_OWORD *)v34 + 2) = *((_OWORD *)v35 + 2);
    *((_OWORD *)v34 + 3) = v40;
    *((_OWORD *)v34 + 4) = *((_OWORD *)v35 + 4);
    *((_QWORD *)v34 + 10) = *((_QWORD *)v35 + 10);
    *((_DWORD *)v34 + 22) = *((_DWORD *)v35 + 22);
    v41 = v36[16];
    v42 = &v34[v41];
    v43 = &v35[v41];
    v44 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v42, v43, v44);
    *(_DWORD *)&v34[v36[17]] = *(_DWORD *)&v35[v36[17]];
    *(_DWORD *)&v34[v36[18]] = *(_DWORD *)&v35[v36[18]];
    v45 = v36[19];
    v46 = &v34[v45];
    v47 = &v35[v45];
    if (v57(&v35[v45], 1, v6))
    {
      v48 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
      memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v46, v47, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v46, 0, 1, v6);
    }
    v49 = v36[20];
    v50 = &v34[v49];
    v51 = &v35[v49];
    *(_QWORD *)v50 = *(_QWORD *)v51;
    v50[8] = v51[8];
    v34[v36[21]] = v35[v36[21]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v37 + 56))(v34, 0, 1, v36);
  }
  v52 = v59[7];
  v53 = v59[8];
  v54 = &a1[v52];
  v55 = &a2[v52];
  *(_QWORD *)v54 = *(_QWORD *)v55;
  v54[8] = v55[8];
  *(_QWORD *)&a1[v53] = *(_QWORD *)&a2[v53];
  return a1;
}

char *sub_100C0E4CC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  int *v33;
  uint64_t v34;
  uint64_t (*v35)(char *, uint64_t, int *);
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  int *v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t, uint64_t, int *);
  int v46;
  int v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  char *v66;
  int v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t (*v81)(uint64_t, uint64_t, uint64_t);
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  v82 = v7;
  v83 = v6;
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  v12 = type metadata accessor for CRLBoardItemParentAffinity(0);
  v13 = *(int *)(v12 + 20);
  v14 = &a1[v13];
  v15 = &a2[v13];
  *(_OWORD *)v14 = *(_OWORD *)v15;
  *((_DWORD *)v14 + 4) = *((_DWORD *)v15 + 4);
  v14[20] = v15[20];
  v14[21] = v15[21];
  v14[22] = v15[22];
  v14[23] = v15[23];
  *((_QWORD *)v14 + 3) = *((_QWORD *)v15 + 3);
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[*(int *)(v12 + 24)] = *(_QWORD *)&a2[*(int *)(v12 + 24)];
  swift_bridgeObjectRelease();
  v84 = a2;
  v85 = a3;
  v16 = *(int *)(a3 + 20);
  v17 = &a1[v16];
  v18 = &a2[v16];
  *v17 = a2[v16];
  v17[1] = a2[v16 + 1];
  v19 = *(_QWORD *)&a2[v16 + 16];
  *((_QWORD *)v17 + 1) = *(_QWORD *)&a2[v16 + 8];
  *((_QWORD *)v17 + 2) = v19;
  swift_bridgeObjectRelease();
  v20 = *((_QWORD *)v18 + 4);
  *((_QWORD *)v17 + 3) = *((_QWORD *)v18 + 3);
  *((_QWORD *)v17 + 4) = v20;
  swift_bridgeObjectRelease();
  *((_QWORD *)v17 + 5) = *((_QWORD *)v18 + 5);
  v17[48] = v18[48];
  *(_OWORD *)(v17 + 52) = *(_OWORD *)(v18 + 52);
  *((_QWORD *)v17 + 9) = *((_QWORD *)v18 + 9);
  swift_bridgeObjectRelease();
  *((_QWORD *)v17 + 10) = *((_QWORD *)v18 + 10);
  v17[88] = v18[88];
  *(_QWORD *)(v17 + 92) = *(_QWORD *)(v18 + 92);
  *((_DWORD *)v17 + 25) = *((_DWORD *)v18 + 25);
  v17[104] = v18[104];
  v17[105] = v18[105];
  *((_QWORD *)v17 + 14) = *((_QWORD *)v18 + 14);
  swift_bridgeObjectRelease();
  v21 = *((_QWORD *)v18 + 15);
  if (*((_QWORD *)v17 + 15))
  {
    if (v21)
    {
      *((_QWORD *)v17 + 15) = v21;
      swift_bridgeObjectRelease();
      *((_QWORD *)v17 + 16) = *((_QWORD *)v18 + 16);
      *((_QWORD *)v17 + 17) = *((_QWORD *)v18 + 17);
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    sub_1008ABCA8((_QWORD *)v17 + 15);
  }
  *(_OWORD *)(v17 + 120) = *(_OWORD *)(v18 + 120);
  *((_QWORD *)v17 + 17) = *((_QWORD *)v18 + 17);
LABEL_12:
  *((_OWORD *)v17 + 9) = *((_OWORD *)v18 + 9);
  v17[160] = v18[160];
  *(_QWORD *)(v17 + 164) = *(_QWORD *)(v18 + 164);
  *((_QWORD *)v17 + 22) = *((_QWORD *)v18 + 22);
  swift_bridgeObjectRelease();
  v22 = v17 + 184;
  v23 = v18 + 184;
  v81 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v8;
  if (*((_QWORD *)v17 + 25))
  {
    v24 = *((_QWORD *)v18 + 25);
    if (v24)
    {
      *v22 = *v23;
      v17[192] = v18[192];
      *((_QWORD *)v17 + 25) = v24;
      swift_bridgeObjectRelease();
      *((_QWORD *)v17 + 26) = *((_QWORD *)v18 + 26);
      *((_QWORD *)v17 + 27) = *((_QWORD *)v18 + 27);
      swift_bridgeObjectRelease();
      *((_QWORD *)v17 + 28) = *((_QWORD *)v18 + 28);
      *((_QWORD *)v17 + 29) = *((_QWORD *)v18 + 29);
      v17[240] = v18[240];
      *(_QWORD *)(v17 + 244) = *(_QWORD *)(v18 + 244);
      *((_QWORD *)v17 + 32) = *((_QWORD *)v18 + 32);
      swift_bridgeObjectRelease();
      *((_QWORD *)v17 + 33) = *((_QWORD *)v18 + 33);
      v17[272] = v18[272];
      *((_DWORD *)v17 + 69) = *((_DWORD *)v18 + 69);
      *((_DWORD *)v17 + 70) = *((_DWORD *)v18 + 70);
      *((_QWORD *)v17 + 36) = *((_QWORD *)v18 + 36);
      swift_bridgeObjectRelease();
      v17[296] = v18[296];
      *((_QWORD *)v17 + 38) = *((_QWORD *)v18 + 38);
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
    sub_1008ABCDC((_QWORD *)v17 + 23);
  }
  v25 = *(_OWORD *)(v18 + 264);
  *(_OWORD *)(v17 + 248) = *(_OWORD *)(v18 + 248);
  *(_OWORD *)(v17 + 264) = v25;
  v26 = *(_OWORD *)(v18 + 296);
  *(_OWORD *)(v17 + 280) = *(_OWORD *)(v18 + 280);
  *(_OWORD *)(v17 + 296) = v26;
  v27 = *(_OWORD *)(v18 + 200);
  *(_OWORD *)v22 = *(_OWORD *)v23;
  *(_OWORD *)(v17 + 200) = v27;
  v28 = *(_OWORD *)(v18 + 232);
  *(_OWORD *)(v17 + 216) = *(_OWORD *)(v18 + 216);
  *(_OWORD *)(v17 + 232) = v28;
LABEL_17:
  v29 = type metadata accessor for CRLPathSourceData(0);
  v30 = *(int *)(v29 + 52);
  v31 = &v17[v30];
  v32 = &v18[v30];
  v33 = (int *)type metadata accessor for CRLEditableBezierPathSourceData(0);
  v34 = *((_QWORD *)v33 - 1);
  v35 = *(uint64_t (**)(char *, uint64_t, int *))(v34 + 48);
  v36 = v35(v31, 1, v33);
  v37 = v35(v32, 1, v33);
  if (v36)
  {
    if (!v37)
    {
      (*(void (**)(char *, char *, uint64_t))(v82 + 32))(v31, v32, v83);
      *(_QWORD *)&v31[v33[5]] = *(_QWORD *)&v32[v33[5]];
      *(_QWORD *)&v31[v33[6]] = *(_QWORD *)&v32[v33[6]];
      *(_QWORD *)&v31[v33[7]] = *(_QWORD *)&v32[v33[7]];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v34 + 56))(v31, 0, 1, v33);
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  if (v37)
  {
    sub_1004B84A4((uint64_t)v31, type metadata accessor for CRLEditableBezierPathSourceData);
LABEL_22:
    v38 = sub_1004B804C(&qword_1013F7920);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    goto LABEL_23;
  }
  (*(void (**)(char *, char *, uint64_t))(v82 + 40))(v31, v32, v83);
  *(_QWORD *)&v31[v33[5]] = *(_QWORD *)&v32[v33[5]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v31[v33[6]] = *(_QWORD *)&v32[v33[6]];
  *(_QWORD *)&v31[v33[7]] = *(_QWORD *)&v32[v33[7]];
  swift_bridgeObjectRelease();
LABEL_23:
  *(_QWORD *)&v17[*(int *)(v29 + 56)] = *(_QWORD *)&v18[*(int *)(v29 + 56)];
  swift_bridgeObjectRelease();
  v39 = v85;
  v40 = *(int *)(v85 + 24);
  v41 = (uint64_t)&a1[v40];
  v42 = &v84[v40];
  v43 = (int *)type metadata accessor for CRLPKStrokePathData(0);
  v44 = *((_QWORD *)v43 - 1);
  v45 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v44 + 48);
  v46 = v45(v41, 1, v43);
  v47 = v45((uint64_t)v42, 1, v43);
  if (!v46)
  {
    if (v47)
    {
      sub_1004B84A4(v41, type metadata accessor for CRLPKStrokePathData);
      goto LABEL_29;
    }
    *(_QWORD *)v41 = *(_QWORD *)v42;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v41 + 8) = *((_QWORD *)v42 + 1);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v41 + 16) = *((_QWORD *)v42 + 2);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v41 + 24) = *((_QWORD *)v42 + 3);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v41 + 32) = *((_QWORD *)v42 + 4);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v41 + 40) = *((_QWORD *)v42 + 5);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v41 + 48) = *((_QWORD *)v42 + 6);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v41 + 56) = *((_QWORD *)v42 + 7);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v41 + 64) = *((_QWORD *)v42 + 8);
    swift_bridgeObjectRelease();
    v59 = *((_QWORD *)v42 + 10);
    *(_QWORD *)(v41 + 72) = *((_QWORD *)v42 + 9);
    *(_QWORD *)(v41 + 80) = v59;
    swift_bridgeObjectRelease();
    *(_DWORD *)(v41 + 88) = *((_DWORD *)v42 + 22);
    v60 = v43[16];
    v61 = v41 + v60;
    v62 = &v42[v60];
    v63 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 40))(v61, v62, v63);
    *(_DWORD *)(v41 + v43[17]) = *(_DWORD *)&v42[v43[17]];
    *(_DWORD *)(v41 + v43[18]) = *(_DWORD *)&v42[v43[18]];
    v64 = v43[19];
    v65 = (void *)(v41 + v64);
    v66 = &v42[v64];
    v67 = v81(v41 + v64, 1, v83);
    v68 = v81((uint64_t)v66, 1, v83);
    if (v67)
    {
      if (!v68)
      {
        (*(void (**)(void *, char *, uint64_t))(v82 + 32))(v65, v66, v83);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v65, 0, 1, v83);
LABEL_40:
        v39 = v85;
        v73 = v43[20];
        v74 = v41 + v73;
        v75 = &v42[v73];
        *(_QWORD *)v74 = *(_QWORD *)v75;
        *(_BYTE *)(v74 + 8) = v75[8];
        *(_BYTE *)(v41 + v43[21]) = v42[v43[21]];
        goto LABEL_41;
      }
    }
    else
    {
      if (!v68)
      {
        (*(void (**)(void *, char *, uint64_t))(v82 + 40))(v65, v66, v83);
        goto LABEL_40;
      }
      (*(void (**)(void *, uint64_t))(v82 + 8))(v65, v83);
    }
    v72 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
    memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
    goto LABEL_40;
  }
  if (v47)
  {
LABEL_29:
    v58 = sub_1004B804C(&qword_1013FA6D8);
    memcpy((void *)v41, v42, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    goto LABEL_41;
  }
  v48 = *((_OWORD *)v42 + 1);
  *(_OWORD *)v41 = *(_OWORD *)v42;
  *(_OWORD *)(v41 + 16) = v48;
  v49 = *((_OWORD *)v42 + 3);
  *(_OWORD *)(v41 + 32) = *((_OWORD *)v42 + 2);
  *(_OWORD *)(v41 + 48) = v49;
  *(_OWORD *)(v41 + 64) = *((_OWORD *)v42 + 4);
  *(_QWORD *)(v41 + 80) = *((_QWORD *)v42 + 10);
  *(_DWORD *)(v41 + 88) = *((_DWORD *)v42 + 22);
  v50 = v43[16];
  v51 = v41 + v50;
  v52 = &v42[v50];
  v53 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v51, v52, v53);
  *(_DWORD *)(v41 + v43[17]) = *(_DWORD *)&v42[v43[17]];
  *(_DWORD *)(v41 + v43[18]) = *(_DWORD *)&v42[v43[18]];
  v54 = v43[19];
  v55 = (void *)(v41 + v54);
  v56 = &v42[v54];
  if (v81((uint64_t)&v42[v54], 1, v83))
  {
    v57 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v82 + 32))(v55, v56, v83);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v55, 0, 1, v83);
  }
  v69 = v43[20];
  v70 = v41 + v69;
  v71 = &v42[v69];
  *(_QWORD *)v70 = *(_QWORD *)v71;
  *(_BYTE *)(v70 + 8) = v71[8];
  *(_BYTE *)(v41 + v43[21]) = v42[v43[21]];
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v44 + 56))(v41, 0, 1, v43);
LABEL_41:
  v76 = *(int *)(v39 + 28);
  v77 = *(int *)(v39 + 32);
  v78 = &a1[v76];
  v79 = &v84[v76];
  *(_QWORD *)v78 = *(_QWORD *)v79;
  v78[8] = v79[8];
  *(_QWORD *)&a1[v77] = *(_QWORD *)&v84[v77];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100C0ED5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C0ED68);
}

uint64_t sub_100C0ED68(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v16;

  v6 = type metadata accessor for CRLBoardItemParentAffinity(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = type metadata accessor for CRLPathSourceData(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[5];
LABEL_7:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = sub_1004B804C(&qword_1013FA6D8);
  v12 = *(_QWORD *)(v14 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v14;
    v13 = a3[6];
    goto LABEL_7;
  }
  v16 = *(_QWORD *)(a1 + a3[8]);
  if (v16 >= 0xFFFFFFFF)
    LODWORD(v16) = -1;
  return (v16 + 1);
}

uint64_t sub_100C0EE38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C0EE44);
}

uint64_t sub_100C0EE44(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;

  v8 = type metadata accessor for CRLBoardItemParentAffinity(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  v13 = type metadata accessor for CRLPathSourceData(0);
  v14 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v13;
    v15 = a4[5];
LABEL_7:
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  result = sub_1004B804C(&qword_1013FA6D8);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v15 = a4[6];
    goto LABEL_7;
  }
  *(_QWORD *)(a1 + a4[8]) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for CRLShapeItemParentAffinity(uint64_t a1)
{
  return sub_1004BD408(a1, (uint64_t *)&unk_10140A878, (uint64_t)&nominal type descriptor for CRLShapeItemParentAffinity);
}

void sub_100C0EF24(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[5];

  v2 = type metadata accessor for CRLBoardItemParentAffinity(319);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    v4 = type metadata accessor for CRLPathSourceData(319);
    if (v5 <= 0x3F)
    {
      v8[1] = *(_QWORD *)(v4 - 8) + 64;
      sub_100C0EFDC(319);
      if (v7 <= 0x3F)
      {
        v8[2] = *(_QWORD *)(v6 - 8) + 64;
        v8[3] = "\t";
        v8[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
        swift_initStructMetadata(a1, 256, 5, v8, a1 + 16);
      }
    }
  }
}

void sub_100C0EFDC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10140A888)
  {
    v2 = type metadata accessor for CRLPKStrokePathData(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10140A888);
  }
}

uint64_t sub_100C0F030()
{
  return sub_1004B7878(&qword_10140A8C8, type metadata accessor for CRLShapeItemParentAffinity, (uint64_t)&unk_100F2E1E8);
}

uint64_t sub_100C0F05C()
{
  return sub_1004B7878(&qword_10140A8D0, type metadata accessor for CRLShapeItemParentAffinity, (uint64_t)&unk_100F2E230);
}

uint64_t sub_100C0F088()
{
  return sub_1004B7878(&qword_10140A8D8, type metadata accessor for CRLShapeItemParentAffinity, (uint64_t)&unk_100F2E2E0);
}

uint64_t sub_100C0F0B4()
{
  return sub_1004B7878(&qword_10140A8E0, type metadata accessor for CRLShapeItemParentAffinity, (uint64_t)&unk_100F2E2B8);
}

uint64_t sub_100C0F0E0()
{
  return sub_1004B7878(&qword_10140A8E8, type metadata accessor for CRLShapeItemParentAffinity, (uint64_t)&unk_100F2E290);
}

unint64_t sub_100C0F110()
{
  unint64_t result;

  result = qword_10140A8F0;
  if (!qword_10140A8F0)
  {
    result = swift_getWitnessTable(&unk_100F2E360, &type metadata for CRLShapeItemParentAffinity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10140A8F0);
  }
  return result;
}

unint64_t sub_100C0F158()
{
  unint64_t result;

  result = qword_10140A8F8;
  if (!qword_10140A8F8)
  {
    result = swift_getWitnessTable(&unk_100F2E470, &type metadata for CRLShapeItemParentAffinity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10140A8F8);
  }
  return result;
}

unint64_t sub_100C0F1A0()
{
  unint64_t result;

  result = qword_10140A900;
  if (!qword_10140A900)
  {
    result = swift_getWitnessTable(&unk_100F2E438, &type metadata for CRLShapeItemParentAffinity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10140A900);
  }
  return result;
}

unint64_t sub_100C0F1E8()
{
  unint64_t result;

  result = qword_10140A908;
  if (!qword_10140A908)
  {
    result = swift_getWitnessTable(&unk_100F2E398, &type metadata for CRLShapeItemParentAffinity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10140A908);
  }
  return result;
}

unint64_t sub_100C0F230()
{
  unint64_t result;

  result = qword_10140A910;
  if (!qword_10140A910)
  {
    result = swift_getWitnessTable(&unk_100F2E410, &type metadata for CRLShapeItemParentAffinity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10140A910);
  }
  return result;
}

unint64_t sub_100C0F278()
{
  unint64_t result;

  result = qword_10140A918;
  if (!qword_10140A918)
  {
    result = swift_getWitnessTable(&unk_100F2E3E8, &type metadata for CRLShapeItemParentAffinity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10140A918);
  }
  return result;
}

uint64_t sub_100C0F2BC()
{
  return sub_1004CBA30(&qword_10140A920, &qword_10140A928, (uint64_t)&protocol conformance descriptor for [A]);
}

uint64_t sub_100C0F2E8()
{
  return sub_1004B7878(&qword_10140A930, type metadata accessor for CRLShapeItemParentAffinity, (uint64_t)&unk_100F2E318);
}

uint64_t sub_100C0F314()
{
  return sub_1004B7878(&qword_10140A938, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData, (uint64_t)&unk_100F2E500);
}

uint64_t sub_100C0F340()
{
  return sub_1004B7878(&qword_10140A940, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData, (uint64_t)&unk_100F2E548);
}

uint64_t sub_100C0F36C()
{
  return sub_1004B7878((unint64_t *)&qword_1013FA6E8, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData, (uint64_t)&unk_100F2E580);
}

uint64_t sub_100C0F398()
{
  return sub_1004CBA30(&qword_10140A948, &qword_10140A950, (uint64_t)&protocol conformance descriptor for CRStructMergeableDelta_5<A>);
}

uint64_t sub_100C0F3C4()
{
  return sub_1004B7878(&qword_10140A958, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData, (uint64_t)&unk_100F2E5E0);
}

uint64_t sub_100C0F3F0()
{
  return sub_1004B7878(&qword_10140A960, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData, (uint64_t)&unk_100F2E660);
}

uint64_t sub_100C0F41C()
{
  return sub_1004CBA30(&qword_10140A968, (uint64_t *)&unk_1014148A0, (uint64_t)&protocol conformance descriptor for CRRegister<A>);
}

uint64_t sub_100C0F448()
{
  return sub_1004CBA30(&qword_10140A970, (uint64_t *)&unk_1013F62E0, (uint64_t)&protocol conformance descriptor for CRRegister<A>);
}

uint64_t sub_100C0F474()
{
  return sub_1004CBA30(&qword_1013E29F0, &qword_1013F55A0, (uint64_t)&protocol conformance descriptor for CRRegister<A>);
}

uint64_t sub_100C0F4A0()
{
  return sub_1004B7878(&qword_10140A978, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData, (uint64_t)&unk_100F2E6C0);
}

uint64_t sub_100C0F4CC()
{
  return sub_1004B7878(&qword_1013E2978, type metadata accessor for CRLShapeItemCRDTData, (uint64_t)&unk_100F2E938);
}

uint64_t sub_100C0F4F8()
{
  return sub_1004B7878(&qword_10140A980, type metadata accessor for CRLShapeItemCRDTData, (uint64_t)&unk_100F2E790);
}

uint64_t sub_100C0F524()
{
  return sub_1004B7878(&qword_10140A988, type metadata accessor for CRLShapeItemCRDTData, (uint64_t)&unk_100F2E7D8);
}

uint64_t sub_100C0F550()
{
  return sub_1004B7878(&qword_10140A990, type metadata accessor for CRLShapeItemCRDTData, (uint64_t)&unk_100F2E838);
}

uint64_t sub_100C0F57C()
{
  return sub_1004B7878(&qword_10140A998, type metadata accessor for CRLShapeItemCRDTData, (uint64_t)&unk_100F2E870);
}

uint64_t sub_100C0F5A8()
{
  return sub_1004CBA30(&qword_10140A9A0, &qword_10140A9A8, (uint64_t)&protocol conformance descriptor for CRStructMergeableDelta_1<A>);
}

uint64_t sub_100C0F5D4()
{
  return sub_1004B7878(&qword_10140A9B0, type metadata accessor for CRLShapeItemCRDTData, (uint64_t)&unk_100F2E8D0);
}

uint64_t sub_100C0F600(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1004B7878(&qword_1013E2978, type metadata accessor for CRLShapeItemCRDTData, (uint64_t)&unk_100F2E938);
  result = sub_1004B7878(&qword_10140A9B8, type metadata accessor for CRLShapeItemCRDTData, (uint64_t)&unk_100F2E910);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_100C0F65C(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1004B7878(&qword_10140A9C0, type metadata accessor for CRLShapeItemParentAffinity, (uint64_t)&unk_100F2E4C0);
  result = sub_1004B7878(&qword_10140A9C8, type metadata accessor for CRLShapeItemParentAffinity, (uint64_t)&unk_100F2E498);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

void (*sub_100C0F6BC(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  size_t v3;
  void *v4;

  *a1 = v1;
  v3 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0) - 8) + 64);
  a1[1] = malloc(v3);
  v4 = malloc(v3);
  a1[2] = v4;
  sub_100C08274((uint64_t)v4);
  return sub_100C0F724;
}

void sub_100C0F724(uint64_t a1, char a2)
{
  void *v2;
  void *v3;

  v2 = *(void **)(a1 + 8);
  v3 = *(void **)(a1 + 16);
  if ((a2 & 1) != 0)
  {
    sub_1004B8460(*(_QWORD *)(a1 + 16), (uint64_t)v2, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
    sub_100C0830C((uint64_t)v2);
    sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
  }
  else
  {
    sub_100C0830C(*(_QWORD *)(a1 + 16));
  }
  free(v3);
  free(v2);
}

uint64_t sub_100C0F794@<X0>(uint64_t a1@<X8>)
{
  _BYTE v3[232];

  sub_100C083D8((uint64_t)v3);
  return sub_1004C4938((uint64_t)v3, a1, (uint64_t *)&unk_1013F1530);
}

uint64_t sub_100C0F7E0(uint64_t a1)
{
  return sub_100C08518(a1);
}

BOOL sub_100C0F800(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _BYTE *v62;
  _BYTE *v63;
  uint64_t v64;
  _BYTE *v65;
  _BYTE *v66;
  _BYTE *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _BYTE *v87;
  _BYTE *v88;
  _BOOL8 v89;
  char v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  float v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  _BYTE v136[12];
  int v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  _BYTE *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  _BYTE *v156;
  _BYTE *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  _BYTE *v161;
  _BYTE *v162;
  _BYTE *v163;
  uint64_t v164;
  uint64_t v165;
  _BYTE *v166;
  uint64_t v167;
  _BYTE *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  _OWORD v174[14];
  uint64_t v175;
  _OWORD v176[14];
  uint64_t v177;
  uint64_t v178[29];
  uint64_t v179[29];
  _OWORD v180[29];
  _QWORD v181[58];
  uint64_t v182[2];
  char v183;
  int v184;
  int v185;
  char v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  _BYTE *v190;
  _BYTE *v191;
  uint64_t v192;
  uint64_t v193;
  _BYTE *v194;
  uint64_t v195;
  uint64_t v196;
  _QWORD v197[2];
  char v198;
  int v199;
  int v200;
  char v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  _OWORD v205[14];
  uint64_t v206;
  int v207;
  char v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  int v219;
  char v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;

  v155 = type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  __chkstk_darwin(v155);
  v5 = &v136[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v156 = &v136[-v7];
  __chkstk_darwin(v8);
  v161 = &v136[-v9];
  __chkstk_darwin(v10);
  v157 = &v136[-v11];
  __chkstk_darwin(v12);
  v162 = &v136[-v13];
  __chkstk_darwin(v14);
  v163 = &v136[-v15];
  __chkstk_darwin(v16);
  v166 = &v136[-v17];
  __chkstk_darwin(v18);
  v168 = &v136[-v19];
  v20 = sub_1004B804C((uint64_t *)&unk_1014148A0);
  v164 = a1;
  CRRegister.wrappedValue.getter(v20);
  v21 = v181[2];
  v167 = v181[3];
  v158 = v181[4];
  v159 = v181[5];
  v22 = v181[6];
  v160 = v181[7];
  v170 = v181[8];
  v171 = v181[0];
  v23 = v181[9];
  v169 = v181[10];
  v24 = v181[11];
  v25 = v181[12];
  v172 = v181[13];
  v173 = v181[1];
  v165 = a2;
  CRRegister.wrappedValue.getter(v20);
  v26 = v181[0];
  v27 = v181[1];
  v28 = v181[2];
  v29 = v181[3];
  v30 = v181[4];
  v31 = v181[5];
  v32 = v181[6];
  v33 = v181[7];
  v34 = v181[8];
  v35 = v181[9];
  v36 = v181[10];
  v37 = v181[11];
  v38 = v181[12];
  v39 = v181[13];
  if (!v25)
  {
    if (!v181[12])
    {
      v61 = v164;
      sub_1004B8460(v164, (uint64_t)v168, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
      v64 = v165;
      v63 = v166;
      sub_1004B8460(v165, (uint64_t)v166, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
      v66 = v161;
      goto LABEL_11;
    }
    goto LABEL_8;
  }
  if (!v181[12])
  {
LABEL_8:
    v181[0] = v171;
    v181[1] = v173;
    v181[2] = v21;
    v181[3] = v167;
    v181[4] = v158;
    v181[5] = v159;
    v181[6] = v22;
    v181[7] = v160;
    v181[8] = v170;
    v181[9] = v23;
    v181[10] = v169;
    v181[11] = v24;
    v181[12] = v25;
    v181[13] = v172;
    v181[14] = v26;
    v181[15] = v27;
    v181[16] = v28;
    v181[17] = v29;
    v181[18] = v30;
    v181[19] = v31;
    v181[20] = v32;
    v181[21] = v33;
    v181[22] = v34;
    v181[23] = v35;
    v181[24] = v36;
    v181[25] = v37;
    v181[26] = v38;
    v181[27] = v39;
    sub_1007C825C((uint64_t)v181);
    goto LABEL_16;
  }
  v139 = v181[13];
  v140 = v181[11];
  v141 = v181[10];
  v142 = v181[9];
  v143 = v181[8];
  v144 = v181[2];
  v148 = v181[3];
  v149 = v181[4];
  v150 = v181[5];
  v151 = v181[6];
  v152 = v181[7];
  v145 = v5;
  v181[0] = v171;
  LOBYTE(v181[1]) = v173 & 1;
  *(_QWORD *)&v180[0] = v26;
  BYTE8(v180[0]) = v27 & 1;
  v40 = sub_1007C8324();
  v153 = v22;
  swift_bridgeObjectRetain(v22);
  v41 = v23;
  swift_bridgeObjectRetain(v23);
  v42 = v24;
  swift_bridgeObjectRetain(v24);
  v154 = v25;
  swift_bridgeObjectRetain(v25);
  v43 = v172;
  swift_bridgeObjectRetain(v172);
  v44 = static CRExtensible.== infix(_:_:)(v181, v180, &type metadata for CRLFillData.FillType, v40, &protocol witness table for Int, &protocol witness table for Int);
  v146 = v42;
  v147 = v41;
  if ((v44 & 1) != 0)
  {
    v207 = v21;
    v138 = v21;
    v208 = BYTE4(v21) & 1;
    v209 = v167;
    v210 = v158;
    v211 = v159;
    v45 = v154;
    v212 = v153;
    v213 = v160;
    v214 = v170;
    v215 = v41;
    v216 = v169;
    v217 = v42;
    v218 = v154;
    v46 = v143;
    v47 = v144;
    v219 = v144;
    v220 = BYTE4(v144) & 1;
    v221 = v148;
    v222 = v149;
    v223 = v150;
    v224 = v151;
    v225 = v152;
    v226 = v143;
    v49 = v141;
    v48 = v142;
    v227 = v142;
    v228 = v141;
    v50 = v140;
    v229 = v140;
    v230 = v38;
    if ((sub_1006C4CF8(&v207, &v219) & 1) != 0)
    {
      v51 = v139;
      v137 = sub_100C9E04C(v172, v139);
      sub_1004C4174(v26, v27, v47, v148, v149, v150, v151, v152, v46, v48, v49, v50, v38, v51);
      v52 = v154;
      v53 = v171;
      v54 = v173;
      v55 = v138;
      v56 = v167;
      v58 = v158;
      v57 = v159;
      v59 = v153;
      v60 = v160;
      sub_1004C4174(v171, v173, v138, v167, v158, v159, v153, v160, v170, v147, v169, v146, v154, v172);
      sub_1004C4174(v53, v54, v55, v56, v58, v57, v59, v60, v170, v147, v169, v146, v52, v172);
      v61 = v164;
      v62 = v168;
      sub_1004B8460(v164, (uint64_t)v168, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
      v64 = v165;
      v63 = v166;
      sub_1004B8460(v165, (uint64_t)v166, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
      v5 = v145;
      v66 = v161;
      v65 = v162;
      v67 = v163;
      if ((v137 & 1) == 0)
        goto LABEL_17;
LABEL_11:
      v78 = sub_1004B804C(&qword_1013E0A88);
      CRRegister.wrappedValue.getter(v78);
      sub_1004C4938((uint64_t)v181, (uint64_t)v182, (uint64_t *)&unk_1013F1530);
      CRRegister.wrappedValue.getter(v78);
      sub_1004C4938((uint64_t)v181, (uint64_t)&v190, (uint64_t *)&unk_1013F1530);
      sub_1004C4938((uint64_t)v182, (uint64_t)v181, (uint64_t *)&unk_1013F1530);
      sub_1004C4938((uint64_t)&v190, (uint64_t)&v181[29], (uint64_t *)&unk_1013F1530);
      sub_1004C4938((uint64_t)v182, (uint64_t)v197, (uint64_t *)&unk_1013F1530);
      if (sub_1004F276C((uint64_t)v197) == 1)
      {
        sub_1004B84A4((uint64_t)v63, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
        sub_1004B84A4((uint64_t)v168, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
        sub_1004C4938((uint64_t)&v181[29], (uint64_t)v205, (uint64_t *)&unk_1013F1530);
        sub_1004C4938((uint64_t)v205, (uint64_t)v180, (uint64_t *)&unk_1013F1530);
        if (sub_1004F276C((uint64_t)v180) == 1)
        {
          sub_1004C4938((uint64_t)v181, (uint64_t)v179, (uint64_t *)&unk_1013F1530);
          sub_1004F28E8(v179);
          v67 = v163;
          sub_1004B8460(v61, (uint64_t)v163, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
          v65 = v162;
          sub_1004B8460(v64, (uint64_t)v162, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
          goto LABEL_29;
        }
      }
      else
      {
        sub_1004C4938((uint64_t)&v190, (uint64_t)v179, (uint64_t *)&unk_1013F1530);
        if (sub_1004F276C((uint64_t)v179) != 1)
        {
          sub_1004C4938((uint64_t)v182, (uint64_t)v174, (uint64_t *)&unk_1013F1530);
          v205[12] = v174[12];
          v205[13] = v174[13];
          v206 = v175;
          v205[8] = v174[8];
          v205[9] = v174[9];
          v205[11] = v174[11];
          v205[10] = v174[10];
          v205[4] = v174[4];
          v205[5] = v174[5];
          v205[7] = v174[7];
          v205[6] = v174[6];
          v205[0] = v174[0];
          v205[1] = v174[1];
          v205[3] = v174[3];
          v205[2] = v174[2];
          sub_1004C4938((uint64_t)&v190, (uint64_t)v176, (uint64_t *)&unk_1013F1530);
          v180[12] = v176[12];
          v180[13] = v176[13];
          *(_QWORD *)&v180[14] = v177;
          v180[8] = v176[8];
          v180[9] = v176[9];
          v180[11] = v176[11];
          v180[10] = v176[10];
          v180[4] = v176[4];
          v180[5] = v176[5];
          v180[7] = v176[7];
          v180[6] = v176[6];
          v180[0] = v176[0];
          v180[1] = v176[1];
          v180[3] = v176[3];
          v180[2] = v176[2];
          sub_1004F2958(v174);
          v91 = sub_1008BD558(v205, v180);
          sub_1004F28E8((uint64_t *)&v190);
          sub_1004F28E8(v182);
          sub_1004B84A4((uint64_t)v166, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
          sub_1004B84A4((uint64_t)v168, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
          sub_1004C4938((uint64_t)v181, (uint64_t)v178, (uint64_t *)&unk_1013F1530);
          sub_1004F28E8(v178);
          v67 = v163;
          sub_1004B8460(v61, (uint64_t)v163, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
          v65 = v162;
          sub_1004B8460(v64, (uint64_t)v162, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
          if ((v91 & 1) == 0)
            goto LABEL_19;
LABEL_29:
          v145 = v5;
          v92 = (uint64_t)v65;
          v93 = sub_1004B804C((uint64_t *)&unk_1013F62E0);
          CRRegister.wrappedValue.getter(v93);
          v94 = v181[0];
          v172 = v181[2];
          v173 = v181[1];
          v171 = v181[3];
          v95 = v181[4];
          v96 = v181[5];
          v97 = v181[6];
          CRRegister.wrappedValue.getter(v93);
          v98 = v181[2];
          v99 = v181[5];
          v100 = v181[6];
          v169 = v181[4];
          v170 = v181[3];
          v168 = (_BYTE *)v181[0];
          if (v96)
          {
            if (v181[5])
            {
              v197[0] = v94;
              v197[1] = v173;
              v198 = v172 & 1;
              v199 = HIDWORD(v172);
              v101 = v171;
              v200 = v171;
              v201 = BYTE4(v171) & 1;
              v202 = v95;
              v203 = v96;
              v204 = v97;
              LOBYTE(v181[2]) &= 1u;
              HIDWORD(v181[2]) = HIDWORD(v98);
              BYTE4(v181[3]) &= 1u;
              v102 = v181[1];
              swift_bridgeObjectRetain(v94);
              swift_bridgeObjectRetain(v96);
              swift_bridgeObjectRetain(v97);
              LODWORD(v167) = sub_100785568(v197, v181);
              sub_1004C41DC((uint64_t)v168, v102, v98, v170, v169, v99, v100);
              v104 = v172;
              v103 = v173;
              sub_1004C41DC(v94, v173, v172, v101, v95, v96, v97);
              sub_1004B84A4((uint64_t)v162, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
              sub_1004B84A4((uint64_t)v163, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
              sub_1004C41DC(v94, v103, v104, v101, v95, v96, v97);
              v61 = v164;
              v88 = v157;
              sub_1004B8460(v164, (uint64_t)v157, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
              v64 = v165;
              v66 = v161;
              sub_1004B8460(v165, (uint64_t)v161, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
              v5 = v145;
              v87 = v156;
              if ((v167 & 1) == 0)
                goto LABEL_21;
LABEL_35:
              v111 = sub_1004B804C((uint64_t *)&unk_1013F62E0);
              CRRegister.wrappedValue.getter(v111);
              v112 = (uint64_t)v190;
              v113 = v192;
              v171 = v193;
              v172 = (uint64_t)v191;
              v173 = (uint64_t)v194;
              v114 = v195;
              v115 = v196;
              CRRegister.wrappedValue.getter(v111);
              v116 = (uint64_t)v66;
              v117 = v195;
              v118 = v196;
              v169 = v193;
              v170 = v192;
              v168 = v194;
              if (v114)
              {
                if (v195)
                {
                  v119 = v113;
                  v120 = v112;
                  v182[0] = v112;
                  v121 = v171;
                  v182[1] = v172;
                  v183 = v113 & 1;
                  v184 = HIDWORD(v113);
                  v185 = v171;
                  v186 = BYTE4(v171) & 1;
                  v187 = v173;
                  v188 = v114;
                  v189 = v115;
                  LOBYTE(v192) = v192 & 1;
                  BYTE4(v193) &= 1u;
                  v122 = v112;
                  v123 = (uint64_t)v191;
                  v124 = (uint64_t)v190;
                  swift_bridgeObjectRetain(v122);
                  swift_bridgeObjectRetain(v114);
                  swift_bridgeObjectRetain(v115);
                  LODWORD(v167) = sub_100785568(v182, &v190);
                  sub_1004C41DC(v124, v123, v170, v169, (uint64_t)v168, v117, v118);
                  v125 = v172;
                  v126 = v173;
                  sub_1004C41DC(v120, v172, v119, v121, v173, v114, v115);
                  sub_1004B84A4((uint64_t)v161, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
                  sub_1004B84A4((uint64_t)v157, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
                  sub_1004C41DC(v120, v125, v119, v121, v126, v114, v115);
                  v87 = v156;
                  sub_1004B8460(v164, (uint64_t)v156, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
                  v5 = v145;
                  sub_1004B8460(v165, (uint64_t)v145, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
                  if ((v167 & 1) == 0)
                    goto LABEL_23;
LABEL_43:
                  v131 = sub_1004B804C(&qword_1013F55A0);
                  CRRegister.wrappedValue.getter(v131);
                  v132 = *(float *)v179;
                  CRRegister.wrappedValue.getter(v131);
                  v89 = v132 == *(float *)v179;
                  goto LABEL_24;
                }
                v163 = v190;
                v166 = v191;
                v167 = v196;
                swift_bridgeObjectRetain(v112);
                swift_bridgeObjectRetain(v114);
                v129 = v115;
                swift_bridgeObjectRetain(v115);
                sub_1004B84A4((uint64_t)v161, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
                sub_1004B84A4((uint64_t)v157, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
                v130 = v171;
                v128 = v172;
                v127 = v173;
                sub_1004C41DC(v112, v172, v113, v171, v173, v114, v129);
              }
              else
              {
                v163 = v190;
                v166 = v191;
                v167 = v196;
                sub_1004B84A4(v116, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
                sub_1004B84A4((uint64_t)v88, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
                v128 = v172;
                v127 = v173;
                v129 = v115;
                v130 = v171;
                if (!v117)
                {
                  sub_1004C41DC(v112, v172, v113, v171, v173, 0, v129);
                  v87 = v156;
                  sub_1004B8460(v164, (uint64_t)v156, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
                  v5 = v145;
                  sub_1004B8460(v165, (uint64_t)v145, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
                  goto LABEL_43;
                }
              }
              sub_1004C41DC(v112, v128, v113, v130, v127, v114, v129);
              sub_1004C41DC((uint64_t)v163, (uint64_t)v166, v170, v169, (uint64_t)v168, v117, v167);
              v5 = v145;
              v87 = v156;
              v61 = v164;
              v64 = v165;
              goto LABEL_22;
            }
            v160 = v181[1];
            v166 = (_BYTE *)v181[2];
            v167 = v181[6];
            swift_bridgeObjectRetain(v94);
            swift_bridgeObjectRetain(v96);
            v107 = v97;
            swift_bridgeObjectRetain(v97);
            v106 = v95;
            sub_1004B84A4((uint64_t)v162, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
            sub_1004B84A4((uint64_t)v163, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
            v109 = v172;
            v110 = v173;
            v108 = v171;
            sub_1004C41DC(v94, v173, v172, v171, v106, v96, v107);
          }
          else
          {
            v160 = v181[1];
            v166 = (_BYTE *)v181[2];
            v167 = v181[6];
            sub_1004B84A4(v92, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
            v105 = (uint64_t)v67;
            v106 = v95;
            sub_1004B84A4(v105, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
            v107 = v97;
            v108 = v171;
            v109 = v172;
            v110 = v173;
            if (!v99)
            {
              sub_1004C41DC(v94, v173, v172, v171, v106, 0, v107);
              v88 = v157;
              sub_1004B8460(v164, (uint64_t)v157, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
              v66 = v161;
              sub_1004B8460(v165, (uint64_t)v161, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
              goto LABEL_35;
            }
          }
          sub_1004C41DC(v94, v110, v109, v108, v106, v96, v107);
          sub_1004C41DC((uint64_t)v168, v160, (uint64_t)v166, v170, v169, v99, v167);
          v5 = v145;
          v87 = v156;
          v61 = v164;
          v64 = v165;
          v66 = v161;
          goto LABEL_20;
        }
        sub_1004C4938((uint64_t)v182, (uint64_t)v180, (uint64_t *)&unk_1013F1530);
        sub_1004F2958(v180);
        sub_1004B84A4((uint64_t)v166, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
        sub_1004B84A4((uint64_t)v168, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
        sub_1004F28E8(v182);
      }
      v65 = v162;
      v67 = v163;
      memcpy(v180, v181, sizeof(v180));
      sub_1004F2784((uint64_t)v180);
      goto LABEL_18;
    }
    sub_1004C4174(v26, v27, v47, v148, v149, v150, v151, v152, v46, v48, v49, v50, v38, v139);
    v79 = v172;
    v80 = v171;
    v81 = v173;
    v82 = v138;
    v84 = v158;
    v83 = v159;
    v85 = v153;
    v86 = v160;
    sub_1004C4174(v171, v173, v138, v167, v158, v159, v153, v160, v170, v147, v169, v146, v45, v172);
    sub_1004C4174(v80, v81, v82, v167, v84, v83, v85, v86, v170, v147, v169, v146, v45, v79);
  }
  else
  {
    sub_1004C4174(v26, v27, v144, v148, v149, v150, v151, v152, v143, v142, v141, v140, v38, v139);
    v135 = v43;
    v134 = v42;
    v68 = v169;
    v133 = v41;
    v69 = v170;
    v70 = v171;
    v71 = v21;
    v72 = v21;
    v73 = v167;
    v75 = v158;
    v74 = v159;
    v76 = v153;
    v77 = v160;
    sub_1004C4174(v171, v173, v72, v167, v158, v159, v153, v160, v170, v133, v169, v134, v154, v135);
    sub_1004C4174(v70, v173, v71, v73, v75, v74, v76, v77, v69, v147, v68, v146, v154, v172);
  }
  v5 = v145;
LABEL_16:
  v61 = v164;
  v64 = v165;
  v66 = v161;
  v65 = v162;
  v67 = v163;
  v62 = v168;
  sub_1004B8460(v164, (uint64_t)v168, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
  v63 = v166;
  sub_1004B8460(v64, (uint64_t)v166, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
LABEL_17:
  sub_1004B84A4((uint64_t)v63, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
  sub_1004B84A4((uint64_t)v62, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
LABEL_18:
  sub_1004B8460(v61, (uint64_t)v67, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
  sub_1004B8460(v64, (uint64_t)v65, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
LABEL_19:
  sub_1004B84A4((uint64_t)v65, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
  sub_1004B84A4((uint64_t)v67, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
  v87 = v156;
LABEL_20:
  v88 = v157;
  sub_1004B8460(v61, (uint64_t)v157, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
  sub_1004B8460(v64, (uint64_t)v66, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
LABEL_21:
  sub_1004B84A4((uint64_t)v66, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
  sub_1004B84A4((uint64_t)v88, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
LABEL_22:
  sub_1004B8460(v61, (uint64_t)v87, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
  sub_1004B8460(v64, (uint64_t)v5, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
LABEL_23:
  v89 = 0;
LABEL_24:
  sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
  sub_1004B84A4((uint64_t)v87, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
  return v89;
}

uint64_t sub_100C10AB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  int v31;
  uint64_t v32;
  uint64_t *v33;
  int v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  char v46;

  v4 = type metadata accessor for CRLPKStrokePathData(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C(&qword_10140A9E8);
  __chkstk_darwin(v8);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1004B804C(&qword_1013FA6D8);
  __chkstk_darwin(v11);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v39 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v39 - v18;
  if ((sub_1005DEDC8(a1, a2) & 1) == 0)
    goto LABEL_13;
  v42 = v7;
  v20 = type metadata accessor for CRLShapeItemParentAffinity(0);
  if ((sub_10092D538(a1 + *(int *)(v20 + 20), a2 + *(int *)(v20 + 20)) & 1) == 0)
    goto LABEL_13;
  v21 = *(int *)(v20 + 24);
  v40 = a1;
  sub_1004CB7BC(a1 + v21, (uint64_t)v19, &qword_1013FA6D8);
  v39 = v20;
  v22 = *(int *)(v20 + 24);
  v41 = a2;
  sub_1004CB7BC(a2 + v22, (uint64_t)v16, &qword_1013FA6D8);
  v23 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_1004CB7BC((uint64_t)v19, (uint64_t)v10, &qword_1013FA6D8);
  sub_1004CB7BC((uint64_t)v16, v23, &qword_1013FA6D8);
  v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v24((uint64_t)v10, 1, v4) != 1)
  {
    sub_1004CB7BC((uint64_t)v10, (uint64_t)v13, &qword_1013FA6D8);
    if (v24(v23, 1, v4) != 1)
    {
      v25 = (uint64_t)v42;
      sub_1004B84E0(v23, (uint64_t)v42, type metadata accessor for CRLPKStrokePathData);
      v26 = sub_1009A9E98(v13, v25);
      sub_1004B84A4(v25, type metadata accessor for CRLPKStrokePathData);
      sub_1004CB800((uint64_t)v16, &qword_1013FA6D8);
      sub_1004CB800((uint64_t)v19, &qword_1013FA6D8);
      sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLPKStrokePathData);
      sub_1004CB800((uint64_t)v10, &qword_1013FA6D8);
      if ((v26 & 1) == 0)
        goto LABEL_13;
      goto LABEL_10;
    }
    sub_1004CB800((uint64_t)v16, &qword_1013FA6D8);
    sub_1004CB800((uint64_t)v19, &qword_1013FA6D8);
    sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLPKStrokePathData);
LABEL_8:
    sub_1004CB800((uint64_t)v10, &qword_10140A9E8);
    goto LABEL_13;
  }
  sub_1004CB800((uint64_t)v16, &qword_1013FA6D8);
  sub_1004CB800((uint64_t)v19, &qword_1013FA6D8);
  if (v24(v23, 1, v4) != 1)
    goto LABEL_8;
  sub_1004CB800((uint64_t)v10, &qword_1013FA6D8);
LABEL_10:
  v28 = v39;
  v27 = v40;
  v29 = *(int *)(v39 + 28);
  v30 = (uint64_t *)(v40 + v29);
  v31 = *(unsigned __int8 *)(v40 + v29 + 8);
  v32 = v41;
  v33 = (uint64_t *)(v41 + v29);
  v34 = *(unsigned __int8 *)(v41 + v29 + 8);
  if (v31 != 255)
  {
    v35 = *v33;
    v45 = *v30;
    v46 = v31;
    if (v34 == 255)
      goto LABEL_13;
    v43 = v35;
    v44 = v34 & 1;
    v36 = sub_100A1290C();
    if ((static CRExtensible.== infix(_:_:)(&v45, &v43, &type metadata for CRLFreehandDrawingShapeTypeData, v36, &protocol witness table for Int, &protocol witness table for Int) & 1) == 0)goto LABEL_13;
LABEL_16:
    v37 = sub_100C9E04C(*(_QWORD *)(v27 + *(int *)(v28 + 32)), *(_QWORD *)(v32 + *(int *)(v28 + 32)));
    return v37 & 1;
  }
  if (v34 == 255)
    goto LABEL_16;
LABEL_13:
  v37 = 0;
  return v37 & 1;
}

uint64_t sub_100C10E60(uint64_t a1)
{
  if ((unint64_t)(a1 + 1) >= 6)
    return 5;
  else
    return (0x30502010004uLL >> (8 * (a1 + 1)));
}

uint64_t sub_100C10E88(uint64_t a1, unint64_t a2)
{
  unint64_t v4;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;

  if (a1 == 0xD000000000000013)
  {
    v4 = 0x8000000101001010;
    if (a2 == 0x8000000101001010)
      goto LABEL_5;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000013, 0x8000000101001010, a1, a2, 0) & 1) != 0)
  {
    v4 = a2;
LABEL_5:
    swift_bridgeObjectRelease(v4);
    return 0;
  }
  if (a1 == 0x72756F5368746170 && a2 == 0xEA00000000006563)
  {
    v6 = 0xEA00000000006563;
LABEL_11:
    swift_bridgeObjectRelease(v6);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x72756F5368746170, 0xEA00000000006563, a1, a2, 0) & 1) != 0)
  {
    v6 = a2;
    goto LABEL_11;
  }
  if (a1 == 0xD000000000000017 && a2 == 0x8000000101001030)
  {
    v7 = 0x8000000101001030;
LABEL_17:
    swift_bridgeObjectRelease(v7);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000017, 0x8000000101001030, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_17;
  }
  if (a1 == 0xD000000000000014 && a2 == 0x8000000101001050)
  {
    v8 = 0x8000000101001050;
LABEL_23:
    swift_bridgeObjectRelease(v8);
    return 3;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000014, 0x8000000101001050, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_23;
  }
  if (a1 == 0xD000000000000010 && a2 == 0x8000000100FAF1E0)
  {
    swift_bridgeObjectRelease(0x8000000100FAF1E0);
    return 4;
  }
  else
  {
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x8000000100FAF1E0, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v9 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_100C11090(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1004CB6A4(&qword_10140AA10);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100C110F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLPathSourceData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t storeEnumTagSinglePayload for CRLShapeItemParentAffinity.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_100C11184 + 4 * byte_100F2E07A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_100C111B8 + 4 * byte_100F2E075[v4]))();
}

uint64_t sub_100C111B8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100C111C0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100C111C8);
  return result;
}

uint64_t sub_100C111D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100C111DCLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_100C111E0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100C111E8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLShapeItemParentAffinity.CodingKeys()
{
  return &type metadata for CRLShapeItemParentAffinity.CodingKeys;
}

unint64_t sub_100C11208()
{
  unint64_t result;

  result = qword_10140AA38;
  if (!qword_10140AA38)
  {
    result = swift_getWitnessTable(&unk_100F2EB8C, &type metadata for CRLShapeItemParentAffinity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10140AA38);
  }
  return result;
}

uint64_t sub_100C1124C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  _BYTE *v7;
  char *v8;
  void *v9;
  _UNKNOWN ****v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  _BYTE v17[24];

  v1 = type metadata accessor for CRLMovieItemAssetData(0);
  __chkstk_darwin(v1);
  v3 = &v17[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = type metadata accessor for CRLAssetData(0);
  *(_QWORD *)&v5 = __chkstk_darwin(v4).n128_u64[0];
  v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = (char *)objc_msgSend(v0, "movieItem", v5);
  v9 = v8;
  v10 = *(_UNKNOWN *****)&v8[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
  if (*v10 == &off_1013E07D8)
    v11 = *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
  else
    v11 = 0;
  swift_beginAccess(v11 + qword_10147E7D8, v17, 32, 0);
  swift_retain(v10);
  v12 = sub_1004B804C(&qword_10140FCF0);
  CRRegister.wrappedValue.getter(v12);
  swift_endAccess(v17);
  swift_release(v10);
  sub_10069BF0C((uint64_t)v3, (uint64_t)v7);
  sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLMovieItemAssetData);

  v13 = (uint64_t *)&v7[*(int *)(v4 + 20)];
  v14 = *v13;
  swift_bridgeObjectRetain(v13[1]);
  sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLAssetData);
  return v14;
}

id sub_100C11694(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  id v14;
  uint64_t v15;
  void *v16;
  objc_class *v17;
  id v18;
  uint64_t v20;
  objc_super v21;
  _BYTE v22[24];

  v3 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v3);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t)&v1[OBJC_IVAR____TtC8Freeform22CRLMovieRepPlaceholder_previewItemURL];
  v7 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform22CRLMovieRepPlaceholder_movieRep] = a1;
  v8 = v1;
  v9 = a1;
  v10 = sub_100C1124C();
  v12 = v11;
  v13 = (uint64_t *)&v8[OBJC_IVAR____TtC8Freeform22CRLMovieRepPlaceholder_previewItemTitle];
  *v13 = v10;
  v13[1] = v11;
  v14 = objc_msgSend(v9, "movieItem");
  if (v12)
  {
    v15 = v12;
  }
  else
  {
    v10 = 0x6569766F6DLL;
    v15 = 0xE500000000000000;
  }
  swift_bridgeObjectRetain(v12);
  v16 = (void *)sub_100D4592C((uint64_t)v5, v10, v15);

  swift_bridgeObjectRelease();
  swift_beginAccess(v6, v22, 33, 0);
  sub_10054F3F0((uint64_t)v5, v6);
  swift_endAccess(v22);

  v17 = (objc_class *)type metadata accessor for CRLMovieRepPlaceholder(0);
  v21.receiver = v8;
  v21.super_class = v17;
  v18 = objc_msgSendSuper2(&v21, "init");
  if (v16)
  {
    objc_msgSend(v16, "setAssociatedLifetimeObject:", v9);

  }
  sub_1005534BC((uint64_t)v5);
  return v18;
}

id sub_100C1187C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLMovieRepPlaceholder(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100C118FC()
{
  return type metadata accessor for CRLMovieRepPlaceholder(0);
}

uint64_t type metadata accessor for CRLMovieRepPlaceholder(uint64_t a1)
{
  uint64_t result;

  result = qword_10140AA68;
  if (!qword_10140AA68)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLMovieRepPlaceholder);
  return result;
}

void sub_100C11940(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  sub_10067E7A0(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = &unk_100F2EC28;
    v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 80);
  }
}

uint64_t sub_100C119C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;

  v7[23] = a6;
  v7[24] = v6;
  v7[21] = a4;
  v7[22] = a5;
  v7[19] = a2;
  v7[20] = a3;
  v7[18] = a1;
  swift_defaultActor_initialize(v6, a2);
  *(_QWORD *)(v6 + 120) = 0;
  swift_unknownObjectWeakInit(v6 + 112);
  *(_DWORD *)(v6 + 207) = 0;
  *(_OWORD *)(v6 + 176) = 0u;
  *(_OWORD *)(v6 + 192) = 0u;
  *(_OWORD *)(v6 + 144) = 0u;
  *(_OWORD *)(v6 + 160) = 0u;
  *(_OWORD *)(v6 + 128) = 0u;
  return swift_task_switch(sub_100C11A34, v6, 0);
}

uint64_t sub_100C11A34()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  int *v7;

  v1 = v0[24];
  v2 = (int *)v0[20];
  v3 = v0[18];
  *(_QWORD *)(v1 + 120) = v0[19];
  swift_unknownObjectWeakAssign(v1 + 112, v3);
  v4 = v2[1];
  v7 = (int *)((char *)v2 + *v2);
  swift_retain(v1);
  v5 = (_QWORD *)swift_task_alloc(v4);
  v0[25] = v5;
  *v5 = v0;
  v5[1] = sub_100C11AD0;
  return ((uint64_t (*)(_QWORD *, _QWORD, _UNKNOWN **))v7)(v0 + 2, v0[24], &off_10129B360);
}

uint64_t sub_100C11AD0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  int *v8;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 192);
  v3 = *(int **)(*v0 + 176);
  v4 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 200));
  swift_release(v2);
  swift_beginAccess(v2 + 128, v1 + 96, 33, 0);
  sub_100C14D70(v1 + 16, v2 + 128);
  swift_endAccess(v1 + 96);
  v5 = v3[1];
  v8 = (int *)((char *)v3 + *v3);
  swift_retain(v2);
  v6 = (_QWORD *)swift_task_alloc(v5);
  *(_QWORD *)(v1 + 208) = v6;
  *v6 = v4;
  v6[1] = sub_100C11BB8;
  return ((uint64_t (*)(uint64_t, _QWORD, _UNKNOWN **))v8)(v1 + 56, *(_QWORD *)(v1 + 192), &off_10129B360);
}

uint64_t sub_100C11BB8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 192);
  v3 = *(_QWORD *)(*v0 + 144);
  v5 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 208));
  swift_unknownObjectRelease(v3);
  swift_release(v2);
  swift_beginAccess(v2 + 168, v1 + 120, 33, 0);
  sub_100C14D70(v1 + 56, v2 + 168);
  swift_endAccess(v1 + 120);
  return (*(uint64_t (**)(_QWORD))(v5 + 8))(*(_QWORD *)(v1 + 192));
}

uint64_t sub_100C11C5C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_10140AAA4);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1004CF80C;
  return sub_100C11CA4();
}

uint64_t sub_100C11CA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 528) = v0;
  v2 = sub_1004B804C(&qword_1013E01F0);
  *(_QWORD *)(v1 + 536) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100C11D00, v0, 0);
}

uint64_t sub_100C11D00()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  _BYTE *v3;
  id v4;
  __n128 v5;
  uint64_t v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  __n128 v12;
  id v14;
  __n128 v15;
  uint64_t v16;
  _QWORD *v17;

  Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + 528) + 112);
  *(_QWORD *)(v0 + 544) = Strong;
  if (!Strong)
  {
    if (qword_1013DD888 != -1)
      swift_once(&qword_1013DD888, sub_100A05DE4);
    swift_beginAccess(&static OS_os_log.realTimeSync, v0 + 368, 0, 0);
    v10 = (id)static OS_os_log.realTimeSync;
    v11 = static os_log_type_t.error.getter(v10);
    sub_100A06EBC((uint64_t)v10, &_mh_execute_header, v11, "Cannot transfer changes because there is no data source set", 59, 2, (uint64_t)_swiftEmptyArrayStorage);

    goto LABEL_14;
  }
  v2 = Strong;
  v3 = *(_BYTE **)(v0 + 528);
  if (v3[210] != 1)
  {
    if (qword_1013DD888 != -1)
    {
      swift_once(&qword_1013DD888, sub_100A05DE4);
      v3 = *(_BYTE **)(v0 + 528);
    }
    swift_beginAccess(&static OS_os_log.realTimeSync, v0 + 464, 0, 0);
    v4 = (id)static OS_os_log.realTimeSync;
    v6 = static os_log_type_t.default.getter(v12);
    v7 = "A transfer has been requested but the group session cannot transfer changes yet. An attempt will be made once c"
         "hanges can be transferred.";
    v8 = (uint64_t)v4;
    v9 = 137;
    goto LABEL_13;
  }
  if (v3[209] == 1)
  {
    if (qword_1013DD888 != -1)
    {
      swift_once(&qword_1013DD888, sub_100A05DE4);
      v3 = *(_BYTE **)(v0 + 528);
    }
    swift_beginAccess(&static OS_os_log.realTimeSync, v0 + 392, 0, 0);
    v4 = (id)static OS_os_log.realTimeSync;
    v6 = static os_log_type_t.default.getter(v5);
    v7 = "Requested a transfer while there is an ongoing transfer. A transfer will be attempted after the current one is completed";
    v8 = (uint64_t)v4;
    v9 = 120;
LABEL_13:
    sub_100A06EBC(v8, &_mh_execute_header, v6, v7, v9, 2, (uint64_t)_swiftEmptyArrayStorage);

    swift_unknownObjectRelease(v2);
    v3[208] = 1;
LABEL_14:
    swift_task_dealloc(*(_QWORD *)(v0 + 536));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  if (qword_1013DCFC8 != -1)
    swift_once(&qword_1013DCFC8, sub_100709C68);
  CRLAnalyticsOSSignpostManager.beginSignpostInterval(for:with:)(21, 1, (uint64_t)_swiftEmptyArrayStorage);
  if (qword_1013DD888 != -1)
    swift_once(&qword_1013DD888, sub_100A05DE4);
  swift_beginAccess(&static OS_os_log.realTimeSync, v0 + 440, 0, 0);
  v14 = (id)static OS_os_log.realTimeSync;
  v16 = static os_log_type_t.default.getter(v15);
  sub_100A06EBC((uint64_t)v14, &_mh_execute_header, v16, "Begun transferring realtime changes", 35, 2, (uint64_t)_swiftEmptyArrayStorage);

  v3[209] = 1;
  v17 = (_QWORD *)swift_task_alloc(dword_10140BA8C);
  *(_QWORD *)(v0 + 552) = v17;
  *v17 = v0;
  v17[1] = sub_100C12020;
  return sub_100C4FD1C();
}

uint64_t sub_100C12020(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 552);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 528);
  *(_QWORD *)(*(_QWORD *)v1 + 560) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_100C12080, v3, 0);
}

uint64_t sub_100C12080()
{
  uint64_t v0;
  BOOL v1;
  id v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t j;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int *v49;
  _QWORD *v50;
  uint64_t (*v51)();
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t i;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t (*v73)(uint64_t, uint64_t, uint64_t);

  v1 = sub_100C4FCCC();
  v2 = (id)static OS_os_log.realTimeSync;
  v4 = static os_log_type_t.default.getter(v3);
  if (v1)
  {
    v5 = *(_QWORD *)(v0 + 528);
    sub_100A06EBC((uint64_t)v2, &_mh_execute_header, v4, "No changes to transfer", 22, 2, (uint64_t)_swiftEmptyArrayStorage);

    *(_BYTE *)(v5 + 209) = 0;
    v6 = *(_QWORD *)(v0 + 560);
    if (*(_BYTE *)(v5 + 208) != 1)
    {
LABEL_5:
      v14 = *(_QWORD *)(v0 + 544);
      swift_release(v6);
      CRLAnalyticsOSSignpostManager.endSignpostInterval(for:)(21, 1);
      v15 = (id)static OS_os_log.realTimeSync;
      v17 = static os_log_type_t.default.getter(v16);
      sub_100A06EBC((uint64_t)v15, &_mh_execute_header, v17, "Finished transferring realtime changes", 38, 2, (uint64_t)_swiftEmptyArrayStorage);
      swift_unknownObjectRelease(v14);

      swift_task_dealloc(*(_QWORD *)(v0 + 536));
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    v7 = *(_QWORD *)(v0 + 536);
    v8 = *(_QWORD *)(v0 + 528);
    *(_BYTE *)(v5 + 208) = 0;
    v9 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v7, 1, 1, v9);
    v10 = sub_100A63480();
    v11 = (_QWORD *)swift_allocObject(&unk_10129B3A8, 40, 7);
    v11[2] = v8;
    v11[3] = v10;
    v11[4] = v8;
    swift_retain_n(v8, 2);
    v12 = &unk_10140AC58;
LABEL_4:
    v13 = sub_100521B98(v7, (uint64_t)v12, (uint64_t)v11);
    swift_release(v6);
    v6 = v13;
    goto LABEL_5;
  }
  v19 = *(_QWORD *)(v0 + 560);
  sub_100A06EBC((uint64_t)v2, &_mh_execute_header, v4, "Fetched realtime changes to transfer", 36, 2, (uint64_t)_swiftEmptyArrayStorage);

  v20 = *(_QWORD *)(v19 + 16);
  if (*(_QWORD *)(v20 + 16))
  {
    v21 = type metadata accessor for CRLRealTimeMessage();
    v22 = swift_allocObject(v21, 32, 7);
    *(_QWORD *)(v0 + 568) = v22;
    *(_QWORD *)(v22 + 16) = 0;
    *(_QWORD *)(v22 + 24) = v20;
    v23 = dword_10140AAAC;
    swift_bridgeObjectRetain(v20);
    v24 = swift_task_alloc(v23);
    *(_QWORD *)(v0 + 576) = v24;
    *(_QWORD *)v24 = v0;
    *(_QWORD *)(v24 + 8) = sub_100C1273C;
    v25 = *(_QWORD *)(v0 + 528);
    *(_BYTE *)(v24 + 400) = 1;
LABEL_10:
    *(_QWORD *)(v24 + 352) = v22;
    *(_QWORD *)(v24 + 360) = v25;
    return swift_task_switch(sub_100C1445C, v25, 0);
  }
  v26 = *(_QWORD **)(v0 + 560);
  v27 = v26[3];
  if (*(_QWORD *)(v27 + 16))
  {
    v28 = type metadata accessor for CRLRealTimeMessage();
    v22 = swift_allocObject(v28, 32, 7);
    *(_QWORD *)(v0 + 584) = v22;
    *(_QWORD *)(v22 + 16) = 0;
    *(_QWORD *)(v22 + 24) = v27;
    v29 = dword_10140AAAC;
    swift_bridgeObjectRetain(v27);
    v24 = swift_task_alloc(v29);
    *(_QWORD *)(v0 + 592) = v24;
    *(_QWORD *)v24 = v0;
    *(_QWORD *)(v24 + 8) = sub_100C12CE8;
    v25 = *(_QWORD *)(v0 + 528);
    *(_BYTE *)(v24 + 400) = 0;
    goto LABEL_10;
  }
  v30 = v26[4];
  *(_QWORD *)(v0 + 600) = v30;
  v31 = *(_QWORD *)(v30 + 16);
  *(_QWORD *)(v0 + 608) = v31;
  if (!v31)
  {
LABEL_18:
    v52 = v26[5];
    *(_QWORD *)(v0 + 664) = v52;
    v53 = *(_QWORD *)(v52 + 16);
    *(_QWORD *)(v0 + 672) = v53;
    if (v53)
    {
      v54 = *(_QWORD *)(v0 + 528) + 168;
      swift_bridgeObjectRetain(v52);
      swift_beginAccess(v54, v0 + 320, 0, 0);
      for (i = 0; ; i = *(_QWORD *)(v0 + 680) + 1)
      {
        *(_QWORD *)(v0 + 680) = i;
        v56 = (_QWORD *)(*(_QWORD *)(v0 + 664) + 24 * i);
        v57 = *(_QWORD *)(v0 + 528) + 168;
        v58 = v56[4];
        v59 = v56[5];
        *(_QWORD *)(v0 + 688) = v59;
        v60 = v56[6];
        *(_QWORD *)(v0 + 696) = v60;
        v61 = sub_1004B804C(&qword_10140AC48);
        v62 = swift_allocObject(v61, 56, 7);
        *(_OWORD *)(v62 + 16) = xmmword_100EF5E40;
        *(_QWORD *)(v62 + 32) = v58;
        *(_QWORD *)(v62 + 40) = v59;
        *(_QWORD *)(v62 + 48) = v60;
        v63 = type metadata accessor for CRLRealTimeMessage();
        v42 = swift_allocObject(v63, 32, 7);
        *(_QWORD *)(v0 + 704) = v42;
        *(_QWORD *)(v42 + 16) = 0;
        *(_QWORD *)(v42 + 24) = v62;
        sub_1004BE310(v59, v60);
        sub_1004BE310(v59, v60);
        sub_100C14C78(v57, v0 + 280);
        if (*(_QWORD *)(v0 + 304))
        {
          sub_1004E90B0(v0 + 280, v0 + 200);
          sub_100C14CC0(v0 + 280);
          v47 = *(_QWORD *)(v0 + 224);
          v48 = *(_QWORD *)(v0 + 232);
          sub_1004BB5A4((_QWORD *)(v0 + 200), v47);
          v68 = *(int **)(v48 + 8);
          v73 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v68 + *v68);
          v50 = (_QWORD *)swift_task_alloc(v68[1]);
          *(_QWORD *)(v0 + 712) = v50;
          v51 = sub_100C140C4;
          goto LABEL_24;
        }
        sub_100C14CC0(v0 + 280);
        v64 = *(_QWORD *)(v0 + 696);
        v65 = *(_QWORD *)(v0 + 688);
        v66 = *(_QWORD *)(v0 + 680);
        v67 = *(_QWORD *)(v0 + 672);
        swift_release(*(_QWORD *)(v0 + 704));
        sub_1004BBBC8(v65, v64);
        if (v66 + 1 == v67)
          break;
      }
      swift_bridgeObjectRelease();
    }
    v69 = *(_QWORD *)(v0 + 528);
    *(_BYTE *)(v69 + 209) = 0;
    v6 = *(_QWORD *)(v0 + 560);
    if (*(_BYTE *)(v69 + 208) != 1)
      goto LABEL_5;
    v7 = *(_QWORD *)(v0 + 536);
    v70 = *(_QWORD *)(v0 + 528);
    *(_BYTE *)(v69 + 208) = 0;
    v71 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 56))(v7, 1, 1, v71);
    v72 = sub_100A63480();
    v11 = (_QWORD *)swift_allocObject(&unk_10129B380, 40, 7);
    v11[2] = v70;
    v11[3] = v72;
    v11[4] = v70;
    swift_retain_n(v70, 2);
    v12 = &unk_1013FEE98;
    goto LABEL_4;
  }
  v32 = *(_QWORD *)(v0 + 528) + 168;
  swift_bridgeObjectRetain(v30);
  swift_beginAccess(v32, v0 + 344, 0, 0);
  for (j = 0; ; j = *(_QWORD *)(v0 + 616) + 1)
  {
    *(_QWORD *)(v0 + 616) = j;
    v34 = (_QWORD *)(*(_QWORD *)(v0 + 600) + 24 * j);
    v35 = *(_QWORD *)(v0 + 528) + 168;
    v36 = v34[4];
    v37 = v34[5];
    *(_QWORD *)(v0 + 624) = v37;
    v38 = v34[6];
    *(_QWORD *)(v0 + 632) = v38;
    v39 = sub_1004B804C(&qword_10140AC48);
    v40 = swift_allocObject(v39, 56, 7);
    *(_OWORD *)(v40 + 16) = xmmword_100EF5E40;
    *(_QWORD *)(v40 + 32) = v36;
    *(_QWORD *)(v40 + 40) = v37;
    *(_QWORD *)(v40 + 48) = v38;
    v41 = type metadata accessor for CRLRealTimeMessage();
    v42 = swift_allocObject(v41, 32, 7);
    *(_QWORD *)(v0 + 640) = v42;
    *(_QWORD *)(v42 + 16) = 0;
    *(_QWORD *)(v42 + 24) = v40;
    sub_1004BE310(v37, v38);
    sub_1004BE310(v37, v38);
    sub_100C14C78(v35, v0 + 240);
    if (*(_QWORD *)(v0 + 264))
      break;
    sub_100C14CC0(v0 + 240);
    v43 = *(_QWORD *)(v0 + 632);
    v44 = *(_QWORD *)(v0 + 624);
    v45 = *(_QWORD *)(v0 + 616);
    v46 = *(_QWORD *)(v0 + 608);
    swift_release(*(_QWORD *)(v0 + 640));
    sub_1004BBBC8(v44, v43);
    if (v45 + 1 == v46)
    {
      swift_bridgeObjectRelease();
      v26 = *(_QWORD **)(v0 + 560);
      goto LABEL_18;
    }
  }
  sub_1004E90B0(v0 + 240, v0 + 160);
  sub_100C14CC0(v0 + 240);
  v47 = *(_QWORD *)(v0 + 184);
  v48 = *(_QWORD *)(v0 + 192);
  sub_1004BB5A4((_QWORD *)(v0 + 160), v47);
  v49 = *(int **)(v48 + 16);
  v73 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v49 + *v49);
  v50 = (_QWORD *)swift_task_alloc(v49[1]);
  *(_QWORD *)(v0 + 648) = v50;
  v51 = sub_100C13200;
LABEL_24:
  *v50 = v0;
  v50[1] = v51;
  return v73(v42, v47, v48);
}

uint64_t sub_100C1273C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 528);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 576));
  return swift_task_switch(sub_100C12794, v1, 0);
}

uint64_t sub_100C12794()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t i;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int *v28;
  _QWORD *v29;
  uint64_t (*v30)();
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t j;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  __n128 v58;
  uint64_t v59;
  uint64_t (*v60)(uint64_t, uint64_t, uint64_t);

  swift_release(*(_QWORD *)(v0 + 568));
  v1 = *(_QWORD **)(v0 + 560);
  v2 = v1[3];
  if (*(_QWORD *)(v2 + 16))
  {
    v3 = type metadata accessor for CRLRealTimeMessage();
    v4 = swift_allocObject(v3, 32, 7);
    *(_QWORD *)(v0 + 584) = v4;
    *(_QWORD *)(v4 + 16) = 0;
    *(_QWORD *)(v4 + 24) = v2;
    v5 = dword_10140AAAC;
    swift_bridgeObjectRetain(v2);
    v6 = swift_task_alloc(v5);
    *(_QWORD *)(v0 + 592) = v6;
    *(_QWORD *)v6 = v0;
    *(_QWORD *)(v6 + 8) = sub_100C12CE8;
    v7 = *(_QWORD *)(v0 + 528);
    *(_BYTE *)(v6 + 400) = 0;
    *(_QWORD *)(v6 + 352) = v4;
    *(_QWORD *)(v6 + 360) = v7;
    return swift_task_switch(sub_100C1445C, v7, 0);
  }
  else
  {
    v9 = v1[4];
    *(_QWORD *)(v0 + 600) = v9;
    v10 = *(_QWORD *)(v9 + 16);
    *(_QWORD *)(v0 + 608) = v10;
    if (v10)
    {
      v11 = *(_QWORD *)(v0 + 528) + 168;
      swift_bridgeObjectRetain(v9);
      swift_beginAccess(v11, v0 + 344, 0, 0);
      for (i = 0; ; i = *(_QWORD *)(v0 + 616) + 1)
      {
        *(_QWORD *)(v0 + 616) = i;
        v13 = (_QWORD *)(*(_QWORD *)(v0 + 600) + 24 * i);
        v14 = *(_QWORD *)(v0 + 528) + 168;
        v15 = v13[4];
        v16 = v13[5];
        *(_QWORD *)(v0 + 624) = v16;
        v17 = v13[6];
        *(_QWORD *)(v0 + 632) = v17;
        v18 = sub_1004B804C(&qword_10140AC48);
        v19 = swift_allocObject(v18, 56, 7);
        *(_OWORD *)(v19 + 16) = xmmword_100EF5E40;
        *(_QWORD *)(v19 + 32) = v15;
        *(_QWORD *)(v19 + 40) = v16;
        *(_QWORD *)(v19 + 48) = v17;
        v20 = type metadata accessor for CRLRealTimeMessage();
        v21 = swift_allocObject(v20, 32, 7);
        *(_QWORD *)(v0 + 640) = v21;
        *(_QWORD *)(v21 + 16) = 0;
        *(_QWORD *)(v21 + 24) = v19;
        sub_1004BE310(v16, v17);
        sub_1004BE310(v16, v17);
        sub_100C14C78(v14, v0 + 240);
        if (*(_QWORD *)(v0 + 264))
          break;
        sub_100C14CC0(v0 + 240);
        v22 = *(_QWORD *)(v0 + 632);
        v23 = *(_QWORD *)(v0 + 624);
        v24 = *(_QWORD *)(v0 + 616);
        v25 = *(_QWORD *)(v0 + 608);
        swift_release(*(_QWORD *)(v0 + 640));
        sub_1004BBBC8(v23, v22);
        if (v24 + 1 == v25)
        {
          swift_bridgeObjectRelease();
          v1 = *(_QWORD **)(v0 + 560);
          goto LABEL_10;
        }
      }
      sub_1004E90B0(v0 + 240, v0 + 160);
      sub_100C14CC0(v0 + 240);
      v26 = *(_QWORD *)(v0 + 184);
      v27 = *(_QWORD *)(v0 + 192);
      sub_1004BB5A4((_QWORD *)(v0 + 160), v26);
      v28 = *(int **)(v27 + 16);
      v60 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v28 + *v28);
      v29 = (_QWORD *)swift_task_alloc(v28[1]);
      *(_QWORD *)(v0 + 648) = v29;
      v30 = sub_100C13200;
LABEL_16:
      *v29 = v0;
      v29[1] = v30;
      return v60(v21, v26, v27);
    }
    else
    {
LABEL_10:
      v31 = v1[5];
      *(_QWORD *)(v0 + 664) = v31;
      v32 = *(_QWORD *)(v31 + 16);
      *(_QWORD *)(v0 + 672) = v32;
      if (v32)
      {
        v33 = *(_QWORD *)(v0 + 528) + 168;
        swift_bridgeObjectRetain(v31);
        swift_beginAccess(v33, v0 + 320, 0, 0);
        for (j = 0; ; j = *(_QWORD *)(v0 + 680) + 1)
        {
          *(_QWORD *)(v0 + 680) = j;
          v35 = (_QWORD *)(*(_QWORD *)(v0 + 664) + 24 * j);
          v36 = *(_QWORD *)(v0 + 528) + 168;
          v37 = v35[4];
          v38 = v35[5];
          *(_QWORD *)(v0 + 688) = v38;
          v39 = v35[6];
          *(_QWORD *)(v0 + 696) = v39;
          v40 = sub_1004B804C(&qword_10140AC48);
          v41 = swift_allocObject(v40, 56, 7);
          *(_OWORD *)(v41 + 16) = xmmword_100EF5E40;
          *(_QWORD *)(v41 + 32) = v37;
          *(_QWORD *)(v41 + 40) = v38;
          *(_QWORD *)(v41 + 48) = v39;
          v42 = type metadata accessor for CRLRealTimeMessage();
          v21 = swift_allocObject(v42, 32, 7);
          *(_QWORD *)(v0 + 704) = v21;
          *(_QWORD *)(v21 + 16) = 0;
          *(_QWORD *)(v21 + 24) = v41;
          sub_1004BE310(v38, v39);
          sub_1004BE310(v38, v39);
          sub_100C14C78(v36, v0 + 280);
          if (*(_QWORD *)(v0 + 304))
          {
            sub_1004E90B0(v0 + 280, v0 + 200);
            sub_100C14CC0(v0 + 280);
            v26 = *(_QWORD *)(v0 + 224);
            v27 = *(_QWORD *)(v0 + 232);
            sub_1004BB5A4((_QWORD *)(v0 + 200), v26);
            v47 = *(int **)(v27 + 8);
            v60 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v47 + *v47);
            v29 = (_QWORD *)swift_task_alloc(v47[1]);
            *(_QWORD *)(v0 + 712) = v29;
            v30 = sub_100C140C4;
            goto LABEL_16;
          }
          sub_100C14CC0(v0 + 280);
          v43 = *(_QWORD *)(v0 + 696);
          v44 = *(_QWORD *)(v0 + 688);
          v45 = *(_QWORD *)(v0 + 680);
          v46 = *(_QWORD *)(v0 + 672);
          swift_release(*(_QWORD *)(v0 + 704));
          sub_1004BBBC8(v44, v43);
          if (v45 + 1 == v46)
            break;
        }
        swift_bridgeObjectRelease();
      }
      v48 = *(_QWORD *)(v0 + 528);
      *(_BYTE *)(v48 + 209) = 0;
      v49 = *(_QWORD *)(v0 + 560);
      if (*(_BYTE *)(v48 + 208) == 1)
      {
        v50 = *(_QWORD *)(v0 + 536);
        v51 = *(_QWORD *)(v0 + 528);
        *(_BYTE *)(v48 + 208) = 0;
        v52 = type metadata accessor for TaskPriority(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v50, 1, 1, v52);
        v53 = sub_100A63480();
        v54 = (_QWORD *)swift_allocObject(&unk_10129B380, 40, 7);
        v54[2] = v51;
        v54[3] = v53;
        v54[4] = v51;
        swift_retain_n(v51, 2);
        v55 = sub_100521B98(v50, (uint64_t)&unk_1013FEE98, (uint64_t)v54);
        swift_release(v49);
        v49 = v55;
      }
      v56 = *(_QWORD *)(v0 + 544);
      swift_release(v49);
      CRLAnalyticsOSSignpostManager.endSignpostInterval(for:)(21, 1);
      v57 = (id)static OS_os_log.realTimeSync;
      v59 = static os_log_type_t.default.getter(v58);
      sub_100A06EBC((uint64_t)v57, &_mh_execute_header, v59, "Finished transferring realtime changes", 38, 2, (uint64_t)_swiftEmptyArrayStorage);
      swift_unknownObjectRelease(v56);

      swift_task_dealloc(*(_QWORD *)(v0 + 536));
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
  }
}

uint64_t sub_100C12CE8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 528);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 592));
  return swift_task_switch(sub_100C12D40, v1, 0);
}

uint64_t sub_100C12D40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  _QWORD *v22;
  uint64_t (*v23)();
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t j;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int *v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  __n128 v52;
  uint64_t v53;
  uint64_t (*v54)(uint64_t, uint64_t, uint64_t);

  swift_release(*(_QWORD *)(v0 + 584));
  v1 = *(_QWORD *)(v0 + 560);
  v2 = *(_QWORD *)(v1 + 32);
  *(_QWORD *)(v0 + 600) = v2;
  v3 = *(_QWORD *)(v2 + 16);
  *(_QWORD *)(v0 + 608) = v3;
  if (v3)
  {
    v4 = *(_QWORD *)(v0 + 528) + 168;
    swift_bridgeObjectRetain(v2);
    swift_beginAccess(v4, v0 + 344, 0, 0);
    for (i = 0; ; i = *(_QWORD *)(v0 + 616) + 1)
    {
      *(_QWORD *)(v0 + 616) = i;
      v6 = (_QWORD *)(*(_QWORD *)(v0 + 600) + 24 * i);
      v7 = *(_QWORD *)(v0 + 528) + 168;
      v8 = v6[4];
      v9 = v6[5];
      *(_QWORD *)(v0 + 624) = v9;
      v10 = v6[6];
      *(_QWORD *)(v0 + 632) = v10;
      v11 = sub_1004B804C(&qword_10140AC48);
      v12 = swift_allocObject(v11, 56, 7);
      *(_OWORD *)(v12 + 16) = xmmword_100EF5E40;
      *(_QWORD *)(v12 + 32) = v8;
      *(_QWORD *)(v12 + 40) = v9;
      *(_QWORD *)(v12 + 48) = v10;
      v13 = type metadata accessor for CRLRealTimeMessage();
      v14 = swift_allocObject(v13, 32, 7);
      *(_QWORD *)(v0 + 640) = v14;
      *(_QWORD *)(v14 + 16) = 0;
      *(_QWORD *)(v14 + 24) = v12;
      sub_1004BE310(v9, v10);
      sub_1004BE310(v9, v10);
      sub_100C14C78(v7, v0 + 240);
      if (*(_QWORD *)(v0 + 264))
        break;
      sub_100C14CC0(v0 + 240);
      v15 = *(_QWORD *)(v0 + 632);
      v16 = *(_QWORD *)(v0 + 624);
      v17 = *(_QWORD *)(v0 + 616);
      v18 = *(_QWORD *)(v0 + 608);
      swift_release(*(_QWORD *)(v0 + 640));
      sub_1004BBBC8(v16, v15);
      if (v17 + 1 == v18)
      {
        swift_bridgeObjectRelease();
        v1 = *(_QWORD *)(v0 + 560);
        goto LABEL_8;
      }
    }
    sub_1004E90B0(v0 + 240, v0 + 160);
    sub_100C14CC0(v0 + 240);
    v19 = *(_QWORD *)(v0 + 184);
    v20 = *(_QWORD *)(v0 + 192);
    sub_1004BB5A4((_QWORD *)(v0 + 160), v19);
    v21 = *(int **)(v20 + 16);
    v54 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v21 + *v21);
    v22 = (_QWORD *)swift_task_alloc(v21[1]);
    *(_QWORD *)(v0 + 648) = v22;
    v23 = sub_100C13200;
LABEL_14:
    *v22 = v0;
    v22[1] = v23;
    return v54(v14, v19, v20);
  }
  else
  {
LABEL_8:
    v24 = *(_QWORD *)(v1 + 40);
    *(_QWORD *)(v0 + 664) = v24;
    v25 = *(_QWORD *)(v24 + 16);
    *(_QWORD *)(v0 + 672) = v25;
    if (v25)
    {
      v26 = *(_QWORD *)(v0 + 528) + 168;
      swift_bridgeObjectRetain(v24);
      swift_beginAccess(v26, v0 + 320, 0, 0);
      for (j = 0; ; j = *(_QWORD *)(v0 + 680) + 1)
      {
        *(_QWORD *)(v0 + 680) = j;
        v28 = (_QWORD *)(*(_QWORD *)(v0 + 664) + 24 * j);
        v29 = *(_QWORD *)(v0 + 528) + 168;
        v30 = v28[4];
        v31 = v28[5];
        *(_QWORD *)(v0 + 688) = v31;
        v32 = v28[6];
        *(_QWORD *)(v0 + 696) = v32;
        v33 = sub_1004B804C(&qword_10140AC48);
        v34 = swift_allocObject(v33, 56, 7);
        *(_OWORD *)(v34 + 16) = xmmword_100EF5E40;
        *(_QWORD *)(v34 + 32) = v30;
        *(_QWORD *)(v34 + 40) = v31;
        *(_QWORD *)(v34 + 48) = v32;
        v35 = type metadata accessor for CRLRealTimeMessage();
        v14 = swift_allocObject(v35, 32, 7);
        *(_QWORD *)(v0 + 704) = v14;
        *(_QWORD *)(v14 + 16) = 0;
        *(_QWORD *)(v14 + 24) = v34;
        sub_1004BE310(v31, v32);
        sub_1004BE310(v31, v32);
        sub_100C14C78(v29, v0 + 280);
        if (*(_QWORD *)(v0 + 304))
        {
          sub_1004E90B0(v0 + 280, v0 + 200);
          sub_100C14CC0(v0 + 280);
          v19 = *(_QWORD *)(v0 + 224);
          v20 = *(_QWORD *)(v0 + 232);
          sub_1004BB5A4((_QWORD *)(v0 + 200), v19);
          v40 = *(int **)(v20 + 8);
          v54 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v40 + *v40);
          v22 = (_QWORD *)swift_task_alloc(v40[1]);
          *(_QWORD *)(v0 + 712) = v22;
          v23 = sub_100C140C4;
          goto LABEL_14;
        }
        sub_100C14CC0(v0 + 280);
        v36 = *(_QWORD *)(v0 + 696);
        v37 = *(_QWORD *)(v0 + 688);
        v38 = *(_QWORD *)(v0 + 680);
        v39 = *(_QWORD *)(v0 + 672);
        swift_release(*(_QWORD *)(v0 + 704));
        sub_1004BBBC8(v37, v36);
        if (v38 + 1 == v39)
          break;
      }
      swift_bridgeObjectRelease();
    }
    v42 = *(_QWORD *)(v0 + 528);
    *(_BYTE *)(v42 + 209) = 0;
    v43 = *(_QWORD *)(v0 + 560);
    if (*(_BYTE *)(v42 + 208) == 1)
    {
      v44 = *(_QWORD *)(v0 + 536);
      v45 = *(_QWORD *)(v0 + 528);
      *(_BYTE *)(v42 + 208) = 0;
      v46 = type metadata accessor for TaskPriority(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v44, 1, 1, v46);
      v47 = sub_100A63480();
      v48 = (_QWORD *)swift_allocObject(&unk_10129B380, 40, 7);
      v48[2] = v45;
      v48[3] = v47;
      v48[4] = v45;
      swift_retain_n(v45, 2);
      v49 = sub_100521B98(v44, (uint64_t)&unk_1013FEE98, (uint64_t)v48);
      swift_release(v43);
      v43 = v49;
    }
    v50 = *(_QWORD *)(v0 + 544);
    swift_release(v43);
    CRLAnalyticsOSSignpostManager.endSignpostInterval(for:)(21, 1);
    v51 = (id)static OS_os_log.realTimeSync;
    v53 = static os_log_type_t.default.getter(v52);
    sub_100A06EBC((uint64_t)v51, &_mh_execute_header, v53, "Finished transferring realtime changes", 38, 2, (uint64_t)_swiftEmptyArrayStorage);
    swift_unknownObjectRelease(v50);

    swift_task_dealloc(*(_QWORD *)(v0 + 536));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100C13200()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 648);
  *(_QWORD *)(*v1 + 656) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_100C13728;
  else
    v4 = sub_100C13264;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 528), 0);
}

uint64_t sub_100C13264()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t i;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int *v45;
  _QWORD *v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  __n128 v58;
  uint64_t v59;
  uint64_t (*v60)(uint64_t, uint64_t, uint64_t);

  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 160));
  v1 = *(_QWORD *)(v0 + 632);
  v2 = *(_QWORD *)(v0 + 624);
  v3 = *(_QWORD *)(v0 + 616);
  v4 = *(_QWORD *)(v0 + 608);
  swift_release(*(_QWORD *)(v0 + 640));
  sub_1004BBBC8(v2, v1);
  if (v3 + 1 == v4)
  {
LABEL_4:
    swift_bridgeObjectRelease();
    v19 = *(_QWORD *)(*(_QWORD *)(v0 + 560) + 40);
    *(_QWORD *)(v0 + 664) = v19;
    v20 = *(_QWORD *)(v19 + 16);
    *(_QWORD *)(v0 + 672) = v20;
    if (v20)
    {
      v21 = *(_QWORD *)(v0 + 528) + 168;
      swift_bridgeObjectRetain(v19);
      swift_beginAccess(v21, v0 + 320, 0, 0);
      for (i = 0; ; i = *(_QWORD *)(v0 + 680) + 1)
      {
        *(_QWORD *)(v0 + 680) = i;
        v23 = (_QWORD *)(*(_QWORD *)(v0 + 664) + 24 * i);
        v24 = *(_QWORD *)(v0 + 528) + 168;
        v25 = v23[4];
        v26 = v23[5];
        *(_QWORD *)(v0 + 688) = v26;
        v27 = v23[6];
        *(_QWORD *)(v0 + 696) = v27;
        v28 = sub_1004B804C(&qword_10140AC48);
        v29 = swift_allocObject(v28, 56, 7);
        *(_OWORD *)(v29 + 16) = xmmword_100EF5E40;
        *(_QWORD *)(v29 + 32) = v25;
        *(_QWORD *)(v29 + 40) = v26;
        *(_QWORD *)(v29 + 48) = v27;
        v30 = type metadata accessor for CRLRealTimeMessage();
        v31 = swift_allocObject(v30, 32, 7);
        *(_QWORD *)(v0 + 704) = v31;
        *(_QWORD *)(v31 + 16) = 0;
        *(_QWORD *)(v31 + 24) = v29;
        sub_1004BE310(v26, v27);
        sub_1004BE310(v26, v27);
        sub_100C14C78(v24, v0 + 280);
        if (*(_QWORD *)(v0 + 304))
        {
          sub_1004E90B0(v0 + 280, v0 + 200);
          sub_100C14CC0(v0 + 280);
          v43 = *(_QWORD *)(v0 + 224);
          v44 = *(_QWORD *)(v0 + 232);
          sub_1004BB5A4((_QWORD *)(v0 + 200), v43);
          v45 = *(int **)(v44 + 8);
          v60 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v45 + *v45);
          v46 = (_QWORD *)swift_task_alloc(v45[1]);
          *(_QWORD *)(v0 + 712) = v46;
          *v46 = v0;
          v46[1] = sub_100C140C4;
          v40 = v31;
          v41 = v43;
          v42 = v44;
          return v60(v40, v41, v42);
        }
        sub_100C14CC0(v0 + 280);
        v32 = *(_QWORD *)(v0 + 696);
        v33 = *(_QWORD *)(v0 + 688);
        v34 = *(_QWORD *)(v0 + 680);
        v35 = *(_QWORD *)(v0 + 672);
        swift_release(*(_QWORD *)(v0 + 704));
        sub_1004BBBC8(v33, v32);
        if (v34 + 1 == v35)
          break;
      }
      swift_bridgeObjectRelease();
    }
    v48 = *(_QWORD *)(v0 + 528);
    *(_BYTE *)(v48 + 209) = 0;
    v49 = *(_QWORD *)(v0 + 560);
    if (*(_BYTE *)(v48 + 208) == 1)
    {
      v50 = *(_QWORD *)(v0 + 536);
      v51 = *(_QWORD *)(v0 + 528);
      *(_BYTE *)(v48 + 208) = 0;
      v52 = type metadata accessor for TaskPriority(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v50, 1, 1, v52);
      v53 = sub_100A63480();
      v54 = (_QWORD *)swift_allocObject(&unk_10129B380, 40, 7);
      v54[2] = v51;
      v54[3] = v53;
      v54[4] = v51;
      swift_retain_n(v51, 2);
      v55 = sub_100521B98(v50, (uint64_t)&unk_1013FEE98, (uint64_t)v54);
      swift_release(v49);
      v49 = v55;
    }
    v56 = *(_QWORD *)(v0 + 544);
    swift_release(v49);
    CRLAnalyticsOSSignpostManager.endSignpostInterval(for:)(21, 1);
    v57 = (id)static OS_os_log.realTimeSync;
    v59 = static os_log_type_t.default.getter(v58);
    sub_100A06EBC((uint64_t)v57, &_mh_execute_header, v59, "Finished transferring realtime changes", 38, 2, (uint64_t)_swiftEmptyArrayStorage);
    swift_unknownObjectRelease(v56);

    swift_task_dealloc(*(_QWORD *)(v0 + 536));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    while (1)
    {
      v5 = *(_QWORD *)(v0 + 616) + 1;
      *(_QWORD *)(v0 + 616) = v5;
      v6 = (_QWORD *)(*(_QWORD *)(v0 + 600) + 24 * v5);
      v7 = *(_QWORD *)(v0 + 528) + 168;
      v8 = v6[4];
      v9 = v6[5];
      *(_QWORD *)(v0 + 624) = v9;
      v10 = v6[6];
      *(_QWORD *)(v0 + 632) = v10;
      v11 = sub_1004B804C(&qword_10140AC48);
      v12 = swift_allocObject(v11, 56, 7);
      *(_OWORD *)(v12 + 16) = xmmword_100EF5E40;
      *(_QWORD *)(v12 + 32) = v8;
      *(_QWORD *)(v12 + 40) = v9;
      *(_QWORD *)(v12 + 48) = v10;
      v13 = type metadata accessor for CRLRealTimeMessage();
      v14 = swift_allocObject(v13, 32, 7);
      *(_QWORD *)(v0 + 640) = v14;
      *(_QWORD *)(v14 + 16) = 0;
      *(_QWORD *)(v14 + 24) = v12;
      sub_1004BE310(v9, v10);
      sub_1004BE310(v9, v10);
      sub_100C14C78(v7, v0 + 240);
      if (*(_QWORD *)(v0 + 264))
        break;
      sub_100C14CC0(v0 + 240);
      v15 = *(_QWORD *)(v0 + 632);
      v16 = *(_QWORD *)(v0 + 624);
      v17 = *(_QWORD *)(v0 + 616);
      v18 = *(_QWORD *)(v0 + 608);
      swift_release(*(_QWORD *)(v0 + 640));
      sub_1004BBBC8(v16, v15);
      if (v17 + 1 == v18)
        goto LABEL_4;
    }
    sub_1004E90B0(v0 + 240, v0 + 160);
    sub_100C14CC0(v0 + 240);
    v36 = *(_QWORD *)(v0 + 184);
    v37 = *(_QWORD *)(v0 + 192);
    sub_1004BB5A4((_QWORD *)(v0 + 160), v36);
    v38 = *(int **)(v37 + 16);
    v60 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v38 + *v38);
    v39 = (_QWORD *)swift_task_alloc(v38[1]);
    *(_QWORD *)(v0 + 648) = v39;
    *v39 = v0;
    v39[1] = sub_100C13200;
    v40 = v14;
    v41 = v36;
    v42 = v37;
    return v60(v40, v41, v42);
  }
}

uint64_t sub_100C13728()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t i;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int *v56;
  _QWORD *v57;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  __n128 v69;
  uint64_t v70;
  uint64_t (*v71)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 656);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 160));
  v2 = (void *)static OS_os_log.realTimeSync;
  v3 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v3, v0 + 88);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  swift_getErrorValue(v1, v0 + 512, v0 + 488);
  v5 = *(_QWORD *)(v0 + 496);
  v6 = *(_QWORD *)(v0 + 504);
  v7 = v2;
  v8 = Error.localizedDescription.getter(v5, v6);
  v10 = v9;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v11 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v11;
  *(_QWORD *)(inited + 32) = v8;
  *(_QWORD *)(inited + 40) = v10;
  v12 = static os_log_type_t.error.getter(v11);
  sub_100A06EBC((uint64_t)v7, &_mh_execute_header, v12, "Cannot transfer changes over UDP with error %@", 46, 2, inited);
  swift_setDeallocating(inited);
  v13 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v13);

  swift_errorRelease(v1);
  v14 = *(_QWORD *)(v0 + 632);
  v15 = *(_QWORD *)(v0 + 624);
  v16 = *(_QWORD *)(v0 + 616);
  v17 = *(_QWORD *)(v0 + 608);
  swift_release(*(_QWORD *)(v0 + 640));
  sub_1004BBBC8(v15, v14);
  if (v16 + 1 == v17)
  {
LABEL_4:
    swift_bridgeObjectRelease();
    v32 = *(_QWORD *)(*(_QWORD *)(v0 + 560) + 40);
    *(_QWORD *)(v0 + 664) = v32;
    v33 = *(_QWORD *)(v32 + 16);
    *(_QWORD *)(v0 + 672) = v33;
    if (v33)
    {
      v34 = *(_QWORD *)(v0 + 528) + 168;
      swift_bridgeObjectRetain(v32);
      swift_beginAccess(v34, v0 + 320, 0, 0);
      for (i = 0; ; i = *(_QWORD *)(v0 + 680) + 1)
      {
        *(_QWORD *)(v0 + 680) = i;
        v36 = (_QWORD *)(*(_QWORD *)(v0 + 664) + 24 * i);
        v37 = *(_QWORD *)(v0 + 528) + 168;
        v38 = v36[4];
        v39 = v36[5];
        *(_QWORD *)(v0 + 688) = v39;
        v40 = v36[6];
        *(_QWORD *)(v0 + 696) = v40;
        v41 = sub_1004B804C(&qword_10140AC48);
        v42 = swift_allocObject(v41, 56, 7);
        *(_OWORD *)(v42 + 16) = xmmword_100EF5E40;
        *(_QWORD *)(v42 + 32) = v38;
        *(_QWORD *)(v42 + 40) = v39;
        *(_QWORD *)(v42 + 48) = v40;
        v43 = type metadata accessor for CRLRealTimeMessage();
        v44 = swift_allocObject(v43, 32, 7);
        *(_QWORD *)(v0 + 704) = v44;
        *(_QWORD *)(v44 + 16) = 0;
        *(_QWORD *)(v44 + 24) = v42;
        sub_1004BE310(v39, v40);
        sub_1004BE310(v39, v40);
        sub_100C14C78(v37, v0 + 280);
        if (*(_QWORD *)(v0 + 304))
        {
          sub_1004E90B0(v0 + 280, v0 + 200);
          sub_100C14CC0(v0 + 280);
          v55 = *(_QWORD *)(v0 + 224);
          v50 = *(_QWORD *)(v0 + 232);
          sub_1004BB5A4((_QWORD *)(v0 + 200), v55);
          v56 = *(int **)(v50 + 8);
          v71 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v56 + *v56);
          v57 = (_QWORD *)swift_task_alloc(v56[1]);
          *(_QWORD *)(v0 + 712) = v57;
          *v57 = v0;
          v57[1] = sub_100C140C4;
          v53 = v44;
          v54 = v55;
          return v71(v53, v54, v50);
        }
        sub_100C14CC0(v0 + 280);
        v45 = *(_QWORD *)(v0 + 696);
        v46 = *(_QWORD *)(v0 + 688);
        v47 = *(_QWORD *)(v0 + 680);
        v48 = *(_QWORD *)(v0 + 672);
        swift_release(*(_QWORD *)(v0 + 704));
        sub_1004BBBC8(v46, v45);
        if (v47 + 1 == v48)
          break;
      }
      swift_bridgeObjectRelease();
    }
    v59 = *(_QWORD *)(v0 + 528);
    *(_BYTE *)(v59 + 209) = 0;
    v60 = *(_QWORD *)(v0 + 560);
    if (*(_BYTE *)(v59 + 208) == 1)
    {
      v61 = *(_QWORD *)(v0 + 536);
      v62 = *(_QWORD *)(v0 + 528);
      *(_BYTE *)(v59 + 208) = 0;
      v63 = type metadata accessor for TaskPriority(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 56))(v61, 1, 1, v63);
      v64 = sub_100A63480();
      v65 = (_QWORD *)swift_allocObject(&unk_10129B380, 40, 7);
      v65[2] = v62;
      v65[3] = v64;
      v65[4] = v62;
      swift_retain_n(v62, 2);
      v66 = sub_100521B98(v61, (uint64_t)&unk_1013FEE98, (uint64_t)v65);
      swift_release(v60);
      v60 = v66;
    }
    v67 = *(_QWORD *)(v0 + 544);
    swift_release(v60);
    CRLAnalyticsOSSignpostManager.endSignpostInterval(for:)(21, 1);
    v68 = (id)static OS_os_log.realTimeSync;
    v70 = static os_log_type_t.default.getter(v69);
    sub_100A06EBC((uint64_t)v68, &_mh_execute_header, v70, "Finished transferring realtime changes", 38, 2, (uint64_t)_swiftEmptyArrayStorage);
    swift_unknownObjectRelease(v67);

    swift_task_dealloc(*(_QWORD *)(v0 + 536));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    while (1)
    {
      v18 = *(_QWORD *)(v0 + 616) + 1;
      *(_QWORD *)(v0 + 616) = v18;
      v19 = (_QWORD *)(*(_QWORD *)(v0 + 600) + 24 * v18);
      v20 = *(_QWORD *)(v0 + 528) + 168;
      v21 = v19[4];
      v22 = v19[5];
      *(_QWORD *)(v0 + 624) = v22;
      v23 = v19[6];
      *(_QWORD *)(v0 + 632) = v23;
      v24 = sub_1004B804C(&qword_10140AC48);
      v25 = swift_allocObject(v24, 56, 7);
      *(_OWORD *)(v25 + 16) = xmmword_100EF5E40;
      *(_QWORD *)(v25 + 32) = v21;
      *(_QWORD *)(v25 + 40) = v22;
      *(_QWORD *)(v25 + 48) = v23;
      v26 = type metadata accessor for CRLRealTimeMessage();
      v27 = swift_allocObject(v26, 32, 7);
      *(_QWORD *)(v0 + 640) = v27;
      *(_QWORD *)(v27 + 16) = 0;
      *(_QWORD *)(v27 + 24) = v25;
      sub_1004BE310(v22, v23);
      sub_1004BE310(v22, v23);
      sub_100C14C78(v20, v0 + 240);
      if (*(_QWORD *)(v0 + 264))
        break;
      sub_100C14CC0(v0 + 240);
      v28 = *(_QWORD *)(v0 + 632);
      v29 = *(_QWORD *)(v0 + 624);
      v30 = *(_QWORD *)(v0 + 616);
      v31 = *(_QWORD *)(v0 + 608);
      swift_release(*(_QWORD *)(v0 + 640));
      sub_1004BBBC8(v29, v28);
      if (v30 + 1 == v31)
        goto LABEL_4;
    }
    sub_1004E90B0(v0 + 240, v0 + 160);
    sub_100C14CC0(v0 + 240);
    v49 = *(_QWORD *)(v0 + 184);
    v50 = *(_QWORD *)(v0 + 192);
    sub_1004BB5A4((_QWORD *)(v0 + 160), v49);
    v51 = *(int **)(v50 + 16);
    v71 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v51 + *v51);
    v52 = (_QWORD *)swift_task_alloc(v51[1]);
    *(_QWORD *)(v0 + 648) = v52;
    *v52 = v0;
    v52[1] = sub_100C13200;
    v53 = v27;
    v54 = v49;
    return v71(v53, v54, v50);
  }
}

uint64_t sub_100C13CC4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  int *v47;
  _QWORD *v48;
  uint64_t (*v49)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 720);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 200));
  v2 = (void *)static OS_os_log.realTimeSync;
  v3 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v3, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  swift_getErrorValue(v1, v0 + 520, v0 + 416);
  v5 = *(_QWORD *)(v0 + 424);
  v6 = *(_QWORD *)(v0 + 432);
  v7 = v2;
  v8 = Error.localizedDescription.getter(v5, v6);
  v10 = v9;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v11 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v11;
  *(_QWORD *)(inited + 32) = v8;
  *(_QWORD *)(inited + 40) = v10;
  v12 = static os_log_type_t.error.getter(v11);
  sub_100A06EBC((uint64_t)v7, &_mh_execute_header, v12, "Cannot transfer changes over UDP with error %@", 46, 2, inited);
  swift_setDeallocating(inited);
  v13 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v13);

  swift_errorRelease(v1);
  v14 = *(_QWORD *)(v0 + 696);
  v15 = *(_QWORD *)(v0 + 688);
  v16 = *(_QWORD *)(v0 + 680);
  v17 = *(_QWORD *)(v0 + 672);
  swift_release(*(_QWORD *)(v0 + 704));
  sub_1004BBBC8(v15, v14);
  if (v16 + 1 == v17)
  {
LABEL_4:
    swift_bridgeObjectRelease();
    v32 = *(_QWORD *)(v0 + 528);
    *(_BYTE *)(v32 + 209) = 0;
    v33 = *(_QWORD *)(v0 + 560);
    if ((*(_BYTE *)(v32 + 208) & 1) != 0)
    {
      v34 = *(_QWORD *)(v0 + 536);
      v35 = *(_QWORD *)(v0 + 528);
      *(_BYTE *)(v32 + 208) = 0;
      v36 = type metadata accessor for TaskPriority(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v34, 1, 1, v36);
      v37 = sub_100A63480();
      v38 = (_QWORD *)swift_allocObject(&unk_10129B380, 40, 7);
      v38[2] = v35;
      v38[3] = v37;
      v38[4] = v35;
      swift_retain_n(v35, 2);
      v39 = sub_100521B98(v34, (uint64_t)&unk_1013FEE98, (uint64_t)v38);
      swift_release(v33);
      v33 = v39;
    }
    v40 = *(_QWORD *)(v0 + 544);
    swift_release(v33);
    CRLAnalyticsOSSignpostManager.endSignpostInterval(for:)(21, 1);
    v41 = (id)static OS_os_log.realTimeSync;
    v43 = static os_log_type_t.default.getter(v42);
    sub_100A06EBC((uint64_t)v41, &_mh_execute_header, v43, "Finished transferring realtime changes", 38, 2, (uint64_t)_swiftEmptyArrayStorage);
    swift_unknownObjectRelease(v40);

    swift_task_dealloc(*(_QWORD *)(v0 + 536));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    while (1)
    {
      v18 = *(_QWORD *)(v0 + 680) + 1;
      *(_QWORD *)(v0 + 680) = v18;
      v19 = (_QWORD *)(*(_QWORD *)(v0 + 664) + 24 * v18);
      v20 = *(_QWORD *)(v0 + 528) + 168;
      v21 = v19[4];
      v22 = v19[5];
      *(_QWORD *)(v0 + 688) = v22;
      v23 = v19[6];
      *(_QWORD *)(v0 + 696) = v23;
      v24 = sub_1004B804C(&qword_10140AC48);
      v25 = swift_allocObject(v24, 56, 7);
      *(_OWORD *)(v25 + 16) = xmmword_100EF5E40;
      *(_QWORD *)(v25 + 32) = v21;
      *(_QWORD *)(v25 + 40) = v22;
      *(_QWORD *)(v25 + 48) = v23;
      v26 = type metadata accessor for CRLRealTimeMessage();
      v27 = swift_allocObject(v26, 32, 7);
      *(_QWORD *)(v0 + 704) = v27;
      *(_QWORD *)(v27 + 16) = 0;
      *(_QWORD *)(v27 + 24) = v25;
      sub_1004BE310(v22, v23);
      sub_1004BE310(v22, v23);
      sub_100C14C78(v20, v0 + 280);
      if (*(_QWORD *)(v0 + 304))
        break;
      sub_100C14CC0(v0 + 280);
      v28 = *(_QWORD *)(v0 + 696);
      v29 = *(_QWORD *)(v0 + 688);
      v30 = *(_QWORD *)(v0 + 680);
      v31 = *(_QWORD *)(v0 + 672);
      swift_release(*(_QWORD *)(v0 + 704));
      sub_1004BBBC8(v29, v28);
      if (v30 + 1 == v31)
        goto LABEL_4;
    }
    sub_1004E90B0(v0 + 280, v0 + 200);
    sub_100C14CC0(v0 + 280);
    v45 = *(_QWORD *)(v0 + 224);
    v46 = *(_QWORD *)(v0 + 232);
    sub_1004BB5A4((_QWORD *)(v0 + 200), v45);
    v47 = *(int **)(v46 + 8);
    v49 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v47 + *v47);
    v48 = (_QWORD *)swift_task_alloc(v47[1]);
    *(_QWORD *)(v0 + 712) = v48;
    *v48 = v0;
    v48[1] = sub_100C140C4;
    return v49(v27, v45, v46);
  }
}

uint64_t sub_100C140C4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 712);
  *(_QWORD *)(*v1 + 720) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_100C13CC4;
  else
    v4 = sub_100C14128;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 528), 0);
}

uint64_t sub_100C14128()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  int *v34;
  _QWORD *v35;
  uint64_t (*v36)(uint64_t, uint64_t, uint64_t);

  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 200));
  v1 = *(_QWORD *)(v0 + 696);
  v2 = *(_QWORD *)(v0 + 688);
  v3 = *(_QWORD *)(v0 + 680);
  v4 = *(_QWORD *)(v0 + 672);
  swift_release(*(_QWORD *)(v0 + 704));
  sub_1004BBBC8(v2, v1);
  if (v3 + 1 == v4)
  {
LABEL_4:
    swift_bridgeObjectRelease();
    v19 = *(_QWORD *)(v0 + 528);
    *(_BYTE *)(v19 + 209) = 0;
    v20 = *(_QWORD *)(v0 + 560);
    if ((*(_BYTE *)(v19 + 208) & 1) != 0)
    {
      v21 = *(_QWORD *)(v0 + 536);
      v22 = *(_QWORD *)(v0 + 528);
      *(_BYTE *)(v19 + 208) = 0;
      v23 = type metadata accessor for TaskPriority(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v21, 1, 1, v23);
      v24 = sub_100A63480();
      v25 = (_QWORD *)swift_allocObject(&unk_10129B380, 40, 7);
      v25[2] = v22;
      v25[3] = v24;
      v25[4] = v22;
      swift_retain_n(v22, 2);
      v26 = sub_100521B98(v21, (uint64_t)&unk_1013FEE98, (uint64_t)v25);
      swift_release(v20);
      v20 = v26;
    }
    v27 = *(_QWORD *)(v0 + 544);
    swift_release(v20);
    CRLAnalyticsOSSignpostManager.endSignpostInterval(for:)(21, 1);
    v28 = (id)static OS_os_log.realTimeSync;
    v30 = static os_log_type_t.default.getter(v29);
    sub_100A06EBC((uint64_t)v28, &_mh_execute_header, v30, "Finished transferring realtime changes", 38, 2, (uint64_t)_swiftEmptyArrayStorage);
    swift_unknownObjectRelease(v27);

    swift_task_dealloc(*(_QWORD *)(v0 + 536));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    while (1)
    {
      v5 = *(_QWORD *)(v0 + 680) + 1;
      *(_QWORD *)(v0 + 680) = v5;
      v6 = (_QWORD *)(*(_QWORD *)(v0 + 664) + 24 * v5);
      v7 = *(_QWORD *)(v0 + 528) + 168;
      v8 = v6[4];
      v9 = v6[5];
      *(_QWORD *)(v0 + 688) = v9;
      v10 = v6[6];
      *(_QWORD *)(v0 + 696) = v10;
      v11 = sub_1004B804C(&qword_10140AC48);
      v12 = swift_allocObject(v11, 56, 7);
      *(_OWORD *)(v12 + 16) = xmmword_100EF5E40;
      *(_QWORD *)(v12 + 32) = v8;
      *(_QWORD *)(v12 + 40) = v9;
      *(_QWORD *)(v12 + 48) = v10;
      v13 = type metadata accessor for CRLRealTimeMessage();
      v14 = swift_allocObject(v13, 32, 7);
      *(_QWORD *)(v0 + 704) = v14;
      *(_QWORD *)(v14 + 16) = 0;
      *(_QWORD *)(v14 + 24) = v12;
      sub_1004BE310(v9, v10);
      sub_1004BE310(v9, v10);
      sub_100C14C78(v7, v0 + 280);
      if (*(_QWORD *)(v0 + 304))
        break;
      sub_100C14CC0(v0 + 280);
      v15 = *(_QWORD *)(v0 + 696);
      v16 = *(_QWORD *)(v0 + 688);
      v17 = *(_QWORD *)(v0 + 680);
      v18 = *(_QWORD *)(v0 + 672);
      swift_release(*(_QWORD *)(v0 + 704));
      sub_1004BBBC8(v16, v15);
      if (v17 + 1 == v18)
        goto LABEL_4;
    }
    sub_1004E90B0(v0 + 280, v0 + 200);
    sub_100C14CC0(v0 + 280);
    v32 = *(_QWORD *)(v0 + 224);
    v33 = *(_QWORD *)(v0 + 232);
    sub_1004BB5A4((_QWORD *)(v0 + 200), v32);
    v34 = *(int **)(v33 + 8);
    v36 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v34 + *v34);
    v35 = (_QWORD *)swift_task_alloc(v34[1]);
    *(_QWORD *)(v0 + 712) = v35;
    *v35 = v0;
    v35[1] = sub_100C140C4;
    return v36(v14, v32, v33);
  }
}

uint64_t sub_100C14440(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v3 + 400) = a2;
  *(_QWORD *)(v3 + 352) = a1;
  *(_QWORD *)(v3 + 360) = v2;
  return swift_task_switch(sub_100C1445C, v2, 0);
}

uint64_t sub_100C1445C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;
  uint64_t (*v8)();
  int *v9;
  int *v11;

  v1 = *(_QWORD *)(v0 + 360);
  v2 = v1 + 128;
  if (*(_BYTE *)(v0 + 400) == 1)
  {
    v3 = v0 + 168;
    swift_beginAccess(v1 + 128, v0 + 320, 0, 0);
    sub_100C14C78(v2, v0 + 168);
    if (*(_QWORD *)(v0 + 192))
    {
      sub_1004E90B0(v0 + 168, v0 + 88);
      sub_100C14CC0(v0 + 168);
      v4 = *(_QWORD *)(v0 + 112);
      v5 = *(_QWORD *)(v0 + 120);
      sub_1004BB5A4((_QWORD *)(v0 + 88), v4);
      v6 = *(int **)(v5 + 16);
      v11 = (int *)((char *)v6 + *v6);
      v7 = (_QWORD *)swift_task_alloc(v6[1]);
      *(_QWORD *)(v0 + 368) = v7;
      v8 = sub_100C145DC;
LABEL_6:
      *v7 = v0;
      v7[1] = v8;
      return ((uint64_t (*)(_QWORD, uint64_t, uint64_t))v11)(*(_QWORD *)(v0 + 352), v4, v5);
    }
  }
  else
  {
    v3 = v0 + 208;
    swift_beginAccess(v1 + 128, v0 + 248, 0, 0);
    sub_100C14C78(v2, v0 + 208);
    if (*(_QWORD *)(v0 + 232))
    {
      sub_1004E90B0(v0 + 208, v0 + 128);
      sub_100C14CC0(v0 + 208);
      v4 = *(_QWORD *)(v0 + 152);
      v5 = *(_QWORD *)(v0 + 160);
      sub_1004BB5A4((_QWORD *)(v0 + 128), v4);
      v9 = *(int **)(v5 + 8);
      v11 = (int *)((char *)v9 + *v9);
      v7 = (_QWORD *)swift_task_alloc(v9[1]);
      *(_QWORD *)(v0 + 384) = v7;
      v8 = sub_100C14670;
      goto LABEL_6;
    }
  }
  sub_100C14CC0(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100C145DC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 368);
  *(_QWORD *)(*v1 + 376) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_100C14704;
  else
    v4 = sub_100C14640;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 360), 0);
}

uint64_t sub_100C14640()
{
  uint64_t v0;

  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 88));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100C14670()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 384);
  *(_QWORD *)(*v1 + 392) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_100C14878;
  else
    v4 = sub_100C146D4;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 360), 0);
}

uint64_t sub_100C146D4()
{
  uint64_t v0;

  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 128));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100C14704()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;

  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 88));
  v1 = *(_QWORD *)(v0 + 376);
  if (qword_1013DD888 != -1)
    swift_once(&qword_1013DD888, sub_100A05DE4);
  swift_beginAccess(&static OS_os_log.realTimeSync, v0 + 296, 0, 0);
  v2 = (void *)static OS_os_log.realTimeSync;
  v3 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v3, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  swift_getErrorValue(v1, v0 + 344, v0 + 272);
  v5 = *(_QWORD *)(v0 + 280);
  v6 = *(_QWORD *)(v0 + 288);
  v7 = v2;
  v8 = Error.localizedDescription.getter(v5, v6);
  v10 = v9;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v11 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v11;
  *(_QWORD *)(inited + 32) = v8;
  *(_QWORD *)(inited + 40) = v10;
  v12 = static os_log_type_t.error.getter(v11);
  sub_100A06EBC((uint64_t)v7, &_mh_execute_header, v12, "Cannot transfer changes with error %@", 37, 2, inited);
  swift_setDeallocating(inited);
  v13 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v13);

  swift_errorRelease(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100C14878()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;

  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 128));
  v1 = *(_QWORD *)(v0 + 392);
  if (qword_1013DD888 != -1)
    swift_once(&qword_1013DD888, sub_100A05DE4);
  swift_beginAccess(&static OS_os_log.realTimeSync, v0 + 296, 0, 0);
  v2 = (void *)static OS_os_log.realTimeSync;
  v3 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v3, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  swift_getErrorValue(v1, v0 + 344, v0 + 272);
  v5 = *(_QWORD *)(v0 + 280);
  v6 = *(_QWORD *)(v0 + 288);
  v7 = v2;
  v8 = Error.localizedDescription.getter(v5, v6);
  v10 = v9;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v11 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v11;
  *(_QWORD *)(inited + 32) = v8;
  *(_QWORD *)(inited + 40) = v10;
  v12 = static os_log_type_t.error.getter(v11);
  sub_100A06EBC((uint64_t)v7, &_mh_execute_header, v12, "Cannot transfer changes with error %@", 37, 2, inited);
  swift_setDeallocating(inited);
  v13 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v13);

  swift_errorRelease(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100C149EC()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_10140AAA4);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1004CFD00;
  return sub_100C11CA4();
}

uint64_t sub_100C14A34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[20] = a2;
  v3[21] = v2;
  v3[19] = a1;
  return swift_task_switch(sub_100C14A50, v2, 0);
}

uint64_t sub_100C14A50()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t inited;
  id v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t Strong;
  _QWORD *v11;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 152) + 16);
  if (v1)
  {
    if (qword_1013DD888 != -1)
      swift_once(&qword_1013DD888, sub_100A05DE4);
    swift_beginAccess(&static OS_os_log.realTimeSync, v0 + 128, 0, 0);
    v2 = (void *)static OS_os_log.realTimeSync;
    v3 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v3, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
    *(_QWORD *)(inited + 56) = &type metadata for UInt64;
    *(_QWORD *)(inited + 64) = &protocol witness table for UInt64;
    *(_QWORD *)(inited + 32) = v1;
    *(_QWORD *)(inited + 96) = &type metadata for UInt64;
    *(_QWORD *)(inited + 104) = &protocol witness table for UInt64;
    *(_QWORD *)(inited + 72) = 0;
    v5 = v2;
    v7 = static os_log_type_t.default.getter(v6);
    sub_100A06EBC((uint64_t)v5, &_mh_execute_header, v7, "Received a message with version (%d) that is greater than the last supported version (%d) by this device. Dropping the message", 126, 2, inited);
    swift_setDeallocating(inited);
    v8 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 2, v8);

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + 168) + 112);
  *(_QWORD *)(v0 + 176) = Strong;
  if (!Strong)
    return (*(uint64_t (**)(void))(v0 + 8))();
  v11 = (_QWORD *)swift_task_alloc(dword_10140BA94);
  *(_QWORD *)(v0 + 184) = v11;
  *v11 = v0;
  v11[1] = sub_100C14BD4;
  return sub_100C511AC(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160));
}

uint64_t sub_100C14BD4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *(_QWORD *)(*v0 + 176);
  v3 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 184));
  swift_unknownObjectRelease(v1);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_100C14C24()
{
  uint64_t v0;

  sub_1004CBB0C(v0 + 112);
  sub_100C14CC0(v0 + 128);
  sub_100C14CC0(v0 + 168);
  swift_defaultActor_destroy(v0);
  return swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for CRLGroupSessionSyncController()
{
  return objc_opt_self(_TtC8Freeform29CRLGroupSessionSyncController);
}

uint64_t sub_100C14C78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_10140AC40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100C14CC0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B804C(&qword_10140AC40);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100C14D08()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)swift_task_alloc(dword_10140AC54);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1004CFD00;
  v2 = (_QWORD *)swift_task_alloc(dword_10140AAA4);
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_1004CFD00;
  return sub_100C11CA4();
}

uint64_t sub_100C14D70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_10140AC40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100C14DB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  type metadata accessor for AppDependencyManager(0);
  v0 = static AppDependencyManager.shared.getter();
  v1 = type metadata accessor for CRLAppIntentsManager();
  result = swift_allocObject(v1, 24, 7);
  *(_QWORD *)(result + 16) = v0;
  qword_1014810E8 = result;
  return result;
}

uint64_t type metadata accessor for CRLAppIntentsManager()
{
  return objc_opt_self(_TtC8Freeform20CRLAppIntentsManager);
}

uint64_t sub_100C14E20(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[18] = a1;
  v2[19] = a2;
  v3 = type metadata accessor for MainActor(0);
  v2[20] = v3;
  v4 = static MainActor.shared.getter(v3);
  v2[21] = v4;
  v2[22] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  v2[23] = v5;
  v2[24] = v6;
  return swift_task_switch(sub_100C14E9C, v5, v6);
}

uint64_t sub_100C14E9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 152) + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_entityStore);
  *(_QWORD *)(v0 + 200) = v1;
  if (v1)
  {
    swift_retain(v1);
    return swift_task_switch(sub_100C14EF4, v1, 0);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100C14EF4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[25];
  v2 = v0[18];
  swift_retain(v1);
  v0[26] = sub_100C80904(v2, v1);
  v0[27] = 0;
  swift_release(v1);
  swift_release(v0[25]);
  return swift_task_switch(sub_100C14F74, v0[23], v0[24]);
}

uint64_t sub_100C14F74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 160);
  swift_release(*(_QWORD *)(v0 + 176));
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_100C14FCC, v2, v3);
}

uint64_t sub_100C14FCC()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_release(*(_QWORD *)(v0 + 168));
  return (*(uint64_t (**)(_QWORD, __n128))(v0 + 8))(*(_QWORD *)(v0 + 208), v1);
}

uint64_t sub_100C15004()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0[25];
  v2 = v0[20];
  swift_release(v0[22]);
  swift_release(v1);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_100C15070, v3, v4);
}

uint64_t sub_100C15070()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;

  swift_release(*(_QWORD *)(v0 + 168));
  if (qword_1013DD838 != -1)
    swift_once(&qword_1013DD838, sub_100A04F30);
  v1 = *(_QWORD *)(v0 + 216);
  swift_beginAccess(&static OS_os_log.appIntents, v0 + 88, 0, 0);
  v2 = (void *)static OS_os_log.appIntents;
  v3 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v3, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  swift_getErrorValue(v1, v0 + 136, v0 + 112);
  v5 = *(_QWORD *)(v0 + 120);
  v6 = *(_QWORD *)(v0 + 128);
  v7 = v2;
  v8 = Error.publicDescription.getter(v5, v6);
  v10 = v9;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v11 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v11;
  *(_QWORD *)(inited + 32) = v8;
  *(_QWORD *)(inited + 40) = v10;
  v12 = static os_log_type_t.error.getter(v11);
  sub_100A06EBC((uint64_t)v7, &_mh_execute_header, v12, "Error fetching entities for requested identifiers: %@", 53, 2, inited);
  swift_setDeallocating(inited);
  v13 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v13);

  swift_willThrow(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100C151E4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[8] = a1;
  v2[9] = a2;
  v3 = type metadata accessor for MainActor(0);
  v2[10] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  return swift_task_switch(sub_100C15250, v4, v5);
}

uint64_t sub_100C15250()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;

  v1 = *(_QWORD *)(v0 + 64);
  swift_release(*(_QWORD *)(v0 + 80));
  sub_1004E90B0(v1, v0 + 16);
  v2 = sub_1004B804C(&qword_10140AD10);
  if (swift_dynamicCast(v0 + 56, v0 + 16, v2, &type metadata for CRLBoardLibraryHeadlessControllerDependency, 6))
  {
    v3 = (char *)*(id *)(v0 + 56);
    sub_100CA2F0C(v3);

  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"headlessControllerWillClose(_:)", 31, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/AppIntents/CRLAppIntentsManager.swift", 91, 2, 234, "This dependency should interact only with a CRLBoardLibraryHeadlessControllerDependency implementation", 102, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"headlessControllerWillClose(_:)", 31, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/AppIntents/CRLAppIntentsManager.swift", 91, 2u, 234, (uint64_t)"This dependency should interact only with a CRLBoardLibraryHeadlessControllerDependency implementation", 102, 2u);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

ValueMetadata *type metadata accessor for CRLBoardLibraryHeadlessControllerDependency()
{
  return &type metadata for CRLBoardLibraryHeadlessControllerDependency;
}

ValueMetadata *type metadata accessor for CRLBoardLibraryProvidingDependency()
{
  return &type metadata for CRLBoardLibraryProvidingDependency;
}

uint64_t sub_100C153B8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[5] = a1;
  v2[6] = v1;
  v3 = type metadata accessor for MainActor(0);
  v2[7] = v3;
  v4 = static MainActor.shared.getter(v3);
  v2[8] = v4;
  v2[9] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  v2[10] = v5;
  v2[11] = v6;
  return swift_task_switch(sub_100C15434, v5, v6);
}

uint64_t sub_100C15434()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 48) + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_entityStore);
  *(_QWORD *)(v0 + 96) = v1;
  if (v1)
  {
    swift_retain(v1);
    return swift_task_switch(sub_100C1548C, v1, 0);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100C1548C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0[12];
  swift_beginAccess(v1 + 120, v0 + 2, 0, 0);
  v2 = *(_QWORD *)(v1 + 120);
  v0[13] = v2;
  v3 = v0[10];
  v4 = v0[11];
  swift_bridgeObjectRetain(v2);
  return swift_task_switch(sub_100C154E8, v3, v4);
}

uint64_t sub_100C154E8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0[12];
  v2 = v0[7];
  swift_release(v0[9]);
  swift_release(v1);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_100C15554, v3, v4);
}

uint64_t sub_100C15554()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  double *v12;
  uint64_t v13;
  uint64_t v14;
  double *v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  double *v20;

  v1 = *(_QWORD *)(v0 + 104);
  swift_release(*(_QWORD *)(v0 + 64));
  swift_bridgeObjectRetain(v1);
  v3 = sub_1005FF894(v2);
  swift_bridgeObjectRelease();
  v20 = v3;
  sub_100C17000((_QWORD **)&v20);
  v4 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRelease();
  v5 = sub_100C19B2C(v4, (uint64_t)v20);
  v7 = v6;
  v9 = v8;
  v11 = v10;
  if ((v10 & 1) == 0)
    goto LABEL_2;
  v13 = type metadata accessor for __ContiguousArrayStorageBase(0);
  v14 = swift_unknownObjectRetain_n(v5, 2);
  v15 = (double *)swift_dynamicCastClass(v14, v13);
  if (!v15)
  {
    swift_unknownObjectRelease(v5);
    v15 = _swiftEmptyArrayStorage;
  }
  v16 = *((_QWORD *)v15 + 2);
  swift_release(v15);
  if (__OFSUB__(v11 >> 1, v9))
  {
    __break(1u);
    goto LABEL_11;
  }
  v17 = v5;
  if (v16 != (v11 >> 1) - v9)
  {
LABEL_11:
    swift_unknownObjectRelease(v17);
LABEL_2:
    v12 = (double *)sub_1005FF880(v5, v7, v9, v11);
    goto LABEL_9;
  }
  v12 = (double *)swift_dynamicCastClass(v5, v13);
  if (!v12)
  {
    swift_unknownObjectRelease(v5);
    v12 = _swiftEmptyArrayStorage;
  }
LABEL_9:
  v18 = swift_unknownObjectRelease(v5);
  return (*(uint64_t (**)(double *, __n128))(v0 + 8))(v12, v18);
}

uint64_t sub_100C156C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[9] = a2;
  v3[10] = v2;
  v3[8] = a1;
  v4 = type metadata accessor for Logger(0);
  v3[11] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[12] = v5;
  v3[13] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100C15728, 0, 0);
}

uint64_t sub_100C15728()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v0 + 112) = *sub_1004BB5A4(*(_QWORD **)(v0 + 72), *(_QWORD *)(*(_QWORD *)(v0 + 72) + 24));
  v1 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 120) = v1;
  v2 = static MainActor.shared.getter(v1);
  *(_QWORD *)(v0 + 128) = v2;
  *(_QWORD *)(v0 + 136) = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  *(_QWORD *)(v0 + 144) = v3;
  *(_QWORD *)(v0 + 152) = v4;
  return swift_task_switch(sub_100C157B4, v3, v4);
}

uint64_t sub_100C157B4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = v1[14];
  v3 = static MainActor.shared.getter(a1);
  v1[20] = v3;
  v4 = swift_task_alloc(32);
  v1[21] = v4;
  *(_QWORD *)(v4 + 16) = v2;
  v5 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  v1[22] = v5;
  *v5 = v1;
  v5[1] = sub_100C15864;
  return withCheckedContinuation<A>(isolation:function:_:)(v5, v3, &protocol witness table for MainActor, 0xD00000000000001BLL, 0x8000000100FB5520, sub_100C186D4, v4, (char *)&type metadata for () + 8);
}

uint64_t sub_100C15864()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 168);
  v3 = *(_QWORD *)(*v0 + 160);
  swift_task_dealloc(*(_QWORD *)(*v0 + 176));
  swift_release(v3);
  swift_task_dealloc(v2);
  return swift_task_switch(sub_100C158CC, *(_QWORD *)(v1 + 144), *(_QWORD *)(v1 + 152));
}

uint64_t sub_100C158CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 120);
  swift_release(*(_QWORD *)(v0 + 136));
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_100C15924, v2, v3);
}

uint64_t sub_100C15924()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 128));
  return swift_task_switch(sub_100C15960, 0, 0);
}

uint64_t sub_100C15960()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *sub_1004BB5A4(*(_QWORD **)(v0 + 72), *(_QWORD *)(*(_QWORD *)(v0 + 72) + 24));
  v2 = (_QWORD *)swift_task_alloc(dword_10140AD1C);
  *(_QWORD *)(v0 + 184) = v2;
  *v2 = v0;
  v2[1] = sub_100C159C0;
  return sub_100C14E20(*(_QWORD *)(v0 + 64), v1);
}

uint64_t sub_100C159C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(*v2 + 184);
  v5 = *v2;
  *(_QWORD *)(v5 + 192) = v1;
  swift_task_dealloc(v4);
  if (v1)
    return swift_task_switch(sub_100C15A48, 0, 0);
  swift_task_dealloc(*(_QWORD *)(v5 + 104));
  return (*(uint64_t (**)(uint64_t))(v5 + 8))(a1);
}

uint64_t sub_100C15A48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 192);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 16))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88));
  swift_bridgeObjectRetain(v1);
  swift_errorRetain(v2);
  swift_bridgeObjectRetain(v1);
  v3 = swift_errorRetain(v2);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v20 = *(_QWORD *)(v0 + 192);
    v22 = *(_QWORD *)(v0 + 96);
    v23 = *(_QWORD *)(v0 + 88);
    v24 = *(_QWORD *)(v0 + 104);
    v6 = *(_QWORD *)(v0 + 64);
    v7 = swift_slowAlloc(22, -1);
    v21 = swift_slowAlloc(64, -1);
    v25 = v21;
    *(_DWORD *)v7 = 136315394;
    type metadata accessor for CRLBoardIdentifier(0);
    v8 = swift_bridgeObjectRetain(v6);
    v9 = Array.description.getter(v8);
    v11 = v10;
    swift_bridgeObjectRelease(v6);
    *(_QWORD *)(v0 + 40) = sub_100BF0F1C(v9, v11, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v0 + 48, v7 + 4, v7 + 12);
    swift_bridgeObjectRelease(v11);
    swift_bridgeObjectRelease_n(v6, 2);
    *(_WORD *)(v7 + 12) = 2080;
    swift_getErrorValue(v20, v0 + 48, v0 + 16);
    v12 = Error.publicDescription.getter(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
    v14 = v13;
    *(_QWORD *)(v0 + 56) = sub_100BF0F1C(v12, v13, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 56, v0 + 64, v7 + 14, v7 + 22);
    swift_bridgeObjectRelease(v14);
    swift_errorRelease(v20);
    swift_errorRelease(v20);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to fetch entities for identifiers: %s %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy(v21, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v21, -1, -1);
    swift_slowDealloc(v7, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v24, v23);
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 192);
    v17 = *(_QWORD *)(v0 + 96);
    v16 = *(_QWORD *)(v0 + 104);
    v18 = *(_QWORD *)(v0 + 88);
    swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 64), 2);
    swift_errorRelease(v15);
    swift_errorRelease(v15);

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  }
  swift_errorRelease(*(_QWORD *)(v0 + 192));
  swift_task_dealloc(*(_QWORD *)(v0 + 104));
  return (*(uint64_t (**)(double *))(v0 + 8))(_swiftEmptyArrayStorage);
}

uint64_t sub_100C15CF0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[23] = a1;
  v2[24] = v1;
  v3 = type metadata accessor for Logger(0);
  v2[25] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[26] = v4;
  v2[27] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100C15D50, 0, 0);
}

uint64_t sub_100C15D50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v0 + 224) = *sub_1004BB5A4(*(_QWORD **)(v0 + 184), *(_QWORD *)(*(_QWORD *)(v0 + 184) + 24));
  v1 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 232) = v1;
  v2 = static MainActor.shared.getter(v1);
  *(_QWORD *)(v0 + 240) = v2;
  *(_QWORD *)(v0 + 248) = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  *(_QWORD *)(v0 + 256) = v3;
  *(_QWORD *)(v0 + 264) = v4;
  return swift_task_switch(sub_100C15DDC, v3, v4);
}

uint64_t sub_100C15DDC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = v1[28];
  v3 = static MainActor.shared.getter(a1);
  v1[34] = v3;
  v4 = swift_task_alloc(32);
  v1[35] = v4;
  *(_QWORD *)(v4 + 16) = v2;
  v5 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  v1[36] = v5;
  *v5 = v1;
  v5[1] = sub_100C15E8C;
  return withCheckedContinuation<A>(isolation:function:_:)(v5, v3, &protocol witness table for MainActor, 0xD00000000000001BLL, 0x8000000100FB5520, sub_100C186D4, v4, (char *)&type metadata for () + 8);
}

uint64_t sub_100C15E8C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 280);
  v3 = *(_QWORD *)(*v0 + 272);
  swift_task_dealloc(*(_QWORD *)(*v0 + 288));
  swift_release(v3);
  swift_task_dealloc(v2);
  return swift_task_switch(sub_100C15EF4, *(_QWORD *)(v1 + 256), *(_QWORD *)(v1 + 264));
}

uint64_t sub_100C15EF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 232);
  swift_release(*(_QWORD *)(v0 + 248));
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_100C15F4C, v2, v3);
}

uint64_t sub_100C15F4C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 240));
  return swift_task_switch(sub_100C15F88, 0, 0);
}

uint64_t sub_100C15F88()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t);

  v1 = sub_1004BB5A4(*(_QWORD **)(v0 + 184), *(_QWORD *)(*(_QWORD *)(v0 + 184) + 24));
  *(_QWORD *)(v0 + 296) = static MainActor.shared.getter(v1);
  v4 = (uint64_t (*)(uint64_t))((char *)&dword_10140AD30 + dword_10140AD30);
  v2 = (_QWORD *)swift_task_alloc(unk_10140AD34);
  *(_QWORD *)(v0 + 304) = v2;
  *v2 = v0;
  v2[1] = sub_100C16008;
  return v4(10);
}

uint64_t sub_100C16008(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)();
  uint64_t v11;

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 304);
  *(_QWORD *)(*v2 + 312) = v1;
  swift_task_dealloc(v5);
  v6 = *(_QWORD *)(v4 + 232);
  if (v1)
  {
    v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
    v9 = v8;
    v10 = sub_100C160F4;
  }
  else
  {
    *(_QWORD *)(v4 + 320) = a1;
    v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
    v9 = v11;
    v10 = sub_100C160B0;
  }
  return swift_task_switch(v10, v7, v9);
}

uint64_t sub_100C160B0()
{
  uint64_t v0;
  uint64_t v1;

  swift_release(*(_QWORD *)(v0 + 296));
  v1 = *(_QWORD *)(v0 + 320);
  swift_task_dealloc(*(_QWORD *)(v0 + 216));
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_100C160F4()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;

  swift_release(v0[37]);
  if (qword_1013DD838 != -1)
    swift_once(&qword_1013DD838, sub_100A04F30);
  v1 = v0[39];
  swift_beginAccess(&static OS_os_log.appIntents, v0 + 11, 0, 0);
  v2 = (void *)static OS_os_log.appIntents;
  v3 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v3, v0 + 2);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  swift_getErrorValue(v1, v0 + 20, v0 + 14);
  v5 = v0[15];
  v6 = v0[16];
  v7 = v2;
  v8 = Error.publicDescription.getter(v5, v6);
  v10 = v9;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v11 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v11;
  *(_QWORD *)(inited + 32) = v8;
  *(_QWORD *)(inited + 40) = v10;
  v12 = static os_log_type_t.error.getter(v11);
  sub_100A06EBC((uint64_t)v7, &_mh_execute_header, v12, "Error fetching suggested entities: %@", 37, 2, inited);
  swift_setDeallocating(inited);
  v13 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v13);

  swift_willThrow(v14);
  return swift_task_switch(sub_100C16270, 0, 0);
}

uint64_t sub_100C16270()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 312);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 208) + 16))(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 200));
  swift_errorRetain(v1);
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(_QWORD *)(v0 + 312);
    v16 = *(_QWORD *)(v0 + 208);
    v17 = *(_QWORD *)(v0 + 200);
    v18 = *(_QWORD *)(v0 + 216);
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    v19 = v7;
    *(_DWORD *)v6 = 136315138;
    swift_getErrorValue(v5, v0 + 168, v0 + 136);
    v8 = Error.publicDescription.getter(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152));
    v10 = v9;
    *(_QWORD *)(v0 + 176) = sub_100BF0F1C(v8, v9, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 176, v0 + 184, v6 + 4, v6 + 12);
    swift_bridgeObjectRelease(v10);
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Failed to fetch suggested entities %s", v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v18, v17);
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 312);
    v13 = *(_QWORD *)(v0 + 208);
    v12 = *(_QWORD *)(v0 + 216);
    v14 = *(_QWORD *)(v0 + 200);
    swift_errorRelease(v11);
    swift_errorRelease(v11);

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  swift_errorRelease(*(_QWORD *)(v0 + 312));
  swift_task_dealloc(*(_QWORD *)(v0 + 216));
  return (*(uint64_t (**)(double *))(v0 + 8))(_swiftEmptyArrayStorage);
}

uint64_t sub_100C16478(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  v4[9] = a3;
  v4[10] = v3;
  v4[7] = a1;
  v4[8] = a2;
  v5 = type metadata accessor for Logger(0);
  v4[11] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[12] = v6;
  v4[13] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C((uint64_t *)&unk_1013E3830);
  v4[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v4[15] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v4[16] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[17] = swift_task_alloc(v10);
  v4[18] = swift_task_alloc(v10);
  v11 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  v4[19] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100C16558, 0, 0);
}

uint64_t sub_100C16558()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v0 + 160) = *sub_1004BB5A4(*(_QWORD **)(v0 + 72), *(_QWORD *)(*(_QWORD *)(v0 + 72) + 24));
  v1 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 168) = v1;
  v2 = static MainActor.shared.getter(v1);
  *(_QWORD *)(v0 + 176) = v2;
  *(_QWORD *)(v0 + 184) = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  *(_QWORD *)(v0 + 192) = v3;
  *(_QWORD *)(v0 + 200) = v4;
  return swift_task_switch(sub_100C165E4, v3, v4);
}

uint64_t sub_100C165E4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = v1[20];
  v3 = static MainActor.shared.getter(a1);
  v1[26] = v3;
  v4 = swift_task_alloc(32);
  v1[27] = v4;
  *(_QWORD *)(v4 + 16) = v2;
  v5 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  v1[28] = v5;
  *v5 = v1;
  v5[1] = sub_100C16694;
  return withCheckedContinuation<A>(isolation:function:_:)(v5, v3, &protocol witness table for MainActor, 0xD00000000000001BLL, 0x8000000100FB5520, sub_1005A124C, v4, (char *)&type metadata for () + 8);
}

uint64_t sub_100C16694()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 216);
  v3 = *(_QWORD *)(*v0 + 208);
  swift_task_dealloc(*(_QWORD *)(*v0 + 224));
  swift_release(v3);
  swift_task_dealloc(v2);
  return swift_task_switch(sub_100C166FC, *(_QWORD *)(v1 + 192), *(_QWORD *)(v1 + 200));
}

uint64_t sub_100C166FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 168);
  swift_release(*(_QWORD *)(v0 + 184));
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_100C16754, v2, v3);
}

uint64_t sub_100C16754()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 176));
  return swift_task_switch(sub_100C16790, 0, 0);
}

uint64_t sub_100C16790()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = sub_1004BB5A4(*(_QWORD **)(v0 + 72), *(_QWORD *)(*(_QWORD *)(v0 + 72) + 24));
  *(_QWORD *)(v0 + 232) = v2;
  *(_QWORD *)(v0 + 240) = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_100C16800, v3, v4);
}

uint64_t sub_100C16800()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = (_QWORD *)v0[29];
  v2 = v0[19];
  swift_release(v0[30]);
  v3 = *(_QWORD *)(*v1 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_storeHierarchySnapshot);
  v4 = sub_1004B804C(&qword_1013E1790);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v2, 1, 5, v4);
  v5 = swift_task_alloc(32);
  *(_QWORD *)(v5 + 16) = v2;
  swift_bridgeObjectRetain(v3);
  sub_1007C2808(1, (uint64_t (*)(id))sub_1005A1254, v5, v3);
  v0[31] = v6;
  swift_bridgeObjectRelease();
  swift_task_dealloc(v5);
  sub_1004B84A4(v2, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  return swift_task_switch(sub_100C168D4, 0, 0);
}

void sub_100C168D4()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double *v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  unint64_t v22;

  v1 = *(void **)(v0 + 248);
  if (!v1)
  {
    v8 = _swiftEmptyArrayStorage;
LABEL_24:
    *(_QWORD *)(v0 + 256) = v8;
    v20 = sub_1004BB5A4(*(_QWORD **)(v0 + 72), *(_QWORD *)(*(_QWORD *)(v0 + 72) + 24));
    *(_QWORD *)(v0 + 264) = static MainActor.shared.getter(v20);
    v21 = (_QWORD *)swift_task_alloc(dword_10140E2D4);
    *(_QWORD *)(v0 + 272) = v21;
    *v21 = v0;
    v21[1] = sub_100C16B7C;
    sub_100CA73E8((uint64_t)v8, *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
    return;
  }
  v2 = objc_msgSend(v1, "children");
  v3 = type metadata accessor for CRLBoardLibraryViewModelItemNode(0);
  v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  if (!((unint64_t)v4 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v4);
    if (v5)
      goto LABEL_4;
LABEL_22:
    v8 = _swiftEmptyArrayStorage;
LABEL_23:
    swift_bridgeObjectRelease_n(v4, 2);
    goto LABEL_24;
  }
  if (v4 < 0)
    v19 = v4;
  else
    v19 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v4);
  v5 = _CocoaArrayWrapper.endIndex.getter(v19);
  if (!v5)
    goto LABEL_22;
LABEL_4:
  if (v5 >= 1)
  {
    v6 = 0;
    v7 = *(_QWORD *)(v0 + 128);
    v22 = v4 & 0xC000000000000001;
    v8 = _swiftEmptyArrayStorage;
    v9 = v4;
    do
    {
      if (v22)
        v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v4);
      else
        v10 = *(id *)(v4 + 8 * v6 + 32);
      v11 = v10;
      v13 = *(_QWORD *)(v0 + 112);
      v12 = *(_QWORD *)(v0 + 120);
      sub_1004B8460((uint64_t)v10 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item, v13, type metadata accessor for CRLBoardLibraryViewModel.Item);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v12);

      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v13, 1, v12) == 1)
      {
        sub_1006F00F4(*(_QWORD *)(v0 + 112));
        v4 = v9;
      }
      else
      {
        v15 = *(_QWORD *)(v0 + 136);
        v14 = *(_QWORD *)(v0 + 144);
        sub_1004B84E0(*(_QWORD *)(v0 + 112), v14, type metadata accessor for CRLBoardLibraryViewModel.Item);
        sub_1004B84E0(v14, v15, type metadata accessor for CRLBoardLibraryViewModel.Item);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v8 = (double *)sub_100D0FAA0(0, *((_QWORD *)v8 + 2) + 1, 1, (unint64_t)v8);
        v4 = v9;
        v17 = *((_QWORD *)v8 + 2);
        v16 = *((_QWORD *)v8 + 3);
        if (v17 >= v16 >> 1)
          v8 = (double *)sub_100D0FAA0(v16 > 1, v17 + 1, 1, (unint64_t)v8);
        v18 = *(_QWORD *)(v0 + 136);
        *((_QWORD *)v8 + 2) = v17 + 1;
        sub_1004B84E0(v18, (uint64_t)v8+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v17, type metadata accessor for CRLBoardLibraryViewModel.Item);
      }
      ++v6;
    }
    while (v5 != v6);
    goto LABEL_23;
  }
  __break(1u);
}

uint64_t sub_100C16B7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 272);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 168);
  *(_QWORD *)(*(_QWORD *)v1 + 280) = a1;
  swift_task_dealloc(v2);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  return swift_task_switch(sub_100C16BF4, v4, v5);
}

uint64_t sub_100C16BF4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 264));
  swift_bridgeObjectRelease();
  return swift_task_switch(sub_100C16C38, 0, 0);
}

uint64_t sub_100C16C38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 280);
  v2 = sub_1004BB5A4(*(_QWORD **)(v0 + 72), *(_QWORD *)(*(_QWORD *)(v0 + 72) + 24));
  v3 = sub_100BCDE20(v1);
  *(_QWORD *)(v0 + 288) = v3;
  swift_bridgeObjectRelease();
  v4 = *v2;
  v5 = (_QWORD *)swift_task_alloc(dword_10140AD1C);
  *(_QWORD *)(v0 + 296) = v5;
  *v5 = v0;
  v5[1] = sub_100C16CBC;
  return sub_100C14E20((uint64_t)v3, v4);
}

uint64_t sub_100C16CBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 296);
  *(_QWORD *)(*v2 + 304) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = sub_100C16DB4;
  }
  else
  {
    swift_bridgeObjectRelease();
    *(_QWORD *)(v4 + 312) = a1;
    v6 = sub_100C16D38;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_100C16D38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 312);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 136);
  v5 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 112);
  swift_task_dealloc(*(_QWORD *)(v0 + 152));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_100C16DB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v1 = *(_QWORD *)(v0 + 304);
  v3 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 88);
  v6 = swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v3 + 16))(v2, v5, v4, v6);
  swift_errorRetain(v1);
  v7 = swift_errorRetain(v1);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.error.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = *(_QWORD *)(v0 + 304);
    v25 = *(_QWORD *)(v0 + 96);
    v26 = *(_QWORD *)(v0 + 88);
    v27 = *(_QWORD *)(v0 + 104);
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    v12 = swift_slowAlloc(32, -1);
    v28 = v12;
    *(_DWORD *)v11 = 136315138;
    swift_getErrorValue(v10, v0 + 40, v0 + 16);
    v13 = Error.publicDescription.getter(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
    *(_QWORD *)(v0 + 48) = sub_100BF0F1C(v13, v14, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 48, v0 + 56, v11 + 4, v11 + 12);
    swift_bridgeObjectRelease();
    swift_errorRelease(v10);
    swift_errorRelease(v10);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Failed to fetch entities for the given query %s", v11, 0xCu);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v27, v26);
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 304);
    v17 = *(_QWORD *)(v0 + 96);
    v16 = *(_QWORD *)(v0 + 104);
    v18 = *(_QWORD *)(v0 + 88);
    swift_errorRelease(v15);
    swift_errorRelease(v15);

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  }
  v19 = *(_QWORD *)(v0 + 304);

  swift_errorRelease(v19);
  v20 = *(_QWORD *)(v0 + 144);
  v21 = *(_QWORD *)(v0 + 136);
  v23 = *(_QWORD *)(v0 + 104);
  v22 = *(_QWORD *)(v0 + 112);
  swift_task_dealloc(*(_QWORD *)(v0 + 152));
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  return (*(uint64_t (**)(double *))(v0 + 8))(_swiftEmptyArrayStorage);
}

void sub_100C17000(_QWORD **a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD v5[2];

  v2 = *(_QWORD *)(type metadata accessor for CRLBoardEntity(0) - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = (_QWORD *)sub_100D167E8(v3);
  v4 = v3[2];
  v5[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_100C17080(v5);
  *a1 = v3;
}

void sub_100C17080(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  Swift::Int v15;
  Swift::Int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  Swift::Int v22;
  unint64_t v23;
  Swift::Int v24;
  Swift::Int v25;
  Swift::Int v26;
  Swift::Int v27;
  uint64_t v28;
  char *v29;
  __n128 v30;
  char *v31;
  __n128 v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  char *v35;
  Swift::Int v36;
  uint64_t v37;
  Swift::Int v38;
  Swift::Int v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  __n128 v43;
  char *v44;
  __n128 v45;
  int v46;
  char *v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  Swift::Int v51;
  uint64_t v52;
  Swift::Int v53;
  Swift::Int v54;
  uint64_t v55;
  Swift::Int v56;
  unint64_t v57;
  Swift::Int v58;
  Swift::Int v59;
  uint64_t v60;
  Swift::Int v61;
  Swift::Int v62;
  uint64_t v63;
  Swift::Int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  __n128 v70;
  char *v71;
  __n128 v72;
  void (*v73)(char *, uint64_t);
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v80;
  unint64_t v81;
  char *v82;
  char *v83;
  Swift::Int v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  BOOL v96;
  unint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  BOOL v106;
  uint64_t v107;
  char v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  BOOL v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  unint64_t v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  unint64_t v136;
  double *v137;
  Swift::Int v138;
  uint64_t v139;
  char *v140;
  Swift::Int v141;
  uint64_t v142;
  Swift::Int v143;
  unint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  Swift::Int v148;
  Swift::Int v149;
  void (*v150)(char *, uint64_t);
  uint64_t v151;
  char *v152;
  char *v153;
  uint64_t v154;
  _QWORD *v155;
  uint64_t v156;
  Swift::Int v157;
  uint64_t v158;
  Swift::Int v159;
  Swift::Int v160;

  v2 = v1;
  v154 = type metadata accessor for Date(0);
  v147 = *(_QWORD *)(v154 - 8);
  __chkstk_darwin(v154);
  v153 = (char *)&v137 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v152 = (char *)&v137 - v6;
  v7 = type metadata accessor for CRLBoardEntity(0);
  v145 = *(_QWORD *)(v7 - 8);
  v146 = v7;
  __chkstk_darwin(v7);
  v142 = (uint64_t)&v137 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v158 = (uint64_t)&v137 - v10;
  __chkstk_darwin(v11);
  v151 = (uint64_t)&v137 - v12;
  __chkstk_darwin(v13);
  v156 = (uint64_t)&v137 - v14;
  v15 = a1[1];
  v16 = _minimumMergeRunLength(_:)(v15);
  if (v16 >= v15)
  {
    if (v15 < 0)
      goto LABEL_137;
    if (v15)
      sub_100C17B7C(0, v15, 1, a1);
    return;
  }
  if (v15 >= 0)
    v17 = v15;
  else
    v17 = v15 + 1;
  if (v15 < -1)
    goto LABEL_145;
  v138 = v16;
  if (v15 < 2)
  {
    v21 = (char *)_swiftEmptyArrayStorage;
    v144 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v145 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v145 + 80));
    v137 = _swiftEmptyArrayStorage;
    if (v15 != 1)
    {
      v23 = *(_QWORD *)&_swiftEmptyArrayStorage[2];
LABEL_103:
      if (v23 >= 2)
      {
        v131 = *a1;
        do
        {
          v132 = v23 - 2;
          if (v23 < 2)
            goto LABEL_132;
          if (!v131)
            goto LABEL_144;
          v133 = *(_QWORD *)&v21[16 * v132 + 32];
          v134 = *(_QWORD *)&v21[16 * v23 + 24];
          sub_100C17E64(v131 + *(_QWORD *)(v145 + 72) * v133, v131 + *(_QWORD *)(v145 + 72) * *(_QWORD *)&v21[16 * v23 + 16], v131 + *(_QWORD *)(v145 + 72) * v134, v144);
          if (v2)
            break;
          if (v134 < v133)
            goto LABEL_133;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v21 = sub_100D1664C((uint64_t)v21);
          if (v132 >= *((_QWORD *)v21 + 2))
            goto LABEL_134;
          v135 = &v21[16 * v132 + 32];
          *(_QWORD *)v135 = v133;
          *((_QWORD *)v135 + 1) = v134;
          v136 = *((_QWORD *)v21 + 2);
          if (v23 > v136)
            goto LABEL_135;
          memmove(&v21[16 * v23 + 16], &v21[16 * v23 + 32], 16 * (v136 - v23));
          *((_QWORD *)v21 + 2) = v136 - 1;
          v23 = v136 - 1;
        }
        while (v136 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
      v137[2] = 0.0;
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    v18 = v17 >> 1;
    v19 = static Array._allocateBufferUninitialized(minimumCapacity:)(v17 >> 1, v146);
    *(_QWORD *)(v19 + 16) = v18;
    v20 = *(unsigned __int8 *)(v145 + 80);
    v137 = (double *)v19;
    v144 = v19 + ((v20 + 32) & ~v20);
  }
  v22 = 0;
  v21 = (char *)_swiftEmptyArrayStorage;
  v155 = a1;
  while (1)
  {
    v24 = v22;
    v25 = v22 + 1;
    if (v22 + 1 >= v15)
    {
      v36 = v22 + 1;
    }
    else
    {
      v26 = *a1;
      v140 = v21;
      v141 = v26;
      v27 = *(_QWORD *)(v145 + 72);
      v143 = v22;
      sub_1004B8460(v26 + v27 * v25, v156, type metadata accessor for CRLBoardEntity);
      v28 = v151;
      sub_1004B8460(v26 + v27 * v143, v151, type metadata accessor for CRLBoardEntity);
      v159 = v15;
      v29 = v152;
      EntityProperty.wrappedValue.getter(v30);
      v31 = v153;
      EntityProperty.wrappedValue.getter(v32);
      LODWORD(v157) = static Date.> infix(_:_:)(v29, v31);
      v33 = *(void (**)(char *, uint64_t))(v147 + 8);
      v34 = v154;
      v33(v31, v154);
      v35 = v29;
      v15 = v159;
      v150 = v33;
      v33(v35, v34);
      sub_1004B84A4(v28, type metadata accessor for CRLBoardEntity);
      v24 = v143;
      sub_1004B84A4(v156, type metadata accessor for CRLBoardEntity);
      v36 = v24 + 2;
      v160 = v27;
      if (v24 + 2 < v15)
      {
        v139 = v2;
        v37 = v27 * v25;
        v38 = v141;
        v148 = v27 * v36;
        v149 = v37;
        while (1)
        {
          v39 = v36;
          v40 = v156;
          sub_1004B8460(v38 + v148, v156, type metadata accessor for CRLBoardEntity);
          v41 = v151;
          sub_1004B8460(v38 + v149, v151, type metadata accessor for CRLBoardEntity);
          v42 = v152;
          EntityProperty.wrappedValue.getter(v43);
          v44 = v153;
          EntityProperty.wrappedValue.getter(v45);
          v46 = static Date.> infix(_:_:)(v42, v44);
          v47 = v44;
          v48 = v154;
          v49 = v150;
          v150(v47, v154);
          v49(v42, v48);
          sub_1004B84A4(v41, type metadata accessor for CRLBoardEntity);
          sub_1004B84A4(v40, type metadata accessor for CRLBoardEntity);
          if (((v157 ^ v46) & 1) != 0)
            break;
          v36 = v39 + 1;
          v38 += v160;
          v15 = v159;
          if (v159 == v39 + 1)
          {
            v36 = v159;
            v2 = v139;
            v24 = v143;
            goto LABEL_23;
          }
        }
        v2 = v139;
        v36 = v39;
        v24 = v143;
        v15 = v159;
      }
LABEL_23:
      v21 = v140;
      if ((v157 & 1) != 0)
      {
        if (v36 < v24)
          goto LABEL_138;
        if (v24 < v36)
        {
          v139 = v2;
          v50 = 0;
          v51 = v160;
          v52 = v160 * (v36 - 1);
          v53 = v36 * v160;
          v54 = v24;
          v55 = v24 * v160;
          do
          {
            if (v54 != v36 + v50 - 1)
            {
              v56 = v141;
              if (!v141)
                goto LABEL_143;
              v57 = v141 + v55;
              sub_1004B84E0(v141 + v55, v142, type metadata accessor for CRLBoardEntity);
              if (v55 < v52 || v57 >= v56 + v53)
              {
                swift_arrayInitWithTakeFrontToBack(v56 + v55, v56 + v52, 1, v146);
              }
              else if (v55 != v52)
              {
                swift_arrayInitWithTakeBackToFront(v56 + v55);
              }
              sub_1004B84E0(v142, v56 + v52, type metadata accessor for CRLBoardEntity);
              v51 = v160;
            }
            ++v54;
            --v50;
            v52 -= v51;
            v53 -= v51;
            v55 += v51;
          }
          while (v54 < v36 + v50);
          v2 = v139;
          v21 = v140;
          a1 = v155;
          v24 = v143;
          v15 = v159;
        }
      }
    }
    if (v36 < v15)
    {
      if (__OFSUB__(v36, v24))
        goto LABEL_136;
      if (v36 - v24 < v138)
        break;
    }
LABEL_55:
    if (v36 < v24)
      goto LABEL_131;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v157 = v36;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v21 = sub_100D15FCC(0, *((_QWORD *)v21 + 2) + 1, 1, v21);
    v81 = *((_QWORD *)v21 + 2);
    v80 = *((_QWORD *)v21 + 3);
    v23 = v81 + 1;
    if (v81 >= v80 >> 1)
      v21 = sub_100D15FCC((char *)(v80 > 1), v81 + 1, 1, v21);
    *((_QWORD *)v21 + 2) = v23;
    v82 = v21 + 32;
    v83 = &v21[16 * v81 + 32];
    v84 = v157;
    *(_QWORD *)v83 = v24;
    *((_QWORD *)v83 + 1) = v84;
    if (v81)
    {
      while (1)
      {
        v85 = v23 - 1;
        if (v23 >= 4)
        {
          v90 = &v82[16 * v23];
          v91 = *((_QWORD *)v90 - 8);
          v92 = *((_QWORD *)v90 - 7);
          v96 = __OFSUB__(v92, v91);
          v93 = v92 - v91;
          if (v96)
            goto LABEL_120;
          v95 = *((_QWORD *)v90 - 6);
          v94 = *((_QWORD *)v90 - 5);
          v96 = __OFSUB__(v94, v95);
          v88 = v94 - v95;
          v89 = v96;
          if (v96)
            goto LABEL_121;
          v97 = v23 - 2;
          v98 = &v82[16 * v23 - 32];
          v100 = *(_QWORD *)v98;
          v99 = *((_QWORD *)v98 + 1);
          v96 = __OFSUB__(v99, v100);
          v101 = v99 - v100;
          if (v96)
            goto LABEL_123;
          v96 = __OFADD__(v88, v101);
          v102 = v88 + v101;
          if (v96)
            goto LABEL_126;
          if (v102 >= v93)
          {
            v120 = &v82[16 * v85];
            v122 = *(_QWORD *)v120;
            v121 = *((_QWORD *)v120 + 1);
            v96 = __OFSUB__(v121, v122);
            v123 = v121 - v122;
            if (v96)
              goto LABEL_130;
            v113 = v88 < v123;
            goto LABEL_92;
          }
        }
        else
        {
          if (v23 != 3)
          {
            v114 = *((_QWORD *)v21 + 4);
            v115 = *((_QWORD *)v21 + 5);
            v96 = __OFSUB__(v115, v114);
            v107 = v115 - v114;
            v108 = v96;
            goto LABEL_86;
          }
          v87 = *((_QWORD *)v21 + 4);
          v86 = *((_QWORD *)v21 + 5);
          v96 = __OFSUB__(v86, v87);
          v88 = v86 - v87;
          v89 = v96;
        }
        if ((v89 & 1) != 0)
          goto LABEL_122;
        v97 = v23 - 2;
        v103 = &v82[16 * v23 - 32];
        v105 = *(_QWORD *)v103;
        v104 = *((_QWORD *)v103 + 1);
        v106 = __OFSUB__(v104, v105);
        v107 = v104 - v105;
        v108 = v106;
        if (v106)
          goto LABEL_125;
        v109 = &v82[16 * v85];
        v111 = *(_QWORD *)v109;
        v110 = *((_QWORD *)v109 + 1);
        v96 = __OFSUB__(v110, v111);
        v112 = v110 - v111;
        if (v96)
          goto LABEL_128;
        if (__OFADD__(v107, v112))
          goto LABEL_129;
        if (v107 + v112 >= v88)
        {
          v113 = v88 < v112;
LABEL_92:
          if (v113)
            v85 = v97;
          goto LABEL_94;
        }
LABEL_86:
        if ((v108 & 1) != 0)
          goto LABEL_124;
        v116 = &v82[16 * v85];
        v118 = *(_QWORD *)v116;
        v117 = *((_QWORD *)v116 + 1);
        v96 = __OFSUB__(v117, v118);
        v119 = v117 - v118;
        if (v96)
          goto LABEL_127;
        if (v119 < v107)
          goto LABEL_14;
LABEL_94:
        v124 = v85 - 1;
        if (v85 - 1 >= v23)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        v125 = *a1;
        if (!*a1)
          goto LABEL_142;
        v126 = &v82[16 * v124];
        v127 = *(_QWORD *)v126;
        v128 = &v82[16 * v85];
        v129 = *((_QWORD *)v128 + 1);
        sub_100C17E64(v125 + *(_QWORD *)(v145 + 72) * *(_QWORD *)v126, v125 + *(_QWORD *)(v145 + 72) * *(_QWORD *)v128, v125 + *(_QWORD *)(v145 + 72) * v129, v144);
        if (v2)
          goto LABEL_114;
        if (v129 < v127)
          goto LABEL_117;
        if (v85 > *((_QWORD *)v21 + 2))
          goto LABEL_118;
        *(_QWORD *)v126 = v127;
        *(_QWORD *)&v82[16 * v124 + 8] = v129;
        v130 = *((_QWORD *)v21 + 2);
        if (v85 >= v130)
          goto LABEL_119;
        v23 = v130 - 1;
        memmove(&v82[16 * v85], v128 + 16, 16 * (v130 - 1 - v85));
        *((_QWORD *)v21 + 2) = v130 - 1;
        a1 = v155;
        if (v130 <= 2)
          goto LABEL_14;
      }
    }
    v23 = 1;
LABEL_14:
    v15 = a1[1];
    v22 = v157;
    if (v157 >= v15)
      goto LABEL_103;
  }
  if (__OFADD__(v24, v138))
    goto LABEL_139;
  if (v24 + v138 >= v15)
    v58 = v15;
  else
    v58 = v24 + v138;
  if (v58 >= v24)
  {
    if (v36 != v58)
    {
      v143 = v24;
      v139 = v2;
      v140 = v21;
      v59 = *(_QWORD *)(v145 + 72);
      v60 = v59 * (v36 - 1);
      v148 = v59;
      v61 = v36 * v59;
      v141 = v58;
      do
      {
        v63 = 0;
        v64 = v143;
        v157 = v36;
        v149 = v61;
        v150 = (void (*)(char *, uint64_t))v60;
        while (1)
        {
          v160 = v64;
          v65 = *a1;
          v159 = v61 + v63;
          v66 = v61 + v63 + v65;
          v67 = v156;
          sub_1004B8460(v66, v156, type metadata accessor for CRLBoardEntity);
          v68 = v151;
          sub_1004B8460(v60 + v63 + v65, v151, type metadata accessor for CRLBoardEntity);
          v69 = v152;
          EntityProperty.wrappedValue.getter(v70);
          v71 = v153;
          EntityProperty.wrappedValue.getter(v72);
          LOBYTE(v65) = static Date.> infix(_:_:)(v69, v71);
          v73 = *(void (**)(char *, uint64_t))(v147 + 8);
          v74 = v71;
          v75 = v154;
          v73(v74, v154);
          v73(v69, v75);
          sub_1004B84A4(v68, type metadata accessor for CRLBoardEntity);
          sub_1004B84A4(v67, type metadata accessor for CRLBoardEntity);
          if ((v65 & 1) == 0)
            break;
          v76 = *a1;
          if (!*a1)
            goto LABEL_141;
          v61 = v149;
          v60 = (uint64_t)v150;
          v77 = v76 + v149 + v63;
          v78 = (uint64_t)v150 + v76 + v63;
          sub_1004B84E0(v77, v158, type metadata accessor for CRLBoardEntity);
          swift_arrayInitWithTakeFrontToBack(v77, v78, 1, v146);
          sub_1004B84E0(v158, v78, type metadata accessor for CRLBoardEntity);
          v63 -= v148;
          v64 = v160 + 1;
          v62 = v157;
          a1 = v155;
          if (v157 == v160 + 1)
            goto LABEL_48;
        }
        v62 = v157;
        v61 = v149;
        v60 = (uint64_t)v150;
LABEL_48:
        v36 = v62 + 1;
        v60 += v148;
        v61 += v148;
      }
      while (v36 != v141);
      v36 = v141;
      v2 = v139;
      v21 = v140;
      v24 = v143;
    }
    goto LABEL_55;
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
}

void sub_100C17B7C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  __n128 v25;
  char *v26;
  __n128 v27;
  _QWORD *v28;
  void (*v29)(char *, uint64_t);
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v39 = a1;
  v7 = type metadata accessor for Date(0);
  v45 = *(_QWORD *)(v7 - 8);
  v46 = v7;
  __chkstk_darwin(v7);
  v44 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v43 = (char *)&v37 - v10;
  v40 = type metadata accessor for CRLBoardEntity(0);
  __chkstk_darwin(v40);
  v51 = (uint64_t)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v42 = (uint64_t)&v37 - v13;
  __chkstk_darwin(v14);
  v41 = (char *)&v37 - v16;
  v50 = a3;
  v38 = a2;
  if (a3 != a2)
  {
    v17 = *(_QWORD *)(v15 + 72);
    v18 = v17 * (v50 - 1);
    v47 = v17;
    v19 = v17 * v50;
    v20 = (uint64_t)v41;
LABEL_5:
    v21 = 0;
    v53 = v39;
    v48 = v19;
    v49 = v18;
    while (1)
    {
      v22 = *a4;
      v52 = v19 + v21;
      sub_1004B8460(v19 + v21 + v22, v20, type metadata accessor for CRLBoardEntity);
      v23 = v42;
      sub_1004B8460(v18 + v21 + v22, v42, type metadata accessor for CRLBoardEntity);
      v24 = v43;
      EntityProperty.wrappedValue.getter(v25);
      v26 = v44;
      EntityProperty.wrappedValue.getter(v27);
      LOBYTE(v22) = static Date.> infix(_:_:)(v24, v26);
      v28 = a4;
      v29 = *(void (**)(char *, uint64_t))(v45 + 8);
      v30 = v26;
      v31 = v46;
      v29(v30, v46);
      v32 = v24;
      v33 = v31;
      v19 = v48;
      v18 = v49;
      v29(v32, v33);
      a4 = v28;
      sub_1004B84A4(v23, type metadata accessor for CRLBoardEntity);
      sub_1004B84A4(v20, type metadata accessor for CRLBoardEntity);
      if ((v22 & 1) == 0)
      {
LABEL_4:
        v18 += v47;
        v19 += v47;
        if (++v50 == v38)
          return;
        goto LABEL_5;
      }
      v34 = *v28;
      if (!*v28)
        break;
      v35 = v34 + v19 + v21;
      v36 = v34 + v18 + v21;
      sub_1004B84E0(v35, v51, type metadata accessor for CRLBoardEntity);
      swift_arrayInitWithTakeFrontToBack(v35, v36, 1, v40);
      sub_1004B84E0(v51, v36, type metadata accessor for CRLBoardEntity);
      v21 -= v47;
      ++v53;
      a4 = v28;
      if (v50 == v53)
        goto LABEL_4;
    }
    __break(1u);
  }
}

uint64_t sub_100C17E64(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  __n128 v25;
  char *v26;
  __n128 v27;
  char v28;
  void (*v29)(char *, uint64_t);
  char *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  __n128 v43;
  char *v44;
  __n128 v45;
  char v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t);
  char *v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t result;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;

  v66 = type metadata accessor for Date(0);
  v62 = *(_QWORD *)(v66 - 8);
  __chkstk_darwin(v66);
  v61 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v65 = (char *)&v56 - v10;
  v59 = type metadata accessor for CRLBoardEntity(0);
  __chkstk_darwin(v59);
  v64 = (uint64_t)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v63 = (uint64_t)&v56 - v13;
  v15 = *(_QWORD *)(v14 + 72);
  if (!v15)
  {
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  if (a2 - a1 == 0x8000000000000000 && v15 == -1)
    goto LABEL_62;
  v16 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v15 == -1)
    goto LABEL_63;
  v17 = (uint64_t)(a2 - a1) / v15;
  v70 = a1;
  v69 = a4;
  v18 = v16 / v15;
  if (v17 >= v16 / v15)
  {
    if ((v18 & 0x8000000000000000) == 0)
    {
      v20 = v18 * v15;
      if (a4 < a2 || a2 + v20 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack(a4, a2, v18, v59);
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront(a4);
      }
      v36 = a4 + v20;
      v68 = a4 + v20;
      v70 = a2;
      if (v20 >= 1 && a1 < a2)
      {
        v38 = -v15;
        v57 = a1;
        v58 = a4;
        v39 = v65;
        do
        {
          v67 = a3;
          v60 = a3 + v38;
          v40 = v63;
          sub_1004B8460(v36 + v38, v63, type metadata accessor for CRLBoardEntity);
          v41 = a2 + v38;
          v42 = v64;
          sub_1004B8460(a2 + v38, v64, type metadata accessor for CRLBoardEntity);
          EntityProperty.wrappedValue.getter(v43);
          v44 = v61;
          EntityProperty.wrappedValue.getter(v45);
          v46 = static Date.> infix(_:_:)(v39, v44);
          v47 = v38;
          v48 = *(void (**)(char *, uint64_t))(v62 + 8);
          v49 = v44;
          v50 = v66;
          v48(v49, v66);
          v48(v39, v50);
          sub_1004B84A4(v42, type metadata accessor for CRLBoardEntity);
          sub_1004B84A4(v40, type metadata accessor for CRLBoardEntity);
          if ((v46 & 1) != 0)
          {
            a3 = v60;
            if (v67 < a2 || v60 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack(v60, v41, 1, v59);
              v51 = v57;
              v52 = v58;
              v38 = v47;
            }
            else
            {
              v51 = v57;
              v52 = v58;
              v38 = v47;
              if (v67 != a2)
                swift_arrayInitWithTakeBackToFront(v60);
            }
            v70 += v38;
          }
          else
          {
            v53 = v68;
            v54 = v68 + v47;
            v68 += v47;
            v38 = v47;
            a3 = v60;
            if (v67 < v53 || v60 >= v53)
            {
              swift_arrayInitWithTakeFrontToBack(v60, v54, 1, v59);
            }
            else if (v67 != v53)
            {
              swift_arrayInitWithTakeBackToFront(v60);
            }
            v41 = a2;
            v51 = v57;
            v52 = v58;
          }
          v36 = v68;
          if (v68 <= v52)
            break;
          a2 = v41;
        }
        while (v41 > v51);
      }
      goto LABEL_60;
    }
  }
  else if ((v17 & 0x8000000000000000) == 0)
  {
    v19 = v17 * v15;
    if (a4 < a1 || a1 + v19 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack(a4, a1, v17, v59);
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront(a4);
    }
    v60 = a4 + v19;
    v68 = a4 + v19;
    if (v19 >= 1 && a2 < a3)
    {
      v67 = a3;
      v23 = v63;
      v22 = v64;
      do
      {
        sub_1004B8460(a2, v23, type metadata accessor for CRLBoardEntity);
        sub_1004B8460(a4, v22, type metadata accessor for CRLBoardEntity);
        v24 = v65;
        EntityProperty.wrappedValue.getter(v25);
        v26 = v61;
        EntityProperty.wrappedValue.getter(v27);
        v28 = static Date.> infix(_:_:)(v24, v26);
        v29 = *(void (**)(char *, uint64_t))(v62 + 8);
        v30 = v26;
        v31 = v66;
        v29(v30, v66);
        v29(v24, v31);
        sub_1004B84A4(v22, type metadata accessor for CRLBoardEntity);
        sub_1004B84A4(v23, type metadata accessor for CRLBoardEntity);
        v32 = v70;
        if ((v28 & 1) != 0)
        {
          v33 = a2 + v15;
          if (v70 < a2 || v70 >= v33)
          {
            swift_arrayInitWithTakeFrontToBack(v70, a2, 1, v59);
            v34 = v67;
          }
          else
          {
            v34 = v67;
            if (v70 == a2)
              v32 = a2;
            else
              swift_arrayInitWithTakeBackToFront(v70);
          }
        }
        else
        {
          v35 = v69 + v15;
          if (v70 < v69 || v70 >= v35)
          {
            swift_arrayInitWithTakeFrontToBack(v70, v69, 1, v59);
            v34 = v67;
          }
          else
          {
            v34 = v67;
            if (v70 != v69)
              swift_arrayInitWithTakeBackToFront(v70);
          }
          v69 = v35;
          v33 = a2;
        }
        v70 = v32 + v15;
        a4 = v69;
        if (v69 >= v60)
          break;
        a2 = v33;
      }
      while (v33 < v34);
    }
LABEL_60:
    sub_100D163B4(&v70, &v69, (uint64_t *)&v68);
    return 1;
  }
LABEL_64:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_100C1841C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Logger(0);
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_100C18458(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Logger(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_100C1848C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Logger(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_100C184D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Logger(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_100C18514(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Logger(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_100C18558(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Logger(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_100C1859C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C185A8);
}

uint64_t sub_100C185A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Logger(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_100C185E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C185F0);
}

uint64_t sub_100C185F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Logger(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for CRLBoardEntityQueryPerformer(uint64_t a1)
{
  uint64_t result;

  result = qword_10140AD98;
  if (!qword_10140AD98)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLBoardEntityQueryPerformer);
  return result;
}

uint64_t sub_100C1866C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for Logger(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v4, a1 + 16);
    return 0;
  }
  return result;
}

unint64_t sub_100C186E0()
{
  unint64_t result;

  result = qword_10140ADD0[0];
  if (!qword_10140ADD0[0])
  {
    result = swift_getWitnessTable(&unk_100F2EFC8, &type metadata for CRLBoardQuery);
    atomic_store(result, qword_10140ADD0);
  }
  return result;
}

uint64_t sub_100C18724()
{
  return sub_100880724((unint64_t *)&qword_1013E1138, (uint64_t)&unk_100F062EC);
}

uint64_t sub_100C18748(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 64) = v1;
  return swift_task_switch(sub_100C18760, 0, 0);
}

uint64_t sub_100C18760()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = sub_1004BB5A4((_QWORD *)(v0[8] + 8), *(_QWORD *)(v0[8] + 32));
  AppDependency.wrappedValue.getter(v1);
  v0[5] = &type metadata for CRLBoardLibraryProvidingDependency;
  v0[6] = &off_10129B490;
  v2 = (_QWORD *)swift_task_alloc(dword_10140AD3C);
  v0[9] = v2;
  *v2 = v0;
  v2[1] = sub_100C187F4;
  return sub_100C156C4(v0[7], (uint64_t)(v0 + 2));
}

uint64_t sub_100C187F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(*v2 + 72);
  v5 = *v2;
  *(_QWORD *)(v5 + 80) = v1;
  swift_task_dealloc(v4);
  if (v1)
    return swift_task_switch(sub_100C1887C, 0, 0);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v5 + 16));
  return (*(uint64_t (**)(uint64_t))(v5 + 8))(a1);
}

uint64_t sub_100C1887C()
{
  uint64_t v0;

  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100C188B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 64) = v1;
  return swift_task_switch(sub_100C188C8, 0, 0);
}

uint64_t sub_100C188C8()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = sub_1004BB5A4((_QWORD *)(v0[8] + 8), *(_QWORD *)(v0[8] + 32));
  AppDependency.wrappedValue.getter(v1);
  v0[5] = &type metadata for CRLBoardLibraryProvidingDependency;
  v0[6] = &off_10129B490;
  v2 = (_QWORD *)swift_task_alloc(dword_10140AD2C);
  v0[9] = v2;
  *v2 = v0;
  v2[1] = sub_100C18954;
  return sub_100C15CF0((uint64_t)(v0 + 2));
}

uint64_t sub_100C18954(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 72);
  *(_QWORD *)(*v2 + 80) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = sub_100C1887C;
  }
  else
  {
    *(_QWORD *)(v4 + 88) = a1;
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v4 + 16));
    v6 = sub_100C189D0;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_100C189D0()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 56) = *(_QWORD *)(v0 + 88);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_100C189EC()
{
  unint64_t result;

  result = qword_10140ADE8[0];
  if (!qword_10140ADE8[0])
  {
    result = swift_getWitnessTable(&unk_100F2EFF0, &type metadata for CRLBoardQuery);
    atomic_store(result, qword_10140ADE8);
  }
  return result;
}

uint64_t sub_100C18A30()
{
  return sub_100880724((unint64_t *)&qword_1013E3448, (uint64_t)&unk_100F064FC);
}

uint64_t sub_100C18A54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  unint64_t v6;

  v5 = (_QWORD *)swift_task_alloc(async function pointer to EntityQuery.results()[1]);
  *(_QWORD *)(v2 + 16) = v5;
  v6 = sub_1006E6FD0();
  *v5 = v2;
  v5[1] = sub_1004CF80C;
  return EntityQuery.results()(a1, a2, v6);
}

uint64_t sub_100C18AC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[9] = a3;
  v4[10] = v3;
  v4[7] = a1;
  v4[8] = a2;
  return swift_task_switch(sub_100C18ADC, 0, 0);
}

uint64_t sub_100C18ADC()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = sub_1004BB5A4((_QWORD *)(v0[10] + 8), *(_QWORD *)(v0[10] + 32));
  AppDependency.wrappedValue.getter(v1);
  v0[5] = &type metadata for CRLBoardLibraryProvidingDependency;
  v0[6] = &off_10129B490;
  v2 = (_QWORD *)swift_task_alloc(dword_10140AD24);
  v0[11] = v2;
  *v2 = v0;
  v2[1] = sub_100C18B70;
  return sub_100C16478(v0[8], v0[9], (uint64_t)(v0 + 2));
}

uint64_t sub_100C18B70(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 88);
  *(_QWORD *)(*v2 + 96) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = sub_100C18C04;
  }
  else
  {
    *(_QWORD *)(v4 + 104) = a1;
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v4 + 16));
    v6 = sub_100C18BEC;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_100C18BEC()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 56) = *(_QWORD *)(v0 + 104);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100C18C04()
{
  uint64_t v0;

  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

ValueMetadata *type metadata accessor for CRLBoardQuery()
{
  return &type metadata for CRLBoardQuery;
}

id sub_100C18C48(void *a1)
{
  char *v1;
  uint64_t v3;
  void *v4;
  char *v5;
  id v6;
  objc_super v8;

  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform19CRLUSDZRotationKnob_normalImage] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform19CRLUSDZRotationKnob_pressedImage] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform19CRLUSDZRotationKnob_errorImage] = 0;
  v3 = OBJC_IVAR____TtC8Freeform19CRLUSDZRotationKnob_imageRenderable;
  v4 = (void *)objc_opt_self(CRLCanvasRenderable);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "renderable");
  v5[OBJC_IVAR____TtC8Freeform19CRLUSDZRotationKnob_isBeingTracked] = 0;
  v5[OBJC_IVAR____TtC8Freeform19CRLUSDZRotationKnob_isError] = 0;

  v8.receiver = v5;
  v8.super_class = (Class)type metadata accessor for CRLUSDZRotationKnob();
  v6 = objc_msgSendSuper2(&v8, "initWithType:position:radius:tag:onRep:", 0, 5, a1, 0.0, 0.0, 31.0);
  objc_msgSend(v6, "setWorksWithStylus:", 1);
  sub_100C19158();
  sub_100C18F64();

  return v6;
}

id sub_100C18D74()
{
  char *v0;
  id v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  id v14;

  v1 = objc_msgSend((id)objc_opt_self(CRLCanvasShapeRenderable), "renderable");
  objc_msgSend(v1, "addSubrenderable:", *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform19CRLUSDZRotationKnob_imageRenderable]);
  objc_msgSend(v0, "radius");
  v2 = sub_10005FDDC();
  v4 = v3;
  v6 = v5;
  v8 = v7;
  objc_msgSend(v0, "radius");
  v10 = objc_msgSend((id)objc_opt_self(CRLBezierPath), "bezierPathWithContinuousCornerRoundedRect:cornerRadius:", v2, v4, v6, v8, v9);
  objc_msgSend(v1, "setBounds:", v2, v4, v6, v8);
  v11 = objc_msgSend(v10, "CGPath");
  objc_msgSend(v1, "setPath:", v11);

  sub_100C19464();
  if (v12)
  {
    v13 = v12;
    v14 = objc_msgSend(v12, "CGColor");

  }
  else
  {
    v14 = 0;
  }
  objc_msgSend(v1, "setFillColor:", v14);

  return v1;
}

void sub_100C18F64()
{
  char *v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  double v6;
  void *v7;
  id v8;
  double v9;
  uint64_t v10;
  id v11;
  id v12;
  CGFloat v13;
  CGFloat v14;
  CGFloat v15;
  CGFloat v16;
  id v17;
  id v18;
  void *v19;
  id v20;

  v1 = objc_msgSend(v0, "knobImage");
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v0, "renderable");
    if (v3)
    {
      v20 = v3;
      v4 = (void *)objc_opt_self(CATransaction);
      objc_msgSend(v4, "begin");
      objc_msgSend(v4, "disableActions");
      v5 = objc_msgSend(v0, "rep");
      v6 = 1.0;
      if (v5)
      {
        v7 = v5;
        v8 = objc_msgSend(v5, "canvas");

        if (v8)
        {
          objc_msgSend(v8, "contentsScale");
          v6 = v9;

        }
      }
      v10 = OBJC_IVAR____TtC8Freeform19CRLUSDZRotationKnob_imageRenderable;
      v11 = *(id *)&v0[OBJC_IVAR____TtC8Freeform19CRLUSDZRotationKnob_imageRenderable];
      objc_msgSend(v2, "size");
      objc_msgSend(v11, "setBounds:", sub_10005FDDC());

      v12 = *(id *)&v0[v10];
      objc_msgSend(v20, "bounds");
      objc_msgSend(v12, "setPosition:", sub_100061400(v13, v14, v15, v16));

      v17 = *(id *)&v0[v10];
      v18 = objc_msgSend(v2, "CGImageForContentsScale:", v6);
      objc_msgSend(v17, "setContents:", v18);

      objc_msgSend(v4, "commit");
      v19 = v20;
    }
    else
    {
      v19 = v2;
    }

  }
}

void sub_100C19158()
{
  uint64_t v0;
  id v1;
  NSString v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;

  v1 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:weight:", 3, 40.0);
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:inBundle:withConfiguration:", v2, 0, v1);

  if (v3)
  {
    v12 = objc_msgSend(objc_allocWithZone((Class)CRLImage), "initWithUIImage:", v3);

  }
  else
  {
    v12 = 0;
  }
  v4 = (void *)objc_opt_self(CRLColor);
  v5 = objc_msgSend(v4, "whiteColor");
  if (v12)
    v6 = objc_msgSend(v12, "compositedImageWithColor:alpha:blendMode:", v5, 20, 1.0);
  else
    v6 = 0;
  v7 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform19CRLUSDZRotationKnob_normalImage);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform19CRLUSDZRotationKnob_normalImage) = v6;
  v8 = v6;

  v9 = objc_msgSend(v4, "blackColor");
  if (v6)
    v10 = objc_msgSend(v8, "compositedImageWithColor:alpha:blendMode:", v9, 20, 0.333333333);
  else
    v10 = 0;
  v11 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform19CRLUSDZRotationKnob_pressedImage);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform19CRLUSDZRotationKnob_pressedImage) = v10;

}

id sub_100C19370()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLUSDZRotationKnob();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLUSDZRotationKnob()
{
  return objc_opt_self(_TtC8Freeform19CRLUSDZRotationKnob);
}

uint64_t sub_100C19418()
{
  uint64_t v0;
  uint64_t *v1;

  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform19CRLUSDZRotationKnob_isError) & 1) != 0)
  {
    v1 = &OBJC_IVAR____TtC8Freeform19CRLUSDZRotationKnob_errorImage;
  }
  else if (*(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform19CRLUSDZRotationKnob_isBeingTracked))
  {
    v1 = &OBJC_IVAR____TtC8Freeform19CRLUSDZRotationKnob_pressedImage;
  }
  else
  {
    v1 = &OBJC_IVAR____TtC8Freeform19CRLUSDZRotationKnob_normalImage;
  }
  return *(_QWORD *)(v0 + *v1);
}

void sub_100C19464()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  _QWORD aBlock[5];
  uint64_t v8;
  uint64_t v9;

  v9 = 0;
  v0 = objc_opt_self(UITraitCollection);
  v1 = objc_msgSend((id)v0, "traitCollectionWithUserInterfaceStyle:", 1);
  v2 = swift_allocObject(&unk_10129B688, 24, 7);
  *(_QWORD *)(v2 + 16) = &v9;
  v3 = swift_allocObject(&unk_10129B6B0, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_1005CA9C8;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_1005B71BC;
  v8 = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_100618D24;
  aBlock[3] = &unk_10129B6C8;
  v4 = _Block_copy(aBlock);
  v5 = v8;
  v6 = v1;
  swift_retain(v3);
  objc_msgSend((id)v0, "crl_withTraitCollectionAsCurrent:performBlock:", v6, v4, swift_release(v5).n128_f64[0]);

  _Block_release(v4);
  LOBYTE(v0) = swift_isEscapingClosureAtFileLocation(v3, "", 90, 123, 78, 1);
  swift_release(v3);
  if ((v0 & 1) != 0)
    __break(1u);
  else
    swift_release(v2);
}

uint64_t sub_100C195D4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100C195E4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

double sub_100C195F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

double sub_100C19604(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

void sub_100C19610()
{
  void *v0;
  id v1;
  __n128 v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  double v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  _BYTE v24[24];

  if (qword_1013DD6E8 != -1)
    swift_once(&qword_1013DD6E8, sub_100A01318);
  swift_beginAccess(&static OS_os_log.crlStatusHUD, v24, 0, 0);
  v1 = (id)static OS_os_log.crlStatusHUD;
  v3 = static os_log_type_t.debug.getter(v2);
  sub_100A06EBC((uint64_t)v1, &_mh_execute_header, v3, "CRLBaseHUDControllerProtocol_mi setupView", 41, 2, (uint64_t)_swiftEmptyArrayStorage);

  v4 = objc_msgSend(v0, "hudView");
  objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v5 = objc_msgSend(v0, "containerView");
  objc_msgSend(v5, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  sub_100C19A30();
  v6 = objc_msgSend(v0, "containerView");
  v7 = (void *)objc_opt_self(UIColor);
  v8 = objc_msgSend(v7, "clearColor");
  objc_msgSend(v6, "setBackgroundColor:", v8);

  v9 = objc_msgSend(v0, "hudView");
  v10 = objc_msgSend(v9, "layer");

  v11 = objc_msgSend(v7, "blackColor");
  v12 = objc_msgSend(v11, "CGColor");

  objc_msgSend(v10, "setShadowColor:", v12);
  objc_msgSend(v10, "setShadowRadius:", 5.0);
  v13 = objc_msgSend(v0, "hudView");
  v14 = objc_msgSend(v13, "traitCollection");

  LODWORD(v13) = objc_msgSend(v14, "crl_isUserInterfaceStyleLight");
  LODWORD(v15) = 1047569367;
  if ((_DWORD)v13)
    *(float *)&v15 = 0.15;
  objc_msgSend(v10, "setShadowOpacity:", v15);
  objc_msgSend(v10, "setShadowOffset:", 0.0, 0.01);
  v16 = objc_msgSend(v7, "secondaryLabelColor");
  v17 = objc_msgSend(v16, "colorWithAlphaComponent:", 0.07);

  v18 = objc_msgSend(v17, "CGColor");
  objc_msgSend(v10, "setBorderColor:", v18);

  objc_msgSend(v10, "setBorderWidth:", 1.0);
  objc_msgSend(v10, "setCornerRadius:", 20.0);
  if (!objc_msgSend(v0, "swipable"))
    goto LABEL_10;
  v19 = objc_msgSend(v0, "swipeGestureRecognizer");

  if (!v19)
  {
    v20 = objc_msgSend(objc_allocWithZone((Class)UISwipeGestureRecognizer), "initWithTarget:action:", v0, "swipedWithSender:");
    objc_msgSend(v0, "setSwipeGestureRecognizer:", v20);

  }
  v21 = objc_msgSend(v0, "containerView");
  v22 = objc_msgSend(v0, "swipeGestureRecognizer");
  if (v22)
  {
    v23 = v22;
    objc_msgSend(v21, "addGestureRecognizer:", v22);

    v10 = v23;
LABEL_10:

    return;
  }
  __break(1u);
}

void sub_100C19A30()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;

  v1 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "crl_popoverVibrantBackgroundEffect");
  v2 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v1);

  v3 = objc_msgSend(v0, "hudView");
  objc_msgSend(v3, "addSubview:", v2);

  v4 = objc_msgSend(v0, "hudView");
  v5 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
  objc_msgSend(v4, "setBackgroundColor:", v5);

}

uint64_t sub_100C19B2C(uint64_t result, uint64_t a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v3 = *(_QWORD *)(a2 + 16);
    if ((uint64_t)v3 >= result)
      v4 = result;
    else
      v4 = *(_QWORD *)(a2 + 16);
    if (result)
      v5 = v4;
    else
      v5 = 0;
    if (v3 >= v5)
    {
      type metadata accessor for CRLBoardEntity(0);
      return a2;
    }
  }
  __break(1u);
  return result;
}

void sub_100C19B9C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[5];
  uint64_t v27;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v2 = a1;
    else
      v2 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = __CocoaSet.makeIterator()(v2);
    v4 = type metadata accessor for AnyCancellable(0);
    v5 = sub_1004B7878(&qword_1013E4A10, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
    v6 = Set.Iterator.init(_cocoa:)(v26, v3, v4, v5);
    v1 = v26[0];
    v24 = v26[1];
    v7 = v26[2];
    v8 = v26[3];
    v9 = v26[4];
  }
  else
  {
    v10 = -1 << *(_BYTE *)(a1 + 32);
    v24 = a1 + 56;
    v7 = ~v10;
    v11 = -v10;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v9 = v12 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain(a1);
    v8 = 0;
  }
  v13 = (unint64_t)(v7 + 64) >> 6;
  if (v1 < 0)
    goto LABEL_13;
  while (1)
  {
    if (v9)
    {
      v14 = (v9 - 1) & v9;
      v15 = __clz(__rbit64(v9)) | (v8 << 6);
      v16 = v8;
      goto LABEL_32;
    }
    v21 = v8 + 1;
    if (__OFADD__(v8, 1))
      break;
    if (v21 >= v13)
      goto LABEL_35;
    v22 = *(_QWORD *)(v24 + 8 * v21);
    v16 = v8 + 1;
    if (!v22)
    {
      v16 = v8 + 2;
      if (v8 + 2 >= v13)
        goto LABEL_35;
      v22 = *(_QWORD *)(v24 + 8 * v16);
      if (!v22)
      {
        v16 = v8 + 3;
        if (v8 + 3 >= v13)
          goto LABEL_35;
        v22 = *(_QWORD *)(v24 + 8 * v16);
        if (!v22)
        {
          v16 = v8 + 4;
          if (v8 + 4 >= v13)
            goto LABEL_35;
          v22 = *(_QWORD *)(v24 + 8 * v16);
          if (!v22)
          {
            v16 = v8 + 5;
            if (v8 + 5 >= v13)
              goto LABEL_35;
            v22 = *(_QWORD *)(v24 + 8 * v16);
            if (!v22)
            {
              v23 = v8 + 6;
              while (v13 != v23)
              {
                v22 = *(_QWORD *)(v24 + 8 * v23++);
                if (v22)
                {
                  v16 = v23 - 1;
                  goto LABEL_31;
                }
              }
LABEL_35:
              sub_1004D284C(v1);
              return;
            }
          }
        }
      }
    }
LABEL_31:
    v14 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v16 << 6);
LABEL_32:
    v20 = *(_QWORD *)(*(_QWORD *)(v1 + 48) + 8 * v15);
    swift_retain(v20);
    if (!v20)
      goto LABEL_35;
    while (1)
    {
      AnyCancellable.cancel()();
      swift_release(v20);
      v8 = v16;
      v9 = v14;
      if ((v1 & 0x8000000000000000) == 0)
        break;
LABEL_13:
      v17 = __CocoaSet.Iterator.next()(v6);
      if (v17)
      {
        v18 = v17;
        v25 = v17;
        v19 = type metadata accessor for AnyCancellable(0);
        swift_unknownObjectRetain(v18);
        swift_dynamicCast(&v27, &v25, (char *)&type metadata for Swift.AnyObject + 8, v19, 7);
        v20 = v27;
        swift_unknownObjectRelease(v18);
        v16 = v8;
        v14 = v9;
        if (v20)
          continue;
      }
      goto LABEL_35;
    }
  }
  __break(1u);
}

void sub_100C19E3C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  __n128 v15;
  int64_t v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  void (*v25)(char *, unint64_t, uint64_t, __n128);
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  char *v31;
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;

  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v33 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v32 = (char *)&v28 - v6;
  __chkstk_darwin(v7);
  v31 = (char *)&v28 - v8;
  v9 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v9);
  v34 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a1 + 56);
  v29 = a1 + 56;
  v12 = 1 << *(_BYTE *)(a1 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & v11;
  v30 = (unint64_t)(v12 + 63) >> 6;
  v35 = a1;
  v15 = swift_bridgeObjectRetain(a1);
  v16 = 0;
  v17 = v31;
  v18 = (uint64_t)v32;
  if (!v14)
    goto LABEL_5;
LABEL_4:
  v19 = __clz(__rbit64(v14));
  v14 &= v14 - 1;
  v20 = v19 | (v16 << 6);
  v21 = v34;
  while (1)
  {
    v25 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v3 + 16);
    v25(v21, *(_QWORD *)(v35 + 48) + *(_QWORD *)(v3 + 72) * v20, v2, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v21, 0, 1, v2);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v21, 1, v2) == 1)
      goto LABEL_25;
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v17, v21, v2);
    v26 = (uint64_t)v33;
    ((void (*)(char *, char *, uint64_t))v25)(v33, v17, v2);
    sub_100AD569C(v18, v26);
    v27 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
    v27(v18, v2);
    v27((uint64_t)v17, v2);
    if (v14)
      goto LABEL_4;
LABEL_5:
    v22 = v16 + 1;
    v21 = v34;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v22 >= v30)
      goto LABEL_24;
    v23 = *(_QWORD *)(v29 + 8 * v22);
    ++v16;
    if (!v23)
    {
      v16 = v22 + 1;
      if (v22 + 1 >= v30)
        goto LABEL_24;
      v23 = *(_QWORD *)(v29 + 8 * v16);
      if (!v23)
      {
        v16 = v22 + 2;
        if (v22 + 2 >= v30)
          goto LABEL_24;
        v23 = *(_QWORD *)(v29 + 8 * v16);
        if (!v23)
        {
          v16 = v22 + 3;
          if (v22 + 3 >= v30)
            goto LABEL_24;
          v23 = *(_QWORD *)(v29 + 8 * v16);
          if (!v23)
            break;
        }
      }
    }
LABEL_20:
    v14 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v16 << 6);
  }
  v24 = v22 + 4;
  if (v24 >= v30)
  {
LABEL_24:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v3 + 56))(v34, 1, 1, v2, v15);
LABEL_25:
    swift_release(v35);
    return;
  }
  v23 = *(_QWORD *)(v29 + 8 * v24);
  if (v23)
  {
    v16 = v24;
    goto LABEL_20;
  }
  while (1)
  {
    v16 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v16 >= v30)
      goto LABEL_24;
    v23 = *(_QWORD *)(v29 + 8 * v16);
    ++v24;
    if (v23)
      goto LABEL_20;
  }
LABEL_27:
  __break(1u);
}

uint64_t sub_100C1A15C(uint64_t a1, uint64_t a2)
{
  return sub_100C1A4F0(a1, a2, type metadata accessor for CRLSharedHighlight);
}

uint64_t sub_100C1A168(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;

  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C((uint64_t *)&unk_1013F02F0);
  v7 = sub_1004CBA30((unint64_t *)&unk_1013F0300, (uint64_t *)&unk_1013F02F0, (uint64_t)&protocol conformance descriptor for CROrderedSet<A>);
  dispatch thunk of Collection._customIndexOfEquatableElement(_:)(&v11, a1, v6, v7);
  if ((v12 & 1) == 0)
    return v11;
  dispatch thunk of Collection.startIndex.getter(v6, v7);
  dispatch thunk of Collection.endIndex.getter(v6, v7);
  if (v13 == v11)
    return 0;
  while (1)
  {
    v8 = dispatch thunk of Collection.subscript.read(&v11, &v13, v6, v7);
    (*(void (**)(char *))(v3 + 16))(v5);
    ((void (*)(uint64_t *, _QWORD))v8)(&v11, 0);
    sub_1004B7878((unint64_t *)&qword_1013E4880, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    LOBYTE(v8) = dispatch thunk of static Equatable.== infix(_:_:)(v5, a1);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    if ((v8 & 1) != 0)
      break;
    dispatch thunk of Collection.formIndex(after:)(&v13, v6, v7);
    dispatch thunk of Collection.endIndex.getter(v6, v7);
    if (v13 == v11)
      return 0;
  }
  return v13;
}

uint64_t sub_100C1A350(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  v5 = *(_QWORD *)(type metadata accessor for UUID(0) - 8);
  v6 = a2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  v7 = *(_QWORD *)(v5 + 72);
  sub_1004B7878((unint64_t *)&qword_1013E4880, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v8 = 0;
  while ((dispatch thunk of static Equatable.== infix(_:_:)(v6, a1) & 1) == 0)
  {
    ++v8;
    v6 += v7;
    if (v2 == v8)
      return 0;
  }
  return v8;
}

uint64_t sub_100C1A41C(char a1, uint64_t a2)
{
  uint64_t v2;
  _BOOL4 v4;
  uint64_t result;
  uint64_t v6;
  char v7;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  v4 = (a1 & 1) == 0;
  result = 0;
  if (((v4 ^ *(unsigned __int8 *)(a2 + 32)) & 1) == 0)
  {
    v6 = v2 - 1;
    while (v6 != result)
    {
      v7 = ((a1 & 1) == 0) ^ *(_BYTE *)(a2 + 33 + result++);
      if ((v7 & 1) != 0)
        return result;
    }
    return 0;
  }
  return result;
}

uint64_t sub_100C1A490(uint64_t a1, float a2)
{
  uint64_t v2;
  float v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  float v8;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return 0;
  v4 = *(float *)(a1 + 32);
  result = 0;
  if (v4 != a2)
  {
    v6 = v2 - 1;
    v7 = a1 + 36;
    while (v6 != result)
    {
      v8 = *(float *)(v7 + 4 * result++);
      if (v8 == a2)
        return result;
    }
    return 0;
  }
  return result;
}

uint64_t sub_100C1A4F0(uint64_t result, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  char v9;
  unint64_t v10;
  uint64_t i;
  id v12;
  void *v13;
  char v14;
  uint64_t v15;

  v5 = result;
  if ((unint64_t)a2 >> 62)
    goto LABEL_21;
  v6 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v6)
  {
    if ((a2 & 0xC000000000000001) != 0)
    {
      v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a2);
    }
    else
    {
      if (!*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        return result;
      }
      v7 = *(id *)(a2 + 32);
    }
    v8 = v7;
    a3 = (uint64_t (*)(_QWORD))a3(0);
    v9 = static NSObject.== infix(_:_:)(v8, v5);

    if ((v9 & 1) != 0)
      return 0;
    for (i = 0; ; ++i)
    {
      v10 = i + 1;
      if (__OFADD__(i, 1))
        break;
      if (v10 == v6)
        return 0;
      if ((a2 & 0xC000000000000001) != 0)
      {
        v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i + 1, a2);
      }
      else
      {
        if ((v10 & 0x8000000000000000) != 0)
          goto LABEL_19;
        if (v10 >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_20;
        v12 = *(id *)(a2 + 32 + 8 * v10);
      }
      v13 = v12;
      v14 = static NSObject.== infix(_:_:)(v12, v5);

      if ((v14 & 1) != 0)
        return v10;
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    if (a2 < 0)
      v15 = a2;
    else
      v15 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
    v6 = _CocoaArrayWrapper.endIndex.getter(v15);
    result = swift_bridgeObjectRelease(a2);
  }
  return 0;
}

void sub_100C1A67C(uint64_t a1, uint64_t a2)
{
  sub_100C1A690(a1, a2, (unint64_t *)&qword_1013E1770, CKRecordZoneID_ptr);
}

void sub_100C1A690(uint64_t a1, uint64_t a2, unint64_t *a3, _QWORD *a4)
{
  uint64_t v8;
  id v9;
  void *v10;
  char v11;
  uint64_t i;
  id v13;
  void *v14;
  char v15;
  uint64_t v16;

  if ((unint64_t)a2 >> 62)
    goto LABEL_20;
  v8 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v8)
  {
    while (1)
    {
      if ((a2 & 0xC000000000000001) != 0)
      {
        v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a2);
      }
      else
      {
        if (!*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        v9 = *(id *)(a2 + 32);
      }
      v10 = v9;
      a4 = (_QWORD *)sub_1004B8930(0, a3, a4);
      v11 = static NSObject.== infix(_:_:)(v10, a1);

      if ((v11 & 1) == 0)
      {
        for (i = 0; ; ++i)
        {
          a3 = (unint64_t *)(i + 1);
          if (__OFADD__(i, 1))
            break;
          if (a3 == (unint64_t *)v8)
            return;
          if ((a2 & 0xC000000000000001) != 0)
          {
            v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i + 1, a2);
          }
          else
          {
            if (((unint64_t)a3 & 0x8000000000000000) != 0)
              goto LABEL_18;
            if ((unint64_t)a3 >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_19;
            v13 = *(id *)(a2 + 32 + 8 * (_QWORD)a3);
          }
          v14 = v13;
          v15 = static NSObject.== infix(_:_:)(v13, a1);

          if ((v15 & 1) != 0)
            return;
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        v16 = a2 < 0 ? a2 : a2 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(a2);
        v8 = _CocoaArrayWrapper.endIndex.getter(v16);
        swift_bridgeObjectRelease(a2);
        if (v8)
          continue;
      }
      return;
    }
  }
}

uint64_t sub_100C1A828(uint64_t a1, uint64_t a2)
{
  return sub_100C1A4F0(a1, a2, type metadata accessor for CRLBoardItem);
}

uint64_t sub_100C1A834(uint64_t i, unint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  const char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  const char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;

  v2 = a2;
  if (a2 >> 62)
    goto LABEL_48;
  v4 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return 0;
  while (1)
  {
    v5 = i + OBJC_IVAR____TtCC8Freeform29CRLAnalyticsOSSignpostManager18CRLSignpostContext_id;
    v6 = (uint64_t *)(i + OBJC_IVAR____TtCC8Freeform29CRLAnalyticsOSSignpostManager18CRLSignpostContext_task);
    if ((v2 & 0xC000000000000001) == 0)
      break;
    for (i = 0; ; ++i)
    {
      v7 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v2);
      if ((static OSSignpostID.== infix(_:_:)(v7 + OBJC_IVAR____TtCC8Freeform29CRLAnalyticsOSSignpostManager18CRLSignpostContext_id, v5, v8) & 1) != 0)
      {
        v9 = *(_QWORD *)(v7 + OBJC_IVAR____TtCC8Freeform29CRLAnalyticsOSSignpostManager18CRLSignpostContext_task);
        if ((*(_BYTE *)(v7 + OBJC_IVAR____TtCC8Freeform29CRLAnalyticsOSSignpostManager18CRLSignpostContext_task + 8) & 1) != 0)
          __asm { BR              X9 }
        if (v9)
        {
          v10 = "KeyboardInput";
          v11 = 13;
        }
        else
        {
          v10 = "MISC";
          v11 = 4;
        }
        v12 = StaticString.description.getter(v10, v11, 2);
        v14 = v13;
        v15 = *v6;
        if ((v6[1] & 1) != 0)
          __asm { BR              X9 }
        if (v15)
        {
          v16 = "KeyboardInput";
          v17 = 13;
        }
        else
        {
          v16 = "MISC";
          v17 = 4;
        }
        v19 = StaticString.description.getter(v16, v17, 2);
        v20 = v18;
        if (v12 == v19 && v14 == v18)
        {
          swift_unknownObjectRelease(v7);
          goto LABEL_44;
        }
        v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v14, v19, v18, 0);
        swift_unknownObjectRelease(v7);
        swift_bridgeObjectRelease(v14);
        swift_bridgeObjectRelease(v20);
        if ((v21 & 1) != 0)
          return i;
      }
      else
      {
        swift_unknownObjectRelease(v7);
      }
      v22 = i + 1;
      if (__OFADD__(i, 1))
        break;
      if (v22 == v4)
        return 0;
    }
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    if (v2 < 0)
      v39 = v2;
    else
      v39 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v4 = _CocoaArrayWrapper.endIndex.getter(v39);
    swift_bridgeObjectRelease(v2);
    if (!v4)
      return 0;
  }
  i = 0;
  v23 = v2 + 32;
  while (1)
  {
    v2 = *(_QWORD *)(v23 + 8 * i);
    v24 = v2 + OBJC_IVAR____TtCC8Freeform29CRLAnalyticsOSSignpostManager18CRLSignpostContext_id;
    v25 = swift_retain(v2);
    if ((static OSSignpostID.== infix(_:_:)(v24, v5, v25) & 1) != 0)
      break;
    swift_release(v2);
LABEL_39:
    v38 = i + 1;
    if (__OFADD__(i, 1))
      goto LABEL_47;
    ++i;
    if (v38 == v4)
      return 0;
  }
  v26 = *(_QWORD *)(v2 + OBJC_IVAR____TtCC8Freeform29CRLAnalyticsOSSignpostManager18CRLSignpostContext_task);
  if ((*(_BYTE *)(v2 + OBJC_IVAR____TtCC8Freeform29CRLAnalyticsOSSignpostManager18CRLSignpostContext_task + 8) & 1) != 0)
    __asm { BR              X9 }
  if (v26)
  {
    v27 = "KeyboardInput";
    v28 = 13;
  }
  else
  {
    v27 = "MISC";
    v28 = 4;
  }
  v29 = StaticString.description.getter(v27, v28, 2);
  v14 = v30;
  v31 = *v6;
  if ((v6[1] & 1) != 0)
    __asm { BR              X9 }
  if (v31)
  {
    v32 = "KeyboardInput";
    v33 = 13;
  }
  else
  {
    v32 = "MISC";
    v33 = 4;
  }
  v35 = StaticString.description.getter(v32, v33, 2);
  v36 = v34;
  if (v29 != v35 || v14 != v34)
  {
    v37 = _stringCompareWithSmolCheck(_:_:expecting:)(v29, v14, v35, v34, 0);
    swift_release(v2);
    swift_bridgeObjectRelease(v14);
    swift_bridgeObjectRelease(v36);
    if ((v37 & 1) != 0)
      return i;
    goto LABEL_39;
  }
  swift_release(v2);
LABEL_44:
  swift_bridgeObjectRelease_n(v14, 2);
  return i;
}

void sub_100C1B43C(uint64_t a1, uint64_t a2)
{
  sub_100C1A690(a1, a2, (unint64_t *)&qword_1013E56B0, off_101229828);
}

void sub_100C1B450(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  unsigned int v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  _QWORD aBlock[5];
  uint64_t v21;

  v3 = v2;
  v6 = objc_msgSend((id)objc_opt_self(CRLAccessibility), "isReduceMotionEnabled");
  v7 = *(void **)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasViewController];
  objc_msgSend(v7, "leaveQuickSelectModeIfNeeded");
  objc_msgSend(v3, "endDrawingModeIfNeeded");
  v8 = objc_msgSend(v7, "miniFormatterPresenter");
  if (v8)
  {
    v9 = v8;
    if (objc_msgSend(v8, "isPresentingMiniFormatter"))
      objc_msgSend(v9, "dismissMiniFormatterWithAnimated:", 0);
    swift_unknownObjectRelease(v9);
  }
  v10 = *(void **)&v3[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_compactScenesNavigatorViewController];
  if (v10)
  {
    v19 = v10;
    v11 = objc_msgSend(v3, "presentedViewController");
    if (!v11)
      goto LABEL_9;
    v12 = v11;
    sub_1004B8930(0, (unint64_t *)&qword_1013F6620, UIViewController_ptr);
    v18 = v19;
    v13 = v12;
    LOBYTE(v12) = static NSObject.== infix(_:_:)(v13, v18);

    if ((v12 & 1) != 0)
    {

    }
    else
    {
LABEL_9:
      if ((objc_msgSend(v19, "isBeingPresented", v18) & 1) != 0)
      {

      }
      else
      {
        v14 = v6 ^ 1;
        v15 = swift_allocObject(&unk_10129B830, 32, 7);
        *(_QWORD *)(v15 + 16) = a1;
        *(_QWORD *)(v15 + 24) = a2;
        aBlock[4] = sub_10054E858;
        v21 = v15;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = *(_QWORD *)"";
        aBlock[2] = sub_1005D2FC0;
        aBlock[3] = &unk_10129B848;
        v16 = _Block_copy(aBlock);
        v17 = v21;
        swift_retain(a2);
        objc_msgSend(v3, "presentViewController:animated:completion:", v19, v14, v16, swift_release(v17).n128_f64[0]);
        _Block_release(v16);

      }
    }
  }
}

void sub_100C1B690(double a1)
{
  uint64_t v1;
  void *v3;
  id v4;
  id v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  id v24;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController);
  v4 = objc_msgSend(v3, "layerHost");
  if (v4
    && (v5 = v4,
        v24 = objc_msgSend(v4, "canvasLayer"),
        swift_unknownObjectRelease(v5),
        v24))
  {
    objc_msgSend(v24, "minimumPinchViewScale");
    v7 = v6;
    objc_msgSend(v24, "maximumPinchViewScale");
    v9 = sub_1003C65EC(a1, v7, v8);
    objc_msgSend(v3, "visibleUnscaledRect");
    v11 = v10;
    v13 = v12;
    v15 = v14;
    v17 = v16;
    objc_msgSend(v3, "viewScale");
    v19 = v18 / v9;
    v20 = sub_100061400(v11, v13, v15, v17);
    v22 = v21;
    v23 = sub_1000603DC(v15, v17, v19);
    objc_msgSend(v3, "zoomWithAnimationToUnscaledRect:", sub_10005FD98(v20, v22, v23));

  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"viewScale", 9, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 3774, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"viewScale", 9, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2u, 3774, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    objc_msgSend(v3, "setViewScale:", a1);
  }
}

void sub_100C1B8B8()
{
  char *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;

  v1 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasViewController], "pencilMediator");
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v1, "pencilModeToBeginFromToolbarItem");
    swift_unknownObjectRelease(v2);
    if (v3)
    {
      v4 = objc_msgSend(v0, "pencilDocumentModeFor:", v3);
      v5 = sub_100C1CAE8();
      objc_msgSend(v5, "setMode:animated:", v4, 1);

    }
    else
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"beginPencilModeFromToolbarItem()", 32, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 3369, "Should not be asked to begin pencil mode from toolbar item if we cannot begin a pencil mode.", 92, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"beginPencilModeFromToolbarItem()", 32, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2u, 3369, (uint64_t)"Should not be asked to begin pencil mode from toolbar item if we cannot begin a pencil mode.", 92, 2u);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_100C1BA14(char a1, char a2)
{
  char *v2;
  char *v3;
  char v6;
  id v7;
  void *v8;
  uint64_t Strong;
  void *v10;
  id v11;
  char v12;
  _QWORD v13[5];

  v3 = v2;
  v13[3] = &type metadata for CRLFeatureFlags;
  v13[4] = sub_1004DB6DC();
  LOBYTE(v13[0]) = 0;
  v6 = isFeatureEnabled(_:)(v13);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v13);
  if ((v6 & 1) != 0)
  {
    v7 = objc_msgSend(v3, "presentedViewController");
    if (v7)
    {
      v8 = v7;
      Strong = swift_unknownObjectWeakLoadStrong(&v3[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_tipPopoverController]);
      if (Strong)
      {
        v10 = (void *)Strong;
        sub_1004B8930(0, (unint64_t *)&qword_1013F6620, UIViewController_ptr);
        v11 = v8;
        v12 = static NSObject.== infix(_:_:)(v11, v10);

        if ((v12 & 1) != 0)
        {
          objc_msgSend(v11, "dismissViewControllerAnimated:completion:", a1 & 1, 0);
          sub_100C38CDC(a2 & 1);
        }
      }

    }
  }
}

void sub_100C1BB2C()
{
  uint64_t v0;
  char v1;
  void *Strong;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  _BYTE v13[24];
  _BYTE v14[48];
  double v15[3];
  ValueMetadata *v16;
  unint64_t v17;
  char v18;

  v16 = &type metadata for CRLFeatureFlags;
  v17 = sub_1004DB6DC();
  LOBYTE(v15[0]) = 0;
  v1 = isFeatureEnabled(_:)(v15);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v15);
  if ((v1 & 1) != 0)
  {
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_tipPopoverController);

    if (!Strong)
    {
      sub_100C38774((uint64_t)v14);
      sub_1004C4938((uint64_t)v14, (uint64_t)v15, (uint64_t *)&unk_10140B970);
      if ((v18 & 1) != 0)
      {
        if (qword_1013DD6C8 != -1)
          swift_once(&qword_1013DD6C8, sub_100A00D28);
        swift_beginAccess(&static OS_os_log.crlError, v13, 0, 0);
        v3 = (id)static OS_os_log.crlError;
        v4 = static os_log_type_t.error.getter(v3);
        sub_100A06EBC((uint64_t)v3, &_mh_execute_header, v4, "Unable to present connection line on selection because there is no connection line knob position to present off of", 114, 2, (uint64_t)_swiftEmptyArrayStorage);
      }
      else
      {
        v5 = v17;
        v6 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", v15[0], v15[1], v15[2], *(double *)&v16);
        v7 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_tipPresentationView;
        v8 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_tipPresentationView);
        *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_tipPresentationView) = v6;

        v9 = *(void **)(v0 + v7);
        if (!v9)
          return;
        v10 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasViewController);
        v3 = v9;
        v11 = objc_msgSend(v10, "view");
        if (!v11)
        {
          __break(1u);
          return;
        }
        v12 = v11;
        objc_msgSend(v11, "addSubview:", v3);

        sub_100C375B0((uint64_t)v3, v5, 0, 0);
      }

    }
  }
}

void sub_100C1BD0C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char v13;
  id v14;
  unsigned int v15;
  id v16;
  id v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  const void *v30;
  void *v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD aBlock[3];
  ValueMetadata *v39;
  unint64_t v40;
  uint64_t v41;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v37);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchTime(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = &type metadata for CRLFeatureFlags;
  v40 = sub_1004DB6DC();
  LOBYTE(aBlock[0]) = 16;
  v13 = isFeatureEnabled(_:)(aBlock);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(aBlock);
  if ((v13 & 1) != 0)
  {
    v36 = v3;
    v14 = objc_msgSend(v1, "traitCollection");
    v15 = objc_msgSend(v14, "crl_isCompactWidth");

    if (v15)
    {
      v16 = objc_msgSend(v1, "navigationItem");
      v17 = objc_msgSend(v16, "overflowPresentationSource");

      if (v17)
      {
        sub_100C37C60((uint64_t)v17, 0, 0);
        if (qword_1013DCD28 != -1)
          swift_once(&qword_1013DCD28, sub_10069C688);
        v18 = sub_1004B804C(&qword_1013E6D60);
        sub_1004F2A1C(v18, (uint64_t)qword_10147EFB0);
        Tips.Event.sendDonation<>(_:)(0, 0);
        swift_unknownObjectRelease(v17);
      }
    }
    else
    {
      v19 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesNavigatorViewController];
      if (v19)
      {
        v20 = v19;
        if (sub_100C36CC4())
        {
          v21 = *(id *)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesNavigatorState];
          sub_100711550(1);

          sub_1004B8930(0, (unint64_t *)&qword_1013DE090, OS_dispatch_queue_ptr);
          v35 = static OS_dispatch_queue.main.getter();
          static DispatchTime.now()(v22);
          v23 = swift_allocObject(&unk_10129CBF8, 32, 7);
          *(_QWORD *)(v23 + 16) = v1;
          *(_QWORD *)(v23 + 24) = v20;
          v40 = (unint64_t)sub_100C4F9A0;
          v41 = v23;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = *(_QWORD *)"";
          aBlock[2] = sub_1005D2FC0;
          v39 = (ValueMetadata *)&unk_10129CC10;
          v33 = _Block_copy(aBlock);
          v24 = v41;
          v34 = v20;
          v25 = v1;
          v26 = swift_release(v24);
          static DispatchQoS.unspecified.getter(v26);
          aBlock[0] = _swiftEmptyArrayStorage;
          v27 = sub_1004B7878((unint64_t *)&qword_1013E1D20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
          v28 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
          v29 = sub_1004CBA30((unint64_t *)&qword_1013E1D30, (uint64_t *)&unk_1013DFBF0, (uint64_t)&protocol conformance descriptor for [A]);
          dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v28, v29, v2, v27);
          v30 = v33;
          v31 = (void *)v35;
          OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v12, v8, v5, v33);
          _Block_release(v30);

          (*(void (**)(char *, uint64_t))(v36 + 8))(v5, v2);
          (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v37);
          (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
        }
        else
        {

        }
      }
    }
  }
}

uint64_t sub_100C1C0E0()
{
  void *v0;
  char v1;
  uint64_t result;
  id v3;
  unsigned int v4;
  id v5;
  ValueMetadata *v6;
  uint64_t (*v7)();
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  _QWORD v11[3];
  ValueMetadata *v12;
  unint64_t v13;

  v12 = &type metadata for CRLFeatureFlags;
  v13 = sub_1004DB6DC();
  LOBYTE(v11[0]) = 19;
  v1 = isFeatureEnabled(_:)(v11);
  result = _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v11);
  if ((v1 & 1) != 0)
  {
    v3 = objc_msgSend(v0, "traitCollection");
    if (objc_msgSend(v3, "horizontalSizeClass") == (id)1)
    {

    }
    else
    {
      v4 = objc_msgSend((id)objc_opt_self(UIDevice), "crl_phoneUI");

      if (!v4)
      {
        v5 = sub_100C1CDB0();
        v6 = &type metadata for CRLTipStencilLibraryFull;
        v12 = &type metadata for CRLTipStencilLibraryFull;
        v7 = sub_100C38C68;
        v8 = sub_10054FAB4();
        goto LABEL_7;
      }
    }
    v5 = sub_100C1CD60();
    v6 = &type metadata for CRLTipStencilLibraryCompact;
    v12 = &type metadata for CRLTipStencilLibraryCompact;
    v7 = sub_100C38C4C;
    v8 = sub_10054FA70();
LABEL_7:
    v9 = v8;
    v13 = v8;
    v10 = sub_1004BB5A4(v11, (uint64_t)v6);
    sub_100C36EA0((uint64_t)v10, (uint64_t)v5, (uint64_t)v7, 0, v6, v9);

    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v11);
  }
  return result;
}

uint64_t sub_100C1C21C(uint64_t (*a1)(id *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  id v15;

  v4 = v3;
  if ((unint64_t)a3 >> 62)
    goto LABEL_14;
  v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  v8 = 0;
  if (v7)
  {
    while (1)
    {
      v9 = (a3 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, a3)
         : *(id *)(a3 + 8 * v8 + 32);
      v10 = v9;
      v15 = v9;
      v11 = a1(&v15);

      if (v4 || (v11 & 1) != 0)
        break;
      v12 = v8 + 1;
      if (__OFADD__(v8, 1))
      {
        __break(1u);
LABEL_14:
        if (a3 < 0)
          v13 = a3;
        else
          v13 = a3 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(a3);
        v7 = _CocoaArrayWrapper.endIndex.getter(v13);
        swift_bridgeObjectRelease(a3);
        v8 = 0;
        if (!v7)
          return v8;
      }
      else
      {
        ++v8;
        if (v12 == v7)
          return 0;
      }
    }
  }
  return v8;
}

unint64_t sub_100C1C330(uint64_t (*a1)(unint64_t *), uint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  BOOL v13;
  _BOOL4 v14;
  unint64_t result;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  int v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  int v24;
  int v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v27 = a3 & 0xFFFFFFFFFFFFLL;
  v28 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) != 0)
    v5 = HIBYTE(a4) & 0xF;
  else
    v5 = a3 & 0xFFFFFFFFFFFFLL;
  if (!v5)
    return 0;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  v30 = a4 & 0xFFFFFFFFFFFFFFLL;
  v29 = (a4 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v10 = 15;
  v34 = 4 << v8;
  while (1)
  {
    v12 = v10 & 0xC;
    v13 = (v10 & 1) == 0 || v12 == v9;
    v14 = v13;
    if (v13)
      break;
    v16 = v10 >> 16;
    result = v10;
    if (v10 >> 16 >= v5)
      goto LABEL_55;
LABEL_24:
    if ((a4 & 0x1000000000000000) != 0)
    {
      v20 = _StringGuts.foreignErrorCorrectedScalar(startingAt:)(result & 0xFFFFFFFFFFFF0000, a3, a4);
    }
    else
    {
      if ((a4 & 0x2000000000000000) != 0)
      {
        v32 = a3;
        v33 = v30;
        v18 = &v32;
        v19 = v28;
      }
      else
      {
        v18 = (_QWORD *)v29;
        v19 = v27;
        if ((a3 & 0x1000000000000000) == 0)
          v18 = (_QWORD *)_StringObject.sharedUTF8.getter(a3, a4);
      }
      v20 = _decodeScalar(_:startingAt:)(v18, v19, v16);
    }
    LODWORD(v32) = v20;
    result = a1(&v32);
    if (v4 || (result & 1) != 0)
      return v10;
    if (v14)
    {
      v9 = v34;
      if (v12 == v34)
      {
        result = sub_100BF1410(v10, a3, a4);
        v9 = v34;
        v10 = result;
        if (v5 <= result >> 16)
          goto LABEL_57;
      }
      else if (v5 <= v10 >> 16)
      {
        goto LABEL_57;
      }
      if ((v10 & 1) == 0)
      {
        v21 = sub_100858A60(v10, a3, a4);
        v9 = v34;
        v10 = v10 & 0xC | v21 & 0xFFFFFFFFFFFFFFF3 | 1;
      }
    }
    else
    {
      v9 = v34;
      if (v5 <= v10 >> 16)
        goto LABEL_56;
    }
    if ((a4 & 0x1000000000000000) != 0)
    {
      v11 = String.UnicodeScalarView._foreignIndex(after:)(v10, a3, a4);
      v9 = v34;
      v10 = v11;
    }
    else
    {
      v22 = v10 >> 16;
      if ((a4 & 0x2000000000000000) != 0)
      {
        v32 = a3;
        v33 = v30;
        v24 = *((unsigned __int8 *)&v32 + v22);
      }
      else
      {
        v23 = v29;
        if ((a3 & 0x1000000000000000) == 0)
        {
          v23 = _StringObject.sharedUTF8.getter(a3, a4);
          v9 = v34;
        }
        v24 = *(unsigned __int8 *)(v23 + v22);
      }
      v25 = (char)v24;
      v26 = __clz(v24 ^ 0xFF) - 24;
      if (v25 >= 0)
        LOBYTE(v26) = 1;
      v10 = ((v22 + v26) << 16) | 5;
    }
    if (4 * v5 == v10 >> 14)
      return 0;
  }
  result = v10;
  if (v12 == v9)
    result = sub_100BF1410(v10, a3, a4);
  v16 = result >> 16;
  if (result >> 16 < v5)
  {
    if ((result & 1) == 0)
    {
      v17 = sub_100858A60(result, a3, a4);
      result = v17 & 0xFFFFFFFFFFFFFFF2 | 1;
      v16 = v17 >> 16;
    }
    goto LABEL_24;
  }
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
  return result;
}

uint64_t sub_100C1C5F0(uint64_t (*a1)(uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v4 = v3;
  if ((unint64_t)a3 >> 62)
    goto LABEL_14;
  v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  v8 = 0;
  if (v7)
  {
    while (1)
    {
      if ((a3 & 0xC000000000000001) != 0)
      {
        v9 = specialized _ArrayBuffer._getElementSlowPath(_:)(v8, a3);
      }
      else
      {
        v9 = *(_QWORD *)(a3 + 8 * v8 + 32);
        swift_unknownObjectRetain(v9);
      }
      v14 = v9;
      v10 = a1(&v14);
      swift_unknownObjectRelease(v9);
      if (v4 || (v10 & 1) != 0)
        break;
      v11 = v8 + 1;
      if (__OFADD__(v8, 1))
      {
        __break(1u);
LABEL_14:
        if (a3 < 0)
          v12 = a3;
        else
          v12 = a3 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(a3);
        v7 = _CocoaArrayWrapper.endIndex.getter(v12);
        swift_bridgeObjectRelease(a3);
        v8 = 0;
        if (!v7)
          return v8;
      }
      else
      {
        ++v8;
        if (v11 == v7)
          return 0;
      }
    }
  }
  return v8;
}

void sub_100C1C70C(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  sub_1006433A4(a1, (uint64_t)&unk_100F2F458, (uint64_t)&unk_100F2F480, a2);
}

double sub_100C1C720(uint64_t *a1, void **a2)
{
  uint64_t v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(aX_10);
  v5 = swift_getKeyPath(aX_11);
  v7 = v2;
  swift_bridgeObjectRetain(v2);
  static Published.subscript.setter(&v7, v3, KeyPath, v5);
  return sub_100638DC8();
}

void sub_100C1C7A0(char a1)
{
  char *v1;
  char *v2;
  void *v4;
  void *v5;
  id v6;
  id v7;
  Swift::String v8;
  Class isa;
  id v10;
  id v11;
  void *v12;
  uint64_t KeyPath;
  uint64_t v14;
  void *v15;
  char *v16;
  Class v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  UIMenuElementSize preferredElementSize;
  Swift::OpaquePointer v23;
  char v24;
  unsigned __int8 v25[40];
  UIImage_optional v26;

  v2 = v1;
  v4 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController];
  objc_msgSend(v4, "setDocumentIsSharedReadOnly:", a1 & 1);
  if ((a1 & 1) != 0)
    sub_100C2BC68(0);
  v5 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardControlsViewController];
  if (v5)
  {
    v6 = v5;
    sub_10085FF4C();

  }
  v7 = sub_100C1CDD8();
  sub_1004B8930(0, &qword_1013E1090, UIMenu_ptr);
  preferredElementSize = sub_10052C750();
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  v26.value.super.isa = 0;
  v26.is_nil = 0;
  isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v8, (Swift::String_optional)0, v26, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v23).super.super.isa;
  objc_msgSend(v7, "setMenu:", isa);

  v10 = objc_msgSend(v2, "traitCollection");
  sub_1005221A4(v10, (int)objc_msgSend(v4, "documentIsSharedReadOnly"), (uint64_t)v25);
  sub_100522548(v25, 0);
  sub_1004DB520((uint64_t)v25);

  v11 = objc_msgSend(v2, "traitCollection");
  sub_10054CFF4(v11, (char)objc_msgSend(v4, "documentIsSharedReadOnly"));

  v12 = *(void **)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState];
  KeyPath = swift_getKeyPath(byte_100F2F550);
  v14 = swift_getKeyPath(byte_100F2F578);
  v24 = a1 & 1;
  static Published.subscript.setter(&v24, v12, KeyPath, v14);
  v15 = *(void **)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasZoomControlViewController];
  if (v15)
  {
    v16 = v15;
    v17 = sub_10056BDC4();
    v18 = OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_menu;
    v19 = *(void **)&v16[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_menu];
    *(_QWORD *)&v16[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_menu] = v17;

    v20 = sub_10056BA4C();
    v21 = *(id *)&v16[v18];
    objc_msgSend(v20, "setMenu:", v21);

  }
}

id sub_100C1C9E0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  NSString v7;
  id v8;
  void *v9;
  id v10;

  v1 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___editorController;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___editorController);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___editorController);
  }
  else
  {
    v4 = *(id *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator);
    v5 = sub_100C1CB90();
    v6 = objc_allocWithZone((Class)CRLEditorController);
    v7 = String._bridgeToObjectiveC()();
    v8 = objc_msgSend(v6, "initWithEditingCoordinator:rootEditor:debugName:", v4, v5, v7);

    v9 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v8;
    v3 = v8;

    v2 = 0;
  }
  v10 = v2;
  return v3;
}

id sub_100C1CAE8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___documentModeController;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___documentModeController);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___documentModeController);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)CRLiOSDocumentModeController), "initWithDelegate:", v0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_100C1CB90()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___boardEditor;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___boardEditor);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___boardEditor);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)CRLBoardEditor), "initWithInteractiveCanvasController:", *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController));
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

uint64_t sub_100C1CC20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___insertingHelper;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___insertingHelper);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___insertingHelper);
  }
  else
  {
    v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController);
    v5 = type metadata accessor for CRLBoardItemInsertingHelper();
    v3 = swift_allocObject(v5, 24, 7);
    v6 = swift_unknownObjectWeakInit(v3 + 16, 0);
    swift_unknownObjectWeakAssign(v6, v4);
    v7 = *(_QWORD *)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v3;
    swift_retain(v3);
    swift_release(v7);
    v2 = 0;
  }
  swift_retain(v2);
  return v3;
}

id sub_100C1CD38()
{
  return sub_100B800E4(&OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___undoToolbarItem, (uint64_t (*)(void))sub_1005268E8);
}

id sub_100C1CD4C()
{
  return sub_100B800E4(&OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___insertTextBoxToolbarItem, (uint64_t (*)(void))sub_10052F730);
}

id sub_100C1CD60()
{
  return sub_100B800E4(&OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___insertAVMediaToolbarItem, (uint64_t (*)(void))sub_1005309D4);
}

id sub_100C1CD74()
{
  return sub_100B800E4(&OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___insertStickyNoteToolbarItem, (uint64_t (*)(void))sub_100530494);
}

id sub_100C1CD88()
{
  return sub_100B800E4(&OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___insertShapeToolbarItem, (uint64_t (*)(void))sub_10052FDDC);
}

id sub_100C1CD9C()
{
  return sub_100B800E4(&OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___togglePencilModeToolbarItem, (uint64_t (*)(void))sub_1005335A0);
}

id sub_100C1CDB0()
{
  return sub_100B800E4(&OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___insertStencilToolbarItem, (uint64_t (*)(void))sub_100532280);
}

id sub_100C1CDC4()
{
  return sub_100B800E4(&OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___shareToolbarItem, (uint64_t (*)(void))sub_1005326C8);
}

id sub_100C1CDD8()
{
  return sub_100B800E4(&OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___boardViewControlsItem, (uint64_t (*)(void))sub_100532D4C);
}

id sub_100C1CDEC()
{
  return sub_100B800E4(&OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___newBoardToolbarItem, (uint64_t (*)(void))sub_10053317C);
}

objc_class *sub_100C1CE00()
{
  return sub_100C1CE28(&OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___doneToolbarItem, (uint64_t)sub_100C4F2F8);
}

objc_class *sub_100C1CE14()
{
  return sub_100C1CE28(&OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___doneWithModeToolbarItem, (uint64_t)sub_100C4F2F0);
}

objc_class *sub_100C1CE28(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  objc_class *v5;
  uint64_t v7;
  uint64_t v8;
  objc_class *v9;
  UIBarButtonItem v10;
  void *v11;
  id v12;
  UIAction_optional v14;
  UIMenu_optional v15;

  v3 = *a1;
  v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    v5 = *(objc_class **)(v2 + *a1);
  }
  else
  {
    v7 = v2;
    sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
    v8 = swift_allocObject(&unk_10129BBE0, 24, 7);
    swift_unknownObjectWeakInit(v8 + 16, v2);
    v9 = (objc_class *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, a2, v8);
    v15.value.super.super.isa = (Class)sub_1004B8930(0, (unint64_t *)&qword_1013E19A0, UIBarButtonItem_ptr);
    v14.value.super.super.isa = v9;
    v14.is_nil = 0;
    v10.super.super.isa = UIBarButtonItem.init(systemItem:primaryAction:menu:)(UIBarButtonSystemItemDone, v14, v15).super.super.isa;
    v11 = *(void **)(v7 + v3);
    *(UIBarButtonItem *)(v7 + v3) = v10;
    v5 = v10.super.super.isa;

    v4 = 0;
  }
  v12 = v4;
  return v5;
}

objc_class *sub_100C1CF38()
{
  return sub_100C1CE28(&OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___doneWithScenesNavigatorToolbarItem, (uint64_t)sub_100C4F2E8);
}

id sub_100C1CF4C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___viewOnlyToolbarItem;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___viewOnlyToolbarItem);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___viewOnlyToolbarItem);
  }
  else
  {
    v4 = sub_10054BB28();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_100C1CFA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  id v8;

  v1 = v0;
  v2 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___collaborationButtonItem;
  v3 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___collaborationButtonItem);
  v4 = v3;
  if (v3 == (void *)1)
  {
    v5 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interstitialUIController);
    if (v5)
    {
      v6 = v5;
      v4 = sub_100BDB948();

      v7 = *(_QWORD *)(v1 + v2);
    }
    else
    {
      v4 = 0;
      v7 = 1;
    }
    *(_QWORD *)(v1 + v2) = v4;
    v8 = v4;
    sub_1004CB49C((id)v7);
  }
  sub_1004CB968(v3);
  return v4;
}

uint64_t sub_100C1D040()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = v0;
  v2 = objc_msgSend(v1, "presentedViewController");
  if (v2)
  {
    v3 = v2;
    v4 = type metadata accessor for CRLScenesViewController_i();
    while (1)
    {
      v5 = v3;
      if (swift_dynamicCastClass(v3, v4))
        break;
      v6 = type metadata accessor for CRLCompactScenesViewController_i();
      v7 = swift_dynamicCastClass(v3, v6);

      if (v7)
        goto LABEL_9;
      v3 = objc_msgSend(v5, "presentedViewController");
      v1 = v5;
      if (!v3)
      {
        v8 = 0;
        goto LABEL_10;
      }
    }

LABEL_9:
    v8 = 1;
LABEL_10:
    v1 = v5;
  }
  else
  {
    v8 = 0;
  }

  return v8;
}

id sub_100C1D170()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___findReplaceController;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___findReplaceController);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___findReplaceController);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)CRLFindReplaceController), "initWithEditingCoordinator:delegate:", *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator), v0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

void *sub_100C1D228(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  char *v10;
  void *v11;
  id v12;

  v3 = v2;
  v6 = *(id *)(v3 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scrollView);
  LOBYTE(a2) = sub_100589308(a2, (uint64_t)v6, &_mh_execute_header, (uint64_t)"findInteraction(_:sessionFor:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2u, 190);

  if ((a2 & 1) == 0)
    return 0;
  v7 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_findSession;
  v8 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_findSession);
  if (!v8)
  {
    v9 = sub_100C1D170();
    objc_allocWithZone((Class)type metadata accessor for CRLiOSFindSession());
    v10 = sub_100BE9B60(v9, a1);
    v11 = *(void **)(v3 + v7);
    *(_QWORD *)(v3 + v7) = v10;

    v8 = *(void **)(v3 + v7);
  }
  v12 = v8;
  return v8;
}

uint64_t (*sub_100C1D4E4(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_tipObservation, a1, 33, 0);
  return j__swift_endAccess_0;
}

id sub_100C1D528()
{
  return sub_100C1D540(&OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___unobscuredRectLayout);
}

id sub_100C1D534()
{
  return sub_100C1D540(&OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___keyboardFrameLayoutGuide);
}

id sub_100C1D540(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v2 = *a1;
  v3 = *(void **)(v1 + *a1);
  if (v3)
  {
    v4 = *(id *)(v1 + *a1);
  }
  else
  {
    v5 = objc_msgSend(objc_allocWithZone((Class)UILayoutGuide), "init");
    v6 = *(void **)(v1 + v2);
    *(_QWORD *)(v1 + v2) = v5;
    v4 = v5;

    v3 = 0;
  }
  v7 = v3;
  return v4;
}

char *sub_100C1D614(char *a1, void *a2, void *a3, void *a4)
{
  char *v4;
  char *v8;
  uint64_t v9;
  id v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  objc_class *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  char *v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  id v55;
  id v56;
  char *v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  char *v62;
  char *v63;
  void *v64;
  unint64_t v65;
  char *v66;
  void *v67;
  char *v68;
  char *v69;
  char *v70;
  void *v71;
  char *v72;
  char v73;
  id v74;
  char *v76;
  id v78;
  _QWORD v79[3];
  ValueMetadata *v80;
  unint64_t v81;
  objc_super v82;
  objc_super v83;

  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___editorController] = 0;
  v8 = &v4[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardLibrary];
  swift_unknownObjectWeakInit(&v4[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardLibrary], 0);
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___documentModeController] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___boardEditor] = 0;
  v9 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_selectionModelTranslator;
  v10 = objc_allocWithZone((Class)CRLSelectionModelTranslator);
  v11 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v10, "init");
  v12 = &v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_delegate];
  *((_QWORD *)v12 + 1) = 0;
  swift_unknownObjectWeakInit(v12, 0);
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___insertingHelper] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_insertingCancellableToken] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_traitChangeRegistration] = 0;
  v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isSuppressingBottomToolTrayForPresentationController] = 0;
  v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isExportingToPDF] = 0;
  v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isTornDown] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_undoAlertController] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_progressTimer] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_progressViewController] = 0;
  v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardHasSyncedAtLeastOnce] = 0;
  v13 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_cloudQuotaMessagingObserver;
  v14 = type metadata accessor for CRLCloudQuotaMessagingObserver();
  v15 = swift_allocObject(v14, 88, 7);
  *(_QWORD *)(v15 + 24) = 0;
  swift_unknownObjectWeakInit(v15 + 16, 0);
  v16 = (void *)ICQCurrentInAppMessageChangedNotification;
  *(_QWORD *)(v15 + 32) = 0;
  *(_QWORD *)(v15 + 40) = v16;
  *(_OWORD *)(v15 + 48) = 0u;
  *(_OWORD *)(v15 + 64) = 0u;
  *(_QWORD *)(v15 + 80) = 0x4122750000000000;
  *(_QWORD *)&v11[v13] = v15;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interstitialUIController] = 0;
  v17 = &v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_shareSyncAwaitTask];
  *((_QWORD *)v17 + 1) = 0;
  *((_QWORD *)v17 + 2) = 0;
  *(_QWORD *)v17 = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasBackgroundLayer] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasBackgroundView] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_pencilKitCanvasViewController] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_pencilKitCanvasView] = 0;
  v18 = &v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_CRLUpdateInfoKey];
  strcpy(&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_CRLUpdateInfoKey], "iOSUpdateInfo");
  *((_WORD *)v18 + 7) = -4864;
  v19 = &v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_CRLUnsupportedDevicesKey];
  *(_QWORD *)v19 = 0xD000000000000012;
  *((_QWORD *)v19 + 1) = 0x8000000100FE1820;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_subscriptions] = &_swiftEmptySetSingleton;
  v20 = &v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_lastContentOffset];
  *(_QWORD *)v20 = 0;
  *((_QWORD *)v20 + 1) = 0;
  v21 = &v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_lastCanvasCenter];
  *(_QWORD *)v21 = 0;
  *((_QWORD *)v21 + 1) = 0;
  v22 = &v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_toolbarButtonState];
  *(_OWORD *)v22 = 0u;
  *((_OWORD *)v22 + 1) = 0u;
  *(_DWORD *)(v22 + 31) = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___undoToolbarItem] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___insertTextBoxToolbarItem] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___insertAVMediaToolbarItem] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___insertStickyNoteToolbarItem] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___insertShapeToolbarItem] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___togglePencilModeToolbarItem] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___insertStencilToolbarItem] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___shareToolbarItem] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___boardViewControlsItem] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___newBoardToolbarItem] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___doneToolbarItem] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___doneWithModeToolbarItem] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___doneWithScenesNavigatorToolbarItem] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___viewOnlyToolbarItem] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___collaborationButtonItem] = 1;
  swift_unknownObjectWeakInit(&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_photoPicker], 0);
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_photoPickerLoadingProgress] = 0;
  swift_unknownObjectWeakInit(&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_cameraPicker], 0);
  swift_unknownObjectWeakInit(&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_documentScanner], 0);
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_gpHelper] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_insertURLAlert] = 0;
  v23 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scrollView;
  v24 = objc_allocWithZone((Class)CRLScrollView);
  v25 = v16;
  *(_QWORD *)&v11[v23] = objc_msgSend(v24, "init");
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasScrollViewController] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_bottomToolTray] = 0;
  v26 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_snapshotViewWrapper;
  *(_QWORD *)&v11[v26] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasZoomControlViewController] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasZoomAndScenesContainerView] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardControlsViewController] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_connectorModeMessageViewController] = 0;
  v27 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_connectorModeMessageViewState;
  *(_QWORD *)&v11[v27] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CRLConnectorModeMessageViewState(0)), "init");
  v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_skipNextToolbarUpdate] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesNavigatorViewController] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_compactScenesNavigatorViewController] = 0;
  v28 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesNavigatorState;
  *(_QWORD *)&v11[v28] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CRLScenesNavigatorState(0)), "init");
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesNavigationCrossfadeSnapshotLayer] = 0;
  v29 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState;
  *(_QWORD *)&v11[v29] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CRLScenesPopoverState(0)), "init");
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPresenter] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_compactScenesPresenter] = 0;
  v30 = &v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_currentSceneIndex];
  *(_QWORD *)v30 = 0;
  v30[8] = 1;
  v31 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_sceneToContentDict;
  *(_QWORD *)&v11[v31] = sub_1008D8044((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_presentedSceneAlert] = 0;
  swift_unknownObjectWeakInit(&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_findReplaceInteraction], 0);
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_findSession] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___findReplaceController] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_freehandDrawingHighlightManager] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_keyboardTopEdgeLayoutGuideConstraint] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_topUnobscuredRectLayoutGuideConstraint] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_bottomUnobscuredRectLayoutGuideConstraint] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_leadingUnobscuredRectLayoutGuideConstraint] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_trailingUnobscuredRectLayoutGuideConstraint] = 0;
  v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isChangingDocumentModeToHandwriting] = 0;
  v32 = &v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_shapeLibrarySearchTerm];
  *(_QWORD *)v32 = 0;
  *((_QWORD *)v32 + 1) = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_tipObservation] = 0;
  swift_unknownObjectWeakInit(&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_tipPopoverController], 0);
  v33 = &v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_currentlyPresentedTip];
  *(_OWORD *)v33 = 0u;
  *((_OWORD *)v33 + 1) = 0u;
  *((_QWORD *)v33 + 4) = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_tipPresentationView] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_mediaReplacer] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___unobscuredRectLayout] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___keyboardFrameLayoutGuide] = 0;
  v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isClosing] = 0;
  v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isClosed] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_followHUD] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_followBorderHighlightView] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_stateRestorationHelper] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_viewScaleObservation] = 0;
  v34 = &v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scrollObserver];
  *(_OWORD *)v34 = 0u;
  *((_OWORD *)v34 + 1) = 0u;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__sharedPencilTray] = 0;
  v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_didRestoreCanvasViewState] = 0;
  v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__isCanvasDotGridEnabled] = 2;
  v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__isConnectorModeEnabled] = 2;
  v35 = &v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_lastPrintContentDate];
  v36 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v35, 1, 1, v36);
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator] = a1;
  v37 = *(_QWORD *)&a1[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator]
      + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_delegate;
  *(_QWORD *)(v37 + 8) = &off_10127A620;
  swift_unknownObjectWeakAssign(v37, a1);
  swift_unknownObjectWeakAssign(v8, a2);
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController] = a3;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasViewController] = a4;
  v38 = *(void **)&a1[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard];
  v39 = (objc_class *)type metadata accessor for CRLGelatoShareSheetProvider();
  v40 = (char *)objc_allocWithZone(v39);
  v41 = &v40[OBJC_IVAR____TtC8Freeform27CRLGelatoShareSheetProvider_thumbnailProvider];
  *(_QWORD *)v41 = 0;
  *((_QWORD *)v41 + 1) = 0;
  *(_QWORD *)&v40[OBJC_IVAR____TtC8Freeform27CRLGelatoShareSheetProvider_presentingViewController] = 0;
  *(_QWORD *)&v40[OBJC_IVAR____TtC8Freeform27CRLGelatoShareSheetProvider_icc] = a3;
  *(_QWORD *)&v40[OBJC_IVAR____TtC8Freeform27CRLGelatoShareSheetProvider_board] = v38;
  *(_QWORD *)&v40[OBJC_IVAR____TtC8Freeform27CRLGelatoShareSheetProvider_boardLibrary] = a2;
  v42 = *(_QWORD *)v41;
  *(_QWORD *)v41 = 0;
  *((_QWORD *)v41 + 1) = 0;
  v43 = a3;
  v44 = v38;
  v45 = a2;
  v46 = v43;
  v47 = v44;
  v48 = v45;
  v76 = a1;
  v49 = a4;
  swift_unknownObjectRelease(v42);
  v83.receiver = v40;
  v83.super_class = v39;
  v50 = objc_msgSendSuper2(&v83, "init");

  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_shareSheetProvider] = v50;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_statusHUDManager] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CRLStatusHUDManager()), "init");

  v82.receiver = v11;
  v82.super_class = (Class)type metadata accessor for CRLiOSBoardViewController(0);
  v51 = (char *)objc_msgSendSuper2(&v82, "initWithNibName:bundle:", 0, 0);
  v52 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator;
  v53 = *(void **)(*(_QWORD *)&v51[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  v54 = type metadata accessor for CRLViewStateRestorationHelper();
  swift_allocObject(v54, 225, 15);
  v55 = v46;
  v56 = v48;
  v57 = v51;
  v58 = v53;
  v59 = sub_1005E5F04(v58, v56, v55);

  v60 = *(_QWORD *)&v57[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_stateRestorationHelper];
  *(_QWORD *)&v57[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_stateRestorationHelper] = v59;
  swift_release(v60);
  v61 = objc_allocWithZone((Class)type metadata accessor for CRLGelatoInterstitialUIController(0));
  v62 = v57;
  v63 = sub_100BDB5D0(v62);
  v64 = *(void **)&v62[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interstitialUIController];
  *(_QWORD *)&v62[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interstitialUIController] = v63;

  sub_100C1E130();
  objc_msgSend(*(id *)(*(_QWORD *)&v51[v52] + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_undoManager), "addDelegate:", v62);
  v80 = &type metadata for CRLFeatureFlags;
  v65 = sub_1004DB6DC();
  v81 = v65;
  LOBYTE(v79[0]) = 11;
  LOBYTE(v58) = isFeatureEnabled(_:)(v79);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v79);
  if ((v58 & 1) != 0)
  {
    v78 = v49;
    v66 = *(char **)(*(_QWORD *)&v51[v52] + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator);
    v67 = *(void **)&v66[OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_uiDelegates];
    v68 = v62;
    v69 = v66;
    if ((objc_msgSend(v67, "containsObject:", v68) & 1) == 0)
      objc_msgSend(v67, "addObject:", v68);

    v70 = *(char **)(*(_QWORD *)&v51[v52] + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator);
    v71 = *(void **)&v70[OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_interactiveCanvasControllers];
    v72 = v70;
    if ((objc_msgSend(v71, "containsObject:", v55) & 1) == 0)
      objc_msgSend(v71, "addObject:", v55);

    v49 = v78;
  }
  v80 = &type metadata for CRLFeatureFlags;
  v81 = v65;
  LOBYTE(v79[0]) = 13;
  v73 = isFeatureEnabled(_:)(v79);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v79);
  if ((v73 & 1) != 0)
  {
    v74 = objc_msgSend(objc_allocWithZone((Class)CRLiOSFreehandDrawingHighlightManager), "initWithInteractiveCanvasController:", v55);

    v49 = *(id *)&v62[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_freehandDrawingHighlightManager];
    *(_QWORD *)&v62[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_freehandDrawingHighlightManager] = v74;
  }
  else
  {

  }
  return v62;
}

void sub_100C1E130()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  _QWORD v11[5];
  uint64_t v12;

  v1 = sub_100C1CAE8();
  objc_msgSend(v1, "addModeObserver:", v0);

  v2 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v3 = qword_1013DCD70;
  v4 = objc_retain(*(id *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                         + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_commandController));
  if (v3 != -1)
    swift_once(&qword_1013DCD70, sub_1006A5298);
  v5 = qword_10147F030;
  v6 = swift_allocObject(&unk_10129BBE0, 24, 7);
  swift_unknownObjectWeakInit(v6 + 16, v0);
  v11[4] = sub_100C4F2E0;
  v12 = v6;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = *(_QWORD *)"";
  v11[2] = sub_100568280;
  v11[3] = &unk_10129C7B0;
  v7 = _Block_copy(v11);
  v8 = v12;
  v9 = v4;
  v10 = objc_msgSend(v2, "addObserverForName:object:queue:usingBlock:", v5, v9, 0, v7, swift_release(v8).n128_f64[0]);
  _Block_release(v7);

  swift_unknownObjectRelease(v10);
  if (qword_1013DD568 != -1)
    swift_once(&qword_1013DD568, sub_100946FB4);
  objc_msgSend(v2, "addObserver:selector:name:object:", v0, "iCloudStatusDidChangeWithNotification:", qword_10147FFC0, 0);
  if (qword_1013DDE40 != -1)
    swift_once(&qword_1013DDE40, sub_100CAC35C);
  objc_msgSend(v2, "addObserver:selector:name:object:", v0, "networkReachabilityDidChangeWithNotification:", qword_1014812C0, 0);
  if (qword_1013DD110 != -1)
    swift_once(&qword_1013DD110, sub_1007920EC);
  objc_msgSend(v2, "addObserver:selector:name:object:", v0, "syncControllerSavedZoneWithNotification:", qword_10147F5C0, 0);

}

void sub_100C1E3AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t Strong;
  char *v13;
  uint64_t v14;
  void *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  id v29;
  _BYTE v30[16];
  char v31[24];
  char v32[24];

  v3 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v3);
  v5 = &v30[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for UUID(0);
  __chkstk_darwin(v6);
  v8 = &v30[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v9);
  v11 = &v30[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a2 += 16;
  swift_beginAccess(a2, v32, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v13 = (char *)Strong;
    v14 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardLibrary);
    if (v14)
    {
      v15 = (void *)v14;
      v16 = (char *)*(id *)(v14 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_sharedHighlightController);

      v17 = *(char **)(*(_QWORD *)&v13[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                     + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
      v18 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
      v19 = *(_QWORD *)&v17[OBJC_IVAR____TtC8Freeform8CRLBoard_data];
      v20 = v19 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
      swift_beginAccess(v19 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v31, 0, 0);
      sub_1004B8460(v20, (uint64_t)v5, type metadata accessor for CRLBoardCRDTData);
      v21 = v17;
      swift_retain(v19);
      v22 = sub_1004B804C(&qword_1013E1A80);
      CRRegister.wrappedValue.getter(v22);
      sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLBoardCRDTData);
      swift_release(v19);
      v23 = (uint64_t *)(*(_QWORD *)&v17[v18] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
      v24 = *v23;
      v25 = v23[1];
      swift_bridgeObjectRetain(v25);
      sub_10067AFD0((uint64_t)v8, v24, v25, (uint64_t)v11);

      v26 = *(_QWORD *)&v16[OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_sharedHighlights];
      __chkstk_darwin(v27);
      *(_QWORD *)&v30[-16] = v11;
      swift_bridgeObjectRetain(v26);
      v28 = (char *)sub_100C9D0C0((uint64_t (*)(id *))sub_1006F01E8, (uint64_t)&v30[-32], v26);
      swift_bridgeObjectRelease(v26);
      if (v28)
      {
        v29 = objc_msgSend(objc_allocWithZone((Class)SWHighlightChangeEvent), "initWithHighlight:trigger:", *(_QWORD *)&v28[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_swHighlight], 1);
        objc_msgSend(*(id *)&v16[OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_highlightCenter], "postNoticeForHighlightEvent:", v29);

      }
      else
      {

      }
      sub_1004B84A4((uint64_t)v11, type metadata accessor for CRLBoardIdentifier);
    }
    else
    {

    }
  }
}

void sub_100C1E6AC()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  char *v14;
  char *v15;
  void *v16;
  void *v17;
  char *v18;
  void *v19;
  id v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  char **v27;
  char **v28;
  char *v29;
  uint64_t Strong;
  void *v31;
  void *v32;
  char *v33;
  id v34;
  unsigned __int8 *v35;
  uint64_t v36;
  int v37;
  unsigned __int8 *v38;
  void *v39;
  void *v40;
  _BYTE *v41;
  id v42;
  uint64_t v43;
  id v44;
  id v45;
  id v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  id v52;
  void *v53;
  void *v54;
  uint64_t v55;
  void *v56;
  id v57;
  id v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD v65[5];
  _OWORD v66[3];
  _OWORD v67[2];

  v1 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v1);
  v3 = (char *)&v65[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100C26214((uint64_t)v66);
  v4 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v5 = swift_allocObject(&unk_10129C798, 113, 7);
  *(_QWORD *)(v5 + 16) = 0;
  *(_QWORD *)(v5 + 24) = 0;
  *(_QWORD *)(v5 + 32) = v0;
  v6 = v66[0];
  *(_OWORD *)(v5 + 56) = v66[1];
  v7 = v67[0];
  *(_OWORD *)(v5 + 72) = v66[2];
  *(_OWORD *)(v5 + 88) = v7;
  *(_OWORD *)(v5 + 97) = *(_OWORD *)((char *)v67 + 9);
  *(_OWORD *)(v5 + 40) = v6;
  v8 = v0;
  sub_10092217C(v66, (void (*)(uint64_t, uint64_t))sub_10057939C);
  v9 = sub_1009880C4((uint64_t)v3, (uint64_t)&unk_10140B910, v5);
  swift_release(v9);
  sub_10092217C(v66, (void (*)(uint64_t, uint64_t))sub_1004BE2FC);
  sub_1004CB800((uint64_t)v3, &qword_1013E01F0);
  v10 = *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator];
  objc_msgSend(*(id *)(v10 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_undoManager), "removeDelegate:", v8);
  v11 = OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator;
  v12 = *(char **)(v10 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator);
  v13 = *(void **)&v12[OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_uiDelegates];
  v14 = v12;
  if (objc_msgSend(v13, "containsObject:", v8))
    objc_msgSend(v13, "removeObject:", v8);

  v15 = *(char **)(v10 + v11);
  v16 = *(void **)&v8[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController];
  v17 = *(void **)&v15[OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_interactiveCanvasControllers];
  v18 = v15;
  if (objc_msgSend(v17, "containsObject:", v16))
    objc_msgSend(v17, "removeObject:", v16);

  v19 = *(void **)&v8[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__sharedPencilTray];
  if (v19)
  {
    v20 = v19;
    sub_100B4F5A8();

  }
  v21 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_pencilKitCanvasViewController;
  v22 = *(void **)&v8[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_pencilKitCanvasViewController];
  if (v22)
  {
    v23 = v22;
    sub_1006F05A4();

    v22 = *(void **)&v8[v21];
  }
  *(_QWORD *)&v8[v21] = 0;

  v24 = sub_100C1CAE8();
  v25 = *(void **)&v8[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasViewController];
  objc_msgSend(v24, "removeModeObserver:", v25);

  v26 = sub_100C1CAE8();
  objc_msgSend(v26, "removeModeObserver:", v8);

  v65[3] = &type metadata for CRLFeatureFlags;
  v65[4] = sub_1004DB6DC();
  LOBYTE(v65[0]) = 16;
  LOBYTE(v26) = isFeatureEnabled(_:)(v65);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v65);
  v27 = &selRef_crlwp_characterSetWithCharactersInArray_length_;
  v28 = &selRef_removeCollaboratorHUDController_;
  if ((v26 & 1) != 0)
  {
    v29 = *(char **)&v8[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesNavigatorViewController];
    if (v29)
    {
      Strong = swift_unknownObjectWeakLoadStrong(&v29[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_boardViewController]);
      if (Strong)
      {
        v31 = (void *)Strong;
        v32 = *(void **)(Strong + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController);
        v33 = v29;
        v34 = v32;

        objc_msgSend(v34, "removeDecorator:", v33);
      }
    }
    v35 = *(unsigned __int8 **)&v8[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPresenter];
    if (v35)
    {
      v36 = OBJC_IVAR____TtC8Freeform25CRLScenesViewController_i_isTornDown;
      v37 = v35[OBJC_IVAR____TtC8Freeform25CRLScenesViewController_i_isTornDown];
      v38 = v35;
      if (v37 == 1)
      {
        sub_100757E04(&_mh_execute_header, (uint64_t)"teardown()", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLScenesViewController_i.swift", 95, 2, 56, "Should not call tearDown twice.", 31, 2u, (uint64_t)_swiftEmptyArrayStorage);
        v28 = &selRef_removeCollaboratorHUDController_;
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"teardown()", 10, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLScenesViewController_i.swift", 95, 2u, 56, (uint64_t)"Should not call tearDown twice.", 31, 2u);
      }
      v35[v36] = 1;

      v27 = &selRef_crlwp_characterSetWithCharactersInArray_length_;
    }
    v39 = *(void **)&v8[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_compactScenesPresenter];
    if (v39)
    {
      v40 = (void *)objc_opt_self(NSNotificationCenter);
      v41 = v39;
      v42 = objc_msgSend(v40, v27[174]);
      objc_msgSend(v42, v28[37], v41);

      v43 = OBJC_IVAR____TtC8Freeform32CRLCompactScenesViewController_i_isTornDown;
      if (v41[OBJC_IVAR____TtC8Freeform32CRLCompactScenesViewController_i_isTornDown] == 1)
      {
        sub_100757E04(&_mh_execute_header, (uint64_t)"teardown()", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLScenesViewController_i.swift", 95, 2, 174, "Should not call tearDown twice.", 31, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"teardown()", 10, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLScenesViewController_i.swift", 95, 2u, 174, (uint64_t)"Should not call tearDown twice.", 31, 2u);
      }
      v41[v43] = 1;

    }
  }
  objc_msgSend(v25, "teardown");
  v44 = objc_msgSend(v16, "textInputResponder");
  objc_msgSend(v44, "resignFirstResponder");

  objc_msgSend(v16, "teardown");
  objc_msgSend(v16, "setDelegate:", 0);
  objc_msgSend(v25, "setUserDialogPresenter:", 0);
  objc_msgSend(v25, "setDelegate:", 0);
  objc_msgSend(v16, "setLayerHost:", 0);
  v45 = sub_100C1C9E0();
  objc_msgSend(v45, "teardown");

  v46 = objc_msgSend(v8, "view");
  if (v46)
  {
    v47 = v46;
    v48 = type metadata accessor for CRLiOSBoardView();
    v49 = swift_dynamicCastClassUnconditional(v47, v48, 0, 0, 0)
        + OBJC_IVAR____TtC8Freeform15CRLiOSBoardView_delegate;
    *(_QWORD *)(v49 + 8) = 0;
    swift_unknownObjectWeakAssign(v49, 0);

    v50 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interstitialUIController;
    v51 = *(void **)&v8[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interstitialUIController];
    if (v51)
    {
      v52 = v51;
      sub_100BDBE28();

      v51 = *(void **)&v8[v50];
    }
    *(_QWORD *)&v8[v50] = 0;

    v53 = *(void **)&v8[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardControlsViewController];
    *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardControlsViewController] = 0;

    v54 = *(void **)&v8[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_connectorModeMessageViewController];
    *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_connectorModeMessageViewController] = 0;

    v55 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_freehandDrawingHighlightManager;
    objc_msgSend(*(id *)&v8[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_freehandDrawingHighlightManager], "teardown");
    v56 = *(void **)&v8[v55];
    *(_QWORD *)&v8[v55] = 0;

    v57 = objc_msgSend((id)objc_opt_self(UIPrintInteractionController), "sharedPrintController");
    objc_msgSend(v57, "dismissAnimated:", 0);

    v58 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), v27[174]);
    objc_msgSend(v58, v28[37], v8);

    objc_msgSend((id)objc_opt_self(CRLiOSKeyboardMonitor), "removeKeyboardObserver:", v8);
    sub_10096797C();
    v59 = &v8[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_subscriptions];
    swift_beginAccess(&v8[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_subscriptions], v65, 1, 0);
    v60 = *(_QWORD *)v59;
    swift_bridgeObjectRetain(*(_QWORD *)v59);
    sub_100C19B9C(v61);
    swift_bridgeObjectRelease(v60);
    v62 = *(_QWORD *)v59;
    *(_QWORD *)v59 = &_swiftEmptySetSingleton;
    swift_bridgeObjectRelease(v62);
    v63 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isTornDown;
    if (v8[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isTornDown] == 1)
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"tearDown()", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 405, "Should not call tearDown() twice.", 33, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"tearDown()", 10, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2u, 405, (uint64_t)"Should not call tearDown() twice.", 33, 2u);
    }
    v8[v63] = 1;
  }
  else
  {
    __break(1u);
  }
}

id sub_100C1EF2C()
{
  _BYTE *v0;
  objc_super v2;

  if ((v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isTornDown] & 1) == 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"deinit", 6, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 410, "Must call tearDown() before deallocation occurs.", 48, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"deinit", 6, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2u, 410, (uint64_t)"Must call tearDown() before deallocation occurs.", 48, 2u);
  }
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSBoardViewController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100C1F718()
{
  return type metadata accessor for CRLiOSBoardViewController(0);
}

uint64_t type metadata accessor for CRLiOSBoardViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_10140B350;
  if (!qword_10140B350)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLiOSBoardViewController);
  return result;
}

uint64_t sub_100C1F75C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[8] = v0;
  v2 = type metadata accessor for MainActor(0);
  v1[9] = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[10] = v3;
  v1[11] = v4;
  return swift_task_switch(sub_100C1F7C8, v3, v4);
}

uint64_t sub_100C1F7C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v5;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_didRestoreCanvasViewState;
  *(_QWORD *)(v0 + 96) = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_didRestoreCanvasViewState;
  if ((*(_BYTE *)(v1 + v2) & 1) != 0
    || (v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_stateRestorationHelper),
        (*(_QWORD *)(v0 + 104) = v3) == 0))
  {
    v5 = swift_release(*(_QWORD *)(v0 + 72));
    return (*(uint64_t (**)(__n128))(v0 + 8))(v5);
  }
  else
  {
    swift_retain(v3);
    return swift_task_switch(sub_100C1F84C, v3, 0);
  }
}

uint64_t sub_100C1F84C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v13;

  v1 = *(_QWORD *)(v0 + 104);
  if ((*(_BYTE *)(v1 + 144) & 1) != 0)
  {
    v2 = *(_BYTE *)(v1 + 224);
    *(_BYTE *)(v0 + 193) = v2;
    v3 = *(_QWORD *)(v1 + 216);
    *(_QWORD *)(v0 + 120) = v3;
    v4 = *(_QWORD *)(v1 + 208);
    *(_QWORD *)(v0 + 128) = v4;
    v5 = *(_QWORD *)(v1 + 200);
    *(_QWORD *)(v0 + 136) = v5;
    v6 = *(_QWORD *)(v1 + 192);
    *(_QWORD *)(v0 + 144) = v6;
    v7 = *(_QWORD *)(v1 + 184);
    *(_QWORD *)(v0 + 152) = v7;
    v8 = *(_QWORD *)(v1 + 176);
    *(_QWORD *)(v0 + 160) = v8;
    v9 = *(_QWORD *)(v1 + 168);
    *(_QWORD *)(v0 + 168) = v9;
    v10 = *(_QWORD *)(v1 + 160);
    *(_QWORD *)(v0 + 176) = v10;
    v11 = *(_QWORD *)(v1 + 152);
    *(_QWORD *)(v0 + 184) = v11;
    sub_100C4F224(v11, v10, v9, v8, v7, v6, v5, v4, v3, v2);
    swift_release(v1);
    return swift_task_switch(sub_100C1FA04, *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88));
  }
  else
  {
    v13 = (_QWORD *)swift_task_alloc(dword_1013E6BCC);
    *(_QWORD *)(v0 + 112) = v13;
    *v13 = v0;
    v13[1] = sub_100C1F91C;
    return sub_1005E5824();
  }
}

uint64_t sub_100C1F91C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 112));
  return swift_task_switch(sub_100C1F96C, *(_QWORD *)(v1 + 104), 0);
}

uint64_t sub_100C1F96C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_BYTE *)(v1 + 224);
  *(_BYTE *)(v0 + 193) = v2;
  v3 = *(_QWORD *)(v1 + 216);
  *(_QWORD *)(v0 + 120) = v3;
  v4 = *(_QWORD *)(v1 + 208);
  *(_QWORD *)(v0 + 128) = v4;
  v5 = *(_QWORD *)(v1 + 200);
  *(_QWORD *)(v0 + 136) = v5;
  v6 = *(_QWORD *)(v1 + 192);
  *(_QWORD *)(v0 + 144) = v6;
  v7 = *(_QWORD *)(v1 + 184);
  *(_QWORD *)(v0 + 152) = v7;
  v8 = *(_QWORD *)(v1 + 176);
  *(_QWORD *)(v0 + 160) = v8;
  v9 = *(_QWORD *)(v1 + 168);
  *(_QWORD *)(v0 + 168) = v9;
  v10 = *(_QWORD *)(v1 + 160);
  *(_QWORD *)(v0 + 176) = v10;
  v11 = *(_QWORD *)(v1 + 152);
  *(_QWORD *)(v0 + 184) = v11;
  sub_100C4F224(v11, v10, v9, v8, v7, v6, v5, v4, v3, v2);
  swift_release(v1);
  return swift_task_switch(sub_100C1FA04, *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88));
}

uint64_t sub_100C1FA04()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  char v20;
  uint64_t v21;

  v1 = *(unsigned __int8 *)(v0 + 193);
  swift_release(*(_QWORD *)(v0 + 72));
  if (v1 != 2)
  {
    v2 = *(_QWORD *)(v0 + 176);
    v3 = *(_QWORD *)(v0 + 184);
    v4 = *(_QWORD *)(v0 + 160);
    v16 = *(_QWORD *)(v0 + 168);
    v17 = v4;
    v5 = *(_QWORD *)(v0 + 144);
    v21 = *(_QWORD *)(v0 + 152);
    v7 = *(_QWORD *)(v0 + 128);
    v6 = *(_QWORD *)(v0 + 136);
    v8 = *(_QWORD *)(v0 + 120);
    v20 = *(_BYTE *)(v0 + 193);
    v9 = *(_QWORD *)(v0 + 96);
    v10 = *(_QWORD *)(v0 + 64);
    *(_BYTE *)(v0 + 192) = v21 & 1;
    v18 = *(id *)(v10 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController);
    v19 = v9;
    v11 = swift_allocObject(&unk_10129BBE0, 24, 7);
    swift_unknownObjectWeakInit(v11 + 16);
    v12 = swift_allocObject(&unk_10129C748, 97, 7);
    *(_QWORD *)(v12 + 16) = v11;
    *(_QWORD *)(v12 + 24) = v3;
    *(_QWORD *)(v12 + 32) = v2;
    *(_QWORD *)(v12 + 40) = v16;
    *(_QWORD *)(v12 + 48) = v4;
    *(_BYTE *)(v12 + 56) = *(_BYTE *)(v0 + 192);
    *(_QWORD *)(v12 + 64) = v5;
    *(_QWORD *)(v12 + 72) = v6;
    *(_QWORD *)(v12 + 80) = v7;
    *(_QWORD *)(v12 + 88) = v8;
    *(_QWORD *)(v0 + 16) = _NSConcreteStackBlock;
    *(_BYTE *)(v12 + 96) = v20 & 1;
    *(_QWORD *)(v0 + 48) = sub_100C4F274;
    *(_QWORD *)(v0 + 56) = v12;
    *(_QWORD *)(v0 + 24) = *(_QWORD *)"";
    *(_QWORD *)(v0 + 32) = sub_1005D2FC0;
    *(_QWORD *)(v0 + 40) = &unk_10129C760;
    v13 = _Block_copy((const void *)(v0 + 16));
    v14 = *(_QWORD *)(v0 + 56);
    sub_10057939C(v5, v6);
    sub_10057939C(v7, v8);
    objc_msgSend(v18, "performBlockOnMainThreadAfterLayoutIfNecessary:", v13, swift_release(v14).n128_f64[0]);
    _Block_release(v13);
    *(_BYTE *)(v10 + v19) = 1;
    sub_1005E6090(v3, v2, v16, v17, v21, v5, v6, v7, v8, v20);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100C1FBD0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  id v8;
  id v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  double v15;
  void *v16;
  void *v17;
  NSString v18;
  double v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  id v24;
  objc_class *v25;
  _BYTE *v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  void *v36;
  id v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __objc2_class *v42;
  objc_class *v43;
  double v44;
  double v45;
  double v46;
  double v47;
  id v48;
  uint64_t v49;
  void *v50;
  void *v51;
  void *v52;
  id v53;
  id v54;
  void *v55;
  void *v56;
  id v57;
  void *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  double v63;
  uint64_t v64;
  void *v65;
  id v66;
  id v67;
  Class isa;
  id v69;
  id v70;
  uint64_t v71;
  void *v72;
  char *v73;
  id v74;
  char *v75;
  void *v76;
  id v77;
  void *v78;
  id v79;
  void *v80;
  char *v81;
  void *Strong;
  id v83;
  uint64_t v84;
  char *v85;
  id v86;
  id v87;
  id v88;
  id v89;
  objc_super v90;

  v1 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v1);
  v3 = (char *)&v84 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRLiOSBoardView();
  v6 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v4, v5)), "init");
  v7 = &v6[OBJC_IVAR____TtC8Freeform15CRLiOSBoardView_delegate];
  *((_QWORD *)v7 + 1) = &off_10129B7E0;
  objc_msgSend(v0, "setView:", v6, swift_unknownObjectWeakAssign(v7, v0).n128_f64[0]);
  v8 = objc_msgSend(objc_allocWithZone((Class)CRLCanvasView), "init");
  v9 = objc_msgSend(v8, "canvasLayer");
  v10 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v3, 1, 1, v10);
  type metadata accessor for MainActor(0);
  v11 = v0;
  v12 = static MainActor.shared.getter(v11);
  v13 = (_QWORD *)swift_allocObject(&unk_10129CCE8, 40, 7);
  v13[2] = v12;
  v13[3] = &protocol witness table for MainActor;
  v13[4] = v11;
  v14 = sub_100521B98((uint64_t)v3, (uint64_t)&unk_10140BA48, (uint64_t)v13);
  *(_QWORD *)&v15 = swift_release(v14).n128_u64[0];
  v16 = *(void **)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasViewController];
  objc_msgSend(v16, "setView:", v8, v15);
  v17 = *(void **)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scrollView];
  v88 = v8;
  objc_msgSend(v17, "addSubview:", v8);
  v18 = objc_msgSend((id)objc_opt_self(CRLAccessibility), "iOSBoardViewControllerScrollViewIdentifier");
  if (!v18)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v18 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v19 = swift_bridgeObjectRelease().n128_u64[0];
  }
  objc_msgSend(v17, "setAccessibilityIdentifier:", v18, v19);

  v20 = *(void **)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController];
  objc_msgSend(v16, "setInteractiveCanvasController:", v20);
  objc_msgSend(v20, "setLayerHost:", v16);
  objc_msgSend(v20, "setDelegate:", v11);
  objc_msgSend(v16, "setDelegate:", v11);
  objc_msgSend(v16, "setUserDialogPresenter:", v11);
  v21 = sub_100C1CAE8();
  objc_msgSend(v21, "addModeObserver:", v16);

  objc_msgSend(v20, "setShouldCanvasScrollingSizeGrowToFitBoardContent:", 1);
  v89 = v9;
  objc_msgSend(v9, "setUnscaledSize:fixFrame:", 0, 1000.0, 500.0);
  objc_msgSend(v20, "setCreateRepsForOffscreenLayouts:", 0);
  v22 = objc_msgSend(objc_allocWithZone((Class)CRLFreehandDrawingToolkitUIState), "init");
  v23 = objc_allocWithZone((Class)CRLFreehandDrawingToolkit);
  v87 = v22;
  v24 = objc_msgSend(v23, "initWithDelegate:uiState:", v11, v22);
  objc_msgSend(v20, "setFreehandDrawingToolkit:", v24);

  v25 = (objc_class *)type metadata accessor for CRLiOSPencilKitCanvasViewController();
  v26 = objc_allocWithZone(v25);
  swift_unknownObjectWeakInit(&v26[OBJC_IVAR____TtC8Freeform35CRLiOSPencilKitCanvasViewController_observedToolkit]);
  v26[OBJC_IVAR____TtC8Freeform35CRLiOSPencilKitCanvasViewController_isTornDown] = 0;
  *(_QWORD *)&v26[OBJC_IVAR____TtC8Freeform35CRLiOSPencilKitCanvasViewController_smartSelectionManager] = 0;
  *(_QWORD *)&v26[OBJC_IVAR____TtC8Freeform35CRLiOSPencilKitCanvasViewController_smartSelectionView] = 0;
  swift_unknownObjectUnownedInit(&v26[OBJC_IVAR____TtC8Freeform35CRLiOSPencilKitCanvasViewController_delegate], v11);
  v90.receiver = v26;
  v90.super_class = v25;
  v27 = objc_msgSendSuper2(&v90, "initWithNibName:bundle:", 0, 0);
  objc_msgSend(v11, "addChildViewController:", v27);
  objc_msgSend(v27, "didMoveToParentViewController:", v11);
  v28 = *(void **)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_pencilKitCanvasViewController];
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_pencilKitCanvasViewController] = v27;
  v29 = v27;

  v86 = v29;
  v30 = objc_msgSend(v29, "view");
  if (!v30)
  {
    __break(1u);
    return;
  }
  v31 = v30;
  v32 = objc_opt_self(PKCanvasView);
  v33 = swift_dynamicCastObjCClassUnconditional(v31, v32, 0, 0, 0);
  v34 = *(void **)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_pencilKitCanvasView];
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_pencilKitCanvasView] = v33;

  v35 = objc_msgSend(objc_allocWithZone((Class)UIViewController), "initWithNibName:bundle:", 0, 0);
  objc_msgSend(v11, "addChildViewController:", v35);
  objc_msgSend(v35, "didMoveToParentViewController:", v11);
  objc_msgSend(v35, "setView:", v17);
  v36 = *(void **)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasScrollViewController];
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasScrollViewController] = v35;
  v37 = v35;

  objc_msgSend(v37, "addChildViewController:", v16);
  objc_msgSend(v16, "didMoveToParentViewController:", v37);
  objc_msgSend(v17, "setContentInsetAdjustmentBehavior:", 3);
  v38 = objc_msgSend(v20, "canvasBackground");
  v39 = (*(uint64_t (**)(void))((swift_isaMask & *v38) + 0x80))();

  v40 = type metadata accessor for CRLCanvasBackgroundView();
  v41 = swift_dynamicCastMetatype(v39, v40);
  v42 = _TtC8Freeform23CRLBoardItemDatabaseRow;
  v85 = v6;
  if (v41)
  {
    v43 = (objc_class *)v41;
    objc_msgSend(v17, "frame");
    v48 = objc_msgSend(objc_allocWithZone(v43), "initWithFrame:", v44, v45, v46, v47);
    v49 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasBackgroundView;
    v50 = *(void **)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasBackgroundView];
    *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasBackgroundView] = v48;

    v51 = *(void **)&v11[v49];
    if (v51)
    {
      v52 = (void *)objc_opt_self(UIColor);
      v53 = v51;
      v54 = objc_msgSend(v52, "whiteColor");
      objc_msgSend(v53, "setBackgroundColor:", v54);

      objc_msgSend(v53, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v55 = *(void **)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_snapshotViewWrapper];
      objc_msgSend(v55, "addSubview:", v53);
      objc_msgSend(v55, "addSubview:", v17);

    }
    else
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"loadView()", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 496, "Unable to load canvas background view!", 38, 2u, (uint64_t)_swiftEmptyArrayStorage);
      v42 = _TtC8Freeform23CRLBoardItemDatabaseRow;
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"loadView()", 10, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2u, 496, (uint64_t)"Unable to load canvas background view!", 38, 2u);
    }
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"loadView()", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 499, "Unable to determine canvas background view class!", 49, 2u, (uint64_t)_swiftEmptyArrayStorage);
    v42 = _TtC8Freeform23CRLBoardItemDatabaseRow;
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"loadView()", 10, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2u, 499, (uint64_t)"Unable to determine canvas background view class!", 49, 2u);
  }
  v56 = *(void **)&v11[(unint64_t)v42[96].info];
  if (v56)
  {
    v57 = objc_msgSend(v56, "layer");
    if (v57)
    {
      v58 = v57;
      v59 = type metadata accessor for CRLCanvasDotGridLayer();
      v60 = (char *)swift_dynamicCastClass(v58, v59);
      if (v60)
      {
        v61 = v60;
        v60[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_scalesWithCanvas] = 0;
        objc_msgSend(v60, "setNeedsLayout");
        *(_QWORD *)&v61[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_viewScale] = 0x3FF0000000000000;
        v62 = OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_enabled;
        if (v61[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_enabled] == 1)
          objc_msgSend(v61, "setNeedsLayout");
        *(_QWORD *)&v63 = swift_unknownObjectWeakAssign(&v61[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_canvasBackgroundDelegate], v11).n128_u64[0];
        v61[v62] = 1;
        objc_msgSend(v61, "setNeedsLayout", v63);
        v64 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasBackgroundLayer;
        v65 = *(void **)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasBackgroundLayer];
        *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasBackgroundLayer] = v61;
        v66 = v58;

        objc_msgSend(v89, "setAssociatedBackgroundLayer:", *(_QWORD *)&v11[v64]);
        goto LABEL_17;
      }

    }
  }
  sub_100757E04(&_mh_execute_header, (uint64_t)"loadView()", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 510, "Unable to load canvas background layer!", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"loadView()", 10, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2u, 510, (uint64_t)"Unable to load canvas background layer!", 39, 2u);
LABEL_17:
  v67 = objc_retain(*(id *)(*(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                          + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard));
  sub_100B11C00();

  sub_1004B804C(&qword_1013E0670);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v20, "setInfosToDisplay:", isa, swift_bridgeObjectRelease().n128_f64[0]);

  v69 = sub_100C1C9E0();
  v70 = objc_msgSend(*(id *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_selectionModelTranslator], "selectionPathForInfos:", 0);
  objc_msgSend(v69, "setSelectionPath:", v70);

  v71 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__sharedPencilTray;
  v72 = *(void **)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__sharedPencilTray];
  v73 = v85;
  if (v72)
  {
    v74 = v72;
    v75 = (char *)sub_100B4F46C();
    if (v75)
    {
      v76 = v75;
      v77 = *(id *)&v75[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];

    }
    else
    {
      sub_100B4F3B8();
      v77 = v78;
    }
    objc_msgSend(v77, "_disableTapInteractionWhenNotVisible");

    sub_100B4F5A8();
  }
  v79 = sub_100C26C7C();
  v80 = *(void **)&v11[v71];
  *(_QWORD *)&v11[v71] = v79;

  sub_100C283C0();
  v81 = &v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_findReplaceInteraction];
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_findReplaceInteraction]);

  if (!Strong)
  {
    v83 = objc_msgSend(objc_allocWithZone((Class)UIFindInteraction), "initWithSessionDelegate:", v11);
    objc_msgSend(v17, "addInteraction:", v83);
    swift_unknownObjectWeakAssign(v81, v83);

  }
}

uint64_t sub_100C20718(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;

  v4[2] = a4;
  v5 = type metadata accessor for MainActor(0);
  v4[3] = v5;
  v4[4] = static MainActor.shared.getter(v5);
  v6 = (_QWORD *)swift_task_alloc(dword_10140B364);
  v4[5] = v6;
  *v6 = v4;
  v6[1] = sub_100C20780;
  return sub_100C1F75C();
}

uint64_t sub_100C20780()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 24);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 40));
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_100C207F0, v2, v3);
}

uint64_t sub_100C207F0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = *(_QWORD *)(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 32));
  v2 = *(void **)(*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  v3 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController);
  v4 = v2;
  v5 = objc_msgSend(v3, "versionFidelityAlertWasShown");
  v6 = sub_1001E9730();
  sub_100B1BD68();
  v8 = v7;

  if (v6 < v8 && v6 != (_QWORD)v5)
    sub_100C24118();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100C208D0()
{
  char *v0;
  char *v1;
  uint64_t ObjectType;
  id v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  __n128 v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  Class isa;
  uint64_t v23;
  void *v24;
  Class v25;
  double v26;
  uint64_t v27;
  void *v28;
  Class v29;
  double v30;
  uint64_t v31;
  void *v32;
  id v33;
  Class v34;
  double v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  objc_super v45;

  v1 = v0;
  ObjectType = swift_getObjectType(v0);
  v45.receiver = v0;
  v45.super_class = (Class)type metadata accessor for CRLiOSBoardViewController(0);
  objc_msgSendSuper2(&v45, "viewDidLoad");
  v3 = objc_msgSend(v0, "view");
  if (!v3)
    goto LABEL_22;
  v4 = v3;
  v5 = *(void **)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasViewController];
  v6 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasViewController], "canvasView");
  if (!v6)
  {
LABEL_21:

LABEL_22:
    sub_100757E04(&_mh_execute_header, (uint64_t)"viewDidLoad()", 13, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 538, "Unable to load view hierarchy!", 30, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"viewDidLoad()", 13, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2u, 538, (uint64_t)"Unable to load view hierarchy!", 30, 2u);
    return;
  }
  v7 = v6;
  v8 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_pencilKitCanvasView];
  if (!v8)
  {
    v9 = v6;
LABEL_20:

    v4 = v9;
    goto LABEL_21;
  }
  v9 = v8;
  v10 = objc_msgSend(v5, "canvasLayer");
  if (!v10)
  {

    v4 = v7;
    goto LABEL_20;
  }
  v11 = v10;
  v43 = ObjectType;
  objc_msgSend(v5, "viewDidLoad");
  v12 = objc_msgSend(v1, "navigationItem");
  sub_1004B7878(&qword_10140B950, type metadata accessor for CRLiOSBoardViewController, (uint64_t)&unk_100EF7DAC);
  v13 = swift_unknownObjectRetain(v1);
  UINavigationItem.renameDelegate.setter(v13);

  v14 = (void *)objc_opt_self(UIColor);
  v15 = objc_msgSend(v14, "whiteColor");
  objc_msgSend(v4, "setBackgroundColor:", v15);

  objc_msgSend(v11, "setAllowsPinchZoom:", 1);
  v16 = v11;
  v17 = objc_msgSend(v14, "clearColor");
  v18 = objc_msgSend(v17, "CGColor");

  objc_msgSend(v16, "setBackgroundColor:", v18);
  v19 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scrollView];
  v20 = objc_msgSend(v14, "clearColor");
  objc_msgSend(v19, "setBackgroundColor:", v20);

  objc_msgSend(v19, "setIndicatorStyle:", 1);
  objc_msgSend(v19, "setDecelerationRate:", UIScrollViewDecelerationRateFast);
  objc_msgSend(v7, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v19, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v21 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_snapshotViewWrapper];
  objc_msgSend(v21, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v4, "addSubview:", v21);
  v44 = v9;
  objc_msgSend(v4, "addSubview:", v9);
  isa = (Class)objc_msgSend(v21, "crl_constraintsToAllSidesOfItem:", v19);
  if (!isa)
  {
    v23 = sub_1004B8930(0, (unint64_t *)&qword_1013E1760, NSLayoutConstraint_ptr);
    static Array._unconditionallyBridgeFromObjectiveC(_:)(0, v23);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  v24 = (void *)objc_opt_self(NSLayoutConstraint);
  objc_msgSend(v24, "activateConstraints:", isa);

  v25 = (Class)objc_msgSend(v4, "crl_constraintsToAllSidesOfItem:", v21);
  if (!v25)
  {
    v27 = sub_1004B8930(0, (unint64_t *)&qword_1013E1760, NSLayoutConstraint_ptr);
    static Array._unconditionallyBridgeFromObjectiveC(_:)(0, v27);
    v25 = Array._bridgeToObjectiveC()().super.isa;
    *(_QWORD *)&v26 = swift_bridgeObjectRelease().n128_u64[0];
  }
  objc_msgSend(v24, "activateConstraints:", v25, v26);

  v28 = v44;
  v29 = (Class)objc_msgSend(v4, "crl_constraintsToAllSidesOfItem:", v44);
  if (!v29)
  {
    v31 = sub_1004B8930(0, (unint64_t *)&qword_1013E1760, NSLayoutConstraint_ptr);
    static Array._unconditionallyBridgeFromObjectiveC(_:)(0, v31);
    v29 = Array._bridgeToObjectiveC()().super.isa;
    v28 = v44;
    *(_QWORD *)&v30 = swift_bridgeObjectRelease().n128_u64[0];
  }
  objc_msgSend(v24, "activateConstraints:", v29, v30);

  v32 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasBackgroundView];
  if (v32)
  {
    v33 = v32;
    v34 = (Class)objc_msgSend(v4, "crl_constraintsToAllSidesOfItem:", v33);
    if (!v34)
    {
      v36 = sub_1004B8930(0, (unint64_t *)&qword_1013E1760, NSLayoutConstraint_ptr);
      static Array._unconditionallyBridgeFromObjectiveC(_:)(0, v36);
      v34 = Array._bridgeToObjectiveC()().super.isa;
      *(_QWORD *)&v35 = swift_bridgeObjectRelease().n128_u64[0];
    }
    objc_msgSend(v24, "activateConstraints:", v34, v35);

    v28 = v44;
  }
  objc_msgSend(v19, "setScrollsToTop:", 0);
  v37 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  if (qword_1013DDD68 != -1)
    swift_once(&qword_1013DDD68, sub_100BC0B9C);
  objc_msgSend(v37, "addObserver:selector:name:object:", v1, "handleBoardLibrarySnapshotUpdateWithNotification:", qword_101480E38, 0);

  sub_1004B8930(0, &qword_1013E1430, UITraitCollection_ptr);
  v38 = static UITraitCollection.systemTraitsAffectingColorAppearance.getter();
  v39 = UIViewController.registerForTraitChanges<A>(_:handler:)(v38, sub_100C48ECC, 0, v43);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease(v39);
  v40 = sub_1004B804C((uint64_t *)&unk_1013F9B80);
  v41 = swift_allocObject(v40, 64, 7);
  *(_OWORD *)(v41 + 16) = xmmword_100EF5A10;
  *(_QWORD *)(v41 + 32) = type metadata accessor for UITraitVerticalSizeClass(0);
  *(_QWORD *)(v41 + 40) = &protocol witness table for UITraitVerticalSizeClass;
  *(_QWORD *)(v41 + 48) = type metadata accessor for UITraitHorizontalSizeClass(0);
  *(_QWORD *)(v41 + 56) = &protocol witness table for UITraitHorizontalSizeClass;
  v42 = UIViewController.registerForTraitChanges<A>(_:handler:)(v41, sub_100C48F34, 0, v43);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease(v42);

}

void sub_100C20FBC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  char v12;
  void *v13;
  void *v14;
  uint64_t KeyPath;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  id v21;
  char v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  char v27[24];

  v1 = v0;
  v2 = sub_1004B804C((uint64_t *)&unk_1013F02F0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v27[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = *(char **)(*(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  v7 = *(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v7, v27, 0, 0);
  v8 = type metadata accessor for CRLBoardCRDTData(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v7 + *(int *)(v8 + 36), v2);
  v9 = v6;
  v10 = CROrderedSet.count.getter(v2);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);

  if (v10 == 1)
  {
    v13 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesNavigatorState];
    v14 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState];
    KeyPath = swift_getKeyPath(&unk_100F2F300);
    v16 = swift_getKeyPath(&unk_100F2F328);
    v11 = v13;
    v17 = v14;
    static Published.subscript.getter(&v26, v17, KeyPath, v16);

    swift_release(KeyPath);
    swift_release(v16);
    v18 = v26;
    if (v26)

    v12 = v18 == 0;
  }
  else if (v10)
  {
    v11 = *(id *)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesNavigatorState];
    v12 = 1;
  }
  else
  {
    v11 = *(id *)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesNavigatorState];
    v12 = 0;
  }
  sub_1007116F0(v12);

  v19 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesNavigatorState;
  v20 = *(id *)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesNavigatorState];
  v21 = objc_msgSend(v1, "traitCollection");
  v22 = objc_msgSend(v21, "crl_isCompactWidth");

  sub_100711578(v22);
  v23 = *(void **)&v1[v19];
  v24 = (void *)objc_opt_self(UIDevice);
  v25 = v23;
  sub_1007115A0((char)objc_msgSend(v24, "crl_landscapePhoneUI"));

}

void sub_100C21240(char a1)
{
  char *v1;
  char *v2;
  void *v4;
  id v5;
  unsigned int v6;
  double v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  void (*v14)(char *, uint64_t, uint64_t, __n128);
  __n128 v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  void *v35;
  id v36;
  void *v37;
  id v38;
  void *v39;
  char v40;
  void *v41;
  id v42;
  id v43;
  _QWORD v44[5];
  objc_super v45;

  v2 = v1;
  v45.receiver = v2;
  v45.super_class = (Class)type metadata accessor for CRLiOSBoardViewController(0);
  objc_msgSendSuper2(&v45, "viewWillAppear:", a1 & 1);
  v4 = (void *)objc_opt_self(UIApplication);
  v5 = objc_msgSend(v4, "sharedApplication");
  v6 = objc_msgSend(v5, "isRunningTest");

  if (v6)
  {
    v8 = objc_msgSend(v4, "sharedApplication");
    v9 = objc_msgSend(v8, "delegate");

    if (!v9)
    {
LABEL_22:
      __break(1u);
      return;
    }
    v10 = type metadata accessor for CRLiOSAppDelegate();
    swift_dynamicCastClassUnconditional(v9, v10, 0, 0, 0);
    v11 = qword_10147FC10;
    if (qword_10147FC10)
    {
      v12 = qword_10147FC20;
      ObjectType = swift_getObjectType(qword_10147FC10);
      v44[0] = v11;
      v14 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v12 + 24);
      v15 = swift_unknownObjectRetain(v11);
      v14(v2, ObjectType, v12, v15);
      swift_unknownObjectRelease(v11);
    }
    *(_QWORD *)&v7 = swift_unknownObjectRelease(v9).n128_u64[0];
  }
  v16 = objc_msgSend(v2, "navigationController", v7);
  if (v16)
  {
    v17 = v16;
    v18 = objc_msgSend(v16, "navigationBar");
    v19 = objc_msgSend(v18, "standardAppearance");
    v20 = (void *)objc_opt_self(UIColor);
    v21 = v19;
    v22 = objc_msgSend(v20, "systemBackgroundColor");
    objc_msgSend(v21, "setBackgroundColor:", v22);

    v23 = v21;
    v24 = objc_msgSend(v20, "clearColor");
    objc_msgSend(v23, "setShadowColor:", v24);

    objc_msgSend(v18, "setStandardAppearance:", v23);
    objc_msgSend(v18, "setScrollEdgeAppearance:", v23);
    v25 = objc_msgSend(v17, "toolbar");
    if (v25)
    {
      v26 = v25;
      v27 = objc_msgSend(v25, "standardAppearance");

      v28 = v27;
      v29 = objc_msgSend(v20, "systemBackgroundColor");
      objc_msgSend(v28, "setBackgroundColor:", v29);

      v30 = v28;
      v31 = objc_msgSend(v20, "clearColor");
      objc_msgSend(v30, "setShadowColor:", v31);

      v32 = objc_msgSend(v17, "toolbar");
      if (v32)
      {
        v33 = v32;
        objc_msgSend(v32, "setStandardAppearance:", v30);

        v34 = objc_msgSend(v17, "toolbar");
        if (v34)
        {
          v35 = v34;
          objc_msgSend(v34, "setScrollEdgeAppearance:", v30);

          v36 = objc_msgSend(v17, "toolbar");
          if (v36)
          {
            v37 = v36;
            objc_msgSend(v36, "setTranslucent:", 0);

            goto LABEL_12;
          }
          goto LABEL_21;
        }
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
        goto LABEL_22;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_20;
  }
LABEL_12:
  sub_100C237D4();
  sub_10053BCC0();
  v38 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  if (qword_1013DCD48 != -1)
    swift_once(&qword_1013DCD48, sub_1006A5194);
  objc_msgSend(v38, "addObserver:selector:name:object:", v2, "undoHistoryChangedWithSender:", qword_10147F008, *(_QWORD *)(*(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]+ OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_commandController));

  v39 = *(void **)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController];
  objc_msgSend(v39, "updateCanvasDotGridVisibilityIfNeeded");
  v44[3] = &type metadata for CRLFeatureFlags;
  v44[4] = sub_1004DB6DC();
  LOBYTE(v44[0]) = 7;
  v40 = isFeatureEnabled(_:)(v44);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v44);
  if ((v40 & 1) != 0)
  {
    v41 = *(void **)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardControlsViewController];
    if (v41)
    {
      v42 = v41;
      sub_100860780();

    }
  }
  v43 = objc_msgSend(v2, "traitCollection");
  sub_10054CFF4(v43, (char)objc_msgSend(v39, "documentIsSharedReadOnly"));

}

void sub_100C2178C(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  objc_class *v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  unsigned int v30;
  uint64_t v31;
  id v32;
  id v33;
  unsigned int v34;
  id v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t ObjectType;
  void (*v40)(char *, uint64_t, uint64_t, __n128);
  __n128 v41;
  uint64_t Strong;
  char *v43;
  uint64_t KeyPath;
  uint64_t v45;
  id v46;
  uint64_t v47;
  void *v48;
  id v49;
  uint64_t v50;
  void *v51;
  void *v52;
  id v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  void *v71;
  id v72;
  void *v73;
  id v74;
  id v75;
  char v76;
  id v77;
  void *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  __n128 v90;
  char *v91;
  id v92;
  _QWORD *v93;
  uint64_t v94;
  __n128 v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  __n128 v116;
  uint64_t v117;
  void *v118;
  uint64_t v119;
  void *v120;
  uint64_t v121;
  uint64_t v122;
  id v123;
  void *v124;
  uint64_t v125;
  uint64_t v126;
  id v127;
  id v128;
  void *v129;
  uint64_t v130;
  uint64_t v131;
  id v132;
  uint64_t v133;
  char v134;
  uint64_t v135;
  char v136;
  id v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  _QWORD *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  _QWORD v150[2];
  char *v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  unint64_t v167;
  char *v168;
  objc_class *v169;
  char *v170;
  char *v171;
  char v172[24];
  id aBlock[3];
  ValueMetadata *v174;
  void (*v175)(uint64_t);
  uint64_t v176;
  objc_super v177;
  unsigned __int8 v178[8];

  v2 = v1;
  v4 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v4);
  v170 = (char *)v150 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C(&qword_1013E48D8);
  __chkstk_darwin(v6);
  v8 = (char *)v150 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C(&qword_1013E48E0);
  __chkstk_darwin(v9);
  v158 = (char *)v150 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v157 = sub_1004B804C(&qword_1013E48E8);
  v156 = *(_QWORD *)(v157 - 8);
  __chkstk_darwin(v157);
  v155 = (char *)v150 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v161 = sub_1004B804C(&qword_10140B9A0);
  v160 = *(_QWORD *)(v161 - 8);
  __chkstk_darwin(v161);
  v159 = (char *)v150 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v164 = sub_1004B804C(&qword_10140B9A8);
  v163 = *(_QWORD *)(v164 - 8);
  __chkstk_darwin(v164);
  v162 = (char *)v150 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v154 = sub_1004B804C(&qword_10140B9B0);
  v153 = *(_QWORD *)(v154 - 8);
  __chkstk_darwin(v154);
  v152 = (char *)v150 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v15);
  v167 = (unint64_t)v150 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for UUID(0);
  __chkstk_darwin(v17);
  v168 = (char *)v150 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v19);
  v21 = (char *)v150 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = (objc_class *)type metadata accessor for CRLiOSBoardViewController(0);
  v177.receiver = v2;
  v177.super_class = v22;
  v169 = v22;
  objc_msgSendSuper2(&v177, "viewDidAppear:", a1 & 1);
  v23 = *(void **)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController];
  objc_msgSend(v23, "setupTextInputResponder");
  v24 = (void *)objc_opt_self(UIApplication);
  v25 = objc_msgSend(v24, "sharedApplication");
  v26 = objc_msgSend(v25, "delegate");

  if (!v26)
  {
    __break(1u);
    goto LABEL_32;
  }
  v27 = type metadata accessor for CRLiOSAppDelegate();
  v28 = swift_dynamicCastClassUnconditional(v26, v27, 0, 0, 0);
  v29 = objc_msgSend(v24, "sharedApplication");
  v30 = objc_msgSend(v29, "shouldRecordExtendedLaunchTime");
  v171 = v21;
  v151 = v8;
  if (v30
    && (v31 = OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_didLogExtendedLaunchTime,
        (*(_BYTE *)(v28 + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_didLogExtendedLaunchTime) & 1) == 0))
  {
    v32 = objc_msgSend(v29, "_launchTestName");
    objc_msgSend(v29, "finishedTest:", v32);

    *(_BYTE *)(v28 + v31) = 1;
  }
  else
  {

  }
  v33 = objc_msgSend(v24, "sharedApplication", swift_unknownObjectRelease(v26).n128_f64[0]);
  v34 = objc_msgSend(v33, "isRunningTest");

  if (v34)
  {
    v35 = objc_msgSend(v24, "sharedApplication");
    v36 = objc_msgSend(v35, "delegate");

    if (v36)
    {
      swift_dynamicCastClassUnconditional(v36, v27, 0, 0, 0);
      v37 = (void *)qword_10147FC10;
      if (qword_10147FC10)
      {
        v38 = qword_10147FC20;
        ObjectType = swift_getObjectType(qword_10147FC10);
        aBlock[0] = v37;
        v40 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v38 + 32);
        v41 = swift_unknownObjectRetain(v37);
        v40(v2, ObjectType, v38, v41);
        swift_unknownObjectRelease(v37);
      }
      swift_unknownObjectRelease(v36);
      goto LABEL_11;
    }
LABEL_32:
    __break(1u);
    return;
  }
LABEL_11:
  Strong = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardLibrary]);
  if (Strong)
  {
    v43 = (char *)Strong;
    aBlock[0] = v23;
    KeyPath = swift_getKeyPath(byte_100F2F690);
    v45 = swift_allocObject(&unk_10129BBE0, 24, 7);
    swift_unknownObjectWeakInit(v45 + 16);
    v46 = v23;
    v47 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)(KeyPath, 0, sub_100C4F6C4, v45, &protocol witness table for NSObject);
    swift_release(v45);
    swift_release(KeyPath);

    v48 = *(void **)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_viewScaleObservation];
    *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_viewScaleObservation] = v47;

    v49 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    v50 = swift_allocObject(&unk_10129BBE0, 24, 7);
    swift_unknownObjectWeakInit(v50 + 16);
    v175 = sub_100C4F6CC;
    v176 = v50;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(id *)"";
    aBlock[2] = sub_100568280;
    v174 = (ValueMetadata *)&unk_10129CA80;
    v51 = _Block_copy(aBlock);
    v52 = v46;
    v53 = objc_msgSend(v49, "addObserverForName:object:queue:usingBlock:", CFSTR("CRLCanvasUpdateScrollNotification"), v46, 0, v51, swift_release(v176).n128_f64[0]);
    _Block_release(v51);

    v174 = (ValueMetadata *)swift_getObjectType(v53);
    aBlock[0] = v53;
    v54 = (uint64_t)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scrollObserver];
    swift_beginAccess(&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scrollObserver], v178, 33, 0);
    sub_100582338((uint64_t)aBlock, v54, &qword_1013E0230);
    swift_endAccess(v178);
    v55 = *(void **)&v43[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_shareErrorObservers];
    if ((objc_msgSend(v55, "containsObject:", v2) & 1) == 0)
      objc_msgSend(v55, "addObject:", v2);
    v56 = *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator];
    v165 = OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard;
    v166 = v56;
    v57 = *(char **)(v56 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
    v58 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
    v59 = *(_QWORD *)&v57[OBJC_IVAR____TtC8Freeform8CRLBoard_data];
    v60 = v59 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess(v59 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v172, 0, 0);
    v61 = v60;
    v62 = v167;
    sub_1004B8460(v61, v167, type metadata accessor for CRLBoardCRDTData);
    v63 = v57;
    swift_retain(v59);
    v64 = sub_1004B804C(&qword_1013E1A80);
    v65 = (uint64_t)v168;
    CRRegister.wrappedValue.getter(v64);
    sub_1004B84A4(v62, type metadata accessor for CRLBoardCRDTData);
    swift_release(v59);
    v66 = (uint64_t *)(*(_QWORD *)&v57[v58] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
    v67 = *v66;
    v68 = v66[1];
    swift_bridgeObjectRetain(v68);
    v69 = (uint64_t)v171;
    sub_10067AFD0(v65, v67, v68, (uint64_t)v171);

    objc_msgSend(v52, "updateCanvasDotGridVisibilityIfNeeded", sub_100CABEF4(v69));
    v174 = &type metadata for CRLFeatureFlags;
    v70 = sub_1004DB6DC();
    v175 = (void (*)(uint64_t))v70;
    LOBYTE(aBlock[0]) = 7;
    LOBYTE(v67) = isFeatureEnabled(_:)(aBlock);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(aBlock);
    if ((v67 & 1) != 0)
    {
      v71 = *(void **)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardControlsViewController];
      if (v71)
      {
        v72 = v71;
        sub_100860780();

      }
    }
    v73 = *(void **)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interstitialUIController];
    if (v73)
    {
      v74 = v73;
      sub_100BDC55C();

    }
    v75 = objc_msgSend(v2, "traitCollection");
    sub_1005221A4(v75, (int)objc_msgSend(v52, "documentIsSharedReadOnly"), (uint64_t)v178);
    sub_100522548(v178, 1);
    sub_1004DB520((uint64_t)v178);

    v174 = &type metadata for CRLFeatureFlags;
    v175 = (void (*)(uint64_t))v70;
    LOBYTE(aBlock[0]) = 16;
    v76 = isFeatureEnabled(_:)(aBlock);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(aBlock);
    v77 = objc_msgSend(v2, "traitCollection");
    v78 = v77;
    v79 = v166;
    if ((v76 & 1) != 0)
    {
      v167 = v70;
      sub_100C30B08(v77);

      sub_100C31DBC();
      v80 = *(char **)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesNavigatorState];
      swift_beginAccess(&v80[OBJC_IVAR____TtC8Freeform23CRLScenesNavigatorState__isOpen], aBlock, 33, 0);
      v81 = v80;
      v82 = sub_1004B804C(&qword_10140B9D0);
      v83 = v152;
      Published.projectedValue.getter(v82);
      swift_endAccess(aBlock);

      v84 = swift_allocObject(&unk_10129CAE0, 32, 7);
      *(_QWORD *)(v84 + 16) = v2;
      *(_QWORD *)(v84 + 24) = v43;
      v85 = sub_1004CBA30(&qword_10140B9D8, &qword_10140B9B0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
      v86 = v2;
      v150[0] = v86;
      v168 = v43;
      v87 = v43;
      v150[1] = v52;
      v88 = v154;
      v89 = Publisher<>.sink(receiveValue:)(sub_100C4F748, v84, v154, v85);
      v90 = swift_release(v84);
      (*(void (**)(char *, uint64_t, __n128))(v153 + 8))(v83, v88, v90);
      v91 = &v86[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_subscriptions];
      v154 = (uint64_t)&v86[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_subscriptions];
      swift_beginAccess(&v86[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_subscriptions], aBlock, 33, 0);
      AnyCancellable.store(in:)(v91);
      swift_endAccess(aBlock);
      swift_release(v89);
      aBlock[0] = *(id *)(*(_QWORD *)(v79 + v165) + OBJC_IVAR____TtC8Freeform8CRLBoard_changeSummaryPublisher);
      v92 = aBlock[0];
      sub_1004B804C(&qword_1013E4910);
      v93 = v155;
      v94 = sub_1004B8930(0, (unint64_t *)&qword_1013DE090, OS_dispatch_queue_ptr);
      v95 = swift_retain(v92);
      *v93 = static OS_dispatch_queue.main.getter(v95);
      static OS_dispatch_queue.SchedulerTimeType.Stride.seconds(_:)(1);
      v96 = v156;
      v97 = v157;
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(v156 + 104))(v93, enum case for Publishers.TimeGroupingStrategy.byTime<A>(_:), v157);
      v98 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
      v99 = v158;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v98 - 8) + 56))(v158, 1, 1, v98);
      v100 = sub_1004B804C(&qword_101405CF8);
      v101 = sub_1004CBA30((unint64_t *)&unk_10140B9E0, &qword_101405CF8, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
      v102 = sub_1005A15B8((unint64_t *)&qword_1013E4920, (unint64_t *)&qword_1013DE090, OS_dispatch_queue_ptr, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue);
      v103 = v159;
      Publisher.collect<A>(_:options:)(v93, v99, v100, v94, v101, v102);
      v104 = (uint64_t)v99;
      v105 = v150[0];
      sub_1004CB800(v104, &qword_1013E48E0);
      (*(void (**)(_QWORD *, uint64_t))(v96 + 8))(v93, v97);
      swift_release(aBlock[0]);
      aBlock[0] = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
      v106 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
      v107 = (uint64_t)v151;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v106 - 8) + 56))(v151, 1, 1, v106);
      v108 = sub_1004B8930(0, &qword_10140B9F0, NSRunLoop_ptr);
      v109 = sub_1004CBA30(&qword_10140B9F8, &qword_10140B9A0, (uint64_t)&protocol conformance descriptor for Publishers.CollectByTime<A, B>);
      sub_1005A15B8(&qword_10140BA00, &qword_10140B9F0, NSRunLoop_ptr, (uint64_t)&protocol conformance descriptor for NSRunLoop);
      v110 = v162;
      v111 = v161;
      Publisher.receive<A>(on:options:)(aBlock, v107, v161, v108, v109);
      sub_1004CB800(v107, &qword_1013E48D8);

      (*(void (**)(char *, uint64_t))(v160 + 8))(v103, v111);
      v112 = swift_allocObject(&unk_10129BBE0, 24, 7);
      swift_unknownObjectWeakInit(v112 + 16);
      v113 = sub_1004CBA30(&qword_10140BA08, &qword_10140B9A8, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
      v114 = v164;
      v115 = Publisher<>.sink(receiveValue:)(sub_100C4F750, v112, v164, v113);
      v116 = swift_release(v112);
      (*(void (**)(char *, uint64_t, __n128))(v163 + 8))(v110, v114, v116);
      v117 = v154;
      swift_beginAccess(v154, aBlock, 33, 0);
      AnyCancellable.store(in:)(v117);
      swift_endAccess(aBlock);
      swift_release(v115);
      v118 = sub_100C58C50();
      v119 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState;
      v120 = *(void **)(v105 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState);
      v121 = swift_getKeyPath(byte_100F2F300);
      v122 = swift_getKeyPath(aP_18);
      aBlock[0] = v118;
      v123 = v118;
      static Published.subscript.setter(aBlock, v120, v121, v122);
      sub_100C20FBC();

      v124 = *(void **)(v105 + v119);
      v125 = swift_getKeyPath(byte_100F2F300);
      v126 = swift_getKeyPath(aP_18);
      v127 = v124;
      static Published.subscript.getter(aBlock, v127, v125, v126);
      swift_release(v126);
      swift_release(v125);

      v128 = aBlock[0];
      if (!aBlock[0])
        goto LABEL_25;
      v129 = *(void **)(v105 + v119);
      v130 = swift_getKeyPath(byte_100F2F2B8);
      v131 = swift_getKeyPath(byte_100F2F2E0);
      v132 = v129;
      static Published.subscript.getter(aBlock, v132, v130, v131);
      swift_release(v131);
      swift_release(v130);

      v133 = sub_100C1A4F0((uint64_t)v128, (uint64_t)aBlock[0], type metadata accessor for CRLSceneInfo);
      LOBYTE(v132) = v134;
      swift_bridgeObjectRelease();

      if ((v132 & 1) != 0)
      {
LABEL_25:
        sub_100C20FBC();
      }
      else
      {
        v135 = v105 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_currentSceneIndex;
        *(_QWORD *)v135 = v133;
        *(_BYTE *)(v135 + 8) = 0;
      }
      v69 = (uint64_t)v171;
      v70 = v167;
      v43 = v168;
      v79 = v166;
    }
    else
    {
      sub_100C318F8(v77);

    }
    v174 = &type metadata for CRLFeatureFlags;
    v175 = (void (*)(uint64_t))v70;
    LOBYTE(aBlock[0]) = 7;
    v136 = isFeatureEnabled(_:)(aBlock);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(aBlock);
    if ((v136 & 1) != 0)
    {
      v137 = objc_msgSend(v2, "traitCollection");
      sub_100C321D8(v137);

      sub_100C326CC();
    }
    v138 = type metadata accessor for TaskPriority(0);
    v139 = (uint64_t)v170;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v138 - 8) + 56))(v170, 1, 1, v138);
    type metadata accessor for MainActor(0);
    v140 = v2;
    v141 = static MainActor.shared.getter(v140);
    v142 = (_QWORD *)swift_allocObject(&unk_10129CAB8, 40, 7);
    v142[2] = v141;
    v142[3] = &protocol witness table for MainActor;
    v142[4] = v140;
    v143 = sub_100521B98(v139, (uint64_t)&unk_10140B9C0, (uint64_t)v142);
    swift_release(v143);
    objc_msgSend((id)objc_opt_self(CRLiOSKeyboardMonitor), "addKeyboardObserver:", v140);
    sub_100C235E8(1);
    sub_1005352C8();
    v144 = sub_1004B804C((uint64_t *)&unk_1013F9B80);
    v145 = swift_allocObject(v144, 64, 7);
    *(_OWORD *)(v145 + 16) = xmmword_100EF5A10;
    *(_QWORD *)(v145 + 32) = type metadata accessor for UITraitHorizontalSizeClass(0);
    *(_QWORD *)(v145 + 40) = &protocol witness table for UITraitHorizontalSizeClass;
    *(_QWORD *)(v145 + 48) = type metadata accessor for UITraitVerticalSizeClass(0);
    *(_QWORD *)(v145 + 56) = &protocol witness table for UITraitVerticalSizeClass;
    v174 = (ValueMetadata *)v169;
    aBlock[0] = v140;
    v146 = v140;
    v147 = UIViewController.registerForTraitChanges(_:target:action:)(v145, aBlock, "observedTraitsDidChange::");
    swift_bridgeObjectRelease();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(aBlock);
    v148 = *(_QWORD *)&v146[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_traitChangeRegistration];
    *(_QWORD *)&v146[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_traitChangeRegistration] = v147;
    swift_unknownObjectRelease(v148);
    v149 = *(_QWORD *)&v146[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_cloudQuotaMessagingObserver];
    *(_QWORD *)(v149 + 24) = &off_10129B7F0;
    swift_unknownObjectWeakAssign(v149 + 16, v146);
    sub_100967068();
    objc_msgSend(*(id *)(v79 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_changeNotifier), "addObserver:forChangeSource:", v146, *(_QWORD *)(v79 + v165));

    sub_1004B84A4(v69, type metadata accessor for CRLBoardIdentifier);
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"viewDidAppear(_:)", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 629, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"viewDidAppear(_:)", 17, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2u, 629, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  }
}

uint64_t sub_100C229A0(char *a1, void *a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v16;

  v6 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a1;
  v10 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  v11 = swift_allocObject(&unk_10129CB30, 49, 7);
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = a3;
  *(_QWORD *)(v11 + 40) = a2;
  *(_BYTE *)(v11 + 48) = v9;
  v12 = a3;
  v13 = a2;
  v14 = sub_10098824C((uint64_t)v8, (uint64_t)&unk_10140BA30, v11);
  swift_release(v14);
  return sub_1004CB800((uint64_t)v8, &qword_1013E01F0);
}

uint64_t sub_100C22A8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_BYTE *)(v6 + 148) = a6;
  *(_QWORD *)(v6 + 48) = a4;
  *(_QWORD *)(v6 + 56) = a5;
  *(_QWORD *)(v6 + 40) = a1;
  v7 = type metadata accessor for CRLBoardCRDTData(0);
  *(_QWORD *)(v6 + 64) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UUID(0);
  *(_QWORD *)(v6 + 72) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CRLBoardIdentifier(0);
  *(_QWORD *)(v6 + 80) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100C22B2C, 0, 0);
}

uint64_t sub_100C22B2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = sub_1004B804C(&qword_1013EF520);
  v2 = type metadata accessor for CRLBoardIdentifierAndValue(0);
  *(_QWORD *)(v0 + 88) = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  LODWORD(v3) = *(_DWORD *)(v3 + 80);
  *(_DWORD *)(v0 + 144) = v3;
  v5 = swift_allocObject(v1, ((v3 + 32) & ~(unint64_t)v3) + v4, v3 | 7);
  *(_QWORD *)(v0 + 96) = v5;
  *(_OWORD *)(v5 + 16) = xmmword_100EF5E40;
  v6 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 104) = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_100C22BEC, v7, v8);
}

uint64_t sub_100C22BEC()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  id v3;

  v1 = v0[7];
  swift_release(v0[13]);
  v2 = *(void **)(*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  v0[14] = v2;
  v3 = v2;
  return swift_task_switch(sub_100C22C50, 0, 0);
}

uint64_t sub_100C22C50()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  char v21;
  uint64_t v22;

  v1 = *(char **)(v0 + 112);
  v20 = *(_QWORD *)(v0 + 96);
  v22 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 64);
  v21 = *(_BYTE *)(v0 + 148);
  v5 = v20 + ((*(unsigned __int8 *)(v0 + 144) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 144));
  v6 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  v7 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform8CRLBoard_data];
  v8 = v7 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v7 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v0 + 16, 0, 0);
  sub_1004B8460(v8, v4, type metadata accessor for CRLBoardCRDTData);
  swift_retain(v7);
  v9 = sub_1004B804C(&qword_1013E1A80);
  CRRegister.wrappedValue.getter(v9);
  sub_1004B84A4(v4, type metadata accessor for CRLBoardCRDTData);
  swift_release(v7);
  v10 = (uint64_t *)(*(_QWORD *)&v1[v6] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  v11 = *v10;
  v12 = v10[1];
  swift_bridgeObjectRetain(v12);
  sub_10067AFD0(v3, v11, v12, v2);

  sub_1004B84E0(v2, v5, type metadata accessor for CRLBoardIdentifier);
  *(_BYTE *)(v5 + *(int *)(v22 + 20)) = v21;
  v13 = *(_QWORD *)(v20 + 16);
  if (v13)
    v14 = sub_1004B808C(*(_QWORD *)(v0 + 96));
  else
    v14 = &_swiftEmptySetSingleton;
  *(_QWORD *)(v0 + 120) = v14;
  v16 = *(_QWORD *)(v0 + 88);
  v15 = *(_QWORD *)(v0 + 96);
  v17 = v15 + ((*(unsigned __int8 *)(v0 + 144) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 144));
  swift_setDeallocating(v15);
  swift_arrayDestroy(v17, v13, v16);
  swift_deallocClassInstance(v15, 32, 7);
  v18 = (_QWORD *)swift_task_alloc(dword_10140E16C);
  *(_QWORD *)(v0 + 128) = v18;
  *v18 = v0;
  v18[1] = sub_100C22E28;
  return sub_100CAC1BC((uint64_t)v14);
}

uint64_t sub_100C22E28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 128);
  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc(v2);
  swift_bridgeObjectRelease();
  if (v0)
  {
    swift_errorRelease(v0);
    v3 = sub_100C4FCBC;
  }
  else
  {
    v3 = sub_100C22E9C;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100C22E9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 72);
  v1 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 64);
  **(_BYTE **)(v0 + 40) = *(_QWORD *)(v0 + 136) != 0;
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_100C22EF4(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  double result;
  uint64_t v14;

  v4 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *a1;
  v8 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v6, 1, 1, v8);
  type metadata accessor for MainActor(0);
  swift_bridgeObjectRetain(v7);
  swift_retain(a2);
  v10 = static MainActor.shared.getter(v9);
  v11 = (_QWORD *)swift_allocObject(&unk_10129CB08, 48, 7);
  v11[2] = v10;
  v11[3] = &protocol witness table for MainActor;
  v11[4] = v7;
  v11[5] = a2;
  v12 = sub_100521B98((uint64_t)v6, (uint64_t)&unk_10140BA18, (uint64_t)v11);
  *(_QWORD *)&result = swift_release(v12).n128_u64[0];
  return result;
}

uint64_t sub_100C22FE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[5] = a4;
  v5[6] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[7] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v5[8] = v7;
  v5[9] = v8;
  return swift_task_switch(sub_100C2304C, v7, v8);
}

uint64_t sub_100C2304C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t Strong;
  _QWORD *v10;
  __n128 v12;

  v1 = *(_QWORD *)(v0 + 48) + 16;
  v2 = sub_100DB08A4(*(_QWORD *)(v0 + 40));
  v4 = v3;
  v6 = v5;
  v8 = v7;
  *(_QWORD *)(v0 + 80) = v2;
  *(_QWORD *)(v0 + 88) = v3;
  *(_QWORD *)(v0 + 96) = v5;
  *(_QWORD *)(v0 + 104) = v7;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  *(_QWORD *)(v0 + 112) = Strong;
  if (Strong)
  {
    v10 = (_QWORD *)swift_task_alloc(dword_10140BA24);
    *(_QWORD *)(v0 + 120) = v10;
    *v10 = v0;
    v10[1] = sub_100C23148;
    return sub_100C23200((uint64_t)v2, v4, v6, v8);
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 56));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v12 = swift_bridgeObjectRelease();
    return (*(uint64_t (**)(__n128))(v0 + 8))(v12);
  }
}

uint64_t sub_100C23148()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;

  v1 = *v0;
  v2 = *(void **)(*v0 + 112);
  swift_task_dealloc(*(_QWORD *)(*v0 + 120));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_task_switch(sub_100C231D0, *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72));
}

uint64_t sub_100C231D0()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_release(*(_QWORD *)(v0 + 56));
  return (*(uint64_t (**)(__n128))(v0 + 8))(v1);
}

uint64_t sub_100C23200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[8] = a4;
  v5[9] = v4;
  v5[6] = a2;
  v5[7] = a3;
  v5[5] = a1;
  v6 = type metadata accessor for MainActor(0);
  v5[10] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v5[11] = v7;
  v5[12] = v8;
  return swift_task_switch(sub_100C23274, v7, v8);
}

uint64_t sub_100C23274()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  void *v12;
  uint64_t KeyPath;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t **v27;
  void *v29;

  v1 = (uint64_t)(v0 + 4);
  v2 = &_swiftEmptySetSingleton;
  v3 = &_swiftEmptySetSingleton;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
  {
    if (!_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
      goto LABEL_20;
    sub_1004B891C((uint64_t)_swiftEmptyArrayStorage);
    v3 = v22;
  }
  while (1)
  {
    v4 = v0[8];
    v5 = v0[9];
    v7 = v0[6];
    v6 = v0[7];
    v0[2] = (uint64_t)v3;
    v0[3] = (uint64_t)v2;
    swift_bridgeObjectRetain(v7);
    v2 = 0;
    sub_100C19E3C(v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain(v4);
    sub_100C19E3C(v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain(v6);
    sub_100C19E3C(v10);
    *(_QWORD *)&v11 = swift_bridgeObjectRelease().n128_u64[0];
    v12 = *(void **)(v5 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState);
    KeyPath = swift_getKeyPath(byte_100F2F2B8, v11);
    v14 = swift_getKeyPath(byte_100F2F2E0);
    v15 = v12;
    static Published.subscript.getter((_QWORD *)v1, v15, KeyPath, v14);
    swift_release(v14);
    swift_release(KeyPath);

    v1 = v0[4];
    if ((unint64_t)v1 >> 62)
    {
      if (v1 < 0)
        v23 = v0[4];
      else
        v23 = v1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v0[4]);
      v16 = _CocoaArrayWrapper.endIndex.getter(v23);
      if (!v16)
      {
LABEL_17:
        swift_bridgeObjectRelease_n(v1, 2);
        goto LABEL_18;
      }
    }
    else
    {
      v16 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v0[4]);
      if (!v16)
        goto LABEL_17;
    }
    if (v16 >= 1)
      break;
    __break(1u);
LABEL_20:
    v3 = &_swiftEmptySetSingleton;
  }
  v17 = 0;
  do
  {
    if ((v1 & 0xC000000000000001) != 0)
      v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v17, v1);
    else
      v18 = *(id *)(v1 + 8 * v17 + 32);
    v19 = v18;
    v20 = v0[9];
    v21 = v0[5];
    ++v17;
    v29 = v18;
    sub_100C4B648(&v29, v21, v20, v0 + 2, v0 + 3);

  }
  while (v16 != v17);
  swift_bridgeObjectRelease_n(v1, 2);
  v3 = (void *)v0[2];
LABEL_18:
  v0[13] = (uint64_t)v3;
  v24 = (id)v0[9];
  swift_bridgeObjectRetain(v3);
  sub_100C48FDC(v25, (uint64_t)v24);

  swift_bridgeObjectRelease();
  v26 = dword_10140B78C;
  swift_bridgeObjectRetain(v3);
  v27 = (uint64_t **)swift_task_alloc(v26);
  v0[14] = (uint64_t)v27;
  *v27 = v0;
  v27[1] = (uint64_t *)sub_100C234EC;
  return sub_100C27BF0((uint64_t)v3);
}

uint64_t sub_100C234EC()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 112));
  swift_bridgeObjectRelease();
  return swift_task_switch(sub_100C23540, *(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 96));
}

uint64_t sub_100C23540()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 104);
  swift_release(*(_QWORD *)(v0 + 80));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100C23584()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = type metadata accessor for MainActor(0);
  v0[2] = v1;
  v0[3] = static MainActor.shared.getter(v1);
  v2 = (_QWORD *)swift_task_alloc(dword_10140B36C);
  v0[4] = v2;
  *v2 = v0;
  v2[1] = sub_1004DF470;
  return sub_100C23C9C();
}

void sub_100C235E8(char a1)
{
  char *v1;
  id v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  char **v13;
  void *v14;
  double v15;
  double v16;
  double v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  id v24;

  v3 = objc_msgSend((id)objc_opt_self(CRLiOSKeyboardMonitor), "sharedKeyboardMonitor");
  objc_msgSend(v3, "keyboardFrame");
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;

  v12 = sub_100C4044C(v5, v7, v9, v11);
  v13 = (char **)OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_keyboardTopEdgeLayoutGuideConstraint;
  v14 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_keyboardTopEdgeLayoutGuideConstraint];
  if (!v14)
    goto LABEL_9;
  v15 = v12;
  objc_msgSend(v14, "constant");
  v17 = v16;
  v12 = -v15;
  if (v17 != -v15)
  {
LABEL_7:
    v21 = *(char **)((char *)v13 + (_QWORD)v1);
    if (v21)
      objc_msgSend(v21, "setConstant:");
LABEL_9:
    v22 = objc_msgSend(v1, "view", v12);
    if (v22)
    {
      v23 = v22;
      objc_msgSend(v22, "setNeedsUpdateConstraints");

      v20 = objc_msgSend(v1, "view");
      if (v20)
        goto LABEL_11;
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_15;
  }
  if ((a1 & 1) != 0)
  {
    v13 = &selRef_transformGuides_forLayout_;
    v18 = objc_msgSend(v1, "view");
    if (!v18)
    {
LABEL_15:
      __break(1u);
      return;
    }
    v19 = v18;
    objc_msgSend(v18, "setNeedsUpdateConstraints");

    v20 = objc_msgSend(v1, "view");
    if (v20)
    {
LABEL_11:
      v24 = v20;
      objc_msgSend(v20, "setNeedsLayout");

      return;
    }
    __break(1u);
    goto LABEL_7;
  }
}

void sub_100C237D4()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t inited;
  id v4;
  char *v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  char *v11;
  void **v12;
  void *v13;
  id v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char v20[24];
  char v21[24];
  char v22[24];
  char v23[72];
  char v24[24];

  if (qword_1013DD6E8 != -1)
    swift_once(&qword_1013DD6E8, sub_100A01318);
  swift_beginAccess(&static OS_os_log.crlStatusHUD, v24, 0, 0);
  v1 = (void *)static OS_os_log.crlStatusHUD;
  v2 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v2, v23);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_QWORD *)(inited + 56) = type metadata accessor for CRLiOSBoardViewController(0);
  *(_QWORD *)(inited + 64) = sub_1004B7878((unint64_t *)&unk_10140B900, type metadata accessor for CRLiOSBoardViewController, (uint64_t)&protocol conformance descriptor for NSObject);
  *(_QWORD *)(inited + 32) = v0;
  v4 = v1;
  v5 = v0;
  v7 = static os_log_type_t.default.getter(v6);
  sub_100A06EBC((uint64_t)v4, &_mh_execute_header, v7, "setupStatusHUDView: self: %p", 28, 2, inited);
  swift_setDeallocating(inited);
  v8 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v8);

  v9 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  sub_100C23A0C(v9);
  v10 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_statusHUDManager;
  v11 = *(char **)&v5[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_statusHUDManager];
  v12 = (void **)&v11[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_containerView];
  swift_beginAccess(&v11[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_containerView], v22, 1, 0);
  v13 = *v12;
  *v12 = v9;
  v14 = v9;
  v15 = v11;

  v16 = &v15[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_ready];
  swift_beginAccess(&v15[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_ready], v21, 0, 0);
  if (*v16 == 1)
    sub_100C5F4C4();

  v17 = *(char **)&v5[v10];
  v18 = &v17[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_ready];
  swift_beginAccess(&v17[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_ready], v20, 1, 0);
  *v18 = 1;
  v19 = v17;
  sub_100C5F4C4();

}

void sub_100C23A0C(void *a1)
{
  void *v1;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  id v17;

  v3 = objc_msgSend(v1, "viewIfLoaded");

  if (!v3)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"addStatusHUDView(statusHUDView:)", 32, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 718, "Adding collaboration notification view too early.", 49, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"addStatusHUDView(statusHUDView:)", 32, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2u, 718, (uint64_t)"Adding collaboration notification view too early.", 49, 2u);
  }
  objc_msgSend(a1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v4 = objc_msgSend(v1, "view");
  if (!v4)
  {
    __break(1u);
    goto LABEL_8;
  }
  v5 = v4;
  objc_msgSend(v4, "addSubview:", a1);

  v6 = objc_msgSend(a1, "topAnchor");
  v7 = objc_msgSend(v1, "view");
  if (!v7)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v8 = v7;
  v9 = objc_msgSend(v7, "safeAreaLayoutGuide");

  v10 = objc_msgSend(v9, "topAnchor");
  v11 = objc_msgSend(v6, "constraintEqualToAnchor:", v10);

  objc_msgSend(v11, "setActive:", 1);
  v12 = objc_msgSend(a1, "trailingAnchor");
  v13 = objc_msgSend(v1, "view");
  if (v13)
  {
    v14 = v13;
    v15 = objc_msgSend(v13, "safeAreaLayoutGuide");

    v16 = objc_msgSend(v15, "trailingAnchor");
    v17 = objc_msgSend(v12, "constraintEqualToAnchor:", v16);

    objc_msgSend(v17, "setActive:", 1);
    return;
  }
LABEL_9:
  __break(1u);
}

uint64_t sub_100C23C9C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[2] = v0;
  v2 = type metadata accessor for MainActor(0);
  v1[3] = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[4] = v3;
  v1[5] = v4;
  return swift_task_switch(sub_100C23D08, v3, v4);
}

uint64_t sub_100C23D08()
{
  uint64_t v0;
  uint64_t v1;
  double v3;
  uint64_t v4;
  void *v5;
  double v6;
  double v7;
  id v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  id v17;
  double Height;
  double Width;
  uint64_t v20;
  int v21;
  char v22;
  CGRect v23;
  CGRect v24;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_stateRestorationHelper);
  *(_QWORD *)(v0 + 48) = v1;
  if (v1)
  {
    swift_retain(v1);
    return swift_task_switch(sub_100C23EB8, v1, 0);
  }
  else
  {
    *(_QWORD *)&v3 = swift_release(*(_QWORD *)(v0 + 24)).n128_u64[0];
    v4 = *(_QWORD *)(v0 + 16);
    v5 = *(void **)(v4 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController);
    objc_msgSend(v5, "viewScale", v3);
    v7 = v6;
    v8 = objc_msgSend(v5, "canvas");
    objc_msgSend(v8, "unscaledRectOfLayouts");
    v10 = v9;
    v12 = v11;
    v14 = v13;
    v16 = v15;

    v17 = objc_retain(*(id *)(*(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                            + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard));
    v23.origin.x = v10;
    v23.origin.y = v12;
    v23.size.width = v14;
    v23.size.height = v16;
    Height = CGRectGetHeight(v23);
    v24.origin.x = v10;
    v24.origin.y = v12;
    v24.size.width = v14;
    v24.size.height = v16;
    Width = CGRectGetWidth(v24);
    v20 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__isCanvasDotGridEnabled;
    v21 = *(unsigned __int8 *)(v4 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__isCanvasDotGridEnabled);
    if (v21 == 2)
    {
      v22 = sub_100C2B92C();
      *(_BYTE *)(v4 + v20) = v22 & 1;
    }
    else
    {
      v22 = v21 & 1;
    }
    type metadata accessor for CRLAnalyticsBoardOpened();
    sub_1008A9ABC(v17, v22 & 1, v7, Height, Width);

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100C23EB8()
{
  _QWORD *v0;
  _QWORD *v2;

  if (*(_BYTE *)(v0[6] + 144) == 1)
  {
    swift_release(v0[6]);
    return swift_task_switch(sub_100C23F30, v0[4], v0[5]);
  }
  else
  {
    v2 = (_QWORD *)swift_task_alloc(dword_1013E6BCC);
    v0[7] = v2;
    *v2 = v0;
    v2[1] = sub_100C24090;
    return sub_1005E5824();
  }
}

uint64_t sub_100C23F30()
{
  uint64_t v0;
  double v1;
  uint64_t v2;
  void *v3;
  double v4;
  double v5;
  id v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  id v15;
  double Height;
  double Width;
  uint64_t v18;
  int v19;
  char v20;
  CGRect v22;
  CGRect v23;

  *(_QWORD *)&v1 = swift_release(*(_QWORD *)(v0 + 24)).n128_u64[0];
  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController);
  objc_msgSend(v3, "viewScale", v1);
  v5 = v4;
  v6 = objc_msgSend(v3, "canvas");
  objc_msgSend(v6, "unscaledRectOfLayouts");
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v14 = v13;

  v15 = objc_retain(*(id *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                          + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard));
  v22.origin.x = v8;
  v22.origin.y = v10;
  v22.size.width = v12;
  v22.size.height = v14;
  Height = CGRectGetHeight(v22);
  v23.origin.x = v8;
  v23.origin.y = v10;
  v23.size.width = v12;
  v23.size.height = v14;
  Width = CGRectGetWidth(v23);
  v18 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__isCanvasDotGridEnabled;
  v19 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__isCanvasDotGridEnabled);
  if (v19 == 2)
  {
    v20 = sub_100C2B92C();
    *(_BYTE *)(v2 + v18) = v20 & 1;
  }
  else
  {
    v20 = v19 & 1;
  }
  type metadata accessor for CRLAnalyticsBoardOpened();
  sub_1008A9ABC(v15, v20 & 1, v5, Height, Width);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100C24090()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 56));
  return swift_task_switch(sub_100C240E0, *(_QWORD *)(v1 + 48), 0);
}

uint64_t sub_100C240E0()
{
  _QWORD *v0;

  swift_release(v0[6]);
  return swift_task_switch(sub_100C4FAB4, v0[4], v0[5]);
}

void sub_100C24118()
{
  char *v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  void *v4;
  id v5;
  NSString v6;
  NSString v7;
  id v8;
  char v9;
  void *v10;
  id v11;
  NSString v12;
  NSString v13;
  id v14;
  NSString v15;
  NSString v16;
  id v17;
  id v18;
  NSString v19;
  NSString v20;
  id v21;
  NSString v22;
  void *v23;
  id v24;
  id v25;
  NSString v26;
  NSString v27;
  id v28;
  uint64_t v29;
  NSString v30;
  void *v31;
  void *v32;
  id v33;
  id v34;
  NSString v35;
  NSString v36;
  id v37;
  NSString v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  id v50;
  id v51;
  __int128 aBlock;
  __int128 v53;
  __int128 v54;
  _OWORD v55[2];

  v1 = sub_1004B804C(&qword_1013E01F0);
  *(_QWORD *)&v2 = __chkstk_darwin(v1).n128_u64[0];
  v49 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = *(id *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController];
  v51 = objc_msgSend(v50, "layerHost", v2);
  v4 = (void *)objc_opt_self(NSBundle);
  v5 = objc_msgSend(v4, "mainBundle");
  v6 = String._bridgeToObjectiveC()();
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend(v5, "localizedStringForKey:value:table:", v6, v7, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v9 = sub_100B02EA0();
  v10 = (void *)objc_opt_self(UIDevice);
  if (objc_msgSend(v10, "crl_iPadDevice"))
  {
    if ((v9 & 1) != 0)
    {
LABEL_3:
      v11 = objc_msgSend(v4, "mainBundle");
      goto LABEL_6;
    }
  }
  else if ((v9 & 1) != 0)
  {
    goto LABEL_3;
  }
  objc_msgSend(v10, "crl_iPadDevice");
  v11 = objc_msgSend(v4, "mainBundle");
LABEL_6:
  v12 = String._bridgeToObjectiveC()();
  v13 = String._bridgeToObjectiveC()();
  v14 = objc_msgSend(v11, "localizedStringForKey:value:table:", v12, v13, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v17 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v15, v16, 1);

  if ((v9 & 1) != 0)
  {
    v18 = objc_msgSend(v4, "mainBundle");
    v19 = String._bridgeToObjectiveC()();
    v20 = String._bridgeToObjectiveC()();
    v21 = objc_msgSend(v18, "localizedStringForKey:value:table:", v19, v20, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
    v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v54 = sub_10091CBA0;
    *((_QWORD *)&v54 + 1) = 0;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = *(_QWORD *)"";
    *(_QWORD *)&v53 = sub_1004C6194;
    *((_QWORD *)&v53 + 1) = &unk_10129C710;
    v23 = _Block_copy(&aBlock);
    swift_release(*((_QWORD *)&v54 + 1));
    v24 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v22, 0, v23);
    _Block_release(v23);

    objc_msgSend(v17, "addAction:", v24);
    objc_msgSend(v17, "setPreferredAction:", v24);

  }
  v25 = objc_msgSend(v4, "mainBundle");
  v26 = String._bridgeToObjectiveC()();
  v27 = String._bridgeToObjectiveC()();
  v28 = objc_msgSend(v25, "localizedStringForKey:value:table:", v26, v27, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
  v29 = swift_allocObject(&unk_10129BBE0, 24, 7);
  swift_unknownObjectWeakInit(v29 + 16);
  swift_retain(v29);
  v30 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v54 = sub_100C4F218;
  *((_QWORD *)&v54 + 1) = v29;
  *(_QWORD *)&aBlock = _NSConcreteStackBlock;
  *((_QWORD *)&aBlock + 1) = *(_QWORD *)"";
  *(_QWORD *)&v53 = sub_1004C6194;
  *((_QWORD *)&v53 + 1) = &unk_10129C6C0;
  v31 = _Block_copy(&aBlock);
  swift_release(*((_QWORD *)&v54 + 1));
  v32 = (void *)objc_opt_self(UIAlertAction);
  v33 = objc_msgSend(v32, "actionWithTitle:style:handler:", v30, 0, v31);
  _Block_release(v31);

  objc_msgSend(v17, "addAction:", v33, swift_release(v29).n128_f64[0]);
  v34 = objc_msgSend(v4, "mainBundle");
  v35 = String._bridgeToObjectiveC()();
  v36 = String._bridgeToObjectiveC()();
  v37 = objc_msgSend(v34, "localizedStringForKey:value:table:", v35, v36, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
  v38 = String._bridgeToObjectiveC()();
  v39 = objc_msgSend(v32, "actionWithTitle:style:handler:", v38, 1, 0, swift_bridgeObjectRelease().n128_f64[0]);

  objc_msgSend(v17, "addAction:", v39);
  objc_msgSend(v0, "presentViewController:animated:completion:", v17, 1, 0);
  v40 = v50;
  objc_msgSend(v50, "setVersionFidelityAlertWasShownIsValid:", 1);
  objc_msgSend(v40, "setVersionFidelityAlertWasShown:", sub_1001E9730());
  sub_100C26214((uint64_t)&aBlock);
  v41 = type metadata accessor for TaskPriority(0);
  v42 = (uint64_t)v49;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v49, 1, 1, v41);
  v43 = swift_allocObject(&unk_10129C6F8, 113, 7);
  *(_QWORD *)(v43 + 16) = 0;
  *(_QWORD *)(v43 + 24) = 0;
  *(_QWORD *)(v43 + 32) = v0;
  v44 = aBlock;
  *(_OWORD *)(v43 + 56) = v53;
  v45 = v55[0];
  *(_OWORD *)(v43 + 72) = v54;
  *(_OWORD *)(v43 + 88) = v45;
  *(_OWORD *)(v43 + 97) = *(_OWORD *)((char *)v55 + 9);
  *(_OWORD *)(v43 + 40) = v44;
  v46 = v0;
  sub_10092217C(&aBlock, (void (*)(uint64_t, uint64_t))sub_10057939C);
  v47 = sub_1009880C4(v42, (uint64_t)&unk_1013FA4E0, v43);
  swift_release(v47);
  sub_10092217C(&aBlock, (void (*)(uint64_t, uint64_t))sub_1004BE2FC);
  sub_1004CB800(v42, &qword_1013E01F0);
  sub_100CE39D8(v17);
  swift_unknownObjectRelease(v51);

}

void sub_100C24930(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    sub_100C24980();

  }
}

void sub_100C24980()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  NSString v4;
  NSString v5;
  id v6;
  NSString v7;
  id v8;

  v1 = (void *)objc_opt_self(UIDevice);
  objc_msgSend(v1, "crl_padUI");
  v2 = objc_msgSend(v1, "currentDevice");
  v3 = objc_msgSend(v2, "systemVersion");

  static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend((id)objc_opt_self(HLPHelpViewController), "helpViewControllerWithIdentifier:version:", v4, v5);

  if (v6)
  {
    objc_msgSend(v6, "setShowTopicViewOnLoad:", 1);
    objc_msgSend(v6, "setDisplayHelpTopicsOnly:", 1);
    objc_msgSend(v6, "setPlatformIndependent:", 1);
    v7 = String._bridgeToObjectiveC()();
    objc_msgSend(v6, "setSelectedHelpTopicID:", v7);

    v8 = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "initWithRootViewController:", v6);
    objc_msgSend(v6, "setModalPresentationStyle:", 2);
    objc_msgSend(v0, "presentViewController:animated:completion:", v8, 1, 0);

  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"presentLearnMoreHelp()", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 798, "Unable to create HLPHelpViewController", 38, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"presentLearnMoreHelp()", 22, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2u, 798, (uint64_t)"Unable to create HLPHelpViewController", 38, 2u);
  }
}

void sub_100C24C18()
{
  char *v0;
  char *v1;
  char v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  char v14;
  id v15;
  void *v16;
  uint64_t KeyPath;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  _QWORD v22[3];
  ValueMetadata *v23;
  unint64_t v24;
  uint64_t v25;
  objc_super v26;

  v1 = v0;
  v26.receiver = v0;
  v26.super_class = (Class)type metadata accessor for CRLiOSBoardViewController(0);
  objc_msgSendSuper2(&v26, "viewDidLayoutSubviews");
  if ((v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isTornDown] & 1) == 0)
    sub_100C28970();
  v23 = &type metadata for CRLFeatureFlags;
  v24 = sub_1004DB6DC();
  LOBYTE(v22[0]) = 16;
  v2 = isFeatureEnabled(_:)(v22);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v22);
  if ((v2 & 1) != 0 && (sub_100C1D040() & 1) != 0)
  {
    v3 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController];
    v4 = swift_allocObject(&unk_10129CA40, 24, 7);
    *(_QWORD *)(v4 + 16) = v1;
    v24 = (unint64_t)sub_100C4F654;
    v25 = v4;
    v22[0] = _NSConcreteStackBlock;
    v22[1] = *(_QWORD *)"";
    v22[2] = sub_1005D2FC0;
    v23 = (ValueMetadata *)&unk_10129CA58;
    v5 = _Block_copy(v22);
    v6 = v25;
    v7 = v1;
    objc_msgSend(v3, "performBlockOnMainThreadAfterLayoutIfNecessary:", v5, swift_release(v6).n128_f64[0]);
    _Block_release(v5);
  }
  v8 = objc_msgSend(v1, "presentedViewController");
  v9 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_compactScenesNavigatorViewController;
  v10 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_compactScenesNavigatorViewController];
  if (v8)
  {
    v11 = v8;
    if (!v10)
    {

      goto LABEL_16;
    }
    sub_1004B8930(0, (unint64_t *)&qword_1013F6620, UIViewController_ptr);
    v12 = v10;
    v13 = v11;
    v14 = static NSObject.== infix(_:_:)(v13, v12);

    if ((v14 & 1) == 0)
    {
LABEL_16:
      v10 = *(void **)&v1[v9];
      if (!v10)
        return;
      goto LABEL_17;
    }
  }
  else
  {
    if (v10)
    {
LABEL_17:
      v21 = v10;
      sub_100B664C8();

      return;
    }
    v15 = 0;
  }
  v16 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesNavigatorState];
  KeyPath = swift_getKeyPath(byte_100F2F648);
  v18 = swift_getKeyPath(byte_100F2F670);
  v19 = v16;
  static Published.subscript.getter(v22, v19, KeyPath, v18);
  swift_release(v18);
  swift_release(KeyPath);

  if ((v22[0] & 1) != 0)
    goto LABEL_16;
  v20 = *(void **)&v1[v9];
  if (v20)
    objc_msgSend(v20, "dismissViewControllerAnimated:completion:", 0, 0);
}

double sub_100C24EAC(void *a1, char a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  id v9;
  uint64_t v10;
  _BOOL4 v11;
  uint64_t v12;
  id v13;
  void *v14;
  double v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  objc_class *v19;
  id v20;
  id v21;
  __objc2_class *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  double v31;
  char *v32;
  char *v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  objc_class *v40;
  NSString *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  objc_class *v49;
  NSString *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  objc_class *v57;
  NSString *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  uint64_t inited;
  uint64_t ObjectType;
  uint64_t v68;
  objc_class *ObjCClassFromMetadata;
  NSString *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  id v80;
  id v81;
  void *v82;
  id v83;
  id v84;
  id v85;
  id v86;
  double v87;
  char *v88;
  char *v89;
  id v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  objc_class *v96;
  NSString *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  objc_class *v105;
  NSString *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  objc_class *v113;
  NSString *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  double result;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  objc_class *v125;
  NSString *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  id v133;
  void **aBlock;
  uint64_t v135;
  double (*v136)(uint64_t);
  void *v137;
  uint64_t (*v138)();
  uint64_t v139;
  char v140[152];
  char v141[72];
  char v142[152];
  char v143[72];
  objc_super v144;

  v9 = objc_msgSend(v4, "topMostViewController");
  v10 = type metadata accessor for CRLScenesNavigatorViewController();
  if (swift_dynamicCastClass(v9, v10))
  {
    v11 = 1;
  }
  else
  {
    v12 = objc_opt_self(UIAlertController);
    v11 = swift_dynamicCastObjCClass(v9, v12) != 0;
  }
  v13 = objc_msgSend(v4, "presentedViewController");
  if (!v13)
  {
LABEL_7:
    if (a3)
    {
      v138 = (uint64_t (*)())a3;
      v139 = a4;
      aBlock = _NSConcreteStackBlock;
      v135 = *(_QWORD *)"";
      v136 = sub_1005D2FC0;
      v137 = &unk_10129C968;
      v16 = _Block_copy(&aBlock);
      v17 = v139;
      swift_retain(a4);
      swift_release(v17);
    }
    else
    {
      v16 = 0;
    }
    v19 = (objc_class *)type metadata accessor for CRLiOSBoardViewController(0);
    v144.receiver = v4;
    v144.super_class = v19;
    objc_msgSendSuper2(&v144, "presentViewController:animated:completion:", a1, a2 & 1, v16);
    goto LABEL_14;
  }
  v14 = v13;
  if ((objc_msgSend(v13, "isBeingDismissed") & 1) != 0)
  {

    goto LABEL_7;
  }
  if (v11)
  {
    if (a3)
    {
      v138 = (uint64_t (*)())a3;
      v139 = a4;
      aBlock = _NSConcreteStackBlock;
      v135 = *(_QWORD *)"";
      v136 = sub_1005D2FC0;
      v137 = &unk_10129C9E0;
      v16 = _Block_copy(&aBlock);
      v18 = v139;
      swift_retain(a4);
      *(_QWORD *)&v15 = swift_release(v18).n128_u64[0];
    }
    else
    {
      v16 = 0;
    }
    objc_msgSend(v9, "presentViewController:animated:completion:", a1, 1, v16, v15);

  }
  else
  {
    v76 = swift_allocObject(&unk_10129C9A0, 56, 7);
    *(_QWORD *)(v76 + 16) = v4;
    *(_QWORD *)(v76 + 24) = a1;
    v77 = a2 & 1;
    *(_BYTE *)(v76 + 32) = v77;
    *(_QWORD *)(v76 + 40) = a3;
    *(_QWORD *)(v76 + 48) = a4;
    v138 = sub_100C4F5EC;
    v139 = v76;
    aBlock = _NSConcreteStackBlock;
    v135 = *(_QWORD *)"";
    v136 = sub_1005D2FC0;
    v137 = &unk_10129C9B8;
    v16 = _Block_copy(&aBlock);
    v78 = v139;
    sub_1004C0F54(a3, a4);
    v79 = v4;
    v80 = a1;
    objc_msgSend(v79, "dismissViewControllerAnimated:completion:", v77, v16, swift_release(v78).n128_f64[0]);

  }
LABEL_14:
  _Block_release(v16);
  v20 = sub_100C1CAE8();
  v21 = objc_msgSend(v20, "mode");

  LODWORD(v20) = objc_msgSend(v21, "wantsToEndForNonPopoverPresentations");
  v22 = _TtC8Freeform23CRLBoardItemDatabaseRow;
  if (!(_DWORD)v20)
    goto LABEL_32;
  v23 = objc_msgSend(a1, "presentationController");
  if (!v23)
  {
    v65 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v65, v141);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    ObjectType = swift_getObjectType(a1);
    ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(ObjectType, v68);
    v70 = NSStringFromClass(ObjCClassFromMetadata);
    static String._unconditionallyBridgeFromObjectiveC(_:)(v70);
    v72 = v71;
    v74 = v73;

    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = sub_1004CFC2C();
    *(_QWORD *)(inited + 32) = v72;
    *(_QWORD *)(inited + 40) = v74;
    sub_100757E04(&_mh_execute_header, (uint64_t)"present(_:animated:completion:)", 31, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 889, "Presentation controller should not be nil when presenting view controller (%{public}@).", 87, 2u, inited);
    sub_1004F5394(inited, (uint64_t)"present(_:animated:completion:)", 31, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2u, 889, (uint64_t)"Presentation controller should not be nil when presenting view controller (%{public}@).", 87, 2u);
    swift_setDeallocating(inited);
    v75 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v75);
    v24 = sub_100C1CAE8();
    objc_msgSend(v24, "resetToDefaultModeAnimated:", 1);
    goto LABEL_30;
  }
  v24 = v23;
  v25 = objc_msgSend(v23, "presentationStyle");
  v26 = objc_msgSend(v4, "traitCollection");
  v27 = objc_msgSend(v24, "adaptivePresentationStyleForTraitCollection:", v26);

  if (!*(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_undoAlertController])
  {
    v28 = sub_100C1CAE8();
    v29 = objc_msgSend(v28, "mode");

    LODWORD(v28) = objc_msgSend(v29, "wantsToEndForNonPopoverPresentations");
    if ((_DWORD)v28)
    {
      if (v25 != (id)7 && v27 != (id)7 || v27 != (id)-1 && v27 != (id)7)
      {
        v133 = sub_100C1CAE8();
        objc_msgSend(v133, "resetToDefaultModeAnimated:", 1);

        goto LABEL_31;
      }
    }
  }
  v30 = objc_msgSend(v24, "delegate");
  *(_QWORD *)&v31 = swift_unknownObjectRelease(v30).n128_u64[0];
  if (!v30)
  {
    objc_msgSend(v24, "setDelegate:", v4, v31);
    goto LABEL_30;
  }
  v32 = (char *)objc_msgSend(v24, "delegate", v31);
  if (!v32)
  {
LABEL_30:

    goto LABEL_31;
  }
  v33 = v32;
  v34 = objc_msgSend(v4, "traitCollection");
  v35 = objc_msgSend(v34, "userInterfaceIdiom");

  if (v35)
  {
    if (v33 == v4)
    {

      swift_unknownObjectRelease(v4);
      goto LABEL_31;
    }
    v36 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v37 = swift_initStackObject(v36, v140);
    *(_OWORD *)(v37 + 16) = xmmword_100EF5550;
    v38 = swift_getObjectType(v24);
    v40 = (objc_class *)swift_getObjCClassFromMetadata(v38, v39);
    v41 = NSStringFromClass(v40);
    static String._unconditionallyBridgeFromObjectiveC(_:)(v41);
    v43 = v42;
    v45 = v44;

    *(_QWORD *)(v37 + 56) = &type metadata for String;
    v46 = sub_1004CFC2C();
    *(_QWORD *)(v37 + 64) = v46;
    *(_QWORD *)(v37 + 32) = v43;
    *(_QWORD *)(v37 + 40) = v45;
    v47 = swift_getObjectType(a1);
    v49 = (objc_class *)swift_getObjCClassFromMetadata(v47, v48);
    v50 = NSStringFromClass(v49);
    static String._unconditionallyBridgeFromObjectiveC(_:)(v50);
    v52 = v51;
    v54 = v53;

    *(_QWORD *)(v37 + 96) = &type metadata for String;
    *(_QWORD *)(v37 + 104) = v46;
    *(_QWORD *)(v37 + 72) = v52;
    *(_QWORD *)(v37 + 80) = v54;
    v55 = swift_getObjectType(v33);
    v57 = (objc_class *)swift_getObjCClassFromMetadata(v55, v56);
    v58 = NSStringFromClass(v57);
    static String._unconditionallyBridgeFromObjectiveC(_:)(v58);
    v60 = v59;
    v62 = v61;

    *(_QWORD *)(v37 + 136) = &type metadata for String;
    *(_QWORD *)(v37 + 144) = v46;
    *(_QWORD *)(v37 + 112) = v60;
    *(_QWORD *)(v37 + 120) = v62;
    sub_100757E04(&_mh_execute_header, (uint64_t)"present(_:animated:completion:)", 31, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 881, "Board view controller can't become presentation delegate (of %{public}@ presenting %{public}@) if it's already set (%{public}@).", 128, 2u, v37);
    sub_1004F5394(v37, (uint64_t)"present(_:animated:completion:)", 31, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2u, 881, (uint64_t)"Board view controller can't become presentation delegate (of %{public}@ presenting %{public}@) if it's already set (%{public}@).", 128, 2u);
    swift_setDeallocating(v37);
    v63 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v37 + 32, 3, v63);
    v64 = sub_100C1CAE8();
    objc_msgSend(v64, "resetToDefaultModeAnimated:", 1);

  }
  else
  {

  }
  swift_unknownObjectRelease(v33);
LABEL_31:
  v22 = _TtC8Freeform23CRLBoardItemDatabaseRow;
LABEL_32:
  if (!*(_QWORD *)&v4[(unint64_t)v22[95].isa])
  {

    return result;
  }
  v81 = objc_msgSend(a1, "presentationController");
  if (!v81)
  {
    v121 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v122 = swift_initStackObject(v121, v143);
    *(_OWORD *)(v122 + 16) = xmmword_100EF5E40;
    v123 = swift_getObjectType(a1);
    v125 = (objc_class *)swift_getObjCClassFromMetadata(v123, v124);
    v126 = NSStringFromClass(v125);
    static String._unconditionallyBridgeFromObjectiveC(_:)(v126);
    v128 = v127;
    v130 = v129;

    *(_QWORD *)(v122 + 56) = &type metadata for String;
    *(_QWORD *)(v122 + 64) = sub_1004CFC2C();
    *(_QWORD *)(v122 + 32) = v128;
    *(_QWORD *)(v122 + 40) = v130;
    sub_100757E04(&_mh_execute_header, (uint64_t)"present(_:animated:completion:)", 31, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 917, "Presentation controller should not be nil when presenting view controller (%{public}@).", 87, 2u, v122);
    sub_1004F5394(v122, (uint64_t)"present(_:animated:completion:)", 31, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2u, 917, (uint64_t)"Presentation controller should not be nil when presenting view controller (%{public}@).", 87, 2u);

    swift_setDeallocating(v122);
    v131 = sub_1004B804C(&qword_1013E0190);
    *(_QWORD *)&result = swift_arrayDestroy(v122 + 32, 1, v131).n128_u64[0];
    return result;
  }
  v82 = v81;
  v83 = objc_msgSend(v81, "presentationStyle");
  v84 = objc_msgSend(v4, "traitCollection");
  v85 = objc_msgSend(v82, "adaptivePresentationStyleForTraitCollection:", v84);

  sub_100C25AD4((uint64_t)v83, (uint64_t)v85);
  v86 = objc_msgSend(v82, "delegate");
  *(_QWORD *)&v87 = swift_unknownObjectRelease(v86).n128_u64[0];
  if (!v86)
  {
    objc_msgSend(v82, "setDelegate:", v4, v87);
    goto LABEL_42;
  }
  v88 = (char *)objc_msgSend(v82, "delegate", v87);
  if (!v88)
  {
LABEL_42:

    return result;
  }
  v89 = v88;
  v90 = objc_msgSend(v4, "traitCollection");
  v91 = objc_msgSend(v90, "userInterfaceIdiom");

  if (v91)
  {
    if (v89 == v4)
    {

      v132 = v4;
      goto LABEL_51;
    }
    v92 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v93 = swift_initStackObject(v92, v142);
    *(_OWORD *)(v93 + 16) = xmmword_100EF5550;
    v94 = swift_getObjectType(v82);
    v96 = (objc_class *)swift_getObjCClassFromMetadata(v94, v95);
    v97 = NSStringFromClass(v96);
    static String._unconditionallyBridgeFromObjectiveC(_:)(v97);
    v99 = v98;
    v101 = v100;

    *(_QWORD *)(v93 + 56) = &type metadata for String;
    v102 = sub_1004CFC2C();
    *(_QWORD *)(v93 + 64) = v102;
    *(_QWORD *)(v93 + 32) = v99;
    *(_QWORD *)(v93 + 40) = v101;
    v103 = swift_getObjectType(a1);
    v105 = (objc_class *)swift_getObjCClassFromMetadata(v103, v104);
    v106 = NSStringFromClass(v105);
    static String._unconditionallyBridgeFromObjectiveC(_:)(v106);
    v108 = v107;
    v110 = v109;

    *(_QWORD *)(v93 + 96) = &type metadata for String;
    *(_QWORD *)(v93 + 104) = v102;
    *(_QWORD *)(v93 + 72) = v108;
    *(_QWORD *)(v93 + 80) = v110;
    v111 = swift_getObjectType(v89);
    v113 = (objc_class *)swift_getObjCClassFromMetadata(v111, v112);
    v114 = NSStringFromClass(v113);
    static String._unconditionallyBridgeFromObjectiveC(_:)(v114);
    v116 = v115;
    v118 = v117;

    *(_QWORD *)(v93 + 136) = &type metadata for String;
    *(_QWORD *)(v93 + 144) = v102;
    *(_QWORD *)(v93 + 112) = v116;
    *(_QWORD *)(v93 + 120) = v118;
    sub_100757E04(&_mh_execute_header, (uint64_t)"present(_:animated:completion:)", 31, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 911, "Board view controller can't become presentation delegate (of %{public}@ presenting %{public}@) if it's already set (%{public}@).", 128, 2u, v93);
    sub_1004F5394(v93, (uint64_t)"present(_:animated:completion:)", 31, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2u, 911, (uint64_t)"Board view controller can't become presentation delegate (of %{public}@ presenting %{public}@) if it's already set (%{public}@).", 128, 2u);

    swift_setDeallocating(v93);
    v119 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v93 + 32, 3, v119);
  }
  else
  {

  }
  v132 = v89;
LABEL_51:
  *(_QWORD *)&result = swift_unknownObjectRelease(v132).n128_u64[0];
  return result;
}

void sub_100C25A08(void *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  void *v9;
  uint64_t v10;
  objc_class *v11;
  _QWORD v12[5];
  uint64_t v13;
  objc_super v14;

  if (a4)
  {
    v12[4] = a4;
    v13 = a5;
    v12[0] = _NSConcreteStackBlock;
    v12[1] = *(_QWORD *)"";
    v12[2] = sub_1005D2FC0;
    v12[3] = &unk_10129CA08;
    v9 = _Block_copy(v12);
    v10 = v13;
    swift_retain(a5);
    swift_release(v10);
  }
  else
  {
    v9 = 0;
  }
  v11 = (objc_class *)type metadata accessor for CRLiOSBoardViewController(0);
  v14.receiver = a1;
  v14.super_class = v11;
  objc_msgSendSuper2(&v14, "presentViewController:animated:completion:", a2, a3 & 1, v9);
  _Block_release(v9);
}

uint64_t sub_100C25AD4(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_bottomToolTray);
  if (!v3)
  {
    *(_BYTE *)(v2
             + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isSuppressingBottomToolTrayForPresentationController) = 0;
    return result;
  }
  v5 = result;
  v6 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isSuppressingBottomToolTrayForPresentationController;
  v7 = *(_BYTE *)(v2
                + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isSuppressingBottomToolTrayForPresentationController);
  swift_unknownObjectRetain(*(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_bottomToolTray));
  if ((v7 & 1) == 0 && (objc_msgSend(v3, "hidden") & 1) != 0)
    return swift_unknownObjectRelease(v3);
  if (!*(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_undoAlertController)
    || (v5 == 7 || a2 == 7) && (a2 == -1 || a2 == 7))
  {
    if ((v7 & 1) != 0)
    {
      objc_msgSend(v3, "setToolTrayHidden:animated:", 0, 1);
      result = swift_unknownObjectRelease(v3);
      *(_BYTE *)(v2 + v6) = 0;
      return result;
    }
    return swift_unknownObjectRelease(v3);
  }
  if ((v7 & 1) != 0)
    return swift_unknownObjectRelease(v3);
  objc_msgSend(v3, "setToolTrayHidden:animated:", 1, 1);
  result = swift_unknownObjectRelease(v3);
  *(_BYTE *)(v2 + v6) = 1;
  return result;
}

void sub_100C25CA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[24];

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_100C26D9C();

  }
}

void sub_100C25CF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v3;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  _QWORD v9[5];

  v2 = a2 + 16;
  v9[3] = &type metadata for CRLFeatureFlags;
  v9[4] = sub_1004DB6DC();
  LOBYTE(v9[0]) = 16;
  v3 = isFeatureEnabled(_:)(v9);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v9);
  if ((v3 & 1) != 0)
  {
    swift_beginAccess(v2, &v8, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v2);
    if (Strong)
    {
      v5 = (void *)Strong;
      sub_100C20FBC();

    }
  }
  swift_beginAccess(v2, v9, 0, 0);
  v6 = swift_unknownObjectWeakLoadStrong(v2);
  if (v6)
  {
    v7 = (void *)v6;
    sub_100C26D9C();

  }
}

uint64_t sub_100C25DA0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _BYTE v8[24];
  _BYTE v9[24];
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_viewScaleObservation);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_viewScaleObservation) = 0;

  v2 = v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scrollObserver;
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scrollObserver, v9, 0, 0);
  sub_1004CB7BC(v2, (uint64_t)&v10, &qword_1013E0230);
  if (!*((_QWORD *)&v11 + 1))
    return sub_1004CB800((uint64_t)&v10, &qword_1013E0230);
  sub_10050CB14(&v10, &v12);
  v3 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v4 = v13;
  v5 = sub_1004BB5A4(&v12, v13);
  v6 = _bridgeAnythingToObjectiveC<A>(_:)(v5, v4);
  objc_msgSend(v3, "removeObserver:", v6);

  swift_unknownObjectRelease(v6);
  v10 = 0u;
  v11 = 0u;
  swift_beginAccess(v2, v8, 33, 0);
  sub_100582338((uint64_t)&v10, v2, &qword_1013E0230);
  swift_endAccess(v8);
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v12);
}

uint64_t sub_100C25ED8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[18] = a4;
  v5[19] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[20] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v5[21] = v7;
  v5[22] = v8;
  return swift_task_switch(sub_100C25F44, v7, v8);
}

uint64_t sub_100C25F44()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(void **)(*(_QWORD *)(v0[18] + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  v0[23] = v1;
  v2 = dword_101405D24;
  v1;
  v3 = (_QWORD *)swift_task_alloc(v2);
  v0[24] = v3;
  *v3 = v0;
  v3[1] = sub_100C25FC4;
  return sub_100B22E74(v0[19]);
}

uint64_t sub_100C25FC4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 192);
  *(_QWORD *)(*v1 + 200) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 168);
    v5 = *(_QWORD *)(v2 + 176);
    v6 = sub_100C26060;
  }
  else
  {

    v4 = *(_QWORD *)(v2 + 168);
    v5 = *(_QWORD *)(v2 + 176);
    v6 = sub_100C26030;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_100C26030()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_release(*(_QWORD *)(v0 + 160));
  return (*(uint64_t (**)(__n128))(v0 + 8))(v1);
}

uint64_t sub_100C26060()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 160);

  swift_release(v1);
  return swift_task_switch(sub_100C260A8, 0, 0);
}

uint64_t sub_100C260A8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (qword_1013DD850 != -1)
    swift_once(&qword_1013DD850, sub_100A053B8);
  v1 = *(_QWORD *)(v0 + 200);
  swift_beginAccess(&static OS_os_log.contentState, v0 + 88, 0, 0);
  v2 = (void *)static OS_os_log.contentState;
  v3 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v3, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  swift_getErrorValue(v1, v0 + 136, v0 + 112);
  v5 = *(_QWORD *)(v0 + 120);
  v6 = *(_QWORD *)(v0 + 128);
  v7 = v2;
  v8 = Error.localizedDescription.getter(v5, v6);
  v10 = v9;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v11 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v11;
  *(_QWORD *)(inited + 32) = v8;
  *(_QWORD *)(inited + 40) = v10;
  v12 = static os_log_type_t.error.getter(v11);
  sub_100A06EBC((uint64_t)v7, &_mh_execute_header, v12, "Failed to archive view state in database. %@", 44, 2, inited);
  swift_setDeallocating(inited);
  v13 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v13);

  swift_errorRelease(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100C26214(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  unsigned int v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;

  v2 = v1;
  v4 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController);
  v5 = objc_msgSend(v4, "versionFidelityAlertWasShownIsValid");
  if (v5)
    v6 = objc_msgSend(v4, "versionFidelityAlertWasShown");
  else
    v6 = 0;
  objc_msgSend(v4, "viewScale");
  v8 = v7;
  objc_msgSend(v4, "contentOffset");
  v10 = v9;
  v12 = v11;
  v13 = objc_msgSend(v4, "freehandDrawingToolkit");
  if (v13)
  {
    v14 = v13;
    v15 = objc_msgSend(v13, "toolkitUIState");
    v16 = sub_10097D238();
    v18 = v17;

  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"viewState", 9, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 976, "Freehand toolkit should not be nil while saving view state.", 59, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"viewState", 9, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2u, 976, (uint64_t)"Freehand toolkit should not be nil while saving view state.", 59, 2u);
    v16 = 0;
    v18 = 0xF000000000000000;
  }
  v19 = objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasViewController), "pencilMediator");
  if (!v19)
    goto LABEL_11;
  v20 = v19;
  v21 = type metadata accessor for CRLiOSPencilMediator();
  if (!swift_dynamicCastClass(v20, v21))
  {
    swift_unknownObjectRelease(v20);
LABEL_11:
    sub_100757E04(&_mh_execute_header, (uint64_t)"viewState", 9, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 979, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"viewState", 9, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2u, 979, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    v22 = 0;
    v24 = 0xF000000000000000;
    goto LABEL_12;
  }
  v22 = sub_100BD463C();
  v24 = v23;
  swift_unknownObjectRelease(v20);
LABEL_12:
  *(_QWORD *)a1 = v8;
  *(_QWORD *)(a1 + 8) = v10;
  *(_QWORD *)(a1 + 16) = v12;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v5 ^ 1;
  *(_QWORD *)(a1 + 40) = v16;
  *(_QWORD *)(a1 + 48) = v18;
  *(_QWORD *)(a1 + 56) = v22;
  *(_QWORD *)(a1 + 64) = v24;
  *(_BYTE *)(a1 + 72) = 0;
}

void sub_100C264D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  char *v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  void *v20;
  _BYTE v21[24];
  _BYTE v22[16];
  _QWORD v23[4];
  char v24;
  __int128 v25;
  __int128 v26;
  char v27;
  uint64_t v28;
  char v29;
  CGRect v30;
  CGRect v31;

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v21, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (char *)Strong;
    if ((*(_BYTE *)(a2 + 72) & 1) == 0)
    {
      objc_msgSend(*(id *)(Strong + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController), "setViewScale:", *(double *)a2);
      v6 = *(void **)&v5[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasZoomControlViewController];
      if (v6)
      {
        v7 = v6;
        sub_10056E680();

      }
    }
    v8 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController;
    v9 = *(void **)&v5[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController];
    objc_msgSend(v9, "growCanvasAsNeededToRestoreContentOffset:", *(double *)(a2 + 8), *(double *)(a2 + 16));
    sub_100C2673C(a2);
    sub_100C26A80(a2);
    v23[0] = 0x3FF0000000000000;
    memset(&v23[1], 0, 24);
    v24 = 1;
    v25 = xmmword_100F062D0;
    v26 = xmmword_100F062D0;
    v27 = 0;
    v10 = v9;
    if ((sub_1005874E4(a2, (uint64_t)v23) & 1) == 0)
      goto LABEL_7;
    v11 = objc_msgSend(v10, "canvas");
    objc_msgSend(v11, "unscaledRectOfLayouts");
    v13 = v12;
    v15 = v14;
    v17 = v16;
    v19 = v18;

    v31.origin.x = 0.0;
    v31.origin.y = 0.0;
    v31.size.width = 0.0;
    v31.size.height = 0.0;
    v30.origin.x = v13;
    v30.origin.y = v15;
    v30.size.width = v17;
    v30.size.height = v19;
    if (!CGRectEqualToRect(v30, v31))
    {
      objc_msgSend(v10, "scrollRectToVisible:scrollOptions:", 96, v13, v15, v17, v19);

      sub_1004C4938(a2 + 24, (uint64_t)v22, &qword_1013E4250);
      sub_1004C4938((uint64_t)v22, (uint64_t)&v28, &qword_1013E4250);
      if ((v29 & 1) != 0)
        goto LABEL_8;
    }
    else
    {
LABEL_7:

      sub_1004C4938(a2 + 24, (uint64_t)v22, &qword_1013E4250);
      sub_1004C4938((uint64_t)v22, (uint64_t)&v28, &qword_1013E4250);
      if (v29 == 1)
      {
LABEL_8:
        objc_msgSend(*(id *)&v5[v8], "setVersionFidelityAlertWasShownIsValid:", 0);
LABEL_11:

        return;
      }
    }
    v20 = *(void **)&v5[v8];
    objc_msgSend(v20, "setVersionFidelityAlertWasShown:", v28);
    objc_msgSend(v20, "setVersionFidelityAlertWasShownIsValid:", 1);
    goto LABEL_11;
  }
}

void sub_100C2673C(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  id v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  char *v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  _BYTE v20[24];

  v2 = *(_QWORD *)(a1 + 48);
  if (v2 >> 60 == 15)
  {
    if (qword_1013DD850 != -1)
      swift_once(&qword_1013DD850, sub_100A053B8);
    swift_beginAccess(&static OS_os_log.contentState, v20, 0, 0);
    v3 = (id)static OS_os_log.contentState;
    v5 = static os_log_type_t.info.getter(v4);
    sub_100A06EBC((uint64_t)v3, &_mh_execute_header, v5, "View state to restore does not contain freehand drawing toolkit UI state. Skipping restoration of it.", 101, 2, (uint64_t)_swiftEmptyArrayStorage);

  }
  else
  {
    v6 = v1;
    v7 = *(_QWORD *)(a1 + 40);
    sub_1004B8930(0, &qword_10140B8E8, off_1012298C0);
    sub_1004BE310(v7, v2);
    sub_1004BE310(v7, v2);
    v19 = sub_10097E3E4(v7, v2);
    if (v19)
    {
      v8 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController), "freehandDrawingToolkit");
      if (v8)
      {
        v9 = v8;
        objc_msgSend(v8, "setUpdatedToolkitUIStateFromArchive:", v19);
        v10 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__sharedPencilTray;
        v11 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__sharedPencilTray);
        if (v11)
        {
          v12 = v11;
          v13 = (char *)sub_100B4F46C();
          if (v13)
          {
            v14 = v13;
            v15 = *(id *)&v13[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];

          }
          else
          {
            sub_100B4F3B8();
            v15 = v16;
          }
          objc_msgSend(v15, "_disableTapInteractionWhenNotVisible");

          sub_100B4F5A8();
        }
        v17 = sub_100C26C7C();
        v18 = *(void **)(v6 + v10);
        *(_QWORD *)(v6 + v10) = v17;

        sub_1004BE2FC(v7, v2);
      }
      else
      {
        sub_100757E04(&_mh_execute_header, (uint64_t)"restoreFreehandDrawingUIState(viewState:)", 41, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 1021, "Freehand toolkit should not be nil while restoring view state.", 62, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"restoreFreehandDrawingUIState(viewState:)", 41, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2u, 1021, (uint64_t)"Freehand toolkit should not be nil while restoring view state.", 62, 2u);
        sub_1004BE2FC(v7, v2);
      }

    }
    else
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"restoreFreehandDrawingUIState(viewState:)", 41, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 1024, "Unable to deserialize/unarchive freehand toolkit UI state from view state.", 74, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"restoreFreehandDrawingUIState(viewState:)", 41, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2u, 1024, (uint64_t)"Unable to deserialize/unarchive freehand toolkit UI state from view state.", 74, 2u);
      sub_1004BE2FC(v7, v2);
    }
  }
}

void sub_100C26A80(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 64);
  if (v2 >> 60 != 15)
  {
    v3 = *(_QWORD *)(a1 + 56);
    v4 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasViewController);
    sub_1004BE310(v3, v2);
    v5 = objc_msgSend(v4, "pencilMediator");
    if (v5)
    {
      v6 = v5;
      v7 = type metadata accessor for CRLiOSPencilMediator();
      if (swift_dynamicCastClass(v6, v7))
      {
        sub_100BD4CA0(v3, v2);
        sub_1004BE2FC(v3, v2);
        swift_unknownObjectRelease(v6);
        return;
      }
      swift_unknownObjectRelease(v6);
    }
    sub_100757E04(&_mh_execute_header, (uint64_t)"restorePencilMediatorUIState(viewState:)", 40, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 1033, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"restorePencilMediatorUIState(viewState:)", 40, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2u, 1033, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    sub_1004BE2FC(v3, v2);
  }
}

id sub_100C26C7C()
{
  char *v0;
  id v1;
  id v2;
  _BYTE *v3;
  char *v4;
  uint64_t v5;
  id result;
  void *v7;
  id v8;
  id v9;
  char *v10;
  void *v11;
  id v12;
  void *v13;

  v1 = *(id *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController];
  v2 = sub_100C1CAE8();
  v3 = objc_allocWithZone((Class)type metadata accessor for CRLiOSPencilTray());
  v4 = v0;
  v5 = sub_100C46D9C(v4, v1, v2, v3);
  result = objc_msgSend(v4, "view");
  if (result)
  {
    v7 = result;
    v8 = objc_msgSend(result, "window");

    if (v8)
    {
      v9 = v8;
      sub_100B4FA6C();
      v10 = (char *)sub_100B4F46C();
      if (v10)
      {
        v11 = v10;
        v12 = *(id *)&v10[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];

      }
      else
      {
        sub_100B4F3B8();
        v12 = v13;
      }
      objc_msgSend(v12, "_enableTapInteractionForWindow:", v9);

    }
    return (id)v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100C26D9C()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;

  v1 = sub_100B7FDBC();
  if (v1)
  {
    v2 = v1;
    v3 = sub_1009093EC();
    v4 = sub_1009093FC();
    v5 = v3;
    objc_msgSend(v0, "loadViewIfNeeded");
    sub_1009E98A4(v5);
    objc_msgSend(v5, "setNeedsSave:", 1);

    v6 = v4;
    objc_msgSend(v0, "loadViewIfNeeded");
    sub_1009E98A4(v6);
    objc_msgSend(v6, "setNeedsSave:", 1);

  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"updateUserActivities()", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 1073, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateUserActivities()", 22, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2u, 1073, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  }
}

id sub_100C26F20(uint64_t a1)
{
  char *v1;
  char *v2;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  void *v9;
  uint64_t v10;
  objc_class *v11;
  _QWORD v13[5];
  uint64_t v14;
  objc_super v15;
  _BYTE v16[80];
  _OWORD v17[3];
  _BYTE v18[25];
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _OWORD v22[2];

  v2 = v1;
  objc_msgSend(v2, "loadViewIfNeeded");
  sub_1009E93B0((uint64_t)v16);
  sub_1004C4938((uint64_t)v16, (uint64_t)v17, (uint64_t *)&unk_101405F80);
  if (v18[24] != 2)
  {
    v21 = v17[2];
    v22[0] = *(_OWORD *)v18;
    *(_OWORD *)((char *)v22 + 9) = *(_OWORD *)&v18[9];
    v19 = v17[0];
    v20 = v17[1];
    v4 = *(void **)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController];
    v5 = swift_allocObject(&unk_10129BBE0, 24, 7);
    swift_unknownObjectWeakInit(v5 + 16);
    v6 = swift_allocObject(&unk_10129C900, 97, 7);
    v7 = v19;
    *(_OWORD *)(v6 + 40) = v20;
    v8 = v22[0];
    *(_OWORD *)(v6 + 56) = v21;
    *(_OWORD *)(v6 + 72) = v8;
    *(_OWORD *)(v6 + 81) = *(_OWORD *)((char *)v22 + 9);
    *(_QWORD *)(v6 + 16) = v5;
    *(_OWORD *)(v6 + 24) = v7;
    v13[4] = sub_100C4FCC4;
    v14 = v6;
    v13[0] = _NSConcreteStackBlock;
    v13[1] = *(_QWORD *)"";
    v13[2] = sub_1005D2FC0;
    v13[3] = &unk_10129C918;
    v9 = _Block_copy(v13);
    v10 = v14;
    sub_10092217C(&v19, (void (*)(uint64_t, uint64_t))sub_10057939C);
    objc_msgSend(v4, "performBlockOnMainThreadAfterLayoutIfNecessary:", v9, swift_release(v10).n128_f64[0]);
    _Block_release(v9);
    v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_didRestoreCanvasViewState] = 1;
    sub_100C4F564((uint64_t)v16);
  }
  v11 = (objc_class *)type metadata accessor for CRLiOSBoardViewController(0);
  v15.receiver = v2;
  v15.super_class = v11;
  return objc_msgSendSuper2(&v15, "restoreUserActivityState:", a1);
}

void sub_100C2710C(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  void *v7;
  unint64_t v8;
  id v9;
  char v10;
  uint64_t KeyPath;
  uint64_t v12;
  id v13;
  __n128 v14;
  uint64_t v15;
  void *v16;
  id v17;
  unsigned int v18;
  id v19;
  id v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t ObjectType;
  void (*v25)(char *, uint64_t, uint64_t, __n128);
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t Strong;
  void *v36;
  void *v37;
  char v38;
  objc_class *v39;
  _BYTE v40[24];
  objc_super v41;
  id v42[3];
  ValueMetadata *v43;
  unint64_t v44;

  v2 = v1;
  v4 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v4);
  v6 = &v40[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = *(void **)(*(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator);
  v43 = &type metadata for CRLFeatureFlags;
  v8 = sub_1004DB6DC();
  v44 = v8;
  LOBYTE(v42[0]) = 11;
  v9 = v7;
  v10 = isFeatureEnabled(_:)(v42);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v42);
  if ((v10 & 1) != 0)
  {
    KeyPath = swift_getKeyPath(byte_100F2F3B8);
    v12 = swift_getKeyPath(byte_100F2F3E0);
    static Published.subscript.getter(v42, v9, KeyPath, v12);
    swift_release(v12);
    swift_release(KeyPath);
    if (v42[0])
    {

      if (qword_1013DD7C8 != -1)
        swift_once(&qword_1013DD7C8, sub_100A03AC0);
      swift_beginAccess(&static OS_os_log.crlFollow, v40, 0, 0);
      v13 = (id)static OS_os_log.crlFollow;
      v15 = static os_log_type_t.default.getter(v14);
      sub_100A06EBC((uint64_t)v13, &_mh_execute_header, v15, "Calling didEndFollowing because of the public endFollowSessionForLocalParticipant method was called", 99, 2, (uint64_t)_swiftEmptyArrayStorage);

      sub_1006F534C(0);
    }
  }

  v16 = (void *)objc_opt_self(UIApplication);
  v17 = objc_msgSend(v16, "sharedApplication");
  v18 = objc_msgSend(v17, "isRunningTest");

  if (v18)
  {
    v19 = objc_msgSend(v16, "sharedApplication");
    v20 = objc_msgSend(v19, "delegate");

    if (!v20)
    {
      __break(1u);
      return;
    }
    v21 = type metadata accessor for CRLiOSAppDelegate();
    swift_dynamicCastClassUnconditional(v20, v21, 0, 0, 0);
    v22 = (void *)qword_10147FC10;
    if (qword_10147FC10)
    {
      v23 = qword_10147FC20;
      ObjectType = swift_getObjectType(qword_10147FC10);
      v42[0] = v22;
      v25 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v23 + 40);
      v26 = swift_unknownObjectRetain(v22);
      v25(v2, ObjectType, v23, v26);
      swift_unknownObjectRelease(v22);
    }
    swift_unknownObjectRelease(v20);
  }
  v27 = type metadata accessor for TaskPriority(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v6, 1, 1, v27);
  v28 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_insertingCancellableToken;
  v29 = *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_insertingCancellableToken];
  type metadata accessor for MainActor(0);
  swift_retain(v29);
  v31 = static MainActor.shared.getter(v30);
  v32 = (_QWORD *)swift_allocObject(&unk_10129C8D8, 40, 7);
  v32[2] = v31;
  v32[3] = &protocol witness table for MainActor;
  v32[4] = v29;
  v33 = sub_100521BB8((uint64_t)v6, (uint64_t)&unk_10140B998, (uint64_t)v32);
  swift_release(v33);
  v34 = *(_QWORD *)&v2[v28];
  *(_QWORD *)&v2[v28] = 0;
  swift_release(v34);
  sub_100C25DA0();
  Strong = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardLibrary]);
  if (Strong)
  {
    v36 = (void *)Strong;
    v37 = *(void **)(Strong + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_shareErrorObservers);
    if (objc_msgSend(v37, "containsObject:", v2))
      objc_msgSend(v37, "removeObject:", v2);

  }
  v43 = &type metadata for CRLFeatureFlags;
  v44 = v8;
  LOBYTE(v42[0]) = 0;
  v38 = isFeatureEnabled(_:)(v42);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v42);
  if ((v38 & 1) != 0)
    sub_100C1BA14(0, 1);
  v39 = (objc_class *)type metadata accessor for CRLiOSBoardViewController(0);
  v41.receiver = v2;
  v41.super_class = v39;
  objc_msgSendSuper2(&v41, "viewWillDisappear:", a1 & 1);
}

void sub_100C27540(char a1)
{
  char *v1;
  char *v2;
  id v4;
  void *v5;
  id v6;
  unsigned int v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  void (*v14)(char *, uint64_t, uint64_t, __n128);
  __n128 v15;
  char v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  _QWORD v24[5];
  objc_super v25;

  v2 = v1;
  v25.receiver = v2;
  v25.super_class = (Class)type metadata accessor for CRLiOSBoardViewController(0);
  objc_msgSendSuper2(&v25, "viewDidDisappear:", a1 & 1);
  v4 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  if (qword_1013DCD48 != -1)
    swift_once(&qword_1013DCD48, sub_1006A5194);
  objc_msgSend(v4, "removeObserver:name:object:", v2, qword_10147F008, *(_QWORD *)(*(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]+ OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_commandController));

  v5 = (void *)objc_opt_self(UIApplication);
  v6 = objc_msgSend(v5, "sharedApplication");
  v7 = objc_msgSend(v6, "isRunningTest");

  if (v7)
  {
    v8 = objc_msgSend(v5, "sharedApplication");
    v9 = objc_msgSend(v8, "delegate");

    if (!v9)
    {
      __break(1u);
      return;
    }
    v10 = type metadata accessor for CRLiOSAppDelegate();
    swift_dynamicCastClassUnconditional(v9, v10, 0, 0, 0);
    v11 = qword_10147FC10;
    if (qword_10147FC10)
    {
      v12 = qword_10147FC20;
      ObjectType = swift_getObjectType(qword_10147FC10);
      v24[0] = v11;
      v14 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v12 + 48);
      v15 = swift_unknownObjectRetain(v11);
      v14(v2, ObjectType, v12, v15);
      swift_unknownObjectRelease(v11);
    }
    swift_unknownObjectRelease(v9);
  }
  v24[3] = &type metadata for CRLFeatureFlags;
  v24[4] = sub_1004DB6DC();
  LOBYTE(v24[0]) = 0;
  v16 = isFeatureEnabled(_:)(v24);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v24);
  if ((v16 & 1) != 0)
  {
    v17 = &v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_tipObservation];
    swift_beginAccess(&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_tipObservation], v24, 1, 0);
    v18 = *(_QWORD *)v17;
    if (*(_QWORD *)v17)
    {
      v19 = *(_QWORD *)(v18 + 16);
      if (v19)
      {
        swift_bridgeObjectRetain(*(_QWORD *)v17);
        v20 = 0;
        do
        {
          v21 = *(_QWORD *)(v18 + 8 * v20++ + 32);
          swift_retain(v21);
          Task.cancel()();
          swift_release(v21);
        }
        while (v19 != v20);
        swift_bridgeObjectRelease();
      }
    }
    *(_QWORD *)v17 = 0;
    swift_bridgeObjectRelease();
  }
  v22 = *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_traitChangeRegistration];
  if (v22)
  {
    v23 = swift_unknownObjectRetain(*(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_traitChangeRegistration]);
    UIViewController.unregisterForTraitChanges(_:)(v23);
    swift_unknownObjectRelease(v22);
  }
}

id sub_100C2785C(uint64_t a1, double a2, double a3)
{
  char *v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  void *v16;
  uint64_t KeyPath;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  objc_class *v24;
  uint64_t v26;
  objc_super v27;
  uint64_t v28;

  v7 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v7);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend((id)objc_opt_self(UIDevice), "crl_padUI"))
  {
    v10 = objc_msgSend(v3, "presentedViewController");
    if (v10)
    {
      v11 = v10;
      v12 = objc_opt_self(_UIStickerPickerViewController);
      v13 = swift_dynamicCastObjCClass(v11, v12);

      if (v13)
      {
        v14 = objc_msgSend(v3, "presentedViewController");
        if (v14)
        {
          v15 = v14;
          objc_msgSend(v14, "dismissViewControllerAnimated:completion:", 0, 0);

        }
      }
    }
  }
  v16 = *(void **)&v3[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState];
  KeyPath = swift_getKeyPath(byte_100F2F300);
  v18 = swift_getKeyPath(aP_18);
  v28 = 0;
  static Published.subscript.setter(&v28, v16, KeyPath, v18);
  sub_100C20FBC();
  v19 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v9, 1, 1, v19);
  type metadata accessor for MainActor(0);
  v20 = v3;
  v21 = static MainActor.shared.getter(v20);
  v22 = (_QWORD *)swift_allocObject(&unk_10129C8B0, 40, 7);
  v22[2] = v21;
  v22[3] = &protocol witness table for MainActor;
  v22[4] = v20;
  v23 = sub_100521B98((uint64_t)v9, (uint64_t)&unk_10140B988, (uint64_t)v22);
  swift_release(v23);
  v24 = (objc_class *)type metadata accessor for CRLiOSBoardViewController(0);
  v27.receiver = v20;
  v27.super_class = v24;
  return objc_msgSendSuper2(&v27, "viewWillTransitionToSize:withTransitionCoordinator:", a1, a2, a3);
}

uint64_t sub_100C27A60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[3] = a4;
  v5 = type metadata accessor for MainActor(0);
  v4[4] = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v4[5] = v6;
  v4[6] = v7;
  return swift_task_switch(sub_100C27ACC, v6, v7);
}

uint64_t sub_100C27ACC()
{
  _QWORD *v0;
  void *v1;
  uint64_t KeyPath;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v1 = *(void **)(v0[3] + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState);
  KeyPath = swift_getKeyPath(byte_100F2F2B8);
  v3 = swift_getKeyPath(byte_100F2F2E0);
  v4 = v1;
  static Published.subscript.getter(v0 + 2, v4, KeyPath, v3);
  swift_release(v3);
  swift_release(KeyPath);

  sub_100AF8E88(v0[2]);
  v6 = v5;
  v0[7] = v5;
  swift_bridgeObjectRelease();
  v7 = (_QWORD *)swift_task_alloc(dword_10140B78C);
  v0[8] = v7;
  *v7 = v0;
  v7[1] = sub_100C27B9C;
  return sub_100C27BF0(v6);
}

uint64_t sub_100C27B9C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 64));
  swift_bridgeObjectRelease();
  return swift_task_switch(sub_10053457C, *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_100C27BF0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[3] = a1;
  v2[4] = v1;
  v3 = type metadata accessor for MainActor(0);
  v2[5] = v3;
  v2[6] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  v2[7] = v4;
  v2[8] = v5;
  return swift_task_switch(sub_100C27C60, v4, v5);
}

void sub_100C27C60()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  double *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(id *)(v0 + 32);
  v3 = sub_100C49B3C(v1, (uint64_t)v2);

  v4 = objc_msgSend(v2, "view");
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(v4, "window");

    if (v6
      && (v7 = objc_msgSend(v6, "windowScene"), v6, v7)
      && (v8 = objc_msgSend(v7, "delegate"),
          *(_QWORD *)(v0 + 72) = v8,
          v7,
          v8))
    {
      v9 = type metadata accessor for CRLiOSSceneDelegate(0);
      v10 = swift_dynamicCastClass(v8, v9);
      *(_QWORD *)(v0 + 80) = v10;
      if (v10)
      {
        v11 = *(_QWORD *)(v0 + 40);
        swift_unknownObjectRetain(v8);
        *(_QWORD *)(v0 + 88) = sub_100AF80B8((uint64_t)v3);
        swift_bridgeObjectRelease();
        *(_QWORD *)(v0 + 96) = static MainActor.shared.getter(v12);
        v13 = dispatch thunk of Actor.unownedExecutor.getter(v11, &protocol witness table for MainActor);
        *(_QWORD *)(v0 + 104) = v13;
        *(_QWORD *)(v0 + 112) = v14;
        swift_task_switch(sub_100C27E0C, v13, v14);
        return;
      }
      v15 = *(_QWORD *)(v0 + 48);
      swift_unknownObjectRelease(v8);
    }
    else
    {
      v15 = *(_QWORD *)(v0 + 48);
    }
    swift_release(v15);
    v16 = swift_bridgeObjectRelease();
    (*(void (**)(__n128))(v0 + 8))(v16);
  }
  else
  {
    swift_bridgeObjectRelease();
    __break(1u);
  }
}

void sub_100C27E0C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t **v2;

  sub_10090373C();
  v0[15] = v1;
  if (v1)
  {
    v2 = (uint64_t **)swift_task_alloc(dword_1013E433C);
    v0[16] = (uint64_t)v2;
    *v2 = v0;
    v2[1] = (uint64_t *)sub_100C27E70;
    sub_10059377C(v0[11]);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100C27E70()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;

  v1 = *v0;
  v2 = *(void **)(*v0 + 120);
  swift_task_dealloc(*(_QWORD *)(*v0 + 128));

  return swift_task_switch(sub_100C27EC0, *(_QWORD *)(v1 + 104), *(_QWORD *)(v1 + 112));
}

uint64_t sub_100C27EC0()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[9];
  swift_release(v0[12]);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease(v1);
  return swift_task_switch(sub_100C27F0C, v0[7], v0[8]);
}

uint64_t sub_100C27F0C()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;

  v1 = *(_QWORD *)(v0 + 48);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 72));
  v2 = swift_release(v1);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
}

id sub_100C27FA0(uint64_t a1, uint64_t a2)
{
  void *v2;
  char v5;
  id v6;
  void *v7;
  objc_super v9;
  _QWORD v10[5];

  v10[3] = &type metadata for CRLFeatureFlags;
  v10[4] = sub_1004DB6DC();
  LOBYTE(v10[0]) = 16;
  v5 = isFeatureEnabled(_:)(v10);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v10);
  if ((v5 & 1) != 0)
  {
    if (objc_msgSend((id)objc_opt_self(UIDevice), "crl_padUI"))
    {
      if ((sub_100C1D040() & 1) != 0)
      {
        v6 = objc_msgSend(v2, "presentedViewController");
        if (v6)
        {
          v7 = v6;
          objc_msgSend(v6, "dismissViewControllerAnimated:completion:", 0, 0);

        }
      }
    }
  }
  v9.receiver = v2;
  v9.super_class = (Class)type metadata accessor for CRLiOSBoardViewController(0);
  return objc_msgSendSuper2(&v9, "willTransitionToTraitCollection:withTransitionCoordinator:", a1, a2);
}

uint64_t sub_100C280E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[2] = a4;
  v5 = type metadata accessor for MainActor(0);
  v4[3] = v5;
  v6 = static MainActor.shared.getter(v5);
  v4[4] = v6;
  v4[5] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v4[6] = v7;
  v4[7] = v8;
  return swift_task_switch(sub_100C2815C, v7, v8);
}

uint64_t sub_100C2815C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  if (*(_QWORD *)(v0[2] + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_undoAlertController))
  {
    v1 = (_QWORD *)swift_task_alloc(dword_10140B37C);
    v0[8] = v1;
    *v1 = v0;
    v1[1] = sub_100C282A4;
    return sub_100C2EFAC();
  }
  else
  {
    swift_release(v0[5]);
    sub_100757E04(&_mh_execute_header, (uint64_t)"dismissUndoMenu()", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 1928, "Not showing undo menu", 21, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"dismissUndoMenu()", 17, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2u, 1928, (uint64_t)"Not showing undo menu", 21, 2u);
    v3 = dispatch thunk of Actor.unownedExecutor.getter(v0[3], &protocol witness table for MainActor);
    return swift_task_switch(sub_10053457C, v3, v4);
  }
}

uint64_t sub_100C282A4()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 64));
  return swift_task_switch(sub_100C282F0, *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

uint64_t sub_100C282F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 40));
  sub_10053C8E8();
  v1 = dispatch thunk of Actor.unownedExecutor.getter(*(_QWORD *)(v0 + 24), &protocol witness table for MainActor);
  return swift_task_switch(sub_10053457C, v1, v2);
}

id sub_100C283C0()
{
  char *v0;
  id result;
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  uint64_t v33;
  void *v34;
  id v35;
  id v36;
  void *v37;
  id v38;
  id v39;
  uint64_t v40;
  void *v41;
  id v42;
  id v43;
  void *v44;
  id v45;
  id v46;
  uint64_t v47;
  void *v48;
  id v49;
  id v50;
  void *v51;
  id v52;
  id v53;
  uint64_t v54;
  void *v55;

  result = objc_msgSend(v0, "view");
  if (!result)
  {
    __break(1u);
    goto LABEL_13;
  }
  v2 = result;
  v3 = sub_100C1D534();
  objc_msgSend(v2, "addLayoutGuide:", v3);

  v4 = sub_100C1D534();
  v5 = objc_msgSend(v4, "leadingAnchor");

  result = objc_msgSend(v0, "view");
  if (!result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v6 = result;
  v7 = objc_msgSend(result, "leadingAnchor");

  v8 = objc_msgSend(v5, "constraintEqualToAnchor:", v7);
  objc_msgSend(v8, "setActive:", 1);

  v9 = sub_100C1D534();
  v10 = objc_msgSend(v9, "trailingAnchor");

  result = objc_msgSend(v0, "view");
  if (!result)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v11 = result;
  v12 = objc_msgSend(result, "trailingAnchor");

  v13 = objc_msgSend(v10, "constraintEqualToAnchor:", v12);
  objc_msgSend(v13, "setActive:", 1);

  v14 = sub_100C1D534();
  v15 = objc_msgSend(v14, "bottomAnchor");

  result = objc_msgSend(v0, "view");
  if (!result)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v16 = result;
  v17 = objc_msgSend(result, "bottomAnchor");

  v18 = objc_msgSend(v15, "constraintEqualToAnchor:", v17);
  objc_msgSend(v18, "setActive:", 1);

  v19 = sub_100C1D534();
  v20 = objc_msgSend(v19, "topAnchor");

  result = objc_msgSend(v0, "view");
  if (!result)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v21 = result;
  v22 = objc_msgSend(result, "bottomAnchor");

  v23 = objc_msgSend(v20, "constraintEqualToAnchor:", v22);
  v24 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_keyboardTopEdgeLayoutGuideConstraint;
  v25 = *(void **)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_keyboardTopEdgeLayoutGuideConstraint];
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_keyboardTopEdgeLayoutGuideConstraint] = v23;

  objc_msgSend(*(id *)&v0[v24], "setActive:", 1);
  result = objc_msgSend(v0, "view");
  if (!result)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v26 = result;
  v27 = sub_100C1D528();
  objc_msgSend(v26, "addLayoutGuide:", v27);

  v28 = sub_100C1D528();
  v29 = objc_msgSend(v28, "leadingAnchor");

  result = objc_msgSend(v0, "view");
  if (!result)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v30 = result;
  v31 = objc_msgSend(result, "leadingAnchor");

  v32 = objc_msgSend(v29, "constraintEqualToAnchor:", v31);
  v33 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_leadingUnobscuredRectLayoutGuideConstraint;
  v34 = *(void **)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_leadingUnobscuredRectLayoutGuideConstraint];
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_leadingUnobscuredRectLayoutGuideConstraint] = v32;

  v35 = sub_100C1D528();
  v36 = objc_msgSend(v35, "trailingAnchor");

  result = objc_msgSend(v0, "view");
  if (!result)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v37 = result;
  v38 = objc_msgSend(result, "trailingAnchor");

  v39 = objc_msgSend(v36, "constraintEqualToAnchor:", v38);
  v40 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_trailingUnobscuredRectLayoutGuideConstraint;
  v41 = *(void **)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_trailingUnobscuredRectLayoutGuideConstraint];
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_trailingUnobscuredRectLayoutGuideConstraint] = v39;

  v42 = sub_100C1D528();
  v43 = objc_msgSend(v42, "topAnchor");

  result = objc_msgSend(v0, "view");
  if (!result)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v44 = result;
  v45 = objc_msgSend(result, "topAnchor");

  v46 = objc_msgSend(v43, "constraintEqualToAnchor:", v45);
  v47 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_topUnobscuredRectLayoutGuideConstraint;
  v48 = *(void **)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_topUnobscuredRectLayoutGuideConstraint];
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_topUnobscuredRectLayoutGuideConstraint] = v46;

  v49 = sub_100C1D528();
  v50 = objc_msgSend(v49, "bottomAnchor");

  result = objc_msgSend(v0, "view");
  if (result)
  {
    v51 = result;
    v52 = objc_msgSend(result, "bottomAnchor");

    v53 = objc_msgSend(v50, "constraintEqualToAnchor:", v52);
    v54 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_bottomUnobscuredRectLayoutGuideConstraint;
    v55 = *(void **)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_bottomUnobscuredRectLayoutGuideConstraint];
    *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_bottomUnobscuredRectLayoutGuideConstraint] = v53;

    objc_msgSend(*(id *)&v0[v33], "setActive:", 1);
    objc_msgSend(*(id *)&v0[v40], "setActive:", 1);
    objc_msgSend(*(id *)&v0[v47], "setActive:", 1);
    return objc_msgSend(*(id *)&v0[v54], "setActive:", 1);
  }
LABEL_21:
  __break(1u);
  return result;
}

void sub_100C28970()
{
  char *v0;
  id v1;
  void *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double top;
  double left;
  double bottom;
  double right;
  id v14;
  void *v15;
  unsigned int v16;
  double v17;
  id v18;
  double v19;
  double v20;
  double v21;
  id v22;
  id v23;
  id v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  id v30;
  void *v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  double v36;
  double v37;
  double v38;
  double v39;
  uint64_t v40;
  void *v41;
  double v42;
  double v43;
  double v44;
  double v45;
  void *v46;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  double v58;
  double v59;
  double v60;
  double v61;
  void *v62;
  double v63;
  double v64;
  double v65;
  double v66;
  id v67;
  void *v68;
  BOOL v69;
  double v70;
  double v71;
  double v72;
  double v73;
  void *v74;
  double v75;
  double v76;
  double v77;
  double v78;
  double v79;
  id v80;
  void *v81;
  double v82;
  double v83;
  double v84;
  double v85;
  double v86;
  double v87;
  CGFloat v88;
  double v89;
  CGFloat v90;
  double v91;
  CGFloat v92;
  double v93;
  CGFloat v94;
  id v95;
  void *v96;
  double v97;
  CGFloat v98;
  double v99;
  CGFloat v100;
  double v101;
  CGFloat v102;
  double v103;
  CGFloat v104;
  double MaxX;
  CGFloat v106;
  double v107;
  double MinX;
  id v109;
  void *v110;
  CGFloat v111;
  CGFloat v112;
  CGFloat v113;
  double v114;
  CGFloat v115;
  double v116;
  CGFloat v117;
  double v118;
  CGFloat v119;
  double v120;
  CGFloat v121;
  double v122;
  void *v123;
  void *v124;
  void *v125;
  id v126;
  void *v127;
  CGFloat v128;
  id v129;
  id v130;
  void *v131;
  double v132;
  CGFloat v133;
  double v134;
  CGFloat v135;
  double v136;
  CGFloat v137;
  double v138;
  CGFloat v139;
  double v140;
  double v141;
  double v142;
  double v143;
  double v144;
  double MaxY;
  double v146;
  double v147;
  double v148;
  CGFloat v149;
  double v150;
  id v151;
  CGRect v152;
  CGRect v153;
  CGRect v154;
  CGRect v155;
  CGRect v156;
  CGRect v157;
  CGRect v158;
  CGRect v159;
  CGRect v160;
  CGRect v161;
  CGRect v162;

  v1 = objc_msgSend(v0, "view");
  if (!v1)
  {
    __break(1u);
    goto LABEL_85;
  }
  v2 = v1;
  objc_msgSend(v1, "safeAreaInsets");
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v148 = v9;

  top = UIEdgeInsetsZero.top;
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v14 = objc_msgSend(v0, "presentedViewController");
  if (!v14
    || (v15 = v14, v16 = objc_msgSend(v14, "isBeingDismissed"), v15, v17 = bottom, v16))
  {
    v18 = objc_msgSend((id)objc_opt_self(CRLiOSKeyboardMonitor), "sharedKeyboardMonitor");
    objc_msgSend(v18, "onScreenHeight");
    v20 = v19;

    if (bottom >= v20)
      v17 = bottom;
    else
      v17 = v20;
  }
  v147 = v6;
  if (left <= 0.0)
    v6 = 0.0;
  if (right <= 0.0)
    v21 = 0.0;
  else
    v21 = v148;
  if (UIEdgeInsetsZero.top <= 0.0)
    v4 = 0.0;
  v150 = bottom;
  if (v17 > 0.0)
  {
    v150 = v17 - v8;
    v22 = objc_msgSend(v0, "traitCollection");
    v23 = objc_msgSend(v22, "horizontalSizeClass");

    if (v23 == (id)1 || objc_msgSend((id)objc_opt_self(UIDevice), "crl_phoneUI"))
    {
      v24 = objc_msgSend((id)objc_opt_self(CRLiOSKeyboardMonitor), "sharedKeyboardMonitor");
      objc_msgSend(v24, "keyboardFrame");
      v26 = v25;
      v142 = v28;
      v144 = v27;
      v141 = v29;

      v30 = objc_msgSend(v0, "view");
      if (v30)
      {
        v31 = v30;
        v32 = objc_msgSend(v30, "window");
        if (v32
          && (v33 = v32,
              v34 = objc_msgSend(v32, "screen"),
              v33,
              v35 = objc_msgSend(v34, "coordinateSpace"),
              v34,
              v35))
        {
          objc_msgSend(v31, "convertRect:fromCoordinateSpace:", v35, v26, v144, v142, v141);
          MaxY = CGRectGetMaxY(v152);
          objc_msgSend(v31, "bounds");
          v36 = CGRectGetMaxY(v153);
          swift_unknownObjectRelease(v35);

          v150 = v150 - (MaxY - v36);
        }
        else
        {

        }
      }
    }
  }
  v37 = left - v6;
  v38 = right - v21;
  v39 = UIEdgeInsetsZero.top - v4;
  v40 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasScrollViewController;
  v41 = *(void **)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasScrollViewController];
  if (v41)
  {
    objc_msgSend(v41, "additionalSafeAreaInsets");
    top = v42;
    left = v43;
    bottom = v44;
    right = v45;
  }
  v46 = *(void **)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scrollView];
  if (top != v39 || left != v37 || bottom != v150 || right != v38)
  {
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scrollView], "safeAreaInsets");
    v51 = v50;
    v53 = v52;
    v55 = v54;
    objc_msgSend(v46, "contentOffset");
    v57 = v56;
    v59 = v58;
    objc_msgSend(v46, "contentSize");
    v143 = v61;
    v146 = v60;
    v62 = *(void **)&v0[v40];
    if (v62)
      objc_msgSend(v62, "setAdditionalSafeAreaInsets:", v39, v37, v150, v38);
    objc_msgSend(v46, "safeAreaInsets", *(_QWORD *)&v141);
    v66 = v64;
    if (v51 != v63)
    {
      v69 = v63 < fabs(v59) && v59 < 0.0;
      v70 = -v63;
      if (v69)
        v59 = v70;
      goto LABEL_52;
    }
    if (v53 == v64)
    {
      if (v55 == v65)
        goto LABEL_59;
    }
    else if (v55 == v65)
    {
LABEL_52:
      if (v57 >= 0.0)
      {
        v73 = v143;
        v72 = v146;
      }
      else
      {
        v73 = v143;
        v72 = v146;
        if (v66 < fabs(v57) && sub_1003A9250())
          v57 = -v66;
      }
      objc_msgSend(v46, "setContentOffset:relativeToOriginalSize:", v57, v59, v72, v73);
      goto LABEL_59;
    }
    objc_msgSend(v46, "contentOffset");
    v59 = v71;
    goto LABEL_52;
  }
  v67 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scrollView], "delegate");
  if (v67)
  {
    v68 = v67;
    if ((objc_msgSend(v67, "respondsToSelector:", "scrollViewDidChangeAdjustedContentInset:") & 1) != 0)
      objc_msgSend(v68, "scrollViewDidChangeAdjustedContentInset:", v46);
    swift_unknownObjectRelease(v68);
  }
LABEL_59:
  v74 = *(void **)&v0[v40];
  v151 = v74;
  objc_msgSend(v46, "contentInset");
  v76 = v75;
  if (!v74)
  {
    v77 = 0.0;
    v85 = 0.0;
    v78 = 0.0;
LABEL_69:
    objc_msgSend(v46, "setContentInset:", v76, v85, v78, v77, *(_QWORD *)&v141);
    sub_100C4BBA4();
    v88 = v87;
    v90 = v89;
    v92 = v91;
    v94 = v93;
    if (sub_1003A91F4())
    {
      v95 = objc_msgSend(v0, "view");
      if (!v95)
      {
LABEL_86:
        __break(1u);
        goto LABEL_87;
      }
      v96 = v95;
      objc_msgSend(v95, "frame");
      v98 = v97;
      v100 = v99;
      v102 = v101;
      v104 = v103;

      v154.origin.x = v98;
      v154.origin.y = v100;
      v154.size.width = v102;
      v154.size.height = v104;
      MaxX = CGRectGetMaxX(v154);
      v106 = v88;
      v155.origin.x = v88;
      v155.origin.y = v90;
      v155.size.width = v92;
      v155.size.height = v94;
      v107 = MaxX - CGRectGetMaxX(v155);
      v156.origin.x = v106;
      v156.origin.y = v90;
      v156.size.width = v92;
      v156.size.height = v94;
      MinX = CGRectGetMinX(v156);
    }
    else
    {
      v157.origin.x = v88;
      v157.origin.y = v90;
      v157.size.width = v92;
      v157.size.height = v94;
      v149 = CGRectGetMinX(v157);
      v109 = objc_msgSend(v0, "view");
      if (!v109)
      {
LABEL_87:
        __break(1u);
        goto LABEL_88;
      }
      v110 = v109;
      v111 = v94;
      v112 = v92;
      v113 = v90;
      objc_msgSend(v109, "frame");
      v115 = v114;
      v117 = v116;
      v119 = v118;
      v121 = v120;

      v158.origin.x = v115;
      v158.origin.y = v117;
      v158.size.width = v119;
      v158.size.height = v121;
      v122 = CGRectGetMaxX(v158);
      v159.origin.x = v88;
      v159.origin.y = v113;
      v159.size.width = v112;
      v159.size.height = v111;
      MinX = v122 - CGRectGetMaxX(v159);
      v106 = v88;
      v90 = v113;
      v92 = v112;
      v94 = v111;
      v107 = v149;
    }
    v123 = *(void **)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_leadingUnobscuredRectLayoutGuideConstraint];
    if (v123)
      objc_msgSend(v123, "setConstant:", v107);
    v124 = *(void **)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_trailingUnobscuredRectLayoutGuideConstraint];
    if (v124)
      objc_msgSend(v124, "setConstant:", -MinX);
    v125 = *(void **)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_topUnobscuredRectLayoutGuideConstraint];
    if (v125)
    {
      v126 = v125;
      v160.origin.x = v106;
      v160.origin.y = v90;
      v160.size.width = v92;
      v160.size.height = v94;
      objc_msgSend(v126, "setConstant:", CGRectGetMinY(v160));

    }
    v127 = *(void **)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_bottomUnobscuredRectLayoutGuideConstraint];
    if (!v127)
      goto LABEL_83;
    v128 = v90;
    v129 = v127;
    v130 = objc_msgSend(v0, "view");
    if (v130)
    {
      v131 = v130;
      objc_msgSend(v130, "frame");
      v133 = v132;
      v135 = v134;
      v137 = v136;
      v139 = v138;

      v161.origin.x = v133;
      v161.origin.y = v135;
      v161.size.width = v137;
      v161.size.height = v139;
      v140 = CGRectGetMaxY(v161);
      v162.origin.x = v106;
      v162.origin.y = v128;
      v162.size.width = v92;
      v162.size.height = v94;
      objc_msgSend(v129, "setConstant:", -(v140 - CGRectGetMaxY(v162)));

LABEL_83:
      return;
    }
LABEL_85:
    __break(1u);
    goto LABEL_86;
  }
  objc_msgSend(v151, "additionalSafeAreaInsets");
  v77 = 0.0;
  v78 = 0.0;
  if (v79 != 0.0)
  {
LABEL_63:
    objc_msgSend(v151, "additionalSafeAreaInsets", *(_QWORD *)&v141);
    if (v84 == 0.0)
      v85 = -v147;
    else
      v85 = 0.0;
    objc_msgSend(v151, "additionalSafeAreaInsets");
    if (v86 == 0.0)
      v77 = -v148;
    goto LABEL_69;
  }
  v80 = objc_msgSend(v0, "view");
  if (v80)
  {
    v81 = v80;
    objc_msgSend(v80, "safeAreaInsets");
    v83 = v82;

    v78 = -v83;
    goto LABEL_63;
  }
LABEL_88:
  __break(1u);
}

uint64_t sub_100C2917C(uint64_t a1, uint64_t a2)
{
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  double v29;
  _BYTE *v30;
  id v31;
  char v32;
  uint64_t v33;
  int v34;
  char v35;
  char v36;
  void *v37;
  id v38;
  unint64_t v39;
  char v40;
  char v41;
  uint64_t v42;
  int v43;
  char v44;
  char v45;
  _BYTE *v46;
  int v47;
  uint64_t v48;
  void *v49;
  uint64_t KeyPath;
  uint64_t v51;
  id v52;
  id v53;
  id v54;
  Swift::String v55;
  Class isa;
  UIMenuElementSize v58;
  Swift::OpaquePointer v59;
  uint64_t v60;
  _BYTE *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD v65[3];
  ValueMetadata *v66;
  unint64_t v67;
  char v68[24];
  unsigned __int8 v69[40];
  UIImage_optional v70;

  v64 = a1;
  v3 = type metadata accessor for Notification(0, a2);
  v62 = *(_QWORD *)(v3 - 8);
  v63 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UUID(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100C2A090();
  v61 = v2;
  v15 = *(char **)(*(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  v16 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  v17 = *(_QWORD *)&v15[OBJC_IVAR____TtC8Freeform8CRLBoard_data];
  v18 = v17 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v17 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v68, 0, 0);
  sub_1004B8460(v18, (uint64_t)v8, type metadata accessor for CRLBoardCRDTData);
  v19 = v15;
  swift_retain(v17);
  v20 = sub_1004B804C(&qword_1013E1A80);
  CRRegister.wrappedValue.getter(v20);
  v21 = (uint64_t)v8;
  v22 = (uint64_t)v14;
  sub_1004B84A4(v21, type metadata accessor for CRLBoardCRDTData);
  swift_release(v17);
  v23 = (uint64_t *)(*(_QWORD *)&v15[v16] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  v24 = *v23;
  v25 = v23[1];
  swift_bridgeObjectRetain(v25);
  sub_10067AFD0((uint64_t)v11, v24, v25, (uint64_t)v14);

  (*(void (**)(char *, uint64_t, uint64_t))(v62 + 16))(v5, v64, v63);
  if (sub_100BC1960((uint64_t)v5))
  {
    v27 = v26;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v28 = sub_100622DD8((uint64_t)v14, v27);
    *(_QWORD *)&v29 = swift_bridgeObjectRelease().n128_u64[0];
    if ((v28 & 1) != 0)
    {
      v30 = v61;
      if ((v61[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_skipNextToolbarUpdate] & 1) != 0)
      {
        v61[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_skipNextToolbarUpdate] = 0;
      }
      else
      {
        v31 = objc_msgSend(v61, "traitCollection", v29);
        sub_1005221A4(v31, (int)objc_msgSend(*(id *)&v30[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController], "documentIsSharedReadOnly"), (uint64_t)v69);
        sub_100522548(v69, 0);
        sub_1004DB520((uint64_t)v69);

      }
      v32 = sub_100C2B92C();
      v33 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__isCanvasDotGridEnabled;
      v34 = v30[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__isCanvasDotGridEnabled];
      if (v34 == 2)
      {
        v35 = sub_100C2B92C();
        v30[v33] = v35 & 1;
      }
      else
      {
        v35 = v34 & 1;
      }
      if ((v32 & 1) != (v35 & 1))
      {
        v30[v33] = v32 & 1;
        objc_msgSend(*(id *)&v30[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController], "updateCanvasDotGridVisibilityIfNeeded");
        v66 = &type metadata for CRLFeatureFlags;
        v67 = sub_1004DB6DC();
        LOBYTE(v65[0]) = 7;
        v36 = isFeatureEnabled(_:)(v65);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v65);
        if ((v36 & 1) != 0)
        {
          v37 = *(void **)&v30[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardControlsViewController];
          if (v37)
          {
            v38 = v37;
            sub_100860780();

          }
        }
      }
      v66 = &type metadata for CRLFeatureFlags;
      v39 = sub_1004DB6DC();
      v67 = v39;
      LOBYTE(v65[0]) = 7;
      v40 = isFeatureEnabled(_:)(v65);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v65);
      if ((v40 & 1) != 0)
      {
        v41 = sub_100C2C364();
        v42 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__isConnectorModeEnabled;
        v43 = v30[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__isConnectorModeEnabled];
        if (v43 == 2)
        {
          v44 = sub_100C2C364();
          v30[v42] = v44 & 1;
        }
        else
        {
          v44 = v43 & 1;
        }
        if ((v41 & 1) != (v44 & 1))
        {
          v30[v42] = v41 & 1;
          sub_100C2C5F8();
        }
      }
      v66 = &type metadata for CRLFeatureFlags;
      v67 = v39;
      LOBYTE(v65[0]) = 16;
      v45 = isFeatureEnabled(_:)(v65);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v65);
      if ((v45 & 1) != 0)
      {
        v46 = v61;
        v47 = sub_100C2C808() & 1;
        v48 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesNavigatorState;
        v49 = *(void **)&v46[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesNavigatorState];
        KeyPath = swift_getKeyPath(asc_100F2F600);
        v51 = swift_getKeyPath(byte_100F2F628);
        v52 = v49;
        static Published.subscript.getter(v65, v52, KeyPath, v51);

        swift_release(KeyPath);
        swift_release(v51);
        if (v47 != LOBYTE(v65[0]))
        {
          v53 = *(id *)&v46[v48];
          sub_100711550(v47);

        }
        sub_100C20FBC();
        v54 = sub_100C1CDD8();
        sub_1004B8930(0, &qword_1013E1090, UIMenu_ptr);
        v58 = sub_10052C750();
        v55._countAndFlagsBits = 0;
        v55._object = (void *)0xE000000000000000;
        v70.value.super.isa = 0;
        v70.is_nil = 0;
        isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v55, (Swift::String_optional)0, v70, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v58, v59).super.super.isa;
        objc_msgSend(v54, "setMenu:", isa);

      }
    }
  }
  return sub_1004B84A4(v22, type metadata accessor for CRLBoardIdentifier);
}

uint64_t sub_100C29764()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[24] = v0;
  v2 = type metadata accessor for MainActor(0);
  v1[25] = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[26] = v3;
  v1[27] = v4;
  return swift_task_switch(sub_100C297D0, v3, v4);
}

uint64_t sub_100C297D0()
{
  _QWORD *v0;
  char v1;
  id v2;
  NSString v3;
  NSString v4;
  id v5;
  uint64_t v6;
  void *v7;
  id v8;
  NSString v9;
  NSString v10;
  id v11;
  void *v12;
  id v13;
  NSString v14;
  NSString v15;
  id v16;
  id v17;
  NSString v18;
  NSString v19;
  id v20;
  uint64_t v21;
  id v22;
  NSString v23;
  void *v24;
  id v25;
  _QWORD *v26;
  uint64_t v28;

  v1 = sub_100C29E9C();
  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v3 = String._bridgeToObjectiveC()();
  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend(v2, "localizedStringForKey:value:table:", v3, v4, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v28 = v6;

  v7 = (void *)objc_opt_self(UIDevice);
  if (!objc_msgSend(v7, "crl_iPadDevice"))
  {
    if ((v1 & 1) != 0)
      goto LABEL_3;
LABEL_5:
    objc_msgSend(v7, "crl_iPadDevice", v28);
    v8 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    goto LABEL_6;
  }
  if ((v1 & 1) == 0)
    goto LABEL_5;
LABEL_3:
  v8 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
LABEL_6:
  v9 = String._bridgeToObjectiveC()();
  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend(v8, "localizedStringForKey:value:table:", v9, v10, 0);
  v12 = (void *)v0[24];
  v13 = v11;

  static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v16 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v14, v15, 1);
  v0[28] = v16;

  v17 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v18 = String._bridgeToObjectiveC()();
  v19 = String._bridgeToObjectiveC()();
  v20 = objc_msgSend(v17, "localizedStringForKey:value:table:", v18, v19, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
  v21 = swift_allocObject(&unk_10129C680, 24, 7);
  *(_QWORD *)(v21 + 16) = v12;
  v22 = v12;
  v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v0[15] = sub_100C4F1B8;
  v0[16] = v21;
  v0[11] = _NSConcreteStackBlock;
  v0[12] = *(_QWORD *)"";
  v0[13] = sub_1004C6194;
  v0[14] = &unk_10129C698;
  v24 = _Block_copy(v0 + 11);
  swift_release(v0[16]);
  v25 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v23, 1, v24);
  v0[29] = v25;
  _Block_release(v24);

  objc_msgSend(v16, "addAction:", v25);
  v26 = (_QWORD *)swift_task_alloc(dword_10140053C);
  v0[30] = v26;
  *v26 = v0;
  v26[1] = sub_100C29C70;
  return sub_1009DAE24((uint64_t)v16, 1);
}

uint64_t sub_100C29C70()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 240);
  *(_QWORD *)(*v1 + 248) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_100C29D14;
  else
    v4 = sub_100C29CD0;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 208), *(_QWORD *)(v2 + 216));
}

uint64_t sub_100C29CD0()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v2 = *(void **)(v0 + 224);
  v1 = *(void **)(v0 + 232);
  swift_release(*(_QWORD *)(v0 + 200));
  sub_100CE39D8(v2);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100C29D14()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t inited;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;

  swift_release(*(_QWORD *)(v0 + 200));
  if (qword_1013DD6C8 != -1)
    swift_once(&qword_1013DD6C8, sub_100A00D28);
  v1 = *(_QWORD *)(v0 + 248);
  v2 = *(void **)(v0 + 224);
  v3 = *(void **)(v0 + 232);
  swift_beginAccess(&static OS_os_log.crlError, v0 + 136, 0, 0);
  v4 = (void *)static OS_os_log.crlError;
  v5 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v5, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  swift_getErrorValue(v1, v0 + 184, v0 + 160);
  v7 = *(_QWORD *)(v0 + 168);
  v8 = *(_QWORD *)(v0 + 176);
  v9 = v4;
  v10 = Error.localizedDescription.getter(v7, v8);
  v12 = v11;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v13 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v13;
  *(_QWORD *)(inited + 32) = v10;
  *(_QWORD *)(inited + 40) = v12;
  v14 = static os_log_type_t.error.getter(v13);
  sub_100A06EBC((uint64_t)v9, &_mh_execute_header, v14, "Caught error trying to present alert for handling unsupported board: %@", 71, 2, inited);

  swift_setDeallocating(inited);
  v15 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v15);

  swift_errorRelease(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100C29E9C()
{
  uint64_t v0;
  id v1;
  NSString v2;
  id v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD v17[2];
  _BYTE v18[40];
  __int128 v19;
  __int128 v20;

  v1 = objc_msgSend((id)objc_opt_self(CRLRemoteDefaults), "sharedDefaults");
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v1, "dictionaryForKey:", v2);

  if (v3)
  {
    v4 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v3, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  }
  else
  {
    v4 = sub_1008D5828((uint64_t)_swiftEmptyArrayStorage);
  }
  v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_CRLUnsupportedDevicesKey + 8);
  v17[0] = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_CRLUnsupportedDevicesKey);
  v17[1] = v5;
  swift_bridgeObjectRetain(v5);
  AnyHashable.init<A>(_:)(v17, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v4 + 16) && (v6 = sub_1008432BC((uint64_t)v18), (v7 & 1) != 0))
  {
    sub_1004CB6E8(*(_QWORD *)(v4 + 56) + 32 * v6, (uint64_t)&v19);
  }
  else
  {
    v19 = 0u;
    v20 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1004B89A4((uint64_t)v18);
  if (!*((_QWORD *)&v20 + 1))
  {
    sub_1004CB800((uint64_t)&v19, &qword_1013E0230);
    goto LABEL_12;
  }
  v8 = sub_1004B804C((uint64_t *)&unk_1013E4970);
  if ((swift_dynamicCast(v17, &v19, (char *)&type metadata for Any + 8, v8, 6) & 1) == 0)
  {
LABEL_12:
    v15 = 1;
    return v15 & 1;
  }
  v9 = (_QWORD *)v17[0];
  v10 = objc_msgSend((id)objc_opt_self(UIDevice), "crl_platformString");
  static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v12 = v11;
  v14 = v13;

  LOBYTE(v10) = sub_100C9DD14(v12, v14, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15 = v10 ^ 1;
  return v15 & 1;
}

void sub_100C2A090()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t Strong;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  uint64_t v30;
  int EnumCaseMultiPayload;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t);
  uint64_t v39;
  uint64_t *v40;
  char *v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47[24];

  v1 = v0;
  v2 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v2);
  v45 = (uint64_t)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  __chkstk_darwin(v46);
  v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UUID(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(char **)(*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  v16 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  v17 = *(_QWORD *)&v15[OBJC_IVAR____TtC8Freeform8CRLBoard_data];
  v18 = v17 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v17 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v47, 0, 0);
  sub_1004B8460(v18, (uint64_t)v8, type metadata accessor for CRLBoardCRDTData);
  v19 = v15;
  swift_retain(v17);
  v20 = sub_1004B804C(&qword_1013E1A80);
  CRRegister.wrappedValue.getter(v20);
  sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLBoardCRDTData);
  swift_release(v17);
  v21 = (uint64_t *)(*(_QWORD *)&v15[v16] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  v22 = *v21;
  v23 = v21[1];
  swift_bridgeObjectRetain(v23);
  sub_10067AFD0((uint64_t)v11, v22, v23, (uint64_t)v14);

  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardLibrary);
  if (Strong)
  {
    v25 = (void *)Strong;
    v26 = *(_QWORD *)(Strong + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_storeHierarchySnapshot);
    swift_bridgeObjectRetain(v26);

    __chkstk_darwin(v27);
    *(&v44 - 2) = (uint64_t)v14;
    sub_1007C2808(1, (uint64_t (*)(id))sub_1005A1C0C, (uint64_t)(&v44 - 4), v26);
    v29 = v28;
    swift_bridgeObjectRelease();
    if (v29)
    {
      v30 = (uint64_t)v29 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item;
      sub_1004B8460((uint64_t)v29 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item, (uint64_t)v5, type metadata accessor for CRLBoardLibraryViewModel.Item);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v5, v46);
      if (EnumCaseMultiPayload)
      {
        if (EnumCaseMultiPayload == 1)
        {
          v32 = v45;
          sub_1004B84E0((uint64_t)v5, v45, type metadata accessor for CRLBoardLibraryViewModel.Folder);
          sub_100BCAD68();
          v34 = v33;
          v36 = v35;
          v37 = v32;
          v38 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
        }
        else
        {
          v40 = (uint64_t *)&v5[*(int *)(sub_1004B804C((uint64_t *)&unk_1013EA630) + 48)];
          v34 = *v40;
          v36 = v40[1];
          v38 = type metadata accessor for CRLBoardIdentifier;
          v37 = (uint64_t)v5;
        }
        sub_1004B84A4(v37, v38);
      }
      else
      {
        v34 = sub_100BCE3AC();
        v36 = v39;
      }
      sub_100521EB8(v34, v36);
      swift_bridgeObjectRelease();
      v41 = (char *)sub_100B7FDBC();
      if (!v41)
      {
        sub_1004B84A4((uint64_t)v14, type metadata accessor for CRLBoardIdentifier);

        return;
      }
      v42 = v41;
      v43 = *(_QWORD *)&v41[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_navigationStack];
      swift_retain(v43);

      sub_10068F910(v30);
      swift_release(v43);
    }
  }
  sub_1004B84A4((uint64_t)v14, type metadata accessor for CRLBoardIdentifier);
}

double sub_100C2A460(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  unint64_t v28;
  uint64_t v29;
  double result;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD v37[3];
  char v38[24];

  v5 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v5);
  v7 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v8);
  v10 = (char *)v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(char **)(*(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  v12 = *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v12, v38, 0, 0);
  sub_1004B8460(v12, (uint64_t)v10, type metadata accessor for CRLBoardCRDTData);
  v13 = v11;
  v14 = sub_1004B804C(&qword_1013E1980);
  CRRegister.wrappedValue.getter(v14);
  v16 = v37[1];
  v15 = v37[2];
  sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLBoardCRDTData);

  v17 = String.count.getter(a1, a2);
  swift_bridgeObjectRetain(a2);
  v18 = a1;
  v19 = a2;
  if (v17 >= 256)
  {
    v20 = sub_100C48F54(255, a1, a2);
    v22 = v21;
    v24 = v23;
    v26 = v25;
    v27 = swift_bridgeObjectRelease(a2);
    v18 = static String._fromSubstring(_:)(v20, v22, v24, v26, v27);
    v19 = v28;
    swift_bridgeObjectRelease(v26);
  }
  v29 = HIBYTE(v19) & 0xF;
  if ((v19 & 0x2000000000000000) == 0)
    v29 = v18 & 0xFFFFFFFFFFFFLL;
  if (!v29)
    goto LABEL_10;
  if (v18 == v16 && v19 == v15)
  {
    swift_bridgeObjectRelease_n(v15, 2);
    return result;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(v18, v19, v16, v15, 0) & 1) == 0)
  {
    v31 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v7, 1, 1, v31);
    v32 = swift_allocObject(&unk_10129BBE0, 24, 7);
    swift_unknownObjectWeakInit(v32 + 16);
    type metadata accessor for MainActor(0);
    swift_bridgeObjectRetain(a2);
    swift_retain(v32);
    v34 = static MainActor.shared.getter(v33);
    v35 = (_QWORD *)swift_allocObject(&unk_10129C658, 88, 7);
    v35[2] = v34;
    v35[3] = &protocol witness table for MainActor;
    v35[4] = v32;
    v35[5] = v18;
    v35[6] = v19;
    v35[7] = v16;
    v35[8] = v15;
    v35[9] = a1;
    v35[10] = a2;
    swift_release(v32);
    v36 = sub_100521B98((uint64_t)v7, (uint64_t)&unk_10140B8E0, (uint64_t)v35);
    *(_QWORD *)&result = swift_release(v36).n128_u64[0];
  }
  else
  {
LABEL_10:
    swift_bridgeObjectRelease(v19);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v15).n128_u64[0];
  }
  return result;
}

uint64_t sub_100C2A754(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v8[37] = v16;
  v8[38] = v17;
  v8[35] = a7;
  v8[36] = a8;
  v8[33] = a5;
  v8[34] = a6;
  v8[32] = a4;
  v9 = type metadata accessor for CRLBoardCRDTData(0);
  v8[39] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for UUID(0);
  v8[40] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for CRLBoardIdentifier(0);
  v8[41] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MainActor(0);
  v8[42] = static MainActor.shared.getter(v12);
  v13 = dispatch thunk of Actor.unownedExecutor.getter(v12, &protocol witness table for MainActor);
  v8[43] = v13;
  v8[44] = v14;
  return swift_task_switch(sub_100C2A834, v13, v14);
}

void sub_100C2A834()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  unint64_t v15;
  objc_class *v16;
  char *v17;
  char *v18;
  char *v19;
  double v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  void *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = *(_QWORD *)(v0 + 256) + 16;
  swift_beginAccess(v1, v0 + 128, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  *(_QWORD *)(v0 + 360) = Strong;
  if (Strong)
  {
    v4 = *(_QWORD *)(v0 + 320);
    v3 = *(_QWORD *)(v0 + 328);
    v5 = *(_QWORD *)(v0 + 312);
    v6 = *(_QWORD *)(v0 + 272);
    v29 = *(_QWORD *)(v0 + 264);
    v7 = *(char **)(*(_QWORD *)(Strong + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                  + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
    v8 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
    v9 = *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform8CRLBoard_data];
    v10 = v9 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess(v9 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v0 + 152, 0, 0);
    sub_1004B8460(v10, v5, type metadata accessor for CRLBoardCRDTData);
    v11 = v7;
    swift_retain(v9);
    v12 = sub_1004B804C(&qword_1013E1A80);
    CRRegister.wrappedValue.getter(v12);
    sub_1004B84A4(v5, type metadata accessor for CRLBoardCRDTData);
    swift_release(v9);
    v13 = (uint64_t *)(*(_QWORD *)&v7[v8] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
    v14 = *v13;
    v15 = v13[1];
    swift_bridgeObjectRetain(v15);
    sub_10067AFD0(v4, v14, v15, v3);

    v16 = (objc_class *)type metadata accessor for CRLSetBoardTitleCommand(0);
    v17 = (char *)objc_allocWithZone(v16);
    v18 = &v17[OBJC_IVAR____TtC8Freeform23CRLSetBoardTitleCommand_previousBoardTitle];
    *(_QWORD *)v18 = 0;
    *((_QWORD *)v18 + 1) = 0;
    sub_1004B8460(v3, (uint64_t)&v17[OBJC_IVAR____TtC8Freeform23CRLSetBoardTitleCommand_boardIdentifier], type metadata accessor for CRLBoardIdentifier);
    v19 = &v17[OBJC_IVAR____TtC8Freeform23CRLSetBoardTitleCommand_boardTitle];
    *(_QWORD *)v19 = v29;
    *((_QWORD *)v19 + 1) = v6;
    *(_QWORD *)(v0 + 224) = v17;
    *(_QWORD *)(v0 + 232) = v16;
    *(_QWORD *)&v20 = swift_bridgeObjectRetain(v6).n128_u64[0];
    v21 = objc_msgSendSuper2((objc_super *)(v0 + 224), "init", v20);
    *(_QWORD *)(v0 + 368) = v21;
    sub_1004B84A4(v3, type metadata accessor for CRLBoardIdentifier);
    v22 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    v23 = objc_msgSend(v22, "delegate");

    if (v23)
    {
      v24 = type metadata accessor for CRLiOSAppDelegate();
      v25 = *(void **)(swift_dynamicCastClassUnconditional(v23, v24, 0, 0, 0)
                     + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardLibraryCommandController);
      *(_QWORD *)(v0 + 376) = v25;
      if (v25)
      {
        v25;
        swift_unknownObjectRelease(v23);
        v26 = (_QWORD *)swift_task_alloc(dword_101408D7C);
        *(_QWORD *)(v0 + 384) = v26;
        *v26 = v0;
        v26[1] = sub_100C2ABBC;
        sub_100BE770C((uint64_t)v21);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    sub_100757E04(&_mh_execute_header, (uint64_t)"boardLibraryCommandController", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 240, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"boardLibraryCommandController", 29, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2u, 240, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    swift_unknownObjectRelease(v23);
    __break(1u);
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 336));
    v27 = *(_QWORD *)(v0 + 320);
    v28 = *(_QWORD *)(v0 + 312);
    swift_task_dealloc(*(_QWORD *)(v0 + 328));
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    (*(void (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100C2ABBC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 384);
  *(_QWORD *)(*v1 + 392) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 344);
    v5 = *(_QWORD *)(v2 + 352);
    v6 = sub_100C2AD80;
  }
  else
  {

    v4 = *(_QWORD *)(v2 + 344);
    v5 = *(_QWORD *)(v2 + 352);
    v6 = sub_100C2AC28;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_100C2AC28()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 400) = objc_msgSend(*(id *)(v0 + 360), "navigationItem");
  v1 = (_QWORD *)swift_task_alloc(dword_1013E1AA4);
  *(_QWORD *)(v0 + 408) = v1;
  *v1 = v0;
  v1[1] = sub_100C2AC8C;
  return sub_1005244DC();
}

uint64_t sub_100C2AC8C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 408);
  *(_QWORD *)(*v1 + 416) = a1;
  swift_task_dealloc(v3);
  return swift_task_switch(sub_100C2ACE4, *(_QWORD *)(v2 + 344), *(_QWORD *)(v2 + 352));
}

uint64_t sub_100C2ACE4()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(void **)(v0 + 416);
  v2 = *(void **)(v0 + 400);
  v3 = *(void **)(v0 + 360);
  v4 = *(void **)(v0 + 368);
  v6 = *(_QWORD *)(v0 + 264);
  v5 = *(_QWORD *)(v0 + 272);
  objc_msgSend(v2, "setDocumentProperties:", v1, swift_release(*(_QWORD *)(v0 + 336)).n128_f64[0]);

  sub_100521EB8(v6, v5);
  v7 = *(_QWORD *)(v0 + 320);
  v8 = *(_QWORD *)(v0 + 312);
  swift_task_dealloc(*(_QWORD *)(v0 + 328));
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100C2AD80()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  NSString v15;
  NSString v16;
  id v17;
  id v18;
  NSString v19;
  NSString v20;
  id v21;
  NSString v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t inited;
  unint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v39;

  v1 = *(_QWORD *)(v0 + 392);
  v3 = *(void **)(v0 + 368);
  v2 = *(void **)(v0 + 376);
  v5 = *(_QWORD *)(v0 + 280);
  v4 = *(_QWORD *)(v0 + 288);
  swift_release(*(_QWORD *)(v0 + 336));

  sub_100521EB8(v5, v4);
  *(_QWORD *)(v0 + 240) = v1;
  swift_errorRetain(v1);
  v6 = sub_1004B804C(&qword_1013E0210);
  if ((swift_dynamicCast(v0 + 200, v0 + 240, v6, &type metadata for CRLBoardTitleValidator.Error, 6) & 1) != 0)
  {
    v7 = *(_QWORD *)(v0 + 200);
    v8 = *(_QWORD *)(v0 + 208);
    v9 = *(_BYTE *)(v0 + 216);
    sub_100631F20(v7, v8, v9);
    if (v10)
    {
      sub_100632090(v7, v8, v9);
      v12 = v11;
      sub_1005E579C(v7, v8, v9);
      if (v12)
      {
        v13 = *(_QWORD *)(v0 + 392);
        v14 = *(void **)(v0 + 360);
        v15 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        v16 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        v17 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v15, v16, 1);

        v18 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v19 = String._bridgeToObjectiveC()();
        v20 = String._bridgeToObjectiveC()();
        v21 = objc_msgSend(v18, "localizedStringForKey:value:table:", v19, v20, 0);

        static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
        v22 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        v23 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v22, 0, 0);

        objc_msgSend(v17, "addAction:", v23);
        objc_msgSend(v14, "presentViewController:animated:completion:", v17, 1, 0);

        swift_errorRelease(v13);
        goto LABEL_10;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1005E579C(v7, v8, v9);
    }
  }
  if (qword_1013DD6B8 != -1)
    swift_once(&qword_1013DD6B8, sub_100A00A6C);
  v24 = *(_QWORD *)(v0 + 392);
  v39 = *(void **)(v0 + 360);
  v26 = *(_QWORD *)(v0 + 296);
  v25 = *(_QWORD *)(v0 + 304);
  swift_beginAccess(&static OS_os_log.crlDefault, v0 + 176, 0, 0);
  v27 = (void *)static OS_os_log.crlDefault;
  v28 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v28, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v30 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v30;
  *(_QWORD *)(inited + 32) = v26;
  *(_QWORD *)(inited + 40) = v25;
  *(_QWORD *)(v0 + 248) = v24;
  swift_errorRetain(v24);
  v31 = v27;
  swift_bridgeObjectRetain(v25);
  v32 = String.init<A>(describing:)(v0 + 248, v6);
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v30;
  *(_QWORD *)(inited + 72) = v32;
  *(_QWORD *)(inited + 80) = v33;
  v34 = static os_log_type_t.error.getter(v32);
  sub_100A06EBC((uint64_t)v31, &_mh_execute_header, v34, "Error renaming item (%@): %@", 28, 2, inited);
  swift_setDeallocating(inited);
  v35 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 2, v35);

  swift_errorRelease(v24);
LABEL_10:
  v36 = *(_QWORD *)(v0 + 320);
  v37 = *(_QWORD *)(v0 + 312);
  swift_task_dealloc(*(_QWORD *)(v0 + 328));
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100C2B1E8(char a1)
{
  _BYTE *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t Strong;
  void *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  char *v12;
  uint64_t v13;
  char v14;
  void *v15;
  id v16;
  _QWORD v18[5];

  v3 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v3);
  v5 = (char *)&v18[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardLibrary]);
  if (Strong)
  {
    v7 = (void *)Strong;
    v8 = a1 & 1;
    v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__isCanvasDotGridEnabled] = a1 & 1;
    v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_skipNextToolbarUpdate] = 1;
    v9 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v5, 1, 1, v9);
    v10 = swift_allocObject(&unk_10129C630, 49, 7);
    *(_QWORD *)(v10 + 16) = 0;
    *(_QWORD *)(v10 + 24) = 0;
    *(_QWORD *)(v10 + 32) = v7;
    *(_QWORD *)(v10 + 40) = v1;
    *(_BYTE *)(v10 + 48) = v8;
    v11 = v7;
    v12 = v1;
    v13 = sub_1009880C4((uint64_t)v5, (uint64_t)&unk_10140B8D0, v10);
    swift_release(v13);
    sub_1004CB800((uint64_t)v5, &qword_1013E01F0);
    objc_msgSend(*(id *)&v12[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController], "updateCanvasDotGridVisibilityIfNeeded");
    v18[3] = &type metadata for CRLFeatureFlags;
    v18[4] = sub_1004DB6DC();
    LOBYTE(v18[0]) = 7;
    v14 = isFeatureEnabled(_:)(v18);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v18);
    if ((v14 & 1) != 0)
    {
      v15 = *(void **)&v12[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardControlsViewController];
      if (v15)
      {
        v16 = v15;
        sub_100860780();

        v11 = v16;
      }
    }

  }
}

uint64_t sub_100C2B380(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_BYTE *)(v6 + 196) = a6;
  *(_QWORD *)(v6 + 80) = a4;
  *(_QWORD *)(v6 + 88) = a5;
  v7 = type metadata accessor for CRLBoardCRDTData(0);
  *(_QWORD *)(v6 + 96) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UUID(0);
  *(_QWORD *)(v6 + 104) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CRLBoardIdentifier(0);
  *(_QWORD *)(v6 + 112) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100C2B41C, 0, 0);
}

uint64_t sub_100C2B41C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = sub_1004B804C(&qword_1013EF520);
  v2 = type metadata accessor for CRLBoardIdentifierAndValue(0);
  *(_QWORD *)(v0 + 120) = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  LODWORD(v3) = *(_DWORD *)(v3 + 80);
  *(_DWORD *)(v0 + 192) = v3;
  v5 = swift_allocObject(v1, ((v3 + 32) & ~(unint64_t)v3) + v4, v3 | 7);
  *(_QWORD *)(v0 + 128) = v5;
  *(_OWORD *)(v5 + 16) = xmmword_100EF5E40;
  v6 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 136) = v6;
  *(_QWORD *)(v0 + 144) = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_100C2B4E0, v7, v8);
}

uint64_t sub_100C2B4E0()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  id v3;

  v1 = v0[11];
  swift_release(v0[18]);
  v2 = *(void **)(*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  v0[19] = v2;
  v3 = v2;
  return swift_task_switch(sub_100C2B544, 0, 0);
}

uint64_t sub_100C2B544()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  char v21;
  uint64_t v22;

  v1 = *(char **)(v0 + 152);
  v20 = *(_QWORD *)(v0 + 128);
  v22 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 96);
  v21 = *(_BYTE *)(v0 + 196);
  v5 = v20 + ((*(unsigned __int8 *)(v0 + 192) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 192));
  v6 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  v7 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform8CRLBoard_data];
  v8 = v7 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v7 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v0 + 56, 0, 0);
  sub_1004B8460(v8, v4, type metadata accessor for CRLBoardCRDTData);
  swift_retain(v7);
  v9 = sub_1004B804C(&qword_1013E1A80);
  CRRegister.wrappedValue.getter(v9);
  sub_1004B84A4(v4, type metadata accessor for CRLBoardCRDTData);
  swift_release(v7);
  v10 = (uint64_t *)(*(_QWORD *)&v1[v6] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  v11 = *v10;
  v12 = v10[1];
  swift_bridgeObjectRetain(v12);
  sub_10067AFD0(v3, v11, v12, v2);

  sub_1004B84E0(v2, v5, type metadata accessor for CRLBoardIdentifier);
  *(_BYTE *)(v5 + *(int *)(v22 + 20)) = v21;
  v13 = *(_QWORD *)(v20 + 16);
  if (v13)
    v14 = sub_1004B808C(*(_QWORD *)(v0 + 128));
  else
    v14 = &_swiftEmptySetSingleton;
  *(_QWORD *)(v0 + 160) = v14;
  v16 = *(_QWORD *)(v0 + 120);
  v15 = *(_QWORD *)(v0 + 128);
  v17 = v15 + ((*(unsigned __int8 *)(v0 + 192) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 192));
  swift_setDeallocating(v15);
  swift_arrayDestroy(v17, v13, v16);
  swift_deallocClassInstance(v15, 32, 7);
  v18 = (_QWORD *)swift_task_alloc(dword_10140E164);
  *(_QWORD *)(v0 + 168) = v18;
  *v18 = v0;
  v18[1] = sub_100C2B71C;
  return sub_100CA6CEC((uint64_t)v14);
}

uint64_t sub_100C2B71C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(*v1 + 168);
  v3 = *v1;
  *(_QWORD *)(v3 + 176) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_100C2B7AC, 0, 0);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(v3 + 104);
  v6 = *(_QWORD *)(v3 + 96);
  swift_task_dealloc(*(_QWORD *)(v3 + 112));
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_100C2B7AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 136);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 184) = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_100C2B814, v3, v4);
}

uint64_t sub_100C2B814()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  double v3;
  unint64_t v4;
  void *v5;
  id v6;

  v1 = *(_BYTE *)(v0 + 196);
  v2 = *(_QWORD *)(v0 + 88);
  *(_QWORD *)&v3 = swift_release(*(_QWORD *)(v0 + 184)).n128_u64[0];
  *(_BYTE *)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__isCanvasDotGridEnabled) = (v1 & 1) == 0;
  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController), "updateCanvasDotGridVisibilityIfNeeded", v3);
  *(_QWORD *)(v0 + 40) = &type metadata for CRLFeatureFlags;
  v4 = sub_1004DB6DC();
  *(_BYTE *)(v0 + 16) = 7;
  *(_QWORD *)(v0 + 48) = v4;
  LOBYTE(v2) = isFeatureEnabled(_:)(v0 + 16);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 16));
  if ((v2 & 1) != 0)
  {
    v5 = *(void **)(*(_QWORD *)(v0 + 88)
                  + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardControlsViewController);
    if (v5)
    {
      v6 = v5;
      sub_100860780();

    }
  }
  return swift_task_switch(sub_100C2B8E0, 0, 0);
}

uint64_t sub_100C2B8E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_errorRelease(*(_QWORD *)(v0 + 176));
  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 96);
  swift_task_dealloc(*(_QWORD *)(v0 + 112));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100C2B92C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t Strong;
  void *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  char v28[24];

  v1 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UUID(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CRLBoardViewModelMetadata(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardLibrary);
  if (!Strong)
    return 0;
  v14 = (void *)Strong;
  v27 = v10;
  v15 = *(char **)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  v16 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  v17 = *(_QWORD *)&v15[OBJC_IVAR____TtC8Freeform8CRLBoard_data];
  v18 = v17 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v17 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v28, 0, 0);
  sub_1004B8460(v18, (uint64_t)v3, type metadata accessor for CRLBoardCRDTData);
  v19 = v15;
  swift_retain(v17);
  v20 = sub_1004B804C(&qword_1013E1A80);
  CRRegister.wrappedValue.getter(v20);
  sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLBoardCRDTData);
  swift_release(v17);
  v21 = (uint64_t *)(*(_QWORD *)&v15[v16] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  v22 = *v21;
  v23 = v21[1];
  swift_bridgeObjectRetain(v23);
  sub_10067AFD0((uint64_t)v6, v22, v23, (uint64_t)v9);

  sub_100C9F8F8((uint64_t)v9, (uint64_t)v12);
  sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLBoardIdentifier);

  v24 = v12[*(int *)(v27 + 52)];
  sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLBoardViewModelMetadata);
  return v24;
}

uint64_t sub_100C2BBBC(unsigned __int8 *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v4;
  int v5;
  unsigned __int8 *v8;
  char v9;

  v4 = *a3;
  v5 = a1[*a3];
  if (v5 == 2)
  {
    v8 = a1;
    v9 = a4();
    a1[v4] = v9 & 1;

  }
  else
  {
    v9 = v5 & 1;
  }
  return v9 & 1;
}

void sub_100C2BC68(char a1)
{
  _BYTE *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t Strong;
  void *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  char *v12;
  uint64_t v13;
  id v14;
  unsigned __int8 v15;
  id v16;
  id v17;
  uint64_t v18;

  v3 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v3);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardLibrary]);
  if (Strong)
  {
    v7 = (void *)Strong;
    v8 = a1 & 1;
    v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__isConnectorModeEnabled] = a1 & 1;
    v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_skipNextToolbarUpdate] = 1;
    v9 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v5, 1, 1, v9);
    v10 = swift_allocObject(&unk_10129C608, 49, 7);
    *(_QWORD *)(v10 + 16) = 0;
    *(_QWORD *)(v10 + 24) = 0;
    *(_QWORD *)(v10 + 32) = v7;
    *(_QWORD *)(v10 + 40) = v1;
    *(_BYTE *)(v10 + 48) = v8;
    v11 = v7;
    v12 = v1;
    v13 = sub_1009880C4((uint64_t)v5, (uint64_t)&unk_10140B8B8, v10);
    swift_release(v13);
    sub_1004CB800((uint64_t)v5, &qword_1013E01F0);
    v14 = objc_msgSend(v12, "traitCollection");
    if (objc_msgSend(v14, "horizontalSizeClass") == (id)1)
    {

    }
    else
    {
      v15 = objc_msgSend((id)objc_opt_self(UIDevice), "crl_phoneUI");

      if ((v15 & 1) == 0)
      {
        v16 = objc_msgSend(*(id *)&v12[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasViewController], "miniFormatterPresenter");
        if (v16)
        {
          v17 = v16;
          objc_msgSend(v16, "dismissMiniFormatter");
          swift_unknownObjectRelease(v17);
        }
      }
    }
    sub_100C2C5F8();

  }
}

uint64_t sub_100C2BE28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_BYTE *)(v6 + 156) = a6;
  *(_QWORD *)(v6 + 40) = a4;
  *(_QWORD *)(v6 + 48) = a5;
  v7 = type metadata accessor for CRLBoardCRDTData(0);
  *(_QWORD *)(v6 + 56) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UUID(0);
  *(_QWORD *)(v6 + 64) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CRLBoardIdentifier(0);
  *(_QWORD *)(v6 + 72) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100C2BEC4, 0, 0);
}

uint64_t sub_100C2BEC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = sub_1004B804C(&qword_1013EF520);
  v2 = type metadata accessor for CRLBoardIdentifierAndValue(0);
  *(_QWORD *)(v0 + 80) = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  LODWORD(v3) = *(_DWORD *)(v3 + 80);
  *(_DWORD *)(v0 + 152) = v3;
  v5 = swift_allocObject(v1, ((v3 + 32) & ~(unint64_t)v3) + v4, v3 | 7);
  *(_QWORD *)(v0 + 88) = v5;
  *(_OWORD *)(v5 + 16) = xmmword_100EF5E40;
  v6 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 96) = v6;
  *(_QWORD *)(v0 + 104) = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_100C2BF88, v7, v8);
}

uint64_t sub_100C2BF88()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  id v3;

  v1 = v0[6];
  swift_release(v0[13]);
  v2 = *(void **)(*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  v0[14] = v2;
  v3 = v2;
  return swift_task_switch(sub_100C2BFEC, 0, 0);
}

uint64_t sub_100C2BFEC()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  char v21;
  uint64_t v22;

  v1 = *(char **)(v0 + 112);
  v20 = *(_QWORD *)(v0 + 88);
  v22 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 56);
  v21 = *(_BYTE *)(v0 + 156);
  v5 = v20 + ((*(unsigned __int8 *)(v0 + 152) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 152));
  v6 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  v7 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform8CRLBoard_data];
  v8 = v7 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v7 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v0 + 16, 0, 0);
  sub_1004B8460(v8, v4, type metadata accessor for CRLBoardCRDTData);
  swift_retain(v7);
  v9 = sub_1004B804C(&qword_1013E1A80);
  CRRegister.wrappedValue.getter(v9);
  sub_1004B84A4(v4, type metadata accessor for CRLBoardCRDTData);
  swift_release(v7);
  v10 = (uint64_t *)(*(_QWORD *)&v1[v6] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  v11 = *v10;
  v12 = v10[1];
  swift_bridgeObjectRetain(v12);
  sub_10067AFD0(v3, v11, v12, v2);

  sub_1004B84E0(v2, v5, type metadata accessor for CRLBoardIdentifier);
  *(_BYTE *)(v5 + *(int *)(v22 + 20)) = v21;
  v13 = *(_QWORD *)(v20 + 16);
  if (v13)
    v14 = sub_1004B808C(*(_QWORD *)(v0 + 88));
  else
    v14 = &_swiftEmptySetSingleton;
  *(_QWORD *)(v0 + 120) = v14;
  v16 = *(_QWORD *)(v0 + 80);
  v15 = *(_QWORD *)(v0 + 88);
  v17 = v15 + ((*(unsigned __int8 *)(v0 + 152) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 152));
  swift_setDeallocating(v15);
  swift_arrayDestroy(v17, v13, v16);
  swift_deallocClassInstance(v15, 32, 7);
  v18 = (_QWORD *)swift_task_alloc(dword_10140E15C);
  *(_QWORD *)(v0 + 128) = v18;
  *v18 = v0;
  v18[1] = sub_100C2C1C4;
  return sub_100CA6ED8((uint64_t)v14);
}

uint64_t sub_100C2C1C4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(*v1 + 128);
  v3 = *v1;
  *(_QWORD *)(v3 + 136) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_100C2C254, 0, 0);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(_QWORD *)(v3 + 56);
  swift_task_dealloc(*(_QWORD *)(v3 + 72));
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_100C2C254()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 96);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 144) = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_100C2C2BC, v3, v4);
}

uint64_t sub_100C2C2BC()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  v1 = *(_BYTE *)(v0 + 156);
  v2 = *(_QWORD *)(v0 + 48);
  swift_release(*(_QWORD *)(v0 + 144));
  *(_BYTE *)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__isConnectorModeEnabled) = (v1 & 1) == 0;
  sub_100C2C5F8();
  return swift_task_switch(sub_100C2C318, 0, 0);
}

uint64_t sub_100C2C318()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_errorRelease(*(_QWORD *)(v0 + 136));
  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 72));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100C2C364()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t Strong;
  void *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  char v28[24];

  v1 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UUID(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CRLBoardViewModelMetadata(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardLibrary);
  if (!Strong)
    return 0;
  v14 = (void *)Strong;
  v27 = v10;
  v15 = *(char **)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  v16 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  v17 = *(_QWORD *)&v15[OBJC_IVAR____TtC8Freeform8CRLBoard_data];
  v18 = v17 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v17 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v28, 0, 0);
  sub_1004B8460(v18, (uint64_t)v3, type metadata accessor for CRLBoardCRDTData);
  v19 = v15;
  swift_retain(v17);
  v20 = sub_1004B804C(&qword_1013E1A80);
  CRRegister.wrappedValue.getter(v20);
  sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLBoardCRDTData);
  swift_release(v17);
  v21 = (uint64_t *)(*(_QWORD *)&v15[v16] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  v22 = *v21;
  v23 = v21[1];
  swift_bridgeObjectRetain(v23);
  sub_10067AFD0((uint64_t)v6, v22, v23, (uint64_t)v9);

  sub_100C9F8F8((uint64_t)v9, (uint64_t)v12);
  sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLBoardIdentifier);

  v24 = v12[*(int *)(v27 + 56)];
  sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLBoardViewModelMetadata);
  return v24;
}

void sub_100C2C5F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  char v4;
  char v5;
  uint64_t v6;
  void *v7;
  uint64_t KeyPath;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;
  uint64_t v29;

  v1 = v0;
  v2 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__isConnectorModeEnabled;
  v3 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__isConnectorModeEnabled);
  if (v3 == 2)
  {
    v4 = sub_100C2C364();
    v5 = v4 & 1;
    *(_BYTE *)(v0 + v2) = v4 & 1;
  }
  else
  {
    v5 = v3 & 1;
    v4 = v3 & 1;
  }
  v6 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_connectorModeMessageViewState;
  v7 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_connectorModeMessageViewState);
  KeyPath = swift_getKeyPath(&unk_100F2F4C0);
  v9 = swift_getKeyPath(&unk_100F2F4E8);
  v10 = v7;
  static Published.subscript.getter(&v29, v10, KeyPath, v9);

  swift_release(KeyPath);
  swift_release(v9);
  LODWORD(v9) = v29;
  v11 = *(void **)(v0 + v6);
  v12 = swift_getKeyPath(&unk_100F2F4C0);
  v13 = swift_getKeyPath(&unk_100F2F4E8);
  v28 = v5;
  static Published.subscript.setter(&v28, v11, v12, v13);
  if ((v4 & 1) != (_DWORD)v9)
  {
    if ((v4 & 1) == 0)
    {
      v14 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController);
      v15 = *(id *)(v1 + v6);
      v16 = objc_msgSend(v14, "anyConnectorKnobVisible") ^ 1;
      v17 = swift_getKeyPath(&unk_100F2F5B8);
      v18 = swift_getKeyPath(&unk_100F2F5E0);
      v27 = v16;
      static Published.subscript.setter(&v27, v15, v17, v18);
    }
    v19 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController);
    objc_msgSend(v19, "updateConnectorKnobVisibilityIfNeeded");
    v20 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardControlsViewController);
    if (v20)
    {
      v21 = v20;
      sub_100860AC8();

    }
    if ((v4 & 1) != 0)
    {
      v22 = *(id *)(v1 + v6);
      v23 = objc_msgSend(v19, "anyConnectorKnobVisible") ^ 1;
      v24 = swift_getKeyPath(&unk_100F2F5B8);
      v25 = swift_getKeyPath(&unk_100F2F5E0);
      v26 = v23;
      static Published.subscript.setter(&v26, v22, v24, v25);
    }
  }
}

uint64_t sub_100C2C808()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t Strong;
  void *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  char v28[24];

  v1 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UUID(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CRLBoardViewModelMetadata(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardLibrary);
  if (!Strong)
    return 0;
  v14 = (void *)Strong;
  v27 = v10;
  v15 = *(char **)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  v16 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  v17 = *(_QWORD *)&v15[OBJC_IVAR____TtC8Freeform8CRLBoard_data];
  v18 = v17 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v17 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v28, 0, 0);
  sub_1004B8460(v18, (uint64_t)v3, type metadata accessor for CRLBoardCRDTData);
  v19 = v15;
  swift_retain(v17);
  v20 = sub_1004B804C(&qword_1013E1A80);
  CRRegister.wrappedValue.getter(v20);
  sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLBoardCRDTData);
  swift_release(v17);
  v21 = (uint64_t *)(*(_QWORD *)&v15[v16] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  v22 = *v21;
  v23 = v21[1];
  swift_bridgeObjectRetain(v23);
  sub_10067AFD0((uint64_t)v6, v22, v23, (uint64_t)v9);

  sub_100C9F8F8((uint64_t)v9, (uint64_t)v12);
  sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLBoardIdentifier);

  v24 = v12[*(int *)(v27 + 60)];
  sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLBoardViewModelMetadata);
  return v24;
}

void sub_100C2CAE4(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char v33;
  char *v34;
  char *v35;
  uint64_t v36;
  void *v37;
  void *v38;
  id v39;
  void *v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  char *v48;
  id v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  char *v53;
  id v54;
  char *v55;
  uint64_t v56;
  char v57[24];
  char v58[24];

  v56 = a1;
  v2 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v2);
  v53 = (char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UUID(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v53 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v53 - v17;
  v54 = v1;
  v19 = *(char **)(*(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  v20 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  v21 = *(_QWORD *)&v19[OBJC_IVAR____TtC8Freeform8CRLBoard_data];
  v22 = v21 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v21 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v58, 0, 0);
  sub_1004B8460(v22, (uint64_t)v6, type metadata accessor for CRLBoardCRDTData);
  v55 = v19;
  swift_retain(v21);
  v23 = sub_1004B804C(&qword_1013E1A80);
  CRRegister.wrappedValue.getter(v23);
  sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLBoardCRDTData);
  swift_release(v21);
  v24 = (uint64_t *)(*(_QWORD *)&v19[v20] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  v25 = *v24;
  v26 = v24[1];
  swift_bridgeObjectRetain(v26);
  sub_10067AFD0((uint64_t)v9, v25, v26, (uint64_t)v18);

  v27 = v56;
  LOBYTE(v25) = static UUID.== infix(_:_:)(v18);
  sub_1004B8460((uint64_t)v18, (uint64_t)v15, type metadata accessor for CRLBoardIdentifier);
  sub_1004B8460(v27, (uint64_t)v12, type metadata accessor for CRLBoardIdentifier);
  if ((v25 & 1) == 0)
  {
    sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4((uint64_t)v15, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4((uint64_t)v18, type metadata accessor for CRLBoardIdentifier);
    return;
  }
  v28 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  v29 = *(_QWORD *)&v15[v28];
  v30 = *(_QWORD *)&v15[v28 + 8];
  v31 = &v12[v28];
  v32 = *((_QWORD *)v31 + 1);
  if (v29 == *(_QWORD *)v31 && v30 == v32)
  {
    sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4((uint64_t)v15, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4((uint64_t)v18, type metadata accessor for CRLBoardIdentifier);
  }
  else
  {
    v33 = _stringCompareWithSmolCheck(_:_:expecting:)(v29, v30, *(_QWORD *)v31, v32, 0);
    sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4((uint64_t)v15, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4((uint64_t)v18, type metadata accessor for CRLBoardIdentifier);
    if ((v33 & 1) == 0)
      return;
  }
  v34 = (char *)sub_100B7FDBC();
  if (v34)
  {
    v35 = v34;
    v36 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window;
    v37 = *(void **)&v34[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window];
    if (v37 && (objc_msgSend(v37, "isUserInteractionEnabled") & 1) != 0)
    {
      v38 = *(void **)&v35[v36];
      if (!v38
        || (v39 = objc_msgSend(v38, "rootViewController")) == 0
        || (v40 = v39,
            v41 = objc_msgSend(v39, "crl_windowWrapper"),
            v40,
            !v41)
        || (v42 = objc_msgSend(v41, "newWrapperBeginningIgnoringUserInteractionSafely"), v41, !v42))
      {
        if (qword_1013DD6C8 != -1)
          swift_once(&qword_1013DD6C8, sub_100A00D28);
        swift_beginAccess(&static OS_os_log.crlError, v57, 0, 0);
        v43 = (id)static OS_os_log.crlError;
        v44 = static os_log_type_t.error.getter(v43);
        sub_100A06EBC((uint64_t)v43, &_mh_execute_header, v44, "Could not create token for ignoring user interaction; view hierarchy may not be set up yet",
          90,
          2,
          (uint64_t)_swiftEmptyArrayStorage);

        v42 = 0;
      }
      v45 = type metadata accessor for TaskPriority(0);
      v46 = (uint64_t)v53;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v53, 1, 1, v45);
      type metadata accessor for MainActor(0);
      v47 = v42;
      v48 = v35;
      v49 = v54;
      v50 = static MainActor.shared.getter(v49);
      v51 = (_QWORD *)swift_allocObject(&unk_10129C5E0, 56, 7);
      v51[2] = v50;
      v51[3] = &protocol witness table for MainActor;
      v51[4] = v48;
      v51[5] = v49;
      v51[6] = v42;
      v52 = sub_100521B98(v46, (uint64_t)&unk_10140B8A8, (uint64_t)v51);

      swift_release(v52);
    }
    else
    {

    }
  }
}

void sub_100C2CFF4(uint64_t a1, uint64_t a2)
{
  char *v2;
  void *v4;
  id v5;
  NSString v6;
  NSString v7;
  id v8;
  uint64_t v9;
  void *v10;
  NSString v11;
  NSString v12;
  id v13;
  id v14;
  NSString v15;
  NSString v16;
  id v17;
  uint64_t v18;
  NSString v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  _BOOL8 v28;
  id v29;
  unint64_t v30;
  id v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  void *v36;
  void *v37;
  unsigned int v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  char *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  void **aBlock;
  uint64_t v47;
  void *v48;
  void *v49;
  void *v50;
  uint64_t v51;

  v44 = a1;
  v4 = (void *)objc_opt_self(NSBundle);
  v5 = objc_msgSend(v4, "mainBundle");
  v6 = String._bridgeToObjectiveC()();
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend(v5, "localizedStringForKey:value:table:", v6, v7, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v9 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                             + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard)
                 + OBJC_IVAR____TtC8Freeform8CRLBoard_shareState);
  v10 = *(void **)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController];
  objc_msgSend(v10, "documentIsSharedReadOnly", swift_retain(v9).n128_f64[0]);
  v45 = v9;
  sub_100BBE018(v9);
  v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v13 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v11, v12, 1);

  v14 = objc_msgSend(v4, "mainBundle");
  v15 = String._bridgeToObjectiveC()();
  v16 = String._bridgeToObjectiveC()();
  v17 = objc_msgSend(v14, "localizedStringForKey:value:table:", v15, v16, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v18 = swift_allocObject(&unk_10129C540, 32, 7);
  *(_QWORD *)(v18 + 16) = v44;
  *(_QWORD *)(v18 + 24) = a2;
  swift_retain(a2);
  v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v50 = sub_10054E858;
  v51 = v18;
  aBlock = _NSConcreteStackBlock;
  v47 = *(_QWORD *)"";
  v48 = sub_1004C6194;
  v49 = &unk_10129C558;
  v20 = _Block_copy(&aBlock);
  swift_release(v51);
  v21 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v19, 0, v20);
  _Block_release(v20);

  objc_msgSend(v13, "addAction:", v21);
  v22 = objc_msgSend(v2, "presentedViewController");
  if (v22)
  {
    v23 = v22;
    v24 = objc_msgSend(v2, "presentedViewController");
    if (v24)
    {
      v25 = v24;
      v26 = objc_opt_self(_UIStickerPickerViewController);
      v27 = swift_dynamicCastObjCClass(v25, v26);

      v28 = v27 == 0;
    }
    else
    {
      v28 = 1;
    }
    objc_msgSend(v23, "dismissViewControllerAnimated:completion:", v28, 0, v44);

  }
  v29 = objc_msgSend(v10, "layerHost", v44);
  if (v29)
  {
    v31 = v29;
    v32 = objc_msgSend(v29, "miniFormatterPresenter");
    v30 = swift_unknownObjectRelease(v31).n128_u64[0];
    if (v32)
    {
      objc_msgSend(v32, "dismissPresentedMenus", *(double *)&v30);
      v30 = swift_unknownObjectRelease(v32).n128_u64[0];
    }
  }
  v33 = objc_msgSend(v10, "tmCoordinator", *(double *)&v30);
  v34 = objc_msgSend(v33, "controllingTM");

  if (v34)
  {
    v35 = objc_opt_self(UIGestureRecognizer);
    v36 = (void *)swift_dynamicCastObjCClass(v34, v35);
    if (v36)
      objc_msgSend(v36, "setState:", 4);
  }
  v37 = *(void **)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasViewController];
  objc_msgSend(v37, "resetGesturesForContextSwitch");
  v38 = objc_msgSend(v10, "isInDynamicOperation");
  if (v34 || v38)
  {
    v39 = swift_allocObject(&unk_10129C590, 32, 7);
    *(_QWORD *)(v39 + 16) = v2;
    *(_QWORD *)(v39 + 24) = v13;
    v50 = sub_100C4EF8C;
    v51 = v39;
    aBlock = _NSConcreteStackBlock;
    v47 = *(_QWORD *)"";
    v48 = sub_1005D2FC0;
    v49 = &unk_10129C5A8;
    v40 = _Block_copy(&aBlock);
    v41 = v51;
    v42 = v2;
    v43 = v13;
    swift_release(v41);
    sub_1000A5140(v40);
    swift_unknownObjectRelease(v34);

    swift_release(v45);
    _Block_release(v40);
  }
  else
  {
    objc_msgSend(v37, "presentViewController:animated:completion:", v13, 1, 0);

    swift_release(v45);
  }
}

void sub_100C2D578()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  char v23;
  void *v24;
  id v25;
  NSString v26;
  NSString v27;
  id v28;
  id v29;
  NSString v30;
  NSString v31;
  id v32;
  id v33;
  NSString v34;
  NSString v35;
  id v36;
  NSString v37;
  id v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  void *v42;
  id v43;
  NSString v44;
  NSString v45;
  id v46;
  uint64_t v47;
  id v48;
  NSString v49;
  NSString v50;
  id v51;
  uint64_t v52;
  id v53;
  NSString v54;
  NSString v55;
  id v56;
  NSString v57;
  void *v58;
  id v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  id v64;
  NSString v65;
  NSString v66;
  id v67;
  uint64_t v68;
  NSString v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  NSString v73;
  NSString v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t i;
  id v79;
  void *v80;
  uint64_t v81;
  _QWORD v82[3];
  id v83;
  _QWORD aBlock[5];
  uint64_t v85;
  uint64_t v86;
  char v87[24];

  v1 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v1);
  v3 = (char *)v82 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UUID(0);
  __chkstk_darwin(v4);
  v6 = (char *)v82 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v7);
  v9 = (char *)v82 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = v0;
  v10 = *(char **)(*(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  v11 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  v12 = *(_QWORD *)&v10[OBJC_IVAR____TtC8Freeform8CRLBoard_data];
  v13 = v12 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v12 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v87, 0, 0);
  sub_1004B8460(v13, (uint64_t)v3, type metadata accessor for CRLBoardCRDTData);
  v14 = v10;
  swift_retain(v12);
  v15 = sub_1004B804C(&qword_1013E1A80);
  CRRegister.wrappedValue.getter(v15);
  sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLBoardCRDTData);
  swift_release(v12);
  v16 = (uint64_t *)(*(_QWORD *)&v10[v11] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  v17 = *v16;
  v18 = v16[1];
  swift_bridgeObjectRetain(v18);
  sub_10067AFD0((uint64_t)v6, v17, v18, (uint64_t)v9);

  v19 = &v9[*(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20)];
  v21 = *(_QWORD *)v19;
  v20 = *((_QWORD *)v19 + 1);
  swift_bridgeObjectRetain(v20);
  sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLBoardIdentifier);
  if (v21)
    v22 = 0;
  else
    v22 = v20 == 0xE000000000000000;
  if (v22)
  {
    swift_bridgeObjectRelease();
    v86 = (uint64_t)_swiftEmptyArrayStorage;
  }
  else
  {
    v23 = _stringCompareWithSmolCheck(_:_:expecting:)(v21, v20, 0, 0xE000000000000000, 0);
    swift_bridgeObjectRelease();
    v86 = (uint64_t)_swiftEmptyArrayStorage;
    if ((v23 & 1) == 0)
    {
      v24 = (void *)objc_opt_self(NSBundle);
      v25 = objc_msgSend(v24, "mainBundle");
      v26 = String._bridgeToObjectiveC()();
      v27 = String._bridgeToObjectiveC()();
      v28 = objc_msgSend(v25, "localizedStringForKey:value:table:", v26, v27, 0);

      static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
      v29 = objc_msgSend(v24, "mainBundle");
      v30 = String._bridgeToObjectiveC()();
      v31 = String._bridgeToObjectiveC()();
      v32 = objc_msgSend(v29, "localizedStringForKey:value:table:", v30, v31, 0);

      static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
      v33 = objc_msgSend(v24, "mainBundle");
      v34 = String._bridgeToObjectiveC()();
      v35 = String._bridgeToObjectiveC()();
      v36 = objc_msgSend(v33, "localizedStringForKey:value:table:", v34, v35, 0);

      static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
      v37 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      v38 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v37, 1, 0);

      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v39);
      v41 = *(_QWORD *)((v86 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v40 = *(_QWORD *)((v86 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v41 >= v40 >> 1)
        goto LABEL_12;
      goto LABEL_13;
    }
  }
  v42 = (void *)objc_opt_self(NSBundle);
  v43 = objc_msgSend(v42, "mainBundle");
  v44 = String._bridgeToObjectiveC()();
  v45 = String._bridgeToObjectiveC()();
  v46 = objc_msgSend(v43, "localizedStringForKey:value:table:", v44, v45, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v46);
  v82[2] = v47;

  v48 = objc_msgSend(v42, "mainBundle");
  v49 = String._bridgeToObjectiveC()();
  v50 = String._bridgeToObjectiveC()();
  v51 = objc_msgSend(v48, "localizedStringForKey:value:table:", v49, v50, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v51);
  v82[1] = v52;

  v53 = objc_msgSend(v42, "mainBundle");
  v54 = String._bridgeToObjectiveC()();
  v55 = String._bridgeToObjectiveC()();
  v56 = objc_msgSend(v53, "localizedStringForKey:value:table:", v54, v55, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v56);
  v57 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v58 = (void *)objc_opt_self(UIAlertAction);
  v59 = objc_msgSend(v58, "actionWithTitle:style:handler:", v57, 1, 0);

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v60);
  v62 = *(_QWORD *)((v86 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v61 = *(_QWORD *)((v86 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v62 >= v61 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v61 > 1, v62 + 1, 1);
  v63 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v62, v59);
  specialized Array._endMutation()(v63);
  v64 = objc_msgSend(v42, "mainBundle");
  v65 = String._bridgeToObjectiveC()();
  v66 = String._bridgeToObjectiveC()();
  v67 = objc_msgSend(v64, "localizedStringForKey:value:table:", v65, v66, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v67);
  v68 = swift_allocObject(&unk_10129BBE0, 24, 7);
  swift_unknownObjectWeakInit(v68 + 16);
  swift_retain(v68);
  v69 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_100C4EF84;
  v85 = v68;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1004C6194;
  aBlock[3] = &unk_10129C508;
  v70 = _Block_copy(aBlock);
  v38 = objc_msgSend(v58, "actionWithTitle:style:handler:", v69, 0, v70, swift_release(v85).n128_f64[0]);
  _Block_release(v70);

  swift_release(v68);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v71);
  v41 = *(_QWORD *)((v86 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v40 = *(_QWORD *)((v86 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v41 >= v40 >> 1)
    goto LABEL_12;
  while (1)
  {
LABEL_13:
    v72 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v41, v38);
    specialized Array._endMutation()(v72);
    v73 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v74 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v75 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v73, v74, 1);

    v76 = v86;
    if ((unint64_t)v86 >> 62)
    {
      if (v86 < 0)
        v81 = v86;
      else
        v81 = v86 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(v86, 2);
      v77 = _CocoaArrayWrapper.endIndex.getter(v81);
      if (!v77)
        goto LABEL_25;
    }
    else
    {
      v77 = *(_QWORD *)((v86 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n(v86, 2);
      if (!v77)
        goto LABEL_25;
    }
    if (v77 >= 1)
      break;
    __break(1u);
LABEL_12:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v40 > 1, v41 + 1, 1);
  }
  for (i = 0; i != v77; ++i)
  {
    if ((v76 & 0xC000000000000001) != 0)
      v79 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v76);
    else
      v79 = *(id *)(v76 + 8 * i + 32);
    v80 = v79;
    objc_msgSend(v75, "addAction:", v79);

  }
LABEL_25:
  swift_bridgeObjectRelease_n(v76, 3);
  objc_msgSend(v83, "presentViewController:animated:completion:", v75, 1, 0);

}

void sub_100C2DF68(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *Strong;
  id v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  _BYTE v14[24];

  v3 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v3);
  v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v14[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v14, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v11 = Strong;
    URL.init(string:)(0xD000000000000053, 0x8000000101003420);
    v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
    if (v12(v5, 1, v6) == 1)
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"cloudQuotaExceededChangePlanURL", 31, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibraryViewController.swift", 101, 2, 31, "Cloud Quota Exceeded Change Plan URL is nil", 43, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"cloudQuotaExceededChangePlanURL", 31, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibraryViewController.swift", 101, 2u, 31, (uint64_t)"Cloud Quota Exceeded Change Plan URL is nil", 43, 2u);
    }

    if (v12(v5, 1, v6) == 1)
    {
      sub_1004CB800((uint64_t)v5, &qword_1013E04D0);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
      sub_10069C328((uint64_t)v9);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }

  }
}

uint64_t sub_100C2E184(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  NSString v44;
  NSString v45;
  id v46;
  void *v47;
  id v48;
  NSString v49;
  NSString v50;
  id v51;
  NSString v52;
  void *v53;
  void *v54;
  id v55;
  id v56;
  NSString v57;
  NSString v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  NSString v66;
  void *v67;
  id v68;
  uint64_t v70;
  uint64_t v71;
  void **aBlock;
  uint64_t v73;
  void (*v74)(uint64_t, void *);
  void *v75;
  void *v76;
  _QWORD *v77;
  char v78[24];

  v2 = v1;
  v4 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UUID(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(char **)(*(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  v14 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  v15 = *(_QWORD *)&v13[OBJC_IVAR____TtC8Freeform8CRLBoard_data];
  v16 = v15 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v15 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v78, 0, 0);
  sub_1004B8460(v16, (uint64_t)v6, type metadata accessor for CRLBoardCRDTData);
  v17 = v13;
  swift_retain(v15);
  v18 = sub_1004B804C(&qword_1013E1A80);
  CRRegister.wrappedValue.getter(v18);
  sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLBoardCRDTData);
  swift_release(v15);
  v19 = (uint64_t *)(*(_QWORD *)&v13[v14] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  v20 = *v19;
  v21 = v19[1];
  swift_bridgeObjectRetain(v21);
  sub_10067AFD0((uint64_t)v9, v20, v21, (uint64_t)v12);

  if ((sub_1009680D8(a1, (uint64_t)v12) & 1) != 0)
  {
    sub_100968C24(a1, (uint64_t)v12);
    v22 = objc_msgSend(a1, "reason");
    if (!v22)
      goto LABEL_7;
    v23 = v22;
    v24 = ICQUIInAppMessageReasoniCloudAlmostFull;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
    v26 = v25;
    v28 = v27;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
    if (v26 == v29 && v28 == v30)
    {
      swift_bridgeObjectRelease_n(v28, 2);

      goto LABEL_8;
    }
    v31 = _stringCompareWithSmolCheck(_:_:expecting:)(v26, v28, v29, v30, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    if ((v31 & 1) == 0)
    {
LABEL_7:
      sub_100757E04(&_mh_execute_header, (uint64_t)"promptCloudQuotaMessage(_:)", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 1779, "expected cloud quota message for alert to be quota almost full", 62, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"promptCloudQuotaMessage(_:)", 27, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2u, 1779, (uint64_t)"expected cloud quota message for alert to be quota almost full", 62, 2u);
    }
LABEL_8:
    v32 = objc_msgSend(a1, "actions");
    v33 = sub_1004B8930(0, &qword_10140B8A0, ICQInAppAction_ptr);
    v34 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v32, v33);

    if ((unint64_t)v34 >> 62)
    {
      if (v34 < 0)
        v70 = v34;
      else
        v70 = v34 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v34);
      v35 = _CocoaArrayWrapper.endIndex.getter(v70);
      swift_bridgeObjectRelease();
    }
    else
    {
      v35 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (v35 != 1)
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"promptCloudQuotaMessage(_:)", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 1780, "expected only one action for quota almost full message", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"promptCloudQuotaMessage(_:)", 27, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2u, 1780, (uint64_t)"expected only one action for quota almost full message", 54, 2u);
    }
    v36 = objc_msgSend(a1, "title");
    if (v36)
    {
      v37 = v36;
      static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
      v39 = v38;

    }
    else
    {
      v39 = 0;
    }
    v40 = objc_msgSend(a1, "subTitle");
    if (v40)
    {
      v41 = v40;
      static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
      v43 = v42;

      if (v39)
        goto LABEL_17;
    }
    else
    {
      v43 = 0;
      if (v39)
      {
LABEL_17:
        v44 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        if (v43)
        {
LABEL_18:
          v45 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
LABEL_22:
          v46 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v44, v45, 1);

          v47 = (void *)objc_opt_self(NSBundle);
          v48 = objc_msgSend(v47, "mainBundle");
          v49 = String._bridgeToObjectiveC()();
          v50 = String._bridgeToObjectiveC()();
          v51 = objc_msgSend(v48, "localizedStringForKey:value:table:", v49, v50, 0);

          static String._unconditionallyBridgeFromObjectiveC(_:)(v51);
          v52 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          v76 = sub_100C2E9DC;
          v77 = 0;
          aBlock = _NSConcreteStackBlock;
          v73 = *(_QWORD *)"";
          v74 = sub_1004C6194;
          v75 = &unk_10129C490;
          v53 = _Block_copy(&aBlock);
          swift_release(v77);
          v54 = (void *)objc_opt_self(UIAlertAction);
          v55 = objc_msgSend(v54, "actionWithTitle:style:handler:", v52, 0, v53);
          _Block_release(v53);

          objc_msgSend(v46, "addAction:", v55);
          v56 = objc_msgSend(v47, "mainBundle");
          v57 = String._bridgeToObjectiveC()();
          v58 = String._bridgeToObjectiveC()();
          v59 = objc_msgSend(v56, "localizedStringForKey:value:table:", v57, v58, 0);

          static String._unconditionallyBridgeFromObjectiveC(_:)(v59);
          v61 = v60;
          v63 = v62;

          v64 = swift_allocObject(&unk_10129BBE0, 24, 7);
          swift_unknownObjectWeakInit(v64 + 16);
          v65 = (_QWORD *)swift_allocObject(&unk_10129C4C8, 40, 7);
          v65[2] = v64;
          v65[3] = v61;
          v65[4] = v63;
          swift_bridgeObjectRetain(v63);
          swift_retain(v64);
          v66 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          v76 = sub_100C4EF78;
          v77 = v65;
          aBlock = _NSConcreteStackBlock;
          v73 = *(_QWORD *)"";
          v74 = sub_1004C6194;
          v75 = &unk_10129C4E0;
          v67 = _Block_copy(&aBlock);
          v68 = objc_msgSend(v54, "actionWithTitle:style:handler:", v66, 0, v67, swift_release(v77).n128_f64[0]);
          _Block_release(v67);

          objc_msgSend(v46, "addAction:", v68, swift_release(v64).n128_f64[0]);
          objc_msgSend(v2, "presentViewController:animated:completion:", v46, 1, 0);
          sub_100CE39D8(v46);

          return sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLBoardIdentifier);
        }
LABEL_21:
        v45 = 0;
        goto LABEL_22;
      }
    }
    v44 = 0;
    if (v43)
      goto LABEL_18;
    goto LABEL_21;
  }
  return sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLBoardIdentifier);
}

void sub_100C2E9DC()
{
  id v0;
  __n128 v1;
  uint64_t v2;
  _BYTE v3[24];

  if (qword_1013DD7F8 != -1)
    swift_once(&qword_1013DD7F8, sub_100A04364);
  swift_beginAccess(&static OS_os_log.crlCloudQuotaMessaging, v3, 0, 0);
  v0 = (id)static OS_os_log.crlCloudQuotaMessaging;
  v2 = static os_log_type_t.default.getter(v1);
  sub_100A06EBC((uint64_t)v0, &_mh_execute_header, v2, "performing cloud quota message alert action \"Dismiss\"", 53, 2, (uint64_t)_swiftEmptyArrayStorage);

}

void sub_100C2EA80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *Strong;
  id v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  void *v17;
  uint64_t v18;
  uint64_t inited;
  id v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v25[72];
  _BYTE v26[24];
  _BYTE v27[24];

  v7 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v7);
  v9 = &v25[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = &v25[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v27, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v15 = Strong;
    URL.init(string:)(0xD000000000000053, 0x8000000101003420);
    v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    if (v16(v9, 1, v10) == 1)
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"cloudQuotaExceededChangePlanURL", 31, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibraryViewController.swift", 101, 2, 31, "Cloud Quota Exceeded Change Plan URL is nil", 43, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"cloudQuotaExceededChangePlanURL", 31, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibraryViewController.swift", 101, 2u, 31, (uint64_t)"Cloud Quota Exceeded Change Plan URL is nil", 43, 2u);
    }

    if (v16(v9, 1, v10) == 1)
    {
      sub_1004CB800((uint64_t)v9, &qword_1013E04D0);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
      sub_10069C328((uint64_t)v13);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    }

  }
  if (qword_1013DD7F8 != -1)
    swift_once(&qword_1013DD7F8, sub_100A04364);
  swift_beginAccess(&static OS_os_log.crlCloudQuotaMessaging, v26, 0, 0);
  v17 = (void *)static OS_os_log.crlCloudQuotaMessaging;
  v18 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v18, v25);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = a3;
  *(_QWORD *)(inited + 40) = a4;
  v20 = v17;
  v21 = swift_bridgeObjectRetain(a4);
  v22 = static os_log_type_t.default.getter(v21);
  sub_100A06EBC((uint64_t)v20, &_mh_execute_header, v22, "performing cloud quota message alert action \"%@\"", 48, 2, inited);
  swift_setDeallocating(inited);
  v23 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v23);

}

uint64_t sub_100C2EFAC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[2] = v0;
  v2 = type metadata accessor for MainActor(0);
  v1[3] = v2;
  v1[4] = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[5] = v3;
  v1[6] = v4;
  return swift_task_switch(sub_100C2F01C, v3, v4);
}

uint64_t sub_100C2F01C()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  __n128 v8;

  v1 = objc_msgSend(*(id *)(v0 + 16), "presentedViewController");
  *(_QWORD *)(v0 + 56) = v1;
  if (v1)
  {
    v2 = v1;
    v3 = *(_QWORD *)(v0 + 16);
    v4 = static MainActor.shared.getter(v1);
    *(_QWORD *)(v0 + 64) = v4;
    v5 = swift_task_alloc(32);
    *(_QWORD *)(v0 + 72) = v5;
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v2;
    v6 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
    *(_QWORD *)(v0 + 80) = v6;
    *v6 = v0;
    v6[1] = sub_100C2F110;
    return withCheckedContinuation<A>(isolation:function:_:)(v6, v4, &protocol witness table for MainActor, 0xD000000000000020, 0x8000000101003330, sub_100C4EF58, v5, (char *)&type metadata for () + 8);
  }
  else
  {
    v8 = swift_release(*(_QWORD *)(v0 + 32));
    return (*(uint64_t (**)(__n128))(v0 + 8))(v8);
  }
}

uint64_t sub_100C2F110()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 72);
  v3 = *(_QWORD *)(*v0 + 64);
  swift_task_dealloc(*(_QWORD *)(*v0 + 80));
  swift_release(v3);
  swift_task_dealloc(v2);
  return swift_task_switch(sub_100C2F178, *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_100C2F178()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;

  v1 = *(_QWORD *)(v0 + 32);

  v2 = swift_release(v1);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
}

void sub_100C2F1B4(uint64_t a1, void *a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  _QWORD aBlock[5];
  uint64_t v18;

  v6 = sub_1004B804C(&qword_1013EF328);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = objc_msgSend(a2, "presentedViewController", __chkstk_darwin(v6).n128_f64[0]);
  if (v9)
  {
    v10 = v9;
    v11 = objc_opt_self(_UIStickerPickerViewController);
    v12 = swift_dynamicCastObjCClass(v10, v11) == 0;

  }
  else
  {
    v12 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  v13 = *(unsigned __int8 *)(v7 + 80);
  v14 = (v13 + 16) & ~v13;
  v15 = swift_allocObject(&unk_10129C450, v14 + v8, v13 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v15 + v14, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  aBlock[4] = sub_10075D4DC;
  v18 = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1005D2FC0;
  aBlock[3] = &unk_10129C468;
  v16 = _Block_copy(aBlock);
  objc_msgSend(a3, "dismissViewControllerAnimated:completion:", v12, v16, swift_release(v18).n128_f64[0]);
  _Block_release(v16);
}

void sub_100C2F338(uint64_t a1, void *a2, int a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  id v9;
  unsigned int v10;
  uint64_t v11;
  id v12;
  unsigned __int8 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  double v22;
  _BYTE v23[12];
  int v24;
  _QWORD aBlock[5];
  uint64_t v26;

  v24 = a3;
  v5 = sub_1004B804C(&qword_1013EF328);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = &v23[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = objc_msgSend(a2, "traitCollection", __chkstk_darwin(v5).n128_f64[0]);
  v10 = objc_msgSend(v9, "crl_isCompactWidth");

  if (v10)
  {
    v11 = sub_100C1D040();
    if ((v11 & 1) != 0)
      goto LABEL_8;
  }
  v12 = objc_msgSend(a2, "traitCollection");
  v13 = objc_msgSend(v12, "crl_isCompactWidth");

  if ((v13 & 1) == 0 && (sub_100C1D040() & 1) != 0)
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v6 + 16))(&v23[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)], a1, v5);
    v14 = *(unsigned __int8 *)(v6 + 80);
    v15 = (v14 + 16) & ~v14;
    v16 = swift_allocObject(&unk_10129BB18, v15 + v7, v14 | 7);
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(v6 + 32))(v16 + v15, v8, v5);
    sub_100C2F590(v24 & 1, sub_10075D4DC, v16);
    swift_release(v16);
    return;
  }
  v11 = (uint64_t)objc_msgSend(a2, "presentedViewController");
  if (!v11)
  {
LABEL_8:
    CheckedContinuation.resume(returning:)(v11, v5);
  }
  else
  {
    v17 = (void *)v11;
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v6 + 16))(&v23[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)], a1, v5);
    v18 = *(unsigned __int8 *)(v6 + 80);
    v19 = (v18 + 16) & ~v18;
    v20 = swift_allocObject(&unk_10129BAC8, v19 + v7, v18 | 7);
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(v6 + 32))(v20 + v19, v8, v5);
    aBlock[4] = sub_10075D4DC;
    v26 = v20;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(_QWORD *)"";
    aBlock[2] = sub_1005D2FC0;
    aBlock[3] = &unk_10129BAE0;
    v21 = _Block_copy(aBlock);
    *(_QWORD *)&v22 = swift_release(v26).n128_u64[0];
    objc_msgSend(v17, "dismissViewControllerAnimated:completion:", v24 & 1, v21, v22);
    _Block_release(v21);

  }
}

void sub_100C2F590(char a1, void *a2, uint64_t a3)
{
  char *v3;
  char *v4;
  id v8;
  unsigned __int8 v9;
  void *v10;
  double v11;
  void *v12;
  void *v13;
  uint64_t v14;
  id v15;
  void **aBlock;
  uint64_t v17;
  double (*v18)(uint64_t);
  void *v19;
  void *v20;
  uint64_t v21;

  v4 = v3;
  v8 = objc_msgSend(v4, "traitCollection");
  if (objc_msgSend(v8, "horizontalSizeClass") == (id)1)
  {

    goto LABEL_4;
  }
  v9 = objc_msgSend((id)objc_opt_self(UIDevice), "crl_phoneUI");

  if ((v9 & 1) != 0)
  {
LABEL_4:
    v10 = *(void **)&v4[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_compactScenesPresenter];
    if (!v10)
      return;
    v15 = v10;
    if ((objc_msgSend(v15, "isBeingDismissed") & 1) == 0)
    {
      if (a2)
      {
        v20 = a2;
        v21 = a3;
        aBlock = _NSConcreteStackBlock;
        v17 = *(_QWORD *)"";
        v12 = &unk_10129BA78;
LABEL_13:
        v18 = sub_1005D2FC0;
        v19 = v12;
        a2 = _Block_copy(&aBlock);
        v14 = v21;
        swift_retain(a3);
        *(_QWORD *)&v11 = swift_release(v14).n128_u64[0];
        goto LABEL_14;
      }
      goto LABEL_14;
    }
LABEL_10:

    return;
  }
  v13 = *(void **)&v4[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPresenter];
  if (!v13)
    return;
  v15 = v13;
  if ((objc_msgSend(v15, "isBeingDismissed") & 1) != 0)
    goto LABEL_10;
  if (a2)
  {
    v20 = a2;
    v21 = a3;
    aBlock = _NSConcreteStackBlock;
    v17 = *(_QWORD *)"";
    v12 = &unk_10129BA50;
    goto LABEL_13;
  }
LABEL_14:
  objc_msgSend(v15, "dismissViewControllerAnimated:completion:", a1 & 1, a2, v11);
  _Block_release(a2);

}

void sub_100C2F748(void (*a1)(void), uint64_t a2)
{
  char *v2;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  void **v29;
  uint64_t v30;
  double (*v31)(uint64_t);
  void *v32;
  uint64_t (*v33)();
  uint64_t v34;

  v5 = *(void **)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasViewController];
  v6 = objc_msgSend(v5, "presentedViewController");
  if (v6)
  {
    v7 = v6;
    v8 = type metadata accessor for CRLiOSMiniShapePickerHostingController();
    v9 = (void *)swift_dynamicCastClass(v7, v8);
    if (v9)
    {
      v10 = v9;
      if ((objc_msgSend(v9, "isBeingDismissed") & 1) == 0)
      {
        v24 = swift_allocObject(&unk_10129C400, 32, 7);
        *(_QWORD *)(v24 + 16) = a1;
        *(_QWORD *)(v24 + 24) = a2;
        v33 = sub_100C4EF48;
        v34 = v24;
        v29 = _NSConcreteStackBlock;
        v30 = *(_QWORD *)"";
        v25 = &unk_10129C418;
LABEL_21:
        v31 = sub_1005D2FC0;
        v32 = v25;
        v21 = _Block_copy(&v29);
        v27 = v34;
        sub_1004C0F54((uint64_t)a1, a2);
        *(_QWORD *)&v28 = swift_release(v27).n128_u64[0];
        objc_msgSend(v10, "dismissViewControllerAnimated:completion:", 1, v21, v28, v29, v30);
        goto LABEL_22;
      }
    }

  }
  v11 = objc_msgSend(v5, "presentedViewController");
  if (!v11)
    goto LABEL_10;
  v7 = v11;
  v12 = objc_opt_self(CRLiOSShapeLibraryViewController);
  v13 = (void *)swift_dynamicCastObjCClass(v7, v12);
  if (v13)
  {
    v10 = v13;
    if ((objc_msgSend(v13, "showLinesInLibrary") & 1) == 0
      && (objc_msgSend(v10, "isBeingDismissed") & 1) == 0)
    {
      v26 = swift_allocObject(&unk_10129C3B0, 32, 7);
      *(_QWORD *)(v26 + 16) = a1;
      *(_QWORD *)(v26 + 24) = a2;
      v33 = sub_100C4EF48;
      v34 = v26;
      v29 = _NSConcreteStackBlock;
      v30 = *(_QWORD *)"";
      v25 = &unk_10129C3C8;
      goto LABEL_21;
    }
  }

LABEL_10:
  if ((sub_100C1D040() & 1) != 0)
  {
    v14 = swift_allocObject(&unk_10129C388, 32, 7);
    *(_QWORD *)(v14 + 16) = a1;
    *(_QWORD *)(v14 + 24) = a2;
    sub_1004C0F54((uint64_t)a1, a2);
    sub_100C2F590(1, sub_100C4EF48, v14);
    swift_release(v14);
    return;
  }
  v15 = *(void **)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_compactScenesNavigatorViewController];
  if (v15)
  {
    v16 = v15;
    v17 = objc_msgSend(v2, "presentedViewController");
    if (v17)
    {
      v18 = v17;
      sub_1004B8930(0, (unint64_t *)&qword_1013F6620, UIViewController_ptr);
      v7 = v16;
      v19 = v18;
      LOBYTE(v18) = static NSObject.== infix(_:_:)(v19, v7);

      if ((v18 & 1) != 0)
      {
        v20 = swift_allocObject(&unk_10129C338, 32, 7);
        *(_QWORD *)(v20 + 16) = a1;
        *(_QWORD *)(v20 + 24) = a2;
        v33 = sub_100C4EF48;
        v34 = v20;
        v29 = _NSConcreteStackBlock;
        v30 = *(_QWORD *)"";
        v31 = sub_1005D2FC0;
        v32 = &unk_10129C350;
        v21 = _Block_copy(&v29);
        v22 = v34;
        sub_1004C0F54((uint64_t)a1, a2);
        *(_QWORD *)&v23 = swift_release(v22).n128_u64[0];
        objc_msgSend(v7, "dismissViewControllerAnimated:completion:", 0, v21, v23, v29, v30);
LABEL_22:
        _Block_release(v21);

        return;
      }
    }

  }
  if (a1)
    a1();
}

void sub_100C2FAB0()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  objc_class *v6;
  _BYTE *v7;
  id v8;
  id v9;
  objc_super v10;

  v1 = sub_100C1CAE8();
  v2 = objc_msgSend(v1, "mode");

  v3 = objc_msgSend(v2, "pencilModeType");
  if (v3 != (id)2)
  {
    v4 = v0;
    v5 = objc_msgSend(v4, "interactiveCanvasControllerForFreehandDrawingTools");
    v6 = (objc_class *)type metadata accessor for CRLiOSDocumentModeHandwriting();
    v7 = objc_allocWithZone(v6);
    v7[OBJC_IVAR____TtC8Freeform29CRLiOSDocumentModeHandwriting_currentlyChangingModes] = 0;
    v7[OBJC_IVAR____TtC8Freeform29CRLiOSDocumentModeHandwriting_stayInHandwritingModeForSelectionChange] = 0;
    v7[OBJC_IVAR____TtC8Freeform29CRLiOSDocumentModeHandwriting_endModeCheckQueuedAfterTextGestures] = 0;
    *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform29CRLiOSDocumentModeHandwriting_subscriptions] = &_swiftEmptySetSingleton;
    swift_unknownObjectUnownedInit(&v7[OBJC_IVAR____TtC8Freeform29CRLiOSDocumentModeHandwriting_icc], v5);
    v10.receiver = v7;
    v10.super_class = v6;
    v8 = objc_msgSendSuper2(&v10, "initWithBoardViewController:", v4);

    v9 = sub_100C1CAE8();
    objc_msgSend(v9, "setMode:animated:", v8, 1);

  }
}

id sub_100C2FD68(char *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  void *v12;
  id v13;
  char *v14;
  id v15;
  id v16;

  v12 = *(void **)&a1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController];
  v13 = a3;
  v14 = a1;
  v15 = v12;
  sub_10058950C((uint64_t)v13, (uint64_t)v15, &_mh_execute_header, a4, a5, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2u, a6);

  v16 = *(id *)&v14[*a7];
  return v16;
}

char *sub_100C30054(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  char *v4;
  void *v6;
  char *v7;
  id v8;
  void *v10;
  id v11;
  id v12;
  void *v13;
  id v14;

  v2 = v1;
  v3 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_mediaReplacer;
  v4 = *(char **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_mediaReplacer];
  if (v4)
  {
    sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
    v6 = *(void **)&v4[OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_interactiveCanvasController];
    v7 = v4;
    v8 = v6;
    LOBYTE(a1) = static NSObject.== infix(_:_:)(v8, a1);

    if ((a1 & 1) != 0)
      return v7;
    sub_100757E04(&_mh_execute_header, (uint64_t)"mediaReplacer(for:)", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 2064, "Existing media replacer is for a different ICC. Replacing it with a new instance.", 81, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"mediaReplacer(for:)", 19, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2u, 2064, (uint64_t)"Existing media replacer is for a different ICC. Replacing it with a new instance.", 81, 2u);

  }
  v10 = *(void **)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController];
  v11 = objc_allocWithZone((Class)type metadata accessor for CRLiOSMediaReplacer());
  v12 = sub_100875194((uint64_t)v10, (uint64_t)v2);
  v13 = *(void **)&v2[v3];
  *(_QWORD *)&v2[v3] = v12;
  v14 = v12;

  return (char *)v14;
}

uint64_t sub_100C302A8(uint64_t a1)
{
  uint64_t v1;
  id v3;
  uint64_t v4;
  int v5;
  char v6;

  v3 = *(id *)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController);
  sub_10058950C(a1, (uint64_t)v3, &_mh_execute_header, (uint64_t)"wantsToShowCanvasDotGrid(on:)", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2u, 2078);

  v4 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__isCanvasDotGridEnabled;
  v5 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__isCanvasDotGridEnabled);
  if (v5 == 2)
  {
    v6 = sub_100C2B92C();
    *(_BYTE *)(v1 + v4) = v6 & 1;
  }
  else
  {
    v6 = v5 & 1;
  }
  return v6 & 1;
}

uint64_t sub_100C303A4(uint64_t a1)
{
  uint64_t v1;
  id v3;
  uint64_t v4;
  int v5;
  char v6;

  v3 = *(id *)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController);
  sub_10058950C(a1, (uint64_t)v3, &_mh_execute_header, (uint64_t)"wantsToShowConnectorKnobs(on:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2u, 2083);

  v4 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__isConnectorModeEnabled;
  v5 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__isConnectorModeEnabled);
  if (v5 == 2)
  {
    v6 = sub_100C2C364();
    *(_BYTE *)(v1 + v4) = v6 & 1;
  }
  else
  {
    v6 = v5 & 1;
  }
  return v6 & 1;
}

id sub_100C30608()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  objc_class *v3;
  char *v4;
  uint64_t v5;
  id v6;
  objc_super v8;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_selectionModelTranslator);
  v3 = (objc_class *)type metadata accessor for CRLSelectionPathValidator();
  v4 = (char *)objc_allocWithZone(v3);
  v5 = swift_unknownObjectWeakInit(&v4[OBJC_IVAR____TtC8Freeform25CRLSelectionPathValidator_board]);
  swift_unknownObjectWeakAssign(v5, v1);
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform25CRLSelectionPathValidator_selectionModelTranslator] = v2;
  v8.receiver = v4;
  v8.super_class = v3;
  v6 = v2;
  return objc_msgSendSuper2(&v8, "init");
}

id sub_100C306E8()
{
  void *v0;
  id v1;
  id v2;
  id result;
  void *v4;
  id v5;
  id v6;
  char v7;

  v1 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v2 = objc_msgSend(v1, "keyWindow");

  result = objc_msgSend(v0, "view");
  if (result)
  {
    v4 = result;
    v5 = objc_msgSend(result, "window");

    if (v2)
    {
      if (!v5)
      {
        v7 = 0;
        goto LABEL_9;
      }
      sub_1004B8930(0, &qword_1013E4C58, UIWindow_ptr);
      v6 = v2;
      v7 = static NSObject.== infix(_:_:)(v6, v5);

    }
    else
    {
      if (!v5)
      {
        v7 = 1;
        return (id)(v7 & 1);
      }
      v7 = 0;
    }
    v2 = v5;
LABEL_9:

    return (id)(v7 & 1);
  }
  __break(1u);
  return result;
}

void sub_100C30864(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  objc_class *v10;
  char *v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  id v19;
  id v20;
  objc_super v21;
  objc_super v22;

  if (a1)
  {
    v2 = v1;
    v3 = a1;
    v4 = sub_100C1CAE8();
    v5 = objc_msgSend(v4, "mode");

    v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator);
    v7 = OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard;
    v8 = *(_QWORD *)(v6 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
    v9 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_selectionModelTranslator);
    v10 = (objc_class *)type metadata accessor for CRLSelectionPathValidator();
    v11 = (char *)objc_allocWithZone(v10);
    v12 = swift_unknownObjectWeakInit(&v11[OBJC_IVAR____TtC8Freeform25CRLSelectionPathValidator_board]);
    swift_unknownObjectWeakAssign(v12, v8);
    *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLSelectionPathValidator_selectionModelTranslator] = v9;
    v22.receiver = v11;
    v22.super_class = v10;
    v13 = v9;
    v14 = objc_msgSendSuper2(&v22, "init");
    v15 = objc_msgSend(v5, "validateSelectionPathIfNeededFromPersistableSelectionPath:withSelectionPathValidator:", v3, v14);

    if (!v15)
    {
      v16 = *(_QWORD *)(v6 + v7);
      v17 = (char *)objc_allocWithZone(v10);
      v18 = swift_unknownObjectWeakInit(&v17[OBJC_IVAR____TtC8Freeform25CRLSelectionPathValidator_board]);
      swift_unknownObjectWeakAssign(v18, v16);
      *(_QWORD *)&v17[OBJC_IVAR____TtC8Freeform25CRLSelectionPathValidator_selectionModelTranslator] = v13;
      v21.receiver = v17;
      v21.super_class = v10;
      v19 = v13;
      v20 = objc_msgSendSuper2(&v21, "init");
      v15 = sub_1005853C8((uint64_t)v3);

    }
    objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController), "setSelectionPath:withSelectionFlags:", v15, 3200, v21.receiver, v21.super_class, v22.receiver, v22.super_class);

  }
}

void sub_100C30B08(void *a1)
{
  char *v1;
  void *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  id v10;

  sub_100C30C24(a1);
  sub_100C30DB8(a1);
  v3 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasZoomControlViewController];
  if (v3)
    v4 = objc_msgSend(v3, "view");
  else
    v4 = 0;
  v5 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesNavigatorViewController];
  if (v5)
    v6 = objc_msgSend(v5, "view");
  else
    v6 = 0;
  sub_100C3109C(v4, v6);

  v7 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasViewController], "presentedHUDView");
  if (v7)
  {
    v10 = v7;
    v8 = objc_msgSend(v1, "view");
    if (v8)
    {
      v9 = v8;
      objc_msgSend(v8, "bringSubviewToFront:", v10);

    }
    else
    {
      __break(1u);
    }
  }
}

void sub_100C30C24(void *a1)
{
  char *v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  id v13;

  if (objc_msgSend(a1, "horizontalSizeClass") == (id)1
    || objc_msgSend((id)objc_opt_self(UIDevice), "crl_phoneUI"))
  {
    v2 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasZoomControlViewController;
    v3 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasZoomControlViewController];
    if (v3)
    {
      v4 = v3;
      objc_msgSend(v4, "removeFromParentViewController");
      objc_msgSend(v4, "didMoveToParentViewController:", 0);
      v5 = objc_msgSend(v4, "view");
      if (v5)
      {
        v6 = v5;
        objc_msgSend(v5, "removeFromSuperview");

        v13 = *(id *)&v1[v2];
        *(_QWORD *)&v1[v2] = 0;

        v7 = v13;
LABEL_6:

        return;
      }
      __break(1u);
    }
  }
  else
  {
    v8 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasZoomControlViewController;
    if (!*(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasZoomControlViewController])
    {
      v9 = type metadata accessor for CRLiOSCanvasZoomControlViewController();
      v11 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v9, v10)), "init");
      *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_viewScaleDetents] = &off_1012659B0;
      swift_bridgeObjectRelease();
      v12 = &v11[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_delegate];
      *((_QWORD *)v12 + 1) = &off_10129B770;
      objc_msgSend(v1, "addChildViewController:", v11, swift_unknownObjectWeakAssign(v12, v1).n128_f64[0]);
      objc_msgSend(v11, "didMoveToParentViewController:", v1);
      v7 = *(void **)&v1[v8];
      *(_QWORD *)&v1[v8] = v11;
      goto LABEL_6;
    }
  }
}

void sub_100C30DB8(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  char *v13;
  char *v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  char v22;
  void *v23;
  void *v24;
  char *v25;
  char *v26;
  id v27;
  id v28;
  id v29;
  void *v30;
  uint64_t v31;
  void *v32;
  void *v33;
  void *v34;
  id v35;
  id v36;

  v2 = v1;
  if (objc_msgSend(a1, "horizontalSizeClass") == (id)1
    || objc_msgSend((id)objc_opt_self(UIDevice), "crl_phoneUI"))
  {
    v3 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesNavigatorViewController;
    v4 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesNavigatorViewController];
    if (!v4)
    {
LABEL_10:
      v10 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_compactScenesNavigatorViewController;
      if (*(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_compactScenesNavigatorViewController])
        return;
      v11 = *(void **)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesNavigatorState];
      v12 = *(void **)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState];
      v13 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLScenesNavigatorViewController());
      v14 = v2;
      v15 = v11;
      v16 = v12;
      v17 = sub_100C4AFC8(1, v15, v16, (uint64_t)v14, (uint64_t)v14, v13);

      v18 = *(void **)&v2[v10];
      *(_QWORD *)&v2[v10] = v17;
      v36 = v17;

      objc_msgSend(v36, "setModalPresentationStyle:", 6);
LABEL_13:

      return;
    }
    objc_msgSend(v4, "removeFromParentViewController");
    v5 = *(void **)&v1[v3];
    if (!v5 || (objc_msgSend(v5, "didMoveToParentViewController:", 0), (v6 = *(void **)&v1[v3]) == 0))
    {
      v9 = 0;
      goto LABEL_9;
    }
    v7 = objc_msgSend(v6, "view");
    if (v7)
    {
      v8 = v7;
      objc_msgSend(v7, "removeFromSuperview");

      v9 = *(void **)&v2[v3];
LABEL_9:
      *(_QWORD *)&v2[v3] = 0;

      goto LABEL_10;
    }
    __break(1u);
LABEL_22:
    __break(1u);
    return;
  }
  v19 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesNavigatorViewController;
  if (!*(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesNavigatorViewController])
  {
    v20 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesNavigatorState;
    v21 = *(id *)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesNavigatorState];
    v22 = sub_100C2C808();
    sub_100711550(v22 & 1);

    v23 = *(void **)&v1[v20];
    v24 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState];
    v25 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLScenesNavigatorViewController());
    v26 = v2;
    v27 = v23;
    v28 = v24;
    v29 = sub_100C4AFC8(0, v27, v28, (uint64_t)v26, (uint64_t)v26, v25);

    objc_msgSend(v26, "addChildViewController:", v29);
    objc_msgSend(v29, "didMoveToParentViewController:", v26);
    v30 = *(void **)&v2[v19];
    *(_QWORD *)&v2[v19] = v29;

  }
  v31 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_compactScenesNavigatorViewController;
  v32 = *(void **)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_compactScenesNavigatorViewController];
  if (v32)
  {
    objc_msgSend(v32, "removeFromParentViewController");
    v33 = *(void **)&v2[v31];
    if (v33)
    {
      objc_msgSend(v33, "didMoveToParentViewController:", 0);
      v34 = *(void **)&v2[v31];
      if (v34)
      {
        v35 = objc_msgSend(v34, "view");
        if (v35)
        {
          v36 = v35;
          objc_msgSend(v35, "removeFromSuperview");
          goto LABEL_13;
        }
        goto LABEL_22;
      }
    }
  }
}

void sub_100C3109C(void *a1, void *a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  double v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  double v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  id v46;
  void *v47;
  id v48;
  id v49;
  id v50;
  id v51;
  void *v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  uint64_t v73;
  Class isa;
  id v75;
  uint64_t v76;
  id v77;
  id v78;
  unint64_t v79;

  v3 = v2;
  if (a1 && a2)
  {
    v6 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasZoomAndScenesContainerView;
    v7 = *(void **)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasZoomAndScenesContainerView];
    if (v7)
    {
      v8 = a1;
      v9 = a2;
      v77 = v7;
      v10 = objc_msgSend(v77, "subviews");
      v11 = sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
      v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v10, v11);

      v13 = sub_1004B804C((uint64_t *)&unk_1013E4180);
      v14 = swift_allocObject(v13, 48, 7);
      *(_OWORD *)(v14 + 16) = xmmword_100EF5560;
      *(_QWORD *)(v14 + 32) = v8;
      *(_QWORD *)(v14 + 40) = v9;
      v79 = v14;
      specialized Array._endMutation()(v14);
      v15 = v8;
      v16 = v9;
      LOBYTE(v9) = sub_100548F2C(v12, v79);
      swift_bridgeObjectRelease();
      *(_QWORD *)&v17 = swift_bridgeObjectRelease().n128_u64[0];
      if ((v9 & 1) != 0)
      {

LABEL_15:
        return;
      }
      objc_msgSend(v77, "removeFromSuperview", v17);
      v23 = *(void **)&v3[v6];
      v76 = v6;
      *(_QWORD *)&v3[v6] = 0;

    }
    else
    {
      v76 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasZoomAndScenesContainerView;
      v21 = a1;
      v22 = a2;
    }
    objc_msgSend(a1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(a2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v24 = type metadata accessor for CRLShadowView();
    v26 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v24, v25)), "init");
    objc_msgSend(v26, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v27 = (void *)objc_opt_self(UIColor);
    v28 = v26;
    v29 = objc_msgSend(v27, "clearColor");
    objc_msgSend(v28, "setBackgroundColor:", v29);

    v30 = objc_msgSend(v28, "layer");
    objc_msgSend(v30, "setCornerRadius:", 10.0);

    v31 = objc_msgSend(v28, "layer");
    objc_msgSend(v31, "setShadowOffset:", 0.0, 3.0);

    v32 = objc_msgSend(v28, "layer");
    LODWORD(v33) = 1034147594;
    objc_msgSend(v32, "setShadowOpacity:", v33);

    v34 = objc_msgSend(v28, "layer");
    objc_msgSend(v34, "setShadowRadius:", 7.0);

    v35 = objc_msgSend(v28, "layer");
    objc_msgSend(v35, "setCornerCurve:", kCACornerCurveContinuous);

    v36 = objc_msgSend(v28, "layer");
    objc_msgSend(v36, "setBorderWidth:", 0.5);

    v37 = objc_msgSend(v28, "layer");
    v38 = objc_msgSend(v27, "blackColor");
    v39 = objc_msgSend(v38, "colorWithAlphaComponent:", 0.08);

    v40 = objc_msgSend(v39, "CGColor");
    objc_msgSend(v37, "setBorderColor:", v40);

    objc_msgSend(v28, "addSubview:", a2);
    objc_msgSend(v28, "addSubview:", a1);
    v41 = objc_msgSend(v3, "view");
    if (v41)
    {
      v42 = v41;
      objc_msgSend(v41, "addSubview:", v28);

      v43 = sub_1004B804C((uint64_t *)&unk_1013E4180);
      v44 = swift_allocObject(v43, 96, 7);
      *(_OWORD *)(v44 + 16) = xmmword_100EF5FF0;
      v45 = objc_msgSend(v28, "leadingAnchor");
      v46 = objc_msgSend(v3, "view");
      if (v46)
      {
        v47 = v46;
        v75 = a2;
        v48 = objc_msgSend(v46, "leadingAnchor");

        v49 = objc_msgSend(v45, "constraintEqualToAnchor:constant:", v48, 20.0);
        *(_QWORD *)(v44 + 32) = v49;
        v50 = objc_msgSend(v28, "bottomAnchor");
        v51 = objc_msgSend(v3, "view");
        if (v51)
        {
          v52 = v51;
          v78 = (id)objc_opt_self(NSLayoutConstraint);
          v53 = objc_msgSend(v52, "bottomAnchor");

          v54 = objc_msgSend(v50, "constraintEqualToAnchor:constant:", v53, -20.0);
          *(_QWORD *)(v44 + 40) = v54;
          v55 = objc_msgSend(a1, "topAnchor");
          v56 = objc_msgSend(v28, "topAnchor");
          v57 = objc_msgSend(v55, "constraintEqualToAnchor:", v56);

          *(_QWORD *)(v44 + 48) = v57;
          v58 = objc_msgSend(a1, "bottomAnchor");
          v59 = objc_msgSend(v28, "bottomAnchor");
          v60 = objc_msgSend(v58, "constraintEqualToAnchor:", v59);

          *(_QWORD *)(v44 + 56) = v60;
          v61 = objc_msgSend(a1, "leadingAnchor");
          v62 = objc_msgSend(v28, "leadingAnchor");
          v63 = objc_msgSend(v61, "constraintEqualToAnchor:", v62);

          *(_QWORD *)(v44 + 64) = v63;
          v64 = objc_msgSend(a1, "trailingAnchor");
          v65 = objc_msgSend(v75, "leadingAnchor");
          v66 = objc_msgSend(v64, "constraintEqualToAnchor:", v65);

          *(_QWORD *)(v44 + 72) = v66;
          v67 = objc_msgSend(v75, "bottomAnchor");
          v68 = objc_msgSend(v28, "bottomAnchor");
          v69 = objc_msgSend(v67, "constraintEqualToAnchor:", v68);

          *(_QWORD *)(v44 + 80) = v69;
          v70 = objc_msgSend(v75, "trailingAnchor");
          v71 = objc_msgSend(v28, "trailingAnchor");
          v72 = objc_msgSend(v70, "constraintEqualToAnchor:", v71);

          *(_QWORD *)(v44 + 88) = v72;
          specialized Array._endMutation()(v73);
          sub_1004B8930(0, (unint64_t *)&qword_1013E1760, NSLayoutConstraint_ptr);
          isa = Array._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v78, "activateConstraints:", isa, swift_bridgeObjectRelease().n128_f64[0]);

          v77 = *(id *)&v3[v76];
          *(_QWORD *)&v3[v76] = v28;

          goto LABEL_15;
        }
        goto LABEL_18;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_18:
    __break(1u);
    return;
  }
  v18 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasZoomAndScenesContainerView;
  v19 = *(void **)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasZoomAndScenesContainerView];
  if (v19)
  {
    v20 = v19;
    objc_msgSend(v20, "removeFromSuperview");
    v77 = *(id *)&v3[v18];
    *(_QWORD *)&v3[v18] = 0;

    goto LABEL_15;
  }
}

void sub_100C318F8(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  void *v30;
  void *v31;
  id v32;
  id v33;
  uint64_t v34;
  Class isa;
  id v36;
  void *v37;
  id v38;
  void *v39;
  void *v40;
  id v41;
  void *v42;
  id v43;
  void *v44;
  char *v45;

  v2 = v1;
  if (objc_msgSend(a1, "horizontalSizeClass") == (id)1
    || objc_msgSend((id)objc_opt_self(UIDevice), "crl_phoneUI"))
  {
    v3 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasZoomControlViewController;
    v4 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasZoomControlViewController];
    if (v4)
    {
      v5 = v4;
      objc_msgSend(v5, "removeFromParentViewController");
      objc_msgSend(v5, "didMoveToParentViewController:", 0);
      v6 = objc_msgSend(v5, "view");
      if (v6)
      {
        v7 = v6;
        objc_msgSend(v6, "removeFromSuperview");

        v45 = *(char **)&v2[v3];
        *(_QWORD *)&v2[v3] = 0;

LABEL_6:
        return;
      }
      __break(1u);
      goto LABEL_22;
    }
  }
  else
  {
    v8 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasZoomControlViewController;
    if (!*(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasZoomControlViewController])
    {
      v9 = type metadata accessor for CRLiOSCanvasZoomControlViewController();
      v11 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v9, v10)), "init");
      *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_viewScaleDetents] = &off_101265A08;
      swift_bridgeObjectRelease();
      v12 = &v11[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_delegate];
      *((_QWORD *)v12 + 1) = &off_10129B770;
      objc_msgSend(v1, "addChildViewController:", v11, swift_unknownObjectWeakAssign(v12, v1).n128_f64[0]);
      objc_msgSend(v11, "didMoveToParentViewController:", v1);
      v13 = objc_msgSend(v1, "view");
      if (v13)
      {
        v14 = v13;
        v15 = objc_msgSend(v11, "view");
        if (v15)
        {
          v16 = v15;
          objc_msgSend(v14, "addSubview:", v15);

          v17 = sub_1004B804C((uint64_t *)&unk_1013E4180);
          v18 = swift_allocObject(v17, 48, 7);
          *(_OWORD *)(v18 + 16) = xmmword_100EF5560;
          v19 = objc_msgSend(v11, "view");
          if (v19)
          {
            v20 = v19;
            v21 = objc_msgSend(v19, "leadingAnchor");

            v22 = objc_msgSend(v2, "view");
            if (v22)
            {
              v23 = v22;
              v24 = objc_msgSend(v22, "leadingAnchor");

              v25 = objc_msgSend(v21, "constraintEqualToAnchor:constant:", v24, 20.0);
              *(_QWORD *)(v18 + 32) = v25;
              v26 = objc_msgSend(v11, "view");
              if (v26)
              {
                v27 = v26;
                v28 = objc_msgSend(v26, "bottomAnchor");

                v29 = objc_msgSend(v2, "view");
                if (v29)
                {
                  v30 = v29;
                  v31 = (void *)objc_opt_self(NSLayoutConstraint);
                  v32 = objc_msgSend(v30, "bottomAnchor");

                  v33 = objc_msgSend(v28, "constraintEqualToAnchor:constant:", v32, -20.0);
                  *(_QWORD *)(v18 + 40) = v33;
                  specialized Array._endMutation()(v34);
                  sub_1004B8930(0, (unint64_t *)&qword_1013E1760, NSLayoutConstraint_ptr);
                  isa = Array._bridgeToObjectiveC()().super.isa;
                  objc_msgSend(v31, "activateConstraints:", isa, swift_bridgeObjectRelease().n128_f64[0]);

                  v36 = objc_msgSend(v2, "view");
                  if (v36)
                  {
                    v37 = v36;
                    v38 = objc_msgSend(v11, "view");
                    if (v38)
                    {
                      v39 = v38;
                      objc_msgSend(v37, "bringSubviewToFront:", v38);

                      v40 = *(void **)&v2[v8];
                      *(_QWORD *)&v2[v8] = v11;
                      v45 = v11;

                      v41 = objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasViewController], "presentedHUDView");
                      if (!v41)
                        goto LABEL_6;
                      v42 = v41;
                      v43 = objc_msgSend(v2, "view");
                      if (v43)
                      {
                        v44 = v43;
                        objc_msgSend(v43, "bringSubviewToFront:", v42);

                        return;
                      }
LABEL_30:
                      __break(1u);
                      return;
                    }
LABEL_29:
                    __break(1u);
                    goto LABEL_30;
                  }
LABEL_28:
                  __break(1u);
                  goto LABEL_29;
                }
LABEL_27:
                __break(1u);
                goto LABEL_28;
              }
LABEL_26:
              __break(1u);
              goto LABEL_27;
            }
LABEL_25:
            __break(1u);
            goto LABEL_26;
          }
LABEL_24:
          __break(1u);
          goto LABEL_25;
        }
LABEL_23:
        __break(1u);
        goto LABEL_24;
      }
LABEL_22:
      __break(1u);
      goto LABEL_23;
    }
  }
}

void sub_100C31DBC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  _BYTE *v10;
  id v11;
  id v12;
  char *v13;
  id v14;
  void *v15;
  void *v16;
  _BYTE *v17;
  id v18;
  char *v19;
  id v20;
  id v21;
  void *v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  id v28;
  _QWORD *v29;
  id v30;
  uint64_t KeyPath;
  uint64_t v32;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  id v37;
  double v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v43[2];
  char v44[24];
  CGRect v45;
  CGRect v46;
  CGRect v47;

  v1 = v0;
  v2 = sub_1004B804C((uint64_t *)&unk_1013F02F0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v43[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPresenter;
  if (!*(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPresenter])
  {
    v7 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState;
    v8 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState];
    v9 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController];
    v10 = objc_allocWithZone((Class)type metadata accessor for CRLScenesViewController_i());
    v11 = v8;
    v12 = v9;
    v13 = v1;
    v14 = sub_100C4B268((uint64_t)v13, v11, v12, v10);

    v15 = *(void **)&v1[v6];
    *(_QWORD *)&v1[v6] = v14;

    v16 = *(void **)&v1[v7];
    v17 = objc_allocWithZone((Class)type metadata accessor for CRLCompactScenesViewController_i());
    v18 = v12;
    v19 = v13;
    v20 = v16;
    v21 = sub_100C4B3C4((uint64_t)v19, v20, v18, v17);

    v22 = *(void **)&v19[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_compactScenesPresenter];
    *(_QWORD *)&v19[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_compactScenesPresenter] = v21;

    v23 = *(void **)&v1[v7];
    v24 = *(char **)(*(_QWORD *)&v19[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                   + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
    v25 = *(_QWORD *)&v24[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess(v25, v44, 0, 0);
    v26 = type metadata accessor for CRLBoardCRDTData(0);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v25 + *(int *)(v26 + 36), v2);
    v27 = v24;
    v28 = v23;
    v29 = sub_10054B7E8((uint64_t)v5, (uint64_t)v27);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);

    sub_10087D400((unint64_t)v29);
    v30 = *(id *)&v1[v7];
    LOBYTE(v29) = objc_msgSend(v18, "documentIsSharedReadOnly");
    KeyPath = swift_getKeyPath(byte_100F2F550);
    v32 = swift_getKeyPath(byte_100F2F578);
    LOBYTE(v43[0]) = (_BYTE)v29;
    static Published.subscript.setter(v43, v30, KeyPath, v32);
    objc_msgSend(v18, "visibleUnscaledRect");
    x = v45.origin.x;
    y = v45.origin.y;
    width = v45.size.width;
    height = v45.size.height;
    if (!CGRectIsEmpty(v45))
    {
      v37 = *(id *)&v1[v7];
      v46.origin.x = x;
      v46.origin.y = y;
      v46.size.width = width;
      v46.size.height = height;
      v38 = CGRectGetWidth(v46);
      v47.origin.x = x;
      v47.origin.y = y;
      v47.size.width = width;
      v47.size.height = height;
      v39 = v38 / CGRectGetHeight(v47);
      v40 = swift_getKeyPath(byte_100F2F508);
      v41 = swift_getKeyPath(byte_100F2F530);
      *(double *)v43 = v39;
      static Published.subscript.setter(v43, v37, v40, v41);
    }
  }
}

uint64_t sub_100C320DC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  double v3;
  double v4;
  double v5;
  uint64_t KeyPath;
  uint64_t v7;
  id v8;
  uint64_t result;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  double v13;

  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController), "visibleUnscaledRect");
  v1 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState);
  v5 = v3 / v4;
  KeyPath = swift_getKeyPath(&unk_100F2F508);
  v7 = swift_getKeyPath(&unk_100F2F530);
  v8 = v2;
  static Published.subscript.getter(&v13, v8, KeyPath, v7);

  swift_release(KeyPath);
  swift_release(v7);
  result = sub_100803E94(v5, v13);
  if ((result & 1) == 0)
  {
    v10 = *(void **)(v0 + v1);
    v11 = swift_getKeyPath(&unk_100F2F508);
    v12 = swift_getKeyPath(&unk_100F2F530);
    v13 = v5;
    return static Published.subscript.setter(&v13, v10, v11, v12);
  }
  return result;
}

void sub_100C321D8(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  objc_class *v9;
  char *v10;
  uint64_t v11;
  double v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  void *v31;
  void *v32;
  id v33;
  id v34;
  uint64_t v35;
  Class isa;
  id v37;
  void *v38;
  id v39;
  void *v40;
  void *v41;
  id v42;
  id v43;
  void *v44;
  id v45;
  void *v46;
  id v47;
  objc_super v48;

  v2 = v1;
  if (objc_msgSend(a1, "horizontalSizeClass") == (id)1
    || objc_msgSend((id)objc_opt_self(UIDevice), "crl_phoneUI"))
  {
    v3 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardControlsViewController;
    v4 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardControlsViewController];
    if (v4)
    {
      v5 = v4;
      objc_msgSend(v5, "removeFromParentViewController");
      objc_msgSend(v5, "didMoveToParentViewController:", 0);
      v6 = objc_msgSend(v5, "view");
      if (v6)
      {
        v7 = v6;
        objc_msgSend(v6, "removeFromSuperview");

        v47 = *(id *)&v2[v3];
        *(_QWORD *)&v2[v3] = 0;

        return;
      }
      __break(1u);
      goto LABEL_21;
    }
  }
  else
  {
    v8 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardControlsViewController;
    if (!*(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardControlsViewController])
    {
      v9 = (objc_class *)type metadata accessor for CRLiOSFloatingBoardViewControlsViewController();
      v10 = (char *)objc_allocWithZone(v9);
      v11 = swift_unknownObjectWeakInit(&v10[OBJC_IVAR____TtC8Freeform45CRLiOSFloatingBoardViewControlsViewController_delegate]);
      *(_QWORD *)&v10[OBJC_IVAR____TtC8Freeform45CRLiOSFloatingBoardViewControlsViewController____lazy_storage___stackView] = 0;
      *(_QWORD *)&v10[OBJC_IVAR____TtC8Freeform45CRLiOSFloatingBoardViewControlsViewController_stackViewWidthConstraint] = 0;
      *(_QWORD *)&v10[OBJC_IVAR____TtC8Freeform45CRLiOSFloatingBoardViewControlsViewController_stackViewHeightConstraint] = 0;
      *(_QWORD *)&v10[OBJC_IVAR____TtC8Freeform45CRLiOSFloatingBoardViewControlsViewController____lazy_storage___gridButton] = 0;
      *(_QWORD *)&v10[OBJC_IVAR____TtC8Freeform45CRLiOSFloatingBoardViewControlsViewController____lazy_storage___connectorButton] = 0;
      *(_QWORD *)&v10[OBJC_IVAR____TtC8Freeform45CRLiOSFloatingBoardViewControlsViewController____lazy_storage___separator] = 0;
      *(_QWORD *)&v12 = swift_unknownObjectWeakAssign(v11, v2).n128_u64[0];
      v48.receiver = v10;
      v48.super_class = v9;
      v13 = objc_msgSendSuper2(&v48, "initWithNibName:bundle:", 0, 0, v12);
      objc_msgSend(v2, "addChildViewController:", v13);
      objc_msgSend(v13, "didMoveToParentViewController:", v2);
      v14 = objc_msgSend(v2, "view");
      if (!v14)
      {
LABEL_21:
        __break(1u);
        goto LABEL_22;
      }
      v15 = v14;
      v16 = objc_msgSend(v13, "view");
      if (!v16)
      {
LABEL_22:
        __break(1u);
        goto LABEL_23;
      }
      v17 = v16;
      objc_msgSend(v15, "addSubview:", v16);

      v18 = sub_1004B804C((uint64_t *)&unk_1013E4180);
      v19 = swift_allocObject(v18, 48, 7);
      *(_OWORD *)(v19 + 16) = xmmword_100EF5560;
      v20 = objc_msgSend(v13, "view");
      if (!v20)
      {
LABEL_23:
        __break(1u);
        goto LABEL_24;
      }
      v21 = v20;
      v22 = objc_msgSend(v20, "trailingAnchor");

      v23 = objc_msgSend(v2, "view");
      if (!v23)
      {
LABEL_24:
        __break(1u);
        goto LABEL_25;
      }
      v24 = v23;
      v25 = objc_msgSend(v23, "trailingAnchor");

      v26 = objc_msgSend(v22, "constraintEqualToAnchor:constant:", v25, -20.0);
      *(_QWORD *)(v19 + 32) = v26;
      v27 = objc_msgSend(v13, "view");
      if (!v27)
      {
LABEL_25:
        __break(1u);
        goto LABEL_26;
      }
      v28 = v27;
      v29 = objc_msgSend(v27, "bottomAnchor");

      v30 = objc_msgSend(v2, "view");
      if (!v30)
      {
LABEL_26:
        __break(1u);
        goto LABEL_27;
      }
      v31 = v30;
      v32 = (void *)objc_opt_self(NSLayoutConstraint);
      v33 = objc_msgSend(v31, "bottomAnchor");

      v34 = objc_msgSend(v29, "constraintEqualToAnchor:constant:", v33, -20.0);
      *(_QWORD *)(v19 + 40) = v34;
      specialized Array._endMutation()(v35);
      sub_1004B8930(0, (unint64_t *)&qword_1013E1760, NSLayoutConstraint_ptr);
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v32, "activateConstraints:", isa, swift_bridgeObjectRelease().n128_f64[0]);

      v37 = objc_msgSend(v2, "view");
      if (!v37)
      {
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
      v38 = v37;
      v39 = objc_msgSend(v13, "view");
      if (!v39)
      {
LABEL_28:
        __break(1u);
        goto LABEL_29;
      }
      v40 = v39;
      objc_msgSend(v38, "bringSubviewToFront:", v39);

      v41 = *(void **)&v2[v8];
      *(_QWORD *)&v2[v8] = v13;
      v42 = v13;

      v43 = objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasViewController], "presentedHUDView");
      if (v43)
      {
        v44 = v43;
        v45 = objc_msgSend(v2, "view");
        if (!v45)
        {
LABEL_29:
          __break(1u);
          return;
        }
        v46 = v45;
        objc_msgSend(v45, "bringSubviewToFront:", v44);

      }
    }
  }
}

void sub_100C326CC()
{
  char *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  int v6;
  id v7;
  char v8;
  id v9;
  uint64_t KeyPath;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  void *v38;
  id v39;
  id v40;
  id v41;
  void *v42;
  id v43;
  id v44;
  void *v45;
  id v46;
  id v47;
  id v48;
  void *v49;
  id v50;
  id v51;
  void *v52;
  void *v53;
  id v54;
  id v55;
  uint64_t v56;
  Class isa;
  void *v58;
  _QWORD v59[6];

  v1 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_connectorModeMessageViewController;
  if (!*(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_connectorModeMessageViewController])
  {
    v2 = v0;
    v3 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_connectorModeMessageViewState;
    v4 = *(void **)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_connectorModeMessageViewState];
    v5 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__isConnectorModeEnabled;
    v6 = v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__isConnectorModeEnabled];
    if (v6 == 2)
    {
      v7 = v4;
      v8 = sub_100C2C364() & 1;
      v0[v5] = v8;
    }
    else
    {
      v8 = v6 & 1;
      v9 = v4;
    }
    KeyPath = swift_getKeyPath(asc_100F2F4C0);
    v11 = swift_getKeyPath(byte_100F2F4E8);
    LOBYTE(v59[0]) = v8;
    static Published.subscript.setter(v59, v4, KeyPath, v11);
    sub_1006E1258((uint64_t)*(id *)&v2[v3], v59);
    v12 = objc_allocWithZone((Class)sub_1004B804C(&qword_10140B868));
    v13 = (void *)UIHostingController.init(rootView:)(v59);
    v14 = objc_msgSend(v13, "view");
    if (v14)
    {
      v15 = v14;
      objc_msgSend(v14, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

      v16 = objc_msgSend(v13, "view");
      if (v16)
      {
        v17 = v16;
        v18 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
        objc_msgSend(v17, "setBackgroundColor:", v18);

        v19 = objc_msgSend(v13, "view");
        if (v19)
        {
          v20 = v19;
          objc_msgSend(v19, "setUserInteractionEnabled:", 0);

          v21 = objc_msgSend(v2, "view");
          if (v21)
          {
            v22 = v21;
            v23 = objc_msgSend(v13, "view");
            if (v23)
            {
              v24 = v23;
              objc_msgSend(v22, "addSubview:", v23);

              objc_msgSend(v2, "addChildViewController:", v13);
              objc_msgSend(v13, "didMoveToParentViewController:", v2);
              v25 = sub_1004B804C((uint64_t *)&unk_1013E4180);
              v26 = swift_allocObject(v25, 64, 7);
              *(_OWORD *)(v26 + 16) = xmmword_100EF7310;
              v27 = objc_msgSend(v13, "view");
              if (v27)
              {
                v28 = v27;
                v29 = objc_msgSend(v27, "leftAnchor");

                v30 = objc_msgSend(v2, "view");
                if (v30)
                {
                  v31 = v30;
                  v32 = objc_msgSend(v30, "leftAnchor");

                  v33 = objc_msgSend(v29, "constraintEqualToAnchor:", v32);
                  *(_QWORD *)(v26 + 32) = v33;
                  v34 = objc_msgSend(v13, "view");
                  if (v34)
                  {
                    v35 = v34;
                    v36 = objc_msgSend(v34, "rightAnchor");

                    v37 = objc_msgSend(v2, "view");
                    if (v37)
                    {
                      v38 = v37;
                      v39 = objc_msgSend(v37, "rightAnchor");

                      v40 = objc_msgSend(v36, "constraintEqualToAnchor:", v39);
                      *(_QWORD *)(v26 + 40) = v40;
                      v41 = objc_msgSend(v13, "view");
                      if (v41)
                      {
                        v42 = v41;
                        v43 = objc_msgSend(v41, "topAnchor");

                        v44 = objc_msgSend(v2, "view");
                        if (v44)
                        {
                          v45 = v44;
                          v46 = objc_msgSend(v44, "topAnchor");

                          v47 = objc_msgSend(v43, "constraintEqualToAnchor:", v46);
                          *(_QWORD *)(v26 + 48) = v47;
                          v48 = objc_msgSend(v13, "view");
                          if (v48)
                          {
                            v49 = v48;
                            v50 = objc_msgSend(v48, "bottomAnchor");

                            v51 = objc_msgSend(v2, "view");
                            if (v51)
                            {
                              v52 = v51;
                              v53 = (void *)objc_opt_self(NSLayoutConstraint);
                              v54 = objc_msgSend(v52, "bottomAnchor");

                              v55 = objc_msgSend(v50, "constraintEqualToAnchor:", v54);
                              *(_QWORD *)(v26 + 56) = v55;
                              v59[0] = v26;
                              specialized Array._endMutation()(v56);
                              sub_1004B8930(0, (unint64_t *)&qword_1013E1760, NSLayoutConstraint_ptr);
                              isa = Array._bridgeToObjectiveC()().super.isa;
                              objc_msgSend(v53, "activateConstraints:", isa, swift_bridgeObjectRelease().n128_f64[0]);

                              v58 = *(void **)&v2[v1];
                              *(_QWORD *)&v2[v1] = v13;

                              return;
                            }
LABEL_32:
                            __break(1u);
                            return;
                          }
LABEL_31:
                          __break(1u);
                          goto LABEL_32;
                        }
LABEL_30:
                        __break(1u);
                        goto LABEL_31;
                      }
LABEL_29:
                      __break(1u);
                      goto LABEL_30;
                    }
LABEL_28:
                    __break(1u);
                    goto LABEL_29;
                  }
LABEL_27:
                  __break(1u);
                  goto LABEL_28;
                }
LABEL_26:
                __break(1u);
                goto LABEL_27;
              }
LABEL_25:
              __break(1u);
              goto LABEL_26;
            }
LABEL_24:
            __break(1u);
            goto LABEL_25;
          }
LABEL_23:
          __break(1u);
          goto LABEL_24;
        }
LABEL_22:
        __break(1u);
        goto LABEL_23;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_22;
  }
}

uint64_t sub_100C32C54()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  uint64_t result;
  void *v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  _BOOL8 v23;
  CGRect v24;
  CGRect v25;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasZoomControlViewController);
  if (!v1)
    return 1;
  v2 = (void *)objc_opt_self(CRLiOSKeyboardMonitor);
  v3 = v1;
  v4 = objc_msgSend(v2, "sharedKeyboardMonitor");
  objc_msgSend(v4, "keyboardFrame");
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;

  result = (uint64_t)objc_msgSend(v3, "view");
  if (result)
  {
    v14 = (void *)result;
    objc_msgSend((id)result, "frame");
    v16 = v15;
    v18 = v17;
    v20 = v19;
    v22 = v21;

    v24.origin.x = v6;
    v24.origin.y = v8;
    v24.size.width = v10;
    v24.size.height = v12;
    v25.origin.x = v16;
    v25.origin.y = v18;
    v25.size.width = v20;
    v25.size.height = v22;
    v23 = CGRectContainsRect(v24, v25);

    return v23;
  }
  __break(1u);
  return result;
}

id sub_100C32E18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  char *v3;
  char *v4;
  void *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unsigned int v16;
  id v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  unsigned int v25;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  objc_class *v34;
  id v35;
  id v36;
  id v37;
  objc_super v38;
  __int128 v39;
  __int128 v40;

  v4 = v3;
  v8 = *(void **)&v4[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasViewController];
  v36 = v4;
  v37 = v8;
  sub_1004CB7BC(a2, (uint64_t)&v39, &qword_1013E0230);
  v9 = *((_QWORD *)&v40 + 1);
  if (*((_QWORD *)&v40 + 1))
  {
    v10 = sub_1004BB5A4(&v39, *((uint64_t *)&v40 + 1));
    v11 = *(_QWORD *)(v9 - 8);
    v12 = __chkstk_darwin(v10);
    v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v11 + 16))(v14, v12);
    v15 = _bridgeAnythingToObjectiveC<A>(_:)(v14, v9);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v9);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v39);
  }
  else
  {
    v15 = 0;
  }
  v16 = objc_msgSend(v37, "canPerformAction:withSender:", a1, v15, v36);
  swift_unknownObjectRelease(v15);
  if (v16)
  {
    a3[3] = sub_1004B8930(0, (unint64_t *)&unk_10140B920, off_101229A78);
    v17 = v37;
LABEL_11:
    *a3 = v17;
    return v17;
  }
  sub_1004CB7BC(a2, (uint64_t)&v39, &qword_1013E0230);
  v18 = *((_QWORD *)&v40 + 1);
  if (*((_QWORD *)&v40 + 1))
  {
    v19 = sub_1004BB5A4(&v39, *((uint64_t *)&v40 + 1));
    v20 = *(_QWORD *)(v18 - 8);
    v21 = __chkstk_darwin(v19);
    v23 = (char *)&v36 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v20 + 16))(v23, v21);
    v24 = _bridgeAnythingToObjectiveC<A>(_:)(v23, v18);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v18);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v39);
  }
  else
  {
    v24 = 0;
  }
  v25 = objc_msgSend(v36, "canPerformAction:withSender:", a1, v24);
  swift_unknownObjectRelease(v24);
  if (v25)
  {
    a3[3] = type metadata accessor for CRLiOSBoardViewController(0);
    v17 = v36;
    goto LABEL_11;
  }
  sub_1004CB7BC(a2, (uint64_t)&v39, &qword_1013E0230);
  v27 = *((_QWORD *)&v40 + 1);
  if (*((_QWORD *)&v40 + 1))
  {
    v28 = sub_1004BB5A4(&v39, *((uint64_t *)&v40 + 1));
    v29 = *(_QWORD *)(v27 - 8);
    v30 = __chkstk_darwin(v28);
    v32 = (char *)&v36 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v29 + 16))(v32, v30);
    v33 = _bridgeAnythingToObjectiveC<A>(_:)(v32, v27);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v32, v27);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v39);
  }
  else
  {
    v33 = 0;
  }
  v34 = (objc_class *)type metadata accessor for CRLiOSBoardViewController(0);
  v38.receiver = v36;
  v38.super_class = v34;
  v35 = objc_msgSendSuper2(&v38, "targetForAction:withSender:", a1, v33);
  swift_unknownObjectRelease(v33);
  if (v35)
  {
    _bridgeAnyObjectToAny(_:)(&v39, v35);
    swift_unknownObjectRelease(v35);
  }
  else
  {
    v39 = 0u;
    v40 = 0u;
  }
  return (id)sub_1004C4938((uint64_t)&v39, (uint64_t)a3, &qword_1013E0230);
}

uint64_t sub_100C33290(uint64_t a1, uint64_t a2)
{
  char *v2;
  NSString *v5;
  SEL v6;
  id v7;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  objc_class *v16;
  objc_super v17;
  _QWORD v18[3];
  uint64_t v19;

  v5 = (NSString *)String._bridgeToObjectiveC()();
  v6 = NSSelectorFromString(v5);

  if ((static Selector.== infix(_:_:)(a1, v6) & 1) == 0)
  {
    if ((static Selector.== infix(_:_:)(a1, "newBoard:") & 1) != 0)
      return (uint64_t)sub_100C34628();
    if ((static Selector.== infix(_:_:)(a1, "createSceneShortcut:") & 1) != 0
      || (static Selector.== infix(_:_:)(a1, "nextSceneShortcut:") & 1) != 0
      || (static Selector.== infix(_:_:)(a1, "previousSceneShortcut:") & 1) != 0)
    {
      return objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController], "documentIsSharedReadOnly") ^ 1;
    }
    if ((static Selector.== infix(_:_:)(a1, "find:") & 1) == 0)
    {
      sub_1004CB7BC(a2, (uint64_t)v18, &qword_1013E0230);
      v9 = v19;
      if (v19)
      {
        v10 = sub_1004BB5A4(v18, v19);
        v11 = *(_QWORD *)(v9 - 8);
        v12 = __chkstk_darwin(v10);
        v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, __n128))(v11 + 16))(v14, v12);
        v15 = _bridgeAnythingToObjectiveC<A>(_:)(v14, v9);
        (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v9);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v18);
      }
      else
      {
        v15 = 0;
      }
      v16 = (objc_class *)type metadata accessor for CRLiOSBoardViewController(0);
      v17.receiver = v2;
      v17.super_class = v16;
      v7 = objc_msgSendSuper2(&v17, "canPerformAction:withSender:", a1, v15);
      swift_unknownObjectRelease(v15);
      return (uint64_t)v7;
    }
  }
  return 1;
}

double sub_100C336A4()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double result;
  char v21[24];

  v1 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v1);
  v3 = &v21[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = sub_1004B804C((uint64_t *)&unk_1013F02F0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = *(char **)(*(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  v9 = *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v9, v21, 0, 0);
  v10 = type metadata accessor for CRLBoardCRDTData(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v9 + *(int *)(v10 + 36), v4);
  v11 = v8;
  v12 = sub_10054B7E8((uint64_t)v7, (uint64_t)v11);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);

  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController], "endEditing");
  v13 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v3, 1, 1, v13);
  type metadata accessor for MainActor(0);
  v14 = v0;
  swift_bridgeObjectRetain(v12);
  v16 = static MainActor.shared.getter(v15);
  v17 = swift_allocObject(&unk_10129C7E8, 56, 7);
  *(_QWORD *)(v17 + 16) = v16;
  *(_QWORD *)(v17 + 24) = &protocol witness table for MainActor;
  *(_QWORD *)(v17 + 32) = v14;
  *(_BYTE *)(v17 + 40) = 0;
  *(_QWORD *)(v17 + 48) = v12;
  v18 = sub_100521B98((uint64_t)v3, (uint64_t)&unk_10140B918, v17);
  swift_release(v18);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_100C338AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_BYTE *)(v6 + 304) = a5;
  *(_QWORD *)(v6 + 168) = a4;
  *(_QWORD *)(v6 + 176) = a6;
  v7 = (*(_QWORD *)(*(_QWORD *)(sub_1004B804C(&qword_1013E04F0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v6 + 184) = swift_task_alloc(v7);
  *(_QWORD *)(v6 + 192) = swift_task_alloc(v7);
  *(_QWORD *)(v6 + 200) = swift_task_alloc(v7);
  v8 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v6 + 208) = v8;
  *(_QWORD *)(v6 + 216) = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  *(_QWORD *)(v6 + 224) = v9;
  *(_QWORD *)(v6 + 232) = v10;
  return swift_task_switch(sub_100C33960, v9, v10);
}

uint64_t sub_100C33960(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  id v12;
  uint64_t v13;
  _QWORD *v14;

  if (qword_1013DCF40 != -1)
    a1 = swift_once(&qword_1013DCF40, sub_1006D1300);
  if (*(_BYTE *)(qword_10147F238 + OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_isPresenting) == 1)
  {
    v2 = *(void **)(qword_10147F238 + OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_parentViewController);
    if (v2)
    {
      v3 = *(void **)(v1 + 168);
      sub_1004B8930(0, (unint64_t *)&qword_1013F6620, UIViewController_ptr);
      v4 = v3;
      v5 = v2;
      v6 = static NSObject.== infix(_:_:)(v5, v4);

    }
    else
    {
      v6 = 0;
    }
    v11 = v1 + 16;
    *(_BYTE *)(v1 + 305) = v6 & 1;
    v12 = objc_msgSend((id)objc_opt_self(UIPrintInteractionController), "sharedPrintController");
    *(_QWORD *)(v1 + 240) = v12;
    *(_QWORD *)(v1 + 16) = v1;
    *(_QWORD *)(v1 + 24) = sub_100C33B1C;
    v13 = swift_continuation_init(v1 + 16, 0);
    *(_QWORD *)(v1 + 80) = _NSConcreteStackBlock;
    v14 = (_QWORD *)(v1 + 80);
    v14[1] = 0x40000000;
    v14[2] = sub_1005495C4;
    v14[3] = &unk_10129BAA0;
    v14[4] = v13;
    objc_msgSend(v12, "dismissAnimated:completionHandler:", 1, v14);
    return swift_continuation_await(v11);
  }
  else
  {
    v7 = *(_QWORD *)(v1 + 208);
    *(_QWORD *)(v1 + 248) = static MainActor.shared.getter(a1);
    v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
    *(_QWORD *)(v1 + 256) = v8;
    *(_QWORD *)(v1 + 264) = v9;
    return swift_task_switch(sub_100C33DC4, v8, v9);
  }
}

uint64_t sub_100C33B1C()
{
  uint64_t v0;

  return swift_task_switch(sub_100C33B60, *(_QWORD *)(*(_QWORD *)v0 + 224), *(_QWORD *)(*(_QWORD *)v0 + 232));
}

uint64_t sub_100C33B60()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  int v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  _QWORD *v19;

  v1 = *(_BYTE *)(v0 + 305);

  if ((v1 & 1) != 0)
    goto LABEL_2;
  v5 = *(_QWORD *)(v0 + 200);
  v6 = *(_QWORD *)(v0 + 168) + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_lastPrintContentDate;
  swift_beginAccess(v6, v0 + 120, 0, 0);
  sub_1004CB7BC(v6, v5, &qword_1013E04F0);
  v7 = type metadata accessor for Date(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  v10 = v9(v5, 1, v7);
  sub_1004CB800(v5, &qword_1013E04F0);
  if (v10 != 1)
  {
    v12 = *(_QWORD *)(v0 + 192);
    sub_1004CB7BC(v6, v12, &qword_1013E04F0);
    result = v9(v12, 1, v7);
    if ((_DWORD)result == 1)
    {
      __break(1u);
      return result;
    }
    v13 = *(_QWORD *)(v0 + 192);
    v14 = Date.timeIntervalSinceNow.getter(result);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v13, v7);
    v11.n128_f64[0] = fabs(v14);
    if (v11.n128_f64[0] <= 1.5)
    {
LABEL_2:
      swift_release(*(_QWORD *)(v0 + 216));
      v2 = *(_QWORD *)(v0 + 192);
      v3 = *(_QWORD *)(v0 + 184);
      swift_task_dealloc(*(_QWORD *)(v0 + 200));
      swift_task_dealloc(v2);
      swift_task_dealloc(v3);
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
  }
  v15 = *(_QWORD *)(v0 + 184);
  static Date.now.getter(v11);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v15, 0, 1, v7);
  swift_beginAccess(v6, v0 + 144, 33, 0);
  sub_100582338(v15, v6, &qword_1013E04F0);
  swift_endAccess(v0 + 144);
  v16 = sub_100C1CAE8();
  v17 = objc_msgSend(v16, "mode");

  LODWORD(v16) = objc_msgSend(v17, "wantsToEndForNonPopoverPresentations");
  if ((_DWORD)v16)
  {
    v18 = sub_100C1CAE8();
    objc_msgSend(v18, "resetToDefaultModeAnimated:", 1);

  }
  v19 = (_QWORD *)swift_task_alloc(dword_10140B384);
  *(_QWORD *)(v0 + 296) = v19;
  *v19 = v0;
  v19[1] = sub_100C34164;
  return sub_100C341FC(*(_BYTE *)(v0 + 304), *(_QWORD *)(v0 + 176));
}

uint64_t sub_100C33DC4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = v1[21];
  v3 = static MainActor.shared.getter(a1);
  v1[34] = v3;
  v4 = swift_task_alloc(32);
  v1[35] = v4;
  *(_QWORD *)(v4 + 16) = v2;
  *(_BYTE *)(v4 + 24) = 1;
  v5 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  v1[36] = v5;
  *v5 = v1;
  v5[1] = sub_100C33E80;
  return withCheckedContinuation<A>(isolation:function:_:)(v5, v3, &protocol witness table for MainActor, 0xD000000000000048, 0x8000000101002AF0, sub_100C4A2E8, v4, (char *)&type metadata for () + 8);
}

uint64_t sub_100C33E80()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 280);
  v3 = *(_QWORD *)(*v0 + 272);
  swift_task_dealloc(*(_QWORD *)(*v0 + 288));
  swift_release(v3);
  swift_task_dealloc(v2);
  return swift_task_switch(sub_100C33EE8, *(_QWORD *)(v1 + 256), *(_QWORD *)(v1 + 264));
}

uint64_t sub_100C33EE8()
{
  _QWORD *v0;

  swift_release(v0[31]);
  return swift_task_switch(sub_100C33F20, v0[28], v0[29]);
}

uint64_t sub_100C33F20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t);
  int v6;
  __n128 v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  double v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 200);
  v2 = *(_QWORD *)(v0 + 168) + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_lastPrintContentDate;
  swift_beginAccess(v2, v0 + 120, 0, 0);
  sub_1004CB7BC(v2, v1, &qword_1013E04F0);
  v3 = type metadata accessor for Date(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  v6 = v5(v1, 1, v3);
  sub_1004CB800(v1, &qword_1013E04F0);
  if (v6 != 1)
  {
    v8 = *(_QWORD *)(v0 + 192);
    sub_1004CB7BC(v2, v8, &qword_1013E04F0);
    result = v5(v8, 1, v3);
    if ((_DWORD)result == 1)
    {
      __break(1u);
      return result;
    }
    v10 = *(_QWORD *)(v0 + 192);
    v11 = Date.timeIntervalSinceNow.getter(result);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v10, v3);
    v7.n128_f64[0] = fabs(v11);
    if (v7.n128_f64[0] <= 1.5)
    {
      swift_release(*(_QWORD *)(v0 + 216));
      v17 = *(_QWORD *)(v0 + 192);
      v18 = *(_QWORD *)(v0 + 184);
      swift_task_dealloc(*(_QWORD *)(v0 + 200));
      swift_task_dealloc(v17);
      swift_task_dealloc(v18);
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
  }
  v12 = *(_QWORD *)(v0 + 184);
  static Date.now.getter(v7);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v12, 0, 1, v3);
  swift_beginAccess(v2, v0 + 144, 33, 0);
  sub_100582338(v12, v2, &qword_1013E04F0);
  swift_endAccess(v0 + 144);
  v13 = sub_100C1CAE8();
  v14 = objc_msgSend(v13, "mode");

  LODWORD(v13) = objc_msgSend(v14, "wantsToEndForNonPopoverPresentations");
  if ((_DWORD)v13)
  {
    v15 = sub_100C1CAE8();
    objc_msgSend(v15, "resetToDefaultModeAnimated:", 1);

  }
  v16 = (_QWORD *)swift_task_alloc(dword_10140B384);
  *(_QWORD *)(v0 + 296) = v16;
  *v16 = v0;
  v16[1] = sub_100C34164;
  return sub_100C341FC(*(_BYTE *)(v0 + 304), *(_QWORD *)(v0 + 176));
}

uint64_t sub_100C34164()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 296));
  return swift_task_switch(sub_100C341B0, *(_QWORD *)(v1 + 224), *(_QWORD *)(v1 + 232));
}

uint64_t sub_100C341B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 216));
  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 184);
  swift_task_dealloc(*(_QWORD *)(v0 + 200));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100C341FC(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v3 + 120) = a2;
  *(_QWORD *)(v3 + 128) = v2;
  *(_BYTE *)(v3 + 184) = a1;
  v4 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v3 + 136) = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  *(_QWORD *)(v3 + 144) = v5;
  *(_QWORD *)(v3 + 152) = v6;
  return swift_task_switch(sub_100C3426C, v5, v6);
}

uint64_t sub_100C3426C()
{
  uint64_t v0;
  void *v1;
  _BYTE *v2;
  char *v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  id v7;
  double v8;
  double v9;
  double v10;
  double v11;
  _QWORD *v12;
  uint64_t (*v14)(void);

  v1 = *(void **)(*(_QWORD *)(v0 + 128)
                + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController);
  *(_QWORD *)(v0 + 160) = v1;
  v2 = objc_msgSend(v1, "textInputResponder");
  if (v2)
  {
    v2[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_endTextInputWhenFirstResponderResigns] = 0;

  }
  if (qword_1013DCF40 != -1)
    swift_once(&qword_1013DCF40, sub_1006D1300);
  v4 = *(_QWORD *)(v0 + 120);
  v3 = *(char **)(v0 + 128);
  v5 = *(_BYTE *)(v0 + 184);
  v6 = *(_QWORD *)(*(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_boardActor);
  v7 = objc_msgSend(v3, "topMostViewController", swift_retain(v6).n128_f64[0]);
  objc_msgSend(v1, "visibleUnscaledRect");
  sub_1006D1330(v6, v7, v4, v5, v8, v9, v10, v11);

  swift_release(v6);
  v14 = (uint64_t (*)(void))((char *)&dword_1013ED2F0 + dword_1013ED2F0);
  v12 = (_QWORD *)swift_task_alloc(unk_1013ED2F4);
  *(_QWORD *)(v0 + 168) = v12;
  *v12 = v0;
  v12[1] = sub_100C343C4;
  return v14();
}

uint64_t sub_100C343C4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 168);
  *(_QWORD *)(*v1 + 176) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_100C34488;
  else
    v4 = sub_100C34424;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 144), *(_QWORD *)(v2 + 152));
}

uint64_t sub_100C34424()
{
  uint64_t v0;
  _BYTE *v1;

  v1 = objc_msgSend(*(id *)(v0 + 160), "textInputResponder", swift_release(*(_QWORD *)(v0 + 136)).n128_f64[0]);
  if (v1)
  {
    v1[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_endTextInputWhenFirstResponderResigns] = 1;

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100C34488()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t inited;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;

  swift_release(*(_QWORD *)(v0 + 136));
  if (qword_1013DD6B8 != -1)
    swift_once(&qword_1013DD6B8, sub_100A00A6C);
  v1 = *(_QWORD *)(v0 + 176);
  swift_beginAccess(&static OS_os_log.crlDefault, v0 + 88, 0, 0);
  v2 = (void *)static OS_os_log.crlDefault;
  v3 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v3, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_QWORD *)(v0 + 112) = v1;
  v5 = v2;
  swift_errorRetain(v1);
  v6 = sub_1004B804C(&qword_1013E0210);
  v7 = String.init<A>(describing:)(v0 + 112, v6);
  v9 = v8;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v10 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v10;
  *(_QWORD *)(inited + 32) = v7;
  *(_QWORD *)(inited + 40) = v9;
  v11 = static os_log_type_t.error.getter(v10);
  sub_100A06EBC((uint64_t)v5, &_mh_execute_header, v11, "Error trying to show print UI. %@", 33, 2, inited);
  swift_setDeallocating(inited);
  v12 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v12);

  swift_errorRelease(v1);
  v13 = objc_msgSend(*(id *)(v0 + 160), "textInputResponder");
  if (v13)
  {
    v13[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_endTextInputWhenFirstResponderResigns] = 1;

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_100C34628()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t Strong;
  void *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unsigned int v25;
  id v26;
  id v27;
  uint64_t v29;
  uint64_t v30;
  char v31[24];

  v1 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UUID(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CRLBoardViewModelMetadata(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardLibrary);
  if (Strong)
  {
    v14 = (void *)Strong;
    v30 = v0;
    v15 = *(char **)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                   + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
    v16 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
    v17 = *(_QWORD *)&v15[OBJC_IVAR____TtC8Freeform8CRLBoard_data];
    v18 = v17 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess(v17 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v31, 0, 0);
    sub_1004B8460(v18, (uint64_t)v3, type metadata accessor for CRLBoardCRDTData);
    v19 = v15;
    swift_retain(v17);
    v20 = sub_1004B804C(&qword_1013E1A80);
    CRRegister.wrappedValue.getter(v20);
    sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLBoardCRDTData);
    swift_release(v17);
    v21 = (uint64_t *)(*(_QWORD *)&v15[v16] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
    v22 = *v21;
    v23 = v21[1];
    swift_bridgeObjectRetain(v23);
    sub_10067AFD0((uint64_t)v6, v22, v23, (uint64_t)v9);

    sub_100C9F8F8((uint64_t)v9, (uint64_t)v12);
    sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLBoardIdentifier);

    LOBYTE(v16) = *v12;
    sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLBoardViewModelMetadata);
    v24 = v16 ^ 1u;
    v0 = v30;
  }
  else
  {
    LOBYTE(v24) = 1;
  }
  v25 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController), "documentIsSharedReadOnly");
  v26 = (id)(v25 ^ 1);
  if ((v25 & 1) == 0 && (v24 & 1) == 0)
  {
    v27 = sub_100C1CD38();
    v26 = objc_msgSend(v27, "isEnabled");

  }
  return v26;
}

void sub_100C34918(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[113];

  v4[0] = "\b";
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[2] = &unk_100F2F118;
  v4[3] = "\b";
  v4[4] = "\b";
  v4[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[7] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[8] = &unk_100F2F130;
  v4[9] = "\b";
  v4[10] = "\b";
  v4[11] = "\b";
  v4[12] = &unk_100F2F148;
  v4[13] = &unk_100F2F148;
  v4[14] = &unk_100F2F148;
  v4[15] = "\b";
  v4[16] = "\b";
  v4[17] = "\b";
  v4[18] = &unk_100F2F148;
  v4[19] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[20] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[21] = "\b";
  v4[22] = &unk_100F2F160;
  v4[23] = "\b";
  v4[24] = "\b";
  v4[25] = "\b";
  v4[26] = "\b";
  v4[27] = &unk_100F2F178;
  v4[30] = &unk_100F2F190;
  v4[31] = &unk_100F2F190;
  v4[28] = &unk_100F2F178;
  v4[29] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[32] = &unk_100F2F1A8;
  v4[33] = "\b";
  v4[34] = "\b";
  v4[35] = "\b";
  v4[36] = "\b";
  v4[37] = "\b";
  v4[38] = "\b";
  v4[39] = "\b";
  v4[40] = "\b";
  v4[41] = "\b";
  v4[42] = "\b";
  v4[43] = "\b";
  v4[44] = "\b";
  v4[45] = "\b";
  v4[46] = "\b";
  v4[47] = &unk_100F2F1C0;
  v4[48] = &unk_100F2F118;
  v4[49] = "\b";
  v4[50] = &unk_100F2F118;
  v4[51] = &unk_100F2F118;
  v4[52] = "\b";
  v4[53] = "\b";
  v4[54] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[55] = "\b";
  v4[56] = "\b";
  v4[57] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[58] = "\b";
  v4[59] = "\b";
  v4[60] = "\b";
  v4[61] = "\b";
  v4[62] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[63] = &unk_100F2F148;
  v4[64] = "\b";
  v4[65] = "\b";
  v4[66] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[67] = "\b";
  v4[68] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[69] = "\b";
  v4[70] = "\b";
  v4[71] = &unk_100F2F1D8;
  v4[72] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[73] = "\b";
  v4[74] = &unk_100F2F118;
  v4[75] = "\b";
  v4[76] = "\b";
  v4[77] = "\b";
  v4[78] = "\b";
  v4[79] = "\b";
  v4[80] = "\b";
  v4[81] = "\b";
  v4[82] = "\b";
  v4[83] = &unk_100F2F148;
  v4[84] = &unk_100F2F1F0;
  v4[85] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[86] = "\b";
  v4[87] = &unk_100F2F118;
  v4[88] = &unk_100F2F208;
  v4[89] = "\b";
  v4[90] = (char *)&value witness table for () + 64;
  v4[91] = (char *)&value witness table for () + 64;
  v4[92] = (char *)&value witness table for () + 64;
  v4[93] = (char *)&value witness table for () + 64;
  v4[94] = (char *)&value witness table for () + 64;
  v4[95] = (char *)&value witness table for () + 64;
  v4[96] = (char *)&value witness table for () + 64;
  v4[97] = (char *)&value witness table for () + 64;
  v4[98] = "\b";
  v4[99] = "\b";
  v4[100] = "\b";
  v4[101] = &unk_100F2F148;
  v4[102] = &unk_100F2F148;
  v4[103] = "\b";
  v4[104] = "\b";
  v4[105] = "\b";
  v4[106] = "\b";
  v4[107] = &unk_100F2F220;
  v4[108] = "\b";
  v4[109] = &unk_100F2F148;
  v4[110] = &unk_100F2F238;
  v4[111] = &unk_100F2F238;
  sub_10056ACC0(319);
  if (v3 <= 0x3F)
  {
    v4[112] = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 113, v4, a1 + 80);
  }
}

void sub_100C34D3C(void *a1)
{
  char *v1;
  id v3;
  void *v4;
  id v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  char *v14;
  char *v15;
  id v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  id v37;
  void *v38;
  id v39;
  id v40;
  id v41;
  id v42;
  void *v43;
  void *v44;
  id v45;
  id v46;
  uint64_t v47;
  Class isa;
  void *v49;
  char *v50;
  Class v51;
  uint64_t v52;
  void *v53;
  id v54;
  id v55;
  void *v56;
  id v57;
  id v58;
  Swift::String v59;
  Class v60;
  void *v61;
  id v62;
  id v63;
  double v64;
  double v65;
  id v66;
  id v67;
  uint64_t v68;
  _QWORD *v69;
  char *v70;
  char *v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  UIMenuElementSize preferredElementSize;
  Swift::OpaquePointer children;
  UIImage_optional v77;

  v3 = sub_100C1CAE8();
  objc_msgSend(v3, "resetToDefaultModeAnimated:", 1);

  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasViewController], "leaveQuickSelectModeIfNeeded");
  v4 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_compactScenesNavigatorViewController];
  if (v4)
    objc_msgSend(v4, "dismissViewControllerAnimated:completion:", 1, 0);
  v5 = objc_msgSend(a1, "collaboratorColorForType:", 2);
  objc_msgSend(v1, "rectForBorder");
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v14 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLFollowBorderHighlightView());
  v15 = v1;
  v16 = sub_100C48404(v15, v5, v14, 8.0, v7, v9, v11, v13);
  v17 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_followBorderHighlightView;
  v18 = *(void **)&v15[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_followBorderHighlightView];
  *(_QWORD *)&v15[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_followBorderHighlightView] = v16;

  v19 = *(void **)&v15[v17];
  if (!v19)
    goto LABEL_10;
  v20 = v19;
  objc_msgSend(v20, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v21 = objc_msgSend(v15, "view");
  if (!v21)
  {
    __break(1u);
    goto LABEL_19;
  }
  v22 = v21;
  objc_msgSend(v21, "addSubview:", v20);

  v23 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v24 = swift_allocObject(v23, 64, 7);
  *(_OWORD *)(v24 + 16) = xmmword_100EF7310;
  v25 = objc_msgSend(v20, "topAnchor");
  v26 = objc_msgSend(v15, "view");
  if (!v26)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v27 = v26;
  v28 = objc_msgSend(v26, "safeAreaLayoutGuide");

  v29 = objc_msgSend(v28, "topAnchor");
  v30 = objc_msgSend(v25, "constraintEqualToAnchor:", v29);

  *(_QWORD *)(v24 + 32) = v30;
  v31 = objc_msgSend(v20, "leadingAnchor");
  v32 = objc_msgSend(v15, "view");
  if (!v32)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v33 = v32;
  v34 = objc_msgSend(v32, "leadingAnchor");

  v35 = objc_msgSend(v31, "constraintEqualToAnchor:", v34);
  *(_QWORD *)(v24 + 40) = v35;
  v36 = objc_msgSend(v20, "trailingAnchor");
  v37 = objc_msgSend(v15, "view");
  if (!v37)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v38 = v37;
  v39 = objc_msgSend(v37, "trailingAnchor");

  v40 = objc_msgSend(v36, "constraintEqualToAnchor:", v39);
  *(_QWORD *)(v24 + 48) = v40;
  v41 = objc_msgSend(v20, "bottomAnchor");
  v42 = objc_msgSend(v15, "view");
  if (!v42)
  {
LABEL_22:
    __break(1u);
    return;
  }
  v43 = v42;
  v44 = (void *)objc_opt_self(NSLayoutConstraint);
  v45 = objc_msgSend(v43, "bottomAnchor");

  v46 = objc_msgSend(v41, "constraintEqualToAnchor:", v45);
  *(_QWORD *)(v24 + 56) = v46;
  children._rawValue = (void *)v24;
  specialized Array._endMutation()(v47);
  sub_1004B8930(0, (unint64_t *)&qword_1013E1760, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v44, "activateConstraints:", isa, swift_bridgeObjectRelease().n128_f64[0]);

LABEL_10:
  v49 = *(void **)&v15[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasZoomControlViewController];
  if (v49)
  {
    v50 = v49;
    v51 = sub_10056BDC4();
    v52 = OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_menu;
    v53 = *(void **)&v50[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_menu];
    *(_QWORD *)&v50[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_menu] = v51;

    v54 = sub_10056BA4C();
    v55 = *(id *)&v50[v52];
    objc_msgSend(v54, "setMenu:", v55);

  }
  v56 = *(void **)&v15[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardControlsViewController];
  if (v56)
  {
    v57 = v56;
    sub_10085FF4C();

  }
  v58 = sub_100C1CDD8();
  sub_1004B8930(0, &qword_1013E1090, UIMenu_ptr);
  preferredElementSize = sub_10052C750();
  v59._countAndFlagsBits = 0;
  v59._object = (void *)0xE000000000000000;
  v77.value.super.isa = 0;
  v77.is_nil = 0;
  v60 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v59, (Swift::String_optional)0, v77, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, children).super.super.isa;
  objc_msgSend(v58, "setMenu:", v60);

  v61 = *(void **)&v15[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController];
  v62 = *(id *)&v15[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_statusHUDManager];
  v63 = a1;
  objc_msgSend(v61, "unobscuredScrollViewFrame");
  v65 = v64;
  v66 = objc_retain(*(id *)(*(_QWORD *)&v15[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                          + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator));
  v67 = sub_100700E5C();

  v68 = swift_allocObject(&unk_10129C2C0, 24, 7);
  *(_QWORD *)(v68 + 16) = v15;
  v69 = objc_allocWithZone((Class)type metadata accessor for CRLPersistentFollowHUDController(0));
  v70 = v15;
  v71 = sub_100C48230(v62, v63, 0, v67, (uint64_t)sub_100C4EEF4, v68, v69, v65);
  swift_unknownObjectWeakAssign(&v71[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_crlaxViewControllerForLCVInteractions], v70);
  v72 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_followHUD;
  v73 = *(void **)&v70[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_followHUD];
  if (v73)
  {
    swift_unknownObjectRetain(*(_QWORD *)&v70[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_followHUD]);
    sub_100C473D8(v73, v71, (uint64_t)v62);
    swift_unknownObjectRelease(v73);
  }
  else
  {
    sub_100C47A60(v71, (uint64_t)v62, (uint64_t (*)(uint64_t *))sub_100C4FA7C, (uint64_t (*)(uint64_t *))sub_100C4FA94, (uint64_t)&unk_10129C2E8, (uint64_t)sub_100C4FAAC, (uint64_t)&unk_10129C300, 0.0);
  }

  v74 = *(_QWORD *)&v70[v72];
  *(_QWORD *)&v70[v72] = v71;

  swift_unknownObjectRelease(v74);
}

void sub_100C353DC(uint64_t a1)
{
  void *v1;
  id v2;
  uint64_t KeyPath;
  uint64_t v4;
  id v5;
  __n128 v6;
  uint64_t v7;
  id v8[5];

  v1 = *(void **)(*(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator);
  v8[3] = &type metadata for CRLFeatureFlags;
  v8[4] = (id)sub_1004DB6DC();
  LOBYTE(v8[0]) = 11;
  v2 = v1;
  LOBYTE(v1) = isFeatureEnabled(_:)(v8);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v8);
  if ((v1 & 1) != 0)
  {
    KeyPath = swift_getKeyPath(byte_100F2F3B8);
    v4 = swift_getKeyPath(byte_100F2F3E0);
    static Published.subscript.getter(v8, v2, KeyPath, v4);
    swift_release(KeyPath);
    swift_release(v4);
    if (v8[0])
    {

      if (qword_1013DD7C8 != -1)
        swift_once(&qword_1013DD7C8, sub_100A03AC0);
      swift_beginAccess(&static OS_os_log.crlFollow, v8, 0, 0);
      v5 = (id)static OS_os_log.crlFollow;
      v7 = static os_log_type_t.default.getter(v6);
      sub_100A06EBC((uint64_t)v5, &_mh_execute_header, v7, "Calling didEndFollowing because of the public endFollowSessionForLocalParticipant method was called", 99, 2, (uint64_t)_swiftEmptyArrayStorage);

      sub_1006F534C(0);
    }
  }

}

double sub_100C35590(void *a1, char a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  char *v10;
  Class v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  Swift::String v19;
  Class isa;
  double result;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  id v29;
  double v30;
  double v31;
  uint64_t v32;
  _QWORD *v33;
  id v34;
  char *v35;
  char *v36;
  void *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  id v41;
  void *v42;
  uint64_t v43;
  UIMenuElementSize preferredElementSize;
  Swift::OpaquePointer v45;
  UIImage_optional v46;

  v3 = v2;
  v6 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_followBorderHighlightView;
  v7 = *(void **)&v3[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_followBorderHighlightView];
  if (v7)
  {
    objc_msgSend(v7, "removeFromSuperview");
    v8 = *(void **)&v3[v6];
  }
  else
  {
    v8 = 0;
  }
  *(_QWORD *)&v3[v6] = 0;

  v9 = *(void **)&v3[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasZoomControlViewController];
  if (v9)
  {
    v10 = v9;
    v11 = sub_10056BDC4();
    v12 = OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_menu;
    v13 = *(void **)&v10[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_menu];
    *(_QWORD *)&v10[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_menu] = v11;

    v14 = sub_10056BA4C();
    v15 = *(id *)&v10[v12];
    objc_msgSend(v14, "setMenu:", v15);

  }
  v16 = *(void **)&v3[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardControlsViewController];
  if (v16)
  {
    v17 = v16;
    sub_10085FF4C();

  }
  v18 = sub_100C1CDD8();
  sub_1004B8930(0, &qword_1013E1090, UIMenu_ptr);
  preferredElementSize = sub_10052C750();
  v19._countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  v46.value.super.isa = 0;
  v46.is_nil = 0;
  isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v19, (Swift::String_optional)0, v46, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v45).super.super.isa;
  objc_msgSend(v18, "setMenu:", isa);

  v22 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_followHUD;
  v23 = *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_followHUD];
  if (v23)
  {
    v24 = *(void **)&v3[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_statusHUDManager];
    if ((a2 & 1) != 0 && a1)
    {
      v25 = *(void **)&v3[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController];
      v26 = v24;
      v27 = a1;
      v28 = v26;
      v29 = v27;
      objc_msgSend(v25, "unobscuredScrollViewFrame", swift_unknownObjectRetain(v23).n128_f64[0]);
      v31 = v30;
      v32 = swift_allocObject(&unk_10129C248, 32, 7);
      *(_QWORD *)(v32 + 16) = v3;
      *(_QWORD *)(v32 + 24) = v29;
      v33 = objc_allocWithZone((Class)type metadata accessor for CRLTransientRefollowHUDController(0));
      v34 = v29;
      v35 = v3;
      v36 = sub_100C48578(v28, v34, 0, (uint64_t)sub_100C4EEE8, v32, v33, v31);
      swift_unknownObjectRetain(v23);
      sub_100C4771C(v37, v36, (uint64_t)v28);
      swift_unknownObjectRelease(v23);
      v38 = *(_QWORD *)&v3[v22];
      *(_QWORD *)&v3[v22] = v36;
      v39 = v36;
      swift_unknownObjectRelease(v38);
      CRLAccessibilityPostLayoutChangedNotification(*(void **)&v39[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_hudView]);
      swift_unknownObjectWeakAssign(&v39[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_crlaxViewControllerForLCVInteractions], v35);

      v40 = v23;
    }
    else
    {
      v41 = v24;
      swift_unknownObjectRetain(v23);
      CRLStatusHUDManager.hide(hudController:)(v42);
      v43 = *(_QWORD *)&v3[v22];
      *(_QWORD *)&v3[v22] = 0;

      swift_unknownObjectRelease(v23);
      v40 = v43;
    }
    *(_QWORD *)&result = swift_unknownObjectRelease(v40).n128_u64[0];
  }
  return result;
}

void sub_100C35894(uint64_t a1, void *a2)
{
  id v3;

  v3 = objc_retain(*(id *)(*(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                         + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator));
  sub_1006F63B4(a2, 1);

}

void sub_100C35964(char *a1, uint64_t a2, void *a3, char a4)
{
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  char *v11;
  double v12;
  double v13;
  _QWORD *v14;
  char *v15;

  v6 = *(void **)&a1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_statusHUDManager];
  v7 = *(void **)&a1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController];
  v8 = a3;
  v9 = v6;
  v10 = v8;
  v11 = a1;
  objc_msgSend(v7, "unobscuredScrollViewFrame");
  v13 = v12;
  v14 = objc_allocWithZone((Class)type metadata accessor for CRLTransientStartEndFollowHUDController(0));
  v15 = sub_100C487D4(v9, v10, 0, a4, v14, v13);
  sub_100C47A60(v15, (uint64_t)v9, (uint64_t (*)(uint64_t *))sub_100C4FA7C, (uint64_t (*)(uint64_t *))sub_100C4FA94, (uint64_t)&unk_10129C1F8, (uint64_t)sub_100C4FAAC, (uint64_t)&unk_10129C210, 0.0);

}

void sub_100C35A74(char *a1, uint64_t a2, void *a3, char a4)
{
  void *v7;
  id v8;
  char *v9;
  double v10;
  double v11;
  _QWORD *v12;
  char *v13;

  v7 = *(void **)&a1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController];
  v8 = *(id *)&a1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_statusHUDManager];
  v9 = a1;
  objc_msgSend(v7, "unobscuredScrollViewFrame");
  v11 = v10;
  v12 = objc_allocWithZone((Class)type metadata accessor for CRLTransientStartEndFollowHUDController(0));
  v13 = sub_100C489D8(v8, a3, 0, a4, v12, v11);
  sub_100C47A60(v13, (uint64_t)v8, (uint64_t (*)(uint64_t *))sub_100C4FA7C, (uint64_t (*)(uint64_t *))sub_100C4FA94, (uint64_t)&unk_10129C1F8, (uint64_t)sub_100C4FAAC, (uint64_t)&unk_10129C210, 0.0);

}

void sub_100C35B64(unint64_t a1)
{
  void *v1;
  NSString v3;
  NSString v4;
  id v5;
  NSString v6;
  NSString v7;
  id v8;
  NSString v9;
  id v10;
  id v11;

  sub_100BBE2BC(a1);
  sub_100BBE3DC(a1);
  v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v3, v4, 1);

  v5 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v6 = String._bridgeToObjectiveC()();
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend(v5, "localizedStringForKey:value:table:", v6, v7, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v10 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v9, 0, 0);

  objc_msgSend(v11, "addAction:", v10);
  sub_100CE39D8(v11);
  objc_msgSend(v1, "presentViewController:animated:completion:", v11, 1, 0);

}

void sub_100C35D74(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v5;
  id v6;
  NSString v7;
  NSString v8;
  id v9;
  NSString v10;
  NSString v11;
  id v12;
  NSString v13;
  NSString v14;
  id v15;
  NSString v16;
  id v17;
  id v18;

  v5 = (void *)objc_opt_self(NSBundle);
  v6 = objc_msgSend(v5, "mainBundle");
  v7 = String._bridgeToObjectiveC()();
  v8 = String._bridgeToObjectiveC()();
  v9 = objc_msgSend(v6, "localizedStringForKey:value:table:", v7, v8, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  sub_100BBE530(a1, a2);
  v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v18 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v10, v11, 1);

  v12 = objc_msgSend(v5, "mainBundle");
  v13 = String._bridgeToObjectiveC()();
  v14 = String._bridgeToObjectiveC()();
  v15 = objc_msgSend(v12, "localizedStringForKey:value:table:", v13, v14, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v17 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v16, 0, 0);

  objc_msgSend(v18, "addAction:", v17);
  sub_100CE39D8(v18);
  objc_msgSend(v2, "presentViewController:animated:completion:", v18, 1, 0);

}

void sub_100C3603C()
{
  void *v0;
  void *v1;
  id v2;
  NSString v3;
  NSString v4;
  id v5;
  id v6;
  NSString v7;
  NSString v8;
  id v9;
  NSString v10;
  NSString v11;
  id v12;
  NSString v13;
  NSString v14;
  id v15;
  NSString v16;
  id v17;
  id v18;

  v1 = (void *)objc_opt_self(NSBundle);
  v2 = objc_msgSend(v1, "mainBundle");
  v3 = String._bridgeToObjectiveC()();
  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend(v2, "localizedStringForKey:value:table:", v3, v4, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v6 = objc_msgSend(v1, "mainBundle");
  v7 = String._bridgeToObjectiveC()();
  v8 = String._bridgeToObjectiveC()();
  v9 = objc_msgSend(v6, "localizedStringForKey:value:table:", v7, v8, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v18 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v10, v11, 1);

  v12 = objc_msgSend(v1, "mainBundle");
  v13 = String._bridgeToObjectiveC()();
  v14 = String._bridgeToObjectiveC()();
  v15 = objc_msgSend(v12, "localizedStringForKey:value:table:", v13, v14, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v17 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v16, 0, 0);

  objc_msgSend(v18, "addAction:", v17);
  sub_100CE39D8(v18);
  objc_msgSend(v0, "presentViewController:animated:completion:", v18, 1, 0);

}

void *sub_100C363F8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  NSString v11;
  double v12;
  void *v13;
  _QWORD *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  _QWORD *v20;
  void *v21;
  _QWORD *v22;
  id v23;
  id v24;
  id v25;
  char *v26;
  id v27;
  void *v28;
  void **aBlock;
  uint64_t v31;
  void *v32;
  void *v33;
  void (*v34)(int);
  _QWORD *v35;

  v11 = String._bridgeToObjectiveC()();
  if (a4)
  {
    v34 = (void (*)(int))a4;
    v35 = (_QWORD *)a5;
    aBlock = _NSConcreteStackBlock;
    v31 = *(_QWORD *)"";
    v32 = sub_1005D2FC0;
    v33 = &unk_10129C0D0;
    v13 = _Block_copy(&aBlock);
    v14 = v35;
    swift_retain(a5);
    *(_QWORD *)&v12 = swift_release(v14).n128_u64[0];
  }
  else
  {
    v13 = 0;
  }
  v15 = objc_msgSend(v5, "beginModalOperationWithLocalizedMessage:progress:cancelHandler:", v11, a3, v13, v12);
  _Block_release(v13);

  if (v15)
  {
    v16 = objc_opt_self(CRLiOSWindowIgnoreUserInteractionSafeWrapper);
    v17 = swift_dynamicCastObjCClass(v15, v16);
    if (v17)
    {
      v18 = (void *)v17;
      if (!a3)
        return v18;
      goto LABEL_10;
    }
    swift_unknownObjectRelease(v15);
  }
  sub_100757E04(&_mh_execute_header, (uint64_t)"beginModalOperation(withPresentedLocalizedMessage:progress:cancelHandler:)", 74, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 2752, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"beginModalOperation(withPresentedLocalizedMessage:progress:cancelHandler:)", 74, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2u, 2752, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  v18 = 0;
  if (a3)
  {
LABEL_10:
    v19 = (void *)objc_opt_self(NSTimer);
    v20 = (_QWORD *)swift_allocObject(&unk_10129C090, 72, 7);
    v20[2] = a3;
    v20[3] = v5;
    v20[4] = a1;
    v20[5] = a2;
    v20[6] = a4;
    v20[7] = a5;
    v20[8] = v18;
    v34 = sub_100C4EEC0;
    v35 = v20;
    aBlock = _NSConcreteStackBlock;
    v31 = *(_QWORD *)"";
    v32 = sub_1004C6194;
    v33 = &unk_10129C0A8;
    v21 = _Block_copy(&aBlock);
    v22 = v35;
    v23 = a3;
    sub_1004C0F54(a4, a5);
    v24 = v18;
    v25 = v23;
    v26 = v5;
    swift_bridgeObjectRetain(a2);
    swift_release(v22);
    v27 = objc_msgSend(v19, "scheduledTimerWithTimeInterval:repeats:block:", 1, v21, 1.0);
    _Block_release(v21);
    v28 = *(void **)&v26[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_progressTimer];
    *(_QWORD *)&v26[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_progressTimer] = v27;

  }
  return v18;
}

void sub_100C366B4(int a1, id a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  double v14;
  double v15;
  double v16;
  double v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  NSString v22;
  void *v23;
  id v24;
  void *v25;
  id v26;
  void *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  id v31;
  void **v32;
  uint64_t v33;
  double (*v34)(uint64_t);
  void *v35;
  void *v36;
  uint64_t v37;

  objc_msgSend(a2, "value");
  if (v14 >= 0.0)
  {
    objc_msgSend(a2, "value");
    v16 = v15;
    objc_msgSend(a2, "maxValue");
    if (v16 < v17)
    {
      objc_msgSend(*(id *)(a3 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_progressTimer), "invalidate");
      if (a6)
      {
        v18 = swift_allocObject(&unk_10129C1A8, 32, 7);
        *(_QWORD *)(v18 + 16) = a6;
        *(_QWORD *)(v18 + 24) = a7;
        v19 = sub_1005B71BC;
      }
      else
      {
        v18 = 0;
        v19 = SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
      }
      v20 = swift_allocObject(&unk_10129C108, 32, 7);
      *(_QWORD *)(v20 + 16) = v19;
      *(_QWORD *)(v20 + 24) = v18;
      sub_1004C0F54(a6, a7);
      swift_bridgeObjectRetain(a5);
      v21 = a2;
      v22 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      v36 = sub_10054E858;
      v37 = v20;
      v32 = _NSConcreteStackBlock;
      v33 = *(_QWORD *)"";
      v34 = sub_1005D2FC0;
      v35 = &unk_10129C120;
      v23 = _Block_copy(&v32);
      v24 = objc_msgSend((id)objc_opt_self(CRLiOSDeterminateProgressViewController), "progressViewControllerWithTitle:crlProgress:cancelHandler:", v22, v21, v23);

      _Block_release(v23);
      swift_release(v37);
      v25 = *(void **)(a3 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_progressViewController);
      *(_QWORD *)(a3 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_progressViewController) = v24;
      v26 = v24;

      v27 = *(void **)(a3 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasViewController);
      v28 = swift_allocObject(&unk_10129C158, 24, 7);
      *(_QWORD *)(v28 + 16) = a8;
      v36 = sub_100C4EED4;
      v37 = v28;
      v32 = _NSConcreteStackBlock;
      v33 = *(_QWORD *)"";
      v34 = sub_1005D2FC0;
      v35 = &unk_10129C170;
      v29 = _Block_copy(&v32);
      v30 = v37;
      v31 = a8;
      objc_msgSend(v27, "presentViewController:animated:completion:", v26, 1, v29, swift_release(v30).n128_f64[0]);
      _Block_release(v29);

    }
  }
}

void sub_100C36A00(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void *v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;

  v2 = v1;
  if (a1
    && (v4 = objc_opt_self(CRLiOSWindowIgnoreUserInteractionSafeWrapper),
        (v5 = (void *)swift_dynamicCastObjCClass(a1, v4)) != 0))
  {
    objc_msgSend(v5, "endIgnoringUserInteractionSafely", swift_unknownObjectRetain(a1).n128_f64[0]);
    if (!*(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                    + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_suspendResumeCoordinator))
    {
      __break(1u);
      return;
    }
    sub_10066B1AC(0xD000000000000012, 0x8000000101003030);
    *(_QWORD *)&v6 = swift_unknownObjectRelease(a1).n128_u64[0];
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"endModalOperation(with:)", 24, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 2777, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"endModalOperation(with:)", 24, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2u, 2777, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  }
  v7 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_progressTimer;
  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_progressTimer), "invalidate", v6);
  v8 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_progressViewController;
  v9 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_progressViewController);
  if (v9)
    objc_msgSend(v9, "dismissViewControllerAnimated:completion:", 1, 0);
  v10 = *(void **)(v2 + v7);
  *(_QWORD *)(v2 + v7) = 0;

  v11 = *(void **)(v2 + v8);
  *(_QWORD *)(v2 + v8) = 0;

}

BOOL sub_100C36CC4()
{
  char *v0;
  char *v1;
  id v2;
  uint64_t v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  char v9;
  void *Strong;
  _BOOL8 v11;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];
  uint64_t v16;

  v1 = v0;
  if ((objc_msgSend(v0, "isInDrawingMode") & 1) != 0)
  {
    if (qword_1013DD6B8 != -1)
      swift_once(&qword_1013DD6B8, sub_100A00A6C);
    swift_beginAccess(&static OS_os_log.crlDefault, v15, 0, 0);
    v2 = (id)static OS_os_log.crlDefault;
    v3 = static os_log_type_t.info.getter();
    v4 = "attempting to present tip whilst in drawing mode!";
    v5 = (uint64_t)v2;
    v6 = 49;
LABEL_10:
    sub_100A06EBC(v5, &_mh_execute_header, v3, v4, v6, 2, (uint64_t)_swiftEmptyArrayStorage);

    return 0;
  }
  v7 = sub_100B7FDBC();
  if (v7)
  {
    v8 = v7;
    v9 = sub_100903BFC();

    if ((v9 & 1) != 0)
    {
      if (qword_1013DD6B8 != -1)
        swift_once(&qword_1013DD6B8, sub_100A00A6C);
      swift_beginAccess(&static OS_os_log.crlDefault, v15, 0, 0);
      v2 = (id)static OS_os_log.crlDefault;
      v3 = static os_log_type_t.info.getter();
      v4 = "attempting to present tip whilst welcome controller is visible";
      v5 = (uint64_t)v2;
      v6 = 62;
      goto LABEL_10;
    }
  }
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_tipPopoverController]);

  if (!Strong)
  {
    v13 = (uint64_t)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_currentlyPresentedTip];
    swift_beginAccess(v13, &v14, 0, 0);
    sub_1004CB7BC(v13, (uint64_t)v15, (uint64_t *)&unk_1013E1C40);
    v11 = v16 == 0;
    sub_1004CB800((uint64_t)v15, (uint64_t *)&unk_1013E1C40);
    return v11;
  }
  return 0;
}

void sub_100C36EA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ValueMetadata *a5, unint64_t a6)
{
  void *v6;
  _QWORD *Description;
  uint64_t v12;
  char v13;
  void *v14;
  uint64_t v15;
  uint64_t inited;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  BOOL v24;
  char *v25;
  char *v26;
  void (*v27)(char *, uint64_t, ValueMetadata *);
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  char *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  char *v43;
  id v44;
  id v45;
  uint64_t v46;
  char *v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD aBlock[3];
  ValueMetadata *v52;
  unint64_t v53;
  char *v54;
  char v55[72];
  char v56[32];

  v49 = a2;
  v50 = a3;
  Description = a5[-1].Description;
  v12 = Description[8];
  __chkstk_darwin(a1);
  v52 = &type metadata for CRLFeatureFlags;
  v53 = sub_1004DB6DC();
  LOBYTE(aBlock[0]) = 0;
  v13 = isFeatureEnabled(_:)(aBlock);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(aBlock);
  if ((v13 & 1) != 0)
  {
    v47 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    v48 = v6;
    v46 = a4;
    if (qword_1013DD6B8 != -1)
      swift_once(&qword_1013DD6B8, sub_100A00A6C);
    swift_beginAccess(&static OS_os_log.crlDefault, v56, 0, 0);
    v14 = (void *)static OS_os_log.crlDefault;
    v15 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v15, v55);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v17 = v14;
    v18 = dispatch thunk of Tip.id.getter(a5, a6);
    v20 = v19;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = sub_1004CFC2C();
    *(_QWORD *)(inited + 32) = v18;
    *(_QWORD *)(inited + 40) = v20;
    v21 = static os_log_type_t.info.getter();
    sub_100A06EBC((uint64_t)v17, &_mh_execute_header, v21, "presenting tip from a barButtonItem: %{public}@", 47, 2, inited);
    swift_setDeallocating(inited);
    v22 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v22);

    v23 = v48;
    v24 = sub_100C36CC4();
    v25 = v47;
    if (v24)
    {
      type metadata accessor for TipUIPopoverViewController(0);
      v52 = a5;
      v53 = a6;
      v26 = (char *)sub_10050D1B0(aBlock);
      v27 = (void (*)(char *, uint64_t, ValueMetadata *))Description[2];
      v27(v26, a1, a5);
      v28 = v49;
      swift_unknownObjectRetain(v49);
      v29 = (void *)TipUIPopoverViewController.__allocating_init(_:sourceItem:actionHandler:)(aBlock, v28, SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:), 0);
      v30 = swift_unknownObjectRetain(v23);
      TipUIPopoverViewController.presentationDelegate.setter(v30);
      v27(v25, a1, a5);
      v31 = *((unsigned __int8 *)Description + 80);
      v32 = v23;
      v33 = (v31 + 48) & ~v31;
      v34 = v31 | 7;
      v35 = v12 + v33 + 7;
      v36 = a6;
      v37 = v35 & 0xFFFFFFFFFFFFFFF8;
      v38 = (char *)swift_allocObject(&unk_10129CB58, (v35 & 0xFFFFFFFFFFFFFFF8) + 16, v34);
      *((_QWORD *)v38 + 2) = a5;
      *((_QWORD *)v38 + 3) = v36;
      *((_QWORD *)v38 + 4) = v32;
      *((_QWORD *)v38 + 5) = v29;
      ((void (*)(char *, char *, ValueMetadata *))Description[4])(&v38[v33], v25, a5);
      v39 = (uint64_t *)&v38[v37];
      v40 = v50;
      v41 = v46;
      *v39 = v50;
      v39[1] = v41;
      v53 = (unint64_t)sub_100C4F958;
      v54 = v38;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(_QWORD *)"";
      aBlock[2] = sub_1005D2FC0;
      v52 = (ValueMetadata *)&unk_10129CB70;
      v42 = _Block_copy(aBlock);
      v43 = v54;
      v44 = v32;
      v45 = v29;
      sub_1004C0F54(v40, v41);
      objc_msgSend(v44, "presentViewController:animated:completion:", v45, 1, v42, swift_release(v43).n128_f64[0]);

      _Block_release(v42);
    }
  }
}

uint64_t sub_100C371F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v12;
  uint64_t v13;
  uint64_t result;
  _BYTE v15[24];
  _QWORD v16[5];

  swift_unknownObjectWeakAssign(a1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_tipPopoverController, a2);
  v16[3] = a6;
  v16[4] = a7;
  v12 = sub_10050D1B0(v16);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 16))(v12, a3, a6);
  v13 = a1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_currentlyPresentedTip;
  swift_beginAccess(a1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_currentlyPresentedTip, v15, 33, 0);
  sub_100582338((uint64_t)v16, v13, (uint64_t *)&unk_1013E1C40);
  result = swift_endAccess(v15);
  if (a4)
    return a4(result);
  return result;
}

void sub_100C372B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v5;
  char v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t inited;
  unint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  id v28;
  _QWORD *v29;
  void *v30;
  _QWORD *v31;
  id v32;
  id v33;
  uint64_t v34;
  _QWORD aBlock[3];
  ValueMetadata *v36;
  unint64_t v37;
  _QWORD *v38;
  char v39[72];
  char v40[32];

  v5 = v4;
  v36 = &type metadata for CRLFeatureFlags;
  v37 = sub_1004DB6DC();
  LOBYTE(aBlock[0]) = 0;
  v10 = isFeatureEnabled(_:)(aBlock);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(aBlock);
  if ((v10 & 1) != 0)
  {
    v34 = a2;
    v11 = a4;
    if (qword_1013DD6B8 != -1)
      swift_once(&qword_1013DD6B8, sub_100A00A6C);
    swift_beginAccess(&static OS_os_log.crlDefault, v40, 0, 0);
    v12 = (void *)static OS_os_log.crlDefault;
    v13 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v13, v39);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v15 = sub_10054F4B4();
    v16 = v12;
    v17 = dispatch thunk of Tip.id.getter(&type metadata for CRLTipConnectionLinesEntryPointFull, v15);
    v19 = v18;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = sub_1004CFC2C();
    *(_QWORD *)(inited + 32) = v17;
    *(_QWORD *)(inited + 40) = v19;
    v20 = static os_log_type_t.info.getter();
    sub_100A06EBC((uint64_t)v16, &_mh_execute_header, v20, "presenting tip on canvas: %{public}@", 36, 2, inited);
    swift_setDeallocating(inited);
    v21 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v21);

    if (sub_100C36CC4())
    {
      type metadata accessor for TipUIPopoverViewController(0);
      v36 = &type metadata for CRLTipConnectionLinesEntryPointFull;
      v37 = v15;
      swift_unknownObjectRetain(a1);
      v22 = (void *)TipUIPopoverViewController.__allocating_init(_:sourceItem:actionHandler:)(aBlock, a1, SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:), 0);
      v23 = swift_unknownObjectRetain(v5);
      v24 = TipUIPopoverViewController.presentationDelegate.setter(v23);
      v25 = TipUIPopoverViewController.popoverPresentationController.getter(v24);
      if (v25)
      {
        v26 = (void *)v25;
        v27 = objc_msgSend(v5, "traitCollection");
        v28 = objc_msgSend(v27, "verticalSizeClass");

        if (v28 != (id)1)
          objc_msgSend(v26, "setPermittedArrowDirections:", v34);

      }
      v29 = (_QWORD *)swift_allocObject(&unk_10129CBA8, 48, 7);
      v29[2] = v5;
      v29[3] = v22;
      v29[4] = a3;
      v29[5] = v11;
      v37 = (unint64_t)sub_100C4F994;
      v38 = v29;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(_QWORD *)"";
      aBlock[2] = sub_1005D2FC0;
      v36 = (ValueMetadata *)&unk_10129CBC0;
      v30 = _Block_copy(aBlock);
      v31 = v38;
      v32 = v5;
      v33 = v22;
      sub_1004C0F54(a3, v11);
      objc_msgSend(v32, "presentViewController:animated:completion:", v33, 1, v30, swift_release(v31).n128_f64[0]);

      _Block_release(v30);
    }
  }
}

void sub_100C375B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v5;
  char v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t inited;
  unint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  id v28;
  _QWORD *v29;
  void *v30;
  _QWORD *v31;
  id v32;
  id v33;
  uint64_t v34;
  _QWORD aBlock[3];
  ValueMetadata *v36;
  unint64_t v37;
  _QWORD *v38;
  char v39[72];
  char v40[32];

  v5 = v4;
  v36 = &type metadata for CRLFeatureFlags;
  v37 = sub_1004DB6DC();
  LOBYTE(aBlock[0]) = 0;
  v10 = isFeatureEnabled(_:)(aBlock);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(aBlock);
  if ((v10 & 1) != 0)
  {
    v34 = a2;
    v11 = a4;
    if (qword_1013DD6B8 != -1)
      swift_once(&qword_1013DD6B8, sub_100A00A6C);
    swift_beginAccess(&static OS_os_log.crlDefault, v40, 0, 0);
    v12 = (void *)static OS_os_log.crlDefault;
    v13 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v13, v39);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v15 = sub_10054F4F8();
    v16 = v12;
    v17 = dispatch thunk of Tip.id.getter(&type metadata for CRLTipConnectionLinesOnSelection, v15);
    v19 = v18;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = sub_1004CFC2C();
    *(_QWORD *)(inited + 32) = v17;
    *(_QWORD *)(inited + 40) = v19;
    v20 = static os_log_type_t.info.getter();
    sub_100A06EBC((uint64_t)v16, &_mh_execute_header, v20, "presenting tip on canvas: %{public}@", 36, 2, inited);
    swift_setDeallocating(inited);
    v21 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v21);

    if (sub_100C36CC4())
    {
      type metadata accessor for TipUIPopoverViewController(0);
      v36 = &type metadata for CRLTipConnectionLinesOnSelection;
      v37 = v15;
      swift_unknownObjectRetain(a1);
      v22 = (void *)TipUIPopoverViewController.__allocating_init(_:sourceItem:actionHandler:)(aBlock, a1, SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:), 0);
      v23 = swift_unknownObjectRetain(v5);
      v24 = TipUIPopoverViewController.presentationDelegate.setter(v23);
      v25 = TipUIPopoverViewController.popoverPresentationController.getter(v24);
      if (v25)
      {
        v26 = (void *)v25;
        v27 = objc_msgSend(v5, "traitCollection");
        v28 = objc_msgSend(v27, "verticalSizeClass");

        if (v28 != (id)1)
          objc_msgSend(v26, "setPermittedArrowDirections:", v34);

      }
      v29 = (_QWORD *)swift_allocObject(&unk_10129C860, 48, 7);
      v29[2] = v5;
      v29[3] = v22;
      v29[4] = a3;
      v29[5] = v11;
      v37 = (unint64_t)sub_100C4F3B0;
      v38 = v29;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(_QWORD *)"";
      aBlock[2] = sub_1005D2FC0;
      v36 = (ValueMetadata *)&unk_10129C878;
      v30 = _Block_copy(aBlock);
      v31 = v38;
      v32 = v5;
      v33 = v22;
      sub_1004C0F54(a3, v11);
      objc_msgSend(v32, "presentViewController:animated:completion:", v33, 1, v30, swift_release(v31).n128_f64[0]);

      _Block_release(v30);
    }
  }
}

void sub_100C378B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v5;
  char v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t inited;
  unint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  id v28;
  _QWORD *v29;
  void *v30;
  _QWORD *v31;
  id v32;
  id v33;
  uint64_t v34;
  _QWORD aBlock[3];
  ValueMetadata *v36;
  unint64_t v37;
  _QWORD *v38;
  char v39[72];
  char v40[32];

  v5 = v4;
  v36 = &type metadata for CRLFeatureFlags;
  v37 = sub_1004DB6DC();
  LOBYTE(aBlock[0]) = 0;
  v10 = isFeatureEnabled(_:)(aBlock);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(aBlock);
  if ((v10 & 1) != 0)
  {
    v34 = a2;
    v11 = a4;
    if (qword_1013DD6B8 != -1)
      swift_once(&qword_1013DD6B8, sub_100A00A6C);
    swift_beginAccess(&static OS_os_log.crlDefault, v40, 0, 0);
    v12 = (void *)static OS_os_log.crlDefault;
    v13 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v13, v39);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v15 = sub_10054F99C();
    v16 = v12;
    v17 = dispatch thunk of Tip.id.getter(&type metadata for CRLTipScenesEntryPointFull, v15);
    v19 = v18;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = sub_1004CFC2C();
    *(_QWORD *)(inited + 32) = v17;
    *(_QWORD *)(inited + 40) = v19;
    v20 = static os_log_type_t.info.getter();
    sub_100A06EBC((uint64_t)v16, &_mh_execute_header, v20, "presenting tip on canvas: %{public}@", 36, 2, inited);
    swift_setDeallocating(inited);
    v21 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v21);

    if (sub_100C36CC4())
    {
      type metadata accessor for TipUIPopoverViewController(0);
      v36 = &type metadata for CRLTipScenesEntryPointFull;
      v37 = v15;
      swift_unknownObjectRetain(a1);
      v22 = (void *)TipUIPopoverViewController.__allocating_init(_:sourceItem:actionHandler:)(aBlock, a1, SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:), 0);
      v23 = swift_unknownObjectRetain(v5);
      v24 = TipUIPopoverViewController.presentationDelegate.setter(v23);
      v25 = TipUIPopoverViewController.popoverPresentationController.getter(v24);
      if (v25)
      {
        v26 = (void *)v25;
        v27 = objc_msgSend(v5, "traitCollection");
        v28 = objc_msgSend(v27, "verticalSizeClass");

        if (v28 != (id)1)
          objc_msgSend(v26, "setPermittedArrowDirections:", v34);

      }
      v29 = (_QWORD *)swift_allocObject(&unk_10129CC98, 48, 7);
      v29[2] = v5;
      v29[3] = v22;
      v29[4] = a3;
      v29[5] = v11;
      v37 = (unint64_t)sub_100C4F9DC;
      v38 = v29;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(_QWORD *)"";
      aBlock[2] = sub_1005D2FC0;
      v36 = (ValueMetadata *)&unk_10129CCB0;
      v30 = _Block_copy(aBlock);
      v31 = v38;
      v32 = v5;
      v33 = v22;
      sub_1004C0F54(a3, v11);
      objc_msgSend(v32, "presentViewController:animated:completion:", v33, 1, v30, swift_release(v31).n128_f64[0]);

      _Block_release(v30);
    }
  }
}

uint64_t sub_100C37BB0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v5;
  uint64_t result;
  _BYTE v7[24];
  _BYTE v8[40];
  _BYTE v9[24];
  ValueMetadata *v10;
  unint64_t v11;

  swift_unknownObjectWeakAssign(a1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_tipPopoverController, a2);
  v10 = &type metadata for CRLTipConnectionLinesEntryPointFull;
  v11 = sub_10054F4B4();
  sub_1004C4938((uint64_t)v9, (uint64_t)v8, (uint64_t *)&unk_1013E1C40);
  v5 = a1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_currentlyPresentedTip;
  swift_beginAccess(v5, v7, 33, 0);
  sub_100582338((uint64_t)v8, v5, (uint64_t *)&unk_1013E1C40);
  result = swift_endAccess(v7);
  if (a3)
    return a3(result);
  return result;
}

void sub_100C37C60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  char v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t inited;
  unint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  _QWORD *v22;
  void *v23;
  _QWORD *v24;
  id v25;
  id v26;
  _QWORD v27[3];
  ValueMetadata *v28;
  unint64_t v29;
  _QWORD *v30;
  char v31[72];
  char v32[24];

  v4 = v3;
  v28 = &type metadata for CRLFeatureFlags;
  v29 = sub_1004DB6DC();
  LOBYTE(v27[0]) = 0;
  v8 = isFeatureEnabled(_:)(v27);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v27);
  if ((v8 & 1) != 0)
  {
    v9 = a3;
    if (qword_1013DD6B8 != -1)
      swift_once(&qword_1013DD6B8, sub_100A00A6C);
    swift_beginAccess(&static OS_os_log.crlDefault, v32, 0, 0);
    v10 = (void *)static OS_os_log.crlDefault;
    v11 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v11, v31);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v13 = sub_10054F958();
    v14 = v10;
    v15 = dispatch thunk of Tip.id.getter(&type metadata for CRLTipScenesEntryPointCompact, v13);
    v17 = v16;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = sub_1004CFC2C();
    *(_QWORD *)(inited + 32) = v15;
    *(_QWORD *)(inited + 40) = v17;
    v18 = static os_log_type_t.info.getter();
    sub_100A06EBC((uint64_t)v14, &_mh_execute_header, v18, "presenting tip on source item  menu: %{public}@", 47, 2, inited);
    swift_setDeallocating(inited);
    v19 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v19);

    if (sub_100C36CC4())
    {
      type metadata accessor for TipUIPopoverViewController(0);
      v28 = &type metadata for CRLTipScenesEntryPointCompact;
      v29 = v13;
      swift_unknownObjectRetain(a1);
      v20 = (void *)TipUIPopoverViewController.__allocating_init(_:sourceItem:actionHandler:)(v27, a1, SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:), 0);
      v21 = swift_unknownObjectRetain(v4);
      TipUIPopoverViewController.presentationDelegate.setter(v21);
      v22 = (_QWORD *)swift_allocObject(&unk_10129CC48, 48, 7);
      v22[2] = v4;
      v22[3] = v20;
      v22[4] = a2;
      v22[5] = v9;
      v29 = (unint64_t)sub_100C4F9AC;
      v30 = v22;
      v27[0] = _NSConcreteStackBlock;
      v27[1] = *(_QWORD *)"";
      v27[2] = sub_1005D2FC0;
      v28 = (ValueMetadata *)&unk_10129CC60;
      v23 = _Block_copy(v27);
      v24 = v30;
      v25 = v4;
      v26 = v20;
      sub_1004C0F54(a2, v9);
      objc_msgSend(v25, "presentViewController:animated:completion:", v26, 1, v23, swift_release(v24).n128_f64[0]);

      _Block_release(v23);
    }
  }
}

uint64_t sub_100C37EF4()
{
  return sub_100C37F2C(&qword_1013DD3D0, (uint64_t)qword_10147FCC0, (uint64_t)sub_1008B7624);
}

uint64_t sub_100C37F10()
{
  return sub_100C37F2C(&qword_1013DDED8, (uint64_t)qword_101481420, (uint64_t)sub_100D2CAEC);
}

uint64_t sub_100C37F2C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[31];
  char v9;

  if (*a1 != -1)
    swift_once(a1, a3);
  v4 = sub_1004B804C(&qword_1013E6D60);
  sub_1004F2A1C(v4, a2);
  Tips.Event.sendDonation<>(_:)(0, 0);
  if (qword_1013DD288 != -1)
    swift_once(&qword_1013DD288, sub_100859194);
  v5 = sub_1004B804C((uint64_t *)&unk_1013E1B00);
  v6 = sub_1004F2A1C(v5, (uint64_t)qword_10147F8D8);
  v9 = 1;
  swift_beginAccess(v6, v8, 33, 0);
  Tips.Parameter.wrappedValue.setter(&v9, v5);
  return swift_endAccess(v8);
}

uint64_t sub_100C38000(void *a1)
{
  uint64_t v1;
  char **v2;
  unint64_t v3;
  char **v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  id v27;
  _UNKNOWN **v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  char **v32;
  char **v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  id v37;
  __n128 v38;
  uint64_t v39;
  uint64_t result;
  _UNKNOWN **v41;
  uint64_t v42;
  char **v43;
  _UNKNOWN **v44;
  uint64_t v45;
  CGPoint v46;
  CGRect v47;

  v4 = (char **)objc_msgSend(a1, "knobs");
  v5 = sub_1004B8930(0, &qword_1013E56E0, off_101229808);
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);

  if ((unint64_t)v6 >> 62)
  {
    if (v6 < 0)
      v4 = (char **)v6;
    else
      v4 = (char **)(v6 & 0xFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain(v6);
    v7 = _CocoaArrayWrapper.endIndex.getter(v4);
    swift_bridgeObjectRelease(v6);
    if (v7)
      goto LABEL_3;
  }
  else
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v7)
    {
LABEL_3:
      if (v7 >= 1)
      {
        v45 = v1;
        v8 = 0;
        while (1)
        {
          if ((v6 & 0xC000000000000001) != 0)
            v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v6);
          else
            v9 = *(id *)(v6 + 8 * v8 + 32);
          v10 = v9;
          v11 = type metadata accessor for CRLConnectionLineKnob();
          v12 = swift_dynamicCastClass(v10, v11);
          if (!v12)
            goto LABEL_6;
          v13 = (void *)v12;
          v14 = v10;
          v15 = objc_msgSend(v13, "rep");
          if (!v15)
          {

LABEL_17:
            goto LABEL_7;
          }
          v10 = v15;
          v16 = objc_msgSend(v15, "interactiveCanvasController");
          if (!v16)
            break;
          v17 = v16;
          objc_msgSend(v13, "position");
          objc_msgSend(v10, "convertNaturalPointToUnscaledCanvas:");
          objc_msgSend(v17, "convertUnscaledToBoundsPoint:");
          v19 = v18;
          v21 = v20;
          objc_msgSend(v17, "visibleBoundsRect");
          v46.x = v19;
          v46.y = v21;
          v22 = CGRectContainsPoint(v47, v46);

          if (!v22)
            goto LABEL_17;
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v23);
          v24 = _swiftEmptyArrayStorage[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v24);
          v25 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v24, v14);
          specialized ContiguousArray._endMutation()(v25);
LABEL_7:
          if (v7 == ++v8)
          {
            *(_QWORD *)&v26 = swift_bridgeObjectRelease(v6).n128_u64[0];
            v1 = v45;
            v3 = (unint64_t)_swiftEmptyArrayStorage;
            goto LABEL_24;
          }
        }

LABEL_6:
        goto LABEL_7;
      }
LABEL_57:
      __break(1u);
      goto LABEL_58;
    }
  }
  *(_QWORD *)&v26 = swift_bridgeObjectRelease(v6).n128_u64[0];
  v3 = (unint64_t)_swiftEmptyArrayStorage;
LABEL_24:
  v27 = objc_msgSend((id)v1, "traitCollection", v26);
  LODWORD(v7) = objc_msgSend(v27, "crl_isCompactWidth");

  v4 = (char **)&off_101264748;
  v2 = (char **)&off_101264708;
  if ((_DWORD)v7)
    v28 = &off_101264708;
  else
    v28 = &off_101264748;
  v29 = (uint64_t *)&unk_101264718;
  if (!(_DWORD)v7)
    v29 = (uint64_t *)&unk_101264758;
  v1 = *v29;
  if (!*v29)
  {
    swift_release(_swiftEmptyArrayStorage);
    v41 = v28;
LABEL_51:
    swift_bridgeObjectRelease(v41);
    return 0;
  }
  v44 = v28;
  if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) == 0
    && ((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) == 0)
  {
    v30 = _swiftEmptyArrayStorage[2];
    goto LABEL_33;
  }
LABEL_58:
  swift_bridgeObjectRetain(v3);
  v30 = _CocoaArrayWrapper.endIndex.getter(v42);
  swift_release(v3);
LABEL_33:
  v31 = 0;
  if ((_DWORD)v7)
    v32 = v2;
  else
    v32 = v4;
  v33 = v32 + 4;
  v34 = v1 & ~(v1 >> 63);
  v4 = &selRef_startAnimation;
  v43 = v33;
  while (1)
  {
    if (v31 == v34)
    {
LABEL_56:
      __break(1u);
      goto LABEL_57;
    }
    if (v30)
      break;
LABEL_37:
    if (++v31 == v1)
    {
      swift_release(v3);
      v41 = v44;
      goto LABEL_51;
    }
  }
  v35 = v33[v31];
  swift_retain(v3);
  v36 = 4;
  while (1)
  {
    if ((v3 & 0xC000000000000001) != 0)
      v37 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v36 - 4, v3);
    else
      v37 = *(id *)(v3 + 8 * v36);
    v7 = (uint64_t)v37;
    v2 = (char **)(v36 - 3);
    if (__OFADD__(v36 - 4, 1))
    {
      __break(1u);
      goto LABEL_56;
    }
    if (objc_msgSend(v37, "tag") == v35)
      break;

    ++v36;
    if (v2 == (char **)v30)
    {
      swift_release(v3);
      v34 = v1 & ~(v1 >> 63);
      v33 = v43;
      goto LABEL_37;
    }
  }
  v38 = swift_bridgeObjectRelease(v44);
  swift_release_n(v3, 2, v38);
  v39 = type metadata accessor for CRLConnectionLineKnob();
  result = swift_dynamicCastClass(v7, v39);
  if (result)
    return result;

  return 0;
}

uint64_t sub_100C383F0()
{
  id v0;
  uint64_t v1;

  v0 = sub_100B6732C();
  sub_100C378B0((uint64_t)v0, 3, 0, 0);

  if (qword_1013DD670 != -1)
    swift_once(&qword_1013DD670, sub_1009E1800);
  v1 = sub_1004B804C(&qword_1013E6D60);
  sub_1004F2A1C(v1, (uint64_t)qword_101480270);
  return Tips.Event.sendDonation<>(_:)(0, 0);
}

void sub_100C38488()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  id v6;
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  id v11;
  unint64_t v12;
  ValueMetadata *v13;
  unsigned __int8 v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  _BYTE v18[31];

  v1 = v0;
  v2 = type metadata accessor for Tips.InvalidationReason(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = objc_msgSend(v0, "traitCollection");
  if (objc_msgSend(v6, "horizontalSizeClass") == (id)1)
  {

  }
  else
  {
    v7 = objc_msgSend((id)objc_opt_self(UIDevice), "crl_phoneUI");

    if ((v7 & 1) == 0)
      goto LABEL_7;
  }
  if (qword_1013DD668 != -1)
    swift_once(&qword_1013DD668, sub_1009E173C);
  v8 = sub_1004B804C((uint64_t *)&unk_1013E1B00);
  v9 = sub_1004F2A1C(v8, (uint64_t)qword_101480258);
  swift_beginAccess(v9, &v18[8], 32, 0);
  Tips.Parameter.wrappedValue.getter(&v18[7], v8);
  v10 = v18[7];
  swift_endAccess(&v18[8]);
  if ((v10 & 1) == 0)
  {
    v18[7] = 1;
    swift_beginAccess(v9, &v18[8], 33, 0);
    Tips.Parameter.wrappedValue.setter(&v18[7], v8);
    swift_endAccess(&v18[8]);
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for Tips.InvalidationReason.actionPerformed(_:), v2);
    v12 = sub_10054F958();
    v13 = &type metadata for CRLTipScenesEntryPointCompact;
LABEL_10:
    Tip.invalidate(reason:)(v5, v13, v12);
    (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
    return;
  }
LABEL_7:
  v11 = objc_msgSend(v1, "traitCollection");
  if (objc_msgSend(v11, "horizontalSizeClass") == (id)1)
  {

    return;
  }
  v14 = objc_msgSend((id)objc_opt_self(UIDevice), "crl_phoneUI");

  if ((v14 & 1) == 0)
  {
    if (qword_1013DCD20 != -1)
      swift_once(&qword_1013DCD20, sub_10069C5C4);
    v15 = sub_1004B804C((uint64_t *)&unk_1013E1B00);
    v16 = sub_1004F2A1C(v15, (uint64_t)qword_10147EF98);
    swift_beginAccess(v16, &v18[8], 32, 0);
    Tips.Parameter.wrappedValue.getter(&v18[7], v15);
    v17 = v18[7];
    swift_endAccess(&v18[8]);
    if ((v17 & 1) == 0)
    {
      v18[7] = 1;
      swift_beginAccess(v16, &v18[8], 33, 0);
      Tips.Parameter.wrappedValue.setter(&v18[7], v15);
      swift_endAccess(&v18[8]);
      (*(void (**)(_BYTE *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for Tips.InvalidationReason.actionPerformed(_:), v2);
      v12 = sub_10054F99C();
      v13 = &type metadata for CRLTipScenesEntryPointFull;
      goto LABEL_10;
    }
  }
}

void sub_100C38774(uint64_t a1@<X8>)
{
  char *v1;
  void *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  double v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  unsigned int v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;

  v3 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController];
  v4 = objc_msgSend(v3, "editorController");
  if (!v4
    || (v5 = v4, v6 = objc_msgSend(v4, "selectionPath"), v5, !v6))
  {
    if (qword_1013DD6C8 != -1)
      swift_once(&qword_1013DD6C8, sub_100A00D28);
    swift_beginAccess(&static OS_os_log.crlError, &v37, 0, 0);
    v28 = (id)static OS_os_log.crlError;
    v29 = static os_log_type_t.error.getter(v28);
    sub_100A06EBC((uint64_t)v28, &_mh_execute_header, v29, "Unable to get the knob position for the first selected item because we cannot get the current selection path", 108, 2, (uint64_t)_swiftEmptyArrayStorage);
    goto LABEL_19;
  }
  v7 = objc_msgSend(v3, "selectionModelTranslator");
  if (!v7
    || (v8 = v7,
        v9 = objc_msgSend(v7, "infosForSelectionPath:", v6),
        v8,
        v10 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v9, &type metadata for AnyHashable, &protocol witness table for AnyHashable), v9, !v10))
  {
    v39 = 0;
    v37 = 0u;
    v38 = 0u;
    goto LABEL_15;
  }
  sub_100858050(v10, (uint64_t)&v37);
  swift_bridgeObjectRelease(v10);
  if (!*((_QWORD *)&v38 + 1))
  {
LABEL_15:
    sub_1004CB800((uint64_t)&v37, &qword_1013E7C20);
    goto LABEL_16;
  }
  v11 = sub_1004B804C(&qword_1013E0670);
  if ((swift_dynamicCast(&v36, &v37, &type metadata for AnyHashable, v11, 6) & 1) == 0)
  {
LABEL_16:
    if (qword_1013DD6C8 != -1)
      swift_once(&qword_1013DD6C8, sub_100A00D28);
    swift_beginAccess(&static OS_os_log.crlError, &v37, 0, 0);
    v28 = (id)static OS_os_log.crlError;
    v30 = static os_log_type_t.error.getter(v28);
    sub_100A06EBC((uint64_t)v28, &_mh_execute_header, v30, "Unable to get the knob position for the first selected item because the returned first selected item is not a canvas element", 124, 2, (uint64_t)_swiftEmptyArrayStorage);

    goto LABEL_19;
  }
  v12 = v36;
  v13 = objc_msgSend(v3, "repForInfo:createIfNeeded:", v36, 0);
  if (!v13)
  {
    if (qword_1013DD6C8 != -1)
      swift_once(&qword_1013DD6C8, sub_100A00D28);
    swift_beginAccess(&static OS_os_log.crlError, &v37, 0, 0);
    v28 = (id)static OS_os_log.crlError;
    v33 = static os_log_type_t.error.getter(v28);
    sub_100A06EBC((uint64_t)v28, &_mh_execute_header, v33, "Unable to get the knob position for the first selected item because could not fetch a rep for the first selected canvas element", 127, 2, (uint64_t)_swiftEmptyArrayStorage);

    swift_unknownObjectRelease(v12);
    goto LABEL_19;
  }
  v14 = v13;
  v15 = (void *)sub_100C38000(v13);
  if (!v15)
  {
    if (qword_1013DD6C8 != -1)
      swift_once(&qword_1013DD6C8, sub_100A00D28);
    swift_beginAccess(&static OS_os_log.crlError, &v37, 0, 0);
    v28 = (id)static OS_os_log.crlError;
    v34 = static os_log_type_t.error.getter(v28);
    sub_100A06EBC((uint64_t)v28, &_mh_execute_header, v34, "Unable to get the knob position for the first selected item because there is no connection line knob to present off of", 118, 2, (uint64_t)_swiftEmptyArrayStorage);

    swift_unknownObjectRelease(v12);
LABEL_19:

    v31 = 0;
    v32 = 1;
    v19 = 0.0;
    v21 = 0;
    v23 = 0;
    v25 = 0;
    goto LABEL_20;
  }
  v16 = v15;
  objc_msgSend(v15, "position");
  objc_msgSend(v14, "convertNaturalPointToUnscaledCanvas:");
  objc_msgSend(v3, "convertUnscaledToBoundsPoint:");
  v19 = sub_10005FD98(v17, v18, 25.0);
  v21 = v20;
  v23 = v22;
  v25 = v24;
  v26 = objc_msgSend(v1, "traitCollection");
  v27 = objc_msgSend(v26, "crl_isCompactWidth");

  if (v27)
  {

    swift_unknownObjectRelease(v12);
LABEL_29:
    v31 = 3;
    v32 = 0;
    goto LABEL_20;
  }
  v35 = (char *)objc_msgSend(v16, "tag");

  swift_unknownObjectRelease(v12);
  if ((unint64_t)(v35 - 2) > 4)
    goto LABEL_29;
  v31 = qword_100F2F6C0[(_QWORD)(v35 - 2)];
  v32 = 0;
LABEL_20:
  *(double *)a1 = v19;
  *(_QWORD *)(a1 + 8) = v21;
  *(_QWORD *)(a1 + 16) = v23;
  *(_QWORD *)(a1 + 24) = v25;
  *(_QWORD *)(a1 + 32) = v31;
  *(_BYTE *)(a1 + 40) = v32;
}

uint64_t sub_100C38C4C()
{
  return sub_100C38C84(&qword_1013DD460, (uint64_t)qword_10147FE00, (uint64_t)sub_1008E1E38);
}

uint64_t sub_100C38C68()
{
  return sub_100C38C84(&qword_1013DCB40, (uint64_t)qword_10147EB98, (uint64_t)sub_1005E98A8);
}

uint64_t sub_100C38C84(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  if (*a1 != -1)
    swift_once(a1, a3);
  v4 = sub_1004B804C(&qword_1013E6D60);
  sub_1004F2A1C(v4, a2);
  return Tips.Event.sendDonation<>(_:)(0, 0);
}

void sub_100C38CDC(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  _QWORD v16[3];
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[24];
  __int128 v20;
  __int128 v21;
  uint64_t v22;

  v2 = v1;
  v4 = type metadata accessor for Tips.InvalidationReason(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unknownObjectWeakAssign(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_tipPopoverController, 0);
  if ((a1 & 1) != 0)
  {
    v8 = v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_currentlyPresentedTip;
    swift_beginAccess(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_currentlyPresentedTip, v19, 0, 0);
    sub_1004CB7BC(v8, (uint64_t)&v20, (uint64_t *)&unk_1013E1C40);
    v9 = *((_QWORD *)&v21 + 1);
    sub_1004CB800((uint64_t)&v20, (uint64_t *)&unk_1013E1C40);
    if (v9)
    {
      sub_1004CB7BC(v8, (uint64_t)&v20, (uint64_t *)&unk_1013E1C40);
      if (*((_QWORD *)&v21 + 1))
      {
        sub_1004E90B0((uint64_t)&v20, (uint64_t)v16);
        sub_1004CB800((uint64_t)&v20, (uint64_t *)&unk_1013E1C40);
        v10 = v17;
        v11 = v18;
        sub_1004BB5A4(v16, v17);
        (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for Tips.InvalidationReason.tipClosed(_:), v4);
        Tip.invalidate(reason:)(v7, v10, v11);
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v16);
      }
      else
      {
        sub_1004CB800((uint64_t)&v20, (uint64_t *)&unk_1013E1C40);
      }
    }
  }
  v22 = 0;
  v20 = 0u;
  v21 = 0u;
  v12 = v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_currentlyPresentedTip;
  swift_beginAccess(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_currentlyPresentedTip, v16, 33, 0);
  sub_100582338((uint64_t)&v20, v12, (uint64_t *)&unk_1013E1C40);
  swift_endAccess(v16);
  v13 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_tipPresentationView;
  v14 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_tipPresentationView);
  if (v14)
  {
    objc_msgSend(v14, "removeFromSuperview");
    v15 = *(void **)(v2 + v13);
    *(_QWORD *)(v2 + v13) = 0;

  }
}

double sub_100C38F20()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  unsigned int v4;
  double v5;
  id v6;
  double result;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  char *v12;
  uint64_t Strong;
  uint64_t v14;
  _QWORD v15[5];
  uint64_t v16;

  v1 = *(void **)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasViewController];
  v2 = objc_msgSend(v1, "miniFormatterPresenter");
  if (v2
    && (v3 = v2,
        v4 = objc_msgSend(v2, "isPresentingSecondLayerPopover"),
        *(_QWORD *)&v5 = swift_unknownObjectRelease(v3).n128_u64[0],
        v4))
  {
    v6 = objc_msgSend(v1, "presentedViewController", v5);
    if (v6)
    {
      v8 = v6;
      v9 = swift_allocObject(&unk_10129BF78, 24, 7);
      *(_QWORD *)(v9 + 16) = v0;
      v15[4] = sub_100C4EE40;
      v16 = v9;
      v15[0] = _NSConcreteStackBlock;
      v15[1] = *(_QWORD *)"";
      v15[2] = sub_1005D2FC0;
      v15[3] = &unk_10129BF90;
      v10 = _Block_copy(v15);
      v11 = v16;
      v12 = v0;
      objc_msgSend(v8, "dismissViewControllerAnimated:completion:", 1, v10, swift_release(v11).n128_f64[0]);
      _Block_release(v10);

    }
  }
  else
  {
    Strong = swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_delegate]);
    if (Strong)
    {
      v14 = Strong;
      sub_100921934();
      *(_QWORD *)&result = swift_unknownObjectRelease(v14).n128_u64[0];
    }
  }
  return result;
}

void sub_100C39078(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t Strong;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  NSString v10;
  Class isa;
  void *v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _BYTE v26[24];

  v2 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v2);
  v4 = &v26[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  Strong = swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_delegate);
  if (Strong)
  {
    v6 = Strong;
    v7 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window;
    v8 = *(void **)(Strong + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window);
    if (v8 && (objc_msgSend(v8, "isUserInteractionEnabled") & 1) != 0 && (sub_100903BFC() & 1) == 0)
    {
      v9 = (void *)objc_opt_self(CRLAnalyticsLogger);
      v10 = String._bridgeToObjectiveC()();
      _s8Freeform23CRLAnalyticsFeatureUsedC14featurePayload3forSDySSSo8NSObjectCGAA0bC4NameO_tFZ_0(5);
      sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v9, "sendEventInDomain:lazily:eventPayload:", v10, 1, isa, swift_bridgeObjectRelease().n128_f64[0]);

      v12 = *(void **)(v6 + v7);
      if (!v12
        || (v13 = objc_msgSend(v12, "rootViewController")) == 0
        || (v14 = v13,
            v15 = objc_msgSend(v13, "crl_windowWrapper"),
            v14,
            !v15)
        || (v16 = objc_msgSend(v15, "newWrapperBeginningIgnoringUserInteractionSafely"), v15, !v16))
      {
        if (qword_1013DD6C8 != -1)
          swift_once(&qword_1013DD6C8, sub_100A00D28);
        swift_beginAccess(&static OS_os_log.crlError, v26, 0, 0);
        v17 = (id)static OS_os_log.crlError;
        v18 = static os_log_type_t.error.getter(v17);
        sub_100A06EBC((uint64_t)v17, &_mh_execute_header, v18, "Could not create token for ignoring user interaction; view hierarchy may not be set up yet",
          90,
          2,
          (uint64_t)_swiftEmptyArrayStorage);

        v16 = 0;
      }
      v19 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v4, 1, 1, v19);
      type metadata accessor for MainActor(0);
      v20 = v16;
      swift_unknownObjectRetain(v6);
      v22 = static MainActor.shared.getter(v21);
      v23 = (_QWORD *)swift_allocObject(&unk_10129BFC8, 48, 7);
      v23[2] = v22;
      v23[3] = &protocol witness table for MainActor;
      v23[4] = v6;
      v23[5] = v16;
      v24 = sub_100521B98((uint64_t)v4, (uint64_t)&unk_1013FA3E0, (uint64_t)v23);
      swift_unknownObjectRelease(v6);
      swift_release(v24);

    }
    else
    {
      swift_unknownObjectRelease(v6);
    }
  }
}

void sub_100C39384()
{
  char *v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  char *v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  uint64_t v9;
  _BOOL8 v10;
  uint64_t Strong;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  id v28;
  char v29[24];

  v1 = sub_1004B804C(&qword_1013E01F0);
  *(_QWORD *)&v2 = __chkstk_darwin(v1).n128_u64[0];
  v4 = &v29[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = objc_msgSend(v0, "presentedViewController", v2);

  if (v5)
  {
    v6 = objc_msgSend(v0, "presentedViewController");
    if (v6)
    {
      v28 = v6;
      v7 = objc_msgSend(v0, "presentedViewController");
      if (v7)
      {
        v8 = v7;
        v9 = objc_opt_self(_UIStickerPickerViewController);
        v10 = swift_dynamicCastObjCClass(v8, v9) == 0;

      }
      else
      {
        v10 = 1;
      }
      objc_msgSend(v28, "dismissViewControllerAnimated:completion:", v10, 0);

    }
  }
  else
  {
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasViewController], "hideEditMenu");
    Strong = swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_delegate]);
    if (Strong)
    {
      v12 = Strong;
      v13 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window;
      v14 = *(void **)(Strong + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window);
      if (v14 && (objc_msgSend(v14, "isUserInteractionEnabled") & 1) != 0)
      {
        v15 = *(void **)(v12 + v13);
        if (!v15
          || (v16 = objc_msgSend(v15, "rootViewController")) == 0
          || (v17 = v16,
              v18 = objc_msgSend(v16, "crl_windowWrapper"),
              v17,
              !v18)
          || (v19 = objc_msgSend(v18, "newWrapperBeginningIgnoringUserInteractionSafely"), v18, !v19))
        {
          if (qword_1013DD6C8 != -1)
            swift_once(&qword_1013DD6C8, sub_100A00D28);
          swift_beginAccess(&static OS_os_log.crlError, v29, 0, 0);
          v20 = (id)static OS_os_log.crlError;
          v21 = static os_log_type_t.error.getter(v20);
          sub_100A06EBC((uint64_t)v20, &_mh_execute_header, v21, "Could not create token for ignoring user interaction; view hierarchy may not be set up yet",
            90,
            2,
            (uint64_t)_swiftEmptyArrayStorage);

          v19 = 0;
        }
        v22 = type metadata accessor for TaskPriority(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v4, 1, 1, v22);
        type metadata accessor for MainActor(0);
        v23 = v19;
        swift_unknownObjectRetain(v12);
        v24 = v0;
        v25 = static MainActor.shared.getter(v24);
        v26 = (_QWORD *)swift_allocObject(&unk_10129BF50, 56, 7);
        v26[2] = v25;
        v26[3] = &protocol witness table for MainActor;
        v26[4] = v12;
        v26[5] = v24;
        v26[6] = v19;
        v27 = sub_100521B98((uint64_t)v4, (uint64_t)&unk_10140B858, (uint64_t)v26);
        swift_unknownObjectRelease(v12);
        swift_release(v27);

      }
      else
      {
        swift_unknownObjectRelease(v12);
      }
    }
  }
}

void sub_100C3976C()
{
  char *v0;
  uint64_t v1;
  void *v2;
  uint64_t KeyPath;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  int v14;
  id v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23;
  char *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v1 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState;
  v2 = *(void **)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState];
  KeyPath = swift_getKeyPath(&unk_100F2F2B8);
  v4 = swift_getKeyPath(&unk_100F2F2E0);
  v5 = v2;
  static Published.subscript.getter(&v39, v5, KeyPath, v4);

  swift_release(KeyPath);
  swift_release(v4);
  v6 = v39;
  if ((unint64_t)v39 >> 62)
  {
    if (v39 < 0)
      v37 = v39;
    else
      v37 = v39 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v39);
    v7 = _CocoaArrayWrapper.endIndex.getter(v37);
    swift_bridgeObjectRelease(v6);
  }
  else
  {
    v7 = *(_QWORD *)((v39 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  *(_QWORD *)&v8 = swift_bridgeObjectRelease(v6).n128_u64[0];
  if (!v7)
    return;
  v9 = objc_msgSend(v0, "presentedViewController", v8);
  if (v9)
  {
    v10 = v9;
    v11 = type metadata accessor for CRLScenesViewController_i();
    v12 = swift_dynamicCastClass(v10, v11);
    if (v12)
    {
      v7 = v12;
      v13 = objc_msgSend((id)objc_opt_self(CRLAccessibility), "isReduceMotionEnabled");
      if ((objc_msgSend((id)v7, "isBeingDismissed") & 1) == 0)
        objc_msgSend((id)v7, "dismissViewControllerAnimated:completion:", v13 ^ 1, 0);
      v14 = 0;
      goto LABEL_18;
    }

  }
  v15 = objc_msgSend(v0, "presentedViewController");
  if (!v15
    || (v16 = v15,
        v17 = type metadata accessor for CRLCompactScenesViewController_i(),
        v7 = swift_dynamicCastClass(v16, v17),
        v16,
        !v7))
  {
    v14 = 0;
    goto LABEL_19;
  }
  v18 = *(void **)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_compactScenesPresenter];
  if (!v18)
  {
    v14 = 1;
    goto LABEL_19;
  }
  v10 = v18;
  v14 = 1;
  if ((objc_msgSend(v10, "isBeingDismissed") & 1) == 0)
    objc_msgSend(v10, "dismissViewControllerAnimated:completion:", 1, 0);
LABEL_18:

LABEL_19:
  v19 = objc_msgSend(v0, "presentedViewController");
  if (v19)
  {
    v20 = v19;
    v21 = type metadata accessor for CRLScenesViewController_i();
    v22 = swift_dynamicCastClass(v20, v21);
    if (v22)
    {
      v7 = v22;
      v23 = objc_msgSend((id)objc_opt_self(CRLAccessibility), "isReduceMotionEnabled");
      if ((objc_msgSend((id)v7, "isBeingDismissed") & 1) == 0)
        objc_msgSend((id)v7, "dismissViewControllerAnimated:completion:", v23 ^ 1, 0);
    }

  }
  v24 = &v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_currentSceneIndex];
  if ((v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_currentSceneIndex + 8] & 1) != 0)
    goto LABEL_29;
  v25 = *(_QWORD *)v24 + 1;
  if (__OFADD__(*(_QWORD *)v24, 1))
    goto LABEL_45;
  v26 = *(void **)&v0[v1];
  v27 = swift_getKeyPath(&unk_100F2F2B8);
  v28 = swift_getKeyPath(&unk_100F2F2E0);
  v29 = v26;
  static Published.subscript.getter(&v39, v29, v27, v28);

  swift_release(v27);
  swift_release(v28);
  v7 = v39;
  if ((unint64_t)v39 >> 62)
    goto LABEL_46;
  v30 = *(_QWORD *)((v39 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    swift_bridgeObjectRelease(v7);
    if (v25 >= v30)
LABEL_29:
      v25 = 0;
    *(_QWORD *)v24 = v25;
    v24[8] = 0;
    v31 = *(void **)&v0[v1];
    v32 = swift_getKeyPath(&unk_100F2F2B8);
    v33 = swift_getKeyPath(&unk_100F2F2E0);
    v34 = v31;
    static Published.subscript.getter(&v39, v34, v32, v33);

    swift_release(v32);
    swift_release(v33);
    v7 = v39;
    if ((v39 & 0xC000000000000001) != 0)
      break;
    if (v25 < 0)
    {
      __break(1u);
    }
    else if ((unint64_t)v25 < *(_QWORD *)((v39 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v35 = (char *)*(id *)(v39 + 8 * v25 + 32);
      goto LABEL_34;
    }
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    if (v7 < 0)
      v38 = v7;
    else
      v38 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v7);
    v30 = _CocoaArrayWrapper.endIndex.getter(v38);
    swift_bridgeObjectRelease(v7);
  }
  v35 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v25, v39);
LABEL_34:
  v36 = v35;
  swift_bridgeObjectRelease(v7);
  sub_100C438B4(v36);
  if (v14)
    sub_100C1B450((uint64_t)SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:), 0);

}

void sub_100C39B9C()
{
  void *v0;
  char *v1;
  void *v2;
  uint64_t KeyPath;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  unsigned int v14;
  int v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  char *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v1 = (char *)OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState;
  v2 = *(void **)((char *)v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState);
  KeyPath = swift_getKeyPath(&unk_100F2F2B8);
  v4 = swift_getKeyPath(&unk_100F2F2E0);
  v5 = v2;
  static Published.subscript.getter(&v36, v5, KeyPath, v4);

  swift_release(KeyPath);
  swift_release(v4);
  v6 = v36;
  if ((unint64_t)v36 >> 62)
  {
    if (v36 < 0)
      v34 = v36;
    else
      v34 = v36 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v36);
    v7 = _CocoaArrayWrapper.endIndex.getter(v34);
    swift_bridgeObjectRelease(v6);
  }
  else
  {
    v7 = *(_QWORD *)((v36 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  *(_QWORD *)&v8 = swift_bridgeObjectRelease(v6).n128_u64[0];
  if (!v7)
    return;
  v9 = objc_msgSend(v0, "presentedViewController", v8);
  if (v9)
  {
    v10 = v9;
    v11 = type metadata accessor for CRLScenesViewController_i();
    v12 = swift_dynamicCastClass(v10, v11);
    if (v12)
    {
      v13 = (void *)v12;
      v14 = objc_msgSend((id)objc_opt_self(CRLAccessibility), "isReduceMotionEnabled");
      if ((objc_msgSend(v13, "isBeingDismissed") & 1) == 0)
        objc_msgSend(v13, "dismissViewControllerAnimated:completion:", v14 ^ 1, 0);
      v15 = 0;
LABEL_18:

      goto LABEL_19;
    }

  }
  v16 = objc_msgSend(v0, "presentedViewController");
  if (v16
    && (v17 = v16,
        v18 = type metadata accessor for CRLCompactScenesViewController_i(),
        v19 = swift_dynamicCastClass(v17, v18),
        v17,
        v19))
  {
    v20 = *(void **)((char *)v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_compactScenesPresenter);
    if (v20)
    {
      v10 = v20;
      v15 = 1;
      if ((objc_msgSend(v10, "isBeingDismissed") & 1) == 0)
        objc_msgSend(v10, "dismissViewControllerAnimated:completion:", 1, 0);
      goto LABEL_18;
    }
    v15 = 1;
  }
  else
  {
    v15 = 0;
  }
LABEL_19:
  v21 = (char *)v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_currentSceneIndex;
  if ((*((_BYTE *)v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_currentSceneIndex + 8) & 1) == 0)
  {
    v22 = *(_QWORD *)v21 - 1;
    if (__OFSUB__(*(_QWORD *)v21, 1))
    {
LABEL_45:
      __break(1u);
      return;
    }
    if ((v22 & 0x8000000000000000) == 0)
      goto LABEL_25;
  }
  v23 = *(void **)&v1[(_QWORD)v0];
  v24 = swift_getKeyPath(&unk_100F2F2B8);
  v25 = swift_getKeyPath(&unk_100F2F2E0);
  v26 = v23;
  static Published.subscript.getter(&v36, v26, v24, v25);

  swift_release(v24);
  swift_release(v25);
  v22 = v36;
  if ((unint64_t)v36 >> 62)
    goto LABEL_40;
  v27 = *(_QWORD *)((v36 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    swift_bridgeObjectRelease(v22);
    v22 = v27 - 1;
    if (__OFSUB__(v27, 1))
    {
      __break(1u);
      goto LABEL_45;
    }
LABEL_25:
    *(_QWORD *)v21 = v22;
    v21[8] = 0;
    v28 = *(void **)&v1[(_QWORD)v0];
    v29 = swift_getKeyPath(&unk_100F2F2B8);
    v30 = swift_getKeyPath(&unk_100F2F2E0);
    v1 = v28;
    static Published.subscript.getter(&v36, v1, v29, v30);

    swift_release(v29);
    swift_release(v30);
    v31 = v36;
    if ((v36 & 0xC000000000000001) != 0)
      break;
    if (v22 < 0)
    {
      __break(1u);
    }
    else if ((unint64_t)v22 < *(_QWORD *)((v36 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v32 = (char *)*(id *)(v36 + 8 * v22 + 32);
      goto LABEL_29;
    }
    __break(1u);
LABEL_40:
    if (v22 < 0)
      v35 = v22;
    else
      v35 = v22 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v22);
    v27 = _CocoaArrayWrapper.endIndex.getter(v35);
    swift_bridgeObjectRelease(v22);
  }
  v32 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v22, v36);
LABEL_29:
  v33 = v32;
  swift_bridgeObjectRelease(v31);
  sub_100C438B4(v33);
  if (v15)
    sub_100C1B450((uint64_t)SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:), 0);

}

void sub_100C3A58C()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  char *v4;
  id v5;
  id v6;
  id v7;

  v1 = sub_100C1CAE8();
  v2 = objc_msgSend(v1, "mode");

  v3 = objc_msgSend(v2, "pencilModeType");
  if (v3 != (id)1)
  {
    v4 = v0;
    v5 = objc_msgSend(v4, "interactiveCanvasControllerForFreehandDrawingTools");
    v7 = objc_msgSend(objc_allocWithZone((Class)CRLiOSDocumentModeFreehandDrawing), "initWithBoardViewController:andInteractiveCanvasController:", v4, v5);

    v6 = sub_100C1CAE8();
    objc_msgSend(v6, "setMode:animated:", v7, 1);

    objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController], "collapseAllExpandedCollaboratorHUDs");
  }
}

void sub_100C3A768()
{
  id v0;
  id v1;
  uint64_t v2;
  void *v3;
  id v4;

  v0 = sub_100C1CAE8();
  v1 = objc_msgSend(v0, "mode");

  v2 = objc_opt_self(CRLiOSDocumentModeFreehandDrawing);
  v3 = (void *)swift_dynamicCastObjCClass(v1, v2);
  v4 = v3;
  if (!v3)
  {

    sub_100757E04(&_mh_execute_header, (uint64_t)"beginDrawingTransformModeIfNeeded()", 35, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 3466, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"beginDrawingTransformModeIfNeeded()", 35, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2u, 3466, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    v3 = 0;
  }
  objc_msgSend(v3, "beginDrawingTransformMode");

}

void sub_100C3A8B0()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;

  v1 = objc_msgSend(v0, "interactiveCanvasControllerForFreehandDrawingTools");
  v2 = objc_msgSend(v1, "layerHost");

  if (v2)
  {
    if ((objc_msgSend(v2, "respondsToSelector:", "asiOSCVC") & 1) != 0)
    {
      v3 = objc_msgSend(v2, "asiOSCVC");
      v4 = objc_msgSend(v3, "pencilMediator", swift_unknownObjectRelease(v2).n128_f64[0]);

      if (v4)
      {
        objc_msgSend(v4, "markPencilUsedForMode:", 1);
        swift_unknownObjectRelease(v4);
        return;
      }
    }
    else
    {
      swift_unknownObjectRelease(v2);
    }
  }
  sub_100757E04(&_mh_execute_header, (uint64_t)"toolkitDidDrawWithPencil()", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 3473, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"toolkitDidDrawWithPencil()", 26, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2u, 3473, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
}

void sub_100C3AA70()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;

  v1 = objc_msgSend(v0, "interactiveCanvasControllerForFreehandDrawingTools");
  v2 = objc_msgSend(v1, "layerHost");

  if (v2)
  {
    if ((objc_msgSend(v2, "respondsToSelector:", "asiOSCVC") & 1) != 0)
    {
      v3 = objc_msgSend(v2, "asiOSCVC");
      v4 = objc_msgSend(v3, "pencilMediator", swift_unknownObjectRelease(v2).n128_f64[0]);

      if (v4)
      {
        objc_msgSend(v4, "fingerUsedForFreehandDrawingMode");
        swift_unknownObjectRelease(v4);
        return;
      }
    }
    else
    {
      swift_unknownObjectRelease(v2);
    }
  }
  sub_100757E04(&_mh_execute_header, (uint64_t)"toolkitDidDrawWithFinger()", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 3480, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"toolkitDidDrawWithFinger()", 26, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2u, 3480, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
}

void sub_100C3AC2C()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;

  v1 = objc_msgSend(v0, "interactiveCanvasControllerForFreehandDrawingTools");
  v2 = objc_msgSend(v1, "layerHost");

  if (v2)
  {
    if ((objc_msgSend(v2, "respondsToSelector:", "asiOSCVC") & 1) != 0)
    {
      v3 = objc_msgSend(v2, "asiOSCVC");
      v4 = objc_msgSend(v3, "pencilMediator", swift_unknownObjectRelease(v2).n128_f64[0]);

      if (v4)
      {
        objc_msgSend(v4, "indirectTouchUsedForFreehandDrawingMode");
        swift_unknownObjectRelease(v4);
        return;
      }
    }
    else
    {
      swift_unknownObjectRelease(v2);
    }
  }
  sub_100757E04(&_mh_execute_header, (uint64_t)"toolkitDidDrawWithIndirectTouch()", 33, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 3487, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"toolkitDidDrawWithIndirectTouch()", 33, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2u, 3487, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
}

uint64_t sub_100C3ADE8(double a1, double a2)
{
  void *v2;
  id v5;
  id v6;
  id v7;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  id v14;

  v5 = sub_100C1CAE8();
  v6 = objc_msgSend(v5, "mode");

  v7 = objc_msgSend(v6, "pencilModeType");
  if (v7)
  {
    if (v7 == (id)1)
      return 3;
    if (v7 == (id)2)
      return 0;
    type metadata accessor for CRLiOSPencilModeType(0);
    v14 = v7;
    _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v13, &v14, v13, &type metadata for UInt);
    __break(1u);
    goto LABEL_12;
  }
  v9 = objc_msgSend(v2, "interactiveCanvasControllerForFreehandDrawingTools");
  v7 = objc_msgSend(v9, "layerHost");

  if (!v7)
    goto LABEL_13;
  if ((objc_msgSend(v7, "respondsToSelector:", "asiOSCVC") & 1) == 0)
  {
LABEL_12:
    swift_unknownObjectRelease(v7);
    goto LABEL_13;
  }
  v10 = objc_msgSend(v7, "asiOSCVC");
  v11 = objc_msgSend(v10, "pencilMediator", swift_unknownObjectRelease(v7).n128_f64[0]);

  if (!v11)
  {
LABEL_13:
    sub_100757E04(&_mh_execute_header, (uint64_t)"freehandDrawingBehavior(atUnscaledPoint:)", 41, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 3503, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"freehandDrawingBehavior(atUnscaledPoint:)", 41, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2u, 3503, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    return 0;
  }
  v12 = objc_msgSend(v11, "pencilBehaviorOutsideModesAtUnscaledPoint:", a1, a2);
  swift_unknownObjectRelease(v11);
  if (v12 == (id)1)
    return 3;
  else
    return 0;
}

uint64_t sub_100C3B16C(double *a1)
{
  void *v1;
  id v2;
  id v3;
  id v4;
  double *v5;
  objc_class *v6;
  _BYTE *v7;
  id v8;
  uint64_t result;
  CKRecordID v10;
  Swift::String v11;
  uint64_t v12;
  objc_super v13;
  double *v14;

  if (a1 == (double *)1)
  {
    v2 = v1;
    v3 = objc_msgSend(v2, "interactiveCanvasControllerForFreehandDrawingTools");
    v4 = objc_msgSend(objc_allocWithZone((Class)CRLiOSDocumentModeFreehandDrawing), "initWithBoardViewController:andInteractiveCanvasController:", v2, v3);
LABEL_5:
    v8 = v4;

    return (uint64_t)v8;
  }
  v5 = a1;
  if (a1 == (double *)2)
  {
    v2 = v1;
    v3 = objc_msgSend(v2, "interactiveCanvasControllerForFreehandDrawingTools");
    v6 = (objc_class *)type metadata accessor for CRLiOSDocumentModeHandwriting();
    v7 = objc_allocWithZone(v6);
    v7[OBJC_IVAR____TtC8Freeform29CRLiOSDocumentModeHandwriting_currentlyChangingModes] = 0;
    v7[OBJC_IVAR____TtC8Freeform29CRLiOSDocumentModeHandwriting_stayInHandwritingModeForSelectionChange] = 0;
    v7[OBJC_IVAR____TtC8Freeform29CRLiOSDocumentModeHandwriting_endModeCheckQueuedAfterTextGestures] = 0;
    *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform29CRLiOSDocumentModeHandwriting_subscriptions] = &_swiftEmptySetSingleton;
    swift_unknownObjectUnownedInit(&v7[OBJC_IVAR____TtC8Freeform29CRLiOSDocumentModeHandwriting_icc], v3);
    v13.receiver = v7;
    v13.super_class = v6;
    v4 = objc_msgSendSuper2(&v13, "initWithBoardViewController:", v2);
    goto LABEL_5;
  }
  if (!a1)
  {
    v5 = _swiftEmptyArrayStorage;
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v10, v11);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
  }
  type metadata accessor for CRLiOSPencilModeType(0);
  v14 = v5;
  result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v12, &v14, v12, &type metadata for UInt);
  __break(1u);
  return result;
}

void sub_100C3B484(uint64_t a1)
{
  uint64_t v1;
  unint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  uint64_t inited;
  id v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t KeyPath;
  uint64_t v22;
  char *v23;
  char *v24;
  char *Strong;
  id v26;
  id v27;
  id v28;
  NSString v29;
  id v30;
  id v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  id v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  id v42;
  char *v43;
  void *v44;
  char *v45;
  id v46;
  Swift::String v47;
  Swift::String v48;
  Swift::String v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  id v63;
  NSString v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _BYTE *v69;
  _BYTE *v70;
  id v71;
  id v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  unint64_t v79;
  char v80[72];
  char v81[24];
  Swift::String v82;

  v3 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v58 = a1;
    else
      v58 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v4 = _CocoaArrayWrapper.endIndex.getter(v58);
    swift_bridgeObjectRelease();
    if (v4 < 1)
      return;
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v4 < 1)
      return;
  }
  v5 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_statusHUDManager);
  v6 = qword_1013DD7D0;
  v7 = v5;
  if (v6 != -1)
    swift_once(&qword_1013DD7D0, sub_100A03C1C);
  swift_beginAccess(&static OS_os_log.crlJoinLeave, v81, 0, 0);
  v8 = (void *)static OS_os_log.crlJoinLeave;
  v9 = (id)sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v9, v80);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_QWORD *)(inited + 56) = &type metadata for Int;
  *(_QWORD *)(inited + 64) = &protocol witness table for Int;
  *(_QWORD *)(inited + 32) = v4;
  v11 = v8;
  v13 = static os_log_type_t.default.getter(v12);
  sub_100A06EBC((uint64_t)v11, &_mh_execute_header, v13, "collaboratorsAdded: %li", 23, 2, inited);
  swift_setDeallocating(inited);
  v14 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v14);

  v15 = v4 - 1;
  if (v4 == 1)
  {
    if (v3)
    {
      if (a1 < 0)
        v57 = a1;
      else
        v57 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a1);
      v16 = _CocoaArrayWrapper.endIndex.getter(v57);
      if (v16)
      {
LABEL_8:
        if ((a1 & 0xC000000000000001) != 0)
        {
          v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
        }
        else
        {
          if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_43;
          }
          v17 = *(id *)(a1 + 32);
        }
        v18 = v17;
        swift_bridgeObjectRelease();
        v19 = v18;
        sub_10063B4E0();
        v16 = v20;

        KeyPath = swift_getKeyPath(aX_10);
        v22 = swift_getKeyPath(aX_11);
        v9 = v19;
        static Published.subscript.getter(&v79, v9, KeyPath, v22);

        swift_release(KeyPath);
        swift_release(v22);
        v4 = v79;
        if (!(v79 >> 62))
        {
          if (*(_QWORD *)((v79 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_13;
          goto LABEL_47;
        }
LABEL_43:
        if (v4 < 0)
          v60 = v4;
        else
          v60 = v4 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v4);
        v61 = _CocoaArrayWrapper.endIndex.getter(v60);
        swift_bridgeObjectRelease();
        if (v61)
        {
LABEL_13:
          if ((v4 & 0xC000000000000001) != 0)
          {
            v23 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v4);
          }
          else
          {
            if (!*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
              return;
            }
            v23 = (char *)*(id *)(v4 + 32);
          }
          v24 = v23;
          swift_bridgeObjectRelease();
          Strong = (char *)swift_unknownObjectWeakLoadStrong(&v24[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_owner]);

          if (Strong)
          {
            v26 = *(id *)&Strong[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_cnContact];

LABEL_49:
            v62 = objc_msgSend((id)objc_opt_self(CRLColor), "blueColor");
            v63 = v26;
            if (v16)
            {
              v64 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease();
            }
            else
            {
              v64 = 0;
            }
            v65 = objc_msgSend(objc_allocWithZone((Class)CRLLobbySession_mi), "initWithDisplayName:indicatorDarkColor:cnContact:", v64, v62, v26);

            v66 = sub_1004B804C((uint64_t *)&unk_1013E4180);
            v67 = swift_allocObject(v66, 40, 7);
            *(_OWORD *)(v67 + 16) = xmmword_100EEF400;
            *(_QWORD *)(v67 + 32) = v65;
            v79 = v67;
            specialized Array._endMutation()(v67);
            v68 = v79;
            v69 = objc_allocWithZone((Class)type metadata accessor for CRLCollaboratorStatusHUDController_mi(0));
            *(_QWORD *)&v69[OBJC_IVAR____TtC8Freeform37CRLCollaboratorStatusHUDController_mi__cachedAccessoryView] = 0;
            v70 = &v69[OBJC_IVAR____TtC8Freeform37CRLCollaboratorStatusHUDController_mi_event];
            *(_QWORD *)v70 = v68;
            *((_QWORD *)v70 + 1) = 0;
            v70[16] = 0;
            v71 = v7;
            v72 = v65;
            swift_bridgeObjectRetain(v68);
            v73 = sub_100C48BC8(v71, 0, v69);
            sub_100BD32A0(v68, 0, 0);
            v75 = v74;
            v77 = v76;
            swift_bridgeObjectRelease();
            v78 = &v73[OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_accessibilityAnnouncement];
            *(_QWORD *)v78 = v75;
            *((_QWORD *)v78 + 1) = v77;

            swift_bridgeObjectRelease();
            sub_100C47A60(v73, (uint64_t)v71, (uint64_t (*)(uint64_t *))sub_100C4A698, (uint64_t (*)(uint64_t *))sub_100C4A6B4, (uint64_t)&unk_10129BCF8, (uint64_t)sub_100C4A6F8, (uint64_t)&unk_10129BD10, 0.0);

            return;
          }
LABEL_48:
          v26 = 0;
          goto LABEL_49;
        }
LABEL_47:
        swift_bridgeObjectRelease();
        goto LABEL_48;
      }
    }
    else
    {
      v16 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(a1);
      if (v16)
        goto LABEL_8;
    }
    swift_bridgeObjectRelease();
    v26 = 0;
    v9 = 0;
    goto LABEL_49;
  }
  v27 = objc_msgSend((id)objc_opt_self(CRLColor), "blueColor");
  v28 = objc_allocWithZone((Class)CRLLobbySession_mi);
  v29 = String._bridgeToObjectiveC()();
  v30 = objc_msgSend(v28, "initWithDisplayName:indicatorDarkColor:cnContact:", v29, v27, 0);

  v79 = (unint64_t)_swiftEmptyArrayStorage;
  v31 = v30;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v31);
  v33 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v32 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v33 >= v32 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v32 > 1, v33 + 1, 1);
  v34 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v33, v31);
  specialized Array._endMutation()(v34);
  do
  {
    v35 = v31;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v35);
    v37 = *(_QWORD *)((v79 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v36 = *(_QWORD *)((v79 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v37 >= v36 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v36 > 1, v37 + 1, 1);
    v38 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v37, v35);
    specialized Array._endMutation()(v38);
    --v15;
  }
  while (v15);
  v39 = v79;
  v40 = objc_allocWithZone((Class)type metadata accessor for CRLCollaboratorStatusHUDController_mi(0));
  *(_QWORD *)&v40[OBJC_IVAR____TtC8Freeform37CRLCollaboratorStatusHUDController_mi__cachedAccessoryView] = 0;
  v41 = &v40[OBJC_IVAR____TtC8Freeform37CRLCollaboratorStatusHUDController_mi_event];
  *(_QWORD *)v41 = v39;
  *((_QWORD *)v41 + 1) = 0;
  v41[16] = 2;
  v42 = v7;
  swift_bridgeObjectRetain(v39);
  v43 = sub_100C48BC8(v42, 0, v40);
  v44 = (void *)objc_opt_self(NSBundle);
  v45 = v43;
  v46 = objc_msgSend(v44, "mainBundle");
  v82._countAndFlagsBits = 0xD00000000000003FLL;
  v82._object = (void *)0x8000000100FFE520;
  v47._object = (void *)0x8000000100FFE500;
  v47._countAndFlagsBits = 0xD000000000000017;
  v48._countAndFlagsBits = 0;
  v48._object = (void *)0xE000000000000000;
  v49 = NSLocalizedString(_:tableName:bundle:value:comment:)(v47, (Swift::String_optional)0, (NSBundle)v46, v48, v82);

  v50 = swift_allocObject(v9, 72, 7);
  *(_OWORD *)(v50 + 16) = xmmword_100EF5E40;
  if ((unint64_t)v39 >> 62)
  {
    if (v39 < 0)
      v59 = v39;
    else
      v59 = v39 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v39);
    v51 = _CocoaArrayWrapper.endIndex.getter(v59);
    swift_bridgeObjectRelease();
  }
  else
  {
    v51 = *(_QWORD *)((v39 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  *(_QWORD *)(v50 + 56) = &type metadata for Int;
  *(_QWORD *)(v50 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v50 + 32) = v51;
  v52 = String.init(format:_:)(v49._countAndFlagsBits, v49._object, v50);
  v54 = v53;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v55 = (uint64_t *)&v45[OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_accessibilityAnnouncement];
  *v55 = v52;
  v55[1] = v54;

  swift_bridgeObjectRelease();
  v56 = v45;
  sub_100C47A60(v56, (uint64_t)v42, (uint64_t (*)(uint64_t *))sub_100C4A698, (uint64_t (*)(uint64_t *))sub_100C4A6B4, (uint64_t)&unk_10129BCF8, (uint64_t)sub_100C4A6F8, (uint64_t)&unk_10129BD10, 0.0);

}

void sub_100C3BCDC(uint64_t a1)
{
  uint64_t v1;
  unint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  uint64_t inited;
  id v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t KeyPath;
  uint64_t v22;
  char *v23;
  char *v24;
  char *Strong;
  id v26;
  id v27;
  id v28;
  NSString v29;
  id v30;
  id v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  id v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  id v42;
  char *v43;
  void *v44;
  char *v45;
  id v46;
  Swift::String v47;
  Swift::String v48;
  Swift::String v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  id v63;
  NSString v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _BYTE *v69;
  _BYTE *v70;
  id v71;
  id v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  unint64_t v79;
  char v80[72];
  char v81[24];
  Swift::String v82;

  v3 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v58 = a1;
    else
      v58 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v4 = _CocoaArrayWrapper.endIndex.getter(v58);
    swift_bridgeObjectRelease();
    if (v4 < 1)
      return;
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v4 < 1)
      return;
  }
  v5 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_statusHUDManager);
  v6 = qword_1013DD7D0;
  v7 = v5;
  if (v6 != -1)
    swift_once(&qword_1013DD7D0, sub_100A03C1C);
  swift_beginAccess(&static OS_os_log.crlJoinLeave, v81, 0, 0);
  v8 = (void *)static OS_os_log.crlJoinLeave;
  v9 = (id)sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v9, v80);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_QWORD *)(inited + 56) = &type metadata for Int;
  *(_QWORD *)(inited + 64) = &protocol witness table for Int;
  *(_QWORD *)(inited + 32) = v4;
  v11 = v8;
  v13 = static os_log_type_t.default.getter(v12);
  sub_100A06EBC((uint64_t)v11, &_mh_execute_header, v13, "collaboratorsRemoved: %li", 25, 2, inited);
  swift_setDeallocating(inited);
  v14 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v14);

  v15 = v4 - 1;
  if (v4 == 1)
  {
    if (v3)
    {
      if (a1 < 0)
        v57 = a1;
      else
        v57 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a1);
      v16 = _CocoaArrayWrapper.endIndex.getter(v57);
      if (v16)
      {
LABEL_8:
        if ((a1 & 0xC000000000000001) != 0)
        {
          v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
        }
        else
        {
          if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_43;
          }
          v17 = *(id *)(a1 + 32);
        }
        v18 = v17;
        swift_bridgeObjectRelease();
        v19 = v18;
        sub_10063B4E0();
        v16 = v20;

        KeyPath = swift_getKeyPath(aX_10);
        v22 = swift_getKeyPath(aX_11);
        v9 = v19;
        static Published.subscript.getter(&v79, v9, KeyPath, v22);

        swift_release(KeyPath);
        swift_release(v22);
        v4 = v79;
        if (!(v79 >> 62))
        {
          if (*(_QWORD *)((v79 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_13;
          goto LABEL_47;
        }
LABEL_43:
        if (v4 < 0)
          v60 = v4;
        else
          v60 = v4 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v4);
        v61 = _CocoaArrayWrapper.endIndex.getter(v60);
        swift_bridgeObjectRelease();
        if (v61)
        {
LABEL_13:
          if ((v4 & 0xC000000000000001) != 0)
          {
            v23 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v4);
          }
          else
          {
            if (!*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
              return;
            }
            v23 = (char *)*(id *)(v4 + 32);
          }
          v24 = v23;
          swift_bridgeObjectRelease();
          Strong = (char *)swift_unknownObjectWeakLoadStrong(&v24[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_owner]);

          if (Strong)
          {
            v26 = *(id *)&Strong[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_cnContact];

LABEL_49:
            v62 = objc_msgSend((id)objc_opt_self(CRLColor), "blueColor");
            v63 = v26;
            if (v16)
            {
              v64 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease();
            }
            else
            {
              v64 = 0;
            }
            v65 = objc_msgSend(objc_allocWithZone((Class)CRLLobbySession_mi), "initWithDisplayName:indicatorDarkColor:cnContact:", v64, v62, v26);

            v66 = sub_1004B804C((uint64_t *)&unk_1013E4180);
            v67 = swift_allocObject(v66, 40, 7);
            *(_OWORD *)(v67 + 16) = xmmword_100EEF400;
            *(_QWORD *)(v67 + 32) = v65;
            v79 = v67;
            specialized Array._endMutation()(v67);
            v68 = v79;
            v69 = objc_allocWithZone((Class)type metadata accessor for CRLCollaboratorStatusHUDController_mi(0));
            *(_QWORD *)&v69[OBJC_IVAR____TtC8Freeform37CRLCollaboratorStatusHUDController_mi__cachedAccessoryView] = 0;
            v70 = &v69[OBJC_IVAR____TtC8Freeform37CRLCollaboratorStatusHUDController_mi_event];
            *(_QWORD *)v70 = v68;
            *((_QWORD *)v70 + 1) = 0;
            v70[16] = 1;
            v71 = v7;
            v72 = v65;
            swift_bridgeObjectRetain(v68);
            v73 = sub_100C48BC8(v71, 0, v69);
            sub_100BD32A0(v68, 0, 1);
            v75 = v74;
            v77 = v76;
            swift_bridgeObjectRelease();
            v78 = &v73[OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_accessibilityAnnouncement];
            *(_QWORD *)v78 = v75;
            *((_QWORD *)v78 + 1) = v77;

            swift_bridgeObjectRelease();
            sub_100C47A60(v73, (uint64_t)v71, (uint64_t (*)(uint64_t *))sub_100C4A698, (uint64_t (*)(uint64_t *))sub_100C4A6B4, (uint64_t)&unk_10129BCF8, (uint64_t)sub_100C4A6F8, (uint64_t)&unk_10129BD10, 0.0);

            return;
          }
LABEL_48:
          v26 = 0;
          goto LABEL_49;
        }
LABEL_47:
        swift_bridgeObjectRelease();
        goto LABEL_48;
      }
    }
    else
    {
      v16 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(a1);
      if (v16)
        goto LABEL_8;
    }
    swift_bridgeObjectRelease();
    v26 = 0;
    v9 = 0;
    goto LABEL_49;
  }
  v27 = objc_msgSend((id)objc_opt_self(CRLColor), "blueColor");
  v28 = objc_allocWithZone((Class)CRLLobbySession_mi);
  v29 = String._bridgeToObjectiveC()();
  v30 = objc_msgSend(v28, "initWithDisplayName:indicatorDarkColor:cnContact:", v29, v27, 0);

  v79 = (unint64_t)_swiftEmptyArrayStorage;
  v31 = v30;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v31);
  v33 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v32 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v33 >= v32 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v32 > 1, v33 + 1, 1);
  v34 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v33, v31);
  specialized Array._endMutation()(v34);
  do
  {
    v35 = v31;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v35);
    v37 = *(_QWORD *)((v79 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v36 = *(_QWORD *)((v79 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v37 >= v36 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v36 > 1, v37 + 1, 1);
    v38 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v37, v35);
    specialized Array._endMutation()(v38);
    --v15;
  }
  while (v15);
  v39 = v79;
  v40 = objc_allocWithZone((Class)type metadata accessor for CRLCollaboratorStatusHUDController_mi(0));
  *(_QWORD *)&v40[OBJC_IVAR____TtC8Freeform37CRLCollaboratorStatusHUDController_mi__cachedAccessoryView] = 0;
  v41 = &v40[OBJC_IVAR____TtC8Freeform37CRLCollaboratorStatusHUDController_mi_event];
  *(_QWORD *)v41 = v39;
  *((_QWORD *)v41 + 1) = 0;
  v41[16] = 3;
  v42 = v7;
  swift_bridgeObjectRetain(v39);
  v43 = sub_100C48BC8(v42, 0, v40);
  v44 = (void *)objc_opt_self(NSBundle);
  v45 = v43;
  v46 = objc_msgSend(v44, "mainBundle");
  v82._countAndFlagsBits = 0xD00000000000003DLL;
  v82._object = (void *)0x8000000100FFE4C0;
  v47._object = (void *)0x8000000100FFE4A0;
  v47._countAndFlagsBits = 0xD000000000000015;
  v48._countAndFlagsBits = 0;
  v48._object = (void *)0xE000000000000000;
  v49 = NSLocalizedString(_:tableName:bundle:value:comment:)(v47, (Swift::String_optional)0, (NSBundle)v46, v48, v82);

  v50 = swift_allocObject(v9, 72, 7);
  *(_OWORD *)(v50 + 16) = xmmword_100EF5E40;
  if ((unint64_t)v39 >> 62)
  {
    if (v39 < 0)
      v59 = v39;
    else
      v59 = v39 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v39);
    v51 = _CocoaArrayWrapper.endIndex.getter(v59);
    swift_bridgeObjectRelease();
  }
  else
  {
    v51 = *(_QWORD *)((v39 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  *(_QWORD *)(v50 + 56) = &type metadata for Int;
  *(_QWORD *)(v50 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v50 + 32) = v51;
  v52 = String.init(format:_:)(v49._countAndFlagsBits, v49._object, v50);
  v54 = v53;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v55 = (uint64_t *)&v45[OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_accessibilityAnnouncement];
  *v55 = v52;
  v55[1] = v54;

  swift_bridgeObjectRelease();
  v56 = v45;
  sub_100C47A60(v56, (uint64_t)v42, (uint64_t (*)(uint64_t *))sub_100C4A698, (uint64_t (*)(uint64_t *))sub_100C4A6B4, (uint64_t)&unk_10129BCF8, (uint64_t)sub_100C4A6F8, (uint64_t)&unk_10129BD10, 0.0);

}

void sub_100C3C7B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  id v5;
  NSString v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;

  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController), "endEditing");
  v2 = a1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_findReplaceInteraction;
  Strong = swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_findReplaceInteraction);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = sub_100C1D170();
    v6 = objc_msgSend(v5, "searchString");

    if (!v6)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0);
      v9 = v8;
      v6 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v7 = swift_bridgeObjectRelease(v9).n128_u64[0];
    }
    objc_msgSend(v4, "setSearchText:", v6, v7);

  }
  v10 = (void *)swift_unknownObjectWeakLoadStrong(v2);
  if (v10)
  {
    v11 = v10;
    objc_msgSend(v10, "presentFindNavigatorShowingReplace:", 0);

  }
}

unint64_t sub_100C3C9E8()
{
  uint64_t v0;
  double *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char **v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  unint64_t v20;
  char **v21;
  __objc2_prot **v22;
  uint64_t v23;
  id v24;
  void *v25;
  id v26;
  void *v27;
  uint64_t v28;
  char **v29;
  id v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  double *v34;
  id v35;
  char v36;
  id v37;
  uint64_t v38;
  uint64_t v40;
  _QWORD v41[5];
  unint64_t v42;

  v1 = _swiftEmptyArrayStorage;
  v42 = (unint64_t)_swiftEmptyArrayStorage;
  v2 = *(char **)(*(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                            + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard)
                + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer);
  v3 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
  v4 = *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems];
  v5 = v2;
  if (!v4)
  {
    sub_100740DA4();
    v4 = *(_QWORD *)&v2[v3];
  }
  if (v4)
    v6 = v4;
  else
    v6 = (uint64_t)_swiftEmptyArrayStorage;
  swift_bridgeObjectRetain(v4);

  v41[0] = _swiftEmptyArrayStorage;
  if (!((unint64_t)v6 >> 62))
  {
    v7 = v6 & 0xFFFFFFFFFFFFF8;
    v8 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    v9 = &selRef_computeAlignmentFrameInRoot_;
    if (v8)
      goto LABEL_8;
LABEL_23:
    swift_bridgeObjectRelease();
    v16 = (unint64_t)_swiftEmptyArrayStorage;
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
      goto LABEL_38;
    goto LABEL_24;
  }
  if (v6 < 0)
    v17 = v6;
  else
    v17 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v6);
  v8 = _CocoaArrayWrapper.endIndex.getter(v17);
  swift_bridgeObjectRelease();
  v9 = &selRef_computeAlignmentFrameInRoot_;
  if (!v8)
    goto LABEL_23;
LABEL_8:
  if (v8 < 1)
  {
    __break(1u);
    goto LABEL_52;
  }
  v10 = 0;
  v1 = (double *)(v6 & 0xC000000000000001);
  do
  {
    if (v1)
      v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v10, v6);
    else
      v13 = *(id *)(v6 + 8 * v10 + 32);
    v14 = v13;
    v15 = objc_msgSend(v13, "conformsToProtocol:", &OBJC_PROTOCOL___CRLSearchable);
    if ((v15 & 1) != 0)
    {

    }
    else
    {
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v15);
      v11 = *(_QWORD *)(v41[0] + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v11);
      v12 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v11, v14);
      specialized ContiguousArray._endMutation()(v12);
    }
    ++v10;
  }
  while (v8 != v10);
  swift_bridgeObjectRelease();
  v16 = v41[0];
  if ((v41[0] & 0x8000000000000000) != 0)
    goto LABEL_38;
LABEL_24:
  if ((v16 & 0x4000000000000000) == 0)
  {
    v6 = *(_QWORD *)(v16 + 16);
    if (!v6)
      goto LABEL_39;
    goto LABEL_26;
  }
LABEL_38:
  swift_bridgeObjectRetain(v16);
  v6 = _CocoaArrayWrapper.endIndex.getter(v33);
  swift_release(v16);
  if (!v6)
    goto LABEL_39;
LABEL_26:
  if (v6 < 1)
  {
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  v18 = 0;
  v19 = *(void **)(v40 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController);
  v20 = v16 & 0xC000000000000001;
  v21 = &selRef_isLineSegment;
  v22 = &off_1012C6000;
  do
  {
    if (v20)
      v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v18, v16);
    else
      v24 = *(id *)(v16 + 8 * v18 + 32);
    v25 = v24;
    v26 = objc_msgSend(v19, v21[247], v24);
    if (v26)
    {
      v27 = v26;
      if ((objc_msgSend(v26, v9[37], v22[358]) & 1) != 0)
      {
        v28 = v6;
        v29 = v9;
        v30 = v27;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v30);
        v32 = *(_QWORD *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v31 = *(_QWORD *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v32 >= v31 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v31 > 1, v32 + 1, 1);
        v23 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v32, v30);
        specialized Array._endMutation()(v23);
        v9 = v29;
        v6 = v28;
        v20 = v16 & 0xC000000000000001;
        v21 = &selRef_isLineSegment;
        v22 = &off_1012C6000;
      }

    }
    ++v18;

  }
  while (v6 != v18);
LABEL_39:
  v34 = (double *)objc_msgSend(*(id *)(v40 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController), "layerHost", swift_release(v16).n128_f64[0]);
  v1 = v34;
  if (v34)
  {
    if ((objc_msgSend(v34, "respondsToSelector:", "asiOSCVC") & 1) != 0)
      v35 = objc_msgSend(v1, "asiOSCVC");
    else
      v35 = 0;
    v1 = (double *)objc_msgSend(v35, "smartSelectionManager", swift_unknownObjectRelease(v1).n128_f64[0]);

  }
  v41[3] = &type metadata for CRLFeatureFlags;
  v41[4] = sub_1004DB6DC();
  LOBYTE(v41[0]) = 13;
  v36 = isFeatureEnabled(_:)(v41);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v41);
  if ((v36 & 1) == 0)
    goto LABEL_49;
  if (v1)
  {
    v37 = objc_msgSend(v1, "makeFreehandDrawingItemsSearchTargetForCurrentlyCachedDrawing");
    if (!v37)
    {
LABEL_49:

      return v42;
    }
    v6 = (uint64_t)v37;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v6);
    v8 = *(_QWORD *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v7 = *(_QWORD *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v8 < v7 >> 1)
    {
LABEL_48:
      v38 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v8, v6);
      specialized Array._endMutation()(v38);

      goto LABEL_49;
    }
LABEL_53:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v7 > 1, v8 + 1, 1);
    goto LABEL_48;
  }
  return v42;
}

uint64_t sub_100C3CEB0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  char v8;
  id v9;
  char *v10;
  uint64_t Strong;
  void *v12;
  char v13;
  uint64_t KeyPath;
  uint64_t v15;
  id v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  char v24;
  uint64_t v25;
  void *v26;
  void *v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  char *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  objc_class *v40;
  id v41;
  id v42;
  NSString v43;
  NSString v44;
  id v45;
  NSString v46;
  id v49[5];
  objc_super v50;

  v1 = v0;
  v2 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v2);
  v4 = (char *)&v49[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator];
  v6 = OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator;
  v7 = *(id *)(v5 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator);
  v8 = sub_1006F2CE0();

  if ((v8 & 1) != 0)
  {
    v9 = *(id *)(v5 + v6);
    v10 = (char *)sub_100700E5C();

    Strong = swift_unknownObjectWeakLoadStrong(&v10[OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_followCoordinator]);
    if (!Strong)
    {

      return 0;
    }
    v12 = (void *)Strong;
    v49[3] = &type metadata for CRLFeatureFlags;
    v49[4] = (id)sub_1004DB6DC();
    LOBYTE(v49[0]) = 11;
    v13 = isFeatureEnabled(_:)(v49);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v49);
    if ((v13 & 1) != 0)
    {
      KeyPath = swift_getKeyPath(byte_100F2F3B8);
      v15 = swift_getKeyPath(byte_100F2F3E0);
      static Published.subscript.getter(v49, v12, KeyPath, v15);
      swift_release(KeyPath);
      swift_release(v15);
      if (v49[0])
      {

        if (qword_1013DD7C8 != -1)
          swift_once(&qword_1013DD7C8, sub_100A03AC0);
        swift_beginAccess(&static OS_os_log.crlFollow, v49, 0, 0);
        v16 = (id)static OS_os_log.crlFollow;
        v18 = static os_log_type_t.default.getter(v17);
        sub_100A06EBC((uint64_t)v16, &_mh_execute_header, v18, "Calling didEndFollowing because of the public endFollowSessionForLocalParticipant method was called", 99, 2, (uint64_t)_swiftEmptyArrayStorage);

        v19 = 1;
        sub_1006F534C(1);

        return v19;
      }
    }

    return 1;
  }
  v20 = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_delegate]);
  if (!v20)
  {
    v40 = (objc_class *)type metadata accessor for CRLiOSBoardViewController(0);
    v50.receiver = v1;
    v50.super_class = v40;
    return (uint64_t)objc_msgSendSuper2(&v50, "accessibilityPerformEscape");
  }
  v21 = v20;
  v22 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__isConnectorModeEnabled;
  v23 = v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__isConnectorModeEnabled];
  if (v23 != 2)
  {
    if ((v23 & 1) == 0)
      goto LABEL_11;
LABEL_25:
    sub_100C2BC68(0);
    v41 = objc_msgSend(v1, "view");
    v42 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v43 = String._bridgeToObjectiveC()();
    v44 = String._bridgeToObjectiveC()();
    v45 = objc_msgSend(v42, "localizedStringForKey:value:table:", v43, v44, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v45);
    v46 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    CRLAccessibilityPostAnnouncementNotification(v41, v46);

LABEL_26:
    swift_unknownObjectRelease(v21);
    return 1;
  }
  v24 = sub_100C2C364();
  v1[v22] = v24 & 1;
  if ((v24 & 1) != 0)
    goto LABEL_25;
LABEL_11:
  v25 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window;
  v26 = *(void **)(v21 + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window);
  if (!v26 || (objc_msgSend(v26, "isUserInteractionEnabled") & 1) == 0)
    goto LABEL_26;
  v27 = *(void **)(v21 + v25);
  if (!v27
    || (v28 = objc_msgSend(v27, "rootViewController")) == 0
    || (v29 = v28,
        v30 = objc_msgSend(v28, "crl_windowWrapper"),
        v29,
        !v30)
    || (v31 = objc_msgSend(v30, "newWrapperBeginningIgnoringUserInteractionSafely"), v30, !v31))
  {
    if (qword_1013DD6C8 != -1)
      swift_once(&qword_1013DD6C8, sub_100A00D28);
    swift_beginAccess(&static OS_os_log.crlError, v49, 0, 0);
    v32 = (id)static OS_os_log.crlError;
    v33 = static os_log_type_t.error.getter(v32);
    sub_100A06EBC((uint64_t)v32, &_mh_execute_header, v33, "Could not create token for ignoring user interaction; view hierarchy may not be set up yet",
      90,
      2,
      (uint64_t)_swiftEmptyArrayStorage);

    v31 = 0;
  }
  v34 = type metadata accessor for TaskPriority(0);
  v19 = 1;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v4, 1, 1, v34);
  type metadata accessor for MainActor(0);
  v35 = v31;
  swift_unknownObjectRetain(v21);
  v36 = v1;
  v37 = static MainActor.shared.getter(v36);
  v38 = (_QWORD *)swift_allocObject(&unk_10129BF28, 56, 7);
  v38[2] = v37;
  v38[3] = &protocol witness table for MainActor;
  v38[4] = v21;
  v38[5] = v36;
  v38[6] = v31;
  v39 = sub_100521B98((uint64_t)v4, (uint64_t)&unk_1013E1AC0, (uint64_t)v38);
  swift_unknownObjectRelease(v21);
  swift_release(v39);

  return v19;
}

uint64_t sub_100C3D430()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  char *v5;
  id v6;
  uint64_t Strong;
  void *v8;
  char v9;
  uint64_t KeyPath;
  uint64_t v11;
  id v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  void *v19;
  id v21[5];

  v1 = v0;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator);
  v3 = OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator;
  v4 = *(id *)(v2 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator);
  v5 = (char *)sub_100700E5C();

  v6 = *(id *)(v2 + v3);
  LOBYTE(v2) = sub_1006F2CE0();

  if ((v2 & 1) != 0)
  {
    Strong = swift_unknownObjectWeakLoadStrong(&v5[OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_followCoordinator]);
    if (Strong)
    {
      v8 = (void *)Strong;
      v21[3] = &type metadata for CRLFeatureFlags;
      v21[4] = (id)sub_1004DB6DC();
      LOBYTE(v21[0]) = 11;
      v9 = isFeatureEnabled(_:)(v21);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v21);
      if ((v9 & 1) != 0)
      {
        KeyPath = swift_getKeyPath(byte_100F2F3B8);
        v11 = swift_getKeyPath(byte_100F2F3E0);
        static Published.subscript.getter(v21, v8, KeyPath, v11);
        swift_release(KeyPath);
        swift_release(v11);
        if (v21[0])
        {

          if (qword_1013DD7C8 != -1)
            swift_once(&qword_1013DD7C8, sub_100A03AC0);
          swift_beginAccess(&static OS_os_log.crlFollow, v21, 0, 0);
          v12 = (id)static OS_os_log.crlFollow;
          v14 = static os_log_type_t.default.getter(v13);
          sub_100A06EBC((uint64_t)v12, &_mh_execute_header, v14, "Calling didEndFollowing because of the public endFollowSessionForLocalParticipant method was called", 99, 2, (uint64_t)_swiftEmptyArrayStorage);

          v15 = 1;
          sub_1006F534C(1);
          goto LABEL_16;
        }
      }

LABEL_15:
      return 1;
    }
  }
  else
  {
    v16 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_followHUD);
    if (v16)
    {
      ObjectType = swift_getObjectType(*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_followHUD));
      swift_unknownObjectRetain(v16);
      sub_1004C0158(1, ObjectType);
      swift_unknownObjectRelease(v16);
    }
    v18 = swift_unknownObjectWeakLoadStrong(&v5[OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_followCoordinator]);
    if (v18)
    {
      v8 = (void *)v18;
      v19 = (void *)swift_unknownObjectWeakLoadStrong(&v5[OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_lastFollowedParticipant]);
      v15 = (uint64_t)v19;
      if (!v19)
      {
LABEL_16:

        return v15;
      }
      sub_1006F63B4(v19, 0);

      goto LABEL_15;
    }
  }

  return 0;
}

uint64_t sub_100C3D6D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5[56] = a4;
  v5[57] = a5;
  v6 = type metadata accessor for CRLBoardCRDTData(0);
  v5[58] = v6;
  v5[59] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for URL(0);
  v5[60] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v5[61] = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[62] = swift_task_alloc(v9);
  v5[63] = swift_task_alloc(v9);
  v5[64] = swift_task_alloc(v9);
  v5[65] = swift_task_alloc(v9);
  v10 = sub_1004B804C(&qword_1013E04D0);
  v5[66] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MainActor(0);
  v5[67] = static MainActor.shared.getter(v11);
  v12 = dispatch thunk of Actor.unownedExecutor.getter(v11, &protocol witness table for MainActor);
  v5[68] = v12;
  v5[69] = v13;
  return swift_task_switch(sub_100C3D810, v12, v13);
}

uint64_t sub_100C3D810()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 528);
  v2 = *(_QWORD *)(v0 + 480);
  v3 = *(_QWORD *)(v0 + 448);
  v4 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 488) + 56);
  *(_QWORD *)(v0 + 560) = v4;
  v4(v1, 1, 1, v2);
  type metadata accessor for CRContext(0);
  *(_OWORD *)(v0 + 192) = 0u;
  *(_QWORD *)(v0 + 208) = 0;
  *(_OWORD *)(v0 + 176) = 0u;
  *(_QWORD *)(v0 + 568) = static CRContext.newTransientContext(uniqueAssetManager:encryptionDelegate:)(0, v0 + 176);
  sub_1004CB800(v0 + 176, (uint64_t *)&unk_1014064C0);
  v5 = *(_QWORD *)(*(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_boardActor);
  *(_QWORD *)(v0 + 576) = v5;
  swift_retain(v5);
  return swift_task_switch(sub_100C3D900, v5, 0);
}

uint64_t sub_100C3D900()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 576);
  type metadata accessor for CRLImmutableBoard(0);
  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform13CRLBoardActor_store);
  v3 = OBJC_IVAR____TtC8Freeform13CRLBoardActor_boardIdentifier;
  v4 = (_QWORD *)swift_task_alloc(dword_1013E8364);
  *(_QWORD *)(v0 + 584) = v4;
  *v4 = v0;
  v4[1] = sub_100C3D9B4;
  return sub_100618D44(v2, v1 + v3, 1);
}

uint64_t sub_100C3D9B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v7;

  v4 = *(_QWORD *)(*(_QWORD *)v2 + 584);
  v5 = *(_QWORD **)v2;
  v5[74] = a1;
  v5[75] = v1;
  swift_task_dealloc(v4);
  if (v1)
    return swift_task_switch(sub_100C3E2E8, v5[68], v5[69]);
  swift_release(v5[72]);
  v7 = (_QWORD *)swift_task_alloc(dword_10140B73C);
  v5[76] = v7;
  *v7 = v5;
  v7[1] = sub_100C3DAA4;
  return sub_100C3EE88(a1);
}

uint64_t sub_100C3DAA4()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 608));
  return swift_task_switch(sub_100C3DB20, *(_QWORD *)(v1 + 544), *(_QWORD *)(v1 + 552));
}

uint64_t sub_100C3DB20()
{
  uint64_t v0;
  id v1;
  NSString v2;
  id v3;
  void *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  void (*v18)(uint64_t, uint64_t, __n128);
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t KeyPath;
  uint64_t v27;
  _BOOL8 v28;
  objc_class *v29;
  char *v30;
  _QWORD *v31;
  void *v33;
  void *v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t inited;
  int v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  NSString v64;
  NSString v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(uint64_t, _QWORD, uint64_t, uint64_t);
  id v78;
  id v79;
  id v80;

  v1 = objc_allocWithZone((Class)CRLTemporaryDirectory);
  v2 = String._bridgeToObjectiveC()();
  *(_QWORD *)(v0 + 432) = 0;
  v3 = objc_msgSend(v1, "initWithSignature:error:", v2, v0 + 432);
  *(_QWORD *)(v0 + 616) = v3;

  v4 = *(void **)(v0 + 432);
  if (v3)
  {
    v5 = *(char **)(v0 + 592);
    v77 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 560);
    v79 = *(id *)(v0 + 568);
    v74 = *(_QWORD *)(v0 + 520);
    v75 = *(_QWORD *)(v0 + 528);
    v7 = *(_QWORD *)(v0 + 504);
    v6 = *(_QWORD *)(v0 + 512);
    v76 = *(_QWORD *)(v0 + 496);
    v8 = *(_QWORD *)(v0 + 480);
    v73 = *(_QWORD *)(v0 + 488);
    v9 = *(_QWORD *)(v0 + 472);
    v10 = v4;
    v11 = objc_msgSend(v3, "URL");
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v11);

    v12 = *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess(v12, v0 + 280, 0, 0);
    sub_1004B8460(v12, v9, type metadata accessor for CRLBoardCRDTData);
    v13 = v5;
    v14 = sub_1004B804C(&qword_1013E1980);
    CRRegister.wrappedValue.getter(v14);
    v15 = *(_QWORD *)(v0 + 376);
    v16 = *(_QWORD *)(v0 + 384);
    sub_1004B84A4(v9, type metadata accessor for CRLBoardCRDTData);

    URL.appendingPathComponent(_:)(v15, v16);
    v17 = swift_bridgeObjectRelease(v16);
    v18 = *(void (**)(uint64_t, uint64_t, __n128))(v73 + 8);
    *(_QWORD *)(v0 + 624) = v18;
    v18(v7, v8, v17);
    URL.appendingPathExtension(_:)(0x6D726F6665657266);
    ((void (*)(uint64_t, uint64_t))v18)(v6, v8);
    sub_1004CB800(v75, &qword_1013E04D0);
    v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v73 + 16);
    *(_QWORD *)(v0 + 632) = v19;
    v19(v75, v74, v8);
    v77(v75, 0, 1, v8);
    v19(v76, v74, v8);
    v20 = qword_1013DDD80;
    v78 = *(id *)&v13[OBJC_IVAR____TtC8Freeform8CRLBoard_store];
    v21 = v79;
    if (v20 != -1)
      swift_once(&qword_1013DDD80, sub_100BC9504);
    v22 = *(_QWORD *)(v0 + 568);
    v23 = *(_QWORD *)(v0 + 496);
    v24 = *(_QWORD *)(v0 + 480);
    v25 = qword_101480E68;
    KeyPath = swift_getKeyPath(&unk_100F2F350);
    v27 = swift_getKeyPath(&unk_100F2F378);
    static Published.subscript.getter((_QWORD *)(v0 + 664), v25, KeyPath, v27);
    swift_release(v27);
    swift_release(KeyPath);
    v28 = (*(_BYTE *)(v0 + 664) & 1) == 0;
    v29 = (objc_class *)type metadata accessor for CRLBoardFileWriteAssistant(0);
    v30 = (char *)objc_allocWithZone(v29);
    v19((uint64_t)&v30[OBJC_IVAR____TtC8Freeform26CRLBoardFileWriteAssistant_url], v23, v24);
    *(_QWORD *)&v30[OBJC_IVAR____TtC8Freeform26CRLBoardFileWriteAssistant_store] = v78;
    *(_QWORD *)&v30[OBJC_IVAR____TtC8Freeform26CRLBoardFileWriteAssistant_context] = v22;
    *(_QWORD *)&v30[OBJC_IVAR____TtC8Freeform26CRLBoardFileWriteAssistant_options] = v28;
    *(_QWORD *)(v0 + 392) = v30;
    *(_QWORD *)(v0 + 400) = v29;
    *(_QWORD *)(v0 + 640) = objc_msgSendSuper2((objc_super *)(v0 + 392), "init");
    ((void (*)(uint64_t, uint64_t))v18)(v23, v24);
    v31 = (_QWORD *)swift_task_alloc(dword_1013F5D0C);
    *(_QWORD *)(v0 + 648) = v31;
    *v31 = v0;
    v31[1] = sub_100C3E238;
    return sub_10085D150(*(_QWORD *)(v0 + 592));
  }
  else
  {
    v33 = *(void **)(v0 + 592);
    v34 = *(void **)(v0 + 568);
    v35 = *(_QWORD *)(v0 + 536);
    v36 = v4;
    v37 = _convertNSErrorToError(_:)(v4);

    swift_willThrow(v38);
    swift_release(v35);

    if (qword_1013DD6C8 != -1)
      swift_once(&qword_1013DD6C8, sub_100A00D28);
    v39 = *(_QWORD *)(v0 + 528);
    v41 = *(_QWORD *)(v0 + 480);
    v40 = *(_QWORD *)(v0 + 488);
    swift_beginAccess(&static OS_os_log.crlError, v0 + 328, 0, 0);
    v42 = (void *)static OS_os_log.crlError;
    v43 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v43, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
    v45 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v39, 1, v41);
    v46 = v37;
    if (v45)
    {
      v47 = v42;
      v48 = 0;
      v49 = 0;
    }
    else
    {
      v50 = *(_QWORD *)(v0 + 512);
      v52 = *(_QWORD *)(v0 + 480);
      v51 = *(_QWORD *)(v0 + 488);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v51 + 16))(v50, *(_QWORD *)(v0 + 528), v52);
      v48 = URL.path.getter(v42);
      v49 = v53;
      (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v50, v52);
    }
    v80 = *(id *)(v0 + 448);
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v54 = sub_1004CFC2C();
    *(_QWORD *)(inited + 64) = v54;
    if (v49)
      v55 = v48;
    else
      v55 = 0;
    v56 = 0xE000000000000000;
    if (v49)
      v56 = v49;
    *(_QWORD *)(inited + 32) = v55;
    *(_QWORD *)(inited + 40) = v56;
    swift_getErrorValue(v46, v0 + 408, v0 + 352);
    v57 = Error.localizedDescription.getter(*(_QWORD *)(v0 + 360), *(_QWORD *)(v0 + 368));
    *(_QWORD *)(inited + 96) = &type metadata for String;
    *(_QWORD *)(inited + 104) = v54;
    *(_QWORD *)(inited + 72) = v57;
    *(_QWORD *)(inited + 80) = v58;
    v59 = static os_log_type_t.error.getter(v57);
    sub_100A06EBC((uint64_t)v42, &_mh_execute_header, v59, "Error exporting board to file %@: %@", 36, 2, inited);
    swift_setDeallocating(inited);
    v60 = *(_QWORD *)(inited + 16);
    v61 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, v60, v61);

    swift_getErrorValue(v46, v0 + 416, v0 + 304);
    Error.localizedDescription.getter(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 320));
    v63 = v62;
    v64 = String._bridgeToObjectiveC()();
    v65 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v63);
    v66 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v64, v65, 1);

    objc_msgSend(v80, "presentViewController:animated:completion:", v66, 1, 0);
    swift_errorRelease(v46);
    v67 = *(_QWORD *)(v0 + 528);
    v68 = *(_QWORD *)(v0 + 520);
    v70 = *(_QWORD *)(v0 + 504);
    v69 = *(_QWORD *)(v0 + 512);
    v71 = *(_QWORD *)(v0 + 496);
    v72 = *(_QWORD *)(v0 + 472);
    sub_1004CB800(v67, &qword_1013E04D0);
    swift_task_dealloc(v67);
    swift_task_dealloc(v68);
    swift_task_dealloc(v69);
    swift_task_dealloc(v70);
    swift_task_dealloc(v71);
    swift_task_dealloc(v72);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100C3E238()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 648);
  *(_QWORD *)(*v1 + 656) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_100C3EB14;
  else
    v4 = sub_100C3E638;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 544), *(_QWORD *)(v2 + 552));
}

uint64_t sub_100C3E2E8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t inited;
  id v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSString v27;
  NSString v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v37;

  v1 = *(_QWORD *)(v0 + 576);
  v2 = *(void **)(v0 + 568);
  swift_release(*(_QWORD *)(v0 + 536));
  swift_release(v1);

  v3 = *(_QWORD *)(v0 + 600);
  if (qword_1013DD6C8 != -1)
    swift_once(&qword_1013DD6C8, sub_100A00D28);
  v4 = *(_QWORD *)(v0 + 528);
  v6 = *(_QWORD *)(v0 + 480);
  v5 = *(_QWORD *)(v0 + 488);
  swift_beginAccess(&static OS_os_log.crlError, v0 + 328, 0, 0);
  v7 = (void *)static OS_os_log.crlError;
  v8 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v8, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v4, 1, v6))
  {
    v10 = v7;
    v11 = 0;
    v12 = 0;
  }
  else
  {
    v13 = *(_QWORD *)(v0 + 512);
    v15 = *(_QWORD *)(v0 + 480);
    v14 = *(_QWORD *)(v0 + 488);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v14 + 16))(v13, *(_QWORD *)(v0 + 528), v15);
    v11 = URL.path.getter(v7);
    v12 = v16;
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  }
  v37 = *(id *)(v0 + 448);
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v17 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v17;
  if (v12)
    v18 = v11;
  else
    v18 = 0;
  v19 = 0xE000000000000000;
  if (v12)
    v19 = v12;
  *(_QWORD *)(inited + 32) = v18;
  *(_QWORD *)(inited + 40) = v19;
  swift_getErrorValue(v3, v0 + 408, v0 + 352);
  v20 = Error.localizedDescription.getter(*(_QWORD *)(v0 + 360), *(_QWORD *)(v0 + 368));
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v17;
  *(_QWORD *)(inited + 72) = v20;
  *(_QWORD *)(inited + 80) = v21;
  v22 = static os_log_type_t.error.getter(v20);
  sub_100A06EBC((uint64_t)v7, &_mh_execute_header, v22, "Error exporting board to file %@: %@", 36, 2, inited);
  swift_setDeallocating(inited);
  v23 = *(_QWORD *)(inited + 16);
  v24 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, v23, v24);

  swift_getErrorValue(v3, v0 + 416, v0 + 304);
  Error.localizedDescription.getter(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 320));
  v26 = v25;
  v27 = String._bridgeToObjectiveC()();
  v28 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v26);
  v29 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v27, v28, 1);

  objc_msgSend(v37, "presentViewController:animated:completion:", v29, 1, 0);
  swift_errorRelease(v3);
  v30 = *(_QWORD *)(v0 + 528);
  v31 = *(_QWORD *)(v0 + 520);
  v33 = *(_QWORD *)(v0 + 504);
  v32 = *(_QWORD *)(v0 + 512);
  v34 = *(_QWORD *)(v0 + 496);
  v35 = *(_QWORD *)(v0 + 472);
  sub_1004CB800(v30, &qword_1013E04D0);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100C3E638()
{
  _QWORD *v0;
  void (*v1)(_QWORD *, uint64_t, uint64_t);
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  Class isa;
  id v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  id v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  void *v29;
  void *v30;
  void (*v31)(uint64_t, uint64_t);
  void *v32;
  void *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v1 = (void (*)(_QWORD *, uint64_t, uint64_t))v0[79];
  v2 = (void *)v0[77];
  v3 = v0[65];
  v4 = v0[60];
  swift_release(v0[67]);
  v5 = sub_1004B804C((uint64_t *)&unk_1013E8830);
  v6 = swift_allocObject(v5, 64, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100EF5E40;
  *(_QWORD *)(v6 + 56) = v4;
  v7 = sub_10050D1B0((_QWORD *)(v6 + 32));
  v1(v7, v3, v4);
  v8 = objc_allocWithZone((Class)type metadata accessor for CRLSelectionAwareActivityViewController());
  isa = Array._bridgeToObjectiveC()().super.isa;
  v10 = objc_msgSend(v8, "initWithActivityItems:applicationActivities:", isa, 0);

  v11 = sub_100BC21B4(v10);
  swift_bridgeObjectRelease(v6);
  v12 = swift_allocObject(&unk_10129BB40, 24, 7);
  v0[16] = _NSConcreteStackBlock;
  *(_QWORD *)(v12 + 16) = v2;
  v0[20] = SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
  v0[21] = v12;
  v0[17] = *(_QWORD *)"";
  v0[18] = sub_10075AF68;
  v0[19] = &unk_10129BB58;
  v13 = _Block_copy(v0 + 16);
  v14 = v0[21];
  v15 = v11;
  v16 = v2;
  objc_msgSend(v15, "setCompletionWithItemsHandler:", v13, swift_release(v14).n128_f64[0]);
  _Block_release(v13);

  if (objc_msgSend((id)objc_opt_self(UIDevice), "crl_padUI"))
  {
    v17 = v0[57];
    objc_msgSend(v15, "setModalPresentationStyle:", 7);
    sub_1004CB7BC(v17, (uint64_t)(v0 + 31), &qword_1013E0230);
    if (v0[34])
    {
      v18 = sub_1004B8930(0, (unint64_t *)&qword_1013E19A0, UIBarButtonItem_ptr);
      if ((swift_dynamicCast(v0 + 53, v0 + 31, (char *)&type metadata for Any + 8, v18, 6) & 1) != 0)
      {
        v19 = (id)v0[53];
        v20 = objc_msgSend(v15, "popoverPresentationController");
        if (!v20)
        {
LABEL_19:

          goto LABEL_20;
        }
        v21 = v20;
        objc_msgSend(v20, "setBarButtonItem:", v19);
LABEL_12:

        goto LABEL_19;
      }
    }
    else
    {
      sub_1004CB800((uint64_t)(v0 + 31), &qword_1013E0230);
    }
    sub_1004CB7BC(v0[57], (uint64_t)(v0 + 27), &qword_1013E0230);
    if (v0[30])
    {
      v22 = sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
      if ((swift_dynamicCast(v0 + 55, v0 + 27, (char *)&type metadata for Any + 8, v22, 6) & 1) != 0)
      {
        v19 = (id)v0[55];
        v23 = objc_msgSend(v15, "popoverPresentationController");
        if (v23)
        {
          v24 = v23;
          objc_msgSend(v23, "setSourceView:", v19);

        }
        v21 = objc_msgSend(v15, "popoverPresentationController");
        objc_msgSend(v21, "setCanOverlapSourceViewRect:", 1);
        goto LABEL_12;
      }
    }
    else
    {
      sub_1004CB800((uint64_t)(v0 + 27), &qword_1013E0230);
    }
    v25 = objc_msgSend(v15, "popoverPresentationController");
    if (v25)
    {
      v26 = v25;
      v27 = objc_msgSend((id)v0[56], "view");
      objc_msgSend(v26, "setSourceView:", v27);

    }
    v28 = objc_msgSend(v15, "popoverPresentationController");
    if (v28)
    {
      v29 = v28;
      objc_msgSend(v28, "setSourceRect:", 0.0, 0.0, 0.0, 0.0);

    }
    v19 = objc_msgSend(v15, "popoverPresentationController");
    objc_msgSend(v19, "setCanOverlapSourceViewRect:", 1);
    goto LABEL_19;
  }
LABEL_20:
  v30 = (void *)v0[80];
  v31 = (void (*)(uint64_t, uint64_t))v0[78];
  v32 = (void *)v0[77];
  v33 = (void *)v0[74];
  v34 = (void *)v0[71];
  v35 = v0[65];
  v36 = v0[60];
  objc_msgSend((id)v0[56], "presentViewController:animated:completion:", v15, 1, 0);

  v31(v35, v36);
  v37 = v0[66];
  v38 = v0[65];
  v40 = v0[63];
  v39 = v0[64];
  v41 = v0[62];
  v42 = v0[59];
  sub_1004CB800(v37, &qword_1013E04D0);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  return ((uint64_t (*)(void))v0[1])();
}

uint64_t sub_100C3EB14()
{
  uint64_t v0;
  void *v1;
  void (*v2)(uint64_t, uint64_t);
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t inited;
  id v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSString v32;
  NSString v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v42;

  v1 = *(void **)(v0 + 640);
  v2 = *(void (**)(uint64_t, uint64_t))(v0 + 624);
  v3 = *(void **)(v0 + 616);
  v4 = *(void **)(v0 + 592);
  v5 = *(void **)(v0 + 568);
  v6 = *(_QWORD *)(v0 + 520);
  v7 = *(_QWORD *)(v0 + 480);
  swift_release(*(_QWORD *)(v0 + 536));

  v2(v6, v7);
  v8 = *(_QWORD *)(v0 + 656);
  if (qword_1013DD6C8 != -1)
    swift_once(&qword_1013DD6C8, sub_100A00D28);
  v9 = *(_QWORD *)(v0 + 528);
  v11 = *(_QWORD *)(v0 + 480);
  v10 = *(_QWORD *)(v0 + 488);
  swift_beginAccess(&static OS_os_log.crlError, v0 + 328, 0, 0);
  v12 = (void *)static OS_os_log.crlError;
  v13 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v13, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v9, 1, v11))
  {
    v15 = v12;
    v16 = 0;
    v17 = 0;
  }
  else
  {
    v18 = *(_QWORD *)(v0 + 512);
    v20 = *(_QWORD *)(v0 + 480);
    v19 = *(_QWORD *)(v0 + 488);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v19 + 16))(v18, *(_QWORD *)(v0 + 528), v20);
    v16 = URL.path.getter(v12);
    v17 = v21;
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  }
  v42 = *(id *)(v0 + 448);
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v22 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v22;
  if (v17)
    v23 = v16;
  else
    v23 = 0;
  v24 = 0xE000000000000000;
  if (v17)
    v24 = v17;
  *(_QWORD *)(inited + 32) = v23;
  *(_QWORD *)(inited + 40) = v24;
  swift_getErrorValue(v8, v0 + 408, v0 + 352);
  v25 = Error.localizedDescription.getter(*(_QWORD *)(v0 + 360), *(_QWORD *)(v0 + 368));
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v22;
  *(_QWORD *)(inited + 72) = v25;
  *(_QWORD *)(inited + 80) = v26;
  v27 = static os_log_type_t.error.getter(v25);
  sub_100A06EBC((uint64_t)v12, &_mh_execute_header, v27, "Error exporting board to file %@: %@", 36, 2, inited);
  swift_setDeallocating(inited);
  v28 = *(_QWORD *)(inited + 16);
  v29 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, v28, v29);

  swift_getErrorValue(v8, v0 + 416, v0 + 304);
  Error.localizedDescription.getter(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 320));
  v31 = v30;
  v32 = String._bridgeToObjectiveC()();
  v33 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v31);
  v34 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v32, v33, 1);

  objc_msgSend(v42, "presentViewController:animated:completion:", v34, 1, 0);
  swift_errorRelease(v8);
  v35 = *(_QWORD *)(v0 + 528);
  v36 = *(_QWORD *)(v0 + 520);
  v38 = *(_QWORD *)(v0 + 504);
  v37 = *(_QWORD *)(v0 + 512);
  v39 = *(_QWORD *)(v0 + 496);
  v40 = *(_QWORD *)(v0 + 472);
  sub_1004CB800(v35, &qword_1013E04D0);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100C3EE88(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[12] = a1;
  v2[13] = v1;
  v3 = type metadata accessor for MainActor(0);
  v2[14] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  v2[15] = v4;
  v2[16] = v5;
  return swift_task_switch(sub_100C3EEF4, v4, v5);
}

uint64_t sub_100C3EEF4()
{
  uint64_t v0;
  id v1;
  void *v2;
  _QWORD *v3;

  v1 = objc_allocWithZone((Class)type metadata accessor for CRLFileWriteAssetDownloadAlertViewController(0));
  *(_BYTE *)(v0 + 152) = 0;
  State.init(wrappedValue:)((_QWORD *)(v0 + 80), v0 + 152, &type metadata for Bool);
  *(_BYTE *)(v0 + 16) = *(_BYTE *)(v0 + 80);
  *(_QWORD *)(v0 + 24) = *(_QWORD *)(v0 + 88);
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 64) = 0u;
  v2 = (void *)UIHostingController.init(rootView:)(v0 + 16);
  *(_QWORD *)(v0 + 136) = v2;
  objc_msgSend(v2, "setModalPresentationStyle:", 2);
  v3 = (_QWORD *)swift_task_alloc(dword_10140E9B4);
  *(_QWORD *)(v0 + 144) = v3;
  *v3 = v0;
  v3[1] = sub_100C3EFAC;
  return sub_100D1B864(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104));
}

uint64_t sub_100C3EFAC()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 144));
  return swift_task_switch(sub_100C3EFF8, *(_QWORD *)(v1 + 120), *(_QWORD *)(v1 + 128));
}

uint64_t sub_100C3EFF8()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;

  v1 = *(_QWORD *)(v0 + 112);

  v2 = swift_release(v1);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
}

uint64_t sub_100C3F034(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5[49] = a4;
  v5[50] = a5;
  v6 = type metadata accessor for CRLBoardCRDTData(0);
  v5[51] = v6;
  v5[52] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for URL(0);
  v5[53] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v5[54] = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[55] = swift_task_alloc(v9);
  v5[56] = swift_task_alloc(v9);
  v5[57] = swift_task_alloc(v9);
  v10 = sub_1004B804C(&qword_1013E04D0);
  v5[58] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MainActor(0);
  v5[59] = static MainActor.shared.getter(v11);
  v12 = dispatch thunk of Actor.unownedExecutor.getter(v11, &protocol witness table for MainActor);
  v5[60] = v12;
  v5[61] = v13;
  return swift_task_switch(sub_100C3F160, v12, v13);
}

uint64_t sub_100C3F160()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v5;

  v1 = v0[58];
  v2 = v0[53];
  v3 = v0[49];
  v4 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0[54] + 56);
  v0[62] = v4;
  v4(v1, 1, 1, v2);
  v5 = *(_QWORD *)(*(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_boardActor);
  v0[63] = v5;
  swift_retain(v5);
  return swift_task_switch(sub_100C3F208, v5, 0);
}

uint64_t sub_100C3F208()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 504);
  type metadata accessor for CRLImmutableBoard(0);
  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform13CRLBoardActor_store);
  v3 = OBJC_IVAR____TtC8Freeform13CRLBoardActor_boardIdentifier;
  v4 = (_QWORD *)swift_task_alloc(dword_1013E8364);
  *(_QWORD *)(v0 + 512) = v4;
  *v4 = v0;
  v4[1] = sub_100C3F2BC;
  return sub_100618D44(v2, v1 + v3, 1);
}

uint64_t sub_100C3F2BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 512);
  v3[65] = a1;
  v3[66] = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v5 = v3[60];
    v6 = v3[61];
    v7 = sub_100C3FD48;
  }
  else
  {
    swift_release(v3[63]);
    v5 = v3[60];
    v6 = v3[61];
    v7 = sub_100C3F380;
  }
  return swift_task_switch(v7, v5, v6);
}

uint64_t sub_100C3F380()
{
  _QWORD *v0;
  id v1;
  NSString v2;
  id v3;
  void *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  void (*v18)(uint64_t, uint64_t, __n128);
  void (*v19)(uint64_t, uint64_t, uint64_t);
  void *v20;
  unint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  __n128 v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t inited;
  id v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  void *v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  NSString v53;
  NSString v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  id v67;
  Class isa;
  id v69;
  void *v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  id v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  id v79;
  id v80;
  uint64_t v81;
  id v82;
  void *v83;
  id v84;
  void *v85;
  id v86;
  id v87;
  void *v88;
  void *v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void (*v96)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v97;
  void (*v98)(uint64_t, uint64_t);
  void *v99;

  swift_release(v0[59]);
  v1 = objc_allocWithZone((Class)CRLTemporaryDirectory);
  v2 = String._bridgeToObjectiveC()();
  v0[46] = 0;
  v3 = objc_msgSend(v1, "initWithSignature:error:", v2, v0 + 46);

  v4 = (void *)v0[46];
  if (!v3)
  {
    v24 = (void *)v0[65];
    v25 = v4;
    v22 = _convertNSErrorToError(_:)(v4);

    swift_willThrow(v26);
    goto LABEL_6;
  }
  v5 = (char *)v0[65];
  v96 = (void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v0[62];
  v97 = v0[66];
  v6 = v0[56];
  v94 = v0[57];
  v95 = v0[58];
  v7 = v0[55];
  v92 = v0 + 42;
  v93 = v0[54];
  v9 = v0[52];
  v8 = v0[53];
  v10 = v4;
  v99 = v3;
  v11 = objc_msgSend(v3, "URL");
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v11);

  v12 = *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v12, v0 + 30, 0, 0);
  sub_1004B8460(v12, v9, type metadata accessor for CRLBoardCRDTData);
  v13 = v5;
  v14 = sub_1004B804C(&qword_1013E1980);
  CRRegister.wrappedValue.getter(v14);
  v15 = v0[42];
  v16 = v0[43];
  sub_1004B84A4(v9, type metadata accessor for CRLBoardCRDTData);

  URL.appendingPathComponent(_:)(v15, v16);
  v17 = swift_bridgeObjectRelease(v16);
  v18 = *(void (**)(uint64_t, uint64_t, __n128))(v93 + 8);
  v18(v7, v8, v17);
  URL.appendingPathExtension(_:)(0x6E69776172646B70);
  ((void (*)(uint64_t, uint64_t))v18)(v6, v8);
  sub_1004CB800(v95, &qword_1013E04D0);
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v93 + 16);
  v19(v95, v94, v8);
  v96(v95, 0, 1, v8);
  v20 = sub_100B24BA0();
  v22 = v97;
  if (!v97)
  {
    v27 = (uint64_t)v20;
    v28 = v21;
    Data.write(to:options:)(v0[57], 1, v20, v21);
    v98 = (void (*)(uint64_t, uint64_t))v18;
    v62 = v0[57];
    v63 = v0[53];
    v64 = sub_1004B804C((uint64_t *)&unk_1013E8830);
    v65 = swift_allocObject(v64, 64, 7);
    *(_OWORD *)(v65 + 16) = xmmword_100EF5E40;
    *(_QWORD *)(v65 + 56) = v63;
    v66 = sub_10050D1B0((_QWORD *)(v65 + 32));
    v19((uint64_t)v66, v62, v63);
    v67 = objc_allocWithZone((Class)type metadata accessor for CRLSelectionAwareActivityViewController());
    isa = Array._bridgeToObjectiveC()().super.isa;
    v69 = objc_msgSend(v67, "initWithActivityItems:applicationActivities:", isa, 0);

    v70 = sub_100BC21B4(v69);
    swift_bridgeObjectRelease(v65);
    v71 = swift_allocObject(&unk_10129BB90, 24, 7);
    *(_QWORD *)(v71 + 16) = v99;
    v0[20] = SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
    v0[21] = v71;
    v0[16] = _NSConcreteStackBlock;
    v0[17] = *(_QWORD *)"";
    v0[18] = sub_10075AF68;
    v0[19] = &unk_10129BBA8;
    v72 = _Block_copy(v0 + 16);
    v73 = v0[21];
    v74 = v70;
    v75 = v99;
    objc_msgSend(v74, "setCompletionWithItemsHandler:", v72, swift_release(v73).n128_f64[0]);
    _Block_release(v72);

    if (!objc_msgSend((id)objc_opt_self(UIDevice), "crl_padUI"))
      goto LABEL_37;
    v76 = v0[50];
    objc_msgSend(v74, "setModalPresentationStyle:", 7);
    sub_1004CB7BC(v76, (uint64_t)(v0 + 26), &qword_1013E0230);
    if (v0[29])
    {
      v77 = sub_1004B8930(0, (unint64_t *)&qword_1013E19A0, UIBarButtonItem_ptr);
      if ((swift_dynamicCast(v0 + 48, v0 + 26, (char *)&type metadata for Any + 8, v77, 6) & 1) != 0)
      {
        v78 = (id)v0[48];
        v79 = objc_msgSend(v74, "popoverPresentationController");
        if (!v79)
        {
LABEL_36:

LABEL_37:
          v89 = (void *)v0[65];
          v90 = v0[57];
          v91 = v0[53];
          objc_msgSend((id)v0[49], "presentViewController:animated:completion:", v74, 1, 0, v92);
          sub_1004BBBC8(v27, v28);

          v98(v90, v91);
          goto LABEL_17;
        }
        v80 = v79;
        objc_msgSend(v79, "setBarButtonItem:", v78);
LABEL_29:

        goto LABEL_36;
      }
    }
    else
    {
      sub_1004CB800((uint64_t)(v0 + 26), &qword_1013E0230);
    }
    sub_1004CB7BC(v0[50], (uint64_t)(v0 + 22), &qword_1013E0230);
    if (v0[25])
    {
      v81 = sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
      if ((swift_dynamicCast(v0 + 47, v0 + 22, (char *)&type metadata for Any + 8, v81, 6) & 1) != 0)
      {
        v78 = (id)v0[47];
        v82 = objc_msgSend(v74, "popoverPresentationController");
        if (v82)
        {
          v83 = v82;
          objc_msgSend(v82, "setSourceView:", v78);

        }
        v80 = objc_msgSend(v74, "popoverPresentationController", v92);
        objc_msgSend(v80, "setCanOverlapSourceViewRect:", 1);
        goto LABEL_29;
      }
    }
    else
    {
      sub_1004CB800((uint64_t)(v0 + 22), &qword_1013E0230);
    }
    v84 = objc_msgSend(v74, "popoverPresentationController", v92);
    if (v84)
    {
      v85 = v84;
      v86 = objc_msgSend((id)v0[49], "view");
      objc_msgSend(v85, "setSourceView:", v86);

    }
    v87 = objc_msgSend(v74, "popoverPresentationController");
    if (v87)
    {
      v88 = v87;
      objc_msgSend(v87, "setSourceRect:", 0.0, 0.0, 0.0, 0.0);

    }
    v78 = objc_msgSend(v74, "popoverPresentationController");
    objc_msgSend(v78, "setCanOverlapSourceViewRect:", 1);
    goto LABEL_36;
  }
  v23 = (void *)v0[65];
  ((void (*)(_QWORD, _QWORD))v18)(v0[57], v0[53]);

LABEL_6:
  if (qword_1013DD6C8 != -1)
    swift_once(&qword_1013DD6C8, sub_100A00D28);
  v29 = v0[58];
  v30 = v0[53];
  v31 = v0[54];
  swift_beginAccess(&static OS_os_log.crlError, v0 + 36, 0, 0);
  v32 = (void *)static OS_os_log.crlError;
  v33 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v33, v0 + 2);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
  {
    v35 = v32;
    v36 = 0;
    v37 = 0;
  }
  else
  {
    v38 = v0[56];
    v39 = v0[53];
    v40 = v0[54];
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v40 + 16))(v38, v0[58], v39);
    v36 = URL.path.getter(v32);
    v37 = v41;
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v38, v39);
  }
  v42 = (void *)v0[49];
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v43 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v43;
  if (v37)
    v44 = v36;
  else
    v44 = 0;
  v45 = 0xE000000000000000;
  if (v37)
    v45 = v37;
  *(_QWORD *)(inited + 32) = v44;
  *(_QWORD *)(inited + 40) = v45;
  swift_getErrorValue(v22, v0 + 45, v0 + 39);
  v46 = Error.localizedDescription.getter(v0[40], v0[41]);
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v43;
  *(_QWORD *)(inited + 72) = v46;
  *(_QWORD *)(inited + 80) = v47;
  v48 = static os_log_type_t.error.getter(v46);
  sub_100A06EBC((uint64_t)v32, &_mh_execute_header, v48, "Error exporting board drawings to file %@: %@", 45, 2, inited);
  swift_setDeallocating(inited);
  v49 = *(_QWORD *)(inited + 16);
  v50 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, v49, v50);

  swift_getErrorValue(v22, v0 + 44, v0 + 33);
  Error.localizedDescription.getter(v0[34], v0[35]);
  v52 = v51;
  v53 = String._bridgeToObjectiveC()();
  v54 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v52);
  v55 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v53, v54, 1);

  objc_msgSend(v42, "presentViewController:animated:completion:", v55, 1, 0);
  swift_errorRelease(v22);
LABEL_17:
  v56 = v0[57];
  v57 = v0[58];
  v59 = v0[55];
  v58 = v0[56];
  v60 = v0[52];
  sub_1004CB800(v57, &qword_1013E04D0);
  swift_task_dealloc(v57);
  swift_task_dealloc(v56);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  return ((uint64_t (*)(void))v0[1])();
}

uint64_t sub_100C3FD48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t inited;
  id v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSString v26;
  NSString v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v35;

  v1 = *(_QWORD *)(v0 + 504);
  swift_release(*(_QWORD *)(v0 + 472));
  swift_release(v1);
  v2 = *(_QWORD *)(v0 + 528);
  if (qword_1013DD6C8 != -1)
    swift_once(&qword_1013DD6C8, sub_100A00D28);
  v3 = *(_QWORD *)(v0 + 464);
  v5 = *(_QWORD *)(v0 + 424);
  v4 = *(_QWORD *)(v0 + 432);
  swift_beginAccess(&static OS_os_log.crlError, v0 + 288, 0, 0);
  v6 = (void *)static OS_os_log.crlError;
  v7 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v7, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v3, 1, v5))
  {
    v9 = v6;
    v10 = 0;
    v11 = 0;
  }
  else
  {
    v12 = *(_QWORD *)(v0 + 448);
    v14 = *(_QWORD *)(v0 + 424);
    v13 = *(_QWORD *)(v0 + 432);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v13 + 16))(v12, *(_QWORD *)(v0 + 464), v14);
    v10 = URL.path.getter(v6);
    v11 = v15;
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  v35 = *(id *)(v0 + 392);
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v16 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v16;
  if (v11)
    v17 = v10;
  else
    v17 = 0;
  v18 = 0xE000000000000000;
  if (v11)
    v18 = v11;
  *(_QWORD *)(inited + 32) = v17;
  *(_QWORD *)(inited + 40) = v18;
  swift_getErrorValue(v2, v0 + 360, v0 + 312);
  v19 = Error.localizedDescription.getter(*(_QWORD *)(v0 + 320), *(_QWORD *)(v0 + 328));
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v16;
  *(_QWORD *)(inited + 72) = v19;
  *(_QWORD *)(inited + 80) = v20;
  v21 = static os_log_type_t.error.getter(v19);
  sub_100A06EBC((uint64_t)v6, &_mh_execute_header, v21, "Error exporting board drawings to file %@: %@", 45, 2, inited);
  swift_setDeallocating(inited);
  v22 = *(_QWORD *)(inited + 16);
  v23 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, v22, v23);

  swift_getErrorValue(v2, v0 + 352, v0 + 264);
  Error.localizedDescription.getter(*(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 280));
  v25 = v24;
  v26 = String._bridgeToObjectiveC()();
  v27 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v25);
  v28 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v26, v27, 1);

  objc_msgSend(v35, "presentViewController:animated:completion:", v28, 1, 0);
  swift_errorRelease(v2);
  v29 = *(_QWORD *)(v0 + 456);
  v30 = *(_QWORD *)(v0 + 464);
  v32 = *(_QWORD *)(v0 + 440);
  v31 = *(_QWORD *)(v0 + 448);
  v33 = *(_QWORD *)(v0 + 416);
  sub_1004CB800(v30, &qword_1013E04D0);
  swift_task_dealloc(v30);
  swift_task_dealloc(v29);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100C402A0()
{
  char *v0;
  double v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  sub_100C235E8(0);
  if ((sub_100C1D040() & 1) == 0)
  {
    v7 = objc_msgSend((id)objc_opt_self(CRLiOSKeyboardMonitor), "sharedKeyboardMonitor");
    objc_msgSend(v7, "onScreenHeight");
    if (v1 <= 0.0)
    {
      v6 = v7;
      goto LABEL_7;
    }
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController], "scrollCurrentSelectionToVisibleWithOptions:", 0);
    v2 = objc_msgSend(v0, "view");
    if (v2)
    {
      v3 = v2;
      objc_msgSend(v2, "setNeedsLayout");

      v4 = objc_msgSend(v0, "view");
      if (v4)
      {
        v5 = v4;
        objc_msgSend(v4, "layoutIfNeeded");

        v6 = v5;
LABEL_7:

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

double sub_100C4044C(double a1, double a2, double a3, double a4)
{
  void *v4;
  id v9;
  double v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double MinY;
  double MaxY;
  double v22;
  CGRect v24;
  CGRect v25;
  CGRect v26;

  v9 = objc_msgSend(v4, "view");
  v10 = 0.0;
  if (v9)
  {
    v11 = v9;
    v12 = objc_msgSend(v9, "window");
    if (v12
      && (v13 = v12,
          v14 = objc_msgSend(v12, "screen"),
          v13,
          v15 = objc_msgSend(v14, "coordinateSpace"),
          v14,
          v15))
    {
      objc_msgSend(v11, "convertRect:fromCoordinateSpace:", v15, a1, a2, a3, a4);
      x = v24.origin.x;
      y = v24.origin.y;
      width = v24.size.width;
      height = v24.size.height;
      MinY = CGRectGetMinY(v24);
      v25.origin.x = x;
      v25.origin.y = y;
      v25.size.width = width;
      v25.size.height = height;
      MaxY = CGRectGetMaxY(v25);
      objc_msgSend(v11, "bounds");
      v22 = CGRectGetMaxY(v26);
      swift_unknownObjectRelease(v15);

      if (MaxY >= v22)
      {
        if (v22 - MinY < 0.0)
          return 0.0;
        else
          return v22 - MinY;
      }
    }
    else
    {

    }
  }
  return v10;
}

uint64_t sub_100C405B0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[8] = a1;
  v2[9] = v1;
  v3 = type metadata accessor for MainActor(0);
  v2[10] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  return swift_task_switch(sub_100C4061C, v4, v5);
}

uint64_t sub_100C4061C()
{
  _QWORD *v0;
  char *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  Class isa;
  id v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v18;

  v1 = (char *)objc_msgSend(*(id *)(v0[9] + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController), "editingCoordinator", swift_release(v0[10]).n128_f64[0]);
  v2 = v1;
  if (v1)
  {
    v4 = (void *)v0[8];
    v3 = (void *)v0[9];
    v5 = *(id *)&v1[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_boardItemFactory];

    v6 = sub_1004B804C((uint64_t *)&unk_1013E4180);
    v7 = swift_allocObject(v6, 40, 7);
    *(_OWORD *)(v7 + 16) = xmmword_100EEF400;
    *(_QWORD *)(v7 + 32) = v4;
    v18 = v7;
    specialized Array._endMutation()(v7);
    v8 = objc_allocWithZone((Class)CRLiOSItemProviderItemSource);
    sub_1004B8930(0, &qword_10140B7E0, NSItemProvider_ptr);
    v9 = v4;
    isa = Array._bridgeToObjectiveC()().super.isa;
    v11 = objc_msgSend(v8, "initWithItemProviders:", isa, swift_bridgeObjectRelease().n128_f64[0], v18);

    v12 = swift_allocObject(&unk_10129BE38, 24, 7);
    v0[2] = _NSConcreteStackBlock;
    *(_QWORD *)(v12 + 16) = v3;
    v0[6] = sub_100C4ED68;
    v0[7] = v12;
    v0[3] = *(_QWORD *)"";
    v0[4] = sub_100C40980;
    v0[5] = &unk_10129BE50;
    v13 = _Block_copy(v0 + 2);
    v14 = v0[7];
    v15 = v3;
    v16 = objc_msgSend(v11, "loadProvidersForImportedBoardItemsUsingBoardItemFactory:WithLoadHandler:", v5, v13, swift_release(v14).n128_f64[0]);

    _Block_release(v13);
  }
  return ((uint64_t (*)(BOOL))v0[1])(v2 != 0);
}

void sub_100C407F8(uint64_t a1, char *a2)
{
  char *v4;
  void *v5;
  id v6;
  Class isa;
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  char *v13;
  id v14;
  _QWORD aBlock[5];
  uint64_t v16;

  v4 = (char *)objc_msgSend(*(id *)&a2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController], "editingCoordinator");
  if (v4)
  {
    v5 = v4;
    v14 = *(id *)&v4[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_boardItemFactory];

    if (a1)
    {
      v6 = objc_allocWithZone((Class)CRLPasteboardMultipleImportableBoardItemProvider);
      swift_bridgeObjectRetain(a1);
      sub_1004B804C(&qword_1013E3690);
      isa = Array._bridgeToObjectiveC()().super.isa;
      v8 = objc_msgSend(v6, "initWithImportableBoardItemProviders:", isa, swift_bridgeObjectRelease().n128_f64[0]);

      v9 = swift_allocObject(&unk_10129BE88, 32, 7);
      *(_QWORD *)(v9 + 16) = v8;
      *(_QWORD *)(v9 + 24) = a2;
      aBlock[4] = sub_100C4ED9C;
      v16 = v9;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(_QWORD *)"";
      aBlock[2] = sub_1005D2FC0;
      aBlock[3] = &unk_10129BEA0;
      v10 = _Block_copy(aBlock);
      v11 = v16;
      v12 = v8;
      v13 = a2;
      objc_msgSend(v12, "provideBoardItemsWithFactory:completionHandler:", v14, v10, swift_release(v11).n128_f64[0]);
      _Block_release(v10);

    }
    else
    {

    }
  }
}

double sub_100C40980(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, __n128);
  uint64_t v5;
  __n128 v6;
  double result;

  v2 = a2;
  v4 = *(void (**)(uint64_t, __n128))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  if (a2)
  {
    v5 = sub_1004B804C(&qword_1013E3690);
    v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v5);
  }
  v6 = swift_retain(v3);
  v4(v2, v6);
  swift_release(v3);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_100C40B14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v4 = type metadata accessor for MainActor(0);
  v3[5] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  return swift_task_switch(sub_100C40B84, v5, v6);
}

uint64_t sub_100C40B84()
{
  uint64_t *v0;
  void *v1;
  const void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  uint64_t **v7;

  v1 = (void *)v0[4];
  v3 = (void *)v0[2];
  v2 = (const void *)v0[3];
  swift_release(v0[5]);
  v0[6] = (uint64_t)_Block_copy(v2);
  v4 = dword_10140B7DC;
  v5 = v3;
  v6 = v1;
  v7 = (uint64_t **)swift_task_alloc(v4);
  v0[7] = (uint64_t)v7;
  *v7 = v0;
  v7[1] = (uint64_t *)sub_100C40C00;
  return sub_100C405B0(v0[2]);
}

uint64_t sub_100C40C00(char a1)
{
  uint64_t *v1;
  void (**v3)(_QWORD, _QWORD);
  void *v4;
  void *v5;
  uint64_t v7;

  v3 = *(void (***)(_QWORD, _QWORD))(*v1 + 48);
  v4 = *(void **)(*v1 + 32);
  v5 = *(void **)(*v1 + 16);
  v7 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 56));

  v3[2](v3, a1 & 1);
  _Block_release(v3);
  return (*(uint64_t (**)(void))(v7 + 8))();
}

double sub_100C40C7C(void *a1, char *a2)
{
  id v3;
  double result;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[5];
  uint64_t v17;

  v3 = objc_msgSend(a1, "boardItems");
  if (v3)
  {
    v5 = v3;
    v6 = type metadata accessor for CRLBoardItem(0);
    v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

    if ((unint64_t)v7 >> 62)
    {
      if (v7 < 0)
        v14 = v7;
      else
        v14 = v7 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v7);
      v15 = _CocoaArrayWrapper.endIndex.getter(v14);
      swift_bridgeObjectRelease();
      if (!v15)
        goto LABEL_11;
    }
    else if (!*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_11;
    }
    v8 = objc_msgSend(*(id *)&a2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController], "layerHost");
    if (v8)
    {
      v9 = v8;
      v10 = swift_allocObject(&unk_10129BED8, 32, 7);
      *(_QWORD *)(v10 + 16) = a2;
      *(_QWORD *)(v10 + 24) = v7;
      v16[4] = sub_100C4EDD0;
      v17 = v10;
      v16[0] = _NSConcreteStackBlock;
      v16[1] = *(_QWORD *)"";
      v16[2] = sub_1005D2FC0;
      v16[3] = &unk_10129BEF0;
      v11 = _Block_copy(v16);
      v12 = v17;
      v13 = a2;
      objc_msgSend(v9, "continueAsynchronousWorkOnMainThreadUsingBlock:", v11, swift_release(v12).n128_f64[0]);
      swift_unknownObjectRelease(v9);
      _Block_release(v11);
      return result;
    }
LABEL_11:
    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  }
  return result;
}

double sub_100C40DF0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  double result;

  sub_100C4E7D0(a2);
  v3 = sub_100C1CC20();
  sub_10054C750(a2, 0, 0);
  *(_QWORD *)&result = swift_release(v3).n128_u64[0];
  return result;
}

void sub_100C40E34()
{
  char *v0;
  char *v1;
  void *Strong;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  id v6;
  void (*v7)(_QWORD *, _QWORD);
  BOOL *v8;
  double v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  unsigned __int8 v19;
  void *v20;
  uint64_t v21;
  void *v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  objc_class *v37;
  void *v38;
  id v39;
  _QWORD v40[4];

  v1 = v0;
  sub_100C38488();
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController], "endEditing");
  objc_msgSend(v0, "endDrawingModeIfNeeded");
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_findReplaceInteraction]);
  objc_msgSend(Strong, "dismissFindNavigator");

  sub_100C320DC();
  v3 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState];
  KeyPath = swift_getKeyPath(&unk_100F2F400);
  v5 = swift_getKeyPath(&unk_100F2F428);
  v6 = v3;
  v7 = (void (*)(_QWORD *, _QWORD))static Published.subscript.modify(v40, v6, KeyPath, v5);
  *v8 = !*v8;
  v7(v40, 0);

  swift_release(KeyPath);
  *(_QWORD *)&v9 = swift_release(v5).n128_u64[0];
  v10 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_compactScenesNavigatorViewController];
  if (v10)
  {
    v11 = v10;
    v12 = objc_msgSend(v1, "presentedViewController");
    if (v12)
    {
      v13 = v12;
      sub_1004B8930(0, (unint64_t *)&qword_1013F6620, UIViewController_ptr);
      v14 = v11;
      v15 = v13;
      LOBYTE(v13) = static NSObject.== infix(_:_:)(v15, v14);

      if ((v13 & 1) != 0)
      {
        v16 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_compactScenesPresenter];
        if (v16)
        {
          v17 = v16;
          sub_100564CC8(v14);

        }
LABEL_12:

        return;
      }
    }

  }
  v18 = objc_msgSend(v1, "traitCollection", v9);
  if (objc_msgSend(v18, "horizontalSizeClass") == (id)1)
  {

LABEL_10:
    v20 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_compactScenesPresenter];
    if (!v20)
      return;
    v14 = v20;
    sub_100564CC8(v1);
    goto LABEL_12;
  }
  v19 = objc_msgSend((id)objc_opt_self(UIDevice), "crl_phoneUI");

  if ((v19 & 1) != 0)
    goto LABEL_10;
  v21 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesNavigatorViewController;
  v22 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesNavigatorViewController];
  if (v22)
  {
    v23 = objc_msgSend(v22, "view");
    if (v23)
    {
      v14 = v23;
      v24 = *(void **)&v1[v21];
      if (v24)
      {
        v25 = v24;
        v26 = sub_100B6732C();

        v27 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasViewController];
        v28 = objc_msgSend(v27, "miniFormatterPresenter");
        if (v28)
        {
          v29 = v28;
          if (objc_msgSend(v28, "isPresentingMiniFormatter"))
            objc_msgSend(v29, "dismissMiniFormatter");
          swift_unknownObjectRelease(v29);
        }
        v30 = sub_1004B804C((uint64_t *)&unk_1013E4180);
        v31 = swift_allocObject(v30, 40, 7);
        *(_OWORD *)(v31 + 16) = xmmword_100EEF400;
        *(_QWORD *)(v31 + 32) = v14;
        v40[0] = v31;
        specialized Array._endMutation()(v31);
        v32 = v40[0];
        v14 = v14;
        v33 = objc_msgSend(v27, "passthroughViewsToAllowCanvasInteractionDuringPopoverPresentation");
        if (!v33)
        {
          __break(1u);
          return;
        }
        v34 = v33;
        v35 = sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
        v36 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v34, v35);

        v40[0] = v32;
        sub_10061EC3C(v36);
        v37 = (objc_class *)v40[0];
        v38 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPresenter];
        if (v38)
        {
          v39 = v38;
          sub_100563D58(v1, (uint64_t)v26, v37);

          swift_bridgeObjectRelease(v37);
        }
        else
        {

          swift_bridgeObjectRelease(v37);
        }
      }
      goto LABEL_12;
    }
  }
}

uint64_t sub_100C411FC(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_BYTE *)(v3 + 464) = a2;
  *(_QWORD *)(v3 + 272) = a1;
  *(_QWORD *)(v3 + 280) = v2;
  v4 = type metadata accessor for CRLBoardCRDTData(0);
  *(_QWORD *)(v3 + 288) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UUID(0);
  *(_QWORD *)(v3 + 296) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CRLBoardIdentifier(0);
  *(_QWORD *)(v3 + 304) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v3 + 312) = v7;
  *(_QWORD *)(v3 + 320) = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  *(_QWORD *)(v3 + 328) = v8;
  *(_QWORD *)(v3 + 336) = v9;
  return swift_task_switch(sub_100C412D0, v8, v9);
}

id sub_100C412D0()
{
  uint64_t v0;
  void *v1;
  char *v2;
  char *v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  double v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id result;
  void *v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  id v39;
  void *v40;
  void *v41;
  void *v42;
  uint64_t v43;
  uint64_t inited;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  void *v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v1 = *(void **)(*(_QWORD *)(v0 + 280)
                + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController);
  v2 = (char *)objc_msgSend(v1, "board");
  *(_QWORD *)(v0 + 344) = v2;
  if (!v2)
  {
    swift_release(*(_QWORD *)(v0 + 320));
    if (qword_1013DD7E0 != -1)
      swift_once(&qword_1013DD7E0, sub_100A03F14);
    swift_beginAccess(&static OS_os_log.crlScenes, v0 + 200, 0, 0);
    v42 = (void *)static OS_os_log.crlScenes;
    v43 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v43, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v45 = v42;
    v46 = UUID.uuidString.getter(v45);
    v48 = v47;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v49 = sub_1004CFC2C();
    *(_QWORD *)(inited + 64) = v49;
    *(_QWORD *)(inited + 32) = v46;
    *(_QWORD *)(inited + 40) = v48;
    v50 = static os_log_type_t.error.getter(v49);
    sub_100A06EBC((uint64_t)v45, &_mh_execute_header, v50, "Failed to generate thumbnail image for scene %{public} due to a nil board", 73, 2, inited);
    swift_setDeallocating(inited);
    v51 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v51);
    goto LABEL_22;
  }
  v3 = v2;
  v5 = *(_QWORD *)(v0 + 272);
  v4 = *(void **)(v0 + 280);
  v6 = objc_msgSend(v4, "traitCollection");
  v7 = objc_msgSend(v6, "preferredContentSizeCategory");

  *(_BYTE *)(v0 + 465) = sub_100565448(v7) & 1;
  objc_msgSend(v1, "visibleUnscaledRect");
  *(double *)(v0 + 352) = sub_100062EB4(1, v8, v9, *(CGFloat *)(v5 + OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect), *(CGFloat *)(v5 + OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect + 8), *(CGFloat *)(v5 + OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect + 16), *(CGFloat *)(v5 + OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect + 24));
  *(_QWORD *)(v0 + 360) = v10;
  *(_QWORD *)(v0 + 368) = v11;
  *(_QWORD *)(v0 + 376) = v12;
  result = objc_msgSend(v4, "view");
  if (result)
  {
    v14 = result;
    v15 = objc_msgSend(result, "window");

    if (v15
      && (v16 = objc_msgSend(v15, "windowScene"), v15, v16)
      && (v17 = objc_msgSend(v16, "delegate"),
          *(_QWORD *)(v0 + 384) = v17,
          v16,
          v17))
    {
      v18 = type metadata accessor for CRLiOSSceneDelegate(0);
      v19 = swift_dynamicCastClass(v17, v18);
      *(_QWORD *)(v0 + 392) = v19;
      if (v19)
      {
        v20 = *(_QWORD *)(v0 + 312);
        v59 = *(_QWORD *)(v0 + 304);
        v22 = *(_QWORD *)(v0 + 288);
        v21 = *(_QWORD *)(v0 + 296);
        *(_QWORD *)(v0 + 400) = OBJC_IVAR____TtC8Freeform12CRLSceneInfo_sceneID;
        v23 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
        v24 = *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform8CRLBoard_data];
        v25 = v24 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
        swift_beginAccess(v24 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v0 + 224, 0, 0);
        sub_1004B8460(v25, v22, type metadata accessor for CRLBoardCRDTData);
        swift_retain(v24);
        swift_unknownObjectRetain(v17);
        v26 = sub_1004B804C(&qword_1013E1A80);
        CRRegister.wrappedValue.getter(v26);
        sub_1004B84A4(v22, type metadata accessor for CRLBoardCRDTData);
        swift_release(v24);
        v27 = (uint64_t *)(*(_QWORD *)&v3[v23] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
        v29 = *v27;
        v28 = v27[1];
        swift_bridgeObjectRetain(v28);
        v30 = sub_10067AFD0(v21, v29, v28, v59);
        *(_QWORD *)(v0 + 408) = static MainActor.shared.getter(v30);
        v31 = dispatch thunk of Actor.unownedExecutor.getter(v20, &protocol witness table for MainActor);
        *(_QWORD *)(v0 + 416) = v31;
        *(_QWORD *)(v0 + 424) = v32;
        return (id)swift_task_switch(sub_100C417E4, v31, v32);
      }
      v33 = *(_QWORD *)(v0 + 320);
      swift_unknownObjectRelease(v17);
    }
    else
    {
      v33 = *(_QWORD *)(v0 + 320);
    }
    swift_release(v33);
    v34 = *(_QWORD *)(v0 + 272);
    v35 = sub_1004B804C((uint64_t *)&unk_1013E4180);
    v36 = swift_initStackObject(v35, v0 + 160);
    *(_OWORD *)(v36 + 16) = xmmword_100EEF400;
    *(_QWORD *)(v36 + 32) = v34;
    v60 = v36;
    specialized Array._endMutation()(v36);
    v37 = *(void **)(v0 + 272);
    if ((unint64_t)v60 >> 62)
    {
      if (v60 < 0)
        v52 = v60;
      else
        v52 = v60 & 0xFFFFFFFFFFFFFF8;
      v53 = v37;
      swift_bridgeObjectRetain(v60);
      v54 = _CocoaArrayWrapper.endIndex.getter(v52);
      swift_bridgeObjectRelease();
      if (v54)
        goto LABEL_11;
    }
    else
    {
      v38 = *(_QWORD *)((v60 & 0xFFFFFFFFFFFFF8) + 0x10);
      v39 = v37;
      if (v38)
      {
LABEL_11:
        sub_1004B891C(v60);
        v41 = v40;
LABEL_21:
        v45 = *(id *)(v0 + 344);
        v55 = *(void **)(v0 + 280);
        swift_bridgeObjectRelease();
        v56 = v55;
        sub_100C48FDC((uint64_t)v41, (uint64_t)v56);

        swift_bridgeObjectRelease();
LABEL_22:

        v57 = *(_QWORD *)(v0 + 296);
        v58 = *(_QWORD *)(v0 + 288);
        swift_task_dealloc(*(_QWORD *)(v0 + 304));
        swift_task_dealloc(v57);
        swift_task_dealloc(v58);
        return (id)(*(uint64_t (**)(_QWORD))(v0 + 8))(0);
      }
    }
    v41 = &_swiftEmptySetSingleton;
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

void sub_100C417E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  _QWORD *v5;
  double v6;

  sub_10090373C();
  *(_QWORD *)(v0 + 432) = v1;
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 400);
    v3 = *(unsigned __int8 *)(v0 + 465);
    v4 = *(_QWORD *)(v0 + 272);
    v5 = (_QWORD *)swift_task_alloc(dword_1013E4334);
    *(_QWORD *)(v0 + 440) = v5;
    *v5 = v0;
    v5[1] = sub_100C41898;
    if (v3)
      v6 = 75.0;
    else
      v6 = 50.0;
    sub_100592EEC(v4 + v2, *(_QWORD *)(v0 + 304), *(_BYTE *)(v0 + 464), *(double *)(v0 + 352), *(double *)(v0 + 360), *(double *)(v0 + 368), *(double *)(v0 + 376), v6, v6);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100C41898(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 440);
  *(_QWORD *)(*v2 + 448) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = *(_QWORD *)(v4 + 416);
    v7 = *(_QWORD *)(v4 + 424);
    v8 = sub_100C41AB8;
  }
  else
  {

    *(_QWORD *)(v4 + 456) = a1;
    v6 = *(_QWORD *)(v4 + 416);
    v7 = *(_QWORD *)(v4 + 424);
    v8 = sub_100C41914;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_100C41914()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[48];
  v2 = v0[38];
  swift_release(v0[51]);
  sub_1004B84A4(v2, type metadata accessor for CRLBoardIdentifier);
  swift_unknownObjectRelease(v1);
  return swift_task_switch(sub_100C4196C, v0[41], v0[42]);
}

uint64_t sub_100C4196C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  void *v6;
  uint64_t v7;
  id v8;
  void *v9;
  void *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 456);
  swift_release(*(_QWORD *)(v0 + 320));
  v2 = *(void **)(v0 + 392);
  v3 = *(_QWORD *)(v0 + 272);
  v4 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  inited = swift_initStackObject(v4, v0 + 160);
  *(_OWORD *)(inited + 16) = xmmword_100EEF400;
  *(_QWORD *)(inited + 32) = v3;
  v20 = inited;
  specialized Array._endMutation()(inited);
  v6 = *(void **)(v0 + 272);
  if ((unint64_t)v20 >> 62)
  {
    if (v20 < 0)
      v11 = v20;
    else
      v11 = v20 & 0xFFFFFFFFFFFFFF8;
    v12 = v6;
    swift_bridgeObjectRetain(v20);
    v13 = _CocoaArrayWrapper.endIndex.getter(v11);
    swift_bridgeObjectRelease();
    if (v13)
      goto LABEL_3;
LABEL_8:
    v10 = &_swiftEmptySetSingleton;
    goto LABEL_9;
  }
  v7 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
  v8 = v6;
  if (!v7)
    goto LABEL_8;
LABEL_3:
  sub_1004B891C(v20);
  v10 = v9;
LABEL_9:
  v14 = *(void **)(v0 + 344);
  v15 = *(void **)(v0 + 280);
  swift_bridgeObjectRelease();
  v16 = v15;
  sub_100C48FDC((uint64_t)v10, (uint64_t)v16);

  swift_bridgeObjectRelease();
  v17 = *(_QWORD *)(v0 + 296);
  v18 = *(_QWORD *)(v0 + 288);
  swift_task_dealloc(*(_QWORD *)(v0 + 304));
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_100C41AB8()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (void *)v0[54];
  v2 = v0[48];
  v3 = v0[38];
  swift_release(v0[51]);

  sub_1004B84A4(v3, type metadata accessor for CRLBoardIdentifier);
  swift_unknownObjectRelease(v2);
  return swift_task_switch(sub_100C41B20, v0[41], v0[42]);
}

uint64_t sub_100C41B20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t inited;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 320);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 384));
  swift_release(v1);
  if (qword_1013DD7E0 != -1)
    swift_once(&qword_1013DD7E0, sub_100A03F14);
  v2 = *(_QWORD *)(v0 + 448);
  v3 = *(void **)(v0 + 344);
  swift_beginAccess(&static OS_os_log.crlScenes, v0 + 248, 0, 0);
  v4 = (void *)static OS_os_log.crlScenes;
  v5 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v5, v0 + 88);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v7 = v4;
  v8 = UUID.uuidString.getter(v7);
  v10 = v9;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v11 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v11;
  *(_QWORD *)(inited + 32) = v8;
  *(_QWORD *)(inited + 40) = v10;
  v12 = static os_log_type_t.error.getter(v11);
  sub_100A06EBC((uint64_t)v7, &_mh_execute_header, v12, "Failed to generate thumbnail image for scene %{public}", 54, 2, inited);
  swift_setDeallocating(inited);
  v13 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v13);

  swift_errorRelease(v2);
  v14 = *(_QWORD *)(v0 + 296);
  v15 = *(_QWORD *)(v0 + 288);
  swift_task_dealloc(*(_QWORD *)(v0 + 304));
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

void sub_100C41CAC(void **a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  void *v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double *v33;
  id v34;
  void *v35;
  id v36;
  __n128 v37;
  id v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  char *v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t *v49;
  char isUniquelyReferenced_nonNull_native;
  id v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  unint64_t v55;
  uint64_t v56;
  char *v57;
  _BYTE v58[24];
  uint64_t v59;

  v3 = v2;
  v6 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v6);
  v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UUID(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v57 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v13 = __chkstk_darwin(v12).n128_u64[0];
  v54 = (char *)&v51 - v14;
  v15 = (char *)*a1;
  v52 = a2;
  v16 = *(void **)(a2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController);
  objc_msgSend(v16, "visibleUnscaledRect", v13);
  v51 = v15;
  v19 = sub_100062EB4(1, v17, v18, *(CGFloat *)&v15[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect], *(CGFloat *)&v15[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect + 8], *(CGFloat *)&v15[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect + 16], *(CGFloat *)&v15[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect + 24]);
  v21 = v20;
  v23 = v22;
  v25 = v24;
  v26 = objc_msgSend(v16, "canvas");
  v27 = objc_msgSend(v26, "layoutController");

  v28 = objc_msgSend(v27, "layoutsInRect:deep:", 1, v19, v21, v23, v25);
  v29 = sub_1004B8930(0, (unint64_t *)&qword_1013FC960, off_101229810);
  v30 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v28, v29);

  if (!((unint64_t)v30 >> 62))
  {
    v31 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v30);
    v53 = v2;
    if (v31)
      goto LABEL_3;
LABEL_26:
    v33 = _swiftEmptyArrayStorage;
LABEL_27:
    swift_bridgeObjectRelease_n(v30, 2);
    v47 = v51;
    v48 = sub_100AF7994((uint64_t)v33);
    swift_bridgeObjectRelease();
    v49 = (uint64_t *)(v52 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_sceneToContentDict);
    swift_beginAccess(v52 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_sceneToContentDict, v58, 33, 0);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v59 = *v49;
    *v49 = 0x8000000000000000;
    sub_10082A434(v48, v47, isUniquelyReferenced_nonNull_native);
    *v49 = v59;

    swift_bridgeObjectRelease();
    swift_endAccess(v58);
    return;
  }
  if (v30 < 0)
    v46 = v30;
  else
    v46 = v30 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v30);
  v31 = _CocoaArrayWrapper.endIndex.getter(v46);
  v53 = v3;
  if (!v31)
    goto LABEL_26;
LABEL_3:
  if (v31 >= 1)
  {
    v32 = 0;
    v33 = _swiftEmptyArrayStorage;
    v55 = v30 & 0xC000000000000001;
    v56 = v30;
    do
    {
      if (v55)
        v34 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v32, v30);
      else
        v34 = *(id *)(v30 + 8 * v32 + 32);
      v35 = v34;
      v36 = objc_msgSend(v34, "info");
      if (v36)
      {
        v38 = v36;
        v39 = type metadata accessor for CRLBoardItem(0);
        v40 = (_QWORD *)swift_dynamicCastClass(v38, v39);
        if (v40)
        {
          (*(void (**)(void))((swift_isaMask & *v40) + 0x88))();
          v41 = 0;
        }
        else
        {
          v41 = 1;
        }
        v37 = swift_unknownObjectRelease(v38);
      }
      else
      {
        v41 = 1;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v10 + 56))(v8, v41, 1, v9, v37);

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
      {
        sub_1004CB800((uint64_t)v8, (uint64_t *)&unk_1013E1A50);
      }
      else
      {
        v42 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
        v43 = v54;
        v42(v54, v8, v9);
        v42(v57, v43, v9);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v33 = (double *)sub_100D0EC28(0, *((_QWORD *)v33 + 2) + 1, 1, (unint64_t)v33);
        v45 = *((_QWORD *)v33 + 2);
        v44 = *((_QWORD *)v33 + 3);
        if (v45 >= v44 >> 1)
          v33 = (double *)sub_100D0EC28(v44 > 1, v45 + 1, 1, (unint64_t)v33);
        *((_QWORD *)v33 + 2) = v45 + 1;
        v42((char *)v33+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v45, v57, v9);
      }
      ++v32;
      v30 = v56;
    }
    while (v31 != v32);
    goto LABEL_27;
  }
  __break(1u);
}

id sub_100C4214C()
{
  char *v0;
  id v1;
  unsigned __int8 v2;
  id result;

  v1 = objc_msgSend(v0, "traitCollection");
  if (objc_msgSend(v1, "horizontalSizeClass") == (id)1)
  {

    goto LABEL_4;
  }
  v2 = objc_msgSend((id)objc_opt_self(UIDevice), "crl_phoneUI");

  if ((v2 & 1) != 0)
  {
LABEL_4:
    result = *(id *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_compactScenesPresenter];
    if (!result)
      return result;
    return objc_msgSend(result, "isBeingDismissed");
  }
  result = *(id *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPresenter];
  if (!result)
    return result;
  return objc_msgSend(result, "isBeingDismissed");
}

void sub_100C421F8(void *a1)
{
  char *v1;
  uint64_t v2;
  id v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  void *Strong;
  unsigned __int8 v9;
  int v10;
  void *v11;
  id v12;
  NSString v13;
  NSString v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  NSString v19;
  NSString v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  NSString v24;
  NSString v25;
  id v26;
  id v27;
  NSString v28;
  void *v29;
  id v30;
  NSString v31;
  NSString v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  NSString v37;
  NSString v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  NSString v42;
  NSString v43;
  id v44;
  NSString v45;
  NSString v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  NSString v52;
  void *v53;
  void *v54;
  id v55;
  id v56;
  NSString v57;
  NSString v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  NSString v64;
  void *v65;
  id v66;
  NSString v67;
  NSString v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  char *v74;
  NSString v75;
  void *v76;
  NSString v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  id v83;
  void *v84;
  id v85;
  uint64_t v86;
  void **aBlock;
  uint64_t v88;
  void (*v89)(uint64_t, void *);
  void *v90;
  void (*v91)();
  uint64_t v92;

  v2 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_presentedSceneAlert;
  if (*(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_presentedSceneAlert])
  {
    if (qword_1013DD7E0 != -1)
      swift_once(&qword_1013DD7E0, sub_100A03F14);
    swift_beginAccess(&static OS_os_log.crlScenes, &aBlock, 0, 0);
    v3 = (id)static OS_os_log.crlScenes;
    v5 = static os_log_type_t.default.getter(v4);
    sub_100A06EBC((uint64_t)v3, &_mh_execute_header, v5, "Attempt to capture a scene while an alert was still presented.", 62, 2, (uint64_t)_swiftEmptyArrayStorage);

  }
  else
  {
    v6 = v1;
    Strong = (void *)swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_findReplaceInteraction]);
    objc_msgSend(Strong, "dismissFindNavigator");

    v9 = objc_msgSend((id)objc_opt_self(CRLAccessibility), "isReduceMotionEnabled");
    sub_100C2F590(v9 ^ 1, 0, 0);
    v10 = sub_100C58EC8();
    if (v10)
    {
      v86 = v2;
      if (v10 == 1)
      {
        v11 = (void *)objc_opt_self(NSBundle);
        v12 = objc_msgSend(v11, "mainBundle");
        v13 = String._bridgeToObjectiveC()();
        v14 = String._bridgeToObjectiveC()();
        v15 = objc_msgSend(v12, "localizedStringForKey:value:table:", v13, v14, 0);

        static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
        v17 = v16;

        v18 = objc_msgSend(v11, "mainBundle");
        v19 = String._bridgeToObjectiveC()();
        v20 = String._bridgeToObjectiveC()();
        v21 = objc_msgSend(v18, "localizedStringForKey:value:table:", v19, v20, 0);

        static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
        v23 = v22;

        v24 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v17);
        v25 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v23);
        v26 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v24, v25, 1);

        v27 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v28 = String._bridgeToObjectiveC()();
        v46 = String._bridgeToObjectiveC()();
        v47 = objc_msgSend(v27, "localizedStringForKey:value:table:", v28, v46, 0);

        static String._unconditionallyBridgeFromObjectiveC(_:)(v47);
        v49 = v48;

        v50 = swift_allocObject(&unk_10129B880, 24, 7);
        *(_QWORD *)(v50 + 16) = v6;
        v51 = v6;
        v52 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v49);
        v91 = sub_100C4684C;
        v92 = v50;
        aBlock = _NSConcreteStackBlock;
        v88 = *(_QWORD *)"";
        v89 = sub_1004C6194;
        v90 = &unk_10129B898;
        v53 = _Block_copy(&aBlock);
        swift_release(v92);
        v54 = (void *)objc_opt_self(UIAlertAction);
        v55 = objc_msgSend(v54, "actionWithTitle:style:handler:", v52, 0, v53);
        _Block_release(v53);

        v56 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v57 = String._bridgeToObjectiveC()();
        v68 = String._bridgeToObjectiveC()();
        v69 = objc_msgSend(v56, "localizedStringForKey:value:table:", v57, v68, 0);

        static String._unconditionallyBridgeFromObjectiveC(_:)(v69);
        v71 = v70;

        v72 = swift_allocObject(&unk_10129B8D0, 32, 7);
        *(_QWORD *)(v72 + 16) = v51;
        *(_QWORD *)(v72 + 24) = a1;
        v73 = a1;
        v74 = v51;
        v75 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v71);
        v91 = (void (*)())sub_100C46864;
        v92 = v72;
        aBlock = _NSConcreteStackBlock;
        v88 = *(_QWORD *)"";
        v89 = sub_1004C6194;
        v90 = &unk_10129B8E8;
      }
      else
      {
        v29 = (void *)objc_opt_self(NSBundle);
        v30 = objc_msgSend(v29, "mainBundle");
        v31 = String._bridgeToObjectiveC()();
        v32 = String._bridgeToObjectiveC()();
        v33 = objc_msgSend(v30, "localizedStringForKey:value:table:", v31, v32, 0);

        static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
        v35 = v34;

        v36 = objc_msgSend(v29, "mainBundle");
        v37 = String._bridgeToObjectiveC()();
        v38 = String._bridgeToObjectiveC()();
        v39 = objc_msgSend(v36, "localizedStringForKey:value:table:", v37, v38, 0);

        static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
        v41 = v40;

        v42 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v35);
        v43 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v41);
        v26 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v42, v43, 1);

        v44 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v45 = String._bridgeToObjectiveC()();
        v58 = String._bridgeToObjectiveC()();
        v59 = objc_msgSend(v44, "localizedStringForKey:value:table:", v45, v58, 0);

        static String._unconditionallyBridgeFromObjectiveC(_:)(v59);
        v61 = v60;

        v62 = swift_allocObject(&unk_10129B920, 24, 7);
        *(_QWORD *)(v62 + 16) = v6;
        v63 = v6;
        v64 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v61);
        v91 = sub_100C4FCA0;
        v92 = v62;
        aBlock = _NSConcreteStackBlock;
        v88 = *(_QWORD *)"";
        v89 = sub_1004C6194;
        v90 = &unk_10129B938;
        v65 = _Block_copy(&aBlock);
        swift_release(v92);
        v54 = (void *)objc_opt_self(UIAlertAction);
        v55 = objc_msgSend(v54, "actionWithTitle:style:handler:", v64, 0, v65);
        _Block_release(v65);

        v66 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v67 = String._bridgeToObjectiveC()();
        v77 = String._bridgeToObjectiveC()();
        v78 = objc_msgSend(v66, "localizedStringForKey:value:table:", v67, v77, 0);

        static String._unconditionallyBridgeFromObjectiveC(_:)(v78);
        v80 = v79;

        v81 = swift_allocObject(&unk_10129B970, 32, 7);
        *(_QWORD *)(v81 + 16) = v63;
        *(_QWORD *)(v81 + 24) = a1;
        v82 = a1;
        v74 = v63;
        v75 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v80);
        v91 = (void (*)())sub_100C46864;
        v92 = v81;
        aBlock = _NSConcreteStackBlock;
        v88 = *(_QWORD *)"";
        v89 = sub_1004C6194;
        v90 = &unk_10129B988;
      }
      v76 = _Block_copy(&aBlock);
      v83 = objc_msgSend(v54, "actionWithTitle:style:handler:", v75, 0, v76, swift_release(v92).n128_f64[0]);
      _Block_release(v76);

      objc_msgSend(v26, "addAction:", v55);
      objc_msgSend(v26, "addAction:", v83);
      objc_msgSend(v26, "setPreferredAction:", v55);
      v84 = *(void **)&v6[v86];
      *(_QWORD *)&v6[v86] = v26;
      v85 = v26;

      sub_100CE39D8(v85);
      objc_msgSend(v74, "presentViewController:animated:completion:", v85, 1, 0);

    }
    else
    {
      sub_100C42E00(a1, v6);
    }
  }
}

void sub_100C42E00(void *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  unsigned int v13;
  void *v14;
  id v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  id v24;
  _BYTE *v25;
  id v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  id v47;
  _BYTE *v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  uint64_t v56;
  void *v57;
  uint64_t KeyPath;
  uint64_t v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  char *v68;
  void *v69;
  uint64_t v70;
  uint64_t inited;
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __n128 v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  unsigned int v80;
  char v81[72];
  uint64_t v82[3];

  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v79 - v9;
  v11 = objc_msgSend(a2, "traitCollection");
  if (objc_msgSend(v11, "horizontalSizeClass") != (id)1)
  {
    v13 = objc_msgSend((id)objc_opt_self(UIDevice), "crl_phoneUI");

    if (a1)
      goto LABEL_3;
LABEL_7:
    UUID.init()(v12);
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v10, v8, v4);
    objc_msgSend(*(id *)&a2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController], "visibleUnscaledRect");
    v40 = v39;
    v42 = v41;
    v44 = v43;
    v46 = v45;
    v47 = objc_allocWithZone((Class)type metadata accessor for CRLCommandCreateScene(0));
    v48 = sub_10093C110((uint64_t)v10, v40, v42, v44, v46);
    v49 = *(_QWORD *)&a2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator];
    v50 = OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_commandController;
    v51 = *(id *)(v49 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_commandController);
    sub_1006A9664(0);

    v52 = *(id *)(v49 + v50);
    sub_1006A5F54(v48, 0, 0, 4, 0);

    v53 = *(id *)(v49 + v50);
    sub_1006A984C(0);

    v54 = *(id *)(v49 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
    v55 = sub_100B1D110((uint64_t)v8);

    if (v55)
    {
      v80 = v13;
      v56 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState;
      v57 = *(void **)&a2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState];
      KeyPath = swift_getKeyPath(&unk_100F2F2B8);
      v59 = swift_getKeyPath(&unk_100F2F2E0);
      v60 = v57;
      static Published.subscript.getter(v82, v60, KeyPath, v59);

      swift_release(KeyPath);
      swift_release(v59);
      v61 = v82[0];
      v62 = sub_100C1A4F0((uint64_t)v55, v82[0], type metadata accessor for CRLSceneInfo);
      LOBYTE(v60) = v63;
      swift_bridgeObjectRelease(v61);
      if ((v60 & 1) == 0)
      {
        v79 = v48;
        v64 = *(void **)&a2[v56];
        v65 = swift_getKeyPath(&unk_100F2F300);
        v66 = swift_getKeyPath(&unk_100F2F328);
        v82[0] = (uint64_t)v55;
        v67 = v55;
        static Published.subscript.setter(v82, v64, v65, v66);
        sub_100C20FBC();
        v68 = &a2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_currentSceneIndex];
        *(_QWORD *)v68 = v62;
        v68[8] = 0;
        sub_100C433F8(v80);

LABEL_14:
        (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
        return;
      }

    }
    if (qword_1013DD7E0 != -1)
      swift_once(&qword_1013DD7E0, sub_100A03F14);
    swift_beginAccess(&static OS_os_log.crlScenes, v82, 0, 0);
    v69 = (void *)static OS_os_log.crlScenes;
    v70 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v70, v81);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v72 = v69;
    v73 = UUID.uuidString.getter(v72);
    v75 = v74;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = sub_1004CFC2C();
    *(_QWORD *)(inited + 32) = v73;
    *(_QWORD *)(inited + 40) = v75;
    v77 = static os_log_type_t.default.getter(v76);
    sub_100A06EBC((uint64_t)v72, &_mh_execute_header, v77, "Failed to create scene with UUID %{public}.", 43, 2, inited);
    swift_setDeallocating(inited);
    v78 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v78);

    goto LABEL_14;
  }

  v13 = 1;
  if (!a1)
    goto LABEL_7;
LABEL_3:
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, (uint64_t)a1 + OBJC_IVAR____TtC8Freeform12CRLSceneInfo_sceneID, v4);
  v14 = *(void **)&a2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController];
  v15 = a1;
  objc_msgSend(v14, "visibleUnscaledRect");
  v17 = v16;
  v19 = v18;
  v21 = v20;
  v23 = v22;
  v24 = objc_allocWithZone((Class)type metadata accessor for CRLCommandRecaptureScene(0));
  v25 = sub_10066A4B0((uint64_t)v10, v17, v19, v21, v23);
  v26 = objc_retain(*(id *)(*(_QWORD *)&a2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                          + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_commandController));
  sub_1006A5F54(v25, 0, 0, 4, 0);

  v27 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState;
  v28 = *(void **)&a2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState];
  v29 = swift_getKeyPath(&unk_100F2F2B8);
  v30 = swift_getKeyPath(&unk_100F2F2E0);
  v31 = v28;
  static Published.subscript.getter(v82, v31, v29, v30);

  swift_release(v29);
  swift_release(v30);
  v32 = v82[0];
  v33 = sub_100C1A4F0((uint64_t)v15, v82[0], type metadata accessor for CRLSceneInfo);
  LOBYTE(v31) = v34;
  swift_bridgeObjectRelease(v32);
  if ((v31 & 1) == 0)
  {
    v35 = *(void **)&a2[v27];
    v36 = swift_getKeyPath(&unk_100F2F300);
    v37 = swift_getKeyPath(&unk_100F2F328);
    v82[0] = (uint64_t)a1;
    v15 = v15;
    static Published.subscript.setter(v82, v35, v36, v37);
    sub_100C20FBC();
    v38 = &a2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_currentSceneIndex];
    *(_QWORD *)v38 = v33;
    v38[8] = 0;
    sub_100C433F8(v13);
  }

}

void sub_100C433F8(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  char *v11;
  id v12;
  unsigned __int8 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  char *v20;
  void *v21;
  char *v22;
  unsigned __int8 v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  id v31;
  uint64_t v32;
  Class isa;
  uint64_t v34;

  v2 = v1;
  v4 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v4);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
  {
    v7 = *(void **)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_compactScenesNavigatorViewController];
    if (v7)
    {
      v8 = v7;
      v9 = objc_msgSend(v2, "presentedViewController");
      if (!v9)
        goto LABEL_9;
      v10 = v9;
      sub_1004B8930(0, (unint64_t *)&qword_1013F6620, UIViewController_ptr);
      v11 = (char *)v8;
      v12 = v10;
      LOBYTE(v10) = static NSObject.== infix(_:_:)(v12, v11);

      if ((v10 & 1) == 0)
      {
LABEL_9:
        v28 = swift_allocObject(&unk_10129B9E8, 24, 7);
        *(_QWORD *)(v28 + 16) = v8;
        v29 = v8;
        sub_100C1B450((uint64_t)sub_100C4A2D0, v28);
        swift_release(v28);

        goto LABEL_10;
      }
      *(_BYTE *)(*(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_scenesNavigatorState]
               + OBJC_IVAR____TtC8Freeform23CRLScenesNavigatorState_captureIsAnimating) = 1;
      v13 = objc_msgSend((id)objc_opt_self(CRLAccessibility), "isReduceMotionEnabled");
      v14 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v6, 1, 1, v14);
      type metadata accessor for MainActor(0);
      v15 = v11;
      v16 = static MainActor.shared.getter(v15);
      v17 = swift_allocObject(&unk_10129BA10, 41, 7);
      *(_QWORD *)(v17 + 16) = v16;
      *(_QWORD *)(v17 + 24) = &protocol witness table for MainActor;
      *(_QWORD *)(v17 + 32) = v15;
      *(_BYTE *)(v17 + 40) = v13;
      v18 = sub_100521B98((uint64_t)v6, (uint64_t)&unk_10140B708, v17);

      goto LABEL_8;
    }
  }
  v19 = *(id *)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesNavigatorState];
  sub_100711550(1);

  v20 = *(char **)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesNavigatorViewController];
  if (v20)
  {
    *(_BYTE *)(*(_QWORD *)&v20[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_scenesNavigatorState]
             + OBJC_IVAR____TtC8Freeform23CRLScenesNavigatorState_captureIsAnimating) = 1;
    v21 = (void *)objc_opt_self(CRLAccessibility);
    v22 = v20;
    v23 = objc_msgSend(v21, "isReduceMotionEnabled");
    v24 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v6, 1, 1, v24);
    type metadata accessor for MainActor(0);
    v25 = v22;
    v26 = static MainActor.shared.getter(v25);
    v27 = swift_allocObject(&unk_10129B9C0, 41, 7);
    *(_QWORD *)(v27 + 16) = v26;
    *(_QWORD *)(v27 + 24) = &protocol witness table for MainActor;
    *(_QWORD *)(v27 + 32) = v25;
    *(_BYTE *)(v27 + 40) = v23;
    v18 = sub_100521B98((uint64_t)v6, (uint64_t)&unk_10140B6F8, v27);

LABEL_8:
    swift_release(v18);
  }
LABEL_10:
  v30 = *(void **)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController];
  v31 = objc_retain(*(id *)(*(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                          + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard));
  v32 = sub_100B11C00();

  sub_1004B804C(&qword_1013E0670);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v30, "setInfosToDisplay:", isa, swift_bridgeObjectRelease(v32).n128_f64[0]);

}

double sub_100C43788(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  unsigned __int8 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double result;
  uint64_t v12;

  v2 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_BYTE *)(*(_QWORD *)&a1[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_scenesNavigatorState]
           + OBJC_IVAR____TtC8Freeform23CRLScenesNavigatorState_captureIsAnimating) = 1;
  v5 = objc_msgSend((id)objc_opt_self(CRLAccessibility), "isReduceMotionEnabled");
  v6 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v4, 1, 1, v6);
  type metadata accessor for MainActor(0);
  v7 = a1;
  v8 = static MainActor.shared.getter(v7);
  v9 = swift_allocObject(&unk_10129BA38, 41, 7);
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = &protocol witness table for MainActor;
  *(_QWORD *)(v9 + 32) = v7;
  *(_BYTE *)(v9 + 40) = v5;
  v10 = sub_100521B98((uint64_t)v4, (uint64_t)&unk_10140B710, v9);
  *(_QWORD *)&result = swift_release(v10).n128_u64[0];
  return result;
}

void sub_100C438B4(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  double v4;
  CGFloat v5;
  CGFloat v6;
  CGFloat v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  double v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  char *v20;
  void *v21;
  id v22;
  uint64_t KeyPath;
  uint64_t v24;
  id v25;
  __n128 v26;
  uint64_t v27;
  id v28[5];

  v2 = v1;
  v4 = *(double *)&a1[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect];
  v5 = *(double *)&a1[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect + 8];
  v6 = *(double *)&a1[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect + 16];
  v7 = *(double *)&a1[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect + 24];
  v8 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController);
  v9 = objc_msgSend(v8, "editorController");
  if (v9)
  {
    v10 = v9;
    v11 = objc_msgSend(v9, "selectionPath");

  }
  else
  {
    v11 = 0;
  }
  v12 = objc_msgSend(v8, "layerHost");
  if (!v12)
  {
    v14 = 0;
LABEL_9:
    v16 = 0;
    goto LABEL_10;
  }
  v13 = v12;
  v14 = objc_msgSend(v12, "miniFormatterPresenter");
  *(_QWORD *)&v15 = swift_unknownObjectRelease(v13).n128_u64[0];
  if (!v14 || !objc_msgSend(v14, "isPresentingMiniFormatter", v15))
    goto LABEL_9;
  objc_msgSend(v14, "dismissMiniFormatterWithAnimated:", 0);
  v16 = 1;
LABEL_10:
  v17 = swift_allocObject(&unk_10129BBE0, 24, 7);
  swift_unknownObjectWeakInit(v17 + 16);
  v18 = swift_allocObject(&unk_10129BC08, 56, 7);
  *(_QWORD *)(v18 + 16) = v17;
  *(_QWORD *)(v18 + 24) = a1;
  *(_BYTE *)(v18 + 32) = v16;
  *(_QWORD *)(v18 + 40) = v14;
  *(_QWORD *)(v18 + 48) = v11;
  v19 = v11;
  swift_retain(v17);
  v20 = a1;
  swift_unknownObjectRetain(v14);
  sub_100861E74((uint64_t)sub_100C4A484, v18, v4, v5, v6, v7);
  swift_release(v17);
  swift_release(v18);
  v21 = *(void **)(*(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator);
  v28[3] = &type metadata for CRLFeatureFlags;
  v28[4] = (id)sub_1004DB6DC();
  LOBYTE(v28[0]) = 11;
  v22 = v21;
  LOBYTE(v17) = isFeatureEnabled(_:)(v28);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v28);
  if ((v17 & 1) != 0)
  {
    KeyPath = swift_getKeyPath(&unk_100F2F3B8);
    v24 = swift_getKeyPath(&unk_100F2F3E0);
    static Published.subscript.getter(v28, v22, KeyPath, v24);
    swift_release(KeyPath);
    swift_release(v24);
    if (v28[0])
    {

      if (qword_1013DD7C8 != -1)
        swift_once(&qword_1013DD7C8, sub_100A03AC0);
      swift_beginAccess(&static OS_os_log.crlFollow, v28, 0, 0);
      v25 = (id)static OS_os_log.crlFollow;
      v27 = static os_log_type_t.default.getter(v26);
      sub_100A06EBC((uint64_t)v25, &_mh_execute_header, v27, "Calling didEndFollowing because of the public endFollowSessionForLocalParticipant method was called", 99, 2, (uint64_t)_swiftEmptyArrayStorage);

      sub_1006F534C(1);
    }
  }

  sub_100C43EDC();
  swift_unknownObjectRelease(v14);
}

void sub_100C43BCC(char *a1)
{
  char *v1;
  char *v2;
  unsigned __int8 v4;
  uint64_t v5;
  void *v6;
  uint64_t KeyPath;
  uint64_t v8;
  id v9;
  double v10;
  void *v11;
  char *v12;
  id v13;
  char v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  char v20;
  char *v21;
  id v22;
  unsigned __int8 v23;
  void *v24;

  v2 = v1;
  if ((sub_100C4214C() & 1) == 0)
  {
    v4 = objc_msgSend((id)objc_opt_self(CRLAccessibility), "isReduceMotionEnabled");
    sub_100C2F590(v4 ^ 1, 0, 0);
    v5 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState;
    v6 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState];
    KeyPath = swift_getKeyPath(byte_100F2F300);
    v8 = swift_getKeyPath(aP_18);
    v9 = v6;
    static Published.subscript.getter(&v24, v9, KeyPath, v8);

    swift_release(KeyPath);
    *(_QWORD *)&v10 = swift_release(v8).n128_u64[0];
    v11 = v24;
    if (!v24
      || (type metadata accessor for CRLSceneInfo(0),
          v12 = a1,
          v13 = v11,
          v14 = static NSObject.== infix(_:_:)(v13, v12),
          v13,
          v13,
          v12,
          (v14 & 1) == 0))
    {
      v15 = *(void **)&v2[v5];
      v16 = swift_getKeyPath(byte_100F2F2B8, v10);
      v17 = swift_getKeyPath(byte_100F2F2E0);
      v18 = v15;
      static Published.subscript.getter(&v24, v18, v16, v17);

      swift_release(v16);
      swift_release(v17);
      v19 = sub_100C1A4F0((uint64_t)a1, (uint64_t)v24, type metadata accessor for CRLSceneInfo);
      LOBYTE(v18) = v20;
      swift_bridgeObjectRelease();
      if ((v18 & 1) == 0)
      {
        v21 = &v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_currentSceneIndex];
        *(_QWORD *)v21 = v19;
        v21[8] = 0;
        sub_100C438B4(a1);
      }
    }
    v22 = objc_msgSend(v2, "traitCollection");
    if (objc_msgSend(v22, "horizontalSizeClass") == (id)1)
    {

    }
    else
    {
      v23 = objc_msgSend((id)objc_opt_self(UIDevice), "crl_phoneUI");

      if ((v23 & 1) == 0)
        return;
    }
    sub_100C1B450((uint64_t)SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:), 0);
  }
}

void sub_100C43DDC(uint64_t a1, void *a2, char a3, void *a4, void *a5)
{
  uint64_t v9;
  uint64_t Strong;
  void *v11;
  void *v12;
  uint64_t KeyPath;
  uint64_t v14;
  id v15;
  id v16;
  void *v17;
  _BYTE v18[24];

  v9 = a1 + 16;
  swift_beginAccess(a1 + 16, v18, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v9);
  if (Strong)
  {
    v11 = (void *)Strong;
    v12 = *(void **)(Strong + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState);
    KeyPath = swift_getKeyPath(&unk_100F2F300);
    v14 = swift_getKeyPath(&unk_100F2F328);
    v17 = a2;
    v15 = a2;
    static Published.subscript.setter(&v17, v12, KeyPath, v14);
    sub_100C20FBC();
    if ((a3 & 1) != 0 && a4)
    {
      if (a5)
      {
        swift_unknownObjectRetain(a4);
        v16 = a5;
        objc_msgSend(a4, "presentMiniFormatterForSelectionPath:", v16, v17);
        swift_unknownObjectRelease(a4);

      }
    }

  }
}

double sub_100C43EDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t KeyPath;
  uint64_t v14;
  id v15;
  double result;
  void *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  NSString v22;
  NSString v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  void *v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  _QWORD aBlock[5];
  uint64_t v56;

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v54 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v53 = (char *)&v47 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for DispatchQoS(0);
  v51 = *(_QWORD *)(v3 - 8);
  v52 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = type metadata accessor for DispatchTime(0);
  v6 = *(_QWORD *)(v50 - 8);
  __chkstk_darwin(v50);
  v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v47 - v10;
  v12 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState);
  KeyPath = swift_getKeyPath(&unk_100F2F300);
  v14 = swift_getKeyPath(&unk_100F2F328);
  v15 = v12;
  static Published.subscript.getter(aBlock, v15, KeyPath, v14);

  swift_release(KeyPath);
  *(_QWORD *)&result = swift_release(v14).n128_u64[0];
  v17 = (void *)aBlock[0];
  if (aBlock[0])
  {
    v19 = *(_QWORD *)(aBlock[0] + OBJC_IVAR____TtC8Freeform12CRLSceneInfo_name);
    v18 = *(_QWORD *)(aBlock[0] + OBJC_IVAR____TtC8Freeform12CRLSceneInfo_name + 8);
    swift_bridgeObjectRetain(v18);

    v20 = HIBYTE(v18) & 0xF;
    if ((v18 & 0x2000000000000000) == 0)
      v20 = v19 & 0xFFFFFFFFFFFFLL;
    if (v20)
    {
      v21 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v22 = String._bridgeToObjectiveC()();
      v23 = String._bridgeToObjectiveC()();
      v24 = objc_msgSend(v21, "localizedStringForKey:value:table:", v22, v23, 0);
      v49 = v1;
      v25 = v24;

      v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
      v28 = v27;

      v29 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v30 = swift_allocObject(v29, 72, 7);
      *(_OWORD *)(v30 + 16) = xmmword_100EF5E40;
      *(_QWORD *)(v30 + 56) = &type metadata for String;
      *(_QWORD *)(v30 + 64) = sub_1004CFC2C();
      *(_QWORD *)(v30 + 32) = v19;
      *(_QWORD *)(v30 + 40) = v18;
      v31 = static String.localizedStringWithFormat(_:_:)(v26, v28, v30);
      v33 = v32;
      swift_bridgeObjectRelease(v30);
      swift_bridgeObjectRelease(v28);
      sub_1004B8930(0, (unint64_t *)&qword_1013DE090, OS_dispatch_queue_ptr);
      v35 = (void *)static OS_dispatch_queue.main.getter(v34);
      static DispatchTime.now()(v36);
      + infix(_:_:)(v8, 0.5);
      v48 = *(void (**)(char *, uint64_t))(v6 + 8);
      v37 = v50;
      v48(v8, v50);
      v38 = swift_allocObject(&unk_10129BC30, 32, 7);
      *(_QWORD *)(v38 + 16) = v31;
      *(_QWORD *)(v38 + 24) = v33;
      aBlock[4] = sub_100C4A4BC;
      v56 = v38;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(_QWORD *)"";
      aBlock[2] = sub_1005D2FC0;
      aBlock[3] = &unk_10129BC48;
      v39 = _Block_copy(aBlock);
      v40 = swift_release(v56);
      static DispatchQoS.unspecified.getter(v40);
      aBlock[0] = _swiftEmptyArrayStorage;
      v41 = sub_1004B7878((unint64_t *)&qword_1013E1D20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v42 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
      v43 = sub_1004CBA30((unint64_t *)&qword_1013E1D30, (uint64_t *)&unk_1013DFBF0, (uint64_t)&protocol conformance descriptor for [A]);
      v44 = v53;
      v45 = v42;
      v46 = v49;
      dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v45, v43, v49, v41);
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v11, v5, v44, v39);
      _Block_release(v39);

      (*(void (**)(char *, uint64_t))(v54 + 8))(v44, v46);
      (*(void (**)(char *, uint64_t))(v51 + 8))(v5, v52);
      v48(v11, v37);
    }
    else
    {
      *(_QWORD *)&result = swift_bridgeObjectRelease(v18).n128_u64[0];
    }
  }
  return result;
}

void sub_100C44340(char *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  id v21;
  char *v22;
  _BYTE *v23;
  id v24;
  _QWORD v25[3];
  char v26[24];

  v7 = type metadata accessor for CRLBoardScenesCRDTData(0);
  __chkstk_darwin(v7);
  v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v10 = a2 & 0xFFFFFFFFFFFFLL;
  if (v10)
  {
    v25[0] = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator);
    v11 = *(char **)(v25[0] + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
    v12 = &a1[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_sceneID];
    v13 = *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform8CRLBoard_data];
    v14 = v13 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess(v13 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v26, 0, 0);
    v15 = type metadata accessor for CRLBoardCRDTData(0);
    sub_1004B8460(v14 + *(int *)(v15 + 36), (uint64_t)v9, type metadata accessor for CRLBoardScenesCRDTData);
    v16 = v11;
    swift_retain(v13);
    v17 = sub_1004B804C((uint64_t *)&unk_101405CB0);
    CRDictionary.subscript.getter(v12, v17);
    v19 = v25[1];
    v18 = v25[2];
    sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLBoardScenesCRDTData);

    swift_release(v13);
    if (v18)
    {
      if (v19 == a2 && v18 == a3)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v18, a2, a3, 0);
        swift_bridgeObjectRelease();
        if ((v20 & 1) == 0)
        {
          v21 = objc_allocWithZone((Class)type metadata accessor for CRLCommandSetSceneTitle());
          v22 = a1;
          swift_bridgeObjectRetain(a3);
          v23 = sub_100DAE5B4(v22, a2, a3);

          v24 = *(id *)(v25[0] + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_commandController);
          sub_1006A5F54(v23, 0, 0, 4, 0);

        }
      }
    }
  }
}

void sub_100C4456C(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  char v12;
  void *v13;
  uint64_t v14;
  uint64_t inited;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[72];
  char v24[32];
  char v25[24];

  v3 = sub_1004B804C((uint64_t *)&unk_1013F02F0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v23[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = *(char **)(*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  v8 = *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v8, v25, 0, 0);
  v9 = type metadata accessor for CRLBoardCRDTData(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v4 + 16))(v6, v8 + *(int *)(v9 + 36), v3);
  v10 = v7;
  v11 = sub_10054B7E8((uint64_t)v6, (uint64_t)v10);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);

  sub_100C1A4F0((uint64_t)a1, (uint64_t)v11, type metadata accessor for CRLSceneInfo);
  LOBYTE(v3) = v12;
  swift_bridgeObjectRelease();
  if ((v3 & 1) != 0)
  {
    if (qword_1013DD7E0 != -1)
      swift_once(&qword_1013DD7E0, sub_100A03F14);
    swift_beginAccess(&static OS_os_log.crlScenes, v24, 0, 0);
    v13 = (void *)static OS_os_log.crlScenes;
    v14 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v14, v23);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v16 = v13;
    v17 = UUID.uuidString.getter(v16);
    v19 = v18;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = sub_1004CFC2C();
    *(_QWORD *)(inited + 32) = v17;
    *(_QWORD *)(inited + 40) = v19;
    v21 = static os_log_type_t.default.getter(v20);
    sub_100A06EBC((uint64_t)v16, &_mh_execute_header, v21, "Can't recapture saved rect on a scene that doesn't exist. (Scene ID: %{public}@)", 80, 2, inited);
    swift_setDeallocating(inited);
    v22 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v22);

  }
  else
  {
    sub_100C421F8(a1);
  }
}

void sub_100C447B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t KeyPath;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char *v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  void (*v40)(char *, uint64_t, uint64_t);
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  objc_class *v44;
  char *v45;
  _BYTE *v46;
  id v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char v51;
  _BYTE *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  objc_super v60;
  _QWORD *v61;
  char v62[24];

  v59 = a1;
  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v56 - v7;
  v9 = sub_1004B804C((uint64_t *)&unk_1013F02F0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator);
  v13 = *(char **)(v56 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  v14 = *(_QWORD *)&v13[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v14, v62, 0, 0);
  v15 = type metadata accessor for CRLBoardCRDTData(0);
  v16 = v9;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v14 + *(int *)(v15 + 36), v9);
  v17 = v13;
  v18 = sub_10054B7E8((uint64_t)v12, (uint64_t)v17);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v16);

  v19 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState;
  v20 = v58;
  v21 = *(_QWORD *)(*(_QWORD *)&v58[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState]
                  + OBJC_IVAR____TtC8Freeform21CRLScenesPopoverState_sceneInfosToDelete);
  swift_bridgeObjectRetain(v18);
  swift_bridgeObjectRetain(v21);
  v57 = sub_100C498CC(v22, (uint64_t)v18);
  swift_bridgeObjectRelease(v21);
  swift_bridgeObjectRelease_n(v18, 2);
  v23 = *(void **)&v20[v19];
  KeyPath = swift_getKeyPath(&unk_100F2F2B8);
  v25 = swift_getKeyPath(&unk_100F2F2E0);
  v26 = v23;
  static Published.subscript.getter(&v61, v26, KeyPath, v25);

  v27 = KeyPath;
  v28 = v59;
  swift_release(v27);
  swift_release(v25);
  v29 = (unint64_t)v61;
  v30 = v20;
  v31 = sub_100C49640(v29, (uint64_t)v30);
  swift_bridgeObjectRelease(v29);
  v58 = v30;

  sub_10087D400((unint64_t)v31);
  if ((unint64_t)v28 >> 62)
  {
    if (v28 < 0)
      v55 = v28;
    else
      v55 = v28 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v28);
    v32 = _CocoaArrayWrapper.endIndex.getter(v55);
    swift_bridgeObjectRelease(v28);
  }
  else
  {
    v32 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v33 = _swiftEmptyArrayStorage;
  if (v32)
  {
    v61 = _swiftEmptyArrayStorage;
    sub_100600724(0, v32 & ~(v32 >> 63), 0);
    if (v32 < 0)
    {
      __break(1u);
      return;
    }
    v33 = v61;
    if ((v28 & 0xC000000000000001) != 0)
    {
      v34 = 0;
      do
      {
        v35 = v28;
        v36 = specialized _ArrayBuffer._getElementSlowPath(_:)(v34, v28);
        (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v8, v36 + OBJC_IVAR____TtC8Freeform12CRLSceneInfo_sceneID, v2);
        swift_unknownObjectRelease(v36);
        v61 = v33;
        v38 = v33[2];
        v37 = v33[3];
        if (v38 >= v37 >> 1)
        {
          sub_100600724(v37 > 1, v38 + 1, 1);
          v33 = v61;
        }
        ++v34;
        v33[2] = v38 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))((unint64_t)v33+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v38, v8, v2);
        v28 = v35;
      }
      while (v32 != v34);
    }
    else
    {
      v39 = (_QWORD *)(v28 + 32);
      v40 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
      do
      {
        v40(v5, *v39 + OBJC_IVAR____TtC8Freeform12CRLSceneInfo_sceneID, v2);
        v61 = v33;
        v42 = v33[2];
        v41 = v33[3];
        if (v42 >= v41 >> 1)
        {
          sub_100600724(v41 > 1, v42 + 1, 1);
          v33 = v61;
        }
        v33[2] = v42 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))((unint64_t)v33+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v42, v5, v2);
        ++v39;
        --v32;
      }
      while (v32);
    }
  }
  v43 = v57;
  v44 = (objc_class *)type metadata accessor for CRLCommandDeleteScenes();
  v45 = (char *)objc_allocWithZone(v44);
  *(_QWORD *)&v45[OBJC_IVAR____TtC8Freeform22CRLCommandDeleteScenes_sceneIDs] = v33;
  v60.receiver = v45;
  v60.super_class = v44;
  v46 = objc_msgSendSuper2(&v60, "init");
  v47 = *(id *)(v56 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_commandController);
  sub_1006A5F54(v46, 0, 0, 4, 0);

  v48 = *(_QWORD *)(v43 + 16);
  if (v48)
  {
    v49 = &v58[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_currentSceneIndex];
    v50 = *(_QWORD *)&v58[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_currentSceneIndex];
    v51 = v58[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_currentSceneIndex + 8];
    v52 = (_BYTE *)(v43 + 40);
    do
    {
      if ((v51 & 1) != 0)
      {
        v51 = 1;
      }
      else
      {
        if ((*v52 & 1) == 0)
        {
          v53 = *((_QWORD *)v52 - 1);
          v51 = v53 >= v50;
          if (v53 < v50)
          {
            v54 = v50 - 1;
            goto LABEL_26;
          }
          if (v53 == v50)
          {
            v54 = 0;
LABEL_26:
            *(_QWORD *)v49 = v54;
            v49[8] = v53 >= v50;
            v50 = v54;
            goto LABEL_18;
          }
        }
        v51 = 0;
      }
LABEL_18:
      v52 += 16;
      --v48;
    }
    while (v48);
  }

  swift_bridgeObjectRelease(v43);
}

void sub_100C44CEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  unint64_t v15;
  id v16;
  id v17;
  unint64_t v18;
  id v19;
  uint64_t v20;
  _BYTE *v21;
  id v22;
  id v23;
  uint64_t v24;
  char v25;
  char v26;
  char v28[24];

  v2 = v1;
  v4 = sub_1004B804C((uint64_t *)&unk_1013F02F0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v28[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = 0;
  v9 = (uint64_t *)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_currentSceneIndex);
  if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_currentSceneIndex + 8) & 1) != 0)
    goto LABEL_8;
  v10 = *(char **)(*(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  v11 = *(_QWORD *)&v10[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v11, v28, 0, 0);
  v12 = type metadata accessor for CRLBoardCRDTData(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v11 + *(int *)(v12 + 36), v4);
  v13 = v10;
  v14 = (unint64_t)sub_10054B7E8((uint64_t)v7, (uint64_t)v13);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);

  if ((v9[1] & 1) != 0)
  {
LABEL_16:
    __break(1u);
    return;
  }
  v15 = *v9;
  if ((v14 & 0xC000000000000001) != 0)
  {
    v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v15, v14);
    goto LABEL_7;
  }
  if ((v15 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (v15 >= *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v16 = *(id *)(v14 + 8 * v15 + 32);
LABEL_7:
  v8 = v16;
  swift_bridgeObjectRelease();
LABEL_8:
  v17 = *(id *)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState);
  swift_bridgeObjectRetain(a1);
  sub_10087D400(v18);

  v19 = objc_allocWithZone((Class)type metadata accessor for CRLCommandReorderScenes());
  swift_bridgeObjectRetain(a1);
  v21 = sub_100D1A4B0(v20);
  v22 = objc_retain(*(id *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                          + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_commandController));
  sub_1006A5F54(v21, 0, 0, 4, 0);

  if (v8)
  {
    v23 = v8;
    v24 = sub_100C1A4F0((uint64_t)v23, a1, type metadata accessor for CRLSceneInfo);
    v26 = v25;

    if ((v26 & 1) == 0)
    {
      *v9 = v24;
      *((_BYTE *)v9 + 8) = 0;
    }
  }
  else
  {

  }
}

double sub_100C44F44()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double result;
  char v21[24];

  v1 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v1);
  v3 = &v21[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = sub_1004B804C((uint64_t *)&unk_1013F02F0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = *(char **)(*(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  v9 = *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v9, v21, 0, 0);
  v10 = type metadata accessor for CRLBoardCRDTData(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v9 + *(int *)(v10 + 36), v4);
  v11 = v8;
  v12 = sub_10054B7E8((uint64_t)v7, (uint64_t)v11);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);

  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController], "endEditing");
  v13 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v3, 1, 1, v13);
  type metadata accessor for MainActor(0);
  v14 = v0;
  swift_bridgeObjectRetain(v12);
  v16 = static MainActor.shared.getter(v15);
  v17 = swift_allocObject(&unk_10129BCA8, 56, 7);
  *(_QWORD *)(v17 + 16) = v16;
  *(_QWORD *)(v17 + 24) = &protocol witness table for MainActor;
  *(_QWORD *)(v17 + 32) = v14;
  *(_BYTE *)(v17 + 40) = 1;
  *(_QWORD *)(v17 + 48) = v12;
  v18 = sub_100521B98((uint64_t)v3, (uint64_t)&unk_10140B760, v17);
  swift_bridgeObjectRelease();
  *(_QWORD *)&result = swift_release(v18).n128_u64[0];
  return result;
}

void sub_100C4514C(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  id v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  unsigned __int8 v23;
  void *v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  id v42;
  _BYTE v43[24];

  v2 = v1;
  v4 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v4);
  v6 = &v43[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isExportingToPDF;
  if ((v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isExportingToPDF] & 1) != 0)
  {
    if (qword_1013DD6B8 != -1)
      swift_once(&qword_1013DD6B8, sub_100A00A6C);
    swift_beginAccess(&static OS_os_log.crlDefault, v43, 0, 0);
    v8 = (id)static OS_os_log.crlDefault;
    v10 = static os_log_type_t.default.getter(v9);
    sub_100A06EBC((uint64_t)v8, &_mh_execute_header, v10, "Already exporting to PDF. Skipping.", 35, 2, (uint64_t)_swiftEmptyArrayStorage);

    return;
  }
  v11 = *(_QWORD *)(*(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                  + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_boardActor);
  v42 = objc_msgSend(v1, "view", swift_retain(v11).n128_f64[0]);
  if (!v42)
  {
    __break(1u);
    goto LABEL_16;
  }
  v12 = objc_msgSend(v1, "view");
  if (!v12)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v13 = v12;
  objc_msgSend(v12, "frame");
  v15 = v14;
  v17 = v16;
  v19 = v18;
  v21 = v20;

  v22 = objc_msgSend(v2, "traitCollection");
  v23 = objc_msgSend(v22, "crl_isCompactWidth");

  if ((v23 & 1) == 0)
  {
    v24 = *(void **)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesNavigatorViewController];
    if (!v24)
    {
      swift_release(v11);

      return;
    }
    v25 = v24;
    v26 = objc_msgSend(v25, "view");
    if (v26)
    {
      v27 = v26;

      v28 = sub_100B6732C();
      objc_msgSend(v28, "frame");
      v15 = v29;
      v17 = v30;
      v19 = v31;
      v21 = v32;

      v42 = v27;
      goto LABEL_11;
    }
LABEL_17:
    __break(1u);
    return;
  }
LABEL_11:
  if (qword_1013DD6B8 != -1)
    swift_once(&qword_1013DD6B8, sub_100A00A6C);
  swift_beginAccess(&static OS_os_log.crlDefault, v43, 0, 0);
  v33 = (id)static OS_os_log.crlDefault;
  v35 = static os_log_type_t.default.getter(v34);
  sub_100A06EBC((uint64_t)v33, &_mh_execute_header, v35, "Exporting to PDF.", 17, 2, (uint64_t)_swiftEmptyArrayStorage);

  v2[v7] = 1;
  v36 = type metadata accessor for TaskPriority(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v6, 1, 1, v36);
  type metadata accessor for MainActor(0);
  swift_retain(v11);
  v37 = v2;
  swift_bridgeObjectRetain(a1);
  v39 = static MainActor.shared.getter(v38);
  v40 = (_QWORD *)swift_allocObject(&unk_10129BC80, 96, 7);
  v40[2] = v39;
  v40[3] = &protocol witness table for MainActor;
  v40[4] = v37;
  v40[5] = v11;
  v40[6] = v42;
  v40[7] = v15;
  v40[8] = v17;
  v40[9] = v19;
  v40[10] = v21;
  v40[11] = a1;
  v41 = sub_100521B98((uint64_t)v6, (uint64_t)&unk_10140B758, (uint64_t)v40);
  swift_release(v41);
  swift_release(v11);
}

uint64_t sub_100C45500(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(v11 + 272) = a11;
  *(double *)(v11 + 256) = a3;
  *(double *)(v11 + 264) = a4;
  *(double *)(v11 + 240) = a1;
  *(double *)(v11 + 248) = a2;
  *(_QWORD *)(v11 + 224) = a9;
  *(_QWORD *)(v11 + 232) = a10;
  *(_QWORD *)(v11 + 216) = a8;
  v12 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v11 + 280) = v12;
  *(_QWORD *)(v11 + 288) = static MainActor.shared.getter(v12);
  v13 = dispatch thunk of Actor.unownedExecutor.getter(v12, &protocol witness table for MainActor);
  *(_QWORD *)(v11 + 296) = v13;
  *(_QWORD *)(v11 + 304) = v14;
  return swift_task_switch(sub_100C45580, v13, v14);
}

uint64_t sub_100C45580()
{
  _QWORD *v0;
  id v1;
  id v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = sub_100C1CAE8();
  v2 = objc_msgSend(v1, "mode");

  LODWORD(v1) = objc_msgSend(v2, "wantsToEndForNonPopoverPresentations");
  if ((_DWORD)v1)
  {
    v4 = sub_100C1CAE8();
    objc_msgSend(v4, "resetToDefaultModeAnimated:", 1);

  }
  v5 = v0[35];
  v0[39] = static MainActor.shared.getter(v3);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v0[40] = v6;
  v0[41] = v7;
  return swift_task_switch(sub_100C45644, v6, v7);
}

uint64_t sub_100C45644(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = v1[27];
  v3 = static MainActor.shared.getter(a1);
  v1[42] = v3;
  v4 = swift_task_alloc(32);
  v1[43] = v4;
  *(_QWORD *)(v4 + 16) = v2;
  *(_BYTE *)(v4 + 24) = 1;
  v5 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  v1[44] = v5;
  *v5 = v1;
  v5[1] = sub_100C45700;
  return withCheckedContinuation<A>(isolation:function:_:)(v5, v3, &protocol witness table for MainActor, 0xD000000000000048, 0x8000000101002AF0, sub_100C4FCC0, v4, (char *)&type metadata for () + 8);
}

uint64_t sub_100C45700()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 344);
  v3 = *(_QWORD *)(*v0 + 336);
  swift_task_dealloc(*(_QWORD *)(*v0 + 352));
  swift_release(v3);
  swift_task_dealloc(v2);
  return swift_task_switch(sub_100C45768, *(_QWORD *)(v1 + 320), *(_QWORD *)(v1 + 328));
}

uint64_t sub_100C45768()
{
  _QWORD *v0;

  swift_release(v0[39]);
  return swift_task_switch(sub_100C457A0, v0[37], v0[38]);
}

uint64_t sub_100C457A0()
{
  uint64_t v0;
  char *v1;
  id v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, double, double, double, double, double, double, double, double);

  v1 = *(char **)(v0 + 216);
  v2 = objc_msgSend(v1, "topMostViewController");
  *(_QWORD *)(v0 + 360) = v2;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController], "visibleUnscaledRect");
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, double, double, double, double, double, double, double, double))((char *)&dword_1013F05D0 + dword_1013F05D0);
  v11 = (_QWORD *)swift_task_alloc(unk_1013F05D4);
  *(_QWORD *)(v0 + 368) = v11;
  *v11 = v0;
  v11[1] = sub_100C45884;
  return v13(*(_QWORD *)(v0 + 224), (uint64_t)v2, *(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 272), *(double *)(v0 + 240), *(double *)(v0 + 248), *(double *)(v0 + 256), *(double *)(v0 + 264), v4, v6, v8, v10);
}

uint64_t sub_100C45884()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 368);
  *(_QWORD *)(*v1 + 376) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 296);
    v5 = *(_QWORD *)(v2 + 304);
    v6 = sub_100C45930;
  }
  else
  {

    v4 = *(_QWORD *)(v2 + 296);
    v5 = *(_QWORD *)(v2 + 304);
    v6 = sub_100C458F0;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_100C458F0()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_release(*(_QWORD *)(v0 + 288));
  *(_BYTE *)(*(_QWORD *)(v0 + 216) + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isExportingToPDF) = 0;
  return (*(uint64_t (**)(__n128))(v0 + 8))(v1);
}

uint64_t sub_100C45930()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = *(void **)(v0 + 360);
  swift_release(*(_QWORD *)(v0 + 288));

  if (qword_1013DD6B8 != -1)
    swift_once(&qword_1013DD6B8, sub_100A00A6C);
  v2 = *(_QWORD *)(v0 + 376);
  swift_beginAccess(&static OS_os_log.crlDefault, v0 + 128, 0, 0);
  v3 = (void *)static OS_os_log.crlDefault;
  v4 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v4, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  swift_getErrorValue(v2, v0 + 200, v0 + 152);
  v6 = *(_QWORD *)(v0 + 160);
  v7 = *(_QWORD *)(v0 + 168);
  v8 = v3;
  v9 = Error.publicDescription.getter(v6, v7);
  v11 = v10;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v12 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v12;
  *(_QWORD *)(inited + 32) = v9;
  *(_QWORD *)(inited + 40) = v11;
  swift_getErrorValue(v2, v0 + 208, v0 + 176);
  v13 = Error.fullDescription.getter(*(_QWORD *)(v0 + 184));
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v12;
  *(_QWORD *)(inited + 72) = v13;
  *(_QWORD *)(inited + 80) = v14;
  v15 = static os_log_type_t.error.getter(v13);
  sub_100A06EBC((uint64_t)v8, &_mh_execute_header, v15, "Error retrieving immutable board or exporting to PDF: %{public}@ <%@>", 69, 2, inited);
  swift_setDeallocating(inited);
  v16 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 2, v16);

  swift_errorRelease(v2);
  *(_BYTE *)(*(_QWORD *)(v0 + 216) + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isExportingToPDF) = 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100C45AF8()
{
  UIAccessibilityNotifications v0;
  id v1;

  v0 = UIAccessibilityAnnouncementNotification;
  v1 = String._bridgeToObjectiveC()();
  UIAccessibilityPostNotification(v0, v1);

}

void sub_100C45B3C(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  void *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  id v32;
  _QWORD *v33;
  uint64_t KeyPath;
  uint64_t v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  void *v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  _QWORD *v57;
  __n128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t ObjectType;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unsigned __int8 v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD v71[2];
  unint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  id v83;
  _QWORD v84[5];
  char v85[24];
  _QWORD v86[3];
  unint64_t v87[5];

  v3 = v2;
  v6 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v6);
  v82 = (char *)v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C((uint64_t *)&unk_1013F02F0);
  v80 = *(_QWORD *)(v8 - 8);
  v81 = v8;
  __chkstk_darwin(v8);
  v79 = (char *)v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004CB6E8(a2, (uint64_t)v87);
  v10 = type metadata accessor for CRLBoard(0);
  if ((swift_dynamicCast(v86, v87, (char *)&type metadata for Any + 8, v10, 6) & 1) == 0)
    return;
  v11 = (void *)v86[0];
  v77 = *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator];
  v76 = OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard;
  v12 = *(id *)(v77 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  v13 = v11;
  v14 = static NSObject.== infix(_:_:)(v13, v12);

  if ((v14 & 1) == 0)
    return;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v70 = a1;
    else
      v70 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v15 = _CocoaArrayWrapper.endIndex.getter(v70);
    if (v15)
      goto LABEL_5;
LABEL_31:
    swift_bridgeObjectRelease();
    return;
  }
  v15 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  if (!v15)
    goto LABEL_31;
LABEL_5:
  if (v15 >= 1)
  {
    v16 = 0;
    v17 = 0;
    v78 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState;
    v18 = a1 & 0xC000000000000001;
    v71[1] = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController;
    v71[0] = (char *)&type metadata for () + 8;
    v75 = a1;
    v74 = v15;
    v73 = v3;
    v72 = a1 & 0xC000000000000001;
    while (1)
    {
      v19 = v18
          ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v16, a1)
          : (char *)*(id *)(a1 + 8 * v16 + 32);
      v83 = v19;
      v20 = (uint64_t *)(*(_QWORD *)&v19[OBJC_IVAR____TtC8Freeform15CRLChangeRecord_details]
                      + OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data);
      swift_beginAccess(v20, v86, 0, 0);
      v21 = *v20;
      if (*(_QWORD *)(v21 + 16))
      {
        v22 = sub_100843260(53);
        if ((v23 & 1) != 0)
          break;
      }
      memset(v87, 0, 24);
      v87[3] = 1;
      sub_1004CB800((uint64_t)v87, (uint64_t *)&unk_1013DFC00);

LABEL_8:
      if (v15 == ++v16)
        goto LABEL_31;
    }
    sub_1004CB7BC(*(_QWORD *)(v21 + 56) + 32 * v22, (uint64_t)v87, &qword_1013E0230);
    sub_1004CB800((uint64_t)v87, (uint64_t *)&unk_1013DFC00);
    v24 = *(void **)&v3[v78];
    v25 = *(char **)(v77 + v76);
    v26 = *(_QWORD *)&v25[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess(v26, v85, 0, 0);
    v27 = type metadata accessor for CRLBoardCRDTData(0);
    v29 = (uint64_t)v79;
    v28 = v80;
    v30 = v81;
    (*(void (**)(char *, uint64_t, uint64_t))(v80 + 16))(v79, v26 + *(int *)(v27 + 36), v81);
    v31 = v25;
    v32 = v24;
    v33 = sub_10054B7E8(v29, (uint64_t)v31);
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v29, v30);

    KeyPath = swift_getKeyPath(byte_100F2F2B8);
    v35 = swift_getKeyPath(byte_100F2F2E0);
    static Published.subscript.getter(v87, v32, KeyPath, v35);
    swift_release(KeyPath);
    *(_QWORD *)&v36 = swift_release(v35).n128_u64[0];
    v37 = v87[0];
    v38 = swift_getKeyPath(byte_100F2F2B8, v36);
    v39 = swift_getKeyPath(byte_100F2F2E0);
    v87[0] = (unint64_t)v33;
    v40 = v32;
    static Published.subscript.setter(v87, v40, v38, v39);
    v41 = swift_getKeyPath(byte_100F2F2B8);
    v42 = swift_getKeyPath(byte_100F2F2E0);
    static Published.subscript.getter(v87, v40, v41, v42);
    swift_release(v41);
    swift_release(v42);
    LOBYTE(v42) = sub_100548BE0(v37, v87[0]);
    swift_bridgeObjectRelease();
    if ((v42 & 1) == 0)
      ObservableObjectPublisher.send()();
    v43 = v17;

    swift_bridgeObjectRelease();
    v44 = v73;
    v45 = sub_100C58C50();

    if (!v45)
    {
      v46 = *(void **)&v44[v78];
      v47 = swift_getKeyPath(byte_100F2F300);
      v48 = swift_getKeyPath(aP_18);
      v87[0] = 0;
      static Published.subscript.setter(v87, v46, v47, v48);
      sub_100C20FBC();
    }
    v49 = type metadata accessor for TaskPriority(0);
    v50 = *(_QWORD *)(v49 - 8);
    v51 = v82;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v50 + 56))(v82, 1, 1, v49);
    type metadata accessor for MainActor(0);
    v52 = v44;
    v53 = v44;
    v54 = (uint64_t)v51;
    v55 = v53;
    v56 = static MainActor.shared.getter(v53);
    v57 = (_QWORD *)swift_allocObject(&unk_10129BD48, 40, 7);
    v57[2] = v56;
    v57[3] = &protocol witness table for MainActor;
    v57[4] = v55;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v54, 1, v49) == 1)
    {
      sub_1004CB800(v54, &qword_1013E01F0);
      v59 = 0;
      v60 = v57[2];
      if (v60)
      {
LABEL_20:
        v61 = v57[3];
        ObjectType = swift_getObjectType(v60);
        swift_unknownObjectRetain(v60);
        v63 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v61);
        v65 = v64;
        swift_unknownObjectRelease(v60);
LABEL_23:
        a1 = v75;
        v67 = swift_allocObject(&unk_10129BD70, 32, 7);
        *(_QWORD *)(v67 + 16) = &unk_10140B778;
        *(_QWORD *)(v67 + 24) = v57;
        if (v65 | v63)
        {
          v84[0] = 0;
          v84[1] = 0;
          v68 = v84;
          v84[2] = v63;
          v84[3] = v65;
        }
        else
        {
          v68 = 0;
        }
        v18 = v72;
        v69 = swift_task_create(v59 | 0x1C00, v68, v71[0], &unk_1013FE730);

        swift_release(v69);
        v3 = v52;
        v15 = v74;
        v17 = v43;
        goto LABEL_8;
      }
    }
    else
    {
      v66 = TaskPriority.rawValue.getter(v58);
      (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v54, v49);
      v59 = v66;
      v60 = v57[2];
      if (v60)
        goto LABEL_20;
    }
    v63 = 0;
    v65 = 0;
    goto LABEL_23;
  }
  __break(1u);
}

uint64_t sub_100C461FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[6] = a4;
  v5 = type metadata accessor for MainActor(0);
  v4[7] = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v4[8] = v6;
  v4[9] = v7;
  return swift_task_switch(sub_100C46268, v6, v7);
}

uint64_t sub_100C46268()
{
  _QWORD *v0;
  char *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t KeyPath;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  char *v13;
  _QWORD *v14;

  v1 = (char *)v0[6];
  v2 = (uint64_t *)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_sceneToContentDict];
  swift_beginAccess(&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_sceneToContentDict], v0 + 2, 0, 0);
  v3 = *v2;
  v0[10] = v3;
  swift_bridgeObjectRetain_n(v3, 2);
  sub_100A661F8(v3);
  v5 = v4;
  v6 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState];
  KeyPath = swift_getKeyPath(byte_100F2F2B8);
  v8 = swift_getKeyPath(byte_100F2F2E0);
  v9 = v6;
  static Published.subscript.getter(v0 + 5, v9, KeyPath, v8);
  swift_release(v8);
  swift_release(KeyPath);

  sub_100AF8E88(v0[5]);
  v11 = v10;
  swift_bridgeObjectRelease();
  v12 = sub_100DB005C(v11, v5);
  v0[11] = v12;
  swift_bridgeObjectRelease();
  v13 = v1;
  sub_100C492C8((uint64_t)v12, (uint64_t)v13);

  v14 = (_QWORD *)swift_task_alloc(dword_10140B78C);
  v0[12] = v14;
  *v14 = v0;
  v14[1] = sub_100C463BC;
  return sub_100C27BF0((uint64_t)v12);
}

uint64_t sub_100C463BC()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 96));
  swift_bridgeObjectRelease();
  return swift_task_switch(sub_100C46410, *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72));
}

uint64_t sub_100C46410()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;

  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 80));
  v2 = swift_release(v1);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
}

double sub_100C46560(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  double v4;
  id v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  double *v13;
  _QWORD *v14;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController);
  if (!objc_msgSend(v3, "shouldPreventSyncingContentOffset"))
  {
    v5 = objc_msgSend(v3, "layerHost");
    if (v5)
    {
      v6 = v5;
      v7 = objc_msgSend(v5, "canvasLayer");
      swift_unknownObjectRelease(v6);
      if (v7)
      {
        v8 = objc_msgSend(v7, "superlayer");
        if (v8)
        {
          v9 = v8;
          objc_msgSend(v7, "position");
          objc_msgSend(v9, "convertPoint:toLayer:", a1);
          v4 = v10;
          v12 = v11;

          v13 = (double *)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_lastCanvasCenter);
          *v13 = v4;
          *((_QWORD *)v13 + 1) = v12;
          return v4;
        }

      }
    }
    v14 = (_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_lastCanvasCenter);
    *v14 = 0;
    v14[1] = 0;
    return 0.0;
  }
  return *(double *)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_lastCanvasCenter);
}

uint64_t sub_100C46810()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_100C46834(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

double sub_100C46844(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

void sub_100C4684C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_presentedSceneAlert);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_presentedSceneAlert) = 0;

}

void sub_100C46868(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  sub_10063907C(a1, (uint64_t)asc_100F2F600, (uint64_t)byte_100F2F628, a2);
}

void sub_100C4687C(char *a1)
{
  sub_100711550(*a1);
}

void sub_100C468A0(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  sub_10063907C(a1, (uint64_t)byte_100F2F648, (uint64_t)byte_100F2F670, a2);
}

void sub_100C468B4(char *a1)
{
  sub_100711578(*a1);
}

void sub_100C468D8(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  sub_1006433A4(a1, (uint64_t)byte_100F2F2B8, (uint64_t)byte_100F2F2E0, a2);
}

double sub_100C468EC(_QWORD *a1)
{
  unint64_t v1;

  swift_bridgeObjectRetain(*a1);
  return sub_10087D400(v1);
}

double sub_100C46914@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  double v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100F2F508);
  v5 = swift_getKeyPath(&unk_100F2F530);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  result = v7;
  *a2 = v7;
  return result;
}

uint64_t sub_100C46990(uint64_t *a1, void **a2)
{
  uint64_t v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100F2F508);
  v5 = swift_getKeyPath(&unk_100F2F530);
  v7 = v2;
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

void sub_100C46A04(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100F2F300);
  v5 = swift_getKeyPath(&unk_100F2F328);
  static Published.subscript.getter(&v6, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  *a2 = v6;
}

uint64_t sub_100C46A80(void **a1, void **a2)
{
  void *v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  id v6;
  void *v8;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100F2F300);
  v5 = swift_getKeyPath(&unk_100F2F328);
  v8 = v2;
  v6 = v2;
  return static Published.subscript.setter(&v8, v3, KeyPath, v5);
}

void sub_100C46AF0(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  sub_10063907C(a1, (uint64_t)&unk_100F2F400, (uint64_t)&unk_100F2F428, a2);
}

uint64_t sub_100C46B04(char *a1, void **a2)
{
  char v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100F2F400);
  v5 = swift_getKeyPath(&unk_100F2F428);
  v7 = v2;
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

void sub_100C46B70(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  sub_10063907C(a1, (uint64_t)&unk_100F2F350, (uint64_t)&unk_100F2F378, a2);
}

void sub_100C46B84(char *a1)
{
  sub_100BC9594(*a1);
}

uint64_t sub_100C46BA8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  v4 = (_QWORD *)swift_task_alloc(a3[1]);
  *(_QWORD *)(v3 + 16) = v4;
  *v4 = v3;
  v4[1] = sub_1004CFD00;
  return v6();
}

uint64_t sub_100C46BFC(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  v5 = (_QWORD *)swift_task_alloc(a4[1]);
  *(_QWORD *)(v4 + 16) = v5;
  *v5 = v4;
  v5[1] = sub_1004CFD00;
  return v7();
}

uint64_t sub_100C46C50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD v20[4];

  v6 = type metadata accessor for TaskPriority(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) == 1)
  {
    sub_1004CB800(a1, &qword_1013E01F0);
    v9 = 7168;
    v10 = *(_QWORD *)(a3 + 16);
    if (v10)
    {
LABEL_3:
      v11 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType(v10);
      swift_unknownObjectRetain(v10);
      v13 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v11);
      v15 = v14;
      swift_unknownObjectRelease(v10);
      goto LABEL_6;
    }
  }
  else
  {
    v16 = TaskPriority.rawValue.getter(v8);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    v9 = v16 | 0x1C00;
    v10 = *(_QWORD *)(a3 + 16);
    if (v10)
      goto LABEL_3;
  }
  v13 = 0;
  v15 = 0;
LABEL_6:
  v17 = swift_allocObject(&unk_10129BE10, 32, 7);
  *(_QWORD *)(v17 + 16) = a2;
  *(_QWORD *)(v17 + 24) = a3;
  if (v15 | v13)
  {
    v20[0] = 0;
    v20[1] = 0;
    v18 = v20;
    v20[2] = v13;
    v20[3] = v15;
  }
  else
  {
    v18 = 0;
  }
  return swift_task_create(v9, v18, (char *)&type metadata for () + 8, &unk_10140B7D0);
}

uint64_t sub_100C46D9C(void *a1, void *a2, void *a3, _BYTE *a4)
{
  CGSize *v8;
  CGSize size;
  char *v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  char *v24;
  char *v25;
  void *v26;
  id v27;
  void *v28;
  char *v29;
  void *v30;
  id v31;
  void *v32;
  void *v33;
  char *v34;
  id v35;
  uint64_t result;
  void *v37;
  objc_super v38;

  v8 = (CGSize *)&a4[OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_lastRectangleObscuringCanvasScrollViewReportedToDelegate];
  size = CGRectNull.size;
  *v8 = (CGSize)CGRectNull.origin;
  v8[1] = size;
  a4[OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_wasTearDownCalled] = 0;
  a4[OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_isInstalled] = 0;
  a4[OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_isObserving] = 0;
  a4[OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_isHidden] = 1;
  a4[OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_needsToUpdateFillAndStrokeColors] = 0;
  a4[OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_hasCommandGroupOpenForContinuousColorUpdates] = 0;
  *(_QWORD *)&a4[OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray____lazy_storage___spiPicker] = 0;
  *(_QWORD *)&a4[OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray____lazy_storage___pickerManager] = 1;
  *(_QWORD *)&a4[OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_subscriptions] = &_swiftEmptySetSingleton;
  *(_QWORD *)&a4[OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_observedInfos] = &_swiftEmptySetSingleton;
  a4[OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_updatingZOrderButtons] = 0;
  swift_unknownObjectUnownedInit(&a4[OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_delegate], a1);
  swift_unknownObjectUnownedInit(&a4[OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_icc], a2);
  v10 = a4;
  v11 = objc_msgSend(a2, "layerHost");
  if (!v11)
    goto LABEL_13;
  v12 = v11;
  if ((objc_msgSend(v11, "respondsToSelector:", "asiOSCVC") & 1) == 0)
  {
    swift_unknownObjectRelease(v12);
LABEL_13:
    sub_100757E04(&_mh_execute_header, (uint64_t)"init(delegate:interactiveCanvasController:documentModeController:)", 66, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 148, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(delegate:interactiveCanvasController:documentModeController:)", 66, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 148, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
LABEL_16:
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLiOSPencilTray.swift", 31, 2, 151, 0);
    __break(1u);
    return result;
  }
  v13 = objc_msgSend(v12, "asiOSCVC");
  swift_unknownObjectRelease(v12);
  v14 = objc_msgSend(a2, "editorController");
  if (!v14)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"init(delegate:interactiveCanvasController:documentModeController:)", 66, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 149, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(delegate:interactiveCanvasController:documentModeController:)", 66, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 149, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);

    goto LABEL_16;
  }
  v15 = v14;
  v37 = a1;
  v16 = objc_msgSend(a2, "freehandDrawingToolkit");
  if (!v16)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"init(delegate:interactiveCanvasController:documentModeController:)", 66, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 150, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(delegate:interactiveCanvasController:documentModeController:)", 66, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 150, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);

    goto LABEL_16;
  }
  v17 = v16;
  swift_unknownObjectUnownedInit(&v10[OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_cvc], v13);
  swift_unknownObjectUnownedInit(&v10[OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_editorController], v15);
  v18 = a3;
  swift_unknownObjectUnownedInit(&v10[OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_documentModeController], a3);
  v19 = objc_msgSend(v17, "toolkitUIState");
  v20 = objc_msgSend(v19, "currentLassoType");

  v21 = objc_msgSend(objc_allocWithZone((Class)CRLLassoSegmentedViewController), "initWithLassoType:", v20);
  *(_QWORD *)&v10[OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_lassoSegmentedViewController] = v21;
  v22 = objc_msgSend(objc_allocWithZone((Class)CRLiOSPencilTrayLassoEditingView), "init");
  *(_QWORD *)&v10[OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_lassoEditingView] = v22;
  *(_QWORD *)&v10[OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_lassoEditingViewClippingWorkaround] = v22;
  v23 = v22;

  v38.receiver = v10;
  v38.super_class = (Class)type metadata accessor for CRLiOSPencilTray();
  v24 = (char *)objc_msgSendSuper2(&v38, "init");
  sub_100B5376C();
  v25 = (char *)sub_100B4F46C();
  if (v25)
  {
    v26 = v25;
    v27 = *(id *)&v25[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];

  }
  else
  {
    sub_100B4F3B8();
    v27 = v28;
  }
  objc_msgSend(v27, "addObserver:", v24);

  v29 = (char *)sub_100B4F46C();
  if (v29)
  {
    v30 = v29;
    v31 = *(id *)&v29[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];

  }
  else
  {
    sub_100B4F3B8();
    v31 = v32;
  }
  objc_msgSend(v31, "set_delegate:", v24);

  v33 = *(void **)&v24[OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_lassoSegmentedViewController];
  v34 = v24;
  v35 = v33;
  objc_msgSend(v35, "setDelegate:", v34);

  return (uint64_t)v34;
}

uint64_t sub_100C47334(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t))
{
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  _BYTE v14[24];
  _BYTE v15[24];
  uint64_t v16;
  uint64_t v17;

  v11 = swift_unknownObjectWeakAssign(a1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_tipPopoverController, a2);
  v16 = a6;
  v17 = a7(v11);
  v12 = a1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_currentlyPresentedTip;
  swift_beginAccess(a1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_currentlyPresentedTip, v14, 33, 0);
  sub_100582338((uint64_t)v15, v12, (uint64_t *)&unk_1013E1C40);
  result = swift_endAccess(v14);
  if (a4)
    return a4(result);
  return result;
}

double sub_100C473D8(void *a1, void *a2, uint64_t a3)
{
  id *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  unint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  double result;
  void *v27;
  id v28;
  _BYTE v29[24];
  _BYTE v30[32];
  char v31[24];
  char v32[24];

  if (!a1)
  {
    sub_100C47A60(a2, a3, (uint64_t (*)(uint64_t *))sub_100C4FA7C, (uint64_t (*)(uint64_t *))sub_100C4FA94, (uint64_t)&unk_10129C2E8, (uint64_t)sub_100C4FAAC, (uint64_t)&unk_10129C300, 0.0);
    return result;
  }
  v6 = (id *)(a3 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_delayedControllers);
  swift_beginAccess(a3 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_delayedControllers, v32, 0, 0);
  objc_msgSend(*v6, "removeObject:", a1, swift_unknownObjectRetain(a1).n128_f64[0]);
  v7 = (uint64_t *)(a3 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_waitingInfoControllers);
  swift_beginAccess(a3 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_waitingInfoControllers, v31, 0, 0);
  v8 = *v7;
  swift_unknownObjectRetain(a1);
  swift_bridgeObjectRetain(v8);
  v10 = sub_100C4A358(v9, (uint64_t)a1);
  v12 = v11;
  swift_bridgeObjectRelease();
  v13 = swift_unknownObjectRelease(a1).n128_u64[0];
  if ((v12 & 1) == 0)
  {
    swift_beginAccess(v7, v30, 33, 0);
    v14 = sub_100C5CA9C(v10);
    swift_endAccess(v30);
    v13 = swift_unknownObjectRelease(v14).n128_u64[0];
  }
  if ((objc_msgSend(a1, "showing", *(double *)&v13) & 1) != 0
    || objc_msgSend(a1, "animating"))
  {
    v15 = objc_msgSend(a1, "containerView");
    v16 = objc_msgSend(v15, "superview");

    if (v16)
    {
      if (a1 != a2)
      {
        if (objc_msgSend(a1, "type"))
        {
          v18 = (uint64_t *)(a3 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_showingInfoControllers);
          swift_beginAccess(a3 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_showingInfoControllers, v30, 0, 0);
          v19 = *v18;
          swift_unknownObjectRetain(a1);
          swift_bridgeObjectRetain(v19);
          v21 = sub_100C4A358(v20, (uint64_t)a1);
          v23 = v22;
          swift_bridgeObjectRelease();
          v17 = swift_unknownObjectRelease(a1).n128_u64[0];
          if ((v23 & 1) != 0)
          {
LABEL_17:
            v28 = objc_msgSend(a1, "containerView", *(double *)&v17);
            objc_msgSend(v28, "removeFromSuperview");

            sub_100C47A60(a2, a3, (uint64_t (*)(uint64_t *))sub_100C4FA7C, (uint64_t (*)(uint64_t *))sub_100C4FA94, (uint64_t)&unk_10129C2E8, (uint64_t)sub_100C4FAAC, (uint64_t)&unk_10129C300, 0.0);
            *(_BYTE *)(a3 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_needsLayout) = 1;
            sub_100C5F4C4();
            goto LABEL_18;
          }
          swift_beginAccess(v18, v29, 33, 0);
          v24 = sub_100C5CA9C(v21);
          swift_endAccess(v29);
          v25 = v24;
        }
        else
        {
          v27 = *(void **)(a3 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_errorController);
          if (!v27 || v27 != a1)
            goto LABEL_17;
          *(_QWORD *)(a3 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_errorController) = 0;
          v25 = (uint64_t)a1;
        }
        v17 = swift_unknownObjectRelease(v25).n128_u64[0];
        goto LABEL_17;
      }
    }
  }
  sub_100C47A60(a2, a3, (uint64_t (*)(uint64_t *))sub_100C4FA7C, (uint64_t (*)(uint64_t *))sub_100C4FA94, (uint64_t)&unk_10129C2E8, (uint64_t)sub_100C4FAAC, (uint64_t)&unk_10129C300, 0.0);
LABEL_18:
  *(_QWORD *)&result = swift_unknownObjectRelease(a1).n128_u64[0];
  return result;
}

double sub_100C4771C(void *a1, void *a2, uint64_t a3)
{
  id *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  unint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  double result;
  void *v27;
  id v28;
  _BYTE v29[24];
  _BYTE v30[32];
  char v31[24];
  char v32[24];

  if (!a1)
  {
    sub_100C47A60(a2, a3, (uint64_t (*)(uint64_t *))sub_100C4FA7C, (uint64_t (*)(uint64_t *))sub_100C4FA94, (uint64_t)&unk_10129C270, (uint64_t)sub_100C4FAAC, (uint64_t)&unk_10129C288, 0.0);
    return result;
  }
  v6 = (id *)(a3 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_delayedControllers);
  swift_beginAccess(a3 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_delayedControllers, v32, 0, 0);
  objc_msgSend(*v6, "removeObject:", a1, swift_unknownObjectRetain(a1).n128_f64[0]);
  v7 = (uint64_t *)(a3 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_waitingInfoControllers);
  swift_beginAccess(a3 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_waitingInfoControllers, v31, 0, 0);
  v8 = *v7;
  swift_unknownObjectRetain(a1);
  swift_bridgeObjectRetain(v8);
  v10 = sub_100C4A358(v9, (uint64_t)a1);
  v12 = v11;
  swift_bridgeObjectRelease();
  v13 = swift_unknownObjectRelease(a1).n128_u64[0];
  if ((v12 & 1) == 0)
  {
    swift_beginAccess(v7, v30, 33, 0);
    v14 = sub_100C5CA9C(v10);
    swift_endAccess(v30);
    v13 = swift_unknownObjectRelease(v14).n128_u64[0];
  }
  if ((objc_msgSend(a1, "showing", *(double *)&v13) & 1) != 0
    || objc_msgSend(a1, "animating"))
  {
    v15 = objc_msgSend(a1, "containerView");
    v16 = objc_msgSend(v15, "superview");

    if (v16)
    {
      if (a1 != a2)
      {
        if (objc_msgSend(a1, "type"))
        {
          v18 = (uint64_t *)(a3 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_showingInfoControllers);
          swift_beginAccess(a3 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_showingInfoControllers, v30, 0, 0);
          v19 = *v18;
          swift_unknownObjectRetain(a1);
          swift_bridgeObjectRetain(v19);
          v21 = sub_100C4A358(v20, (uint64_t)a1);
          v23 = v22;
          swift_bridgeObjectRelease();
          v17 = swift_unknownObjectRelease(a1).n128_u64[0];
          if ((v23 & 1) != 0)
          {
LABEL_17:
            v28 = objc_msgSend(a1, "containerView", *(double *)&v17);
            objc_msgSend(v28, "removeFromSuperview");

            sub_100C47A60(a2, a3, (uint64_t (*)(uint64_t *))sub_100C4FA7C, (uint64_t (*)(uint64_t *))sub_100C4FA94, (uint64_t)&unk_10129C270, (uint64_t)sub_100C4FAAC, (uint64_t)&unk_10129C288, 0.0);
            *(_BYTE *)(a3 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_needsLayout) = 1;
            sub_100C5F4C4();
            goto LABEL_18;
          }
          swift_beginAccess(v18, v29, 33, 0);
          v24 = sub_100C5CA9C(v21);
          swift_endAccess(v29);
          v25 = v24;
        }
        else
        {
          v27 = *(void **)(a3 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_errorController);
          if (!v27 || v27 != a1)
            goto LABEL_17;
          *(_QWORD *)(a3 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_errorController) = 0;
          v25 = (uint64_t)a1;
        }
        v17 = swift_unknownObjectRelease(v25).n128_u64[0];
        goto LABEL_17;
      }
    }
  }
  sub_100C47A60(a2, a3, (uint64_t (*)(uint64_t *))sub_100C4FA7C, (uint64_t (*)(uint64_t *))sub_100C4FA94, (uint64_t)&unk_10129C270, (uint64_t)sub_100C4FAAC, (uint64_t)&unk_10129C288, 0.0);
LABEL_18:
  *(_QWORD *)&result = swift_unknownObjectRelease(a1).n128_u64[0];
  return result;
}

void sub_100C47A60(void *a1, uint64_t a2, uint64_t (*a3)(uint64_t *), uint64_t (*a4)(uint64_t *), uint64_t a5, uint64_t a6, uint64_t a7, double a8)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t inited;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  __n128 v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id *v36;
  id v37;
  __n128 v38;
  uint64_t v39;
  const char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char v52;
  double v53;
  __n128 v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  char *v59;
  __n128 v60;
  char *v61;
  uint64_t v62;
  __n128 v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  __n128 v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  double v79;
  id v80;
  id v81;
  id v82;
  id v83;
  double v84;
  id v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t (*v102)(uint64_t *);
  uint64_t (*v103)(uint64_t *);
  _QWORD v104[5];
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char v109[112];
  char v110[32];

  v92 = a6;
  v93 = a7;
  v91 = a5;
  v102 = a4;
  v103 = a3;
  v11 = type metadata accessor for DispatchWorkItemFlags(0);
  v100 = *(_QWORD *)(v11 - 8);
  v101 = v11;
  __chkstk_darwin(v11);
  v99 = (char *)&v88 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchQoS(0);
  v97 = *(_QWORD *)(v13 - 8);
  v98 = v13;
  __chkstk_darwin(v13);
  v96 = (char *)&v88 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = type metadata accessor for DispatchTime(0);
  v90 = *(_QWORD *)(v95 - 8);
  __chkstk_darwin(v95);
  v89 = (char *)&v88 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v94 = (char *)&v88 - v17;
  if (qword_1013DD6E8 != -1)
    swift_once(&qword_1013DD6E8, sub_100A01318);
  swift_beginAccess(&static OS_os_log.crlStatusHUD, v110, 0, 0);
  v18 = (void *)static OS_os_log.crlStatusHUD;
  v19 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v19, v109);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  v104[0] = a1;
  v21 = v18;
  v22 = a1;
  v23 = sub_1004B804C(&qword_1013E79E0);
  v24 = sub_1004B804C(&qword_1013E0190);
  swift_dynamicCast(inited + 32, v104, v23, v24, 7);
  v25 = objc_msgSend(v22, "message");
  if (v25)
  {
    v26 = v25;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
    v28 = v27;
    v30 = v29;

  }
  else
  {
    v28 = 0;
    v30 = 0;
  }
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = sub_1004CFC2C();
  if (v30)
    v32 = v28;
  else
    v32 = 0;
  v33 = 0xE000000000000000;
  if (v30)
    v33 = v30;
  *(_QWORD *)(inited + 72) = v32;
  *(_QWORD *)(inited + 80) = v33;
  v34 = static os_log_type_t.default.getter(v31);
  sub_100A06EBC((uint64_t)v21, &_mh_execute_header, v34, "show hudController=%{public}@ message=\"%@\"", 42, 2, inited);
  swift_setDeallocating(inited);
  swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), v24);

  v35 = a2;
  v36 = (id *)(a2 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_delayedControllers);
  if (objc_msgSend(*(id *)(a2 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_delayedControllers), "containsObject:", v22, swift_beginAccess(a2 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_delayedControllers, &v108, 0, 0).n128_f64[0]))
  {
    v37 = (id)static OS_os_log.crlStatusHUD;
    v39 = static os_log_type_t.default.getter(v38);
    v40 = "Trying to delay the same hud controller, just sticking with the old delay";
    v41 = (uint64_t)v37;
    v42 = 73;
LABEL_16:
    sub_100A06EBC(v41, &_mh_execute_header, v39, v40, v42, 2, (uint64_t)_swiftEmptyArrayStorage);

    return;
  }
  v43 = (uint64_t *)(a2 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_showingInfoControllers);
  swift_beginAccess(a2 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_showingInfoControllers, &v107, 0, 0);
  v44 = *v43;
  __chkstk_darwin(v45);
  *(&v88 - 2) = (uint64_t)v22;
  swift_bridgeObjectRetain(v44);
  sub_100C1C5F0(v103, (uint64_t)(&v88 - 4), v44);
  v47 = v46;
  swift_bridgeObjectRelease();
  if ((v47 & 1) == 0)
    goto LABEL_15;
  v48 = (uint64_t *)(a2 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_waitingInfoControllers);
  swift_beginAccess(a2 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_waitingInfoControllers, &v106, 0, 0);
  v49 = *v48;
  __chkstk_darwin(v50);
  *(&v88 - 2) = (uint64_t)v22;
  swift_bridgeObjectRetain(v49);
  sub_100C1C5F0(v102, (uint64_t)(&v88 - 4), v49);
  v52 = v51;
  *(_QWORD *)&v53 = swift_bridgeObjectRelease().n128_u64[0];
  if ((v52 & 1) == 0)
  {
LABEL_15:
    v37 = (id)static OS_os_log.crlStatusHUD;
    v39 = static os_log_type_t.default.getter(v54);
    v40 = "Ignoring attempt to show hud controller that has aleady been shown or is waiting to show.";
    v41 = (uint64_t)v37;
    v42 = 89;
    goto LABEL_16;
  }
  if (a8 != 0.0)
  {
    objc_msgSend(*v36, "addObject:", v22, v53);
    v59 = v89;
    static DispatchTime.now()(v60);
    v61 = v94;
    + infix(_:_:)(v59, a8);
    v103 = *(uint64_t (**)(uint64_t *))(v90 + 8);
    v62 = v95;
    ((void (*)(char *, uint64_t))v103)(v59, v95);
    sub_1004B8930(0, (unint64_t *)&qword_1013DE090, OS_dispatch_queue_ptr);
    v64 = (void *)static OS_dispatch_queue.main.getter(v63);
    v65 = swift_allocObject(&unk_10129BCD0, 24, 7);
    swift_unknownObjectWeakInit(v65 + 16);
    v66 = swift_allocObject(v91, 32, 7);
    *(_QWORD *)(v66 + 16) = v65;
    *(_QWORD *)(v66 + 24) = v22;
    v104[4] = v92;
    v105 = v66;
    v104[0] = _NSConcreteStackBlock;
    v104[1] = *(_QWORD *)"";
    v104[2] = sub_1005D2FC0;
    v104[3] = v93;
    v67 = _Block_copy(v104);
    v68 = v105;
    swift_unknownObjectRetain(v22);
    v69 = swift_release(v68);
    v70 = v96;
    static DispatchQoS.unspecified.getter(v69);
    v104[0] = _swiftEmptyArrayStorage;
    v71 = sub_1004B7878((unint64_t *)&qword_1013E1D20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v72 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
    v73 = sub_1004CBA30((unint64_t *)&qword_1013E1D30, (uint64_t *)&unk_1013DFBF0, (uint64_t)&protocol conformance descriptor for [A]);
    v74 = v99;
    v75 = v72;
    v76 = v101;
    dispatch thunk of SetAlgebra.init<A>(_:)(v104, v75, v73, v101, v71);
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v61, v70, v74, v67);
    _Block_release(v67);

    (*(void (**)(char *, uint64_t))(v100 + 8))(v74, v76);
    (*(void (**)(char *, uint64_t))(v97 + 8))(v70, v98);
    ((void (*)(char *, uint64_t))v103)(v61, v62);
    return;
  }
  if (objc_msgSend(v22, "type", v53))
  {
    swift_beginAccess(v48, v104, 33, 0);
    swift_unknownObjectRetain(v22);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v55);
    v57 = *(_QWORD *)((*v48 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v56 = *(_QWORD *)((*v48 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v57 >= v56 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v56 > 1, v57 + 1, 1);
    v58 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v57, v22);
    specialized Array._endMutation()(v58);
    swift_endAccess(v104);
    goto LABEL_33;
  }
  v77 = OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_errorController;
  v78 = *(id *)(v35 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_errorController);
  if (v78)
  {
    if (v78 == v22)
    {
      *(_QWORD *)&v84 = swift_unknownObjectRetain(v22).n128_u64[0];
      if ((objc_msgSend(v85, "showing", v84) & 1) != 0)
        objc_msgSend(v22, "setShowing:", 1);
      v86 = v22;
    }
    else
    {
      *(_QWORD *)&v79 = swift_unknownObjectRetain(*(_QWORD *)(v35
                                                            + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_errorController)).n128_u64[0];
      v81 = objc_msgSend(v80, "containerView", v79);
      v82 = objc_msgSend(v81, "superview");

      if (v82)
      {
        v83 = objc_msgSend(v78, "containerView");
        objc_msgSend(v83, "removeFromSuperview");
        swift_unknownObjectRelease(v78);

        *(_BYTE *)(v35 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_needsLayout) = 1;
        goto LABEL_32;
      }
      v86 = v78;
    }
    swift_unknownObjectRelease(v86);
  }
LABEL_32:
  v87 = *(_QWORD *)(v35 + v77);
  *(_QWORD *)(v35 + v77) = v22;
  swift_unknownObjectRetain(v22);
  swift_unknownObjectRelease(v87);
LABEL_33:
  sub_100C5F4C4();
}

char *sub_100C48230(void *a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, _QWORD *a7, double a8)
{
  _BYTE *v16;
  char *v17;
  uint64_t ObjectType;
  double *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v16 = objc_allocWithZone((Class)type metadata accessor for CRLPersistentFollowHUDController(0));
  v17 = (char *)sub_100C4D0E4((uint64_t)a1, a2, a3, (uint64_t)a4, v16);
  ObjectType = swift_getObjectType(a7);
  swift_deallocPartialClassInstance(a7, ObjectType, *(unsigned int *)((swift_isaMask & *a7) + 0x30), *(unsigned __int16 *)((swift_isaMask & *a7) + 0x34));
  v19 = (double *)&v17[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_canvasWidth];
  *v19 = a8;
  *((_BYTE *)v19 + 8) = 0;
  v20 = (uint64_t *)&v17[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_stopButtonClickedHandler];
  v21 = *(_QWORD *)&v17[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_stopButtonClickedHandler];
  v22 = *(_QWORD *)&v17[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_stopButtonClickedHandler + 8];
  *v20 = a5;
  v20[1] = a6;
  v23 = v17;
  sub_1004C0F54(a5, a6);
  sub_1004C1024(v21, v22);
  if ((v23[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_setupDone] & 1) == 0)
  {
    v23[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_setupDone] = 1;
    sub_100C19610();
    v24 = OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_hudView;
    v25 = *(id *)&v23[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_hudView];
    v26 = sub_1007F152C();
    objc_msgSend(v25, "addSubview:", v26);

    objc_msgSend(*(id *)&v23[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_containerView], "addSubview:", *(_QWORD *)&v23[v24]);
    sub_1007F06E0();
  }
  v27 = sub_1007EFA6C();
  v29 = v28;
  sub_1004C1024(a5, a6);

  swift_unknownObjectRelease(a3);
  v30 = (uint64_t *)&v23[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_accessibilityAnnouncement];
  *v30 = v27;
  v30[1] = v29;
  swift_bridgeObjectRelease();
  return v23;
}

id sub_100C48404(void *a1, void *a2, char *a3, double a4, double a5, double a6, double a7, double a8)
{
  uint64_t v16;
  double *v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  objc_super v25;

  v16 = swift_unknownObjectWeakInit(&a3[OBJC_IVAR____TtC8Freeform28CRLFollowBorderHighlightView_delegate]);
  *(_QWORD *)&a3[OBJC_IVAR____TtC8Freeform28CRLFollowBorderHighlightView_defaultCornerRadius] = 0x4030000000000000;
  swift_unknownObjectWeakAssign(v16, a1);
  *(_QWORD *)&a3[OBJC_IVAR____TtC8Freeform28CRLFollowBorderHighlightView_color] = a2;
  *(double *)&a3[OBJC_IVAR____TtC8Freeform28CRLFollowBorderHighlightView_width] = a4;
  v17 = (double *)&a3[OBJC_IVAR____TtC8Freeform28CRLFollowBorderHighlightView_canvasRect];
  *v17 = a5;
  v17[1] = a6;
  v17[2] = a7;
  v17[3] = a8;
  v25.receiver = a3;
  v25.super_class = (Class)type metadata accessor for CRLFollowBorderHighlightView();
  v18 = a2;
  v19 = objc_msgSendSuper2(&v25, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v20 = (void *)objc_opt_self(UIColor);
  v21 = v19;
  v22 = objc_msgSend(v20, "clearColor", v25.receiver, v25.super_class);
  objc_msgSend(v21, "setBackgroundColor:", v22);

  v23 = v21;
  objc_msgSend(v23, "setUserInteractionEnabled:", 0);

  return v23;
}

char *sub_100C48578(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6, double a7)
{
  char *v14;
  char *v15;
  uint64_t ObjectType;
  double *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  NSString v26;
  NSString v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;

  v14 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLTransientRefollowHUDController(0));
  v15 = (char *)sub_100C4D4A0((uint64_t)a1, a2, a3, v14);
  ObjectType = swift_getObjectType(a6);
  swift_deallocPartialClassInstance(a6, ObjectType, *(unsigned int *)((swift_isaMask & *a6) + 0x30), *(unsigned __int16 *)((swift_isaMask & *a6) + 0x34));
  v17 = (double *)&v15[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_canvasWidth];
  *v17 = a7;
  *((_BYTE *)v17 + 8) = 0;
  v18 = (uint64_t *)&v15[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_refollowClickedHandler];
  v19 = *(_QWORD *)&v15[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_refollowClickedHandler];
  v20 = *(_QWORD *)&v15[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_refollowClickedHandler + 8];
  *v18 = a4;
  v18[1] = a5;
  v21 = v15;
  sub_1004C0F54(a4, a5);
  sub_1004C1024(v19, v20);
  if ((v21[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_setupDone] & 1) == 0)
  {
    v21[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_setupDone] = 1;
    sub_100C19610();
    v22 = OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_hudView;
    v23 = *(id *)&v21[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_hudView];
    v24 = sub_100883870();
    objc_msgSend(v23, "addSubview:", v24);

    objc_msgSend(*(id *)&v21[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_containerView], "addSubview:", *(_QWORD *)&v21[v22]);
    sub_100882ABC();
  }
  v25 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v26 = String._bridgeToObjectiveC()();
  v27 = String._bridgeToObjectiveC()();
  v28 = objc_msgSend(v25, "localizedStringForKey:value:table:", v26, v27, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
  v30 = v29;
  v32 = v31;

  sub_1004C1024(a4, a5);
  swift_unknownObjectRelease(a3);
  v33 = &v21[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_accessibilityAnnouncement];
  *(_QWORD *)v33 = v30;
  *((_QWORD *)v33 + 1) = v32;
  swift_bridgeObjectRelease();
  return v21;
}

char *sub_100C487D4(void *a1, void *a2, uint64_t a3, char a4, _QWORD *a5, double a6)
{
  _BYTE *v12;
  id v13;
  char *v14;
  uint64_t ObjectType;
  double *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;

  v12 = objc_allocWithZone((Class)type metadata accessor for CRLTransientStartEndFollowHUDController(0));
  v13 = a2;
  v14 = (char *)sub_100C4D880((uint64_t)a1, a2, 0, a3, a4, v12);
  ObjectType = swift_getObjectType(a5);
  swift_deallocPartialClassInstance(a5, ObjectType, *(unsigned int *)((swift_isaMask & *a5) + 0x30), *(unsigned __int16 *)((swift_isaMask & *a5) + 0x34));
  v16 = (double *)&v14[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_canvasWidth];
  *v16 = a6;
  *((_BYTE *)v16 + 8) = 0;
  if (v14[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_setupDone] == 1)
  {
    v17 = v14;
  }
  else
  {
    v14[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_setupDone] = 1;
    v18 = v14;
    sub_100C19610();
    v19 = OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_hudView;
    v20 = *(id *)&v18[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_hudView];
    v21 = sub_10066806C();
    objc_msgSend(v20, "addSubview:", v21);

    objc_msgSend(*(id *)&v18[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_containerView], "addSubview:", *(_QWORD *)&v18[v19]);
    sub_100667280();
  }
  v22 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v14, "touchedHUDWithSender:");
  objc_msgSend(v22, "setNumberOfTapsRequired:", 1);
  objc_msgSend(*(id *)&v14[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_hudView], "addGestureRecognizer:", v22);

  v23 = sub_100666C98();
  v25 = v24;

  swift_unknownObjectRelease(a3);
  v26 = (uint64_t *)&v14[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_accessibilityAnnouncement];
  *v26 = v23;
  v26[1] = v25;
  swift_bridgeObjectRelease();
  return v14;
}

char *sub_100C489D8(void *a1, void *a2, uint64_t a3, char a4, _QWORD *a5, double a6)
{
  _BYTE *v12;
  char *v13;
  uint64_t ObjectType;
  double *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;

  v12 = objc_allocWithZone((Class)type metadata accessor for CRLTransientStartEndFollowHUDController(0));
  v13 = (char *)sub_100C4D880((uint64_t)a1, a2, 1, a3, a4, v12);
  ObjectType = swift_getObjectType(a5);
  swift_deallocPartialClassInstance(a5, ObjectType, *(unsigned int *)((swift_isaMask & *a5) + 0x30), *(unsigned __int16 *)((swift_isaMask & *a5) + 0x34));
  v15 = (double *)&v13[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_canvasWidth];
  *v15 = a6;
  *((_BYTE *)v15 + 8) = 0;
  if (v13[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_setupDone] == 1)
  {
    v16 = v13;
  }
  else
  {
    v13[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_setupDone] = 1;
    v17 = v13;
    sub_100C19610();
    v18 = OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_hudView;
    v19 = *(id *)&v17[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_hudView];
    v20 = sub_10066806C();
    objc_msgSend(v19, "addSubview:", v20);

    objc_msgSend(*(id *)&v17[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_containerView], "addSubview:", *(_QWORD *)&v17[v18]);
    sub_100667280();
  }
  v21 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v13, "touchedHUDWithSender:");
  objc_msgSend(v21, "setNumberOfTapsRequired:", 1);
  objc_msgSend(*(id *)&v13[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_hudView], "addGestureRecognizer:", v21);

  v22 = sub_100666C98();
  v24 = v23;

  swift_unknownObjectRelease(a3);
  v25 = (uint64_t *)&v13[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_accessibilityAnnouncement];
  *v25 = v22;
  v25[1] = v24;
  swift_bridgeObjectRelease();
  return v13;
}

char *sub_100C48BC8(void *a1, uint64_t a2, _BYTE *a3)
{
  char *v6;
  char *v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  char *v12;
  id v13;
  id v14;
  char *v15;
  id v16;
  objc_super v18;

  v6 = &a3[OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_manager];
  swift_unknownObjectWeakInit(&a3[OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_manager]);
  v7 = &a3[OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_delegate];
  swift_unknownObjectWeakInit(&a3[OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_delegate]);
  *(_QWORD *)&a3[OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_type] = 2;
  *(_QWORD *)&a3[OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_minimumShowDuration] = 0x3FF0000000000000;
  *(_QWORD *)&a3[OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_maximumShowDuration] = 0x4018000000000000;
  v8 = &a3[OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_timeStartedShowing];
  v9 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  *(_QWORD *)&a3[OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_hideTimer] = 0;
  a3[OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_shouldAutoHide] = 1;
  a3[OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_showing] = 0;
  a3[OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_animating] = 0;
  a3[OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_hiding] = 0;
  v10 = &a3[OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_accessibilityAnnouncement];
  *v10 = 0;
  v10[1] = 0;
  a3[OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_swipable] = 1;
  *(_QWORD *)&a3[OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_swipeGestureRecognizer] = 0;
  a3[OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_hideOnTouch] = 1;
  a3[OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_setupDone] = 0;
  *(_QWORD *)&a3[OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_height] = 0x4045000000000000;
  *(_QWORD *)&a3[OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_heightConstraint] = 0;
  *(_QWORD *)&a3[OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_constraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&a3[OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi____lazy_storage____label] = 0;
  swift_unknownObjectWeakAssign(v6, a1);
  swift_unknownObjectWeakAssign(v7, a2);
  v11 = objc_allocWithZone((Class)UIView);
  v12 = a3;
  v13 = objc_msgSend(v11, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v12[OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_hudView] = v13;
  v14 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v12[OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_containerView] = v14;

  v18.receiver = v12;
  v18.super_class = (Class)type metadata accessor for CRLCollaboratorBaseStatusHUDController_mi(0);
  v15 = (char *)objc_msgSendSuper2(&v18, "init");
  sub_100665C88((uint64_t)v15);
  v16 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v15, "touchedHUDWithSender:");
  objc_msgSend(v16, "setNumberOfTapsRequired:", 1);
  objc_msgSend(*(id *)&v15[OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_hudView], "addGestureRecognizer:", v16);

  swift_unknownObjectRelease(a2);
  return v15;
}

void sub_100C48ECC(uint64_t a1)
{
  void *v1;
  id v2;

  v1 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scrollView);
  v2 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  objc_msgSend(v1, "setBackgroundColor:", v2);

}

void sub_100C48F34()
{
  sub_100C20FBC();
}

uint64_t sub_100C48F54(uint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v5 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0)
      v5 = a2;
    v6 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0)
      v6 = 11;
    v7 = v6 | (v5 << 16);
    v8 = String.index(_:offsetBy:limitedBy:)(15, result, v7, a2, a3);
    if ((v9 & 1) != 0)
      v10 = v7;
    else
      v10 = v8;
    return String.subscript.getter(15, v10, a2, a3);
  }
  return result;
}

void sub_100C48FDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  int64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  int64_t v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[5];
  void *v33;

  v3 = v2;
  v5 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v6 = a1;
    else
      v6 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v7 = __CocoaSet.makeIterator()(v6);
    v8 = type metadata accessor for CRLSceneInfo(0);
    v9 = sub_1004B7878(&qword_10140B790, type metadata accessor for CRLSceneInfo, (uint64_t)&protocol conformance descriptor for NSObject);
    v10 = Set.Iterator.init(_cocoa:)(v32, v7, v8, v9);
    v5 = v32[0];
    v30 = v32[1];
    v11 = v32[2];
    v12 = v32[3];
    v13 = v32[4];
  }
  else
  {
    v14 = -1 << *(_BYTE *)(a1 + 32);
    v30 = a1 + 56;
    v15 = ~v14;
    v16 = -v14;
    if (v16 < 64)
      v17 = ~(-1 << v16);
    else
      v17 = -1;
    v13 = v17 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain(a1);
    v11 = v15;
    v12 = 0;
  }
  v29 = (unint64_t)(v11 + 64) >> 6;
  if ((v5 & 0x8000000000000000) == 0)
    goto LABEL_14;
LABEL_11:
  v18 = __CocoaSet.Iterator.next()(v10);
  if (v18)
  {
    v19 = v18;
    v31 = v18;
    v20 = type metadata accessor for CRLSceneInfo(0);
    swift_unknownObjectRetain(v19);
    swift_dynamicCast(&v33, &v31, (char *)&type metadata for Swift.AnyObject + 8, v20, 7);
    v21 = v33;
    swift_unknownObjectRelease(v19);
    v22 = v12;
    v23 = v13;
    while (v21)
    {
      v33 = v21;
      sub_100C41CAC(&v33, a2);

      if (v3)
      {
        v28 = v5;
        goto LABEL_39;
      }
      v12 = v22;
      v13 = v23;
      if (v5 < 0)
        goto LABEL_11;
LABEL_14:
      if (v13)
      {
        v23 = (v13 - 1) & v13;
        v24 = __clz(__rbit64(v13)) | (v12 << 6);
        v22 = v12;
      }
      else
      {
        v22 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
          __break(1u);
          return;
        }
        if (v22 >= v29)
          break;
        v25 = *(_QWORD *)(v30 + 8 * v22);
        if (!v25)
        {
          v26 = v12 + 2;
          if (v12 + 2 >= v29)
            break;
          v25 = *(_QWORD *)(v30 + 8 * v26);
          if (v25)
            goto LABEL_25;
          v26 = v12 + 3;
          if (v12 + 3 >= v29)
            break;
          v25 = *(_QWORD *)(v30 + 8 * v26);
          if (v25)
            goto LABEL_25;
          v26 = v12 + 4;
          if (v12 + 4 >= v29)
            break;
          v25 = *(_QWORD *)(v30 + 8 * v26);
          if (v25)
          {
LABEL_25:
            v22 = v26;
          }
          else
          {
            v22 = v12 + 5;
            if (v12 + 5 >= v29)
              break;
            v25 = *(_QWORD *)(v30 + 8 * v22);
            if (!v25)
            {
              v27 = v12 + 6;
              while (v29 != v27)
              {
                v25 = *(_QWORD *)(v30 + 8 * v27++);
                if (v25)
                {
                  v22 = v27 - 1;
                  goto LABEL_26;
                }
              }
              break;
            }
          }
        }
LABEL_26:
        v23 = (v25 - 1) & v25;
        v24 = __clz(__rbit64(v25)) + (v22 << 6);
      }
      v21 = *(id *)(*(_QWORD *)(v5 + 48) + 8 * v24);
    }
  }
  v28 = v5;
LABEL_39:
  sub_1004D284C(v28);
}

void sub_100C492C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  int64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  unint64_t v26;
  char v27;
  char v28;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  _QWORD v34[3];
  _QWORD v35[5];
  uint64_t v36;

  v2 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v3 = a1;
    else
      v3 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v4 = __CocoaSet.makeIterator()(v3);
    v5 = type metadata accessor for CRLSceneInfo(0);
    v6 = sub_1004B7878(&qword_10140B790, type metadata accessor for CRLSceneInfo, (uint64_t)&protocol conformance descriptor for NSObject);
    v7 = Set.Iterator.init(_cocoa:)(v35, v4, v5, v6);
    v2 = v35[0];
    v32 = v35[1];
    v8 = v35[2];
    v9 = v35[3];
    v10 = v35[4];
  }
  else
  {
    v11 = -1 << *(_BYTE *)(a1 + 32);
    v32 = a1 + 56;
    v12 = ~v11;
    v13 = -v11;
    if (v13 < 64)
      v14 = ~(-1 << v13);
    else
      v14 = -1;
    v10 = v14 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain(a1);
    v8 = v12;
    v9 = 0;
  }
  v31 = (unint64_t)(v8 + 64) >> 6;
  while (v2 < 0)
  {
    v18 = __CocoaSet.Iterator.next()(v7);
    if (!v18)
      goto LABEL_39;
    v19 = v18;
    v36 = v18;
    v20 = type metadata accessor for CRLSceneInfo(0);
    swift_unknownObjectRetain(v19);
    swift_dynamicCast(v34, &v36, (char *)&type metadata for Swift.AnyObject + 8, v20, 7);
    v21 = (id)v34[0];
    swift_unknownObjectRelease(v19);
    v17 = v9;
    v15 = v10;
    if (!v21)
      goto LABEL_39;
LABEL_36:
    v25 = (uint64_t *)(a2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_sceneToContentDict);
    swift_beginAccess(a2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_sceneToContentDict, v34, 33, 0);
    swift_bridgeObjectRetain(*v25);
    v26 = sub_10084406C((uint64_t)v21);
    v28 = v27;
    swift_bridgeObjectRelease();
    if ((v28 & 1) != 0)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v30 = *v25;
      v36 = *v25;
      *v25 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1008344BC();
        v30 = v36;
      }

      sub_10051AA44(v26, v30);
      *v25 = v30;
      swift_bridgeObjectRelease();
    }
    swift_endAccess(v34);

    swift_bridgeObjectRelease();
    v9 = v17;
    v10 = v15;
  }
  if (v10)
  {
    v15 = (v10 - 1) & v10;
    v16 = __clz(__rbit64(v10)) | (v9 << 6);
    v17 = v9;
LABEL_35:
    v21 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v16);
    if (!v21)
      goto LABEL_39;
    goto LABEL_36;
  }
  v22 = v9 + 1;
  if (!__OFADD__(v9, 1))
  {
    if (v22 >= v31)
      goto LABEL_39;
    v23 = *(_QWORD *)(v32 + 8 * v22);
    v17 = v9 + 1;
    if (!v23)
    {
      v17 = v9 + 2;
      if (v9 + 2 >= v31)
        goto LABEL_39;
      v23 = *(_QWORD *)(v32 + 8 * v17);
      if (!v23)
      {
        v17 = v9 + 3;
        if (v9 + 3 >= v31)
          goto LABEL_39;
        v23 = *(_QWORD *)(v32 + 8 * v17);
        if (!v23)
        {
          v17 = v9 + 4;
          if (v9 + 4 >= v31)
            goto LABEL_39;
          v23 = *(_QWORD *)(v32 + 8 * v17);
          if (!v23)
          {
            v17 = v9 + 5;
            if (v9 + 5 >= v31)
              goto LABEL_39;
            v23 = *(_QWORD *)(v32 + 8 * v17);
            if (!v23)
            {
              v24 = v9 + 6;
              while (v31 != v24)
              {
                v23 = *(_QWORD *)(v32 + 8 * v24++);
                if (v23)
                {
                  v17 = v24 - 1;
                  goto LABEL_34;
                }
              }
LABEL_39:
              sub_1004D284C(v2);
              return;
            }
          }
        }
      }
    }
LABEL_34:
    v15 = (v23 - 1) & v23;
    v16 = __clz(__rbit64(v23)) + (v17 << 6);
    goto LABEL_35;
  }
  __break(1u);
}

_QWORD *sub_100C49640(unint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v12;
  __n128 v13;
  char v14;
  Swift::Int v15;
  Swift::Int v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  char v20;
  uint64_t v21;
  id v22;
  char v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  _QWORD *v33;

  v3 = a1;
  v33 = _swiftEmptyArrayStorage;
  if (a1 >> 62)
    goto LABEL_25;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      v26 = v3;
      v5 = 0;
      v6 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState;
      v31 = v3 & 0xFFFFFFFFFFFFFF8;
      v32 = v3 & 0xC000000000000001;
      v29 = a2;
      v30 = v3 + 32;
      v27 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState;
      v28 = v4;
      while (v32)
      {
        v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v26);
LABEL_10:
        v10 = v7;
        if (__OFADD__(v5++, 1))
          goto LABEL_24;
        v12 = *(_QWORD *)(*(_QWORD *)(a2 + v6) + OBJC_IVAR____TtC8Freeform21CRLScenesPopoverState_sceneInfosToDelete);
        if ((v12 & 0xC000000000000001) != 0)
        {
          swift_bridgeObjectRetain(*(_QWORD *)(*(_QWORD *)(a2 + v6)
                                             + OBJC_IVAR____TtC8Freeform21CRLScenesPopoverState_sceneInfosToDelete));
          v3 = v10;
          v14 = __CocoaSet.contains(_:)(v13);
          swift_bridgeObjectRelease(v12);

          if ((v14 & 1) != 0)
          {

            goto LABEL_6;
          }
        }
        else if (*(_QWORD *)(v12 + 16))
        {
          v15 = *(_QWORD *)(v12 + 40);
          swift_bridgeObjectRetain(*(_QWORD *)(*(_QWORD *)(a2 + v6)
                                             + OBJC_IVAR____TtC8Freeform21CRLScenesPopoverState_sceneInfosToDelete));
          v16 = NSObject._rawHashValue(seed:)(v15);
          v17 = -1 << *(_BYTE *)(v12 + 32);
          v18 = v16 & ~v17;
          if (((*(_QWORD *)(v12 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) != 0)
          {
            v3 = type metadata accessor for CRLSceneInfo(0);
            v19 = *(id *)(*(_QWORD *)(v12 + 48) + 8 * v18);
            v20 = static NSObject.== infix(_:_:)(v19, v10);

            if ((v20 & 1) != 0)
            {
LABEL_20:

              swift_bridgeObjectRelease(v12);
              v4 = v28;
              a2 = v29;
              v6 = v27;
              goto LABEL_6;
            }
            v21 = ~v17;
            while (1)
            {
              v18 = (v18 + 1) & v21;
              if (((*(_QWORD *)(v12 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
                break;
              v22 = *(id *)(*(_QWORD *)(v12 + 48) + 8 * v18);
              v23 = static NSObject.== infix(_:_:)(v22, v10);

              if ((v23 & 1) != 0)
                goto LABEL_20;
            }
          }
          swift_bridgeObjectRelease(v12);
          v4 = v28;
          a2 = v29;
          v6 = v27;
        }
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v7);
        v8 = v33[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v8);
        v9 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v8, v10);
        v3 = (uint64_t)&v33;
        specialized ContiguousArray._endMutation()(v9);
LABEL_6:
        if (v5 == v4)
          return v33;
      }
      if (v5 < *(_QWORD *)(v31 + 16))
        break;
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      if (v3 < 0)
        v25 = v3;
      else
        v25 = v3 & 0xFFFFFFFFFFFFFF8;
      v4 = _CocoaArrayWrapper.endIndex.getter(v25);
      if (!v4)
        return _swiftEmptyArrayStorage;
    }
    v7 = *(id *)(v30 + 8 * v5);
    goto LABEL_10;
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100C498CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  char v21;
  char v22;
  _QWORD *v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v29;
  void (*v30)(_BYTE *, _QWORD);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v35;
  _BYTE v36[32];
  uint64_t v37;
  uint64_t v38;
  unsigned __int8 v39;
  _QWORD *v40;

  v2 = a1;
  v35 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 >= 0)
      a1 &= 0xFFFFFFFFFFFFFF8uLL;
    v3 = __CocoaSet.count.getter(a1);
  }
  else
  {
    v3 = *(_QWORD *)(a1 + 16);
  }
  result = (uint64_t)_swiftEmptyArrayStorage;
  if (v3)
  {
    v40 = _swiftEmptyArrayStorage;
    sub_1006009E0(0, v3 & ~(v3 >> 63), 0);
    if (v35)
    {
      if (v2 < 0)
        v5 = v2;
      else
        v5 = v2 & 0xFFFFFFFFFFFFFF8;
      result = __CocoaSet.startIndex.getter(v5);
      v7 = 1;
    }
    else
    {
      result = sub_1005C461C(v2);
      v7 = v8 & 1;
    }
    v37 = result;
    v38 = v6;
    v39 = v7;
    if (v3 < 0)
    {
      __break(1u);
LABEL_31:
      __break(1u);
    }
    else
    {
      v9 = v2 & 0xFFFFFFFFFFFFFF8;
      if (v2 < 0)
        v9 = v2;
      v32 = v9;
      v33 = v2;
      do
      {
        while (1)
        {
          v15 = v37;
          v16 = v38;
          v17 = v39;
          sub_1005C42E4(v37, v38, v39, v2);
          v19 = (void *)v18;
          v20 = sub_100C1A4F0(v18, a2, type metadata accessor for CRLSceneInfo);
          v22 = v21;

          v23 = v40;
          result = swift_isUniquelyReferenced_nonNull_native(v40);
          if ((result & 1) == 0)
          {
            result = sub_1006009E0(0, v23[2] + 1, 1);
            v23 = v40;
          }
          v25 = v23[2];
          v24 = v23[3];
          if (v25 >= v24 >> 1)
          {
            result = sub_1006009E0(v24 > 1, v25 + 1, 1);
            v23 = v40;
          }
          v23[2] = v25 + 1;
          v26 = &v23[2 * v25];
          v26[4] = v20;
          *((_BYTE *)v26 + 40) = v22 & 1;
          if (v35)
            break;
          v2 = v33;
          v10 = sub_1005C3B08(v15, v16, v17, v33);
          v12 = v11;
          v14 = v13;
          sub_100503494(v15, v16, v17);
          v37 = v10;
          v38 = v12;
          v39 = v14 & 1;
          if (!--v3)
            goto LABEL_28;
        }
        v2 = v33;
        if ((v17 & 1) == 0)
          goto LABEL_31;
        v27 = __CocoaSet.Index.handleBitPattern.getter(v15, v16);
        if (v27)
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v27);
        else
          isUniquelyReferenced_nonNull_native = 1;
        v29 = sub_1004B804C(&qword_10140B768);
        v30 = (void (*)(_BYTE *, _QWORD))Set.Index._asCocoa.modify(v36, v29);
        __CocoaSet.formIndex(after:isUnique:)(v31, isUniquelyReferenced_nonNull_native, v32);
        v30(v36, 0);
        --v3;
      }
      while (v3);
LABEL_28:
      sub_100503494(v37, v38, v39);
      return (uint64_t)v40;
    }
  }
  return result;
}

double *sub_100C49B3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double *result;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  char *v29;
  char *v30;
  double v31;
  double v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  __n128 v48;
  uint64_t *v49;
  unint64_t v50;
  uint64_t v51;
  void (*v52)(char *, char *, uint64_t, __n128);
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  double *v60;
  void (*v61)(char *, char *, uint64_t);
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  double *v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v72;
  uint64_t (*v73)(_BYTE *, _QWORD);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  NSString *v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  _BYTE v94[32];
  char v95[24];
  uint64_t v96;
  uint64_t v97;
  unsigned __int8 v98;
  double *v99;

  v87 = type metadata accessor for CRLBoardIdentifierStorage(0);
  __chkstk_darwin(v87);
  v86 = (char *)&v75 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v5);
  v85 = (uint64_t)&v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UUID(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v93 = (char *)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v92 = (char *)&v75 - v11;
  v84 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  v83 = *(_QWORD *)(v84 - 8);
  __chkstk_darwin(v84);
  v91 = (uint64_t)&v75 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v13 = a1;
    else
      v13 = a1 & 0xFFFFFFFFFFFFFF8;
    v14 = __CocoaSet.count.getter(v13);
  }
  else
  {
    v14 = *(_QWORD *)(a1 + 16);
  }
  result = _swiftEmptyArrayStorage;
  if (v14)
  {
    v99 = _swiftEmptyArrayStorage;
    sub_100600CF0(0, v14 & ~(v14 >> 63), 0);
    if (v88)
    {
      if (a1 < 0)
        v16 = a1;
      else
        v16 = a1 & 0xFFFFFFFFFFFFFF8;
      result = (double *)__CocoaSet.startIndex.getter(v16);
      v18 = 1;
    }
    else
    {
      result = (double *)sub_1005C461C(a1);
      v18 = v19 & 1;
    }
    v96 = (uint64_t)result;
    v97 = v17;
    v98 = v18;
    if ((v14 & 0x8000000000000000) == 0)
    {
      v82 = *(id *)(a2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController);
      v81 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator);
      v80 = OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard;
      v79 = CKCurrentUserDefaultName;
      v20 = a1 & 0xFFFFFFFFFFFFFF8;
      if (a1 < 0)
        v20 = a1;
      v76 = v20;
      v78 = a1;
      v77 = v8;
      while (v14)
      {
        v89 = v14;
        sub_1005C42E4(v96, v97, v98, a1);
        v30 = v29;
        objc_msgSend(v82, "visibleUnscaledRect");
        v33 = sub_100062EB4(1, v31, v32, *(CGFloat *)&v30[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect], *(CGFloat *)&v30[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect + 8], *(CGFloat *)&v30[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect + 16], *(CGFloat *)&v30[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect + 24]);
        v35 = v34;
        v37 = v36;
        v39 = v38;
        v40 = *(char **)(v81 + v80);
        v41 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
        v42 = *(_QWORD *)&v40[OBJC_IVAR____TtC8Freeform8CRLBoard_data];
        v43 = v42 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
        swift_beginAccess(v42 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v95, 0, 0);
        v44 = v43;
        v45 = v85;
        sub_1004B8460(v44, v85, type metadata accessor for CRLBoardCRDTData);
        v90 = v40;
        swift_retain(v42);
        v46 = sub_1004B804C(&qword_1013E1A80);
        v47 = v92;
        CRRegister.wrappedValue.getter(v46);
        sub_1004B84A4(v45, type metadata accessor for CRLBoardCRDTData);
        v48 = swift_release(v42);
        v49 = (uint64_t *)(*(_QWORD *)&v40[v41] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
        v51 = *v49;
        v50 = v49[1];
        v52 = *(void (**)(char *, char *, uint64_t, __n128))(v8 + 16);
        v52(v93, v47, v7, v48);
        static String._unconditionallyBridgeFromObjectiveC(_:)(v79);
        v55 = v51 == v53 && v50 == v54;
        if (v55
          || (v56 = _stringCompareWithSmolCheck(_:_:expecting:)(v51, v50, v53, v54, 0),
              swift_bridgeObjectRetain(v50),
              swift_bridgeObjectRelease(),
              (v56 & 1) != 0))
        {
          swift_bridgeObjectRelease();
          v51 = 0;
          v50 = 0xE000000000000000;
        }
        v57 = sub_1004B804C((uint64_t *)&unk_1013DE640);
        v58 = v91;
        v59 = v91 + *(int *)(v57 + 48);
        v60 = (double *)(v91 + *(int *)(v57 + 64));
        (*(void (**)(char *, uint64_t))(v8 + 8))(v92, v7);
        v61 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
        v62 = v7;
        v63 = v86;
        v61(v86, v93, v62);
        v64 = &v63[*(int *)(v87 + 20)];
        *(_QWORD *)v64 = v51;
        *((_QWORD *)v64 + 1) = v50;
        v65 = (uint64_t)v63;
        v7 = v62;
        sub_1004B84E0(v65, v58, type metadata accessor for CRLBoardIdentifierStorage);

        ((void (*)(uint64_t, char *, uint64_t))v52)(v59, &v30[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_sceneID], v62);
        *v60 = v33;
        *((_QWORD *)v60 + 1) = v35;
        *((_QWORD *)v60 + 2) = v37;
        *((_QWORD *)v60 + 3) = v39;
        swift_storeEnumTagMultiPayload(v58, v84, 2);

        v66 = v99;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100600CF0(0, *((_QWORD *)v66 + 2) + 1, 1);
          v66 = v99;
        }
        a1 = v78;
        v68 = *((_QWORD *)v66 + 2);
        v67 = *((_QWORD *)v66 + 3);
        if (v68 >= v67 >> 1)
        {
          sub_100600CF0(v67 > 1, v68 + 1, 1);
          v66 = v99;
        }
        *((_QWORD *)v66 + 2) = v68 + 1;
        result = (double *)sub_1004B84E0(v91, (uint64_t)v66+ ((*(unsigned __int8 *)(v83 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80))+ *(_QWORD *)(v83 + 72) * v68, type metadata accessor for CRLBoardPreviewImageCache.Item);
        if (v88)
        {
          if ((v98 & 1) == 0)
            goto LABEL_40;
          v69 = __CocoaSet.Index.handleBitPattern.getter(v96, v97);
          v8 = v77;
          v70 = v89;
          if (v69)
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          else
            isUniquelyReferenced_nonNull_native = 1;
          v72 = sub_1004B804C(&qword_10140B768);
          v73 = (uint64_t (*)(_BYTE *, _QWORD))Set.Index._asCocoa.modify(v94, v72);
          __CocoaSet.formIndex(after:isUnique:)(v74, isUniquelyReferenced_nonNull_native, v76);
          result = (double *)v73(v94, 0);
          v14 = v70 - 1;
          if (!v14)
          {
LABEL_36:
            sub_100503494(v96, v97, v98);
            return v99;
          }
        }
        else
        {
          v21 = v96;
          v22 = v97;
          v23 = v98;
          v24 = sub_1005C3B08(v96, v97, v98, a1);
          v26 = v25;
          v28 = v27;
          result = (double *)sub_100503494(v21, v22, v23);
          v96 = v24;
          v97 = v26;
          v98 = v28 & 1;
          v8 = v77;
          v14 = v89 - 1;
          if (v89 == 1)
            goto LABEL_36;
        }
      }
      __break(1u);
    }
    __break(1u);
LABEL_40:
    __break(1u);
  }
  return result;
}

uint64_t sub_100C4A1A0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100C4A1C4()
{
  uint64_t v0;
  char *v1;
  void *v2;

  v1 = *(char **)(v0 + 16);
  sub_100C42E00(*(void **)(v0 + 24), v1);
  v2 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_presentedSceneAlert];
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_presentedSceneAlert] = 0;

}

void sub_100C4A1F8(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  sub_1006433A4(a1, (uint64_t)byte_100F2F2B8, (uint64_t)byte_100F2F2E0, a2);
}

double sub_100C4A21C(_QWORD *a1)
{
  unint64_t v1;

  swift_bridgeObjectRetain(*a1);
  return sub_10087D400(v1);
}

uint64_t sub_100C4A24C()
{
  return sub_1006F0278(41);
}

uint64_t sub_100C4A254(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _QWORD *v8;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_BYTE *)(v1 + 40);
  v8 = (_QWORD *)swift_task_alloc(dword_101406C9C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1004CFD00;
  return sub_100B6BA24(a1, v4, v5, v6, v7);
}

double sub_100C4A2D0()
{
  uint64_t v0;

  return sub_100C43788(*(char **)(v0 + 16));
}

uint64_t sub_100C4A2D8()
{
  return sub_1006F0278(41);
}

uint64_t sub_100C4A2E0()
{
  return sub_1006F0278(41);
}

void sub_100C4A2E8(uint64_t a1)
{
  uint64_t v1;

  sub_100C2F338(a1, *(void **)(v1 + 16), *(unsigned __int8 *)(v1 + 24));
}

void sub_100C4A2FC(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  sub_10063907C(a1, (uint64_t)&unk_100F2F350, (uint64_t)&unk_100F2F378, a2);
}

void sub_100C4A320(char *a1)
{
  sub_100BC9594(*a1);
}

uint64_t sub_100C4A344(uint64_t a1, uint64_t a2)
{
  return sub_100C4A358(a1, a2);
}

uint64_t sub_100C4A358(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if ((unint64_t)a1 >> 62)
    goto LABEL_11;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  v5 = 0;
  if (v4)
  {
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, a1);
      }
      else
      {
        v6 = *(_QWORD *)(a1 + 8 * v5 + 32);
        swift_unknownObjectRetain(v6);
      }
      swift_unknownObjectRelease(v6);
      if (v6 == a2)
        break;
      v7 = v5 + 1;
      if (__OFADD__(v5, 1))
      {
        __break(1u);
LABEL_11:
        if (a1 < 0)
          v8 = a1;
        else
          v8 = a1 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(a1);
        v4 = _CocoaArrayWrapper.endIndex.getter(v8);
        swift_bridgeObjectRelease(a1);
        v5 = 0;
        if (!v4)
          return v5;
      }
      else
      {
        ++v5;
        if (v7 == v4)
          return 0;
      }
    }
  }
  return v5;
}

uint64_t sub_100C4A448()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100C4A484()
{
  return sub_100C4F5F8((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100C43DDC);
}

uint64_t sub_100C4A498()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100C4A4BC()
{
  sub_100C45AF8();
}

void sub_100C4A4C4(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  sub_10063907C(a1, (uint64_t)&unk_100F2F400, (uint64_t)&unk_100F2F428, a2);
}

uint64_t sub_100C4A4EC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 88));
  return swift_deallocObject(v0, 96, 7);
}

uint64_t sub_100C4A530(uint64_t a1)
{
  double *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  double v10;
  double v11;
  double v12;
  uint64_t v13;
  _QWORD *v14;

  v4 = *((_QWORD *)v1 + 2);
  v5 = *((_QWORD *)v1 + 3);
  v6 = *((_QWORD *)v1 + 4);
  v7 = *((_QWORD *)v1 + 5);
  v8 = *((_QWORD *)v1 + 6);
  v9 = v1[7];
  v10 = v1[8];
  v11 = v1[9];
  v12 = v1[10];
  v13 = *((_QWORD *)v1 + 11);
  v14 = (_QWORD *)swift_task_alloc(dword_10140B754);
  *(_QWORD *)(v2 + 16) = v14;
  *v14 = v2;
  v14[1] = sub_1004CFD00;
  return sub_100C45500(v9, v10, v11, v12, a1, v4, v5, v6, v7, v8, v13);
}

uint64_t sub_100C4A5EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_BYTE *)(v1 + 40);
  v8 = *(_QWORD *)(v1 + 48);
  v9 = (_QWORD *)swift_task_alloc(dword_10140B72C);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1004CFD00;
  return sub_100C338AC(a1, v4, v5, v6, v7, v8);
}

void sub_100C4A670(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  sub_1006433A4(a1, (uint64_t)aX_10, (uint64_t)aX_11, a2);
}

BOOL sub_100C4A698(_QWORD *a1)
{
  uint64_t v1;

  return sub_100C62350(a1, *(_QWORD *)(v1 + 16));
}

BOOL sub_100C4A6B4(_QWORD *a1)
{
  uint64_t v1;

  return sub_100C5F4B4(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_100C4A6D0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100C4A6F8()
{
  uint64_t v0;

  sub_100C5D5E0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_100C4A700(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  char *v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  char *v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;

  v3 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__sharedPencilTray;
  v4 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__sharedPencilTray);
  if (v4)
  {
    v5 = *(id *)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__sharedPencilTray);
    if (a1)
    {
LABEL_3:
      v6 = v4;
      v7 = a1;
      sub_100B4FA6C();
      v8 = (char *)sub_100B4F46C();
      if (v8)
      {
        v9 = v8;
        v17 = *(id *)&v8[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];

      }
      else
      {
        sub_100B4F3B8();
        v17 = v15;
      }
      objc_msgSend(v17, "_enableTapInteractionForWindow:", v7);

      goto LABEL_12;
    }
  }
  else
  {
    v10 = sub_100C26C7C();
    v11 = *(void **)(v1 + v3);
    *(_QWORD *)(v1 + v3) = v10;
    v5 = v10;

    if (a1)
      goto LABEL_3;
  }
  v12 = v4;
  v13 = (char *)sub_100B4F46C();
  if (v13)
  {
    v14 = v13;
    v17 = *(id *)&v13[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];

  }
  else
  {
    sub_100B4F3B8();
    v17 = v16;
  }
  objc_msgSend(v17, "_disableTapInteractionWhenNotVisible");
  v7 = v5;
LABEL_12:

}

void sub_100C4A81C()
{
  id v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  id v5;

  v0 = sub_100C1D170();
  objc_msgSend(v0, "invalidateSearchResults");

  v1 = sub_100C1CAE8();
  v2 = objc_msgSend(v1, "mode");

  v3 = sub_1004B8930(0, &qword_10140BA50, off_101229A88);
  LODWORD(v1) = objc_msgSend(v2, "isKindOfClass:", swift_getObjCClassFromMetadata(v3, v4));

  if ((_DWORD)v1)
  {
    v5 = sub_100C1CAE8();
    objc_msgSend(v5, "resetToDefaultModeAnimated:", 1);

  }
}

void sub_100C4A8EC()
{
  _BYTE *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  _QWORD *v7;
  char *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  char *v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  _QWORD *v22;
  char *v23;
  _OWORD *v24;
  char *v25;
  uint64_t v26;

  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___editorController] = 0;
  swift_unknownObjectWeakInit(&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardLibrary]);
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___documentModeController] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___boardEditor] = 0;
  v1 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_selectionModelTranslator;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)CRLSelectionModelTranslator), "init");
  v2 = &v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_delegate];
  *((_QWORD *)v2 + 1) = 0;
  swift_unknownObjectWeakInit(v2);
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___insertingHelper] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_insertingCancellableToken] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_traitChangeRegistration] = 0;
  v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isSuppressingBottomToolTrayForPresentationController] = 0;
  v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isExportingToPDF] = 0;
  v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isTornDown] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_undoAlertController] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_progressTimer] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_progressViewController] = 0;
  v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardHasSyncedAtLeastOnce] = 0;
  v3 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_cloudQuotaMessagingObserver;
  v4 = type metadata accessor for CRLCloudQuotaMessagingObserver();
  v5 = swift_allocObject(v4, 88, 7);
  *(_QWORD *)(v5 + 24) = 0;
  swift_unknownObjectWeakInit(v5 + 16);
  v6 = (void *)ICQCurrentInAppMessageChangedNotification;
  *(_QWORD *)(v5 + 32) = 0;
  *(_QWORD *)(v5 + 40) = v6;
  *(_OWORD *)(v5 + 48) = 0u;
  *(_OWORD *)(v5 + 64) = 0u;
  *(_QWORD *)&v0[v3] = v5;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interstitialUIController] = 0;
  v7 = &v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_shareSyncAwaitTask];
  v7[1] = 0;
  v7[2] = 0;
  *v7 = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasBackgroundLayer] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasBackgroundView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_pencilKitCanvasViewController] = 0;
  *(_QWORD *)(v5 + 80) = 0x4122750000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_pencilKitCanvasView] = 0;
  v8 = &v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_CRLUpdateInfoKey];
  strcpy(&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_CRLUpdateInfoKey], "iOSUpdateInfo");
  *((_WORD *)v8 + 7) = -4864;
  v9 = &v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_CRLUnsupportedDevicesKey];
  *v9 = 0xD000000000000012;
  v9[1] = 0x8000000100FE1820;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_subscriptions] = &_swiftEmptySetSingleton;
  v10 = &v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_lastContentOffset];
  *v10 = 0;
  v10[1] = 0;
  v11 = &v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_lastCanvasCenter];
  *v11 = 0;
  v11[1] = 0;
  v12 = &v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_toolbarButtonState];
  *(_OWORD *)v12 = 0u;
  *((_OWORD *)v12 + 1) = 0u;
  *(_DWORD *)(v12 + 31) = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___undoToolbarItem] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___insertTextBoxToolbarItem] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___insertAVMediaToolbarItem] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___insertStickyNoteToolbarItem] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___insertShapeToolbarItem] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___togglePencilModeToolbarItem] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___insertStencilToolbarItem] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___shareToolbarItem] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___boardViewControlsItem] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___newBoardToolbarItem] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___doneToolbarItem] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___doneWithModeToolbarItem] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___doneWithScenesNavigatorToolbarItem] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___viewOnlyToolbarItem] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___collaborationButtonItem] = 1;
  swift_unknownObjectWeakInit(&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_photoPicker]);
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_photoPickerLoadingProgress] = 0;
  swift_unknownObjectWeakInit(&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_cameraPicker]);
  swift_unknownObjectWeakInit(&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_documentScanner]);
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_gpHelper] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_insertURLAlert] = 0;
  v13 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scrollView;
  v14 = objc_allocWithZone((Class)CRLScrollView);
  v15 = v6;
  *(_QWORD *)&v0[v13] = objc_msgSend(v14, "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasScrollViewController] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_bottomToolTray] = 0;
  v16 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_snapshotViewWrapper;
  *(_QWORD *)&v0[v16] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasZoomControlViewController] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasZoomAndScenesContainerView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardControlsViewController] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_connectorModeMessageViewController] = 0;
  v17 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_connectorModeMessageViewState;
  *(_QWORD *)&v0[v17] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CRLConnectorModeMessageViewState(0)), "init");
  v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_skipNextToolbarUpdate] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesNavigatorViewController] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_compactScenesNavigatorViewController] = 0;
  v18 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesNavigatorState;
  *(_QWORD *)&v0[v18] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CRLScenesNavigatorState(0)), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesNavigationCrossfadeSnapshotLayer] = 0;
  v19 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState;
  *(_QWORD *)&v0[v19] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CRLScenesPopoverState(0)), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPresenter] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_compactScenesPresenter] = 0;
  v20 = &v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_currentSceneIndex];
  *(_QWORD *)v20 = 0;
  v20[8] = 1;
  v21 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_sceneToContentDict;
  *(_QWORD *)&v0[v21] = sub_1008D8044((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_presentedSceneAlert] = 0;
  swift_unknownObjectWeakInit(&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_findReplaceInteraction]);
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_findSession] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___findReplaceController] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_freehandDrawingHighlightManager] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_keyboardTopEdgeLayoutGuideConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_topUnobscuredRectLayoutGuideConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_bottomUnobscuredRectLayoutGuideConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_leadingUnobscuredRectLayoutGuideConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_trailingUnobscuredRectLayoutGuideConstraint] = 0;
  v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isChangingDocumentModeToHandwriting] = 0;
  v22 = &v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_shapeLibrarySearchTerm];
  *v22 = 0;
  v22[1] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_tipObservation] = 0;
  swift_unknownObjectWeakInit(&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_tipPopoverController]);
  v23 = &v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_currentlyPresentedTip];
  *(_OWORD *)v23 = 0u;
  *((_OWORD *)v23 + 1) = 0u;
  *((_QWORD *)v23 + 4) = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_tipPresentationView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_mediaReplacer] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___unobscuredRectLayout] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___keyboardFrameLayoutGuide] = 0;
  v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isClosing] = 0;
  v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isClosed] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_followHUD] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_followBorderHighlightView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_stateRestorationHelper] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_viewScaleObservation] = 0;
  v24 = &v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scrollObserver];
  *v24 = 0u;
  v24[1] = 0u;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__sharedPencilTray] = 0;
  v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_didRestoreCanvasViewState] = 0;
  v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__isCanvasDotGridEnabled] = 2;
  v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__isConnectorModeEnabled] = 2;
  v25 = &v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_lastPrintContentDate];
  v26 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v25, 1, 1, v26);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100FAD6F0, "Freeform/CRLiOSBoardViewController.swift", 40, 2, 330, 0);
  __break(1u);
}

id sub_100C4AFC8(char a1, void *a2, void *a3, uint64_t a4, uint64_t a5, char *a6)
{
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  objc_super v27;

  v10 = &a6[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_delegate];
  *((_QWORD *)v10 + 1) = 0;
  swift_unknownObjectWeakInit(v10);
  v11 = &a6[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_boardViewController];
  swift_unknownObjectWeakInit(&a6[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_boardViewController]);
  *(_QWORD *)&a6[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_scenesNavigatorStatePassthroughObserver] = 0;
  *(_QWORD *)&a6[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_notificationObservers] = _swiftEmptyDictionarySingleton;
  *(_QWORD *)&a6[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___topCaptureSnapshotView] = 0;
  *(_QWORD *)&a6[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___bottomCaptureSnapshotView] = 0;
  v12 = OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_floatingView;
  v13 = type metadata accessor for CRLShadowView();
  v15 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v13, v14));
  v16 = a6;
  *(_QWORD *)&a6[v12] = objc_msgSend(v15, "init");
  v17 = OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_bezelView;
  *(_QWORD *)&v16[v17] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v18 = OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_drawerView;
  *(_QWORD *)&v16[v18] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v19 = OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_backdropView;
  *(_QWORD *)&v16[v19] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v20 = OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_leadingSeparatorView;
  *(_QWORD *)&v16[v20] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v21 = OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_trailingSeparatorView;
  *(_QWORD *)&v16[v21] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  *(_QWORD *)&v16[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___grabberButton] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___previousSceneButton] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___nextSceneButton] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___popoverButton] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___navigationButtons] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___drawerWidthConstraint] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___baseConstraints] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___grabberConstraints] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___noGrabberConstraints] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___floatsCenterAlignedConstraints] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___floatsTrailingAlignedConstraints] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___attachedToZoomControlConstraints] = 0;
  v16[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_useCompactFloatingStyle] = a1;
  *(_QWORD *)&v16[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_scenesNavigatorState] = a2;
  *(_QWORD *)&v16[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_scenesPopoverState] = a3;
  *((_QWORD *)v10 + 1) = &off_10129B6F0;
  swift_unknownObjectWeakAssign(v10, a4);
  swift_unknownObjectWeakAssign(v11, a5);
  v22 = a2;
  v23 = a3;

  v27.receiver = v16;
  v27.super_class = (Class)type metadata accessor for CRLScenesNavigatorViewController();
  return objc_msgSendSuper2(&v27, "initWithNibName:bundle:", 0, 0);
}

id sub_100C4B268(uint64_t a1, void *a2, void *a3, _BYTE *a4)
{
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  objc_super v18;
  _BYTE v19[8];
  _UNKNOWN **v20;
  uint64_t v21;
  uint64_t v22;

  v8 = &a4[OBJC_IVAR____TtC8Freeform25CRLScenesViewController_i_scenesDelegate];
  *((_QWORD *)v8 + 1) = 0;
  swift_unknownObjectWeakInit(v8);
  a4[OBJC_IVAR____TtC8Freeform25CRLScenesViewController_i_isTornDown] = 0;
  v20 = &off_10129B6F0;
  swift_unknownObjectWeakInit(v19);
  v9 = type metadata accessor for CRLScenesPopoverState(0);
  v10 = sub_1004B7878(&qword_10140B870, type metadata accessor for CRLScenesPopoverState, (uint64_t)&unk_100F117F4);
  v11 = a4;
  v12 = a2;
  v21 = ObservedObject.init(wrappedValue:)(v12, v9, v10);
  v22 = v13;
  v14 = objc_allocWithZone((Class)sub_1004B804C((uint64_t *)&unk_10140B890));
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLScenesViewController_i_hostingController] = UIHostingController.init(rootView:)(v19);
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLScenesViewController_i_scenesPopoverState] = v12;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLScenesViewController_i_icc] = a3;
  *((_QWORD *)v8 + 1) = &off_10129B6F0;
  swift_unknownObjectWeakAssign(v8, a1);
  v15 = v12;
  v16 = a3;

  v18.receiver = v11;
  v18.super_class = (Class)type metadata accessor for CRLScenesViewController_i();
  return objc_msgSendSuper2(&v18, "initWithNibName:bundle:", 0, 0);
}

id sub_100C4B3C4(uint64_t a1, void *a2, void *a3, _BYTE *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  objc_class *v31;
  void *v33;
  objc_super v34;
  void *v35;
  __int128 v36;

  v33 = a3;
  v6 = type metadata accessor for EditMode(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v33 - v11;
  v13 = type metadata accessor for CRLCompactScenesListUI_i(0);
  v14 = __chkstk_darwin(v13);
  v16 = (void **)((char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  a4[OBJC_IVAR____TtC8Freeform32CRLCompactScenesViewController_i_isTornDown] = 0;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v7 + 104))(v12, enum case for EditMode.inactive(_:), v6, v14);
  v16[1] = &off_10129B6F0;
  swift_unknownObjectWeakInit(v16);
  v16[2] = 0x4074F00000000000;
  v17 = type metadata accessor for CRLScenesPopoverState(0);
  v18 = sub_1004B7878(&qword_10140B870, type metadata accessor for CRLScenesPopoverState, (uint64_t)&unk_100F117F4);
  v19 = a4;
  v20 = a2;
  v16[3] = ObservedObject.init(wrappedValue:)(v20, v17, v18);
  v16[4] = v21;
  v35 = &_swiftEmptySetSingleton;
  v22 = sub_1004B804C(&qword_10140B878);
  State.init(wrappedValue:)(&v36, &v35, v22);
  v23 = *((_QWORD *)&v36 + 1);
  v16[5] = v36;
  v16[6] = v23;
  v24 = (_QWORD *)((char *)v16 + *(int *)(v13 + 32));
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v12, v6);
  State.init(wrappedValue:)(v24, v9, v6);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  v25 = *(int *)(v13 + 36);
  v35 = 0;
  v26 = sub_1004B804C(&qword_10140B880);
  State.init(wrappedValue:)(&v36, &v35, v26);
  *(_OWORD *)((char *)v16 + v25) = v36;
  v27 = objc_allocWithZone((Class)sub_1004B804C(&qword_10140B888));
  *(_QWORD *)&v19[OBJC_IVAR____TtC8Freeform32CRLCompactScenesViewController_i_hostingController] = UIHostingController.init(rootView:)(v16);
  *(_QWORD *)&v19[OBJC_IVAR____TtC8Freeform32CRLCompactScenesViewController_i_scenesPopoverState] = v20;
  v28 = v33;
  *(_QWORD *)&v19[OBJC_IVAR____TtC8Freeform32CRLCompactScenesViewController_i_icc] = v33;
  v29 = v20;
  v30 = v28;

  v31 = (objc_class *)type metadata accessor for CRLCompactScenesViewController_i();
  v34.receiver = v19;
  v34.super_class = v31;
  return objc_msgSendSuper2(&v34, "initWithNibName:bundle:", 0, 0);
}

void sub_100C4B648(void **a1, uint64_t a2, uint64_t a3, uint64_t *a4, _QWORD *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  __n128 v20;
  int64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t i;
  id v26;
  Class isa;
  id v28;
  void *v29;
  id v30;
  void *v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  unint64_t v46;
  uint64_t *v47;
  id v48;
  uint64_t v49;
  char v50;
  uint64_t *v51;
  uint64_t v52;
  id v53;
  unint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  id v61;
  void (*v62)(char *, uint64_t);
  uint64_t v63;
  _QWORD *v64;
  id v65;
  uint64_t *v66;
  CGFloat *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int64_t v72;
  uint64_t v73;
  uint64_t v74;
  int64_t v75;
  id v76[4];
  id v77;

  v66 = a4;
  v64 = a5;
  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v12);
  v14 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (char *)*a1;
  v16 = *(_QWORD *)(a2 + 56);
  v71 = a2 + 56;
  v17 = 1 << *(_BYTE *)(a2 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & v16;
  v73 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator;
  v70 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController;
  v65 = v15;
  v67 = (CGFloat *)&v15[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect];
  v72 = (unint64_t)(v17 + 63) >> 6;
  v74 = a2;
  v20 = swift_bridgeObjectRetain(a2);
  v21 = 0;
  v68 = v11;
  v69 = a3;
  if (v19)
    goto LABEL_27;
LABEL_6:
  v22 = v21 + 1;
  if (__OFADD__(v21, 1))
  {
    __break(1u);
    goto LABEL_39;
  }
  if (v22 < v72)
  {
    v23 = *(_QWORD *)(v71 + 8 * v22);
    ++v21;
    if (v23)
      goto LABEL_19;
    v21 = v22 + 1;
    if (v22 + 1 < v72)
    {
      v23 = *(_QWORD *)(v71 + 8 * v21);
      if (v23)
        goto LABEL_19;
      v21 = v22 + 2;
      if (v22 + 2 < v72)
      {
        v23 = *(_QWORD *)(v71 + 8 * v21);
        if (v23)
          goto LABEL_19;
        v24 = v22 + 3;
        if (v24 < v72)
        {
          v23 = *(_QWORD *)(v71 + 8 * v24);
          if (v23)
          {
            v21 = v24;
LABEL_19:
            v19 = (v23 - 1) & v23;
            for (i = __clz(__rbit64(v23)) + (v21 << 6); ; i = v46 | (v21 << 6))
            {
              (*(void (**)(char *, unint64_t, uint64_t, __n128))(v9 + 16))(v14, *(_QWORD *)(v74 + 48) + *(_QWORD *)(v9 + 72) * i, v8, v20);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v14, 0, 1, v8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v14, 1, v8) == 1)
                break;
              v75 = v21;
              (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v14, v8);
              v26 = objc_retain(*(id *)(*(_QWORD *)(a3 + v73)
                                      + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard));
              isa = UUID._bridgeToObjectiveC()().super.isa;
              v28 = objc_msgSend(v26, "getBoardItemForUUID:", isa);

              if (v28)
              {
                v29 = *(void **)(a3 + v70);
                v30 = objc_msgSend(v29, "layoutForInfo:", v28);
                if (v30)
                {
                  v31 = v30;
                  objc_msgSend(v30, "frameForCullingInRoot");
                  v33 = v32;
                  v35 = v34;
                  v37 = v36;
                  v39 = v38;
                  objc_msgSend(v29, "visibleUnscaledRect");
                  v42 = sub_100062EB4(1, v40, v41, *v67, v67[1], v67[2], v67[3]);
                  if (sub_100060F38(v33, v35, v37, v39, v42, v43, v44, v45))
                  {
                    v60 = v65;
                    v61 = v65;
                    v47 = v66;
                    sub_100ADBA48((Swift::Int *)v76, v61);

                    v62 = *(void (**)(char *, uint64_t))(v9 + 8);
                    v48 = v60;
                    v62(v68, v8);
                    swift_release(v74);
                    a3 = v69;
                    goto LABEL_30;
                  }
                  v11 = v68;
                  (*(void (**)(char *, uint64_t))(v9 + 8))(v68, v8);

                }
                else
                {
                  v11 = v68;
                  (*(void (**)(char *, uint64_t))(v9 + 8))(v68, v8);

                }
                a3 = v69;
                v21 = v75;
                if (!v19)
                  goto LABEL_6;
              }
              else
              {
                (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
                v21 = v75;
                if (!v19)
                  goto LABEL_6;
              }
LABEL_27:
              v46 = __clz(__rbit64(v19));
              v19 &= v19 - 1;
            }
            goto LABEL_29;
          }
          while (1)
          {
            v21 = v24 + 1;
            if (__OFADD__(v24, 1))
              break;
            if (v21 >= v72)
              goto LABEL_28;
            v23 = *(_QWORD *)(v71 + 8 * v21);
            ++v24;
            if (v23)
              goto LABEL_19;
          }
LABEL_39:
          __break(1u);
          return;
        }
      }
    }
  }
LABEL_28:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v9 + 56))(v14, 1, 1, v8, v20);
LABEL_29:
  swift_release(v74);
  v47 = v66;
  v48 = v65;
LABEL_30:
  v49 = *v47;
  swift_bridgeObjectRetain(*v47);
  v50 = sub_1006244F0(v48, v49);
  swift_bridgeObjectRelease();
  if ((v50 & 1) == 0)
  {
    v51 = (uint64_t *)(a3 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_sceneToContentDict);
    swift_beginAccess(a3 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_sceneToContentDict, v76, 0, 0);
    v52 = *v51;
    if (*(_QWORD *)(*v51 + 16))
    {
      v53 = v48;
      swift_bridgeObjectRetain(v52);
      v54 = sub_10084406C((uint64_t)v53);
      if ((v55 & 1) != 0)
      {
        v56 = *(_QWORD *)(*(_QWORD *)(v52 + 56) + 8 * v54);
        swift_bridgeObjectRetain(v56);

        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain(*v64);
        v58 = sub_100CDEC3C(v57, v56);
        swift_bridgeObjectRelease();
        v59 = *(_QWORD *)(v58 + 16);
        swift_release(v58);
        if (v59)
        {
          sub_100ADBA48((Swift::Int *)&v77, v53);

        }
      }
      else
      {

        swift_bridgeObjectRelease();
      }
    }
  }
}

void sub_100C4BBA4()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  id v20;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasScrollViewController);
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v2, "view");
    if (v3)
    {
      v4 = v3;
      v5 = objc_msgSend(v3, "safeAreaLayoutGuide");

      objc_msgSend(v5, "layoutFrame");
      v7 = v6;
      v9 = v8;
      v11 = v10;
      v13 = v12;

      v14 = objc_msgSend(v2, "view");
      if (v14)
      {
        v15 = v14;
        v16 = objc_msgSend(v14, "superview");

        if (!v16)
        {
          sub_100757E04(&_mh_execute_header, (uint64_t)"safeAreaLayoutFrame(for:)", 25, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 2044, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
          sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"safeAreaLayoutFrame(for:)", 25, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2u, 2044, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);

          return;
        }
        v17 = objc_msgSend(v2, "view");
        if (v17)
        {
          v18 = v17;
          v19 = objc_msgSend(v17, "safeAreaLayoutGuide");

          v20 = objc_msgSend(v19, "owningView");
          objc_msgSend(v16, "convertRect:fromView:", v20, v7, v9, v11, v13);

          return;
        }
        goto LABEL_11;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_11:
    __break(1u);
  }
}

void sub_100C4BDF0(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  double v5;
  uint64_t v6;
  _BYTE *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  unsigned int v13;
  unsigned int v14;
  char v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  id v19;
  __n128 v20;
  id v21;
  __n128 v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  unint64_t v28;
  char v29;
  char *v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  void *v35;
  void *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  char v42;
  char v43;
  _BYTE v44[24];
  char v45[24];
  _QWORD v46[3];
  ValueMetadata *v47;
  unint64_t v48;
  unsigned __int8 v49[40];

  v2 = v1;
  v4 = sub_1004B804C(&qword_1013E01F0);
  *(_QWORD *)&v5 = __chkstk_darwin(v4).n128_u64[0];
  v7 = &v44[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = objc_msgSend(v1, "traitCollection", v5);
  if (*(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_tipPresentationView])
  {
    v9 = (uint64_t)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_currentlyPresentedTip];
    swift_beginAccess(&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_currentlyPresentedTip], v44, 0, 0);
    sub_1004CB7BC(v9, (uint64_t)v46, (uint64_t *)&unk_1013E1C40);
    if (v47)
    {
      v10 = sub_1004B804C(&qword_10140B968);
      if (swift_dynamicCast(v10, v46, v10, &type metadata for CRLTipConnectionLinesOnSelection, 6))
      {
        sub_100C1BA14(1, 0);
        sub_100C1BB2C();
      }
    }
    else
    {
      sub_1004CB800((uint64_t)v46, (uint64_t *)&unk_1013E1C40);
    }
  }
  v11 = objc_msgSend(v8, "horizontalSizeClass");
  if (v11 != objc_msgSend(a1, "horizontalSizeClass"))
    goto LABEL_14;
  v12 = (void *)objc_opt_self(UIDevice);
  v13 = objc_msgSend(v12, "crl_phoneUI");
  v14 = objc_msgSend(v8, "crl_isCompactWidth");
  v15 = v13 ^ 1;
  v16 = (v13 ^ 1) & v14;
  if ((v15 & 1) == 0 && v14)
    v16 = objc_msgSend(v8, "crl_isCompactHeight") ^ 1;
  v17 = objc_msgSend(v12, "crl_phoneUI");
  v18 = objc_msgSend(a1, "crl_isCompactWidth");
  if (v17)
  {
    if (!v18)
    {
      if ((v16 & 1) != 0)
        goto LABEL_14;
LABEL_36:
      v32 = v8;
      goto LABEL_37;
    }
    v18 = objc_msgSend(a1, "crl_isCompactHeight") ^ 1;
  }
  if (v16 == v18)
    goto LABEL_36;
LABEL_14:
  v19 = objc_msgSend(v2, "navigationItem");
  UINavigationItem.renameDelegate.setter(v20);

  v21 = objc_msgSend(v2, "navigationItem");
  sub_1004B7878(&qword_10140B950, type metadata accessor for CRLiOSBoardViewController, (uint64_t)&unk_100EF7DAC);
  v22 = swift_unknownObjectRetain(v2);
  UINavigationItem.renameDelegate.setter(v22);

  v23 = *(void **)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController];
  sub_1005221A4(v8, (int)objc_msgSend(v23, "documentIsSharedReadOnly"), (uint64_t)v49);
  sub_100522548(v49, 0);
  sub_1004DB520((uint64_t)v49);
  v24 = (uint64_t)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_currentlyPresentedTip];
  swift_beginAccess(&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_currentlyPresentedTip], v45, 0, 0);
  sub_1004CB7BC(v24, (uint64_t)v46, (uint64_t *)&unk_1013E1C40);
  if (v47)
  {
    v25 = sub_1004B804C(&qword_10140B968);
    if (swift_dynamicCast(v25, v46, v25, &type metadata for CRLTipScenesEntryPointCompact, 6))
    {
      v26 = objc_msgSend(v2, "navigationItem");
      v27 = objc_msgSend(v26, "additionalOverflowItems");

      if (!v27)
        sub_100C1BA14(1, 1);
    }
  }
  else
  {
    sub_1004CB800((uint64_t)v46, (uint64_t *)&unk_1013E1C40);
  }
  v47 = &type metadata for CRLFeatureFlags;
  v28 = sub_1004DB6DC();
  v48 = v28;
  LOBYTE(v46[0]) = 16;
  v29 = isFeatureEnabled(_:)(v46);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v46);
  if ((v29 & 1) != 0)
    sub_100C30B08(v8);
  else
    sub_100C318F8(v8);
  v30 = (char *)objc_msgSend(v23, "editingCoordinator");
  if (v30)
  {
    v31 = v30;
    v32 = *(id *)&v30[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator];

    if (*((_BYTE *)v32 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_isFollowed) == 1)
    {
      v32 = v32;
      sub_1006F9DEC(0, 1);

    }
  }
  else
  {
    v32 = 0;
  }
  v33 = objc_msgSend(v8, "horizontalSizeClass");
  if (v33 != objc_msgSend(a1, "horizontalSizeClass"))
  {
    v34 = sub_100C1CD60();
    sub_100524D9C();
    v36 = v35;
    objc_msgSend(v34, "setMenu:", v35);

  }
  objc_msgSend(v23, "scrollToCurrentSelectionPathAfterLayoutWithOptions:", 257);
  if (*(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_undoAlertController])
  {
    v37 = type metadata accessor for TaskPriority(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v7, 1, 1, v37);
    type metadata accessor for MainActor(0);
    v38 = v2;
    v39 = static MainActor.shared.getter(v38);
    v40 = (_QWORD *)swift_allocObject(&unk_10129C838, 40, 7);
    v40[2] = v39;
    v40[3] = &protocol witness table for MainActor;
    v40[4] = v38;
    v41 = sub_100521B98((uint64_t)v7, (uint64_t)&unk_10140B960, (uint64_t)v40);
    swift_release(v41);
  }
  sub_10053BCC0();
  v47 = &type metadata for CRLFeatureFlags;
  v48 = v28;
  LOBYTE(v46[0]) = 0;
  v42 = isFeatureEnabled(_:)(v46);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v46);
  if ((v42 & 1) != 0)
    sub_10054CFF4(v8, (char)objc_msgSend(v23, "documentIsSharedReadOnly"));
  v47 = &type metadata for CRLFeatureFlags;
  v48 = v28;
  LOBYTE(v46[0]) = 7;
  v43 = isFeatureEnabled(_:)(v46);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v46);
  if ((v43 & 1) != 0)
    sub_100C321D8(v8);

LABEL_37:
}

uint64_t sub_100C4C3A0()
{
  char *v0;
  id v1;
  id v2;
  unsigned int v3;
  void *v4;
  uint64_t result;
  id v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  double v24;
  __objc2_prot *v25;
  unsigned __int8 v26[40];

  v1 = sub_100C1CD38();
  v2 = objc_msgSend(v1, "button");

  v3 = objc_msgSend(v2, "isHeld");
  v4 = *(void **)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController];
  result = (uint64_t)objc_msgSend(v4, "hasSelection");
  if (!v3 || (result & 1) == 0)
  {
    v6 = objc_msgSend(v0, "presentedViewController");
    if (v6)
    {
      v7 = v6;
      if ((objc_msgSend(v6, "isBeingDismissed") & 1) == 0)
      {
        v25 = &OBJC_PROTOCOL___CRLPresentedViewControllerSelectionChanging;
        v8 = (void *)swift_dynamicCastObjCProtocolConditional(v7, 1, &v25);
        if (!v8 || !objc_msgSend(v8, "staysOpenOnSelectionChange"))
        {
          v9 = sub_1004B8930(0, &qword_10140B940, UIAlertController_ptr);
          if (!objc_msgSend(v7, "isKindOfClass:", swift_getObjCClassFromMetadata(v9, v10)))
          {
            v11 = sub_100C1CD38();
            v12 = objc_msgSend(v11, "button");

            LODWORD(v11) = objc_msgSend(v12, "isHeld");
            if (!(_DWORD)v11)
            {
              v13 = objc_opt_self(_UIStickerPickerViewController);
              if (!swift_dynamicCastObjCClass(v7, v13)
                || (v14 = objc_msgSend(v4, "infosForCurrentSelectionPath"),
                    v15 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v14, &type metadata for AnyHashable, &protocol witness table for AnyHashable), v14, v16 = *(_QWORD *)(v15 + 16), swift_bridgeObjectRelease(), !v16))
              {
                *(_QWORD *)v26 = swift_getObjectType(v7);
                v18 = sub_1004B804C(&qword_10140B948);
                v19 = String.init<A>(describing:)(v26, v18);
                v21 = v19;
                v22 = v20;
                if (v19 == 0xD000000000000023 && v20 == 0x8000000101003F60
                  || (_stringCompareWithSmolCheck(_:_:expecting:)(v19, v20, 0xD000000000000023, 0x8000000101003F60, 0) & 1) != 0|| v21 == 0xD00000000000001DLL && v22 == 0x8000000101003F90)
                {

                  swift_bridgeObjectRelease();
                  goto LABEL_12;
                }
                v23 = _stringCompareWithSmolCheck(_:_:expecting:)(v21, v22, 0xD00000000000001DLL, 0x8000000101003F90, 0);
                *(_QWORD *)&v24 = swift_bridgeObjectRelease().n128_u64[0];
                if ((v23 & 1) == 0)
                  objc_msgSend(v7, "dismissViewControllerAnimated:completion:", 1, 0, v24);
              }
            }
          }
        }
      }

    }
LABEL_12:
    v17 = objc_msgSend(v0, "traitCollection");
    sub_1005221A4(v17, (int)objc_msgSend(v4, "documentIsSharedReadOnly"), (uint64_t)v26);
    sub_100522548(v26, 0);
    sub_1004DB520((uint64_t)v26);

    return sub_100534B4C();
  }
  return result;
}

double *sub_100C4C6C4()
{
  uint64_t v0;
  double *v1;
  uint64_t v2;
  id v3;
  id v4;
  unint64_t v5;
  unint64_t v6;

  if (qword_1013DDE00 != -1)
    swift_once(&qword_1013DDE00, sub_100C5C130);
  v0 = *(_QWORD *)(qword_101481160 + 16);
  if (v0)
  {
    v1 = (double *)(qword_101481160 + 32);
    swift_bridgeObjectRetain(qword_101481160);
    do
    {
      v3 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithDouble:", *v1);
      if (v3)
      {
        v4 = v3;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v3);
        v6 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v5 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v6 >= v5 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v5 > 1, v6 + 1, 1);
        v2 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v6, v4);
        specialized Array._endMutation()(v2);
      }
      ++v1;
      --v0;
    }
    while (v0);
  }
  else
  {
    swift_bridgeObjectRetain(qword_101481160);
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

double *sub_100C4C800()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  double v4;
  void *v5;
  void *v6;
  double v7;
  id v8;
  double x;
  double y;
  double width;
  double height;
  double v13;
  double v14;
  double v15;
  double v16;
  id v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  id v23;
  unsigned int v24;
  double v25;
  id v26;
  unsigned __int8 v27;
  id v28;
  void *v29;
  id v30;
  void *v31;
  double v32;
  double v33;
  double v34;
  double v35;
  id v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  unsigned int v42;
  double v43;
  id v44;
  unsigned __int8 v45;
  id v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  id v51;
  void *v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  double v58;
  double v59;
  double v60;
  CGFloat v61;
  id v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v67;
  CGRect v68;
  CGRect v69;
  CGRect v70;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scrollView];
  v3 = objc_msgSend(v2, "superview");
  if (v3)
  {
    v5 = v3;
    v6 = *(void **)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_bottomToolTray];
    if (v6)
    {
      *(_QWORD *)&v7 = swift_unknownObjectRetain(*(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_bottomToolTray]).n128_u64[0];
      if ((objc_msgSend(v8, "hidden", v7) & 1) == 0)
      {
        objc_msgSend(v6, "rectangleObscuringCanvasScrollView");
        x = v68.origin.x;
        y = v68.origin.y;
        width = v68.size.width;
        height = v68.size.height;
        if (!CGRectIsNull(v68))
        {
          objc_msgSend(v5, "convertRect:fromCoordinateSpace:", v2, x, y, width, height);
          v17 = objc_msgSend((id)objc_opt_self(NSValue), "valueWithCGRect:", v13, v14, v15, v16);
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v17);
          v19 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
          v18 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v19 >= v18 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v18 > 1, v19 + 1, 1);
          v20 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v19, v17);
          specialized Array._endMutation()(v20);
        }
      }
      *(_QWORD *)&v4 = swift_unknownObjectRelease(v6).n128_u64[0];
    }
    v21 = *(void **)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasViewController];
    v22 = objc_msgSend(v21, "miniFormatterPresenter", v4);
    if (v22)
    {
      v23 = v22;
      v24 = objc_msgSend(v22, "isPresentingMiniFormatter");
      *(_QWORD *)&v25 = swift_unknownObjectRelease(v23).n128_u64[0];
      if (v24)
      {
        v26 = objc_msgSend(v1, "traitCollection", v25);
        if ((objc_msgSend((id)objc_opt_self(UIDevice), "crl_phoneUI") & 1) != 0)
        {

        }
        else
        {
          v27 = objc_msgSend(v26, "crl_isCompactWidth");

          if ((v27 & 1) == 0)
            goto LABEL_22;
        }
        v28 = objc_msgSend(v21, "presentedViewController");
        if (v28)
        {
          v29 = v28;
          if ((objc_msgSend(v28, "isBeingDismissed") & 1) == 0)
          {
            v30 = objc_msgSend(v29, "view");
            if (v30)
            {
              v31 = v30;
              objc_msgSend(v30, "bounds");
              objc_msgSend(v31, "convertRect:toCoordinateSpace:", v2);
              objc_msgSend(v5, "convertRect:fromCoordinateSpace:", v2);
              v36 = objc_msgSend((id)objc_opt_self(NSValue), "valueWithCGRect:", v32, v33, v34, v35);
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v36);
              v37 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
              v38 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
              if (v37 >= v38 >> 1)
              {
                v67 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v38 > 1, v37 + 1, 1);
                v37 = v67;
              }
              v39 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v37, v36);
              specialized Array._endMutation()(v39);

            }
          }

        }
      }
    }
LABEL_22:
    v40 = objc_msgSend(v21, "miniFormatterPresenter");
    if (!v40)
      goto LABEL_37;
    v41 = v40;
    v42 = objc_msgSend(v40, "isPresentingMiniFormatter");
    *(_QWORD *)&v43 = swift_unknownObjectRelease(v41).n128_u64[0];
    if (!v42)
      goto LABEL_37;
    v44 = objc_msgSend(v1, "traitCollection", v43);
    if ((objc_msgSend((id)objc_opt_self(UIDevice), "crl_phoneUI") & 1) != 0)
    {

    }
    else
    {
      v45 = objc_msgSend(v44, "crl_isCompactWidth");

      if ((v45 & 1) == 0)
        goto LABEL_37;
    }
    v46 = objc_msgSend(v21, "miniFormatterPresenter");
    if (v46)
    {
      v47 = v46;
      v48 = type metadata accessor for CRLiOSMiniFormatterPresenter();
      v49 = swift_dynamicCastClass(v47, v48);
      if (v49)
      {
        v50 = *(void **)(v49 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_miniFormatterVC);
        if (v50)
        {
          v51 = objc_msgSend(v50, "view");
          if (v51)
          {
            v52 = v51;
            objc_msgSend(v51, "bounds");
            objc_msgSend(v52, "convertRect:toCoordinateSpace:", v2);
            objc_msgSend(v5, "convertRect:fromCoordinateSpace:", v2);
            v54 = v53;
            v56 = v55;
            v58 = v57;
            v60 = v59;
            if ((objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController], "connectorKnobsEnabled") & 1) != 0)
            {
              v69.origin.x = v54;
              v69.origin.y = v56;
              v69.size.width = v58;
              v69.size.height = v60;
              v61 = CGRectGetWidth(v69);
              v70.origin.x = v54;
              v70.origin.y = v56;
              v70.size.width = v58;
              v70.size.height = v60;
              v60 = CGRectGetHeight(v70) + 20.0;
              v58 = v61;
              v56 = v56 + -20.0;
            }
            v62 = objc_msgSend((id)objc_opt_self(NSValue), "valueWithCGRect:", v54, v56, v58, v60);
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v62);
            v64 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
            v63 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v64 >= v63 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v63 > 1, v64 + 1, 1);
            v65 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v64, v62);
            specialized Array._endMutation()(v65);
            swift_unknownObjectRelease(v47);

            goto LABEL_38;
          }
        }
      }
      swift_unknownObjectRelease(v47);
    }
LABEL_37:
    v52 = v5;
LABEL_38:

    return _swiftEmptyArrayStorage;
  }
  sub_100757E04(&_mh_execute_header, (uint64_t)"rectanglesObscuringView(_:)", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 1983, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"rectanglesObscuringView(_:)", 27, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2u, 1983, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  return _swiftEmptyArrayStorage;
}

id sub_100C4CE38()
{
  unsigned __int8 *v0;
  int v1;
  id result;
  void *v3;
  id v4;
  id v5;
  unsigned int v6;

  if ((objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasViewController], "isHandlingScribbleWriting") & 1) != 0)v1 = 0;
  else
    v1 = v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isChangingDocumentModeToHandwriting] ^ 1;
  result = objc_msgSend(v0, "view");
  if (result)
  {
    v3 = result;
    v4 = objc_msgSend(result, "window");

    if (v4)
    {
      v5 = objc_msgSend(v0, "traitCollection");
      v6 = objc_msgSend(v5, "crl_isCompactWidth");

      return (id)(v6 & v1);
    }
    else
    {
      return 0;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100C4CF14()
{
  char *v0;
  unsigned int v1;
  void *v2;
  unsigned int v3;
  id v4;
  uint64_t v5;
  id v6;
  id v7;
  char v8;

  v1 = objc_msgSend((id)objc_opt_self(CRLAccessibility), "isReduceMotionEnabled");
  v2 = *(void **)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_compactScenesNavigatorViewController];
  if (!v2)
    return 0;
  v3 = v1;
  v4 = v2;
  v5 = (uint64_t)objc_msgSend(v0, "presentedViewController");
  if (v5)
  {
    sub_1004B8930(0, (unint64_t *)&qword_1013F6620, UIViewController_ptr);
    v6 = v4;
    v7 = (id)v5;
    v8 = static NSObject.== infix(_:_:)(v7, v6);

    if ((v8 & 1) != 0)
    {
      objc_msgSend(v6, "dismissViewControllerAnimated:completion:", v3 ^ 1, 0);
      v5 = 1;
    }
    else
    {
      v5 = 0;
    }
  }

  return v5;
}

void sub_100C4D010()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t KeyPath;
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;

  v1 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState);
  KeyPath = swift_getKeyPath(&unk_100F2F300);
  v4 = swift_getKeyPath(&unk_100F2F328);
  v5 = v2;
  static Published.subscript.getter(&v10, v5, KeyPath, v4);

  swift_release(KeyPath);
  swift_release(v4);
  v6 = v10;

  if (v6)
  {
    v7 = *(void **)(v0 + v1);
    v8 = swift_getKeyPath(&unk_100F2F300);
    v9 = swift_getKeyPath(&unk_100F2F328);
    v10 = 0;
    static Published.subscript.setter(&v10, v7, v8, v9);
  }
}

id sub_100C4D0E4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, _BYTE *a5)
{
  char *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  void *v16;
  char *v17;
  id v18;
  NSString v19;
  NSString v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  id v28;
  id v29;
  objc_super v34;

  v7 = &a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_manager];
  swift_unknownObjectWeakInit(&a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_manager]);
  v8 = &a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_delegate];
  swift_unknownObjectWeakInit(&a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_delegate]);
  *(_QWORD *)&a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_type] = 0;
  swift_unknownObjectWeakInit(&a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_crlaxViewControllerForLCVInteractions]);
  *(_QWORD *)&a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_minimumShowDuration] = 0;
  *(_QWORD *)&a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_maximumShowDuration] = 0;
  v9 = &a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_timeStartedShowing];
  v10 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  *(_QWORD *)&a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_hideTimer] = 0;
  a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_showing] = 0;
  a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_animating] = 0;
  a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_hiding] = 0;
  v11 = &a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_accessibilityAnnouncement];
  *v11 = 0;
  v11[1] = 0;
  a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_swipable] = 0;
  *(_QWORD *)&a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_swipeGestureRecognizer] = 0;
  a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_hideOnTouch] = 0;
  a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_setupDone] = 0;
  *(_QWORD *)&a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_height] = 0x4045000000000000;
  *(_QWORD *)&a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_width] = 0;
  *(_QWORD *)&a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_heightConstraint] = 0;
  *(_QWORD *)&a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_constraints] = _swiftEmptyArrayStorage;
  v12 = &a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_accessibilityExperienceCoordinator];
  swift_unknownObjectWeakInit(&a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_accessibilityExperienceCoordinator]);
  v13 = &a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_stopButtonClickedHandler];
  *v13 = 0;
  v13[1] = 0;
  v14 = &a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_canvasWidth];
  *(_QWORD *)v14 = 0;
  v14[8] = 1;
  *(_QWORD *)&a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController____lazy_storage___participantColor] = 0;
  v15 = &a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_stopFollowingString];
  v16 = (void *)objc_opt_self(NSBundle);
  v17 = a5;
  v18 = objc_msgSend(v16, "mainBundle");
  v19 = String._bridgeToObjectiveC()();
  v20 = String._bridgeToObjectiveC()();
  v21 = objc_msgSend(v18, "localizedStringForKey:value:table:", v19, v20, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  v23 = v22;
  v25 = v24;

  *v15 = v23;
  v15[1] = v25;
  *(_QWORD *)&v17[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController____lazy_storage____label] = 0;
  swift_unknownObjectWeakAssign(v7, a1);
  *(_QWORD *)&v17[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_followingParticipant] = a2;
  swift_unknownObjectWeakAssign(v8, a3);
  v26 = objc_allocWithZone((Class)UIView);
  v27 = a2;
  v28 = objc_msgSend(v26, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v17[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_hudView] = v28;
  v29 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v17[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_containerView] = v29;
  swift_unknownObjectWeakAssign(v12, a4);

  v34.receiver = v17;
  v34.super_class = (Class)type metadata accessor for CRLPersistentFollowHUDController(0);
  return objc_msgSendSuper2(&v34, "init");
}

id sub_100C4D4A0(uint64_t a1, void *a2, uint64_t a3, char *a4)
{
  char *v7;
  char *v8;
  void *v9;
  char *v10;
  unsigned int v11;
  double v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  id v19;
  NSString v20;
  NSString v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  id v30;
  objc_super v33;

  v7 = &a4[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_manager];
  swift_unknownObjectWeakInit(&a4[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_manager]);
  v8 = &a4[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_delegate];
  swift_unknownObjectWeakInit(&a4[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_delegate]);
  *(_QWORD *)&a4[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_type] = 2;
  swift_unknownObjectWeakInit(&a4[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_crlaxViewControllerForLCVInteractions]);
  *(_QWORD *)&a4[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_minimumShowDuration] = 0x3FF0000000000000;
  v9 = (void *)objc_opt_self(CRLAccessibility);
  v10 = a4;
  v11 = objc_msgSend(v9, "isVoiceOverOrSwitchControlEnabled");
  v12 = 6.0;
  if (v11)
    v12 = 30.0;
  *(double *)&v10[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_maximumShowDuration] = v12;
  v13 = &v10[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_timeStartedShowing];
  v14 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  *(_QWORD *)&v10[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_hideTimer] = 0;
  v10[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_shouldAutoHide] = 1;
  v10[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_showing] = 0;
  v10[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_animating] = 0;
  v10[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_hiding] = 0;
  v15 = &v10[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_accessibilityAnnouncement];
  *(_QWORD *)v15 = 0;
  *((_QWORD *)v15 + 1) = 0;
  v10[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_swipable] = 1;
  *(_QWORD *)&v10[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_swipeGestureRecognizer] = 0;
  v10[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_hideOnTouch] = 1;
  v10[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_setupDone] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_height] = 0x4045000000000000;
  *(_QWORD *)&v10[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_width] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_heightConstraint] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_constraints] = _swiftEmptyArrayStorage;
  v16 = &v10[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_refollowClickedHandler];
  *(_QWORD *)v16 = 0;
  *((_QWORD *)v16 + 1) = 0;
  v17 = &v10[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_canvasWidth];
  *(_QWORD *)v17 = 0;
  v17[8] = 1;
  *(_QWORD *)&v10[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController____lazy_storage___participantColor] = 0;
  v18 = &v10[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_resumeFollowingString];
  v19 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v20 = String._bridgeToObjectiveC()();
  v21 = String._bridgeToObjectiveC()();
  v22 = objc_msgSend(v19, "localizedStringForKey:value:table:", v20, v21, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
  v24 = v23;
  v26 = v25;

  *(_QWORD *)v18 = v24;
  *((_QWORD *)v18 + 1) = v26;
  *(_QWORD *)&v10[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController____lazy_storage____label] = 0;
  swift_unknownObjectWeakAssign(v7, a1);
  *(_QWORD *)&v10[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_followingParticipant] = a2;
  swift_unknownObjectWeakAssign(v8, a3);
  v27 = objc_allocWithZone((Class)UIView);
  v28 = a2;
  v29 = objc_msgSend(v27, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v10[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_hudView] = v29;
  v30 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v10[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_containerView] = v30;

  v33.receiver = v10;
  v33.super_class = (Class)type metadata accessor for CRLTransientRefollowHUDController(0);
  return objc_msgSendSuper2(&v33, "init");
}

id sub_100C4D880(uint64_t a1, void *a2, char a3, uint64_t a4, char a5, _BYTE *a6)
{
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  _QWORD *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  id v20;
  char *v21;
  id v22;
  id v23;
  objc_super v25;

  v12 = &a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_manager];
  swift_unknownObjectWeakInit(&a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_manager]);
  v13 = &a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_delegate];
  swift_unknownObjectWeakInit(&a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_delegate]);
  *(_QWORD *)&a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_type] = 2;
  *(_QWORD *)&a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_minimumShowDuration] = 0x3FF0000000000000;
  *(_QWORD *)&a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_maximumShowDuration] = 0x4014000000000000;
  v14 = &a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_timeStartedShowing];
  v15 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  *(_QWORD *)&a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_hideTimer] = 0;
  a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_shouldAutoHide] = 1;
  a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_showing] = 0;
  a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_animating] = 0;
  a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_hiding] = 0;
  v16 = &a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_accessibilityAnnouncement];
  *v16 = 0;
  v16[1] = 0;
  a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_swipable] = 1;
  *(_QWORD *)&a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_swipeGestureRecognizer] = 0;
  a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_hideOnTouch] = 0;
  a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_setupDone] = 0;
  *(_QWORD *)&a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_height] = 0x4045000000000000;
  *(_QWORD *)&a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_width] = 0;
  *(_QWORD *)&a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_heightConstraint] = 0;
  *(_QWORD *)&a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_constraints] = _swiftEmptyArrayStorage;
  v17 = &a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_canvasWidth];
  *(_QWORD *)v17 = 0;
  v17[8] = 1;
  v18 = OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_isStartFollow;
  a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_isStartFollow] = 0;
  *(_QWORD *)&a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController____lazy_storage____label] = 0;
  swift_unknownObjectWeakAssign(v12, a1);
  v19 = &a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_followingParticipantInfo];
  *(_QWORD *)v19 = a2;
  a3 &= 1u;
  v19[8] = a3;
  swift_unknownObjectWeakAssign(v13, a4);
  a6[v18] = a5;
  v20 = objc_allocWithZone((Class)UIView);
  v21 = a6;
  sub_10066856C(a2, a3);
  v22 = objc_msgSend(v20, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v21[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_hudView] = v22;
  v23 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v21[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_containerView] = v23;

  v25.receiver = v21;
  v25.super_class = (Class)type metadata accessor for CRLTransientStartEndFollowHUDController(0);
  return objc_msgSendSuper2(&v25, "init");
}

void sub_100C4DB7C()
{
  char *v0;
  id v1;
  void *v2;
  id v3;

  v1 = objc_msgSend(v0, "crl_windowWrapper");
  if (v1 && (v2 = v1, v3 = objc_msgSend(v1, "newWrapperBeginningIgnoringUserInteractionSafely"), v2, v3))
  {
    if (*(_QWORD *)(*(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                   + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_suspendResumeCoordinator))
      sub_10066AAE4(0xD000000000000012, 0x8000000101003030);
    else
      __break(1u);
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"beginModalOperation(withLocalizedMessage:progress:cancelHandler:)", 65, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 2740, "beginModalOperation is will not suspend collaboration when the modalOperationToken is nil, but it will still be safe to call endModalOperation in either case.", 158, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"beginModalOperation(withLocalizedMessage:progress:cancelHandler:)", 65, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2u, 2740, (uint64_t)"beginModalOperation is will not suspend collaboration when the modalOperationToken is nil, but it will still be safe to call endModalOperation in either case.", 158, 2u);
  }
}

uint64_t sub_100C4DCB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  __n128 v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[5];
  uint64_t v24;

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v22 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004B8930(0, (unint64_t *)&qword_1013DE090, OS_dispatch_queue_ptr);
  v12 = (void *)static OS_dispatch_queue.main.getter(v11);
  v13 = swift_allocObject(&unk_10129C018, 32, 7);
  *(_QWORD *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = a2;
  aBlock[4] = sub_1005A46E8;
  v24 = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1005D2FC0;
  aBlock[3] = &unk_10129C030;
  v14 = _Block_copy(aBlock);
  v15 = v24;
  swift_retain(a2);
  v16 = swift_release(v15);
  static DispatchQoS.unspecified.getter(v16);
  aBlock[0] = _swiftEmptyArrayStorage;
  v17 = sub_1004B7878((unint64_t *)&qword_1013E1D20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v18 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
  v19 = sub_1004CBA30((unint64_t *)&qword_1013E1D30, (uint64_t *)&unk_1013DFBF0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v18, v19, v4, v17);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v6, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v22 + 8))(v6, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void sub_100C4DED4(void *a1, void *a2)
{
  char *v2;
  char *v3;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  NSString v11;
  char **v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  UIAccessibilityTraits v17;
  unint64_t v18;
  UIAccessibilityTraits v19;
  id v20;
  id v21;
  UIAccessibilityTraits v22;
  unint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  NSString v27;
  NSString v28;
  id v29;
  unsigned int v30;
  id v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  double v36;
  double v37;
  id v38;
  double v39;
  id v40;
  unsigned int v41;
  unsigned __int8 v42[40];

  v3 = v2;
  v6 = *(void **)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasViewController];
  objc_msgSend(v6, "setUpCommonGestureAllowedTouchTypes");
  v7 = objc_msgSend(v6, "pencilMediator");
  if (!v7)
  {
    __break(1u);
    return;
  }
  v8 = v7;
  objc_msgSend(v7, "setCurrentPencilModeType:", objc_msgSend(a1, "pencilModeType"));
  v9 = objc_msgSend(a1, "pencilModeType", swift_unknownObjectRelease(v8).n128_f64[0]);
  v10 = sub_100C1CD9C();
  v11 = String._bridgeToObjectiveC()();
  if (v9)
    v12 = &selRef_imageNamed_;
  else
    v12 = &selRef_systemImageNamed_;
  v13 = objc_msgSend((id)objc_opt_self(UIImage), *v12, v11);

  objc_msgSend(v10, "setImage:", v13);
  if (v9)
  {
    v14 = *(void **)(*(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                   + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator);
    if (*((_BYTE *)v14 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_isFollowed) == 1)
    {
      v15 = v14;
      sub_1006F9DEC(0, 1);

    }
    v16 = sub_100C1CD9C();
    v17 = UIAccessibilityTraitSelected;
    v18 = (unint64_t)objc_msgSend(v16, "accessibilityTraits");
    if ((v17 & ~v18) != 0)
      v19 = v17;
    else
      v19 = 0;
    objc_msgSend(v16, "setAccessibilityTraits:", v19 | v18);

    v20 = sub_100C1CD9C();
    objc_msgSend(v20, "setAccessibilityHint:", 0);
  }
  else
  {
    v21 = sub_100C1CD9C();
    v22 = UIAccessibilityTraitSelected;
    v23 = (unint64_t)objc_msgSend(v21, "accessibilityTraits");
    v24 = -1;
    if ((v23 & v22) != 0)
      v24 = ~v22;
    objc_msgSend(v21, "setAccessibilityTraits:", v24 & v23);

    v25 = sub_100C1CD9C();
    v26 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v27 = String._bridgeToObjectiveC()();
    v28 = String._bridgeToObjectiveC()();
    v29 = objc_msgSend(v26, "localizedStringForKey:value:table:", v27, v28, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
    v20 = String._bridgeToObjectiveC()();
    objc_msgSend(v25, "setAccessibilityHint:", v20, swift_bridgeObjectRelease().n128_f64[0]);

  }
  sub_10054D554(v9 != 0);
  v30 = objc_msgSend(a1, "wantsDoneButtonInCompact");
  if (v30 != objc_msgSend(a2, "wantsDoneButtonInCompact"))
  {
    v31 = objc_msgSend(v3, "traitCollection");
    sub_1005221A4(v31, (int)objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController], "documentIsSharedReadOnly"), (uint64_t)v42);
    sub_100522548(v42, 0);
    sub_1004DB520((uint64_t)v42);

  }
  v32 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_bottomToolTray;
  v33 = *(void **)&v3[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_bottomToolTray];
  v34 = objc_msgSend(a1, "toolTray", swift_unknownObjectRetain(v33).n128_f64[0]);
  v35 = *(_QWORD *)&v3[v32];
  *(_QWORD *)&v3[v32] = v34;
  swift_unknownObjectRetain(v34);
  swift_unknownObjectRelease(v35);
  if ((sub_100C4EDDC((unint64_t)v34, (unint64_t)v33) & 1) != 0)
  {
    if (!v34)
      goto LABEL_29;
  }
  else
  {
    if (v33)
    {
      *(_QWORD *)&v37 = swift_unknownObjectRetain(v33).n128_u64[0];
      if ((objc_msgSend(v38, "hidden", v37) & 1) == 0)
        objc_msgSend(v33, "setToolTrayHidden:animated:", 1, 1);
      objc_msgSend(v33, "uninstallToolTray");
      swift_unknownObjectRelease(v33);
    }
    if (!v34)
      goto LABEL_29;
    *(_QWORD *)&v39 = swift_unknownObjectRetain(v34).n128_u64[0];
    objc_msgSend(v40, "installToolTray", v39);
    if (objc_msgSend(v34, "hidden"))
      objc_msgSend(v34, "setToolTrayHidden:animated:", 0, 1);
    *(_QWORD *)&v36 = swift_unknownObjectRelease(v34).n128_u64[0];
  }
  objc_msgSend(a1, "modeDidPresentBottomToolTray", v36);
LABEL_29:
  v41 = objc_msgSend(a1, "wantsToSuppressMultiselectionWithSingleBounds");
  if (v41 != objc_msgSend(a2, "wantsToSuppressMultiselectionWithSingleBounds"))
    objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController], "updateMultiselectResizeInfoIfNeeded");
  swift_unknownObjectRelease(v33);
  swift_unknownObjectRelease(v34);
  v3[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isChangingDocumentModeToHandwriting] = 0;
}

void sub_100C4E414(uint64_t *a1)
{
  uint64_t v1;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;

  v3 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController), "canvas");
  v4 = objc_msgSend(v3, "topLevelReps");
  v5 = sub_1004B8930(0, (unint64_t *)&qword_1013E56B0, off_101229828);
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);

  if (!((unint64_t)v6 >> 62))
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v7)
      goto LABEL_3;
LABEL_13:

    swift_bridgeObjectRelease();
    return;
  }
  if (v6 < 0)
    v12 = v6;
  else
    v12 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v6);
  v7 = _CocoaArrayWrapper.endIndex.getter(v12);
  swift_bridgeObjectRelease();
  if (!v7)
    goto LABEL_13;
LABEL_3:
  if (v7 >= 1)
  {
    v8 = 0;
    v9 = *a1;
    do
    {
      if ((v6 & 0xC000000000000001) != 0)
        v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v6);
      else
        v10 = *(id *)(v6 + 8 * v8 + 32);
      v11 = v10;
      ++v8;
      objc_msgSend(v10, "recursivelyPerformSelector:", v9);

    }
    while (v7 != v8);
    goto LABEL_13;
  }
  __break(1u);
}

uint64_t sub_100C4E558()
{
  uint64_t v0;
  uint64_t result;
  CKRecordID v2;
  Swift::String v3;

  result = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_pencilKitCanvasViewController);
  if (!result)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"pencilKitCanvasViewControllerForFreehandDrawingTools", 52, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 3523, "pencilKitCanvasViewController should be set up by the time pencilKitCanvasViewControllerForFreehandDrawingTools is called.", 122, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"pencilKitCanvasViewController should be set up by the time pencilKitCanvasViewControllerForFreehandDrawingTools is called.");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"pencilKitCanvasViewControllerForFreehandDrawingTools", 52, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2u, 3523, (uint64_t)"pencilKitCanvasViewController should be set up by the time pencilKitCanvasViewControllerForFreehandDrawingTools is called.", 122, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v2, v3);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
  }
  return result;
}

id sub_100C4E66C(uint64_t a1, SEL *a2)
{
  uint64_t v2;
  char v5;
  id result;
  _QWORD v7[5];

  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController), *a2, a1);
  v7[3] = &type metadata for CRLFeatureFlags;
  v7[4] = sub_1004DB6DC();
  LOBYTE(v7[0]) = 13;
  v5 = isFeatureEnabled(_:)(v7);
  result = (id)_s8Freeform26AnyCRLCommandChangeContextVwxx_0(v7);
  if ((v5 & 1) != 0)
    return objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_freehandDrawingHighlightManager), *a2, a1);
  return result;
}

uint64_t sub_100C4E700(void *a1, uint64_t a2)
{
  uint64_t v2;
  id v4;
  id v5;
  id v6;
  id v7;

  v4 = objc_msgSend(a1, "presentationStyle");
  if (!*(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_undoAlertController))
  {
    v5 = sub_100C1CAE8();
    v6 = objc_msgSend(v5, "mode");

    LOBYTE(v5) = objc_msgSend(v6, "wantsToEndForNonPopoverPresentations");
    if ((v5 & 1) != 0 && (v4 != (id)7 && a2 != 7 || a2 != -1 && a2 != 7))
    {
      v7 = sub_100C1CAE8();
      objc_msgSend(v7, "resetToDefaultModeAnimated:", 1);

    }
  }
  return sub_100C25AD4((uint64_t)v4, a2);
}

void sub_100C4E7D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(_QWORD, __n128);
  __n128 v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  _QWORD *Strong;
  void *v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(__n128);
  __n128 v24;
  void *v25;
  _QWORD *v26;
  void *v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(__n128);
  __n128 v32;
  void *v33;
  uint64_t v34;
  void (*v35)(_QWORD, __n128);
  __n128 v36;
  uint64_t v37;
  CKRecordID v38;
  Swift::String v39;

  if ((unint64_t)a1 >> 62)
  {
LABEL_28:
    if (a1 < 0)
      v37 = a1;
    else
      v37 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v37);
    if (v2)
      goto LABEL_3;
LABEL_32:
    swift_bridgeObjectRelease();
    return;
  }
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  if (!v2)
    goto LABEL_32;
LABEL_3:
  v3 = 4;
  while (1)
  {
    if ((a1 & 0xC000000000000001) != 0)
      v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v3 - 4, a1);
    else
      v7 = *(id *)(a1 + 8 * v3);
    v8 = v7;
    v9 = v3 - 3;
    if (__OFADD__(v3 - 4, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    v10 = type metadata accessor for CRLImageItem(0);
    v11 = swift_dynamicCastClass(v8, v10);
    if (v11)
    {
      v12 = v11;
      if (*(_QWORD *)(v11 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
        || (Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v11 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem)) == 0)
      {
        v13 = v8;
      }
      else
      {
        v19 = Strong;
        v20 = (*(uint64_t (**)(id))((swift_isaMask & *Strong) + 0x2F0))(v8);

        if ((v20 & 1) != 0)
          goto LABEL_33;
      }
      v21 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
      v22 = *(_QWORD *)(v12 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
      v23 = *(uint64_t (**)(__n128))(*(_QWORD *)v22 + 384);
      v24 = swift_retain(v22);
      v25 = (void *)v23(v24);
      swift_release(v22);
      if (!v25)
        goto LABEL_25;

      v4 = *(_QWORD *)(v12 + v21);
      v5 = *(void (**)(_QWORD, __n128))(*(_QWORD *)v4 + 392);
      v6 = swift_retain(v4);
      v5(0, v6);

      swift_release(v4);
      goto LABEL_5;
    }
    v14 = type metadata accessor for CRLMovieItem(0);
    v15 = swift_dynamicCastClass(v8, v14);
    if (!v15)
      goto LABEL_26;
    v16 = v15;
    v8 = v8;
    sub_100A2F6E0(1);
    if (!*(_QWORD *)(v16 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext))
    {
      v26 = (_QWORD *)swift_unknownObjectWeakLoadStrong(v16 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem);
      if (v26)
        break;
    }
    v17 = v8;
LABEL_22:
    v29 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
    v30 = *(_QWORD *)(v16 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    v31 = *(uint64_t (**)(__n128))(*(_QWORD *)v30 + 384);
    v32 = swift_retain(v30);
    v33 = (void *)v31(v32);
    swift_release(v30);
    if (!v33)
    {

LABEL_25:
LABEL_26:

      goto LABEL_5;
    }

    v34 = *(_QWORD *)(v16 + v29);
    v35 = *(void (**)(_QWORD, __n128))(*(_QWORD *)v34 + 392);
    v36 = swift_retain(v34);
    v35(0, v36);

    swift_release(v34);
LABEL_5:
    ++v3;
    if (v9 == v2)
      goto LABEL_32;
  }
  v27 = v26;
  v28 = (*(uint64_t (**)(id))((swift_isaMask & *v26) + 0x2F0))(v8);

  if ((v28 & 1) == 0)
    goto LABEL_22;
LABEL_33:
  sub_100757E04(&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, "Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
  sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2u, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u);
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v38, v39);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
  __break(1u);
}

id sub_100C4EB70()
{
  uint64_t v0;
  id result;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  result = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController), "shouldPreventSyncingContentOffset");
  if (!(_DWORD)result)
  {
    result = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scrollView), "contentOffset");
    v2 = (_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_lastContentOffset);
    *v2 = v3;
    v2[1] = v4;
  }
  return result;
}

uint64_t sub_100C4EBDC()
{
  return sub_1006F0278(40);
}

uint64_t sub_100C4EBE4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_10140B774);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1004CFD00;
  return sub_100C461FC(a1, v4, v5, v6);
}

uint64_t sub_100C4EC50()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100C4EC84()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = (_QWORD *)swift_task_alloc(dword_10140B79C);
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_1004CFD00;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_10140B798 + dword_10140B798))(v2, v3, v4);
}

uint64_t sub_100C4ECF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_10140B7CC);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1004CFD00;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_10140B7C8 + dword_10140B7C8))(a1, v4);
}

void sub_100C4ED68(uint64_t a1)
{
  uint64_t v1;

  sub_100C407F8(a1, *(char **)(v1 + 16));
}

uint64_t sub_100C4ED70()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

double sub_100C4ED9C()
{
  uint64_t v0;

  return sub_100C40C7C(*(void **)(v0 + 16), *(char **)(v0 + 24));
}

uint64_t sub_100C4EDA4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_100C4EDD0()
{
  uint64_t v0;

  return sub_100C40DF0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_100C4EDDC(unint64_t a1, unint64_t a2)
{
  unint64_t v3;
  id v4;
  id v5;
  uint64_t v6;

  v3 = a1 | a2;
  v4 = (id)a1;
  v5 = (id)a2;
  if (v3)
    v6 = (uint64_t)objc_msgSend(v4, "isEqual:", v5);
  else
    v6 = 1;

  return v6;
}

void sub_100C4EE40()
{
  uint64_t v0;

  sub_100C39078(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100C4EE48()
{
  return sub_100C4F80C(48);
}

uint64_t sub_100C4EE50()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100C4EE74()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  if (*(_QWORD *)(v0 + 48))
    swift_release(*(_QWORD *)(v0 + 56));

  return swift_deallocObject(v0, 72, 7);
}

void sub_100C4EEC0(int a1)
{
  uint64_t v1;

  sub_100C366B4(a1, *(id *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(void **)(v1 + 64));
}

id sub_100C4EED4()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "endIgnoringUserInteractionSafely");
}

void sub_100C4EEE8()
{
  uint64_t v0;

  sub_100C35894(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_100C4EEF4()
{
  uint64_t v0;

  sub_100C353DC(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100C4EF00()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100C4EF58(uint64_t a1)
{
  uint64_t v1;

  sub_100C2F1B4(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_100C4EF64()
{
  return sub_100C4F464((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

void sub_100C4EF78(uint64_t a1)
{
  uint64_t *v1;

  sub_100C2EA80(a1, v1[2], v1[3], v1[4]);
}

void sub_100C4EF84(uint64_t a1)
{
  uint64_t v1;

  sub_100C2DF68(a1, v1);
}

id sub_100C4EF8C()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasViewController), "presentViewController:animated:completion:", *(_QWORD *)(v0 + 24), 1, 0);
}

uint64_t sub_100C4EFBC()
{
  return sub_100C4F80C(49);
}

uint64_t sub_100C4EFC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _QWORD *v9;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = *(_BYTE *)(v1 + 48);
  v9 = (_QWORD *)swift_task_alloc(dword_10140B8B4);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1004CFD00;
  return sub_100C2BE28(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_100C4F044()
{
  return sub_100C4F80C(49);
}

uint64_t sub_100C4F04C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _QWORD *v9;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = *(_BYTE *)(v1 + 48);
  v9 = (_QWORD *)swift_task_alloc(dword_10140B8CC);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1004CFD00;
  return sub_100C2B380(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_100C4F0CC()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_bridgeObjectRelease(v0[6]);
  swift_bridgeObjectRelease(v0[8]);
  swift_bridgeObjectRelease(v0[10]);
  return swift_deallocObject(v0, 88, 7);
}

uint64_t sub_100C4F110(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;

  v4 = v1[3];
  v12 = v1[2];
  v5 = v1[4];
  v6 = v1[5];
  v7 = v1[6];
  v8 = v1[7];
  v9 = v1[8];
  v10 = (_QWORD *)swift_task_alloc(dword_10140B8DC);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_1004CFD00;
  return sub_100C2A754(a1, v12, v4, v5, v6, v7, v8, v9);
}

id sub_100C4F1B8()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "dismissViewControllerAnimated:completion:", 1, 0);
}

void sub_100C4F1D0(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  sub_10063907C(a1, (uint64_t)asc_100F2F600, (uint64_t)byte_100F2F628, a2);
}

void sub_100C4F1F4(char *a1)
{
  sub_100711550(*a1);
}

void sub_100C4F218(uint64_t a1)
{
  uint64_t v1;

  sub_100C24930(a1, v1);
}

uint64_t sub_100C4F224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, unint64_t a9, char a10)
{
  uint64_t result;

  if (a10 != 2)
  {
    sub_10057939C(a6, a7);
    return sub_10057939C(a8, a9);
  }
  return result;
}

void sub_100C4F274()
{
  uint64_t v0;

  sub_100C264D4(*(_QWORD *)(v0 + 16), v0 + 24);
}

uint64_t sub_100C4F284()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  v1 = *(_QWORD *)(v0 + 88);
  if (v1 >> 60 != 15)
    sub_1004BBBC8(*(_QWORD *)(v0 + 80), v1);
  v2 = *(_QWORD *)(v0 + 104);
  if (v2 >> 60 != 15)
    sub_1004BBBC8(*(_QWORD *)(v0 + 96), v2);
  return swift_deallocObject(v0, 113, 7);
}

void sub_100C4F2E0(uint64_t a1)
{
  uint64_t v1;

  sub_100C1E3AC(a1, v1);
}

void sub_100C4F2E8(uint64_t a1)
{
  uint64_t v1;

  sub_100526814(a1, v1);
}

void sub_100C4F2F0(uint64_t a1)
{
  uint64_t v1;

  sub_1005267AC(a1, v1);
}

void sub_100C4F2F8(uint64_t a1)
{
  uint64_t v1;

  sub_10052670C(a1, v1);
}

uint64_t sub_100C4F304()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100C4F338()
{
  return sub_1006F0278(40);
}

uint64_t sub_100C4F340(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_10140B95C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1004CFD00;
  return sub_100C280E0(a1, v4, v5, v6);
}

uint64_t sub_100C4F3B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_100C47334(*(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), a3, *(uint64_t (**)(uint64_t))(v3 + 32), *(_QWORD *)(v3 + 40), (uint64_t)&type metadata for CRLTipConnectionLinesOnSelection, (uint64_t (*)(uint64_t))sub_10054F4F8);
}

uint64_t sub_100C4F3DC()
{
  return sub_1006F0278(40);
}

uint64_t sub_100C4F3E4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_10140B984);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1004CFD00;
  return sub_100C27A60(a1, v4, v5, v6);
}

uint64_t sub_100C4F450()
{
  return sub_100C4F464((void (*)(_QWORD))&_swift_unknownObjectRelease, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_100C4F464(void (*a1)(_QWORD), void (*a2)(_QWORD))
{
  uint64_t v2;

  a1(*(_QWORD *)(v2 + 16));
  a2(*(_QWORD *)(v2 + 32));
  return swift_deallocObject(v2, 40, 7);
}

uint64_t sub_100C4F4A0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_10140B994);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1004CFD00;
  return sub_10053CCE0(a1, v4, v5, v6);
}

uint64_t sub_100C4F510()
{
  _QWORD *v0;
  unint64_t v1;
  unint64_t v2;

  swift_release(v0[2]);
  v1 = v0[9];
  if (v1 >> 60 != 15)
    sub_1004BBBC8(v0[8], v1);
  v2 = v0[11];
  if (v2 >> 60 != 15)
    sub_1004BBBC8(v0[10], v2);
  return swift_deallocObject(v0, 97, 7);
}

uint64_t sub_100C4F564(uint64_t a1)
{
  sub_1005E6090(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_BYTE *)(a1 + 72));
  return a1;
}

uint64_t sub_100C4F5B0()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 40))
    swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100C4F5EC()
{
  return sub_100C4F5F8((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100C25A08);
}

uint64_t sub_100C4F5F8(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v1;

  return a1(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

void sub_100C4F60C(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  sub_10063907C(a1, (uint64_t)byte_100F2F648, (uint64_t)byte_100F2F670, a2);
}

void sub_100C4F630(char *a1)
{
  sub_100711578(*a1);
}

uint64_t sub_100C4F654()
{
  return sub_100C320DC();
}

const char *sub_100C4F674()
{
  return "viewScale";
}

id sub_100C4F680@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  uint64_t v4;

  result = objc_msgSend(*a1, "viewScale");
  *a2 = v4;
  return result;
}

id sub_100C4F6B0(double *a1, id *a2)
{
  return objc_msgSend(*a2, "setViewScale:", *a1);
}

void sub_100C4F6C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_100C25CA0(a1, a2, v2);
}

void sub_100C4F6CC(uint64_t a1)
{
  uint64_t v1;

  sub_100C25CF0(a1, v1);
}

uint64_t sub_100C4F6D4()
{
  return sub_1006F0278(40);
}

uint64_t sub_100C4F6DC()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_10140B9BC);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1004CFD00;
  return sub_100C23584();
}

uint64_t sub_100C4F748(char *a1)
{
  uint64_t v1;

  return sub_100C229A0(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

double sub_100C4F750(uint64_t *a1)
{
  uint64_t v1;

  return sub_100C22EF4(a1, v1);
}

uint64_t sub_100C4F758()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_bridgeObjectRelease(v0[4]);
  swift_release(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100C4F78C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_10140BA14);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1004CFD00;
  return sub_100C22FE0(a1, v4, v5, v7, v6);
}

uint64_t sub_100C4F804()
{
  return sub_100C4F80C(49);
}

uint64_t sub_100C4F80C(uint64_t a1)
{
  uint64_t v1;

  swift_unknownObjectRelease(*(_QWORD *)(v1 + 16));

  return swift_deallocObject(v1, a1, 7);
}

uint64_t sub_100C4F84C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _QWORD *v9;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = *(_BYTE *)(v1 + 48);
  v9 = (_QWORD *)swift_task_alloc(dword_10140BA2C);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1004CFD00;
  return sub_100C22A8C(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_100C4F8CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  if (*(_QWORD *)(v0 + v5))
    swift_release(*(_QWORD *)(v0 + v5 + 8));
  return swift_deallocObject(v0, v5 + 16, v3 | 7);
}

uint64_t sub_100C4F958()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  char *v4;

  v1 = v0[2];
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (char *)v0 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_100C371F4(v0[4], v0[5], (uint64_t)v0 + v3, *(uint64_t (**)(uint64_t))v4, *((_QWORD *)v4 + 1), v1, v0[3]);
}

uint64_t sub_100C4F994()
{
  uint64_t v0;

  return sub_100C37BB0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(uint64_t (**)(uint64_t))(v0 + 32));
}

uint64_t sub_100C4F9A0()
{
  return sub_100C383F0();
}

uint64_t sub_100C4F9AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_100C47334(*(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), a3, *(uint64_t (**)(uint64_t))(v3 + 32), *(_QWORD *)(v3 + 40), (uint64_t)&type metadata for CRLTipScenesEntryPointCompact, (uint64_t (*)(uint64_t))sub_10054F958);
}

uint64_t sub_100C4F9DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_100C47334(*(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), a3, *(uint64_t (**)(uint64_t))(v3 + 32), *(_QWORD *)(v3 + 40), (uint64_t)&type metadata for CRLTipScenesEntryPointFull, (uint64_t (*)(uint64_t))sub_10054F99C);
}

uint64_t sub_100C4FA08()
{
  return sub_1006F0278(40);
}

uint64_t sub_100C4FA10(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_10140BA44);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1004CFD00;
  return sub_100C20718(a1, v4, v5, v6);
}

BOOL sub_100C4FA7C(_QWORD *a1)
{
  return sub_100C4A698(a1);
}

BOOL sub_100C4FA94(_QWORD *a1)
{
  return sub_100C4A6B4(a1);
}

BOOL sub_100C4FCCC()
{
  _QWORD *v0;

  if (*(_QWORD *)(v0[2] + 16))
    return 0;
  if (*(_QWORD *)(v0[3] + 16))
    return 0;
  if (*(_QWORD *)(v0[4] + 16))
    return 0;
  return *(_QWORD *)(v0[5] + 16) == 0;
}

uint64_t sub_100C4FD1C()
{
  uint64_t v0;
  _QWORD *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v1[129] = v0;
  v2 = (*(_QWORD *)(*(_QWORD *)(sub_1004B804C(&qword_10140BB40) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[130] = swift_task_alloc(v2);
  v1[131] = swift_task_alloc(v2);
  v1[132] = swift_task_alloc(v2);
  v1[133] = swift_task_alloc(v2);
  v3 = type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecord(0);
  v1[134] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v1[135] = v4;
  v5 = (*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[136] = swift_task_alloc(v5);
  v1[137] = swift_task_alloc(v5);
  v1[138] = swift_task_alloc(v5);
  v1[139] = swift_task_alloc(v5);
  return swift_task_switch(sub_100C4FDF0, v0, 0);
}

uint64_t sub_100C4FDF0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_10140C084);
  *(_QWORD *)(v0 + 1120) = v1;
  *v1 = v0;
  v1[1] = sub_100C4FE3C;
  return sub_100C694F0();
}

uint64_t sub_100C4FE3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 1120);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 1032);
  *(_QWORD *)(*(_QWORD *)v1 + 1128) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_100C4FE9C, v3, 0);
}

uint64_t sub_100C4FE9C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 (*v11)(uint64_t, uint64_t, __n128);
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  void (*v17)(uint64_t, uint64_t, uint64_t, _QWORD);
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(void);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double *v32;
  unint64_t v33;
  unint64_t v34;
  double *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unsigned __int8 (*v46)(uint64_t, uint64_t, __n128);
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  void (*v52)(uint64_t, uint64_t, uint64_t, _QWORD);
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(void);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unsigned __int8 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  double *v67;
  unint64_t v68;
  unint64_t v69;
  double *v70;
  double *v71;
  double *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unsigned __int8 (*v83)(uint64_t, uint64_t, __n128);
  __n128 v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  int v88;
  void (*v89)(uint64_t, uint64_t, uint64_t, _QWORD);
  uint64_t v90;
  uint64_t v91;
  uint64_t (*v92)(void);
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unsigned __int8 v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  double *v104;
  unint64_t v105;
  unint64_t v106;
  double *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  double *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unsigned __int8 (*v118)(uint64_t, uint64_t, __n128);
  __n128 v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  int v123;
  void (*v124)(uint64_t, uint64_t, uint64_t, _QWORD);
  uint64_t v125;
  uint64_t v126;
  uint64_t (*v127)(void);
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unsigned __int8 v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t (*v137)(uint64_t, uint64_t);
  uint64_t v138;
  unint64_t v139;
  unint64_t v140;
  double *v141;
  uint64_t v142;
  double *v143;
  uint64_t v144;
  uint64_t v145;
  _QWORD *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  id v156;
  __n128 v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  _QWORD *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  double *v173;
  uint64_t v174;
  double *v175;
  double *v176;
  double *v177;
  double *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  double *v182;
  double *v183;

  v1 = *(_QWORD **)(v0 + 1128);
  v2 = v1[2];
  v3 = *(_QWORD *)(v2 + 16);
  if (!v3)
  {
    v37 = v1[3];
    v38 = *(_QWORD *)(v37 + 16);
    if (v38)
    {
      v177 = _swiftEmptyArrayStorage;
      goto LABEL_19;
    }
    if (!*(_QWORD *)(v1[4] + 16) && !*(_QWORD *)(v1[5] + 16))
    {
      if (qword_1013DD888 != -1)
      {
        swift_once(&qword_1013DD888, sub_100A05DE4);
        v1 = *(_QWORD **)(v0 + 1128);
      }
      swift_beginAccess(&static OS_os_log.realTimeSync, v0 + 832, 0, 0);
      v156 = (id)static OS_os_log.realTimeSync;
      v158 = static os_log_type_t.info.getter(v157);
      sub_100A06EBC((uint64_t)v156, &_mh_execute_header, v158, "No changes to send over real-time channel. Nothing to do", 56, 2, (uint64_t)_swiftEmptyArrayStorage);

      swift_release(v1);
      v176 = _swiftEmptyArrayStorage;
      v178 = _swiftEmptyArrayStorage;
      v143 = _swiftEmptyArrayStorage;
      v183 = _swiftEmptyArrayStorage;
      goto LABEL_71;
    }
    v72 = _swiftEmptyArrayStorage;
    v71 = _swiftEmptyArrayStorage;
    goto LABEL_37;
  }
  v4 = (_QWORD *)(v0 + 464);
  v166 = v0 + 504;
  v164 = *(_QWORD *)(v0 + 1080);
  v179 = *(_QWORD *)(*(_QWORD *)(v0 + 1032) + 128);
  v5 = v2 + 32;
  v174 = type metadata accessor for PropertyListEncoder(0);
  swift_bridgeObjectRetain(v2);
  v177 = _swiftEmptyArrayStorage;
  do
  {
    *(_QWORD *)(v0 + 488) = v174;
    *(_QWORD *)(v0 + 496) = &off_10129CD90;
    *(_QWORD *)(v0 + 464) = v179;
    sub_1004E90B0(v5, v0 + 544);
    v9 = *(_QWORD *)(v0 + 568);
    v10 = *(_QWORD *)(v0 + 576);
    sub_1004BB5A4((_QWORD *)(v0 + 544), v9);
    v11 = *(unsigned __int8 (**)(uint64_t, uint64_t, __n128))(v10 + 24);
    v12 = swift_retain(v179);
    if (v11(v9, v10, v12) != 5)
      goto LABEL_4;
    v13 = *(_QWORD *)(v0 + 1072);
    v14 = *(_QWORD *)(v0 + 1064);
    sub_1004E90B0(v0 + 544, v166);
    v15 = sub_1004B804C(&qword_10140BB50);
    v16 = swift_dynamicCast(v14, v166, v15, v13, 6);
    v17 = *(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v164 + 56);
    if (!v16)
    {
      v6 = *(_QWORD *)(v0 + 1064);
      v17(v6, 1, 1, *(_QWORD *)(v0 + 1072));
      sub_100C51A60(v6);
LABEL_4:
      v7 = *(_QWORD *)(v0 + 568);
      v8 = *(_QWORD *)(v0 + 576);
      sub_1004BB5A4((_QWORD *)(v0 + 544), v7);
      v22 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v8 + 32))(v4, v7, v8);
      v24 = v23;
      v25 = *(_QWORD *)(v0 + 568);
      v26 = *(_QWORD *)(v0 + 576);
      sub_1004BB5A4((_QWORD *)(v0 + 544), v25);
      v27 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 24))(v25, v26);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v4);
      goto LABEL_9;
    }
    v18 = *(_QWORD *)(v0 + 1112);
    v19 = *(_QWORD *)(v0 + 1064);
    v17(v19, 0, 1, *(_QWORD *)(v0 + 1072));
    sub_100C51AA0(v19, v18);
    v20 = sub_1005A8710();
    v21 = *(_QWORD *)(v0 + 1112);
    v22 = (uint64_t)v20;
    v24 = v28;
    v29 = *(_QWORD *)(v0 + 568);
    v30 = *(_QWORD *)(v0 + 576);
    sub_1004BB5A4((_QWORD *)(v0 + 544), v29);
    v27 = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 24))(v29, v30);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 464));
    v31 = v21;
    v4 = (_QWORD *)(v0 + 464);
    sub_100C51AE4(v31);
LABEL_9:
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 544));
    if ((swift_isUniquelyReferenced_nonNull_native(v177) & 1) != 0)
      v32 = v177;
    else
      v32 = (double *)sub_100D10610(0, *((_QWORD *)v177 + 2) + 1, 1, v177);
    v34 = *((_QWORD *)v32 + 2);
    v33 = *((_QWORD *)v32 + 3);
    if (v34 >= v33 >> 1)
      v32 = (double *)sub_100D10610((_QWORD *)(v33 > 1), v34 + 1, 1, v32);
    *((_QWORD *)v32 + 2) = v34 + 1;
    v177 = v32;
    v35 = &v32[3 * v34];
    *((_QWORD *)v35 + 4) = v27;
    *((_QWORD *)v35 + 5) = v22;
    *((_QWORD *)v35 + 6) = v24;
    v5 += 40;
    --v3;
  }
  while (v3);
  v36 = *(_QWORD *)(v0 + 1128);
  swift_bridgeObjectRelease();
  v37 = *(_QWORD *)(v36 + 24);
  v38 = *(_QWORD *)(v37 + 16);
  if (v38)
  {
LABEL_19:
    v39 = (_QWORD *)(v0 + 384);
    v162 = *(_QWORD *)(v0 + 1080);
    v165 = v0 + 304;
    v180 = *(_QWORD *)(*(_QWORD *)(v0 + 1032) + 128);
    v40 = v37 + 32;
    v172 = type metadata accessor for PropertyListEncoder(0);
    swift_bridgeObjectRetain(v37);
    v175 = _swiftEmptyArrayStorage;
    while (1)
    {
      *(_QWORD *)(v0 + 408) = v172;
      *(_QWORD *)(v0 + 416) = &off_10129CD90;
      *(_QWORD *)(v0 + 384) = v180;
      sub_1004E90B0(v40, v0 + 424);
      v44 = *(_QWORD *)(v0 + 448);
      v45 = *(_QWORD *)(v0 + 456);
      sub_1004BB5A4((_QWORD *)(v0 + 424), v44);
      v46 = *(unsigned __int8 (**)(uint64_t, uint64_t, __n128))(v45 + 24);
      v47 = swift_retain(v180);
      if (v46(v44, v45, v47) == 5)
      {
        v48 = *(_QWORD *)(v0 + 1072);
        v49 = *(_QWORD *)(v0 + 1056);
        sub_1004E90B0(v0 + 424, v165);
        v50 = sub_1004B804C(&qword_10140BB50);
        v51 = swift_dynamicCast(v49, v165, v50, v48, 6);
        v52 = *(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v162 + 56);
        if (v51)
        {
          v53 = *(_QWORD *)(v0 + 1104);
          v54 = *(_QWORD *)(v0 + 1056);
          v52(v54, 0, 1, *(_QWORD *)(v0 + 1072));
          sub_100C51AA0(v54, v53);
          v55 = sub_1005A8710();
          v56 = *(_QWORD *)(v0 + 1104);
          v57 = (uint64_t)v55;
          v59 = v63;
          v64 = *(_QWORD *)(v0 + 448);
          v65 = *(_QWORD *)(v0 + 456);
          sub_1004BB5A4((_QWORD *)(v0 + 424), v64);
          v62 = (*(uint64_t (**)(uint64_t, uint64_t))(v65 + 24))(v64, v65);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 384));
          v66 = v56;
          v39 = (_QWORD *)(v0 + 384);
          sub_100C51AE4(v66);
          goto LABEL_26;
        }
        v41 = *(_QWORD *)(v0 + 1056);
        v52(v41, 1, 1, *(_QWORD *)(v0 + 1072));
        sub_100C51A60(v41);
      }
      v42 = *(_QWORD *)(v0 + 448);
      v43 = *(_QWORD *)(v0 + 456);
      sub_1004BB5A4((_QWORD *)(v0 + 424), v42);
      v57 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v43 + 32))(v39, v42, v43);
      v59 = v58;
      v60 = *(_QWORD *)(v0 + 448);
      v61 = *(_QWORD *)(v0 + 456);
      sub_1004BB5A4((_QWORD *)(v0 + 424), v60);
      v62 = (*(uint64_t (**)(uint64_t, uint64_t))(v61 + 24))(v60, v61);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v39);
LABEL_26:
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 424));
      if ((swift_isUniquelyReferenced_nonNull_native(v175) & 1) != 0)
        v67 = v175;
      else
        v67 = (double *)sub_100D10610(0, *((_QWORD *)v175 + 2) + 1, 1, v175);
      v69 = *((_QWORD *)v67 + 2);
      v68 = *((_QWORD *)v67 + 3);
      if (v69 >= v68 >> 1)
        v67 = (double *)sub_100D10610((_QWORD *)(v68 > 1), v69 + 1, 1, v67);
      *((_QWORD *)v67 + 2) = v69 + 1;
      v175 = v67;
      v70 = &v67[3 * v69];
      *((_QWORD *)v70 + 4) = v62;
      *((_QWORD *)v70 + 5) = v57;
      *((_QWORD *)v70 + 6) = v59;
      v40 += 40;
      if (!--v38)
      {
        swift_bridgeObjectRelease();
        v71 = v175;
        v72 = v177;
        goto LABEL_37;
      }
    }
  }
  v71 = _swiftEmptyArrayStorage;
  v72 = v177;
LABEL_37:
  v73 = *(_QWORD *)(v0 + 1128);
  v74 = *(_QWORD *)(v73 + 32);
  v75 = *(_QWORD *)(v74 + 16);
  v176 = v71;
  v178 = v72;
  if (v75)
  {
    v163 = v0 + 344;
    v76 = (_QWORD *)(v0 + 624);
    v161 = *(_QWORD *)(v0 + 1080);
    v181 = *(_QWORD *)(*(_QWORD *)(v0 + 1032) + 128);
    v77 = v74 + 32;
    v170 = type metadata accessor for PropertyListEncoder(0);
    swift_bridgeObjectRetain(v74);
    v173 = _swiftEmptyArrayStorage;
    while (1)
    {
      *(_QWORD *)(v0 + 648) = v170;
      *(_QWORD *)(v0 + 656) = &off_10129CD90;
      *(_QWORD *)(v0 + 624) = v181;
      sub_1004E90B0(v77, v0 + 664);
      v81 = *(_QWORD *)(v0 + 688);
      v82 = *(_QWORD *)(v0 + 696);
      sub_1004BB5A4((_QWORD *)(v0 + 664), v81);
      v83 = *(unsigned __int8 (**)(uint64_t, uint64_t, __n128))(v82 + 24);
      v84 = swift_retain(v181);
      if (v83(v81, v82, v84) == 5)
      {
        v85 = *(_QWORD *)(v0 + 1072);
        v86 = *(_QWORD *)(v0 + 1048);
        sub_1004E90B0(v0 + 664, v163);
        v87 = sub_1004B804C(&qword_10140BB50);
        v88 = swift_dynamicCast(v86, v163, v87, v85, 6);
        v89 = *(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v161 + 56);
        if (v88)
        {
          v90 = *(_QWORD *)(v0 + 1096);
          v91 = *(_QWORD *)(v0 + 1048);
          v89(v91, 0, 1, *(_QWORD *)(v0 + 1072));
          sub_100C51AA0(v91, v90);
          v92 = sub_1005A8710();
          v93 = *(_QWORD *)(v0 + 1096);
          v94 = (uint64_t)v92;
          v96 = v100;
          v101 = *(_QWORD *)(v0 + 688);
          v102 = *(_QWORD *)(v0 + 696);
          sub_1004BB5A4((_QWORD *)(v0 + 664), v101);
          v99 = (*(uint64_t (**)(uint64_t, uint64_t))(v102 + 24))(v101, v102);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 624));
          v103 = v93;
          v76 = (_QWORD *)(v0 + 624);
          sub_100C51AE4(v103);
          goto LABEL_45;
        }
        v78 = *(_QWORD *)(v0 + 1048);
        v89(v78, 1, 1, *(_QWORD *)(v0 + 1072));
        sub_100C51A60(v78);
      }
      v79 = *(_QWORD *)(v0 + 688);
      v80 = *(_QWORD *)(v0 + 696);
      sub_1004BB5A4((_QWORD *)(v0 + 664), v79);
      v94 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v80 + 32))(v76, v79, v80);
      v96 = v95;
      v97 = *(_QWORD *)(v0 + 688);
      v98 = *(_QWORD *)(v0 + 696);
      sub_1004BB5A4((_QWORD *)(v0 + 664), v97);
      v99 = (*(uint64_t (**)(uint64_t, uint64_t))(v98 + 24))(v97, v98);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v76);
LABEL_45:
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 664));
      if ((swift_isUniquelyReferenced_nonNull_native(v173) & 1) != 0)
        v104 = v173;
      else
        v104 = (double *)sub_100D10610(0, *((_QWORD *)v173 + 2) + 1, 1, v173);
      v106 = *((_QWORD *)v104 + 2);
      v105 = *((_QWORD *)v104 + 3);
      if (v106 >= v105 >> 1)
        v104 = (double *)sub_100D10610((_QWORD *)(v105 > 1), v106 + 1, 1, v104);
      *((_QWORD *)v104 + 2) = v106 + 1;
      v173 = v104;
      v107 = &v104[3 * v106];
      *((_QWORD *)v107 + 4) = v99;
      *((_QWORD *)v107 + 5) = v94;
      *((_QWORD *)v107 + 6) = v96;
      v77 += 40;
      if (!--v75)
      {
        swift_bridgeObjectRelease();
        v73 = *(_QWORD *)(v0 + 1128);
        v71 = v176;
        v72 = v178;
        goto LABEL_53;
      }
    }
  }
  v173 = _swiftEmptyArrayStorage;
LABEL_53:
  v108 = *(_QWORD *)(v73 + 40);
  v109 = *(_QWORD *)(v108 + 16);
  if (!v109)
  {
    v111 = _swiftEmptyArrayStorage;
    goto LABEL_68;
  }
  v168 = (_QWORD *)(v0 + 704);
  v159 = *(_QWORD *)(v0 + 1080);
  v160 = v0 + 744;
  v171 = *(_QWORD *)(*(_QWORD *)(v0 + 1032) + 128);
  v110 = v108 + 32;
  v169 = type metadata accessor for PropertyListEncoder(0);
  swift_bridgeObjectRetain(v108);
  v111 = _swiftEmptyArrayStorage;
  while (2)
  {
    *(_QWORD *)(v0 + 728) = v169;
    *(_QWORD *)(v0 + 736) = &off_10129CD90;
    *(_QWORD *)(v0 + 704) = v171;
    sub_1004E90B0(v110, v0 + 584);
    v116 = *(_QWORD *)(v0 + 608);
    v117 = *(_QWORD *)(v0 + 616);
    sub_1004BB5A4((_QWORD *)(v0 + 584), v116);
    v118 = *(unsigned __int8 (**)(uint64_t, uint64_t, __n128))(v117 + 24);
    v119 = swift_retain(v171);
    if (v118(v116, v117, v119) != 5)
      goto LABEL_56;
    v120 = *(_QWORD *)(v0 + 1072);
    v121 = *(_QWORD *)(v0 + 1040);
    sub_1004E90B0(v0 + 584, v160);
    v122 = sub_1004B804C(&qword_10140BB50);
    v123 = swift_dynamicCast(v121, v160, v122, v120, 6);
    v124 = *(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v159 + 56);
    if (!v123)
    {
      v112 = *(_QWORD *)(v0 + 1040);
      v124(v112, 1, 1, *(_QWORD *)(v0 + 1072));
      sub_100C51A60(v112);
LABEL_56:
      v113 = *(_QWORD *)(v0 + 608);
      v114 = *(_QWORD *)(v0 + 616);
      sub_1004BB5A4((_QWORD *)(v0 + 584), v113);
      v115 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v114 + 32))(v168, v113, v114);
      v130 = v129;
      v167 = v115;
      v131 = *(_QWORD *)(v0 + 608);
      v132 = *(_QWORD *)(v0 + 616);
      sub_1004BB5A4((_QWORD *)(v0 + 584), v131);
      v133 = (*(uint64_t (**)(uint64_t, uint64_t))(v132 + 24))(v131, v132);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v168);
      goto LABEL_61;
    }
    v125 = *(_QWORD *)(v0 + 1088);
    v126 = *(_QWORD *)(v0 + 1040);
    v124(v126, 0, 1, *(_QWORD *)(v0 + 1072));
    sub_100C51AA0(v126, v125);
    v127 = sub_1005A8710();
    v128 = *(_QWORD *)(v0 + 1088);
    v130 = v134;
    v167 = (uint64_t)v127;
    v135 = *(_QWORD *)(v0 + 608);
    v182 = v111;
    v136 = *(_QWORD *)(v0 + 616);
    sub_1004BB5A4((_QWORD *)(v0 + 584), v135);
    v137 = *(uint64_t (**)(uint64_t, uint64_t))(v136 + 24);
    v138 = v136;
    v111 = v182;
    v133 = v137(v135, v138);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v168);
    sub_100C51AE4(v128);
LABEL_61:
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 584));
    if ((swift_isUniquelyReferenced_nonNull_native(v111) & 1) == 0)
      v111 = (double *)sub_100D10610(0, *((_QWORD *)v111 + 2) + 1, 1, v111);
    v140 = *((_QWORD *)v111 + 2);
    v139 = *((_QWORD *)v111 + 3);
    if (v140 >= v139 >> 1)
      v111 = (double *)sub_100D10610((_QWORD *)(v139 > 1), v140 + 1, 1, v111);
    *((_QWORD *)v111 + 2) = v140 + 1;
    v141 = &v111[3 * v140];
    *((_QWORD *)v141 + 4) = v133;
    *((_QWORD *)v141 + 5) = v167;
    *((_QWORD *)v141 + 6) = v130;
    v110 += 40;
    if (--v109)
      continue;
    break;
  }
  swift_bridgeObjectRelease();
  v71 = v176;
  v72 = v178;
LABEL_68:
  v142 = *(_QWORD *)(v0 + 1128);
  if (*(_BYTE *)(*(_QWORD *)(v0 + 1032) + 144) == 1)
  {
    swift_release(*(_QWORD *)(v0 + 1128));
    v143 = v173;
    v183 = v111;
  }
  else
  {
    sub_10062141C((uint64_t)v71);
    v176 = v72;
    swift_bridgeObjectRetain(v173);
    swift_bridgeObjectRetain(v111);
    sub_10062141C(v144);
    swift_release(v142);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v183 = v173;
    v143 = _swiftEmptyArrayStorage;
    v178 = _swiftEmptyArrayStorage;
  }
LABEL_71:
  v145 = sub_1004B804C(&qword_10140BB48);
  v146 = (_QWORD *)swift_allocObject(v145, 48, 7);
  v147 = *(_QWORD *)(v0 + 1112);
  v148 = *(_QWORD *)(v0 + 1104);
  v149 = *(_QWORD *)(v0 + 1096);
  v150 = *(_QWORD *)(v0 + 1088);
  v151 = *(_QWORD *)(v0 + 1064);
  v152 = *(_QWORD *)(v0 + 1056);
  v153 = *(_QWORD *)(v0 + 1048);
  v154 = *(_QWORD *)(v0 + 1040);
  v146[2] = v178;
  v146[3] = v176;
  v146[4] = v143;
  v146[5] = v183;
  swift_task_dealloc(v147);
  swift_task_dealloc(v148);
  swift_task_dealloc(v149);
  swift_task_dealloc(v150);
  swift_task_dealloc(v151);
  swift_task_dealloc(v152);
  swift_task_dealloc(v153);
  swift_task_dealloc(v154);
  return (*(uint64_t (**)(_QWORD *))(v0 + 8))(v146);
}

uint64_t sub_100C511AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[22] = a2;
  v3[23] = v2;
  v3[21] = a1;
  return swift_task_switch(sub_100C511C8, v2, 0);
}

uint64_t sub_100C511C8()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;

  v1 = _swiftEmptyArrayStorage;
  v0[20] = _swiftEmptyArrayStorage;
  v2 = v0 + 20;
  v3 = *(_QWORD *)(v0[21] + 24);
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    v5 = (uint64_t)(v0 + 2);
    v6 = v0 + 7;
    v24 = v0 + 12;
    v26 = *(_QWORD *)(v0[23] + 136);
    v25 = type metadata accessor for PropertyListDecoder(0);
    swift_bridgeObjectRetain(v3);
    v21 = v3;
    v22 = v0 + 20;
    v7 = (unint64_t *)(v3 + 48);
    do
    {
      v8 = *(v7 - 2);
      v9 = *(v7 - 1);
      v10 = *v7;
      v0[10] = v25;
      v0[11] = &off_10129CDA0;
      v0[7] = v26;
      sub_1004BE310(v9, v10);
      swift_retain(v26);
      sub_100C51510((uint64_t)v6, v8);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v6);
      sub_1004E90B0(v5, (uint64_t)v24);
      v11 = (_QWORD *)*v2;
      if ((swift_isUniquelyReferenced_nonNull_native(*v2) & 1) == 0)
      {
        v11 = sub_100D10748(0, v11[2] + 1, 1, v11);
        *v2 = v11;
      }
      v13 = v11[2];
      v12 = v11[3];
      if (v13 >= v12 >> 1)
        *v2 = sub_100D10748((_QWORD *)(v12 > 1), v13 + 1, 1, v11);
      v14 = v0[15];
      v23 = v0[16];
      v15 = sub_1004CB9AC((uint64_t)v24, v14);
      v16 = *(_QWORD *)(v14 - 8);
      v17 = swift_task_alloc((*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
      v18 = v15;
      v2 = v0 + 20;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v17, v18, v14);
      sub_1005C46A8(v13, v17, v22, v14, v23);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v24);
      swift_task_dealloc(v17);
      sub_1004BBBC8(v9, v10);
      v5 = (uint64_t)(v0 + 2);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 2);
      v6 = v0 + 7;
      v7 += 3;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease(v21);
    v1 = (_QWORD *)*v22;
  }
  v0[24] = v1;
  v19 = (_QWORD *)swift_task_alloc(dword_10140C07C);
  v0[25] = v19;
  *v19 = v0;
  v19[1] = sub_100C514A8;
  return sub_100C68E78((uint64_t)v1, v0[22]);
}

uint64_t sub_100C514A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 192);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 184);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 200));
  swift_bridgeObjectRelease(v1);
  return swift_task_switch(sub_100C51508, v2, 0);
}

uint64_t sub_100C51508()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100C51510(uint64_t a1, unint64_t a2)
{
  char *v2;

  v2 = (char *)sub_100C51578 + 4 * word_100F2F6F0[sub_1008F4828(a2)];
  __asm { BR              X10 }
}

uint64_t sub_100C51578()
{
  unsigned __int8 v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t (*v22)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v23[3];
  uint64_t v24;
  uint64_t v25[3];
  uint64_t v26;

  v7 = v5[3];
  v8 = v5[4];
  sub_1004BB5A4(v5, v7);
  v9 = type metadata accessor for CRLBoardRealTimeChangeRecord(0);
  v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8);
  v2[3] = v9;
  v2[4] = sub_1004B7878(&qword_1013EDC50, type metadata accessor for CRLBoardRealTimeChangeRecord, (uint64_t)&unk_100F10848);
  v10 = sub_1004B7878(&qword_1013EDC58, type metadata accessor for CRLBoardRealTimeChangeRecord, (uint64_t)&unk_100F107F8);
  result = v22(v9, v4, v1, v9, v10, v7, v8);
  if (v3)
  {
    sub_1006E6ED8(v2);
    v12 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v12, &v26);
    *(_OWORD *)(inited + 16) = xmmword_100EF5550;
    *(_QWORD *)(inited + 56) = &type metadata for Int;
    *(_QWORD *)(inited + 64) = &protocol witness table for Int;
    *(_QWORD *)(inited + 32) = v0;
    swift_getErrorValue(v3, v6 - 72, v25);
    v14 = Error.fullDescription.getter(v25[1]);
    v16 = v15;
    *(_QWORD *)(inited + 96) = &type metadata for String;
    v17 = sub_1004CFC2C();
    *(_QWORD *)(inited + 104) = v17;
    *(_QWORD *)(inited + 72) = v14;
    *(_QWORD *)(inited + 80) = v16;
    swift_getErrorValue(v3, &v24, v23);
    v18 = Error.publicDescription.getter(v23[1], v23[2]);
    *(_QWORD *)(inited + 136) = &type metadata for String;
    *(_QWORD *)(inited + 144) = v17;
    *(_QWORD *)(inited + 112) = v18;
    *(_QWORD *)(inited + 120) = v19;
    sub_100757E04(&_mh_execute_header, (uint64_t)"createRealTimeChangeRecord(decoder:)", 36, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLBoardRealTimeSyncDataSource.swift", 104, 2, 153, "Failed to decode real time change record of payloadType %{public}d with error %@ %{public}@", 91, 2u, inited);
    sub_1004F5394(inited, (uint64_t)"createRealTimeChangeRecord(decoder:)", 36, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLBoardRealTimeSyncDataSource.swift", 104, 2u, 153, (uint64_t)"Failed to decode real time change record of payloadType %{public}d with error %@ %{public}@", 91, 2u);
    swift_setDeallocating(inited);
    v20 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 3, v20);
    return swift_willThrow(v21);
  }
  return result;
}

uint64_t sub_100C519CC()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[14]);
  swift_release(v0[16]);
  swift_release(v0[17]);
  swift_defaultActor_destroy(v0);
  return swift_defaultActor_deallocate(v0);
}

uint64_t sub_100C51A00()
{
  return dispatch thunk of PropertyListEncoder.encode<A>(_:)();
}

uint64_t sub_100C51A20()
{
  return dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
}

uint64_t type metadata accessor for CRLBoardRealTimeSyncDataSource()
{
  return objc_opt_self(_TtC8Freeform30CRLBoardRealTimeSyncDataSource);
}

uint64_t sub_100C51A60(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B804C(&qword_10140BB40);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100C51AA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecord(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100C51AE4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecord(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100C51B24()
{
  unint64_t result;

  result = qword_10140BB58;
  if (!qword_10140BB58)
  {
    result = swift_getWitnessTable(&unk_100F2F870, &type metadata for CRLAddTextToBoardIntent);
    atomic_store(result, (unint64_t *)&qword_10140BB58);
  }
  return result;
}

unint64_t sub_100C51B6C()
{
  unint64_t result;

  result = qword_10140BB60;
  if (!qword_10140BB60)
  {
    result = swift_getWitnessTable(&unk_100F2F898, &type metadata for CRLAddTextToBoardIntent);
    atomic_store(result, (unint64_t *)&qword_10140BB60);
  }
  return result;
}

uint64_t sub_100C51BB0(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &unk_101137E30, 1) + 8);
}

uint64_t sub_100C51BD4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_101137E08, 1);
}

uint64_t sub_100C51BE4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(_BYTE *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(_BYTE *, uint64_t, uint64_t);
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  _BYTE *v38;
  _BYTE *v39;
  uint64_t v40;
  _BYTE *v41;
  _BYTE *v42;
  _BYTE *v43;
  uint64_t v44;
  _BYTE *v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(_BYTE *, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  _BYTE *v55;
  _BYTE *v56;
  _BYTE *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t result;
  _BYTE v61[12];
  unsigned int v62;
  uint64_t v63;
  void (*v64)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v65;
  unsigned int v66;
  _BYTE *v67;
  _BYTE *v68;
  void (*v69)(_BYTE *, _QWORD, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  _BYTE *v72;
  _BYTE *v73;
  uint64_t v74;
  uint64_t *v75;
  _BYTE *v76;
  _BYTE *v77;
  _BYTE *v78;
  uint64_t v79;
  _QWORD v80[2];
  char v81[56];

  v75 = a1;
  v1 = sub_1004B804C(&qword_1013E5380);
  __chkstk_darwin(v1);
  v76 = &v61[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v79 = type metadata accessor for InputConnectionBehavior(0);
  v74 = *(_QWORD *)(v79 - 8);
  __chkstk_darwin(v79);
  v78 = &v61[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_1004B804C(&qword_1013E1110);
  __chkstk_darwin(v4);
  v73 = &v61[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v77 = &v61[-v7];
  v8 = sub_1004B804C(&qword_1013FE140);
  __chkstk_darwin(v8);
  v72 = &v61[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_1004B804C(&qword_1013E1118);
  __chkstk_darwin(v10);
  v12 = &v61[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = &v61[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = type metadata accessor for Locale(0);
  __chkstk_darwin(v17);
  v19 = &v61[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v20);
  v22 = &v61[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v23 = type metadata accessor for LocalizedStringResource(0);
  v24 = *(_QWORD *)(v23 - 8);
  v70 = v23;
  __chkstk_darwin(v23);
  v67 = &v61[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v26);
  v68 = &v61[-v27];
  v71 = sub_1004B804C(&qword_1013E1120);
  v28 = String.LocalizationValue.init(stringLiteral:)(0x6472616F42, 0xE500000000000000);
  static Locale.current.getter(v28);
  v29 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v30 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v14 + 104);
  v30(v16, enum case for LocalizedStringResource.BundleDescription.main(_:), v13);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v22, 0x6E497070414C5243, 0xED000073746E6574, v19, v16, "Parameter title for a board", 27, 2);
  v31 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001ALL, 0x8000000101004810);
  static Locale.current.getter(v31);
  v62 = v29;
  v32 = v13;
  v33 = v13;
  v63 = v13;
  v34 = v30;
  v64 = v30;
  v30(v16, v29, v32);
  v65 = v12;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v22, 0x6E497070414C5243, 0xED000073746E6574, v19, v16, "Parameter description for a board", 33, 2);
  v69 = *(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v24 + 56);
  v69(v12, 0, 1, v23);
  v35 = type metadata accessor for CRLBoardEntity(0);
  v36 = v72;
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v72, 1, 1, v35);
  v37 = String.LocalizationValue.init(stringLiteral:)(0x6F62206863696857, 0xEC0000003F647261);
  static Locale.current.getter(v37);
  v34(v16, v29, v33);
  v38 = v67;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v22, 0x6E497070414C5243, 0xED000073746E6574, v19, v16, "Prompt for selecting a board from the list", 42, 2);
  v39 = v77;
  IntentDialog.init(_:)(v38);
  v40 = type metadata accessor for IntentDialog(0);
  v41 = *(_BYTE **)(*(_QWORD *)(v40 - 8) + 56);
  v67 = v41;
  ((void (*)(_BYTE *, _QWORD, uint64_t, uint64_t))v41)(v39, 0, 1, v40);
  v42 = v73;
  ((void (*)(_BYTE *, uint64_t, uint64_t, uint64_t))v41)(v73, 1, 1, v40);
  v66 = enum case for InputConnectionBehavior.default(_:);
  v74 = *(_QWORD *)(v74 + 104);
  v43 = v78;
  ((void (*)(_BYTE *))v74)(v78);
  v44 = sub_1004B7878((unint64_t *)&qword_1013E1138, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F062EC);
  v45 = v68;
  v46 = v65;
  v47 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v68, v65, v36, v39, v42, v43, v44);
  v48 = v75;
  *v75 = v47;
  v73 = (_BYTE *)sub_1004B804C(&qword_1013E5388);
  v49 = String.LocalizationValue.init(stringLiteral:)(1954047316, 0xE400000000000000);
  static Locale.current.getter(v49);
  v50 = v62;
  v51 = v63;
  v52 = v64;
  v64(v16, v62, v63);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v22, 0x6E497070414C5243, 0xED000073746E6574, v19, v16, "Intent parameter title for text", 31, 2);
  v53 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001FLL, 0x8000000101004830);
  static Locale.current.getter(v53);
  v52(v16, v50, v51);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v22, 0x6E497070414C5243, 0xED000073746E6574, v19, v16, "Parameter description for text", 30, 2);
  v69(v46, 0, 1, v70);
  v54 = type metadata accessor for AttributedString(0);
  v55 = v76;
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v76, 1, 1, v54);
  v56 = v77;
  ((void (*)(_BYTE *, uint64_t, uint64_t, uint64_t))v67)(v77, 1, 1, v40);
  v57 = v78;
  ((void (*)(_BYTE *, _QWORD, uint64_t))v74)(v78, v66, v79);
  v48[1] = IntentParameter<>.init(title:description:default:requestValueDialog:inputConnectionBehavior:)(v45, v46, v55, v56, v57);
  sub_1004B804C(&qword_1013E1128);
  v80[0] = 0xD00000000000001FLL;
  v80[1] = 0x8000000100FAFD20;
  AnyHashable.init<A>(_:)(v80, &type metadata for String, &protocol witness table for String);
  v58 = type metadata accessor for AppDependencyManager(0);
  v59 = static AppDependencyManager.shared.getter(v58);
  result = AppDependency.__allocating_init(key:manager:)(v81, v59);
  v48[2] = result;
  v48[6] = (uint64_t)&type metadata for CRLBoardItemInsertionPerformer;
  v48[7] = (uint64_t)&off_101291088;
  return result;
}

uint64_t sub_100C52378(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2[12] = a1;
  v2[13] = v1;
  v3 = sub_1004B804C(&qword_1013E5380);
  v2[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRLBoardEntity(0);
  v2[15] = v4;
  v5 = (*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[16] = swift_task_alloc(v5);
  v2[17] = swift_task_alloc(v5);
  v6 = type metadata accessor for Logger(0);
  v2[18] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[19] = v7;
  v2[20] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100C52430, 0, 0);
}

uint64_t sub_100C52430()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  char *v6;

  if (qword_1013DD838 != -1)
    swift_once(&qword_1013DD838, sub_100A04F30);
  v1 = (_QWORD *)v0[17];
  v2 = (_QWORD *)v0[14];
  swift_beginAccess(&static OS_os_log.appIntents, v0 + 7, 0, 0);
  Logger.init(_:)((id)static OS_os_log.appIntents);
  IntentParameter.wrappedValue.getter(v1);
  v3 = IntentParameter.wrappedValue.getter(v2);
  AppDependency.wrappedValue.getter(v3);
  v0[5] = &type metadata for CRLBoardLibraryProvidingDependency;
  v0[6] = &off_10129B490;
  v6 = (char *)&dword_101402390 + dword_101402390;
  v4 = (_QWORD *)swift_task_alloc(unk_101402394);
  v0[21] = v4;
  *v4 = v0;
  v4[1] = sub_100C52548;
  return ((uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD *))v6)(7, v0[17], v0[14], v0 + 2);
}

uint64_t sub_100C52548(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 168);
  *(_QWORD *)(*(_QWORD *)v2 + 176) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = v4[17];
    sub_1005B858C(v4[14]);
    sub_1005761B8(v6);
    v7 = sub_100C525F4;
  }
  else
  {
    v8 = v4 + 2;
    v9 = v4[17];
    v10 = v4[14];

    sub_1005B858C(v10);
    sub_1005761B8(v9);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v8);
    v7 = sub_1005B7D94;
  }
  return swift_task_switch(v7, 0, 0);
}

uint64_t sub_100C525F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;

  v1 = *(_QWORD *)(v0 + 176);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 16));
  swift_errorRetain(v1);
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(_QWORD *)(v0 + 176);
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v6 = 138412290;
    swift_errorRetain(v5);
    v8 = _swift_stdlib_bridgeErrorToNSError(v5);
    *(_QWORD *)(v0 + 80) = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 80, v0 + 88, v6 + 4, v6 + 12);
    *v7 = v8;
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Error inserting text: %@", v6, 0xCu);
    v9 = sub_1004B804C(&qword_1013E53A8);
    swift_arrayDestroy(v7, 1, v9);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

  }
  else
  {
    v10 = *(_QWORD *)(v0 + 176);

    swift_errorRelease(v10);
    swift_errorRelease(v10);
  }
  v11 = *(_QWORD *)(v0 + 176);
  v13 = *(_QWORD *)(v0 + 152);
  v12 = *(_QWORD *)(v0 + 160);
  v15 = *(_QWORD *)(v0 + 136);
  v14 = *(_QWORD *)(v0 + 144);
  v16 = *(_QWORD *)(v0 + 128);
  v17 = *(_QWORD *)(v0 + 112);
  v18 = type metadata accessor for _PrebuiltAppIntentError(0);
  v19 = sub_1004B7878((unint64_t *)&qword_1013E53A0, (uint64_t (*)(uint64_t))&type metadata accessor for _PrebuiltAppIntentError, (uint64_t)&protocol conformance descriptor for _PrebuiltAppIntentError);
  swift_allocError(v18, v19, 0, 0);
  v20.n128_f64[0] = static _UnrecoverableError.unknownError.getter();
  swift_willThrow(v20);
  swift_errorRelease(v11);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  swift_task_dealloc(v12);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100C52818(uint64_t a1)
{
  return sub_100B2EDF0(a1, qword_101481130, 0x7478655420646441, 0xE800000000000000);
}

uint64_t sub_100C52838()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t KeyPath;
  uint64_t v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  Swift::String v13;
  uint64_t v15;

  v0 = sub_1004B804C(&qword_10140BC10);
  __chkstk_darwin(v0);
  v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1004B804C(&qword_10140BC18);
  __chkstk_darwin(v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100C54004();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(22, 2, &type metadata for CRLAddTextToBoardIntent, v6);
  v7._object = (void *)0x8000000101004930;
  v7._countAndFlagsBits = 0xD000000000000012;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(byte_100F2FA40);
  v9 = sub_1004B804C(&qword_10140BC20);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v3, v9);
  swift_release(KeyPath);
  v10._countAndFlagsBits = 544175136;
  v10._object = (void *)0xE400000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v10);
  v11 = swift_getKeyPath(byte_100F2FA68);
  v12 = sub_1004B804C(&qword_10140BC28);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(v11, v3, v12);
  swift_release(v11);
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v13);
  ParameterSummaryString.init(stringInterpolation:)(v5, &type metadata for CRLAddTextToBoardIntent, v6);
  return IntentParameterSummary.init(_:table:)(v2, 0x6E497070414C5243, 0xED000073746E6574, &type metadata for CRLAddTextToBoardIntent, v6);
}

_QWORD *sub_100C52A00@<X0>(_QWORD *a1@<X8>)
{
  return IntentParameter.wrappedValue.getter(a1);
}

uint64_t sub_100C52A20()
{
  uint64_t v1;

  IntentParameter.wrappedValue.getter(&v1);
  return v1;
}

uint64_t sub_100C52A50()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t sub_100C52A70@<X0>(uint64_t a1@<X8>)
{
  return sub_1008C9920(&qword_1013DDDF0, (uint64_t)qword_101481130, (uint64_t)sub_100C52818, a1);
}

uint64_t sub_100C52A90(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_10140BC0C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1004CF80C;
  return sub_100C52378(a1);
}

uint64_t sub_100C52AE4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C54004();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

unint64_t sub_100C52B10()
{
  unint64_t result;

  result = qword_10140BB70;
  if (!qword_10140BB70)
  {
    result = swift_getWitnessTable(&unk_100F2F944, &type metadata for CRLInsertTextToBoardIntent);
    atomic_store(result, (unint64_t *)&qword_10140BB70);
  }
  return result;
}

unint64_t sub_100C52B58()
{
  unint64_t result;

  result = qword_10140BB78;
  if (!qword_10140BB78)
  {
    result = swift_getWitnessTable(&unk_100F2F96C, &type metadata for CRLInsertTextToBoardIntent);
    atomic_store(result, (unint64_t *)&qword_10140BB78);
  }
  return result;
}

uint64_t sub_100C52B9C(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &unk_101137DC4, 1) + 8);
}

uint64_t sub_100C52BC0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_101137D9C, 1);
}

uint64_t sub_100C52BD0(uint64_t a1)
{
  return sub_100B2EDF0(a1, qword_101481148, 0x5420747265736E49, 0xEB00000000747865);
}

uint64_t sub_100C52BF8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  Swift::String v14;
  uint64_t KeyPath;
  uint64_t v16;
  Swift::String v17;
  uint64_t v18;
  uint64_t v19;
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  Swift::String v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  _QWORD v27[2];

  v27[1] = a1;
  v1 = sub_1004B804C(&qword_10140BBD8);
  __chkstk_darwin(v1);
  v3 = (char *)v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1004B804C(&qword_10140BBE0);
  __chkstk_darwin(v4);
  v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_10140BBC0);
  v27[0] = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)v27 - v11;
  v13 = sub_100C53F48();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(15, 3, &type metadata for CRLInsertTextToBoardIntent, v13);
  v14._countAndFlagsBits = 0x20747265736E49;
  v14._object = (void *)0xE700000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v14);
  KeyPath = swift_getKeyPath(byte_100F2F9F0);
  v16 = sub_1004B804C(&qword_10140BBE8);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v4, v16);
  swift_release(KeyPath);
  v17._countAndFlagsBits = 544106784;
  v17._object = (void *)0xE400000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v17);
  v18 = swift_getKeyPath(asc_100F2F9C8);
  v19 = sub_1004B804C(&qword_10140BBF8);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(v18, v4, v19);
  swift_release(v18);
  v20._countAndFlagsBits = 544108320;
  v20._object = (void *)0xE400000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v20);
  v21 = swift_getKeyPath(byte_100F2FA18);
  v22 = sub_1004B804C(&qword_10140BBF0);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(v21, v4, v22);
  swift_release(v21);
  v23._countAndFlagsBits = 0;
  v23._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v23);
  ParameterSummaryString.init(stringInterpolation:)(v6, &type metadata for CRLInsertTextToBoardIntent, v13);
  IntentParameterSummary.init(_:table:)(v3, 0x6E497070414C5243, 0xED000073746E6574, &type metadata for CRLInsertTextToBoardIntent, v13);
  v24 = sub_1004CBA30(&qword_10140BBC8, &qword_10140BBC0, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
  static ParameterSummaryBuilder.buildExpression<A>(_:)(v9, &type metadata for CRLInsertTextToBoardIntent, v7, v24);
  v25 = *(void (**)(char *, uint64_t))(v27[0] + 8);
  v25(v9, v7);
  static ParameterSummaryBuilder.buildBlock<A>(_:)(v12, &type metadata for CRLInsertTextToBoardIntent, v7, v24);
  return ((uint64_t (*)(char *, uint64_t))v25)(v12, v7);
}

uint64_t sub_100C52EE0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  Swift::String v15;
  uint64_t KeyPath;
  uint64_t v17;
  Swift::String v18;
  uint64_t v19;
  uint64_t v20;
  Swift::String v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  _QWORD v25[2];

  v25[1] = a1;
  v1 = sub_1004B804C(&qword_10140BBD8);
  __chkstk_darwin(v1);
  v3 = (char *)v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1004B804C(&qword_10140BBE0);
  __chkstk_darwin(v4);
  v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_10140BBC0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)v25 - v12;
  v14 = sub_100C53F48();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(11, 2, &type metadata for CRLInsertTextToBoardIntent, v14);
  v15._countAndFlagsBits = 0x20747265736E49;
  v15._object = (void *)0xE700000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v15);
  KeyPath = swift_getKeyPath(byte_100F2F9F0);
  v17 = sub_1004B804C(&qword_10140BBE8);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v4, v17);
  swift_release(KeyPath);
  v18._countAndFlagsBits = 544108320;
  v18._object = (void *)0xE400000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v18);
  v19 = swift_getKeyPath(byte_100F2FA18);
  v20 = sub_1004B804C(&qword_10140BBF0);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(v19, v4, v20);
  swift_release(v19);
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v21);
  ParameterSummaryString.init(stringInterpolation:)(v6, &type metadata for CRLInsertTextToBoardIntent, v14);
  IntentParameterSummary.init(_:table:_:)(v3, 0x6E497070414C5243, 0xED000073746E6574, sub_100C53180, 0, &type metadata for CRLInsertTextToBoardIntent, v14);
  v22 = sub_1004CBA30(&qword_10140BBC8, &qword_10140BBC0, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
  static ParameterSummaryBuilder.buildExpression<A>(_:)(v10, &type metadata for CRLInsertTextToBoardIntent, v7, v22);
  v23 = *(void (**)(char *, uint64_t))(v8 + 8);
  v23(v10, v7);
  static ParameterSummaryBuilder.buildBlock<A>(_:)(v13, &type metadata for CRLInsertTextToBoardIntent, v7, v22);
  return ((uint64_t (*)(char *, uint64_t))v23)(v13, v7);
}

uint64_t sub_100C53180()
{
  uint64_t KeyPath;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v8;

  KeyPath = swift_getKeyPath(asc_100F2F9C8);
  v1 = sub_100C53F48();
  v2 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildExpression<A>(_:)(KeyPath, v1);
  swift_release(KeyPath);
  v3 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v4 = swift_allocObject(v3, 40, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100EEF400;
  *(_QWORD *)(v4 + 32) = v2;
  v8 = v4;
  specialized Array._endMutation()(v4);
  v5 = swift_retain(v2);
  v6 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildBlock(_:)(v8, &type metadata for CRLInsertTextToBoardIntent, v1, v5);
  swift_bridgeObjectRelease();
  swift_release(v2);
  return v6;
}

uint64_t sub_100C53244@<X0>(uint64_t a1@<X8>)
{
  return sub_1008C9920(&qword_1013DDDF8, (uint64_t)qword_101481148, (uint64_t)sub_100C52BD0, a1);
}

uint64_t sub_100C53260(uint64_t a1, uint64_t a2)
{
  uint64_t HasValueComparisonOperator;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  HasValueComparisonOperator = type metadata accessor for HasValueComparisonOperator(0);
  v4 = *(_QWORD *)(HasValueComparisonOperator - 8);
  *(_QWORD *)&v5 = __chkstk_darwin(HasValueComparisonOperator).n128_u64[0];
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(asc_100F2F9C8, v5);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v7, enum case for HasValueComparisonOperator.hasAnyValue(_:), HasValueComparisonOperator);
  v9 = sub_1004B804C(&qword_10140BBC0);
  v10 = sub_1004CBA30(&qword_10140BBC8, &qword_10140BBC0, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
  v11 = sub_1004CBA30(&qword_10140BBD0, &qword_10140BBB0, (uint64_t)&protocol conformance descriptor for IntentParameter<A>);
  return ParameterSummaryWhenCondition.init<A>(_:_:_:otherwise:)(KeyPath, v7, sub_100C52BF8, 0, sub_100C52EE0, 0, v9, v9, a2, v10, v10, v11);
}

uint64_t sub_100C53384(uint64_t a1)
{
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[3] = a1;
  v3 = type metadata accessor for CRLBoardEntity(0);
  v2[4] = v3;
  v4 = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v1;
  v2[5] = v4;
  v2[6] = v5;
  return swift_task_switch(sub_100C533E4, 0, 0);
}

uint64_t sub_100C533E4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = *(_QWORD **)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = IntentParameter.wrappedValue.getter(v1);
  v4 = IntentParameter.projectedValue.getter(v3);
  *(_QWORD *)(v0 + 16) = v4;
  v5 = sub_1004B7878((unint64_t *)&qword_1013E3448, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F064FC);
  v6 = sub_1005761F4();
  static IntentResult.result<A, B>(value:opensIntent:)(v1, v0 + 16, v2, &type metadata for CRLOpenBoardIntent, v5, v6);
  swift_release(v4);
  sub_1005761B8((uint64_t)v1);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

char *sub_100C534A0@<X0>(char **a1@<X8>)
{
  char *result;
  char *v3;
  char *v4;
  char *v5;

  result = sub_100C536D4();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return result;
}

uint64_t sub_100C534C8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C53F48();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

double destroy for CRLInsertTextToBoardIntent(_QWORD *a1)
{
  double result;

  swift_release(*a1);
  swift_release(a1[1]);
  swift_release(a1[2]);
  *(_QWORD *)&result = swift_release(a1[3]).n128_u64[0];
  return result;
}

uint64_t *initializeWithCopy for CRLInsertTextToBoardIntent(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[2];
  v6 = a2[3];
  a1[2] = v5;
  a1[3] = v6;
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  return a1;
}

uint64_t *assignWithCopy for CRLInsertTextToBoardIntent(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = a2[2];
  v9 = a1[2];
  a1[2] = v8;
  swift_retain(v8);
  swift_release(v9);
  v10 = a2[3];
  v11 = a1[3];
  a1[3] = v10;
  swift_retain(v10);
  swift_release(v11);
  return a1;
}

_QWORD *assignWithTake for CRLInsertTextToBoardIntent(_QWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  swift_release(v4);
  swift_release(a1[2]);
  v5 = a1[3];
  *((_OWORD *)a1 + 1) = a2[1];
  swift_release(v5);
  return a1;
}

ValueMetadata *type metadata accessor for CRLInsertTextToBoardIntent()
{
  return &type metadata for CRLInsertTextToBoardIntent;
}

ValueMetadata *type metadata accessor for CRLAddTextToBoardIntent()
{
  return &type metadata for CRLAddTextToBoardIntent;
}

uint64_t sub_100C5367C()
{
  return sub_1004CBA30(&qword_10140BB88, &qword_10140BB90, (uint64_t)&protocol conformance descriptor for ParameterSummaryWhenCondition<A, B, C>);
}

uint64_t sub_100C536A8()
{
  return sub_1004CBA30(&qword_10140BB98, &qword_10140BBA0, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

char *sub_100C536D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t, uint64_t);
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  void (*v47)(char *, uint64_t, uint64_t, uint64_t);
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t);
  uint64_t v53;
  char *v54;
  void (*v55)(char *, uint64_t, uint64_t, uint64_t);
  char *v56;
  char *v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v61;
  char *v62;
  void (*v63)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v64;
  unsigned int v65;
  char *v66;
  char *v67;
  unsigned int v68;
  void (*v69)(char *, uint64_t, uint64_t);
  uint64_t v70;
  char *v71;
  uint64_t v72;
  void (*v73)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  _QWORD v78[2];
  _BYTE v79[56];

  v0 = sub_1004B804C(&qword_1013E5380);
  __chkstk_darwin(v0);
  v67 = (char *)&v61 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = type metadata accessor for InputConnectionBehavior(0);
  v72 = *(_QWORD *)(v77 - 8);
  __chkstk_darwin(v77);
  v76 = (char *)&v61 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1004B804C(&qword_1013E1110);
  __chkstk_darwin(v3);
  v71 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v75 = (char *)&v61 - v6;
  v7 = sub_1004B804C(&qword_1013FE140);
  __chkstk_darwin(v7);
  v66 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C(&qword_1013E1118);
  __chkstk_darwin(v9);
  v11 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = v12;
  __chkstk_darwin(v12);
  v16 = (char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Locale(0);
  __chkstk_darwin(v17);
  v19 = (char *)&v61 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v20);
  v22 = (char *)&v61 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for LocalizedStringResource(0);
  v24 = *(_QWORD *)(v23 - 8);
  v74 = v23;
  __chkstk_darwin(v23);
  v62 = (char *)&v61 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = sub_1004B804C(&qword_1013E1120);
  v26 = String.LocalizationValue.init(stringLiteral:)(0x6472616F42, 0xE500000000000000);
  static Locale.current.getter(v26);
  v27 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v28 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 104);
  v68 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v70 = v14;
  v28(v16, enum case for LocalizedStringResource.BundleDescription.main(_:), v14);
  v69 = v28;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v22, 0x6E497070414C5243, 0xED000073746E6574, v19, v16, "Parameter title for a board", 27, 2);
  v29 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000014, 0x8000000101004850);
  static Locale.current.getter(v29);
  v28(v16, v27, v14);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v22, 0x6E497070414C5243, 0xED000073746E6574, v19, v16, "Parameter description for a board", 33, 2);
  v73 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56);
  v73(v11, 0, 1, v23);
  v30 = type metadata accessor for CRLBoardEntity(0);
  v31 = v66;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v66, 1, 1);
  v32 = type metadata accessor for IntentDialog(0);
  v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56);
  v63 = v33;
  v34 = v75;
  v33(v75, 1, 1, v32);
  v35 = v71;
  v33(v71, 1, 1, v32);
  v65 = enum case for InputConnectionBehavior.default(_:);
  v72 = *(_QWORD *)(v72 + 104);
  v36 = v76;
  ((void (*)(char *))v72)(v76);
  v37 = sub_1004B7878((unint64_t *)&qword_1013E1138, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F062EC);
  v38 = v62;
  v66 = (char *)IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v62, v11, v31, v34, v35, v36, v37);
  v64 = sub_1004B804C(&qword_10140BBA8);
  v39 = String.LocalizationValue.init(stringLiteral:)(1954047316, 0xE400000000000000);
  static Locale.current.getter(v39);
  v40 = v68;
  v41 = v69;
  v42 = v70;
  v69(v16, v68, v70);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v22, 0x6E497070414C5243, 0xED000073746E6574, v19, v16, "Intent parameter title for text", 31, 2);
  v43 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000018, 0x8000000101004870);
  static Locale.current.getter(v43);
  v41(v16, v40, v42);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v22, 0x6E497070414C5243, 0xED000073746E6574, v19, v16, "Parameter description for text", 30, 2);
  v73(v11, 0, 1, v74);
  v44 = type metadata accessor for AttributedString(0);
  v45 = v67;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v67, 1, 1, v44);
  v46 = v75;
  v47 = v63;
  v63(v75, 1, 1, v32);
  v48 = v76;
  ((void (*)(char *, _QWORD, uint64_t))v72)(v76, enum case for InputConnectionBehavior.connectToPreviousIntentResult(_:), v77);
  v67 = (char *)IntentParameter<>.init(title:description:default:requestValueDialog:inputConnectionBehavior:)(v38, v11, v45, v46, v48);
  v64 = sub_1004B804C(&qword_10140BBB0);
  v49 = String.LocalizationValue.init(stringLiteral:)(0x656E6961746E6F43, 0xE900000000000072);
  static Locale.current.getter(v49);
  v50 = v68;
  v52 = v69;
  v51 = v70;
  v69(v16, v68, v70);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v22, 0x6E497070414C5243, 0xED000073746E6574, v19, v16, "Intent parameter title for text container", 41, 2);
  v53 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000034, 0x80000001010048C0);
  static Locale.current.getter(v53);
  v52(v16, v50, v51);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v22, 0x6E497070414C5243, 0xED000073746E6574, v19, v16, "Parameter description for text container", 40, 2);
  v73(v11, 0, 1, v74);
  v79[0] = 2;
  v54 = v75;
  v55 = v47;
  v47(v75, 1, 1, v32);
  v56 = v71;
  v55(v71, 1, 1, v32);
  v57 = v76;
  ((void (*)(char *, _QWORD, uint64_t))v72)(v76, v65, v77);
  v58 = sub_1009EE0C4();
  IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)(v38, v11, v79, v54, v56, v57, &off_101265AD0, v58);
  sub_1004B804C(&qword_1013E1128);
  v78[0] = 0xD00000000000001FLL;
  v78[1] = 0x8000000100FAFD20;
  AnyHashable.init<A>(_:)(v78, &type metadata for String, &protocol witness table for String);
  type metadata accessor for AppDependencyManager(0);
  v59 = static AppDependencyManager.shared.getter();
  AppDependency.__allocating_init(key:manager:)(v79, v59);
  return v66;
}

unint64_t sub_100C53F48()
{
  unint64_t result;

  result = qword_10140BBB8;
  if (!qword_10140BBB8)
  {
    result = swift_getWitnessTable(&unk_100F2F8B4, &type metadata for CRLInsertTextToBoardIntent);
    atomic_store(result, (unint64_t *)&qword_10140BBB8);
  }
  return result;
}

uint64_t sub_100C53F8C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100C53FB4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100C53FDC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

unint64_t sub_100C54004()
{
  unint64_t result;

  result = qword_10140BC00;
  if (!qword_10140BC00)
  {
    result = swift_getWitnessTable(&unk_100F2F7E0, &type metadata for CRLAddTextToBoardIntent);
    atomic_store(result, &qword_10140BC00);
  }
  return result;
}

uint64_t sub_100C54048@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100C54070@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

char *sub_100C54098(void *a1, void *a2, void *a3, void *a4)
{
  _BYTE *v4;
  char *v9;
  char *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  NSString v16;
  id v17;
  id v18;
  char *v19;
  id v20;
  void *v21;
  objc_super v23;

  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_textBuilder] = 0;
  v9 = &v4[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_editor];
  swift_unknownObjectWeakInit(&v4[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_editor]);
  v10 = &v4[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_stateManager];
  swift_unknownObjectWeakInit(&v4[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_stateManager]);
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedNavigationController] = 0;
  v4[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_isPresentingTextFormatCardUI] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedAuxiliaryViewController] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_toolbar] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_auxiliaryPresentedBuilder] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_inputViewStateAtLastReload] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController__leadingBarButtonGroups] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController__trailingBarButtonGroups] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_icc] = a1;
  swift_unknownObjectWeakAssign(v9, a2);
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_editorController] = a3;
  swift_unknownObjectWeakAssign(v10, a4);
  v23.receiver = v4;
  v23.super_class = (Class)type metadata accessor for CRLiOSMiniFormatterTextEditingAccessoryViewController();
  v11 = a1;
  v12 = a3;
  v13 = objc_msgSendSuper2(&v23, "initWithNibName:bundle:", 0, 0);
  v14 = objc_allocWithZone((Class)CRLQuickInspectorElement);
  v15 = v13;
  v16 = String._bridgeToObjectiveC()();
  v17 = objc_msgSend(v14, "initWithName:image:type:options:", v16, 0, 2, 16);

  objc_allocWithZone((Class)type metadata accessor for CRLiOSMiniFormatterTextBuilder());
  v18 = v11;
  v19 = (char *)v15;
  v20 = sub_1004FFFB0((uint64_t)v15, (uint64_t)&off_10129CFA0, (uint64_t)&off_10129CFE8, v17, v12, v11, 0, 0, 0.0, 0, 0, 0, 0);

  v21 = *(void **)&v19[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_textBuilder];
  *(_QWORD *)&v19[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_textBuilder] = v20;

  return v19;
}

void sub_100C54390()
{
  char *v0;
  id v1;
  id v2;
  Class isa;
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  Class v28;
  id v29;

  v1 = objc_msgSend(v0, "inputView");
  if (v1)
  {
    v29 = v1;
    objc_msgSend(v1, "setAllowsSelfSizing:", 1);
    v2 = objc_msgSend(objc_allocWithZone((Class)UIToolbar), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    sub_100C54780();
    sub_1004B8930(0, (unint64_t *)&qword_1013E19A0, UIBarButtonItem_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v2, "setItems:", isa, swift_bridgeObjectRelease().n128_f64[0]);

    v4 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
    objc_msgSend(v2, "setTintColor:", v4);

    v5 = OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_toolbar;
    v6 = *(void **)&v0[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_toolbar];
    *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_toolbar] = v2;

    v7 = *(void **)&v0[v5];
    if (v7)
    {
      v8 = v7;
      objc_msgSend(v29, "addSubview:", v8);
      v9 = (void *)objc_opt_self(NSLayoutConstraint);
      v10 = sub_1004B804C((uint64_t *)&unk_1013E4180);
      v11 = swift_allocObject(v10, 72, 7);
      *(_OWORD *)(v11 + 16) = xmmword_100EF7D00;
      v12 = objc_msgSend(v29, "leadingAnchor");
      v13 = objc_msgSend(v8, "leadingAnchor");
      v14 = objc_msgSend(v12, "constraintEqualToAnchor:", v13);

      *(_QWORD *)(v11 + 32) = v14;
      v15 = objc_msgSend(v29, "trailingAnchor");
      v16 = objc_msgSend(v8, "trailingAnchor");
      v17 = objc_msgSend(v15, "constraintEqualToAnchor:", v16);

      *(_QWORD *)(v11 + 40) = v17;
      v18 = objc_msgSend(v29, "topAnchor");
      v19 = objc_msgSend(v8, "topAnchor");
      v20 = objc_msgSend(v18, "constraintEqualToAnchor:", v19);

      *(_QWORD *)(v11 + 48) = v20;
      v21 = objc_msgSend(v29, "safeAreaLayoutGuide");
      v22 = objc_msgSend(v21, "bottomAnchor");

      v23 = objc_msgSend(v8, "bottomAnchor");
      v24 = objc_msgSend(v22, "constraintEqualToAnchor:", v23);

      *(_QWORD *)(v11 + 56) = v24;
      v25 = objc_msgSend(v8, "heightAnchor");
      v26 = objc_msgSend(v25, "constraintEqualToConstant:", 44.0);

      *(_QWORD *)(v11 + 64) = v26;
      specialized Array._endMutation()(v27);
      sub_1004B8930(0, (unint64_t *)&qword_1013E1760, NSLayoutConstraint_ptr);
      v28 = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v9, "activateConstraints:", v28, swift_bridgeObjectRelease().n128_f64[0]);

    }
  }
}

id sub_100C54780()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id result;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  id v19;

  v1 = v0;
  v2 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v3 = swift_allocObject(v2, 104, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100F2FAA0;
  *(_QWORD *)(v3 + 32) = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 5, 0, 0);
  *(_QWORD *)(v3 + 40) = sub_100C5498C();
  result = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 5, 0, 0);
  *(_QWORD *)(v3 + 48) = result;
  v5 = OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_textBuilder;
  v6 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_textBuilder);
  if (!v6)
  {
    __break(1u);
    goto LABEL_6;
  }
  v7 = v6;
  v8 = sub_1004F7D04(1);

  v9 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithCustomView:", v8);
  *(_QWORD *)(v3 + 56) = v9;
  result = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 5, 0, 0);
  *(_QWORD *)(v3 + 64) = result;
  v10 = *(void **)(v1 + v5);
  if (!v10)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v11 = v10;
  v12 = (void *)sub_1004FB330(1, 0, 1);

  v13 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithCustomView:", v12);
  *(_QWORD *)(v3 + 72) = v13;
  result = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 5, 0, 0);
  *(_QWORD *)(v3 + 80) = result;
  v14 = *(void **)(v1 + v5);
  if (v14)
  {
    v15 = v14;
    sub_1004FCD10(1, 0, 1);
    v17 = v16;

    v18 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithCustomView:", v17);
    *(_QWORD *)(v3 + 88) = v18;
    v19 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 5, 0, 0);
    *(_QWORD *)(v3 + 96) = v19;
    specialized Array._endMutation()(v19);
    return (id)v3;
  }
LABEL_7:
  __break(1u);
  return result;
}

Class sub_100C5498C()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  NSString v7;
  id v8;
  id v9;
  uint64_t Strong;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  Class result;
  char *v17;
  void *v18;
  uint64_t v19;
  char *v20;
  Swift::String v21;
  Class v22;
  void *v23;
  id v24;
  Class isa;
  id v26;
  uint64_t v27;
  _QWORD *preferredElementSize;
  Swift::OpaquePointer v29;
  UIImage_optional v30;
  UIImage_optional v31;
  UIAction_optional v32;
  UIMenu_optional v33;

  v1 = v0;
  v2 = (void *)objc_opt_self(UIFont);
  v3 = objc_msgSend(v0, "traitCollection");
  v4 = (void *)UITraitCollection.modifyingTraits(_:)(sub_100C54DEC, 0);

  v5 = objc_msgSend(v2, "preferredFontForTextStyle:compatibleWithTraitCollection:", UIFontTextStyleBody, v4);
  v6 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:", v5);

  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v7);

  if (v8)
  {
    v9 = objc_msgSend(v8, "imageWithConfiguration:", v6);

  }
  else
  {
    v9 = 0;
  }
  Strong = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_editor]);
  if (!Strong
    || (v11 = (void *)Strong,
        v12 = *(id *)(Strong + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape),
        v11,
        v13 = type metadata accessor for CRLWPStickyNoteItem(0),
        v14 = swift_dynamicCastClass(v12, v13),
        v12,
        !v14))
  {
    sub_1004B8930(0, (unint64_t *)&qword_1013E19A0, UIBarButtonItem_ptr);
    sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
    v27 = swift_allocObject(&unk_10129D380, 24, 7);
    swift_unknownObjectWeakInit(v27 + 16);
    v15 = v9;
    v30.is_nil = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100C58194, v27);
    v30.value.super.isa = (Class)v9;
    v32.value.super.super.isa = 0;
    isa = UIBarButtonItem.init(title:image:primaryAction:menu:)((Swift::String_optional)0, v30, v32, v33).super.super.isa;
    v26 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
    -[objc_class setTintColor:](isa, "setTintColor:", v26);
    goto LABEL_9;
  }
  v15 = objc_msgSend((id)objc_opt_self(UIButton), "buttonWithType:", 0);
  objc_msgSend(v15, "setPointerInteractionEnabled:", 1);
  objc_msgSend(v15, "setImage:forState:", v9, 0);
  result = (Class)objc_msgSend(v15, "setShowsMenuAsPrimaryAction:", 1);
  v17 = *(char **)&v1[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_textBuilder];
  if (v17)
  {
    v18 = *(void **)&v17[OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_textSizeManager];
    v19 = *(_QWORD *)&v17[OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_textSizeManager + 8];
    sub_1004B8930(0, &qword_1013E1090, UIMenu_ptr);
    v20 = v17;
    preferredElementSize = sub_1004FEFFC(v18, v19);
    v21._countAndFlagsBits = 0;
    v21._object = (void *)0xE000000000000000;
    v31.value.super.isa = 0;
    v31.is_nil = 0;
    v22 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v21, (Swift::String_optional)0, v31, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)preferredElementSize, v29).super.super.isa;

    objc_msgSend(v15, "setMenu:", v22);
    objc_msgSend(v15, "setPreferredMenuElementOrder:", 2);
    v23 = (void *)objc_opt_self(UIColor);
    v24 = objc_msgSend(v23, "labelColor");
    objc_msgSend(v15, "setTintColor:", v24);

    isa = (Class)objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithCustomView:", v15);
    v26 = objc_msgSend(v23, "labelColor");
    -[objc_class setTintColor:](isa, "setTintColor:", v26);

    v6 = v9;
LABEL_9:

    return isa;
  }
  __break(1u);
  return result;
}

uint64_t sub_100C54DEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(a1 + 24);
  v2 = *(_QWORD *)(a1 + 32);
  sub_1004CB9AC(a1, v1);
  return UIMutableTraits.preferredContentSizeCategory.setter(UIContentSizeCategoryLarge, v1, v2);
}

void sub_100C54E3C(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  char *v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  _OWORD v13[2];
  _BYTE v14[24];
  uint64_t v15;
  _BYTE v16[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (char *)Strong;
    v6 = objc_msgSend(a1, "sender");
    if (v6)
    {
      v7 = v6;
      _bridgeAnyObjectToAny(_:)(v13, v6);
      swift_unknownObjectRelease(v7);
    }
    else
    {
      memset(v13, 0, sizeof(v13));
    }
    sub_1004D28A4((uint64_t)v13, (uint64_t)v14);
    if (v15)
    {
      v8 = sub_1004B8930(0, (unint64_t *)&qword_1013E19A0, UIBarButtonItem_ptr);
      if ((swift_dynamicCast(&v12, v14, (char *)&type metadata for Any + 8, v8, 6) & 1) != 0)
      {
        v9 = v12;
        if ((objc_msgSend((id)objc_opt_self(UIDevice), "crl_padUI") & 1) == 0)
        {
          v10 = swift_unknownObjectWeakLoadStrong(&v5[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_editor]);
          if (v10)
          {
            v11 = (void *)v10;
            sub_100723670(0);

          }
        }
        sub_100C54F94(v9);

      }
      else
      {

      }
    }
    else
    {

      sub_1004CB800((uint64_t)v14, &qword_1013E0230);
    }
  }
}

void sub_100C54F94(void *a1)
{
  char *v1;
  char *v2;
  void *v4;
  unsigned int v5;
  id v6;
  NSString v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  char *v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  char *v19;
  char v20;
  uint64_t v21;
  void *v22;
  void *v23;
  char *v24;
  id v25;
  id v26;
  id v27;
  id v28;

  v2 = v1;
  v4 = (void *)objc_opt_self(UIDevice);
  v5 = objc_msgSend(v4, "crl_padUI");
  v6 = objc_allocWithZone((Class)CRLQuickInspectorElement);
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend(v6, "initWithName:image:type:options:", v7, 0, 2, 16);

  if (v5)
  {
    v9 = *(void **)&v2[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_editorController];
    v10 = *(void **)&v2[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_icc];
    objc_allocWithZone((Class)type metadata accessor for CRLiOSMiniFormatterTextBuilder());
    v28 = v8;
    v11 = v9;
    v12 = v10;
    v13 = v2;
    v14 = sub_1004FFFB0((uint64_t)v2, (uint64_t)&off_10129CFA0, (uint64_t)&off_10129CFE8, v28, v11, v10, 1, 0, 46.0, 0, 0, 0, 1);

    v15 = sub_1004F6490();
    if (v15)
    {
      v16 = v15;
      objc_allocWithZone((Class)type metadata accessor for CRLiOSMiniFormatterPopoverContainerViewController());
      v13;
      v17 = v16;
      v18 = v14;
      v19 = sub_1005B4E34(v17, v14, 0, 1, (uint64_t)v2, (uint64_t)&off_10129CFE8, 0.0);
      sub_100C553A4(v19, a1);

      v14 = v18;
    }
    goto LABEL_9;
  }
  if (objc_msgSend(v4, "crl_phoneUI"))
    v20 = objc_msgSend((id)objc_opt_self(UIScreen), "crl_deviceIsLandscape");
  else
    v20 = 0;
  v21 = swift_allocObject(&unk_10129D358, 24, 7);
  *(_QWORD *)(v21 + 16) = v2;
  v22 = *(void **)&v2[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_editorController];
  v23 = *(void **)&v2[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_icc];
  objc_allocWithZone((Class)type metadata accessor for CRLiOSMiniFormatterTextBuilder());
  v24 = v2;
  v25 = v22;
  v26 = v23;
  v28 = sub_1004FFFB0((uint64_t)v2, (uint64_t)&off_10129CFA0, (uint64_t)&off_10129CFE8, v8, v25, v23, v20 ^ 1u, v20, 56.0, 1, (uint64_t)sub_100C58984, v21, 0);

  swift_release(v21);
  v27 = sub_1004F6490();
  if (v27)
  {
    v14 = v27;
    sub_100C55748(v27, v28);
LABEL_9:

  }
}

void sub_100C5529C(uint64_t a1)
{
  uint64_t Strong;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjCClassFromMetadata;
  id v10;
  void *v11;

  Strong = swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_stateManager);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = sub_1009B2B14();

    if (v4)
    {
      objc_msgSend(v4, "dismissViewControllerAnimated:completion:", 1, 0);

    }
  }
  v5 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_editorController);
  v6 = type metadata accessor for CRLWPEditor(0);
  v8 = v6;
  if (v6)
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v6, v7);
  else
    ObjCClassFromMetadata = 0;
  v10 = objc_msgSend(v5, "mostSpecificCurrentEditorOfClass:", ObjCClassFromMetadata);
  if (swift_dynamicCastClass(v10, v8))
  {
    swift_unknownObjectRetain(v10);
    sub_100723670(1);
    swift_unknownObjectRelease(v10);
  }
  swift_unknownObjectRelease(v10);
  v11 = *(void **)(a1
                 + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedNavigationController);
  *(_QWORD *)(a1
            + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedNavigationController) = 0;

  *(_BYTE *)(a1
           + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_isPresentingTextFormatCardUI) = 0;
}

void sub_100C553A4(void *a1, void *a2)
{
  char *v2;
  _QWORD *v5;
  void *Strong;
  id v7;
  char *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  _QWORD aBlock[5];
  uint64_t v20;

  v5 = (_QWORD *)swift_allocObject(&unk_10129D2E0, 40, 7);
  v5[2] = a1;
  v5[3] = v2;
  v5[4] = a2;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_stateManager]);
  v7 = a2;
  v8 = v2;
  v9 = a1;
  if (Strong && (v10 = v9, v11 = sub_1009B2B14(), Strong, v11))
  {
    v12 = objc_msgSend(v11, "presentedViewController");

    if (v12)
    {
      v13 = swift_allocObject(&unk_10129D308, 32, 7);
      *(_QWORD *)(v13 + 16) = sub_100C58164;
      *(_QWORD *)(v13 + 24) = v5;
      aBlock[4] = sub_10054E858;
      v20 = v13;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(_QWORD *)"";
      aBlock[2] = sub_1005D2FC0;
      aBlock[3] = &unk_10129D320;
      v14 = _Block_copy(aBlock);
      v15 = v20;
      swift_retain(v5);
      objc_msgSend(v11, "dismissViewControllerAnimated:completion:", 1, v14, swift_release(v15).n128_f64[0]);

      swift_release(v5);
      _Block_release(v14);
    }
    else
    {
      v18 = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "initWithRootViewController:", v10);
      objc_msgSend(v18, "setNavigationBarHidden:animated:", 1, 0);
      objc_msgSend(v18, "setModalPresentationStyle:", 7);
      objc_msgSend(v18, "setDelegate:", v8);
      v16 = objc_msgSend(v18, "popoverPresentationController");
      if (v16)
      {
        v17 = v16;
        objc_msgSend(v16, "setBarButtonItem:", v7);
        objc_msgSend(v17, "setDelegate:", v8);
        objc_msgSend(v17, "setPermittedArrowDirections:", 3);
        objc_msgSend(v8, "presentViewController:animated:completion:", v18, 1, 0);

        swift_release(v5);
      }
      else
      {

        swift_release(v5);
      }
    }
  }
  else
  {
    swift_release(v5);
  }
}

void sub_100C55634(uint64_t a1, void *a2, uint64_t a3)
{
  id v5;
  void *v6;
  void *v7;
  id v8;

  v8 = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "initWithRootViewController:", a1);
  objc_msgSend(v8, "setNavigationBarHidden:animated:", 1, 0);
  objc_msgSend(v8, "setModalPresentationStyle:", 7);
  objc_msgSend(v8, "setDelegate:", a2);
  v5 = objc_msgSend(v8, "popoverPresentationController");
  if (v5)
  {
    v6 = v5;
    objc_msgSend(v5, "setBarButtonItem:", a3);
    objc_msgSend(v6, "setDelegate:", a2);
    objc_msgSend(v6, "setPermittedArrowDirections:", 3);
    objc_msgSend(a2, "presentViewController:animated:completion:", v8, 1, 0);

    v7 = v6;
  }
  else
  {
    v7 = v8;
  }

}

void sub_100C55748(void *a1, void *a2)
{
  void *v2;
  void *v5;
  id v6;
  id v7;
  unsigned int v8;
  char v9;
  id v10;
  unsigned int v11;
  double v12;
  id v13;
  id v14;
  char *v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  uint64_t v20;
  id v21;
  char *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  Class isa;
  id v28;
  uint64_t v29;

  v5 = (void *)objc_opt_self(UIDevice);
  v6 = a1;
  v9 = 1;
  if (objc_msgSend(v5, "crl_padUI"))
  {
    v7 = objc_msgSend(v2, "traitCollection");
    v8 = objc_msgSend(v7, "crl_isCompactWidth");

    if (!v8)
      v9 = 0;
  }
  if (!objc_msgSend(v5, "crl_padUI")
    || (v10 = objc_msgSend(v2, "traitCollection"),
        v11 = objc_msgSend(v10, "crl_isCompactWidth"),
        v10,
        v12 = 0.0,
        v11))
  {
    v12 = 110.0;
  }
  objc_allocWithZone((Class)type metadata accessor for CRLiOSMiniFormatterPopoverContainerViewController());
  v13 = v2;
  v14 = a2;
  v15 = sub_1005B4E34(v6, a2, v9, 1, (uint64_t)v2, (uint64_t)&off_10129CFE8, v12);
  v28 = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "initWithRootViewController:", v15);
  objc_msgSend(v28, "setNavigationBarHidden:animated:", 1, 0);
  objc_msgSend(v28, "setModalPresentationStyle:", 1);
  v16 = objc_msgSend(v28, "presentationController");
  if (v16)
  {
    v17 = v16;
    objc_msgSend(v16, "setDelegate:", v13);

  }
  v18 = objc_msgSend(v28, "sheetPresentationController");
  if (v18)
  {
    v19 = v18;
    objc_msgSend(v18, "setPrefersEdgeAttachedInCompactHeight:", 1);
    objc_msgSend(v19, "setWidthFollowsPreferredContentSizeWhenEdgeAttached:", 1);
    sub_1004B8930(0, (unint64_t *)&qword_10140BD30, UISheetPresentationControllerDetent_ptr);
    v20 = swift_allocObject(&unk_10129D2B8, 32, 7);
    *(_QWORD *)(v20 + 16) = v15;
    *(_QWORD *)(v20 + 24) = v13;
    v21 = v13;
    v22 = v15;
    v23 = (void *)static UISheetPresentationControllerDetent.custom(identifier:resolver:)(0, sub_100C58158, v20);
    swift_release(v20);
    v24 = sub_1004B804C((uint64_t *)&unk_1013E4180);
    v25 = swift_allocObject(v24, 40, 7);
    *(_OWORD *)(v25 + 16) = xmmword_100EEF400;
    *(_QWORD *)(v25 + 32) = v23;
    v29 = v25;
    specialized Array._endMutation()(v25);
    v26 = v23;
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v19, "setDetents:", isa, swift_bridgeObjectRelease(v29).n128_f64[0]);

  }
  *((_BYTE *)v13
  + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_isPresentingTextFormatCardUI) = 1;
  objc_msgSend(v13, "presentViewController:animated:completion:", v28, 1, 0);

}

void sub_100C55A68(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t Strong;
  void *v9;
  id v10;
  id v11;
  id v12;

  sub_1005B6148(a1, a2, a3, a4);
  Strong = swift_unknownObjectWeakLoadStrong(a7 + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_stateManager);
  if (Strong)
  {
    v9 = (void *)Strong;
    v10 = sub_1009B2B14();

    if (v10)
    {
      v11 = objc_msgSend(v10, "view");

      if (v11)
      {
        v12 = objc_msgSend(v11, "window");

        if (v12)
        {
          objc_msgSend(v12, "safeAreaInsets");

        }
      }
      else
      {
        __break(1u);
      }
    }
  }
}

void sub_100C55B44(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;

  objc_msgSend(a1, "presentViewController:animated:completion:", a2, 1, 0);
  v5 = objc_opt_self(UINavigationController);
  v6 = swift_dynamicCastObjCClass(a2, v5);
  if (v6)
  {
    v8 = *(id *)(a3
               + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedNavigationController);
    *(_QWORD *)(a3
              + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedNavigationController) = v6;
    v7 = a2;

  }
}

uint64_t sub_100C55BCC(uint64_t a1, uint64_t (*a2)(void))
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjCClassFromMetadata;
  id v9;
  void *v10;

  v4 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_editorController);
  v5 = type metadata accessor for CRLWPEditor(0);
  v7 = v5;
  if (v5)
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v5, v6);
  else
    ObjCClassFromMetadata = 0;
  v9 = objc_msgSend(v4, "mostSpecificCurrentEditorOfClass:", ObjCClassFromMetadata);
  if (swift_dynamicCastClass(v9, v7))
  {
    swift_unknownObjectRetain(v9);
    sub_100723670(1);
    swift_unknownObjectRelease(v9);
  }
  swift_unknownObjectRelease(v9);
  v10 = *(void **)(a1
                 + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedNavigationController);
  *(_QWORD *)(a1
            + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedNavigationController) = 0;

  *(_BYTE *)(a1
           + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_isPresentingTextFormatCardUI) = 0;
  return a2();
}

id sub_100C55D7C()
{
  return sub_1004C3370(type metadata accessor for CRLiOSMiniFormatterTextEditingAccessoryViewController);
}

uint64_t type metadata accessor for CRLiOSMiniFormatterTextEditingAccessoryViewController()
{
  return objc_opt_self(_TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController);
}

uint64_t sub_100C55E80(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  char v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  _QWORD v21[3];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v3 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_textBuilder);
  if (v3)
  {
    v5 = result;
    sub_1004CB6E8(a2, (uint64_t)&v22);
    v6 = type metadata accessor for CRLShapeItem(0);
    v7 = v3;
    if (swift_dynamicCast(v21, &v22, (char *)&type metadata for Any + 8, v6, 6))
    {
      v8 = (void *)v21[0];
      v9 = sub_100557658();
      if (v9)
      {
        v10 = sub_100C9D9C0((uint64_t)v8, v9);
        swift_bridgeObjectRelease();
        if ((v10 & 1) != 0)
        {
          v11 = *(char **)(v5 + OBJC_IVAR____TtC8Freeform15CRLChangeRecord_details);
          v12 = &v11[OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data];
          v13 = v11;
          swift_beginAccess(v12, v21, 0, 0);
          v14 = *(_QWORD *)v12;
          if (*(_QWORD *)(*(_QWORD *)v12 + 16))
          {
            v15 = sub_100843260(25);
            if ((v16 & 1) != 0)
              goto LABEL_13;
          }
          v22 = 0;
          v23 = 0;
          v24 = 0;
          v25 = 1;
          sub_1004CB800((uint64_t)&v22, (uint64_t *)&unk_1013DFC00);
          v14 = *(_QWORD *)v12;
          if (*(_QWORD *)(*(_QWORD *)v12 + 16))
          {
            v15 = sub_100843260(27);
            if ((v17 & 1) != 0)
              goto LABEL_13;
          }
          v22 = 0;
          v23 = 0;
          v24 = 0;
          v25 = 1;
          sub_1004CB800((uint64_t)&v22, (uint64_t *)&unk_1013DFC00);
          v14 = *(_QWORD *)v12;
          if (*(_QWORD *)(*(_QWORD *)v12 + 16))
          {
            v15 = sub_100843260(29);
            if ((v18 & 1) != 0)
              goto LABEL_13;
          }
          v22 = 0;
          v23 = 0;
          v24 = 0;
          v25 = 1;
          sub_1004CB800((uint64_t)&v22, (uint64_t *)&unk_1013DFC00);
          v14 = *(_QWORD *)v12;
          if (*(_QWORD *)(*(_QWORD *)v12 + 16) && (v15 = sub_100843260(30), (v19 & 1) != 0))
          {
LABEL_13:
            sub_1004F370C(*(_QWORD *)(v14 + 56) + 32 * v15, (uint64_t)&v22);
            sub_1004CB800((uint64_t)&v22, (uint64_t *)&unk_1013DFC00);

            v20 = 1;
          }
          else
          {
            v22 = 0;
            v23 = 0;
            v24 = 0;
            v25 = 1;
            sub_1004CB800((uint64_t)&v22, (uint64_t *)&unk_1013DFC00);

            v20 = 0;
          }
          return v20 & 1;
        }
      }

    }
    v20 = sub_1004C9944(v5, a2);

    return v20 & 1;
  }
  __break(1u);
  return result;
}

BOOL sub_100C560CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  char v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  __int16 v20;
  __int16 v21;
  unsigned __int8 v22;
  unsigned __int8 *v25;
  _BYTE v26[24];
  uint64_t v27;

  v2 = v1;
  sub_1004F370C(a1, (uint64_t)v26);
  if (!v27)
  {
    sub_1004CB800((uint64_t)v26, &qword_1013E0230);
    return 0;
  }
  v3 = type metadata accessor for CRLiOSMiniFormatterTextEditingAccessoryViewController.CRLiOSMiniFormatterInputViewState();
  if ((swift_dynamicCast(&v25, v26, (char *)&type metadata for Any + 8, v3, 6) & 1) == 0)
    return 0;
  v4 = v25;
  v5 = *(void **)(v1
                + OBJC_IVAR____TtCC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController33CRLiOSMiniFormatterInputViewState_font);
  if (v5)
  {
    v6 = *(void **)&v25[OBJC_IVAR____TtCC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController33CRLiOSMiniFormatterInputViewState_font];
    v7 = v5;
    if (v6)
    {
      sub_1004B8930(0, &qword_10140BD28, off_101229A10);
      v8 = v7;
      v9 = v6;
      v10 = static NSObject.== infix(_:_:)(v8, v9);

      if ((v10 & 1) == 0)
        goto LABEL_46;
      goto LABEL_9;
    }

    return 0;
  }
  if (*(_QWORD *)&v25[OBJC_IVAR____TtCC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController33CRLiOSMiniFormatterInputViewState_font])
  {
LABEL_46:

    return 0;
  }
LABEL_9:
  v11 = *(unsigned __int8 *)(v2
                           + OBJC_IVAR____TtCC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController33CRLiOSMiniFormatterInputViewState_isBold);
  v12 = v4[OBJC_IVAR____TtCC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController33CRLiOSMiniFormatterInputViewState_isBold];
  if (v11 == 2)
  {
    if (v12 != 2)
      goto LABEL_46;
  }
  else if (v12 == 2 || ((v11 ^ v12) & 1) != 0)
  {
    goto LABEL_46;
  }
  v13 = *(unsigned __int8 *)(v2
                           + OBJC_IVAR____TtCC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController33CRLiOSMiniFormatterInputViewState_isItalic);
  v14 = v4[OBJC_IVAR____TtCC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController33CRLiOSMiniFormatterInputViewState_isItalic];
  if (v13 == 2)
  {
    if (v14 != 2)
      goto LABEL_46;
  }
  else if (v14 == 2 || ((v13 ^ v14) & 1) != 0)
  {
    goto LABEL_46;
  }
  v15 = *(unsigned __int8 *)(v2
                           + OBJC_IVAR____TtCC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController33CRLiOSMiniFormatterInputViewState_isUnderlined);
  v16 = v4[OBJC_IVAR____TtCC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController33CRLiOSMiniFormatterInputViewState_isUnderlined];
  if (v15 == 2)
  {
    if (v16 != 2)
      goto LABEL_46;
  }
  else if (v16 == 2 || ((v15 ^ v16) & 1) != 0)
  {
    goto LABEL_46;
  }
  v17 = *(unsigned __int8 *)(v2
                           + OBJC_IVAR____TtCC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController33CRLiOSMiniFormatterInputViewState_isStruckthrough);
  v18 = v4[OBJC_IVAR____TtCC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController33CRLiOSMiniFormatterInputViewState_isStruckthrough];
  if (v17 == 2)
  {
    if (v18 != 2)
      goto LABEL_46;
  }
  else if (v18 == 2 || ((v17 ^ v18) & 1) != 0)
  {
    goto LABEL_46;
  }
  v19 = v4[OBJC_IVAR____TtCC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController33CRLiOSMiniFormatterInputViewState_horizontalAlignment
         + 8];
  if (*(_BYTE *)(v2
                + OBJC_IVAR____TtCC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController33CRLiOSMiniFormatterInputViewState_horizontalAlignment
                + 8) == 2)
  {
    if (v19 != 2)
      goto LABEL_46;
  }
  else if (v19 == 2
         || *(_QWORD *)(v2
                      + OBJC_IVAR____TtCC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController33CRLiOSMiniFormatterInputViewState_horizontalAlignment) != *(_QWORD *)&v4[OBJC_IVAR____TtCC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController33CRLiOSMiniFormatterInputViewState_horizontalAlignment])
  {
    goto LABEL_46;
  }
  v20 = *(_WORD *)(v2
                 + OBJC_IVAR____TtCC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController33CRLiOSMiniFormatterInputViewState_listStyleType);
  v21 = *(_WORD *)&v4[OBJC_IVAR____TtCC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController33CRLiOSMiniFormatterInputViewState_listStyleType];

  if ((v21 & 0xFF00) == 0x200)
    v22 = 4;
  else
    v22 = v21;
  if ((v20 & 0xFF00) == 0x200 || v20 == 4)
    return v22 == 4;
  return v22 != 4 && v22 == v20;
}

id sub_100C563FC()
{
  return sub_1004C3370(type metadata accessor for CRLiOSMiniFormatterTextEditingAccessoryViewController.CRLiOSMiniFormatterInputViewState);
}

uint64_t type metadata accessor for CRLiOSMiniFormatterTextEditingAccessoryViewController.CRLiOSMiniFormatterInputViewState()
{
  return objc_opt_self(_TtCC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController33CRLiOSMiniFormatterInputViewState);
}

uint64_t sub_100C56438(uint64_t a1, uint64_t a2)
{
  return sub_100C55E80(a1, a2) & 1;
}

uint64_t sub_100C5645C()
{
  _QWORD *v0;
  uint64_t result;

  if (*(_QWORD *)(*v0 + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_textBuilder))
    return 1;
  __break(1u);
  return result;
}

void sub_100C5647C()
{
  sub_100C57B24();
}

void sub_100C5649C(void *a1, void *a2)
{
  char *v2;
  char *v3;
  void *v4;
  void *v6;
  id v7;
  void *v8;
  _QWORD *v9;
  _BYTE *Strong;
  char v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  char *v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  uint64_t v33;
  void *v34;
  id v35;
  void **aBlock;
  uint64_t v37;
  double (*v38)(uint64_t);
  void *v39;
  void *v40;
  uint64_t v41;

  v3 = v2;
  v4 = *(void **)&v2[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedNavigationController];
  if (v4)
  {
    v6 = *(void **)&v3[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedAuxiliaryViewController];
    *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedAuxiliaryViewController] = a1;
    v7 = a1;
    v35 = v4;

    v8 = *(void **)&v3[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_auxiliaryPresentedBuilder];
    *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_auxiliaryPresentedBuilder] = a2;
    v9 = a2;

    Strong = (_BYTE *)swift_unknownObjectWeakLoadStrong(&v3[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_editor]);
    if (Strong)
    {
      Strong[OBJC_IVAR____TtC8Freeform11CRLWPEditor_resignFirstResponderWhenKeyboardHides] = 0;

    }
    if (objc_msgSend((id)objc_opt_self(UIDevice), "crl_padUI"))
    {
      v11 = (*(uint64_t (**)(void))((swift_isaMask & *v9) + 0x108))();
      if ((v11 & 1) != 0)
        v12 = 1;
      else
        v12 = 7;
      objc_msgSend(v7, "setModalPresentationStyle:", v12);
      v13 = objc_msgSend(v7, "presentationController");
      if (v13)
      {
        v14 = v13;
        objc_msgSend(v13, "setDelegate:", v3);

      }
      if ((v11 & 1) != 0)
        goto LABEL_14;
      v15 = objc_msgSend(v35, "popoverPresentationController");
      if (v15)
      {
        v16 = v15;
        v17 = objc_msgSend(v7, "popoverPresentationController");
        if (v17)
        {
          v18 = v17;
          objc_msgSend(v17, "setDelegate:", v3);
          v19 = objc_msgSend(v16, "barButtonItem");
          objc_msgSend(v18, "setBarButtonItem:", v19);

LABEL_14:
          v20 = swift_allocObject(&unk_10129D128, 32, 7);
          *(_QWORD *)(v20 + 16) = v3;
          *(_QWORD *)(v20 + 24) = v7;
          v40 = sub_100C580CC;
          v41 = v20;
          aBlock = _NSConcreteStackBlock;
          v37 = *(_QWORD *)"";
          v38 = sub_1005D2FC0;
          v39 = &unk_10129D140;
          v21 = _Block_copy(&aBlock);
          v22 = v41;
          v23 = v7;
          v24 = v3;
          objc_msgSend(v35, "dismissViewControllerAnimated:completion:", 1, v21, swift_release(v22).n128_f64[0]);

          _Block_release(v21);
          return;
        }

      }
    }
    else
    {
      objc_msgSend(v7, "setModalPresentationStyle:", 7);
      v25 = objc_msgSend(v7, "popoverPresentationController");
      if (v25)
      {
        v26 = v25;
        objc_msgSend(v25, "setPermittedArrowDirections:", 0);

      }
      v27 = objc_msgSend(v7, "popoverPresentationController");
      if (v27)
      {
        v28 = v27;
        v29 = (id)swift_unknownObjectWeakLoadStrong(&v3[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_stateManager]);
        if (v29)
        {
          v30 = sub_1009B2B14();

          v29 = objc_msgSend(v30, "view");
        }
        objc_msgSend(v28, "setSourceView:", v29);

      }
      v31 = objc_msgSend(v7, "popoverPresentationController");
      if (v31)
      {
        v32 = v31;
        objc_msgSend(v31, "setDelegate:", v3);

      }
      v33 = swift_allocObject(&unk_10129D0D8, 24, 7);
      *(_QWORD *)(v33 + 16) = v7;
      v40 = sub_100C5809C;
      v41 = v33;
      aBlock = _NSConcreteStackBlock;
      v37 = *(_QWORD *)"";
      v38 = sub_1005D2FC0;
      v39 = &unk_10129D0F0;
      v34 = _Block_copy(&aBlock);
      objc_msgSend(v35, "presentViewController:animated:completion:", v7, 1, v34, swift_release(v41).n128_f64[0]);
      _Block_release(v34);

    }
  }
}

void sub_100C568B0(uint64_t a1, void *a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjCClassFromMetadata;
  id v9;
  void *v10;
  uint64_t Strong;
  void *v12;
  id v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void **v23;
  uint64_t v24;
  double (*v25)(uint64_t);
  void *v26;
  void *v27;
  uint64_t v28;

  v4 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_editorController);
  v5 = type metadata accessor for CRLWPEditor(0);
  v7 = v5;
  if (v5)
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v5, v6);
  else
    ObjCClassFromMetadata = 0;
  v9 = objc_msgSend(v4, "mostSpecificCurrentEditorOfClass:", ObjCClassFromMetadata);
  if (swift_dynamicCastClass(v9, v7))
  {
    swift_unknownObjectRetain(v9);
    sub_100723670(1);
    swift_unknownObjectRelease(v9);
  }
  swift_unknownObjectRelease(v9);
  v10 = *(void **)(a1
                 + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedNavigationController);
  *(_QWORD *)(a1
            + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedNavigationController) = 0;

  *(_BYTE *)(a1
           + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_isPresentingTextFormatCardUI) = 0;
  Strong = swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_stateManager);
  if (Strong)
  {
    v12 = (void *)Strong;
    v13 = sub_1009B2B14();

    if (v13)
    {
      v14 = swift_allocObject(&unk_10129D178, 32, 7);
      *(_QWORD *)(v14 + 16) = v13;
      *(_QWORD *)(v14 + 24) = a2;
      v15 = a2;
      v16 = v13;
      v17 = objc_msgSend(v16, "presentedViewController");

      if (v17)
      {
        v18 = swift_allocObject(&unk_10129D1F0, 32, 7);
        *(_QWORD *)(v18 + 16) = sub_100C58100;
        *(_QWORD *)(v18 + 24) = v14;
        v27 = sub_1005A46E8;
        v28 = v18;
        v23 = _NSConcreteStackBlock;
        v24 = *(_QWORD *)"";
        v25 = sub_1005D2FC0;
        v26 = &unk_10129D208;
        v19 = _Block_copy(&v23);
        v20 = v28;
        swift_retain(v14);
        objc_msgSend(v16, "dismissViewControllerAnimated:completion:", 1, v19, swift_release(v20).n128_f64[0]);
        swift_release(v14);

        _Block_release(v19);
      }
      else
      {
        v21 = swift_allocObject(&unk_10129D1A0, 24, 7);
        *(_QWORD *)(v21 + 16) = v15;
        v27 = sub_100C58970;
        v28 = v21;
        v23 = _NSConcreteStackBlock;
        v24 = *(_QWORD *)"";
        v25 = sub_1005D2FC0;
        v26 = &unk_10129D1B8;
        v22 = _Block_copy(&v23);
        objc_msgSend(v16, "presentViewController:animated:completion:", v15, 1, v22, swift_release(v28).n128_f64[0]);
        _Block_release(v22);
        swift_release(v14);

      }
    }
  }
}

void sub_100C56B44(void *a1, void *a2)
{
  uint64_t v4;
  void *v5;
  _QWORD v6[5];
  uint64_t v7;

  v4 = swift_allocObject(&unk_10129D240, 24, 7);
  *(_QWORD *)(v4 + 16) = a2;
  v6[4] = sub_100C58970;
  v7 = v4;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = *(_QWORD *)"";
  v6[2] = sub_1005D2FC0;
  v6[3] = &unk_10129D258;
  v5 = _Block_copy(v6);
  objc_msgSend(a1, "presentViewController:animated:completion:", a2, 1, v5, swift_release(v7).n128_f64[0]);
  _Block_release(v5);
}

double sub_100C56C08(void *a1)
{
  UIAccessibilityNotifications v1;
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  double result;
  id v7;

  v1 = UIAccessibilityLayoutChangedNotification;
  v2 = objc_msgSend(a1, "popoverPresentationController");
  v3 = v2;
  if (v2)
  {
    v4 = objc_msgSend(v2, "sourceView");

    if (v4)
    {
      v7 = v4;
      v5 = sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
      v3 = (void *)_bridgeAnythingToObjectiveC<A>(_:)(&v7, v5);

    }
    else
    {
      v3 = 0;
    }
  }
  UIAccessibilityPostNotification(v1, v3);
  *(_QWORD *)&result = swift_unknownObjectRelease(v3).n128_u64[0];
  return result;
}

void sub_100C56CCC()
{
  uint64_t v0;
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  CKRecordID v13;
  Swift::String v14;
  uint64_t v15;
  _BYTE v16[24];

  v1 = (char *)objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_icc), "commandController");
  if (v1)
  {
    v2 = v1;
    sub_1006A9664(0);
    v3 = (uint64_t)&v2[OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas];
    swift_beginAccess(&v2[OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas], v16, 0, 0);
    v4 = *(_QWORD *)v3;
    if (*(_QWORD *)v3 >> 62)
    {
      if (v4 < 0)
        v12 = *(_QWORD *)v3;
      else
        v12 = v4 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*(_QWORD *)v3);
      v5 = _CocoaArrayWrapper.endIndex.getter(v12);
      if (v5)
      {
LABEL_4:
        v6 = v5 - 1;
        if (!__OFSUB__(v5, 1))
        {
          if ((v4 & 0xC000000000000001) == 0)
          {
            if ((v6 & 0x8000000000000000) != 0)
            {
              __break(1u);
            }
            else if (v6 < *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              v5 = *(_QWORD *)(v4 + 8 * v6 + 32);
              swift_retain(v5);
LABEL_9:
              swift_bridgeObjectRelease();
              v7 = *(unsigned __int8 *)(v5 + 16);
              if (v7 == 3 || v7 == 2 || v7 == 1)
                goto LABEL_34;
              v3 = *(_QWORD *)v3;
              if (!((unint64_t)v3 >> 62))
              {
                v8 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
                swift_bridgeObjectRetain_n(v3, 2);
                if (v8)
                {
LABEL_14:
                  if (v8 < 1)
                  {
                    __break(1u);
                    return;
                  }
                  v9 = 0;
                  do
                  {
                    if ((v3 & 0xC000000000000001) != 0)
                    {
                      v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v3);
                    }
                    else
                    {
                      v10 = *(_QWORD *)(v3 + 8 * v9 + 32);
                      swift_retain(v10);
                    }
                    ++v9;
                    v11 = *(id *)(v10 + 24);
                    sub_1006A72F4(v11, 0);
                    swift_release(v10);

                  }
                  while (v8 != v9);
                }
LABEL_33:
                swift_bridgeObjectRelease_n(v3, 2);
                *(_BYTE *)(v5 + 16) = 1;
LABEL_34:

                swift_release(v5);
                return;
              }
LABEL_29:
              if (v3 < 0)
                v15 = v3;
              else
                v15 = v3 & 0xFFFFFFFFFFFFFF8;
              swift_bridgeObjectRetain_n(v3, 2);
              v8 = _CocoaArrayWrapper.endIndex.getter(v15);
              if (v8)
                goto LABEL_14;
              goto LABEL_33;
            }
            __break(1u);
            goto LABEL_29;
          }
LABEL_26:
          v5 = specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v4);
          goto LABEL_9;
        }
LABEL_25:
        __break(1u);
        goto LABEL_26;
      }
    }
    else
    {
      v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(*(_QWORD *)v3);
      if (v5)
        goto LABEL_4;
    }
    swift_bridgeObjectRelease();
    v2 = "enableProgressiveEnqueuingInCurrentGroup() called without a group being open.";
    v3 = (uint64_t)"enableProgressiveEnqueuingInCurrentGroup()";
    v4 = (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift";
    sub_100757E04(&_mh_execute_header, (uint64_t)"enableProgressiveEnqueuingInCurrentGroup()", 42, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 680, "enableProgressiveEnqueuingInCurrentGroup() called without a group being open.", 77, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"enableProgressiveEnqueuingInCurrentGroup() called without a group being open.");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"enableProgressiveEnqueuingInCurrentGroup()", 42, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2u, 680, (uint64_t)"enableProgressiveEnqueuingInCurrentGroup() called without a group being open.", 77, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v13, v14);
    v6 = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
    goto LABEL_25;
  }
}

char *sub_100C56FC0()
{
  uint64_t v0;
  char *result;
  void *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[24];

  result = (char *)objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_icc), "commandController");
  if (result)
  {
    v2 = result;
    v3 = (uint64_t *)&result[OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas];
    swift_beginAccess(&result[OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas], v7, 0, 0);
    v4 = *v3;
    if ((unint64_t)v4 >> 62)
    {
      if (v4 < 0)
        v6 = v4;
      else
        v6 = v4 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v4);
      v5 = _CocoaArrayWrapper.endIndex.getter(v6);

      swift_bridgeObjectRelease(v4);
    }
    else
    {
      v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);

    }
    return (char *)(v5 > 0);
  }
  return result;
}

void sub_100C57080(void *a1)
{
  char *v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  NSString v6;
  id v7;
  char v8;
  void *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  char *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  void *v24;
  id v25;

  if (objc_msgSend(a1, "isViewLoaded"))
  {
    if (v1[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_isPresentingTextFormatCardUI] == 1)
    {
      v2 = *(void **)&v1[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedNavigationController];
      if (v2)
      {
        v3 = objc_msgSend(v2, "topViewController");
        if (v3)
        {
          v25 = v3;
          v4 = type metadata accessor for CRLiOSMiniFormatterPopoverContainerViewController();
          if (swift_dynamicCastClass(v25, v4))
          {
            v5 = objc_allocWithZone((Class)CRLQuickInspectorElement);
            v6 = String._bridgeToObjectiveC()();
            v7 = objc_msgSend(v5, "initWithName:image:type:options:", v6, 0, 2, 16);

            if (objc_msgSend((id)objc_opt_self(UIDevice), "crl_phoneUI"))
              v8 = objc_msgSend((id)objc_opt_self(UIScreen), "crl_deviceIsLandscape");
            else
              v8 = 0;
            v15 = swift_allocObject(&unk_10129D290, 24, 7);
            *(_QWORD *)(v15 + 16) = v1;
            v16 = *(void **)&v1[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_editorController];
            v17 = *(void **)&v1[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_icc];
            objc_allocWithZone((Class)type metadata accessor for CRLiOSMiniFormatterTextBuilder());
            v18 = v1;
            v19 = v16;
            v20 = v17;
            v21 = sub_1004FFFB0((uint64_t)v1, (uint64_t)&off_10129CFA0, (uint64_t)&off_10129CFE8, v7, v19, v17, v8 ^ 1u, v8, 56.0, 1, (uint64_t)sub_100C58150, v15, 0);

            swift_release(v15);
            v22 = sub_1004F6490();
            if (v22)
            {
              v23 = v22;
              sub_1005B62B4(v22, v21);
              if (*(_QWORD *)&v18[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedAuxiliaryViewController])
              {
                v24 = *(void **)&v18[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_auxiliaryPresentedBuilder];
                *(_QWORD *)&v18[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_auxiliaryPresentedBuilder] = v21;

                v14 = v24;
                goto LABEL_12;
              }

            }
            else
            {

            }
LABEL_11:
            v14 = v25;
LABEL_12:

            return;
          }

        }
      }
    }
    v9 = *(void **)&v1[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedNavigationController];
    if (v9)
    {
      v25 = v9;
      sub_1005B6148(v10, v11, v12, v13);
      objc_msgSend(v25, "setPreferredContentSize:");
      goto LABEL_11;
    }
  }
}

void sub_100C57344()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  double v7;
  double v8;
  double v9;
  double v10;
  id v11;

  v1 = OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedNavigationController;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedNavigationController);
  if (v2)
  {
    v3 = objc_msgSend(v2, "topViewController");
    if (v3)
    {
      v11 = v3;
      v4 = type metadata accessor for CRLiOSMiniFormatterPopoverContainerViewController();
      if (swift_dynamicCastClass(v11, v4))
      {
        v5 = *(void **)(v0 + v1);
        if (v5)
        {
          v6 = v5;
          sub_1005B6148(v7, v8, v9, v10);
          objc_msgSend(v6, "setPreferredContentSize:");

        }
      }

    }
  }
}

void sub_100C573F8()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000050, 0x8000000101004B70, "Freeform/CRLiOSMiniFormatterTextEditingAccessoryViewController.swift", 68, 2, 343, 0);
  __break(1u);
}

id sub_100C57450(uint64_t a1)
{
  uint64_t v1;
  id result;

  result = *(id *)(v1
                 + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedNavigationController);
  if (result)
    return objc_msgSend(result, "pushViewController:animated:", a1, 1);
  return result;
}

void sub_100C57480()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;

  v1 = *(void **)(v0
                + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedNavigationController);
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v2, "popViewControllerAnimated:", 1);

  }
}

BOOL sub_100C574EC()
{
  void *v0;
  id v1;
  unsigned int v2;
  _BOOL8 result;

  result = 1;
  if (objc_msgSend((id)objc_opt_self(UIDevice), "crl_padUI"))
  {
    v1 = objc_msgSend(v0, "traitCollection");
    v2 = objc_msgSend(v1, "crl_isCompactWidth");

    if (!v2)
      return 0;
  }
  return result;
}

double sub_100C57560()
{
  void *v0;
  id v1;
  unsigned int v2;
  double result;

  if (!objc_msgSend((id)objc_opt_self(UIDevice), "crl_padUI"))
    return 110.0;
  v1 = objc_msgSend(v0, "traitCollection");
  v2 = objc_msgSend(v1, "crl_isCompactWidth");

  result = 0.0;
  if (v2)
    return 110.0;
  return result;
}

void sub_100C575DC()
{
  uint64_t v0;
  id v1;
  id v2;

  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_icc), "commandController");
  if (v1)
  {
    v2 = v1;
    sub_1006A984C(0);

  }
}

double sub_100C5764C()
{
  if (qword_1013DCAF0 != -1)
    swift_once(&qword_1013DCAF0, sub_1005BA270);
  return *(double *)&qword_10147EAA8;
}

void sub_100C57690(void *a1)
{
  sub_100C57080(a1);
}

uint64_t sub_100C576B0()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1004B804C((uint64_t *)&unk_1013F9B80);
  v1 = swift_allocObject(v0, 64, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100EF5A10;
  *(_QWORD *)(v1 + 32) = type metadata accessor for UITraitHorizontalSizeClass(0);
  *(_QWORD *)(v1 + 40) = &protocol witness table for UITraitHorizontalSizeClass;
  *(_QWORD *)(v1 + 48) = type metadata accessor for UITraitVerticalSizeClass(0);
  *(_QWORD *)(v1 + 56) = &protocol witness table for UITraitVerticalSizeClass;
  return v1;
}

void sub_100C57768(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjCClassFromMetadata;
  id v8;
  void *v9;
  id v10;

  v2 = v1;
  if (*(_QWORD *)(v1
                 + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedAuxiliaryViewController))
  {
    v10 = objc_msgSend(a1, "presentedViewController");
    sub_100C57DD8();

  }
  else
  {
    v3 = *(void **)(v1
                  + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_editorController);
    v4 = type metadata accessor for CRLWPEditor(0);
    v6 = v4;
    if (v4)
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v4, v5);
    else
      ObjCClassFromMetadata = 0;
    v8 = objc_msgSend(v3, "mostSpecificCurrentEditorOfClass:", ObjCClassFromMetadata);
    if (swift_dynamicCastClass(v8, v6))
    {
      swift_unknownObjectRetain(v8);
      sub_100723670(1);
      swift_unknownObjectRelease(v8);
    }
    swift_unknownObjectRelease(v8);
    v9 = *(void **)(v2
                  + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedNavigationController);
    *(_QWORD *)(v2
              + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedNavigationController) = 0;

    *(_BYTE *)(v2
             + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_isPresentingTextFormatCardUI) = 0;
  }
}

id sub_100C57978(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t (*v14)(uint64_t, uint64_t, __n128);
  __n128 v15;
  uint64_t v16;
  void *v17;
  char v18;
  char v19;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  objc_super v24;

  v3 = v2;
  v4 = &v2[OBJC_IVAR____TtCC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController33CRLiOSMiniFormatterInputViewState_font];
  *(_QWORD *)v4 = 0;
  v4[8] = 0;
  v5 = OBJC_IVAR____TtCC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController33CRLiOSMiniFormatterInputViewState_isBold;
  *(_WORD *)&v2[OBJC_IVAR____TtCC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController33CRLiOSMiniFormatterInputViewState_isBold] = 2;
  v6 = OBJC_IVAR____TtCC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController33CRLiOSMiniFormatterInputViewState_isItalic;
  *(_WORD *)&v2[OBJC_IVAR____TtCC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController33CRLiOSMiniFormatterInputViewState_isItalic] = 2;
  v7 = OBJC_IVAR____TtCC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController33CRLiOSMiniFormatterInputViewState_isUnderlined;
  *(_WORD *)&v2[OBJC_IVAR____TtCC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController33CRLiOSMiniFormatterInputViewState_isUnderlined] = 2;
  v8 = OBJC_IVAR____TtCC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController33CRLiOSMiniFormatterInputViewState_isStruckthrough;
  *(_WORD *)&v2[OBJC_IVAR____TtCC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController33CRLiOSMiniFormatterInputViewState_isStruckthrough] = 2;
  v9 = &v2[OBJC_IVAR____TtCC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController33CRLiOSMiniFormatterInputViewState_horizontalAlignment];
  *(_QWORD *)v9 = 0;
  v9[8] = 2;
  v10 = OBJC_IVAR____TtCC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController33CRLiOSMiniFormatterInputViewState_listStyleType;
  *(_WORD *)&v2[OBJC_IVAR____TtCC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController33CRLiOSMiniFormatterInputViewState_listStyleType] = 512;
  if (a1)
  {
    v23 = v10;
    v21 = v8;
    ObjectType = swift_getObjectType(a1);
    v14 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(a2 + 40);
    v22 = v3;
    v15 = swift_unknownObjectRetain(a1);
    v16 = v14(ObjectType, a2, v15);
    v17 = *(void **)v4;
    *(_QWORD *)v4 = v16;
    v4[8] = v18;

    *(_WORD *)&v3[v5] = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 72))(ObjectType, a2);
    *(_WORD *)&v3[v6] = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 88))(ObjectType, a2);
    *(_WORD *)&v3[v7] = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 104))(ObjectType, a2);
    *(_WORD *)&v3[v21] = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 136))(ObjectType, a2);
    *(_QWORD *)v9 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 200))(ObjectType, a2);
    v9[8] = v19;
    LOWORD(a2) = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 272))(ObjectType, a2);
    swift_unknownObjectRelease(a1);
    *(_WORD *)&v3[v23] = a2;

  }
  v24.receiver = v3;
  v24.super_class = (Class)type metadata accessor for CRLiOSMiniFormatterTextEditingAccessoryViewController.CRLiOSMiniFormatterInputViewState();
  return objc_msgSendSuper2(&v24, "init");
}

void sub_100C57B24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *Strong;
  _UNKNOWN **v6;
  id v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  Class isa;
  uint64_t v25;

  v1 = v0;
  v2 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v0
            + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController__leadingBarButtonGroups) = 0;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0
            + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController__trailingBarButtonGroups) = 0;
  swift_bridgeObjectRelease();
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_editor);
  if (Strong)
    v6 = &off_10127AA80;
  else
    v6 = 0;
  v7 = objc_allocWithZone((Class)type metadata accessor for CRLiOSMiniFormatterTextEditingAccessoryViewController.CRLiOSMiniFormatterInputViewState());
  v8 = sub_100C57978((uint64_t)Strong, (uint64_t)v6);

  v9 = OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_inputViewStateAtLastReload;
  if (!*(_QWORD *)(v1
                  + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_inputViewStateAtLastReload)
    || (objc_msgSend(v8, "isEqual:") & 1) == 0)
  {
    v10 = (char *)objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_icc), "textInputResponder");
    if (v10)
    {
      v11 = v10;
      v12 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_reloadInputViewsTask;
      v13 = *(_QWORD *)&v10[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_reloadInputViewsTask];
      if (v13)
      {
        swift_retain(*(_QWORD *)&v10[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_reloadInputViewsTask]);
        sub_1004B804C(&qword_1013E0210);
        Task.cancel()();
        swift_release(v13);
      }
      v14 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v4, 1, 1, v14);
      type metadata accessor for MainActor(0);
      v15 = v11;
      v16 = static MainActor.shared.getter(v15);
      v17 = (_QWORD *)swift_allocObject(&unk_10129D0B0, 40, 7);
      v17[2] = v16;
      v17[3] = &protocol witness table for MainActor;
      v17[4] = v15;
      v18 = sub_100618948((uint64_t)v4, (uint64_t)&unk_1013EFDC0, (uint64_t)v17);
      v19 = *(_QWORD *)&v11[v12];
      *(_QWORD *)&v11[v12] = v18;

      swift_release(v19);
    }
    v20 = *(void **)(v1 + v9);
    *(_QWORD *)(v1 + v9) = v8;
    v21 = v8;

  }
  v22 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_toolbar);
  if (v22)
  {
    v23 = v22;
    sub_100C54780();
    sub_1004B8930(0, (unint64_t *)&qword_1013E19A0, UIBarButtonItem_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v23, "setItems:", isa, swift_bridgeObjectRelease().n128_f64[0]);

  }
}

uint64_t sub_100C57DAC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

void sub_100C57DD8()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *Strong;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  __int128 v21[2];
  uint64_t v22;
  id v23;
  _QWORD v24[3];
  uint64_t v25;
  uint64_t v26;

  v1 = *(void **)(v0
                + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedNavigationController);
  if (!v1)
    goto LABEL_20;
  v2 = v1;
  v3 = objc_msgSend(v2, "viewControllers");
  v4 = sub_1004B8930(0, (unint64_t *)&qword_1013F6620, UIViewController_ptr);
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0)
      v13 = v5;
    else
      v13 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    v6 = _CocoaArrayWrapper.endIndex.getter(v13);
    if (v6)
      goto LABEL_4;
  }
  else
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v5);
    if (v6)
    {
LABEL_4:
      if (v6 < 1)
      {
        __break(1u);
        return;
      }
      v20 = v2;
      for (i = 0; i != v6; ++i)
      {
        if ((v5 & 0xC000000000000001) != 0)
          v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v5);
        else
          v8 = *(id *)(v5 + 8 * i + 32);
        v23 = v8;
        v9 = v8;
        v10 = sub_1004B804C(&qword_1013E56C8);
        if (swift_dynamicCast(v21, &v23, v4, v10, 6))
        {
          sub_1004DB728(v21, (uint64_t)v24);
          v11 = v25;
          v12 = v26;
          sub_1004BB5A4(v24, v25);
          (*(void (**)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))(v12 + 48))(0, 0, 2, v11, v12);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v24);
        }
        else
        {
          v22 = 0;
          memset(v21, 0, sizeof(v21));
          sub_1004CB800((uint64_t)v21, (uint64_t *)&unk_1013E56D0);
        }

      }
      swift_bridgeObjectRelease();
      goto LABEL_19;
    }
  }

  swift_bridgeObjectRelease();
LABEL_19:
  swift_bridgeObjectRelease();
LABEL_20:
  Strong = (_BYTE *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_editor);
  if (Strong)
  {
    Strong[OBJC_IVAR____TtC8Freeform11CRLWPEditor_resignFirstResponderWhenKeyboardHides] = 1;

  }
  v15 = *(void **)(v0
                 + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedAuxiliaryViewController);
  *(_QWORD *)(v0
            + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedAuxiliaryViewController) = 0;

  v16 = *(void **)(v0
                 + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_auxiliaryPresentedBuilder);
  *(_QWORD *)(v0
            + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_auxiliaryPresentedBuilder) = 0;

  v17 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_icc), "layerHost");
  if (v17)
  {
    v18 = v17;
    if ((objc_msgSend(v17, "respondsToSelector:", "asiOSCVC") & 1) != 0)
      v19 = objc_msgSend(v18, "asiOSCVC");
    else
      v19 = 0;
    objc_msgSend(v19, "becomeFirstResponderIfAppropriate", swift_unknownObjectRelease(v18).n128_f64[0]);

  }
}

double sub_100C5809C()
{
  uint64_t v0;

  return sub_100C56C08(*(void **)(v0 + 16));
}

double sub_100C580B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

double sub_100C580C4(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

void sub_100C580CC()
{
  uint64_t v0;

  sub_100C568B0(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_100C580D4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100C58100()
{
  uint64_t v0;

  sub_100C56B44(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_100C58108()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100C5812C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100C58150()
{
  uint64_t v0;

  sub_100C5529C(*(_QWORD *)(v0 + 16));
}

void sub_100C58158(uint64_t a1, double a2, double a3, double a4, double a5)
{
  uint64_t v5;

  sub_100C55A68(a2, a3, a4, a5, a1, *(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24));
}

void sub_100C58164()
{
  uint64_t v0;

  sub_100C55634(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_100C58170()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100C58194(void *a1)
{
  uint64_t v1;

  sub_100C54E3C(a1, v1);
}

Class sub_100C5819C()
{
  uint64_t v0;
  uint64_t v1;
  Class result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  Class isa;
  id v15;
  uint64_t v16;
  uint64_t v17;

  v1 = OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController__leadingBarButtonGroups;
  result = *(Class *)(v0
                    + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController__leadingBarButtonGroups);
  if (!result)
  {
    v3 = v0;
    v4 = sub_1004B804C((uint64_t *)&unk_1013E4180);
    v5 = swift_allocObject(v4, 40, 7);
    *(_OWORD *)(v5 + 16) = xmmword_100EEF400;
    v6 = swift_allocObject(v4, 48, 7);
    *(_OWORD *)(v6 + 16) = xmmword_100EF5560;
    result = sub_100C5498C();
    *(_QWORD *)(v6 + 32) = result;
    v7 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_textBuilder);
    if (v7)
    {
      v8 = v7;
      v9 = sub_1004F7D04(1);

      v10 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithCustomView:", v9);
      *(_QWORD *)(v6 + 40) = v10;
      specialized Array._endMutation()(v11);
      v12 = v6;
      v13 = objc_allocWithZone((Class)UIBarButtonItemGroup);
      sub_1004B8930(0, (unint64_t *)&qword_1013E19A0, UIBarButtonItem_ptr);
      isa = Array._bridgeToObjectiveC()().super.isa;
      v15 = objc_msgSend(v13, "initWithBarButtonItems:representativeItem:", isa, 0, swift_bridgeObjectRelease(v12).n128_f64[0]);

      *(_QWORD *)(v5 + 32) = v15;
      specialized Array._endMutation()(v16);
      v17 = *(_QWORD *)(v3 + v1);
      *(_QWORD *)(v3 + v1) = v5;
      swift_bridgeObjectRelease(v17);
      result = *(Class *)(v3 + v1);
      if (result)
        return result;
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

void sub_100C58330()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  Class isa;
  id v21;
  uint64_t v22;
  uint64_t v23;

  v1 = OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController__trailingBarButtonGroups;
  if (!*(_QWORD *)(v0
                  + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController__trailingBarButtonGroups))
  {
    v2 = v0;
    v3 = sub_1004B804C((uint64_t *)&unk_1013E4180);
    v4 = swift_allocObject(v3, 48, 7);
    *(_OWORD *)(v4 + 16) = xmmword_100EF5560;
    v5 = OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_textBuilder;
    v6 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_textBuilder);
    if (v6)
    {
      v7 = v4;
      v8 = v6;
      v9 = (void *)sub_1004FB330(1, 0, 1);

      v10 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithCustomView:", v9);
      *(_QWORD *)(v7 + 32) = v10;
      v11 = *(void **)(v2 + v5);
      if (v11)
      {
        v12 = v11;
        sub_1004FCD10(1, 0, 1);
        v14 = v13;

        v15 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithCustomView:", v14);
        *(_QWORD *)(v7 + 40) = v15;
        specialized Array._endMutation()(v16);
        v17 = v7;
        v18 = swift_allocObject(v3, 40, 7);
        *(_OWORD *)(v18 + 16) = xmmword_100EEF400;
        v19 = objc_allocWithZone((Class)UIBarButtonItemGroup);
        sub_1004B8930(0, (unint64_t *)&qword_1013E19A0, UIBarButtonItem_ptr);
        isa = Array._bridgeToObjectiveC()().super.isa;
        v21 = objc_msgSend(v19, "initWithBarButtonItems:representativeItem:", isa, 0, swift_bridgeObjectRelease(v17).n128_f64[0]);

        *(_QWORD *)(v18 + 32) = v21;
        specialized Array._endMutation()(v22);
        v23 = *(_QWORD *)(v2 + v1);
        *(_QWORD *)(v2 + v1) = v18;
        swift_bridgeObjectRelease(v23);
        if (*(_QWORD *)(v2 + v1))
          return;
LABEL_8:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_8;
  }
}

void sub_100C58510()
{
  _BYTE *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_textBuilder] = 0;
  swift_unknownObjectWeakInit(&v0[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_editor], 0);
  swift_unknownObjectWeakInit(&v0[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_stateManager], 0);
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedNavigationController] = 0;
  v0[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_isPresentingTextFormatCardUI] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedAuxiliaryViewController] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_toolbar] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_auxiliaryPresentedBuilder] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_inputViewStateAtLastReload] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController__leadingBarButtonGroups] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController__trailingBarButtonGroups] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100FAD6F0, "Freeform/CRLiOSMiniFormatterTextEditingAccessoryViewController.swift", 68, 2, 40, 0);
  __break(1u);
}

void sub_100C58600(void *a1)
{
  char *v1;
  char *v2;
  uint64_t Strong;
  void *v5;
  id v6;
  _QWORD *v7;
  uint64_t v8;
  void *v9;
  _QWORD *v10;
  void *v11;
  _QWORD *v12;
  char *v13;
  id v14;
  id v15;
  id v16;
  char *v17;
  id v18;
  id v19;
  void *v20;
  uint64_t v21;
  void *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  id v28;
  void **aBlock;
  uint64_t v30;
  double (*v31)(uint64_t);
  void *v32;
  uint64_t (*v33)();
  _QWORD *v34;

  v2 = v1;
  Strong = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_stateManager]);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = sub_1009B2B14();

    if (v6)
    {
      v7 = (_QWORD *)swift_allocObject(&unk_10129D3D0, 40, 7);
      v7[2] = v6;
      v7[3] = a1;
      v7[4] = v2;
      v8 = OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedNavigationController;
      v9 = *(void **)&v2[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedNavigationController];
      if (v9)
      {
        v10 = (_QWORD *)swift_allocObject(&unk_10129D448, 40, 7);
        v10[2] = v2;
        v10[3] = sub_100C588F4;
        v10[4] = v7;
        v33 = sub_100C5892C;
        v34 = v10;
        aBlock = _NSConcreteStackBlock;
        v30 = *(_QWORD *)"";
        v31 = sub_1005D2FC0;
        v32 = &unk_10129D460;
        v11 = _Block_copy(&aBlock);
        v12 = v34;
        v13 = v2;
        v14 = a1;
        v15 = v6;
        v16 = v9;
        swift_retain(v7);
        objc_msgSend(v16, "dismissViewControllerAnimated:completion:", 1, v11, swift_release(v12).n128_f64[0]);
        swift_release(v7);

        _Block_release(v11);
      }
      else
      {
        v17 = v2;
        v18 = a1;
        v28 = v6;
        v19 = objc_msgSend(v28, "presentedViewController");
        if (v19)
        {
          v20 = v19;
          v21 = swift_allocObject(&unk_10129D3F8, 32, 7);
          *(_QWORD *)(v21 + 16) = sub_100C588F4;
          *(_QWORD *)(v21 + 24) = v7;
          v33 = sub_1005A46E8;
          v34 = (_QWORD *)v21;
          aBlock = _NSConcreteStackBlock;
          v30 = *(_QWORD *)"";
          v31 = sub_1005D2FC0;
          v32 = &unk_10129D410;
          v22 = _Block_copy(&aBlock);
          v23 = v34;
          swift_retain(v7);
          objc_msgSend(v20, "dismissViewControllerAnimated:completion:", 1, v22, swift_release(v23).n128_f64[0]);
          swift_release(v7);

          _Block_release(v22);
        }
        else
        {
          objc_msgSend(v28, "presentViewController:animated:completion:", v18, 1, 0);
          v24 = objc_opt_self(UINavigationController);
          v25 = swift_dynamicCastObjCClass(v18, v24);
          if (v25)
          {
            v27 = *(void **)&v2[v8];
            *(_QWORD *)&v2[v8] = v25;
            v26 = v18;
            swift_release(v7);

          }
          else
          {
            swift_release(v7);

          }
        }
      }
    }
  }
}

uint64_t sub_100C588CC()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_100C588F4()
{
  uint64_t v0;

  sub_100C55B44(*(void **)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_100C58900()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100C5892C()
{
  uint64_t v0;

  return sub_100C55BCC(*(_QWORD *)(v0 + 16), *(uint64_t (**)(void))(v0 + 24));
}

void sub_100C58998(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t i;
  NSObject v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _OWORD v21[2];
  uint64_t v22;
  _OWORD v23[2];
  uint64_t v24;
  unint64_t v25;

  v25 = (unint64_t)_swiftEmptyArrayStorage;
  v2 = a1 + 56;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 56);
  v6 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v7 = 0;
  if (v5)
    goto LABEL_26;
LABEL_6:
  v8 = v7 + 1;
  if (!__OFADD__(v7, 1))
  {
    if (v8 < v6)
    {
      v9 = *(_QWORD *)(v2 + 8 * v8);
      ++v7;
      if (v9)
        goto LABEL_21;
      v7 = v8 + 1;
      if (v8 + 1 >= v6)
        goto LABEL_27;
      v9 = *(_QWORD *)(v2 + 8 * v7);
      if (v9)
        goto LABEL_21;
      v7 = v8 + 2;
      if (v8 + 2 >= v6)
        goto LABEL_27;
      v9 = *(_QWORD *)(v2 + 8 * v7);
      if (v9)
        goto LABEL_21;
      v7 = v8 + 3;
      if (v8 + 3 >= v6)
        goto LABEL_27;
      v9 = *(_QWORD *)(v2 + 8 * v7);
      if (v9)
      {
LABEL_21:
        v5 = (v9 - 1) & v9;
        for (i = __clz(__rbit64(v9)) + (v7 << 6); ; i = v20 | (v7 << 6))
        {
          sub_1004B8968(*(_QWORD *)(a1 + 48) + 40 * i, (uint64_t)v23);
          v21[0] = v23[0];
          v21[1] = v23[1];
          v22 = v24;
          v12.isa = AnyHashable._bridgeToObjectiveC()().isa;
          v13 = type metadata accessor for CRLShapeItem(0);
          v14 = swift_dynamicCastClass(v12.isa, v13);
          if (v14)
          {
            v15 = v14;
            v16 = sub_1004B89A4((uint64_t)v21);
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v16);
            v18 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
            v17 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v18 >= v17 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v17 > 1, v18 + 1, 1);
            v19 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v15);
            specialized Array._endMutation()(v19);
            if (!v5)
              goto LABEL_6;
          }
          else
          {

            sub_1004B89A4((uint64_t)v21);
            if (!v5)
              goto LABEL_6;
          }
LABEL_26:
          v20 = __clz(__rbit64(v5));
          v5 &= v5 - 1;
        }
      }
      v10 = v8 + 4;
      if (v10 < v6)
      {
        v9 = *(_QWORD *)(v2 + 8 * v10);
        if (v9)
        {
          v7 = v10;
          goto LABEL_21;
        }
        while (1)
        {
          v7 = v10 + 1;
          if (__OFADD__(v10, 1))
            goto LABEL_29;
          if (v7 >= v6)
            break;
          v9 = *(_QWORD *)(v2 + 8 * v7);
          ++v10;
          if (v9)
            goto LABEL_21;
        }
      }
    }
LABEL_27:
    swift_release(a1);
    return;
  }
  __break(1u);
LABEL_29:
  __break(1u);
}

id sub_100C58BB0(uint64_t a1)
{
  void *v1;
  id v2;
  id v3;
  id v4;
  id v6;

  v6 = 0;
  v2 = objc_msgSend(v1, "hitKnobAtPoint:inputType:returningRep:", a1, &v6);
  v3 = v2;
  if (v2)
  {
    if (v6)
    {
      v4 = v6;
    }
    else
    {

      return 0;
    }
  }
  return v3;
}

void *sub_100C58C50()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  CGFloat v21;
  CGFloat v22;
  CGFloat v23;
  CGFloat v24;
  double v25;
  double v26;
  _BOOL4 v27;
  double v28;
  double v29;
  double v30;
  double v31;
  uint64_t v32;
  _BYTE v35[24];

  v1 = sub_1004B804C((uint64_t *)&unk_1013F02F0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v35[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = (char *)objc_msgSend(v0, "board");
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess(v7, v35, 0, 0);
    v8 = type metadata accessor for CRLBoardCRDTData(0);
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v7 + *(int *)(v8 + 36), v1);
    v9 = v6;
    v10 = (uint64_t)sub_10054B7E8((uint64_t)v4, (uint64_t)v9);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    if ((unint64_t)v10 >> 62)
      goto LABEL_15;
    v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    while (v11)
    {
      v12 = 4;
      while (1)
      {
        v13 = (v10 & 0xC000000000000001) != 0
            ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v12 - 4, v10)
            : (char *)*(id *)(v10 + 8 * v12);
        v14 = v13;
        v15 = v12 - 3;
        if (__OFADD__(v12 - 4, 1))
          break;
        v17 = *(double *)&v13[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect + 16];
        v16 = *(double *)&v13[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect + 24];
        v18 = sub_100061400(*(CGFloat *)&v13[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect], *(CGFloat *)&v13[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect + 8], v17, v16);
        v20 = v19;
        objc_msgSend(v0, "visibleUnscaledRect");
        v25 = sub_100061400(v21, v22, v23, v24);
        v27 = sub_10005FE30(v18, v20, v25, v26, 40.0);
        objc_msgSend(v0, "visibleUnscaledRect");
        v29 = v28;
        objc_msgSend(v0, "visibleUnscaledRect");
        if (v27)
        {
          v31 = v30;
          if (sub_100C5C474(v29 / v17) || sub_100C5C474(v31 / v16))
          {
            swift_bridgeObjectRelease(v10);
            return v14;
          }
        }

        ++v12;
        if (v15 == v11)
          goto LABEL_19;
      }
      __break(1u);
LABEL_15:
      if (v10 < 0)
        v32 = v10;
      else
        v32 = v10 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v10);
      v11 = _CocoaArrayWrapper.endIndex.getter(v32);
      swift_bridgeObjectRelease(v10);
    }
LABEL_19:
    swift_bridgeObjectRelease(v10);
  }
  return 0;
}

uint64_t sub_100C58EC8()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v8;

  v1 = objc_msgSend(v0, "layoutController");
  objc_msgSend(v0, "visibleUnscaledRect");
  v2 = objc_msgSend(v1, "layoutsInRect:");

  v3 = sub_1004B8930(0, (unint64_t *)&qword_1013FC960, off_101229810);
  v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  if ((unint64_t)v4 >> 62)
  {
    if (v4 < 0)
      v8 = v4;
    else
      v8 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v5 = _CocoaArrayWrapper.endIndex.getter(v8);
    swift_bridgeObjectRelease(v4);
  }
  else
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v4);
  if (!v5)
    return 2;
  v6 = sub_100C58C50();

  return v6 != 0;
}

void CRLInteractiveCanvasController.anyConnectorKnobVisible.getter()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  double v26;
  int64_t v27;
  unint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  id v43;
  id v44;
  void *v45;
  id v46;
  void *v47;
  double v48;
  CGFloat v49;
  double v50;
  CGFloat v51;
  BOOL v52;
  uint64_t v53;
  void *v54;
  int64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  void *v64;
  _QWORD v65[6];
  CGPoint v66;
  CGRect v67;

  v1 = v0;
  v2 = objc_msgSend(v0, "selectionModelTranslator");
  if (!v2)
    return;
  v60 = v2;
  v3 = objc_msgSend(v0, "editorController");
  if (!v3
    || (v4 = v3, v5 = objc_msgSend(v3, "selectionPath"), v4, !v5))
  {
LABEL_61:

    return;
  }
  v54 = v5;
  v6 = objc_msgSend(v60, "boardItemsForSelectionPath:", v5);
  v7 = type metadata accessor for CRLBoardItem(0);
  v8 = sub_10058528C();
  v9 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v6, v7, v8);

  if ((v9 & 0xC000000000000001) != 0)
  {
    if (v9 < 0)
      v11 = v9;
    else
      v11 = v9 & 0xFFFFFFFFFFFFFF8;
    v12 = __CocoaSet.makeIterator()(v11);
    v10 = Set.Iterator.init(_cocoa:)(v65, v12, v7, v8);
    v9 = v65[0];
    v58 = v65[1];
    v13 = v65[2];
    v14 = v65[3];
    v15 = v65[4];
  }
  else
  {
    v14 = 0;
    v16 = -1 << *(_BYTE *)(v9 + 32);
    v58 = v9 + 56;
    v17 = ~v16;
    v18 = -v16;
    if (v18 < 64)
      v19 = ~(-1 << v18);
    else
      v19 = -1;
    v15 = v19 & *(_QWORD *)(v9 + 56);
    v13 = v17;
  }
  v55 = (unint64_t)(v13 + 64) >> 6;
  v56 = v7;
  v57 = v1;
  v59 = v9;
  while (1)
  {
    if (v9 < 0)
    {
      v23 = __CocoaSet.Iterator.next()(v10);
      if (!v23)
        goto LABEL_60;
      v24 = v23;
      v63 = v23;
      swift_unknownObjectRetain(v23);
      swift_dynamicCast(&v64, &v63, (char *)&type metadata for Swift.AnyObject + 8, v7, 7);
      v25 = v64;
      *(_QWORD *)&v26 = swift_unknownObjectRelease(v24).n128_u64[0];
      v22 = v14;
      v20 = v15;
      if (!v25)
        goto LABEL_60;
    }
    else
    {
      if (v15)
      {
        v20 = (v15 - 1) & v15;
        v21 = __clz(__rbit64(v15)) | (v14 << 6);
        v22 = v14;
      }
      else
      {
        v27 = v14 + 1;
        if (__OFADD__(v14, 1))
          goto LABEL_64;
        if (v27 >= v55)
        {
LABEL_60:
          sub_1004D284C(v9);

          goto LABEL_61;
        }
        v28 = *(_QWORD *)(v58 + 8 * v27);
        v22 = v14 + 1;
        if (!v28)
        {
          v22 = v14 + 2;
          if (v14 + 2 >= v55)
            goto LABEL_60;
          v28 = *(_QWORD *)(v58 + 8 * v22);
          if (!v28)
          {
            v22 = v14 + 3;
            if (v14 + 3 >= v55)
              goto LABEL_60;
            v28 = *(_QWORD *)(v58 + 8 * v22);
            if (!v28)
            {
              v22 = v14 + 4;
              if (v14 + 4 >= v55)
                goto LABEL_60;
              v28 = *(_QWORD *)(v58 + 8 * v22);
              if (!v28)
              {
                v29 = v14 + 5;
                do
                {
                  if (v55 == v29)
                    goto LABEL_60;
                  v28 = *(_QWORD *)(v58 + 8 * v29++);
                }
                while (!v28);
                v22 = v29 - 1;
              }
            }
          }
        }
        v20 = (v28 - 1) & v28;
        v21 = __clz(__rbit64(v28)) + (v22 << 6);
      }
      v25 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * v21);
      if (!v25)
        goto LABEL_60;
    }
    v30 = objc_msgSend(v1, "repForInfo:", v25, v26);
    if (v30)
      break;
    v31 = v25;
LABEL_15:

    v14 = v22;
    v15 = v20;
  }
  v31 = v30;
  v32 = objc_msgSend(v30, "knobs");
  v33 = sub_1004B8930(0, &qword_1013E56E0, off_101229808);
  v34 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v32, v33);

  v61 = v20;
  v62 = v25;
  if (!((unint64_t)v34 >> 62))
  {
    v35 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v35)
      goto LABEL_40;
    goto LABEL_14;
  }
  if (v34 < 0)
    v53 = v34;
  else
    v53 = v34 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v34);
  v35 = _CocoaArrayWrapper.endIndex.getter(v53);
  swift_bridgeObjectRelease();
  if (!v35)
  {
LABEL_14:

    swift_bridgeObjectRelease();
    v7 = v56;
    v1 = v57;
    v9 = v59;
    v20 = v61;
    goto LABEL_15;
  }
LABEL_40:
  v36 = 4;
  while (1)
  {
    v38 = (v34 & 0xC000000000000001) != 0
        ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v36 - 4, v34)
        : *(id *)(v34 + 8 * v36);
    v37 = v38;
    v39 = v36 - 3;
    if (__OFADD__(v36 - 4, 1))
      break;
    v40 = type metadata accessor for CRLConnectionLineKnob();
    v41 = swift_dynamicCastClass(v37, v40);
    if (!v41)
      goto LABEL_43;
    v42 = (void *)v41;
    v43 = v37;
    v44 = objc_msgSend(v42, "rep");
    v37 = v43;
    if (!v44)
      goto LABEL_42;
    v45 = v44;
    v46 = objc_msgSend(v44, "interactiveCanvasController");
    if (!v46)
    {

      v37 = v45;
LABEL_42:

LABEL_43:
      goto LABEL_44;
    }
    v47 = v46;
    objc_msgSend(v42, "position");
    objc_msgSend(v45, "convertNaturalPointToUnscaledCanvas:");
    objc_msgSend(v47, "convertUnscaledToBoundsPoint:");
    v49 = v48;
    v51 = v50;
    objc_msgSend(v47, "visibleBoundsRect");
    v66.x = v49;
    v66.y = v51;
    v52 = CGRectContainsPoint(v67, v66);

    if (v52)
    {
      swift_bridgeObjectRelease();

      sub_1004D284C(v59);
      return;
    }
LABEL_44:
    ++v36;
    if (v39 == v35)
      goto LABEL_14;
  }
  __break(1u);
LABEL_64:
  __break(1u);
}

void sub_100C59550()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  double v25;
  int64_t v26;
  unint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t i;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t j;
  uint64_t v48;
  char *v49;
  void *v50;
  void *v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  id v56;
  uint64_t v57;
  int64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD v65[3];
  uint64_t v66;
  uint64_t v67;
  _QWORD v68[6];

  v1 = v0;
  v2 = objc_msgSend(v0, "selectionModelTranslator");
  if (!v2)
    return;
  v56 = v2;
  v3 = objc_msgSend(v0, "editorController");
  if (!v3
    || (v4 = v3, v5 = objc_msgSend(v3, "selectionPath"), v4, !v5))
  {

    return;
  }
  v55 = v5;
  v6 = objc_msgSend(v56, "boardItemsForSelectionPath:", v5);
  v7 = type metadata accessor for CRLBoardItem(0);
  v8 = sub_10058528C();
  v9 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v6, v7, v8);

  v57 = v7;
  if ((v9 & 0xC000000000000001) != 0)
  {
    if (v9 < 0)
      v11 = v9;
    else
      v11 = v9 & 0xFFFFFFFFFFFFFF8;
    v12 = __CocoaSet.makeIterator()(v11);
    v10 = Set.Iterator.init(_cocoa:)(v68, v12, v7, v8);
    v9 = v68[0];
    v59 = v68[1];
    v13 = v68[2];
    v14 = v68[3];
    v15 = v68[4];
  }
  else
  {
    v14 = 0;
    v16 = -1 << *(_BYTE *)(v9 + 32);
    v59 = v9 + 56;
    v13 = ~v16;
    v17 = -v16;
    if (v17 < 64)
      v18 = ~(-1 << v17);
    else
      v18 = -1;
    v15 = v18 & *(_QWORD *)(v9 + 56);
  }
  v58 = (unint64_t)(v13 + 64) >> 6;
  v60 = v9;
  v61 = v1;
  while (1)
  {
    if (v9 < 0)
    {
      v22 = __CocoaSet.Iterator.next()(v10);
      if (!v22)
        goto LABEL_76;
      v23 = v22;
      v64 = v22;
      swift_unknownObjectRetain(v22);
      swift_dynamicCast(v65, &v64, (char *)&type metadata for Swift.AnyObject + 8, v57, 7);
      v24 = (id)v65[0];
      *(_QWORD *)&v25 = swift_unknownObjectRelease(v23).n128_u64[0];
      v19 = v14;
      v20 = v15;
      if (!v24)
        goto LABEL_76;
    }
    else
    {
      if (v15)
      {
        v20 = (v15 - 1) & v15;
        v21 = __clz(__rbit64(v15)) | (v14 << 6);
        v19 = v14;
      }
      else
      {
        v26 = v14 + 1;
        if (__OFADD__(v14, 1))
          goto LABEL_80;
        if (v26 >= v58)
          goto LABEL_76;
        v27 = *(_QWORD *)(v59 + 8 * v26);
        v19 = v14 + 1;
        if (!v27)
        {
          v19 = v14 + 2;
          if (v14 + 2 >= v58)
            goto LABEL_76;
          v27 = *(_QWORD *)(v59 + 8 * v19);
          if (!v27)
          {
            v19 = v14 + 3;
            if (v14 + 3 >= v58)
              goto LABEL_76;
            v27 = *(_QWORD *)(v59 + 8 * v19);
            if (!v27)
            {
              v19 = v14 + 4;
              if (v14 + 4 >= v58)
                goto LABEL_76;
              v27 = *(_QWORD *)(v59 + 8 * v19);
              if (!v27)
              {
                v28 = v14 + 5;
                while (v58 != v28)
                {
                  v27 = *(_QWORD *)(v59 + 8 * v28++);
                  if (v27)
                  {
                    v19 = v28 - 1;
                    goto LABEL_36;
                  }
                }
LABEL_76:
                sub_1004D284C(v9);

                return;
              }
            }
          }
        }
LABEL_36:
        v20 = (v27 - 1) & v27;
        v21 = __clz(__rbit64(v27)) + (v19 << 6);
      }
      v24 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * v21);
      if (!v24)
        goto LABEL_76;
    }
    v29 = objc_msgSend(v1, "repForInfo:", v24, v25);
    if (v29)
      break;
    v30 = v24;
LABEL_16:

    v14 = v19;
    v15 = v20;
  }
  v30 = v29;
  v62 = v20;
  v63 = v19;
  v31 = objc_msgSend(v29, "knobs");
  v32 = sub_1004B8930(0, &qword_1013E56E0, off_101229808);
  v33 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v31, v32);

  v65[0] = _swiftEmptyArrayStorage;
  if (!((unint64_t)v33 >> 62))
  {
    v34 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v33);
    if (v34)
      goto LABEL_41;
LABEL_58:
    swift_bridgeObjectRelease();
    v44 = (uint64_t)_swiftEmptyArrayStorage;
    goto LABEL_59;
  }
  if (v33 < 0)
    v45 = v33;
  else
    v45 = v33 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v33);
  v34 = _CocoaArrayWrapper.endIndex.getter(v45);
  if (!v34)
    goto LABEL_58;
LABEL_41:
  if (v34 >= 1)
  {
    for (i = 0; i != v34; ++i)
    {
      if ((v33 & 0xC000000000000001) != 0)
        v36 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v33);
      else
        v36 = *(id *)(v33 + 8 * i + 32);
      v37 = v36;
      v38 = type metadata accessor for CRLConnectionLineKnob();
      v39 = swift_dynamicCastClass(v37, v38);
      if (v39)
      {
        v40 = v39;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v39);
        v42 = *(_QWORD *)((v65[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
        v41 = *(_QWORD *)((v65[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v42 >= v41 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v41 > 1, v42 + 1, 1);
        v43 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v42, v40);
        specialized Array._endMutation()(v43);
      }
      else
      {

      }
    }
    swift_bridgeObjectRelease();
    v44 = v65[0];
LABEL_59:
    swift_bridgeObjectRelease();
    if ((unint64_t)v44 >> 62)
    {
      if (v44 < 0)
        v54 = v44;
      else
        v54 = v44 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v44);
      v46 = _CocoaArrayWrapper.endIndex.getter(v54);
      if (v46)
        goto LABEL_61;
    }
    else
    {
      v46 = *(_QWORD *)((v44 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v44);
      if (v46)
      {
LABEL_61:
        if (v46 < 1)
          goto LABEL_79;
        for (j = 0; j != v46; ++j)
        {
          if ((v44 & 0xC000000000000001) != 0)
            v49 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v44);
          else
            v49 = (char *)*(id *)(v44 + 8 * j + 32);
          v50 = v49;
          v51 = *(void **)&v49[OBJC_IVAR____TtC8Freeform21CRLConnectionLineKnob_animatedLayer];
          if (v51)
          {
            v52 = v51;
            sub_100A19284(0, (uint64_t)v65);

            v53 = v66;
            if (v66)
            {
              v48 = v67;
              sub_1004BB5A4(v65, v66);
              sub_100D0C8CC(0, 1, 1, 0, 0, 0, 0, v53, v48);
              _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v65);
            }
            else
            {
              sub_1004CB800((uint64_t)v65, (uint64_t *)&unk_1013F0490);
            }
          }

        }
      }
    }

    swift_bridgeObjectRelease_n(v44, 2);
    v9 = v60;
    v1 = v61;
    v20 = v62;
    v19 = v63;
    goto LABEL_16;
  }
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  __break(1u);
}

void *sub_100C59BB0()
{
  void *v0;
  char *v1;
  void *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  id v10;
  void *v11;
  uint64_t v13;

  v1 = (char *)objc_msgSend(v0, "board");
  v2 = v1;
  if (v1)
  {
    v3 = (char *)*(id *)&v1[OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer];

    v4 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
    v5 = *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems];
    v6 = v3;
    if (!v5)
    {
      sub_100740DA4();
      v5 = *(_QWORD *)&v3[v4];
    }
    if (v5)
      v7 = v5;
    else
      v7 = (uint64_t)_swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(v5);

    if ((unint64_t)v7 >> 62)
      goto LABEL_23;
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v8)
    {
      while (!__OFSUB__(v8--, 1))
      {
        if ((v7 & 0xC000000000000001) != 0)
        {
          v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v7);
LABEL_15:
          v11 = v10;
          v2 = (void *)sub_100C59D28(v10);

          if (v2)
            goto LABEL_18;
          if (!v8)
            goto LABEL_17;
        }
        else
        {
          if ((v8 & 0x8000000000000000) != 0)
            goto LABEL_21;
          if (v8 < *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            v10 = *(id *)(v7 + 32 + 8 * v8);
            goto LABEL_15;
          }
LABEL_22:
          __break(1u);
LABEL_23:
          if (v7 < 0)
            v13 = v7;
          else
            v13 = v7 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v7);
          v8 = _CocoaArrayWrapper.endIndex.getter(v13);
          swift_bridgeObjectRelease();
          if (!v8)
            goto LABEL_17;
        }
      }
      __break(1u);
LABEL_21:
      __break(1u);
      goto LABEL_22;
    }
LABEL_17:
    v2 = 0;
LABEL_18:

    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t sub_100C59D28(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  id v19;
  void *v20;
  uint64_t v22;

  v2 = v1;
  v4 = type metadata accessor for CRLConnectionLineItem(0);
  v5 = swift_dynamicCastClass(a1, v4);
  if (!v5)
  {
    v10 = type metadata accessor for CRLGroupItem(0);
    v11 = swift_dynamicCastClass(a1, v10);
    if (!v11)
      return 0;
    v12 = v11;
    v13 = type metadata accessor for CRLFreehandDrawingItem(0);
    v9 = 0;
    if (swift_dynamicCastClass(v12, v13))
      return v9;
    v14 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
    v9 = *(_QWORD *)(v12 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems);
    v15 = a1;
    if (!v9)
    {
      sub_100740DA4();
      v9 = *(_QWORD *)(v12 + v14);
    }
    if (v9)
      v16 = v9;
    else
      v16 = (uint64_t)_swiftEmptyArrayStorage;
    if ((unint64_t)v16 >> 62)
      goto LABEL_29;
    v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v9);
    if (!v17)
    {
LABEL_22:

      swift_bridgeObjectRelease();
      return 0;
    }
    while (1)
    {
      while (__OFSUB__(v17--, 1))
      {
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        if (v16 < 0)
          v22 = v16;
        else
          v22 = v16 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v9);
        swift_bridgeObjectRetain(v16);
        v17 = _CocoaArrayWrapper.endIndex.getter(v22);
        swift_bridgeObjectRelease();
        if (!v17)
          goto LABEL_22;
      }
      if ((v16 & 0xC000000000000001) != 0)
      {
        v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v17, v16);
        goto LABEL_20;
      }
      if ((v17 & 0x8000000000000000) != 0)
        goto LABEL_27;
      if (v17 >= *(_QWORD *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_28;
      v19 = *(id *)(v16 + 32 + 8 * v17);
LABEL_20:
      v20 = v19;
      v9 = sub_100C59D28();

      if (v9)
      {

        swift_bridgeObjectRelease();
        return v9;
      }
      if (!v17)
        goto LABEL_22;
    }
  }
  v6 = objc_msgSend(v2, "layoutForInfo:", v5);
  if (!v6)
    return 0;
  v7 = v6;
  v8 = objc_opt_self(CRLConnectionLineAbstractLayout);
  v9 = swift_dynamicCastObjCClass(v7, v8);
  if (!v9)

  return v9;
}

void sub_100C59F14()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  id v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  id v44;
  id v45;
  unint64_t v46;
  uint64_t v47;
  _BYTE *v48;
  __n128 v49;
  uint64_t v50;
  id v51;
  void (*v52)(char *, char *, uint64_t);
  id v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  char *v57;
  void *v58;
  char *v59;
  id v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  char *v66;
  void *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  id v73;
  unsigned int (*v74)(uint64_t, uint64_t, uint64_t);
  id v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  _BYTE v89[32];
  char v90[32];

  v1 = v0;
  v87 = type metadata accessor for CRLBoard.RealTimeSessionInfo(0);
  v2 = *(_QWORD *)(v87 - 8);
  __chkstk_darwin(v87);
  v79 = (uint64_t *)((char *)&v73 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v83 = type metadata accessor for Date(0);
  v4 = *(_QWORD *)(v83 - 8);
  __chkstk_darwin(v83);
  v6 = (char *)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v7);
  v9 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v84 = (char *)&v73 - v11;
  v81 = type metadata accessor for CRLCollaboratorCursor(0);
  __chkstk_darwin(v81);
  v13 = (char *)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v82 = (char *)&v73 - v15;
  v16 = type metadata accessor for UUID(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v86 = (uint64_t)&v73 - v21;
  v22 = sub_1004B804C((uint64_t *)&unk_101405E90);
  __chkstk_darwin(v22);
  v80 = (uint64_t)&v73 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v25 = __chkstk_darwin(v24).n128_u64[0];
  v27 = (char *)&v73 - v26;
  v28 = (char *)objc_msgSend(v1, "editingCoordinator", v25);
  if (v28)
  {
    v88 = v28;
    v78 = v1;
    v85 = objc_msgSend(v1, "editorController");
    if (v85)
    {
      v77 = v17;
      v76 = v16;
      v29 = *(_QWORD *)&v88[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard]
          + OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo;
      swift_beginAccess(v29, v90, 0, 0);
      sub_1004CB7BC(v29, (uint64_t)v27, (uint64_t *)&unk_101405E90);
      v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48);
      LODWORD(v29) = v30(v27, 1, v87);
      sub_1004CB800((uint64_t)v27, (uint64_t *)&unk_101405E90);
      if ((_DWORD)v29 == 1)
      {

      }
      else
      {
        v74 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v30;
        v31 = objc_msgSend(v85, "selectionPath");
        sub_100C5A7C4(v31);
        v33 = v32;

        objc_allocWithZone((Class)type metadata accessor for CRLPersistableSelectionPath(0));
        v75 = v33;
        sub_1005AC98C(v75);
        v35 = v34;
        v36 = v86;
        sub_10071B48C(v86);
        v73 = v35;
        v37 = v77;
        v38 = (uint64_t)v84;
        v39 = v36;
        v40 = v76;
        (*(void (**)(char *, uint64_t, uint64_t))(v77 + 16))(v84, v39, v76);
        v41 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v38, 0, 1, v40);
        v42 = Date.init()(v41);
        v43 = Date.timeIntervalSince1970.getter(v42);
        (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v83);
        sub_1004CB7BC(v38, (uint64_t)v9, (uint64_t *)&unk_1013E1A50);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v9, 1, v40) == 1)
        {
          v44 = v73;
          v45 = v73;
          sub_1004CB800((uint64_t)v9, (uint64_t *)&unk_1013E1A50);
          v46 = sub_100577444();
          v47 = swift_allocError(&type metadata for CRLSerializationError, v46, 0, 0);
          *v48 = 0;
          swift_willThrow(v49);
          v50 = v47;

          sub_1004CB800(v38, (uint64_t *)&unk_1013E1A50);
          (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v86, v40);
          v51 = v85;
          if (qword_1013DD888 != -1)
            swift_once(&qword_1013DD888, sub_100A05DE4);
          swift_beginAccess(&static OS_os_log.realTimeSync, v89, 0, 0);
          v61 = (id)static OS_os_log.realTimeSync;
          v62 = static os_log_type_t.error.getter(v61);
          sub_100A06EBC((uint64_t)v61, &_mh_execute_header, v62, "Error sending selection to peers", 32, 2, (uint64_t)_swiftEmptyArrayStorage);

          swift_errorRelease(v50);
        }
        else
        {
          v52 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
          v52(v19, v9, v40);
          v53 = v73;
          sub_1004CB800(v38, (uint64_t *)&unk_1013E1A50);
          v52(v13, v19, v40);
          v54 = v81;
          v55 = (uint64_t)v82;
          *(double *)&v13[*(int *)(v81 + 24)] = v43;
          *(_QWORD *)&v13[*(int *)(v54 + 20)] = v53;
          sub_1004B84E0((uint64_t)v13, v55, type metadata accessor for CRLCollaboratorCursor);
          v56 = v78;
          v57 = (char *)objc_msgSend(v78, "board");
          if (v57)
          {
            v58 = v57;
            v59 = (char *)*(id *)&v57[OBJC_IVAR____TtC8Freeform8CRLBoard_store];

            v60 = *(id *)&v59[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_crdtContext];
            v63 = sub_10088C174((uint64_t)v60);
            v65 = v64;

            sub_1004BE310(v63, v65);
            v66 = (char *)objc_msgSend(v56, "board");
            if (v66)
            {
              v67 = v66;
              v68 = &v66[OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo];
              swift_beginAccess(&v66[OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo], v89, 0, 0);
              v69 = (uint64_t)v68;
              v70 = v80;
              sub_1004CB7BC(v69, v80, (uint64_t *)&unk_101405E90);

              if (v74(v70, 1, v87))
              {

                sub_1004BBBC8(v63, v65);
                sub_1004BBBC8(v63, v65);

                sub_1004B84A4(v55, type metadata accessor for CRLCollaboratorCursor);
                (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v86, v40);
                sub_1004CB800(v70, (uint64_t *)&unk_101405E90);
              }
              else
              {
                v71 = v79;
                sub_1004B8460(v70, (uint64_t)v79, type metadata accessor for CRLBoard.RealTimeSessionInfo);
                sub_1004CB800(v70, (uint64_t *)&unk_101405E90);
                v72 = *v71;
                swift_retain(*v71);
                sub_1004B84A4((uint64_t)v71, type metadata accessor for CRLBoard.RealTimeSessionInfo);
                sub_1004BE310(v63, v65);
                sub_100CE15BC(1, v63, v65, v72);
                swift_release(v72);

                sub_1004BBBC8(v63, v65);
                sub_1004BBBC8(v63, v65);

                sub_1004B84A4(v55, type metadata accessor for CRLCollaboratorCursor);
                (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v86, v40);
                sub_1004BBBC8(v63, v65);
              }
            }
            else
            {

              sub_1004BBBC8(v63, v65);
              sub_1004BBBC8(v63, v65);

              sub_1004B84A4(v55, type metadata accessor for CRLCollaboratorCursor);
              (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v86, v40);
            }
          }
          else
          {
            __break(1u);
          }
        }
      }
    }
    else
    {

    }
  }
}

void sub_100C5A7C4(void *a1)
{
  void *v1;
  void *v2;
  _BYTE *v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  Swift::Int v8;
  uint64_t v9;
  int64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  __objc2_class_ro **p_info;
  char **v17;
  char **v18;
  unint64_t v19;
  unint64_t i;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  Class isa;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  void *v35;
  uint64_t v36;
  _QWORD *v37;
  double *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char isUniquelyReferenced_nonNull_native;
  Swift::Int v44;
  Swift::Int v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  char v49;
  id v50;
  void *v51;
  Class v52;
  id v53;
  id v54;
  int64_t v55;
  char *v56;
  _BYTE *v57;
  void *v58;
  void *v59;
  int64_t v61;
  _BYTE v62[40];
  _BYTE v63[40];
  _OWORD v64[2];
  uint64_t v65;
  _OWORD v66[2];
  uint64_t v67;
  _QWORD *v68;

  v2 = v1;
  v3 = &_swiftEmptySetSingleton;
  v68 = &_swiftEmptySetSingleton;
  v4 = objc_msgSend(v1, "selectionModelTranslator");
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(v4, "infosForSelectionPath:", a1);

    v3 = (_BYTE *)static Set._unconditionallyBridgeFromObjectiveC(_:)(v6, &type metadata for AnyHashable, &protocol witness table for AnyHashable);
  }
  swift_bridgeObjectRetain(v3);
  v8 = sub_100C5C144(v7);
  v9 = *(_QWORD *)(v8 + 16);
  swift_release(v8);
  if (!v9)
  {
LABEL_60:
    swift_bridgeObjectRelease();
    v53 = a1;
    return;
  }
  v54 = v2;
  v10 = 0;
  v11 = v3 + 56;
  v12 = 1 << v3[32];
  if (v12 < 64)
    v13 = ~(-1 << v12);
  else
    v13 = -1;
  v14 = v13 & *((_QWORD *)v3 + 7);
  v15 = (unint64_t)(v12 + 63) >> 6;
  p_info = &OBJC_METACLASS___CRLCanvasEditorHelper.info;
  v17 = &selRef_isLineSegment;
  v18 = &selRef_masksToBounds;
  v56 = v3 + 56;
  v57 = v3;
  v55 = v15;
  if (v14)
    goto LABEL_10;
LABEL_11:
  v21 = v10 + 1;
  if (!__OFADD__(v10, 1))
  {
    if (v21 < v15)
    {
      v22 = *(_QWORD *)&v11[8 * v21];
      v23 = v10 + 1;
      if (v22)
        goto LABEL_24;
      v23 = v10 + 2;
      if (v10 + 2 < v15)
      {
        v22 = *(_QWORD *)&v11[8 * v23];
        if (v22)
          goto LABEL_24;
        v23 = v10 + 3;
        if (v10 + 3 < v15)
        {
          v22 = *(_QWORD *)&v11[8 * v23];
          if (!v22)
          {
            v24 = v10 + 4;
            if (v10 + 4 < v15)
            {
              v22 = *(_QWORD *)&v11[8 * v24];
              if (v22)
              {
                v23 = v10 + 4;
                goto LABEL_24;
              }
              while (1)
              {
                v23 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_63;
                if (v23 >= v15)
                  goto LABEL_58;
                v22 = *(_QWORD *)&v11[8 * v23];
                ++v24;
                if (v22)
                  goto LABEL_24;
              }
            }
            goto LABEL_58;
          }
LABEL_24:
          v14 = (v22 - 1) & v22;
          v61 = v23;
          for (i = __clz(__rbit64(v22)) + (v23 << 6); ; i = v19 | (v10 << 6))
          {
            sub_1004B8968(*((_QWORD *)v3 + 6) + 40 * i, (uint64_t)v66);
            v64[0] = v66[0];
            v64[1] = v66[1];
            v65 = v67;
            isa = AnyHashable._bridgeToObjectiveC()().isa;
            v26 = type metadata accessor for CRLFreehandDrawingShapeItem(0);
            v27 = swift_dynamicCastClass(isa, v26);

            if (!v27)
              goto LABEL_55;
            v28 = type metadata accessor for CRLGroupSelection();
            v30 = objc_msgSend(a1, v18[117], swift_getObjCClassFromMetadata(v28, v29));
            if (!v30)
              goto LABEL_55;
            v31 = v30;
            if (!swift_dynamicCastClass(v30, v28))
              break;
            v59 = v31;
            v32 = (uint64_t)sub_1007FB6B4();
            v33 = v32;
            if ((unint64_t)v32 >> 62)
            {
              if (v32 >= 0)
                v32 &= 0xFFFFFFFFFFFFFF8uLL;
              if (!_CocoaArrayWrapper.endIndex.getter(v32))
              {
LABEL_53:

                swift_bridgeObjectRelease();
LABEL_54:
                v18 = &selRef_masksToBounds;
LABEL_55:
                if (objc_msgSend((id)objc_opt_self(p_info + 216), v17[22], 0))
                {
                  sub_1004B8968((uint64_t)v64, (uint64_t)v62);
                  sub_100ADBD08((uint64_t)v63, (uint64_t)v62);
                  sub_1004B89A4((uint64_t)v63);
                }
                sub_1004B89A4((uint64_t)v64);
                v10 = v61;
                if (!v14)
                  goto LABEL_11;
                goto LABEL_10;
              }
            }
            else if (!*(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              goto LABEL_53;
            }
            if ((v33 & 0xC000000000000001) != 0)
            {
              v34 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v33);
            }
            else
            {
              if (!*(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_62;
              v34 = *(id *)(v33 + 32);
            }
            v35 = v34;
            swift_bridgeObjectRelease();
            v36 = type metadata accessor for CRLFreehandDrawingItem(0);
            if (!swift_dynamicCastClass(v35, v36))
            {

              v17 = &selRef_isLineSegment;
              goto LABEL_54;
            }
            v58 = v35;
            v37 = v68;
            v38 = sub_1007FB6B4();
            v39 = sub_100521960((uint64_t)v38);
            swift_bridgeObjectRelease();
            v40 = *(_QWORD *)(v39 + 16);
            if (v40)
            {
              v41 = 0;
              v42 = v39 + 32;
              do
              {
                sub_1004B8968(v42 + 40 * v41, (uint64_t)v63);
                v44 = v37[5];
                swift_bridgeObjectRetain(v37);
                v45 = AnyHashable._rawHashValue(seed:)(v44);
                v46 = -1 << *((_BYTE *)v37 + 32);
                v47 = v45 & ~v46;
                if (((*(_QWORD *)((char *)v37 + ((v47 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v47) & 1) != 0)
                {
                  v48 = ~v46;
                  while (1)
                  {
                    sub_1004B8968(v37[6] + 40 * v47, (uint64_t)v62);
                    v49 = static AnyHashable.== infix(_:_:)(v62, v63);
                    sub_1004B89A4((uint64_t)v62);
                    if ((v49 & 1) != 0)
                      break;
                    v47 = (v47 + 1) & v48;
                    if (((*(_QWORD *)((char *)v37 + ((v47 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v47) & 1) == 0)
                      goto LABEL_36;
                  }
                }
                else
                {
LABEL_36:
                  swift_bridgeObjectRelease();
                  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                  sub_1004B8968((uint64_t)v63, (uint64_t)v62);
                  sub_100AE9CFC((uint64_t)v62, v47, isUniquelyReferenced_nonNull_native);
                }
                swift_bridgeObjectRelease();
                sub_1004B89A4((uint64_t)v63);
                ++v41;
              }
              while (v41 != v40);
              swift_bridgeObjectRelease();
              v11 = v56;
              v3 = v57;
              v15 = v55;
              p_info = (__objc2_class_ro **)(&OBJC_METACLASS___CRLCanvasEditorHelper + 32);
            }
            else
            {
              swift_bridgeObjectRelease();
            }
            v17 = &selRef_isLineSegment;
            v10 = v61;

            sub_1004B89A4((uint64_t)v64);
            v68 = v37;
            v18 = &selRef_masksToBounds;
            if (!v14)
              goto LABEL_11;
LABEL_10:
            v19 = __clz(__rbit64(v14));
            v14 &= v14 - 1;
            v61 = v10;
          }

          goto LABEL_55;
        }
      }
    }
LABEL_58:
    v50 = objc_msgSend(v54, "selectionModelTranslator", swift_release(v3).n128_f64[0]);
    if (v50)
    {
      v51 = v50;
      v52 = Set._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v51, "selectionPathForInfos:", v52, swift_bridgeObjectRelease().n128_f64[0]);

      return;
    }
    goto LABEL_60;
  }
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
}

void sub_100C5ADA0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  char *v21;
  void *v22;
  uint64_t v23;
  uint64_t (*v24)(char *, uint64_t, uint64_t);
  char *v25;
  void *v26;
  uint64_t v27;
  uint64_t *v28;
  char *v29;
  void *v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  double v41;
  double v42;
  int *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  _BYTE *v51;
  __n128 v52;
  void (*v53)(char *, uint64_t);
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char v66[32];
  char v67[24];
  char v68[32];

  v63 = type metadata accessor for CRLRealTimeEnter(0);
  __chkstk_darwin(v63);
  v62 = (uint64_t *)((char *)&v57 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v2);
  v64 = (uint64_t)&v57 - v3;
  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v65 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v57 - v8;
  v10 = type metadata accessor for CRLBoard.RealTimeSessionInfo(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (uint64_t *)((char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = sub_1004B804C((uint64_t *)&unk_101405E90);
  __chkstk_darwin(v14);
  v16 = (char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v18 = __chkstk_darwin(v17).n128_u64[0];
  v20 = (char *)&v57 - v19;
  v21 = (char *)objc_msgSend(v0, "editingCoordinator", v18);
  if (!v21)
    return;
  v22 = v21;
  v59 = v4;
  v60 = v9;
  v58 = v5;
  v61 = v13;
  v23 = *(_QWORD *)&v21[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard]
      + OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo;
  swift_beginAccess(v23, v68, 0, 0);
  sub_1004CB7BC(v23, (uint64_t)v20, (uint64_t *)&unk_101405E90);
  v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  LODWORD(v23) = v24(v20, 1, v10);
  sub_1004CB800((uint64_t)v20, (uint64_t *)&unk_101405E90);
  if ((_DWORD)v23 == 1)
  {

    return;
  }
  v25 = (char *)objc_msgSend(v0, "board");
  if (!v25)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v16, 1, 1, v10);
    goto LABEL_13;
  }
  v26 = v25;
  v27 = (uint64_t)&v25[OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo];
  swift_beginAccess(&v25[OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo], v67, 0, 0);
  sub_1004CB7BC(v27, (uint64_t)v16, (uint64_t *)&unk_101405E90);

  if (v24(v16, 1, v10) == 1)
  {
LABEL_13:

    sub_1004CB800((uint64_t)v16, (uint64_t *)&unk_101405E90);
    return;
  }
  v28 = v61;
  sub_1004B84E0((uint64_t)v16, (uint64_t)v61, type metadata accessor for CRLBoard.RealTimeSessionInfo);
  v29 = (char *)objc_msgSend(v0, "board");
  if (v29
    && (v30 = v29,
        v31 = *(_QWORD *)&v29[OBJC_IVAR____TtC8Freeform8CRLBoard_shareState],
        swift_retain(v31),
        v30,
        v32 = objc_msgSend(*(id *)(v31 + 16), "currentUserParticipant"),
        swift_release(v31),
        v32))
  {
    v33 = (uint64_t)v60;
    sub_10071B48C((uint64_t)v60);
    v57 = 0;
    v36 = objc_msgSend(v32, "userIdentity");
    v38 = v58;
    v37 = v59;
    v39 = v65;
    v40 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v58 + 16))(v65, v33, v59);
    v41 = Date.timeIntervalSince1970.getter(v40);
    if (v36)
    {
      v42 = v41;
      v44 = (uint64_t)v62;
      v43 = (int *)v63;
      *v62 = v36;
      (*(void (**)(uint64_t, char *, uint64_t))(v38 + 32))(v44 + v43[5], v39, v37);
      *(double *)(v44 + v43[6]) = v42;
      *(_BYTE *)(v44 + v43[7]) = 1;
      v45 = v64;
      sub_1004B84E0(v44, v64, type metadata accessor for CRLRealTimeEnter);
      v46 = v57;
      v47 = sub_10078F194();
      if (!v46)
      {
        v54 = v47;
        v55 = v48;
        v56 = *v28;
        sub_1004BE310(v47, v48);
        sub_1004BE310(v54, v55);
        swift_retain(v56);
        sub_100CE15BC(2, v54, v55, v56);

        swift_release(v56);
        sub_1004BBBC8(v54, v55);
        sub_1004BBBC8(v54, v55);
        sub_1004B84A4(v45, type metadata accessor for CRLRealTimeEnter);
        (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v33, v37);
        sub_1004B84A4((uint64_t)v28, type metadata accessor for CRLBoard.RealTimeSessionInfo);
        sub_1004BBBC8(v54, v55);
        return;
      }
      sub_1004B84A4(v45, type metadata accessor for CRLRealTimeEnter);
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v33, v37);
    }
    else
    {
      v49 = sub_100577444();
      v50 = swift_allocError(&type metadata for CRLSerializationError, v49, 0, 0);
      *v51 = 0;
      swift_willThrow(v52);
      v46 = v50;
      v53 = *(void (**)(char *, uint64_t))(v38 + 8);
      v53(v39, v37);
      v53((char *)v33, v37);
    }
    if (qword_1013DD888 != -1)
      swift_once(&qword_1013DD888, sub_100A05DE4);
    swift_beginAccess(&static OS_os_log.realTimeSync, v66, 0, 0);
    v34 = (id)static OS_os_log.realTimeSync;
    v35 = static os_log_type_t.error.getter(v34);
    sub_100A06EBC((uint64_t)v34, &_mh_execute_header, v35, "Error sending Real Time Enter to peers", 38, 2, (uint64_t)_swiftEmptyArrayStorage);

    swift_errorRelease(v46);
  }
  else
  {

  }
  sub_1004B84A4((uint64_t)v28, type metadata accessor for CRLBoard.RealTimeSessionInfo);
}

uint64_t sub_100C5B3A0()
{
  void *v0;
  id v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t i;
  uint64_t v6;
  id v8;
  uint64_t v9;
  id v10;
  void *v11;
  void *v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;

  v1 = objc_msgSend(v0, "infosForCurrentSelectionPath");
  v2 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v1, &type metadata for AnyHashable, &protocol witness table for AnyHashable);

  sub_100C58998(v2);
  v4 = v3;
  if (v3 >> 62)
    goto LABEL_20;
  for (i = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10); ; i = _CocoaArrayWrapper.endIndex.getter(v14))
  {
    v6 = *(_QWORD *)(v2 + 16);
    swift_bridgeObjectRelease();
    if (i < v6)
      break;
    v8 = v0;
    v2 = (uint64_t)sub_100C5C4A0(v4, v8);
    swift_bridgeObjectRelease();

    if ((unint64_t)v2 >> 62)
    {
      if (v2 < 0)
        v15 = v2;
      else
        v15 = v2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v2);
      v0 = (void *)_CocoaArrayWrapper.endIndex.getter(v15);
      swift_bridgeObjectRelease();
      if (!v0)
      {
LABEL_16:
        swift_bridgeObjectRelease();
        return 1;
      }
    }
    else
    {
      v0 = *(void **)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v0)
        goto LABEL_16;
    }
    v9 = 4;
    while (1)
    {
      v4 = v9 - 4;
      v10 = (v2 & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9 - 4, v2)
          : *(id *)(v2 + 8 * v9);
      v11 = v10;
      v12 = (void *)(v9 - 3);
      if (__OFADD__(v4, 1))
        break;
      if ((objc_msgSend(v10, "isPathEditable") & 1) == 0)
      {
        swift_bridgeObjectRelease();

        return 0;
      }
      v13 = objc_msgSend(v11, "isEditingPath");

      if (!v13)
        goto LABEL_4;
      ++v9;
      if (v12 == v0)
        goto LABEL_16;
    }
    __break(1u);
LABEL_20:
    if (v4 < 0)
      v14 = v4;
    else
      v14 = v4 & 0xFFFFFFFFFFFFFF8;
  }
LABEL_4:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_100C5B5A4(char *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  uint64_t *v28;
  char *v29;
  void *v30;
  uint64_t v31;
  unsigned int (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t *v34;
  char *v35;
  void *v36;
  uint64_t v37;
  char *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  _BYTE *v44;
  __n128 v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  uint64_t v48;
  void (*v49)(char *, _QWORD, uint64_t, uint64_t);
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  _OWORD v78[2];
  uint64_t v79;
  char v80[24];
  char v81[8];

  v72 = a1;
  v2 = sub_1004B804C(&qword_1013EE310);
  __chkstk_darwin(v2);
  v73 = (char *)&v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = type metadata accessor for CRLStartOrEndFollow(0);
  v69 = *(_QWORD *)(v74 - 8);
  __chkstk_darwin(v74);
  v67 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v68 = (uint64_t)&v65 - v6;
  v7 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v7);
  v71 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v70 = (char *)&v65 - v10;
  __chkstk_darwin(v11);
  v76 = (char *)&v65 - v12;
  v13 = type metadata accessor for UUID(0);
  v77 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v75 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1004B804C((uint64_t *)&unk_101405E90);
  __chkstk_darwin(v15);
  v17 = (char *)&v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v65 - v19;
  v21 = type metadata accessor for CRLBoard.RealTimeSessionInfo(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v65 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v26 = __chkstk_darwin(v25).n128_u64[0];
  v28 = (uint64_t *)((char *)&v65 - v27);
  v29 = (char *)objc_msgSend(v1, "board", v26);
  if (!v29)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v20, 1, 1, v21);
    goto LABEL_9;
  }
  v30 = v29;
  v66 = v13;
  v31 = (uint64_t)&v29[OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo];
  swift_beginAccess(&v29[OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo], v81, 0, 0);
  sub_1004CB7BC(v31, (uint64_t)v20, (uint64_t *)&unk_101405E90);

  v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
  if (v32(v20, 1, v21) == 1)
  {
LABEL_9:
    v39 = (uint64_t *)&unk_101405E90;
    v40 = (uint64_t)v20;
    goto LABEL_10;
  }
  v33 = (uint64_t)v20;
  v34 = v28;
  sub_1004B84E0(v33, (uint64_t)v28, type metadata accessor for CRLBoard.RealTimeSessionInfo);
  v35 = (char *)objc_msgSend(v1, "board");
  if (!v35)
  {
LABEL_6:
    v38 = v76;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v77 + 56))(v76, 1, 1, v66);
LABEL_7:
    sub_1004B84A4((uint64_t)v28, type metadata accessor for CRLBoard.RealTimeSessionInfo);
    v39 = (uint64_t *)&unk_1013E1A50;
    v40 = (uint64_t)v38;
LABEL_10:
    sub_1004CB800(v40, v39);
    return 0;
  }
  v36 = v35;
  v37 = (uint64_t)&v35[OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo];
  swift_beginAccess(&v35[OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo], v80, 0, 0);
  sub_1004CB7BC(v37, (uint64_t)v17, (uint64_t *)&unk_101405E90);

  if (v32(v17, 1, v21))
  {
    sub_1004CB800((uint64_t)v17, (uint64_t *)&unk_101405E90);
    goto LABEL_6;
  }
  sub_1004B8460((uint64_t)v17, (uint64_t)v24, type metadata accessor for CRLBoard.RealTimeSessionInfo);
  sub_1004CB800((uint64_t)v17, (uint64_t *)&unk_101405E90);
  v43 = *(_QWORD *)&v24[*(int *)(v21 + 24)];
  swift_retain(v43);
  sub_1004B84A4((uint64_t)v24, type metadata accessor for CRLBoard.RealTimeSessionInfo);
  v44 = sub_1006421D0();
  v45 = swift_release(v43);
  if (!v44)
    goto LABEL_6;
  v46 = v77;
  v47 = *(void (**)(char *, char *, uint64_t))(v77 + 16);
  v38 = v76;
  v48 = v66;
  ((void (*)(char *, _BYTE *, uint64_t, __n128))v47)(v76, &v44[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_presenceUUID], v66, v45);

  v49 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56);
  v49(v38, 0, 1, v48);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v38, 1, v48) == 1)
    goto LABEL_7;
  v50 = v75;
  (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v75, v38, v48);
  v51 = (uint64_t)v70;
  v47(v70, v50, v48);
  v49((char *)v51, 0, 1, v48);
  v52 = (uint64_t)v71;
  v47(v71, v72, v48);
  v49((char *)v52, 0, 1, v48);
  v53 = v73;
  sub_1008AF608(v51, v52, v73);
  v54 = v69;
  v55 = v74;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v69 + 56))(v53, 0, 1, v74);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v53, 1, v55) != 1)
  {
    v59 = v68;
    sub_1004B84E0((uint64_t)v53, v68, type metadata accessor for CRLStartOrEndFollow);
    type metadata accessor for CRContext(0);
    v79 = 0;
    memset(v78, 0, sizeof(v78));
    v60 = (void *)static CRContext.newTransientContext(uniqueAssetManager:encryptionDelegate:)(0, v78);
    sub_1004CB800((uint64_t)v78, (uint64_t *)&unk_1014064C0);
    v61 = sub_1008AF84C();
    v63 = v62;

    v64 = *v34;
    sub_1004BE310(v61, v63);
    swift_retain(v64);
    v41 = 1;
    sub_100CE140C(6, v61, v63, 1, v64);
    swift_release(v64);
    sub_1004BBBC8(v61, v63);
    sub_1004B84A4(v59, type metadata accessor for CRLStartOrEndFollow);
    (*(void (**)(char *, uint64_t))(v46 + 8))(v50, v48);
    sub_1004B84A4((uint64_t)v34, type metadata accessor for CRLBoard.RealTimeSessionInfo);
    sub_1004BBBC8(v61, v63);
    return v41;
  }
  sub_1004CB800((uint64_t)v53, &qword_1013EE310);
  if (qword_1013DD7C8 != -1)
    swift_once(&qword_1013DD7C8, sub_100A03AC0);
  swift_beginAccess(&static OS_os_log.crlFollow, v78, 0, 0);
  v56 = (id)static OS_os_log.crlFollow;
  v58 = static os_log_type_t.default.getter(v57);
  sub_100A06EBC((uint64_t)v56, &_mh_execute_header, v58, "Unable to generate a CRLStartOrEndFollow object in sendViewportRequestMessage", 77, 2, (uint64_t)_swiftEmptyArrayStorage);

  (*(void (**)(char *, uint64_t))(v46 + 8))(v50, v48);
  sub_1004B84A4((uint64_t)v34, type metadata accessor for CRLBoard.RealTimeSessionInfo);
  return 0;
}

void sub_100C5BF94(void *a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  id v10;

  v8 = *a3;
  v10 = a1;
  if (v8 != -1)
    swift_once(a3, a5);
  v9 = sub_1004B804C(&qword_1013E6D60);
  sub_1004F2A1C(v9, a4);
  Tips.Event.sendDonation<>(_:)(0, 0);

}

void sub_100C5C130()
{
  qword_101481160 = (uint64_t)&off_101265A60;
}

Swift::Int sub_100C5C144(uint64_t isStackAllocationSafe)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  unsigned int v4;
  unint64_t v5;
  uint64_t v6;
  size_t v7;
  Swift::Int v8;
  __n128 v9;
  void *v10;
  uint64_t v12;

  v2 = isStackAllocationSafe;
  v3 = *(_BYTE *)(isStackAllocationSafe + 32);
  v4 = v3 & 0x3F;
  v5 = (1 << v3) + 63;
  v6 = v5 >> 6;
  v7 = 8 * (v5 >> 6);
  if (v4 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v5 >> 6), 8), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v12 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    v8 = sub_100C5C2A0((Swift::Int)&v12 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v6, v2);
    v9 = swift_release(v2);
    if (v1)
      swift_willThrow(v9);
  }
  else
  {
    v10 = (void *)swift_slowAlloc(v7, -1);
    bzero(v10, v7);
    v8 = sub_100C5C2A0((Swift::Int)v10, v6, v2);
    swift_release(v2);
    swift_slowDealloc(v10, -1, -1);
  }
  return v8;
}

Swift::Int sub_100C5C2A0(Swift::Int result, uint64_t a2, uint64_t a3)
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  Class isa;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t *v20;
  _BYTE v21[40];
  uint64_t v22;

  v20 = (unint64_t *)result;
  v4 = 0;
  v5 = a3 + 56;
  v6 = 1 << *(_BYTE *)(a3 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a3 + 56);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v4 << 6);
      goto LABEL_5;
    }
    v15 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v15 >= v9)
      goto LABEL_24;
    v16 = *(_QWORD *)(v5 + 8 * v15);
    ++v4;
    if (!v16)
    {
      v4 = v15 + 1;
      if (v15 + 1 >= v9)
        goto LABEL_24;
      v16 = *(_QWORD *)(v5 + 8 * v4);
      if (!v16)
      {
        v4 = v15 + 2;
        if (v15 + 2 >= v9)
          goto LABEL_24;
        v16 = *(_QWORD *)(v5 + 8 * v4);
        if (!v16)
          break;
      }
    }
LABEL_20:
    v8 = (v16 - 1) & v16;
    v11 = __clz(__rbit64(v16)) + (v4 << 6);
LABEL_5:
    sub_1004B8968(*(_QWORD *)(a3 + 48) + 40 * v11, (uint64_t)v21);
    isa = AnyHashable._bridgeToObjectiveC()().isa;
    v13 = type metadata accessor for CRLFreehandDrawingShapeItem(0);
    v14 = swift_dynamicCastClass(isa, v13);

    result = sub_1004B89A4((uint64_t)v21);
    if (v14)
    {
      *(unint64_t *)((char *)v20 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      if (__OFADD__(v22++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain(a3);
        return sub_100CD9110(v20, a2, v22, a3);
      }
    }
  }
  v17 = v15 + 3;
  if (v17 >= v9)
    goto LABEL_24;
  v16 = *(_QWORD *)(v5 + 8 * v17);
  if (v16)
  {
    v4 = v17;
    goto LABEL_20;
  }
  while (1)
  {
    v4 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v4 >= v9)
      goto LABEL_24;
    v16 = *(_QWORD *)(v5 + 8 * v4);
    ++v17;
    if (v16)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

BOOL sub_100C5C474(double a1)
{
  return fabs(a1 + -1.0) < 0.00999999978 || a1 == 1.0;
}

_QWORD *sub_100C5C4A0(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;

  if ((unint64_t)a1 >> 62)
    goto LABEL_18;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v4; v4 = _CocoaArrayWrapper.endIndex.getter(v17))
  {
    v5 = 4;
    while (1)
    {
      v6 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5 - 4, a1)
         : *(id *)(a1 + 8 * v5);
      v7 = v6;
      v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1))
        break;
      v9 = objc_msgSend(a2, "repForInfo:", v6);
      if (v9)
      {
        v10 = v9;
        v11 = objc_opt_self(CRLShapeRep);
        v12 = swift_dynamicCastObjCClass(v10, v11);

        if (v12)
        {
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v13);
          v15 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
          v14 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v15 >= v14 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v14 > 1, v15 + 1, 1);
          v16 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v12);
          specialized Array._endMutation()(v16);
        }
        else
        {

        }
      }
      else
      {

      }
      ++v5;
      if (v8 == v4)
        goto LABEL_22;
    }
    __break(1u);
LABEL_18:
    if (a1 < 0)
      v17 = a1;
    else
      v17 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
LABEL_22:
  swift_bridgeObjectRelease(a1);
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100C5C654(unint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t result;
  char v13;

  v3 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v1);
  *v1 = v3;
  if (!isUniquelyReferenced_nonNull_bridgeObject || v3 < 0 || (v3 & 0x4000000000000000) != 0)
  {
    v3 = sub_100D14ED8(v3);
    *v1 = v3;
  }
  v5 = v3 & 0xFFFFFFFFFFFFFF8;
  v6 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    v7 = v6 - 1;
    v8 = v6 - 1 - a1;
    if (v8 >= 0)
    {
      v9 = v5 + 8 * a1;
      v10 = *(_QWORD *)(v9 + 32);
      v11 = memmove((void *)(v9 + 32), (const void *)(v9 + 40), 8 * v8);
      *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFF8) + 0x10) = v7;
      specialized Array._endMutation()(v11);
      return v10;
    }
  }
  v13 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v13, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_100C5C73C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t *v2;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t result;
  unint64_t v13;
  char v15;

  v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native(*v2) & 1) == 0)
    v5 = sub_100D14FC0(v5);
  v6 = *(_QWORD *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
    goto LABEL_15;
  }
  v7 = v6 - 1;
  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 72);
  v11 = v5 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)) + v10 * a1;
  result = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v9 + 32))(a2, v11, v8);
  v13 = v7 - a1;
  if ((uint64_t)(v7 - a1) < 0)
  {
LABEL_15:
    v15 = 2;
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v15, 1046, 0);
    __break(1u);
    return result;
  }
  if (v10 > 0 || v11 >= v11 + v10 + v10 * v13)
  {
    result = swift_arrayInitWithTakeFrontToBack(v11, v11 + v10, v13, v8);
  }
  else if (v10)
  {
    result = swift_arrayInitWithTakeBackToFront(v11);
  }
  *(_QWORD *)(v5 + 16) = v7;
  *v2 = v5;
  return result;
}

uint64_t sub_100C5C878@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t *v2;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t result;
  unint64_t v13;

  v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native(*v2) & 1) == 0)
    v5 = sub_100D15008(v5);
  v6 = *(_QWORD *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
    goto LABEL_15;
  }
  v7 = v6 - 1;
  v8 = type metadata accessor for CRLBoardIdentifier(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 72);
  v11 = v5 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)) + v10 * a1;
  result = sub_1004DB5FC(v11, a2);
  v13 = v7 - a1;
  if ((uint64_t)(v7 - a1) < 0)
  {
LABEL_15:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
    __break(1u);
    return result;
  }
  if (v10 > 0 || v11 >= v11 + v10 + v10 * v13)
  {
    result = swift_arrayInitWithTakeFrontToBack(v11, v11 + v10, v13, v8);
  }
  else if (v10)
  {
    result = swift_arrayInitWithTakeBackToFront(v11);
  }
  *(_QWORD *)(v5 + 16) = v7;
  *v2 = v5;
  return result;
}

uint64_t sub_100C5C9AC(unint64_t a1)
{
  return sub_100C5C9B8(a1, sub_100D14ED8);
}

uint64_t sub_100C5C9B8(unint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t *v2;
  uint64_t v5;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t result;
  char v15;

  v5 = *v2;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v2);
  *v2 = v5;
  if (!isUniquelyReferenced_nonNull_bridgeObject || v5 < 0 || (v5 & 0x4000000000000000) != 0)
  {
    v5 = a2(v5);
    *v2 = v5;
  }
  v7 = v5 & 0xFFFFFFFFFFFFFF8;
  v8 = *(_QWORD *)(v7 + 16);
  if (v8 <= a1)
  {
    __break(1u);
  }
  else
  {
    v9 = v8 - 1;
    v10 = v8 - 1 - a1;
    if (v10 >= 0)
    {
      v11 = v7 + 8 * a1;
      v12 = *(_QWORD *)(v11 + 32);
      v13 = memmove((void *)(v11 + 32), (const void *)(v11 + 40), 8 * v10);
      *(_QWORD *)(v7 + 16) = v9;
      specialized Array._endMutation()(v13);
      return v12;
    }
  }
  v15 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v15, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_100C5CA9C(unint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t result;
  char v13;

  v3 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v1);
  *v1 = v3;
  if (!isUniquelyReferenced_nonNull_bridgeObject || v3 < 0 || (v3 & 0x4000000000000000) != 0)
  {
    v3 = sub_100D14ED8(v3);
    *v1 = v3;
  }
  v5 = v3 & 0xFFFFFFFFFFFFFF8;
  v6 = *(_QWORD *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    v7 = v6 - 1;
    v8 = v6 - 1 - a1;
    if (v8 >= 0)
    {
      v9 = v5 + 8 * a1;
      v10 = *(_QWORD *)(v9 + 32);
      v11 = memmove((void *)(v9 + 32), (const void *)(v9 + 40), 8 * v8);
      *(_QWORD *)(v5 + 16) = v7;
      specialized Array._endMutation()(v11);
      return v10;
    }
  }
  v13 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v13, 1046, 0);
  __break(1u);
  return result;
}

uint64_t CRLStatusHUDManager.ready.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_ready);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_ready, v3, 0, 0);
  return *v1;
}

void CRLStatusHUDManager.ready.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  _BYTE v4[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_ready);
  swift_beginAccess(v1 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_ready, v4, 1, 0);
  *v3 = a1;
  if ((a1 & 1) != 0)
    sub_100C5F4C4();
}

void (*CRLStatusHUDManager.ready.modify(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_ready;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  return sub_100C5CD1C;
}

void sub_100C5CD1C(_QWORD *a1, char a2)
{
  _QWORD *v3;

  v3 = (_QWORD *)*a1;
  swift_endAccess(*a1);
  if ((a2 & 1) == 0 && *(_BYTE *)(v3[3] + v3[4]) == 1)
    sub_100C5F4C4();
  free(v3);
}

id CRLStatusHUDManager.delayedControllers.getter()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_delayedControllers);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_delayedControllers, v3, 0, 0);
  return *v1;
}

void CRLStatusHUDManager.delayedControllers.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  _BYTE v5[24];

  v3 = (void **)(v1 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_delayedControllers);
  swift_beginAccess(v3, v5, 1, 0);
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*CRLStatusHUDManager.delayedControllers.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_delayedControllers, a1, 33, 0);
  return j__swift_endAccess_0;
}

void *CRLStatusHUDManager.containerView.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_containerView);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_containerView, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void CRLStatusHUDManager.containerView.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  id v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE v8[24];

  v3 = (void **)(v1 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_containerView);
  swift_beginAccess(v1 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_containerView, v8, 1, 0);
  v4 = *v3;
  *v3 = a1;
  v5 = a1;

  v6 = (_BYTE *)(v1 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_ready);
  swift_beginAccess(v1 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_ready, &v7, 0, 0);
  if (*v6 == 1)
    sub_100C5F4C4();

}

void (*CRLStatusHUDManager.containerView.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_containerView, a1, 33, 0);
  return sub_100C5D0F4;
}

void sub_100C5D0F4(uint64_t a1, char a2)
{
  _BYTE *v4;

  swift_endAccess(a1);
  if ((a2 & 1) == 0)
  {
    v4 = (_BYTE *)(*(_QWORD *)(a1 + 24) + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_ready);
    swift_beginAccess(v4, a1, 0, 0);
    if (*v4 == 1)
      sub_100C5F4C4();
  }
}

uint64_t CRLStatusHUDManager.alwaysUseDarkAppearance.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_alwaysUseDarkAppearance);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_alwaysUseDarkAppearance, v3, 0, 0);
  return *v1;
}

uint64_t CRLStatusHUDManager.alwaysUseDarkAppearance.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_alwaysUseDarkAppearance);
  result = swift_beginAccess(v3, v5, 1, 0);
  *v3 = a1;
  return result;
}

uint64_t (*CRLStatusHUDManager.alwaysUseDarkAppearance.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_alwaysUseDarkAppearance, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void CRLStatusHUDManager.maxTextWidth.getter()
{
  uint64_t v0;
  id *v1;
  id v2;
  void *v3;
  _BYTE v4[24];
  CGRect v5;

  v1 = (id *)(v0 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_containerView);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_containerView, v4, 0, 0);
  if (*v1)
  {
    v2 = objc_msgSend(*v1, "window");
    if (v2)
    {
      v3 = v2;
      objc_msgSend(v2, "bounds");
      CGRectGetWidth(v5);

    }
  }
}

void CRLStatusHUDManager.maxHUDWidth.getter()
{
  uint64_t v0;
  id *v1;
  id v2;
  void *v3;
  _BYTE v4[24];
  CGRect v5;

  v1 = (id *)(v0 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_containerView);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_containerView, v4, 0, 0);
  if (*v1)
  {
    v2 = objc_msgSend(*v1, "window");
    if (v2)
    {
      v3 = v2;
      objc_msgSend(v2, "bounds");
      CGRectGetWidth(v5);

    }
  }
}

void CRLStatusHUDManager.show(hudController:)(void *a1)
{
  uint64_t v1;

  swift_getObjectType(a1);
  sub_100C61A10(a1, v1);
}

void CRLStatusHUDManager.show(hudController:withDelay:)(void *a1, double a2)
{
  uint64_t v2;

  swift_getObjectType(a1);
  sub_100C61A18(a1, v2, a2);
}

void sub_100C5D5E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  id *v6;
  uint64_t ObjectType;
  uint64_t v8;
  _BYTE v9[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = (id *)(Strong + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_delayedControllers);
    if (objc_msgSend(*(id *)(Strong + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_delayedControllers), "containsObject:", a2, swift_beginAccess(Strong + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_delayedControllers, &v8, 0, 0).n128_f64[0]))
    {
      objc_msgSend(*v6, "removeObject:", a2);
      ObjectType = swift_getObjectType(a2);
      sub_100C61A18(a2, v5, ObjectType, 0.0);
    }

  }
}

double CRLStatusHUDManager.replace(_:with:)(void *a1, void *a2)
{
  uint64_t v2;

  swift_getObjectType(a2);
  return sub_100C6171C(a1, a2, v2);
}

void CRLStatusHUDManager.hide(hudController:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  uint64_t inited;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _BYTE *v19;
  double v20;
  uint64_t v21;
  unint64_t v22;
  unsigned int v23;
  uint64_t v24;
  unint64_t v25;
  unsigned int v26;
  __n128 v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  void *v31;
  _QWORD *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  void *v37;
  id *v38;
  void *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  char v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  char v59;
  uint64_t v60;
  id v61;
  id v62;
  void *v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  void *v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  uint64_t v75;
  id v76;
  id v77;
  void *v78;
  uint64_t v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  char v89[72];
  _QWORD v90[3];
  char v91[72];
  char v92[80];
  _BYTE v93[24];
  _QWORD v94[3];
  char v95[24];
  char v96[232];
  char v97[32];

  v2 = v1;
  if (qword_1013DD6E8 != -1)
    swift_once(&qword_1013DD6E8, sub_100A01318);
  swift_beginAccess(&static OS_os_log.crlStatusHUD, v97, 0, 0);
  v4 = (void *)static OS_os_log.crlStatusHUD;
  v84 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v84, v96);
  *(_OWORD *)(inited + 16) = xmmword_100F05060;
  v94[0] = a1;
  v6 = v4;
  swift_unknownObjectRetain(a1);
  v7 = sub_1004B804C(&qword_1013E79E0);
  v8 = sub_1004B804C(&qword_1013E0190);
  v85 = v7;
  swift_dynamicCast(inited + 32, v94, v7, v8, 7);
  v9 = objc_msgSend(a1, "message");
  v86 = v8;
  if (v9)
  {
    v10 = v9;
    v11 = a1;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    v13 = v12;
    v15 = v14;

  }
  else
  {
    v11 = a1;
    v13 = 0;
    v15 = 0;
  }
  *(_QWORD *)(inited + 96) = &type metadata for String;
  v16 = sub_1004CFC2C();
  *(_QWORD *)(inited + 104) = v16;
  if (v15)
    v17 = v13;
  else
    v17 = 0;
  v18 = 0xE000000000000000;
  if (v15)
    v18 = v15;
  *(_QWORD *)(inited + 72) = v17;
  *(_QWORD *)(inited + 80) = v18;
  v87 = v2;
  v19 = (_BYTE *)(v2 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_ready);
  *(_QWORD *)&v20 = swift_beginAccess(v2 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_ready, v95, 0, 0).n128_u64[0];
  if (*v19)
    v21 = 1702195828;
  else
    v21 = 0x65736C6166;
  if (*v19)
    v22 = 0xE400000000000000;
  else
    v22 = 0xE500000000000000;
  *(_QWORD *)(inited + 136) = &type metadata for String;
  *(_QWORD *)(inited + 144) = v16;
  *(_QWORD *)(inited + 112) = v21;
  *(_QWORD *)(inited + 120) = v22;
  v23 = objc_msgSend(v11, "showing", v20);
  if (v23)
    v24 = 1702195828;
  else
    v24 = 0x65736C6166;
  if (v23)
    v25 = 0xE400000000000000;
  else
    v25 = 0xE500000000000000;
  *(_QWORD *)(inited + 176) = &type metadata for String;
  *(_QWORD *)(inited + 184) = v16;
  *(_QWORD *)(inited + 152) = v24;
  *(_QWORD *)(inited + 160) = v25;
  v26 = objc_msgSend(v11, "animating");
  if (v26)
    v28 = 1702195828;
  else
    v28 = 0x65736C6166;
  *(_QWORD *)(inited + 216) = &type metadata for String;
  *(_QWORD *)(inited + 224) = v16;
  if (v26)
    v29 = 0xE400000000000000;
  else
    v29 = 0xE500000000000000;
  *(_QWORD *)(inited + 192) = v28;
  *(_QWORD *)(inited + 200) = v29;
  v30 = static os_log_type_t.default.getter(v27);
  sub_100A06EBC((uint64_t)v6, &_mh_execute_header, v30, "hide hudController=%{public}@, message=\"%@\", ready=%{public}@, showing=%{public}@, animating=%{public}@", 103, 2, inited);
  swift_setDeallocating(inited);
  swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), v8);

  if (*v19 == 1)
  {
    v31 = v11;
    if ((objc_msgSend(v11, "showing") & 1) != 0 || objc_msgSend(v11, "animating"))
    {
      v32 = (_QWORD *)(v87 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_waitingToHideControllers);
      swift_beginAccess(v87 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_waitingToHideControllers, v94, 33, 0);
      swift_unknownObjectRetain(v31);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v33);
      v35 = *(_QWORD *)((*v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v34 = *(_QWORD *)((*v32 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v35 >= v34 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v34 > 1, v35 + 1, 1);
      v36 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v35, v31);
      specialized Array._endMutation()(v36);
      swift_endAccess(v94);
      sub_100C5F4C4();
    }
    else
    {
      v47 = (uint64_t *)(v87 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_showingInfoControllers);
      swift_beginAccess(v87 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_showingInfoControllers, v94, 0, 0);
      v48 = *v47;
      swift_unknownObjectRetain(v31);
      swift_bridgeObjectRetain(v48);
      v50 = sub_100C4A358(v49, (uint64_t)v31);
      v52 = v51;
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease(v31);
      if ((v52 & 1) == 0)
      {
        swift_beginAccess(v47, v93, 33, 0);
        v53 = sub_100C5CA9C(v50);
        swift_endAccess(v93);
        swift_unknownObjectRelease(v53);
      }
      v54 = (uint64_t *)(v87 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_waitingInfoControllers);
      swift_beginAccess(v87 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_waitingInfoControllers, v93, 0, 0);
      v55 = *v54;
      swift_unknownObjectRetain(v31);
      swift_bridgeObjectRetain(v55);
      v57 = sub_100C4A358(v56, (uint64_t)v31);
      v59 = v58;
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease(v31);
      if ((v59 & 1) == 0)
      {
        swift_beginAccess(v54, v90, 33, 0);
        v60 = sub_100C5CA9C(v57);
        swift_endAccess(v90);
        swift_unknownObjectRelease(v60);
      }
      objc_msgSend(*(id *)(v87 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_delayedControllers), "removeObject:", v31, swift_beginAccess(v87 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_delayedControllers, v90, 0, 0).n128_f64[0]);
      v61 = objc_msgSend(v31, "containerView");
      v62 = objc_msgSend(v61, "superview");

      if (v62)
      {
        v63 = (void *)static OS_os_log.crlStatusHUD;
        v64 = swift_initStackObject(v84, v89);
        *(_OWORD *)(v64 + 16) = xmmword_100EF5E40;
        v88 = v31;
        swift_unknownObjectRetain(v31);
        v65 = v63;
        v66 = swift_dynamicCast(v64 + 32, &v88, v85, v86, 7);
        v67 = static os_log_type_t.error.getter(v66);
        sub_100A06EBC((uint64_t)v65, &_mh_execute_header, v67, "hudController=%{public}@ was not removed from the superview while hiding a controller that's not showing and not animating.", 123, 2, v64);
        swift_setDeallocating(v64);
        swift_arrayDestroy(v64 + 32, *(_QWORD *)(v64 + 16), v86);

        v68 = objc_msgSend(v31, "containerView");
        objc_msgSend(v68, "removeFromSuperview");

        *(_BYTE *)(v87 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_needsLayout) = 1;
        sub_100C5F4C4();
      }
    }
  }
  else
  {
    v37 = v11;
    if (objc_msgSend(v11, "type"))
    {
      v38 = (id *)(v87 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_delayedControllers);
      if (objc_msgSend(*(id *)(v87 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_delayedControllers), "containsObject:", v37, swift_beginAccess(v87 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_delayedControllers, v94, 0, 0).n128_f64[0]))
      {
        objc_msgSend(*v38, "removeObject:", v37);
      }
      else
      {
        v40 = (uint64_t *)(v87 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_waitingInfoControllers);
        swift_beginAccess(v87 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_waitingInfoControllers, v93, 0, 0);
        v41 = *v40;
        swift_unknownObjectRetain(v37);
        swift_bridgeObjectRetain(v41);
        v43 = sub_100C4A358(v42, (uint64_t)v37);
        v45 = v44;
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease(v37);
        if ((v45 & 1) != 0)
        {
          v69 = (void *)static OS_os_log.crlStatusHUD;
          v70 = swift_initStackObject(v84, v92);
          *(_OWORD *)(v70 + 16) = xmmword_100EF5E40;
          v90[0] = v37;
          swift_unknownObjectRetain(v37);
          v71 = v69;
          v72 = swift_dynamicCast(v70 + 32, v90, v85, v86, 7);
          v73 = static os_log_type_t.error.getter(v72);
          sub_100A06EBC((uint64_t)v71, &_mh_execute_header, v73, "hudController=%{public}@ was not found in the waiting controllers or delayed controllers while hiding.", 102, 2, v70);
          swift_setDeallocating(v70);
          swift_arrayDestroy(v70 + 32, *(_QWORD *)(v70 + 16), v86);

        }
        else
        {
          swift_beginAccess(v40, v90, 33, 0);
          v46 = sub_100C5CA9C(v43);
          swift_endAccess(v90);
          swift_unknownObjectRelease(v46);
        }
      }
    }
    else
    {
      v39 = *(void **)(v87 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_errorController);
      if (v39)
      {
        if (v39 == v11)
        {
          *(_QWORD *)(v87 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_errorController) = 0;
          swift_unknownObjectRelease(v11);
        }
      }
      else
      {
        v74 = (id)static OS_os_log.crlStatusHUD;
        v75 = static os_log_type_t.error.getter(v74);
        sub_100A06EBC((uint64_t)v74, &_mh_execute_header, v75, "errorController was not set as expected when trying to hide.", 60, 2, (uint64_t)_swiftEmptyArrayStorage);

      }
    }
    v76 = objc_msgSend(v37, "containerView");
    v77 = objc_msgSend(v76, "superview");

    if (v77)
    {
      v78 = (void *)static OS_os_log.crlStatusHUD;
      v79 = swift_initStackObject(v84, v91);
      *(_OWORD *)(v79 + 16) = xmmword_100EF5E40;
      v90[0] = v37;
      swift_unknownObjectRetain(v37);
      v80 = v78;
      v81 = swift_dynamicCast(v79 + 32, v90, v85, v86, 7);
      v82 = static os_log_type_t.error.getter(v81);
      sub_100A06EBC((uint64_t)v80, &_mh_execute_header, v82, "hudController=%{public}@ was not removed from the superview while hiding and not ready.", 87, 2, v79);
      swift_setDeallocating(v79);
      swift_arrayDestroy(v79 + 32, *(_QWORD *)(v79 + 16), v86);

      v83 = objc_msgSend(v37, "containerView");
      objc_msgSend(v83, "removeFromSuperview");

      sub_100C60320();
    }
  }
}

Swift::Void __swiftcall CRLStatusHUDManager.hideAllControllers()()
{
  uint64_t v0;
  id v1;
  __n128 v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  void *v9;
  double v10;
  id v11;
  uint64_t v12;
  void *v13;
  double v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t j;
  void *v22;
  double v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  double v31;
  id v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  _BYTE v39[24];
  _BYTE v40[24];
  _BYTE v41[24];
  _BYTE v42[24];
  _BYTE v43[24];

  if (qword_1013DD6E8 != -1)
    swift_once(&qword_1013DD6E8, sub_100A01318);
  swift_beginAccess(&static OS_os_log.crlStatusHUD, v43, 0, 0);
  v1 = (id)static OS_os_log.crlStatusHUD;
  v3 = static os_log_type_t.default.getter(v2);
  sub_100A06EBC((uint64_t)v1, &_mh_execute_header, v3, "hideAllControllers", 18, 2, (uint64_t)_swiftEmptyArrayStorage);

  v4 = (_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_waitingInfoControllers);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_waitingInfoControllers, v42, 1, 0);
  *v4 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_delayedControllers), "removeAllObjects", swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_delayedControllers, v41, 0, 0).n128_f64[0]);
  v5 = (uint64_t *)(v0 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_showingInfoControllers);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_showingInfoControllers, v40, 1, 0);
  v6 = *v5;
  v38 = v0;
  if ((unint64_t)*v5 >> 62)
  {
    if (v6 < 0)
      v27 = *v5;
    else
      v27 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v6);
    v7 = _CocoaArrayWrapper.endIndex.getter(v27);
  }
  else
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v6);
  }
  if (v7)
  {
    if (v7 < 1)
    {
      __break(1u);
      goto LABEL_43;
    }
    for (i = 0; i != v7; ++i)
    {
      if ((v6 & 0xC000000000000001) != 0)
      {
        v9 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v6);
      }
      else
      {
        v9 = *(void **)(v6 + 8 * i + 32);
        *(_QWORD *)&v10 = swift_unknownObjectRetain(v9).n128_u64[0];
      }
      v11 = objc_msgSend(v9, "containerView", v10, v38);
      objc_msgSend(v11, "removeFromSuperview");

      if (objc_msgSend(v9, "showing"))
        objc_msgSend(v9, "setShowing:", 0);
      swift_unknownObjectRelease(v9);
    }
  }
  swift_bridgeObjectRelease();
  *v5 = (uint64_t)_swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  v12 = OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_errorController;
  v13 = *(void **)(v38 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_errorController);
  if (v13)
  {
    *(_QWORD *)&v14 = swift_unknownObjectRetain(*(_QWORD *)(v38
                                                          + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_errorController)).n128_u64[0];
    v16 = objc_msgSend(v15, "containerView", v14);
    objc_msgSend(v16, "removeFromSuperview");

    if (objc_msgSend(v13, "showing"))
      objc_msgSend(v13, "setShowing:", 0);
    swift_unknownObjectRelease(v13);
  }
  v17 = *(_QWORD *)(v38 + v12);
  *(_QWORD *)(v38 + v12) = 0;
  swift_unknownObjectRelease(v17);
  v18 = (uint64_t *)(v38 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_waitingToHideControllers);
  swift_beginAccess(v38 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_waitingToHideControllers, v39, 1, 0);
  v19 = *v18;
  if ((unint64_t)*v18 >> 62)
  {
    if (v19 < 0)
      v28 = *v18;
    else
      v28 = v19 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v18);
    v20 = _CocoaArrayWrapper.endIndex.getter(v28);
    if (v20)
    {
LABEL_20:
      if (v20 >= 1)
      {
        for (j = 0; j != v20; ++j)
        {
          if ((v19 & 0xC000000000000001) != 0)
          {
            v22 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v19);
          }
          else
          {
            v22 = *(void **)(v19 + 8 * j + 32);
            *(_QWORD *)&v23 = swift_unknownObjectRetain(v22).n128_u64[0];
          }
          v24 = objc_msgSend(v22, "containerView", v23, v38);
          v25 = objc_msgSend(v24, "superview");

          if (v25)
          {
            v26 = objc_msgSend(v22, "containerView");
            objc_msgSend(v26, "removeFromSuperview");
            swift_unknownObjectRelease(v22);

          }
          else
          {
            swift_unknownObjectRelease(v22);
          }
        }
        goto LABEL_37;
      }
LABEL_43:
      __break(1u);
      return;
    }
  }
  else
  {
    v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*v18);
    if (v20)
      goto LABEL_20;
  }
LABEL_37:
  swift_bridgeObjectRelease();
  *v18 = (uint64_t)_swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  v29 = OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_hidingController;
  v30 = *(void **)(v38 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_hidingController);
  if (v30)
  {
    *(_QWORD *)&v31 = swift_unknownObjectRetain(*(_QWORD *)(v38
                                                          + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_hidingController)).n128_u64[0];
    v33 = objc_msgSend(v32, "containerView", v31);
    v34 = objc_msgSend(v33, "superview");

    if (v34)
    {
      v35 = objc_msgSend(v30, "containerView");
      objc_msgSend(v35, "removeFromSuperview");
      swift_unknownObjectRelease(v30);

    }
    else
    {
      swift_unknownObjectRelease(v30);
    }
  }
  v36 = *(_QWORD *)(v38 + v29);
  *(_QWORD *)(v38 + v29) = 0;
  v37 = swift_unknownObjectRelease(v36);
  sub_100C60320(v37);
}

Swift::Void __swiftcall CRLStatusHUDManager.updateForAppearance()()
{
  uint64_t v0;
  id v1;
  __n128 v2;
  uint64_t v3;
  void *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  void **v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t i;
  double v20;
  double *v21;
  double *v22;
  _BYTE v23[24];
  _BYTE v24[24];
  _BYTE v25[24];
  _QWORD v26[3];
  _BYTE v27[24];

  if (qword_1013DD6E8 != -1)
    swift_once(&qword_1013DD6E8, sub_100A01318);
  swift_beginAccess(&static OS_os_log.crlStatusHUD, v27, 0, 0);
  v1 = (id)static OS_os_log.crlStatusHUD;
  v3 = static os_log_type_t.default.getter(v2);
  sub_100A06EBC((uint64_t)v1, &_mh_execute_header, v3, "Updating HUDs for appearance", 28, 2, (uint64_t)_swiftEmptyArrayStorage);

  v4 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_errorController);
  if (v4)
    objc_msgSend(v4, "updateForAppearance");
  v5 = (uint64_t *)(v0 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_showingInfoControllers);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_showingInfoControllers, v25, 0, 0);
  v6 = *v5;
  v26[0] = v6;
  v7 = (uint64_t *)(v0 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_waitingInfoControllers);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_waitingInfoControllers, v24, 0, 0);
  v8 = *v7;
  v26[1] = v8;
  v9 = (void **)(v0 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_delayedControllers);
  swift_beginAccess(v9, v23, 0, 0);
  v10 = *v9;
  swift_bridgeObjectRetain(v6);
  v11 = objc_msgSend(v10, "allObjects", swift_bridgeObjectRetain(v8).n128_f64[0]);
  v12 = sub_1004B804C(&qword_1013E79E0);
  v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v11, v12);

  v26[2] = v13;
  v22 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRetain(v6);
  sub_100621574(v6);
  swift_bridgeObjectRetain(v8);
  sub_100621574(v14);
  swift_bridgeObjectRetain(v13);
  sub_100621574(v15);
  v16 = sub_1004B804C(&qword_1013E79E8);
  v17 = swift_arrayDestroy(v26, 3, v16).n128_u64[0];
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    if ((uint64_t)_swiftEmptyArrayStorage < 0)
      v21 = _swiftEmptyArrayStorage;
    else
      v21 = (double *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    v18 = _CocoaArrayWrapper.endIndex.getter(v21);
    v17 = swift_bridgeObjectRelease().n128_u64[0];
    if (!v18)
      goto LABEL_10;
  }
  else
  {
    v18 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v18)
    {
LABEL_10:
      swift_bridgeObjectRelease();
      return;
    }
  }
  if (v18 >= 1)
  {
    for (i = 0; i != v18; ++i)
    {
      v20 = _swiftEmptyArrayStorage[i + 4];
      objc_msgSend(*(id *)&v20, "updateForAppearance", *(double *)&v17, v22);
    }
    goto LABEL_10;
  }
  __break(1u);
}

void sub_100C5E870(void *a1)
{
  void *v2;
  uint64_t inited;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unsigned int v11;
  __n128 v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  BOOL v17;
  void *v18;
  uint64_t (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  char *v22;
  __n128 v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  id *v38;
  id v39;
  id v40;
  void *v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  char v57;
  unint64_t v58;
  uint64_t v59;
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t ObjectType;
  id *v64;
  id v65;
  char *v66;
  _QWORD v67[3];
  char v68[72];
  _BYTE v69[24];
  _BYTE v70[32];
  _QWORD v71[3];
  char v72[152];
  char v73[32];

  if (qword_1013DD6E8 != -1)
    swift_once(&qword_1013DD6E8, sub_100A01318);
  swift_beginAccess(&static OS_os_log.crlStatusHUD, v73, 0, 0);
  v2 = (void *)static OS_os_log.crlStatusHUD;
  v62 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v62, v72);
  *(_OWORD *)(inited + 16) = xmmword_100EF5550;
  v71[0] = a1;
  v65 = v2;
  swift_unknownObjectRetain(a1);
  v4 = sub_1004B804C(&qword_1013E79E0);
  v5 = sub_1004B804C(&qword_1013E0190);
  swift_dynamicCast(inited + 32, v71, v4, v5, 7);
  ObjectType = swift_getObjectType(a1);
  v6 = objc_msgSend(a1, "showing");
  v7 = sub_1004CFC2C();
  v8 = v7;
  if (v6)
    v9 = 1702195828;
  else
    v9 = 0x65736C6166;
  if (v6)
    v10 = 0xE400000000000000;
  else
    v10 = 0xE500000000000000;
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v7;
  *(_QWORD *)(inited + 72) = v9;
  *(_QWORD *)(inited + 80) = v10;
  v11 = objc_msgSend(a1, "animating", v4);
  if (v11)
    v13 = 1702195828;
  else
    v13 = 0x65736C6166;
  *(_QWORD *)(inited + 136) = &type metadata for String;
  *(_QWORD *)(inited + 144) = v8;
  if (v11)
    v14 = 0xE400000000000000;
  else
    v14 = 0xE500000000000000;
  *(_QWORD *)(inited + 112) = v13;
  *(_QWORD *)(inited + 120) = v14;
  v15 = static os_log_type_t.default.getter(v12);
  sub_100A06EBC((uint64_t)v65, &_mh_execute_header, v15, "remove hudController=%{public}@, showing=%{public}@, animating=%{public}@", 73, 2, inited);
  swift_setDeallocating(inited);
  swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), v5);

  if ((objc_msgSend(a1, "showing") & 1) != 0 || objc_msgSend(a1, "animating"))
  {
    v16 = objc_msgSend(a1, "type");
    v17 = v16 == 0;
    if (v16)
      v18 = &unk_10129D4D8;
    else
      v18 = &unk_10129D500;
    if (v17)
      v19 = sub_100C6225C;
    else
      v19 = sub_100C62254;
    v20 = swift_allocObject(v18, 24, 7);
    *(_QWORD *)(v20 + 16) = v66;
    v21 = *(_QWORD *)&v66[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_hidingController];
    *(_QWORD *)&v66[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_hidingController] = a1;
    swift_unknownObjectRetain(a1);
    v22 = v66;
    swift_unknownObjectRelease(v21);
    swift_retain(v20);
    sub_1004C0630(1, (uint64_t)v19, v20, ObjectType);
    swift_release_n(v20, 2, v23);
  }
  else
  {
    v24 = &v66[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_showingInfoControllers];
    swift_beginAccess(&v66[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_showingInfoControllers], v71, 0, 0);
    v25 = *(_QWORD *)v24;
    swift_unknownObjectRetain(a1);
    swift_bridgeObjectRetain(v25);
    v27 = sub_100C4A358(v26, (uint64_t)a1);
    v29 = v28;
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease(a1);
    if ((v29 & 1) == 0)
    {
      swift_beginAccess(v24, v70, 33, 0);
      v30 = sub_100C5CA9C(v27);
      swift_endAccess(v70);
      swift_unknownObjectRelease(v30);
    }
    v31 = &v66[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_waitingInfoControllers];
    swift_beginAccess(&v66[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_waitingInfoControllers], v70, 0, 0);
    v32 = *(_QWORD *)v31;
    swift_unknownObjectRetain(a1);
    swift_bridgeObjectRetain(v32);
    v34 = sub_100C4A358(v33, (uint64_t)a1);
    v36 = v35;
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease(a1);
    if ((v36 & 1) == 0)
    {
      swift_beginAccess(v31, v69, 33, 0);
      v37 = sub_100C5CA9C(v34);
      swift_endAccess(v69);
      swift_unknownObjectRelease(v37);
    }
    v38 = (id *)&v66[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_delayedControllers];
    objc_msgSend(*(id *)&v66[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_delayedControllers], "removeObject:", a1, swift_beginAccess(&v66[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_delayedControllers], v69, 0, 0).n128_f64[0]);
    v39 = objc_msgSend(a1, "containerView");
    v40 = objc_msgSend(v39, "superview");

    if (v40)
    {
      v64 = v38;
      v41 = (void *)static OS_os_log.crlStatusHUD;
      v42 = swift_initStackObject(v62, v68);
      *(_OWORD *)(v42 + 16) = xmmword_100EF5E40;
      v67[0] = a1;
      swift_unknownObjectRetain(a1);
      v43 = v41;
      v44 = swift_dynamicCast(v42 + 32, v67, v61, v5, 7);
      v45 = static os_log_type_t.error.getter(v44);
      sub_100A06EBC((uint64_t)v43, &_mh_execute_header, v45, "hudController=%{public}@ was not removed from the superview while removing a controller that's not showing and not animating.", 125, 2, v42);
      swift_setDeallocating(v42);
      swift_arrayDestroy(v42 + 32, *(_QWORD *)(v42 + 16), v5);

      v46 = objc_msgSend(a1, "containerView");
      objc_msgSend(v46, "removeFromSuperview");

      v47 = *(_QWORD *)v24;
      swift_unknownObjectRetain(a1);
      swift_bridgeObjectRetain(v47);
      v49 = sub_100C4A358(v48, (uint64_t)a1);
      v51 = v50;
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease(a1);
      if ((v51 & 1) == 0)
      {
        swift_beginAccess(v24, v67, 33, 0);
        v52 = sub_100C5CA9C(v49);
        swift_endAccess(v67);
        swift_unknownObjectRelease(v52);
      }
      v53 = *(_QWORD *)v31;
      swift_unknownObjectRetain(a1);
      swift_bridgeObjectRetain(v53);
      v55 = sub_100C4A358(v54, (uint64_t)a1);
      v57 = v56;
      swift_bridgeObjectRelease();
      v58 = swift_unknownObjectRelease(a1).n128_u64[0];
      if ((v57 & 1) == 0)
      {
        swift_beginAccess(v31, v67, 33, 0);
        v59 = sub_100C5CA9C(v55);
        swift_endAccess(v67);
        v58 = swift_unknownObjectRelease(v59).n128_u64[0];
      }
      objc_msgSend(*v64, "removeObject:", a1, *(double *)&v58);
      v66[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_needsLayout] = 1;
      sub_100C5F4C4(v60);
    }
  }
}

uint64_t sub_100C5EE8C(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  __n128 v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  __n128 v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[5];
  uint64_t v25;

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v23 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004B8930(0, (unint64_t *)&qword_1013DE090, OS_dispatch_queue_ptr);
  v12 = (void *)static OS_dispatch_queue.main.getter(v11);
  v13 = swift_allocObject(&unk_10129D528, 32, 7);
  *(_QWORD *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = a2;
  aBlock[4] = sub_100C62268;
  v25 = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1005D2FC0;
  aBlock[3] = &unk_10129D540;
  v14 = _Block_copy(aBlock);
  v15 = v25;
  swift_unknownObjectRetain(a1);
  v16 = a2;
  v17 = swift_release(v15);
  static DispatchQoS.unspecified.getter(v17);
  aBlock[0] = _swiftEmptyArrayStorage;
  v18 = sub_1004CB65C();
  v19 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
  v20 = sub_100503E88();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v19, v20, v4, v18);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v6, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v23 + 8))(v6, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_100C5F078(void *a1, uint64_t a2)
{
  id v4;
  void *v5;
  BOOL v6;
  uint64_t v7;
  __n128 v8;

  v4 = objc_msgSend(a1, "containerView");
  objc_msgSend(v4, "removeFromSuperview");

  v5 = *(void **)(a2 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_errorController);
  if (v5)
    v6 = v5 == a1;
  else
    v6 = 0;
  if (v6)
  {
    *(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_errorController) = 0;
    swift_unknownObjectRelease(a1);
  }
  v7 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_hidingController);
  *(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_hidingController) = 0;
  v8 = swift_unknownObjectRelease(v7);
  *(_BYTE *)(a2 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_needsLayout) = 1;
  return sub_100C5F4C4(v8);
}

uint64_t sub_100C5F114(uint64_t a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  __n128 v24;
  void *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  char *v29;
  __n128 v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD aBlock[5];
  uint64_t v39;
  char v40[24];
  char v41[32];
  char v42[32];

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v37 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v35 = *(_QWORD *)(v7 - 8);
  v36 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = &a2[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_showingInfoControllers];
  swift_beginAccess(&a2[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_showingInfoControllers], v42, 0, 0);
  v11 = *(_QWORD *)v10;
  swift_unknownObjectRetain(a1);
  swift_bridgeObjectRetain(v11);
  v13 = sub_100C4A358(v12, a1);
  v15 = v14;
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease(a1);
  if ((v15 & 1) == 0)
  {
    swift_beginAccess(v10, aBlock, 33, 0);
    v16 = sub_100C5CA9C(v13);
    swift_endAccess(aBlock);
    swift_unknownObjectRelease(v16);
  }
  v17 = &a2[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_waitingInfoControllers];
  swift_beginAccess(&a2[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_waitingInfoControllers], v41, 0, 0);
  v18 = *(_QWORD *)v17;
  swift_unknownObjectRetain(a1);
  swift_bridgeObjectRetain(v18);
  v20 = sub_100C4A358(v19, a1);
  v22 = v21;
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease(a1);
  if ((v22 & 1) == 0)
  {
    swift_beginAccess(v17, aBlock, 33, 0);
    v23 = sub_100C5CA9C(v20);
    swift_endAccess(aBlock);
    swift_unknownObjectRelease(v23);
  }
  objc_msgSend(*(id *)&a2[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_delayedControllers], "removeObject:", a1, swift_beginAccess(&a2[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_delayedControllers], v40, 0, 0).n128_f64[0]);
  sub_1004B8930(0, (unint64_t *)&qword_1013DE090, OS_dispatch_queue_ptr);
  v25 = (void *)static OS_dispatch_queue.main.getter(v24);
  v26 = swift_allocObject(&unk_10129D578, 32, 7);
  *(_QWORD *)(v26 + 16) = a1;
  *(_QWORD *)(v26 + 24) = a2;
  aBlock[4] = sub_100C622B8;
  v39 = v26;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1005D2FC0;
  aBlock[3] = &unk_10129D590;
  v27 = _Block_copy(aBlock);
  v28 = v39;
  swift_unknownObjectRetain(a1);
  v29 = a2;
  v30 = swift_release(v28);
  static DispatchQoS.unspecified.getter(v30);
  aBlock[0] = _swiftEmptyArrayStorage;
  v31 = sub_1004CB65C();
  v32 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
  v33 = sub_100503E88();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v32, v33, v4, v31);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v6, v27);
  _Block_release(v27);

  (*(void (**)(char *, uint64_t))(v37 + 8))(v6, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v9, v36);
}

uint64_t sub_100C5F448(void *a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  __n128 v5;

  v3 = objc_msgSend(a1, "containerView");
  objc_msgSend(v3, "removeFromSuperview");

  v4 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_hidingController);
  *(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_hidingController) = 0;
  v5 = swift_unknownObjectRelease(v4);
  *(_BYTE *)(a2 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_needsLayout) = 1;
  return sub_100C5F4C4(v5);
}

BOOL sub_100C5F4B4(_QWORD *a1, uint64_t a2)
{
  return *a1 == a2;
}

void sub_100C5F4C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  void **v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t ObjectType;
  uint64_t v11;
  id v12;
  id v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  double v20;
  id v21;
  void *v22;
  uint64_t v23;
  id v24;
  __n128 v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  Swift::Int i;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  Swift::Int v36;
  uint64_t v37;
  __n128 v38;
  void *v39;
  uint64_t v40;
  int64_t v41;
  double *v42;
  uint64_t v43;
  uint64_t v44;
  double *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  void *v51;
  void *v52;
  BOOL v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  id v64;
  id v65;
  id v66;
  uint64_t v67;
  int v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  char v73;
  double v74;
  id v75;
  id v76;
  id v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  id v89;
  char v90;
  unint64_t v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _BYTE v96[32];
  _BYTE v97[24];
  _BYTE v98[24];
  _BYTE v99[24];
  _BYTE v100[24];
  _BYTE v101[24];
  _BYTE v102[24];
  _BYTE v103[24];
  _BYTE v104[32];

  v4 = v0;
  v5 = (void **)(v0 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_containerView);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_containerView, v104, 0, 0);
  v6 = *v5;
  v7 = (uint64_t)&qword_1013DD000;
  v8 = (uint64_t)&static OS_os_log.crlStatusHUD;
  if (!*v5)
  {
    if (qword_1013DD6E8 != -1)
      goto LABEL_121;
    goto LABEL_26;
  }
  v9 = (unsigned __int8 *)(v4 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_ready);
  swift_beginAccess(v4 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_ready, v103, 0, 0);
  ObjectType = *v9;
  v11 = qword_1013DD6E8;
  v12 = v6;
  if ((_DWORD)ObjectType != 1)
  {
    if (v11 != -1)
      swift_once(&qword_1013DD6E8, sub_100A01318);
    swift_beginAccess(&static OS_os_log.crlStatusHUD, v102, 0, 0);
    v24 = (id)static OS_os_log.crlStatusHUD;
    v26 = static os_log_type_t.default.getter(v25);
    sub_100A06EBC((uint64_t)v24, &_mh_execute_header, v26, "updateViews called before hud manager is ready.", 47, 2, (uint64_t)_swiftEmptyArrayStorage);

    v12 = v24;
    goto LABEL_113;
  }
  if (v11 != -1)
    swift_once(&qword_1013DD6E8, sub_100A01318);
  swift_beginAccess(&static OS_os_log.crlStatusHUD, v102, 0, 0);
  v13 = (id)static OS_os_log.crlStatusHUD;
  v15 = static os_log_type_t.debug.getter(v14);
  sub_100A06EBC((uint64_t)v13, &_mh_execute_header, v15, "updateViews", 11, 2, (uint64_t)_swiftEmptyArrayStorage);

  v95 = OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_hidingController;
  if (*(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_hidingController))
    goto LABEL_175;
  v8 = v4 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_waitingToHideControllers;
  swift_beginAccess(v4 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_waitingToHideControllers, v96, 0, 0);
  v16 = *(_QWORD *)v8;
  if (*(_QWORD *)v8 >> 62)
    goto LABEL_145;
  if (!*(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_175:
    do
    {
LABEL_18:
      v19 = *(void **)(v4 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_errorController);
      if (v19)
      {
        ObjectType = swift_getObjectType(*(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_errorController));
        *(_QWORD *)&v20 = swift_unknownObjectRetain(v19).n128_u64[0];
        if ((objc_msgSend(v21, "showing", v20) & 1) != 0
          || (objc_msgSend(v19, "animating") & 1) != 0
          || (v22 = *(void **)(v4 + v95)) != 0 && v19 == v22)
        {
          v2 = 0;
          v16 = 0;
        }
        else
        {
          v69 = (uint64_t *)(v4 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_waitingToHideControllers);
          swift_beginAccess(v4 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_waitingToHideControllers, v97, 0, 0);
          v70 = *v69;
          swift_unknownObjectRetain(v19);
          swift_bridgeObjectRetain(v70);
          v16 = 0;
          sub_100C4A358(v71, (uint64_t)v19);
          v73 = v72;
          swift_bridgeObjectRelease();
          *(_QWORD *)&v74 = swift_unknownObjectRelease(v19).n128_u64[0];
          if ((v73 & 1) != 0)
          {
            v75 = objc_msgSend(v12, "superview", v74);
            objc_msgSend(v75, "bringSubviewToFront:", v12);

            v76 = objc_msgSend(v19, "containerView");
            objc_msgSend(v12, "addSubview:", v76);

            sub_1004C0630(0, 0, 0, ObjectType);
            v77 = objc_msgSend(v19, "accessibilityAnnouncement");
            if (v77)
            {
              v7 = (uint64_t)v77;
              v78 = objc_msgSend(v19, "hudView");
              ObjectType = (uint64_t)objc_msgSend(v78, "window");

              CRLAccessibilityPostAnnouncementNotification((void *)ObjectType, (void *)v7);
            }
            v2 = 1;
          }
          else
          {
            v2 = 0;
          }
        }
        swift_unknownObjectRelease(v19);
      }
      else
      {
        v2 = 0;
        v16 = 0;
      }
      v27 = (uint64_t *)(v4 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_showingInfoControllers);
      swift_beginAccess(v4 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_showingInfoControllers, v101, 0, 0);
      v88 = v27;
      v8 = *v27;
      if ((unint64_t)*v27 >> 62)
      {
        if (v8 < 0)
          v79 = *v27;
        else
          v79 = v8 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v8);
        v28 = _CocoaArrayWrapper.endIndex.getter(v79);
        swift_bridgeObjectRelease();
      }
      else
      {
        v28 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      v29 = 5 - v28;
      if (__OFSUB__(5, v28))
      {
        __break(1u);
      }
      else
      {
        v8 = v4 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_waitingInfoControllers;
        swift_beginAccess(v4 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_waitingInfoControllers, v100, 1, 0);
        v7 = *(_QWORD *)v8;
        if (!(*(_QWORD *)v8 >> 62))
        {
          v18 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
          goto LABEL_36;
        }
      }
      if (v7 < 0)
        v80 = v7;
      else
        v80 = v7 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v7);
      v18 = _CocoaArrayWrapper.endIndex.getter(v80);
      swift_bridgeObjectRelease();
LABEL_36:
      if (v18 >= v29)
        v18 = v29;
      if (v18 < 1)
        goto LABEL_108;
      v93 = v4;
      v3 = *(_QWORD *)v8;
      v4 = *(_QWORD *)v8 >> 62;
      if (v4)
      {
        if (v3 < 0)
          v1 = *(_QWORD *)v8;
        else
          v1 = v3 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(*(_QWORD *)v8);
        v17 = _CocoaArrayWrapper.endIndex.getter(v1);
        if (v17 < 0)
          goto LABEL_169;
        swift_bridgeObjectRetain(v3);
        v1 = _CocoaArrayWrapper.endIndex.getter(v1);
        swift_bridgeObjectRelease();
        if (v1 < v18)
        {
LABEL_136:
          __break(1u);
LABEL_137:
          v7 = (uint64_t)v12;
          if (v1 < 0)
            v16 = v1;
          else
            v16 = v1 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain_n(v1, 2);
          v3 = _CocoaArrayWrapper.endIndex.getter(v16);
          swift_bridgeObjectRelease();
          if (v3 < v18)
            goto LABEL_170;
          swift_bridgeObjectRetain(v1);
          v12 = (id)_CocoaArrayWrapper.endIndex.getter(v16);
          swift_bridgeObjectRelease();
          if ((uint64_t)v12 < v18)
            goto LABEL_171;
          swift_bridgeObjectRetain(v1);
          v16 = _CocoaArrayWrapper.endIndex.getter(v16);
          swift_bridgeObjectRelease();
          if (v16 >= v3)
            goto LABEL_172;
          __break(1u);
          goto LABEL_144;
        }
      }
      else
      {
        v1 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(*(_QWORD *)v8);
        if (v1 < v18)
          goto LABEL_136;
      }
      v90 = v2;
      if ((v3 & 0xC000000000000001) != 0)
      {
        for (i = 0; i != v18; ++i)
        {
          sub_1004B804C(&qword_1013E79E0);
          _ArrayBuffer._typeCheckSlowPath(_:)(i);
        }
      }
      if (v4)
      {
        if (v3 < 0)
          v31 = v3;
        else
          v31 = v3 & 0xFFFFFFFFFFFFFF8;
        v32 = swift_bridgeObjectRetain(v3);
        v87 = _CocoaArrayWrapper.subscript.getter(0, v18, v31, v32);
        v94 = v33;
        ObjectType = v34;
        v7 = v35;
        swift_bridgeObjectRelease_n(v3, 2);
      }
      else
      {
        ObjectType = 0;
        v87 = v3 & 0xFFFFFFFFFFFFFF8;
        v94 = (v3 & 0xFFFFFFFFFFFFFF8) + 32;
        v7 = (2 * v18) | 1;
      }
      v1 = *(_QWORD *)v8;
      v2 = *(_QWORD *)v8 >> 62;
      v4 = v93;
      v91 = v7;
      if (v2)
        goto LABEL_137;
      v3 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v3 >= v18)
      {
        swift_bridgeObjectRetain(v1);
        goto LABEL_53;
      }
LABEL_144:
      __break(1u);
LABEL_145:
      if (v16 < 0)
        v81 = v16;
      else
        v81 = v16 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v16);
      v82 = _CocoaArrayWrapper.endIndex.getter(v81);
      swift_bridgeObjectRelease();
    }
    while (!v82);
  }
  swift_beginAccess(v8, v101, 33, 0);
  v16 = *(_QWORD *)v8;
  if (!(*(_QWORD *)v8 >> 62))
  {
    if (*(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_10;
LABEL_156:
    __break(1u);
    goto LABEL_157;
  }
  if (v16 < 0)
    v83 = *(_QWORD *)v8;
  else
    v83 = v16 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*(_QWORD *)v8);
  v84 = _CocoaArrayWrapper.endIndex.getter(v83);
  swift_bridgeObjectRelease();
  if (!v84)
    goto LABEL_156;
LABEL_10:
  v16 = *(_QWORD *)v8;
  if (!(*(_QWORD *)v8 >> 62))
  {
    v18 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v18)
      goto LABEL_12;
LABEL_161:
    __break(1u);
    goto LABEL_162;
  }
LABEL_157:
  if (v16 < 0)
    v85 = v16;
  else
    v85 = v16 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v16);
  v18 = _CocoaArrayWrapper.endIndex.getter(v85);
  swift_bridgeObjectRelease();
  if (!v18)
    goto LABEL_161;
LABEL_12:
  if ((v16 & 0xC000000000000001) != 0)
  {
LABEL_162:
    v17 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v16);
    v16 = v17;
    goto LABEL_15;
  }
  if (!*(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_168;
  v16 = *(_QWORD *)(v16 + 32);
  swift_unknownObjectRetain(v16);
LABEL_15:
  ObjectType = *(_QWORD *)v8;
  if (*(_QWORD *)v8 >> 62)
  {
    if (ObjectType < 0)
      v86 = *(_QWORD *)v8;
    else
      v86 = ObjectType & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)v8);
    v18 = _CocoaArrayWrapper.endIndex.getter(v86);
    swift_bridgeObjectRelease();
    if (v18)
      goto LABEL_17;
  }
  else
  {
    v18 = *(_QWORD *)((ObjectType & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v18)
    {
LABEL_17:
      sub_100CFF9E8(0, 1);
      swift_endAccess(v101);
      sub_100C5E870((void *)v16);
      swift_unknownObjectRelease(v16);
      goto LABEL_18;
    }
  }
  __break(1u);
LABEL_168:
  __break(1u);
LABEL_169:
  __break(1u);
LABEL_170:
  __break(1u);
LABEL_171:
  __break(1u);
LABEL_172:
  v12 = (id)v7;
  v4 = v93;
LABEL_53:
  v89 = v12;
  if ((v1 & 0xC000000000000001) != 0 && v18 != v3)
  {
    if (v18 >= v3)
    {
      __break(1u);
      goto LABEL_150;
    }
    v36 = v18;
    do
    {
      sub_1004B804C(&qword_1013E79E0);
      _ArrayBuffer._typeCheckSlowPath(_:)(v36++);
    }
    while (v3 != v36);
  }
  if (v2)
  {
    if (v1 < 0)
      v37 = v1;
    else
      v37 = v1 & 0xFFFFFFFFFFFFFF8;
    v38 = swift_bridgeObjectRetain(v1);
    v16 = _CocoaArrayWrapper.subscript.getter(v18, v3, v37, v38);
    v12 = v39;
    v18 = v40;
    v3 = v41;
    swift_bridgeObjectRelease_n(v1, 2);
    LOBYTE(v2) = v90;
    if ((v3 & 1) == 0)
      goto LABEL_66;
LABEL_67:
    v43 = type metadata accessor for __ContiguousArrayStorageBase(0);
    v44 = swift_unknownObjectRetain_n(v16, 2);
    v45 = (double *)swift_dynamicCastClass(v44, v43);
    if (!v45)
    {
      swift_unknownObjectRelease(v16);
      v45 = _swiftEmptyArrayStorage;
    }
    v46 = *((_QWORD *)v45 + 2);
    swift_release(v45);
    if (!__OFSUB__((unint64_t)v3 >> 1, v18))
    {
      v17 = v16;
      if (v46 == ((unint64_t)v3 >> 1) - v18)
      {
        v42 = (double *)swift_dynamicCastClass(v16, v43);
        if (!v42)
        {
          swift_unknownObjectRelease(v16);
          v42 = _swiftEmptyArrayStorage;
        }
        goto LABEL_73;
      }
      goto LABEL_151;
    }
LABEL_150:
    __break(1u);
LABEL_151:
    swift_unknownObjectRelease(v17);
    goto LABEL_66;
  }
  v16 = v1 & 0xFFFFFFFFFFFFFF8;
  v12 = (id)((v1 & 0xFFFFFFFFFFFFFF8) + 32);
  v3 = (2 * v3) | 1;
  LOBYTE(v2) = v90;
  if ((v3 & 1) != 0)
    goto LABEL_67;
LABEL_66:
  v42 = sub_100600458(v16, (uint64_t)v12, v18, v3);
LABEL_73:
  swift_unknownObjectRelease(v16);
  *(_QWORD *)v8 = v42;
  swift_bridgeObjectRelease();
  v47 = v91 >> 1;
  if (ObjectType == v91 >> 1)
  {
    v48 = v87;
LABEL_107:
    swift_unknownObjectRelease(v48);
    v12 = v89;
LABEL_108:
    v68 = *(unsigned __int8 *)(v4 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_needsLayout);
    *(_BYTE *)(v4 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_needsLayout) = 0;
    if ((v2 & 1) != 0 || v68)
LABEL_112:
      sub_100C60320();
    goto LABEL_113;
  }
  v49 = (uint64_t *)(v4 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_waitingToHideControllers);
  swift_unknownObjectRetain(v87);
  v92 = v49;
  swift_beginAccess(v49, v99, 0, 0);
  if (ObjectType >= v47)
    goto LABEL_120;
  v50 = ObjectType;
  while (1)
  {
    v51 = *(void **)(v94 + 8 * v50++);
    v52 = *(void **)(v4 + v95);
    if (v52)
      v53 = v51 == v52;
    else
      v53 = 0;
    if (v53)
    {
LABEL_97:
      if (v50 == v47)
      {
        v48 = v87;
        swift_unknownObjectRelease(v87);
        LOBYTE(v2) = v90;
        goto LABEL_107;
      }
      goto LABEL_98;
    }
    v8 = *v92;
    if (!((unint64_t)*v92 >> 62))
    {
      v54 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_unknownObjectRetain(v51);
      swift_bridgeObjectRetain(v8);
      if (v54)
        break;
      goto LABEL_90;
    }
    v67 = v8 < 0 ? *v92 : v8 & 0xFFFFFFFFFFFFFF8;
    swift_unknownObjectRetain(v51);
    swift_bridgeObjectRetain(v8);
    v54 = _CocoaArrayWrapper.endIndex.getter(v67);
    if (v54)
      break;
LABEL_90:
    swift_bridgeObjectRelease();
    swift_beginAccess(v88, v98, 33, 0);
    swift_unknownObjectRetain(v51);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v58);
    v60 = *(_QWORD *)((*v88 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v59 = *(_QWORD *)((*v88 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v60 >= v59 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v59 > 1, v60 + 1, 1);
    v61 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v60, v51);
    specialized Array._endMutation()(v61);
    swift_endAccess(v98);
    v62 = swift_getObjectType(v51);
    v63 = objc_msgSend(v51, "containerView");
    objc_msgSend(v89, "addSubview:", v63);

    v8 = (uint64_t)v51;
    sub_1004C0630(0, 0, 0, v62);
    v64 = objc_msgSend(v51, "accessibilityAnnouncement");
    v4 = v93;
    if (v64)
    {
      v8 = (uint64_t)v64;
      v65 = objc_msgSend(v51, "hudView");
      v66 = objc_msgSend(v65, "window");

      CRLAccessibilityPostAnnouncementNotification(v66, (void *)v8);
    }
    swift_unknownObjectRelease(v51);
    if (v50 == v47)
    {
      swift_unknownObjectRelease_n(v87, 2);
      *(_BYTE *)(v93 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_needsLayout) = 0;
      v12 = v89;
      goto LABEL_112;
    }
    v90 = 1;
LABEL_98:
    if (v50 < ObjectType || v50 >= v47)
      goto LABEL_120;
  }
  v55 = 4;
  while (1)
  {
    if ((v8 & 0xC000000000000001) != 0)
    {
      v56 = specialized _ArrayBuffer._getElementSlowPath(_:)(v55 - 4, v8);
    }
    else
    {
      v56 = *(_QWORD *)(v8 + 8 * v55);
      swift_unknownObjectRetain(v56);
    }
    swift_unknownObjectRelease(v56);
    if (v51 == (void *)v56)
    {
      swift_unknownObjectRelease(v51);
      swift_bridgeObjectRelease();
      v4 = v93;
      goto LABEL_97;
    }
    v57 = v55 - 3;
    if (__OFADD__(v55 - 4, 1))
      break;
    ++v55;
    if (v57 == v54)
      goto LABEL_90;
  }
  __break(1u);
LABEL_120:
  __break(1u);
LABEL_121:
  swift_once(&qword_1013DD6E8, sub_100A01318);
LABEL_26:
  swift_beginAccess(v8, v103, 0, 0);
  v12 = *(id *)v8;
  v23 = static os_log_type_t.error.getter(v12);
  sub_100A06EBC((uint64_t)v12, &_mh_execute_header, v23, "updateViews called before container view is setup.", 50, 2, (uint64_t)_swiftEmptyArrayStorage);
LABEL_113:

}

BOOL CRLStatusHUDManager.ContainerViewVerticalLayoutGravity.init(rawValue:)(uint64_t a1)
{
  return a1 && a1 == 1;
}

uint64_t CRLStatusHUDManager.containerViewVerticalLayoutGravity.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_containerViewVerticalLayoutGravity;
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_containerViewVerticalLayoutGravity, v3, 0, 0);
  return *(_QWORD *)v1;
}

uint64_t CRLStatusHUDManager.containerViewVerticalLayoutGravity.setter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_containerViewVerticalLayoutGravity);
  result = swift_beginAccess(v3, v5, 1, 0);
  *v3 = a1;
  return result;
}

uint64_t (*CRLStatusHUDManager.containerViewVerticalLayoutGravity.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_containerViewVerticalLayoutGravity, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void sub_100C60320()
{
  char *v0;
  char *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  Class isa;
  uint64_t v11;
  uint64_t v12;
  char **v13;
  Class v14;
  double v15;
  id v16;
  id v17;
  id v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  double v26;
  id v27;
  id v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t inited;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  double v51;
  id v52;
  double v53;
  id v54;
  double v55;
  id v56;
  double v57;
  id v58;
  id v59;
  void *v60;
  double Width;
  double v62;
  id v63;
  id v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  char *v68;
  NSString v69;
  uint64_t v70;
  Class v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  double v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  char *v84;
  Swift::Int v85;
  uint64_t v86;
  __n128 v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  double v93;
  id v94;
  uint64_t v95;
  Class v96;
  double v97;
  id v98;
  char *v99;
  id v100;
  id v101;
  id v102;
  id v103;
  id v104;
  unint64_t v105;
  unint64_t v106;
  uint64_t v107;
  NSString v108;
  Class v109;
  uint64_t v110;
  id v111;
  Class v112;
  id v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  id v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void *v128;
  uint64_t v129;
  char *v130;
  uint64_t *v131;
  id v132;
  char **v133;
  uint64_t v134;
  uint64_t *v135;
  __int128 v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  unint64_t v141;
  id *v142;
  char *v143;
  char *v144;
  char v145[72];
  _OWORD v146[2];
  _QWORD v147[4];
  char v148[80];
  char v149[24];
  char v150[80];
  char v151[128];
  char v152[24];
  char v153[24];
  char v154[24];
  char v155[32];
  CGRect v156;

  v1 = v0;
  v2 = (uint64_t *)&v0[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_containerView];
  swift_beginAccess(&v0[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_containerView], v155, 0, 0);
  v142 = (id *)v2;
  v3 = *v2;
  if (!*v2)
  {
    if (qword_1013DD6E8 != -1)
      swift_once(&qword_1013DD6E8, sub_100A01318);
    swift_beginAccess(&static OS_os_log.crlStatusHUD, v147, 0, 0);
    v32 = (id)static OS_os_log.crlStatusHUD;
    v33 = static os_log_type_t.error.getter(v32);
    sub_100A06EBC((uint64_t)v32, &_mh_execute_header, v33, "updateLayout called before container view is setup.", 51, 2, (uint64_t)_swiftEmptyArrayStorage);

    return;
  }
  v4 = (uint64_t *)&v1[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_constraints];
  swift_beginAccess(&v1[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_constraints], v154, 1, 0);
  v5 = *v4;
  if ((unint64_t)*v4 >> 62)
    goto LABEL_87;
  v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  v7 = (id)v3;
  v132 = (id)v3;
  if (!v6)
    goto LABEL_5;
LABEL_4:
  v8 = (void *)objc_opt_self(NSLayoutConstraint);
  v9 = *v4;
  sub_1004B8930(0, (unint64_t *)&qword_1013E1760, NSLayoutConstraint_ptr);
  swift_bridgeObjectRetain(v9);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v8, "deactivateConstraints:", isa, swift_bridgeObjectRelease().n128_f64[0]);

LABEL_5:
  *v4 = (uint64_t)_swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  v11 = OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_errorController;
  v12 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_errorController];
  v13 = &selRef_startAnimation;
  v14 = (Class)&OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_gpHelper;
  if (v12)
    goto LABEL_6;
  v34 = (uint64_t *)&v1[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_showingInfoControllers];
  swift_beginAccess(&v1[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_showingInfoControllers], v153, 0, 0);
  v35 = *v34;
  if ((unint64_t)v35 >> 62)
  {
    if (v35 < 0)
      v120 = v35;
    else
      v120 = v35 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v35);
    v121 = _CocoaArrayWrapper.endIndex.getter(v120);
    swift_bridgeObjectRelease();
    if (!v121)
      goto LABEL_33;
  }
  else if (!*(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_33;
  }
  v12 = *(_QWORD *)&v1[v11];
  if (v12)
  {
LABEL_6:
    v140 = (char *)v11;
    *(_QWORD *)&v15 = swift_unknownObjectRetain(v12).n128_u64[0];
    v17 = objc_msgSend(v16, "containerView", v15);
    v18 = objc_msgSend(v17, "superview");

    swift_unknownObjectRelease(v12);
    LODWORD(v141) = v18 == 0;
  }
  else
  {
    v140 = (char *)v11;
    LODWORD(v141) = 0;
  }
  v19 = (uint64_t *)&v1[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_showingInfoControllers];
  swift_beginAccess(&v1[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_showingInfoControllers], v152, 0, 0);
  v131 = v19;
  v20 = *v19;
  v143 = v1;
  if (!((unint64_t)*v19 >> 62))
  {
    v21 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v20);
    if (!v21)
      goto LABEL_17;
    goto LABEL_9;
  }
  if (v20 < 0)
    v119 = *v19;
  else
    v119 = v20 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v20);
  v21 = _CocoaArrayWrapper.endIndex.getter(v119);
  if (v21)
  {
LABEL_9:
    v3 = v20 & 0xC000000000000001;
    v22 = 4;
    do
    {
      v23 = v22 - 4;
      if (v3)
      {
        v5 = specialized _ArrayBuffer._getElementSlowPath(_:)(v22 - 4, v20);
        v24 = v22 - 3;
        if (__OFADD__(v23, 1))
          goto LABEL_85;
      }
      else
      {
        v5 = *(_QWORD *)(v20 + 8 * v22);
        swift_unknownObjectRetain(v5);
        v24 = v22 - 3;
        if (__OFADD__(v23, 1))
        {
LABEL_85:
          __break(1u);
LABEL_86:
          __break(1u);
LABEL_87:
          if (v5 < 0)
            v116 = v5;
          else
            v116 = v5 & 0xFFFFFFFFFFFFFF8;
          v117 = (id)v3;
          swift_bridgeObjectRetain(v5);
          v118 = _CocoaArrayWrapper.endIndex.getter(v116);
          swift_bridgeObjectRelease();
          v132 = (id)v3;
          if (v118)
            goto LABEL_4;
          goto LABEL_5;
        }
      }
      v14 = (Class)objc_msgSend((id)v5, "containerView");
      v1 = (char *)-[objc_class superview](v14, "superview");

      if (!v1)
      {
        swift_bridgeObjectRelease();
        if (qword_1013DD6E8 != -1)
          swift_once(&qword_1013DD6E8, sub_100A01318);
        swift_beginAccess(&static OS_os_log.crlStatusHUD, v147, 0, 0);
        v36 = (void *)static OS_os_log.crlStatusHUD;
        v37 = sub_1004B804C((uint64_t *)&unk_1013E0180);
        inited = swift_initStackObject(v37, v145);
        *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
        *(_QWORD *)&v146[0] = v5;
        v39 = v36;
        swift_unknownObjectRetain(v5);
        v40 = sub_1004B804C(&qword_1013E79E0);
        v41 = sub_1004B804C(&qword_1013E0190);
        v42 = swift_dynamicCast(inited + 32, v146, v40, v41, 7);
        v43 = static os_log_type_t.error.getter(v42);
        sub_100A06EBC((uint64_t)v39, &_mh_execute_header, v43, "found orphaned hud controller, controller=%{public}@", 52, 2, inited);
        swift_unknownObjectRelease(v5);
        swift_setDeallocating(inited);
        swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), v41);

LABEL_32:
        CRLStatusHUDManager.hideAllControllers()();
LABEL_33:

        return;
      }
      swift_unknownObjectRelease(v5);
      ++v22;
    }
    while (v24 != v21);
  }
LABEL_17:
  swift_bridgeObjectRelease();
  if ((v141 & 1) != 0)
    goto LABEL_32;
  v25 = *(void **)&v140[(_QWORD)v143];
  v3 = (uint64_t)&selRef_computeAlignmentFrameInRoot_;
  if (v25)
  {
    *(_QWORD *)&v26 = swift_unknownObjectRetain(v25).n128_u64[0];
    if ((objc_msgSend(v27, "showing", v26) & 1) != 0 || objc_msgSend(v25, "animating"))
    {
      v28 = objc_msgSend(v25, "containerView");
      v29 = swift_unknownObjectRelease(v25).n128_u64[0];
      v30 = 0;
      v31 = 1;
      goto LABEL_41;
    }
    swift_unknownObjectRelease(v25);
  }
  v5 = *v131;
  if ((unint64_t)*v131 >> 62)
  {
    if (v5 < 0)
      v122 = *v131;
    else
      v122 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v131);
    if (!_CocoaArrayWrapper.endIndex.getter(v122))
    {
LABEL_106:

      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    v44 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*v131);
    if (!v44)
      goto LABEL_106;
  }
  if ((v5 & 0xC000000000000001) != 0)
  {
    v46 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v5);
  }
  else
  {
    v45 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v45)
    {
      __break(1u);
      goto LABEL_123;
    }
    v46 = *(void **)(v5 + 32);
    swift_unknownObjectRetain(v46);
  }
  v28 = objc_msgSend(v46, "containerView", swift_bridgeObjectRelease().n128_f64[0]);
  v29 = swift_unknownObjectRelease(v46).n128_u64[0];
  v31 = 0;
  v30 = 1;
LABEL_41:
  v47 = objc_msgSend(v28, "superview", *(double *)&v29);

  if (!v47)
  {

    return;
  }
  v129 = v31;
  v48 = sub_1004B804C(&qword_1013E9D80);
  v49 = swift_initStackObject(v48, v151);
  *(_OWORD *)(v49 + 16) = xmmword_100EF5E30;
  *(_QWORD *)(v49 + 32) = 0x676E6963617073;
  *(_QWORD *)(v49 + 40) = 0xE700000000000000;
  v50 = objc_allocWithZone((Class)NSNumber);
  LODWORD(v51) = 10.0;
  *(_QWORD *)(v49 + 48) = objc_msgSend(v50, "initWithFloat:", v51);
  *(_QWORD *)(v49 + 56) = 0x676E6964646170;
  *(_QWORD *)(v49 + 64) = 0xE700000000000000;
  v52 = objc_allocWithZone((Class)NSNumber);
  LODWORD(v53) = 20.0;
  *(_QWORD *)(v49 + 72) = objc_msgSend(v52, "initWithFloat:", v53);
  *(_QWORD *)(v49 + 80) = 0xD00000000000001BLL;
  *(_QWORD *)(v49 + 88) = 0x8000000101005350;
  v54 = objc_allocWithZone((Class)NSNumber);
  LODWORD(v55) = 16.0;
  *(_QWORD *)(v49 + 96) = objc_msgSend(v54, "initWithFloat:", v55);
  *(_QWORD *)(v49 + 104) = 0xD00000000000001DLL;
  *(_QWORD *)(v49 + 112) = 0x8000000101005370;
  v56 = objc_allocWithZone((Class)NSNumber);
  LODWORD(v57) = 16.0;
  *(_QWORD *)(v49 + 120) = objc_msgSend(v56, "initWithFloat:", v57);
  v141 = sub_1008D5130(v49);
  v58 = objc_msgSend(v132, "widthAnchor");
  if (*v142 && (v59 = objc_msgSend(*v142, "window")) != 0)
  {
    v60 = v59;
    objc_msgSend(v59, "bounds");
    Width = CGRectGetWidth(v156);

    v62 = 375.0;
    if (Width < 375.0)
      v62 = Width;
  }
  else
  {
    v62 = 375.0;
  }
  v63 = objc_msgSend(v58, "constraintEqualToConstant:", v62 + 40.0);

  swift_beginAccess(v4, v147, 33, 0);
  v64 = v63;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v64);
  v66 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v65 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v66 >= v65 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v65 > 1, v66 + 1, 1);
  v128 = v64;
  v67 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v66, v64);
  specialized Array._endMutation()(v67);
  swift_endAccess(v147);
  v68 = (char *)objc_opt_self(NSLayoutConstraint);
  v69 = String._bridgeToObjectiveC()();
  sub_100C9B3B0(v141);
  v13 = (char **)((char *)&type metadata for Any + 8);
  v14 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v137 = sub_1004B804C(&qword_1013F7600);
  v70 = swift_initStackObject(v137, v150);
  v136 = xmmword_100EF5E40;
  *(_OWORD *)(v70 + 16) = xmmword_100EF5E40;
  *(_QWORD *)(v70 + 32) = 0x77656956706F74;
  *(_QWORD *)(v70 + 40) = 0xE700000000000000;
  v139 = sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
  *(_QWORD *)(v70 + 72) = v139;
  *(_QWORD *)(v70 + 48) = v28;
  v1 = (char *)v28;
  sub_1008D5E68(v70);
  v71 = Dictionary._bridgeToObjectiveC()().super.isa;
  v140 = v68;
  v72 = objc_msgSend(v68, "constraintsWithVisualFormat:options:metrics:views:", v69, 0, v14, v71, swift_bridgeObjectRelease().n128_f64[0]);

  v73 = sub_1004B8930(0, (unint64_t *)&qword_1013E1760, NSLayoutConstraint_ptr);
  v74 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v72, v73);

  swift_beginAccess(v4, v147, 33, 0);
  v3 = (uint64_t)v4;
  sub_10061EAE0(v74);
  swift_endAccess(v147);
  v5 = (uint64_t)&v143[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_containerViewVerticalLayoutGravity];
  *(_QWORD *)&v75 = swift_beginAccess(&v143[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_containerViewVerticalLayoutGravity], v149, 0, 0).n128_u64[0];
  v135 = (uint64_t *)v5;
  v45 = *(_QWORD *)v5;
  v130 = v1;
  if (*(_QWORD *)v5)
  {
    if (v45 != 1)
      goto LABEL_126;
    v76 = objc_msgSend(v1, "bottomAnchor", v75);
    v77 = objc_msgSend(v132, "bottomAnchor");
    v78 = objc_msgSend(v76, "constraintEqualToAnchor:constant:", v77, 16.0);
  }
  else
  {
    v76 = objc_msgSend(v1, "topAnchor", v75);
    v77 = objc_msgSend(v132, "topAnchor");
    v78 = objc_msgSend(v76, "constraintEqualToAnchor:constant:", v77, 16.0);
  }
  v79 = v78;

  swift_beginAccess(v4, v147, 33, 0);
  v80 = v79;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v80);
  v82 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v81 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v82 >= v81 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v81 > 1, v82 + 1, 1);
  v3 = (uint64_t)v4;
  v83 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v82, v80);
  specialized Array._endMutation()(v83);
  swift_endAccess(v147);

  v5 = *v131;
  v14 = (Class)((unint64_t)*v131 >> 62);
  v138 = v73;
  if (v14)
  {
    if (v5 < 0)
      v3 = *v131;
    else
      v3 = v5 & 0xFFFFFFFFFFFFFF8;
    v123 = v1;
    swift_bridgeObjectRetain(v5);
    v124 = _CocoaArrayWrapper.endIndex.getter(v3);
    if (v124 >= v30)
    {
      v13 = (char **)v124;
      v1 = (char *)v30;
      swift_bridgeObjectRetain(v5);
      v125 = _CocoaArrayWrapper.endIndex.getter(v3);
      swift_bridgeObjectRelease();
      if (v125 >= v30)
      {
        swift_bridgeObjectRetain(v5);
        v3 = _CocoaArrayWrapper.endIndex.getter(v3);
        swift_bridgeObjectRelease();
        if (v3 < (uint64_t)v13)
        {
          __break(1u);
LABEL_114:
          __break(1u);
          goto LABEL_115;
        }
        goto LABEL_127;
      }
      goto LABEL_125;
    }
    goto LABEL_124;
  }
  v13 = *(char ***)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  if ((unint64_t)v13 < v30)
    goto LABEL_114;
  v84 = v1;
  swift_bridgeObjectRetain(v5);
  if ((v5 & 0xC000000000000001) != 0)
  {
    while ((char **)v30 != v13)
    {
      if (v30 < (uint64_t)v13)
      {
        v3 = (uint64_t)&qword_1013E79E0;
        v85 = v30;
        do
        {
          sub_1004B804C(&qword_1013E79E0);
          _ArrayBuffer._typeCheckSlowPath(_:)(v85++);
        }
        while (v13 != (char **)v85);
        break;
      }
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      v147[0] = v45;
      _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for CRLStatusHUDManager.ContainerViewVerticalLayoutGravity, v147, &type metadata for CRLStatusHUDManager.ContainerViewVerticalLayoutGravity, &type metadata for Int);
      __break(1u);
LABEL_127:
      v30 = (uint64_t)v1;
      if ((v5 & 0xC000000000000001) == 0)
        break;
    }
  }
  if (v14)
  {
    if (v5 < 0)
      v86 = v5;
    else
      v86 = v5 & 0xFFFFFFFFFFFFFF8;
    v87 = swift_bridgeObjectRetain(v5);
    v127 = _CocoaArrayWrapper.subscript.getter(v30, v13, v86, v87);
    v134 = v88;
    v30 = v89;
    v3 = v90;
    swift_bridgeObjectRelease_n(v5, 2);
    v13 = (char **)((unint64_t)v3 >> 1);
  }
  else
  {
    v127 = v5 & 0xFFFFFFFFFFFFFF8;
    v134 = (v5 & 0xFFFFFFFFFFFFFF8) + 32;
  }
  v70 = (uint64_t)v130;
  v14 = (Class)&selRef_computeAlignmentFrameInRoot_;
  if ((char **)v30 != v13)
  {
    v133 = v13;
    v1 = v130;
    while (v30 < (uint64_t)v13)
    {
      v5 = *(_QWORD *)(v134 + 8 * v30);
      *(_QWORD *)&v97 = swift_unknownObjectRetain(v5).n128_u64[0];
      v99 = (char *)objc_msgSend(v98, *((SEL *)v14 + 85), v97);
      v45 = *v135;
      v142 = (id *)v1;
      v144 = v99;
      if (*v135 == 1)
      {
        v100 = objc_msgSend(v99, "bottomAnchor");
        v101 = objc_msgSend(v1, "topAnchor");
        v102 = objc_msgSend(v100, "constraintEqualToAnchor:", v101);
      }
      else
      {
        if (v45)
          goto LABEL_126;
        v100 = objc_msgSend(v99, "topAnchor");
        v101 = objc_msgSend(v1, "bottomAnchor");
        v102 = objc_msgSend(v100, "constraintEqualToAnchor:", v101);
      }
      v103 = v102;

      swift_beginAccess(v4, v147, 33, 0);
      v104 = v103;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v104);
      v106 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v105 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v106 >= v105 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v105 > 1, v106 + 1, 1);
      v107 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v106, v104);
      specialized Array._endMutation()(v107);
      swift_endAccess(v147);

      v108 = String._bridgeToObjectiveC()();
      sub_100C9B3B0(v141);
      v109 = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      v110 = swift_initStackObject(v137, v148);
      *(_OWORD *)(v110 + 16) = v136;
      strcpy((char *)(v110 + 32), "containerView");
      *(_WORD *)(v110 + 46) = -4864;
      v111 = objc_msgSend((id)v5, *((SEL *)v14 + 85));
      *(_QWORD *)(v110 + 72) = v139;
      *(_QWORD *)(v110 + 48) = v111;
      sub_1008D5E68(v110);
      ++v30;
      v112 = Dictionary._bridgeToObjectiveC()().super.isa;
      v113 = objc_msgSend(v140, "constraintsWithVisualFormat:options:metrics:views:", v108, 0, v109, v112, swift_bridgeObjectRelease().n128_f64[0]);

      v14 = (Class)&selRef_computeAlignmentFrameInRoot_;
      v114 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v113, v138);

      swift_beginAccess(v4, v147, 33, 0);
      v115 = v114;
      v3 = (uint64_t)v4;
      sub_10061EAE0(v115);
      swift_endAccess(v147);
      swift_unknownObjectRelease(v5);

      v70 = (uint64_t)v144;
      v1 = v144;
      v13 = v133;
      if (v133 == (char **)v30)
        goto LABEL_70;
    }
    goto LABEL_86;
  }
LABEL_70:
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease(v127);
  v5 = *v131;
  if (!((unint64_t)*v131 >> 62))
  {
    v91 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_72;
  }
LABEL_115:
  if (v5 < 0)
    v126 = v5;
  else
    v126 = v5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v5);
  v91 = _CocoaArrayWrapper.endIndex.getter(v126);
  swift_bridgeObjectRelease();
LABEL_72:
  v92 = v91 + v129;
  if (__OFADD__(v91, v129))
  {
    __break(1u);
  }
  else
  {
    v93 = (double)(uint64_t)v92 * 56.0 + 10.0 + 20.0;
    v147[3] = v139;
    v147[0] = v132;
    memset(v146, 0, sizeof(v146));
    v5 = (uint64_t)v132;
    v94 = sub_100881454(v147, 8, 0, v146, 8, 1.0, v93);
    swift_beginAccess(v4, v147, 33, 0);
    v30 = (uint64_t)v94;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v30);
    v14 = *(Class *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v92 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if ((unint64_t)v14 < v92 >> 1)
      goto LABEL_74;
  }
  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v92 > 1, (char *)v14 + 1, 1);
LABEL_74:
  v95 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v14, v30);
  specialized Array._endMutation()(v95);
  swift_endAccess(v147);
  swift_bridgeObjectRetain(*v4);
  v96 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v140, "activateConstraints:", v96, swift_bridgeObjectRelease().n128_f64[0]);

}

id CRLStatusHUDManager.init()()
{
  _BYTE *v0;
  uint64_t v1;
  void *v2;
  _BYTE *v3;
  objc_super v5;

  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_maxInfos] = 5;
  v0[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_ready] = 0;
  v1 = OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_delayedControllers;
  v2 = (void *)objc_opt_self(NSHashTable);
  v3 = v0;
  *(_QWORD *)&v0[v1] = objc_msgSend(v2, "weakObjectsHashTable");
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_containerView] = 0;
  v3[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_alwaysUseDarkAppearance] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_errorController] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_showingInfoControllers] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_waitingInfoControllers] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_waitingToHideControllers] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_hidingController] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_constraints] = _swiftEmptyArrayStorage;
  v3[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_needsLayout] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_containerViewVerticalLayoutGravity] = 0;

  v5.receiver = v3;
  v5.super_class = (Class)type metadata accessor for CRLStatusHUDManager();
  return objc_msgSendSuper2(&v5, "init");
}

id CRLStatusHUDManager.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLStatusHUDManager();
  return objc_msgSendSuper2(&v2, "dealloc");
}

double sub_100C6171C(void *a1, void *a2, uint64_t a3)
{
  id *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  unint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  double result;
  void *v27;
  id v28;
  _BYTE v29[24];
  _BYTE v30[32];
  char v31[24];
  char v32[24];

  if (!a1)
  {
    sub_100C61A18(a2, a3, 0.0);
    return result;
  }
  v6 = (id *)(a3 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_delayedControllers);
  swift_beginAccess(a3 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_delayedControllers, v32, 0, 0);
  objc_msgSend(*v6, "removeObject:", a1, swift_unknownObjectRetain(a1).n128_f64[0]);
  v7 = (uint64_t *)(a3 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_waitingInfoControllers);
  swift_beginAccess(a3 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_waitingInfoControllers, v31, 0, 0);
  v8 = *v7;
  swift_unknownObjectRetain(a1);
  swift_bridgeObjectRetain(v8);
  v10 = sub_100C4A344(v9, (uint64_t)a1);
  v12 = v11;
  swift_bridgeObjectRelease();
  v13 = swift_unknownObjectRelease(a1).n128_u64[0];
  if ((v12 & 1) == 0)
  {
    swift_beginAccess(v7, v30, 33, 0);
    v14 = sub_100C5CA9C(v10);
    swift_endAccess(v30);
    v13 = swift_unknownObjectRelease(v14).n128_u64[0];
  }
  if ((objc_msgSend(a1, "showing", *(double *)&v13) & 1) != 0
    || objc_msgSend(a1, "animating"))
  {
    v15 = objc_msgSend(a1, "containerView");
    v16 = objc_msgSend(v15, "superview");

    if (v16)
    {
      if (a1 != a2)
      {
        if (objc_msgSend(a1, "type"))
        {
          v18 = (uint64_t *)(a3 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_showingInfoControllers);
          swift_beginAccess(a3 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_showingInfoControllers, v30, 0, 0);
          v19 = *v18;
          swift_unknownObjectRetain(a1);
          swift_bridgeObjectRetain(v19);
          v21 = sub_100C4A344(v20, (uint64_t)a1);
          v23 = v22;
          swift_bridgeObjectRelease();
          v17 = swift_unknownObjectRelease(a1).n128_u64[0];
          if ((v23 & 1) != 0)
          {
LABEL_17:
            v28 = objc_msgSend(a1, "containerView", *(double *)&v17);
            objc_msgSend(v28, "removeFromSuperview");

            sub_100C61A18(a2, a3, 0.0);
            *(_BYTE *)(a3 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_needsLayout) = 1;
            sub_100C5F4C4();
            goto LABEL_18;
          }
          swift_beginAccess(v18, v29, 33, 0);
          v24 = sub_100C5CA9C(v21);
          swift_endAccess(v29);
          v25 = v24;
        }
        else
        {
          v27 = *(void **)(a3 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_errorController);
          if (!v27 || v27 != a1)
            goto LABEL_17;
          *(_QWORD *)(a3 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_errorController) = 0;
          v25 = (uint64_t)a1;
        }
        v17 = swift_unknownObjectRelease(v25).n128_u64[0];
        goto LABEL_17;
      }
    }
  }
  sub_100C61A18(a2, a3, 0.0);
LABEL_18:
  *(_QWORD *)&result = swift_unknownObjectRelease(a1).n128_u64[0];
  return result;
}

void sub_100C61A10(void *a1, uint64_t a2)
{
  sub_100C61A18(a1, a2, 0.0);
}

void sub_100C61A18(void *a1, uint64_t a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t inited;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  __n128 v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id *v30;
  id v31;
  __n128 v32;
  uint64_t v33;
  const char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v46;
  double v47;
  __n128 v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  char *v53;
  __n128 v54;
  char *v55;
  uint64_t v56;
  __n128 v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  __n128 v63;
  char *v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  double v72;
  id v73;
  id v74;
  id v75;
  id v76;
  double v77;
  id v78;
  void *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD v91[5];
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char v97[32];

  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v89 = *(_QWORD *)(v6 - 8);
  v90 = v6;
  __chkstk_darwin(v6);
  v88 = (char *)&v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v86 = *(_QWORD *)(v8 - 8);
  v87 = v8;
  __chkstk_darwin(v8);
  v85 = (char *)&v81 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = type metadata accessor for DispatchTime(0);
  v82 = *(_QWORD *)(v84 - 8);
  __chkstk_darwin(v84);
  v81 = (char *)&v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v83 = (char *)&v81 - v12;
  if (qword_1013DD6E8 != -1)
    swift_once(&qword_1013DD6E8, sub_100A01318);
  swift_beginAccess(&static OS_os_log.crlStatusHUD, v97, 0, 0);
  v13 = (void *)static OS_os_log.crlStatusHUD;
  v14 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v14, &v96);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  v91[0] = a1;
  v16 = v13;
  swift_unknownObjectRetain(a1);
  v17 = sub_1004B804C(&qword_1013E79E0);
  v18 = sub_1004B804C(&qword_1013E0190);
  swift_dynamicCast(inited + 32, v91, v17, v18, 7);
  v19 = objc_msgSend(a1, "message");
  if (v19)
  {
    v20 = v19;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
    v22 = v21;
    v24 = v23;

  }
  else
  {
    v22 = 0;
    v24 = 0;
  }
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = sub_1004CFC2C();
  if (v24)
    v26 = v22;
  else
    v26 = 0;
  v27 = 0xE000000000000000;
  if (v24)
    v27 = v24;
  *(_QWORD *)(inited + 72) = v26;
  *(_QWORD *)(inited + 80) = v27;
  v28 = static os_log_type_t.default.getter(v25);
  sub_100A06EBC((uint64_t)v16, &_mh_execute_header, v28, "show hudController=%{public}@ message=\"%@\"", 42, 2, inited);
  swift_setDeallocating(inited);
  swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), v18);

  v29 = a2;
  v30 = (id *)(a2 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_delayedControllers);
  if (objc_msgSend(*(id *)(a2 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_delayedControllers), "containsObject:", a1, swift_beginAccess(a2 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_delayedControllers, &v95, 0, 0).n128_f64[0]))
  {
    v31 = (id)static OS_os_log.crlStatusHUD;
    v33 = static os_log_type_t.default.getter(v32);
    v34 = "Trying to delay the same hud controller, just sticking with the old delay";
    v35 = (uint64_t)v31;
    v36 = 73;
LABEL_16:
    sub_100A06EBC(v35, &_mh_execute_header, v33, v34, v36, 2, (uint64_t)_swiftEmptyArrayStorage);

    return;
  }
  v37 = (uint64_t *)(a2 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_showingInfoControllers);
  swift_beginAccess(a2 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_showingInfoControllers, &v94, 0, 0);
  v38 = *v37;
  __chkstk_darwin(v39);
  *(&v81 - 2) = (char *)a1;
  swift_bridgeObjectRetain(v38);
  sub_100C1C5F0((uint64_t (*)(uint64_t *))sub_100C62330, (uint64_t)(&v81 - 4), v38);
  v41 = v40;
  swift_bridgeObjectRelease();
  if ((v41 & 1) == 0)
    goto LABEL_15;
  v42 = (uint64_t *)(a2 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_waitingInfoControllers);
  swift_beginAccess(a2 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_waitingInfoControllers, &v93, 0, 0);
  v43 = *v42;
  __chkstk_darwin(v44);
  *(&v81 - 2) = (char *)a1;
  swift_bridgeObjectRetain(v43);
  sub_100C1C5F0((uint64_t (*)(uint64_t *))sub_100C622C0, (uint64_t)(&v81 - 4), v43);
  v46 = v45;
  *(_QWORD *)&v47 = swift_bridgeObjectRelease().n128_u64[0];
  if ((v46 & 1) == 0)
  {
LABEL_15:
    v31 = (id)static OS_os_log.crlStatusHUD;
    v33 = static os_log_type_t.default.getter(v48);
    v34 = "Ignoring attempt to show hud controller that has aleady been shown or is waiting to show.";
    v35 = (uint64_t)v31;
    v36 = 89;
    goto LABEL_16;
  }
  if (a3 != 0.0)
  {
    objc_msgSend(*v30, "addObject:", a1, v47);
    v53 = v81;
    static DispatchTime.now()(v54);
    v55 = v83;
    + infix(_:_:)(v53, a3);
    v82 = *(_QWORD *)(v82 + 8);
    v56 = v84;
    ((void (*)(char *, uint64_t))v82)(v53, v84);
    sub_1004B8930(0, (unint64_t *)&qword_1013DE090, OS_dispatch_queue_ptr);
    v58 = (void *)static OS_dispatch_queue.main.getter(v57);
    v59 = swift_allocObject(&unk_10129D5C8, 24, 7);
    swift_unknownObjectWeakInit(v59 + 16);
    v60 = swift_allocObject(&unk_10129D5F0, 32, 7);
    *(_QWORD *)(v60 + 16) = v59;
    *(_QWORD *)(v60 + 24) = a1;
    v91[4] = sub_100C4A6F8;
    v92 = v60;
    v91[0] = _NSConcreteStackBlock;
    v91[1] = *(_QWORD *)"";
    v91[2] = sub_1005D2FC0;
    v91[3] = &unk_10129D608;
    v61 = _Block_copy(v91);
    v62 = v92;
    swift_unknownObjectRetain(a1);
    v63 = swift_release(v62);
    v64 = v85;
    static DispatchQoS.unspecified.getter(v63);
    v91[0] = _swiftEmptyArrayStorage;
    v65 = sub_1004CB65C();
    v66 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
    v67 = sub_100503E88();
    v68 = v88;
    v69 = v90;
    dispatch thunk of SetAlgebra.init<A>(_:)(v91, v66, v67, v90, v65);
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v55, v64, v68, v61);
    _Block_release(v61);

    (*(void (**)(char *, uint64_t))(v89 + 8))(v68, v69);
    (*(void (**)(char *, uint64_t))(v86 + 8))(v64, v87);
    ((void (*)(char *, uint64_t))v82)(v55, v56);
    return;
  }
  if (objc_msgSend(a1, "type", v47))
  {
    swift_beginAccess(v42, v91, 33, 0);
    swift_unknownObjectRetain(a1);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v49);
    v51 = *(_QWORD *)((*v42 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v50 = *(_QWORD *)((*v42 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v51 >= v50 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v50 > 1, v51 + 1, 1);
    v52 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v51, a1);
    specialized Array._endMutation()(v52);
    swift_endAccess(v91);
    goto LABEL_33;
  }
  v70 = OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_errorController;
  v71 = *(void **)(v29 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_errorController);
  if (v71)
  {
    if (v71 == a1)
    {
      *(_QWORD *)&v77 = swift_unknownObjectRetain(a1).n128_u64[0];
      if ((objc_msgSend(v78, "showing", v77) & 1) != 0)
        objc_msgSend(a1, "setShowing:", 1);
      v79 = a1;
    }
    else
    {
      *(_QWORD *)&v72 = swift_unknownObjectRetain(*(_QWORD *)(v29
                                                            + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_errorController)).n128_u64[0];
      v74 = objc_msgSend(v73, "containerView", v72);
      v75 = objc_msgSend(v74, "superview");

      if (v75)
      {
        v76 = objc_msgSend(v71, "containerView");
        objc_msgSend(v76, "removeFromSuperview");
        swift_unknownObjectRelease(v71);

        *(_BYTE *)(v29 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_needsLayout) = 1;
        goto LABEL_32;
      }
      v79 = v71;
    }
    swift_unknownObjectRelease(v79);
  }
LABEL_32:
  v80 = *(_QWORD *)(v29 + v70);
  *(_QWORD *)(v29 + v70) = a1;
  swift_unknownObjectRetain(a1);
  swift_unknownObjectRelease(v80);
LABEL_33:
  sub_100C5F4C4();
}

uint64_t type metadata accessor for CRLStatusHUDManager()
{
  return objc_opt_self(_TtC8Freeform19CRLStatusHUDManager);
}

unint64_t sub_100C621DC()
{
  unint64_t result;

  result = qword_10140BDA0;
  if (!qword_10140BDA0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CRLStatusHUDManager.ContainerViewVerticalLayoutGravity, &type metadata for CRLStatusHUDManager.ContainerViewVerticalLayoutGravity);
    atomic_store(result, (unint64_t *)&qword_10140BDA0);
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLStatusHUDManager.ContainerViewVerticalLayoutGravity()
{
  return &type metadata for CRLStatusHUDManager.ContainerViewVerticalLayoutGravity;
}

uint64_t sub_100C62230()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100C62254(uint64_t a1)
{
  uint64_t v1;

  return sub_100C5F114(a1, *(char **)(v1 + 16));
}

uint64_t sub_100C6225C(uint64_t a1)
{
  uint64_t v1;

  return sub_100C5EE8C(a1, *(void **)(v1 + 16));
}

uint64_t sub_100C62268()
{
  uint64_t v0;

  return sub_100C5F078(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

double sub_100C62270(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

double sub_100C62280(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_100C6228C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100C622B8()
{
  uint64_t v0;

  return sub_100C5F448(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

BOOL sub_100C622C0(_QWORD *a1)
{
  uint64_t v1;

  return *a1 == *(_QWORD *)(v1 + 16);
}

uint64_t sub_100C622D4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100C622F8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

BOOL sub_100C62330(_QWORD *a1)
{
  return sub_100C622C0(a1);
}

BOOL sub_100C62350(_QWORD *a1, uint64_t a2)
{
  return sub_100C5F4B4(a1, a2);
}

id sub_100C62370(uint64_t a1, double a2)
{
  char *v2;
  void *v4;
  void *v5;
  void *v6;

  swift_unknownObjectWeakAssign(&v2[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_canvasBackgroundDelegate], a1);
  *(double *)&v2[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_viewScale] = a2;
  if (v2[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_enabled] == 1)
    objc_msgSend(v2, "setNeedsLayout");
  objc_msgSend(v2, "setMasksToBounds:", 1);
  v4 = *(void **)&v2[OBJC_IVAR____TtC8Freeform21CRLCanvasDotGridLayer_innerReplicatorLayer];
  v5 = *(void **)&v2[OBJC_IVAR____TtC8Freeform21CRLCanvasDotGridLayer_imageTileLayer];
  objc_msgSend(v4, "addSublayer:", v5);
  v6 = *(void **)&v2[OBJC_IVAR____TtC8Freeform21CRLCanvasDotGridLayer_outerReplicatorLayer];
  objc_msgSend(v6, "addSublayer:", v4);
  objc_msgSend(v2, "addSublayer:", v6);
  objc_msgSend(v6, "setDelegate:", v2);
  objc_msgSend(v4, "setDelegate:", v2);
  objc_msgSend(v5, "setDelegate:", v2);
  objc_msgSend(v6, "setMasksToBounds:", 0);
  objc_msgSend(v4, "setMasksToBounds:", 0);
  return objc_msgSend(v5, "setMasksToBounds:", 0);
}

void sub_100C624C0()
{
  uint64_t v0;
  double v1;
  __int128 v2;
  double v3;
  double v4;
  double v5;
  _OWORD v6[3];

  v1 = *(double *)(v0 + OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_viewScale);
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_scalesWithCanvas) & 1) == 0)
  {
    v2 = *(_OWORD *)(v0 + OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_dynamicTransform + 16);
    v6[0] = *(_OWORD *)(v0 + OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_dynamicTransform);
    v6[1] = v2;
    v6[2] = *(_OWORD *)(v0 + OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_dynamicTransform + 32);
    v1 = v1 * sub_10007922C((double *)v6);
  }
  if (v1 >= 0.1)
  {
    if (v1 < 0.25)
    {
      v3 = sub_1003C6678(v1, 0.1, 0.25);
      v4 = 1.0;
      v5 = 2.0;
    }
    else
    {
      if (v1 < 1.0)
        return;
      if (v1 < 2.0)
      {
        v3 = sub_1003C6678(v1, 1.0, 2.0);
        v4 = 2.0;
        v5 = 4.0;
      }
      else
      {
        if (v1 >= 4.0)
          return;
        v3 = sub_1003C6678(v1, 2.0, 4.0);
        v4 = 4.0;
        v5 = 5.0;
      }
    }
    sub_1003C660C(v4, v5, v3);
  }
}

void sub_100C6270C()
{
  uint64_t v0;
  double v1;
  __int128 v2;
  double v3;
  double v4;
  double v5;
  double v6;
  _OWORD v7[3];

  v1 = *(double *)(v0 + OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_viewScale);
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_scalesWithCanvas) & 1) == 0)
  {
    v2 = *(_OWORD *)(v0 + OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_dynamicTransform + 16);
    v7[0] = *(_OWORD *)(v0 + OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_dynamicTransform);
    v7[1] = v2;
    v7[2] = *(_OWORD *)(v0 + OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_dynamicTransform + 32);
    v1 = v1 * sub_10007922C((double *)v7);
  }
  if (v1 < 0.25)
    return;
  if (v1 < 0.5)
  {
    v3 = sub_1003C6678(v1, 0.25, 0.5);
    v4 = 0.1;
LABEL_10:
    sub_1003C660C(v4, 0.15, v3);
    return;
  }
  if (v1 < 1.0)
  {
    v5 = sub_1003C6678(v1, 0.5, 1.0);
    sub_1003C660C(0.15, 0.25, v5);
    return;
  }
  if (v1 < 2.0)
  {
    v6 = sub_1003C6678(v1, 1.0, 2.0);
    sub_1003C660C(0.25, 0.2, v6);
    return;
  }
  if (v1 < 4.0)
  {
    v3 = sub_1003C6678(v1, 2.0, 4.0);
    v4 = 0.2;
    goto LABEL_10;
  }
}

void sub_100C62990(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  double v6;
  __int128 v7;
  double v8;
  CGImageRef v9;
  uint64_t v10;
  double v11;
  double v12;
  uint64_t v13;
  double v14;
  double v15;
  _BOOL4 v16;
  CGImage *v17;
  double v18;
  __int128 v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v26;
  CGContext *v27;
  CGContext *v28;
  id v29;
  CGColor *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  CGImageRef Image;
  void *v35;
  CGImage *v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  CGRect v40;

  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_canvasBackgroundDelegate);
  if (!Strong)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"dotGridImageStorage", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLCanvasDotGridLayer.swift", 91, 2, 135, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"dotGridImageStorage", 19, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLCanvasDotGridLayer.swift", 91, 2u, 135, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    goto LABEL_39;
  }
  v4 = (void *)Strong;
  v5 = OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_scalesWithCanvas;
  v6 = *(double *)(v1 + OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_viewScale);
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_scalesWithCanvas) & 1) == 0)
  {
    v7 = *(_OWORD *)(v1 + OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_dynamicTransform + 16);
    v37 = *(_OWORD *)(v1 + OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_dynamicTransform);
    v38 = v7;
    v39 = *(_OWORD *)(v1 + OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_dynamicTransform + 32);
    v6 = v6 * sub_10007922C((double *)&v37);
  }
  v8 = 0.0;
  if (sub_10077F18C(v6, 0.0))
  {
    swift_unknownObjectRelease(v4);
    v9 = 0;
    v10 = 0;
LABEL_40:
    v14 = 0.0;
    v15 = 0.0;
    goto LABEL_41;
  }
  objc_msgSend(v4, "contentsScaleForCanvasBackgroundLayer:", v1);
  v12 = v11;
  if (sub_10077F18C(v11, 0.0))
    v12 = *(double *)(v1 + OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_lastValidContentsScaleFromDelegate);
  else
    *(double *)(v1 + OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_lastValidContentsScaleFromDelegate) = v12;
  v13 = v1 + OBJC_IVAR____TtC8Freeform21CRLCanvasDotGridLayer_dotGridImageStorageCache;
  v9 = *(CGImageRef *)(v1 + OBJC_IVAR____TtC8Freeform21CRLCanvasDotGridLayer_dotGridImageStorageCache + 16);
  if (v9)
  {
    v8 = *(double *)v13;
    v14 = *(double *)(v13 + 8);
    v10 = *(_QWORD *)(v13 + 24);
    v15 = *(double *)(v13 + 32);
    v16 = sub_10077F18C(*(double *)v13, v6);
    v17 = v9;
    if (v16 && sub_10077F18C(v14, v12))
    {
      swift_unknownObjectRelease(v4);
LABEL_41:
      *(double *)a1 = v8;
      *(double *)(a1 + 8) = v14;
      *(_QWORD *)(a1 + 16) = v9;
      *(_QWORD *)(a1 + 24) = v10;
      *(double *)(a1 + 32) = v15;
      return;
    }

  }
  v18 = *(double *)(v1 + OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_viewScale);
  if ((*(_BYTE *)(v1 + v5) & 1) == 0)
  {
    v19 = *(_OWORD *)(v1 + OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_dynamicTransform + 16);
    v37 = *(_OWORD *)(v1 + OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_dynamicTransform);
    v38 = v19;
    v39 = *(_OWORD *)(v1 + OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_dynamicTransform + 32);
    v18 = v18 * sub_10007922C((double *)&v37);
  }
  v20 = v18 * 25.0;
  sub_100C624C0();
  v22 = v21;
  v23 = 512.0;
  if (*(_BYTE *)(v1 + v5))
    v23 = 1024.0;
  v24 = floor(v23 / v12 / v20);
  if ((*(_QWORD *)&v24 & 0x7FF0000000000000) == 0x7FF0000000000000 && (*(_QWORD *)&v24 & 0xFFFFFFFFFFFFFLL) != 0)
    goto LABEL_38;
  if ((*(_QWORD *)&v24 & 0x7FF0000000000000) == 0x7FF0000000000000)
    goto LABEL_44;
  if (v24 <= -9.22337204e18)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  if (v24 >= 9.22337204e18)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  v26 = ceil(v12 * (v20 * (double)(uint64_t)v24));
  v27 = sub_10040FA64(11, v26, v26);
  if (!v27)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"dotGridImageStorage", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLCanvasDotGridLayer.swift", 91, 2, 181, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"dotGridImageStorage", 19, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLCanvasDotGridLayer.swift", 91, 2u, 181, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
LABEL_38:
    swift_unknownObjectRelease(v4);
    goto LABEL_39;
  }
  v28 = v27;
  v10 = (uint64_t)v24;
  CGContextSaveGState(v27);
  CGContextScaleCTM(v28, v12, v12);
  v29 = objc_msgSend((id)objc_opt_self(CRLColor), "blackColor");
  v30 = (CGColor *)objc_msgSend(v29, "CGColor");

  CGContextSetFillColorWithColor(v28, v30);
  if (((uint64_t)v24 & 0x8000000000000000) == 0)
  {
    v15 = floor(v20 * 0.5);
    if (v10)
    {
      v31 = 0;
      while (v31 != v10)
      {
        v32 = 0;
        do
        {
          v33 = v32 + 1;
          v40.origin.x = sub_10005FD98(v15 + v20 * (double)v32, v15 + v20 * (double)v31, v22);
          CGContextFillEllipseInRect(v28, v40);
          v32 = v33;
        }
        while (v10 != v33);
        if (++v31 == v10)
          goto LABEL_35;
      }
      __break(1u);
LABEL_44:
      __break(1u);
      goto LABEL_45;
    }
LABEL_35:
    CGContextRestoreGState(v28);
    Image = CGBitmapContextCreateImage(v28);
    if (Image)
    {
      v9 = Image;
      v35 = *(void **)(v13 + 16);
      *(double *)v13 = v6;
      *(double *)(v13 + 8) = v12;
      *(_QWORD *)(v13 + 16) = Image;
      *(_QWORD *)(v13 + 24) = v10;
      *(double *)(v13 + 32) = v15;
      v36 = Image;

      swift_unknownObjectRelease(v4);
      v8 = v6;
      v14 = v12;
      goto LABEL_41;
    }
    sub_100757E04(&_mh_execute_header, (uint64_t)"dotGridImageStorage", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLCanvasDotGridLayer.swift", 91, 2, 210, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"dotGridImageStorage", 19, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLCanvasDotGridLayer.swift", 91, 2u, 210, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    swift_unknownObjectRelease(v4);

LABEL_39:
    v9 = 0;
    v10 = 0;
    v8 = 0.0;
    goto LABEL_40;
  }
LABEL_47:
  __break(1u);
}

void sub_100C62F04()
{
  char *v0;
  void *v1;
  void *v2;
  CGImage *v3;
  uint64_t v4;
  double v5;
  void *v6;
  void *v7;
  uint64_t v8;
  CGFloat v9;
  CGFloat v10;
  CGFloat v11;
  CGFloat v12;
  double v13;
  double v14;
  double v15;
  long double y;
  long double x;
  char *v18;
  void *Strong;
  double v20;
  double v21;
  void *v22;
  double v23;
  double v24;
  void *v25;
  double v26;
  void *v27;
  double v28;
  double v29;
  double v30;
  double v31;
  CGFloat v32;
  void *v33;
  double v34;
  void *v35;
  double v36;
  CGFloat v37;
  CGFloat v38;
  double v39;
  CGFloat v40;
  CGPoint v41;
  double v42;
  double v43;
  __int128 v44;
  __int128 v45;
  double v46;
  CKRecordID v47;
  Swift::String v48;
  CGFloat v49;
  CGFloat v50;
  CGFloat v51;
  CGFloat v52;
  double v53;
  double v54;
  CGFloat v55;
  double v56;
  CGFloat v57;
  double v58;
  CGFloat v59;
  double v60;
  __int128 v61;
  double v62;
  double v63;
  double v64;
  double v65;
  __int128 v66;
  __int128 v67;
  double v68;
  uint64_t v69;
  CATransform3D v70;
  CGAffineTransform v71;
  objc_super v72;
  char v73[8];
  CGImage *v74;
  uint64_t v75;
  double v76;
  char v77[16];
  uint64_t v78;
  Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion v79;
  CGPoint v80;
  CGRect v81;
  CGRect v82;

  v72.receiver = v0;
  v72.super_class = (Class)type metadata accessor for CRLCanvasDotGridLayer();
  objc_msgSendSuper2(&v72, "layoutSublayers");
  v1 = (void *)objc_opt_self(CATransaction);
  objc_msgSend(v1, "begin");
  objc_msgSend(v1, "setDisableActions:", 1);
  v2 = *(void **)&v0[OBJC_IVAR____TtC8Freeform21CRLCanvasDotGridLayer_outerReplicatorLayer];
  objc_msgSend(v2, "setHidden:", (v0[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_enabled] & 1) == 0);
  sub_100C62990((uint64_t)v73);
  v3 = v74;
  v4 = v75;
  v5 = v76;
  sub_100C63E40((uint64_t)v73, (uint64_t)v77);
  if (!v78)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"layoutSublayers()", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLCanvasDotGridLayer.swift", 91, 2, 236, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"layoutSublayers()", 17, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLCanvasDotGridLayer.swift", 91, 2u, 236, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8Freeform21CRLCanvasDotGridLayer_imageTileLayer], "setContents:", 0);
LABEL_25:
    objc_msgSend(v1, "commit");
    return;
  }
  v69 = v4;
  v6 = *(void **)&v0[OBJC_IVAR____TtC8Freeform21CRLCanvasDotGridLayer_innerReplicatorLayer];
  v7 = *(void **)&v0[OBJC_IVAR____TtC8Freeform21CRLCanvasDotGridLayer_imageTileLayer];
  CGImageGetWidth(v3);
  CGImageGetHeight(v3);
  v8 = OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_scalesWithCanvas;
  v68 = v5;
  if (v0[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_scalesWithCanvas] == 1)
  {
    objc_msgSend(v0, "bounds");
    v13 = sub_100061514(v9, v10, v11, v12);
    v14 = sub_1000603B8(0.0, 0.0, v13);
    y = v15;
    x = v14;
  }
  else
  {
    v18 = &v0[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_canvasBackgroundDelegate];
    Strong = (void *)swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_canvasBackgroundDelegate]);
    v20 = 0.0;
    v21 = 0.0;
    if (Strong)
    {
      v22 = Strong;
      objc_msgSend(Strong, "originOffsetForCanvasBackgroundLayer:", v0);
      v21 = v23;
      v20 = v24;
      swift_unknownObjectRelease(v22);
    }
    v25 = (void *)swift_unknownObjectWeakLoadStrong(v18);
    v26 = 0.0;
    if (v25)
    {
      v27 = v25;
      objc_msgSend(v25, "contentOffsetForCanvasBackgroundLayer:", v0);
      v26 = v28;
      swift_unknownObjectRelease(v27);
    }
    v29 = sub_1000603D0(v21, v20, v26);
    v30 = sub_1000603B8(0.0, 0.0, v29);
    v32 = v31;
    v33 = (void *)swift_unknownObjectWeakLoadStrong(v18);
    v34 = 0.0;
    if (v33)
    {
      v35 = v33;
      objc_msgSend(v33, "canvasCenterInCanvasBackgroundLayer:", v0);
      v34 = v36;
      swift_unknownObjectRelease(v35);
    }
    v66 = *(_OWORD *)&v0[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_dynamicTransform + 16];
    v67 = *(_OWORD *)&v0[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_dynamicTransform];
    v37 = *(double *)&v0[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_dynamicTransform + 32];
    v38 = *(double *)&v0[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_dynamicTransform + 40];
    v39 = sub_1000603B8(0.0, 0.0, v34);
    *(_OWORD *)&v70.m11 = v67;
    *(_OWORD *)&v70.m13 = v66;
    v70.m21 = v37;
    v70.m22 = v38;
    sub_1000796D4(&v70, &v71, v39, v40);
    *(_OWORD *)&v70.m11 = *(_OWORD *)&v71.a;
    *(_OWORD *)&v70.m13 = *(_OWORD *)&v71.c;
    *(_OWORD *)&v70.m21 = *(_OWORD *)&v71.tx;
    v80.x = v30;
    v80.y = v32;
    v41 = CGPointApplyAffineTransform(v80, (CGAffineTransform *)&v70);
    x = v41.x;
    y = v41.y;
    v14 = 0.0;
  }
  v42 = *(double *)&v0[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_viewScale];
  if ((v0[v8] & 1) != 0)
  {
    v43 = *(double *)&v0[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_viewScale];
  }
  else
  {
    v44 = *(_OWORD *)&v0[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_dynamicTransform + 16];
    *(_OWORD *)&v70.m11 = *(_OWORD *)&v0[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_dynamicTransform];
    *(_OWORD *)&v70.m13 = v44;
    *(_OWORD *)&v70.m21 = *(_OWORD *)&v0[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_dynamicTransform + 32];
    v42 = v42 * sub_10007922C(&v70.m11);
    v43 = *(double *)&v0[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_viewScale];
    if ((v0[v8] & 1) == 0)
    {
      v45 = *(_OWORD *)&v0[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_dynamicTransform + 16];
      *(_OWORD *)&v70.m11 = *(_OWORD *)&v0[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_dynamicTransform];
      *(_OWORD *)&v70.m13 = v45;
      *(_OWORD *)&v70.m21 = *(_OWORD *)&v0[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_dynamicTransform + 32];
      v43 = v43 * sub_10007922C(&v70.m11);
    }
  }
  v46 = fmod(x, v42 * 25.0) - v14 - v68;
  fmod(y, v43 * 25.0);
  v79 = SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v47, v48);
  objc_msgSend(v2, "setFrame:", v79.recordType._object);
  objc_msgSend(v2, "bounds");
  objc_msgSend(v6, "setFrame:");
  objc_msgSend(v6, "bounds");
  objc_msgSend(v7, "setFrame:");
  objc_msgSend(v0, "bounds");
  v53 = sub_1000615D8(v49, v50, v51, v52, v46);
  v55 = v54;
  v57 = v56;
  v59 = v58;
  v60 = *(double *)&v0[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_viewScale];
  if ((v0[v8] & 1) == 0)
  {
    v61 = *(_OWORD *)&v0[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_dynamicTransform + 16];
    *(_OWORD *)&v70.m11 = *(_OWORD *)&v0[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_dynamicTransform];
    *(_OWORD *)&v70.m13 = v61;
    *(_OWORD *)&v70.m21 = *(_OWORD *)&v0[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_dynamicTransform + 32];
    v60 = v60 * sub_10007922C(&v70.m11);
  }
  v62 = v60 * 25.0 * (double)v69;
  v81.origin.x = v53;
  v81.origin.y = v55;
  v81.size.width = v57;
  v81.size.height = v59;
  v63 = ceil(CGRectGetHeight(v81) / v62);
  if ((~*(_QWORD *)&v63 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v63 <= -9.22337204e18)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (v63 >= 9.22337204e18)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  objc_msgSend(v2, "setInstanceCount:", (uint64_t)v63);
  CATransform3DMakeTranslation(&v70, 0.0, v62, 0.0);
  objc_msgSend(v2, "setInstanceTransform:", &v70);
  v82.origin.x = v53;
  v82.origin.y = v55;
  v82.size.width = v57;
  v82.size.height = v59;
  v64 = ceil(CGRectGetWidth(v82) / v62);
  if ((~*(_QWORD *)&v64 & 0x7FF0000000000000) == 0)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v64 <= -9.22337204e18)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if (v64 < 9.22337204e18)
  {
    objc_msgSend(v6, "setInstanceCount:", (uint64_t)v64);
    CATransform3DMakeTranslation(&v70, v62, 0.0, 0.0);
    objc_msgSend(v6, "setInstanceTransform:", &v70);
    sub_100C6270C();
    *(float *)&v65 = v65;
    objc_msgSend(v7, "setOpacity:", v65);
    objc_msgSend(v7, "setContents:", v3);
    sub_100C63E88((uint64_t)v73);
    goto LABEL_25;
  }
LABEL_31:
  __break(1u);
}

id sub_100C63664()
{
  char *v0;
  uint64_t v1;
  id v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  objc_super v8;

  v1 = OBJC_IVAR____TtC8Freeform21CRLCanvasDotGridLayer_outerReplicatorLayer;
  v2 = objc_allocWithZone((Class)CAReplicatorLayer);
  v3 = v0;
  *(_QWORD *)&v0[v1] = objc_msgSend(v2, "init");
  v4 = OBJC_IVAR____TtC8Freeform21CRLCanvasDotGridLayer_innerReplicatorLayer;
  *(_QWORD *)&v3[v4] = objc_msgSend(objc_allocWithZone((Class)CAReplicatorLayer), "init");
  v5 = OBJC_IVAR____TtC8Freeform21CRLCanvasDotGridLayer_imageTileLayer;
  *(_QWORD *)&v3[v5] = objc_msgSend(objc_allocWithZone((Class)CALayer), "init");
  v6 = &v3[OBJC_IVAR____TtC8Freeform21CRLCanvasDotGridLayer_dotGridImageStorageCache];
  *((_QWORD *)v6 + 4) = 0;
  *(_OWORD *)v6 = 0u;
  *((_OWORD *)v6 + 1) = 0u;

  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for CRLCanvasDotGridLayer();
  return objc_msgSendSuper2(&v8, "init");
}

id sub_100C63754(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  id v12;
  objc_super v14;

  v3 = OBJC_IVAR____TtC8Freeform21CRLCanvasDotGridLayer_outerReplicatorLayer;
  v4 = objc_allocWithZone((Class)CAReplicatorLayer);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "init");
  v6 = OBJC_IVAR____TtC8Freeform21CRLCanvasDotGridLayer_innerReplicatorLayer;
  *(_QWORD *)&v5[v6] = objc_msgSend(objc_allocWithZone((Class)CAReplicatorLayer), "init");
  v7 = OBJC_IVAR____TtC8Freeform21CRLCanvasDotGridLayer_imageTileLayer;
  *(_QWORD *)&v5[v7] = objc_msgSend(objc_allocWithZone((Class)CALayer), "init");
  v8 = &v5[OBJC_IVAR____TtC8Freeform21CRLCanvasDotGridLayer_dotGridImageStorageCache];
  *((_QWORD *)v8 + 4) = 0;
  *(_OWORD *)v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;

  v9 = a1[3];
  v10 = sub_1004BB5A4(a1, v9);
  v11 = _bridgeAnythingToObjectiveC<A>(_:)(v10, v9);
  v14.receiver = v5;
  v14.super_class = (Class)type metadata accessor for CRLCanvasDotGridLayer();
  v12 = objc_msgSendSuper2(&v14, "initWithLayer:", v11);
  swift_unknownObjectRelease(v11);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  return v12;
}

id sub_100C638B8(void *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  objc_super v11;

  v3 = OBJC_IVAR____TtC8Freeform21CRLCanvasDotGridLayer_outerReplicatorLayer;
  v4 = objc_allocWithZone((Class)CAReplicatorLayer);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "init");
  v6 = OBJC_IVAR____TtC8Freeform21CRLCanvasDotGridLayer_innerReplicatorLayer;
  *(_QWORD *)&v5[v6] = objc_msgSend(objc_allocWithZone((Class)CAReplicatorLayer), "init");
  v7 = OBJC_IVAR____TtC8Freeform21CRLCanvasDotGridLayer_imageTileLayer;
  *(_QWORD *)&v5[v7] = objc_msgSend(objc_allocWithZone((Class)CALayer), "init");
  v8 = &v5[OBJC_IVAR____TtC8Freeform21CRLCanvasDotGridLayer_dotGridImageStorageCache];
  *((_QWORD *)v8 + 4) = 0;
  *(_OWORD *)v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;

  v11.receiver = v5;
  v11.super_class = (Class)type metadata accessor for CRLCanvasDotGridLayer();
  v9 = objc_msgSendSuper2(&v11, "initWithCoder:", a1);

  return v9;
}

void sub_100C639CC()
{
  uint64_t v0;

}

id sub_100C63A1C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCanvasDotGridLayer();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLCanvasDotGridLayer()
{
  return objc_opt_self(_TtC8Freeform21CRLCanvasDotGridLayer);
}

uint64_t initializeWithCopy for CRLCanvasDotGridLayerImageStorage(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v4 = v3;
  return a1;
}

_QWORD *assignWithCopy for CRLCanvasDotGridLayerImageStorage(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  a1[1] = a2[1];
  v4 = (void *)a2[2];
  v5 = (void *)a1[2];
  a1[2] = v4;
  v6 = v4;

  a1[3] = a2[3];
  a1[4] = a2[4];
  return a1;
}

uint64_t assignWithTake for CRLCanvasDotGridLayerImageStorage(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLCanvasDotGridLayerImageStorage(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLCanvasDotGridLayerImageStorage(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLCanvasDotGridLayerImageStorage()
{
  return &type metadata for CRLCanvasDotGridLayerImageStorage;
}

unint64_t sub_100C63C50()
{
  unint64_t result;
  unint64_t v1;

  result = qword_10140BE18;
  if (!qword_10140BE18)
  {
    v1 = sub_10067AC6C();
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_10140BE18);
  }
  return result;
}

_QWORD *sub_100C63C98(uint64_t a1, double a2)
{
  char *v2;
  uint64_t v5;
  id v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  _QWORD *v12;
  void (*v13)(double);
  _QWORD *v14;
  objc_super v16;

  v5 = OBJC_IVAR____TtC8Freeform21CRLCanvasDotGridLayer_outerReplicatorLayer;
  v6 = objc_allocWithZone((Class)CAReplicatorLayer);
  v7 = v2;
  *(_QWORD *)&v2[v5] = objc_msgSend(v6, "init");
  v8 = OBJC_IVAR____TtC8Freeform21CRLCanvasDotGridLayer_innerReplicatorLayer;
  *(_QWORD *)&v7[v8] = objc_msgSend(objc_allocWithZone((Class)CAReplicatorLayer), "init");
  v9 = OBJC_IVAR____TtC8Freeform21CRLCanvasDotGridLayer_imageTileLayer;
  *(_QWORD *)&v7[v9] = objc_msgSend(objc_allocWithZone((Class)CALayer), "init");
  v10 = &v7[OBJC_IVAR____TtC8Freeform21CRLCanvasDotGridLayer_dotGridImageStorageCache];
  *((_QWORD *)v10 + 4) = 0;
  *(_OWORD *)v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;

  swift_unknownObjectWeakInit(&v7[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_canvasBackgroundDelegate]);
  *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_viewScale] = 0x3FF0000000000000;
  v7[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_enabled] = 0;
  v11 = &v7[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_dynamicTransform];
  *(_QWORD *)v11 = 0x3FF0000000000000;
  *((_QWORD *)v11 + 1) = 0;
  *((_QWORD *)v11 + 2) = 0;
  *((_QWORD *)v11 + 3) = 0x3FF0000000000000;
  *((_QWORD *)v11 + 4) = 0;
  *((_QWORD *)v11 + 5) = 0;
  v7[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_scalesWithCanvas] = 1;
  *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_lastValidContentsScaleFromDelegate] = 0x3FF0000000000000;
  v16.receiver = v7;
  v16.super_class = (Class)type metadata accessor for CRLCanvasBackgroundLayer();
  v12 = objc_msgSendSuper2(&v16, "init");
  v13 = *(void (**)(double))((swift_isaMask & *v12) + 0x120);
  v14 = v12;
  swift_unknownObjectRetain(a1);
  v13(a2);

  swift_unknownObjectRelease(a1);
  return v14;
}

uint64_t sub_100C63E40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_10140BE20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100C63E88(uint64_t a1)
{

  return a1;
}

uint64_t *CRLColor.pencilTrayYellow.unsafeMutableAddressor()
{
  if (qword_1013DDE18 != -1)
    swift_once(&qword_1013DDE18, sub_100C6407C);
  return &static CRLColor.pencilTrayYellow;
}

id sub_100C63EF0()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)CRLColor), "initWithRed:green:blue:alpha:", 0.0823529412, 0.494117647, 0.984313725, 1.0);
  static CRLColor.pencilTrayBlue = (uint64_t)result;
  return result;
}

uint64_t *CRLColor.pencilTrayBlue.unsafeMutableAddressor()
{
  if (qword_1013DDE08 != -1)
    swift_once(&qword_1013DDE08, sub_100C63EF0);
  return &static CRLColor.pencilTrayBlue;
}

id static CRLColor.pencilTrayBlue.getter()
{
  return sub_1009A4484(&qword_1013DDE08, (id *)&static CRLColor.pencilTrayBlue, (uint64_t)sub_100C63EF0);
}

id sub_100C63FB8()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)CRLColor), "initWithRed:green:blue:alpha:", 0.325490196, 0.843137255, 0.411764706, 1.0);
  static CRLColor.pencilTrayGreen = (uint64_t)result;
  return result;
}

uint64_t *CRLColor.pencilTrayGreen.unsafeMutableAddressor()
{
  if (qword_1013DDE10 != -1)
    swift_once(&qword_1013DDE10, sub_100C63FB8);
  return &static CRLColor.pencilTrayGreen;
}

id static CRLColor.pencilTrayGreen.getter()
{
  return sub_1009A4484(&qword_1013DDE10, (id *)&static CRLColor.pencilTrayGreen, (uint64_t)sub_100C63FB8);
}

id sub_100C6407C()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)CRLColor), "initWithRed:green:blue:alpha:", 0.996078431, 0.815686275, 0.188235294, 1.0);
  static CRLColor.pencilTrayYellow = (uint64_t)result;
  return result;
}

id static CRLColor.pencilTrayYellow.getter()
{
  return sub_1009A4484(&qword_1013DDE18, (id *)&static CRLColor.pencilTrayYellow, (uint64_t)sub_100C6407C);
}

id sub_100C64104()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)CRLColor), "initWithRed:green:blue:alpha:", 0.988235294, 0.192156863, 0.258823529, 1.0);
  static CRLColor.pencilTrayRed = (uint64_t)result;
  return result;
}

uint64_t *CRLColor.pencilTrayRed.unsafeMutableAddressor()
{
  if (qword_1013DDE20 != -1)
    swift_once(&qword_1013DDE20, sub_100C64104);
  return &static CRLColor.pencilTrayRed;
}

id static CRLColor.pencilTrayRed.getter()
{
  return sub_1009A4484(&qword_1013DDE20, (id *)&static CRLColor.pencilTrayRed, (uint64_t)sub_100C64104);
}

uint64_t sub_100C641C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _DWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  __int128 v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  __chkstk_darwin(v1);
  v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRLProto_Data(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (__int128 *)((char *)&v24 - v9);
  v11 = type metadata accessor for CRLProto_RealTimeMessageContainer(0);
  __chkstk_darwin(v11);
  v13 = (_DWORD *)((char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  UnknownStorage.init()(v14);
  v25 = v11;
  v15 = (uint64_t)v13 + *(int *)(v11 + 24);
  v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
  v17 = v16(v15, 1, 1, v4);
  *v13 = *(unsigned __int8 *)(v0 + 16);
  v24 = xmmword_100EF78C0;
  *v10 = xmmword_100EF78C0;
  UnknownStorage.init()(v17);
  sub_10078F968(v15);
  sub_100552FCC((uint64_t)v10, v15);
  v26 = v16;
  v16(v15, 0, 1, v4);
  v19 = *(_QWORD *)(v0 + 24);
  v18 = *(_QWORD *)(v0 + 32);
  sub_100552F84(v15, (uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    *(_OWORD *)v7 = v24;
    v20 = sub_1004BE310(v19, v18);
    UnknownStorage.init()(v20);
    sub_10078F968((uint64_t)v3);
  }
  else
  {
    sub_100552FCC((uint64_t)v3, (uint64_t)v7);
    sub_1004BE310(v19, v18);
  }
  sub_1004BBBC8(*(_QWORD *)v7, *((_QWORD *)v7 + 1));
  *(_QWORD *)v7 = v19;
  *((_QWORD *)v7 + 1) = v18;
  sub_10078F968(v15);
  sub_100552FCC((uint64_t)v7, v15);
  v26(v15, 0, 1, v4);
  v21 = sub_100C64644();
  v22 = Message.serializedData(partial:)(0, v25, v21);
  sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLProto_RealTimeMessageContainer);
  return v22;
}

Swift::Int sub_100C64440()
{
  unsigned __int8 *v0;
  Swift::UInt32 v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_100C64484()
{
  unsigned __int8 *v0;

  Hasher._combine(_:)(*v0);
}

Swift::Int sub_100C644AC(uint64_t a1)
{
  unsigned __int8 *v1;
  Swift::UInt32 v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

int *sub_100C644EC@<X0>(int *result@<X0>, _BYTE *a2@<X8>)
{
  int v2;

  v2 = *result;
  if (*result >= 3)
    LOBYTE(v2) = 3;
  *a2 = v2;
  return result;
}

void sub_100C64504(_DWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

uint64_t type metadata accessor for CRLRealTimeMessageContainer()
{
  return objc_opt_self(_TtC8Freeform27CRLRealTimeMessageContainer);
}

uint64_t storeEnumTagSinglePayload for CRLRealTimeMessageContainer.MessageType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100C6457C + 4 * byte_100F2FCF5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100C645B0 + 4 * byte_100F2FCF0[v4]))();
}

uint64_t sub_100C645B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100C645B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100C645C0);
  return result;
}

uint64_t sub_100C645CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100C645D4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100C645D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100C645E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLRealTimeMessageContainer.MessageType()
{
  return &type metadata for CRLRealTimeMessageContainer.MessageType;
}

unint64_t sub_100C64600()
{
  unint64_t result;

  result = qword_10140BED0;
  if (!qword_10140BED0)
  {
    result = swift_getWitnessTable(&unk_100F2FDC0, &type metadata for CRLRealTimeMessageContainer.MessageType);
    atomic_store(result, (unint64_t *)&qword_10140BED0);
  }
  return result;
}

unint64_t sub_100C64644()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1014035B0;
  if (!qword_1014035B0)
  {
    v1 = type metadata accessor for CRLProto_RealTimeMessageContainer(255);
    result = swift_getWitnessTable(&unk_100F23AD8, v1);
    atomic_store(result, (unint64_t *)&qword_1014035B0);
  }
  return result;
}

uint64_t sub_100C6468C(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _DWORD *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  unint64_t v23;
  __n128 v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _OWORD v28[2];
  uint64_t v29;
  uint64_t v30;

  v4 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  __chkstk_darwin(v4);
  v6 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CRLProto_Data(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (uint64_t *)((char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for BinaryDecodingOptions(0, v9);
  __chkstk_darwin(v12);
  v14 = (char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for CRLProto_RealTimeMessageContainer(0);
  __chkstk_darwin(v15);
  v17 = (_DWORD *)((char *)v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v29 = 0;
  memset(v28, 0, sizeof(v28));
  v18 = sub_1004BE310(a1, a2);
  BinaryDecodingOptions.init()(v18);
  v19 = sub_100C64644();
  v20 = v30;
  Message.init(serializedData:extensions:partial:options:)(a1, a2, v28, 0, v14, v15, v19);
  if (v20)
    return sub_1004BBBC8(a1, a2);
  if (*v17 >= 3u)
  {
    v23 = sub_100C6492C();
    swift_allocError(&type metadata for CRLRealTimeMessageContainer.MessageError, v23, 0, 0);
    swift_willThrow(v24);
    sub_1004BBBC8(a1, a2);
    return sub_1004B84A4((uint64_t)v17, type metadata accessor for CRLProto_RealTimeMessageContainer);
  }
  else
  {
    LODWORD(v30) = *v17;
    sub_100552F84((uint64_t)v17 + *(int *)(v15 + 24), (uint64_t)v6);
    v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
    if ((_DWORD)v22 == 1)
    {
      *(_OWORD *)v11 = xmmword_100EF78C0;
      UnknownStorage.init()(v22);
      sub_10078F968((uint64_t)v6);
    }
    else
    {
      sub_100552FCC((uint64_t)v6, (uint64_t)v11);
    }
    sub_1004BBBC8(a1, a2);
    sub_1004B84A4((uint64_t)v17, type metadata accessor for CRLProto_RealTimeMessageContainer);
    v25 = *v11;
    v26 = v11[1];
    sub_1004BE310(*v11, v26);
    sub_1004B84A4((uint64_t)v11, type metadata accessor for CRLProto_Data);
    v27 = type metadata accessor for CRLRealTimeMessageContainer();
    result = swift_allocObject(v27, 40, 7);
    *(_BYTE *)(result + 16) = v30;
    *(_QWORD *)(result + 24) = v25;
    *(_QWORD *)(result + 32) = v26;
  }
  return result;
}

unint64_t sub_100C6492C()
{
  unint64_t result;

  result = qword_10140BED8;
  if (!qword_10140BED8)
  {
    result = swift_getWitnessTable(&unk_100F2FE70, &type metadata for CRLRealTimeMessageContainer.MessageError);
    atomic_store(result, (unint64_t *)&qword_10140BED8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CRLRealTimeMessageContainer.MessageError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_100C649B0 + 4 * byte_100F2FCFA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_100C649D0 + 4 * byte_100F2FCFF[v4]))();
}

_BYTE *sub_100C649B0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_100C649D0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100C649D8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100C649E0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100C649E8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100C649F0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for CRLRealTimeMessageContainer.MessageError()
{
  return &type metadata for CRLRealTimeMessageContainer.MessageError;
}

unint64_t sub_100C64A10()
{
  unint64_t result;

  result = qword_10140BEE0;
  if (!qword_10140BEE0)
  {
    result = swift_getWitnessTable(&unk_100F2FE48, &type metadata for CRLRealTimeMessageContainer.MessageError);
    atomic_store(result, (unint64_t *)&qword_10140BEE0);
  }
  return result;
}

uint64_t sub_100C64A54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t KeyPath;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v35 = a1;
  v6 = sub_1004B804C(&qword_1013EC738);
  __chkstk_darwin(v6);
  v32 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C((uint64_t *)&unk_1013E87D0);
  __chkstk_darwin(v8);
  v34 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C((uint64_t *)&unk_1013EFBE0);
  v33 = *(_QWORD *)(v10 - 8);
  result = __chkstk_darwin(v10);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3 >= 1)
  {
    do
    {
      v36 = 0;
      v37 = 0;
      v14 = sub_1004B804C((uint64_t *)&unk_1013E8570);
      v15 = v3;
      v16 = CRAttributedString.attributes(at:effectiveRange:)(a2, &v36, v14);
      __chkstk_darwin(v16);
      *(&v31 - 4) = (uint64_t)&type metadata for CRLWPHyperlinkAttribute;
      v17 = sub_1007EC194();
      v18 = v35;
      *(&v31 - 3) = v17;
      *(&v31 - 2) = v18;
      KeyPath = swift_getKeyPath(&unk_100F2FF70);
      v20 = type metadata accessor for CRLWPHyperlinkSmartFieldData(0);
      v21 = v34;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v34, 1, 1, v20);
      v22 = sub_1007E6AC0();
      swift_retain(v18);
      CRAttributedString.Attributes.subscript.setter(v21, KeyPath, v10, v22);
      v23 = v36;
      v24 = v36 + v37;
      if (__OFADD__(v36, v37))
      {
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
LABEL_26:
        __break(1u);
      }
      v25 = a2 + a3;
      if (__OFADD__(a2, a3))
        goto LABEL_22;
      if (v24 >= v25)
        v26 = a2 + a3;
      else
        v26 = v36 + v37;
      if (v36 < a2 || v36 >= v25)
      {
        if (a2 < v36 || a2 >= v24)
          return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v13, v10);
        v27 = v26 - a2;
        if (__OFSUB__(v26, a2))
          goto LABEL_26;
        v3 = v15;
        v23 = a2;
      }
      else
      {
        v27 = v26 - v36;
        if (__OFSUB__(v26, v36))
          goto LABEL_25;
        v3 = v15;
      }
      v28 = (uint64_t)v32;
      v29 = v33;
      (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v32, v13, v10);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v29 + 56))(v28, 0, 1, v10);
      CRAttributedString.setAttributes(_:range:)(v28, v23, v27, v14);
      sub_1004CB800(v28, &qword_1013EC738);
      result = (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v13, v10);
      v30 = __OFADD__(a2, v27);
      a2 += v27;
      if (v30)
        goto LABEL_23;
      v30 = __OFSUB__(a3, v27);
      a3 -= v27;
      if (v30)
        goto LABEL_24;
    }
    while (a3 > 0);
  }
  return result;
}

uint64_t sub_100C64D60(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char *v16;
  uint64_t KeyPath;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;

  v29 = a1;
  v6 = sub_1004B804C(&qword_1013EC738);
  __chkstk_darwin(v6);
  v27 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C((uint64_t *)&unk_1013EFBE0);
  v28 = *(_QWORD *)(v8 - 8);
  result = __chkstk_darwin(v8);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3 >= 1)
  {
    do
    {
      v30 = 0;
      v31 = 0;
      v12 = sub_1004B804C((uint64_t *)&unk_1013E8570);
      v13 = v3;
      v14 = CRAttributedString.attributes(at:effectiveRange:)(a2, &v30, v12);
      __chkstk_darwin(v14);
      *(&v27 - 4) = (char *)&type metadata for CRLWPUnderlineAttribute;
      v15 = sub_100739464();
      v16 = v29;
      *(&v27 - 3) = (char *)v15;
      *(&v27 - 2) = v16;
      KeyPath = swift_getKeyPath(&unk_100F2FF70);
      v32 = 0;
      v33 = -1;
      v18 = sub_10073DCA0();
      swift_retain(v16);
      CRAttributedString.Attributes.subscript.setter(&v32, KeyPath, v8, v18);
      v19 = v30;
      v20 = v30 + v31;
      if (__OFADD__(v30, v31))
      {
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
LABEL_26:
        __break(1u);
      }
      v21 = a2 + a3;
      if (__OFADD__(a2, a3))
        goto LABEL_22;
      if (v20 >= v21)
        v22 = a2 + a3;
      else
        v22 = v30 + v31;
      if (v30 < a2 || v30 >= v21)
      {
        if (a2 < v30 || a2 >= v20)
          return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v11, v8);
        v23 = v22 - a2;
        if (__OFSUB__(v22, a2))
          goto LABEL_26;
        v3 = v13;
        v19 = a2;
      }
      else
      {
        v23 = v22 - v30;
        if (__OFSUB__(v22, v30))
          goto LABEL_25;
        v3 = v13;
      }
      v24 = (uint64_t)v27;
      v25 = v28;
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v27, v11, v8);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v25 + 56))(v24, 0, 1, v8);
      CRAttributedString.setAttributes(_:range:)(v24, v19, v23, v12);
      sub_1004CB800(v24, &qword_1013EC738);
      result = (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v11, v8);
      v26 = __OFADD__(a2, v23);
      a2 += v23;
      if (v26)
        goto LABEL_23;
      v26 = __OFSUB__(a3, v23);
      a3 -= v23;
      if (v26)
        goto LABEL_24;
    }
    while (a3 > 0);
  }
  return result;
}

uint64_t sub_100C65014(char *a1, uint64_t a2, uint64_t a3, char *a4, uint64_t (*a5)(uint64_t), uint64_t (*a6)(void))
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t KeyPath;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t (*v35)(uint64_t);
  uint64_t (*v36)(void);
  uint64_t v37;
  uint64_t v38;
  char v39;

  v35 = a5;
  v36 = a6;
  v33 = a1;
  v34 = a4;
  v9 = sub_1004B804C(&qword_1013EC738);
  __chkstk_darwin(v9);
  v31 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1004B804C((uint64_t *)&unk_1013EFBE0);
  v32 = *(_QWORD *)(v11 - 8);
  result = __chkstk_darwin(v11);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3 >= 1)
  {
    do
    {
      v37 = 0;
      v38 = 0;
      v15 = sub_1004B804C((uint64_t *)&unk_1013E8570);
      v16 = v6;
      v17 = CRAttributedString.attributes(at:effectiveRange:)(a2, &v37, v15);
      v18 = __chkstk_darwin(v17);
      *(&v31 - 4) = v34;
      v19 = v35(v18);
      v20 = v33;
      *(&v31 - 3) = (char *)v19;
      *(&v31 - 2) = v20;
      KeyPath = swift_getKeyPath(&unk_100F2FF70);
      v39 = 2;
      v22 = v36();
      swift_retain(v20);
      CRAttributedString.Attributes.subscript.setter(&v39, KeyPath, v11, v22);
      v23 = v37;
      v24 = v37 + v38;
      if (__OFADD__(v37, v38))
      {
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
LABEL_26:
        __break(1u);
      }
      v25 = a2 + a3;
      if (__OFADD__(a2, a3))
        goto LABEL_22;
      if (v24 >= v25)
        v26 = a2 + a3;
      else
        v26 = v37 + v38;
      if (v37 < a2 || v37 >= v25)
      {
        if (a2 < v37 || a2 >= v24)
          return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v14, v11);
        v27 = v26 - a2;
        if (__OFSUB__(v26, a2))
          goto LABEL_26;
        v6 = v16;
        v23 = a2;
      }
      else
      {
        v27 = v26 - v37;
        if (__OFSUB__(v26, v37))
          goto LABEL_25;
        v6 = v16;
      }
      v28 = (uint64_t)v31;
      v29 = v32;
      (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v31, v14, v11);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v29 + 56))(v28, 0, 1, v11);
      CRAttributedString.setAttributes(_:range:)(v28, v23, v27, v15);
      sub_1004CB800(v28, &qword_1013EC738);
      result = (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v14, v11);
      v30 = __OFADD__(a2, v27);
      a2 += v27;
      if (v30)
        goto LABEL_23;
      v30 = __OFSUB__(a3, v27);
      a3 -= v27;
      if (v30)
        goto LABEL_24;
    }
    while (a3 > 0);
  }
  return result;
}

uint64_t sub_100C652CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t KeyPath;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  char v34;

  v30 = a1;
  v6 = sub_1004B804C(&qword_1013EC738);
  __chkstk_darwin(v6);
  v28 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C((uint64_t *)&unk_1013EFBE0);
  v29 = *(_QWORD *)(v8 - 8);
  result = __chkstk_darwin(v8);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3 >= 1)
  {
    do
    {
      v31 = 0;
      v32 = 0;
      v12 = sub_1004B804C((uint64_t *)&unk_1013E8570);
      v13 = v3;
      v14 = CRAttributedString.attributes(at:effectiveRange:)(a2, &v31, v12);
      __chkstk_darwin(v14);
      *(&v27 - 4) = (uint64_t)&type metadata for CRLWPFontSizeAttribute;
      v15 = sub_100739530();
      v16 = v30;
      *(&v27 - 3) = v15;
      *(&v27 - 2) = v16;
      KeyPath = swift_getKeyPath(&unk_100F2FF70);
      v33 = 0;
      v34 = 1;
      v18 = sub_1007395C4();
      swift_retain(v16);
      CRAttributedString.Attributes.subscript.setter(&v33, KeyPath, v8, v18);
      v19 = v31;
      v20 = v31 + v32;
      if (__OFADD__(v31, v32))
      {
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
LABEL_26:
        __break(1u);
      }
      v21 = a2 + a3;
      if (__OFADD__(a2, a3))
        goto LABEL_22;
      if (v20 >= v21)
        v22 = a2 + a3;
      else
        v22 = v31 + v32;
      if (v31 < a2 || v31 >= v21)
      {
        if (a2 < v31 || a2 >= v20)
          return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v11, v8);
        v23 = v22 - a2;
        if (__OFSUB__(v22, a2))
          goto LABEL_26;
        v3 = v13;
        v19 = a2;
      }
      else
      {
        v23 = v22 - v31;
        if (__OFSUB__(v22, v31))
          goto LABEL_25;
        v3 = v13;
      }
      v24 = (uint64_t)v28;
      v25 = v29;
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v28, v11, v8);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v25 + 56))(v24, 0, 1, v8);
      CRAttributedString.setAttributes(_:range:)(v24, v19, v23, v12);
      sub_1004CB800(v24, &qword_1013EC738);
      result = (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v11, v8);
      v26 = __OFADD__(a2, v23);
      a2 += v23;
      if (v26)
        goto LABEL_23;
      v26 = __OFSUB__(a3, v23);
      a3 -= v23;
      if (v26)
        goto LABEL_24;
    }
    while (a3 > 0);
  }
  return result;
}

void sub_100C65580(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t KeyPath;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _OWORD v32[7];

  v29 = a1;
  v6 = sub_1004B804C(&qword_1013EC738);
  __chkstk_darwin(v6);
  v27 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C((uint64_t *)&unk_1013EFBE0);
  v28 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3 >= 1)
  {
    do
    {
      v30 = 0;
      v31 = 0;
      v11 = sub_1004B804C((uint64_t *)&unk_1013E8570);
      v12 = v3;
      v13 = CRAttributedString.attributes(at:effectiveRange:)(a2, &v30, v11);
      __chkstk_darwin(v13);
      *(&v26 - 4) = (uint64_t)&type metadata for CRLWPCharacterFillAttribute;
      v14 = sub_1007393D0();
      v15 = v29;
      *(&v26 - 3) = v14;
      *(&v26 - 2) = v15;
      KeyPath = swift_getKeyPath(&unk_100F2FF70);
      memset(v32, 0, sizeof(v32));
      v17 = sub_1007E678C();
      swift_retain(v15);
      CRAttributedString.Attributes.subscript.setter(v32, KeyPath, v8, v17);
      v18 = v30;
      v19 = v30 + v31;
      if (__OFADD__(v30, v31))
      {
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
LABEL_26:
        __break(1u);
      }
      v20 = a2 + a3;
      if (__OFADD__(a2, a3))
        goto LABEL_22;
      if (v19 >= v20)
        v21 = a2 + a3;
      else
        v21 = v30 + v31;
      if (v30 < a2 || v30 >= v20)
      {
        if (a2 < v30 || a2 >= v19)
        {
          (*(void (**)(char *, uint64_t))(v28 + 8))(v10, v8);
          return;
        }
        v22 = v21 - a2;
        if (__OFSUB__(v21, a2))
          goto LABEL_26;
        v3 = v12;
        v18 = a2;
      }
      else
      {
        v22 = v21 - v30;
        if (__OFSUB__(v21, v30))
          goto LABEL_25;
        v3 = v12;
      }
      v23 = (uint64_t)v27;
      v24 = v28;
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v27, v10, v8);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v24 + 56))(v23, 0, 1, v8);
      CRAttributedString.setAttributes(_:range:)(v23, v18, v22, v11);
      sub_1004CB800(v23, &qword_1013EC738);
      (*(void (**)(char *, uint64_t))(v24 + 8))(v10, v8);
      v25 = __OFADD__(a2, v22);
      a2 += v22;
      if (v25)
        goto LABEL_23;
      v25 = __OFSUB__(a3, v22);
      a3 -= v22;
      if (v25)
        goto LABEL_24;
    }
    while (a3 > 0);
  }
}

void sub_100C6583C(char *a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, char *a7, uint64_t (*a8)(uint64_t), uint64_t (*a9)(void))
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t Strong;
  void *v24;
  uint64_t ObjectType;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned __int8 v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t KeyPath;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t (*v51)(uint64_t);
  char *v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;

  v50 = a7;
  v51 = a8;
  v54 = a5;
  v55 = a6;
  v53 = a3;
  v49 = a2;
  v52 = a1;
  v10 = sub_1004B804C((uint64_t *)&unk_1013EFBE0);
  v47 = *(_QWORD *)(v10 - 8);
  v48 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1004B804C((uint64_t *)&unk_1013E8570);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v17);
  v19 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v20);
  v22 = (char *)&v46 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = a4;
  Strong = swift_unknownObjectWeakLoadStrong(a4 + OBJC_IVAR____TtC8Freeform12CRLWPStorage__parentItem);
  if (Strong)
  {
    v24 = (void *)Strong;
    ObjectType = swift_getObjectType(Strong);
    v26 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for CRLTransactable);
    if (v26)
      v27 = v26;
    else
      v27 = 0;
    if (v26)
      v28 = v24;
    else
      v28 = 0;
    if (v28)
    {
      v29 = swift_getObjectType(v28);
      v30 = sub_100D5E2C8(v29, v27);

      if ((v30 & 1) == 0)
        return;
    }
    else
    {

    }
  }
  v31 = *(_QWORD *)(v56 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData);
  if (!v31)
  {
LABEL_30:
    __break(1u);
    return;
  }
  (*(void (**)(void))(*(_QWORD *)v31 + 760))();
  sub_1004D29BC((uint64_t)&v19[*(int *)(v17 + 20)], (uint64_t)v22);
  sub_1004B84A4((uint64_t)v19, type metadata accessor for CRLWPShapeItemCRDTData);
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v16, v22, v13);
  sub_1004B84A4((uint64_t)v22, type metadata accessor for CRLWPStorageCRDTData);
  v32 = CRAttributedString.count.getter(v13);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  if (v32 >= (v54 & ~(v54 >> 63)))
    v33 = v54 & ~(v54 >> 63);
  else
    v33 = v32;
  if (v32 >= (v55 & ~(v55 >> 63)))
    v34 = v55 & ~(v55 >> 63);
  else
    v34 = v32;
  if (v34 < v33)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v35 = v53;
  if ((_BYTE)v53 == 0xFF)
  {
    sub_100C66CAC(v52, v33, v34, v50, v51, a9);
    return;
  }
  v36 = v49;
  sub_100C67D08(v49, v53 & 1);
  v37 = sub_100559A64();
  v38 = CRAttributedString.Attributes.init()(&type metadata for CRLTextAttributeScope, v37);
  v39 = __chkstk_darwin(v38);
  *(&v46 - 4) = (uint64_t)v50;
  v40 = v51(v39);
  v41 = v52;
  *(&v46 - 3) = v40;
  *(&v46 - 2) = (uint64_t)v41;
  KeyPath = swift_getKeyPath(&unk_100F2FF38);
  if ((v35 & 1) == 0)
  {
    v43 = v36 & 1;
    goto LABEL_26;
  }
  if (!*(_QWORD *)(v36 + 16))
    goto LABEL_29;
  v43 = *(_BYTE *)(v36 + 32);
LABEL_26:
  v57 = v43;
  v44 = a9();
  swift_retain(v41);
  v45 = v48;
  CRAttributedString.Attributes.subscript.setter(&v57, KeyPath, v48, v44);
  sub_1007DC238((uint64_t)v12, v33, v34);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v12, v45);
  sub_100C67D14(v36, v35);
}

void sub_100C65BC0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t Strong;
  void *v21;
  uint64_t ObjectType;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned __int8 v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t KeyPath;
  int v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  char v52;

  v48 = a5;
  v49 = a6;
  v47 = a3;
  v45 = a2;
  v46 = a1;
  v7 = sub_1004B804C((uint64_t *)&unk_1013EFBE0);
  v43 = *(_QWORD *)(v7 - 8);
  v44 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C((uint64_t *)&unk_1013E8570);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v17);
  v19 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = a4;
  Strong = swift_unknownObjectWeakLoadStrong(a4 + OBJC_IVAR____TtC8Freeform12CRLWPStorage__parentItem);
  if (Strong)
  {
    v21 = (void *)Strong;
    ObjectType = swift_getObjectType(Strong);
    v23 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for CRLTransactable);
    if (v23)
      v24 = v23;
    else
      v24 = 0;
    if (v23)
      v25 = v21;
    else
      v25 = 0;
    if (v25)
    {
      v26 = swift_getObjectType(v25);
      v27 = sub_100D5E2C8(v26, v24);

      if ((v27 & 1) == 0)
        return;
    }
    else
    {

    }
  }
  v28 = *(_QWORD *)(v50 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData);
  if (!v28)
  {
LABEL_30:
    __break(1u);
    return;
  }
  (*(void (**)(void))(*(_QWORD *)v28 + 760))();
  sub_1004D29BC((uint64_t)&v16[*(int *)(v14 + 20)], (uint64_t)v19);
  sub_1004B84A4((uint64_t)v16, type metadata accessor for CRLWPShapeItemCRDTData);
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v13, v19, v10);
  sub_1004B84A4((uint64_t)v19, type metadata accessor for CRLWPStorageCRDTData);
  v29 = CRAttributedString.count.getter(v10);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if (v29 >= (v48 & ~(v48 >> 63)))
    v30 = v48 & ~(v48 >> 63);
  else
    v30 = v29;
  if (v29 >= (v49 & ~(v49 >> 63)))
    v31 = v49 & ~(v49 >> 63);
  else
    v31 = v29;
  if (v31 < v30)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v32 = v47;
  if ((_BYTE)v47 == 0xFF)
  {
    sub_100C66EE8(v46, v30, v31, (void (*)(_QWORD, _QWORD, _QWORD))sub_100C652CC);
    return;
  }
  v33 = v45;
  sub_100C67D08(v45, v47 & 1);
  v34 = sub_100559A64();
  v35 = CRAttributedString.Attributes.init()(&type metadata for CRLTextAttributeScope, v34);
  __chkstk_darwin(v35);
  *(&v42 - 4) = (uint64_t)&type metadata for CRLWPFontSizeAttribute;
  v36 = sub_100739530();
  v37 = v46;
  *(&v42 - 3) = v36;
  *(&v42 - 2) = v37;
  KeyPath = swift_getKeyPath(&unk_100F2FF38);
  if ((v32 & 1) == 0)
  {
    v39 = v33;
    goto LABEL_26;
  }
  if (!*(_QWORD *)(v33 + 16))
    goto LABEL_29;
  v39 = *(_DWORD *)(v33 + 32);
LABEL_26:
  v51 = v39;
  v52 = 0;
  v40 = sub_1007395C4();
  swift_retain(v37);
  v41 = v44;
  CRAttributedString.Attributes.subscript.setter(&v51, KeyPath, v44, v40);
  sub_1007DC238((uint64_t)v9, v30, v31);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v9, v41);
  sub_100C67D14(v33, v32);
}

void sub_100C65F3C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t Strong;
  void *v21;
  uint64_t ObjectType;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned __int8 v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t KeyPath;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;

  v47 = a5;
  v48 = a6;
  v46 = a3;
  v44 = a2;
  v45 = a1;
  v7 = sub_1004B804C((uint64_t *)&unk_1013EFBE0);
  v42 = *(_QWORD *)(v7 - 8);
  v43 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C((uint64_t *)&unk_1013E8570);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v17);
  v19 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = a4;
  Strong = swift_unknownObjectWeakLoadStrong(a4 + OBJC_IVAR____TtC8Freeform12CRLWPStorage__parentItem);
  if (Strong)
  {
    v21 = (void *)Strong;
    ObjectType = swift_getObjectType(Strong);
    v23 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for CRLTransactable);
    if (v23)
      v24 = v23;
    else
      v24 = 0;
    if (v23)
      v25 = v21;
    else
      v25 = 0;
    if (v25)
    {
      v26 = swift_getObjectType(v25);
      v27 = sub_100D5E2C8(v26, v24);

      if ((v27 & 1) == 0)
        return;
    }
    else
    {

    }
  }
  v28 = *(_QWORD *)(v49 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData);
  if (!v28)
  {
LABEL_29:
    __break(1u);
    return;
  }
  (*(void (**)(void))(*(_QWORD *)v28 + 760))();
  sub_1004D29BC((uint64_t)&v16[*(int *)(v14 + 20)], (uint64_t)v19);
  sub_1004B84A4((uint64_t)v16, type metadata accessor for CRLWPShapeItemCRDTData);
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v13, v19, v10);
  sub_1004B84A4((uint64_t)v19, type metadata accessor for CRLWPStorageCRDTData);
  v29 = CRAttributedString.count.getter(v10);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if (v29 >= (v47 & ~(v47 >> 63)))
    v30 = v47 & ~(v47 >> 63);
  else
    v30 = v29;
  if (v29 >= (v48 & ~(v48 >> 63)))
    v31 = v48 & ~(v48 >> 63);
  else
    v31 = v29;
  if (v31 < v30)
  {
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v32 = v46;
  if ((_BYTE)v46 != 0xFF)
  {
    v33 = v44;
    sub_100C67D08(v44, v46 & 1);
    v34 = sub_100559A64();
    v35 = CRAttributedString.Attributes.init()(&type metadata for CRLTextAttributeScope, v34);
    __chkstk_darwin(v35);
    *(&v42 - 4) = (uint64_t)&type metadata for CRLWPUnderlineAttribute;
    v36 = sub_100739464();
    v37 = v45;
    *(&v42 - 3) = v36;
    *(&v42 - 2) = v37;
    KeyPath = swift_getKeyPath(&unk_100F2FF38);
    v39 = v33;
    if ((v32 & 1) == 0)
    {
LABEL_24:
      v50 = v39;
      v51 = 0;
      v40 = sub_10073DCA0();
      swift_retain(v37);
      v41 = v43;
      CRAttributedString.Attributes.subscript.setter(&v50, KeyPath, v43, v40);
      sub_1007DC238((uint64_t)v9, v30, v31);
      (*(void (**)(char *, uint64_t))(v42 + 8))(v9, v41);
      sub_100C67D14(v33, v32);
      return;
    }
    if (*(_QWORD *)(v33 + 16))
    {
      v39 = *(_QWORD *)(v33 + 32);
      goto LABEL_24;
    }
    goto LABEL_28;
  }
  sub_100C66EE8(v45, v30, v31, (void (*)(_QWORD, _QWORD, _QWORD))sub_100C64D60);
}

void sub_100C662B4(uint64_t a1, void *a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t Strong;
  void *v20;
  uint64_t ObjectType;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t KeyPath;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  void *v35;
  id v36;
  const mach_header_64 *v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  char *v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD v49[3];
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  unsigned __int8 v57;
  unsigned int v58;
  char v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  uint64_t v64;
  __int128 v65;

  v47 = a6;
  v46 = a5;
  v45 = a3;
  v43 = a2;
  v44 = (char *)a1;
  v42 = sub_1004B804C((uint64_t *)&unk_1013EFBE0);
  v41 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin(v42);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C((uint64_t *)&unk_1013E8570);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = a4;
  Strong = swift_unknownObjectWeakLoadStrong(a4 + OBJC_IVAR____TtC8Freeform12CRLWPStorage__parentItem);
  if (Strong)
  {
    v20 = (void *)Strong;
    ObjectType = swift_getObjectType(Strong);
    v22 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for CRLTransactable);
    if (v22)
      v23 = v22;
    else
      v23 = 0;
    if (v22)
      v24 = v20;
    else
      v24 = 0;
    if (v24)
    {
      v25 = swift_getObjectType(v24);
      v26 = sub_100D5E2C8(v25, v23);

      if ((v26 & 1) == 0)
        return;
    }
    else
    {

    }
  }
  v27 = *(_QWORD *)(v48 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData);
  if (!v27)
  {
LABEL_34:
    __break(1u);
    return;
  }
  (*(void (**)(void))(*(_QWORD *)v27 + 760))();
  sub_1004D29BC((uint64_t)&v15[*(int *)(v13 + 20)], (uint64_t)v18);
  sub_1004B84A4((uint64_t)v15, type metadata accessor for CRLWPShapeItemCRDTData);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v18, v9);
  sub_1004B84A4((uint64_t)v18, type metadata accessor for CRLWPStorageCRDTData);
  KeyPath = (uint64_t)v12;
  v29 = CRAttributedString.count.getter(v9);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if (v29 >= (v46 & ~(v46 >> 63)))
    v30 = v46 & ~(v46 >> 63);
  else
    v30 = v29;
  if (v29 >= (v47 & ~(v47 >> 63)))
    v31 = v47 & ~(v47 >> 63);
  else
    v31 = v29;
  if (v31 < v30)
  {
    __break(1u);
    goto LABEL_32;
  }
  LOBYTE(v10) = v45;
  if ((_BYTE)v45 == 0xFF)
  {
    sub_100C66EE8((uint64_t)v44, v30, v31, sub_100C65580);
    return;
  }
  v13 = (uint64_t)v43;
  sub_100C67884(v43, v45 & 1);
  v32 = sub_100559A64();
  v33 = CRAttributedString.Attributes.init()(&type metadata for CRLTextAttributeScope, v32);
  __chkstk_darwin(v33);
  *(&v40 - 4) = (uint64_t)&type metadata for CRLWPCharacterFillAttribute;
  v34 = sub_1007393D0();
  v12 = v44;
  *(&v40 - 3) = v34;
  *(&v40 - 2) = (uint64_t)v12;
  KeyPath = swift_getKeyPath(&unk_100F2FF38);
  if ((v10 & 1) == 0)
  {
    sub_100C6786C((id)v13, v10);
    swift_retain(v12);
    v36 = (id)v13;
    goto LABEL_27;
  }
  if ((v13 & 0xC000000000000001) != 0)
  {
LABEL_32:
    sub_100C6786C((id)v13, v10);
    swift_retain(v12);
    v36 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v13);
    sub_100C678E0((void *)v13, v10);
    goto LABEL_27;
  }
  if (!*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_34;
  }
  v35 = *(void **)(v13 + 32);
  swift_retain(v12);
  v36 = v35;
LABEL_27:
  sub_100D3743C(v36, (uint64_t)&v56);
  v37 = &_mh_execute_header;
  if (!v59)
    v37 = 0;
  v49[0] = v56;
  v49[1] = v57;
  v49[2] = (unint64_t)v37 | v58;
  v50 = v60;
  v51 = v61;
  v52 = v62;
  v53 = v63;
  v54 = v64;
  v55 = v65;
  v38 = sub_1007E678C();
  v39 = v42;
  CRAttributedString.Attributes.subscript.setter(v49, KeyPath, v42, v38);
  sub_1007DC238((uint64_t)v8, v30, v31);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v39);
  sub_100C678E0((void *)v13, v10);
}

void sub_100C66754(uint64_t a1, _QWORD *a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t Strong;
  void *v26;
  uint64_t v27;
  uint64_t ObjectType;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned __int8 v38;
  _QWORD *v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t KeyPath;
  void *v45;
  id v46;
  uint64_t v47;
  id v48;
  id v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int *v59;
  uint64_t *v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;

  v71 = a6;
  v70 = a3;
  v67 = a2;
  v69 = a1;
  v8 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v8);
  v68 = (uint64_t)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C((uint64_t *)&unk_1013E87D0);
  __chkstk_darwin(v10);
  v12 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1004B804C((uint64_t *)&unk_1013EFBE0);
  v65 = *(_QWORD *)(v13 - 8);
  v66 = v13;
  __chkstk_darwin(v13);
  v72 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1004B804C((uint64_t *)&unk_1013E8570);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v19);
  v21 = (char *)&v64 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v22);
  v24 = (char *)&v64 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = a4;
  Strong = swift_unknownObjectWeakLoadStrong(a4 + OBJC_IVAR____TtC8Freeform12CRLWPStorage__parentItem);
  if (Strong)
  {
    v26 = (void *)Strong;
    v64 = v12;
    v27 = a5;
    ObjectType = swift_getObjectType(Strong);
    v29 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for CRLTransactable);
    if (v29)
      v30 = v29;
    else
      v30 = 0;
    if (v29)
      v31 = v26;
    else
      v31 = 0;
    if (v31)
    {
      v32 = swift_getObjectType(v31);
      v33 = sub_100D5E2C8(v32, v30);

      a5 = v27;
      v12 = v64;
      if ((v33 & 1) == 0)
        return;
    }
    else
    {

      a5 = v27;
      v12 = v64;
    }
  }
  v34 = *(_QWORD *)(v73 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData);
  if (!v34)
    goto LABEL_36;
  (*(void (**)(void))(*(_QWORD *)v34 + 760))();
  sub_1004D29BC((uint64_t)&v21[*(int *)(v19 + 20)], (uint64_t)v24);
  sub_1004B84A4((uint64_t)v21, type metadata accessor for CRLWPShapeItemCRDTData);
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v18, v24, v15);
  sub_1004B84A4((uint64_t)v24, type metadata accessor for CRLWPStorageCRDTData);
  v35 = CRAttributedString.count.getter(v15);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  if (v35 >= (a5 & ~(a5 >> 63)))
    v36 = a5 & ~(a5 >> 63);
  else
    v36 = v35;
  if (v35 >= (v71 & ~(v71 >> 63)))
    v37 = v71 & ~(v71 >> 63);
  else
    v37 = v35;
  if (v37 < v36)
  {
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v38 = v70;
  if ((_BYTE)v70 == 0xFF)
  {
    sub_100C66EE8(v69, v36, v37, (void (*)(_QWORD, _QWORD, _QWORD))sub_100C64A54);
    return;
  }
  v39 = v67;
  sub_100C67884(v67, v70 & 1);
  v40 = sub_100559A64();
  v41 = CRAttributedString.Attributes.init()(&type metadata for CRLTextAttributeScope, v40);
  __chkstk_darwin(v41);
  *(&v64 - 4) = (char *)&type metadata for CRLWPHyperlinkAttribute;
  v42 = sub_1007EC194();
  v43 = v69;
  *(&v64 - 3) = (char *)v42;
  *(&v64 - 2) = (char *)v43;
  KeyPath = swift_getKeyPath(&unk_100F2FF38);
  if ((v38 & 1) == 0)
  {
    sub_100C67884(v39, 0);
    v45 = v39;
    if (!v39)
      goto LABEL_24;
    goto LABEL_27;
  }
  if (!v39[2])
    goto LABEL_35;
  v45 = (void *)v39[4];
  v46 = v45;
  if (v45)
  {
LABEL_27:
    swift_retain(v43);
    v48 = v45;
    v49 = objc_msgSend(v48, "url");
    if (v49)
    {
      v50 = v49;
      v51 = v68;
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v49);

      v52 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v51, 0, 1, v52);
    }
    else
    {
      v53 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v68, 1, 1, v53);
    }
    v54 = objc_msgSend(v48, "textAttributeUUIDString");
    if (v54)
    {
      v55 = v54;
      v56 = static String._unconditionallyBridgeFromObjectiveC(_:)(v54);
      v58 = v57;

      *(_QWORD *)v12 = 0;
      v12[8] = 0;
      v59 = (int *)type metadata accessor for CRLWPHyperlinkSmartFieldData(0);
      sub_10057EE1C(v68, (uint64_t)&v12[v59[5]]);
      v60 = (uint64_t *)&v12[v59[6]];
      *v60 = v56;
      v60[1] = v58;
      *(_QWORD *)&v12[v59[7]] = _swiftEmptyDictionarySingleton;
      (*(void (**)(char *, _QWORD, uint64_t, int *))(*((_QWORD *)v59 - 1) + 56))(v12, 0, 1, v59);

      goto LABEL_32;
    }
LABEL_37:
    __break(1u);
    return;
  }
LABEL_24:
  v47 = type metadata accessor for CRLWPHyperlinkSmartFieldData(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v12, 1, 1, v47);
  swift_retain(v43);
LABEL_32:
  v61 = sub_1007E6AC0();
  v62 = v66;
  v63 = (uint64_t)v72;
  CRAttributedString.Attributes.subscript.setter(v12, KeyPath, v66, v61);
  sub_1007DC238(v63, v36, v37);
  (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v63, v62);
  sub_100C678E0(v39, v38);
}

void sub_100C66CAC(char *a1, uint64_t a2, uint64_t a3, char *a4, uint64_t (*a5)(uint64_t), uint64_t (*a6)(void))
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t Strong;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t);
  uint64_t (*v23)(void);
  uint64_t ObjectType;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  void (*v33)(_BYTE *, _QWORD);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  _BYTE v39[32];

  v37 = a1;
  v38 = a4;
  v9 = v6;
  v12 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = swift_unknownObjectWeakLoadStrong(v6 + OBJC_IVAR____TtC8Freeform12CRLWPStorage__parentItem);
  if (Strong)
  {
    v19 = (void *)Strong;
    v36 = v6;
    v20 = a2;
    v21 = a3;
    v22 = a5;
    v23 = a6;
    ObjectType = swift_getObjectType(Strong);
    v25 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for CRLTransactable);
    if (v25)
      v26 = v25;
    else
      v26 = 0;
    if (v25)
      v27 = v19;
    else
      v27 = 0;
    if (v27)
    {
      v28 = swift_getObjectType(v27);
      v29 = sub_100D5E2C8(v28, v26);

      a6 = v23;
      a5 = v22;
      a3 = v21;
      a2 = v20;
      v9 = v36;
      if ((v29 & 1) == 0)
        return;
    }
    else
    {

      a6 = v23;
      a5 = v22;
      a3 = v21;
      a2 = v20;
      v9 = v36;
    }
  }
  v30 = *(_QWORD *)(v9 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData);
  if (!v30)
  {
LABEL_17:
    __break(1u);
    return;
  }
  v31 = __OFSUB__(a3, a2);
  v32 = a3 - a2;
  if (v31)
  {
    __break(1u);
    goto LABEL_17;
  }
  (*(void (**)(void))(*(_QWORD *)v30 + 760))();
  sub_1004D29BC((uint64_t)&v14[*(int *)(v12 + 20)], (uint64_t)v17);
  swift_retain(v30);
  sub_1004B84A4((uint64_t)v14, type metadata accessor for CRLWPShapeItemCRDTData);
  sub_100C65014(v37, a2, v32, v38, a5, a6);
  v33 = (void (*)(_BYTE *, _QWORD))(*(uint64_t (**)(_BYTE *))(*(_QWORD *)v30 + 776))(v39);
  sub_1007EC8EC((uint64_t)v17, v34 + *(int *)(v12 + 20));
  v33(v39, 0);
  sub_1004B84A4((uint64_t)v17, type metadata accessor for CRLWPStorageCRDTData);
  swift_release(v30);
  *(_BYTE *)(v9 + OBJC_IVAR____TtC8Freeform12CRLWPStorage__hasValidPresentationProperties) = 0;
}

void sub_100C66EDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100C66EE8(a1, a2, a3, (void (*)(_QWORD, _QWORD, _QWORD))sub_100C64A54);
}

void sub_100C66EE8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t Strong;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  uint64_t ObjectType;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  void (*v30)(_BYTE *, _QWORD);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE v34[32];

  v6 = v4;
  v10 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = swift_unknownObjectWeakLoadStrong(v4 + OBJC_IVAR____TtC8Freeform12CRLWPStorage__parentItem);
  if (Strong)
  {
    v17 = (void *)Strong;
    v33 = a2;
    v18 = a3;
    v19 = a1;
    v20 = a4;
    ObjectType = swift_getObjectType(Strong);
    v22 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for CRLTransactable);
    if (v22)
      v23 = v22;
    else
      v23 = 0;
    if (v22)
      v24 = v17;
    else
      v24 = 0;
    if (v24)
    {
      v25 = swift_getObjectType(v24);
      v26 = sub_100D5E2C8(v25, v23);

      a4 = v20;
      a1 = v19;
      a3 = v18;
      a2 = v33;
      if ((v26 & 1) == 0)
        return;
    }
    else
    {

      a4 = v20;
      a1 = v19;
      a3 = v18;
      a2 = v33;
    }
  }
  v27 = *(_QWORD *)(v6 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData);
  if (!v27)
  {
LABEL_17:
    __break(1u);
    return;
  }
  v28 = __OFSUB__(a3, a2);
  v29 = a3 - a2;
  if (v28)
  {
    __break(1u);
    goto LABEL_17;
  }
  (*(void (**)(void))(*(_QWORD *)v27 + 760))();
  sub_1004D29BC((uint64_t)&v12[*(int *)(v10 + 20)], (uint64_t)v15);
  swift_retain(v27);
  sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLWPShapeItemCRDTData);
  a4(a1, a2, v29);
  v30 = (void (*)(_BYTE *, _QWORD))(*(uint64_t (**)(_BYTE *))(*(_QWORD *)v27 + 776))(v34);
  sub_1007EC8EC((uint64_t)v15, v31 + *(int *)(v10 + 20));
  v30(v34, 0);
  sub_1004B84A4((uint64_t)v15, type metadata accessor for CRLWPStorageCRDTData);
  swift_release(v27);
  *(_BYTE *)(v6 + OBJC_IVAR____TtC8Freeform12CRLWPStorage__hasValidPresentationProperties) = 0;
}

void sub_100C67100(void *a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  Class isa;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSURL *v29;
  void *v30;
  void *v31;
  id v32;
  NSString v33;
  NSString v34;
  double v35;
  uint64_t v36;
  id v37;
  uint64_t KeyPath;
  id v39;
  void *v40;
  void *v41;
  id v42;
  uint64_t v43;
  CKRecordID v44;
  Swift::String v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  __int128 v54;
  uint64_t v55;
  void *v56;
  __int128 v57;
  uint64_t v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;

  v5 = v3;
  v53 = a3;
  v61 = a2;
  v7 = type metadata accessor for UUID(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v11);
  v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  isa = UUID._bridgeToObjectiveC()().super.isa;
  v15 = objc_msgSend(a1, "getBoardItemForUUID:", isa);

  if (!v15)
    goto LABEL_17;
  v16 = type metadata accessor for CRLWPShapeItem(0);
  v17 = swift_dynamicCastClass(v15, v16);
  if (!v17)
  {
LABEL_16:

LABEL_17:
    sub_100757E04(&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Commands/CRLWPInsertHyperlinkCommand.swift", 102, 2, 25, "Unable to retrieve board item", 29, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Unable to retrieve board item");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commit(with:transaction:undoable:)", 34, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Commands/CRLWPInsertHyperlinkCommand.swift", 102, 2u, 25, (uint64_t)"Unable to retrieve board item", 29, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v44, v45);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
    return;
  }
  v18 = v17;
  v19 = *(void **)(v17 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v19)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v21 = *(_QWORD *)(v5 + OBJC_IVAR____TtC8Freeform27CRLWPInsertHyperlinkCommand_range);
  v20 = *(_QWORD *)(v5 + OBJC_IVAR____TtC8Freeform27CRLWPInsertHyperlinkCommand_range + 8);
  v22 = v20 - v21;
  if (__OFSUB__(v20, v21))
  {
    __break(1u);
    goto LABEL_15;
  }
  if (v22 < 1)
  {

  }
  else
  {
    v49 = v8;
    v50 = v7;
    v51 = v20;
    v52 = v21;
    v23 = v19;
    v24 = v15;
    sub_100DBEE64(v18, (uint64_t)&off_10127C5E0);
    if (v4)
    {

    }
    else
    {
      v47 = v23;
      v48 = 0;

      v25 = sub_1005773FC(v5 + OBJC_IVAR____TtC8Freeform27CRLWPInsertHyperlinkCommand_url, (uint64_t)v13);
      v26 = UUID.init()(v25);
      UUID.uuidString.getter(v26);
      (*(void (**)(char *, uint64_t))(v49 + 8))(v10, v50);
      v27 = type metadata accessor for URL(0);
      v28 = *(_QWORD *)(v27 - 8);
      v30 = 0;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v13, 1, v27) != 1)
      {
        URL._bridgeToObjectiveC()(v29);
        v30 = v31;
        (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v27);
      }
      v32 = objc_allocWithZone((Class)CRLWPHyperlinkField);
      v33 = String._bridgeToObjectiveC()();
      v34 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v35 = swift_bridgeObjectRelease().n128_u64[0];
      v36 = v52;
      v37 = objc_msgSend(v32, "initWithURL:range:displayText:uuidString:", v30, v52, v22, v33, v34, v35);

      KeyPath = swift_getKeyPath(aH_3);
      v39 = v37;
      v40 = v47;
      sub_1007D7CB8(v36, v51, &v56);
      v41 = v56;
      v59 = v57;
      v60 = v58;
      v54 = v57;
      v55 = v58;
      sub_100C67D50((uint64_t)v37, 0, KeyPath, (void (*)(uint64_t, uint64_t))sub_100C67884, (void (*)(uint64_t, uint64_t))sub_100C6786C, (void (*)(uint64_t, _QWORD))sub_100739414, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD))sub_100C66754);

      swift_release(KeyPath);
      sub_1005A73A4((id *)&v59);
      v42 = v24;
      v43 = v48;
      sub_100DB0D78(v18, (uint64_t)&off_10127C5E0, v53);
      if (v43)
      {

      }
      else
      {

      }
    }
  }
}

uint64_t sub_100C675B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8Freeform27CRLWPInsertHyperlinkCommand_boardItemID;
  v2 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return sub_1004CB800(v0 + OBJC_IVAR____TtC8Freeform27CRLWPInsertHyperlinkCommand_url, &qword_1013E04D0);
}

id sub_100C67608()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLWPInsertHyperlinkCommand(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100C67698()
{
  return type metadata accessor for CRLWPInsertHyperlinkCommand(0);
}

uint64_t type metadata accessor for CRLWPInsertHyperlinkCommand(uint64_t a1)
{
  uint64_t result;

  result = qword_10140BF10;
  if (!qword_10140BF10)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLWPInsertHyperlinkCommand);
  return result;
}

void sub_100C676DC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[3];

  v2 = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = &unk_100F2FEF0;
    sub_10067E7A0(319);
    if (v5 <= 0x3F)
    {
      v6[2] = *(_QWORD *)(v4 - 8) + 64;
      swift_updateClassMetadata2(a1, 256, 3, v6, a1 + 200);
    }
  }
}

uint64_t sub_100C6776C()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  return v4;
}

void sub_100C67848(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100C67D50(a1, a2, a3, (void (*)(uint64_t, uint64_t))sub_100C67884, (void (*)(uint64_t, uint64_t))sub_100C6786C, (void (*)(uint64_t, _QWORD))sub_100739414, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD))sub_100C66754);
}

id sub_100C6786C(id result, unsigned __int8 a2)
{
  if (a2 != 255)
    return sub_100C67884(result, a2 & 1);
  return result;
}

id sub_100C67884(void *a1, char a2)
{
  if ((a2 & 1) != 0)
    return (id)swift_bridgeObjectRetain(a1);
  else
    return a1;
}

uint64_t sub_100C67898()
{
  return 24;
}

double sub_100C678A4(_QWORD *a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*a1).n128_u64[0];
  return result;
}

double sub_100C678AC(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *a1;
  *(_QWORD *)a2 = *a1;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(a1 + 1);
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

__n128 sub_100C678CC(__n128 *a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = a1[1].n128_u64[0];
  result = *a1;
  *(__n128 *)(a2 + 8) = *a1;
  return result;
}

void sub_100C678E0(void *a1, unsigned __int8 a2)
{
  if (a2 != 255)
    sub_100739414(a1, a2 & 1);
}

uint64_t sub_100C678F8(uint64_t a1, uint64_t *a2)
{
  return sub_1007CB2CC(*a2);
}

double sub_100C67900(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;
  double result;

  v4 = *a3;
  swift_retain(*a3);
  sub_1007EB6B8(a1, v4);
  *(_QWORD *)&result = swift_release(v4).n128_u64[0];
  return result;
}

uint64_t sub_100C67944()
{
  return 24;
}

void sub_100C67958(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100C67980(a1, a2, a3, (void (*)(uint64_t, uint64_t))sub_100C67F24, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD))sub_100C65F3C);
}

void sub_100C6796C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100C67980(a1, a2, a3, (void (*)(uint64_t, uint64_t))sub_100C67F24, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD))sub_100C65BC0);
}

void sub_100C67980(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD))
{
  _QWORD *v5;
  _QWORD *v7;
  uint64_t v11;
  uint64_t Strong;
  void *v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  char v19;

  v7 = v5;
  v11 = *v5;
  Strong = swift_unknownObjectWeakLoadStrong(*v5 + OBJC_IVAR____TtC8Freeform12CRLWPStorage__parentItem);
  if (Strong)
  {
    v13 = (void *)Strong;
    ObjectType = swift_getObjectType(Strong);
    v15 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for CRLTransactable);
    if (v15)
      v16 = v15;
    else
      v16 = 0;
    if (v15)
      v17 = v13;
    else
      v17 = 0;
    if (v17)
    {
      v18 = swift_getObjectType(v17);
      v19 = sub_100D5E2C8(v18, v16);

      if ((v19 & 1) == 0)
        return;
    }
    else
    {

    }
  }
  if ((_BYTE)a2 != 0xFF)
  {
    if ((a2 & 1) != 0)
    {
      a4(a1, 1);
      swift_bridgeObjectRelease(a1);
      sub_100757E04(&_mh_execute_header, (uint64_t)"subscript(dynamicMember:)", 25, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPStorage.swift", 78, 2, 975, "Should not set mixed value attributes.", 38, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"subscript(dynamicMember:)", 25, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPStorage.swift", 78, 2u, 975, (uint64_t)"Should not set mixed value attributes.", 38, 2u);
    }
    else
    {
      a4(a1, 0);
    }
  }
  a5(a3, a1, a2, v11, v7[1], v7[2]);
}

void sub_100C67B2C(uint64_t a1, int a2, char *a3)
{
  sub_100C67B64(a1, a2, a3, (char *)&type metadata for CRLWPFontItalicAttribute, (uint64_t (*)(uint64_t))sub_1007394A8, (uint64_t (*)(void))sub_10073DCE4);
}

void sub_100C67B48(uint64_t a1, int a2, char *a3)
{
  sub_100C67B64(a1, a2, a3, (char *)&type metadata for CRLWPFontBoldAttribute, (uint64_t (*)(uint64_t))sub_1007394EC, (uint64_t (*)(void))sub_10073DD28);
}

void sub_100C67B64(uint64_t a1, int a2, char *a3, char *a4, uint64_t (*a5)(uint64_t), uint64_t (*a6)(void))
{
  uint64_t *v6;
  uint64_t *v9;
  uint64_t v13;
  uint64_t Strong;
  void *v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  char v21;

  v9 = v6;
  v13 = *v6;
  Strong = swift_unknownObjectWeakLoadStrong(*v6 + OBJC_IVAR____TtC8Freeform12CRLWPStorage__parentItem);
  if (Strong)
  {
    v15 = (void *)Strong;
    ObjectType = swift_getObjectType(Strong);
    v17 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for CRLTransactable);
    if (v17)
      v18 = v17;
    else
      v18 = 0;
    if (v17)
      v19 = v15;
    else
      v19 = 0;
    if (v19)
    {
      v20 = swift_getObjectType(v19);
      v21 = sub_100D5E2C8(v20, v18);

      if ((v21 & 1) == 0)
        return;
    }
    else
    {

    }
  }
  if ((_BYTE)a2 != 0xFF)
  {
    if ((a2 & 1) != 0)
    {
      sub_100C67D08(a1, 1);
      swift_bridgeObjectRelease(a1);
      sub_100757E04(&_mh_execute_header, (uint64_t)"subscript(dynamicMember:)", 25, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPStorage.swift", 78, 2, 975, "Should not set mixed value attributes.", 38, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"subscript(dynamicMember:)", 25, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPStorage.swift", 78, 2u, 975, (uint64_t)"Should not set mixed value attributes.", 38, 2u);
    }
    else
    {
      sub_100C67D08(a1, 0);
    }
  }
  sub_100C6583C(a3, a1, a2, v13, v9[1], v9[2], a4, a5, a6);
}

uint64_t sub_100C67D08(uint64_t result, char a2)
{
  if ((a2 & 1) != 0)
    return swift_bridgeObjectRetain(result);
  return result;
}

uint64_t sub_100C67D14(uint64_t result, unsigned __int8 a2)
{
  if (a2 != 255)
    return sub_10062E238(result, a2 & 1);
  return result;
}

void sub_100C67D2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100C67D50(a1, a2, a3, (void (*)(uint64_t, uint64_t))sub_100C67F1C, (void (*)(uint64_t, uint64_t))sub_100C67F28, (void (*)(uint64_t, _QWORD))sub_100739414, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD))sub_100C662B4);
}

void sub_100C67D50(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t), void (*a6)(uint64_t, _QWORD), void (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD))
{
  _QWORD *v7;
  _QWORD *v10;
  uint64_t v14;
  uint64_t Strong;
  void *v16;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  char v23;

  v10 = v7;
  v14 = *v7;
  Strong = swift_unknownObjectWeakLoadStrong(*v7 + OBJC_IVAR____TtC8Freeform12CRLWPStorage__parentItem);
  if (Strong)
  {
    v16 = (void *)Strong;
    v17 = a3;
    ObjectType = swift_getObjectType(Strong);
    v19 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for CRLTransactable);
    if (v19)
      v20 = v19;
    else
      v20 = 0;
    if (v19)
      v21 = v16;
    else
      v21 = 0;
    if (v21)
    {
      v22 = swift_getObjectType(v21);
      v23 = sub_100D5E2C8(v22, v20);

      a3 = v17;
      if ((v23 & 1) == 0)
        return;
    }
    else
    {

      a3 = v17;
    }
  }
  if ((_BYTE)a2 != 0xFF)
  {
    if ((a2 & 1) != 0)
    {
      a4(a1, 1);
      swift_bridgeObjectRelease(a1);
      sub_100757E04(&_mh_execute_header, (uint64_t)"subscript(dynamicMember:)", 25, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPStorage.swift", 78, 2, 975, "Should not set mixed value attributes.", 38, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"subscript(dynamicMember:)", 25, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPStorage.swift", 78, 2u, 975, (uint64_t)"Should not set mixed value attributes.", 38, 2u);
    }
    else
    {
      a5(a1, a2);
      a6(a1, 0);
    }
  }
  a7(a3, a1, a2, v14, v10[1], v10[2]);
}

uint64_t sub_100C67F30(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSString v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  __n128 v26;
  id v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  __n128 v33;
  char v34;
  __n128 v35;
  void (*v36)(char *, uint64_t, __n128);
  void *v37;
  uint64_t v38;
  uint64_t inited;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char **v49;
  uint64_t v50;
  uint64_t v51;
  __n128 v52;
  id v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  id v58;
  __n128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __n128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  char **v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  id v74;
  __n128 v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  __n128 v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  id v87;
  uint64_t v88;
  unint64_t v89;
  id v90;
  uint64_t v91;
  id v92;
  uint64_t v93;
  void *v94;
  uint64_t v95;
  id v96;
  id v97;
  __n128 v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  __n128 v108;
  uint64_t v109;
  id v110;
  char v111;
  uint64_t v112;
  void *v113;
  uint64_t v114;
  id v115;
  __n128 v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  __n128 v125;
  uint64_t v126;
  id v127;
  void (*v128)(id, uint64_t);
  id v129;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v131;
  void *v132;
  uint64_t v133;
  id v134;
  id v135;
  __n128 v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  void *v140;
  uint64_t v141;
  void (*v142)(id, uint64_t);
  __n128 v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  unint64_t v149;
  uint64_t v150;
  uint64_t v151;
  id v152;
  id v153;
  __n128 v154;
  void *v155;
  uint64_t v156;
  uint64_t v157;
  unint64_t v158;
  unint64_t v159;
  uint64_t *v160;
  id v161;
  void *v162;
  id v163;
  uint64_t v164;
  _QWORD *v165;
  id v166;
  char v167;
  uint64_t v168;
  uint64_t v170;
  id v171;
  __int128 v172;
  id v173;
  unint64_t v174;
  char **v175;
  void (*v176)(id, uint64_t);
  char *v177;
  void (**v178)(_QWORD, _QWORD, _QWORD);
  char *v179;
  uint64_t v180;
  id v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  _BYTE v190[24];
  char v191[112];
  _BYTE v192[24];
  _BYTE v193[32];

  v2 = v1;
  v180 = type metadata accessor for Participant(0);
  v178 = *(void (***)(_QWORD, _QWORD, _QWORD))(v180 - 8);
  __chkstk_darwin(v180);
  v177 = (char *)&v170 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v170 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v176 = (void (*)(id, uint64_t))((char *)&v170 - v10);
  __chkstk_darwin(v11);
  v13 = (char *)&v170 - v12;
  v14 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v14);
  v179 = (char *)&v170 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (void *)objc_opt_self(TUHandle);
  v17 = a1;
  ((void (*)(void))Participant.handle.getter)();
  v19 = v18;
  v20 = String._bridgeToObjectiveC()();
  v21 = (uint64_t)objc_msgSend(v16, "normalizedHandleWithDestinationID:", v20, swift_bridgeObjectRelease(v19).n128_f64[0]);

  if (!v21)
  {
    v179 = v8;
    v31 = v2 + 4;
    swift_beginAccess(v2 + 4, v193, 0, 0);
    v32 = v2[4];
    v33 = swift_bridgeObjectRetain(v32);
    Participant.id.getter(v33);
    v34 = sub_10062158C((uint64_t)v13, v32);
    v35 = swift_bridgeObjectRelease(v32);
    v36 = *(void (**)(char *, uint64_t, __n128))(v6 + 8);
    v36(v13, v5, v35);
    if ((v34 & 1) == 0)
    {
      v176 = (void (*)(id, uint64_t))v36;
      v181 = v13;
      v182 = v5;
      if (qword_1013DD888 != -1)
        swift_once(&qword_1013DD888, sub_100A05DE4);
      swift_beginAccess(&static OS_os_log.realTimeSync, v192, 0, 0);
      v37 = (void *)static OS_os_log.realTimeSync;
      v38 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v38, v191);
      *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
      v175 = v37;
      v40 = ((uint64_t (*)(void))Participant.handle.getter)();
      v42 = v41;
      *(_QWORD *)(inited + 56) = &type metadata for String;
      v43 = sub_1004CFC2C();
      *(_QWORD *)(inited + 64) = v43;
      *(_QWORD *)(inited + 32) = v40;
      *(_QWORD *)(inited + 40) = v42;
      v44 = v177;
      v45 = v180;
      ((void (**)(char *, uint64_t, uint64_t))v178)[2](v177, v17, v180);
      v46 = String.init<A>(reflecting:)(v44, v45);
      *(_QWORD *)(inited + 96) = &type metadata for String;
      *(_QWORD *)(inited + 104) = v43;
      *(_QWORD *)(inited + 72) = v46;
      *(_QWORD *)(inited + 80) = v47;
      v48 = static os_log_type_t.error.getter(v46);
      v49 = v175;
      sub_100A06EBC((uint64_t)v175, &_mh_execute_header, v48, "Dropping changes from participant because we cannot generate TUHandle from Participant's handle: %@, participant: %@", 116, 2, inited);
      swift_setDeallocating(inited);
      v50 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(inited + 32, 2, v50);

      v51 = (uint64_t)v179;
      Participant.id.getter(v52);
      swift_beginAccess(v31, v190, 33, 0);
      v53 = v181;
      sub_100AD569C((uint64_t)v181, v51);
      v176(v53, v182);
      swift_endAccess(v190);
    }
    return 0;
  }
  v181 = v13;
  v182 = v5;
  v180 = v17;
  v22 = (void *)v2[2];
  if (!v22)
  {
    if (qword_1013DD888 != -1)
      swift_once(&qword_1013DD888, sub_100A05DE4);
    swift_beginAccess(&static OS_os_log.realTimeSync, v193, 0, 0);
    v54 = (void *)static OS_os_log.realTimeSync;
    v55 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v56 = swift_initStackObject(v55, &v189);
    *(_OWORD *)(v56 + 16) = xmmword_100EF5E40;
    v57 = v54;
    v58 = v181;
    v60 = Participant.id.getter(v59);
    v61 = UUID.uuidString.getter(v60);
    v63 = v62;
    (*(void (**)(id, uint64_t))(v6 + 8))(v58, v182);
    *(_QWORD *)(v56 + 56) = &type metadata for String;
    *(_QWORD *)(v56 + 64) = sub_1004CFC2C();
    *(_QWORD *)(v56 + 32) = v61;
    *(_QWORD *)(v56 + 40) = v63;
    v65 = static os_log_type_t.default.getter(v64);
    sub_100A06EBC((uint64_t)v57, &_mh_execute_header, v65, "RealTimeBoardChangeCoordinator has no CKShare to look up participant write permission. Participant UUID: %{public}@", 115, 2, v56);

    swift_setDeallocating(v56);
    v66 = *(_QWORD *)(v56 + 16);
    v67 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v56 + 32, v66, v67);

    return 0;
  }
  v177 = (char *)(v2 + 3);
  swift_beginAccess(v2 + 3, v193, 0, 0);
  v23 = v2[3];
  v24 = *(_QWORD *)(v23 + 16);
  v25 = v22;
  if (v24)
  {
    v27 = (id)v21;
    swift_bridgeObjectRetain(v23);
    v28 = sub_100843668((uint64_t)v27);
    if ((v29 & 1) != 0)
    {
      v30 = *(unsigned __int8 *)(*(_QWORD *)(v23 + 56) + v28);

      swift_bridgeObjectRelease(v23);
      return v30;
    }

    v26 = swift_bridgeObjectRelease(v23);
  }
  v178 = (void (**)(_QWORD, _QWORD, _QWORD))v25;
  v68 = v181;
  Participant.id.getter(v26);
  swift_beginAccess(v2 + 4, v192, 33, 0);
  v69 = (uint64_t)v179;
  sub_100B26E60((uint64_t)v68, (uint64_t)v179);
  v70 = *(char ***)(v6 + 8);
  v71 = v182;
  ((void (*)(id, uint64_t))v70)(v68, v182);
  sub_1004CB800(v69, (uint64_t *)&unk_1013E1A50);
  swift_endAccess(v192);
  if (qword_1013DD888 != -1)
    goto LABEL_28;
  while (1)
  {
    swift_beginAccess(&static OS_os_log.realTimeSync, v192, 0, 0);
    v72 = (void *)static OS_os_log.realTimeSync;
    v179 = (char *)sub_1004B804C((uint64_t *)&unk_1013E0180);
    v73 = swift_initStackObject(v179, &v188);
    v172 = xmmword_100EF5E40;
    *(_OWORD *)(v73 + 16) = xmmword_100EF5E40;
    v74 = v72;
    v76 = Participant.id.getter(v75);
    v77 = UUID.uuidString.getter(v76);
    v78 = v68;
    v80 = v79;
    v175 = v70;
    ((void (*)(id, uint64_t))v70)(v78, v71);
    *(_QWORD *)(v73 + 56) = &type metadata for String;
    v81 = sub_1004CFC2C();
    *(_QWORD *)(v73 + 64) = v81;
    *(_QWORD *)(v73 + 32) = v77;
    *(_QWORD *)(v73 + 40) = v80;
    v83 = static os_log_type_t.default.getter(v82);
    sub_100A06EBC((uint64_t)v74, &_mh_execute_header, v83, "Observed valid TUHandle from participant with UUID: %{public}@", 62, 2, v73);
    swift_setDeallocating(v73);
    v84 = *(_QWORD *)(v73 + 16);
    v85 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v73 + 32, v84, v85);

    v86 = v178;
    v87 = objc_msgSend(v178, "participants");
    v88 = sub_1004B8930(0, (unint64_t *)&qword_1013FF620, CKShareParticipant_ptr);
    v89 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v87, v88);

    v90 = (id)v21;
    v21 = (uint64_t)sub_100644BEC(v89, v90);
    swift_bridgeObjectRelease(v89);

    v173 = v90;
    v174 = v81;
    if ((unint64_t)v21 >> 62)
      break;
    v91 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v91)
      goto LABEL_35;
    v176 = (void (*)(id, uint64_t))v85;
    swift_bridgeObjectRetain(v21);
LABEL_18:
    v71 = 4;
    v70 = &selRef_parentMapOfItemsFrom_;
    while (1)
    {
      v92 = (v21 & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v71 - 4, v21)
          : *(id *)(v21 + 8 * v71);
      v68 = v92;
      v93 = v71 - 3;
      if (__OFADD__(v71 - 4, 1))
        break;
      if (objc_msgSend(v92, "permission") != (id)3)
      {
        swift_bridgeObjectRelease(v21);
        v113 = (void *)static OS_os_log.realTimeSync;
        v114 = swift_initStackObject(v179, &v185);
        *(_OWORD *)(v114 + 16) = xmmword_100EF5A10;
        v171 = v113;
        v115 = v181;
        v117 = Participant.id.getter(v116);
        v118 = UUID.uuidString.getter(v117);
        v170 = v119;
        v120 = ((uint64_t (*)(id, uint64_t))v175)(v115, v182);
        v121 = v177;
        v122 = v174;
        *(_QWORD *)(v114 + 56) = &type metadata for String;
        *(_QWORD *)(v114 + 64) = v122;
        *(_QWORD *)(v114 + 32) = v118;
        *(_QWORD *)(v114 + 40) = v170;
        v123 = Participant.handle.getter(v120);
        *(_QWORD *)(v114 + 96) = &type metadata for String;
        *(_QWORD *)(v114 + 104) = v122;
        *(_QWORD *)(v114 + 72) = v123;
        *(_QWORD *)(v114 + 80) = v124;
        v126 = static os_log_type_t.default.getter(v125);
        v127 = v171;
        sub_100A06EBC((uint64_t)v171, &_mh_execute_header, v126, "Participant with UUID: %{public}@ and handle: %@ does not have write permission in the CKShare. Not allowing changes from this participant in real-time sync.", 157, 2, v114);
        swift_setDeallocating(v114);
        v128 = v176;
        swift_arrayDestroy(v114 + 32, *(_QWORD *)(v114 + 16), v176);

        swift_beginAccess(v121, v190, 33, 0);
        v129 = v173;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v121);
        v186 = *v121;
        *v121 = 0x8000000000000000;
        sub_100826CC8(0, v129, isUniquelyReferenced_nonNull_native);
        v131 = *v121;
        *v121 = v186;

        swift_bridgeObjectRelease(v131);
        swift_endAccess(v190);
        swift_bridgeObjectRelease(v21);
        v132 = (void *)static OS_os_log.realTimeSync;
        v133 = swift_initStackObject(v179, &v184);
        *(_OWORD *)(v133 + 16) = v172;
        *(_QWORD *)(v133 + 56) = sub_1004B8930(0, &qword_1013E8E40, TUHandle_ptr);
        *(_QWORD *)(v133 + 64) = sub_10064412C();
        *(_QWORD *)(v133 + 32) = v129;
        v134 = v129;
        v135 = v132;
        v137 = static os_log_type_t.default.getter(v136);
        sub_100A06EBC((uint64_t)v135, &_mh_execute_header, v137, "GroupActivity Participant %@ more than one CKShare Participant and one of them does not have write access, so block all.", 120, 2, v133);

        swift_setDeallocating(v133);
        swift_arrayDestroy(v133 + 32, 1, v128);

        return 0;
      }

      ++v71;
      if (v93 == v91)
        goto LABEL_25;
    }
    __break(1u);
LABEL_28:
    swift_once(&qword_1013DD888, sub_100A05DE4);
  }
  if (v21 < 0)
    v138 = v21;
  else
    v138 = v21 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v21);
  v139 = _CocoaArrayWrapper.endIndex.getter(v138);
  swift_bridgeObjectRelease(v21);
  if (v139 > 0)
  {
    v176 = (void (*)(id, uint64_t))v85;
    swift_bridgeObjectRetain(v21);
    v91 = _CocoaArrayWrapper.endIndex.getter(v138);
    if (!v91)
    {
LABEL_25:
      swift_bridgeObjectRelease_n(v21, 2);
      v94 = (void *)static OS_os_log.realTimeSync;
      v95 = swift_initStackObject(v179, &v183);
      *(_OWORD *)(v95 + 16) = xmmword_100EF5A10;
      v96 = v94;
      v97 = v181;
      v99 = Participant.id.getter(v98);
      v100 = UUID.uuidString.getter(v99);
      v102 = v101;
      v103 = ((uint64_t (*)(id, uint64_t))v175)(v97, v182);
      v104 = v177;
      v105 = v174;
      *(_QWORD *)(v95 + 56) = &type metadata for String;
      *(_QWORD *)(v95 + 64) = v105;
      *(_QWORD *)(v95 + 32) = v100;
      *(_QWORD *)(v95 + 40) = v102;
      v106 = Participant.handle.getter(v103);
      *(_QWORD *)(v95 + 96) = &type metadata for String;
      *(_QWORD *)(v95 + 104) = v105;
      *(_QWORD *)(v95 + 72) = v106;
      *(_QWORD *)(v95 + 80) = v107;
      v109 = static os_log_type_t.default.getter(v108);
      sub_100A06EBC((uint64_t)v96, &_mh_execute_header, v109, "Participant with UUID: %{public}@ and handle: %@ has write permission in the CKShare. Allowing changes from this participant in real-time sync.", 143, 2, v95);
      swift_setDeallocating(v95);
      swift_arrayDestroy(v95 + 32, *(_QWORD *)(v95 + 16), v176);

      swift_beginAccess(v104, v190, 33, 0);
      v110 = v173;
      v111 = swift_isUniquelyReferenced_nonNull_native(*v104);
      v186 = *v104;
      *v104 = 0x8000000000000000;
      v30 = 1;
      sub_100826CC8(1, v110, v111);
      v112 = *v104;
      *v104 = v186;

      swift_bridgeObjectRelease(v112);
      swift_endAccess(v190);

      return v30;
    }
    goto LABEL_18;
  }
LABEL_35:
  swift_bridgeObjectRelease(v21);
  v140 = (void *)static OS_os_log.realTimeSync;
  v141 = swift_initStackObject(v179, &v187);
  *(_OWORD *)(v141 + 16) = xmmword_100EF5550;
  v181 = v140;
  v142 = v176;
  v144 = Participant.id.getter(v143);
  v145 = UUID.uuidString.getter(v144);
  v147 = v146;
  v148 = ((uint64_t (*)(_QWORD, uint64_t))v175)(v142, v182);
  *(_QWORD *)(v141 + 32) = v145;
  v149 = v174;
  *(_QWORD *)(v141 + 56) = &type metadata for String;
  *(_QWORD *)(v141 + 64) = v149;
  *(_QWORD *)(v141 + 40) = v147;
  v150 = Participant.handle.getter(v148);
  *(_QWORD *)(v141 + 96) = &type metadata for String;
  *(_QWORD *)(v141 + 104) = v149;
  *(_QWORD *)(v141 + 72) = v150;
  *(_QWORD *)(v141 + 80) = v151;
  v152 = v86;
  v153 = objc_msgSend(v86, "recordChangeTag");
  if (v153)
  {
    v155 = v153;
    v156 = v85;
    v157 = static String._unconditionallyBridgeFromObjectiveC(_:)(v153);
    v159 = v158;

    v160 = (uint64_t *)(v141 + 112);
    *(_QWORD *)(v141 + 136) = &type metadata for String;
    *(_QWORD *)(v141 + 144) = v149;
    if (v159)
    {
      *v160 = v157;
      v85 = v156;
      v161 = v173;
      v162 = v152;
      goto LABEL_41;
    }
    v85 = v156;
  }
  else
  {
    v160 = (uint64_t *)(v141 + 112);
    *(_QWORD *)(v141 + 136) = &type metadata for String;
    *(_QWORD *)(v141 + 144) = v149;
  }
  v162 = v152;
  *v160 = 0;
  v159 = 0xE000000000000000;
  v161 = v173;
LABEL_41:
  v163 = v181;
  *(_QWORD *)(v141 + 120) = v159;
  v164 = static os_log_type_t.default.getter(v154);
  sub_100A06EBC((uint64_t)v163, &_mh_execute_header, v164, "Cannot match participant with UUID: %{public}@ and handle: %@ to any CKShare(etag=%{public}@) participants. Not allowing changes from this participant in real-time sync.", 172, 2, v141);
  swift_setDeallocating(v141);
  swift_arrayDestroy(v141 + 32, *(_QWORD *)(v141 + 16), v85);

  v165 = v177;
  swift_beginAccess(v177, v190, 33, 0);
  v166 = v161;
  v167 = swift_isUniquelyReferenced_nonNull_native(*v165);
  v186 = *v165;
  *v165 = 0x8000000000000000;
  sub_100826CC8(0, v166, v167);
  v168 = *v165;
  *v165 = v186;

  swift_bridgeObjectRelease(v168);
  swift_endAccess(v190);

  return 0;
}

uint64_t sub_100C68D18()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocClassInstance(v0, 40, 7);
}

uint64_t type metadata accessor for CRLChangeCoordinatorCachedShareState()
{
  return objc_opt_self(_TtC8FreeformP33_A979D15E93C31C07C26ED1D15308024B36CRLChangeCoordinatorCachedShareState);
}

uint64_t sub_100C68D6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 40) = a4;
  return swift_task_switch(sub_100C68D84, a4, 0);
}

uint64_t sub_100C68D84()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = (_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform33CRLBoardRealTimeChangeCoordinator_queuedIncomingUpdates);
  swift_beginAccess(v1 + OBJC_IVAR____TtC8Freeform33CRLBoardRealTimeChangeCoordinator_queuedIncomingUpdates, v0 + 16, 1, 0);
  *v2 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  return swift_task_switch(sub_100C68DF0, v1, 0);
}

uint64_t sub_100C68DF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = OBJC_IVAR____TtC8Freeform33CRLBoardRealTimeChangeCoordinator_pushCommandToCommandControllerTask;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform33CRLBoardRealTimeChangeCoordinator_pushCommandToCommandControllerTask);
  if (v3)
  {
    swift_retain(*(_QWORD *)(v1
                           + OBJC_IVAR____TtC8Freeform33CRLBoardRealTimeChangeCoordinator_pushCommandToCommandControllerTask));
    Task.cancel()();
    swift_release(v3);
    v4 = *(_QWORD *)(v1 + v2);
  }
  else
  {
    v4 = 0;
  }
  *(_QWORD *)(v1 + v2) = 0;
  v5 = swift_release(v4);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v5);
}

uint64_t sub_100C68E78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3[18] = a2;
  v3[19] = v2;
  v3[17] = a1;
  v4 = type metadata accessor for CRLBoardItemPeerSyncUpdate(0);
  v3[20] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[21] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[22] = swift_task_alloc(v6);
  v3[23] = swift_task_alloc(v6);
  v3[24] = swift_task_alloc(v6);
  v3[25] = swift_task_alloc(v6);
  v7 = sub_1004B804C(&qword_1013E1ED0);
  v3[26] = v7;
  v8 = (*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[27] = swift_task_alloc(v8);
  v3[28] = swift_task_alloc(v8);
  v9 = type metadata accessor for Participant(0);
  v3[29] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v3[30] = v10;
  v3[31] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100C68F64, v2, 0);
}

uint64_t sub_100C68F64()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_10140C28C);
  *(_QWORD *)(v0 + 256) = v1;
  *v1 = v0;
  v1[1] = sub_100C68FC0;
  return sub_100C70208(*(_QWORD *)(v0 + 136));
}

uint64_t sub_100C68FC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 256);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 152);
  *(_QWORD *)(*(_QWORD *)v1 + 264) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_100C69020, v3, 0);
}

uint64_t sub_100C69020()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD **v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  int EnumCaseMultiPayload;
  uint64_t *v28;
  unint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v54;
  unint64_t *v55;
  uint64_t *v56;
  unint64_t *v57;
  uint64_t *v58;
  unint64_t v59;
  uint64_t v60;
  _QWORD *v61;

  v1 = *(_QWORD *)(v0 + 264);
  if (!*(_QWORD *)(v1 + 16))
  {
    v38 = *(_QWORD **)(v0 + 264);
LABEL_27:
    swift_bridgeObjectRelease(v38);
    goto LABEL_28;
  }
  v3 = *(_QWORD *)(v0 + 232);
  v2 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 224);
  sub_1004CB7BC(*(_QWORD *)(v0 + 144), v4, &qword_1013E1ED0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v4, 1, v3) == 1)
  {
    sub_1004CB800(*(_QWORD *)(v0 + 224), &qword_1013E1ED0);
    goto LABEL_4;
  }
  v40 = *(_QWORD *)(v0 + 152);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 240) + 32))(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 232));
  if (*(_BYTE *)(v40 + 136) == 1 && (v41 = *(void **)(*(_QWORD *)(*(_QWORD *)(v0 + 152) + 128) + 16)) != 0)
  {
    v42 = v41;
    v43 = objc_msgSend(v42, "publicPermission");
    v44 = *(_QWORD *)(v0 + 240);
    v45 = *(_QWORD *)(v0 + 248);
    v46 = *(_QWORD *)(v0 + 232);
    if (v43 == (id)3)
    {

      (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v45, v46);
    }
    else
    {
      v54 = sub_100C67F30(*(_QWORD *)(v0 + 248));

      (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v45, v46);
      if ((v54 & 1) == 0)
      {
LABEL_4:
        v5 = (_QWORD **)(v0 + 16);
        v6 = (_QWORD *)(v0 + 88);
        if (qword_1013DD888 != -1)
          goto LABEL_32;
        while (1)
        {
          v8 = *(_QWORD *)(v0 + 208);
          v7 = *(_QWORD *)(v0 + 216);
          v9 = *(_QWORD *)(v0 + 144);
          swift_beginAccess(&static OS_os_log.realTimeSync, v6, 0, 0);
          v10 = (void *)static OS_os_log.realTimeSync;
          v11 = sub_1004B804C((uint64_t *)&unk_1013E0180);
          inited = swift_initStackObject(v11, v5);
          *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
          sub_1004CB7BC(v9, v7, &qword_1013E1ED0);
          v5 = v10;
          v13 = String.init<A>(describing:)(v7, v8);
          v15 = v14;
          *(_QWORD *)(inited + 56) = &type metadata for String;
          *(_QWORD *)(inited + 64) = sub_1004CFC2C();
          *(_QWORD *)(inited + 32) = v13;
          *(_QWORD *)(inited + 40) = v15;
          v17 = static os_log_type_t.default.getter(v16);
          sub_100A06EBC((uint64_t)v5, &_mh_execute_header, v17, "Ignoring incoming model changes from participant with unverified write permissions, %@", 86, 2, inited);
          swift_setDeallocating(inited);
          v18 = sub_1004B804C(&qword_1013E0190);
          swift_arrayDestroy(inited + 32, 1, v18);

          v6 = _swiftEmptyArrayStorage;
          v60 = *(_QWORD *)(v1 + 16);
          v61 = _swiftEmptyArrayStorage;
          if (!v60)
            break;
          v59 = v1;
          v1 = 0;
          v20 = *(_QWORD *)(v0 + 184);
          v19 = *(_QWORD *)(v0 + 192);
          v21 = *(_QWORD *)(v0 + 168);
          v55 = (unint64_t *)(v20 + 16);
          v56 = (uint64_t *)(v20 + 8);
          v57 = (unint64_t *)(v19 + 16);
          v58 = (uint64_t *)(v19 + 8);
          while (v1 < *(_QWORD *)(v59 + 16))
          {
            v23 = *(_QWORD *)(v0 + 192);
            v22 = *(_QWORD *)(v0 + 200);
            v24 = *(_QWORD *)(v0 + 160);
            v25 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
            v26 = *(_QWORD *)(v21 + 72);
            sub_1004B8460(*(_QWORD *)(v0 + 264) + v25 + v26 * v1, v22, type metadata accessor for CRLBoardItemPeerSyncUpdate);
            sub_1004B8460(v22, v23, type metadata accessor for CRLBoardItemPeerSyncUpdate);
            EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v23, v24);
            v29 = v57;
            v28 = v58;
            if (EnumCaseMultiPayload == 5)
              goto LABEL_12;
            v30 = *(_QWORD *)(v0 + 200);
            v31 = *(_QWORD *)(v0 + 184);
            v32 = *(_QWORD *)(v0 + 160);
            sub_1004B84A4(*(_QWORD *)(v0 + 192), type metadata accessor for CRLBoardItemPeerSyncUpdate);
            sub_1004B8460(v30, v31, type metadata accessor for CRLBoardItemPeerSyncUpdate);
            v33 = swift_getEnumCaseMultiPayload(v31, v32);
            v29 = v55;
            v28 = v56;
            if (v33 == 4)
            {
LABEL_12:
              v5 = *(_QWORD ***)(v0 + 200);
              v34 = *(_QWORD *)(v0 + 176);
              sub_1004BBBC8(*v28, *v29);
              sub_1004B84E0((uint64_t)v5, v34, type metadata accessor for CRLBoardItemPeerSyncUpdate);
              if ((swift_isUniquelyReferenced_nonNull_native(v6) & 1) == 0)
              {
                v5 = &v61;
                sub_1006009C4(0, v6[2] + 1, 1);
                v6 = v61;
              }
              v36 = v6[2];
              v35 = v6[3];
              if (v36 >= v35 >> 1)
              {
                v5 = &v61;
                sub_1006009C4(v35 > 1, v36 + 1, 1);
                v6 = v61;
              }
              v37 = *(_QWORD *)(v0 + 176);
              v6[2] = v36 + 1;
              sub_1004B84E0(v37, (uint64_t)v6 + v25 + v36 * v26, type metadata accessor for CRLBoardItemPeerSyncUpdate);
            }
            else
            {
              v5 = *(_QWORD ***)(v0 + 200);
              sub_1004B84A4(*(_QWORD *)(v0 + 184), type metadata accessor for CRLBoardItemPeerSyncUpdate);
              sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLBoardItemPeerSyncUpdate);
            }
            if (v60 == ++v1)
              goto LABEL_18;
          }
          __break(1u);
LABEL_32:
          swift_once(&qword_1013DD888, sub_100A05DE4);
        }
LABEL_18:
        swift_bridgeObjectRelease(*(_QWORD *)(v0 + 264));
        if (v6[2])
          goto LABEL_19;
        goto LABEL_26;
      }
    }
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 240) + 8))(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 232));
  }
  v6 = *(_QWORD **)(v0 + 264);
  if (!v6[2])
  {
LABEL_26:
    v38 = v6;
    goto LABEL_27;
  }
LABEL_19:
  swift_beginAccess(*(_QWORD *)(v0 + 152) + OBJC_IVAR____TtC8Freeform33CRLBoardRealTimeChangeCoordinator_queuedIncomingUpdates, v0 + 112, 33, 0);
  swift_bridgeObjectRetain(v6);
  sub_10061FE80(v39);
  swift_endAccess(v0 + 112);
  swift_bridgeObjectRelease(v6);
  sub_100C6AFEC();
LABEL_28:
  v47 = *(_QWORD *)(v0 + 216);
  v48 = *(_QWORD *)(v0 + 224);
  v50 = *(_QWORD *)(v0 + 192);
  v49 = *(_QWORD *)(v0 + 200);
  v52 = *(_QWORD *)(v0 + 176);
  v51 = *(_QWORD *)(v0 + 184);
  swift_task_dealloc(*(_QWORD *)(v0 + 248));
  swift_task_dealloc(v48);
  swift_task_dealloc(v47);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100C694F0()
{
  uint64_t v0;
  _QWORD *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1[99] = v0;
  v2 = (*(_QWORD *)(*(_QWORD *)(sub_1004B804C((uint64_t *)&unk_1013E1A50) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[100] = swift_task_alloc(v2);
  v1[101] = swift_task_alloc(v2);
  v3 = type metadata accessor for CRLBoardItemDeltaChange(0);
  v1[102] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v1[103] = v4;
  v1[104] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UUID(0);
  v1[105] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v1[106] = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[107] = swift_task_alloc(v7);
  v1[108] = swift_task_alloc(v7);
  v8 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for CRLGloballyScopedBoardIdentifier(0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[109] = swift_task_alloc(v8);
  v1[110] = swift_task_alloc(v8);
  v9 = sub_1004B804C(&qword_10140C390);
  v1[111] = v9;
  v1[112] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CRLBoardPeerChangeSet(0);
  v1[113] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v1[114] = v11;
  v1[115] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for CRLBoard.RealTimeSessionInfo(0);
  v1[116] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v1[117] = v13;
  v1[118] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1004B804C((uint64_t *)&unk_101405E90);
  v1[119] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v14 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100C69688, v0, 0);
}

uint64_t sub_100C69688()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0[98] = _swiftEmptyArrayStorage;
  v0[97] = _swiftEmptyArrayStorage;
  v1 = type metadata accessor for MainActor(0);
  v0[120] = v1;
  v0[121] = static MainActor.shared.getter(v1);
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_100C69704, v2, v3);
}

uint64_t sub_100C69704()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[99];
  swift_release(v0[121]);
  v0[122] = *(_QWORD *)(*(_QWORD *)(v1
                                  + OBJC_IVAR____TtC8Freeform33CRLBoardRealTimeChangeCoordinator_suspendResumeCoordinatorState)
                      + 56);
  return swift_task_switch(sub_100C69758, v1, 0);
}

uint64_t sub_100C69758(uint64_t a1)
{
  uint64_t v1;
  id v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  if (*(uint64_t *)(v1 + 976) <= 0)
  {
    v16 = *(_QWORD *)(v1 + 960);
    *(_QWORD *)(v1 + 984) = static MainActor.shared.getter(a1);
    v17 = dispatch thunk of Actor.unownedExecutor.getter(v16, &protocol witness table for MainActor);
    return swift_task_switch(sub_100C69940, v17, v18);
  }
  else
  {
    if (qword_1013DD888 != -1)
      swift_once(&qword_1013DD888, sub_100A05DE4);
    swift_beginAccess(&static OS_os_log.realTimeSync, v1 + 672, 0, 0);
    v2 = (id)static OS_os_log.realTimeSync;
    v4 = static os_log_type_t.debug.getter(v3);
    sub_100A06EBC((uint64_t)v2, &_mh_execute_header, v4, "Skipping creation of real time change record, outgoing is suspended", 67, 2, (uint64_t)_swiftEmptyArrayStorage);

    v5 = sub_1004B804C(&qword_10140C398);
    v6 = (_QWORD *)swift_allocObject(v5, 48, 7);
    v7 = *(_QWORD *)(v1 + 952);
    v8 = *(_QWORD *)(v1 + 944);
    v9 = *(_QWORD *)(v1 + 920);
    v10 = *(_QWORD *)(v1 + 896);
    v11 = *(_QWORD *)(v1 + 880);
    v12 = *(_QWORD *)(v1 + 872);
    v13 = *(_QWORD *)(v1 + 864);
    v14 = *(_QWORD *)(v1 + 856);
    v19 = *(_QWORD *)(v1 + 832);
    v20 = *(_QWORD *)(v1 + 808);
    v21 = *(_QWORD *)(v1 + 800);
    v6[2] = _swiftEmptyArrayStorage;
    v6[3] = _swiftEmptyArrayStorage;
    v6[4] = _swiftEmptyArrayStorage;
    v6[5] = _swiftEmptyArrayStorage;
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    return (*(uint64_t (**)(_QWORD *))(v1 + 8))(v6);
  }
}

uint64_t sub_100C69940()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[99];
  swift_release(v0[123]);
  v0[124] = *(_QWORD *)(v1 + 120);
  return swift_task_switch(sub_100C69988, v1, 0);
}

uint64_t sub_100C69988()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  double *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v34;
  __n128 v35;
  uint64_t v36;
  NSObject *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  int *v67;
  uint64_t *v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  uint64_t inited;
  uint64_t (*v90)(void);
  id v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  __n128 v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  unint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t *v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t *v127;
  uint64_t *v128;
  void *v129;
  uint64_t v130;
  uint64_t v131;
  id v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  __n128 v136;
  uint64_t v137;
  uint64_t v138;
  _QWORD *v139;
  unint64_t v140;
  unint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  void (*v147)(_QWORD, _QWORD, _QWORD);
  uint64_t v148;
  uint64_t v149;
  void (*v150)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  void (*v156)(uint64_t, uint64_t, uint64_t);
  uint64_t v157;
  uint64_t v158;
  void *v159;
  uint64_t v160;
  uint64_t v161;
  id v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  __n128 v166;
  uint64_t v167;
  uint64_t v168;
  _QWORD *v169;
  unint64_t v170;
  unint64_t v171;
  uint64_t v172;
  uint64_t v173;
  _QWORD *v174;
  __n128 v175;
  __n128 v176;
  void (*v177)(_QWORD, uint64_t, uint64_t, _QWORD, __n128);
  __n128 v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  int *v183;
  uint64_t v184;
  __int128 *v185;
  _QWORD *v186;
  uint64_t v187;
  uint64_t v188;
  __int128 *v189;
  uint64_t v190;
  _QWORD *v191;
  uint64_t v192;
  void (*v193)(_QWORD, uint64_t, uint64_t, _QWORD, __n128);
  _QWORD *v194;
  uint64_t v195;
  _QWORD *v196;
  uint64_t v197;
  void (*v198)(_QWORD, _QWORD, _QWORD);
  uint64_t v199;
  unint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  __int128 *v205;
  double *v206;
  uint64_t *v207;
  unint64_t v208;
  uint64_t v209;
  _QWORD *v210;
  uint64_t *v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  _QWORD *v216;
  uint64_t v217;

  v2 = v0;
  v3 = v0 + 90;
  v4 = v0[124];
  v5 = v0[119];
  v6 = v0[117];
  v7 = v0[116];
  v8 = v4 + OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo;
  swift_beginAccess(v4 + OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo, v3, 0, 0);
  sub_1004CB7BC(v8, v5, (uint64_t *)&unk_101405E90);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v5, 1, v7);
  v10 = v2[119];
  if (v9)
  {
    v11 = (uint64_t *)&unk_101405E90;
LABEL_5:
    sub_1004CB800(v10, v11);
    v21 = v2;
    v22 = _swiftEmptyArrayStorage;
    v206 = _swiftEmptyArrayStorage;
    goto LABEL_6;
  }
  v12 = (_QWORD *)v2[118];
  v13 = v2[114];
  v14 = v2[113];
  v15 = v2[112];
  v16 = v2[111];
  sub_1004B8460(v2[119], (uint64_t)v12, type metadata accessor for CRLBoard.RealTimeSessionInfo);
  sub_1004CB800(v10, (uint64_t *)&unk_101405E90);
  v17 = *v12;
  swift_retain(*v12);
  v18 = (uint64_t)v12;
  v19 = v17;
  sub_1004B84A4(v18, type metadata accessor for CRLBoard.RealTimeSessionInfo);
  v20 = OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_accessQueue;
  OS_dispatch_queue.sync<A>(execute:)(sub_100C73808, v17, v16);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v15, 1, v14) == 1)
  {
    v10 = v2[112];
    swift_release(v19);
    v11 = (uint64_t *)&unk_10140C390;
    goto LABEL_5;
  }
  v181 = v17;
  sub_1004B84E0(v2[112], v2[115], type metadata accessor for CRLBoardPeerChangeSet);
  if (qword_1013DD888 != -1)
    swift_once(&qword_1013DD888, sub_100A05DE4);
  swift_beginAccess(&static OS_os_log.realTimeSync, v2 + 87, 0, 0);
  v34 = (id)static OS_os_log.realTimeSync;
  v36 = static os_log_type_t.default.getter(v35);
  sub_100A06EBC((uint64_t)v34, &_mh_execute_header, v36, "CRLBoardChangeSet clearChanges()", 32, 2, (uint64_t)_swiftEmptyArrayStorage);

  v37 = *(NSObject **)(v17 + v20);
  v38 = swift_allocObject(&unk_10129DB48, 32, 7);
  *(_QWORD *)(v38 + 16) = v17;
  *(_QWORD *)(v38 + 24) = 0;
  v39 = swift_allocObject(&unk_10129DB70, 32, 7);
  *(_QWORD *)(v39 + 16) = sub_100B2BCF8;
  *(_QWORD *)(v39 + 24) = v38;
  v2[42] = sub_1005B71BC;
  v2[43] = v39;
  v2[38] = _NSConcreteStackBlock;
  v2[39] = *(_QWORD *)"";
  v2[40] = sub_100618D24;
  v2[41] = &unk_10129DB88;
  v40 = _Block_copy(v2 + 38);
  v41 = v2[43];
  swift_retain(v181);
  swift_retain(v39);
  swift_release(v41);
  dispatch_sync(v37, v40);
  _Block_release(v40);
  LOBYTE(v40) = swift_isEscapingClosureAtFileLocation(v39, "", 89, 247, 26, 1);
  swift_release(v39);
  swift_release(v38);
  if ((v40 & 1) != 0)
  {
    __break(1u);
    goto LABEL_44;
  }
  v42 = v2[115];
  v43 = v2[113];
  sub_1004B8460(v2[99] + OBJC_IVAR____TtC8Freeform33CRLBoardRealTimeChangeCoordinator_globallyScopedBoardIdentifier, v2[110], type metadata accessor for CRLGloballyScopedBoardIdentifier);
  v44 = *(_QWORD *)(v42 + *(int *)(v43 + 40));
  v45 = *(_QWORD *)(v44 + 16);
  v216 = v2;
  if (v45)
  {
    v46 = v2 + 44;
    v47 = v2 + 49;
    v203 = (uint64_t)(v2 + 54);
    v199 = (uint64_t)(v2 + 74);
    v207 = v2 + 98;
    v211 = v2 + 97;
    v48 = v44 + 32;
    swift_bridgeObjectRetain(v44);
    v196 = v2 + 49;
    v194 = v2 + 44;
    do
    {
      v53 = v2[110];
      sub_1004E90B0(v48, (uint64_t)v46);
      v54 = v2[47];
      v55 = v2[48];
      sub_1004BB5A4(v46, v54);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 8))(v53, v54, v55);
      v56 = v2[47];
      v57 = v2[48];
      sub_1004BB5A4(v46, v56);
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v57 + 16))(v56, v57) & 1) != 0)
      {
        sub_1004E90B0((uint64_t)v47, v199);
        v58 = (_QWORD *)*v207;
        if ((swift_isUniquelyReferenced_nonNull_native(*v207) & 1) == 0)
        {
          v58 = sub_100D10748(0, v58[2] + 1, 1, v58);
          *v207 = (uint64_t)v58;
        }
        v60 = v58[2];
        v59 = v58[3];
        if (v60 >= v59 >> 1)
          *v207 = (uint64_t)sub_100D10748((_QWORD *)(v59 > 1), v60 + 1, 1, v58);
        v61 = v2[77];
        v62 = v2[78];
        v13 = sub_1004CB9AC(v199, v61);
        v1 = *(_QWORD **)(v61 - 8);
        v51 = swift_task_alloc((v1[8] + 15) & 0xFFFFFFFFFFFFFFF0);
        ((void (*)(uint64_t, uint64_t, uint64_t))v1[2])(v51, v13, v61);
        sub_1005C46A8(v60, v51, v207, v61, v62);
        v52 = (_QWORD *)v199;
        v46 = v194;
      }
      else
      {
        sub_1004E90B0((uint64_t)v47, v203);
        v63 = (_QWORD *)*v211;
        if ((swift_isUniquelyReferenced_nonNull_native(*v211) & 1) == 0)
        {
          v63 = sub_100D10748(0, v63[2] + 1, 1, v63);
          *v211 = (uint64_t)v63;
        }
        v65 = v63[2];
        v64 = v63[3];
        if (v65 >= v64 >> 1)
          *v211 = (uint64_t)sub_100D10748((_QWORD *)(v64 > 1), v65 + 1, 1, v63);
        v13 = v2[57];
        v49 = v2[58];
        v50 = sub_1004CB9AC(v203, v13);
        v1 = *(_QWORD **)(v13 - 8);
        v51 = swift_task_alloc((v1[8] + 15) & 0xFFFFFFFFFFFFFFF0);
        ((void (*)(uint64_t, uint64_t, uint64_t))v1[2])(v51, v50, v13);
        sub_1005C46A8(v65, v51, v211, v13, v49);
        v52 = (_QWORD *)v203;
        v47 = v196;
      }
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v52);
      swift_task_dealloc(v51);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v47);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v46);
      v48 += 40;
      --v45;
      v2 = v216;
    }
    while (v45);
    swift_bridgeObjectRelease();
  }
  v66 = v2[115];
  v67 = (int *)v2[113];
  v68 = (uint64_t *)(v66 + v67[6]);
  v69 = v68[1];
  if (v69 >> 60 == 15)
    goto LABEL_30;
  v211 = v2 + 69;
  v39 = *v68;
  v70 = v2[109];
  sub_1004B8460(v2[110], v70, type metadata accessor for CRLGloballyScopedBoardIdentifier);
  v71 = (uint64_t *)(v66 + v67[5]);
  v72 = *v71;
  v73 = v71[1];
  v74 = v71[2];
  v13 = type metadata accessor for CRLBoardRealTimeChangeRecord(0);
  v75 = swift_allocObject(v13, *(unsigned int *)(v13 + 48), *(unsigned __int16 *)(v13 + 52));
  sub_1004B8460(v70, v75 + OBJC_IVAR____TtC8Freeform28CRLBoardRealTimeChangeRecord_boardIdentifier, type metadata accessor for CRLGloballyScopedBoardIdentifier);
  *(_QWORD *)(v75 + OBJC_IVAR____TtC8Freeform28CRLBoardRealTimeChangeRecord_minRequiredVersion) = v72;
  v76 = v75 + OBJC_IVAR____TtC8Freeform28CRLBoardRealTimeChangeRecord_raw_minRequiredVersionForGoodEnoughFidelity;
  *(_QWORD *)v76 = v73;
  *(_BYTE *)(v76 + 8) = 0;
  v77 = v75 + OBJC_IVAR____TtC8Freeform28CRLBoardRealTimeChangeRecord_raw_minRequiredVersionForFullFidelity;
  *(_QWORD *)v77 = v74;
  v2 = v216;
  *(_BYTE *)(v77 + 8) = 0;
  *(_OWORD *)(v75 + OBJC_IVAR____TtC8Freeform28CRLBoardRealTimeChangeRecord_crdtData) = xmmword_100F062D0;
  v78 = (uint64_t *)(v75 + OBJC_IVAR____TtC8Freeform28CRLBoardRealTimeChangeRecord_partialCRDTData);
  *v78 = v39;
  v78[1] = v69;
  sub_1004BE310(v39, v69);
  sub_1004BE310(v39, v69);
  sub_1004B84A4(v70, type metadata accessor for CRLGloballyScopedBoardIdentifier);
  v1 = (_QWORD *)v216[98];
  swift_retain(v75);
  if ((swift_isUniquelyReferenced_nonNull_native(v1) & 1) == 0)
    goto LABEL_68;
  while (1)
  {
    v80 = v1[2];
    v79 = v1[3];
    if (v80 >= v79 >> 1)
      v1 = sub_100D10748((_QWORD *)(v79 > 1), v80 + 1, 1, v1);
    v2[72] = v13;
    v2[73] = sub_1004B7878(&qword_1013EDC50, type metadata accessor for CRLBoardRealTimeChangeRecord, (uint64_t)&unk_100F10848);
    v2[69] = v75;
    v1[2] = v80 + 1;
    sub_1004DB728((__int128 *)v211, (uint64_t)&v1[5 * v80 + 4]);
    sub_1004BE2FC(v39, v69);
    swift_release(v75);
    v2[98] = v1;
    v66 = v2[115];
    v67 = (int *)v2[113];
LABEL_30:
    v39 = *(_QWORD *)(v66 + v67[8]);
    if ((unint64_t)v39 >> 62)
    {
LABEL_44:
      if (v39 < 0)
        v69 = v39;
      else
        v69 = v39 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v39);
      v75 = _CocoaArrayWrapper.endIndex.getter(v69);
      if (!v75)
        goto LABEL_48;
    }
    else
    {
      v75 = *(_QWORD *)((v39 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v39);
      if (!v75)
        goto LABEL_48;
    }
    if (v75 >= 1)
      break;
    __break(1u);
LABEL_68:
    v1 = sub_100D10748(0, v1[2] + 1, 1, v1);
  }
  v81 = 0;
  v189 = (__int128 *)(v2 + 59);
  v191 = v2 + 29;
  v187 = v2[106];
  v208 = v39 & 0xC000000000000001;
  v213 = v39;
  do
  {
    if (v208)
    {
      v82 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v81, v39);
    }
    else
    {
      v82 = *(_QWORD **)(v39 + 8 * v81 + 32);
      swift_retain(v82);
    }
    sub_100C6AD64(v82, v2[110]);
    v84 = v83;
    v85 = v2[108];
    v86 = v2[105];
    v87 = (void *)static OS_os_log.realTimeSync;
    v88 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v88, v191);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v90 = *(uint64_t (**)(void))(*v82 + 256);
    v91 = v87;
    v92 = v90();
    v93 = UUID.uuidString.getter(v92);
    v95 = v94;
    (*(void (**)(uint64_t, uint64_t))(v187 + 8))(v85, v86);
    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = sub_1004CFC2C();
    *(_QWORD *)(inited + 32) = v93;
    v96 = inited + 32;
    *(_QWORD *)(inited + 40) = v95;
    v98 = static os_log_type_t.default.getter(v97);
    sub_100A06EBC((uint64_t)v91, &_mh_execute_header, v98, "Creating real time change record to send: created board item %{public}@", 71, 2, inited);
    swift_setDeallocating(inited);
    v99 = *(_QWORD *)(inited + 16);
    v2 = v216;
    v100 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v96, v99, v100);

    v101 = (_QWORD *)v216[98];
    swift_retain(v84);
    if ((swift_isUniquelyReferenced_nonNull_native(v101) & 1) == 0)
      v101 = sub_100D10748(0, v101[2] + 1, 1, v101);
    v103 = v101[2];
    v102 = v101[3];
    if (v103 >= v102 >> 1)
      v101 = sub_100D10748((_QWORD *)(v102 > 1), v103 + 1, 1, v101);
    v216[62] = type metadata accessor for CRLBoardItemRealTimeChangeRecord(0);
    v216[63] = sub_1004B7878(&qword_1013EDC40, type metadata accessor for CRLBoardItemRealTimeChangeRecord, (uint64_t)&unk_100F2D488);
    v216[59] = v84;
    v101[2] = v103 + 1;
    sub_1004DB728(v189, (uint64_t)&v101[5 * v103 + 4]);
    swift_release(v84);
    swift_release(v82);
    v216[98] = v101;
    ++v81;
    v39 = v213;
  }
  while (v75 != v81);
LABEL_48:
  v104 = v2[115];
  v105 = v2[113];
  swift_bridgeObjectRelease();
  v106 = *(_QWORD *)(v104 + *(int *)(v105 + 28));
  v107 = *(_QWORD *)(v106 + 16);
  if (v107)
  {
    v185 = (__int128 *)(v2 + 79);
    v186 = v2 + 2;
    v108 = v2[103];
    v183 = (int *)v2[102];
    v184 = v2[106];
    v109 = v106 + ((*(unsigned __int8 *)(v108 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v108 + 80));
    v182 = *(_QWORD *)(v108 + 72);
    swift_bridgeObjectRetain(v106);
    do
    {
      v214 = v107;
      v110 = v2[110];
      v111 = v2[109];
      v112 = v2[108];
      v113 = v2[105];
      v114 = v2[104];
      v115 = v2[101];
      v195 = v115;
      v209 = v109;
      sub_1004B8460(v109, v114, type metadata accessor for CRLBoardItemDeltaChange);
      sub_1004B8460(v110, v111, type metadata accessor for CRLGloballyScopedBoardIdentifier);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v184 + 16))(v112, v114, v113);
      v116 = (uint64_t *)(v114 + v183[6]);
      v117 = *v116;
      v188 = v116[1];
      v190 = v116[2];
      v192 = *(_QWORD *)(v114 + v183[7]);
      v197 = *(_QWORD *)(v114 + v183[8]);
      sub_1004CB7BC(v114 + v183[5], v115, (uint64_t *)&unk_1013E1A50);
      v118 = v183[10];
      v119 = (uint64_t *)(v114 + v183[9]);
      v121 = *v119;
      v120 = v119[1];
      v122 = *(_QWORD *)(v114 + v118);
      v200 = *(_QWORD *)(v114 + v118 + 8);
      v204 = type metadata accessor for CRLBoardItemRealTimeChangeRecord(0);
      v123 = swift_allocObject(v204, *(unsigned int *)(v204 + 48), *(unsigned __int16 *)(v204 + 52));
      sub_1004B84E0(v111, v123 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_boardIdentifier, type metadata accessor for CRLGloballyScopedBoardIdentifier);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v184 + 32))(v123 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_itemUUID, v112, v113);
      *(_QWORD *)(v123 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_minRequiredVersion) = v117;
      v2 = v216;
      v124 = v123
           + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_raw_minRequiredVersionForGoodEnoughFidelity;
      *(_QWORD *)v124 = v188;
      *(_BYTE *)(v124 + 8) = 0;
      v125 = v123 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_raw_minRequiredVersionForFullFidelity;
      *(_QWORD *)v125 = v190;
      *(_BYTE *)(v125 + 8) = 0;
      *(_QWORD *)(v123 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_objectOptions) = v192;
      v126 = v123 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_parentContainerUUID;
      *(_QWORD *)(v123 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_itemTypeValue) = v197;
      sub_1008C89B0(v195, v126);
      *(_BYTE *)(v123 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_itemCreated) = 0;
      *(_OWORD *)(v123 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_commonCRDTData) = xmmword_100F062D0;
      *(_OWORD *)(v123 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_specificCRDTData) = xmmword_100F062D0;
      v127 = (uint64_t *)(v123 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_partialCommonCRDTData);
      *v127 = v121;
      v127[1] = v120;
      v128 = (uint64_t *)(v123 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_partialSpecificCRDTData);
      *v128 = v122;
      v128[1] = v200;
      v129 = (void *)static OS_os_log.realTimeSync;
      v130 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v131 = swift_initStackObject(v130, v186);
      *(_OWORD *)(v131 + 16) = xmmword_100EF5E40;
      sub_10057939C(v121, v120);
      sub_10057939C(v122, v200);
      v132 = v129;
      v133 = UUID.uuidString.getter(v132);
      v135 = v134;
      *(_QWORD *)(v131 + 56) = &type metadata for String;
      *(_QWORD *)(v131 + 64) = sub_1004CFC2C();
      *(_QWORD *)(v131 + 32) = v133;
      *(_QWORD *)(v131 + 40) = v135;
      v137 = static os_log_type_t.default.getter(v136);
      sub_100A06EBC((uint64_t)v132, &_mh_execute_header, v137, "Creating real time change record to send: modified board item %{public}@", 72, 2, v131);
      swift_setDeallocating(v131);
      v138 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(v131 + 32, 1, v138);

      v139 = (_QWORD *)v216[98];
      swift_retain(v123);
      if ((swift_isUniquelyReferenced_nonNull_native(v139) & 1) == 0)
        v139 = sub_100D10748(0, v139[2] + 1, 1, v139);
      v141 = v139[2];
      v140 = v139[3];
      if (v141 >= v140 >> 1)
        v139 = sub_100D10748((_QWORD *)(v140 > 1), v141 + 1, 1, v139);
      v142 = v216[104];
      v216[82] = v204;
      v216[83] = sub_1004B7878(&qword_1013EDC40, type metadata accessor for CRLBoardItemRealTimeChangeRecord, (uint64_t)&unk_100F2D488);
      v216[79] = v123;
      v139[2] = v141 + 1;
      sub_1004DB728(v185, (uint64_t)&v139[5 * v141 + 4]);
      swift_release(v123);
      v216[98] = v139;
      sub_1004B84A4(v142, type metadata accessor for CRLBoardItemDeltaChange);
      v109 = v209 + v182;
      v107 = v214 - 1;
    }
    while (v214 != 1);
    swift_bridgeObjectRelease();
  }
  v143 = *(_QWORD *)(v2[115] + *(int *)(v2[113] + 36));
  v144 = *(_QWORD *)(v143 + 16);
  v145 = v2[106];
  if (v144)
  {
    v210 = v2 + 11;
    v205 = (__int128 *)(v2 + 64);
    v146 = v143 + ((*(unsigned __int8 *)(v145 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v145 + 80));
    v201 = *(_QWORD *)(v145 + 72);
    v147 = *(void (**)(_QWORD, _QWORD, _QWORD))(v145 + 16);
    swift_bridgeObjectRetain(v143);
    v215 = v145;
    v198 = v147;
    while (1)
    {
      v148 = v2[105];
      v149 = v2[100];
      v147(v149, v146, v148);
      v150 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v145 + 56);
      v150(v149, 0, 1, v148);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v145 + 48))(v149, 1, v148) == 1)
        break;
      v193 = (void (*)(_QWORD, uint64_t, uint64_t, _QWORD, __n128))v150;
      v151 = v2[110];
      v152 = v2[109];
      v153 = v216[108];
      v154 = v216[107];
      v155 = v216[105];
      v156 = *(void (**)(uint64_t, uint64_t, uint64_t))(v145 + 32);
      v156(v154, v216[100], v155);
      sub_1004B8460(v151, v152, type metadata accessor for CRLGloballyScopedBoardIdentifier);
      v147(v153, v154, v155);
      v157 = type metadata accessor for CRLTombstoneBoardItemRealTimeChangeRecord(0);
      v158 = swift_allocObject(v157, *(unsigned int *)(v157 + 48), *(unsigned __int16 *)(v157 + 52));
      sub_1004B84E0(v152, v158 + OBJC_IVAR____TtC8Freeform41CRLTombstoneBoardItemRealTimeChangeRecord_boardIdentifier, type metadata accessor for CRLGloballyScopedBoardIdentifier);
      v156(v158 + OBJC_IVAR____TtC8Freeform41CRLTombstoneBoardItemRealTimeChangeRecord_boardItemUUID, v153, v155);
      v159 = (void *)static OS_os_log.realTimeSync;
      v160 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v161 = swift_initStackObject(v160, v210);
      *(_OWORD *)(v161 + 16) = xmmword_100EF5E40;
      v162 = v159;
      v163 = UUID.uuidString.getter(v162);
      v165 = v164;
      *(_QWORD *)(v161 + 56) = &type metadata for String;
      *(_QWORD *)(v161 + 64) = sub_1004CFC2C();
      *(_QWORD *)(v161 + 32) = v163;
      *(_QWORD *)(v161 + 40) = v165;
      v167 = static os_log_type_t.default.getter(v166);
      sub_100A06EBC((uint64_t)v162, &_mh_execute_header, v167, "Creating real time change record to send: deleted board item %{public}@", 71, 2, v161);
      swift_setDeallocating(v161);
      v168 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(v161 + 32, 1, v168);

      v169 = (_QWORD *)v216[98];
      swift_retain(v158);
      if ((swift_isUniquelyReferenced_nonNull_native(v169) & 1) == 0)
        v169 = sub_100D10748(0, v169[2] + 1, 1, v169);
      v171 = v169[2];
      v170 = v169[3];
      if (v171 >= v170 >> 1)
        v169 = sub_100D10748((_QWORD *)(v170 > 1), v171 + 1, 1, v169);
      v172 = v216[107];
      v173 = v216[105];
      v216[67] = v157;
      v216[68] = sub_1004B7878(&qword_1013EDC38, type metadata accessor for CRLTombstoneBoardItemRealTimeChangeRecord, (uint64_t)&unk_100EF4D8C);
      v216[64] = v158;
      v169[2] = v171 + 1;
      v174 = &v169[5 * v171];
      v2 = v216;
      sub_1004DB728(v205, (uint64_t)(v174 + 4));
      v175 = swift_release(v158);
      v216[98] = v169;
      v145 = v215;
      (*(void (**)(uint64_t, uint64_t, __n128))(v215 + 8))(v172, v173, v175);
      v147 = v198;
      v146 += v201;
      if (!--v144)
      {
        v193(v216[100], 1, 1, v216[105], v176);
        break;
      }
    }
  }
  else
  {
    v177 = *(void (**)(_QWORD, uint64_t, uint64_t, _QWORD, __n128))(v145 + 56);
    v178 = swift_bridgeObjectRetain(v143);
    v177(v2[100], 1, 1, v2[105], v178);
  }
  v179 = v2[115];
  v180 = v2[110];
  swift_release(v181);
  swift_bridgeObjectRelease();
  sub_1004B84A4(v180, type metadata accessor for CRLGloballyScopedBoardIdentifier);
  sub_1004B84A4(v179, type metadata accessor for CRLBoardPeerChangeSet);
  v21 = v2;
  v22 = (double *)v2[98];
  v206 = (double *)v21[97];
LABEL_6:
  v23 = sub_1004B804C(&qword_10140C398);
  v24 = (_QWORD *)swift_allocObject(v23, 48, 7);
  v25 = v21[119];
  v26 = v21[118];
  v27 = v21[115];
  v28 = v21[112];
  v29 = v21[110];
  v30 = v21[109];
  v31 = v21[108];
  v32 = v21[107];
  v202 = v21[104];
  v212 = v21[101];
  v217 = v21[100];
  v24[2] = v22;
  v24[3] = _swiftEmptyArrayStorage;
  v24[4] = v206;
  v24[5] = _swiftEmptyArrayStorage;
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v202);
  swift_task_dealloc(v212);
  swift_task_dealloc(v217);
  return ((uint64_t (*)(_QWORD *))v21[1])(v24);
}

void sub_100C6AD64(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void);
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(void);
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;

  v4 = v2;
  v44 = a2;
  v6 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v6);
  v45 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UUID(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(v4 + 120);
  v15 = OBJC_IVAR____TtC8Freeform8CRLBoard_store;
  v16 = *(uint64_t (**)(void))(*a1 + 456);
  v17 = objc_retain(*(id *)(*(_QWORD *)(v14 + OBJC_IVAR____TtC8Freeform8CRLBoard_store)
                          + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_crdtContext));
  v18 = v16();
  v20 = v19;

  if (!v3)
  {
    v42 = v20;
    v43 = v18;
    v41 = v13;
    v21 = *(uint64_t (**)(void))(*a1 + 464);
    v22 = *(id *)(*(_QWORD *)(v14 + v15) + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_crdtContext);
    v23 = v21();
    v25 = v24;

    v26 = (uint64_t)v41;
    v27 = sub_1004B8460(v44, (uint64_t)v41, type metadata accessor for CRLGloballyScopedBoardIdentifier);
    v28 = *(uint64_t (**)(uint64_t))(*a1 + 256);
    v44 = v25;
    v29 = (uint64_t)v10;
    v30 = v28(v27);
    v32 = a1[4];
    v31 = a1[5];
    v33 = a1[3];
    v39 = a1[2];
    v40 = v31;
    v34 = (*(uint64_t (**)(uint64_t))(*a1 + 408))(v30);
    if ((v35 & 1) != 0)
      v36 = v34 + 2;
    else
      v36 = v34;
    v37 = (uint64_t)v45;
    (*(void (**)(void))(*a1 + 264))();
    v38 = type metadata accessor for CRLBoardItemRealTimeChangeRecord(0);
    swift_allocObject(v38, *(unsigned int *)(v38 + 48), *(unsigned __int16 *)(v38 + 52));
    sub_100BF8934(v26, v29, v33, v32, v40, v39, v36, v37, 1, v43, v42, v23, v44, 0, 0xF000000000000000, 0, 0xF000000000000000);
  }
}

double sub_100C6AFEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD **v6;
  uint64_t *v7;
  uint64_t v8;
  double result;
  _BYTE v10[24];
  _BYTE v11[24];

  v1 = v0 + OBJC_IVAR____TtC8Freeform33CRLBoardRealTimeChangeCoordinator_incomingSuspendedCache;
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform33CRLBoardRealTimeChangeCoordinator_incomingSuspendedCache + 24) != 1
     || (*(_BYTE *)v1 & 1) == 0)
    && !*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform33CRLBoardRealTimeChangeCoordinator_pushCommandToCommandControllerTask))
  {
    if (*(_BYTE *)v1 == 1 && *(_QWORD *)(*(_QWORD *)(v1 + 8) + 16))
    {
      v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC8Freeform33CRLBoardRealTimeChangeCoordinator_queuedIncomingUpdates);
      swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform33CRLBoardRealTimeChangeCoordinator_queuedIncomingUpdates, v11, 0, 0);
      v3 = *v2;
      swift_retain(v0);
      swift_bridgeObjectRetain(v3);
      v5 = sub_100C72708(v4, v0);
      swift_release(v0);
      swift_bridgeObjectRelease(v3);
    }
    else
    {
      v6 = (_QWORD **)(v0 + OBJC_IVAR____TtC8Freeform33CRLBoardRealTimeChangeCoordinator_queuedIncomingUpdates);
      swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform33CRLBoardRealTimeChangeCoordinator_queuedIncomingUpdates, v11, 0, 0);
      v5 = *v6;
      swift_bridgeObjectRetain(v5);
    }
    v7 = (uint64_t *)(v0 + OBJC_IVAR____TtC8Freeform33CRLBoardRealTimeChangeCoordinator_queuedIncomingUpdates);
    swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform33CRLBoardRealTimeChangeCoordinator_queuedIncomingUpdates, v10, 1, 0);
    v8 = *v7;
    *v7 = (uint64_t)_swiftEmptyArrayStorage;
    swift_bridgeObjectRelease(v8);
    if (v5[2])
      sub_100C6DFA4((uint64_t)v5);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v5).n128_u64[0];
  }
  return result;
}

char *sub_100C6B12C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  double *v101;
  double *v102;
  double *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t (*v106)(uint64_t);
  uint64_t v107;
  char *v108;
  char **v109;
  void (*v110)(_QWORD, _QWORD, _QWORD);
  uint64_t v111;
  uint64_t (*v112)(uint64_t);
  char *v113;
  void (*v114)(void);
  uint64_t v115;
  unint64_t v116;
  char v117;
  uint64_t v118;
  unint64_t v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  double *v128;
  void (*v129)(double *, uint64_t);
  uint64_t *v130;
  __n128 v131;
  uint64_t v132;
  char v133;
  char v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char v140;
  __n128 v141;
  void (*v142)(char *, uint64_t, __n128);
  unint64_t v143;
  char isUniquelyReferenced_nonNull_native;
  char *v145;
  unint64_t v146;
  unint64_t v147;
  __n128 v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  double *v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  void (*v164)(__n128);
  char *v165;
  __n128 v166;
  double *v167;
  void (*v168)(double *, uint64_t);
  unint64_t v169;
  uint64_t v170;
  char *v171;
  unint64_t v172;
  unint64_t v173;
  uint64_t v174;
  uint64_t v175;
  int v176;
  uint64_t v177;
  double *v178;
  uint64_t v179;
  __n128 v180;
  uint64_t v181;
  __n128 v182;
  int v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  __n128 v187;
  uint64_t v188;
  unint64_t v189;
  char v190;
  unint64_t v191;
  unint64_t v192;
  uint64_t v193;
  int v194;
  __n128 v195;
  unint64_t v196;
  char v197;
  unint64_t v198;
  unint64_t v199;
  uint64_t v200;
  uint64_t v201;
  double *v202;
  objc_class *v203;
  char *v204;
  double v205;
  char *v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  char *v210;
  double *v211;
  char *v212;
  uint64_t v213;
  _QWORD *v214;
  _QWORD *v215;
  char *v216;
  int64_t v217;
  uint64_t v218;
  char *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  char *v224;
  char *v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  __n128 v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  double *v238;
  _QWORD *v239;
  uint64_t v240;
  CKRecordID v242;
  uint64_t v243;
  uint64_t v245;
  uint64_t inited;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  _QWORD v250[3];
  char *v251;
  char *v252;
  char *v253;
  char *v254;
  uint64_t v255;
  __int128 v256;
  char *v257;
  char *v258;
  char *v259;
  char *v260;
  uint64_t v261;
  char *v262;
  char *v263;
  char *v264;
  char *v265;
  char *v266;
  char *v267;
  char *v268;
  double *v269;
  char *v270;
  char *v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  char *v275;
  uint64_t v276;
  uint64_t v277;
  char *v278;
  unint64_t v279;
  double *v280;
  char *v281;
  double *v282;
  unint64_t v283;
  double *v284;
  char *v285;
  unint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  char **v290;
  char *v291;
  uint64_t v292;
  char *v293;
  uint64_t v294;
  unint64_t v295;
  uint64_t v296;
  uint64_t v297;
  double *v298;
  uint64_t v299;
  double *v300;
  _QWORD *v301;
  char *v302;
  char *v303;
  char *v304;
  uint64_t v305;
  double *v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  double *v311;
  uint64_t v312;
  uint64_t v313[3];
  objc_super v314;
  char v315[72];
  double *v316;
  double *v317;
  void *v318;
  double *v319;
  double *v320;

  v250[1] = a2;
  v3 = type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  __chkstk_darwin(v3);
  v254 = (char *)v250 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v5);
  v251 = (char *)v250 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v277 = type metadata accessor for CRLBoardItemDeltaChange(0);
  __chkstk_darwin(v277);
  v253 = (char *)v250 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v292 = (uint64_t)v250 - v9;
  v10 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v10);
  v272 = (uint64_t)v250 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v12);
  v281 = (char *)v250 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v276 = (uint64_t)v250 - v15;
  __chkstk_darwin(v16);
  v278 = (char *)v250 - v17;
  v18 = sub_1004B804C(&qword_101405458);
  __chkstk_darwin(v18);
  v260 = (char *)v250 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)v250 - v21;
  __chkstk_darwin(v23);
  v259 = (char *)v250 - v24;
  v25 = type metadata accessor for UUID(0);
  v26 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v285 = (char *)v250 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v275 = (char *)v250 - v29;
  __chkstk_darwin(v30);
  v298 = (double *)((char *)v250 - v31);
  __chkstk_darwin(v32);
  v306 = (double *)((char *)v250 - v33);
  __chkstk_darwin(v34);
  v271 = (char *)v250 - v35;
  __chkstk_darwin(v36);
  v293 = (char *)v250 - v37;
  __chkstk_darwin(v38);
  v270 = (char *)v250 - v39;
  __chkstk_darwin(v40);
  v263 = (char *)v250 - v41;
  __chkstk_darwin(v42);
  v258 = (char *)v250 - v43;
  __chkstk_darwin(v44);
  v46 = (char *)v250 - v45;
  __chkstk_darwin(v47);
  v257 = (char *)v250 - v48;
  __chkstk_darwin(v49);
  v300 = (double *)((char *)v250 - v50);
  __chkstk_darwin(v51);
  v268 = (char *)v250 - v52;
  v53 = type metadata accessor for CRLBoardItemPeerSyncUpdate(0);
  v54 = *(_QWORD *)(v53 - 8);
  __chkstk_darwin(v53);
  v297 = (uint64_t)v250 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v56);
  v296 = (uint64_t)v250 - v57;
  __chkstk_darwin(v58);
  v255 = (uint64_t)v250 - v59;
  __chkstk_darwin(v60);
  v274 = (uint64_t)v250 - v61;
  __chkstk_darwin(v62);
  v273 = (uint64_t)v250 - v63;
  __chkstk_darwin(v64);
  v289 = (uint64_t)v250 - v65;
  __chkstk_darwin(v66);
  v291 = (char *)v250 - v67;
  __chkstk_darwin(v68);
  v303 = (char *)v250 - v69;
  __chkstk_darwin(v70);
  v294 = (uint64_t)v250 - v71;
  __chkstk_darwin(v72);
  v287 = (uint64_t)v250 - v73;
  __chkstk_darwin(v74);
  v290 = (char **)((char *)v250 - v75);
  __chkstk_darwin(v76);
  v301 = (_QWORD *)((char *)v250 - v77);
  __chkstk_darwin(v78);
  v284 = (double *)((char *)v250 - v79);
  __chkstk_darwin(v80);
  v265 = (char *)v250 - v81;
  __chkstk_darwin(v82);
  v264 = (char *)v250 - v83;
  __chkstk_darwin(v84);
  v267 = (char *)v250 - v85;
  __chkstk_darwin(v86);
  v266 = (char *)v250 - v87;
  __chkstk_darwin(v88);
  v304 = (char *)v250 - v89;
  __chkstk_darwin(v90);
  v295 = (unint64_t)v250 - v91;
  v319 = _swiftEmptyArrayStorage;
  v320 = _swiftEmptyArrayStorage;
  v286 = sub_1008D8058((uint64_t)_swiftEmptyArrayStorage);
  v92 = sub_1008D8058((uint64_t)_swiftEmptyArrayStorage);
  v279 = v92;
  v318 = &_swiftEmptySetSingleton;
  v93 = *(_QWORD *)(a1 + 16);
  v308 = v26;
  v307 = v53;
  v261 = v54;
  if (v93)
  {
    v262 = v46;
    v252 = v22;
    v283 = (*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
    v94 = a1 + v283;
    v302 = *(char **)(v54 + 72);
    v250[2] = a1;
    swift_bridgeObjectRetain(a1);
    v256 = xmmword_100EF5A10;
    v282 = _swiftEmptyArrayStorage;
    v280 = _swiftEmptyArrayStorage;
    v95 = v295;
    sub_1004B8460(v94, v295, type metadata accessor for CRLBoardItemPeerSyncUpdate);
    v96 = (uint64_t)v304;
    sub_1004B8460(v95, (uint64_t)v304, type metadata accessor for CRLBoardItemPeerSyncUpdate);
    v97 = (char *)&loc_100C6B8A4 + *((int *)qword_100C6D858 + swift_getEnumCaseMultiPayload(v96, v53));
    __asm { BR              X9 }
  }
  v269 = _swiftEmptyArrayStorage;
  v282 = _swiftEmptyArrayStorage;
  __chkstk_darwin(v92);
  swift_bridgeObjectRetain(v286);
  sub_100C724BC(v98, (void (*)(char *, uint64_t))sub_100C73714);
  swift_bridgeObjectRelease();
  __chkstk_darwin(v99);
  swift_bridgeObjectRetain(v279);
  sub_100C724BC(v100, (void (*)(char *, uint64_t))sub_100C7371C);
  swift_bridgeObjectRelease();
  v101 = v320;
  swift_bridgeObjectRetain(v320);
  v103 = sub_100C72E2C(v102);
  swift_bridgeObjectRelease_n(v101, 2);
  v320 = v103;
  v316 = _swiftEmptyArrayStorage;
  v317 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
  v280 = _swiftEmptyArrayStorage;
  sub_10061FE80((uint64_t)_swiftEmptyArrayStorage);
  v104 = *((_QWORD *)v103 + 2);
  v305 = v25;
  if (v104)
  {
    v295 = (*(unsigned __int8 *)(v261 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v261 + 80);
    v105 = (uint64_t)v103 + v295;
    v288 = *(_QWORD *)(v261 + 72);
    v284 = v103;
    swift_bridgeObjectRetain(v103);
    v106 = type metadata accessor for CRLBoardItemPeerSyncUpdate;
    v107 = (uint64_t)v278;
    v108 = v293;
    v109 = v290;
    v110 = (void (*)(_QWORD, _QWORD, _QWORD))v301;
    while (1)
    {
      v304 = (char *)v104;
      sub_1004B8460(v105, (uint64_t)v110, v106);
      v112 = v106;
      sub_1004B8460((uint64_t)v110, (uint64_t)v109, v106);
      if (swift_getEnumCaseMultiPayload(v109, v307) != 2)
      {
        sub_1004B84A4((uint64_t)v109, type metadata accessor for CRLBoardItemPeerSyncUpdate);
        sub_100757E04(&_mh_execute_header, (uint64_t)"_processQueuedIncomingUpdatesIntoCommand(_:_:)", 46, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLBoardRealTimeChangeCoordinator.swift", 107, 2, 532, "createdItems should only contain .createdItemDatas", 50, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createdItems should only contain .createdItemDatas");
        sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_processQueuedIncomingUpdatesIntoCommand(_:_:)", 46, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLBoardRealTimeChangeCoordinator.swift", 107, 2u, 532, (uint64_t)"createdItems should only contain .createdItemDatas", 50, 2u);
LABEL_71:
        SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v242, *(Swift::String *)&v243);
        _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
        __break(1u);
        JUMPOUT(0x100C6D84CLL);
      }
      v113 = *v109;
      v114 = *(void (**)(void))(*(_QWORD *)v113 + 264);
      v302 = v113;
      v114();
      v115 = v308;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v308 + 48))(v107, 1, v25) == 1)
      {
        sub_1004CB800(v107, (uint64_t *)&unk_1013E1A50);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v115 + 32))(v108, v107, v25);
        v121 = *(_QWORD *)(v299 + 120);
        v122 = (uint64_t)v108;
        v123 = *(_QWORD *)(v121 + OBJC_IVAR____TtC8Freeform8CRLBoard_data);
        v124 = v123 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
        swift_beginAccess(v123 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, &v310, 0, 0);
        v125 = v124;
        v126 = v272;
        sub_1004B8460(v125, v272, type metadata accessor for CRLBoardCRDTData);
        swift_retain(v123);
        v127 = sub_1004B804C(&qword_1013E1A80);
        v128 = v300;
        CRRegister.wrappedValue.getter(v127);
        sub_1004B84A4(v126, type metadata accessor for CRLBoardCRDTData);
        swift_release(v123);
        LOBYTE(v126) = static UUID.== infix(_:_:)(v108);
        v129 = *(void (**)(double *, uint64_t))(v308 + 8);
        v129(v128, v305);
        if ((v126 & 1) != 0
          || (v130 = (uint64_t *)(v121 + OBJC_IVAR____TtC8Freeform8CRLBoard_objectUUIDMap),
              v131 = swift_beginAccess(v121 + OBJC_IVAR____TtC8Freeform8CRLBoard_objectUUIDMap, &v309, 0, 0),
              v132 = *v130,
              *(_QWORD *)(v132 + 16))
          && (swift_bridgeObjectRetain(v132),
              sub_100842EFC(v122),
              v134 = v133,
              v131 = swift_bridgeObjectRelease(),
              (v134 & 1) != 0))
        {
          v135 = v271;
          v136 = v305;
          (*(void (**)(char *, uint64_t, uint64_t))(v308 + 16))(v271, v122, v305);
          v129((double *)v135, v136);
LABEL_19:
          v142 = (void (*)(char *, uint64_t, __n128))v129;
          v106 = v112;
          sub_1004B8460((uint64_t)v301, v287, v112);
          v143 = (unint64_t)v317;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v107 = (uint64_t)v278;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            v143 = sub_100D10734(0, *(_QWORD *)(v143 + 16) + 1, 1, v143);
          v118 = (uint64_t)v304;
          v145 = v302;
          v147 = *(_QWORD *)(v143 + 16);
          v146 = *(_QWORD *)(v143 + 24);
          if (v147 >= v146 >> 1)
            v143 = sub_100D10734(v146 > 1, v147 + 1, 1, v143);
          *(_QWORD *)(v143 + 16) = v147 + 1;
          v111 = v288;
          sub_1004B84E0(v287, v143 + v295 + v147 * v288, v106);
          v148 = swift_release(v145);
          v317 = (double *)v143;
          v108 = v293;
          v25 = v305;
          v142(v293, v305, v148);
          goto LABEL_6;
        }
        v137 = (uint64_t)v271;
        v138 = v305;
        (*(void (**)(char *, uint64_t, uint64_t, __n128))(v308 + 16))(v271, v122, v305, v131);
        v139 = (uint64_t)v318;
        swift_bridgeObjectRetain(v318);
        v140 = sub_10062158C(v137, v139);
        v141 = swift_bridgeObjectRelease();
        ((void (*)(uint64_t, uint64_t, __n128))v129)(v137, v138, v141);
        if ((v140 & 1) != 0)
          goto LABEL_19;
        v25 = v138;
        v129((double *)v293, v138);
        v107 = (uint64_t)v278;
        v110 = (void (*)(_QWORD, _QWORD, _QWORD))v301;
      }
      v106 = v112;
      sub_1004B8460((uint64_t)v110, v294, v112);
      v116 = (unint64_t)v316;
      v117 = swift_isUniquelyReferenced_nonNull_native();
      v118 = (uint64_t)v304;
      if ((v117 & 1) == 0)
        v116 = sub_100D10734(0, *(_QWORD *)(v116 + 16) + 1, 1, v116);
      v120 = *(_QWORD *)(v116 + 16);
      v119 = *(_QWORD *)(v116 + 24);
      if (v120 >= v119 >> 1)
        v116 = sub_100D10734(v119 > 1, v120 + 1, 1, v116);
      *(_QWORD *)(v116 + 16) = v120 + 1;
      v111 = v288;
      sub_1004B84E0(v294, v116 + v295 + v120 * v288, v106);
      swift_release(v302);
      v316 = (double *)v116;
      v108 = v293;
LABEL_6:
      v110 = (void (*)(_QWORD, _QWORD, _QWORD))v301;
      sub_1004B84A4((uint64_t)v301, v106);
      v105 += v111;
      v104 = v118 - 1;
      v109 = v290;
      if (!v104)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  v149 = *((_QWORD *)v282 + 2);
  v150 = v307;
  v151 = v261;
  if (!v149)
    goto LABEL_55;
  v295 = (*(unsigned __int8 *)(v261 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v261 + 80);
  v152 = (uint64_t)v282 + v295;
  v153 = *(_QWORD *)(v261 + 72);
  swift_bridgeObjectRetain(v282);
  v155 = (uint64_t)v291;
  v154 = v292;
  v156 = (uint64_t)v303;
  v294 = v153;
  do
  {
    v304 = (char *)v149;
    v302 = (char *)v152;
    sub_1004B8460(v152, v156, type metadata accessor for CRLBoardItemPeerSyncUpdate);
    sub_1004B8460(v156, v155, type metadata accessor for CRLBoardItemPeerSyncUpdate);
    if (swift_getEnumCaseMultiPayload(v155, v150) != 1)
    {
      sub_1004B84A4(v155, type metadata accessor for CRLBoardItemPeerSyncUpdate);
      sub_100757E04(&_mh_execute_header, (uint64_t)"_processQueuedIncomingUpdatesIntoCommand(_:_:)", 46, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLBoardRealTimeChangeCoordinator.swift", 107, 2, 563, "modifiedItems should only contain .modifiedItemDatas", 52, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"modifiedItems should only contain .modifiedItemDatas");
      sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_processQueuedIncomingUpdatesIntoCommand(_:_:)", 46, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLBoardRealTimeChangeCoordinator.swift", 107, 2u, 563, (uint64_t)"modifiedItems should only contain .modifiedItemDatas", 52, 2u);
      goto LABEL_71;
    }
    sub_1004B84E0(v155, v154, type metadata accessor for CRLBoardItemDeltaChange);
    v159 = v308;
    v160 = v306;
    v301 = *(_QWORD **)(v308 + 16);
    ((void (*)(double *, uint64_t, uint64_t))v301)(v306, v154, v25);
    v161 = *(char **)(*(_QWORD *)(v299 + 120) + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer);
    v162 = *(_QWORD *)&v161[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
    v163 = v154;
    v164 = *(void (**)(__n128))(*(_QWORD *)v162 + 256);
    v165 = v161;
    v166 = swift_retain(v162);
    v167 = v300;
    v164(v166);
    swift_release(v162);

    LOBYTE(v162) = static UUID.== infix(_:_:)(v160);
    v168 = *(void (**)(double *, uint64_t))(v159 + 8);
    v168(v167, v25);
    if ((v162 & 1) == 0)
    {
      v175 = v276;
      sub_1004CB7BC(v163 + *(int *)(v277 + 20), v276, (uint64_t *)&unk_1013E1A50);
      v176 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v159 + 48))(v175, 1, v25);
      v177 = (uint64_t)v303;
      if (v176 == 1)
      {
        sub_1004CB800(v175, (uint64_t *)&unk_1013E1A50);
        v245 = sub_1004B804C((uint64_t *)&unk_1013E0180);
        inited = swift_initStackObject(v245, v315);
        *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
        v247 = UUID.uuidString.getter(inited);
        v249 = v248;
        *(_QWORD *)(inited + 56) = &type metadata for String;
        *(_QWORD *)(inited + 64) = sub_1004CFC2C();
        *(_QWORD *)(inited + 32) = v247;
        *(_QWORD *)(inited + 40) = v249;
        sub_100757E04(&_mh_execute_header, (uint64_t)"_processQueuedIncomingUpdatesIntoCommand(_:_:)", 46, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLBoardRealTimeChangeCoordinator.swift", 107, 2, 549, "Non-rootContainerItem board item missing parentContainerUUID, %@", 64, 2u, inited);
        sub_100518FC0(inited, (uint64_t)"Non-rootContainerItem board item missing parentContainerUUID, %@");
        sub_100519194(inited, (uint64_t)"_processQueuedIncomingUpdatesIntoCommand(_:_:)", 46, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLBoardRealTimeChangeCoordinator.swift", 107, 2u, 549, (uint64_t)"Non-rootContainerItem board item missing parentContainerUUID, %@", 64, 2u);
        goto LABEL_71;
      }
      (*(void (**)(double *, uint64_t, uint64_t))(v159 + 32))(v298, v175, v25);
      v178 = v306;
      v179 = sub_100B10D70((uint64_t)v306);
      v180 = swift_unknownObjectRelease(v179);
      v181 = (uint64_t)v275;
      ((void (*)(char *, double *, uint64_t, __n128))v301)(v275, v178, v25, v180);
      v155 = (uint64_t)v291;
      if (v179)
      {
        v183 = 1;
      }
      else
      {
        v184 = (uint64_t)v318;
        swift_bridgeObjectRetain(v318);
        v183 = sub_10062158C(v181, v184);
        v182 = swift_bridgeObjectRelease();
      }
      ((void (*)(uint64_t, uint64_t, __n128))v168)(v181, v25, v182);
      v185 = (uint64_t)v298;
      v186 = sub_100B10D70((uint64_t)v298);
      v187 = swift_unknownObjectRelease(v186);
      v188 = (uint64_t)v285;
      ((void (*)(char *, uint64_t, uint64_t, __n128))v301)(v285, v185, v25, v187);
      if (v186)
      {
        v168((double *)v188, v25);
        v171 = v302;
        if ((v183 & 1) != 0)
        {
LABEL_44:
          sub_1004B8460(v177, v273, type metadata accessor for CRLBoardItemPeerSyncUpdate);
          v189 = (unint64_t)v317;
          v190 = swift_isUniquelyReferenced_nonNull_native();
          v170 = (uint64_t)v304;
          if ((v190 & 1) == 0)
            v189 = sub_100D10734(0, *(_QWORD *)(v189 + 16) + 1, 1, v189);
          v150 = v307;
          v192 = *(_QWORD *)(v189 + 16);
          v191 = *(_QWORD *)(v189 + 24);
          if (v192 >= v191 >> 1)
            v189 = sub_100D10734(v191 > 1, v192 + 1, 1, v189);
          *(_QWORD *)(v189 + 16) = v192 + 1;
          v157 = v189 + v295 + v192 * v294;
          v158 = v294;
          sub_1004B84E0(v273, v157, type metadata accessor for CRLBoardItemPeerSyncUpdate);
          v317 = (double *)v189;
LABEL_29:
          v168(v298, v25);
          goto LABEL_30;
        }
      }
      else
      {
        v193 = (uint64_t)v318;
        swift_bridgeObjectRetain(v318);
        v194 = sub_10062158C(v188, v193);
        v195 = swift_bridgeObjectRelease();
        ((void (*)(char *, uint64_t, __n128))v168)(v285, v25, v195);
        v171 = v302;
        if ((v183 & v194 & 1) != 0)
          goto LABEL_44;
      }
      sub_1004B8460(v177, v274, type metadata accessor for CRLBoardItemPeerSyncUpdate);
      v196 = (unint64_t)v316;
      v197 = swift_isUniquelyReferenced_nonNull_native();
      v170 = (uint64_t)v304;
      if ((v197 & 1) == 0)
        v196 = sub_100D10734(0, *(_QWORD *)(v196 + 16) + 1, 1, v196);
      v150 = v307;
      v199 = *(_QWORD *)(v196 + 16);
      v198 = *(_QWORD *)(v196 + 24);
      if (v199 >= v198 >> 1)
        v196 = sub_100D10734(v198 > 1, v199 + 1, 1, v196);
      *(_QWORD *)(v196 + 16) = v199 + 1;
      v200 = v196 + v295 + v199 * v294;
      v158 = v294;
      sub_1004B84E0(v274, v200, type metadata accessor for CRLBoardItemPeerSyncUpdate);
      v316 = (double *)v196;
      goto LABEL_29;
    }
    sub_1004B8460((uint64_t)v303, v289, type metadata accessor for CRLBoardItemPeerSyncUpdate);
    v169 = (unint64_t)v317;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v169 = sub_100D10734(0, *(_QWORD *)(v169 + 16) + 1, 1, v169);
    v150 = v307;
    v155 = (uint64_t)v291;
    v170 = (uint64_t)v304;
    v171 = v302;
    v173 = *(_QWORD *)(v169 + 16);
    v172 = *(_QWORD *)(v169 + 24);
    if (v173 >= v172 >> 1)
      v169 = sub_100D10734(v172 > 1, v173 + 1, 1, v169);
    *(_QWORD *)(v169 + 16) = v173 + 1;
    v174 = v169 + v295 + v173 * v294;
    v158 = v294;
    sub_1004B84E0(v289, v174, type metadata accessor for CRLBoardItemPeerSyncUpdate);
    v317 = (double *)v169;
LABEL_30:
    v168(v306, v25);
    v154 = v292;
    sub_1004B84A4(v292, type metadata accessor for CRLBoardItemDeltaChange);
    v156 = (uint64_t)v303;
    sub_1004B84A4((uint64_t)v303, type metadata accessor for CRLBoardItemPeerSyncUpdate);
    v152 = (uint64_t)&v171[v158];
    v149 = v170 - 1;
  }
  while (v149);
  swift_bridgeObjectRelease();
  v151 = v261;
LABEL_55:
  swift_bridgeObjectRetain(v319);
  sub_10061FE80(v201);
  v202 = v317;
  if (*((_QWORD *)v317 + 2))
  {
    v203 = (objc_class *)type metadata accessor for CRLCommandApplyPeerSyncUpdates();
    v204 = (char *)objc_allocWithZone(v203);
    *(_QWORD *)&v204[OBJC_IVAR____TtC8Freeform30CRLCommandApplyPeerSyncUpdates_updates] = v202;
    v314.receiver = v204;
    v314.super_class = v203;
    *(_QWORD *)&v205 = swift_bridgeObjectRetain(v202).n128_u64[0];
    v206 = (char *)objc_msgSendSuper2(&v314, "init", v205);
    v207 = (uint64_t)v269;
    swift_bridgeObjectRetain(v269);
    sub_10061FE80(v207);
  }
  else
  {
    if (*((_QWORD *)v269 + 2))
    {
      v208 = (uint64_t)v269
           + ((*(unsigned __int8 *)(v151 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v151 + 80));
      swift_bridgeObjectRetain(v269);
      v306 = _swiftEmptyArrayStorage;
      v209 = v255;
      sub_1004B8460(v208, v255, type metadata accessor for CRLBoardItemPeerSyncUpdate);
      v210 = (char *)&loc_100C6CE58
           + *((int *)qword_100C6D870 + swift_getEnumCaseMultiPayload(v209, v150));
      __asm { BR              X9 }
    }
    v206 = 0;
  }
  v211 = v316;
  if (*((_QWORD *)v316 + 2))
  {
    if (qword_1013DD888 != -1)
      swift_once(&qword_1013DD888, sub_100A05DE4);
    swift_beginAccess(&static OS_os_log.realTimeSync, v313, 0, 0);
    v212 = (char *)static OS_os_log.realTimeSync;
    v213 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v214 = (_QWORD *)swift_initStackObject(v213, &v312);
    v215 = v214;
    *((_OWORD *)v214 + 1) = xmmword_100EF5E40;
    v216 = (char *)(v214 + 4);
    v217 = *((_QWORD *)v211 + 2);
    v218 = v261;
    if (v217)
    {
      v301 = v214;
      v302 = (char *)(v214 + 4);
      v303 = v212;
      v304 = v206;
      v311 = _swiftEmptyArrayStorage;
      v219 = v212;
      swift_bridgeObjectRetain(v211);
      sub_1006006EC(0, v217, 0);
      v220 = *(unsigned __int8 *)(v218 + 80);
      v300 = v211;
      v306 = *(double **)(v218 + 72);
      v221 = v296;
      sub_1004B8460((uint64_t)v211 + ((v220 + 32) & ~v220), v296, type metadata accessor for CRLBoardItemPeerSyncUpdate);
      v222 = v221;
      v223 = v297;
      sub_1004B8460(v222, v297, type metadata accessor for CRLBoardItemPeerSyncUpdate);
      v224 = (char *)&loc_100C6D178
           + *((int *)qword_100C6D888 + swift_getEnumCaseMultiPayload(v223, v307));
      __asm { BR              X9 }
    }
    v225 = v212;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v311 = _swiftEmptyArrayStorage;
    v226 = sub_1004B804C((uint64_t *)&unk_1013E4970);
    v227 = sub_1004CBA30((unint64_t *)&qword_1013DFC40, (uint64_t *)&unk_1013E4970, (uint64_t)&protocol conformance descriptor for [A]);
    v228 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v226, v227);
    v230 = v229;
    swift_bridgeObjectRelease();
    v215[7] = &type metadata for String;
    v215[8] = sub_1004CFC2C();
    v215[4] = v228;
    v215[5] = v230;
    v232 = static os_log_type_t.default.getter(v231);
    sub_100A06EBC((uint64_t)v212, &_mh_execute_header, v232, "_processQueuedIncomingUpdatesIntoCommand, queueItems: %@", 56, 2, (uint64_t)v215);
    swift_setDeallocating(v215);
    v233 = v215[2];
    v234 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v216, v233, v234);

    v235 = type metadata accessor for TaskPriority(0);
    v236 = (uint64_t)v251;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v235 - 8) + 56))(v251, 1, 1, v235);
    v237 = swift_allocObject(&unk_10129DA08, 24, 7);
    swift_weakInit(v237 + 16, v299);
    v238 = v316;
    v239 = (_QWORD *)swift_allocObject(&unk_10129DB20, 48, 7);
    v239[2] = 0;
    v239[3] = 0;
    v239[4] = v237;
    v239[5] = v238;
    v240 = sub_10098824C(v236, (uint64_t)&unk_10140C380, (uint64_t)v239);
    swift_release(v240);
    sub_1004CB800(v236, &qword_1013E01F0);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v206;
}

uint64_t sub_100C6D8A0(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(_QWORD);
  unint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;

  v5 = type metadata accessor for CRLBoardItemPeerSyncUpdate(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004B8460(a2, (uint64_t)v8, v9);
  v10 = *a3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a3 = v10;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v10 = sub_100D10734(0, *(_QWORD *)(v10 + 16) + 1, 1, v10);
    *a3 = v10;
  }
  v13 = *(_QWORD *)(v10 + 16);
  v12 = *(_QWORD *)(v10 + 24);
  if (v13 >= v12 >> 1)
  {
    v10 = sub_100D10734(v12 > 1, v13 + 1, 1, v10);
    *a3 = v10;
  }
  *(_QWORD *)(v10 + 16) = v13 + 1;
  return sub_1004B84E0((uint64_t)v8, v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v13, type metadata accessor for CRLBoardItemPeerSyncUpdate);
}

uint64_t sub_100C6D9B4(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t (*v17)(_QWORD);
  unint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v20;
  unint64_t v21;
  _QWORD v23[2];

  v23[0] = a1;
  v23[1] = a4;
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)v23 - v11;
  v13 = type metadata accessor for CRLBoardItemPeerSyncUpdate(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004B8460(a2, (uint64_t)v16, v17);
  v18 = *a3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a3 = v18;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v18 = sub_100D10734(0, *(_QWORD *)(v18 + 16) + 1, 1, v18);
    *a3 = v18;
  }
  v21 = *(_QWORD *)(v18 + 16);
  v20 = *(_QWORD *)(v18 + 24);
  if (v21 >= v20 >> 1)
  {
    v18 = sub_100D10734(v20 > 1, v21 + 1, 1, v18);
    *a3 = v18;
  }
  *(_QWORD *)(v18 + 16) = v21 + 1;
  sub_1004B84E0((uint64_t)v16, v18+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(_QWORD *)(v14 + 72) * v21, type metadata accessor for CRLBoardItemPeerSyncUpdate);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 16))(v9, v23[0], v6);
  sub_100AD569C((uint64_t)v12, (uint64_t)v9);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v6);
}

uint64_t sub_100C6DB68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[9] = a4;
  v5[10] = a5;
  v5[8] = a1;
  return swift_task_switch(sub_100C6DB84, 0, 0);
}

uint64_t sub_100C6DB84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;

  v1 = *(_QWORD *)(v0 + 72) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  *(_QWORD *)(v0 + 88) = Strong;
  if (Strong)
    return swift_task_switch(sub_100C6DC04, Strong, 0);
  **(_BYTE **)(v0 + 64) = 1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100C6DC04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 80);
  v1 = *(_QWORD *)(v0 + 88);
  swift_beginAccess(v1 + OBJC_IVAR____TtC8Freeform33CRLBoardRealTimeChangeCoordinator_queuedIncomingUpdates, v0 + 40, 33, 0);
  swift_bridgeObjectRetain(v2);
  sub_100CFFCB8(0, 0, v2);
  swift_endAccess(v0 + 40);
  swift_bridgeObjectRelease();
  swift_release(v1);
  return swift_task_switch(sub_100C6DC98, 0, 0);
}

uint64_t sub_100C6DC98()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 64) = *(_QWORD *)(v0 + 88) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100C6DCB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  sub_1004B8460(a1, a2, type metadata accessor for CRLBoardItemPeerSyncUpdate);
  v3 = type metadata accessor for CRLBoardItemPeerSyncUpdate(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(a2, 0, 1, v3);
}

uint64_t sub_100C6DD00@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  v2 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v2);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100C829C0();
  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(a1, v4, v5);
  __break(1u);
  return result;
}

void sub_100C6DDB0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(_QWORD);
  char *v7;
  uint64_t v8;

  v2 = type metadata accessor for CRLBoardItemDeltaChange(0);
  __chkstk_darwin(v2);
  v3 = type metadata accessor for CRLBoardItemPeerSyncUpdate(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004B8460(a1, (uint64_t)v5, v6);
  v7 = (char *)sub_100C6DE78 + 4 * byte_100F2FFB0[swift_getEnumCaseMultiPayload(v5, v3)];
  __asm { BR              X10 }
}

uint64_t sub_100C6DE78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1004B84A4(v1, type metadata accessor for CRLBoardItemPeerSyncUpdate);
  v2 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v0, 1, 1, v2);
}

double sub_100C6DFA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  double result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = v1;
  v4 = sub_1004B804C(&qword_1013E01F0);
  *(_QWORD *)&result = __chkstk_darwin(v4).n128_u64[0];
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = OBJC_IVAR____TtC8Freeform33CRLBoardRealTimeChangeCoordinator_pushCommandToCommandControllerTask;
  v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform33CRLBoardRealTimeChangeCoordinator_pushCommandToCommandControllerTask);
  if (v9)
  {
    swift_retain(v9);
    sub_100757E04(&_mh_execute_header, (uint64_t)"pushUpdatesToCommandController(_:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLBoardRealTimeChangeCoordinator.swift", 107, 2, 697, "expected nil value, but non-nil found", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"pushUpdatesToCommandController(_:)", 34, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLBoardRealTimeChangeCoordinator.swift", 107, 2u, 697, (uint64_t)"expected nil value, but non-nil found", 37, 2u);
    *(_QWORD *)&result = swift_release(v9).n128_u64[0];
  }
  if (*(_QWORD *)(a1 + 16))
  {
    v10 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = swift_allocObject(&unk_10129DA08, 24, 7);
    swift_weakInit(v11 + 16, v2);
    type metadata accessor for MainActor(0);
    swift_retain(v11);
    swift_bridgeObjectRetain(a1);
    v13 = static MainActor.shared.getter(v12);
    v14 = (_QWORD *)swift_allocObject(&unk_10129DA30, 48, 7);
    v14[2] = v13;
    v14[3] = &protocol witness table for MainActor;
    v14[4] = v11;
    v14[5] = a1;
    swift_release(v11);
    v15 = sub_100521B98((uint64_t)v7, (uint64_t)&unk_10140C330, (uint64_t)v14);
    v16 = *(_QWORD *)(v2 + v8);
    *(_QWORD *)(v2 + v8) = v15;
    *(_QWORD *)&result = swift_release(v16).n128_u64[0];
  }
  return result;
}

uint64_t sub_100C6E1A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5[51] = a4;
  v5[52] = a5;
  v6 = type metadata accessor for CRLBoardItemDeltaChange(0);
  v5[53] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  v5[54] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (*(_QWORD *)(*(_QWORD *)(sub_1004B804C((uint64_t *)&unk_1013E1A50) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[55] = swift_task_alloc(v8);
  v5[56] = swift_task_alloc(v8);
  v9 = type metadata accessor for CRLBoardItemPeerSyncUpdate(0);
  v5[57] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v5[58] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[59] = swift_task_alloc(v11);
  v5[60] = swift_task_alloc(v11);
  v5[61] = swift_task_alloc(v11);
  v5[62] = swift_task_alloc(v11);
  v5[63] = swift_task_alloc(v11);
  v12 = sub_1004B804C(&qword_1013E01F0);
  v5[64] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for MainActor(0);
  v5[65] = static MainActor.shared.getter(v13);
  v14 = dispatch thunk of Actor.unownedExecutor.getter(v13, &protocol witness table for MainActor);
  v5[66] = v14;
  v5[67] = v15;
  return swift_task_switch(sub_100C6E308, v14, v15);
}

uint64_t sub_100C6E308()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  int64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  double *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  double *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  double *v44;
  uint64_t v45;
  uint64_t (*v46)();
  uint64_t v47;
  id v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  _QWORD *v67;
  char *v68;
  char *v69;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v71;
  unint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  int64_t v89;
  uint64_t v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  id v98;
  void *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  __n128 v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t inited;
  uint64_t v124;
  _QWORD *v125;
  __int128 v126;
  __int128 v127;
  uint64_t v128;

  v1 = *(_QWORD *)(v0 + 408) + 16;
  swift_beginAccess(v1, v0 + 272, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  *(_QWORD *)(v0 + 544) = Strong;
  if (Strong)
  {
    v3 = Strong;
    v4 = swift_unknownObjectWeakLoadStrong(Strong + 112);
    *(_QWORD *)(v0 + 552) = v4;
    if (v4)
    {
      v5 = v4;
      *(_QWORD *)(v0 + 376) = _swiftEmptyArrayStorage;
      *(_QWORD *)(v0 + 400) = _swiftEmptyArrayStorage;
      v6 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform33CRLBoardRealTimeChangeCoordinator_suspendResumeCoordinatorState);
      v7 = *(_QWORD *)(v6 + 48);
      if ((*(_BYTE *)(v6 + 40) & 1) != 0)
      {
        if (v7 <= 0)
        {
LABEL_29:
          v45 = *(_QWORD *)(v0 + 416);
          swift_release(*(_QWORD *)(v0 + 520));
          *(_QWORD *)(v0 + 400) = v45;
          swift_bridgeObjectRetain(v45);
          goto LABEL_34;
        }
      }
      else if (v7 <= 0)
      {
        swift_beginAccess(v6 + 72, v0 + 200, 0, 0);
        if (!*(_QWORD *)(*(_QWORD *)(v6 + 72) + 16))
          goto LABEL_29;
      }
      v14 = *(_QWORD *)(v5 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_suspendResumeCoordinator);
      if (!v14)
      {
        __break(1u);
        JUMPOUT(0x100C6F478);
      }
      *(_QWORD *)(v0 + 560) = *(_QWORD *)(v14 + 32);
      if (*(_BYTE *)(v14 + 40) == 1)
      {
        if (qword_1013DD888 != -1)
          swift_once(&qword_1013DD888, sub_100A05DE4);
        v15 = *(_QWORD *)(v0 + 416);
        swift_beginAccess(&static OS_os_log.realTimeSync, v0 + 320, 0, 0);
        v16 = (void *)static OS_os_log.realTimeSync;
        v17 = sub_1004B804C((uint64_t *)&unk_1013E0180);
        inited = swift_initStackObject(v17, v0 + 16);
        *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
        v18 = *(_QWORD *)(v15 + 16);
        if (v18)
        {
          v19 = v16;
          v20 = *(_QWORD *)(v0 + 464);
          v21 = *(_QWORD *)(v0 + 416);
          v22 = v19;
          sub_1006006EC(0, v18, 0);
          v23 = v21 + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
          v24 = *(_QWORD *)(v0 + 496);
          v25 = *(_QWORD *)(v0 + 504);
          v26 = *(_QWORD *)(v0 + 456);
          sub_1004B8460(v23, v25, type metadata accessor for CRLBoardItemPeerSyncUpdate);
          sub_1004B8460(v25, v24, type metadata accessor for CRLBoardItemPeerSyncUpdate);
          v27 = (char *)&loc_100C6E614
              + *((int *)qword_100C6F490 + swift_getEnumCaseMultiPayload(v24, v26));
          __asm { BR              X9 }
        }
        v48 = v16;
        v49 = v16;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(_QWORD *)(v0 + 392) = _swiftEmptyArrayStorage;
        v50 = sub_1004B804C((uint64_t *)&unk_1013E4970);
        v51 = sub_1004CBA30((unint64_t *)&qword_1013DFC40, (uint64_t *)&unk_1013E4970, (uint64_t)&protocol conformance descriptor for [A]);
        v52 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v50, v51);
        v54 = v53;
        swift_bridgeObjectRelease();
        *(_QWORD *)(inited + 56) = &type metadata for String;
        *(_QWORD *)(inited + 64) = sub_1004CFC2C();
        *(_QWORD *)(inited + 32) = v52;
        *(_QWORD *)(inited + 40) = v54;
        v56 = static os_log_type_t.default.getter(v55);
        sub_100A06EBC((uint64_t)v49, &_mh_execute_header, v56, "isIncomingSuspended, updates enqueued: %@", 41, 2, inited);
        swift_setDeallocating(inited);
        v57 = *(_QWORD *)(inited + 16);
        v58 = sub_1004B804C(&qword_1013E0190);
        swift_arrayDestroy(inited + 32, v57, v58);

        v46 = sub_100C6F4A8;
        v47 = v3;
      }
      else
      {
        v124 = v3;
        v28 = *(_QWORD *)(v0 + 416);
        swift_retain(v14);
        v29 = sub_100C73468(v28, v14);
        v31 = v30;
        swift_release(v14);
        sub_10061FE80((uint64_t)v29);
        sub_10061FE80(v31);
        v32 = *(_QWORD *)(v0 + 376);
        v33 = *(_QWORD *)(v32 + 16);
        if (!v33)
        {
          swift_release(*(_QWORD *)(v0 + 520));
          v45 = *(_QWORD *)(v0 + 400);
LABEL_34:
          v60 = *(void **)(v0 + 552);
          v61 = *(_QWORD *)(v0 + 544);
          if (!*(_QWORD *)(v45 + 16))
          {
            v81 = *(_QWORD *)(v0 + 512);
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            v82 = type metadata accessor for TaskPriority(0);
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 56))(v81, 1, 1, v82);
            v83 = swift_allocObject(&unk_10129DAD0, 41, 7);
            *(_QWORD *)(v83 + 16) = 0;
            *(_QWORD *)(v83 + 24) = 0;
            *(_QWORD *)(v83 + 32) = v61;
            *(_BYTE *)(v83 + 40) = 0;
            swift_retain(v61);
            v84 = sub_1009880C4(v81, (uint64_t)&unk_10140C358, v83);
            swift_release(v84);
            v80 = v81;
            goto LABEL_45;
          }
          swift_bridgeObjectRetain(v45);
          v63 = sub_100C6B12C(v62, (uint64_t)v60);
          swift_bridgeObjectRelease();
          if (!v63)
          {
            if (qword_1013DD888 != -1)
              swift_once(&qword_1013DD888, sub_100A05DE4);
            swift_beginAccess(&static OS_os_log.realTimeSync, v0 + 224, 0, 0);
            v85 = (void *)static OS_os_log.realTimeSync;
            v86 = sub_1004B804C((uint64_t *)&unk_1013E0180);
            v87 = swift_initStackObject(v86, v0 + 88);
            *(_OWORD *)(v87 + 16) = xmmword_100EF5E40;
            v125 = (_QWORD *)v87;
            v88 = v87 + 32;
            v89 = *(_QWORD *)(v45 + 16);
            if (v89)
            {
              v90 = *(_QWORD *)(v0 + 464);
              swift_bridgeObjectRetain(v45);
              v91 = v85;
              sub_1006006EC(0, v89, 0);
              v92 = v45 + ((*(unsigned __int8 *)(v90 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80));
              v93 = *(_QWORD *)(v0 + 472);
              v94 = *(_QWORD *)(v0 + 480);
              v95 = *(_QWORD *)(v0 + 456);
              sub_1004B8460(v92, v94, type metadata accessor for CRLBoardItemPeerSyncUpdate);
              sub_1004B8460(v94, v93, type metadata accessor for CRLBoardItemPeerSyncUpdate);
              v96 = (char *)&loc_100C6EF28
                  + *((int *)qword_100C6F478 + swift_getEnumCaseMultiPayload(v93, v95));
              __asm { BR              X9 }
            }
            v98 = v85;
            v99 = *(void **)(v0 + 552);
            v100 = *(_QWORD *)(v0 + 544);
            v101 = *(_QWORD *)(v0 + 512);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            *(_QWORD *)(v0 + 384) = _swiftEmptyArrayStorage;
            v102 = sub_1004B804C((uint64_t *)&unk_1013E4970);
            v103 = sub_1004CBA30((unint64_t *)&qword_1013DFC40, (uint64_t *)&unk_1013E4970, (uint64_t)&protocol conformance descriptor for [A]);
            v104 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v102, v103);
            v106 = v105;
            swift_bridgeObjectRelease();
            v125[7] = &type metadata for String;
            v125[8] = sub_1004CFC2C();
            v125[4] = v104;
            v125[5] = v106;
            v108 = static os_log_type_t.default.getter(v107);
            sub_100A06EBC((uint64_t)v85, &_mh_execute_header, v108, "Processed into no command, updates skipped. Will be applied later: %@", 69, 2, (uint64_t)v125);

            swift_setDeallocating(v125);
            v109 = v125[2];
            v110 = sub_1004B804C(&qword_1013E0190);
            swift_arrayDestroy(v88, v109, v110);

            v111 = type metadata accessor for TaskPriority(0);
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v111 - 8) + 56))(v101, 1, 1, v111);
            v112 = swift_allocObject(&unk_10129DA80, 41, 7);
            *(_QWORD *)(v112 + 16) = 0;
            *(_QWORD *)(v112 + 24) = 0;
            *(_QWORD *)(v112 + 32) = v100;
            *(_BYTE *)(v112 + 40) = 0;
            swift_retain(v100);
            v113 = sub_1009880C4(v101, (uint64_t)&unk_10140C348, v112);
            swift_release(v113);
            sub_1004CB800(v101, &qword_1013E01F0);
            v8 = v100;
            goto LABEL_54;
          }
          v64 = *(_QWORD *)(v0 + 552);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v65 = *(char **)(v64 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_commandController);
          v66 = &v65[OBJC_IVAR____TtC8Freeform20CRLCommandController_nonUserCommandQueue];
          swift_beginAccess(&v65[OBJC_IVAR____TtC8Freeform20CRLCommandController_nonUserCommandQueue], v0 + 296, 33, 0);
          v67 = *(_QWORD **)v66;
          v68 = v65;
          v69 = v63;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(_QWORD *)v66 = v67;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            v67 = sub_100D0F980(0, v67[2] + 1, 1, v67);
            *(_QWORD *)v66 = v67;
          }
          v72 = v67[2];
          v71 = v67[3];
          if (v72 >= v71 >> 1)
          {
            v67 = sub_100D0F980((_QWORD *)(v71 > 1), v72 + 1, 1, v67);
            *(_QWORD *)v66 = v67;
          }
          v67[2] = v72 + 1;
          v73 = &v67[2 * v72];
          v73[4] = v69;
          *((_BYTE *)v73 + 40) = 3;
          swift_endAccess(v0 + 296);
          sub_1006A8ED4();

          v74 = type metadata accessor for CRLCommandApplyPeerSyncUpdates();
          if (swift_dynamicCastClass(v69, v74))
          {
            v75 = 17;
            if (qword_1013DCFC8 == -1)
              goto LABEL_42;
          }
          else
          {
            v97 = type metadata accessor for CRLCommandApplyBoardAuxiliaryPeerSyncUpdates();
            if (!swift_dynamicCastClass(v69, v97))
              goto LABEL_43;
            v75 = 19;
            if (qword_1013DCFC8 == -1)
            {
LABEL_42:
              CRLAnalyticsOSSignpostManager.endSignpostInterval(for:)(v75, 1);
LABEL_43:
              v61 = *(_QWORD *)(v0 + 544);
              v76 = *(_QWORD *)(v0 + 512);

              v77 = type metadata accessor for TaskPriority(0);
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 56))(v76, 1, 1, v77);
              v78 = swift_allocObject(&unk_10129DAA8, 41, 7);
              *(_QWORD *)(v78 + 16) = 0;
              *(_QWORD *)(v78 + 24) = 0;
              *(_QWORD *)(v78 + 32) = v61;
              *(_BYTE *)(v78 + 40) = 1;
              swift_retain(v61);
              v79 = sub_1009880C4(v76, (uint64_t)&unk_10140C350, v78);
              swift_release(v79);
              v80 = v76;
LABEL_45:
              sub_1004CB800(v80, &qword_1013E01F0);
              v8 = v61;
              goto LABEL_54;
            }
          }
          swift_once(&qword_1013DCFC8, sub_100709C68);
          goto LABEL_42;
        }
        v34 = (__int128 *)(v0 + 160);
        v35 = *(_QWORD *)(v0 + 464);
        v36 = v32 + ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80));
        v37 = *(_QWORD *)(v35 + 72);
        swift_bridgeObjectRetain(v32);
        v38 = _swiftEmptyArrayStorage;
        do
        {
          sub_1004B8460(v36, *(_QWORD *)(v0 + 488), type metadata accessor for CRLBoardItemPeerSyncUpdate);
          v39 = sub_100C822A4();
          if (v39)
          {
            *(_QWORD *)(v0 + 368) = v39;
            v40 = sub_1004B804C(&qword_10140C360);
            v41 = sub_1004CBA30(&qword_10140C368, &qword_10140C360, (uint64_t)&protocol conformance descriptor for Set<A>);
            AnyHashable.init<A>(_:)(v0 + 368, v40, v41);
          }
          else
          {
            *(_QWORD *)(v0 + 192) = 0;
            *v34 = 0u;
            *(_OWORD *)(v0 + 176) = 0u;
          }
          sub_1004B84A4(*(_QWORD *)(v0 + 488), type metadata accessor for CRLBoardItemPeerSyncUpdate);
          if (*(_QWORD *)(v0 + 184))
          {
            v126 = *v34;
            v127 = *(_OWORD *)(v0 + 176);
            v128 = *(_QWORD *)(v0 + 192);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v38 = sub_100D11DE4(0, *((_QWORD *)v38 + 2) + 1, 1, v38);
            v43 = *((_QWORD *)v38 + 2);
            v42 = *((_QWORD *)v38 + 3);
            if (v43 >= v42 >> 1)
              v38 = sub_100D11DE4((double *)(v42 > 1), v43 + 1, 1, v38);
            *((_QWORD *)v38 + 2) = v43 + 1;
            v44 = &v38[5 * v43];
            *((_QWORD *)v44 + 8) = v128;
            *((_OWORD *)v44 + 2) = v126;
            *((_OWORD *)v44 + 3) = v127;
          }
          else
          {
            sub_1004CB800(v0 + 160, &qword_1013E7C20);
          }
          v36 += v37;
          --v33;
        }
        while (v33);
        swift_bridgeObjectRelease();
        *(_QWORD *)(v0 + 568) = sub_100AF8EA4((uint64_t)v38);
        swift_bridgeObjectRelease();
        v46 = sub_100C6F68C;
        v47 = v124;
      }
      return swift_task_switch(v46, v47, 0);
    }
    v9 = *(_QWORD *)(v0 + 520);
    v10 = *(_QWORD *)(v0 + 512);
    sub_100757E04(&_mh_execute_header, (uint64_t)"pushUpdatesToCommandController(_:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLBoardRealTimeChangeCoordinator.swift", 107, 2, 709, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"pushUpdatesToCommandController(_:)", 34, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLBoardRealTimeChangeCoordinator.swift", 107, 2u, 709, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    swift_release(v9);
    v11 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
    v12 = swift_allocObject(&unk_10129DA58, 41, 7);
    *(_QWORD *)(v12 + 16) = 0;
    *(_QWORD *)(v12 + 24) = 0;
    *(_QWORD *)(v12 + 32) = v3;
    *(_BYTE *)(v12 + 40) = 0;
    swift_retain(v3);
    v13 = sub_1009880C4(v10, (uint64_t)&unk_10140C340, v12);
    swift_release(v13);
    sub_1004CB800(v10, &qword_1013E01F0);
    v8 = v3;
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 520);
  }
LABEL_54:
  swift_release(v8);
  v114 = *(_QWORD *)(v0 + 504);
  v116 = *(_QWORD *)(v0 + 488);
  v115 = *(_QWORD *)(v0 + 496);
  v118 = *(_QWORD *)(v0 + 472);
  v117 = *(_QWORD *)(v0 + 480);
  v120 = *(_QWORD *)(v0 + 440);
  v119 = *(_QWORD *)(v0 + 448);
  v122 = *(_QWORD *)(v0 + 424);
  v121 = *(_QWORD *)(v0 + 432);
  swift_task_dealloc(*(_QWORD *)(v0 + 512));
  swift_task_dealloc(v114);
  swift_task_dealloc(v115);
  swift_task_dealloc(v116);
  swift_task_dealloc(v117);
  swift_task_dealloc(v118);
  swift_task_dealloc(v119);
  swift_task_dealloc(v120);
  swift_task_dealloc(v121);
  swift_task_dealloc(v122);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100C6F4A8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[68];
  v2 = v0[52];
  *(_BYTE *)(v1 + OBJC_IVAR____TtC8Freeform33CRLBoardRealTimeChangeCoordinator_incomingSuspendedCache) = 1;
  swift_beginAccess(v1 + OBJC_IVAR____TtC8Freeform33CRLBoardRealTimeChangeCoordinator_queuedIncomingUpdates, v0 + 31, 33, 0);
  swift_bridgeObjectRetain(v2);
  sub_100CFFCB8(0, 0, v2);
  swift_endAccess(v0 + 31);
  swift_bridgeObjectRelease();
  return swift_task_switch(sub_100C6F548, v0[66], v0[67]);
}

uint64_t sub_100C6F548()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 544);
  v2 = *(_QWORD *)(v0 + 520);
  v3 = *(_QWORD *)(v0 + 512);

  swift_release(v2);
  v4 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v5 = swift_allocObject(&unk_10129DAF8, 41, 7);
  *(_QWORD *)(v5 + 16) = 0;
  *(_QWORD *)(v5 + 24) = 0;
  *(_QWORD *)(v5 + 32) = v1;
  *(_BYTE *)(v5 + 40) = 0;
  swift_retain(v1);
  v6 = sub_1009880C4(v3, (uint64_t)&unk_10140C370, v5);
  swift_release(v6);
  sub_1004CB800(v3, &qword_1013E01F0);
  swift_release(v1);
  v7 = *(_QWORD *)(v0 + 504);
  v9 = *(_QWORD *)(v0 + 488);
  v8 = *(_QWORD *)(v0 + 496);
  v11 = *(_QWORD *)(v0 + 472);
  v10 = *(_QWORD *)(v0 + 480);
  v13 = *(_QWORD *)(v0 + 440);
  v12 = *(_QWORD *)(v0 + 448);
  v15 = *(_QWORD *)(v0 + 424);
  v14 = *(_QWORD *)(v0 + 432);
  swift_task_dealloc(*(_QWORD *)(v0 + 512));
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100C6F68C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[71];
  v2 = v0[70];
  v3 = v0[68] + OBJC_IVAR____TtC8Freeform33CRLBoardRealTimeChangeCoordinator_incomingSuspendedCache;
  *(_BYTE *)v3 = 1;
  *(_QWORD *)(v3 + 8) = v1;
  swift_bridgeObjectRetain(v1);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v3 + 16) = v2;
  *(_BYTE *)(v3 + 24) = 0;
  swift_bridgeObjectRelease();
  return swift_task_switch(sub_100C6F710, v0[66], v0[67]);
}

uint64_t sub_100C6F710()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[68];
  v2 = v0[47];
  v0[72] = v2;
  swift_bridgeObjectRetain(v2);
  return swift_task_switch(sub_100C6F754, v1, 0);
}

uint64_t sub_100C6F754()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[72];
  swift_beginAccess(v0[68] + OBJC_IVAR____TtC8Freeform33CRLBoardRealTimeChangeCoordinator_queuedIncomingUpdates, v0 + 43, 33, 0);
  swift_bridgeObjectRetain(v1);
  sub_100CFFCB8(0, 0, v1);
  swift_endAccess(v0 + 43);
  swift_bridgeObjectRelease_n(v1, 2);
  return swift_task_switch(sub_100C6F7E8, v0[66], v0[67]);
}

uint64_t sub_100C6F7E8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  _QWORD *v9;
  char *v10;
  char *v11;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t inited;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v59;

  swift_release(*(_QWORD *)(v0 + 520));
  v1 = *(_QWORD *)(v0 + 400);
  v2 = *(void **)(v0 + 552);
  v3 = *(_QWORD *)(v0 + 544);
  if (!*(_QWORD *)(v1 + 16))
  {
    v18 = *(_QWORD *)(v0 + 512);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    v22 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v18, 1, 1, v22);
    v20 = swift_allocObject(&unk_10129DAD0, 41, 7);
    *(_QWORD *)(v20 + 16) = 0;
    *(_QWORD *)(v20 + 24) = 0;
    *(_QWORD *)(v20 + 32) = v3;
    *(_BYTE *)(v20 + 40) = 0;
    swift_retain(v3);
    v21 = &unk_10140C358;
    goto LABEL_20;
  }
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 400));
  v5 = sub_100C6B12C(v4, (uint64_t)v2);
  swift_bridgeObjectRelease();
  if (v5)
  {
    v6 = *(_QWORD *)(v0 + 552);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7 = *(char **)(v6 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_commandController);
    v8 = &v7[OBJC_IVAR____TtC8Freeform20CRLCommandController_nonUserCommandQueue];
    swift_beginAccess(&v7[OBJC_IVAR____TtC8Freeform20CRLCommandController_nonUserCommandQueue], v0 + 296, 33, 0);
    v9 = *(_QWORD **)v8;
    v10 = v7;
    v11 = v5;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)v8 = v9;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v9 = sub_100D0F980(0, v9[2] + 1, 1, v9);
      *(_QWORD *)v8 = v9;
    }
    v14 = v9[2];
    v13 = v9[3];
    if (v14 >= v13 >> 1)
    {
      v9 = sub_100D0F980((_QWORD *)(v13 > 1), v14 + 1, 1, v9);
      *(_QWORD *)v8 = v9;
    }
    v9[2] = v14 + 1;
    v15 = &v9[2 * v14];
    v15[4] = v11;
    *((_BYTE *)v15 + 40) = 3;
    swift_endAccess(v0 + 296);
    sub_1006A8ED4();

    v16 = type metadata accessor for CRLCommandApplyPeerSyncUpdates();
    if (swift_dynamicCastClass(v11, v16))
    {
      v17 = 17;
      if (qword_1013DCFC8 == -1)
        goto LABEL_9;
    }
    else
    {
      v35 = type metadata accessor for CRLCommandApplyBoardAuxiliaryPeerSyncUpdates();
      if (!swift_dynamicCastClass(v11, v35))
        goto LABEL_10;
      v17 = 19;
      if (qword_1013DCFC8 == -1)
      {
LABEL_9:
        CRLAnalyticsOSSignpostManager.endSignpostInterval(for:)(v17, 1);
LABEL_10:
        v3 = *(_QWORD *)(v0 + 544);
        v18 = *(_QWORD *)(v0 + 512);

        v19 = type metadata accessor for TaskPriority(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
        v20 = swift_allocObject(&unk_10129DAA8, 41, 7);
        *(_QWORD *)(v20 + 16) = 0;
        *(_QWORD *)(v20 + 24) = 0;
        *(_QWORD *)(v20 + 32) = v3;
        *(_BYTE *)(v20 + 40) = 1;
        swift_retain(v3);
        v21 = &unk_10140C350;
        goto LABEL_20;
      }
    }
    swift_once(&qword_1013DCFC8, sub_100709C68);
    goto LABEL_9;
  }
  if (qword_1013DD888 != -1)
    swift_once(&qword_1013DD888, sub_100A05DE4);
  swift_beginAccess(&static OS_os_log.realTimeSync, v0 + 224, 0, 0);
  v23 = (void *)static OS_os_log.realTimeSync;
  v24 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v24, v0 + 88);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v59 = (_QWORD *)inited;
  v26 = inited + 32;
  v27 = *(_QWORD *)(v1 + 16);
  if (v27)
  {
    v28 = *(_QWORD *)(v0 + 464);
    swift_bridgeObjectRetain(v1);
    v29 = v23;
    sub_1006006EC(0, v27, 0);
    v30 = v1 + ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80));
    v31 = *(_QWORD *)(v0 + 472);
    v32 = *(_QWORD *)(v0 + 480);
    v33 = *(_QWORD *)(v0 + 456);
    sub_1004B8460(v30, v32, type metadata accessor for CRLBoardItemPeerSyncUpdate);
    sub_1004B8460(v32, v31, type metadata accessor for CRLBoardItemPeerSyncUpdate);
    v34 = (char *)&loc_100C6FB40 + 4 * byte_100F2FFB6[swift_getEnumCaseMultiPayload(v31, v33)];
    __asm { BR              X9 }
  }
  v36 = v23;
  v37 = *(void **)(v0 + 552);
  v3 = *(_QWORD *)(v0 + 544);
  v18 = *(_QWORD *)(v0 + 512);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 384) = _swiftEmptyArrayStorage;
  v38 = sub_1004B804C((uint64_t *)&unk_1013E4970);
  v39 = sub_1004CBA30((unint64_t *)&qword_1013DFC40, (uint64_t *)&unk_1013E4970, (uint64_t)&protocol conformance descriptor for [A]);
  v40 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v38, v39);
  v42 = v41;
  swift_bridgeObjectRelease();
  v59[7] = &type metadata for String;
  v59[8] = sub_1004CFC2C();
  v59[4] = v40;
  v59[5] = v42;
  v44 = static os_log_type_t.default.getter(v43);
  sub_100A06EBC((uint64_t)v23, &_mh_execute_header, v44, "Processed into no command, updates skipped. Will be applied later: %@", 69, 2, (uint64_t)v59);

  swift_setDeallocating(v59);
  v45 = v59[2];
  v46 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v26, v45, v46);

  v47 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v18, 1, 1, v47);
  v20 = swift_allocObject(&unk_10129DA80, 41, 7);
  *(_QWORD *)(v20 + 16) = 0;
  *(_QWORD *)(v20 + 24) = 0;
  *(_QWORD *)(v20 + 32) = v3;
  *(_BYTE *)(v20 + 40) = 0;
  swift_retain(v3);
  v21 = &unk_10140C348;
LABEL_20:
  v48 = sub_1009880C4(v18, (uint64_t)v21, v20);
  swift_release(v48);
  sub_1004CB800(v18, &qword_1013E01F0);
  swift_release(v3);
  v49 = *(_QWORD *)(v0 + 504);
  v51 = *(_QWORD *)(v0 + 488);
  v50 = *(_QWORD *)(v0 + 496);
  v53 = *(_QWORD *)(v0 + 472);
  v52 = *(_QWORD *)(v0 + 480);
  v55 = *(_QWORD *)(v0 + 440);
  v54 = *(_QWORD *)(v0 + 448);
  v57 = *(_QWORD *)(v0 + 424);
  v56 = *(_QWORD *)(v0 + 432);
  swift_task_dealloc(*(_QWORD *)(v0 + 512));
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100C70064()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 112);

  swift_release(*(_QWORD *)(v0 + 128));
  sub_1004B84A4(v0 + OBJC_IVAR____TtC8Freeform33CRLBoardRealTimeChangeCoordinator_globallyScopedBoardIdentifier, type metadata accessor for CRLGloballyScopedBoardIdentifier);
  swift_unknownObjectRelease(*(_QWORD *)(v0
                                       + OBJC_IVAR____TtC8Freeform33CRLBoardRealTimeChangeCoordinator_suspendResumeCoordinatorState));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform33CRLBoardRealTimeChangeCoordinator_processor));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release(*(_QWORD *)(v0
                          + OBJC_IVAR____TtC8Freeform33CRLBoardRealTimeChangeCoordinator_pushCommandToCommandControllerTask));
  swift_defaultActor_destroy(v0);
  return v0;
}

uint64_t sub_100C70104()
{
  uint64_t v0;

  sub_100C70064();
  return swift_defaultActor_deallocate(v0);
}

uint64_t sub_100C7011C()
{
  return type metadata accessor for CRLBoardRealTimeChangeCoordinator(0);
}

uint64_t type metadata accessor for CRLBoardRealTimeChangeCoordinator(uint64_t a1)
{
  return sub_1004BD408(a1, (uint64_t *)&unk_10140C068, (uint64_t)&nominal type descriptor for CRLBoardRealTimeChangeCoordinator);
}

uint64_t sub_100C70138(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[11];

  v4[1] = &unk_100F30070;
  v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[3] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[4] = &unk_100F30088;
  result = type metadata accessor for CRLBoardIdentifierStorage(319);
  if (v3 <= 0x3F)
  {
    v4[5] = *(_QWORD *)(result - 8) + 64;
    v4[6] = &unk_100F300A0;
    v4[7] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[8] = &unk_100F300B8;
    v4[9] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[10] = &unk_100F300D0;
    return swift_updateClassMetadata2(a1, 256, 11, v4, a1 + 80);
  }
  return result;
}

uint64_t sub_100C70208(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;

  v2[158] = v1;
  v2[157] = a1;
  v3 = type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecord(0);
  v2[159] = v3;
  v4 = (*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[160] = swift_task_alloc(v4);
  v2[161] = swift_task_alloc(v4);
  v5 = type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecordLegacy(0);
  v2[162] = v5;
  v6 = (*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[163] = swift_task_alloc(v6);
  v2[164] = swift_task_alloc(v6);
  v7 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  v2[165] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UUID(0);
  v2[166] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[167] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[168] = swift_task_alloc(v10);
  v2[169] = swift_task_alloc(v10);
  v11 = type metadata accessor for CRLBoardItemDeltaChange(0);
  v2[170] = v11;
  v2[171] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for CRLBoardItemPeerSyncUpdate(0);
  v2[172] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v2[173] = v13;
  v14 = (*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[174] = swift_task_alloc(v14);
  v2[175] = swift_task_alloc(v14);
  v2[176] = swift_task_alloc(v14);
  v2[177] = swift_task_alloc(v14);
  v2[178] = swift_task_alloc(v14);
  v2[179] = swift_task_alloc(v14);
  v15 = type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  v2[180] = v15;
  v16 = (*(_QWORD *)(*(_QWORD *)(v15 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[181] = swift_task_alloc(v16);
  v2[182] = swift_task_alloc(v16);
  v2[183] = swift_task_alloc(v16);
  v2[184] = swift_task_alloc(v16);
  v2[185] = swift_task_alloc(v16);
  v2[186] = swift_task_alloc(v16);
  v2[187] = swift_task_alloc(v16);
  return swift_task_switch(sub_100C70404, v1, 0);
}

uint64_t sub_100C70404()
{
  uint64_t *v0;
  uint64_t inited;
  uint64_t v2;
  unint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  char v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  _BYTE *v84;
  uint64_t v85;
  uint64_t *v86;
  unint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t (*v95)(uint64_t);
  char v96;
  _QWORD *v97;
  _QWORD *v98;
  _QWORD *v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void *v106;
  uint64_t v107;
  uint64_t v108;
  id v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  __n128 v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  int v121;
  char v122;
  _BYTE *v123;
  uint64_t v124;
  uint64_t *v125;
  unint64_t v126;
  uint64_t v127;
  unint64_t v128;
  unint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  uint64_t v140;
  unint64_t v141;
  _QWORD *v142;
  uint64_t *v143;
  uint64_t *v144;
  unint64_t v145;
  unint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  void *v151;
  uint64_t v152;
  uint64_t v153;
  id v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  unint64_t v158;
  uint64_t v159;
  uint64_t v160;
  __n128 v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  void *v166;
  uint64_t v167;
  id v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  unint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  __n128 v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  void (*v187)(uint64_t, uint64_t, uint64_t);
  unint64_t v188;
  unint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  void *v194;
  uint64_t v195;
  uint64_t v196;
  id v197;
  uint64_t v198;
  uint64_t v199;
  unint64_t v200;
  uint64_t v201;
  uint64_t v202;
  __n128 v203;
  uint64_t v204;
  uint64_t v205;
  __n128 v206;
  _QWORD *v207;
  uint64_t *v208;
  uint64_t v209;
  void *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  __n128 v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t (*v220)(uint64_t);
  _QWORD *v221;
  void *v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  _QWORD *v226;
  uint64_t DynamicType;
  id v228;
  uint64_t v229;
  uint64_t v230;
  __n128 v231;
  uint64_t v232;
  uint64_t v233;
  _QWORD *v234;
  uint64_t v235;
  uint64_t v236;
  void *v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  unint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  __n128 v246;
  uint64_t v247;
  uint64_t v248;
  void *v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  __n128 v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t *v278;
  uint64_t v279;
  uint64_t *v280;
  uint64_t *v281;
  uint64_t *v282;
  uint64_t *v283;
  uint64_t *v284;
  uint64_t v285;
  uint64_t *v286;
  uint64_t *v287;
  uint64_t v288;
  uint64_t *v289;
  uint64_t *v290;
  int *v291;
  uint64_t *v292;
  uint64_t *v293;
  uint64_t *v294;
  uint64_t *v295;
  uint64_t v296;
  uint64_t *v297;
  uint64_t *v298;
  uint64_t v299;
  uint64_t *v300;
  uint64_t *v301;
  uint64_t *v302;
  char v303;
  uint64_t v304;
  unint64_t v305;
  uint64_t v306;
  uint64_t v307;
  _QWORD *v308;
  uint64_t *v309;
  uint64_t v310;
  uint64_t *v311;
  uint64_t v312;
  char v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  unint64_t v317;
  uint64_t v318;
  _QWORD *v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  _QWORD *v323;
  uint64_t v324;
  uint64_t *v325;
  uint64_t v326;
  unint64_t v327;
  uint64_t v328;
  uint64_t v329;
  unint64_t v330;
  uint64_t v331;
  uint64_t *v332;

  v2 = v0[157];
  v3 = *(_QWORD *)(v2 + 16);
  if (!v3)
  {
    v308 = _swiftEmptyArrayStorage;
    goto LABEL_131;
  }
  v282 = v0 + 2;
  v298 = v0 + 21;
  v294 = v0 + 49;
  v295 = v0 + 35;
  v284 = v0 + 63;
  v289 = v0 + 86;
  v290 = v0 + 77;
  v311 = v0 + 95;
  v4 = v0 + 113;
  v5 = v0 + 118;
  v287 = v0 + 123;
  v288 = v0[175];
  v279 = v0[174];
  v280 = v0 + 104;
  v304 = v0[173];
  v281 = v0 + 126;
  v293 = v0 + 129;
  v309 = v0 + 132;
  v291 = (int *)v0[170];
  v292 = v0 + 135;
  v299 = v0[167];
  v278 = v0 + 138;
  v297 = v0 + 141;
  v286 = v0 + 144;
  v301 = v0 + 147;
  v283 = v0 + 150;
  v300 = v0 + 153;
  v321 = v0[158]
       + OBJC_IVAR____TtCC8Freeform33CRLBoardRealTimeChangeCoordinator26CRLRealTimeChangeProcessor_globallyScopedBoardIdentifier;
  v302 = v0 + 154;
  v296 = v0[162];
  v325 = v0 + 155;
  v285 = v0[159];
  swift_bridgeObjectRetain(v2);
  v303 = 0;
  v313 = 0;
  v6 = 0;
  v305 = v3 - 1;
  v306 = v7 + 32;
  v308 = _swiftEmptyArrayStorage;
  v317 = v3;
  v319 = v0 + 113;
  v332 = v0;
  v323 = v0 + 118;
  while (2)
  {
    if (v6 <= v3)
      v8 = v3;
    else
      v8 = v6;
    v327 = v8;
    v9 = v306 + 40 * v6;
    v10 = v6;
    while (1)
    {
      if (v327 == v10)
      {
        __break(1u);
LABEL_136:
        swift_once(&qword_1013DCFC8, sub_100709C68);
LABEL_126:
        CRLAnalyticsOSSignpostManager.beginSignpostInterval(for:with:)(17, 1, (uint64_t)_swiftEmptyArrayStorage);
        if ((inited & 1) == 0)
          goto LABEL_131;
        goto LABEL_127;
      }
      sub_1004E90B0(v9, (uint64_t)v5);
      sub_1004E90B0((uint64_t)v5, (uint64_t)v4);
      v11 = sub_1004B804C(&qword_10140BB50);
      v12 = type metadata accessor for CRLBoardRealTimeChangeRecord(0);
      if (!swift_dynamicCast(v325, v4, v11, v12, 0))
      {
        v39 = type metadata accessor for CRLBoardItemRealTimeChangeRecord(0);
        if (swift_dynamicCast(v302, v4, v11, v39, 0))
        {
          v0 = v332;
          v40 = v332[184];
          v41 = v332[183];
          v42 = v332[154];
          v43 = v42 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_boardIdentifier;
          LOBYTE(inited) = static UUID.== infix(_:_:)(v42 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_boardIdentifier);
          sub_1004B8460(v43, v40, type metadata accessor for CRLGloballyScopedBoardIdentifier);
          sub_1004B8460(v321, v41, type metadata accessor for CRLGloballyScopedBoardIdentifier);
          v44 = v332[184];
          v45 = v332[183];
          if ((inited & 1) != 0)
          {
            v46 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
            v47 = *(_QWORD *)(v44 + v46);
            v48 = *(_QWORD *)(v44 + v46 + 8);
            v49 = (_QWORD *)(v45 + v46);
            v50 = v49[1];
            if (v47 == *v49 && v48 == v50)
            {
              sub_1004B84A4(v45, type metadata accessor for CRLGloballyScopedBoardIdentifier);
              sub_1004B84A4(v44, type metadata accessor for CRLGloballyScopedBoardIdentifier);
              goto LABEL_58;
            }
            v96 = _stringCompareWithSmolCheck(_:_:expecting:)(v47, v48, *v49, v50, 0);
            sub_1004B84A4(v45, type metadata accessor for CRLGloballyScopedBoardIdentifier);
            sub_1004B84A4(v44, type metadata accessor for CRLGloballyScopedBoardIdentifier);
            if ((v96 & 1) != 0)
            {
LABEL_58:
              if (qword_1013DCFC8 != -1)
                swift_once(&qword_1013DCFC8, sub_100709C68);
              CRLAnalyticsOSSignpostManager.beginSignpostInterval(for:with:)(18, 1, (uint64_t)_swiftEmptyArrayStorage);
              v275 = v43;
              v276 = v42;
              if (*(_BYTE *)(v42 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_itemCreated) == 1)
              {
                v97 = sub_100C72A20(v42);
                if (!v97)
                {
                  if (qword_1013DD888 != -1)
                    swift_once(&qword_1013DD888, sub_100A05DE4);
                  v235 = v332[185];
                  v236 = v332[180];
                  swift_beginAccess(&static OS_os_log.realTimeSync, v281, 0, 0);
                  v237 = (void *)static OS_os_log.realTimeSync;
                  v238 = sub_1004B804C((uint64_t *)&unk_1013E0180);
                  inited = swift_initStackObject(v238, v282);
                  *(_OWORD *)(inited + 16) = xmmword_100EF5550;
                  sub_1004B8460(v43, v235, type metadata accessor for CRLGloballyScopedBoardIdentifier);
                  v168 = v237;
                  v239 = String.init<A>(describing:)(v235, v236);
                  v241 = v240;
                  *(_QWORD *)(inited + 56) = &type metadata for String;
                  v242 = sub_1004CFC2C();
                  *(_QWORD *)(inited + 64) = v242;
                  *(_QWORD *)(inited + 32) = v239;
                  *(_QWORD *)(inited + 40) = v241;
                  v173 = v276;
                  v243 = UUID.uuidString.getter(v242);
                  *(_QWORD *)(inited + 96) = &type metadata for String;
                  *(_QWORD *)(inited + 104) = v242;
                  *(_QWORD *)(inited + 72) = v243;
                  *(_QWORD *)(inited + 80) = v244;
                  v245 = *(_QWORD *)(v276 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_itemTypeValue);
                  *(_QWORD *)(inited + 136) = &type metadata for Int;
                  *(_QWORD *)(inited + 144) = &protocol witness table for Int;
                  *(_QWORD *)(inited + 112) = v245;
                  v247 = static os_log_type_t.default.getter(v246);
                  sub_100A06EBC((uint64_t)v168, &_mh_execute_header, v247, "Failed to decode a board item real-time change record. Board: %@, item uuid: %@, item type: %d", 94, 2, inited);
                  swift_setDeallocating(inited);
                  v178 = sub_1004B804C(&qword_1013E0190);
                  v179 = inited + 32;
                  v180 = 3;
                  goto LABEL_97;
                }
                v98 = v97;
                v99 = (_QWORD *)v332[178];
                v100 = v332[172];
                *v99 = v98;
                swift_storeEnumTagMultiPayload(v99, v100, 2);
                swift_retain(v98);
                if ((swift_isUniquelyReferenced_nonNull_native(v308) & 1) == 0)
                  v308 = (_QWORD *)sub_100D10734(0, v308[2] + 1, 1, (unint64_t)v308);
                v102 = v308[2];
                v101 = v308[3];
                if (v102 >= v101 >> 1)
                  v308 = (_QWORD *)sub_100D10734(v101 > 1, v102 + 1, 1, (unint64_t)v308);
                v330 = v10;
                v103 = v332[178];
                v308[2] = v102 + 1;
                sub_1004B84E0(v103, (uint64_t)v308+ ((*(unsigned __int8 *)(v304 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v304 + 80))+ *(_QWORD *)(v304 + 72) * v102, type metadata accessor for CRLBoardItemPeerSyncUpdate);
                if (qword_1013DD888 != -1)
                  swift_once(&qword_1013DD888, sub_100A05DE4);
                v104 = v332[185];
                v105 = v332[180];
                swift_beginAccess(&static OS_os_log.realTimeSync, v283, 0, 0);
                v106 = (void *)static OS_os_log.realTimeSync;
                v107 = sub_1004B804C((uint64_t *)&unk_1013E0180);
                v108 = swift_initStackObject(v107, v284);
                *(_OWORD *)(v108 + 16) = xmmword_100EF5A10;
                sub_1004B8460(v43, v104, type metadata accessor for CRLGloballyScopedBoardIdentifier);
                v109 = v106;
                v110 = String.init<A>(describing:)(v104, v105);
                v112 = v111;
                *(_QWORD *)(v108 + 56) = &type metadata for String;
                v113 = sub_1004CFC2C();
                *(_QWORD *)(v108 + 64) = v113;
                *(_QWORD *)(v108 + 32) = v110;
                *(_QWORD *)(v108 + 40) = v112;
                v114 = UUID.uuidString.getter(v113);
                *(_QWORD *)(v108 + 96) = &type metadata for String;
                *(_QWORD *)(v108 + 104) = v113;
                *(_QWORD *)(v108 + 72) = v114;
                *(_QWORD *)(v108 + 80) = v115;
                v117 = static os_log_type_t.default.getter(v116);
                sub_100A06EBC((uint64_t)v109, &_mh_execute_header, v117, "Received real-time creation of board item. Board: %@, item: %@", 62, 2, v108);
                swift_setDeallocating(v108);
                v118 = sub_1004B804C(&qword_1013E0190);
                swift_arrayDestroy(v108 + 32, 2, v118);

                swift_release(v98);
              }
              else
              {
                v330 = v10;
                if (*(_QWORD *)(v42 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_commonCRDTData + 8) >> 60 != 15
                  || *(_QWORD *)(v42 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_specificCRDTData + 8) >> 60 != 15)
                {
                  sub_100757E04(&_mh_execute_header, (uint64_t)"applyChanges(_:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLBoardRealTimeChangeCoordinator.swift", 107, 2, 884, "Attempting to merge non-delta itemChange with CRL_REALTIMESYNC_SEND_DELTAS enabled", 82, 2u, (uint64_t)_swiftEmptyArrayStorage);
                  sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"applyChanges(_:)", 16, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLBoardRealTimeChangeCoordinator.swift", 107, 2u, 884, (uint64_t)"Attempting to merge non-delta itemChange with CRL_REALTIMESYNC_SEND_DELTAS enabled", 82, 2u);
                }
                v273 = v332[177];
                v274 = v332[172];
                v132 = v332[171];
                v133 = v332[169];
                v134 = v332[166];
                v135 = v332[165];
                v271 = v135;
                (*(void (**)(uint64_t))(v299 + 16))(v133);
                sub_1004CB7BC(v42 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_parentContainerUUID, v135, (uint64_t *)&unk_1013E1A50);
                v272 = *(_QWORD *)(v42 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_minRequiredVersion);
                v136 = 0x2000400000000;
                if (!*(_BYTE *)(v42
                               + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_raw_minRequiredVersionForGoodEnoughFidelity
                               + 8))
                  v136 = *(_QWORD *)(v42
                                   + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_raw_minRequiredVersionForGoodEnoughFidelity);
                v270 = v136;
                if (*(_BYTE *)(v42
                              + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_raw_minRequiredVersionForFullFidelity
                              + 8))
                  v137 = 0x1000000000000;
                else
                  v137 = *(_QWORD *)(v42
                                   + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_raw_minRequiredVersionForFullFidelity);
                v269 = *(_QWORD *)(v42 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_objectOptions);
                v268 = *(_QWORD *)(v42 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_itemTypeValue);
                v138 = *(_QWORD *)(v42
                                 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_partialCommonCRDTData);
                v139 = *(_QWORD *)(v42
                                 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_partialCommonCRDTData
                                 + 8);
                v140 = *(_QWORD *)(v42
                                 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_partialSpecificCRDTData);
                v141 = *(_QWORD *)(v42
                                 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_partialSpecificCRDTData
                                 + 8);
                (*(void (**)(uint64_t, uint64_t, uint64_t))(v299 + 32))(v132, v133, v134);
                sub_1008C89B0(v271, v132 + v291[5]);
                v142 = (_QWORD *)(v132 + v291[6]);
                *v142 = v272;
                v142[1] = v270;
                v142[2] = v137;
                *(_QWORD *)(v132 + v291[7]) = v269;
                *(_QWORD *)(v132 + v291[8]) = v268;
                v143 = (uint64_t *)(v132 + v291[9]);
                *v143 = v138;
                v143[1] = v139;
                v144 = (uint64_t *)(v132 + v291[10]);
                *v144 = v140;
                v144[1] = v141;
                sub_1004B8460(v132, v273, type metadata accessor for CRLBoardItemDeltaChange);
                swift_storeEnumTagMultiPayload(v273, v274, 1);
                sub_10057939C(v138, v139);
                sub_10057939C(v140, v141);
                if ((swift_isUniquelyReferenced_nonNull_native(v308) & 1) == 0)
                  v308 = (_QWORD *)sub_100D10734(0, v308[2] + 1, 1, (unint64_t)v308);
                v146 = v308[2];
                v145 = v308[3];
                if (v146 >= v145 >> 1)
                  v308 = (_QWORD *)sub_100D10734(v145 > 1, v146 + 1, 1, (unint64_t)v308);
                v147 = v332[177];
                v308[2] = v146 + 1;
                sub_1004B84E0(v147, (uint64_t)v308+ ((*(unsigned __int8 *)(v304 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v304 + 80))+ *(_QWORD *)(v304 + 72) * v146, type metadata accessor for CRLBoardItemPeerSyncUpdate);
                if (qword_1013DD888 != -1)
                  swift_once(&qword_1013DD888, sub_100A05DE4);
                v148 = v332[185];
                v149 = v332[180];
                v150 = v332[171];
                swift_beginAccess(&static OS_os_log.realTimeSync, v292, 0, 0);
                v151 = (void *)static OS_os_log.realTimeSync;
                v152 = sub_1004B804C((uint64_t *)&unk_1013E0180);
                v153 = swift_initStackObject(v152, v294);
                *(_OWORD *)(v153 + 16) = xmmword_100EF5A10;
                sub_1004B8460(v275, v148, type metadata accessor for CRLGloballyScopedBoardIdentifier);
                v154 = v151;
                v155 = String.init<A>(describing:)(v148, v149);
                v157 = v156;
                *(_QWORD *)(v153 + 56) = &type metadata for String;
                v158 = sub_1004CFC2C();
                *(_QWORD *)(v153 + 64) = v158;
                *(_QWORD *)(v153 + 32) = v155;
                *(_QWORD *)(v153 + 40) = v157;
                v159 = UUID.uuidString.getter(v158);
                *(_QWORD *)(v153 + 96) = &type metadata for String;
                *(_QWORD *)(v153 + 104) = v158;
                *(_QWORD *)(v153 + 72) = v159;
                *(_QWORD *)(v153 + 80) = v160;
                v162 = static os_log_type_t.default.getter(v161);
                sub_100A06EBC((uint64_t)v154, &_mh_execute_header, v162, "Received real-time board item data modification. Board: %@, item: %@", 68, 2, v153);
                swift_setDeallocating(v153);
                v163 = sub_1004B804C(&qword_1013E0190);
                swift_arrayDestroy(v153 + 32, 2, v163);

                sub_1004B84A4(v150, type metadata accessor for CRLBoardItemDeltaChange);
              }
              v4 = v319;
              v10 = v330;
              if (qword_1013DD888 != -1)
                swift_once(&qword_1013DD888, sub_100A05DE4);
              v164 = v332[185];
              v165 = v332[180];
              swift_beginAccess(&static OS_os_log.realTimeSync, v297, 0, 0);
              v166 = (void *)static OS_os_log.realTimeSync;
              v167 = sub_1004B804C((uint64_t *)&unk_1013E0180);
              inited = swift_initStackObject(v167, v298);
              *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
              sub_1004B8460(v275, v164, type metadata accessor for CRLGloballyScopedBoardIdentifier);
              v168 = v166;
              v169 = String.init<A>(describing:)(v164, v165);
              v171 = v170;
              *(_QWORD *)(inited + 56) = &type metadata for String;
              v172 = sub_1004CFC2C();
              *(_QWORD *)(inited + 64) = v172;
              *(_QWORD *)(inited + 32) = v169;
              *(_QWORD *)(inited + 40) = v171;
              v173 = v276;
              v174 = UUID.uuidString.getter(v172);
              *(_QWORD *)(inited + 96) = &type metadata for String;
              *(_QWORD *)(inited + 104) = v172;
              *(_QWORD *)(inited + 72) = v174;
              *(_QWORD *)(inited + 80) = v175;
              v177 = static os_log_type_t.default.getter(v176);
              sub_100A06EBC((uint64_t)v168, &_mh_execute_header, v177, "Received real-time board item data. Board: %@, item: %@", 55, 2, inited);
              swift_setDeallocating(inited);
              v178 = sub_1004B804C(&qword_1013E0190);
              v179 = inited + 32;
              v180 = 2;
LABEL_97:
              swift_arrayDestroy(v179, v180, v178);

              swift_release(v173);
              v5 = v323;
LABEL_123:
              v234 = v5;
LABEL_124:
              _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v234);
              v3 = v317;
              goto LABEL_42;
            }
          }
          else
          {
            sub_1004B84A4(v332[183], type metadata accessor for CRLGloballyScopedBoardIdentifier);
            sub_1004B84A4(v44, type metadata accessor for CRLGloballyScopedBoardIdentifier);
          }
          v5 = v323;
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v323);
          v119 = v42;
LABEL_109:
          swift_release(v119);
          v3 = v317;
          goto LABEL_42;
        }
        v70 = type metadata accessor for CRLTombstoneBoardItemRealTimeChangeRecord(0);
        v0 = v332;
        if (swift_dynamicCast(v300, v4, v11, v70, 0))
        {
          v71 = v332[182];
          v72 = v332[181];
          v73 = v332[153];
          v74 = v73 + OBJC_IVAR____TtC8Freeform41CRLTombstoneBoardItemRealTimeChangeRecord_boardIdentifier;
          v75 = static UUID.== infix(_:_:)(v73 + OBJC_IVAR____TtC8Freeform41CRLTombstoneBoardItemRealTimeChangeRecord_boardIdentifier);
          sub_1004B8460(v74, v71, type metadata accessor for CRLGloballyScopedBoardIdentifier);
          sub_1004B8460(v321, v72, type metadata accessor for CRLGloballyScopedBoardIdentifier);
          v76 = v332[182];
          inited = v332[181];
          if ((v75 & 1) != 0)
          {
            v77 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
            v78 = *(_QWORD *)(v76 + v77);
            v79 = *(_QWORD *)(v76 + v77 + 8);
            v80 = (_QWORD *)(inited + v77);
            v81 = v80[1];
            if (v78 == *v80 && v79 == v81)
            {
              sub_1004B84A4(inited, type metadata accessor for CRLGloballyScopedBoardIdentifier);
              sub_1004B84A4(v76, type metadata accessor for CRLGloballyScopedBoardIdentifier);
LABEL_99:
              if (qword_1013DCFC8 != -1)
                swift_once(&qword_1013DCFC8, sub_100709C68);
              v183 = v332[176];
              v184 = v332[172];
              v185 = v332[168];
              v186 = v332[166];
              CRLAnalyticsOSSignpostManager.beginSignpostInterval(for:with:)(18, 1, (uint64_t)_swiftEmptyArrayStorage);
              v187 = *(void (**)(uint64_t, uint64_t, uint64_t))(v299 + 16);
              v187(v185, v73 + OBJC_IVAR____TtC8Freeform41CRLTombstoneBoardItemRealTimeChangeRecord_boardItemUUID, v186);
              v187(v183, v185, v186);
              swift_storeEnumTagMultiPayload(v183, v184, 3);
              if ((swift_isUniquelyReferenced_nonNull_native(v308) & 1) == 0)
                v308 = (_QWORD *)sub_100D10734(0, v308[2] + 1, 1, (unint64_t)v308);
              v189 = v308[2];
              v188 = v308[3];
              if (v189 >= v188 >> 1)
                v308 = (_QWORD *)sub_100D10734(v188 > 1, v189 + 1, 1, (unint64_t)v308);
              v190 = v332[176];
              v308[2] = v189 + 1;
              sub_1004B84E0(v190, (uint64_t)v308+ ((*(unsigned __int8 *)(v304 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v304 + 80))+ *(_QWORD *)(v304 + 72) * v189, type metadata accessor for CRLBoardItemPeerSyncUpdate);
              if (qword_1013DD888 != -1)
                swift_once(&qword_1013DD888, sub_100A05DE4);
              v191 = v332[185];
              v192 = v332[180];
              v193 = v332[168];
              v277 = v332[166];
              swift_beginAccess(&static OS_os_log.realTimeSync, v293, 0, 0);
              v194 = (void *)static OS_os_log.realTimeSync;
              v195 = sub_1004B804C((uint64_t *)&unk_1013E0180);
              v196 = swift_initStackObject(v195, v295);
              *(_OWORD *)(v196 + 16) = xmmword_100EF5A10;
              sub_1004B8460(v74, v191, type metadata accessor for CRLGloballyScopedBoardIdentifier);
              v197 = v194;
              v198 = String.init<A>(describing:)(v191, v192);
              inited = v199;
              *(_QWORD *)(v196 + 56) = &type metadata for String;
              v200 = sub_1004CFC2C();
              *(_QWORD *)(v196 + 64) = v200;
              *(_QWORD *)(v196 + 32) = v198;
              *(_QWORD *)(v196 + 40) = inited;
              v201 = UUID.uuidString.getter(v200);
              *(_QWORD *)(v196 + 96) = &type metadata for String;
              *(_QWORD *)(v196 + 104) = v200;
              *(_QWORD *)(v196 + 72) = v201;
              *(_QWORD *)(v196 + 80) = v202;
              v204 = static os_log_type_t.default.getter(v203);
              sub_100A06EBC((uint64_t)v197, &_mh_execute_header, v204, "Received real-time deletion of board item. Board: %@, item: %@", 62, 2, v196);
              swift_setDeallocating(v196);
              v205 = sub_1004B804C(&qword_1013E0190);
              swift_arrayDestroy(v196 + 32, 2, v205);

              v206 = swift_release(v73);
              (*(void (**)(uint64_t, uint64_t, __n128))(v299 + 8))(v193, v277, v206);
              v5 = v323;
              _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v323);
              v3 = v317;
              v4 = v319;
              goto LABEL_42;
            }
            v181 = _stringCompareWithSmolCheck(_:_:expecting:)(v78, v79, *v80, v81, 0);
            v182 = inited;
            inited = (uint64_t)type metadata accessor for CRLGloballyScopedBoardIdentifier;
            sub_1004B84A4(v182, type metadata accessor for CRLGloballyScopedBoardIdentifier);
            sub_1004B84A4(v76, type metadata accessor for CRLGloballyScopedBoardIdentifier);
            if ((v181 & 1) != 0)
              goto LABEL_99;
          }
          else
          {
            sub_1004B84A4(v332[181], type metadata accessor for CRLGloballyScopedBoardIdentifier);
            sub_1004B84A4(v76, type metadata accessor for CRLGloballyScopedBoardIdentifier);
          }
          v5 = v323;
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v323);
          v119 = v73;
          goto LABEL_109;
        }
        if (swift_dynamicCast(v332[164], v4, v11, v332[162], 0))
        {
          v82 = v332[163];
          sub_1004B84E0(v332[164], v82, type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecordLegacy);
          v83 = *(_QWORD *)(v82 + *(int *)(v296 + 20));
          if (v83 <= 4)
          {
            v84 = (_BYTE *)v332[175];
            v85 = v332[172];
            v86 = (uint64_t *)(v332[163] + *(int *)(v296 + 24));
            v88 = *v86;
            v87 = v86[1];
            *v84 = v83;
            *(_QWORD *)(v288 + 8) = v88;
            *(_QWORD *)(v288 + 16) = v87;
            swift_storeEnumTagMultiPayload(v84, v85, 5);
            sub_1004BE310(v88, v87);
            v89 = v5;
            if ((swift_isUniquelyReferenced_nonNull_native(v308) & 1) == 0)
              v308 = (_QWORD *)sub_100D10734(0, v308[2] + 1, 1, (unint64_t)v308);
            v91 = v308[2];
            v90 = v308[3];
            if (v91 >= v90 >> 1)
              v308 = (_QWORD *)sub_100D10734(v90 > 1, v91 + 1, 1, (unint64_t)v308);
            inited = (uint64_t)v332;
            v92 = v332[175];
            v93 = v332[163];
            v308[2] = v91 + 1;
            sub_1004B84E0(v92, (uint64_t)v308+ ((*(unsigned __int8 *)(v304 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v304 + 80))+ *(_QWORD *)(v304 + 72) * v91, type metadata accessor for CRLBoardItemPeerSyncUpdate);
            v94 = v93;
            v95 = type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecordLegacy;
LABEL_78:
            sub_1004B84A4(v94, v95);
            v5 = v89;
            v0 = (uint64_t *)inited;
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v5);
            v303 = 1;
            v3 = v317;
            goto LABEL_42;
          }
          v207 = v5;
          if (qword_1013DD888 != -1)
            swift_once(&qword_1013DD888, sub_100A05DE4);
          v208 = v332;
          v209 = v332[163];
          swift_beginAccess(&static OS_os_log.realTimeSync, v287, 0, 0);
          v210 = (void *)static OS_os_log.realTimeSync;
          v211 = sub_1004B804C((uint64_t *)&unk_1013E0180);
          v212 = swift_initStackObject(v211, v290);
          *(_OWORD *)(v212 + 16) = xmmword_100EF5E40;
          v332[156] = v83;
          inited = v210;
          v213 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
          v215 = v214;
          *(_QWORD *)(v212 + 56) = &type metadata for String;
          *(_QWORD *)(v212 + 64) = sub_1004CFC2C();
          *(_QWORD *)(v212 + 32) = v213;
          *(_QWORD *)(v212 + 40) = v215;
          v217 = static os_log_type_t.default.getter(v216);
          sub_100A06EBC(inited, &_mh_execute_header, v217, "Unrecognized CRLBoardAuxiliaryRealTimeChangeType %@", 51, 2, v212);
          swift_setDeallocating(v212);
          v218 = sub_1004B804C(&qword_1013E0190);
          swift_arrayDestroy(v212 + 32, 1, v218);

          v219 = v209;
          v220 = type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecordLegacy;
        }
        else
        {
          if (!swift_dynamicCast(v332[161], v4, v11, v332[159], 0))
          {
            v221 = v5;
            if (qword_1013DD888 != -1)
              swift_once(&qword_1013DD888, sub_100A05DE4);
            swift_beginAccess(&static OS_os_log.realTimeSync, v286, 0, 0);
            v222 = (void *)static OS_os_log.realTimeSync;
            v223 = sub_1004B804C((uint64_t *)&unk_1013E0180);
            v224 = swift_initStackObject(v223, v289);
            *(_OWORD *)(v224 + 16) = xmmword_100EF5E40;
            v225 = v332[121];
            v226 = sub_1004BB5A4(v221, v225);
            DynamicType = swift_getDynamicType(v226, v225, 1);
            v228 = v222;
            v229 = _typeName(_:qualified:)(DynamicType, 0);
            inited = v230;
            *(_QWORD *)(v224 + 56) = &type metadata for String;
            *(_QWORD *)(v224 + 64) = sub_1004CFC2C();
            *(_QWORD *)(v224 + 32) = v229;
            *(_QWORD *)(v224 + 40) = inited;
            v232 = static os_log_type_t.default.getter(v231);
            sub_100A06EBC((uint64_t)v228, &_mh_execute_header, v232, "Ignoring an unexpected record type %{public}@", 45, 2, v224);
            swift_setDeallocating(v224);
            v233 = sub_1004B804C(&qword_1013E0190);
            swift_arrayDestroy(v224 + 32, 1, v233);

            v5 = v221;
            v234 = v221;
            goto LABEL_124;
          }
          v120 = v332[160];
          sub_1004B84E0(v332[161], v120, type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecord);
          v121 = *(_DWORD *)(v120 + *(int *)(v285 + 20));
          v122 = v121 - 5;
          if ((v121 - 5) <= 0xB)
          {
            v123 = (_BYTE *)v332[174];
            v124 = v332[172];
            v125 = (uint64_t *)(v332[160] + *(int *)(v285 + 24));
            v127 = *v125;
            v126 = v125[1];
            *v123 = v122;
            *(_QWORD *)(v279 + 8) = v127;
            *(_QWORD *)(v279 + 16) = v126;
            swift_storeEnumTagMultiPayload(v123, v124, 4);
            sub_1004BE310(v127, v126);
            v89 = v5;
            if ((swift_isUniquelyReferenced_nonNull_native(v308) & 1) == 0)
              v308 = (_QWORD *)sub_100D10734(0, v308[2] + 1, 1, (unint64_t)v308);
            v129 = v308[2];
            v128 = v308[3];
            if (v129 >= v128 >> 1)
              v308 = (_QWORD *)sub_100D10734(v128 > 1, v129 + 1, 1, (unint64_t)v308);
            inited = (uint64_t)v332;
            v130 = v332[174];
            v131 = v332[160];
            v308[2] = v129 + 1;
            sub_1004B84E0(v130, (uint64_t)v308+ ((*(unsigned __int8 *)(v304 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v304 + 80))+ *(_QWORD *)(v304 + 72) * v129, type metadata accessor for CRLBoardItemPeerSyncUpdate);
            v94 = v131;
            v95 = type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecord;
            goto LABEL_78;
          }
          v207 = v5;
          if (qword_1013DD888 != -1)
            swift_once(&qword_1013DD888, sub_100A05DE4);
          v208 = v332;
          v248 = v332[160];
          swift_beginAccess(&static OS_os_log.realTimeSync, v278, 0, 0);
          v249 = (void *)static OS_os_log.realTimeSync;
          v250 = sub_1004B804C((uint64_t *)&unk_1013E0180);
          v251 = swift_initStackObject(v250, v280);
          *(_OWORD *)(v251 + 16) = xmmword_100EF5E40;
          *((_DWORD *)v332 + 376) = v121;
          inited = v249;
          v252 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt32, &protocol witness table for UInt32);
          v254 = v253;
          *(_QWORD *)(v251 + 56) = &type metadata for String;
          *(_QWORD *)(v251 + 64) = sub_1004CFC2C();
          *(_QWORD *)(v251 + 32) = v252;
          *(_QWORD *)(v251 + 40) = v254;
          v256 = static os_log_type_t.default.getter(v255);
          sub_100A06EBC(inited, &_mh_execute_header, v256, "Unrecognized CRLBoardAuxiliaryRealTimeChangeType %@", 51, 2, v251);
          swift_setDeallocating(v251);
          v257 = sub_1004B804C(&qword_1013E0190);
          swift_arrayDestroy(v251 + 32, 1, v257);

          v219 = v248;
          v220 = type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecord;
        }
        sub_1004B84A4(v219, v220);
        v5 = v207;
        v0 = v208;
        goto LABEL_123;
      }
      v13 = v10;
      v14 = v332[187];
      v15 = v332[186];
      v16 = v332[155];
      v17 = v16 + OBJC_IVAR____TtC8Freeform28CRLBoardRealTimeChangeRecord_boardIdentifier;
      v18 = static UUID.== infix(_:_:)(v16 + OBJC_IVAR____TtC8Freeform28CRLBoardRealTimeChangeRecord_boardIdentifier);
      sub_1004B8460(v17, v14, type metadata accessor for CRLGloballyScopedBoardIdentifier);
      sub_1004B8460(v321, v15, type metadata accessor for CRLGloballyScopedBoardIdentifier);
      inited = v332[187];
      v19 = v332[186];
      if ((v18 & 1) == 0)
        break;
      v20 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
      v21 = *(_QWORD *)(inited + v20);
      v22 = *(_QWORD *)(inited + v20 + 8);
      v23 = (_QWORD *)(v19 + v20);
      v24 = v23[1];
      if (v21 == *v23 && v22 == v24)
      {
        sub_1004B84A4(v19, type metadata accessor for CRLGloballyScopedBoardIdentifier);
        sub_1004B84A4(inited, type metadata accessor for CRLGloballyScopedBoardIdentifier);
      }
      else
      {
        v26 = _stringCompareWithSmolCheck(_:_:expecting:)(v21, v22, *v23, v24, 0);
        sub_1004B84A4(v19, type metadata accessor for CRLGloballyScopedBoardIdentifier);
        sub_1004B84A4(inited, type metadata accessor for CRLGloballyScopedBoardIdentifier);
        if ((v26 & 1) == 0)
          goto LABEL_28;
      }
      v27 = *(_QWORD *)(v16 + OBJC_IVAR____TtC8Freeform28CRLBoardRealTimeChangeRecord_partialCRDTData + 8);
      if (v27 >> 60 != 15)
      {
        v51 = *(_QWORD *)(v16 + OBJC_IVAR____TtC8Freeform28CRLBoardRealTimeChangeRecord_partialCRDTData);
        v52 = v332[179];
        v328 = v332[172];
        v314 = *(_QWORD *)(v16 + OBJC_IVAR____TtC8Freeform28CRLBoardRealTimeChangeRecord_minRequiredVersion);
        if (*(_BYTE *)(v16
                      + OBJC_IVAR____TtC8Freeform28CRLBoardRealTimeChangeRecord_raw_minRequiredVersionForGoodEnoughFidelity
                      + 8))
          v53 = 0x2000400000000;
        else
          v53 = *(_QWORD *)(v16
                          + OBJC_IVAR____TtC8Freeform28CRLBoardRealTimeChangeRecord_raw_minRequiredVersionForGoodEnoughFidelity);
        if (*(_BYTE *)(v16
                      + OBJC_IVAR____TtC8Freeform28CRLBoardRealTimeChangeRecord_raw_minRequiredVersionForFullFidelity
                      + 8))
          v54 = 0x1000000000000;
        else
          v54 = *(_QWORD *)(v16
                          + OBJC_IVAR____TtC8Freeform28CRLBoardRealTimeChangeRecord_raw_minRequiredVersionForFullFidelity);
        v55 = (_QWORD *)(v52 + *(int *)(sub_1004B804C(&qword_10140C320) + 48));
        sub_1004B8460(v17, v52, type metadata accessor for CRLGloballyScopedBoardIdentifier);
        *v55 = v314;
        v55[1] = v53;
        v55[2] = v54;
        v55[3] = v51;
        v55[4] = v27;
        swift_storeEnumTagMultiPayload(v52, v328, 0);
        sub_1004BE310(v51, v27);
        v329 = v51;
        sub_1004BE310(v51, v27);
        if ((swift_isUniquelyReferenced_nonNull_native(v308) & 1) == 0)
          v308 = (_QWORD *)sub_100D10734(0, v308[2] + 1, 1, (unint64_t)v308);
        v57 = v308[2];
        v56 = v308[3];
        v0 = v332;
        if (v57 >= v56 >> 1)
          v308 = (_QWORD *)sub_100D10734(v56 > 1, v57 + 1, 1, (unint64_t)v308);
        v58 = v332[179];
        v308[2] = v57 + 1;
        sub_1004B84E0(v58, (uint64_t)v308+ ((*(unsigned __int8 *)(v304 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v304 + 80))+ *(_QWORD *)(v304 + 72) * v57, type metadata accessor for CRLBoardItemPeerSyncUpdate);
        if (qword_1013DD888 != -1)
          swift_once(&qword_1013DD888, sub_100A05DE4);
        v59 = v332[185];
        v60 = v332[180];
        swift_beginAccess(&static OS_os_log.realTimeSync, v301, 0, 0);
        v61 = (void *)static OS_os_log.realTimeSync;
        v62 = sub_1004B804C((uint64_t *)&unk_1013E0180);
        inited = swift_allocObject(v62, 72, 7);
        *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
        sub_1004B8460(v17, v59, type metadata accessor for CRLGloballyScopedBoardIdentifier);
        v63 = v61;
        v64 = String.init<A>(describing:)(v59, v60);
        v66 = v65;
        *(_QWORD *)(inited + 56) = &type metadata for String;
        *(_QWORD *)(inited + 64) = sub_1004CFC2C();
        *(_QWORD *)(inited + 32) = v64;
        *(_QWORD *)(inited + 40) = v66;
        v68 = static os_log_type_t.default.getter(v67);
        sub_100A06EBC((uint64_t)v63, &_mh_execute_header, v68, "Received real-time board data. Board: %@", 40, 2, inited);
        swift_setDeallocating(inited);
        v69 = sub_1004B804C(&qword_1013E0190);
        swift_arrayDestroy(inited + 32, 1, v69);
        swift_deallocClassInstance(inited, 32, 7);

        sub_1004BE2FC(v329, v27);
        swift_release(v16);
        v5 = v323;
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v323);
        v313 = 1;
        v3 = v317;
        v4 = v319;
        goto LABEL_42;
      }
      if (qword_1013DD888 != -1)
        swift_once(&qword_1013DD888, sub_100A05DE4);
      v28 = v332[185];
      v29 = v332[180];
      v0 = &static OS_os_log.realTimeSync;
      swift_beginAccess(&static OS_os_log.realTimeSync, v309, 0, 0);
      v30 = (void *)static OS_os_log.realTimeSync;
      v31 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v32 = swift_initStackObject(v31, v311);
      *(_OWORD *)(v32 + 16) = xmmword_100EF5E40;
      ++v10;
      sub_1004B8460(v17, v28, type metadata accessor for CRLGloballyScopedBoardIdentifier);
      v33 = v30;
      v34 = String.init<A>(describing:)(v28, v29);
      inited = v35;
      *(_QWORD *)(v32 + 56) = &type metadata for String;
      *(_QWORD *)(v32 + 64) = sub_1004CFC2C();
      *(_QWORD *)(v32 + 32) = v34;
      *(_QWORD *)(v32 + 40) = inited;
      v37 = static os_log_type_t.default.getter(v36);
      sub_100A06EBC((uint64_t)v33, &_mh_execute_header, v37, "Failed to receive partialCRDT for board change %@", 49, 2, v32);
      swift_setDeallocating(v32);
      v38 = sub_1004B804C(&qword_1013E0190);
      v313 = 1;
      swift_arrayDestroy(v32 + 32, 1, v38);

      swift_release(v16);
      v5 = v323;
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v323);
      v4 = v319;
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v319);
      v9 += 40;
      v3 = v317;
      if (v317 == v13 + 1)
      {
        v0 = v332;
        swift_bridgeObjectRelease(v332[157]);
        goto LABEL_125;
      }
    }
    sub_1004B84A4(v332[186], type metadata accessor for CRLGloballyScopedBoardIdentifier);
    sub_1004B84A4(inited, type metadata accessor for CRLGloballyScopedBoardIdentifier);
LABEL_28:
    v5 = v323;
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v323);
    swift_release(v16);
    v4 = v319;
    v0 = v332;
LABEL_42:
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v4);
    v6 = v10 + 1;
    if (v305 != v10)
      continue;
    break;
  }
  swift_bridgeObjectRelease(v0[157]);
  if ((v313 & 1) != 0)
  {
LABEL_125:
    v5 = &unk_1013DC000;
    LOBYTE(inited) = v303;
    if (qword_1013DCFC8 == -1)
      goto LABEL_126;
    goto LABEL_136;
  }
  v5 = (_QWORD *)&unk_1013DC000;
  if ((v303 & 1) == 0)
    goto LABEL_131;
LABEL_127:
  if (v5[505] != -1)
    swift_once(&qword_1013DCFC8, sub_100709C68);
  CRLAnalyticsOSSignpostManager.beginSignpostInterval(for:with:)(19, 1, (uint64_t)_swiftEmptyArrayStorage);
LABEL_131:
  v258 = v0[186];
  v259 = v0[185];
  v260 = v0[184];
  v261 = v0[183];
  v262 = v0[182];
  v263 = v0[181];
  v264 = v0[179];
  v265 = v0[178];
  v266 = v0[177];
  v307 = v0[176];
  v310 = v0[175];
  v312 = v0[174];
  v315 = v0[171];
  v316 = v0[169];
  v318 = v0[168];
  v320 = v0[165];
  v322 = v0[164];
  v324 = v0[163];
  v326 = v0[161];
  v331 = v0[160];
  swift_task_dealloc(v0[187]);
  swift_task_dealloc(v258);
  swift_task_dealloc(v259);
  swift_task_dealloc(v260);
  swift_task_dealloc(v261);
  swift_task_dealloc(v262);
  swift_task_dealloc(v263);
  swift_task_dealloc(v264);
  swift_task_dealloc(v265);
  swift_task_dealloc(v266);
  swift_task_dealloc(v307);
  swift_task_dealloc(v310);
  swift_task_dealloc(v312);
  swift_task_dealloc(v315);
  swift_task_dealloc(v316);
  swift_task_dealloc(v318);
  swift_task_dealloc(v320);
  swift_task_dealloc(v322);
  swift_task_dealloc(v324);
  swift_task_dealloc(v326);
  swift_task_dealloc(v331);
  return ((uint64_t (*)(_QWORD *))v0[1])(v308);
}

uint64_t sub_100C72204()
{
  uint64_t v0;

  sub_1004B84A4(v0+ OBJC_IVAR____TtCC8Freeform33CRLBoardRealTimeChangeCoordinator26CRLRealTimeChangeProcessor_globallyScopedBoardIdentifier, type metadata accessor for CRLGloballyScopedBoardIdentifier);
  swift_defaultActor_destroy(v0);
  return swift_defaultActor_deallocate(v0);
}

uint64_t sub_100C72238()
{
  return type metadata accessor for CRLBoardRealTimeChangeCoordinator.CRLRealTimeChangeProcessor(0);
}

uint64_t type metadata accessor for CRLBoardRealTimeChangeCoordinator.CRLRealTimeChangeProcessor(uint64_t a1)
{
  return sub_1004BD408(a1, (uint64_t *)&unk_10140C278, (uint64_t)&nominal type descriptor for CRLBoardRealTimeChangeCoordinator.CRLRealTimeChangeProcessor);
}

uint64_t sub_100C72254(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for CRLBoardIdentifierStorage(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t initializeWithCopy for CRLBoardRealTimeChangeCoordinator.CRLIncomingSuspendedCache(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t assignWithCopy for CRLBoardRealTimeChangeCoordinator.CRLIncomingSuspendedCache(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v6;
  return a1;
}

uint64_t assignWithTake for CRLBoardRealTimeChangeCoordinator.CRLIncomingSuspendedCache(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease(v4);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLBoardRealTimeChangeCoordinator.CRLIncomingSuspendedCache(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 25))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLBoardRealTimeChangeCoordinator.CRLIncomingSuspendedCache(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 25) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardRealTimeChangeCoordinator.CRLIncomingSuspendedCache()
{
  return &type metadata for CRLBoardRealTimeChangeCoordinator.CRLIncomingSuspendedCache;
}

uint64_t sub_100C7244C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;

  *(_BYTE *)(v5 + 24) = a5;
  *(_QWORD *)(v5 + 16) = a4;
  return swift_task_switch(sub_100C72468, a4, 0);
}

uint64_t sub_100C72468()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;

  v1 = *(unsigned __int8 *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform33CRLBoardRealTimeChangeCoordinator_pushCommandToCommandControllerTask);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform33CRLBoardRealTimeChangeCoordinator_pushCommandToCommandControllerTask) = 0;
  v4 = swift_release(v3);
  if (v1 == 1)
    v4.n128_f64[0] = sub_100C6AFEC();
  return (*(uint64_t (**)(__n128))(v0 + 8))(v4);
}

void sub_100C724BC(uint64_t a1, void (*a2)(char *, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;

  v4 = sub_1004B804C(&qword_10140C388);
  __chkstk_darwin(v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 64);
  v23 = a1 + 64;
  v8 = 1 << *(_BYTE *)(a1 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & v7;
  v24 = (unint64_t)(v8 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v11 = 0;
  while (1)
  {
    if (v10)
    {
      v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v13 = v12 | (v11 << 6);
      goto LABEL_5;
    }
    v19 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v24)
      goto LABEL_23;
    v20 = *(_QWORD *)(v23 + 8 * v19);
    ++v11;
    if (!v20)
    {
      v11 = v19 + 1;
      if (v19 + 1 >= v24)
        goto LABEL_23;
      v20 = *(_QWORD *)(v23 + 8 * v11);
      if (!v20)
      {
        v11 = v19 + 2;
        if (v19 + 2 >= v24)
          goto LABEL_23;
        v20 = *(_QWORD *)(v23 + 8 * v11);
        if (!v20)
        {
          v11 = v19 + 3;
          if (v19 + 3 >= v24)
            goto LABEL_23;
          v20 = *(_QWORD *)(v23 + 8 * v11);
          if (!v20)
            break;
        }
      }
    }
LABEL_22:
    v10 = (v20 - 1) & v20;
    v13 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_5:
    v14 = *(_QWORD *)(a1 + 48);
    v15 = type metadata accessor for UUID(0);
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v6, v14 + *(_QWORD *)(*(_QWORD *)(v15 - 8) + 72) * v13, v15);
    v16 = *(_QWORD *)(a1 + 56);
    v17 = v16 + *(_QWORD *)(*(_QWORD *)(type metadata accessor for CRLBoardItemPeerSyncUpdate(0) - 8) + 72) * v13;
    v18 = (uint64_t)&v6[*(int *)(v4 + 48)];
    sub_1004B8460(v17, v18, type metadata accessor for CRLBoardItemPeerSyncUpdate);
    a2(v6, v18);
    sub_1004CB800((uint64_t)v6, &qword_10140C388);
  }
  v21 = v19 + 4;
  if (v21 >= v24)
  {
LABEL_23:
    swift_release(a1);
    return;
  }
  v20 = *(_QWORD *)(v23 + 8 * v21);
  if (v20)
  {
    v11 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    v11 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v11 >= v24)
      goto LABEL_23;
    v20 = *(_QWORD *)(v23 + 8 * v11);
    ++v21;
    if (v20)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
}

_QWORD *sub_100C72708(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  Swift::Int v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD v28[2];
  char *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[5];
  _BYTE v36[40];
  _QWORD *v37;

  v5 = type metadata accessor for CRLBoardItemPeerSyncUpdate(0);
  __chkstk_darwin(v5);
  v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v11 = (char *)v28 - v10;
  result = _swiftEmptyArrayStorage;
  v37 = _swiftEmptyArrayStorage;
  v13 = *(_QWORD *)(a1 + 16);
  if (v13)
  {
    v28[1] = v2;
    v14 = 0;
    v31 = a2 + OBJC_IVAR____TtC8Freeform33CRLBoardRealTimeChangeCoordinator_incomingSuspendedCache;
    v15 = *(_QWORD *)(v9 + 72);
    v32 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v33 = a1 + v32;
    v34 = v15;
    v16 = _swiftEmptyArrayStorage;
    v29 = v7;
    v30 = v13;
    do
    {
      sub_1004B8460(v33 + v34 * v14, (uint64_t)v11, type metadata accessor for CRLBoardItemPeerSyncUpdate);
      v17 = sub_100C822A4();
      if (v17)
      {
        v18 = *(_QWORD *)(v31 + 8);
        v35[0] = v17;
        swift_bridgeObjectRetain(v18);
        v19 = sub_1004B804C(&qword_10140C360);
        v20 = sub_1004CBA30(&qword_10140C368, &qword_10140C360, (uint64_t)&protocol conformance descriptor for Set<A>);
        AnyHashable.init<A>(_:)(v35, v19, v20);
        if (*(_QWORD *)(v18 + 16))
        {
          v21 = AnyHashable._rawHashValue(seed:)(*(_QWORD *)(v18 + 40));
          v22 = -1 << *(_BYTE *)(v18 + 32);
          v23 = v21 & ~v22;
          if (((*(_QWORD *)(v18 + 56 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) != 0)
          {
            v24 = ~v22;
            do
            {
              sub_1004B8968(*(_QWORD *)(v18 + 48) + 40 * v23, (uint64_t)v35);
              v25 = static AnyHashable.== infix(_:_:)(v35, v36);
              sub_1004B89A4((uint64_t)v35);
              if ((v25 & 1) != 0)
              {
                swift_bridgeObjectRelease(v18);
                sub_1004B89A4((uint64_t)v36);
                sub_1004B84A4((uint64_t)v11, type metadata accessor for CRLBoardItemPeerSyncUpdate);
                v7 = v29;
                v13 = v30;
                goto LABEL_4;
              }
              v23 = (v23 + 1) & v24;
            }
            while (((*(_QWORD *)(v18 + 56 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) != 0);
            swift_bridgeObjectRelease(v18);
            sub_1004B89A4((uint64_t)v36);
            v7 = v29;
          }
          else
          {
            swift_bridgeObjectRelease(v18);
            sub_1004B89A4((uint64_t)v36);
          }
          v13 = v30;
        }
        else
        {
          swift_bridgeObjectRelease(v18);
          sub_1004B89A4((uint64_t)v36);
        }
      }
      sub_1004B84E0((uint64_t)v11, (uint64_t)v7, type metadata accessor for CRLBoardItemPeerSyncUpdate);
      if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0)
        sub_1006009C4(0, v16[2] + 1, 1);
      v16 = v37;
      v27 = v37[2];
      v26 = v37[3];
      if (v27 >= v26 >> 1)
      {
        sub_1006009C4(v26 > 1, v27 + 1, 1);
        v16 = v37;
      }
      v16[2] = v27 + 1;
      sub_1004B84E0((uint64_t)v7, (uint64_t)v16 + v32 + v27 * v34, type metadata accessor for CRLBoardItemPeerSyncUpdate);
LABEL_4:
      ++v14;
    }
    while (v14 != v13);
    return v37;
  }
  return result;
}

_QWORD *sub_100C72A20(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  __int16 v4;
  char v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void *v18;
  uint64_t v19;
  uint64_t inited;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  _BYTE v31[72];
  _BYTE v32[24];

  sub_1007BD85C(*(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_itemTypeValue));
  v3 = v2;
  v5 = v4;
  if ((v4 & 0x100) != 0)
  {
    if (qword_1013DD888 != -1)
      swift_once(&qword_1013DD888, sub_100A05DE4);
    swift_beginAccess(&static OS_os_log.realTimeSync, v32, 0, 0);
    v18 = (void *)static OS_os_log.realTimeSync;
    v19 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v19, v31);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v28 = v3;
    v29 = v5;
    v30 = 1;
    v21 = v18;
    v22 = String.init<A>(describing:)(&v28, &type metadata for CRLSerializableObjectType);
    v24 = v23;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v25 = sub_1004CFC2C();
    *(_QWORD *)(inited + 64) = v25;
    *(_QWORD *)(inited + 32) = v22;
    *(_QWORD *)(inited + 40) = v24;
    v26 = static os_log_type_t.error.getter(v25);
    sub_100A06EBC((uint64_t)v21, &_mh_execute_header, v26, "Real-time change record does not contain a valid board item type: %@", 68, 2, inited);
    swift_setDeallocating(inited);
    v27 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v27);

    return 0;
  }
  v6 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_commonCRDTData + 8);
  if (v6 >> 60 == 15)
    return 0;
  v7 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_specificCRDTData + 8);
  if (v7 >> 60 == 15)
    return 0;
  v8 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_commonCRDTData);
  v9 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_minRequiredVersion);
  v10 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_specificCRDTData);
  v11 = (uint64_t *)(a1
                  + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_raw_minRequiredVersionForGoodEnoughFidelity);
  if (*(_BYTE *)(a1
                + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_raw_minRequiredVersionForGoodEnoughFidelity
                + 8))
    v11 = &qword_100EEE460;
  v12 = *v11;
  v13 = (uint64_t *)(a1
                  + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_raw_minRequiredVersionForFullFidelity);
  if (*(_BYTE *)(a1
                + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_raw_minRequiredVersionForFullFidelity
                + 8))
    v13 = &qword_100EEE440;
  v14 = *v13;
  v15 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_objectOptions);
  sub_10057939C(v8, v6);
  sub_10057939C(v10, v7);
  v16 = sub_10089BAB8(v3, v5 & 1, v9, v12, v14, v15, v8, v6, v10, v7);
  sub_1004BE2FC(v10, v7);
  sub_1004BE2FC(v8, v6);
  return v16;
}

uint64_t sub_100C72CAC()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100C72CD4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_10140C32C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1004CFD00;
  return sub_100C6E1A4(a1, v4, v5, v7, v6);
}

uint64_t sub_100C72D50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_BYTE *)(v0 + 40);
  v4 = swift_task_alloc(dword_10140C33C);
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)v4 = v1;
  *(_QWORD *)(v4 + 8) = sub_1004CFD00;
  *(_BYTE *)(v4 + 24) = v3;
  *(_QWORD *)(v4 + 16) = v2;
  return swift_task_switch(sub_100C72468, v2, 0);
}

uint64_t sub_100C72DBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_BYTE *)(v0 + 40);
  v4 = swift_task_alloc(dword_10140C33C);
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)v4 = v1;
  *(_QWORD *)(v4 + 8) = sub_1004CF80C;
  *(_BYTE *)(v4 + 24) = v3;
  *(_QWORD *)(v4 + 16) = v2;
  return swift_task_switch(sub_100C72468, v2, 0);
}

double *sub_100C72E2C(double *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  id v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE v51[24];
  _BYTE v52[24];
  uint64_t v53;

  v2 = sub_1004B804C(&qword_101405458);
  __chkstk_darwin(v2);
  v4 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CRLBoardItemPeerSyncUpdate(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v50 = (uint64_t)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (uint64_t *)((char *)&v42 - v9);
  __chkstk_darwin(v11);
  v13 = (char *)&v42 - v12;
  if (*((_QWORD *)a1 + 2) >= 2uLL)
  {
    v14 = sub_100A689F4((uint64_t)a1, (void (*)(_QWORD))sub_100C6DCB4, 0, (void (*)(uint64_t))sub_100C6DD00, 0, sub_100C6DDB0, 0);
    if ((unint64_t)v14 >> 62)
      goto LABEL_67;
    v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v15)
    {
LABEL_71:
      swift_bridgeObjectRelease();
      return _swiftEmptyArrayStorage;
    }
LABEL_4:
    v47 = v14 & 0xC000000000000001;
    v44 = v14 & 0xFFFFFFFFFFFFFF8;
    v45 = v14;
    v43 = v14 + 32;
    v14 = 0;
    a1 = _swiftEmptyArrayStorage;
    v46 = v15;
    while (1)
    {
      if (v47)
      {
        v16 = specialized _ArrayBuffer._getElementSlowPath(_:)(v14, v45);
        v17 = __OFADD__(v14++, 1);
        if (v17)
          goto LABEL_65;
      }
      else
      {
        if ((unint64_t)v14 >= *(_QWORD *)(v44 + 16))
          goto LABEL_66;
        swift_retain(*(_QWORD *)(v43 + 8 * v14));
        v17 = __OFADD__(v14++, 1);
        if (v17)
          goto LABEL_65;
      }
      v48 = v16;
      v49 = v14;
      v18 = *(_QWORD *)(v16 + 16);
      v53 = (uint64_t)_swiftEmptyArrayStorage;
      v19 = swift_retain_n(v18, 2);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v19);
      v21 = *(_QWORD *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v20 = *(_QWORD *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v21 >= v20 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v20 > 1, v21 + 1, 1);
      v22 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v21, v18);
      specialized Array._endMutation()(v22);
      v14 = v53;
      if (!((unint64_t)v53 >> 62))
      {
        if (*(_QWORD *)((v53 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_16;
        goto LABEL_5;
      }
      v38 = v53 < 0 ? v53 : v53 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v53);
      v39 = _CocoaArrayWrapper.endIndex.getter(v38);
      swift_bridgeObjectRelease();
      if (v39)
        break;
LABEL_5:
      swift_release(v48);
      swift_release(v18);
      swift_bridgeObjectRelease();
      v14 = v49;
      if (v49 == v46)
      {
        swift_bridgeObjectRelease();
        return a1;
      }
    }
    while (1)
    {
LABEL_16:
      v23 = v18;
      v24 = (unint64_t)v14 >> 62;
      if ((unint64_t)v14 >> 62)
      {
        if (v14 < 0)
          v32 = v14;
        else
          v32 = v14 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v14);
        v42 = _CocoaArrayWrapper.endIndex.getter(v32);
        swift_bridgeObjectRelease();
        if (!v42)
        {
LABEL_61:
          __break(1u);
LABEL_62:
          __break(1u);
LABEL_63:
          __break(1u);
LABEL_64:
          __break(1u);
LABEL_65:
          __break(1u);
LABEL_66:
          __break(1u);
LABEL_67:
          if (v14 < 0)
            v40 = v14;
          else
            v40 = v14 & 0xFFFFFFFFFFFFFF8;
          v15 = _CocoaArrayWrapper.endIndex.getter(v40);
          if (!v15)
            goto LABEL_71;
          goto LABEL_4;
        }
        swift_bridgeObjectRetain(v14);
        v33 = _CocoaArrayWrapper.endIndex.getter(v32);
        swift_bridgeObjectRelease();
        if (!v33)
          goto LABEL_62;
      }
      else if (!*(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_61;
      }
      if ((v14 & 0xC000000000000001) != 0)
      {
        v25 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v14);
        if (!v24)
          goto LABEL_21;
      }
      else
      {
        if (!*(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_63;
        v25 = *(_QWORD *)(v14 + 32);
        swift_retain(v25);
        if (!v24)
        {
LABEL_21:
          if (!*(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_64;
          goto LABEL_22;
        }
      }
      if (v14 < 0)
        v34 = v14;
      else
        v34 = v14 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v14);
      v35 = _CocoaArrayWrapper.endIndex.getter(v34);
      swift_bridgeObjectRelease();
      if (!v35)
        goto LABEL_64;
LABEL_22:
      sub_100CFED88(0, 1);
      sub_1004CB7BC(v25 + *(_QWORD *)(*(_QWORD *)v25 + 112), (uint64_t)v4, &qword_101405458);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
      {
        sub_1004CB800((uint64_t)v4, &qword_101405458);
        v18 = v23;
      }
      else
      {
        sub_1004B84E0((uint64_t)v4, (uint64_t)v13, type metadata accessor for CRLBoardItemPeerSyncUpdate);
        sub_1004B8460((uint64_t)v13, (uint64_t)v10, type metadata accessor for CRLBoardItemPeerSyncUpdate);
        if (swift_getEnumCaseMultiPayload(v10, v5) == 2)
        {
          swift_release(*v10);
          sub_1004B8460((uint64_t)v13, v50, type metadata accessor for CRLBoardItemPeerSyncUpdate);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            a1 = (double *)sub_100D10734(0, *((_QWORD *)a1 + 2) + 1, 1, (unint64_t)a1);
          v27 = *((_QWORD *)a1 + 2);
          v26 = *((_QWORD *)a1 + 3);
          if (v27 >= v26 >> 1)
            a1 = (double *)sub_100D10734(v26 > 1, v27 + 1, 1, (unint64_t)a1);
          *((_QWORD *)a1 + 2) = v27 + 1;
          sub_1004B84E0(v50, (uint64_t)a1+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v27, type metadata accessor for CRLBoardItemPeerSyncUpdate);
          sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLBoardItemPeerSyncUpdate);
          v18 = v23;
          goto LABEL_34;
        }
        v18 = v23;
        sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLBoardItemPeerSyncUpdate);
        sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLBoardItemPeerSyncUpdate);
      }
      if (qword_1013DD888 != -1)
        swift_once(&qword_1013DD888, sub_100A05DE4);
      swift_beginAccess(&static OS_os_log.realTimeSync, v52, 0, 0);
      v28 = (id)static OS_os_log.realTimeSync;
      v29 = static os_log_type_t.error.getter(v28);
      sub_100A06EBC((uint64_t)v28, &_mh_execute_header, v29, "_sortPeerSyncUpdateItemsCausally must only be fed .createdItemData CRLBoardItemPeerSyncUpdates", 94, 2, (uint64_t)_swiftEmptyArrayStorage);

LABEL_34:
      v30 = (_QWORD *)(v25 + *(_QWORD *)(*(_QWORD *)v25 + 120));
      swift_beginAccess(v30, v51, 0, 0);
      swift_bridgeObjectRetain(*v30);
      sub_100621580(v31);
      swift_release(v25);
      v14 = v53;
      if ((unint64_t)v53 >> 62)
      {
        if (v53 < 0)
          v36 = v53;
        else
          v36 = v53 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v53);
        v37 = _CocoaArrayWrapper.endIndex.getter(v36);
        swift_bridgeObjectRelease();
        if (!v37)
          goto LABEL_5;
      }
      else if (!*(_QWORD *)((v53 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_5;
      }
    }
  }
  swift_bridgeObjectRetain(a1);
  return a1;
}

double *sub_100C73468(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double *v15;
  double *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  char v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD v26[2];
  uint64_t v27;
  unint64_t v28;

  v26[1] = a2;
  v3 = type metadata accessor for CRLBoardItemPeerSyncUpdate(0);
  __chkstk_darwin(v3);
  v5 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v27 = (uint64_t)v26 - v7;
  __chkstk_darwin(v8);
  v11 = (char *)v26 - v10;
  v12 = *(_QWORD *)(a1 + 16);
  if (!v12)
    return _swiftEmptyArrayStorage;
  v28 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v13 = a1 + v28;
  v14 = *(_QWORD *)(v9 + 72);
  v26[0] = a1;
  swift_bridgeObjectRetain(a1);
  v15 = _swiftEmptyArrayStorage;
  v16 = _swiftEmptyArrayStorage;
  do
  {
    sub_1004B8460(v13, (uint64_t)v11, type metadata accessor for CRLBoardItemPeerSyncUpdate);
    v19 = sub_100C822A4();
    if (v19 && (v20 = sub_10066BA5C((uint64_t)v19), swift_bridgeObjectRelease(), (v20 & 1) != 0))
    {
      sub_1004B8460((uint64_t)v11, v27, type metadata accessor for CRLBoardItemPeerSyncUpdate);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v15 = (double *)sub_100D10734(0, *((_QWORD *)v15 + 2) + 1, 1, (unint64_t)v15);
      v22 = *((_QWORD *)v15 + 2);
      v21 = *((_QWORD *)v15 + 3);
      v23 = v22 + 1;
      if (v22 >= v21 >> 1)
      {
        v17 = sub_100D10734(v21 > 1, v22 + 1, 1, (unint64_t)v15);
        v18 = v27;
        v15 = (double *)v17;
      }
      else
      {
        v17 = (uint64_t)v15;
        v18 = v27;
      }
    }
    else
    {
      sub_1004B8460((uint64_t)v11, (uint64_t)v5, type metadata accessor for CRLBoardItemPeerSyncUpdate);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v16 = (double *)sub_100D10734(0, *((_QWORD *)v16 + 2) + 1, 1, (unint64_t)v16);
      v22 = *((_QWORD *)v16 + 2);
      v24 = *((_QWORD *)v16 + 3);
      v23 = v22 + 1;
      if (v22 < v24 >> 1)
      {
        v17 = (uint64_t)v16;
        v18 = (uint64_t)v5;
      }
      else
      {
        v17 = sub_100D10734(v24 > 1, v22 + 1, 1, (unint64_t)v16);
        v18 = (uint64_t)v5;
        v16 = (double *)v17;
      }
    }
    *(_QWORD *)(v17 + 16) = v23;
    sub_1004B84E0(v18, v17 + v28 + v22 * v14, type metadata accessor for CRLBoardItemPeerSyncUpdate);
    sub_1004B84A4((uint64_t)v11, type metadata accessor for CRLBoardItemPeerSyncUpdate);
    v13 += v14;
    --v12;
  }
  while (v12);
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_100C736E8()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 41, 7);
}

uint64_t sub_100C73714(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100C6D8A0(a1, a2, *(unint64_t **)(v2 + 16));
}

uint64_t sub_100C7371C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100C6D9B4(a1, a2, *(unint64_t **)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_100C73728()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_bridgeObjectRelease(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100C7375C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  __int128 v5;

  v4 = swift_task_alloc(dword_10140C37C);
  v5 = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_1004CFD00;
  *(_OWORD *)(v4 + 72) = v5;
  *(_QWORD *)(v4 + 64) = a1;
  return swift_task_switch(sub_100C6DB84, 0, 0);
}

uint64_t sub_100C737C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLBoardItemPeerSyncUpdate(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100C73808@<X0>(double *a1@<X8>)
{
  char *v1;

  return sub_1005F6B50(v1, a1);
}

uint64_t sub_100C73820()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100C7384C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

double sub_100C7385C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

double sub_100C7386C(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

void sub_100C73878(void *a1, uint64_t a2, int a3)
{
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v9;
  unsigned __int8 *v10;
  uint64_t v11;
  uint64_t v12;
  Class isa;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(__n128);
  id v22;
  __n128 v23;
  void *v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t (*v28)(__n128);
  __n128 v29;
  void *v30;
  id v31;
  _BYTE *v32;
  unsigned __int8 *v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  id v43;
  _BYTE *v44;
  id v45;
  id v46;
  id v47;
  unint64_t v48;
  void *v49;
  id v50;
  void *v51;
  char *v52;
  uint64_t v53;
  id v54;
  id v55;
  id v56;
  id v57;
  void *v58;
  id v59;
  uint64_t v60;
  uint64_t (*v61)(__n128);
  __n128 v62;
  void *v63;
  id v64;
  _BYTE *v65;
  unsigned __int8 *v66;
  unsigned __int8 *v67;
  float v68;
  float v69;
  float v70;
  float v71;
  float v72;
  uint64_t v73;
  id v74;
  id v75;
  _BYTE *v76;
  id v77;
  id v78;
  id v79;
  id v80;
  CKRecordID v81;
  Swift::String v82;
  _BYTE v83[12];
  unsigned int v84;
  id v85;
  uint64_t v86;
  unsigned __int8 *v87;
  uint64_t v88;
  char *v89;
  id v90;
  int v91;
  uint64_t v92;
  id v93;
  id v94;
  int *v95;
  _BYTE *v96;
  void *v97;
  _QWORD v98[5];

  v5 = v3;
  v95 = (int *)type metadata accessor for CRLMaskInfoData(0);
  __chkstk_darwin(v95);
  v10 = &v83[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v96 = &v83[-v12];
  isa = UUID._bridgeToObjectiveC()().super.isa;
  v14 = objc_msgSend(a1, "getBoardItemForUUID:", isa);

  if (!v14)
    goto LABEL_13;
  v15 = type metadata accessor for CRLImageItem(0);
  v16 = swift_dynamicCastClass(v14, v15);
  if (!v16)
  {

LABEL_13:
    sub_100757E04(&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandReplaceImage.swift", 94, 2, 29, "Unable to retrieve image item", 29, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Unable to retrieve image item");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commit(with:transaction:undoable:)", 34, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandReplaceImage.swift", 94, 2u, 29, (uint64_t)"Unable to retrieve image item", 29, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v81, v82);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
    return;
  }
  v17 = v16;
  v18 = v14;
  sub_100DBEE64(v17, (uint64_t)&off_10127C5E0);

  if (v4)
  {

  }
  else
  {
    v91 = a3;
    v92 = a2;
    v19 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
    v20 = *(_QWORD *)(v17 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    v21 = *(uint64_t (**)(__n128))(*(_QWORD *)v20 + 288);
    v22 = v18;
    v23 = swift_retain(v20);
    v24 = (void *)v21(v23);
    v93 = v22;
    v94 = v24;

    swift_release(v20);
    v25 = (void *)sub_1008D2EB8();
    v86 = v19;
    v87 = v10;
    v88 = 0;
    v89 = v5;
    if (v25)
    {
      v26 = objc_msgSend(v25, "geometry");
    }
    else
    {
      v27 = *(_QWORD *)(v17 + v19);
      v28 = *(uint64_t (**)(__n128))(*(_QWORD *)v27 + 288);
      v29 = swift_retain(v27);
      v30 = (void *)v28(v29);
      swift_release(v27);
      v31 = v30;
      v32 = v96;
      sub_1008AC6F8(v31, (uint64_t)v96);
      sub_1008AD798((uint64_t)v32, (uint64_t)v10);
      v90 = objc_allocWithZone((Class)CRLMaskInfo);
      v33 = &v10[v95[5]];
      v34 = *(float *)v33;
      v35 = *((float *)v33 + 1);
      v36 = *((float *)v33 + 2);
      v37 = *((float *)v33 + 3);
      v38 = *((float *)v33 + 4);
      v39 = v33[20];
      v40 = v33[21];
      v84 = v33[22];
      v41 = v33[23];
      v42 = objc_allocWithZone((Class)CRLCanvasInfoGeometry);
      v85 = v93;
      v43 = objc_msgSend(v42, "initWithPosition:size:widthValid:heightValid:horizontalFlip:verticalFlip:angle:", v39, v40, v84, v41, v34, v35, v36, v37, v38);
      v44 = sub_1009352D4(v10);
      v45 = objc_msgSend(v90, "initWithImageItem:geometry:pathSource:", v17, v43, v44);

      sub_100C744A8((uint64_t)v10);
      sub_100C744A8((uint64_t)v32);
      v26 = objc_msgSend(v45, "geometry");

    }
    v46 = v94;
    v47 = objc_msgSend(v94, "mutableCopy");
    _bridgeAnyObjectToAny(_:)(v98, v47);
    swift_unknownObjectRelease(v47);
    v48 = sub_10088B6E8();
    swift_dynamicCast(&v97, v98, (char *)&type metadata for Any + 8, v48, 7);
    v49 = v97;
    v50 = objc_msgSend(v26, "mutableCopy");
    _bridgeAnyObjectToAny(_:)(v98, v50);
    swift_unknownObjectRelease(v50);
    swift_dynamicCast(&v97, v98, (char *)&type metadata for Any + 8, v48, 7);
    v51 = v97;
    v52 = v89;
    v53 = *(_QWORD *)&v89[OBJC_IVAR____TtC8Freeform22CRLCommandReplaceImage_imageData];
    v54 = v93;
    v55 = v26;
    v90 = v51;
    sub_1008D2AD0(v49, v51, v53, v46, v26, v17);
    v93 = v55;

    sub_1008CBD68(v53, *(_QWORD *)&v52[OBJC_IVAR____TtC8Freeform22CRLCommandReplaceImage_thumbnailData]);
    v56 = v54;
    v57 = v49;
    sub_100776700(v57);

    v58 = (void *)sub_1008D2EB8();
    if (v58)
    {
      v59 = v58;
    }
    else
    {
      v60 = *(_QWORD *)(v17 + v86);
      v61 = *(uint64_t (**)(__n128))(*(_QWORD *)v60 + 288);
      v62 = swift_retain(v60);
      v63 = (void *)v61(v62);
      swift_release(v60);
      v64 = v63;
      v65 = v96;
      sub_1008AC6F8(v64, (uint64_t)v96);
      v66 = v87;
      sub_1008AD798((uint64_t)v65, (uint64_t)v87);
      v89 = (char *)objc_allocWithZone((Class)CRLMaskInfo);
      v67 = &v66[v95[5]];
      v68 = *(float *)v67;
      v69 = *((float *)v67 + 1);
      v70 = *((float *)v67 + 2);
      v71 = *((float *)v67 + 3);
      v72 = *((float *)v67 + 4);
      v73 = v67[20];
      LODWORD(v86) = v67[21];
      LODWORD(v85) = v67[22];
      v84 = v67[23];
      v74 = objc_allocWithZone((Class)CRLCanvasInfoGeometry);
      v95 = (int *)v56;
      v75 = objc_msgSend(v74, "initWithPosition:size:widthValid:heightValid:horizontalFlip:verticalFlip:angle:", v73, v86, v85, v84, v68, v69, v70, v71, v72);
      v76 = sub_1009352D4(v66);
      v59 = objc_msgSend(v89, "initWithImageItem:geometry:pathSource:", v17, v75, v76);

      sub_100C744A8((uint64_t)v66);
      sub_100C744A8((uint64_t)v65);
      v58 = 0;
    }
    v77 = v58;
    v78 = v90;
    objc_msgSend(v59, "setGeometry:", v90);
    v79 = v59;
    sub_1008D3420(v59);

    v80 = v56;
    sub_100DB0D78(v17, (uint64_t)&off_10127C5E0, v91);

  }
}

id sub_100C73FE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  objc_super v13;

  v7 = (char *)objc_allocWithZone(v3);
  v8 = &v7[OBJC_IVAR____TtC8Freeform22CRLCommandReplaceImage_id];
  v9 = type metadata accessor for UUID(0);
  v10 = *(_QWORD *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v8, a1, v9);
  *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform22CRLCommandReplaceImage_imageData] = a2;
  *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform22CRLCommandReplaceImage_thumbnailData] = a3;
  v13.receiver = v7;
  v13.super_class = v3;
  v11 = objc_msgSendSuper2(&v13, "init");
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1, v9);
  return v11;
}

void sub_100C742F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8Freeform22CRLCommandReplaceImage_id;
  v2 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

}

id sub_100C7434C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCommandReplaceImage(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100C743E0()
{
  return type metadata accessor for CRLCommandReplaceImage(0);
}

uint64_t type metadata accessor for CRLCommandReplaceImage(uint64_t a1)
{
  uint64_t result;

  result = qword_10140C3C8;
  if (!qword_10140C3C8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLCommandReplaceImage);
  return result;
}

uint64_t sub_100C74424(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[2] = "\b";
    result = swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 200);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_100C744A8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CRLMaskInfoData(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *sub_100C744E4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v16);
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    *(_BYTE *)(a1 + 4) = *((_BYTE *)a2 + 4);
    v7 = *(int *)(a3 + 36);
    v8 = a1 + v7;
    v9 = (uint64_t)a2 + v7;
    *(_BYTE *)(a1 + v7) = *((_BYTE *)a2 + v7);
    v10 = *(int *)(sub_1004B804C(&qword_1013F20C0) + 48);
    v11 = (void *)(v8 + v10);
    v12 = (const void *)(v9 + v10);
    v13 = type metadata accessor for Date(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = sub_1004B804C(&qword_1013E04F0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    v17 = *(int *)(a3 + 40);
    v18 = *(uint64_t *)((char *)a2 + v17);
    *(_QWORD *)((char *)v4 + v17) = v18;
    swift_bridgeObjectRetain(v18);
  }
  return v4;
}

double sub_100C74614(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double result;

  v2 = a1 + *(int *)(a2 + 36);
  v3 = v2 + *(int *)(sub_1004B804C(&qword_1013F20C0) + 48);
  v4 = type metadata accessor for Date(0);
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_100C746A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  v6 = *(int *)(a3 + 36);
  v7 = a1 + v6;
  v8 = a2 + v6;
  *(_BYTE *)(a1 + v6) = *(_BYTE *)(a2 + v6);
  v9 = *(int *)(sub_1004B804C(&qword_1013F20C0) + 48);
  v10 = (void *)(v7 + v9);
  v11 = (const void *)(v8 + v9);
  v12 = type metadata accessor for Date(0);
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    v14 = sub_1004B804C(&qword_1013E04F0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  v15 = *(int *)(a3 + 40);
  v16 = *(_QWORD *)(a2 + v15);
  *(_QWORD *)(a1 + v15) = v16;
  swift_bridgeObjectRetain(v16);
  return a1;
}

_BYTE *sub_100C747A4(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(_BYTE *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  v6 = *(int *)(a3 + 36);
  v7 = &a1[v6];
  v8 = &a2[v6];
  a1[v6] = a2[v6];
  v9 = *(int *)(sub_1004B804C(&qword_1013F20C0) + 48);
  v10 = &v7[v9];
  v11 = &v8[v9];
  v12 = type metadata accessor for Date(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v13 + 24))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(_BYTE *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v17 = sub_1004B804C(&qword_1013E04F0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  v18 = *(int *)(a3 + 40);
  v19 = *(_QWORD *)&a2[v18];
  *(_QWORD *)&a1[v18] = v19;
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100C74918(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  v6 = *(int *)(a3 + 36);
  v7 = a1 + v6;
  v8 = a2 + v6;
  *(_BYTE *)(a1 + v6) = *(_BYTE *)(a2 + v6);
  v9 = *(int *)(sub_1004B804C(&qword_1013F20C0) + 48);
  v10 = (void *)(v7 + v9);
  v11 = (const void *)(v8 + v9);
  v12 = type metadata accessor for Date(0);
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    v14 = sub_1004B804C(&qword_1013E04F0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  *(_QWORD *)(a1 + *(int *)(a3 + 40)) = *(_QWORD *)(a2 + *(int *)(a3 + 40));
  return a1;
}

_BYTE *sub_100C74A18(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(_BYTE *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  v6 = *(int *)(a3 + 36);
  v7 = &a1[v6];
  v8 = &a2[v6];
  a1[v6] = a2[v6];
  v9 = *(int *)(sub_1004B804C(&qword_1013F20C0) + 48);
  v10 = &v7[v9];
  v11 = &v8[v9];
  v12 = type metadata accessor for Date(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v13 + 40))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(_BYTE *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v17 = sub_1004B804C(&qword_1013E04F0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  *(_QWORD *)&a1[*(int *)(a3 + 40)] = *(_QWORD *)&a2[*(int *)(a3 + 40)];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100C74B84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C74B90);
}

uint64_t sub_100C74B90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1004B804C(&qword_1013F20C0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 36), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 40));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_100C74C14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C74C20);
}

uint64_t sub_100C74C20(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1004B804C(&qword_1013F20C0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 36), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 40)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for CRLZoneSyncResultScenarios(uint64_t a1)
{
  uint64_t result;

  result = qword_10140C430;
  if (!qword_10140C430)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLZoneSyncResultScenarios);
  return result;
}

void sub_100C74CDC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _BYTE v4[32];
  _QWORD v5[7];

  v5[0] = &unk_100F30200;
  v5[1] = &unk_100F30200;
  v5[2] = &unk_100F30200;
  v5[3] = &unk_100F30200;
  v5[4] = &unk_100F30200;
  sub_10056ACC0(319);
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout2(v4, &unk_100F30200, *(_QWORD *)(v2 - 8) + 64);
    v5[5] = v4;
    v5[6] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_initStructMetadata(a1, 256, 7, v5, a1 + 16);
  }
}

uint64_t sub_100C74D84(void *a1, uint64_t a2)
{
  _QWORD *v2;
  void *v4;
  _QWORD *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, __n128);
  __n128 v15;
  void *v16;
  id v17;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v19;
  unint64_t v20;
  uint64_t v21;
  _BOOL8 v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  id v30;
  id v31;
  double *v32;
  uint64_t result;
  uint64_t v34;
  _QWORD *v36;
  _QWORD *v37;
  __int128 v38;
  _QWORD *v39;

  v4 = a1;
  v2[4] = _swiftEmptyArrayStorage;
  v2[5] = 0;
  v5 = v2 + 4;
  v2[2] = a1;
  v6 = *(_QWORD *)(a2 + 16);
  if (!v6)
  {
    v31 = a1;
    swift_bridgeObjectRelease();
    v9 = _swiftEmptyDictionarySingleton;
LABEL_18:
    v2[3] = v9;
    v32 = sub_100C75004();

    swift_beginAccess(v5, &v39, 1, 0);
    v2[4] = v32;
    swift_bridgeObjectRelease();
    return (uint64_t)v2;
  }
  v7 = a1;
  v8 = 0;
  v9 = _swiftEmptyDictionarySingleton;
  while (1)
  {
    v38 = *(_OWORD *)(a2 + 16 * v8 + 32);
    v11 = *(_QWORD *)(a2 + 16 * v8 + 32);
    ObjectType = swift_getObjectType(v11);
    v39 = (_QWORD *)v38;
    v13 = *(_QWORD *)(*((_QWORD *)&v38 + 1) + 8);
    v14 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v13 + 8);
    v15 = swift_unknownObjectRetain(v11);
    v16 = (void *)v14(ObjectType, v13, v15);
    swift_unknownObjectRetain(v11);
    v17 = v16;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v9);
    v39 = v9;
    v20 = sub_100843848((uint64_t)v17);
    v21 = v9[2];
    v22 = (v19 & 1) == 0;
    v23 = v21 + v22;
    if (__OFADD__(v21, v22))
      break;
    v24 = v19;
    if (v9[3] >= v23)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v9 = v39;
        if ((v19 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_100831978();
        v9 = v39;
        if ((v24 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_10081F220(v23, isUniquelyReferenced_nonNull_native);
      v25 = sub_100843848((uint64_t)v17);
      if ((v24 & 1) != (v26 & 1))
        goto LABEL_21;
      v20 = v25;
      v9 = v39;
      if ((v24 & 1) != 0)
      {
LABEL_3:
        v10 = v9[7];
        swift_unknownObjectRelease(*(_QWORD *)(v10 + 16 * v20));
        *(_OWORD *)(v10 + 16 * v20) = v38;
        goto LABEL_4;
      }
    }
    v9[(v20 >> 6) + 8] |= 1 << v20;
    *(_QWORD *)(v9[6] + 8 * v20) = v17;
    *(_OWORD *)(v9[7] + 16 * v20) = v38;
    v27 = v9[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (v28)
      goto LABEL_20;
    v9[2] = v29;
    v30 = v17;
LABEL_4:
    ++v8;
    swift_unknownObjectRelease(v11);

    swift_bridgeObjectRelease();
    if (v6 == v8)
    {
      swift_bridgeObjectRelease();
      v5 = v36;
      v2 = v37;
      v4 = a1;
      goto LABEL_18;
    }
  }
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  v34 = sub_1004B8930(0, &qword_1013E8810, CKRecordID_ptr);
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v34);
  __break(1u);
  return result;
}

double *sub_100C75004()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double *v24;
  double *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  _BYTE v31[32];
  uint64_t v32;
  double *v33;
  double *v34;
  double *v35;

  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 24));
  v2 = sub_100A675B4(v1, (void (*)(_QWORD **__return_ptr, id *, __n128))sub_100C75410, 0, (void (*)(_QWORD **__return_ptr, _QWORD *))sub_100C75420, 0, (void (*)(uint64_t **__return_ptr, _QWORD *, __n128))sub_100C75470, 0);
  swift_bridgeObjectRelease();
  v34 = _swiftEmptyArrayStorage;
  v35 = _swiftEmptyArrayStorage;
  v33 = _swiftEmptyArrayStorage;
  if ((unint64_t)v2 >> 62)
    goto LABEL_53;
  v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v3)
  {
LABEL_57:
    swift_bridgeObjectRelease();
    v25 = _swiftEmptyArrayStorage;
    v24 = _swiftEmptyArrayStorage;
    goto LABEL_58;
  }
LABEL_3:
  v4 = 0;
  do
  {
    if ((v2 & 0xC000000000000001) != 0)
    {
      v5 = specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v2);
      v6 = __OFADD__(v4++, 1);
      if (v6)
        goto LABEL_51;
    }
    else
    {
      if (v4 >= *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_52;
      v5 = *(_QWORD *)(v2 + 32 + 8 * v4);
      swift_retain(v5);
      v6 = __OFADD__(v4++, 1);
      if (v6)
        goto LABEL_51;
    }
    v7 = *(_QWORD *)(v5 + 16);
    v32 = (uint64_t)_swiftEmptyArrayStorage;
    v8 = swift_retain_n(v7, 2);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v8);
    v10 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v9 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v10 >= v9 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v9 > 1, v10 + 1, 1);
    v11 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v10, v7);
    specialized Array._endMutation()(v11);
    v12 = v32;
    if ((unint64_t)v32 >> 62)
    {
      if (v32 < 0)
        v22 = v32;
      else
        v22 = v32 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v32);
      v23 = _CocoaArrayWrapper.endIndex.getter(v22);
      swift_bridgeObjectRelease();
      if (!v23)
        goto LABEL_4;
      while (1)
      {
LABEL_15:
        v13 = (unint64_t)v12 >> 62;
        if ((unint64_t)v12 >> 62)
        {
          if (v12 < 0)
            v16 = v12;
          else
            v16 = v12 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v12);
          v30 = _CocoaArrayWrapper.endIndex.getter(v16);
          swift_bridgeObjectRelease();
          if (!v30)
          {
LABEL_47:
            __break(1u);
LABEL_48:
            __break(1u);
LABEL_49:
            __break(1u);
LABEL_50:
            __break(1u);
LABEL_51:
            __break(1u);
LABEL_52:
            __break(1u);
LABEL_53:
            if (v2 < 0)
              v26 = v2;
            else
              v26 = v2 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v2);
            v3 = _CocoaArrayWrapper.endIndex.getter(v26);
            swift_bridgeObjectRelease();
            if (!v3)
              goto LABEL_57;
            goto LABEL_3;
          }
          swift_bridgeObjectRetain(v12);
          v17 = _CocoaArrayWrapper.endIndex.getter(v16);
          swift_bridgeObjectRelease();
          if (!v17)
            goto LABEL_48;
        }
        else if (!*(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          goto LABEL_47;
        }
        if ((v12 & 0xC000000000000001) != 0)
        {
          v14 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v12);
          if (!v13)
            goto LABEL_20;
        }
        else
        {
          if (!*(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_49;
          v14 = *(_QWORD *)(v12 + 32);
          swift_retain(v14);
          if (!v13)
          {
LABEL_20:
            if (!*(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_50;
            goto LABEL_21;
          }
        }
        if (v12 < 0)
          v18 = v12;
        else
          v18 = v12 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v12);
        v19 = _CocoaArrayWrapper.endIndex.getter(v18);
        swift_bridgeObjectRelease();
        if (!v19)
          goto LABEL_50;
LABEL_21:
        sub_100CFED70(0, 1);
        sub_100C754C0(v14, &v34, &v35, &v33);
        swift_beginAccess(v14 + 48, v31, 0, 0);
        swift_bridgeObjectRetain(*(_QWORD *)(v14 + 48));
        sub_100620D9C(v15);
        swift_release(v14);
        v12 = v32;
        if ((unint64_t)v32 >> 62)
        {
          if (v32 < 0)
            v20 = v32;
          else
            v20 = v32 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v32);
          v21 = _CocoaArrayWrapper.endIndex.getter(v20);
          swift_bridgeObjectRelease();
          if (!v21)
            goto LABEL_4;
        }
        else if (!*(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          goto LABEL_4;
        }
      }
    }
    if (*(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_15;
LABEL_4:
    swift_release(v5);
    swift_release(v7);
    swift_bridgeObjectRelease();
  }
  while (v4 != v3);
  swift_bridgeObjectRelease();
  v24 = v34;
  v25 = v35;
LABEL_58:
  swift_bridgeObjectRetain(v24);
  sub_100620D90(v27);
  swift_bridgeObjectRetain(v25);
  sub_100620D90(v28);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v33;
}

uint64_t sub_100C75410@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  __int128 v2;

  v2 = *(_OWORD *)(a1 + 8);
  *a2 = v2;
  return swift_unknownObjectRetain(v2);
}

uint64_t sub_100C75420@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t result;
  uint64_t v6;

  v3 = a1[1];
  ObjectType = swift_getObjectType(*a1);
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v3 + 32) + 8))(ObjectType);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_100C75470@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t result;
  uint64_t v6;

  v3 = a1[1];
  ObjectType = swift_getObjectType(*a1);
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v3 + 32) + 16))(ObjectType);
  *a2 = result;
  a2[1] = v6;
  return result;
}

void sub_100C754C0(uint64_t a1, _QWORD *a2, _QWORD *a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  void *v12;
  uint64_t v13;
  id v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char v18;
  id v19;
  id v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;

  v4 = *(_QWORD *)(a1 + 32);
  if (v4)
  {
    v8 = *(_QWORD *)(a1 + 40);
    ObjectType = swift_getObjectType(*(_QWORD *)(a1 + 32));
    v10 = *(_QWORD *)(v8 + 8);
    v11 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    swift_unknownObjectRetain(v4);
    v12 = (void *)v11(ObjectType, v10);
    v13 = *(_QWORD *)(v8 + 24);
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v13 + 16))(ObjectType, v13) & 1) != 0)
    {
      v14 = v12;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v14);
      v16 = *(_QWORD *)((*a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v15 = *(_QWORD *)((*a2 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v16 >= v15 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v15 > 1, v16 + 1, 1);
      v17 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, v14);
    }
    else
    {
      v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(ObjectType, v13);
      v19 = v12;
      v20 = v19;
      if ((v18 & 1) != 0)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v19);
        v22 = *(_QWORD *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v21 = *(_QWORD *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v22 >= v21 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v21 > 1, v22 + 1, 1);
        v17 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v22, v20);
      }
      else
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v19);
        v24 = *(_QWORD *)((*a4 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v23 = *(_QWORD *)((*a4 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v24 >= v23 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v23 > 1, v24 + 1, 1);
        v17 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v24, v20);
      }
    }
    specialized Array._endMutation()(v17);
    swift_unknownObjectRelease(v4);

  }
}

uint64_t sub_100C75698()
{
  _QWORD *v0;
  id v1;
  _QWORD *v2;
  uint64_t *v3;
  uint64_t v4;
  mach_header_64 *i;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t *v17;
  uint64_t v18;
  mach_header_64 *v19;
  void *v20;
  uint64_t v21;
  uint64_t inited;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  unint64_t v33;
  BOOL v34;
  unint64_t v35;
  uint64_t ObjectType;
  char v37;
  mach_header_64 *v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  Swift::String v67;
  void *v68;
  Swift::String v69;
  Class isa;
  char v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  BOOL v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  __n128 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t result;
  int v89;
  unint64_t v90;
  char v91;
  _BYTE v92[72];
  _BYTE v93[72];
  _BYTE v94[24];
  _BYTE v95[24];
  uint64_t v96;
  _BYTE v97[32];

  v2 = v0;
  v3 = v0 + 4;
  swift_beginAccess(v0 + 4, v97, 0, 0);
  v4 = v0[4];
  if ((unint64_t)v4 >> 62)
    goto LABEL_137;
  if (!*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
    return 0;
LABEL_3:
  v91 = 0;
  v90 = 0;
  v96 = (uint64_t)_swiftEmptyArrayStorage;
  for (i = (mach_header_64 *)&_mh_execute_header; ; i = (mach_header_64 *)&_mh_execute_header)
  {
    while (1)
    {
      v6 = *v3;
      if ((unint64_t)*v3 >> 62)
      {
        if (v6 < 0)
          v47 = *v3;
        else
          v47 = v6 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(*v3);
        v7 = _CocoaArrayWrapper.endIndex.getter(v47);
        swift_bridgeObjectRelease();
        if (!v7)
          goto LABEL_129;
      }
      else
      {
        v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (!v7)
          goto LABEL_129;
      }
      v8 = v96;
      if ((unint64_t)v96 >> 62)
      {
        if (v96 < 0)
          v48 = v96;
        else
          v48 = v96 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v96);
        v49 = _CocoaArrayWrapper.endIndex.getter(v48);
        swift_bridgeObjectRelease();
        v10 = v49 + 1;
        if (__OFADD__(v49, 1))
          goto LABEL_123;
      }
      else
      {
        v9 = *(_QWORD *)((v96 & 0xFFFFFFFFFFFFF8) + 0x10);
        v10 = v9 + 1;
        if (__OFADD__(v9, 1))
          goto LABEL_123;
      }
      if (v10 > 100)
        goto LABEL_129;
      v11 = *v3;
      if ((*v3 & 0xC000000000000001) == 0)
        break;
      swift_bridgeObjectRetain(*v3);
      v1 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v11);
      swift_bridgeObjectRelease();
      v13 = v2[3];
      if (*(_QWORD *)(v13 + 16))
        goto LABEL_12;
LABEL_29:
      sub_100757E04(&_mh_execute_header, (uint64_t)"advanceToNextBatchForSaving(syncLogicProvider:)", 47, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLSyncRecordGroup.swift", 83, 2, 100, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"advanceToNextBatchForSaving(syncLogicProvider:)", 47, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLSyncRecordGroup.swift", 83, 2u, 100, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
      swift_beginAccess(v3, v95, 33, 0);
      v29 = *v3;
      if ((unint64_t)*v3 >> 62)
      {
        if (v29 < 0)
          v50 = *v3;
        else
          v50 = v29 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(*v3);
        v7 = _CocoaArrayWrapper.endIndex.getter(v50);
        swift_bridgeObjectRelease();
        if (!v7)
          goto LABEL_125;
      }
      else
      {
        v7 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (!v7)
          goto LABEL_125;
      }
      v30 = *v3;
      if ((unint64_t)*v3 >> 62)
      {
        if (v30 < 0)
          v51 = *v3;
        else
          v51 = v30 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(*v3);
        v7 = _CocoaArrayWrapper.endIndex.getter(v51);
        swift_bridgeObjectRelease();
        if (!v7)
          goto LABEL_126;
      }
      else
      {
        v7 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (!v7)
          goto LABEL_126;
      }
      if ((v30 & 0xC000000000000001) != 0)
      {
        v31 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v30);
      }
      else
      {
        if (!*(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_127;
        v31 = *(id *)(v30 + 32);
      }
      v32 = v31;
      v4 = *v3;
      if ((unint64_t)*v3 >> 62)
      {
        if (v4 < 0)
          v52 = *v3;
        else
          v52 = v4 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(*v3);
        v53 = _CocoaArrayWrapper.endIndex.getter(v52);
        swift_bridgeObjectRelease();
        if (!v53)
        {
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          if (v4 < 0)
            v86 = v4;
          else
            v86 = v4 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v4);
          v87 = _CocoaArrayWrapper.endIndex.getter(v86);
          swift_bridgeObjectRelease();
          if (!v87)
            return 0;
          goto LABEL_3;
        }
      }
      else if (!*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_132;
      }
      sub_100CFF3EC(0, 1);
      swift_endAccess(v95);

    }
    if (!*(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_124;
    v12 = *(void **)(v11 + 32);
    v13 = v2[3];
    v14 = *(_QWORD *)(v13 + 16);
    v1 = v12;
    if (!v14)
      goto LABEL_29;
LABEL_12:
    v1 = v1;
    v15 = sub_100843848((uint64_t)v1);
    if ((v16 & 1) == 0)
    {

      goto LABEL_29;
    }
    v17 = (uint64_t *)(*(_QWORD *)(v13 + 56) + 16 * v15);
    v7 = *v17;
    v18 = v17[1];
    swift_unknownObjectRetain(*v17);

    v19 = (mach_header_64 *)sub_100B3B5F8(v7, v18);
    if (v19)
      break;
    sub_100757E04(&_mh_execute_header, (uint64_t)"advanceToNextBatchForSaving(syncLogicProvider:)", 47, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLSyncRecordGroup.swift", 83, 2, 105, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"advanceToNextBatchForSaving(syncLogicProvider:)", 47, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLSyncRecordGroup.swift", 83, 2u, 105, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    if (qword_1013DD870 != -1)
      swift_once(&qword_1013DD870, sub_100A059E0);
    swift_beginAccess(&static OS_os_log.dataSync, v94, 0, 0);
    v20 = (void *)static OS_os_log.dataSync;
    v21 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v21, v93);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    *(_QWORD *)(inited + 56) = sub_1004B8930(0, &qword_1013E8810, CKRecordID_ptr);
    *(_QWORD *)(inited + 64) = sub_100C76278();
    *(_QWORD *)(inited + 32) = v1;
    v1 = v1;
    v23 = v20;
    v24 = static os_log_type_t.error.getter(v23);
    sub_100A06EBC((uint64_t)v23, &_mh_execute_header, v24, "Failed to create cloud record from local record for ID %{public}@", 65, 2, inited);
    swift_setDeallocating(inited);
    v25 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v25);

    swift_beginAccess(v3, v95, 33, 0);
    v4 = *v3;
    if ((unint64_t)*v3 >> 62)
    {
      if (v4 < 0)
        v54 = *v3;
      else
        v54 = v4 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*v3);
      v26 = _CocoaArrayWrapper.endIndex.getter(v54);
      swift_bridgeObjectRelease();
    }
    else
    {
      v26 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    if (!v26)
      goto LABEL_133;
    v4 = *v3;
    if ((unint64_t)*v3 >> 62)
    {
      if (v4 < 0)
        v55 = *v3;
      else
        v55 = v4 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*v3);
      v56 = _CocoaArrayWrapper.endIndex.getter(v55);
      swift_bridgeObjectRelease();
      if (!v56)
        goto LABEL_134;
    }
    else if (!*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_134;
    }
    if ((v4 & 0xC000000000000001) != 0)
    {
      v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v4);
    }
    else
    {
      if (!*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_135;
      v27 = *(id *)(v4 + 32);
    }
    v28 = v27;
    v4 = *v3;
    if ((unint64_t)*v3 >> 62)
    {
      if (v4 < 0)
        v57 = *v3;
      else
        v57 = v4 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*v3);
      v58 = _CocoaArrayWrapper.endIndex.getter(v57);
      swift_bridgeObjectRelease();
      if (!v58)
        goto LABEL_136;
    }
    else if (!*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_136;
    }
    sub_100CFF3EC(0, 1);
    swift_endAccess(v95);

LABEL_27:
    swift_unknownObjectRelease(v7);
  }
  i = v19;
  v33 = (unint64_t)-[mach_header_64 size](v19, "size");
  if ((v33 & 0x8000000000000000) != 0)
    goto LABEL_149;
  v34 = __CFADD__(v33, v90);
  v90 += v33;
  if (!v34)
  {
    if (qword_1013DD380 != -1)
      swift_once(&qword_1013DD380, sub_100897130);
    v35 = qword_10147FBC0;
    if ((unint64_t)v8 >> 62)
    {
      if (v8 < 0)
        v59 = v8;
      else
        v59 = v8 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v8);
      v60 = _CocoaArrayWrapper.endIndex.getter(v59);
      swift_bridgeObjectRelease();
      if (v60)
        goto LABEL_45;
    }
    else if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_45:
      if (v35 < v90)
        goto LABEL_128;
    }
    ObjectType = swift_getObjectType(v7);
    v37 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 48))(ObjectType, v18);
    v38 = i;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v38);
    v40 = *(_QWORD *)((v96 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v39 = *(_QWORD *)((v96 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v40 >= v39 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v39 > 1, v40 + 1, 1);
    v41 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v40, v38);
    specialized Array._endMutation()(v41);
    swift_beginAccess(v3, v95, 33, 0);
    v42 = *v3;
    if ((unint64_t)*v3 >> 62)
    {
      if (v42 < 0)
        v61 = *v3;
      else
        v61 = v42 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*v3);
      v62 = _CocoaArrayWrapper.endIndex.getter(v61);
      swift_bridgeObjectRelease();
      if (!v62)
        goto LABEL_146;
    }
    else if (!*(_QWORD *)((v42 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_146;
    }
    v43 = *v3;
    if ((unint64_t)*v3 >> 62)
    {
      if (v43 < 0)
        v63 = *v3;
      else
        v63 = v43 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*v3);
      v64 = _CocoaArrayWrapper.endIndex.getter(v63);
      swift_bridgeObjectRelease();
      if (!v64)
        goto LABEL_147;
    }
    else if (!*(_QWORD *)((v43 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_147;
    }
    if ((v43 & 0xC000000000000001) != 0)
    {
      v44 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v43);
    }
    else
    {
      if (!*(_QWORD *)((v43 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_148;
      v44 = *(id *)(v43 + 32);
    }
    v45 = v44;
    v46 = *v3;
    if (!((unint64_t)*v3 >> 62))
    {
      i = *(mach_header_64 **)((v46 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!i)
        goto LABEL_122;
      goto LABEL_57;
    }
    if (v46 < 0)
      v65 = *v3;
    else
      v65 = v46 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v3);
    i = (mach_header_64 *)_CocoaArrayWrapper.endIndex.getter(v65);
    swift_bridgeObjectRelease();
    if (i)
    {
LABEL_57:
      v91 |= v37;
      sub_100CFF3EC(0, 1);
      swift_endAccess(v95);

      goto LABEL_27;
    }
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:

    swift_unknownObjectRelease(v7);
LABEL_129:
    sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
    v66 = v2[2];
    sub_1004B8930(0, (unint64_t *)&qword_1013E1770, CKRecordZoneID_ptr);
    v67._countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)(CKCurrentUserDefaultName);
    v67._object = v68;
    v69._countAndFlagsBits = 0x74654D6472616F42;
    v69._object = (void *)0xED00006174616461;
    isa = CKRecordZoneID.init(zoneName:ownerName:)(v69, v67).super.isa;
    v71 = static NSObject.== infix(_:_:)(v66, isa);

    v72 = v96;
    v73 = type metadata accessor for CRLSyncRecordSaveBatch();
    swift_allocObject(v73, 81, 7);
    swift_retain(v2);
    v74 = sub_100898414(v72, (uint64_t)v2, v91 & 1, (v71 & 1) == 0);
    swift_bridgeObjectRelease();
    swift_release(v2);
    v75 = v2[5];
    v76 = __OFADD__(v75, 1);
    v77 = v75 + 1;
    if (v76)
    {
      __break(1u);
    }
    else
    {
      v2[5] = v77;
      if (qword_1013DD870 == -1)
      {
LABEL_131:
        swift_beginAccess(&static OS_os_log.dataSync, v95, 0, 0);
        v78 = (void *)static OS_os_log.dataSync;
        v79 = sub_1004B804C((uint64_t *)&unk_1013E0180);
        v80 = swift_initStackObject(v79, v92);
        *(_OWORD *)(v80 + 16) = xmmword_100EF5E40;
        v81 = v2[5];
        *(_QWORD *)(v80 + 56) = &type metadata for Int;
        *(_QWORD *)(v80 + 64) = &protocol witness table for Int;
        *(_QWORD *)(v80 + 32) = v81;
        v82 = v78;
        v84 = static os_log_type_t.default.getter(v83);
        sub_100A06EBC((uint64_t)v82, &_mh_execute_header, v84, "Formed new batch #%d for save task.", 35, 2, v80);
        swift_setDeallocating(v80);
        v85 = sub_1004B804C(&qword_1013E0190);
        swift_arrayDestroy(v80 + 32, 1, v85);

        return v74;
      }
    }
    swift_once(&qword_1013DD870, sub_100A059E0);
    goto LABEL_131;
  }
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  LOBYTE(v89) = 2;
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Negative value is not representable", 35, 2, "Swift/Integers.swift", 20, v89, 3451, 0);
  __break(1u);
  return result;
}

uint64_t sub_100C76224()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocClassInstance(v0, 48, 7);
}

uint64_t type metadata accessor for CRLSyncRecordGroup()
{
  return objc_opt_self(_TtC8Freeform18CRLSyncRecordGroup);
}

unint64_t sub_100C76278()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013F2108;
  if (!qword_1013F2108)
  {
    v1 = sub_1004B8930(255, &qword_1013E8810, CKRecordID_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1013F2108);
  }
  return result;
}

uint64_t sub_100C762D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v8;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(a2);
  v8 = a2;
  sub_100C7EAEC(a1, (uint64_t)sub_100AF236C, 0, isUniquelyReferenced_nonNull_native, (uint64_t)&v8);
  v6 = v8;
  swift_bridgeObjectRelease();
  if (v2)
    swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_100C7634C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  char *v27;
  char *v28;
  void (*v29)(void);
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  char *v33;
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  void (*v55)(char *, uint64_t, uint64_t);
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;

  v56 = a4;
  v60 = a3;
  v49 = a2;
  v58 = a5;
  v7 = sub_1004B804C(&qword_1013FFA70);
  __chkstk_darwin(v7);
  v61 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v59 = (char *)&v46 - v10;
  __chkstk_darwin(v11);
  v13 = (char *)&v46 - v12;
  v14 = type metadata accessor for CRLAssetData(0);
  v51 = v14;
  __chkstk_darwin(v14);
  v57 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v46 - v17;
  v54 = (char *)&v46 - v17;
  v48 = &v13[*(int *)(v7 + 64)];
  v19 = v48;
  v20 = type metadata accessor for UUID(0);
  v21 = *(_QWORD *)(v20 - 8);
  v55 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 32);
  v53 = v21;
  v47 = v20;
  v55(v13, a1, v20);
  v22 = &v13[*(int *)(v7 + 48)];
  v23 = v60;
  *(_QWORD *)v22 = a2;
  *((_QWORD *)v22 + 1) = v23;
  v24 = type metadata accessor for URL(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 32);
  v50 = v25;
  v26(v19, v56, v24);
  v56 = *(int *)(v14 + 24);
  *(_QWORD *)&v18[v56] = _swiftEmptyDictionarySingleton;
  v27 = &v59[*(int *)(v7 + 48)];
  v52 = &v59[*(int *)(v7 + 64)];
  v28 = v52;
  v29 = *(void (**)(void))(v21 + 16);
  v29();
  v30 = v49;
  v31 = v60;
  *(_QWORD *)v27 = v49;
  *((_QWORD *)v27 + 1) = v31;
  v32 = *(void (**)(char *, char *, uint64_t))(v25 + 16);
  v33 = v28;
  v34 = v48;
  v32(v33, v48, v24);
  v35 = &v61[*(int *)(v7 + 48)];
  v36 = &v61[*(int *)(v7 + 64)];
  v37 = v47;
  v29();
  *(_QWORD *)v35 = v30;
  *((_QWORD *)v35 + 1) = v31;
  v32(v36, v34, v24);
  swift_bridgeObjectRetain(v31);
  sub_1004CB800((uint64_t)v13, &qword_1013FFA70);
  v39 = *(_QWORD *)v35;
  v38 = *((_QWORD *)v35 + 1);
  v40 = (uint64_t)v57;
  v55(v57, (uint64_t)v59, v37);
  v41 = v51;
  v42 = (_QWORD *)(v40 + *(int *)(v51 + 20));
  *v42 = v39;
  v42[1] = v38;
  *(_QWORD *)(v40 + *(int *)(v41 + 24)) = _swiftEmptyDictionarySingleton;
  v43 = *(void (**)(char *, uint64_t))(v50 + 8);
  v43(v36, v24);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v61, v37);
  v43(v52, v24);
  v44 = (uint64_t)v54;
  swift_bridgeObjectRelease();
  sub_10078DF08(v40, v44);
  sub_10069BF0C(v44, v58);
  return sub_1005CC194(v44);
}

id sub_100C76648(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  void *v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  id v11;
  id v12;
  __n128 v13;
  uint64_t v14;
  id v16;

  v2 = v1;
  URL._bridgeToObjectiveC()(__stack_chk_guard);
  v5 = v4;
  v16 = 0;
  v7 = objc_msgSend((id)swift_getObjCClassFromMetadata(v2, v6), "fileHandleForReadingFromURL:error:", v4, &v16);

  v8 = v16;
  if (v7)
  {
    v9 = type metadata accessor for URL(0);
    v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
    v11 = v8;
    v10(a1, v9);
  }
  else
  {
    v12 = v16;
    _convertNSErrorToError(_:)(v8);

    swift_willThrow(v13);
    v14 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(a1, v14);
  }
  return v7;
}

void sub_100C7675C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  os_unfair_lock_s *v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  unsigned int v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  unsigned int v16;
  os_unfair_lock_s *v17;
  id v18;
  id v19;
  __n128 v20;
  id v21;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_lock);
  v3 = *(os_unfair_lock_s **)(v2 + 16);
  os_unfair_lock_lock(v3);
  v4 = OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_didEnsureAssetDirectory;
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_didEnsureAssetDirectory) & 1) != 0)
  {
    v5 = v3;
  }
  else
  {
    v6 = (void *)objc_opt_self(NSFileManager);
    v7 = objc_msgSend(v6, "defaultManager");
    URL._bridgeToObjectiveC()((NSURL *)OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_assetsDirectoryURL);
    v9 = v8;
    v21 = 0;
    v10 = objc_msgSend(v7, "createDirectoryAtURL:withIntermediateDirectories:attributes:error:", v8, 1, 0, &v21);

    v11 = v21;
    if (!v10)
      goto LABEL_6;
    v12 = v21;
    v13 = objc_msgSend(v6, "defaultManager");
    URL._bridgeToObjectiveC()((NSURL *)OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_deletedAssetsDirectoryURL);
    v15 = v14;
    v21 = 0;
    v16 = objc_msgSend(v13, "createDirectoryAtURL:withIntermediateDirectories:attributes:error:", v14, 1, 0, &v21);

    v11 = v21;
    if (v16)
    {
      *(_BYTE *)(v1 + v4) = 1;
      v17 = *(os_unfair_lock_s **)(v2 + 16);
      v18 = v11;
      v5 = v17;
    }
    else
    {
LABEL_6:
      v19 = v11;
      _convertNSErrorToError(_:)(v11);

      swift_willThrow(v20);
      v5 = *(os_unfair_lock_s **)(v2 + 16);
    }
  }
  os_unfair_lock_unlock(v5);
}

uint64_t sub_100C76920(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  void *v4;
  id v5;
  unsigned int v6;
  __n128 v7;
  id v8;
  __n128 v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  _BYTE v18[32];

  v1 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_itemData);
  if (v1)
  {
    v2 = (*(uint64_t (**)(void))(*(_QWORD *)v1 + 408))();
    if ((v3 & 1) != 0 && v2 == 3)
    {
      v4 = (void *)objc_opt_self(NSUserDefaults);
      v5 = objc_msgSend(v4, "standardUserDefaults", swift_retain(v1).n128_f64[0]);
      v6 = objc_msgSend(v5, "BOOLForKey:", CFSTR("CRLImageItemsRequireAssetDownloadForSendCopyUserDefault"));

      if (v6)
      {
        if (qword_1013DD778 != -1)
          swift_once(&qword_1013DD778, sub_100A02BF8);
        swift_beginAccess(&static OS_os_log.crlSendACopy, v18, 0, 0);
        v8 = (id)static OS_os_log.crlSendACopy;
        v10 = static os_log_type_t.default.getter(v9);
        sub_100A06EBC((uint64_t)v8, &_mh_execute_header, v10, "UserDefaults force checkIfAssetIsStillDownloading to be true for image item.", 76, 2, (uint64_t)_swiftEmptyArrayStorage);
        swift_release(v1);

        goto LABEL_9;
      }
    }
    else
    {
      v7 = swift_retain(v1);
    }
    v12 = (*(uint64_t (**)(__n128))(*(_QWORD *)v1 + 568))(v7);
    v13 = (*(uint64_t (**)(void))(*(_QWORD *)v1 + 576))();
    v14 = sub_100C762D0(v13, v12);
    __chkstk_darwin(v14);
    sub_100C7F8D4(v15, (uint64_t (*)(uint64_t, uint64_t, uint64_t, __n128))sub_100C7F8CC);
    v11 = v16;
    swift_release(v1);
    swift_bridgeObjectRelease();
    return v11 & 1;
  }
  sub_100757E04(&_mh_execute_header, (uint64_t)"checkIfAssetIsStillDownloading(for:)", 36, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLAssetFileManager.swift", 91, 2, 69, "Unexpected missing itemData for boardItemSyncLocalChangeRecord", 62, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"checkIfAssetIsStillDownloading(for:)", 36, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLAssetFileManager.swift", 91, 2u, 69, (uint64_t)"Unexpected missing itemData for boardItemSyncLocalChangeRecord", 62, 2u);
LABEL_9:
  v11 = 1;
  return v11 & 1;
}

BOOL sub_100C76B88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _BOOL8 v14;
  uint64_t v15;
  uint64_t v17;

  v4 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v4);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v7);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for UUID(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004CB7BC(a3, (uint64_t)v9, (uint64_t *)&unk_1013E1A50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_1004CB800((uint64_t)v9, (uint64_t *)&unk_1013E1A50);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
    sub_100C7857C((uint64_t)v13, 0, 3, 0, v6);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    v15 = type metadata accessor for URL(0);
    v14 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v6, 1, v15) == 1;
    sub_1004CB800((uint64_t)v6, &qword_1013E04D0);
  }
  return v14;
}

void sub_100C76D34(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[24];

  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_lock);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v5 + 16));
  v6 = (uint64_t *)(v2 + OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_assetFileURLCache);
  swift_beginAccess(v6, v16, 0, 0);
  v7 = *v6;
  if (*(_QWORD *)(v7 + 16))
  {
    swift_bridgeObjectRetain(v7);
    v8 = sub_100842EFC(a1);
    if ((v9 & 1) != 0)
    {
      v10 = v8;
      v11 = *(_QWORD *)(v7 + 56);
      v12 = sub_1004B804C((uint64_t *)&unk_1013F13A0);
      v13 = *(_QWORD *)(v12 - 8);
      sub_1004CB7BC(v11 + *(_QWORD *)(v13 + 72) * v10, a2, (uint64_t *)&unk_1013F13A0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56))(a2, 0, 1, v12);
    }
    else
    {
      v15 = sub_1004B804C((uint64_t *)&unk_1013F13A0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a2, 1, 1, v15);
    }
    swift_bridgeObjectRelease(v7);
  }
  else
  {
    v14 = sub_1004B804C((uint64_t *)&unk_1013F13A0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a2, 1, 1, v14);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 16));
}

void sub_100C76E78(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t *v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t inited;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, char *, uint64_t);
  char v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  NSString *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  __n128 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  NSString *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  __n128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(char *, uint64_t);
  __n128 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  char *v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  __int128 v100;
  char v101[48];
  char v102[40];
  char v103[40];
  char v104[8];
  char v105[8];

  LODWORD(v97) = a3;
  *(_QWORD *)&v100 = a2;
  v96 = type metadata accessor for UUID(0);
  v95 = *(_QWORD *)(v96 - 8);
  __chkstk_darwin(v96);
  v98 = (char *)&v86 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = type metadata accessor for URLResourceValues(0);
  v87 = *(_QWORD *)(v88 - 8);
  v6 = __chkstk_darwin(v88);
  v90 = (char *)&v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v89 = (char *)&v86 - v8;
  v9 = sub_1004B804C((uint64_t *)&unk_1013E1700);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v86 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v86 - v13;
  v15 = sub_1004B804C(&qword_1013F13B0);
  __chkstk_darwin(v15);
  v94 = (char *)&v86 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for URL(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = __chkstk_darwin(v17);
  v21 = (char *)&v86 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __chkstk_darwin(v19);
  v24 = (char *)&v86 - v23;
  __chkstk_darwin(v22);
  v26 = (char *)&v86 - v25;
  v99 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_lock);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v99 + 16));
  v27 = (uint64_t *)(v3 + OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_assetFileURLCache);
  swift_beginAccess(v3 + OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_assetFileURLCache, v105, 0, 0);
  v28 = *v27;
  if (!*(_QWORD *)(*v27 + 16))
  {
    v39 = sub_1004B804C((uint64_t *)&unk_1013F13A0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v14, 1, 1, v39);
LABEL_7:
    sub_1004CB800((uint64_t)v14, (uint64_t *)&unk_1013E1700);
    v43 = (uint64_t)v98;
    (*(void (**)(char *, uint64_t, uint64_t))(v95 + 16))(v98, a1, v96);
    v44 = sub_1004B804C((uint64_t *)&unk_1013F13A0);
    v45 = *(int *)(v44 + 48);
    (*(void (**)(char *, _QWORD, uint64_t))(v18 + 16))(v12, v100, v17);
    *(_DWORD *)&v12[v45] = v97;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v12, 0, 1, v44);
    swift_beginAccess(v27, v104, 33, 0);
    sub_10083DC00((uint64_t)v12, v43);
    swift_endAccess(v104);
    v46 = v99;
    goto LABEL_22;
  }
  v93 = v24;
  swift_bridgeObjectRetain(v28);
  v92 = a1;
  v29 = sub_100842EFC(a1);
  v91 = v21;
  if ((v30 & 1) != 0)
  {
    v31 = v29;
    v86 = v18;
    v32 = v17;
    v33 = *(_QWORD *)(v28 + 56);
    v34 = sub_1004B804C((uint64_t *)&unk_1013F13A0);
    v35 = v26;
    v36 = *(_QWORD *)(v34 - 8);
    v37 = v33 + *(_QWORD *)(v36 + 72) * v31;
    v17 = v32;
    v18 = v86;
    sub_1004CB7BC(v37, (uint64_t)v14, (uint64_t *)&unk_1013F13A0);
    v38 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56);
    v26 = v35;
    v38(v14, 0, 1, v34);
  }
  else
  {
    v40 = sub_1004B804C((uint64_t *)&unk_1013F13A0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v14, 1, 1, v40);
  }
  swift_bridgeObjectRelease(v28);
  v41 = sub_1004B804C((uint64_t *)&unk_1013F13A0);
  v42 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 48))(v14, 1, v41);
  a1 = v92;
  if (v42 == 1)
    goto LABEL_7;
  v47 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
  v48 = v94;
  v47(v94, v14, v17);
  v47(v26, v48, v17);
  v49 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  v50 = v26;
  inited = swift_initStackObject(v49, v103);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  v52 = URL.path.getter();
  v54 = v53;
  v55 = v18;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v56 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v56;
  *(_QWORD *)(inited + 32) = v52;
  *(_QWORD *)(inited + 40) = v54;
  v57 = (char *)v100;
  v58 = URL.path.getter();
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v56;
  *(_QWORD *)(inited + 72) = v58;
  *(_QWORD *)(inited + 80) = v59;
  LOBYTE(v52) = static URL.== infix(_:_:)(v50, v57);
  v60 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
  v98 = v50;
  v60(v93, v50, v17);
  v60(v91, v57, v17);
  if ((v52 & 1) != 0)
  {
    v61 = 1;
    v62 = v91;
    v46 = v99;
  }
  else
  {
    v97 = v17;
    v63 = sub_1004B804C(&qword_1013E8860);
    v64 = swift_initStackObject(v63, v102);
    v100 = xmmword_100EF5E40;
    *(_OWORD *)(v64 + 16) = xmmword_100EF5E40;
    *(_QWORD *)(v64 + 32) = NSURLCanonicalPathKey;
    v65 = NSURLCanonicalPathKey;
    sub_1004B584C(v64);
    v67 = v66;
    swift_setDeallocating(v64);
    type metadata accessor for URLResourceKey(0);
    v69 = v68;
    swift_arrayDestroy(v64 + 32, 1, v68);
    v70 = v89;
    URL.resourceValues(forKeys:)(v67);
    v71 = swift_bridgeObjectRelease(v67);
    v72 = URLResourceValues.canonicalPath.getter(v71);
    v74 = v73;
    (*(void (**)(char *, uint64_t))(v87 + 8))(v70, v88);
    v75 = swift_initStackObject(v63, v101);
    *(_OWORD *)(v75 + 16) = v100;
    *(_QWORD *)(v75 + 32) = v65;
    v76 = v65;
    sub_1004B584C(v75);
    v78 = v77;
    swift_setDeallocating(v75);
    swift_arrayDestroy(v75 + 32, 1, v69);
    v79 = v90;
    v62 = v91;
    URL.resourceValues(forKeys:)(v78);
    v80 = swift_bridgeObjectRelease(v78);
    v81 = URLResourceValues.canonicalPath.getter(v80);
    v83 = v82;
    (*(void (**)(char *, uint64_t))(v87 + 8))(v79, v88);
    if (v74)
    {
      v46 = v99;
      v17 = v97;
      if (v83)
      {
        if (v72 == v81 && v74 == v83)
        {
          swift_bridgeObjectRelease(v74);
          v61 = 1;
        }
        else
        {
          v61 = _stringCompareWithSmolCheck(_:_:expecting:)(v72, v74, v81, v83, 0);
          swift_bridgeObjectRelease(v74);
        }
      }
      else
      {
        v61 = 0;
        v83 = v74;
      }
      v18 = v55;
    }
    else
    {
      v46 = v99;
      v17 = v97;
      v18 = v55;
      if (!v83)
      {
        v61 = 1;
        goto LABEL_19;
      }
      v61 = 0;
    }
    swift_bridgeObjectRelease(v83);
  }
LABEL_19:
  v84 = *(void (**)(char *, uint64_t))(v18 + 8);
  v84(v93, v17);
  v84(v62, v17);
  if ((v61 & 1) == 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"_updateCachedAssetFileURLEntryIfNotCached(for:assetFileURL:flags:)", 66, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLAssetFileManager.swift", 91, 2, 111, "Asset file URL mutated unexpectedly. current=%@, new=%@", 55, 2u, inited);
    sub_1004F5394(inited, (uint64_t)"_updateCachedAssetFileURLEntryIfNotCached(for:assetFileURL:flags:)", 66, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLAssetFileManager.swift", 91, 2u, 111, (uint64_t)"Asset file URL mutated unexpectedly. current=%@, new=%@", 55, 2u);
  }
  v85 = swift_bridgeObjectRelease(inited);
  ((void (*)(char *, uint64_t, __n128))v84)(v98, v17, v85);
LABEL_22:
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v46 + 16));
}

void sub_100C77704(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  int v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _BYTE v63[24];
  char v64[24];

  v58 = a2;
  v59 = a3;
  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for URL(0);
  v61 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1004B804C((uint64_t *)&unk_1013E1700);
  __chkstk_darwin(v12);
  v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v51 - v16;
  v60 = sub_1004B804C(&qword_1013F13B0);
  __chkstk_darwin(v60);
  v19 = (char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_lock);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v62 + 16));
  v57 = v3;
  v20 = (_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_assetFileURLCache);
  swift_beginAccess(v20, v64, 0, 0);
  v56 = v20;
  v21 = *v20;
  if (!*(_QWORD *)(v21 + 16))
  {
    v33 = sub_1004B804C((uint64_t *)&unk_1013F13A0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v17, 1, 1, v33);
LABEL_7:
    sub_1004CB800((uint64_t)v17, (uint64_t *)&unk_1013E1700);
    goto LABEL_8;
  }
  v52 = v14;
  swift_bridgeObjectRetain(v21);
  v22 = sub_100842EFC(a1);
  v54 = v5;
  v55 = a1;
  v53 = v6;
  if ((v23 & 1) != 0)
  {
    v24 = v22;
    v25 = v9;
    v26 = *(_QWORD *)(v21 + 56);
    v27 = sub_1004B804C((uint64_t *)&unk_1013F13A0);
    v28 = v11;
    v29 = v8;
    v30 = *(_QWORD *)(v27 - 8);
    v31 = v26 + *(_QWORD *)(v30 + 72) * v24;
    v9 = v25;
    sub_1004CB7BC(v31, (uint64_t)v17, (uint64_t *)&unk_1013F13A0);
    v32 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56);
    v8 = v29;
    v11 = v28;
    v32(v17, 0, 1, v27);
  }
  else
  {
    v34 = sub_1004B804C((uint64_t *)&unk_1013F13A0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v17, 1, 1, v34);
  }
  swift_bridgeObjectRelease(v21);
  v35 = sub_1004B804C((uint64_t *)&unk_1013F13A0);
  v36 = *(_QWORD *)(v35 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v17, 1, v35) == 1)
    goto LABEL_7;
  v37 = *(_DWORD *)&v17[*(int *)(v35 + 48)];
  v38 = v60;
  v39 = *(int *)(v60 + 48);
  v40 = v17;
  v41 = v61;
  (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v19, v40, v9);
  *(_DWORD *)&v19[v39] = v37;
  v42 = *(_DWORD *)&v19[*(int *)(v38 + 48)];
  v43 = *(void (**)(char *, uint64_t))(v41 + 8);
  v43(v19, v9);
  if ((v42 & 1) == 0)
  {
    v44 = v55;
    v45 = sub_100C7F2B8(v55, v58, v59);
    v47 = v46;
    URL.appendingPathComponent(_:)(v45, v46);
    v48 = swift_bridgeObjectRelease(v47);
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v53 + 16))(v8, v44, v54, v48);
    v49 = *(int *)(v35 + 48);
    v50 = (uint64_t)v52;
    (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v52, v11, v9);
    *(_DWORD *)(v50 + v49) = 1;
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v36 + 56))(v50, 0, 1, v35);
    swift_beginAccess(v56, v63, 33, 0);
    sub_10083DC00(v50, (uint64_t)v8);
    swift_endAccess(v63);
    v43(v11, v9);
  }
LABEL_8:
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v62 + 16));
}

void sub_100C77AD4(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSString v12;
  double v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  _QWORD *i;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSString v26;
  double v27;
  id v28;
  id v29;
  uint64_t v30;
  __n128 v31;
  void *v32;
  __n128 v33;
  void *v34;
  uint64_t v35;
  uint64_t inited;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE v51[8];
  uint64_t v52;
  _BYTE v53[8];
  _BYTE v54[8];
  uint64_t v55;
  uint64_t v56;
  _BYTE v57[8];
  _BYTE v58[112];
  id v59[3];

  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = a1;
  URL.path.getter(v9);
  v11 = v10;
  v12 = String._bridgeToObjectiveC()();
  *(_QWORD *)&v13 = swift_bridgeObjectRelease(v11).n128_u64[0];
  v59[0] = 0;
  v14 = a2;
  v15 = objc_msgSend(a2, "contentsOfDirectoryAtPath:error:", v12, v59, v13);

  v16 = v59[0];
  if (v15)
  {
    v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v15, &type metadata for String);
    v18 = v16;

    v19 = *(_QWORD *)(v17 + 16);
    if (!v19)
    {
      swift_bridgeObjectRelease(v17);
      return;
    }
    v48 = v2;
    swift_bridgeObjectRetain(v17);
    v49 = v17;
    for (i = (_QWORD *)(v17 + 40); ; i += 2)
    {
      v21 = *(i - 1);
      v22 = *i;
      swift_bridgeObjectRetain(*i);
      v23 = URL.appendingPathComponent(_:)(v21, v22);
      URL.path.getter(v23);
      v25 = v24;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      v26 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v27 = swift_bridgeObjectRelease(v25).n128_u64[0];
      v59[0] = 0;
      LODWORD(v25) = objc_msgSend(v14, "removeItemAtPath:error:", v26, v59, v27);

      v28 = v59[0];
      if (!(_DWORD)v25)
        break;
      swift_bridgeObjectRelease(v22);
      if (!--v19)
      {
        swift_bridgeObjectRelease_n(v49, 2);
        return;
      }
    }
    v32 = v28;
    v30 = _convertNSErrorToError(_:)(v28);

    swift_willThrow(v33);
    swift_bridgeObjectRelease_n(v49, 2);
    swift_bridgeObjectRelease(v22);
  }
  else
  {
    v29 = v59[0];
    v30 = _convertNSErrorToError(_:)(v16);

    swift_willThrow(v31);
  }
  if (qword_1013DD858 != -1)
    swift_once(&qword_1013DD858, sub_100A05554);
  swift_beginAccess(&static OS_os_log.boardStore, v59, 0, 0);
  v34 = (void *)static OS_os_log.boardStore;
  v35 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v35, v58);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  swift_getErrorValue(v30, v57, v54);
  v37 = v55;
  v38 = v56;
  v39 = v34;
  v40 = Error.publicDescription.getter(v37, v38);
  v42 = v41;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v43 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v43;
  *(_QWORD *)(inited + 32) = v40;
  *(_QWORD *)(inited + 40) = v42;
  swift_getErrorValue(v30, v53, v51);
  v44 = Error.fullDescription.getter(v52);
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v43;
  *(_QWORD *)(inited + 72) = v44;
  *(_QWORD *)(inited + 80) = v45;
  v46 = static os_log_type_t.error.getter(v44);
  sub_100A06EBC((uint64_t)v39, &_mh_execute_header, v46, "Failed to remove all assets with error %{public}@ <%@>", 54, 2, inited);
  swift_setDeallocating(inited);
  v47 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 2, v47);

  swift_errorRelease(v30);
}

uint64_t sub_100C77E98(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  void *v4;
  uint64_t v5;
  _QWORD v6[36];

  result = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_store);
  if (result)
  {
    v4 = (void *)result;
    v6[2] = __chkstk_darwin(result);
    v6[3] = a1;
    v5 = sub_1004B804C(&qword_10140C658);
    OS_dispatch_queue.sync<A>(execute:)(sub_100C7F8B4, v6, v5);

    return v6[32];
  }
  return result;
}

uint64_t sub_100C780D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 264) = a1;
  *(_QWORD *)(v2 + 272) = v1;
  return swift_task_switch(sub_100C780E8, 0, 0);
}

uint64_t sub_100C780E8()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + 272) + OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_store);
  *(_QWORD *)(v0 + 280) = Strong;
  if (!Strong)
    return (*(uint64_t (**)(void))(v0 + 8))();
  v2 = Strong;
  v3 = *(_QWORD *)(v0 + 264);
  v4 = swift_task_alloc(32);
  *(_QWORD *)(v0 + 288) = v4;
  *(_QWORD *)(v4 + 16) = v2;
  *(_QWORD *)(v4 + 24) = v3;
  v5 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 296) = v5;
  v6 = sub_1004B804C(&qword_10140C658);
  *v5 = v0;
  v5[1] = sub_100C781D0;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 240, 0, 0, 0xD000000000000021, 0x8000000101006F60, sub_100C7F8AC, v4, v6);
}

uint64_t sub_100C781D0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 296);
  *(_QWORD *)(*v1 + 304) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_100C78270;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 288));
    v4 = sub_100C7823C;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_100C7823C()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 240));
}

uint64_t sub_100C78270()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v17;

  v1 = *(void **)(v0 + 280);
  swift_task_dealloc(*(_QWORD *)(v0 + 288));

  if (qword_1013DD858 != -1)
    swift_once(&qword_1013DD858, sub_100A05554);
  v2 = *(_QWORD *)(v0 + 304);
  swift_beginAccess(&static OS_os_log.boardStore, v0 + 192, 0, 0);
  v3 = (void *)static OS_os_log.boardStore;
  v4 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v4, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5550;
  v17 = v3;
  v6 = UUID.uuidString.getter(v17);
  v8 = v7;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v9 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v9;
  *(_QWORD *)(inited + 32) = v6;
  *(_QWORD *)(inited + 40) = v8;
  swift_getErrorValue(v2, v0 + 256, v0 + 216);
  v10 = Error.publicDescription.getter(*(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 232));
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v9;
  *(_QWORD *)(inited + 72) = v10;
  *(_QWORD *)(inited + 80) = v11;
  swift_getErrorValue(v2, v0 + 248, v0 + 168);
  v12 = Error.fullDescription.getter(*(_QWORD *)(v0 + 176));
  *(_QWORD *)(inited + 136) = &type metadata for String;
  *(_QWORD *)(inited + 144) = v9;
  *(_QWORD *)(inited + 112) = v12;
  *(_QWORD *)(inited + 120) = v13;
  v14 = static os_log_type_t.error.getter();
  sub_100A06EBC((uint64_t)v17, &_mh_execute_header, v14, "Failed to fetch the asset row for %@ with error %{public}@ <%@>", 63, 2, inited);
  swift_setDeallocating(inited);
  v15 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 3, v15);

  swift_errorRelease(v2);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_100C78430()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  void (*v9)(char *, uint64_t);
  uint64_t v10;
  char v11;
  __n128 v12;
  uint64_t v14;

  v0 = type metadata accessor for CocoaError.Code(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = URL.checkResourceIsReachable()();
  if (v5)
  {
    v6 = swift_errorRetain(v5);
    static CocoaError.fileNoSuchFile.getter(v6);
    v7 = sub_1004B7878((unint64_t *)&unk_1013E1720, (uint64_t (*)(uint64_t))&type metadata accessor for CocoaError.Code, (uint64_t)&protocol conformance descriptor for CocoaError.Code);
    v8 = static _ErrorCodeProtocol.~= infix(_:_:)(v3, v5, v0, v7);
    swift_errorRelease(v5);
    v9 = *(void (**)(char *, uint64_t))(v1 + 8);
    v9(v3, v0);
    if ((v8 & 1) != 0
      || (v10 = swift_errorRetain(v5),
          static CocoaError.fileReadNoSuchFile.getter(v10),
          v11 = static _ErrorCodeProtocol.~= infix(_:_:)(v3, v5, v0, v7),
          swift_errorRelease(v5),
          v9(v3, v0),
          (v11 & 1) != 0))
    {
      swift_errorRelease(v5);
      v4 = 0;
    }
    else
    {
      v4 = swift_willThrow(v12);
    }
  }
  return v4 & 1;
}

uint64_t sub_100C7857C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W3>, uint64_t (*a4)(uint64_t, __n128)@<X4>, char *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  int v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t, __n128);
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t, uint64_t);
  char *v47;
  char *v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  int v57;
  uint64_t v58;
  os_unfair_lock_s *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v66;
  unint64_t v67;
  uint64_t v68;
  unsigned int (*v69)(char *, uint64_t, uint64_t);
  char *v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t (*v77)(uint64_t, __n128);
  int v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char v84[8];

  v77 = a4;
  v76 = a2;
  v81 = a5;
  v74 = type metadata accessor for UUID(0);
  v73 = *(_QWORD *)(v74 - 8);
  __chkstk_darwin(v74);
  v75 = (char *)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = sub_1004B804C((uint64_t *)&unk_1013F13A0);
  v79 = *(_QWORD *)(v80 - 8);
  __chkstk_darwin(v80);
  v71 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v70 = (char *)&v66 - v10;
  v11 = sub_1004B804C((uint64_t *)&unk_1013E1700);
  __chkstk_darwin(v11);
  v72 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (uint64_t)&v66 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v66 - v17;
  v19 = sub_1004B804C(&qword_1013F13B0);
  __chkstk_darwin(v19);
  v21 = (char *)&v66 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for URL(0);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v25 = (char *)&v66 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v30 = (char *)&v66 - v29;
  v82 = a1;
  v78 = a3;
  if ((a3 & 1) != 0)
  {
    v67 = v27;
    v68 = v28;
    sub_100C76D34(a1, (uint64_t)v18);
    v31 = v80;
    v69 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v79 + 48);
    if (v69(v18, 1, v80) == 1)
    {
      sub_1004CB800((uint64_t)v18, (uint64_t *)&unk_1013E1700);
      v32 = v22;
      v33 = (uint64_t)v25;
    }
    else
    {
      v66 = v25;
      v32 = v22;
      v34 = *(_DWORD *)&v18[*(int *)(v31 + 48)];
      v35 = *(int *)(v19 + 48);
      v36 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
      v36(v21, v18, v32);
      *(_DWORD *)&v21[v35] = v34;
      v37 = *(_DWORD *)&v21[*(int *)(v19 + 48)];
      v36(v30, v21, v32);
      if ((v37 & 2) != 0)
      {
        if ((v37 & 4) != 0)
        {
          v36(v81, v30, v32);
          v64 = 0;
          return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v81, v64, 1, v32);
        }
        (*(void (**)(char *, uint64_t))(v23 + 8))(v30, v32);
        goto LABEL_25;
      }
      (*(void (**)(char *, uint64_t))(v23 + 8))(v30, v32);
      v33 = (uint64_t)v66;
    }
    sub_100C76D34(v82, v15);
    v38 = v80;
    if (v69((char *)v15, 1, v80) != 1)
    {
      v45 = *(int *)(v38 + 48);
      v46 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 32);
      v47 = v70;
      v46(v70, v15, v32);
      LODWORD(v15) = *(_DWORD *)(v15 + v45);
      v48 = v71;
      v46(v71, (uint64_t)v47, v32);
      v46((char *)v33, (uint64_t)v48, v32);
      goto LABEL_19;
    }
    v25 = (char *)v33;
    v22 = v32;
    sub_1004CB800(v15, (uint64_t *)&unk_1013E1700);
    a1 = v82;
    v28 = v68;
    v27 = v67;
  }
  if (v27 || (v78 & 2) == 0)
  {
    v43 = sub_100C7F2B8(a1, v76, v27);
    v15 = v44;
    URL.appendingPathComponent(_:)(v43, v44);
    swift_bridgeObjectRelease(v15);
    LOBYTE(v15) = 0;
    v32 = v22;
    v33 = (uint64_t)v25;
  }
  else
  {
    v39 = v77;
    v32 = v22;
    if (v77)
    {
      v40 = v28;
      v41 = swift_retain(v28);
      v42 = v39(a1, v41);
      sub_1004C1024((uint64_t)v39, v40);
    }
    else
    {
      v42 = sub_100C77E98(a1);
    }
    v33 = (uint64_t)v25;
    v49 = v23;
    if (v42)
    {
      v51 = *(_QWORD *)(v42 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_fileExtension);
      v50 = *(_QWORD *)(v42 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_fileExtension + 8);
      swift_bridgeObjectRetain(v50);
      LODWORD(v15) = 1;
    }
    else
    {
      LODWORD(v15) = 0;
      v51 = 0;
      v50 = 0;
    }
    v52 = v82;
    v53 = sub_100C7F2B8(v82, v51, v50);
    v55 = v54;
    URL.appendingPathComponent(_:)(v53, v54);
    swift_bridgeObjectRelease(v55);
    sub_100C76E78(v52, v33, v15);
    swift_release(v42);
    swift_bridgeObjectRelease(v50);
    v23 = v49;
  }
LABEL_19:
  LOBYTE(v78) = sub_100C78430() & 1;
  v78 = v78;
  if ((_BYTE)v78)
    v56 = 6;
  else
    v56 = 2;
  v57 = v56 & 0xFFFFFFFE | v15 & 1;
  v58 = v83;
  v59 = *(os_unfair_lock_s **)(*(_QWORD *)(v83 + OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_lock) + 16);
  os_unfair_lock_lock(v59);
  v60 = (uint64_t)v75;
  (*(void (**)(char *, uint64_t, uint64_t))(v73 + 16))(v75, v82, v74);
  v61 = v80;
  v62 = *(int *)(v80 + 48);
  v63 = (uint64_t)v72;
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v72, v33, v32);
  *(_DWORD *)(v63 + v62) = v57;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v79 + 56))(v63, 0, 1, v61);
  swift_beginAccess(v58 + OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_assetFileURLCache, v84, 33, 0);
  sub_10083DC00(v63, v60);
  swift_endAccess(v84);
  os_unfair_lock_unlock(v59);
  if (!v78)
  {
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v33, v32);
LABEL_25:
    v64 = 1;
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v81, v64, 1, v32);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 32))(v81, v33, v32);
  v64 = 0;
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v81, v64, 1, v32);
}

uint64_t sub_100C78DC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;

  *(_QWORD *)(v6 + 304) = a4;
  *(_QWORD *)(v6 + 312) = v5;
  *(_DWORD *)(v6 + 464) = a5;
  *(_QWORD *)(v6 + 288) = a2;
  *(_QWORD *)(v6 + 296) = a3;
  *(_QWORD *)(v6 + 280) = a1;
  v7 = type metadata accessor for UUID(0);
  *(_QWORD *)(v6 + 320) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v6 + 328) = v8;
  *(_QWORD *)(v6 + 336) = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C((uint64_t *)&unk_1013F13A0);
  *(_QWORD *)(v6 + 344) = v9;
  v10 = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v6 + 352) = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v6 + 360) = swift_task_alloc(v11);
  *(_QWORD *)(v6 + 368) = swift_task_alloc(v11);
  v12 = (*(_QWORD *)(*(_QWORD *)(sub_1004B804C((uint64_t *)&unk_1013E1700) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v6 + 376) = swift_task_alloc(v12);
  *(_QWORD *)(v6 + 384) = swift_task_alloc(v12);
  *(_QWORD *)(v6 + 392) = swift_task_alloc(v12);
  v13 = sub_1004B804C(&qword_1013F13B0);
  *(_QWORD *)(v6 + 400) = v13;
  *(_QWORD *)(v6 + 408) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v13 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for URL(0);
  *(_QWORD *)(v6 + 416) = v14;
  v15 = *(_QWORD *)(v14 - 8);
  *(_QWORD *)(v6 + 424) = v15;
  v16 = (*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v6 + 432) = swift_task_alloc(v16);
  *(_QWORD *)(v6 + 440) = swift_task_alloc(v16);
  return swift_task_switch(sub_100C78F10, 0, 0);
}

uint64_t sub_100C78F10()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  void (*v12)(uint64_t);
  int v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t, uint64_t);
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  int v42;
  os_unfair_lock_s *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;

  v1 = *(_DWORD *)(v0 + 464);
  if ((v1 & 1) == 0)
    goto LABEL_8;
  v2 = *(_QWORD *)(v0 + 392);
  v3 = *(_QWORD *)(v0 + 344);
  v4 = *(_QWORD *)(v0 + 352);
  sub_100C76D34(*(_QWORD *)(v0 + 288), v2);
  v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v5(v2, 1, v3) == 1)
  {
    sub_1004CB800(*(_QWORD *)(v0 + 392), (uint64_t *)&unk_1013E1700);
LABEL_6:
    v14 = *(_QWORD *)(v0 + 384);
    v15 = *(_QWORD *)(v0 + 344);
    sub_100C76D34(*(_QWORD *)(v0 + 288), v14);
    if (v5(v14, 1, v15) != 1)
    {
      v26 = *(_QWORD *)(v0 + 432);
      v27 = *(_QWORD *)(v0 + 416);
      v28 = *(_QWORD *)(v0 + 384);
      v30 = *(_QWORD *)(v0 + 360);
      v29 = *(_QWORD *)(v0 + 368);
      v31 = *(int *)(*(_QWORD *)(v0 + 344) + 48);
      v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 424) + 32);
      v32(v29, v28, v27);
      LODWORD(v28) = *(_DWORD *)(v28 + v31);
      v32(v30, v29, v27);
      v32(v26, v30, v27);
      v22 = v28 & 1;
LABEL_15:
      v33 = sub_100C78430();
      v56 = *(_QWORD *)(v0 + 424);
      v57 = *(_QWORD *)(v0 + 416);
      v58 = *(_QWORD *)(v0 + 432);
      v34 = *(_QWORD *)(v0 + 376);
      v35 = *(_QWORD *)(v0 + 344);
      v59 = *(_QWORD *)(v0 + 352);
      v60 = v0 + 240;
      v37 = *(_QWORD *)(v0 + 328);
      v36 = *(_QWORD *)(v0 + 336);
      v38 = *(_QWORD *)(v0 + 312);
      v39 = *(_QWORD *)(v0 + 320);
      v40 = *(_QWORD *)(v0 + 288);
      v61 = v33 & 1;
      if ((v33 & 1) != 0)
        v41 = 6;
      else
        v41 = 2;
      v42 = v41 | v22;
      v43 = *(os_unfair_lock_s **)(*(_QWORD *)(v38 + OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_lock) + 16);
      os_unfair_lock_lock(v43);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 16))(v36, v40, v39);
      v44 = *(int *)(v35 + 48);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 16))(v34, v58, v57);
      *(_DWORD *)(v34 + v44) = v42;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v59 + 56))(v34, 0, 1, v35);
      swift_beginAccess(v38 + OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_assetFileURLCache, v60, 33, 0);
      sub_10083DC00(v34, v36);
      swift_endAccess(v60);
      os_unfair_lock_unlock(v43);
      if (v61)
      {
        v45 = *(_QWORD *)(v0 + 424);
        v46 = *(_QWORD *)(v0 + 416);
        v47 = *(_QWORD *)(v0 + 280);
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v45 + 32))(v47, *(_QWORD *)(v0 + 432), v46);
LABEL_25:
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v45 + 56))(v47, 0, 1, v46);
        goto LABEL_26;
      }
      v45 = *(_QWORD *)(v0 + 424);
      v46 = *(_QWORD *)(v0 + 416);
      v47 = *(_QWORD *)(v0 + 280);
      (*(void (**)(_QWORD, uint64_t))(v45 + 8))(*(_QWORD *)(v0 + 432), v46);
      goto LABEL_21;
    }
    sub_1004CB800(*(_QWORD *)(v0 + 384), (uint64_t *)&unk_1013E1700);
    v1 = *(_DWORD *)(v0 + 464);
LABEL_8:
    v16 = *(_QWORD *)(v0 + 304);
    v17 = v1 & 2;
    if (v16)
      v18 = 1;
    else
      v18 = v17 == 0;
    if (!v18)
    {
      v23 = (_QWORD *)swift_task_alloc(dword_10140C614);
      *(_QWORD *)(v0 + 448) = v23;
      *v23 = v0;
      v23[1] = sub_100C794A4;
      v24 = *(_QWORD *)(v0 + 312);
      v23[33] = *(_QWORD *)(v0 + 288);
      v23[34] = v24;
      return swift_task_switch(sub_100C780E8, 0, 0);
    }
    v19 = sub_100C7F2B8(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 296), v16);
    v21 = v20;
    URL.appendingPathComponent(_:)(v19, v20);
    swift_bridgeObjectRelease(v21);
    v22 = 0;
    goto LABEL_15;
  }
  v6 = *(_QWORD *)(v0 + 440);
  v7 = *(_QWORD *)(v0 + 416);
  v9 = *(_QWORD *)(v0 + 400);
  v8 = *(_QWORD *)(v0 + 408);
  v10 = *(_DWORD *)(*(_QWORD *)(v0 + 392) + *(int *)(*(_QWORD *)(v0 + 344) + 48));
  v11 = *(int *)(v9 + 48);
  v12 = *(void (**)(uint64_t))(*(_QWORD *)(v0 + 424) + 32);
  v12(v8);
  *(_DWORD *)(v8 + v11) = v10;
  v13 = *(_DWORD *)(v8 + *(int *)(v9 + 48));
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v6, v8, v7);
  if ((v13 & 2) == 0)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 424) + 8))(*(_QWORD *)(v0 + 440), *(_QWORD *)(v0 + 416));
    goto LABEL_6;
  }
  v46 = *(_QWORD *)(v0 + 416);
  v45 = *(_QWORD *)(v0 + 424);
  v47 = *(_QWORD *)(v0 + 280);
  if ((v13 & 4) != 0)
  {
    ((void (*)(_QWORD, _QWORD, _QWORD))v12)(*(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 440), *(_QWORD *)(v0 + 416));
    goto LABEL_25;
  }
  (*(void (**)(_QWORD, uint64_t))(v45 + 8))(*(_QWORD *)(v0 + 440), v46);
LABEL_21:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v45 + 56))(v47, 1, 1, v46);
LABEL_26:
  v48 = *(_QWORD *)(v0 + 432);
  v49 = *(_QWORD *)(v0 + 408);
  v51 = *(_QWORD *)(v0 + 384);
  v50 = *(_QWORD *)(v0 + 392);
  v53 = *(_QWORD *)(v0 + 368);
  v52 = *(_QWORD *)(v0 + 376);
  v54 = *(_QWORD *)(v0 + 360);
  v55 = *(_QWORD *)(v0 + 336);
  swift_task_dealloc(*(_QWORD *)(v0 + 440));
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100C794A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 448);
  *(_QWORD *)(*(_QWORD *)v1 + 456) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_100C79500, 0, 0);
}

uint64_t sub_100C79500()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  int v19;
  os_unfair_lock_s *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;

  v1 = *(_QWORD *)(v0 + 456);
  if (v1)
  {
    v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_fileExtension);
    v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_fileExtension + 8);
    swift_bridgeObjectRetain(v2);
    v4 = 1;
  }
  else
  {
    v4 = 0;
    v3 = 0;
    v2 = 0;
  }
  v5 = *(_QWORD *)(v0 + 432);
  v6 = *(_QWORD *)(v0 + 288);
  v7 = sub_100C7F2B8(v6, v3, v2);
  v9 = v8;
  URL.appendingPathComponent(_:)(v7, v8);
  swift_bridgeObjectRelease(v9);
  sub_100C76E78(v6, v5, v4);
  swift_release(v1);
  swift_bridgeObjectRelease(v2);
  v10 = sub_100C78430();
  v34 = *(_QWORD *)(v0 + 424);
  v35 = *(_QWORD *)(v0 + 416);
  v36 = *(_QWORD *)(v0 + 432);
  v11 = *(_QWORD *)(v0 + 376);
  v12 = *(_QWORD *)(v0 + 344);
  v37 = *(_QWORD *)(v0 + 352);
  v38 = v0 + 240;
  v14 = *(_QWORD *)(v0 + 328);
  v13 = *(_QWORD *)(v0 + 336);
  v15 = *(_QWORD *)(v0 + 312);
  v16 = *(_QWORD *)(v0 + 320);
  v17 = *(_QWORD *)(v0 + 288);
  v39 = v10 & 1;
  if ((v10 & 1) != 0)
    v18 = 6;
  else
    v18 = 2;
  v19 = v18 | v4;
  v20 = *(os_unfair_lock_s **)(*(_QWORD *)(v15 + OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_lock) + 16);
  os_unfair_lock_lock(v20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v13, v17, v16);
  v21 = *(int *)(v12 + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16))(v11, v36, v35);
  *(_DWORD *)(v11 + v21) = v19;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v11, 0, 1, v12);
  swift_beginAccess(v15 + OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_assetFileURLCache, v38, 33, 0);
  sub_10083DC00(v11, v13);
  swift_endAccess(v38);
  os_unfair_lock_unlock(v20);
  v22 = *(_QWORD *)(v0 + 424);
  v23 = *(_QWORD *)(v0 + 416);
  v24 = *(_QWORD *)(v0 + 280);
  if (v39)
  {
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v22 + 32))(v24, *(_QWORD *)(v0 + 432), v23);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v22 + 56))(v24, 0, 1, v23);
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t))(v22 + 8))(*(_QWORD *)(v0 + 432), v23);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 56))(v24, 1, 1, v23);
  }
  v25 = *(_QWORD *)(v0 + 432);
  v26 = *(_QWORD *)(v0 + 408);
  v28 = *(_QWORD *)(v0 + 384);
  v27 = *(_QWORD *)(v0 + 392);
  v30 = *(_QWORD *)(v0 + 368);
  v29 = *(_QWORD *)(v0 + 376);
  v31 = *(_QWORD *)(v0 + 360);
  v32 = *(_QWORD *)(v0 + 336);
  swift_task_dealloc(*(_QWORD *)(v0 + 440));
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100C7990C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, void (*a5)(char *), uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  _QWORD *v23;
  void *v24;
  id v25;
  char v26;
  void *v27;
  uint64_t inited;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  __n128 v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __n128 v60;
  char *v61;
  id v62;
  _QWORD v64[2];
  void (*v65)(char *);
  uint64_t v66;
  unint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77[3];
  uint64_t v78;
  _QWORD v79[3];
  uint64_t v80;
  char v81[72];
  char v82[32];
  char v83[8];

  v7 = v6;
  v64[1] = a6;
  v65 = a5;
  v66 = a3;
  v67 = a4;
  v64[0] = a1;
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  v74 = v9;
  v75 = v10;
  __chkstk_darwin(v9);
  v12 = (char *)v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v69 = (char *)v64 - v14;
  v15 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v15);
  v70 = (uint64_t)v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v76 = (uint64_t)v64 - v18;
  v19 = type metadata accessor for DispatchPredicate(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = __chkstk_darwin(v19);
  v23 = (_QWORD *)((char *)v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v24 = *(void **)(v7 + OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_writeAssetFileQueue);
  *v23 = v24;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v20 + 104))(v23, enum case for DispatchPredicate.onQueue(_:), v19, v21);
  v25 = v24;
  v26 = _dispatchPreconditionTest(_:)(v23);
  (*(void (**)(_QWORD *, uint64_t))(v20 + 8))(v23, v19);
  if ((v26 & 1) != 0)
  {
    v68 = v12;
    if (qword_1013DD8C0 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once(&qword_1013DD8C0, sub_100A0685C);
LABEL_3:
  swift_beginAccess(&static OS_os_log.assetManagement, v82, 0, 0);
  v27 = (void *)static OS_os_log.assetManagement;
  v72 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v72, v81);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v29 = v27;
  v30 = UUID.uuidString.getter(v29);
  v32 = v31;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v33 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v33;
  *(_QWORD *)(inited + 32) = v30;
  *(_QWORD *)(inited + 40) = v32;
  v35 = static os_log_type_t.default.getter(v34);
  sub_100A06EBC((uint64_t)v29, &_mh_execute_header, v35, "CRLAssetFileManager _writeAssetFile() assetUUID: %@", 51, 2, inited);
  swift_setDeallocating(inited);
  v73 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v73);

  v36 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v75 + 56);
  v37 = v74;
  v36(v76, 1, 1, v74);
  v38 = v71;
  sub_100C7675C();
  if (v38)
  {
    v39 = v75;
    v48 = (void *)static OS_os_log.assetManagement;
    v49 = swift_initStackObject(v72, &v80);
    *(_OWORD *)(v49 + 16) = xmmword_100EF5A10;
    swift_getErrorValue(v38, v83, v79);
    v50 = v79[1];
    v51 = v79[2];
    v52 = v48;
    v53 = Error.publicDescription.getter(v50, v51);
    *(_QWORD *)(v49 + 56) = &type metadata for String;
    *(_QWORD *)(v49 + 64) = v33;
    *(_QWORD *)(v49 + 32) = v53;
    *(_QWORD *)(v49 + 40) = v54;
    swift_getErrorValue(v38, &v78, v77);
    v55 = Error.fullDescription.getter(v77[1]);
    *(_QWORD *)(v49 + 96) = &type metadata for String;
    *(_QWORD *)(v49 + 104) = v33;
    *(_QWORD *)(v49 + 72) = v55;
    *(_QWORD *)(v49 + 80) = v56;
    v57 = static os_log_type_t.error.getter(v55);
    sub_100A06EBC((uint64_t)v52, &_mh_execute_header, v57, "Failed to write asset file with error: %{public}@ <%@>", 54, 2, v49);
    swift_setDeallocating(v49);
    swift_arrayDestroy(v49 + 32, 2, v73);

    v46 = v76;
    v58 = v70;
    sub_1004CB7BC(v76, v70, &qword_1013E04D0);
    v59 = v74;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v58, 1, v74) == 1)
    {
      sub_1004CB800(v58, &qword_1013E04D0);
    }
    else
    {
      v61 = v68;
      (*(void (**)(char *, uint64_t, uint64_t))(v39 + 32))(v68, v58, v59);
      v62 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
      sub_100C79FC0();

      v46 = v76;
      v60.n128_f64[0] = (*(double (**)(char *, uint64_t))(v39 + 8))(v61, v59);
    }
    swift_willThrow(v60);
    sub_1004CB800(v46, &qword_1013E04D0);
  }
  else
  {
    v40 = sub_100C7F2B8(a2, v66, v67);
    v42 = v41;
    v43 = v69;
    URL.appendingPathComponent(_:)(v40, v41);
    swift_bridgeObjectRelease(v42);
    v44 = sub_100C78430();
    v45 = v76;
    sub_1004CB800(v76, &qword_1013E04D0);
    if ((v44 & 1) != 0)
    {
      LOBYTE(v46) = 0;
      v47 = v75;
    }
    else
    {
      v47 = v75;
      (*(void (**)(uint64_t, char *, uint64_t))(v75 + 16))(v45, v43, v37);
      v36(v45, 0, 1, v37);
      v65(v43);
      sub_1004CB800(v45, &qword_1013E04D0);
      LOBYTE(v46) = 1;
    }
    (*(void (**)(_QWORD, char *, uint64_t))(v47 + 32))(v64[0], v43, v37);
  }
  return v46 & 1;
}

id sub_100C79FC0()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSURL *v5;
  char *v6;
  void *v7;
  void *v8;
  id v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  char v17;
  void *v18;
  uint64_t v19;
  uint64_t inited;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34[3];
  uint64_t v35;
  uint64_t v36[3];
  uint64_t v37;
  uint64_t v38;
  id v39[3];

  v1 = v0;
  v2 = type metadata accessor for CocoaError.Code(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (NSURL *)((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (char *)((char *)&v32 - (char *)v5);
  URL._bridgeToObjectiveC()(v5);
  v8 = v7;
  v39[0] = 0;
  LODWORD(v1) = objc_msgSend(v1, "removeItemAtURL:error:", v7, v39);

  if ((_DWORD)v1)
    return v39[0];
  v33 = v39[0];
  v10 = v39[0];
  v11 = _convertNSErrorToError(_:)(v33);

  swift_willThrow(v12);
  v13 = swift_errorRetain(v11);
  static CocoaError.fileNoSuchFile.getter(v13);
  v14 = sub_1004B7878((unint64_t *)&unk_1013E1720, (uint64_t (*)(uint64_t))&type metadata accessor for CocoaError.Code, (uint64_t)&protocol conformance descriptor for CocoaError.Code);
  LOBYTE(v10) = static _ErrorCodeProtocol.~= infix(_:_:)(v6, v11, v2, v14);
  swift_errorRelease(v11);
  v15 = *(void (**)(char *, uint64_t))(v3 + 8);
  v15(v6, v2);
  if ((v10 & 1) == 0)
  {
    v16 = swift_errorRetain(v11);
    static CocoaError.fileReadNoSuchFile.getter(v16);
    v17 = static _ErrorCodeProtocol.~= infix(_:_:)(v6, v11, v2, v14);
    swift_errorRelease(v11);
    v15(v6, v2);
    if ((v17 & 1) == 0)
    {
      if (qword_1013DD858 != -1)
        swift_once(&qword_1013DD858, sub_100A05554);
      swift_beginAccess(&static OS_os_log.boardStore, v39, 0, 0);
      v18 = (void *)static OS_os_log.boardStore;
      v19 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v19, &v38);
      *(_OWORD *)(inited + 16) = xmmword_100EF5550;
      v21 = v18;
      v22 = URL.path.getter(v21);
      v24 = v23;
      *(_QWORD *)(inited + 56) = &type metadata for String;
      v25 = sub_1004CFC2C();
      *(_QWORD *)(inited + 64) = v25;
      *(_QWORD *)(inited + 32) = v22;
      *(_QWORD *)(inited + 40) = v24;
      swift_getErrorValue(v11, &v37, v36);
      v26 = Error.publicDescription.getter(v36[1], v36[2]);
      *(_QWORD *)(inited + 96) = &type metadata for String;
      *(_QWORD *)(inited + 104) = v25;
      *(_QWORD *)(inited + 72) = v26;
      *(_QWORD *)(inited + 80) = v27;
      swift_getErrorValue(v11, &v35, v34);
      v28 = Error.fullDescription.getter(v34[1]);
      *(_QWORD *)(inited + 136) = &type metadata for String;
      *(_QWORD *)(inited + 144) = v25;
      *(_QWORD *)(inited + 112) = v28;
      *(_QWORD *)(inited + 120) = v29;
      v30 = static os_log_type_t.error.getter(v28);
      sub_100A06EBC((uint64_t)v21, &_mh_execute_header, v30, "Failed to remove item from disk. path=%@, error=%{public}@ <%@>", 63, 2, inited);
      swift_setDeallocating(inited);
      v31 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(inited + 32, 3, v31);

    }
  }
  return (id)swift_errorRelease(v11);
}

void sub_100C7A2FC(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, void (*a5)(uint64_t, char *, uint64_t), void (*a6)(char *, char *, uint64_t), char *a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *Strong;
  NSString v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  unint64_t v38;
  _QWORD *v39;
  __n128 v40;
  char *v41;
  void (*v42)(char *, char *, uint64_t);
  char *v43;
  uint64_t (*v44)(char *, char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  os_unfair_lock_s *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t inited;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  id v69;
  char *v70;
  void (*v71)(uint64_t, char *, uint64_t);
  id v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t (*v76)(uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(uint64_t, char *, uint64_t);
  void (*v92)(char *, char *, uint64_t);
  char *v93;
  uint64_t v94;
  char v95[72];
  _BYTE v96[32];
  uint64_t *v97;

  v9 = v8;
  v93 = a7;
  v94 = a8;
  v91 = a5;
  v92 = (void (*)(char *, char *, uint64_t))a6;
  v83 = a1;
  v13 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v13);
  v82 = (char *)&v78 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1004B804C((uint64_t *)&unk_1013E1700);
  __chkstk_darwin(v15);
  v80 = (char *)&v78 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1004B804C(&qword_10140C678);
  __chkstk_darwin(v17);
  v19 = (char *)&v78 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = type metadata accessor for URL(0);
  v86 = *(_QWORD *)(v89 - 8);
  __chkstk_darwin(v89);
  v21 = (char *)&v78 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for UUID(0);
  v90 = *(_QWORD *)(v22 - 8);
  v23 = *(_QWORD *)(v90 + 64);
  __chkstk_darwin(v22);
  v81 = (char *)&v78 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v87 = (char *)&v78 - v25;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v9 + OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_store);
  if (Strong)
  {
    v88 = Strong;
    v84 = v21;
    v85 = v22;
    v78 = a2;
    v27 = String._bridgeToObjectiveC()();
    v28 = objc_msgSend(v27, "pathExtension");
    v79 = a4;
    v29 = v28;

    v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
    v32 = v31;

    __chkstk_darwin(v33);
    v34 = (void (*)(_QWORD, _QWORD, _QWORD))v92;
    *(&v78 - 8) = (uint64_t)v91;
    *(&v78 - 7) = (uint64_t)v34;
    *(&v78 - 6) = v9;
    *(&v78 - 5) = v30;
    v74 = v32;
    v75 = v93;
    __chkstk_darwin(v35);
    v76 = sub_100C7F7F0;
    v77 = v36;
    v37 = v97;
    OS_dispatch_queue.sync<A>(execute:)(sub_100C7F824, &v74, v17);
    if (v37)
    {

      swift_bridgeObjectRelease();
    }
    else
    {
      v93 = a3;
      v41 = &v19[*(int *)(v17 + 48)];
      LODWORD(v94) = v19[*(int *)(v17 + 64)];
      v42 = *(void (**)(char *, char *, uint64_t))(v90 + 32);
      v43 = v87;
      v42(v87, v19, v85);
      v44 = *(uint64_t (**)(char *, char *, uint64_t))(v86 + 32);
      v45 = v44(v84, v41, v89);
      v97 = &v78;
      __chkstk_darwin(v45);
      v74 = v46;
      v75 = v43;
      v76 = (uint64_t (*)(uint64_t, uint64_t))v30;
      v77 = v32;
      OS_dispatch_queue.sync<A>(execute:)(sub_100C7F88C, &v78 - 6, (char *)&type metadata for () + 8);
      v91 = (void (*)(uint64_t, char *, uint64_t))v44;
      v92 = v42;
      v94 = 0;
      swift_bridgeObjectRelease();
      v47 = *(os_unfair_lock_s **)(*(_QWORD *)(v9 + OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_lock) + 16);
      os_unfair_lock_lock(v47);
      v48 = (uint64_t)v81;
      v49 = v87;
      v97 = *(uint64_t **)(v90 + 16);
      ((void (*)(char *, char *, uint64_t))v97)(v81, v87, v85);
      v50 = sub_1004B804C((uint64_t *)&unk_1013F13A0);
      v51 = *(int *)(v50 + 48);
      v52 = (uint64_t)v80;
      (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v80, v84, v89);
      *(_DWORD *)(v52 + v51) = 7;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v52, 0, 1, v50);
      swift_beginAccess(v9 + OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_assetFileURLCache, v96, 33, 0);
      sub_10083DC00(v52, v48);
      swift_endAccess(v96);
      os_unfair_lock_unlock(v47);
      if (qword_1013DD8C0 != -1)
        swift_once(&qword_1013DD8C0, sub_100A0685C);
      swift_beginAccess(&static OS_os_log.assetManagement, v96, 0, 0);
      v53 = (void *)static OS_os_log.assetManagement;
      v54 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v54, v95);
      *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
      v56 = v53;
      v57 = UUID.uuidString.getter(v56);
      v59 = v58;
      *(_QWORD *)(inited + 56) = &type metadata for String;
      *(_QWORD *)(inited + 64) = sub_1004CFC2C();
      *(_QWORD *)(inited + 32) = v57;
      *(_QWORD *)(inited + 40) = v59;
      v61 = static os_log_type_t.default.getter(v60);
      sub_100A06EBC((uint64_t)v56, &_mh_execute_header, v61, "CRLAssetFileManager _notifyAssetMaterialized() assetUUID: %@", 60, 2, inited);
      swift_setDeallocating(inited);
      v62 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(inited + 32, 1, v62);

      v63 = type metadata accessor for TaskPriority(0);
      v64 = (uint64_t)v82;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 56))(v82, 1, 1, v63);
      v65 = v85;
      ((void (*)(uint64_t, char *, uint64_t))v97)(v48, v49, v85);
      v66 = *(unsigned __int8 *)(v90 + 80);
      v67 = (v66 + 40) & ~v66;
      v68 = (_QWORD *)swift_allocObject(&unk_10129DDF8, v67 + v23, v66 | 7);
      v68[2] = 0;
      v68[3] = 0;
      v69 = v88;
      v68[4] = v88;
      v70 = (char *)v68 + v67;
      v71 = (void (*)(uint64_t, char *, uint64_t))v92;
      v92(v70, (char *)v48, v65);
      v72 = v69;
      v73 = sub_100521B98(v64, (uint64_t)&unk_10140C680, (uint64_t)v68);
      swift_release(v73);

      v71(v83, v49, v65);
      v91(v78, v84, v89);
      swift_bridgeObjectRetain(v79);
    }
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"_synchronouslySaveAsset(filename:assetUUIDProvider:assetPersistenceProvider:)", 77, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLAssetFileManager.swift", 91, 2, 364, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_synchronouslySaveAsset(filename:assetUUIDProvider:assetPersistenceProvider:)", 77, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLAssetFileManager.swift", 91, 2u, 364, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    v38 = sub_1005D2A0C();
    swift_allocError(&type metadata for CRLAssetError, v38, 0, 0);
    *v39 = 0xD000000000000028;
    v39[1] = 0x8000000100FE7BE0;
    swift_willThrow(v40);
  }
}

uint64_t sub_100C7AB2C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, void (*a8)(char *), uint64_t a9)
{
  uint64_t v9;
  char v15;

  v15 = a3();
  if (!v9)
    v15 = sub_100C7990C(a2, a1, a6, a7, a8, a9);
  return v15 & 1;
}

uint64_t sub_100C7ABD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100C7C114(a1, a2);
}

id sub_100C7ABEC()
{
  return sub_100C7C30C();
}

void sub_100C7AC34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t *), uint64_t a8)
{
  char *v8;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t Strong;
  void *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  char *v28;
  id v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t *);
  uint64_t v45;
  _QWORD *v46;
  _QWORD aBlock[5];
  _QWORD *v48;

  v44 = a7;
  v45 = a8;
  v39 = a5;
  v40 = a6;
  v38 = a3;
  v12 = type metadata accessor for DispatchWorkItemFlags(0);
  v43 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for DispatchQoS(0);
  v41 = *(_QWORD *)(v15 - 8);
  v42 = v15;
  __chkstk_darwin(v15);
  v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1004B804C(&qword_1013FFA60);
  __chkstk_darwin(v18);
  v20 = (uint64_t *)((char *)&v37 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  Strong = swift_unknownObjectWeakLoadStrong(&v8[OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_store]);
  if (Strong)
  {
    v22 = (void *)Strong;
    v37 = *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_writeAssetFileQueue];
    v23 = (_QWORD *)swift_allocObject(&unk_10129DD58, 96, 7);
    v23[2] = v38;
    v23[3] = a4;
    v23[4] = a1;
    v23[5] = a2;
    v24 = v39;
    v25 = v40;
    v23[6] = v8;
    v23[7] = v24;
    v23[8] = v25;
    v23[9] = v22;
    v26 = v45;
    v23[10] = v44;
    v23[11] = v26;
    aBlock[4] = sub_1009BDE20;
    v48 = v23;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(_QWORD *)"";
    aBlock[2] = sub_1005D2FC0;
    aBlock[3] = &unk_10129DD70;
    v27 = _Block_copy(aBlock);
    swift_retain(a4);
    swift_bridgeObjectRetain(a2);
    v28 = v8;
    swift_retain(v25);
    v29 = v22;
    v30 = swift_retain(v26);
    static DispatchQoS.unspecified.getter(v30);
    v46 = _swiftEmptyArrayStorage;
    v31 = sub_1004B7878((unint64_t *)&qword_1013E1D20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v32 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
    v33 = sub_1005FC154((unint64_t *)&qword_1013E1D30, (uint64_t *)&unk_1013DFBF0);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v46, v32, v33, v12, v31);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v17, v14, v27);
    _Block_release(v27);

    (*(void (**)(char *, uint64_t))(v43 + 8))(v14, v12);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v17, v42);
    swift_release(v48);
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"_saveAsset(filename:assetUUIDProvider:assetPersistenceProvider:completion:)", 75, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLAssetFileManager.swift", 91, 2, 422, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_saveAsset(filename:assetUUIDProvider:assetPersistenceProvider:completion:)", 75, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLAssetFileManager.swift", 91, 2u, 422, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    v34 = sub_1005D2A0C();
    v35 = swift_allocError(&type metadata for CRLAssetError, v34, 0, 0);
    *v36 = 0xD000000000000028;
    v36[1] = 0x8000000100FE7BE0;
    *v20 = v35;
    swift_storeEnumTagMultiPayload(v20, v18, 1);
    v44(v20);
    sub_1004CB800((uint64_t)v20, &qword_1013FFA60);
  }
}

uint64_t sub_100C7AFD4(void (*a1)(__n128), uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void (*a6)(char *), uint64_t a7, void *a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSString v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  void (*v49)(__n128);
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  void *v53;
  unint64_t v54;
  uint64_t v55;
  id v56;
  id v57;
  uint64_t v58;
  __n128 v59;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  void (*v70)(char *);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  unint64_t v77;
  uint64_t v78;
  void (*v79)(__n128);
  uint64_t v80;
  uint64_t v81;

  v68 = a8;
  v71 = a7;
  v70 = a6;
  v76 = a5;
  v73 = a4;
  v75 = a3;
  v79 = a1;
  v81 = a10;
  v80 = a9;
  v78 = sub_1004B804C(&qword_1013FFA60);
  __chkstk_darwin(v78);
  v77 = (unint64_t)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v74 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v74);
  __chkstk_darwin(v13);
  v69 = (uint64_t)&v61 - v14;
  __chkstk_darwin(v15);
  v17 = (char *)&v61 - v16;
  v18 = type metadata accessor for UUID(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(_QWORD *)(v19 + 64);
  __chkstk_darwin(v18);
  v22 = __chkstk_darwin(v21);
  v72 = (uint64_t)&v61 - v23;
  v79(v22);
  v62 = v12;
  v63 = (char *)&v61 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = v19;
  v65 = v17;
  v79 = (void (*)(__n128))v18;
  v66 = v11;
  v24 = v74;
  v25 = v73;
  v26 = String._bridgeToObjectiveC()();
  v27 = objc_msgSend(v26, "pathExtension");

  v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
  v30 = v29;

  swift_bridgeObjectRetain(v30);
  v31 = v69;
  v32 = v72;
  LODWORD(v78) = sub_100C7990C(v69, v72, v28, v30, v70, v71);
  v33 = swift_bridgeObjectRelease(v30);
  v70 = *(void (**)(char *))(v66 + 32);
  v34 = v66;
  v35 = v65;
  ((void (*)(char *, uint64_t, uint64_t, __n128))v70)(v65, v31, v24, v33);
  v36 = v67;
  (*(void (**)(char *, uint64_t, void (*)(__n128)))(v67 + 16))(v63, v32, v79);
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v64, v35, v24);
  v37 = *(unsigned __int8 *)(v36 + 80);
  v38 = v36;
  v77 = v30;
  v39 = (v37 + 24) & ~v37;
  v40 = *(unsigned __int8 *)(v34 + 80);
  v71 = v28;
  v41 = (v20 + v40 + v39) & ~v40;
  v42 = (v62 + v41 + 7) & 0xFFFFFFFFFFFFFFF8;
  v43 = (v42 + 23) & 0xFFFFFFFFFFFFFFF8;
  v44 = (v43 + 15) & 0xFFFFFFFFFFFFFFF8;
  v45 = v25;
  v46 = swift_allocObject(&unk_10129DDA8, v44 + 17, v37 | v40 | 7);
  v47 = v76;
  *(_QWORD *)(v46 + 16) = v76;
  v48 = v46 + v39;
  v49 = v79;
  (*(void (**)(uint64_t, char *, void (*)(__n128)))(v38 + 32))(v48, v63, v79);
  v50 = v46 + v41;
  v51 = v74;
  ((void (*)(uint64_t, char *, uint64_t))v70)(v50, v64, v74);
  v52 = (_QWORD *)(v46 + v42);
  *v52 = v75;
  v52[1] = v45;
  v53 = v68;
  *(_QWORD *)(v46 + v43) = v68;
  v54 = v46 + v44;
  v55 = v81;
  *(_QWORD *)v54 = v80;
  *(_QWORD *)(v54 + 8) = v55;
  *(_BYTE *)(v54 + 16) = v78 & 1;
  v56 = v47;
  swift_bridgeObjectRetain(v45);
  v57 = v53;
  swift_retain(v55);
  v58 = v77;
  sub_100AB5408(v32, v71, v77, (uint64_t)sub_100C7F724, v46);
  swift_release(v46);
  v59 = swift_bridgeObjectRelease(v58);
  (*(void (**)(char *, uint64_t, __n128))(v66 + 8))(v65, v51, v59);
  return (*(uint64_t (**)(uint64_t, void (*)(__n128)))(v67 + 8))(v32, v49);
}

uint64_t sub_100C7B654(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, void (*a9)(uint64_t), uint64_t a10, char a11)
{
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  os_unfair_lock_s *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  __n128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t *, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  void *v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  char *v69;
  uint64_t v70;
  __n128 v71;
  void *v72;
  uint64_t v73;
  uint64_t inited;
  id v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  uint64_t v87;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(char *, uint64_t);
  uint64_t v92;
  void (*v93)(char *, uint64_t, uint64_t);
  uint64_t v94;
  void *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  void (*v102)(uint64_t);
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107[3];
  uint64_t v108;
  uint64_t v109[3];
  uint64_t v110;
  uint64_t v111;
  _BYTE v112[32];

  v98 = a6;
  v99 = a7;
  v104 = a4;
  v103 = a10;
  v102 = a9;
  v100 = sub_1004B804C(&qword_1013FFA60);
  __chkstk_darwin(v100);
  v17 = (uint64_t *)((char *)&v89 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v18);
  v96 = (char *)&v89 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1004B804C((uint64_t *)&unk_1013E1700);
  __chkstk_darwin(v20);
  v22 = (char *)&v89 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for UUID(0);
  __chkstk_darwin(v23);
  v27 = (char *)&v89 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = v17;
  v97 = a5;
  if ((a2 & 1) != 0)
  {
    swift_errorRetain(a1);
    if (qword_1013DD8C0 != -1)
      swift_once(&qword_1013DD8C0, sub_100A0685C);
    swift_beginAccess(&static OS_os_log.assetManagement, v112, 0, 0);
    v72 = (void *)static OS_os_log.assetManagement;
    v73 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v73, &v111);
    *(_OWORD *)(inited + 16) = xmmword_100EF5550;
    v75 = v72;
    v76 = UUID.uuidString.getter(v75);
    v78 = v77;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v79 = sub_1004CFC2C();
    *(_QWORD *)(inited + 64) = v79;
    *(_QWORD *)(inited + 32) = v76;
    *(_QWORD *)(inited + 40) = v78;
    swift_getErrorValue(a1, &v110, v109);
    v80 = Error.publicDescription.getter(v109[1], v109[2]);
    *(_QWORD *)(inited + 96) = &type metadata for String;
    *(_QWORD *)(inited + 104) = v79;
    *(_QWORD *)(inited + 72) = v80;
    *(_QWORD *)(inited + 80) = v81;
    swift_getErrorValue(a1, &v108, v107);
    v82 = Error.fullDescription.getter(v107[1]);
    *(_QWORD *)(inited + 136) = &type metadata for String;
    *(_QWORD *)(inited + 144) = v79;
    *(_QWORD *)(inited + 112) = v82;
    *(_QWORD *)(inited + 120) = v83;
    v84 = static os_log_type_t.error.getter(v82);
    sub_100A06EBC((uint64_t)v75, &_mh_execute_header, v84, "CRLAssetFileManager _saveAsset() assetUUID: %@ - saveAssetEntry FAILED %{public}@ <%@>", 86, 2, inited);
    swift_setDeallocating(inited);
    v85 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 3, v85);

    if ((a11 & 1) != 0)
    {
      v86 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
      sub_100C79FC0();

    }
    v87 = v100;
    v67 = (uint64_t)v101;
    *v101 = a1;
    swift_storeEnumTagMultiPayload(v67, v87, 1);
    swift_errorRetain(a1);
    v102(v67);
    sub_1004E1DFC(a1, 1);
  }
  else
  {
    v89 = v26;
    v95 = a8;
    v28 = *(os_unfair_lock_s **)(*(_QWORD *)(a3 + OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_lock) + 16);
    v29 = v24;
    v30 = v25;
    os_unfair_lock_lock(v28);
    v90 = v30;
    v93 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 16);
    v94 = v29;
    v93(v27, v104, v29);
    v31 = a5;
    v32 = sub_1004B804C((uint64_t *)&unk_1013F13A0);
    v33 = *(int *)(v32 + 48);
    v34 = type metadata accessor for URL(0);
    v91 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16);
    v92 = v34;
    v91(v22, v31);
    *(_DWORD *)&v22[v33] = 7;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v22, 0, 1, v32);
    swift_beginAccess(a3 + OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_assetFileURLCache, v112, 33, 0);
    sub_10083DC00((uint64_t)v22, (uint64_t)v27);
    swift_endAccess(v112);
    os_unfair_lock_unlock(v28);
    if (qword_1013DD8C0 != -1)
      swift_once(&qword_1013DD8C0, sub_100A0685C);
    swift_beginAccess(&static OS_os_log.assetManagement, v112, 0, 0);
    v35 = (void *)static OS_os_log.assetManagement;
    v36 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v37 = swift_initStackObject(v36, &v106);
    *(_OWORD *)(v37 + 16) = xmmword_100EF5A10;
    *(_QWORD *)(v37 + 56) = &type metadata for String;
    v38 = sub_1004CFC2C();
    *(_QWORD *)(v37 + 64) = v38;
    v39 = v99;
    *(_QWORD *)(v37 + 32) = v98;
    v40 = v37 + 32;
    *(_QWORD *)(v37 + 40) = v39;
    v41 = v35;
    swift_bridgeObjectRetain(v39);
    v42 = v104;
    v44 = UUID.uuidString.getter(v43);
    *(_QWORD *)(v37 + 96) = &type metadata for String;
    *(_QWORD *)(v37 + 104) = v38;
    *(_QWORD *)(v37 + 72) = v44;
    *(_QWORD *)(v37 + 80) = v45;
    v46 = static os_log_type_t.info.getter();
    sub_100A06EBC((uint64_t)v41, &_mh_execute_header, v46, "CRLAssetFileManager _saveAsset() SUCCESS filename: %@ assetUUID: %@", 67, 2, v37);
    swift_setDeallocating(v37);
    v47 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v40, 2, v47);

    v48 = (void *)static OS_os_log.assetManagement;
    v49 = swift_initStackObject(v36, &v105);
    *(_OWORD *)(v49 + 16) = xmmword_100EF5E40;
    v50 = v48;
    v51 = UUID.uuidString.getter(v50);
    *(_QWORD *)(v49 + 56) = &type metadata for String;
    *(_QWORD *)(v49 + 64) = v38;
    *(_QWORD *)(v49 + 32) = v51;
    *(_QWORD *)(v49 + 40) = v52;
    v54 = static os_log_type_t.default.getter(v53);
    sub_100A06EBC((uint64_t)v50, &_mh_execute_header, v54, "CRLAssetFileManager _notifyAssetMaterialized() assetUUID: %@", 60, 2, v49);
    swift_setDeallocating(v49);
    swift_arrayDestroy(v49 + 32, 1, v47);

    v55 = type metadata accessor for TaskPriority(0);
    v56 = (uint64_t)v96;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v96, 1, 1, v55);
    v58 = (void (*)(uint64_t *, uint64_t, uint64_t))v93;
    v57 = v94;
    v93(v27, v42, v94);
    v59 = v90;
    v60 = *(unsigned __int8 *)(v90 + 80);
    v61 = (v60 + 40) & ~v60;
    v62 = (char *)swift_allocObject(&unk_10129DDD0, v61 + v89, v60 | 7);
    *((_QWORD *)v62 + 2) = 0;
    *((_QWORD *)v62 + 3) = 0;
    v63 = v95;
    *((_QWORD *)v62 + 4) = v95;
    (*(void (**)(char *, char *, uint64_t))(v59 + 32))(&v62[v61], v27, v57);
    v64 = v63;
    v65 = sub_100521B98(v56, (uint64_t)&unk_10140C670, (uint64_t)v62);
    swift_release(v65);
    v66 = sub_1004B804C(&qword_1013FFA70);
    v67 = (uint64_t)v101;
    v68 = (uint64_t *)((char *)v101 + *(int *)(v66 + 48));
    v69 = (char *)v101 + *(int *)(v66 + 64);
    v58(v101, v42, v57);
    v70 = v99;
    *v68 = v98;
    v68[1] = v70;
    ((void (*)(char *, uint64_t, uint64_t))v91)(v69, v97, v92);
    swift_storeEnumTagMultiPayload(v67, v100, 0);
    v71 = swift_bridgeObjectRetain(v70);
    ((void (*)(uint64_t, __n128))v102)(v67, v71);
  }
  return sub_1004CB800(v67, &qword_1013FFA60);
}

double sub_100C7BD20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double result;
  uint64_t v17;

  v9 = sub_1004B804C(&qword_10140C688);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  v12 = __chkstk_darwin(v9);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))((char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9, v12);
  v13 = *(unsigned __int8 *)(v10 + 80);
  v14 = (v13 + 16) & ~v13;
  v15 = swift_allocObject(&unk_10129DE20, v14 + v11, v13 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v15 + v14, (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  sub_100C7BF44(a3, a4, a5, (void (*)(uint64_t *))sub_100C7FBA4, v15);
  *(_QWORD *)&result = swift_release(v15).n128_u64[0];
  return result;
}

uint64_t sub_100C7BE20(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = sub_1004B804C(&qword_1013FFA70);
  __chkstk_darwin(v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C(&qword_1013FFA60);
  __chkstk_darwin(v5);
  v7 = (uint64_t *)((char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1004CB7BC(a1, (uint64_t)v7, &qword_1013FFA60);
  if (swift_getEnumCaseMultiPayload(v7, v5) == 1)
  {
    v12 = *v7;
    v8 = sub_1004B804C(&qword_10140C688);
    return CheckedContinuation.resume(throwing:)(&v12, v8);
  }
  else
  {
    sub_1004C4938((uint64_t)v7, (uint64_t)v4, &qword_1013FFA70);
    v10 = sub_1004B804C(&qword_10140C688);
    return CheckedContinuation.resume(returning:)(v4, v10);
  }
}

double sub_100C7BF44(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *), uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t, uint64_t, __n128);
  __n128 v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, __n128);
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  double result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t *);
  uint64_t v37;

  v37 = a5;
  v36 = a4;
  v8 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v33 - v13;
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v33 - v17;
  v19 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16);
  v19((char *)&v33 - v17, a1, v8, v16);
  if (a3)
  {
    v34 = a2;
    v35 = a3;
  }
  else
  {
    v34 = URL.lastPathComponent.getter(v20);
    v35 = v21;
  }
  v22 = *(void (**)(char *, uint64_t, __n128))(v9 + 8);
  v23 = swift_bridgeObjectRetain(a3);
  v22(v18, v8, v23);
  ((void (*)(char *, uint64_t, uint64_t))v19)(v14, a1, v8);
  v24 = *(unsigned __int8 *)(v9 + 80);
  v25 = (v24 + 16) & ~v24;
  v26 = v25 + v10;
  v27 = v24 | 7;
  v28 = swift_allocObject(&unk_10129DD08, v25 + v10, v24 | 7);
  v29 = *(void (**)(uint64_t, char *, uint64_t))(v9 + 32);
  v29(v28 + v25, v14, v8);
  ((void (*)(char *, uint64_t, uint64_t))v19)(v11, a1, v8);
  v30 = swift_allocObject(&unk_10129DD30, v26, v27);
  v29(v30 + v25, v11, v8);
  v31 = v35;
  sub_100C7AC34(v34, v35, (uint64_t)sub_100C7F544, v28, (uint64_t)sub_100C7F590, v30, v36, v37);
  swift_release(v28);
  swift_bridgeObjectRelease(v31);
  *(_QWORD *)&result = swift_release(v30).n128_u64[0];
  return result;
}

uint64_t sub_100C7C114@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v21 = a2;
  v4 = type metadata accessor for SHA256(0);
  v22 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SHA256Digest(0);
  v19 = *(_QWORD *)(v7 - 8);
  v20 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16))(v14, a1, v10, v12);
  v15 = sub_1004B7878((unint64_t *)&qword_1013F7428, (uint64_t (*)(uint64_t))&type metadata accessor for SHA256, (uint64_t)&protocol conformance descriptor for SHA256);
  dispatch thunk of HashFunction.init()(v4, v15);
  sub_100C7E6B0((uint64_t)v14);
  if (v2)
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v6, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  }
  else
  {
    dispatch thunk of HashFunction.finalize()(v4, v15);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v6, v4);
    v17 = type metadata accessor for UUID(0);
    SHA256Digest.withUnsafeBytes<A>(_:)(sub_10089B3C4, 0, v17);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v9, v20);
  }
}

id sub_100C7C30C()
{
  id v0;
  NSURL *v1;
  void *v2;
  void *v3;
  NSURL *v4;
  void *v5;
  void *v6;
  unsigned int v7;
  id v8;
  id v10;
  __n128 v11;
  id v12;

  v0 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
  URL._bridgeToObjectiveC()(v1);
  v3 = v2;
  URL._bridgeToObjectiveC()(v4);
  v6 = v5;
  v12 = 0;
  v7 = objc_msgSend(v0, "copyItemAtURL:toURL:error:", v3, v5, &v12);

  v8 = v12;
  if (v7)
    return v12;
  v10 = v12;
  _convertNSErrorToError(_:)(v8);

  return (id)swift_willThrow(v11);
}

id sub_100C7C410(uint64_t a1, uint64_t a2, int a3, int a4)
{
  void *v4;
  void *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSURL *v15;
  char *v16;
  void *v17;
  void *v18;
  NSURL *v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  void (*v31)(char *, uint64_t);
  __n128 v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  char *v40;
  uint64_t (*v41)(char *, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  NSString v47;
  double v48;
  double (*v49)(char *, uint64_t);
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  NSString v54;
  double v55;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  id v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  int v65;
  id v66;

  v5 = v4;
  v64 = a4;
  v65 = a3;
  v8 = type metadata accessor for URL(0);
  v62 = *(_QWORD *)(v8 - 8);
  v63 = v8;
  v9 = __chkstk_darwin(v8);
  v59 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v61 = (char *)&v57 - v11;
  v12 = type metadata accessor for CocoaError.Code(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (NSURL *)((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (char *)((char *)&v57 - (char *)v15);
  URL._bridgeToObjectiveC()(v15);
  v18 = v17;
  v58 = a2;
  URL._bridgeToObjectiveC()(v19);
  v21 = v20;
  v66 = 0;
  v60 = v5;
  v22 = objc_msgSend(v5, "moveItemAtURL:toURL:error:", v18, v20, &v66);

  v23 = v66;
  if (!(_DWORD)v22)
  {
    v25 = v66;
    v26 = _convertNSErrorToError(_:)(v23);

    swift_willThrow(v27);
    v28 = swift_errorRetain(v26);
    static CocoaError.fileNoSuchFile.getter(v28);
    v29 = sub_1004B7878((unint64_t *)&unk_1013E1720, (uint64_t (*)(uint64_t))&type metadata accessor for CocoaError.Code, (uint64_t)&protocol conformance descriptor for CocoaError.Code);
    v30 = static _ErrorCodeProtocol.~= infix(_:_:)(v16, v26, v12, v29);
    swift_errorRelease(v26);
    v31 = *(void (**)(char *, uint64_t))(v13 + 8);
    v31(v16, v12);
    if ((v30 & 1) != 0
      || (v33 = swift_errorRetain(v26),
          static CocoaError.fileReadNoSuchFile.getter(v33),
          v34 = static _ErrorCodeProtocol.~= infix(_:_:)(v16, v26, v12, v29),
          swift_errorRelease(v26),
          v31(v16, v12),
          (v34 & 1) != 0))
    {
      if ((v65 & 1) != 0)
      {
LABEL_6:
        swift_errorRelease(v26);
        return v22;
      }
    }
    else
    {
      v35 = swift_errorRetain(v26);
      static CocoaError.fileWriteFileExists.getter(v35);
      v36 = static _ErrorCodeProtocol.~= infix(_:_:)(v16, v26, v12, v29);
      swift_errorRelease(v26);
      v31(v16, v12);
      if ((v36 & 1) != 0)
      {
        if ((v64 & 1) != 0)
          goto LABEL_6;
      }
      else
      {
        v37 = swift_errorRetain(v26);
        static CocoaError.fileWriteUnknown.getter(v37);
        v38 = static _ErrorCodeProtocol.~= infix(_:_:)(v16, v26, v12, v29);
        swift_errorRelease(v26);
        v31(v16, v12);
        if ((v38 & 1) != 0)
        {
          v40 = v61;
          v39 = v62;
          v41 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v62 + 16);
          v42 = a1;
          v43 = v63;
          v44 = v41(v61, v42, v63);
          if ((v65 & 1) != 0)
          {
            URL.path.getter(v44);
            v46 = v45;
            v47 = String._bridgeToObjectiveC()();
            *(_QWORD *)&v48 = swift_bridgeObjectRelease(v46).n128_u64[0];
            LOBYTE(v46) = objc_msgSend(v60, "fileExistsAtPath:", v47, v48);

            v49 = *(double (**)(char *, uint64_t))(v39 + 8);
            v49(v40, v43);
            if ((v46 & 1) == 0)
              goto LABEL_6;
          }
          else
          {
            v49 = *(double (**)(char *, uint64_t))(v39 + 8);
            v49(v40, v43);
          }
          v50 = v59;
          v51 = v41(v59, v58, v43);
          if ((v64 & 1) != 0)
          {
            URL.path.getter(v51);
            v53 = v52;
            v54 = String._bridgeToObjectiveC()();
            *(_QWORD *)&v55 = swift_bridgeObjectRelease(v53).n128_u64[0];
            LOBYTE(v53) = objc_msgSend(v60, "fileExistsAtPath:", v54, v55);

            v49(v50, v43);
            if ((v53 & 1) != 0)
              goto LABEL_6;
          }
          else
          {
            v32.n128_f64[0] = v49(v50, v43);
          }
        }
      }
    }
    swift_willThrow(v32);
    return v22;
  }
  v24 = v66;
  return v22;
}

void sub_100C7C7FC(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t inited;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  unsigned __int8 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t);
  unsigned __int8 v47;
  unint64_t v48;
  uint64_t Strong;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  __n128 v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  void *v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(uint64_t, uint64_t);
  unint64_t v74;
  _QWORD *v75;
  __n128 v76;
  os_unfair_lock_t v77;
  void (*v78)(uint64_t, uint64_t, uint64_t);
  void *v79;
  uint64_t v80;
  __int128 v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  char *v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  char v94[72];
  _BYTE v95[24];
  char v96[8];
  char v97[8];
  uint64_t v98;

  v92 = a3;
  v91 = a2;
  v93 = a1;
  v4 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v4);
  v89 = (char *)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C((uint64_t *)&unk_1013E1700);
  __chkstk_darwin(v6);
  v88 = (char *)&v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v77 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v90 = (char *)&v77 - v16;
  v17 = v98;
  sub_100C7675C();
  if (!v17)
  {
    v86 = 0;
    v82 = v10;
    v85 = (uint64_t)&v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    v83 = v9;
    v84 = v8;
    v98 = v12;
    v87 = v11;
    v19 = v93;
    v20 = UUID.uuidString.getter(v18);
    v22 = v21;
    v23 = (uint64_t)v90;
    URL.appendingPathComponent(_:)(v20, v21);
    swift_bridgeObjectRelease(v22);
    v24 = sub_100C7F2B8(v19, v91, v92);
    v26 = v25;
    URL.appendingPathComponent(_:)(v24, v25);
    swift_bridgeObjectRelease(v26);
    sub_100C76E78(v19, (uint64_t)v15, 1);
    v27 = (uint64_t)v15;
    v92 = v3;
    if (qword_1013DD8C0 != -1)
      swift_once(&qword_1013DD8C0, sub_100A0685C);
    swift_beginAccess(&static OS_os_log.assetManagement, v97, 0, 0);
    v28 = (void *)static OS_os_log.assetManagement;
    v91 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v91, v96);
    v81 = xmmword_100EF5E40;
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v30 = v28;
    v31 = UUID.uuidString.getter(v30);
    v33 = v32;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v34 = sub_1004CFC2C();
    *(_QWORD *)(inited + 64) = v34;
    *(_QWORD *)(inited + 32) = v31;
    *(_QWORD *)(inited + 40) = v33;
    v36 = static os_log_type_t.default.getter(v35);
    sub_100A06EBC((uint64_t)v30, &_mh_execute_header, v36, "CRLAssetFileManager moveDeletedAssetFileToAssetsDirectory() assetUUID: %@", 73, 2, inited);
    swift_setDeallocating(inited);
    v37 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v37);

    v38 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
    v39 = v86;
    v40 = sub_100C7C410(v23, v27, 1, 1);
    v41 = v23;
    v42 = v19;
    v43 = v41;
    v44 = v27;
    if (v39)
    {

      v45 = v87;
LABEL_6:
      v46 = *(void (**)(uint64_t, uint64_t))(v98 + 8);
      v46(v44, v45);
      v46(v43, v45);
      return;
    }
    v47 = v40;
    v86 = v37;

    v45 = v87;
    if ((v47 & 1) != 0)
    {
      v48 = v92;
      Strong = swift_unknownObjectWeakLoadStrong(v92 + OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_store);
      if (!Strong)
      {
        v74 = sub_1005D2A0C();
        swift_allocError(&type metadata for CRLAssetError, v74, 0, 0);
        *v75 = 0xD000000000000028;
        v75[1] = 0x8000000100FE7BE0;
        swift_willThrow(v76);
        goto LABEL_6;
      }
      v77 = *(os_unfair_lock_t *)(*(_QWORD *)(v48 + OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_lock) + 16);
      v79 = (void *)Strong;
      os_unfair_lock_lock(v77);
      v78 = *(void (**)(uint64_t, uint64_t, uint64_t))(v83 + 16);
      v78(v85, v42, v84);
      v50 = sub_1004B804C((uint64_t *)&unk_1013F13A0);
      v80 = v44;
      v51 = *(int *)(v50 + 48);
      v52 = (uint64_t)v88;
      (*(void (**)(char *, uint64_t, uint64_t))(v98 + 16))(v88, v80, v45);
      *(_DWORD *)(v52 + v51) = 7;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v52, 0, 1, v50);
      swift_beginAccess(v48 + OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_assetFileURLCache, v95, 33, 0);
      v53 = v85;
      sub_10083DC00(v52, v85);
      swift_endAccess(v95);
      os_unfair_lock_unlock(v77);
      v54 = (void *)static OS_os_log.assetManagement;
      v55 = swift_initStackObject(v91, v94);
      *(_OWORD *)(v55 + 16) = v81;
      v56 = v54;
      v57 = UUID.uuidString.getter(v56);
      *(_QWORD *)(v55 + 56) = &type metadata for String;
      *(_QWORD *)(v55 + 64) = v34;
      *(_QWORD *)(v55 + 32) = v57;
      *(_QWORD *)(v55 + 40) = v58;
      v60 = static os_log_type_t.default.getter(v59);
      sub_100A06EBC((uint64_t)v56, &_mh_execute_header, v60, "CRLAssetFileManager _notifyAssetMaterialized() assetUUID: %@", 60, 2, v55);
      swift_setDeallocating(v55);
      swift_arrayDestroy(v55 + 32, 1, v86);

      v61 = type metadata accessor for TaskPriority(0);
      v62 = v89;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v89, 1, 1, v61);
      v63 = v42;
      v64 = v84;
      v78(v53, v63, v84);
      v65 = v83;
      v66 = *(unsigned __int8 *)(v83 + 80);
      v67 = (v66 + 40) & ~v66;
      v68 = (char *)swift_allocObject(&unk_10129DCE0, v67 + v82, v66 | 7);
      *((_QWORD *)v68 + 2) = 0;
      *((_QWORD *)v68 + 3) = 0;
      v69 = v79;
      *((_QWORD *)v68 + 4) = v79;
      (*(void (**)(char *, uint64_t, uint64_t))(v65 + 32))(&v68[v67], v85, v64);
      v70 = v69;
      v71 = (uint64_t)v62;
      v44 = v80;
      v72 = sub_100521B98(v71, (uint64_t)&unk_10140C668, (uint64_t)v68);
      swift_release(v72);

    }
    v73 = *(void (**)(uint64_t, uint64_t))(v98 + 8);
    v73(v44, v45);
    v73(v43, v45);
  }
}

void sub_100C7CF08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  id v18;
  uint64_t Strong;
  uint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t i;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  char *v41;
  int64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v1 = type metadata accessor for Date(0);
  v42 = *(_QWORD *)(v1 - 8);
  v43 = v1;
  __chkstk_darwin(v1);
  v41 = (char *)&v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for URL(0);
  v44 = *(_QWORD *)(v3 - 8);
  v45 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v10);
  v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchPredicate(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (uint64_t *)((char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_purgeDeletedAssetsQueue);
  *v16 = v17;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v14 + 104))(v16, enum case for DispatchPredicate.onQueue(_:), v13);
  v18 = v17;
  LOBYTE(v17) = _dispatchPreconditionTest(_:)(v16);
  (*(void (**)(_QWORD *, uint64_t))(v14 + 8))(v16, v13);
  if ((v17 & 1) == 0)
    goto LABEL_29;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_store);
  if (!Strong)
  {
    v37 = v41;
    v38 = static Date.distantFuture.getter(0);
    Date.timeIntervalSinceReferenceDate.getter(v38);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v37, v43);
    return;
  }
  v40 = (id)__chkstk_darwin(Strong);
  *(&v39 - 2) = (uint64_t)v40;
  *(&v39 - 1) = 0x40CC200000000000;
  v20 = sub_1004B804C(&qword_10140C660);
  OS_dispatch_queue.sync<A>(execute:)(sub_100C7F4A4, &v39 - 4, v20);
  v21 = 0;
  v22 = v46;
  v23 = *(_QWORD *)(v46 + 56);
  v41 = (char *)(v46 + 56);
  v24 = 1 << *(_BYTE *)(v46 + 32);
  v25 = -1;
  if (v24 < 64)
    v25 = ~(-1 << v24);
  v26 = v25 & v23;
  v43 = v0 + OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_deletedAssetsDirectoryURL;
  v42 = (unint64_t)(v24 + 63) >> 6;
  if ((v25 & v23) == 0)
    goto LABEL_7;
LABEL_6:
  v27 = __clz(__rbit64(v26));
  v26 &= v26 - 1;
  for (i = v27 | (v21 << 6); ; i = __clz(__rbit64(v30)) + (v21 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v12, *(_QWORD *)(v22 + 48) + *(_QWORD *)(v7 + 72) * i, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v12, 0, 1, v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6) == 1)
      goto LABEL_26;
    v32 = (*(uint64_t (**)(char *, char *, uint64_t))(v7 + 32))(v9, v12, v6);
    v33 = UUID.uuidString.getter(v32);
    v35 = v34;
    URL.appendingPathComponent(_:)(v33, v34);
    swift_bridgeObjectRelease(v35);
    v36 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
    sub_100C79FC0();

    (*(void (**)(char *, uint64_t))(v44 + 8))(v5, v45);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    if (v26)
      goto LABEL_6;
LABEL_7:
    v29 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v29 >= v42)
      goto LABEL_25;
    v30 = *(_QWORD *)&v41[8 * v29];
    ++v21;
    if (!v30)
    {
      v21 = v29 + 1;
      if (v29 + 1 >= v42)
        goto LABEL_25;
      v30 = *(_QWORD *)&v41[8 * v21];
      if (!v30)
      {
        v21 = v29 + 2;
        if (v29 + 2 >= v42)
          goto LABEL_25;
        v30 = *(_QWORD *)&v41[8 * v21];
        if (!v30)
          break;
      }
    }
LABEL_20:
    v26 = (v30 - 1) & v30;
  }
  v31 = v29 + 3;
  if (v31 >= v42)
  {
LABEL_25:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v12, 1, 1, v6);
LABEL_26:

    swift_release(v22);
    return;
  }
  v30 = *(_QWORD *)&v41[8 * v31];
  if (v30)
  {
    v21 = v31;
    goto LABEL_20;
  }
  while (1)
  {
    v21 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v21 >= v42)
      goto LABEL_25;
    v30 = *(_QWORD *)&v41[8 * v21];
    ++v31;
    if (v30)
      goto LABEL_20;
  }
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
}

void sub_100C7D3A4(double a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  id v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  char v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  char *v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  __n128 v36;
  __n128 v37;
  uint64_t v38;
  void *v39;
  id v40;
  char *v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD aBlock[5];
  uint64_t v45;

  v2 = v1;
  v4 = type metadata accessor for DispatchTime(0);
  v42 = *(_QWORD *)(v4 - 8);
  v5 = __chkstk_darwin(v4);
  v41 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v8 = (char *)&v38 - v7;
  v9 = type metadata accessor for DispatchWorkItemFlags(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchPredicate(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (uint64_t *)((char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_purgeDeletedAssetsQueue);
  *v15 = v16;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v13 + 104))(v15, enum case for DispatchPredicate.onQueue(_:), v12);
  v17 = v16;
  v18 = _dispatchPreconditionTest(_:)(v15);
  (*(void (**)(_QWORD *, uint64_t))(v13 + 8))(v15, v12);
  if ((v18 & 1) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  v40 = v17;
  v19 = OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_purgeDeletedAssetsWorkItem;
  v20 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_purgeDeletedAssetsWorkItem);
  if (!v20
    || (v21 = swift_retain(*(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_purgeDeletedAssetsWorkItem)),
        v22 = dispatch thunk of DispatchWorkItem.isCancelled.getter(v21),
        swift_release(v20),
        (v22 & 1) != 0))
  {
    v23 = swift_allocObject(&unk_10129DC90, 24, 7);
    swift_unknownObjectWeakInit(v23 + 16, v2);
    aBlock[4] = sub_100C7F49C;
    v45 = v23;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(_QWORD *)"";
    aBlock[2] = sub_1005D2FC0;
    aBlock[3] = &unk_10129DCA8;
    v39 = _Block_copy(aBlock);
    v43 = _swiftEmptyArrayStorage;
    v24 = v8;
    v25 = v4;
    v26 = sub_1004B7878((unint64_t *)&qword_1013E1D20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    swift_retain(v23);
    v27 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
    v28 = sub_1005FC154((unint64_t *)&qword_1013E1D30, (uint64_t *)&unk_1013DFBF0);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v43, v27, v28, v9, v26);
    v29 = type metadata accessor for DispatchWorkItem(0);
    swift_allocObject(v29, *(unsigned int *)(v29 + 48), *(unsigned __int16 *)(v29 + 52));
    v30 = DispatchWorkItem.init(flags:block:)(v11, v39);
    swift_release(v45);
    swift_release(v23);
    v31 = *(_QWORD *)(v2 + v19);
    *(_QWORD *)(v2 + v19) = v30;
    v32 = swift_release(v31);
    v33 = v41;
    static DispatchTime.now()(v32);
    + infix(_:_:)(v33, ceil(a1 + 5.0));
    v34 = *(void (**)(char *, uint64_t))(v42 + 8);
    v34(v33, v25);
    v35 = *(_QWORD *)(v2 + v19);
    if (v35)
    {
      v36 = swift_retain(v35);
      OS_dispatch_queue.asyncAfter(deadline:execute:)(v24, v35, v36);
      v37 = swift_release(v35);
      ((void (*)(char *, uint64_t, __n128))v34)(v24, v25, v37);
      return;
    }
LABEL_8:
    __break(1u);
  }
}

void sub_100C7D6E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  char *v3;
  uint64_t v4;
  double v5;
  _BYTE v6[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (char *)Strong;
    v4 = *(_QWORD *)(Strong + OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_purgeDeletedAssetsWorkItem);
    *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_purgeDeletedAssetsWorkItem] = 0;
    swift_release(v4);
    sub_100C7CF08();
    if (v5 <= 14400.0)
      sub_100C7D3A4();

  }
}

double sub_100C7D764()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  char *v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double result;
  uint64_t v17;
  _QWORD *v18;
  _QWORD aBlock[5];
  uint64_t v20;

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_purgeDeletedAssetsQueue];
  v9 = swift_allocObject(&unk_10129DC40, 24, 7);
  *(_QWORD *)(v9 + 16) = v0;
  aBlock[4] = sub_100C7F43C;
  v20 = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1005D2FC0;
  aBlock[3] = &unk_10129DC58;
  v10 = _Block_copy(aBlock);
  v11 = v0;
  static DispatchQoS.unspecified.getter(v12);
  v18 = _swiftEmptyArrayStorage;
  v13 = sub_1004B7878((unint64_t *)&qword_1013E1D20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v14 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
  v15 = sub_1005FC154((unint64_t *)&qword_1013E1D30, (uint64_t *)&unk_1013DFBF0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v18, v14, v15, v1, v13);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v4, v10);
  _Block_release(v10);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *(_QWORD *)&result = swift_release(v20).n128_u64[0];
  return result;
}

uint64_t sub_100C7D948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 40) = a4;
  *(_QWORD *)(v5 + 48) = a5;
  return swift_task_switch(sub_100C7D960, 0, 0);
}

uint64_t sub_100C7D960()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  os_unfair_lock_s *v8;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetDownloadManagerLock);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v2 + 16));
  v3 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetDownloadManager;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetDownloadManager);
  if (v4)
  {
    v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetDownloadManager);
  }
  else
  {
    v6 = (char *)*(id *)(v0 + 40);
    v4 = sub_1005D2858(v6);

    v7 = *(_QWORD *)(v1 + v3);
    *(_QWORD *)(v1 + v3) = v4;
    swift_retain(v4);
    swift_release(v7);
    v5 = 0;
  }
  *(_QWORD *)(v0 + 56) = v4;
  v8 = *(os_unfair_lock_s **)(v2 + 16);
  swift_retain(v5);
  os_unfair_lock_unlock(v8);
  return swift_task_switch(sub_100C7DA1C, v4, 0);
}

uint64_t sub_100C7DA1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;

  v1 = *(_QWORD *)(v0 + 56);
  swift_beginAccess(v1 + 272, v0 + 16, 0, 0);
  v2 = *(_QWORD *)(v1 + 272);
  if (*(_QWORD *)(v2 + 16))
  {
    v3 = *(_QWORD *)(v0 + 48);
    swift_bridgeObjectRetain(v2);
    v4 = sub_100842EFC(v3);
    if ((v5 & 1) != 0)
    {
      v6 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v4);
      swift_retain(v6);
      swift_bridgeObjectRelease();
      sub_1005D04AC(0);
      swift_release(v6);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  v7 = *(_QWORD *)(v0 + 56);
  sub_1005CE4B0(*(_QWORD *)(v0 + 48));
  v8 = swift_release(v7);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v8);
}

uint64_t sub_100C7DAC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v7 + 104) = a6;
  *(_QWORD *)(v7 + 56) = a5;
  *(_QWORD *)(v7 + 64) = v6;
  *(_QWORD *)(v7 + 40) = a3;
  *(_QWORD *)(v7 + 48) = a4;
  *(_QWORD *)(v7 + 24) = a1;
  *(_QWORD *)(v7 + 32) = a2;
  return swift_task_switch(sub_100C7DAEC, 0, 0);
}

uint64_t sub_100C7DAEC()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v8;
  _QWORD *v9;
  __n128 v10;
  __int128 v11;

  Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + 64) + OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_store);
  *(_QWORD *)(v0 + 72) = Strong;
  if (Strong)
  {
    v2 = Strong;
    v3 = *(_QWORD *)(v0 + 48);
    v11 = *(_OWORD *)(v0 + 32);
    v4 = swift_task_alloc(48);
    *(_QWORD *)(v0 + 80) = v4;
    *(_QWORD *)(v4 + 16) = v2;
    *(_OWORD *)(v4 + 24) = v11;
    *(_QWORD *)(v4 + 40) = v3;
    v5 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
    *(_QWORD *)(v0 + 88) = v5;
    v6 = sub_1004B804C(&qword_10140C658);
    *v5 = v0;
    v5[1] = sub_100C7DC34;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0xD000000000000036, 0x8000000101006C40, sub_100C7F40C, v4, v6);
  }
  else
  {
    v8 = sub_1005D2A0C();
    swift_allocError(&type metadata for CRLAssetError, v8, 0, 0);
    *v9 = 0xD000000000000028;
    v9[1] = 0x8000000100FE7BE0;
    swift_willThrow(v10);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100C7DC34()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 88);
  *(_QWORD *)(*v1 + 96) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_100C7DD94;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 80));
    v4 = sub_100C7DCA0;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_100C7DCA0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  void (*v3)(char *, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  __n128 v8;
  void *v9;
  unint64_t v10;
  _OWORD *v11;

  v1 = *(_QWORD *)(v0 + 16);
  if (v1)
  {
    v2 = *(unsigned __int8 *)(v0 + 104);
    v3 = *(void (**)(char *, uint64_t, uint64_t))(v0 + 56);
    v5 = *(_QWORD *)(v0 + 24);
    v4 = *(_QWORD *)(v0 + 32);
    v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_fileExtension);
    v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_fileExtension + 8);
    swift_bridgeObjectRetain(v7);
    sub_100C7DDCC(v4, v6, v7, v3, v2, v5);

    swift_release(v1);
    v8 = swift_bridgeObjectRelease(v7);
  }
  else
  {
    v9 = *(void **)(v0 + 72);
    v10 = sub_1005D2A0C();
    swift_allocError(&type metadata for CRLAssetError, v10, 0, 0);
    *v11 = xmmword_100EFD000;
    swift_willThrow((__n128)xmmword_100EFD000);

  }
  return (*(uint64_t (**)(__n128))(v0 + 8))(v8);
}

uint64_t sub_100C7DD94()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 80));

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100C7DDCC(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, void (*a4)(char *, uint64_t, uint64_t)@<X3>, int a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  unsigned __int8 v24;
  uint64_t v25;
  os_unfair_lock_s *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t Strong;
  void *v33;
  void *v34;
  uint64_t v35;
  uint64_t inited;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  id v53;
  uint64_t v54;
  unint64_t v55;
  _QWORD *v56;
  __n128 v57;
  uint64_t v58;
  char *v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  unint64_t v66;
  void (*v67)(char *, uint64_t, uint64_t);
  uint64_t v68;
  char v69[72];
  _BYTE v70[32];
  uint64_t v71;

  v8 = v6;
  v64 = a5;
  v66 = a3;
  v67 = a4;
  v65 = a2;
  v71 = a1;
  v68 = a6;
  v9 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v9);
  v11 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1004B804C((uint64_t *)&unk_1013E1700);
  __chkstk_darwin(v12);
  v14 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for UUID(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  __chkstk_darwin(v15);
  sub_100C7675C();
  if (!v7)
  {
    v60 = v14;
    v58 = v17;
    v61 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
    v62 = v16;
    v63 = v15;
    v59 = v11;
    v18 = v71;
    v19 = sub_100C7F2B8(v71, v65, v66);
    v21 = v20;
    v22 = v68;
    URL.appendingPathComponent(_:)(v19, v20);
    swift_bridgeObjectRelease(v21);
    sub_100C76E78(v18, v22, 1);
    v23 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
    v24 = sub_100C7C410((uint64_t)v67, v22, 0, 1);
    v25 = v8;

    if ((v24 & 1) != 0)
    {
      v26 = *(os_unfair_lock_s **)(*(_QWORD *)(v8 + OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_lock) + 16);
      os_unfair_lock_lock(v26);
      v27 = (uint64_t)v61;
      v67 = *(void (**)(char *, uint64_t, uint64_t))(v62 + 16);
      v67(v61, v18, v63);
      v28 = sub_1004B804C((uint64_t *)&unk_1013F13A0);
      v29 = *(int *)(v28 + 48);
      v30 = type metadata accessor for URL(0);
      v65 = *(_QWORD *)(v30 - 8);
      v66 = v30;
      v31 = (uint64_t)v60;
      (*(void (**)(char *, uint64_t))(v65 + 16))(v60, v22);
      *(_DWORD *)(v31 + v29) = 7;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v31, 0, 1, v28);
      swift_beginAccess(v25 + OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_assetFileURLCache, v70, 33, 0);
      sub_10083DC00(v31, v27);
      swift_endAccess(v70);
      os_unfair_lock_unlock(v26);
      if ((v64 & 1) != 0)
      {
        Strong = swift_unknownObjectWeakLoadStrong(v25 + OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_store);
        if (Strong)
        {
          v33 = (void *)Strong;
          if (qword_1013DD8C0 != -1)
            swift_once(&qword_1013DD8C0, sub_100A0685C);
          swift_beginAccess(&static OS_os_log.assetManagement, v70, 0, 0);
          v34 = (void *)static OS_os_log.assetManagement;
          v35 = sub_1004B804C((uint64_t *)&unk_1013E0180);
          inited = swift_initStackObject(v35, v69);
          *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
          v37 = v34;
          v38 = UUID.uuidString.getter(v37);
          v40 = v39;
          *(_QWORD *)(inited + 56) = &type metadata for String;
          *(_QWORD *)(inited + 64) = sub_1004CFC2C();
          v41 = v18;
          *(_QWORD *)(inited + 32) = v38;
          *(_QWORD *)(inited + 40) = v40;
          v43 = static os_log_type_t.default.getter(v42);
          sub_100A06EBC((uint64_t)v37, &_mh_execute_header, v43, "CRLAssetFileManager _notifyAssetMaterialized() assetUUID: %@", 60, 2, inited);
          swift_setDeallocating(inited);
          v44 = sub_1004B804C(&qword_1013E0190);
          swift_arrayDestroy(inited + 32, 1, v44);

          v45 = type metadata accessor for TaskPriority(0);
          v46 = (uint64_t)v59;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v59, 1, 1, v45);
          v47 = v61;
          v48 = v63;
          v67(v61, v41, v63);
          v49 = v62;
          v50 = *(unsigned __int8 *)(v62 + 80);
          v51 = (v50 + 40) & ~v50;
          v52 = (char *)swift_allocObject(&unk_10129DC18, v51 + v58, v50 | 7);
          *((_QWORD *)v52 + 2) = 0;
          *((_QWORD *)v52 + 3) = 0;
          *((_QWORD *)v52 + 4) = v33;
          (*(void (**)(char *, char *, uint64_t))(v49 + 32))(&v52[v51], v47, v48);
          v53 = v33;
          v54 = sub_100521B98(v46, (uint64_t)&unk_10140C650, (uint64_t)v52);
          swift_release(v54);

        }
        else
        {
          sub_100757E04(&_mh_execute_header, (uint64_t)"moveDownloadedAssetFile(for:fileExtension:temporaryAssetFileURL:notifyDownloadObservers:)", 89, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLAssetFileManager.swift", 91, 2, 686, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
          sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"moveDownloadedAssetFile(for:fileExtension:temporaryAssetFileURL:notifyDownloadObservers:)", 89, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLAssetFileManager.swift", 91, 2u, 686, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
          v55 = sub_1005D2A0C();
          swift_allocError(&type metadata for CRLAssetError, v55, 0, 0);
          *v56 = 0xD000000000000028;
          v56[1] = 0x8000000100FE7BE0;
          swift_willThrow(v57);
          (*(void (**)(uint64_t, unint64_t))(v65 + 8))(v22, v66);
        }
      }
    }
  }
}

id sub_100C7E380()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLAssetFileManager(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100C7E474()
{
  return type metadata accessor for CRLAssetFileManager(0);
}

uint64_t type metadata accessor for CRLAssetFileManager(uint64_t a1)
{
  uint64_t result;

  result = qword_10140C600;
  if (!qword_10140C600)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLAssetFileManager);
  return result;
}

uint64_t sub_100C7E4B8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];
  uint64_t v5;
  uint64_t v6;
  void *v7;
  char *v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  void *v13;

  v4[0] = "\b";
  v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  result = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    v5 = *(_QWORD *)(result - 8) + 64;
    v6 = v5;
    v7 = &unk_100F302A0;
    v8 = (char *)&value witness table for Builtin.BridgeObject + 64;
    v9 = (char *)&value witness table for Builtin.UnknownObject + 64;
    v10 = (char *)&value witness table for Builtin.Int64 + 64;
    v11 = (char *)&value witness table for Builtin.Int64 + 64;
    v12 = (char *)&value witness table for Builtin.UnknownObject + 64;
    v13 = &unk_100F302B8;
    result = swift_updateClassMetadata2(a1, 256, 11, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLAssetFileManager.AssetFileURLCacheFlags()
{
  return &type metadata for CRLAssetFileManager.AssetFileURLCacheFlags;
}

unint64_t sub_100C7E594()
{
  unint64_t result;

  result = qword_10140C628;
  if (!qword_10140C628)
  {
    result = swift_getWitnessTable(&unk_100F30318, &type metadata for CRLAssetFileManager.AssetFileURLCacheFlags);
    atomic_store(result, (unint64_t *)&qword_10140C628);
  }
  return result;
}

unint64_t sub_100C7E5DC()
{
  unint64_t result;

  result = qword_10140C630;
  if (!qword_10140C630)
  {
    result = swift_getWitnessTable(&unk_100F302E8, &type metadata for CRLAssetFileManager.AssetFileURLCacheFlags);
    atomic_store(result, (unint64_t *)&qword_10140C630);
  }
  return result;
}

unint64_t sub_100C7E624()
{
  unint64_t result;

  result = qword_10140C638;
  if (!qword_10140C638)
  {
    result = swift_getWitnessTable(&unk_100F30340, &type metadata for CRLAssetFileManager.AssetFileURLCacheFlags);
    atomic_store(result, (unint64_t *)&qword_10140C638);
  }
  return result;
}

unint64_t sub_100C7E66C()
{
  unint64_t result;

  result = qword_10140C640;
  if (!qword_10140C640)
  {
    result = swift_getWitnessTable(&unk_100F30378, &type metadata for CRLAssetFileManager.AssetFileURLCacheFlags);
    atomic_store(result, &qword_10140C640);
  }
  return result;
}

void sub_100C7E6B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  void *v8;
  unint64_t v9;
  void *v10;

  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004B8930(0, (unint64_t *)&qword_101401318, NSFileHandle_ptr);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  v7 = sub_100C76648((uint64_t)v6);
  if (!v1)
  {
    v8 = v7;
    NSFileHandle.read(upToCount:)(0x100000);
    v10 = v8;
    if (v9 >> 60 != 15)
      __asm { BR              X9 }
    objc_msgSend(v8, "closeFile", v10);

  }
}

void sub_100C7EAEC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int i;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  char v35;
  unint64_t v36;
  uint64_t v37;
  _BOOL8 v38;
  uint64_t v39;
  char v40;
  unint64_t v41;
  char v42;
  _QWORD *v43;
  uint64_t *v44;
  uint64_t v45;
  BOOL v46;
  uint64_t v47;
  _QWORD v48[2];
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v10 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  v58 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v50 = (uint64_t)v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v49 = (uint64_t)v48 - v13;
  __chkstk_darwin(v14);
  v16 = (char *)v48 - v15;
  v17 = sub_1004B804C((uint64_t *)&unk_1013F1380);
  __chkstk_darwin(v17);
  v19 = (_QWORD *)((char *)v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = -1 << *(_BYTE *)(a1 + 32);
  v21 = ~v20;
  v22 = *(_QWORD *)(a1 + 64);
  v23 = -v20;
  v51 = a1;
  v52 = a1 + 64;
  if (v23 < 64)
    v24 = ~(-1 << v23);
  else
    v24 = -1;
  v53 = v21;
  v54 = 0;
  v55 = v24 & v22;
  v56 = a2;
  v57 = a3;
  v48[1] = a1;
  swift_bridgeObjectRetain(a1);
  v48[0] = a3;
  swift_retain(a3);
  sub_100CE0548((uint64_t)v19);
  v25 = sub_1004B804C(&qword_101405DE0);
  for (i = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v19, 1, v25);
        ;
        i = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v19, 1, v25))
  {
    if (i == 1)
    {
      swift_release(v48[0]);
      swift_bridgeObjectRelease();
      sub_1004D284C(v51);
      swift_release(v57);
      return;
    }
    v32 = *v19;
    v31 = v19[1];
    v33 = (uint64_t)v16;
    sub_1004C4938((uint64_t)v19 + *(int *)(v25 + 48), (uint64_t)v16, (uint64_t *)&unk_1013E1A50);
    v34 = *(_QWORD **)a5;
    v36 = sub_100842E98(v32, v31);
    v37 = v34[2];
    v38 = (v35 & 1) == 0;
    v39 = v37 + v38;
    if (__OFADD__(v37, v38))
      break;
    v40 = v35;
    if (v34[3] >= v39)
    {
      if ((a4 & 1) != 0)
      {
        v43 = *(_QWORD **)a5;
        if ((v35 & 1) != 0)
          goto LABEL_5;
      }
      else
      {
        sub_10082D260();
        v43 = *(_QWORD **)a5;
        if ((v40 & 1) != 0)
          goto LABEL_5;
      }
    }
    else
    {
      sub_10081633C(v39, a4 & 1);
      v41 = sub_100842E98(v32, v31);
      if ((v40 & 1) != (v42 & 1))
        goto LABEL_22;
      v36 = v41;
      v43 = *(_QWORD **)a5;
      if ((v40 & 1) != 0)
      {
LABEL_5:
        v27 = v43[7];
        v28 = *(_QWORD *)(v58 + 72) * v36;
        v29 = v50;
        sub_1004CB7BC(v27 + v28, v50, (uint64_t *)&unk_1013E1A50);
        v30 = v49;
        sub_1004CB7BC(v29, v49, (uint64_t *)&unk_1013E1A50);
        sub_1004CB800(v29, (uint64_t *)&unk_1013E1A50);
        v16 = (char *)v33;
        sub_1004CB800(v33, (uint64_t *)&unk_1013E1A50);
        swift_bridgeObjectRelease();
        sub_1005E388C(v30, *(_QWORD *)(*(_QWORD *)a5 + 56) + v28);
        goto LABEL_6;
      }
    }
    v43[(v36 >> 6) + 8] |= 1 << v36;
    v44 = (uint64_t *)(v43[6] + 16 * v36);
    *v44 = v32;
    v44[1] = v31;
    v16 = (char *)v33;
    sub_1004C4938(v33, v43[7] + *(_QWORD *)(v58 + 72) * v36, (uint64_t *)&unk_1013E1A50);
    v45 = v43[2];
    v46 = __OFADD__(v45, 1);
    v47 = v45 + 1;
    if (v46)
      goto LABEL_21;
    v43[2] = v47;
LABEL_6:
    sub_100CE0548((uint64_t)v19);
    v25 = sub_1004B804C(&qword_101405DE0);
    a4 = 1;
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

id sub_100C7EE84(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _DWORD *v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  objc_class *v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  objc_super v44;
  _QWORD *v45;

  v40 = a1;
  v2 = type metadata accessor for URL(0);
  v41 = *(_QWORD *)(v2 - 8);
  v42 = v2;
  __chkstk_darwin(v2);
  v39 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v37 = *(_QWORD *)(v43 - 8);
  __chkstk_darwin(v43);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = &v1[OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_store];
  swift_unknownObjectWeakInit(&v1[OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_store], 0);
  v12 = OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_lock;
  v13 = type metadata accessor for CRLUnfairLock();
  v14 = swift_allocObject(v13, 24, 7);
  v15 = v1;
  v16 = (_DWORD *)swift_slowAlloc(4, -1);
  *v16 = 0;
  *(_QWORD *)(v14 + 16) = v16;
  atomic_thread_fence(memory_order_acq_rel);
  *(_QWORD *)&v1[v12] = v14;
  v15[OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_didEnsureAssetDirectory] = 0;
  *(_QWORD *)&v15[OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_assetFileURLCache] = &_swiftEmptyDictionarySingleton;
  v36 = OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_writeAssetFileQueue;
  sub_1004B8930(0, (unint64_t *)&qword_1013DE090, OS_dispatch_queue_ptr);
  static DispatchQoS.unspecified.getter(v17);
  v45 = _swiftEmptyArrayStorage;
  v18 = sub_1004B7878((unint64_t *)&qword_1013E3A70, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v35 = v18;
  v19 = sub_1004B804C(&qword_1013FF6B0);
  v34 = v19;
  v20 = sub_1005FC154((unint64_t *)&qword_1013E3A78, &qword_1013FF6B0);
  v21 = v19;
  v22 = v6;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v45, v21, v20, v6, v18);
  v23 = enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:);
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v37 + 104);
  v24(v5, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v43);
  v25 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000027, 0x8000000101006B00, v11, v8, v5, 0);
  *(_QWORD *)&v15[v36] = v25;
  *(_QWORD *)&v15[OBJC_IVAR____TtC8Freeform19CRLAssetFileManager__deletedAssetsTTL] = 0x40CC200000000000;
  *(_QWORD *)&v15[OBJC_IVAR____TtC8Freeform19CRLAssetFileManager__deletedAssetsTTLTolerance] = 0x4014000000000000;
  v37 = OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_purgeDeletedAssetsQueue;
  static DispatchQoS.unspecified.getter(v26);
  v45 = _swiftEmptyArrayStorage;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v45, v34, v20, v22, v35);
  v24(v5, v23, v43);
  v27 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000024, 0x8000000101006B30, v11, v8, v5, 0);
  *(_QWORD *)&v15[v37] = v27;
  *(_QWORD *)&v15[OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_purgeDeletedAssetsWorkItem] = 0;
  swift_unknownObjectWeakAssign(v38, v40);
  v28 = v39;
  URL.appendingPathComponent(_:isDirectory:)(0x737465737341, 0xE600000000000000, 1);
  v29 = v42;
  v30 = *(void (**)(char *, char *, uint64_t))(v41 + 32);
  v30(&v15[OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_assetsDirectoryURL], v28, v42);
  URL.appendingPathComponent(_:isDirectory:)(0x41646574656C6544, 0xED00007374657373, 1);
  v30(&v15[OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_deletedAssetsDirectoryURL], v28, v29);

  v31 = (objc_class *)type metadata accessor for CRLAssetFileManager(0);
  v44.receiver = v15;
  v44.super_class = v31;
  return objc_msgSendSuper2(&v44, "init");
}

uint64_t sub_100C7F2B8(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSString v9;
  NSString v10;
  id v11;
  uint64_t v12;

  v5 = UUID.uuidString.getter(a1);
  v7 = v6;
  if (!a3)
    return v5;
  v8 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v8 = a2 & 0xFFFFFFFFFFFFLL;
  if (!v8)
    return v5;
  v9 = String._bridgeToObjectiveC()();
  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend(v9, "stringByAppendingPathExtension:", v10);

  if (!v11)
    return v5;
  swift_bridgeObjectRelease(v7);
  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);

  return v12;
}

uint64_t sub_100C7F390()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for UUID(0) - 8) + 80);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = v0 + ((v2 + 40) & ~v2);
  v5 = (_QWORD *)swift_task_alloc(dword_10140C64C);
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_1004CFD00;
  v5[5] = v3;
  v5[6] = v4;
  return swift_task_switch(sub_100C7D960, 0, 0);
}

double sub_100C7F40C(uint64_t a1)
{
  uint64_t v1;

  return sub_100AB614C(a1, *(char **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_100C7F418()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100C7F43C()
{
  sub_100C7D3A4(0.0);
}

double sub_100C7F460(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

double sub_100C7F470(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_100C7F478()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100C7F49C()
{
  uint64_t v0;

  sub_100C7D6E8(v0);
}

uint64_t sub_100C7F4A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100ABFDCC(*(_QWORD *)(v1 + 16), a1, *(double *)(v1 + 24));
}

uint64_t sub_100C7F4C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for UUID(0) - 8) + 80);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = v0 + ((v2 + 40) & ~v2);
  v5 = (_QWORD *)swift_task_alloc(dword_10140C64C);
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_1004CF80C;
  v5[5] = v3;
  v5[6] = v4;
  return swift_task_switch(sub_100C7D960, 0, 0);
}

uint64_t sub_100C7F544@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for URL(0) - 8) + 80);
  return sub_100C7C114(v1 + ((v3 + 16) & ~v3), a1);
}

id sub_100C7F590()
{
  type metadata accessor for URL(0);
  return sub_100C7C30C();
}

uint64_t sub_100C7F5D8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));

  swift_release(*(_QWORD *)(v0 + 64));
  swift_release(*(_QWORD *)(v0 + 88));
  return swift_deallocObject(v0, 96, 7);
}

uint64_t sub_100C7F624()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v4 + v5 + v8) & ~v8;
  v10 = v3 | v8 | 7;
  v11 = (*(_QWORD *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  v12 = (v11 + 23) & 0xFFFFFFFFFFFFFFF8;
  v13 = (v12 + 15) & 0xFFFFFFFFFFFFFFF8;
  v15 = v10;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v11 + 8));

  swift_release(*(_QWORD *)(v0 + v13 + 8));
  return swift_deallocObject(v0, v13 + 17, v15);
}

uint64_t sub_100C7F724(uint64_t a1, char a2)
{
  uint64_t v2;
  char v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  v4 = a2 & 1;
  v5 = *(_QWORD *)(type metadata accessor for UUID(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = (*(_QWORD *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = (v10 + 23) & 0xFFFFFFFFFFFFFFF8;
  return sub_100C7B654(a1, v4, *(_QWORD *)(v2 + 16), v2 + v6, v2 + v9, *(_QWORD *)(v2 + v10), *(_QWORD *)(v2 + v10 + 8), *(void **)(v2 + v11), *(void (**)(uint64_t))(v2 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v2 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(_BYTE *)(v2 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8) + 16));
}

uint64_t sub_100C7F7F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100C7AB2C(a1, a2, *(uint64_t (**)(void))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(void (**)(char *))(v2 + 56), *(_QWORD *)(v2 + 64)) & 1;
}

uint64_t sub_100C7F824@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t result;

  v4 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 16);
  v5 = sub_1004B804C(&qword_10140C678);
  result = v4(a1, a1 + *(int *)(v5 + 48));
  if (!v2)
    *(_BYTE *)(a1 + *(int *)(v5 + 64)) = result & 1;
  return result;
}

void sub_100C7F88C()
{
  sub_100AB4CA8();
}

double sub_100C7F8AC(uint64_t a1)
{
  uint64_t v1;

  return sub_100AB5DD8(a1, *(char **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_100C7F8B4@<X0>(uint64_t *a1@<X8>)
{
  return sub_100AB5870(a1);
}

BOOL sub_100C7F8CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100C76B88(a1, a2, a3);
}

void sub_100C7F8D4(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, __n128))
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v27;

  v26 = a2;
  v25 = sub_1004B804C((uint64_t *)&unk_1013F13C0);
  __chkstk_darwin(v25);
  v4 = (uint64_t *)((char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *(_QWORD *)(a1 + 64);
  v23 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & v5;
  v24 = (unint64_t)(v6 + 63) >> 6;
  v27 = a1;
  swift_bridgeObjectRetain(a1);
  v9 = 0;
  while (v8)
  {
    v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v11 = v10 | (v9 << 6);
LABEL_5:
    v12 = *(_QWORD *)(v27 + 56);
    v13 = (uint64_t *)(*(_QWORD *)(v27 + 48) + 16 * v11);
    v15 = *v13;
    v14 = v13[1];
    v16 = v12 + *(_QWORD *)(*(_QWORD *)(sub_1004B804C((uint64_t *)&unk_1013E1A50) - 8) + 72) * v11;
    v17 = (uint64_t)v4 + *(int *)(v25 + 48);
    sub_1004CB7BC(v16, v17, (uint64_t *)&unk_1013E1A50);
    *v4 = v15;
    v4[1] = v14;
    v18 = swift_bridgeObjectRetain(v14);
    LOBYTE(v14) = v26(v15, v14, v17, v18);
    sub_1004CB800((uint64_t)v4, (uint64_t *)&unk_1013F13C0);
    if ((v14 & 1) != 0)
      goto LABEL_23;
  }
  v19 = v9 + 1;
  if (__OFADD__(v9, 1))
  {
    __break(1u);
    goto LABEL_25;
  }
  if (v19 >= v24)
    goto LABEL_23;
  v20 = *(_QWORD *)(v23 + 8 * v19);
  ++v9;
  if (v20)
    goto LABEL_22;
  v9 = v19 + 1;
  if (v19 + 1 >= v24)
    goto LABEL_23;
  v20 = *(_QWORD *)(v23 + 8 * v9);
  if (v20)
    goto LABEL_22;
  v9 = v19 + 2;
  if (v19 + 2 >= v24)
    goto LABEL_23;
  v20 = *(_QWORD *)(v23 + 8 * v9);
  if (v20)
    goto LABEL_22;
  v9 = v19 + 3;
  if (v19 + 3 >= v24)
    goto LABEL_23;
  v20 = *(_QWORD *)(v23 + 8 * v9);
  if (v20)
  {
LABEL_22:
    v8 = (v20 - 1) & v20;
    v11 = __clz(__rbit64(v20)) + (v9 << 6);
    goto LABEL_5;
  }
  v21 = v19 + 4;
  if (v21 >= v24)
  {
LABEL_23:
    swift_release(v27);
    return;
  }
  v20 = *(_QWORD *)(v23 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v24)
      goto LABEL_23;
    v20 = *(_QWORD *)(v23 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_100C7FB40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_1004B804C(&qword_10140C688);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100C7FBA4(uint64_t a1)
{
  sub_1004B804C(&qword_10140C688);
  return sub_100C7BE20(a1);
}

uint64_t sub_100C7FBF4@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  char v2;
  char v3;

  v2 = *(_BYTE *)(result + 6) & 0xF | 0x50;
  v3 = *(_BYTE *)(result + 8) & 0x3F | 0x80;
  *(_DWORD *)a2 = *(_DWORD *)result;
  *(_WORD *)(a2 + 4) = *(_WORD *)(result + 4);
  *(_BYTE *)(a2 + 6) = v2;
  *(_BYTE *)(a2 + 7) = *(_BYTE *)(result + 7);
  *(_BYTE *)(a2 + 8) = v3;
  *(_DWORD *)(a2 + 9) = *(_DWORD *)(result + 9);
  *(_WORD *)(a2 + 13) = *(_WORD *)(result + 13);
  *(_BYTE *)(a2 + 15) = *(_BYTE *)(result + 15);
  return result;
}

uint64_t sub_100C7FC48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v4 = type metadata accessor for CRLBoardIdentifier(0);
  v3[5] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[6] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[7] = swift_task_alloc(v6);
  v3[8] = swift_task_alloc(v6);
  v7 = type metadata accessor for CRLBoardEntity(0);
  v3[9] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v3[10] = v8;
  v3[11] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MainActor(0);
  v3[12] = v9;
  v3[13] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  v3[14] = v10;
  v3[15] = v11;
  return swift_task_switch(sub_100C7FD1C, v10, v11);
}

uint64_t sub_100C7FD1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = sub_1004B804C(&qword_1013E7870);
  v5 = *(_QWORD *)(v2 + 72);
  LODWORD(v6) = *(_DWORD *)(v2 + 80);
  *(_DWORD *)(v0 + 184) = v6;
  v6 = v6;
  v7 = (v6 + 32) & ~v6;
  v8 = swift_allocObject(v4, v7 + v5, v6 | 7);
  *(_QWORD *)(v0 + 128) = v8;
  *(_OWORD *)(v8 + 16) = xmmword_100EF5E40;
  v9 = sub_1004B8460(v3, v8 + v7, type metadata accessor for CRLBoardIdentifier);
  *(_QWORD *)(v0 + 136) = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  *(_QWORD *)(v0 + 144) = v10;
  *(_QWORD *)(v0 + 152) = v11;
  return swift_task_switch(sub_100C7FDE0, v10, v11);
}

uint64_t sub_100C7FDE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 32) + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_entityStore);
  *(_QWORD *)(v0 + 160) = v1;
  if (v1)
  {
    swift_retain(v1);
    return swift_task_switch(sub_100C7FE38, v1, 0);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100C7FE38()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[20];
  v2 = v0[16];
  swift_retain(v1);
  v0[21] = sub_100C80904(v2, v1);
  v0[22] = 0;
  swift_release(v1);
  swift_release(v0[20]);
  return swift_task_switch(sub_100C7FEB8, v0[18], v0[19]);
}

uint64_t sub_100C7FEB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(unsigned __int8 *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 40);
  swift_release(*(_QWORD *)(v0 + 136));
  swift_setDeallocating(v1);
  swift_arrayDestroy(v1 + ((v2 + 32) & ~v2), *(_QWORD *)(v1 + 16), v3);
  swift_deallocClassInstance(v1, 32, 7);
  return swift_task_switch(sub_100C7FF34, *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120));
}

uint64_t sub_100C7FF34()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = swift_release(*(_QWORD *)(v0 + 104));
  v3 = *(_QWORD *)(v1 + 16);
  if (!v3)
  {
LABEL_13:
    v22 = 1;
    goto LABEL_16;
  }
  v4 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 80);
  v6 = v4 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  v30 = *(_QWORD *)(v5 + 72);
  v31 = *(_QWORD *)(v0 + 72);
  swift_bridgeObjectRetain(v4);
  while (1)
  {
    v7 = *(_QWORD *)(v0 + 88);
    v9 = *(_QWORD *)(v0 + 56);
    v8 = *(_QWORD *)(v0 + 64);
    v10 = *(_QWORD *)(v0 + 24);
    sub_1004B8460(v6, v7, type metadata accessor for CRLBoardEntity);
    v11 = v7 + *(int *)(v31 + 40);
    v12 = static UUID.== infix(_:_:)(v11);
    sub_1004B8460(v11, v8, type metadata accessor for CRLBoardIdentifier);
    sub_1004B8460(v10, v9, type metadata accessor for CRLBoardIdentifier);
    v14 = *(_QWORD *)(v0 + 56);
    v13 = *(_QWORD *)(v0 + 64);
    if ((v12 & 1) == 0)
    {
      sub_1004B84A4(*(_QWORD *)(v0 + 56), type metadata accessor for CRLBoardIdentifier);
      sub_1004B84A4(v13, type metadata accessor for CRLBoardIdentifier);
      goto LABEL_4;
    }
    v15 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
    v16 = *(_QWORD *)(v13 + v15);
    v17 = *(_QWORD *)(v13 + v15 + 8);
    v18 = (_QWORD *)(v14 + v15);
    v19 = v18[1];
    if (v16 == *v18 && v17 == v19)
      break;
    v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v17, *v18, v19, 0);
    sub_1004B84A4(v14, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4(v13, type metadata accessor for CRLBoardIdentifier);
    if ((v21 & 1) != 0)
      goto LABEL_15;
LABEL_4:
    sub_1004B84A4(*(_QWORD *)(v0 + 88), type metadata accessor for CRLBoardEntity);
    v6 += v30;
    if (!--v3)
    {
      v2 = swift_bridgeObjectRelease(*(_QWORD *)(v0 + 168));
      goto LABEL_13;
    }
  }
  sub_1004B84A4(v14, type metadata accessor for CRLBoardIdentifier);
  sub_1004B84A4(v13, type metadata accessor for CRLBoardIdentifier);
LABEL_15:
  v23 = *(_QWORD *)(v0 + 88);
  v24 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 168));
  sub_1004B84E0(v23, v24, type metadata accessor for CRLBoardEntity);
  v22 = 0;
LABEL_16:
  v25 = *(_QWORD *)(v0 + 168);
  v26 = *(_QWORD *)(v0 + 88);
  v27 = *(_QWORD *)(v0 + 64);
  v28 = *(_QWORD *)(v0 + 56);
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD, __n128))(*(_QWORD *)(v0 + 80) + 56))(*(_QWORD *)(v0 + 16), v22, 1, *(_QWORD *)(v0 + 72), v2);
  swift_bridgeObjectRelease(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100C8014C()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[20];
  swift_release(v0[17]);
  swift_release(v1);
  return swift_task_switch(sub_100C80190, v0[14], v0[15]);
}

uint64_t sub_100C80190()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 64);
  v6 = *(_QWORD *)(v0 + 40);
  v7 = v1 + ((*(unsigned __int8 *)(v0 + 184) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 184));
  swift_setDeallocating(v1);
  swift_arrayDestroy(v7, *(_QWORD *)(v1 + 16), v6);
  swift_deallocClassInstance(v1, 32, 7);
  swift_release(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100C80240(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v6;
  uint64_t v7;

  v6 = (_QWORD *)swift_task_alloc(dword_10140C69C);
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_1004CF80C;
  return sub_100C802A8(a1, v7, a3, (uint64_t)&off_101279198);
}

uint64_t sub_100C802A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a1;
  v5[4] = a3;
  v6 = sub_1004B804C(&qword_1013FE140);
  v5[7] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CRLBoardEntity(0);
  v5[8] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v5[9] = v8;
  v5[10] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C((uint64_t *)&unk_1013E3830);
  v5[11] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CRLBoardIdentifier(0);
  v5[12] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MainActor(0);
  v5[13] = static MainActor.shared.getter(v11);
  v12 = dispatch thunk of Actor.unownedExecutor.getter(v11, &protocol witness table for MainActor);
  v5[14] = v12;
  v5[15] = v13;
  return swift_task_switch(sub_100C803A8, v12, v13);
}

uint64_t sub_100C803A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 88);
  (*(void (**)(_QWORD))(*(_QWORD *)(v0 + 40) + 24))(*(_QWORD *)(v0 + 32));
  v2 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(v1, 1, v2) == 1)
  {
    v3 = *(_QWORD *)(v0 + 88);
    swift_release(*(_QWORD *)(v0 + 104));
    sub_1004CB800(v3, (uint64_t *)&unk_1013E3830);
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 88);
    if (swift_getEnumCaseMultiPayload(v4, v2) == 2)
    {
      v5 = *(_QWORD *)(v0 + 96);
      sub_1004B804C((uint64_t *)&unk_1013EA630);
      swift_bridgeObjectRelease();
      sub_1004B84E0(v4, v5, type metadata accessor for CRLBoardIdentifier);
      v11 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_10140C6A0 + dword_10140C6A0);
      v6 = (_QWORD *)swift_task_alloc(unk_10140C6A4);
      *(_QWORD *)(v0 + 128) = v6;
      *v6 = v0;
      v6[1] = sub_100C80520;
      return v11(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 96));
    }
    swift_release(*(_QWORD *)(v0 + 104));
    sub_1004B84A4(v4, type metadata accessor for CRLBoardLibraryViewModel.Item);
  }
  v8 = *(_QWORD *)(v0 + 88);
  v9 = *(_QWORD *)(v0 + 80);
  v10 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 96));
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100C80520()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 128));
  if (v0)
  {
    swift_errorRelease(v0);
    v3 = *(_QWORD *)(v2 + 112);
    v4 = *(_QWORD *)(v2 + 120);
    v5 = sub_100C806A0;
  }
  else
  {
    v3 = *(_QWORD *)(v2 + 112);
    v4 = *(_QWORD *)(v2 + 120);
    v5 = sub_100C80588;
  }
  return swift_task_switch(v5, v3, v4);
}

uint64_t sub_100C80588()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = swift_release(*(_QWORD *)(v0 + 104));
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v2 + 48))(v3, 1, v1, v4) == 1)
  {
    v5 = *(_QWORD *)(v0 + 56);
    sub_1004B84A4(*(_QWORD *)(v0 + 96), type metadata accessor for CRLBoardIdentifier);
    sub_1004CB800(v5, &qword_1013FE140);
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 96);
    v7 = *(_QWORD *)(v0 + 80);
    v8 = *(_QWORD *)(v0 + 48);
    v9 = *(_QWORD *)(v0 + 32);
    v10 = *(_QWORD *)(v0 + 40);
    sub_1004B84E0(*(_QWORD *)(v0 + 56), v7, type metadata accessor for CRLBoardEntity);
    *(_QWORD *)(v0 + 16) = v8;
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 + 8) + 16))(v7, v9);
    sub_1004B84A4(v7, type metadata accessor for CRLBoardEntity);
    sub_1004B84A4(v6, type metadata accessor for CRLBoardIdentifier);
  }
  v11 = *(_QWORD *)(v0 + 88);
  v12 = *(_QWORD *)(v0 + 80);
  v13 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 96));
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100C806A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = swift_release(*(_QWORD *)(v0 + 104));
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v2 + 56))(v3, 1, 1, v1, v4);
  v5 = *(_QWORD *)(v0 + 56);
  sub_1004B84A4(*(_QWORD *)(v0 + 96), type metadata accessor for CRLBoardIdentifier);
  sub_1004CB800(v5, &qword_1013FE140);
  v6 = *(_QWORD *)(v0 + 88);
  v7 = *(_QWORD *)(v0 + 80);
  v8 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 96));
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100C80744(uint64_t a1)
{
  return sub_100C8076C(a1, (uint64_t)&off_101279198);
}

uint64_t sub_100C8076C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a2 + 8) + 32))();
}

uint64_t sub_100C807A0(uint64_t a1)
{
  return sub_100C807C8(a1, (uint64_t)&off_101279198);
}

uint64_t sub_100C807C8(uint64_t a1, uint64_t a2)
{
  char v4;
  char v5;
  char v6;

  v4 = (*(uint64_t (**)(void))(a2 + 312))();
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 320))(a1, a2);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 328))(a1, a2);
  return AppEntityVisualState.init(isSelected:isHighlighted:isFocused:isDisabled:isEditing:isPrimary:)(v4 & 1, v5 & 1, 0, 0, v6 & 1, 0);
}

uint64_t sub_100C8084C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v6;
  uint64_t v7;

  v6 = (_QWORD *)swift_task_alloc(dword_10140C69C);
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_1004CFD00;
  return sub_100C802A8(a1, v7, a3, (uint64_t)&off_101294C00);
}

uint64_t sub_100C808B4(uint64_t a1)
{
  return sub_100C8076C(a1, (uint64_t)&off_101294C00);
}

uint64_t sub_100C808DC(uint64_t a1)
{
  return sub_100C807C8(a1, (uint64_t)&off_101294C00);
}

_QWORD *sub_100C80904(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t (*v24)(char *, uint64_t, uint64_t);
  int v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  _QWORD v43[2];
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE v49[24];
  _QWORD *v50;

  v5 = sub_1004B804C(&qword_1013FE140);
  __chkstk_darwin(v5);
  v7 = (char *)v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v48 = (uint64_t)v43 - v9;
  v10 = type metadata accessor for CRLBoardEntity(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v47 = (uint64_t)v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v45 = (uint64_t)v43 - v14;
  v15 = *(_QWORD *)(a1 + 16);
  if (!v15)
    return _swiftEmptyArrayStorage;
  v43[1] = v2;
  v16 = *(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v17 = a1 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
  v18 = a1;
  v19 = (uint64_t *)(a2 + 120);
  v46 = *(_QWORD *)(v16 + 72);
  v44 = v18;
  swift_bridgeObjectRetain(v18);
  v50 = _swiftEmptyArrayStorage;
  do
  {
    swift_beginAccess(v19, v49, 32, 0);
    v20 = *v19;
    if (*(_QWORD *)(*v19 + 16) && (v21 = sub_100843264(v17), (v22 & 1) != 0))
    {
      sub_1004B8460(*(_QWORD *)(v20 + 56) + *(_QWORD *)(v11 + 72) * v21, (uint64_t)v7, type metadata accessor for CRLBoardEntity);
      v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
      v23(v7, 0, 1, v10);
    }
    else
    {
      v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
      v23(v7, 1, 1, v10);
    }
    swift_endAccess(v49);
    v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
    v25 = v24(v7, 1, v10);
    sub_1004CB800((uint64_t)v7, &qword_1013FE140);
    if (v25 == 1)
    {
      v37 = type metadata accessor for CRLBoardEntityStore.BoardEntityStoreError(0);
      v38 = sub_100C80CF8();
      swift_allocError(v37, v38, 0, 0);
      v40 = v39;
      sub_1004B8460(v17, v39, type metadata accessor for CRLBoardIdentifier);
      swift_storeEnumTagMultiPayload(v40, v37, 0);
      swift_willThrow(v41);
      swift_bridgeObjectRelease(v50);
      swift_bridgeObjectRelease(v44);
      return v50;
    }
    swift_beginAccess(v19, v49, 32, 0);
    v26 = *v19;
    if (*(_QWORD *)(*v19 + 16) && (v27 = sub_100843264(v17), (v28 & 1) != 0))
    {
      v29 = *(_QWORD *)(v26 + 56) + *(_QWORD *)(v11 + 72) * v27;
      v30 = v48;
      sub_1004B8460(v29, v48, type metadata accessor for CRLBoardEntity);
      v31 = 0;
    }
    else
    {
      v31 = 1;
      v30 = v48;
    }
    v23((char *)v30, v31, 1, v10);
    swift_endAccess(v49);
    if (v24((char *)v30, 1, v10) == 1)
    {
      sub_1004CB800(v30, &qword_1013FE140);
    }
    else
    {
      v32 = v30;
      v33 = v45;
      sub_1004B84E0(v32, v45, type metadata accessor for CRLBoardEntity);
      sub_1004B84E0(v33, v47, type metadata accessor for CRLBoardEntity);
      if ((swift_isUniquelyReferenced_nonNull_native(v50) & 1) == 0)
        v50 = (_QWORD *)sub_100D10484(0, v50[2] + 1, 1, (unint64_t)v50);
      v35 = v50[2];
      v34 = v50[3];
      if (v35 >= v34 >> 1)
        v50 = (_QWORD *)sub_100D10484(v34 > 1, v35 + 1, 1, (unint64_t)v50);
      v36 = v50;
      v50[2] = v35 + 1;
      sub_1004B84E0(v47, (uint64_t)v36+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v35, type metadata accessor for CRLBoardEntity);
    }
    v17 += v46;
    --v15;
  }
  while (v15);
  swift_bridgeObjectRelease(v44);
  return v50;
}

unint64_t sub_100C80CF8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10140C6A8;
  if (!qword_10140C6A8)
  {
    v1 = type metadata accessor for CRLBoardEntityStore.BoardEntityStoreError(255);
    result = swift_getWitnessTable(&unk_100F36E08, v1);
    atomic_store(result, (unint64_t *)&qword_10140C6A8);
  }
  return result;
}

unint64_t sub_100C80D40(uint64_t a1)
{
  unint64_t result;

  result = sub_100BE893C();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_100C80D64(uint64_t a1)
{
  _QWORD v2[2];

  v2[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[1] = "\b";
  return swift_initClassMetadata2(a1, 0, 2, v2, a1 + 112);
}

uint64_t sub_100C80DB0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t WitnessTable;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[2];
  __int128 v21;
  uint64_t v22;
  uint64_t v23;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 80);
  v3 = type metadata accessor for Ref(255, *(_QWORD *)(*v0 + 88), *(_QWORD *)(*v0 + 104));
  v4 = *(_QWORD *)(v1 + 96);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for Ref<A>, v3);
  v6 = swift_getWitnessTable(&protocol conformance descriptor for Ref<A>, v3);
  v7 = *(_OWORD *)(v4 + 8);
  v20[0] = v2;
  v20[1] = v3;
  v21 = v7;
  v22 = WitnessTable;
  v23 = v6;
  v8 = type metadata accessor for CRDictionary(0, v20);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v20 - v10;
  v12 = swift_getWitnessTable(&protocol conformance descriptor for CRDictionary<A, B>, v8);
  v13 = type metadata accessor for Capsule(0, v8, v12);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)v20 - v15;
  v17 = (uint64_t)v0 + *(_QWORD *)(v1 + 120);
  swift_beginAccess(v17, v20, 0, 0);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v17, v13);
  v18 = swift_getWitnessTable(&protocol conformance descriptor for CRDictionary<A, B>, v8);
  Capsule<>.root.getter(v13, v18);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  CRDictionary.makeIterator()(v8);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_100C80F4C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for CRLCRDTMap(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for CRLCRDTMap);
}

uint64_t sub_100C80F84(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t WitnessTable;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  unint64_t v11;
  _QWORD v12[2];
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[4];

  v16[0] = (char *)&value witness table for Builtin.Int64 + 64;
  v2 = a1[10];
  v3 = type metadata accessor for Ref(255, a1[11], a1[13]);
  v4 = a1[12];
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for Ref<A>, v3);
  v6 = swift_getWitnessTable(&protocol conformance descriptor for Ref<A>, v3);
  v7 = *(_OWORD *)(v4 + 8);
  v12[0] = v2;
  v12[1] = v3;
  v13 = v7;
  v14 = WitnessTable;
  v15 = v6;
  v8 = type metadata accessor for CRDictionary(255, v12);
  v9 = swift_getWitnessTable(&protocol conformance descriptor for CRDictionary<A, B>, v8);
  result = type metadata accessor for Capsule(319, v8, v9);
  if (v11 <= 0x3F)
  {
    v16[1] = *(_QWORD *)(result - 8) + 64;
    v16[2] = "(";
    v16[3] = &unk_100F30580;
    return swift_initClassMetadata2(a1, 0, 4, v16, a1 + 14);
  }
  return result;
}

uint64_t sub_100C81094(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t WitnessTable;
  char v10;
  _OWORD v12[2];
  _BYTE v13[24];
  _BYTE v14[24];

  swift_beginAccess(a1 + 16, v14, 0, 0);
  v5 = *(_QWORD *)(a1 + 16);
  swift_beginAccess(a2 + 16, v13, 0, 0);
  v6 = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  v7 = *(_OWORD *)(v2 + 96);
  v12[0] = *(_OWORD *)(v2 + 80);
  v12[1] = v7;
  v8 = type metadata accessor for CRLCRDTMapBucket(0, (uint64_t)v12);
  WitnessTable = swift_getWitnessTable(&unk_100F30670, v8);
  v10 = static Dictionary<>.== infix(_:_:)(v5, v6, &type metadata for Int, v8, &protocol witness table for Int, WitnessTable);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10 & 1;
}

uint64_t sub_100C81174(uint64_t *a1, uint64_t *a2)
{
  return sub_100C81094(*a1, *a2);
}

uint64_t sub_100C81184@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[24];

  swift_beginAccess(v1 + 16, v8, 0, 0);
  v3 = *(_QWORD *)(v1 + 16);
  v4 = -1;
  v5 = *(_QWORD *)(v3 + 64);
  v6 = -1 << *(_BYTE *)(v3 + 32);
  if (-v6 < 64)
    v4 = ~(-1 << -(char)v6);
  *a1 = v3;
  a1[1] = v3 + 64;
  a1[2] = ~v6;
  a1[3] = 0;
  a1[4] = v4 & v5;
  return swift_bridgeObjectRetain(v3);
}

double sub_100C811FC@<D0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  double result;

  v2 = *v1;
  sub_100C81184(a1);
  *(_QWORD *)&result = swift_release(v2).n128_u64[0];
  return result;
}

uint64_t sub_100C81220(uint64_t a1, uint64_t a2)
{
  return sub_100C816E8(a1, a2, (uint64_t (*)(_QWORD, _OWORD *))type metadata accessor for CRLCRDTMap);
}

uint64_t sub_100C8122C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_100C8174C(a1, a2, a3, a4, a5, (uint64_t (*)(_QWORD, _OWORD *))type metadata accessor for CRLCRDTMap);
}

uint64_t sub_100C81238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_100C817D4(a1, a2, a3, a4, a5, (uint64_t (*)(_QWORD, _OWORD *))type metadata accessor for CRLCRDTMap);
}

_BYTE *sub_100C81254@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t *sub_100C81260()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t WitnessTable;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[2];
  __int128 v14;
  uint64_t v15;
  uint64_t v16;

  v1 = *v0;
  v2 = (uint64_t)v0 + *(_QWORD *)(*v0 + 120);
  v3 = *(_QWORD *)(*v0 + 80);
  v4 = type metadata accessor for Ref(255, *(_QWORD *)(*v0 + 88), *(_QWORD *)(*v0 + 104));
  v5 = *(_QWORD *)(v1 + 96);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for Ref<A>, v4);
  v7 = swift_getWitnessTable(&protocol conformance descriptor for Ref<A>, v4);
  v8 = *(_OWORD *)(v5 + 8);
  v13[0] = v3;
  v13[1] = v4;
  v14 = v8;
  v15 = WitnessTable;
  v16 = v7;
  v9 = type metadata accessor for CRDictionary(255, v13);
  v10 = swift_getWitnessTable(&protocol conformance descriptor for CRDictionary<A, B>, v9);
  v11 = type metadata accessor for Capsule(0, v9, v10);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v2, v11);
  return v0;
}

uint64_t sub_100C81330()
{
  uint64_t v0;

  sub_100C81260();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t type metadata accessor for CRLCRDTMapBucket(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for CRLCRDTMapBucket);
}

uint64_t sub_100C81360(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 8))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_100C813A8(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 8) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for CRLCRDTMapBucketIndexProvider(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100502040(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CRLCRDTMapBucketIndexProvider);
}

uint64_t sub_100C813F0(uint64_t a1)
{
  return swift_getWitnessTable(&protocol conformance descriptor for CRDictionary<A, B>.Iterator, a1);
}

uint64_t sub_100C81400()
{
  return sub_1005DA564();
}

uint64_t sub_100C81414()
{
  return sub_1005E1E0C();
}

uint64_t sub_100C81428(_QWORD *a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t WitnessTable;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  char *v30;
  char v31;
  void (*v32)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE v41[24];
  _QWORD v42[6];

  v5 = v2[10];
  v6 = type metadata accessor for Ref(255, v2[11], v2[13]);
  v7 = v2[12];
  v8 = *(_QWORD *)(v7 + 8);
  v9 = *(_QWORD *)(v7 + 16);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for Ref<A>, v6);
  v36 = v5;
  v37 = swift_getWitnessTable(&protocol conformance descriptor for Ref<A>, v6);
  v42[0] = v5;
  v42[1] = v6;
  v39 = v9;
  v40 = v8;
  v42[2] = v8;
  v42[3] = v9;
  v38 = WitnessTable;
  v42[4] = WitnessTable;
  v42[5] = v37;
  v11 = type metadata accessor for CRDictionary(0, v42);
  v34 = *(_QWORD *)(v11 - 8);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)&v34 - v15;
  v17 = swift_getWitnessTable(&protocol conformance descriptor for CRDictionary<A, B>, v11);
  v18 = type metadata accessor for Capsule(0, v11, v17);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v34 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v24 = (char *)&v34 - v23;
  v25 = a1[2];
  v35 = a2;
  if (v25 == *(_QWORD *)(a2 + 16))
  {
    v26 = (char *)a1 + *(_QWORD *)(*a1 + 120);
    swift_beginAccess(v26, v42, 0, 0);
    v27 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
    v27(v24, v26, v18);
    v28 = swift_getWitnessTable(&protocol conformance descriptor for CRDictionary<A, B>, v11);
    Capsule<>.root.getter(v18, v28);
    v29 = *(void (**)(char *, uint64_t))(v19 + 8);
    v29(v24, v18);
    v30 = (char *)(v35 + *(_QWORD *)(*(_QWORD *)v35 + 120));
    swift_beginAccess(v30, v41, 0, 0);
    v27(v22, v30, v18);
    Capsule<>.root.getter(v18, v28);
    v29(v22, v18);
    v31 = static CRDictionary.== infix(_:_:)(v16, v14, v36, v6, v40, v39, v38, v37);
    v32 = *(void (**)(char *, uint64_t))(v34 + 8);
    v32(v14, v11);
    v32(v16, v11);
  }
  else
  {
    v31 = 0;
  }
  return v31 & 1;
}

uint64_t sub_100C816AC(_QWORD **a1, uint64_t *a2)
{
  return sub_100C81428(*a1, *a2);
}

double sub_100C816B8()
{
  uint64_t *v0;
  uint64_t v1;
  double result;

  v1 = *v0;
  sub_100C80DB0();
  *(_QWORD *)&result = swift_release(v1).n128_u64[0];
  return result;
}

uint64_t sub_100C816DC(uint64_t a1, uint64_t a2)
{
  return sub_100C816E8(a1, a2, (uint64_t (*)(_QWORD, _OWORD *))type metadata accessor for CRLCRDTMapBucket);
}

uint64_t sub_100C816E8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD, _OWORD *))
{
  _QWORD *v3;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD v9[2];

  v5 = *(_OWORD *)(a1 + 96);
  v9[0] = *(_OWORD *)(a1 + 80);
  v9[1] = v5;
  v6 = a3(0, v9);
  v7 = j___ss30_copySequenceToContiguousArrayys0dE0Vy7ElementQzGxSTRzlF(v3, v6, a2);
  swift_release(*v3);
  return v7;
}

uint64_t sub_100C81740(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_100C8174C(a1, a2, a3, a4, a5, (uint64_t (*)(_QWORD, _OWORD *))type metadata accessor for CRLCRDTMapBucket);
}

uint64_t sub_100C8174C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(_QWORD, _OWORD *))
{
  __int128 v10;
  uint64_t v11;
  _OWORD v13[2];

  v10 = *(_OWORD *)(a4 + 96);
  v13[0] = *(_OWORD *)(a4 + 80);
  v13[1] = v10;
  v11 = a6(0, v13);
  return Sequence._copyContents(initializing:)(a1, a2, a3, v11, a5);
}

uint64_t sub_100C817B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_100C817D4(a1, a2, a3, a4, a5, (uint64_t (*)(_QWORD, _OWORD *))type metadata accessor for CRLCRDTMapBucket);
}

uint64_t sub_100C817D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(_QWORD, _OWORD *))
{
  __int128 v10;
  uint64_t v11;
  _OWORD v13[2];

  v10 = *(_OWORD *)(a4 + 96);
  v13[0] = *(_OWORD *)(a4 + 80);
  v13[1] = v10;
  v11 = a6(0, v13);
  return Sequence.withContiguousStorageIfAvailable<A>(_:)(a1, a2, v11, a3, a5);
}

uint64_t sub_100C81850(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  _OWORD v4[2];

  v2 = *(_OWORD *)(a2 + 96);
  v4[0] = *(_OWORD *)(a2 + 80);
  v4[1] = v2;
  return swift_getOpaqueTypeConformance2(v4, &unk_101138FE8, 1);
}

uint64_t sub_100C81888(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_100C818C8 + 4 * asc_100F304A0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_100C818E8 + 4 * byte_100F304A5[v4]))();
}

_BYTE *sub_100C818C8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_100C818E8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100C818F0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100C818F8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100C81900(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100C81908(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t type metadata accessor for CRLCRDTMapBucketIndexProvider.HashAlgorithm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100502040(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CRLCRDTMapBucketIndexProvider.HashAlgorithm);
}

uint64_t sub_100C81920(_OWORD *a1)
{
  __int128 v1;
  uint64_t v2;
  uint64_t v3;
  _OWORD v5[2];

  v1 = a1[1];
  v5[0] = *a1;
  v5[1] = v1;
  v2 = type metadata accessor for CRLCRDTMapBucket(255, (uint64_t)v5);
  v3 = type metadata accessor for Dictionary.Iterator(255, &type metadata for Int, v2, &protocol witness table for Int);
  return swift_getWitnessTable(&protocol conformance descriptor for [A : B].Iterator, v3);
}

uint64_t sub_100C81978(uint64_t a1)
{
  return swift_getWitnessTable(&unk_100F307D0, a1);
}

uint64_t sub_100C8198C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  unint64_t v24;
  _BYTE v28[24];

  v18 = v11 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_parentContainerUUID;
  v19 = type metadata accessor for UUID(0);
  v20 = *(_QWORD *)(v19 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56))(v18, 1, 1, v19);
  *(_OWORD *)(v11 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_syncData) = xmmword_100F062D0;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 32))(v11 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_id, a1, v19);
  v21 = (_QWORD *)(v11 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_minRequiredVersions);
  *v21 = a2;
  v21[1] = a3;
  v21[2] = a4;
  *(_QWORD *)(v11 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_objectOptions) = a5;
  *(_QWORD *)(v11 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_itemTypeValue) = a6;
  swift_beginAccess(v18, v28, 33, 0);
  sub_1005E388C(a7, v18);
  swift_endAccess(v28);
  sub_1004DB5FC(a8, v11 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_boardIdentifier);
  *(_BYTE *)(v11 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_tombstoned) = a9;
  v22 = (_QWORD *)(v11 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_syncData);
  v23 = *(_QWORD *)(v11 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_syncData);
  v24 = *(_QWORD *)(v11 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_syncData + 8);
  *v22 = a10;
  v22[1] = a11;
  sub_1004BE2FC(v23, v24);
  return v11;
}

uint64_t sub_100C81B04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_id;
  v2 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_1004C1F2C(v0 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_parentContainerUUID);
  sub_1004BBB8C(v0 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_boardIdentifier);
  sub_1004BE2FC(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_syncData), *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_syncData + 8));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100C81B88()
{
  return type metadata accessor for CRLBoardItemSyncRecord(0);
}

uint64_t type metadata accessor for CRLBoardItemSyncRecord(uint64_t a1)
{
  return sub_1004BD408(a1, qword_10140C8E0, (uint64_t)&nominal type descriptor for CRLBoardItemSyncRecord);
}

void sub_100C81BA4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[8];

  v2 = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    v8[1] = &unk_100F30818;
    v8[2] = (char *)&value witness table for Builtin.Int64 + 64;
    v8[3] = (char *)&value witness table for Builtin.Int64 + 64;
    sub_1005E26CC(319);
    if (v5 <= 0x3F)
    {
      v8[4] = *(_QWORD *)(v4 - 8) + 64;
      v6 = type metadata accessor for CRLBoardIdentifierStorage(319);
      if (v7 <= 0x3F)
      {
        v8[5] = *(_QWORD *)(v6 - 8) + 64;
        v8[6] = &unk_100F30830;
        v8[7] = &unk_100F30848;
        swift_updateClassMetadata2(a1, 256, 8, v8, a1 + 80);
      }
    }
  }
}

uint64_t sub_100C81C70()
{
  _QWORD *v0;

  return *(_QWORD *)(*v0 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_minRequiredVersions);
}

double sub_100C81C8C()
{
  uint64_t v0;
  double result;

  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0
                                                         + OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_persistenceContext));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_itemData));
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_100C81CC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_id;
  v2 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_1004C1F2C(v0 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_parentContainerUUID);
  sub_1004BBB8C(v0 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_boardIdentifier);
  sub_1004BE2FC(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_syncData), *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_syncData + 8));
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0
                                                         + OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_persistenceContext));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_itemData));
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100C81D7C()
{
  return type metadata accessor for CRLBoardItemSyncLocalChangeRecord(0);
}

uint64_t type metadata accessor for CRLBoardItemSyncLocalChangeRecord(uint64_t a1)
{
  return sub_1004BD408(a1, qword_10140CA28, (uint64_t)&nominal type descriptor for CRLBoardItemSyncLocalChangeRecord);
}

uint64_t sub_100C81D98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100C81F08(a1, a2, a3, (uint64_t)"(", (uint64_t)&unk_100F308A0, (uint64_t)&value witness table for Builtin.Int64 + 64, (uint64_t)&value witness table for Builtin.BridgeObject + 64);
}

double sub_100C81DC4()
{
  uint64_t v0;
  double result;

  sub_1004BE2FC(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform28CRLBoardItemSyncRemoteRecord_commonCRDTData), *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform28CRLBoardItemSyncRemoteRecord_commonCRDTData + 8));
  sub_1004BE2FC(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform28CRLBoardItemSyncRemoteRecord_specificCRDTData), *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform28CRLBoardItemSyncRemoteRecord_specificCRDTData + 8));
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_100C81E08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_id;
  v2 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_1004C1F2C(v0 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_parentContainerUUID);
  sub_1004BBB8C(v0 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_boardIdentifier);
  sub_1004BE2FC(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_syncData), *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_syncData + 8));
  sub_1004BE2FC(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform28CRLBoardItemSyncRemoteRecord_commonCRDTData), *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform28CRLBoardItemSyncRemoteRecord_commonCRDTData + 8));
  sub_1004BE2FC(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform28CRLBoardItemSyncRemoteRecord_specificCRDTData), *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform28CRLBoardItemSyncRemoteRecord_specificCRDTData + 8));
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100C81EC4()
{
  return type metadata accessor for CRLBoardItemSyncRemoteRecord(0);
}

uint64_t type metadata accessor for CRLBoardItemSyncRemoteRecord(uint64_t a1)
{
  return sub_1004BD408(a1, qword_10140CBC8, (uint64_t)&nominal type descriptor for CRLBoardItemSyncRemoteRecord);
}

uint64_t sub_100C81EE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100C81F08(a1, a2, a3, (uint64_t)&unk_100F30848, (uint64_t)&unk_100F30848, (uint64_t)&value witness table for Builtin.BridgeObject + 64, (uint64_t)&value witness table for Builtin.Int64 + 64);
}

uint64_t sub_100C81F08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD v8[4];

  v8[0] = a4;
  v8[1] = a5;
  v8[2] = a6;
  v8[3] = a7;
  return swift_updateClassMetadata2(a1, 256, 4, v8, a1 + 248);
}

uint64_t sub_100C81F44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8Freeform38CRLBoardItemSyncRemoteRecordIdentifier_itemUUID;
  v2 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_1004BBB8C(v0 + OBJC_IVAR____TtC8Freeform38CRLBoardItemSyncRemoteRecordIdentifier_boardIdentifier);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100C81FA4()
{
  return type metadata accessor for CRLBoardItemSyncRemoteRecordIdentifier(0);
}

uint64_t type metadata accessor for CRLBoardItemSyncRemoteRecordIdentifier(uint64_t a1)
{
  return sub_1004BD408(a1, qword_10140CD80, (uint64_t)&nominal type descriptor for CRLBoardItemSyncRemoteRecordIdentifier);
}

uint64_t sub_100C81FC0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[2];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for CRLBoardIdentifierStorage(319);
    if (v4 <= 0x3F)
    {
      v5[1] = *(_QWORD *)(result - 8) + 64;
      result = swift_updateClassMetadata2(a1, 256, 2, v5, a1 + 80);
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t sub_100C82048(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9, uint64_t a10, unint64_t a11, uint64_t a12, unint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v44 = a1;
  v45 = a7;
  v53 = a5;
  v54 = a6;
  v51 = a3;
  v52 = a4;
  v50 = a2;
  v49 = a9;
  v47 = a14;
  v48 = a8;
  v46 = a15;
  v43 = a16;
  v40 = a12;
  v41 = a13;
  v17 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v17);
  v42 = (uint64_t)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v19);
  v21 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for UUID(0);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v25 = (char *)&v40 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = v16 + OBJC_IVAR____TtC8Freeform28CRLBoardItemSyncRemoteRecord_commonCRDTData;
  *(_OWORD *)v26 = xmmword_100F062D0;
  v27 = (uint64_t *)(v16 + OBJC_IVAR____TtC8Freeform28CRLBoardItemSyncRemoteRecord_specificCRDTData);
  *(_OWORD *)(v16 + OBJC_IVAR____TtC8Freeform28CRLBoardItemSyncRemoteRecord_specificCRDTData) = xmmword_100F062D0;
  *(_QWORD *)(v16 + OBJC_IVAR____TtC8Freeform28CRLBoardItemSyncRemoteRecord_assets) = _swiftEmptyDictionarySingleton;
  v28 = *(_QWORD *)v26;
  v29 = *(_QWORD *)(v26 + 8);
  *(_QWORD *)v26 = a10;
  *(_QWORD *)(v26 + 8) = a11;
  swift_retain(v16);
  sub_10057939C(a10, a11);
  sub_1004BE2FC(v28, v29);
  v30 = *v27;
  v31 = v27[1];
  v32 = v40;
  v33 = v41;
  *v27 = v40;
  v27[1] = v33;
  sub_10057939C(v32, v33);
  sub_1004BE2FC(v30, v31);
  *(_QWORD *)(v16 + OBJC_IVAR____TtC8Freeform28CRLBoardItemSyncRemoteRecord_minRequiredVersionForSync) = v43;
  v34 = swift_release(v16);
  v35 = v44;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v23 + 16))(v25, v44, v22, v34);
  v36 = v45;
  sub_1006950CC(v45, (uint64_t)v21);
  v37 = v48;
  v38 = v42;
  sub_1004E1B3C(v48, v42);
  sub_100C8198C((uint64_t)v25, v50, v51, v52, v53, v54, (uint64_t)v21, v38, v49, v47, v46);
  sub_1004BBB8C(v37);
  sub_1004C1F2C(v36);
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v35, v22);
  return v16;
}

_QWORD *sub_100C822A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t (*v14)(_QWORD);
  int EnumCaseMultiPayload;
  char *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t (*v19)(uint64_t);
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  __n128 v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  Swift::Int v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  void *v37;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  __n128 v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  Swift::Int v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  _QWORD *v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  _QWORD v61[3];
  uint64_t v62;
  uint64_t v63;
  Swift::UInt64 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;

  v1 = v0;
  v2 = type metadata accessor for CRLCommandBoardItemChangeContext(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CRLBoardItemDeltaChange(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v57 - v9;
  v11 = type metadata accessor for CRLBoardItemPeerSyncUpdate(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004B8460(v1, (uint64_t)v13, v14);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v13, v11);
  if (EnumCaseMultiPayload != 1)
  {
    if (EnumCaseMultiPayload == 4)
    {
      sub_1004BBBC8(*((_QWORD *)v13 + 1), *((_QWORD *)v13 + 2));
      return 0;
    }
    v19 = type metadata accessor for CRLBoardItemPeerSyncUpdate;
    v20 = (uint64_t)v13;
LABEL_8:
    sub_1004B84A4(v20, v19);
    return 0;
  }
  sub_1004B84E0((uint64_t)v13, (uint64_t)v10, type metadata accessor for CRLBoardItemDeltaChange);
  v16 = &v10[*(int *)(v5 + 36)];
  v17 = *((_QWORD *)v16 + 1);
  sub_1004B8460((uint64_t)v10, (uint64_t)v7, type metadata accessor for CRLBoardItemDeltaChange);
  if (v17 >> 60 == 15)
  {
    v18 = *(_QWORD *)&v7[*(int *)(v5 + 40) + 8];
    sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLBoardItemDeltaChange);
    if (v18 >> 60 == 15)
    {
      v19 = type metadata accessor for CRLBoardItemDeltaChange;
      v20 = (uint64_t)v10;
      goto LABEL_8;
    }
  }
  else
  {
    sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLBoardItemDeltaChange);
  }
  v21 = &_swiftEmptySetSingleton;
  if (*((_QWORD *)v16 + 1) >> 60 != 15)
  {
    v62 = v2;
    v63 = sub_1004B7878(&qword_101409540, type metadata accessor for CRLCommandBoardItemChangeContext, (uint64_t)&unk_100F30BA0);
    v22 = sub_10050D1B0(v61);
    v23 = *(int *)(sub_1004B804C(&qword_101409548) + 48);
    v24 = type metadata accessor for UUID(0);
    v25 = *(_QWORD *)(v24 - 8);
    (*(void (**)(_QWORD *, char *, uint64_t))(v25 + 16))(v22, v10, v24);
    *((_BYTE *)v22 + v23) = 0;
    v26 = sub_1004BB5A4(v61, v62);
    v27 = __chkstk_darwin(v26);
    v29 = (char *)&v57 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v30 + 16))(v29, v27);
    v31 = sub_1004B7878(&qword_101409550, type metadata accessor for CRLCommandBoardItemChangeContext, (uint64_t)&unk_100F30B60);
    AnyHashable.init<A>(_:)(v29, v2, v31);
    v32 = sub_1004BB5A4(v61, v62);
    sub_1004B8460((uint64_t)v32, (uint64_t)v4, type metadata accessor for CRLCommandBoardItemChangeContext);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v4, v24);
    *((_QWORD *)&v60 + 1) = 4;
    v65 = v58;
    v66 = v59;
    v67 = v60;
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v61);
    sub_10051FDDC((uint64_t)&v65, (uint64_t)v61);
    Hasher.init(_seed:)(&v58, *((_QWORD *)&_swiftEmptySetSingleton + 5));
    swift_bridgeObjectRetain(&_swiftEmptySetSingleton);
    AnyHashable.hash(into:)(&v58);
    Hasher._combine(_:)(v64);
    v33 = Hasher._finalize()();
    v34 = -1 << *((_BYTE *)&_swiftEmptySetSingleton + 32);
    v35 = v33 & ~v34;
    if (((*(_QWORD *)((char *)&_swiftEmptySetSingleton + ((v35 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v35) & 1) != 0)
    {
      v36 = ~v34;
      while (1)
      {
        sub_10051FDDC(*((_QWORD *)&_swiftEmptySetSingleton + 6) + 48 * v35, (uint64_t)&v58);
        if ((static AnyHashable.== infix(_:_:)(&v58, v61) & 1) != 0 && *((_QWORD *)&v60 + 1) == v64)
          break;
        sub_10051FE18(&v58);
        v35 = (v35 + 1) & v36;
        if (((*(_QWORD *)((char *)&_swiftEmptySetSingleton + ((v35 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v35) & 1) == 0)
          goto LABEL_18;
      }
      sub_10051FE18(&v58);
      v21 = &_swiftEmptySetSingleton;
      v37 = &_swiftEmptySetSingleton;
    }
    else
    {
LABEL_18:
      swift_bridgeObjectRelease(&_swiftEmptySetSingleton);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptySetSingleton);
      sub_10051FDDC((uint64_t)v61, (uint64_t)&v58);
      v57 = &_swiftEmptySetSingleton;
      sub_100AE5D2C((uint64_t)&v58, v35, isUniquelyReferenced_nonNull_native);
      v21 = v57;
      v37 = (void *)0x8000000000000000;
    }
    swift_bridgeObjectRelease(v37);
    sub_10051FE18(v61);
    sub_10051FE18(&v65);
  }
  if (*(_QWORD *)&v10[*(int *)(v5 + 40) + 8] >> 60 != 15)
  {
    v62 = v2;
    v63 = sub_1004B7878(&qword_101409540, type metadata accessor for CRLCommandBoardItemChangeContext, (uint64_t)&unk_100F30BA0);
    v39 = sub_10050D1B0(v61);
    v40 = *(int *)(sub_1004B804C(&qword_101409548) + 48);
    v41 = type metadata accessor for UUID(0);
    v42 = *(_QWORD *)(v41 - 8);
    (*(void (**)(_QWORD *, char *, uint64_t))(v42 + 16))(v39, v10, v41);
    *((_BYTE *)v39 + v40) = 1;
    v43 = sub_1004BB5A4(v61, v62);
    v44 = __chkstk_darwin(v43);
    v46 = (char *)&v57 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v47 + 16))(v46, v44);
    v48 = sub_1004B7878(&qword_101409550, type metadata accessor for CRLCommandBoardItemChangeContext, (uint64_t)&unk_100F30B60);
    AnyHashable.init<A>(_:)(v46, v2, v48);
    v49 = sub_1004BB5A4(v61, v62);
    sub_1004B8460((uint64_t)v49, (uint64_t)v4, type metadata accessor for CRLCommandBoardItemChangeContext);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v4, v41);
    *((_QWORD *)&v60 + 1) = 4;
    v65 = v58;
    v66 = v59;
    v67 = v60;
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v61);
    sub_10051FDDC((uint64_t)&v65, (uint64_t)v61);
    Hasher.init(_seed:)(&v58, v21[5]);
    swift_bridgeObjectRetain(v21);
    AnyHashable.hash(into:)(&v58);
    Hasher._combine(_:)(v64);
    v50 = Hasher._finalize()();
    v51 = -1 << *((_BYTE *)v21 + 32);
    v52 = v50 & ~v51;
    if (((*(_QWORD *)((char *)v21 + ((v52 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v52) & 1) != 0)
    {
      v53 = ~v51;
      while (1)
      {
        sub_10051FDDC(v21[6] + 48 * v52, (uint64_t)&v58);
        if ((static AnyHashable.== infix(_:_:)(&v58, v61) & 1) != 0 && *((_QWORD *)&v60 + 1) == v64)
          break;
        sub_10051FE18(&v58);
        v52 = (v52 + 1) & v53;
        if (((*(_QWORD *)((char *)v21 + ((v52 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v52) & 1) == 0)
          goto LABEL_27;
      }
      sub_10051FE18(&v58);
      v54 = (unint64_t)v21;
    }
    else
    {
LABEL_27:
      swift_bridgeObjectRelease(v21);
      v55 = swift_isUniquelyReferenced_nonNull_native(v21);
      sub_10051FDDC((uint64_t)v61, (uint64_t)&v58);
      v57 = v21;
      sub_100AE5D2C((uint64_t)&v58, v52, v55);
      v21 = v57;
      v54 = 0x8000000000000000;
    }
    swift_bridgeObjectRelease(v54);
    sub_10051FE18(v61);
    sub_10051FE18(&v65);
  }
  sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLBoardItemDeltaChange);
  return v21;
}

void sub_100C829C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(_QWORD);
  char *v7;
  uint64_t v8;

  v1 = type metadata accessor for CRLBoardItemDeltaChange(0);
  __chkstk_darwin(v1);
  v2 = type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  __chkstk_darwin(v2);
  v3 = type metadata accessor for CRLBoardItemPeerSyncUpdate(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004B8460(v0, (uint64_t)v5, v6);
  v7 = (char *)sub_100C82AB8 + 4 * aQ_3[swift_getEnumCaseMultiPayload(v5, v3)];
  __asm { BR              X10 }
}

uint64_t sub_100C82AB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1004BBBC8(*(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16));
  v2 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v0, 1, 1, v2);
}

void sub_100C82BFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v0, 1, 1, v2);
  sub_1004B84A4(v1, type metadata accessor for CRLBoardItemPeerSyncUpdate);
  JUMPOUT(0x100C82BE4);
}

void sub_100C82C34(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  _QWORD v33[4];
  int v34;
  uint64_t v35;
  char *v36;
  char *v37;
  char *v38;
  uint64_t v39;
  __int128 v40;
  char *v41;
  __int128 v42;
  char *v43;
  char *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60[24];

  v4 = v3;
  v34 = a3;
  v59 = a2;
  v6 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v6);
  v41 = (char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v37 = (char *)v33 - v9;
  v39 = type metadata accessor for CRLBoardItemDeltaChange(0);
  __chkstk_darwin(v39);
  v11 = (char *)v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v12);
  v49 = (char *)v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for UUID(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v38 = (char *)v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v45 = (char *)v33 - v18;
  __chkstk_darwin(v19);
  v33[3] = (char *)v33 - v20;
  __chkstk_darwin(v21);
  v36 = (char *)v33 - v22;
  __chkstk_darwin(v23);
  v44 = (char *)v33 - v24;
  __chkstk_darwin(v25);
  v48 = (char *)v33 - v26;
  v55 = type metadata accessor for CRLBoardItemPeerSyncUpdate(0);
  v27 = *(_QWORD *)(v55 - 8);
  __chkstk_darwin(v55);
  v29 = (char *)v33 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform30CRLCommandApplyPeerSyncUpdates_updates);
  if (*(_QWORD *)(v30 + 16))
  {
    v47 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
    v33[0] = OBJC_IVAR____TtC8Freeform8CRLBoard_store;
    v31 = a1 + OBJC_IVAR____TtC8Freeform8CRLBoard_objectUUIDMap;
    v52 = v30 + ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80));
    swift_bridgeObjectRetain(v30);
    v35 = v31;
    swift_beginAccess(v31, v60, 0, 0);
    v57 = v14;
    v42 = xmmword_100EF5E40;
    v40 = xmmword_100EF5550;
    v46 = v11;
    v56 = a1;
    v54 = v15;
    v43 = v29;
    v50 = v27;
    v51 = v30;
    if (*(_QWORD *)(v30 + 16))
    {
      sub_1004B8460(v52, (uint64_t)v29, type metadata accessor for CRLBoardItemPeerSyncUpdate);
      v32 = (char *)&loc_100C82FE0 + dword_100C846B4[swift_getEnumCaseMultiPayload(v29, v55)];
      v58 = 1;
      __asm { BR              X9 }
    }
    __break(1u);
    JUMPOUT(0x100C84524);
  }
}

void sub_100C84528()
{
  CKRecordID v0;
  Swift::String v1;

  sub_100757E04(&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandApplyPeerSyncUpdates.swift", 102, 2, 229, "Unexpected boardAuxiliaryChange in CRLCommandApplyPeerChanges", 61, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Unexpected boardAuxiliaryChange in CRLCommandApplyPeerChanges");
  sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commit(with:transaction:undoable:)", 34, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandApplyPeerSyncUpdates.swift", 102, 2u, 229, (uint64_t)"Unexpected boardAuxiliaryChange in CRLCommandApplyPeerChanges", 61, 2u);
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v0, v1);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
  __break(1u);
  JUMPOUT(0x100C846B4);
}

uint64_t sub_100C846F8()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform30CRLCommandApplyPeerSyncUpdates_updates));
}

id sub_100C84708()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCommandApplyPeerSyncUpdates();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLCommandApplyPeerSyncUpdates()
{
  return objc_opt_self(_TtC8Freeform30CRLCommandApplyPeerSyncUpdates);
}

uint64_t sub_100C84768(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_100C847C4 + 4 * byte_100F30946[swift_getEnumCaseMultiPayload(a2, a3)];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain(v6);
  return v7;
}

uint64_t type metadata accessor for CRLBoardItemDeltaChange(uint64_t a1)
{
  return sub_1004BD408(a1, qword_10140CF40, (uint64_t)&nominal type descriptor for CRLBoardItemDeltaChange);
}

void sub_100C84AA4(char *a1, uint64_t a2)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(char *, uint64_t);
  int *v8;
  char *v9;
  uint64_t *v10;
  unint64_t v11;
  uint64_t *v12;
  unint64_t v13;
  uint64_t v14;

  switch(swift_getEnumCaseMultiPayload(a1, a2))
  {
    case 0u:
      v3 = type metadata accessor for UUID(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      type metadata accessor for CRLBoardIdentifierStorage(0);
      swift_bridgeObjectRelease();
      v4 = &a1[*(int *)(sub_1004B804C(&qword_10140C320) + 48)];
      sub_1004BBBC8(*((_QWORD *)v4 + 3), *((_QWORD *)v4 + 4));
      break;
    case 1u:
      v5 = type metadata accessor for UUID(0);
      v6 = *(_QWORD *)(v5 - 8);
      v7 = *(void (**)(char *, uint64_t))(v6 + 8);
      v7(a1, v5);
      v8 = (int *)type metadata accessor for CRLBoardItemDeltaChange(0);
      v9 = &a1[v8[5]];
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v9, 1, v5))
        v7(v9, v5);
      v10 = (uint64_t *)&a1[v8[9]];
      v11 = v10[1];
      if (v11 >> 60 != 15)
        sub_1004BBBC8(*v10, v11);
      v12 = (uint64_t *)&a1[v8[10]];
      v13 = v12[1];
      if (v13 >> 60 != 15)
        sub_1004BBBC8(*v12, v13);
      break;
    case 2u:
      swift_release(*(_QWORD *)a1);
      break;
    case 3u:
      v14 = type metadata accessor for UUID(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(a1, v14);
      break;
    case 4u:
    case 5u:
      sub_1004BBBC8(*((_QWORD *)a1 + 1), *((_QWORD *)a1 + 2));
      break;
    default:
      return;
  }
}

void sub_100C84C3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;

  v3 = (char *)sub_100C84C8C + 4 * byte_100F30952[swift_getEnumCaseMultiPayload(a2, a3)];
  __asm { BR              X10 }
}

uint64_t sub_100C84C8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;

  v3 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(v0, v2, v3);
  v4 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  v5 = (_QWORD *)(v0 + v4);
  v6 = (_QWORD *)(v2 + v4);
  v7 = v6[1];
  *v5 = *v6;
  v5[1] = v7;
  swift_bridgeObjectRetain(v7);
  v8 = *(int *)(sub_1004B804C(&qword_10140C320) + 48);
  v9 = v0 + v8;
  v10 = v2 + v8;
  *(_OWORD *)v9 = *(_OWORD *)v10;
  v11 = *(_QWORD *)(v10 + 24);
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v10 + 16);
  v12 = *(_QWORD *)(v10 + 32);
  sub_1004BE310(v11, v12);
  *(_QWORD *)(v9 + 24) = v11;
  *(_QWORD *)(v9 + 32) = v12;
  swift_storeEnumTagMultiPayload(v0, v1, 0);
  return v0;
}

uint64_t sub_100C84F38(uint64_t result, uint64_t a2, uint64_t a3)
{
  char *v5;

  if (result != a2)
  {
    sub_1004B84A4(result, type metadata accessor for CRLBoardItemPeerSyncUpdate);
    v5 = (char *)&loc_100C84FA0 + 4 * byte_100F30958[swift_getEnumCaseMultiPayload(a2, a3)];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t type metadata accessor for CRLBoardItemPeerSyncUpdate(uint64_t a1)
{
  return sub_1004BD408(a1, qword_10140CEB0, (uint64_t)&nominal type descriptor for CRLBoardItemPeerSyncUpdate);
}

char *sub_100C85268(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  __int128 v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  int *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  switch(EnumCaseMultiPayload)
  {
    case 3:
      v16 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(a1, a2, v16);
      v13 = a1;
      v14 = a3;
      v15 = 3;
      goto LABEL_11;
    case 1:
      v17 = type metadata accessor for UUID(0);
      v18 = *(_QWORD *)(v17 - 8);
      v19 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
      v19(a1, a2, v17);
      v20 = (int *)type metadata accessor for CRLBoardItemDeltaChange(0);
      v21 = v20[5];
      v22 = &a1[v21];
      v23 = &a2[v21];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(&a2[v21], 1, v17))
      {
        v24 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        v19(v22, v23, v17);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v22, 0, 1, v17);
      }
      v25 = v20[6];
      v26 = &a1[v25];
      v27 = &a2[v25];
      *(_OWORD *)v26 = *(_OWORD *)v27;
      *((_QWORD *)v26 + 2) = *((_QWORD *)v27 + 2);
      *(_QWORD *)&a1[v20[7]] = *(_QWORD *)&a2[v20[7]];
      *(_QWORD *)&a1[v20[8]] = *(_QWORD *)&a2[v20[8]];
      *(_OWORD *)&a1[v20[9]] = *(_OWORD *)&a2[v20[9]];
      *(_OWORD *)&a1[v20[10]] = *(_OWORD *)&a2[v20[10]];
      v13 = a1;
      v14 = a3;
      v15 = 1;
      goto LABEL_11;
    case 0:
      v7 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      v8 = type metadata accessor for CRLBoardIdentifierStorage(0);
      *(_OWORD *)&a1[*(int *)(v8 + 20)] = *(_OWORD *)&a2[*(int *)(v8 + 20)];
      v9 = *(int *)(sub_1004B804C(&qword_10140C320) + 48);
      v10 = &a1[v9];
      v11 = &a2[v9];
      v12 = *((_OWORD *)v11 + 1);
      *(_OWORD *)v10 = *(_OWORD *)v11;
      *((_OWORD *)v10 + 1) = v12;
      *((_QWORD *)v10 + 4) = *((_QWORD *)v11 + 4);
      v13 = a1;
      v14 = a3;
      v15 = 0;
LABEL_11:
      swift_storeEnumTagMultiPayload(v13, v14, v15);
      return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

char *sub_100C85480(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  __int128 v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  int *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;

  if (a1 != a2)
  {
    sub_1004B84A4((uint64_t)a1, type metadata accessor for CRLBoardItemPeerSyncUpdate);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    switch(EnumCaseMultiPayload)
    {
      case 3:
        v16 = type metadata accessor for UUID(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(a1, a2, v16);
        v13 = a1;
        v14 = a3;
        v15 = 3;
        goto LABEL_12;
      case 1:
        v17 = type metadata accessor for UUID(0);
        v18 = *(_QWORD *)(v17 - 8);
        v19 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
        v19(a1, a2, v17);
        v20 = (int *)type metadata accessor for CRLBoardItemDeltaChange(0);
        v21 = v20[5];
        v22 = &a1[v21];
        v23 = &a2[v21];
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(&a2[v21], 1, v17))
        {
          v24 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
          memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
        }
        else
        {
          v19(v22, v23, v17);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v22, 0, 1, v17);
        }
        v25 = v20[6];
        v26 = &a1[v25];
        v27 = &a2[v25];
        *(_OWORD *)v26 = *(_OWORD *)v27;
        *((_QWORD *)v26 + 2) = *((_QWORD *)v27 + 2);
        *(_QWORD *)&a1[v20[7]] = *(_QWORD *)&a2[v20[7]];
        *(_QWORD *)&a1[v20[8]] = *(_QWORD *)&a2[v20[8]];
        *(_OWORD *)&a1[v20[9]] = *(_OWORD *)&a2[v20[9]];
        *(_OWORD *)&a1[v20[10]] = *(_OWORD *)&a2[v20[10]];
        v13 = a1;
        v14 = a3;
        v15 = 1;
        goto LABEL_12;
      case 0:
        v7 = type metadata accessor for UUID(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
        v8 = type metadata accessor for CRLBoardIdentifierStorage(0);
        *(_OWORD *)&a1[*(int *)(v8 + 20)] = *(_OWORD *)&a2[*(int *)(v8 + 20)];
        v9 = *(int *)(sub_1004B804C(&qword_10140C320) + 48);
        v10 = &a1[v9];
        v11 = &a2[v9];
        v12 = *((_OWORD *)v11 + 1);
        *(_OWORD *)v10 = *(_OWORD *)v11;
        *((_OWORD *)v10 + 1) = v12;
        *((_QWORD *)v10 + 4) = *((_QWORD *)v11 + 4);
        v13 = a1;
        v14 = a3;
        v15 = 0;
LABEL_12:
        swift_storeEnumTagMultiPayload(v13, v14, v15);
        return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_100C856B0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  _BYTE v6[32];
  _QWORD v7[6];

  result = type metadata accessor for CRLBoardIdentifierStorage(319);
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout2(v6, *(_QWORD *)(result - 8) + 64, "(");
    v7[0] = v6;
    result = type metadata accessor for CRLBoardItemDeltaChange(319);
    if (v4 <= 0x3F)
    {
      v7[1] = *(_QWORD *)(result - 8) + 64;
      v7[2] = (char *)&value witness table for Builtin.NativeObject + 64;
      result = type metadata accessor for UUID(319);
      if (v5 <= 0x3F)
      {
        v7[3] = *(_QWORD *)(result - 8) + 64;
        v7[4] = &unk_100F309C8;
        v7[5] = &unk_100F309E0;
        swift_initEnumMetadataMultiPayload(a1, 256, 6, v7);
        return 0;
      }
    }
  }
  return result;
}

char *sub_100C85780(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  unint64_t v27;
  uint64_t v28;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v14);
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    v10 = a3[5];
    v11 = &a1[v10];
    v12 = &a2[v10];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(&a2[v10], 1, v7))
    {
      v13 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v9(v11, v12, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
    }
    v15 = a3[6];
    v16 = a3[7];
    v17 = &a1[v15];
    v18 = &a2[v15];
    *(_OWORD *)v17 = *(_OWORD *)v18;
    *((_QWORD *)v17 + 2) = *((_QWORD *)v18 + 2);
    *(_QWORD *)&a1[v16] = *(_QWORD *)&a2[v16];
    v19 = a3[9];
    *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
    v20 = &a1[v19];
    v21 = (uint64_t *)&a2[v19];
    v22 = *(_QWORD *)&a2[v19 + 8];
    if (v22 >> 60 == 15)
    {
      *(_OWORD *)v20 = *(_OWORD *)v21;
    }
    else
    {
      v23 = *v21;
      sub_1004BE310(*v21, v22);
      *(_QWORD *)v20 = v23;
      *((_QWORD *)v20 + 1) = v22;
    }
    v24 = a3[10];
    v25 = &a1[v24];
    v26 = &a2[v24];
    v27 = *((_QWORD *)v26 + 1);
    if (v27 >> 60 == 15)
    {
      *(_OWORD *)v25 = *(_OWORD *)v26;
    }
    else
    {
      v28 = *(_QWORD *)v26;
      sub_1004BE310(*(_QWORD *)v26, *((_QWORD *)v26 + 1));
      *(_QWORD *)v25 = v28;
      *((_QWORD *)v25 + 1) = v27;
    }
  }
  return a1;
}

uint64_t sub_100C85924(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t result;
  uint64_t *v9;
  unint64_t v10;
  uint64_t *v11;
  unint64_t v12;

  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  v7 = a1 + a2[5];
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v7, 1, v4);
  if (!(_DWORD)result)
    result = ((uint64_t (*)(uint64_t, uint64_t))v6)(v7, v4);
  v9 = (uint64_t *)(a1 + a2[9]);
  v10 = v9[1];
  if (v10 >> 60 != 15)
    result = sub_1004BBBC8(*v9, v10);
  v11 = (uint64_t *)(a1 + a2[10]);
  v12 = v11[1];
  if (v12 >> 60 != 15)
    return sub_1004BBBC8(*v11, v12);
  return result;
}

uint64_t sub_100C859F0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  unint64_t v25;
  uint64_t v26;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a2 + v9, 1, v6))
  {
    v12 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v8((uint64_t)v10, (uint64_t)v11, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  v13 = a3[6];
  v14 = a3[7];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *(_QWORD *)(v15 + 16) = *(_QWORD *)(v16 + 16);
  *(_QWORD *)(a1 + v14) = *(_QWORD *)(a2 + v14);
  v17 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  v18 = a1 + v17;
  v19 = (uint64_t *)(a2 + v17);
  v20 = *(_QWORD *)(a2 + v17 + 8);
  if (v20 >> 60 == 15)
  {
    *(_OWORD *)v18 = *(_OWORD *)v19;
  }
  else
  {
    v21 = *v19;
    sub_1004BE310(*v19, v20);
    *(_QWORD *)v18 = v21;
    *(_QWORD *)(v18 + 8) = v20;
  }
  v22 = a3[10];
  v23 = a1 + v22;
  v24 = (uint64_t *)(a2 + v22);
  v25 = v24[1];
  if (v25 >> 60 == 15)
  {
    *(_OWORD *)v23 = *(_OWORD *)v24;
  }
  else
  {
    v26 = *v24;
    sub_1004BE310(*v24, v24[1]);
    *(_QWORD *)v23 = v26;
    *(_QWORD *)(v23 + 8) = v25;
  }
  return a1;
}

uint64_t sub_100C85B68(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v13 = v12(a1 + v9, 1, v6);
  v14 = v12((uint64_t)v11, 1, v6);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v10, v11, v6);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v7 + 8))(v10, v6);
LABEL_6:
    v15 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  v8((uint64_t)v10, (uint64_t)v11, v6);
LABEL_7:
  v16 = a3[6];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)(a2 + v16);
  *v17 = *v18;
  v17[1] = v18[1];
  v17[2] = v18[2];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  v19 = a3[9];
  v20 = (uint64_t *)(a1 + v19);
  v21 = (uint64_t *)(a2 + v19);
  v22 = *(_QWORD *)(a2 + v19 + 8);
  if (*(_QWORD *)(a1 + v19 + 8) >> 60 == 15)
  {
    if (v22 >> 60 != 15)
    {
      v23 = *v21;
      sub_1004BE310(v23, v22);
      *v20 = v23;
      v20[1] = v22;
      goto LABEL_14;
    }
    goto LABEL_12;
  }
  if (v22 >> 60 == 15)
  {
    sub_100586C00((uint64_t)v20);
LABEL_12:
    *(_OWORD *)v20 = *(_OWORD *)v21;
    goto LABEL_14;
  }
  v24 = *v21;
  sub_1004BE310(v24, v22);
  v25 = *v20;
  v26 = v20[1];
  *v20 = v24;
  v20[1] = v22;
  sub_1004BBBC8(v25, v26);
LABEL_14:
  v27 = a3[10];
  v28 = (uint64_t *)(a1 + v27);
  v29 = (uint64_t *)(a2 + v27);
  v30 = *(_QWORD *)(a2 + v27 + 8);
  if (*(_QWORD *)(a1 + v27 + 8) >> 60 != 15)
  {
    if (v30 >> 60 != 15)
    {
      v32 = *v29;
      sub_1004BE310(v32, v30);
      v33 = *v28;
      v34 = v28[1];
      *v28 = v32;
      v28[1] = v30;
      sub_1004BBBC8(v33, v34);
      return a1;
    }
    sub_100586C00((uint64_t)v28);
    goto LABEL_19;
  }
  if (v30 >> 60 == 15)
  {
LABEL_19:
    *(_OWORD *)v28 = *(_OWORD *)v29;
    return a1;
  }
  v31 = *v29;
  sub_1004BE310(v31, v30);
  *v28 = v31;
  v28[1] = v30;
  return a1;
}

char *sub_100C85DC4(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&a2[v9], 1, v6))
  {
    v12 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  v13 = a3[6];
  v14 = a3[7];
  v15 = &a1[v13];
  v16 = &a2[v13];
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *((_QWORD *)v15 + 2) = *((_QWORD *)v16 + 2);
  *(_QWORD *)&a1[v14] = *(_QWORD *)&a2[v14];
  v17 = a3[9];
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  *(_OWORD *)&a1[v17] = *(_OWORD *)&a2[v17];
  *(_OWORD *)&a1[a3[10]] = *(_OWORD *)&a2[a3[10]];
  return a1;
}

uint64_t sub_100C85EDC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v13 = v12(a1 + v9, 1, v6);
  v14 = v12((uint64_t)v11, 1, v6);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(v10, v11, v6);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v7 + 8))(v10, v6);
LABEL_6:
    v15 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  v8((uint64_t)v10, (uint64_t)v11, v6);
LABEL_7:
  v16 = a3[6];
  v17 = a3[7];
  v18 = a1 + v16;
  v19 = a2 + v16;
  *(_OWORD *)v18 = *(_OWORD *)v19;
  *(_QWORD *)(v18 + 16) = *(_QWORD *)(v19 + 16);
  *(_QWORD *)(a1 + v17) = *(_QWORD *)(a2 + v17);
  v20 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = *(_QWORD *)(a1 + v20 + 8);
  if (v23 >> 60 == 15)
  {
LABEL_10:
    *(_OWORD *)v21 = *(_OWORD *)v22;
    goto LABEL_12;
  }
  v24 = *(_QWORD *)(v22 + 8);
  if (v24 >> 60 == 15)
  {
    sub_100586C00(v21);
    goto LABEL_10;
  }
  v25 = *(_QWORD *)v21;
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *(_QWORD *)(v21 + 8) = v24;
  sub_1004BBBC8(v25, v23);
LABEL_12:
  v26 = a3[10];
  v27 = (uint64_t *)(a1 + v26);
  v28 = (uint64_t *)(a2 + v26);
  v29 = *(_QWORD *)(a1 + v26 + 8);
  if (v29 >> 60 != 15)
  {
    v30 = v28[1];
    if (v30 >> 60 != 15)
    {
      v31 = *v27;
      *v27 = *v28;
      v27[1] = v30;
      sub_1004BBBC8(v31, v29);
      return a1;
    }
    sub_100586C00((uint64_t)v27);
  }
  *(_OWORD *)v27 = *(_OWORD *)v28;
  return a1;
}

uint64_t sub_100C860C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C860D4);
}

uint64_t sub_100C860D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  BOOL v15;
  unsigned int v16;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 36) + 8) >> 60;
  v15 = ((4 * (_DWORD)v14) & 0xC) == 0;
  v16 = ((4 * v14) & 0xC | (v14 >> 2)) ^ 0xF;
  if (v15)
    return 0;
  else
    return v16;
}

uint64_t sub_100C8618C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C86198);
}

uint64_t sub_100C86198(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  _QWORD *v15;

  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  v15 = (_QWORD *)(a1 + *(int *)(a4 + 36));
  *v15 = 0;
  v15[1] = (unint64_t)((~(_DWORD)a2 >> 2) & 3 | (4 * ~(_DWORD)a2)) << 60;
  return result;
}

void sub_100C86250(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[7];

  v2 = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_1005E26CC(319);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      v6[2] = &unk_100F30A18;
      v6[3] = (char *)&value witness table for Builtin.Int64 + 64;
      v6[4] = (char *)&value witness table for Builtin.Int64 + 64;
      v6[5] = &unk_100F30A30;
      v6[6] = &unk_100F30A30;
      swift_initStructMetadata(a1, 256, 7, v6, a1 + 16);
    }
  }
}

uint64_t destroy for CRLBoardDeltaChange(uint64_t a1)
{
  return sub_1004BBBC8(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32));
}

uint64_t initializeWithCopy for CRLBoardDeltaChange(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  sub_1004BE310(v3, v4);
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 32) = v4;
  return a1;
}

_QWORD *assignWithCopy for CRLBoardDeltaChange(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  v3 = a2[3];
  v4 = a2[4];
  sub_1004BE310(v3, v4);
  v5 = a1[3];
  v6 = a1[4];
  a1[3] = v3;
  a1[4] = v4;
  sub_1004BBBC8(v5, v6);
  return a1;
}

uint64_t assignWithTake for CRLBoardDeltaChange(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  __int128 v6;

  v3 = *(_QWORD *)(a2 + 32);
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(_QWORD *)(a1 + 32);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = v3;
  sub_1004BBBC8(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLBoardDeltaChange(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xD && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 13);
  v3 = (((*(_QWORD *)(a1 + 32) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(_QWORD *)(a1 + 32) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for CRLBoardDeltaChange(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 - 13;
    if (a3 >= 0xD)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0xD)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
    {
      *(_QWORD *)(result + 24) = 0;
      *(_QWORD *)(result + 32) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardDeltaChange()
{
  return &type metadata for CRLBoardDeltaChange;
}

Swift::Int sub_100C864A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  Swift::UInt v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v9[9];

  __chkstk_darwin(a1);
  v3 = (char *)&v9[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  Hasher.init(_seed:)(v9, 0);
  sub_1004B8460(v1, (uint64_t)v3, type metadata accessor for CRLCommandBoardItemChangeContext);
  v4 = v3[*(int *)(sub_1004B804C(&qword_101409548) + 48)];
  Hasher._combine(_:)(0);
  v5 = type metadata accessor for UUID(0);
  v6 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(v9, v5, v6);
  Hasher._combine(_:)(v4);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v3, v5);
  return Hasher._finalize()();
}

uint64_t sub_100C8659C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  char *v4;
  Swift::UInt v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  __chkstk_darwin(a1);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004B8460(v1, (uint64_t)v4, type metadata accessor for CRLCommandBoardItemChangeContext);
  v5 = v4[*(int *)(sub_1004B804C(&qword_101409548) + 48)];
  Hasher._combine(_:)(0);
  v6 = type metadata accessor for UUID(0);
  v7 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(a1, v6, v7);
  Hasher._combine(_:)(v5);
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
}

Swift::Int sub_100C86688(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  Swift::UInt v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v10[9];

  __chkstk_darwin(a1);
  v3 = (char *)&v10[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  Hasher.init(_seed:)(v10, v4);
  sub_1004B8460(v1, (uint64_t)v3, type metadata accessor for CRLCommandBoardItemChangeContext);
  v5 = v3[*(int *)(sub_1004B804C(&qword_101409548) + 48)];
  Hasher._combine(_:)(0);
  v6 = type metadata accessor for UUID(0);
  v7 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(v10, v6, v7);
  Hasher._combine(_:)(v5);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v3, v6);
  return Hasher._finalize()();
}

void sub_100C8677C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t i;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  _QWORD *v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t ObjectType;
  void (*v39)(_QWORD *, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47[3];
  _BYTE v48[24];

  v10 = type metadata accessor for UUID(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  __chkstk_darwin(v12);
  if (*(_BYTE *)(a3 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_active) != 1)
  {
    __break(1u);
    goto LABEL_27;
  }
  v45 = (uint64_t)&v43 - v13;
  v46 = v14;
  if (a2 == 2)
  {
    if ((*(_BYTE *)(a3 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_undoable) & 1) == 0)
    {
LABEL_4:
      v15 = 0;
      goto LABEL_7;
    }
  }
  else if ((a2 & 1) == 0)
  {
    goto LABEL_4;
  }
  v15 = 1;
  *(_BYTE *)(a3 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_undoableAffectedItemSetNeedsUpdate) = 1;
LABEL_7:
  v16 = type metadata accessor for CRLTransactableHashableWrapper();
  v5 = swift_allocObject(v16, 32, 7);
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = &off_10127C5E0;
  swift_beginAccess(a3 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_createdObjects, v48, 33, 0);
  v6 = (id)a1;
  swift_retain(v5);
  sub_100AD58F8(v47, v5);
  swift_endAccess(v48);
  swift_release(v47[0]);
  if (v15)
  {
    swift_beginAccess(a3 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_undoableCreatedObjects, v48, 33, 0);
    swift_retain(v5);
    sub_100AD58F8(v47, v5);
    swift_endAccess(v48);
    swift_release(v47[0]);
  }
  v17 = type metadata accessor for CRLContainerItem(0);
  v18 = swift_dynamicCastClass(v6, v17);
  v4 = _swiftEmptyArrayStorage;
  if (!v18)
  {
    v25 = type metadata accessor for CRLBoard(0);
    v26 = swift_dynamicCastClass(v6, v25);
    if (v26)
    {
      v27 = v26;
      v28 = *(void **)(v26 + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer);
      v29 = v6;
      v30 = v28;
      sub_100C8727C((uint64_t)v30, a2, a3);

      v31 = *(id *)(v27 + OBJC_IVAR____TtC8Freeform8CRLBoard_alternateRootContainer);
      sub_100C8727C((uint64_t)v31, a2, a3);

    }
    goto LABEL_32;
  }
  v19 = v18;
  v44 = v11;
  v20 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
  v3 = *(_QWORD *)(v18 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems);
  v43 = v6;
  if (!v3)
  {
    sub_100740DA4();
    v3 = *(_QWORD *)(v19 + v20);
  }
  v11 = v10;
  if (v3)
    a1 = v3;
  else
    a1 = (uint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)a1 >> 62)
  {
LABEL_27:
    if (a1 < 0)
      v32 = a1;
    else
      v32 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
    swift_bridgeObjectRetain(a1);
    v21 = _CocoaArrayWrapper.endIndex.getter(v32);
    swift_bridgeObjectRelease(a1);
    if (v21)
      goto LABEL_17;
LABEL_31:

    swift_bridgeObjectRelease(a1);
    v10 = v11;
    v11 = v44;
    goto LABEL_32;
  }
  v21 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v3);
  if (!v21)
    goto LABEL_31;
LABEL_17:
  if (v21 < 1)
  {
    __break(1u);
    return;
  }
  for (i = 0; i != v21; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0)
      v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
    else
      v23 = *(id *)(a1 + 8 * i + 32);
    v24 = v23;
    sub_100C8677C(v23, a2, a3);

  }
  swift_bridgeObjectRelease(a1);
  v10 = v11;
  v11 = v44;
  v4 = _swiftEmptyArrayStorage;
LABEL_32:
  v33 = (uint64_t *)(a3 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_deletedObjects);
  swift_beginAccess(a3 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_deletedObjects, v48, 0, 0);
  v34 = *v33;
  swift_bridgeObjectRetain(v34);
  v35 = sub_100621710(v5, v34);
  swift_bridgeObjectRelease(v34);
  if ((v35 & 1) != 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"objectCreated(_:undoableModification:)", 38, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactionContext.swift", 97, 2, 308, "A created object should not be listed as a deleted object", 57, 2u, (uint64_t)v4);
    sub_1004F5394((uint64_t)v4, (uint64_t)"objectCreated(_:undoableModification:)", 38, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactionContext.swift", 97, 2u, 308, (uint64_t)"A created object should not be listed as a deleted object", 57, 2u);
  }
  v37 = *(_QWORD *)(a3 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_transactableOwner);
  v36 = *(_QWORD *)(a3 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_transactableOwner + 8);
  ObjectType = swift_getObjectType(v37);
  v39 = *(void (**)(_QWORD *, _UNKNOWN **, uint64_t, uint64_t))(v36 + 24);
  swift_unknownObjectRetain(v37);
  v39(v6, &off_10127C5E0, ObjectType, v36);
  v40 = swift_unknownObjectRelease(v37);
  if (*(_BYTE *)(a3 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_markingState) == 1)
  {
    v41 = v46;
    (*(void (**)(uint64_t))((swift_isaMask & *v6) + 0x88))(v40);
    swift_beginAccess(a3 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_markedCreatedObjectIds, v47, 33, 0);
    v42 = v45;
    sub_100AD569C(v45, v41);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v42, v10);
    swift_endAccess(v47);
  }
  swift_release(v5);
}

void sub_100C86CC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  char *v6;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t i;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  char *v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t ObjectType;
  void (*v43)(char *, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  _BYTE v56[24];
  uint64_t v57[3];
  _BYTE v58[24];

  v10 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for UUID(0);
  v14 = __chkstk_darwin(v13);
  __chkstk_darwin(v14);
  v18 = (char *)&v51 - v17;
  if (*(_BYTE *)(a3 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_active) != 1)
  {
    __break(1u);
    goto LABEL_27;
  }
  v54 = v16;
  v55 = v15;
  v52 = v12;
  if (a2 == 2)
  {
    if ((*(_BYTE *)(a3 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_undoable) & 1) == 0)
    {
LABEL_4:
      v19 = 0;
      goto LABEL_7;
    }
  }
  else if ((a2 & 1) == 0)
  {
    goto LABEL_4;
  }
  v19 = 1;
  *(_BYTE *)(a3 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_undoableAffectedItemSetNeedsUpdate) = 1;
LABEL_7:
  v20 = type metadata accessor for CRLTransactableHashableWrapper();
  v5 = swift_allocObject(v20, 32, 7);
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = &off_1012942F0;
  swift_beginAccess(a3 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_createdObjects, v58, 33, 0);
  v6 = (char *)(id)a1;
  swift_retain(v5);
  sub_100AD58F8(v57, v5);
  swift_endAccess(v58);
  swift_release(v57[0]);
  if (v19)
  {
    swift_beginAccess(a3 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_undoableCreatedObjects, v58, 33, 0);
    swift_retain(v5);
    sub_100AD58F8(v57, v5);
    swift_endAccess(v58);
    swift_release(v57[0]);
  }
  v21 = type metadata accessor for CRLContainerItem(0);
  v22 = swift_dynamicCastClass(v6, v21);
  v4 = _swiftEmptyArrayStorage;
  v53 = v18;
  if (!v22)
  {
    v29 = type metadata accessor for CRLBoard(0);
    v30 = swift_dynamicCastClass(v6, v29);
    if (v30)
    {
      v31 = v30;
      v32 = *(void **)(v30 + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer);
      v33 = v6;
      v34 = v32;
      sub_100C8727C((uint64_t)v34, a2, a3);

      v35 = *(id *)(v31 + OBJC_IVAR____TtC8Freeform8CRLBoard_alternateRootContainer);
      sub_100C8727C((uint64_t)v35, a2, a3);

    }
    goto LABEL_32;
  }
  v23 = v22;
  v24 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
  v3 = *(_QWORD *)(v22 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems);
  v51 = v6;
  if (!v3)
  {
    sub_100740DA4();
    v3 = *(_QWORD *)(v23 + v24);
  }
  v12 = (char *)v13;
  if (v3)
    a1 = v3;
  else
    a1 = (uint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)a1 >> 62)
  {
LABEL_27:
    if (a1 < 0)
      v36 = a1;
    else
      v36 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
    swift_bridgeObjectRetain(a1);
    v25 = _CocoaArrayWrapper.endIndex.getter(v36);
    swift_bridgeObjectRelease(a1);
    if (v25)
      goto LABEL_17;
LABEL_31:

    swift_bridgeObjectRelease(a1);
    v13 = (uint64_t)v12;
    goto LABEL_32;
  }
  v25 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v3);
  if (!v25)
    goto LABEL_31;
LABEL_17:
  if (v25 < 1)
  {
    __break(1u);
    return;
  }
  for (i = 0; i != v25; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0)
      v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
    else
      v27 = *(id *)(a1 + 8 * i + 32);
    v28 = v27;
    sub_100C8677C((uint64_t)v27, a2, a3);

  }
  swift_bridgeObjectRelease(a1);
  v13 = (uint64_t)v12;
  v4 = _swiftEmptyArrayStorage;
LABEL_32:
  v37 = (uint64_t *)(a3 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_deletedObjects);
  swift_beginAccess(a3 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_deletedObjects, v58, 0, 0);
  v38 = *v37;
  swift_bridgeObjectRetain(v38);
  v39 = sub_100621710(v5, v38);
  swift_bridgeObjectRelease(v38);
  if ((v39 & 1) != 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"objectCreated(_:undoableModification:)", 38, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactionContext.swift", 97, 2, 308, "A created object should not be listed as a deleted object", 57, 2u, (uint64_t)v4);
    sub_1004F5394((uint64_t)v4, (uint64_t)"objectCreated(_:undoableModification:)", 38, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactionContext.swift", 97, 2u, 308, (uint64_t)"A created object should not be listed as a deleted object", 57, 2u);
  }
  v40 = *(_QWORD *)(a3 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_transactableOwner);
  v41 = *(_QWORD *)(a3 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_transactableOwner + 8);
  ObjectType = swift_getObjectType(v40);
  v43 = *(void (**)(char *, _UNKNOWN **, uint64_t, uint64_t))(v41 + 24);
  swift_unknownObjectRetain(v40);
  v43(v6, &off_1012942F0, ObjectType, v41);
  swift_unknownObjectRelease(v40);
  if (*(_BYTE *)(a3 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_markingState) == 1)
  {
    v44 = *(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform8CRLBoard_data];
    v45 = v44 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess(v44 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v57, 0, 0);
    v46 = v45;
    v47 = (uint64_t)v52;
    sub_1004B8460(v46, (uint64_t)v52, type metadata accessor for CRLBoardCRDTData);
    swift_retain(v44);
    v48 = sub_1004B804C(&qword_1013E1A80);
    v49 = v54;
    CRRegister.wrappedValue.getter(v48);
    sub_1004B84A4(v47, type metadata accessor for CRLBoardCRDTData);
    swift_release(v44);
    swift_beginAccess(a3 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_markedCreatedObjectIds, v56, 33, 0);
    v50 = (uint64_t)v53;
    sub_100AD569C((uint64_t)v53, v49);
    (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v50, v13);
    swift_endAccess(v56);
  }
  swift_release(v5);
}

void sub_100C8727C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  char *v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t i;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  char *v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t ObjectType;
  void (*v39)(char *, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v40;
  void (*v41)(__n128);
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49[3];
  _BYTE v50[24];

  v10 = type metadata accessor for UUID(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  __chkstk_darwin(v12);
  if (*(_BYTE *)(a3 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_active) != 1)
  {
    __break(1u);
    goto LABEL_27;
  }
  v47 = (uint64_t)&v45 - v13;
  v48 = v14;
  if (a2 == 2)
  {
    if ((*(_BYTE *)(a3 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_undoable) & 1) == 0)
    {
LABEL_4:
      v15 = 0;
      goto LABEL_7;
    }
  }
  else if ((a2 & 1) == 0)
  {
    goto LABEL_4;
  }
  v15 = 1;
  *(_BYTE *)(a3 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_undoableAffectedItemSetNeedsUpdate) = 1;
LABEL_7:
  v16 = type metadata accessor for CRLTransactableHashableWrapper();
  v5 = swift_allocObject(v16, 32, 7);
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = &off_10127C5E0;
  swift_beginAccess(a3 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_createdObjects, v50, 33, 0);
  v6 = (char *)(id)a1;
  swift_retain(v5);
  sub_100AD58F8(v49, v5);
  swift_endAccess(v50);
  swift_release(v49[0]);
  if (v15)
  {
    swift_beginAccess(a3 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_undoableCreatedObjects, v50, 33, 0);
    swift_retain(v5);
    sub_100AD58F8(v49, v5);
    swift_endAccess(v50);
    swift_release(v49[0]);
  }
  v17 = type metadata accessor for CRLContainerItem(0);
  v18 = swift_dynamicCastClass(v6, v17);
  v4 = _swiftEmptyArrayStorage;
  if (!v18)
  {
    v25 = type metadata accessor for CRLBoard(0);
    v26 = swift_dynamicCastClass(v6, v25);
    if (v26)
    {
      v27 = v26;
      v28 = *(void **)(v26 + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer);
      v29 = v6;
      v30 = v28;
      sub_100C8727C();

      v31 = *(id *)(v27 + OBJC_IVAR____TtC8Freeform8CRLBoard_alternateRootContainer);
      sub_100C8727C();

    }
    goto LABEL_32;
  }
  v19 = v18;
  v46 = v11;
  v20 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
  v3 = *(_QWORD *)(v18 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems);
  v45 = v6;
  if (!v3)
  {
    sub_100740DA4();
    v3 = *(_QWORD *)(v19 + v20);
  }
  v11 = v10;
  if (v3)
    a1 = v3;
  else
    a1 = (uint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)a1 >> 62)
  {
LABEL_27:
    if (a1 < 0)
      v32 = a1;
    else
      v32 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
    swift_bridgeObjectRetain(a1);
    v21 = _CocoaArrayWrapper.endIndex.getter(v32);
    swift_bridgeObjectRelease(a1);
    if (v21)
      goto LABEL_17;
LABEL_31:

    swift_bridgeObjectRelease(a1);
    v10 = v11;
    v11 = v46;
    goto LABEL_32;
  }
  v21 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v3);
  if (!v21)
    goto LABEL_31;
LABEL_17:
  if (v21 < 1)
  {
    __break(1u);
    return;
  }
  for (i = 0; i != v21; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0)
      v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
    else
      v23 = *(id *)(a1 + 8 * i + 32);
    v24 = v23;
    sub_100C8677C(v23, a2, a3);

  }
  swift_bridgeObjectRelease(a1);
  v10 = v11;
  v11 = v46;
  v4 = _swiftEmptyArrayStorage;
LABEL_32:
  v33 = (uint64_t *)(a3 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_deletedObjects);
  swift_beginAccess(a3 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_deletedObjects, v50, 0, 0);
  v34 = *v33;
  swift_bridgeObjectRetain(v34);
  v35 = sub_100621710(v5, v34);
  swift_bridgeObjectRelease(v34);
  if ((v35 & 1) != 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"objectCreated(_:undoableModification:)", 38, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactionContext.swift", 97, 2, 308, "A created object should not be listed as a deleted object", 57, 2u, (uint64_t)v4);
    sub_1004F5394((uint64_t)v4, (uint64_t)"objectCreated(_:undoableModification:)", 38, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactionContext.swift", 97, 2u, 308, (uint64_t)"A created object should not be listed as a deleted object", 57, 2u);
  }
  v37 = *(_QWORD *)(a3 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_transactableOwner);
  v36 = *(_QWORD *)(a3 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_transactableOwner + 8);
  ObjectType = swift_getObjectType(v37);
  v39 = *(void (**)(char *, _UNKNOWN **, uint64_t, uint64_t))(v36 + 24);
  swift_unknownObjectRetain(v37);
  v39(v6, &off_10127C5E0, ObjectType, v36);
  swift_unknownObjectRelease(v37);
  if (*(_BYTE *)(a3 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_markingState) == 1)
  {
    v40 = *(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
    v41 = *(void (**)(__n128))(*(_QWORD *)v40 + 256);
    v42 = swift_retain(v40);
    v43 = v48;
    v41(v42);
    swift_release(v40);
    swift_beginAccess(a3 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_markedCreatedObjectIds, v49, 33, 0);
    v44 = v47;
    sub_100AD569C(v47, v43);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v44, v10);
    swift_endAccess(v49);
  }
  swift_release(v5);
}

uint64_t sub_100C877CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v17;

  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C(&qword_10140D020);
  __chkstk_darwin(v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (uint64_t)&v10[*(int *)(v11 + 48)];
  sub_1004B8460(a1, (uint64_t)v10, type metadata accessor for CRLCommandBoardItemChangeContext);
  sub_1004B8460(a2, v12, type metadata accessor for CRLCommandBoardItemChangeContext);
  v13 = *(int *)(sub_1004B804C(&qword_101409548) + 48);
  LODWORD(a1) = v10[v13];
  v14 = *(unsigned __int8 *)(v12 + v13);
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
  LODWORD(a2) = static UUID.== infix(_:_:)(v7);
  v15 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v15(v12, v4);
  v15((uint64_t)v7, v4);
  return a2 & ~(a1 ^ v14) & 1;
}

uint64_t sub_100C87914(uint64_t a1)
{
  sub_1004BBBC8(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32));
  return a1;
}

uint64_t type metadata accessor for CRLCommandBoardItemChangeContext(uint64_t a1)
{
  return sub_1004BD408(a1, (uint64_t *)&unk_10140D000, (uint64_t)&nominal type descriptor for CRLCommandBoardItemChangeContext);
}

uint64_t storeEnumTagSinglePayload for CRLCommandBoardItemChangeType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100C879A0 + 4 * byte_100F30963[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100C879D4 + 4 * byte_100F3095E[v4]))();
}

uint64_t sub_100C879D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100C879DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100C879E4);
  return result;
}

uint64_t sub_100C879F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100C879F8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100C879FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100C87A04(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLCommandBoardItemChangeType()
{
  return &type metadata for CRLCommandBoardItemChangeType;
}

_QWORD *sub_100C87A20(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v8);
  }
  else
  {
    v6 = type metadata accessor for UUID(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    v7 = sub_1004B804C(&qword_101409548);
    *((_BYTE *)a1 + *(int *)(v7 + 48)) = *((_BYTE *)a2 + *(int *)(v7 + 48));
  }
  return a1;
}

uint64_t sub_100C87AA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  v5 = sub_1004B804C(&qword_101409548);
  *(_BYTE *)(a1 + *(int *)(v5 + 48)) = *(_BYTE *)(a2 + *(int *)(v5 + 48));
  return a1;
}

uint64_t sub_100C87B04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  v5 = sub_1004B804C(&qword_101409548);
  *(_BYTE *)(a1 + *(int *)(v5 + 48)) = *(_BYTE *)(a2 + *(int *)(v5 + 48));
  return a1;
}

uint64_t sub_100C87B60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  v5 = sub_1004B804C(&qword_101409548);
  *(_BYTE *)(a1 + *(int *)(v5 + 48)) = *(_BYTE *)(a2 + *(int *)(v5 + 48));
  return a1;
}

uint64_t sub_100C87BBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  v5 = sub_1004B804C(&qword_101409548);
  *(_BYTE *)(a1 + *(int *)(v5 + 48)) = *(_BYTE *)(a2 + *(int *)(v5 + 48));
  return a1;
}

uint64_t sub_100C87C18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_101409548);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_100C87C58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B804C(&qword_101409548);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, a2, a3, v6);
}

uint64_t sub_100C87CA8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _DWORD v4[8];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout2(v4, *(_QWORD *)(result - 8) + 64, &unk_100F30AB8);
    swift_initEnumMetadataSingleCase(a1, 256, v4);
    result = 0;
    *(_DWORD *)(*(_QWORD *)(a1 - 8) + 84) = v4[5];
  }
  return result;
}

unint64_t sub_100C87D24()
{
  unint64_t result;

  result = qword_10140D010;
  if (!qword_10140D010)
  {
    result = swift_getWitnessTable(&unk_100F30B38, &type metadata for CRLCommandBoardItemChangeType);
    atomic_store(result, (unint64_t *)&qword_10140D010);
  }
  return result;
}

uint64_t sub_100C87D68()
{
  return sub_1004B7878(&qword_10140D018, type metadata accessor for CRLCommandBoardItemChangeContext, (uint64_t)&unk_100F30AD0);
}

uint64_t sub_100C87D94(uint64_t a1)
{
  uint64_t result;

  result = sub_1004B7878(&qword_101409550, type metadata accessor for CRLCommandBoardItemChangeContext, (uint64_t)&unk_100F30B60);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t *sub_100C87DD0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v14);
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = *(uint64_t *)((char *)a2 + v9);
    *(uint64_t *)((char *)a1 + v9) = v13;
    swift_bridgeObjectRetain(v12);
    swift_bridgeObjectRetain(v13);
  }
  return a1;
}

uint64_t sub_100C87E74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(a2 + 20) + 8));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(a2 + 24)));
}

uint64_t sub_100C87EC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = *(_QWORD *)(a2 + v8);
  *(_QWORD *)(a1 + v8) = v12;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRetain(v12);
  return a1;
}

uint64_t sub_100C87F40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v10 = v9[1];
  v11 = v8[1];
  v8[1] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  v12 = *(int *)(a3 + 24);
  v13 = *(_QWORD *)(a2 + v12);
  v14 = *(_QWORD *)(a1 + v12);
  *(_QWORD *)(a1 + v12) = v13;
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRelease(v14);
  return a1;
}

uint64_t sub_100C87FD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_100C8803C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  v12 = v8[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease(v12);
  v13 = *(int *)(a3 + 24);
  v14 = *(_QWORD *)(a1 + v13);
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  swift_bridgeObjectRelease(v14);
  return a1;
}

uint64_t sub_100C880BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C880C8);
}

uint64_t sub_100C880C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_100C88148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C88154);
}

uint64_t sub_100C88154(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for CRLAssetData(uint64_t a1)
{
  uint64_t result;

  result = qword_10140D080;
  if (!qword_10140D080)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLAssetData);
  return result;
}

uint64_t sub_100C8820C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100F30BD8;
    v4[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_100C8828C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  char v25;

  v3 = v1;
  v5 = sub_1004B804C(&qword_10140D138);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_100C89068();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLAssetData.CodingKeys, &type metadata for CRLAssetData.CodingKeys, v11, v9, v10);
  v25 = 0;
  v12 = type metadata accessor for UUID(0);
  v13 = sub_1004B7878(&qword_1013E4860, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  KeyedEncodingContainer.encode<A>(_:forKey:)(v3, &v25, v5, v12, v13);
  if (!v2)
  {
    v14 = type metadata accessor for CRLAssetData(0);
    v15 = (uint64_t *)(v3 + *(int *)(v14 + 20));
    v16 = *v15;
    v17 = v15[1];
    v24 = 1;
    KeyedEncodingContainer.encode(_:forKey:)(v16, v17, &v24, v5);
    v23 = *(_QWORD *)(v3 + *(int *)(v14 + 24));
    v22 = 2;
    v18 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    v19 = sub_1004F31B4();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v23, &v22, v5, v18, v19);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_100C88434(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  char v39;

  v29 = a2;
  v3 = type metadata accessor for UUID(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v30 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_1004B804C(&qword_10140D130);
  v6 = *(_QWORD *)(v32 - 8);
  __chkstk_darwin(v32);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CRLAssetData(0);
  __chkstk_darwin(v9);
  v12 = *(int *)(v11 + 24);
  v33 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = v12;
  *(_QWORD *)&v33[v12] = _swiftEmptyDictionarySingleton;
  v13 = a1[3];
  v14 = a1[4];
  sub_1004BB5A4(a1, v13);
  v15 = sub_100C89068();
  v31 = v8;
  v16 = v35;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLAssetData.CodingKeys, &type metadata for CRLAssetData.CodingKeys, v15, v13, v14);
  if (v16)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
    swift_bridgeObjectRelease();
  }
  else
  {
    v17 = v6;
    v39 = 0;
    v18 = sub_1004B7878(&qword_1013E4810, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v19 = v30;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v3, &v39, v32, v3, v18);
    v35 = v4;
    v20 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
    v21 = (uint64_t)v33;
    v20(v33, v19, v3);
    v38 = 1;
    v22 = KeyedDecodingContainer.decode(_:forKey:)(&v38, v32);
    v23 = (uint64_t *)(v21 + *(int *)(v9 + 20));
    *v23 = v22;
    v23[1] = v24;
    v25 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    v37 = 2;
    v26 = sub_1004F3130();
    KeyedDecodingContainer.decode<A>(_:forKey:)(v25, &v37, v32, v25, v26);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v31, v32);
    v27 = v36;
    v28 = v34;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v21 + v28) = v27;
    sub_10069BF0C(v21, v29);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
    sub_1005CC194(v21);
  }
}

uint64_t sub_100C88730()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  v0 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v0);
  v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for UUID(0);
  sub_100501DE0(v3, qword_101481278);
  v4 = sub_1004F2A1C(v3, (uint64_t)qword_101481278);
  UUID.init(uuidString:)(0xD000000000000024, 0x8000000100FE6790, v5);
  v6 = *(_QWORD *)(v3 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v2, 1, v3);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(v4, v2, v3);
  __break(1u);
  return result;
}

void sub_100C88810(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_100C88434(a1, a2);
}

uint64_t sub_100C88824(_QWORD *a1)
{
  return sub_100C8828C(a1);
}

Swift::Int sub_100C88838(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[9];

  Hasher.init(_seed:)(v6, 0);
  v3 = type metadata accessor for UUID(0);
  v4 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(v6, v3, v4);
  String.hash(into:)(v6, *(_QWORD *)(v1 + *(int *)(a1 + 20)), *(_QWORD *)(v1 + *(int *)(a1 + 20) + 8));
  sub_100957EF8((uint64_t)v6, *(_QWORD *)(v1 + *(int *)(a1 + 24)));
  return Hasher._finalize()();
}

void sub_100C888D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  v5 = type metadata accessor for UUID(0);
  v6 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(a1, v5, v6);
  String.hash(into:)(a1, *(_QWORD *)(v2 + *(int *)(a2 + 20)), *(_QWORD *)(v2 + *(int *)(a2 + 20) + 8));
  sub_100957EF8(a1, *(_QWORD *)(v2 + *(int *)(a2 + 24)));
}

Swift::Int sub_100C88954(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, a1);
  v4 = type metadata accessor for UUID(0);
  v5 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(v7, v4, v5);
  String.hash(into:)(v7, *(_QWORD *)(v2 + *(int *)(a2 + 20)), *(_QWORD *)(v2 + *(int *)(a2 + 20) + 8));
  sub_100957EF8((uint64_t)v7, *(_QWORD *)(v2 + *(int *)(a2 + 24)));
  return Hasher._finalize()();
}

uint64_t sub_100C889F0()
{
  return sub_1004B7878(&qword_10140D0C0, type metadata accessor for CRLAssetData, (uint64_t)&unk_100F30BF0);
}

BOOL sub_100C88A1C(char *a1, char *a2)
{
  return qword_100F30FF8[*a1] == qword_100F30FF8[*a2];
}

Swift::Int sub_100C88A40()
{
  char *v0;
  uint64_t v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(qword_100F30FF8[v1]);
  return Hasher._finalize()();
}

void sub_100C88A8C()
{
  char *v0;

  Hasher._combine(_:)(qword_100F30FF8[*v0]);
}

Swift::Int sub_100C88AC0(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(qword_100F30FF8[v2]);
  return Hasher._finalize()();
}

void sub_100C88B08(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_100F30FF8[*v1];
}

uint64_t sub_100C88B20()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x656D616E656C6966;
  if (*v0 != 1)
    v1 = 0xD000000000000010;
  if (*v0)
    return v1;
  else
    return 0x4955557465737361;
}

uint64_t sub_100C88B84@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100C89240(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100C88BA8()
{
  char *v0;

  return qword_100F30FF8[*v0];
}

void sub_100C88BC0(_QWORD *a1@<X8>)
{
  *a1 = &off_1012639B8;
}

uint64_t sub_100C88BD0(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = sub_100C89020();
  v5 = sub_100C89068();
  return static CodingKey<>.intCases.getter(a1, a2, v4, v5);
}

uint64_t sub_100C88C14(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C89068();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100C88C3C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C89068();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100C88C64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_10140D128, type metadata accessor for CRLAssetData, (uint64_t)&unk_100F30F08);
  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100C88CBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1004B7878(&qword_10140D0D8, type metadata accessor for CRLAssetData, (uint64_t)&unk_100F30D50);
  v7 = sub_1004B7878(&qword_10140D0C0, type metadata accessor for CRLAssetData, (uint64_t)&unk_100F30BF0);
  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_100C88D50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_10140D128, type metadata accessor for CRLAssetData, (uint64_t)&unk_100F30F08);
  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_100C88DA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_10140D120, type metadata accessor for CRLAssetData, (uint64_t)&unk_100F30D88);
  return CRValueStruct.init(from:)(a1, a2, v4);
}

uint64_t sub_100C88E04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_10140D120, type metadata accessor for CRLAssetData, (uint64_t)&unk_100F30D88);
  return CRValueStruct.encode(to:)(a1, a2, v4);
}

uint64_t sub_100C88E60(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_10140D120, type metadata accessor for CRLAssetData, (uint64_t)&unk_100F30D88);
  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_100C88EB0()
{
  return sub_1004B7878(&qword_10140D0C8, type metadata accessor for CRLAssetData, (uint64_t)&unk_100F30CA8);
}

uint64_t sub_100C88EDC()
{
  return sub_1004B7878(&qword_10140D0D0, type metadata accessor for CRLAssetData, (uint64_t)&unk_100F30CF0);
}

uint64_t sub_100C88F08()
{
  return sub_1004B7878(&qword_10140D0D8, type metadata accessor for CRLAssetData, (uint64_t)&unk_100F30D50);
}

uint64_t sub_100C88F34()
{
  return sub_1004B7878(&qword_1013E0DB0, type metadata accessor for CRLAssetData, (uint64_t)&unk_100F30C80);
}

uint64_t sub_100C88F60()
{
  return sub_1004B7878(&qword_1013E0DC0, type metadata accessor for CRLAssetData, (uint64_t)&unk_100F30C58);
}

unint64_t sub_100C88F90()
{
  unint64_t result;

  result = qword_10140D0E0;
  if (!qword_10140D0E0)
  {
    result = swift_getWitnessTable(&unk_100F30DD0, &type metadata for CRLAssetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10140D0E0);
  }
  return result;
}

unint64_t sub_100C88FD8()
{
  unint64_t result;

  result = qword_10140D0E8;
  if (!qword_10140D0E8)
  {
    result = swift_getWitnessTable(&unk_100F30EE0, &type metadata for CRLAssetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10140D0E8);
  }
  return result;
}

unint64_t sub_100C89020()
{
  unint64_t result;

  result = qword_10140D0F0;
  if (!qword_10140D0F0)
  {
    result = swift_getWitnessTable(&unk_100F30EA8, &type metadata for CRLAssetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10140D0F0);
  }
  return result;
}

unint64_t sub_100C89068()
{
  unint64_t result;

  result = qword_10140D0F8;
  if (!qword_10140D0F8)
  {
    result = swift_getWitnessTable(&unk_100F30E08, &type metadata for CRLAssetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10140D0F8);
  }
  return result;
}

unint64_t sub_100C890B0()
{
  unint64_t result;

  result = qword_10140D100;
  if (!qword_10140D100)
  {
    result = swift_getWitnessTable(&unk_100F30E80, &type metadata for CRLAssetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10140D100);
  }
  return result;
}

unint64_t sub_100C890F8()
{
  unint64_t result;

  result = qword_10140D108;
  if (!qword_10140D108)
  {
    result = swift_getWitnessTable(&unk_100F30E58, &type metadata for CRLAssetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10140D108);
  }
  return result;
}

unint64_t sub_100C89140()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10140D110;
  if (!qword_10140D110)
  {
    v1 = sub_1004CB6A4(&qword_10140D118);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_10140D110);
  }
  return result;
}

uint64_t sub_100C8918C()
{
  return sub_1004B7878(&qword_10140D120, type metadata accessor for CRLAssetData, (uint64_t)&unk_100F30D88);
}

uint64_t sub_100C891B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  BOOL v10;

  if ((static UUID.== infix(_:_:)(a1) & 1) != 0
    && ((v4 = type metadata accessor for CRLAssetData(0),
         v5 = *(int *)(v4 + 20),
         v6 = *(_QWORD *)(a1 + v5),
         v7 = *(_QWORD *)(a1 + v5 + 8),
         v8 = (_QWORD *)(a2 + v5),
         v9 = v8[1],
         v6 == *v8)
      ? (v10 = v7 == v9)
      : (v10 = 0),
        v10 || (_stringCompareWithSmolCheck(_:_:expecting:)(v6, v7, *v8, v9, 0) & 1) != 0))
  {
    return sub_100C9E04C(*(_QWORD *)(a1 + *(int *)(v4 + 24)), *(_QWORD *)(a2 + *(int *)(v4 + 24)));
  }
  else
  {
    return 0;
  }
}

uint64_t sub_100C89240(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  char v8;

  if (a1 == 0x4955557465737361 && a2 == 0xE900000000000044)
  {
    v5 = 0xE900000000000044;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x4955557465737361, 0xE900000000000044, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x656D616E656C6966 && a2 == 0xE800000000000000)
  {
    v7 = 0xE800000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x656D616E656C6966, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0xD000000000000010 && a2 == 0x8000000100FAF1E0)
  {
    swift_bridgeObjectRelease(0x8000000100FAF1E0);
    return 2;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x8000000100FAF1E0, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v8 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t storeEnumTagSinglePayload for CRLAssetData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100C893E8 + 4 * byte_100F30BC5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100C8941C + 4 * byte_100F30BC0[v4]))();
}

uint64_t sub_100C8941C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100C89424(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100C8942CLL);
  return result;
}

uint64_t sub_100C89438(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100C89440);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100C89444(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100C8944C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLAssetData.CodingKeys()
{
  return &type metadata for CRLAssetData.CodingKeys;
}

unint64_t sub_100C8946C()
{
  unint64_t result;

  result = qword_10140D140;
  if (!qword_10140D140)
  {
    result = swift_getWitnessTable(&unk_100F30FCC, &type metadata for CRLAssetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10140D140);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CRLiOSPencilHoverToolType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_100C894FC + 4 * byte_100F31015[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_100C89530 + 4 * byte_100F31010[v4]))();
}

uint64_t sub_100C89530(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100C89538(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100C89540);
  return result;
}

uint64_t sub_100C8954C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100C89554);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_100C89558(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100C89560(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLiOSPencilHoverToolType()
{
  return &type metadata for CRLiOSPencilHoverToolType;
}

unint64_t sub_100C89580()
{
  unint64_t result;

  result = qword_10140D148;
  if (!qword_10140D148)
  {
    result = swift_getWitnessTable(&unk_100F3107C, &type metadata for CRLiOSPencilHoverToolType);
    atomic_store(result, (unint64_t *)&qword_10140D148);
  }
  return result;
}

void sub_100C895C4(void *a1)
{
  id v2;

  v2 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  objc_msgSend(a1, "setTextColor:", v2);

}

id sub_100C896D4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLLabelView_mi();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLLabelView_mi()
{
  return objc_opt_self(_TtC8Freeform15CRLLabelView_mi);
}

void sub_100C89724()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  NSString v13;
  _QWORD v14[5];
  uint64_t v15;

  v0 = type metadata accessor for CRLLabelView_mi();
  v2 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v0, v1)), "init");
  v3 = objc_msgSend(v2, "traitCollection");
  v4 = swift_allocObject(&unk_10129E870, 24, 7);
  *(_QWORD *)(v4 + 16) = v2;
  v5 = swift_allocObject(&unk_10129E898, 32, 7);
  *(_QWORD *)(v5 + 16) = sub_100C89970;
  *(_QWORD *)(v5 + 24) = v4;
  v14[4] = sub_1005B71BC;
  v15 = v5;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = *(_QWORD *)"";
  v14[2] = sub_100618D24;
  v14[3] = &unk_10129E8B0;
  v6 = _Block_copy(v14);
  v7 = v15;
  v8 = v2;
  swift_retain(v5);
  objc_msgSend(v3, "performAsCurrentTraitCollection:", v6, swift_release(v7).n128_f64[0]);

  _Block_release(v6);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation(v5, "", 101, 13, 50, 1);
  swift_release(v5);
  if ((v3 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v9 = (void *)objc_opt_self(UIFont);
    v10 = v8;
    v11 = objc_msgSend(v9, "systemFontOfSize:weight:", 13.0, UIFontWeightRegular);
    objc_msgSend(v10, "setFont:", v11);

    v12 = v10;
    v13 = String._bridgeToObjectiveC()();
    objc_msgSend(v12, "setText:", v13);

    objc_msgSend(v12, "setNumberOfLines:", 3);
    swift_release(v4);
  }
}

uint64_t sub_100C8994C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100C89970()
{
  uint64_t v0;

  sub_100C895C4(*(void **)(v0 + 16));
}

uint64_t sub_100C89978()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

double sub_100C89988(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

double sub_100C89998(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

double destroy for CRLWPShapePresetData(uint64_t a1)
{
  int v2;
  double result;

  if (*(_QWORD *)(a1 + 96))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(a1 + 144))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(a1 + 200))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + 328))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + 424))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + 520))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + 576))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v2 = *(unsigned __int8 *)(a1 + 616);
  if (v2 != 255)
    sub_1004C4230(*(_QWORD *)(a1 + 600), *(_QWORD *)(a1 + 608), v2 & 1);
  if (*(_QWORD *)(a1 + 760))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for CRLWPShapePresetData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  _DWORD *v33;
  _DWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  int v55;
  char v56;
  uint64_t v57;
  unint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  uint64_t v69;
  uint64_t v70;

  v4 = *(_QWORD *)(a2 + 96);
  if (v4)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
    *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
    *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
    *(_QWORD *)(a1 + 36) = *(_QWORD *)(a2 + 36);
    *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
    v5 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 48) = v5;
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    v6 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 72) = v6;
    *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
    v7 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 88) = v7;
    *(_QWORD *)(a1 + 96) = v4;
    *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
    *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_DWORD *)(a1 + 140) = *(_DWORD *)(a2 + 140);
    v9 = (_OWORD *)(a2 + 144);
    v8 = *(_QWORD *)(a2 + 144);
    swift_bridgeObjectRetain(v5);
    swift_bridgeObjectRetain(v6);
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v4);
    if (v8)
    {
      *(_QWORD *)(a1 + 144) = v8;
      *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
      v10 = *(_QWORD *)(a2 + 160);
      *(_QWORD *)(a1 + 160) = v10;
      swift_bridgeObjectRetain(v8);
      swift_bridgeObjectRetain(v10);
    }
    else
    {
      *(_OWORD *)(a1 + 144) = *v9;
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    }
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
    *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
    v18 = *(_QWORD *)(a2 + 184);
    *(_QWORD *)(a1 + 184) = v18;
    v19 = *(_QWORD *)(a2 + 200);
    swift_bridgeObjectRetain(v18);
    if (v19)
    {
      *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
      *(_QWORD *)(a1 + 200) = v19;
      *(_DWORD *)(a1 + 208) = *(_DWORD *)(a2 + 208);
      *(_BYTE *)(a1 + 212) = *(_BYTE *)(a2 + 212);
      v20 = *(_QWORD *)(a2 + 216);
      *(_QWORD *)(a1 + 216) = v20;
      swift_bridgeObjectRetain(v19);
      swift_bridgeObjectRetain(v20);
    }
    else
    {
      v21 = *(_OWORD *)(a2 + 208);
      *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
      *(_OWORD *)(a1 + 208) = v21;
    }
    v22 = *(_QWORD *)(a2 + 224);
    *(_QWORD *)(a1 + 224) = v22;
    swift_bridgeObjectRetain(v22);
  }
  else
  {
    v11 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v11;
    *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
    v12 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v12;
    v13 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v13;
    v14 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v14;
    v15 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v15;
    v16 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v16;
    v17 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v17;
  }
  v23 = (_QWORD *)(a1 + 232);
  v24 = (_QWORD *)(a2 + 232);
  v25 = *(_QWORD *)(a2 + 328);
  if (v25)
  {
    *v23 = *v24;
    *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
    *(_DWORD *)(a1 + 248) = *(_DWORD *)(a2 + 248);
    *(_BYTE *)(a1 + 252) = *(_BYTE *)(a2 + 252);
    *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
    *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
    *(_DWORD *)(a1 + 268) = *(_DWORD *)(a2 + 268);
    *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
    v26 = *(_QWORD *)(a2 + 280);
    *(_QWORD *)(a1 + 280) = v26;
    *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
    v27 = *(_QWORD *)(a2 + 304);
    *(_QWORD *)(a1 + 304) = v27;
    *(_DWORD *)(a1 + 312) = *(_DWORD *)(a2 + 312);
    v28 = *(_QWORD *)(a2 + 320);
    *(_QWORD *)(a1 + 320) = v28;
    *(_QWORD *)(a1 + 328) = v25;
    v29 = *(_QWORD *)(a2 + 336);
    *(_QWORD *)(a1 + 336) = v29;
    swift_bridgeObjectRetain(v26);
    swift_bridgeObjectRetain(v27);
    swift_bridgeObjectRetain(v28);
    swift_bridgeObjectRetain(v25);
    swift_bridgeObjectRetain(v29);
  }
  else
  {
    v30 = *(_OWORD *)(a2 + 312);
    *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
    *(_OWORD *)(a1 + 312) = v30;
    *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
    v31 = *(_OWORD *)(a2 + 248);
    *(_OWORD *)v23 = *(_OWORD *)v24;
    *(_OWORD *)(a1 + 248) = v31;
    v32 = *(_OWORD *)(a2 + 280);
    *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
    *(_OWORD *)(a1 + 280) = v32;
  }
  v33 = (_DWORD *)(a1 + 344);
  v34 = (_DWORD *)(a2 + 344);
  v35 = *(_QWORD *)(a2 + 424);
  if (v35)
  {
    *v33 = *v34;
    *(_BYTE *)(a1 + 348) = *(_BYTE *)(a2 + 348);
    *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
    *(_BYTE *)(a1 + 360) = *(_BYTE *)(a2 + 360);
    *(_DWORD *)(a1 + 364) = *(_DWORD *)(a2 + 364);
    *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
    v36 = *(_QWORD *)(a2 + 376);
    *(_QWORD *)(a1 + 376) = v36;
    *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
    v37 = *(_QWORD *)(a2 + 400);
    *(_QWORD *)(a1 + 400) = v37;
    *(_DWORD *)(a1 + 408) = *(_DWORD *)(a2 + 408);
    v38 = *(_QWORD *)(a2 + 416);
    *(_QWORD *)(a1 + 416) = v38;
    *(_QWORD *)(a1 + 424) = v35;
    *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
    *(_DWORD *)(a1 + 448) = *(_DWORD *)(a2 + 448);
    v39 = *(_QWORD *)(a2 + 456);
    v40 = *(_QWORD *)(a2 + 464);
    *(_QWORD *)(a1 + 456) = v39;
    *(_QWORD *)(a1 + 464) = v40;
    swift_bridgeObjectRetain(v36);
    swift_bridgeObjectRetain(v37);
    swift_bridgeObjectRetain(v38);
    swift_bridgeObjectRetain(v35);
    swift_bridgeObjectRetain(v39);
    swift_bridgeObjectRetain(v40);
  }
  else
  {
    v41 = *(_OWORD *)(a2 + 424);
    *(_OWORD *)(a1 + 408) = *(_OWORD *)(a2 + 408);
    *(_OWORD *)(a1 + 424) = v41;
    v42 = *(_OWORD *)(a2 + 456);
    *(_OWORD *)(a1 + 440) = *(_OWORD *)(a2 + 440);
    *(_OWORD *)(a1 + 456) = v42;
    v43 = *(_OWORD *)(a2 + 360);
    *(_OWORD *)v33 = *(_OWORD *)v34;
    *(_OWORD *)(a1 + 360) = v43;
    v44 = *(_OWORD *)(a2 + 392);
    *(_OWORD *)(a1 + 376) = *(_OWORD *)(a2 + 376);
    *(_OWORD *)(a1 + 392) = v44;
  }
  *(_BYTE *)(a1 + 472) = *(_BYTE *)(a2 + 472);
  v45 = *(_QWORD *)(a2 + 520);
  if (v45)
  {
    v46 = *(_QWORD *)(a2 + 480);
    v47 = *(_QWORD *)(a2 + 488);
    *(_QWORD *)(a1 + 480) = v46;
    *(_QWORD *)(a1 + 488) = v47;
    *(_BYTE *)(a1 + 496) = *(_BYTE *)(a2 + 496);
    *(_QWORD *)(a1 + 500) = *(_QWORD *)(a2 + 500);
    *(_BYTE *)(a1 + 508) = *(_BYTE *)(a2 + 508);
    *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
    *(_QWORD *)(a1 + 520) = v45;
    v48 = *(_QWORD *)(a2 + 528);
    *(_QWORD *)(a1 + 528) = v48;
    swift_bridgeObjectRetain(v46);
    swift_bridgeObjectRetain(v45);
    swift_bridgeObjectRetain(v48);
    v49 = *(_QWORD *)(a2 + 576);
    if (v49)
    {
LABEL_18:
      v50 = *(_QWORD *)(a2 + 536);
      *(_QWORD *)(a1 + 536) = v50;
      *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
      *(_BYTE *)(a1 + 552) = *(_BYTE *)(a2 + 552);
      *(_QWORD *)(a1 + 556) = *(_QWORD *)(a2 + 556);
      *(_BYTE *)(a1 + 564) = *(_BYTE *)(a2 + 564);
      *(_QWORD *)(a1 + 568) = *(_QWORD *)(a2 + 568);
      *(_QWORD *)(a1 + 576) = v49;
      v51 = *(_QWORD *)(a2 + 584);
      *(_QWORD *)(a1 + 584) = v51;
      swift_bridgeObjectRetain(v50);
      swift_bridgeObjectRetain(v49);
      swift_bridgeObjectRetain(v51);
      goto LABEL_21;
    }
  }
  else
  {
    v52 = *(_OWORD *)(a2 + 496);
    *(_OWORD *)(a1 + 480) = *(_OWORD *)(a2 + 480);
    *(_OWORD *)(a1 + 496) = v52;
    *(_OWORD *)(a1 + 512) = *(_OWORD *)(a2 + 512);
    *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
    v49 = *(_QWORD *)(a2 + 576);
    if (v49)
      goto LABEL_18;
  }
  v53 = *(_OWORD *)(a2 + 552);
  *(_OWORD *)(a1 + 536) = *(_OWORD *)(a2 + 536);
  *(_OWORD *)(a1 + 552) = v53;
  *(_OWORD *)(a1 + 568) = *(_OWORD *)(a2 + 568);
  *(_QWORD *)(a1 + 584) = *(_QWORD *)(a2 + 584);
LABEL_21:
  v54 = *(_QWORD *)(a2 + 592);
  *(_QWORD *)(a1 + 592) = v54;
  v55 = *(unsigned __int8 *)(a2 + 616);
  swift_bridgeObjectRetain(v54);
  if (v55 == 255)
  {
    *(_OWORD *)(a1 + 600) = *(_OWORD *)(a2 + 600);
    *(_BYTE *)(a1 + 616) = *(_BYTE *)(a2 + 616);
  }
  else
  {
    v56 = v55 & 1;
    v57 = *(_QWORD *)(a2 + 600);
    v58 = *(_QWORD *)(a2 + 608);
    sub_1004C4914(v57, v58, v56);
    *(_QWORD *)(a1 + 600) = v57;
    *(_QWORD *)(a1 + 608) = v58;
    *(_BYTE *)(a1 + 616) = v56;
  }
  *(_DWORD *)(a1 + 620) = *(_DWORD *)(a2 + 620);
  *(_BYTE *)(a1 + 624) = *(_BYTE *)(a2 + 624);
  *(_WORD *)(a1 + 625) = *(_WORD *)(a2 + 625);
  *(_QWORD *)(a1 + 632) = *(_QWORD *)(a2 + 632);
  *(_BYTE *)(a1 + 640) = *(_BYTE *)(a2 + 640);
  *(_QWORD *)(a1 + 648) = *(_QWORD *)(a2 + 648);
  *(_BYTE *)(a1 + 656) = *(_BYTE *)(a2 + 656);
  v59 = (_QWORD *)(a1 + 664);
  v60 = (_QWORD *)(a2 + 664);
  v61 = *(_QWORD *)(a2 + 760);
  if (v61)
  {
    *v59 = *v60;
    *(_BYTE *)(a1 + 672) = *(_BYTE *)(a2 + 672);
    *(_DWORD *)(a1 + 680) = *(_DWORD *)(a2 + 680);
    *(_BYTE *)(a1 + 684) = *(_BYTE *)(a2 + 684);
    *(_QWORD *)(a1 + 688) = *(_QWORD *)(a2 + 688);
    *(_BYTE *)(a1 + 696) = *(_BYTE *)(a2 + 696);
    *(_DWORD *)(a1 + 700) = *(_DWORD *)(a2 + 700);
    *(_QWORD *)(a1 + 704) = *(_QWORD *)(a2 + 704);
    v62 = *(_QWORD *)(a2 + 712);
    *(_QWORD *)(a1 + 712) = v62;
    *(_OWORD *)(a1 + 720) = *(_OWORD *)(a2 + 720);
    v63 = *(_QWORD *)(a2 + 736);
    *(_QWORD *)(a1 + 736) = v63;
    *(_DWORD *)(a1 + 744) = *(_DWORD *)(a2 + 744);
    v64 = *(_QWORD *)(a2 + 752);
    *(_QWORD *)(a1 + 752) = v64;
    *(_QWORD *)(a1 + 760) = v61;
    v65 = *(_QWORD *)(a2 + 768);
    *(_QWORD *)(a1 + 768) = v65;
    swift_bridgeObjectRetain(v62);
    swift_bridgeObjectRetain(v63);
    swift_bridgeObjectRetain(v64);
    swift_bridgeObjectRetain(v61);
    swift_bridgeObjectRetain(v65);
  }
  else
  {
    v66 = *(_OWORD *)(a2 + 744);
    *(_OWORD *)(a1 + 728) = *(_OWORD *)(a2 + 728);
    *(_OWORD *)(a1 + 744) = v66;
    *(_OWORD *)(a1 + 760) = *(_OWORD *)(a2 + 760);
    v67 = *(_OWORD *)(a2 + 680);
    *(_OWORD *)v59 = *(_OWORD *)v60;
    *(_OWORD *)(a1 + 680) = v67;
    v68 = *(_OWORD *)(a2 + 712);
    *(_OWORD *)(a1 + 696) = *(_OWORD *)(a2 + 696);
    *(_OWORD *)(a1 + 712) = v68;
  }
  *(_QWORD *)(a1 + 776) = *(_QWORD *)(a2 + 776);
  *(_BYTE *)(a1 + 784) = *(_BYTE *)(a2 + 784);
  *(_QWORD *)(a1 + 792) = *(_QWORD *)(a2 + 792);
  *(_BYTE *)(a1 + 800) = *(_BYTE *)(a2 + 800);
  *(_QWORD *)(a1 + 808) = *(_QWORD *)(a2 + 808);
  *(_BYTE *)(a1 + 816) = *(_BYTE *)(a2 + 816);
  *(_BYTE *)(a1 + 832) = *(_BYTE *)(a2 + 832);
  *(_QWORD *)(a1 + 824) = *(_QWORD *)(a2 + 824);
  v69 = *(_QWORD *)(a2 + 840);
  *(_QWORD *)(a1 + 840) = v69;
  *(_DWORD *)(a1 + 848) = *(_DWORD *)(a2 + 848);
  *(_BYTE *)(a1 + 864) = *(_BYTE *)(a2 + 864);
  *(_QWORD *)(a1 + 856) = *(_QWORD *)(a2 + 856);
  v70 = *(_QWORD *)(a2 + 872);
  *(_QWORD *)(a1 + 872) = v70;
  swift_bridgeObjectRetain(v69);
  swift_bridgeObjectRetain(v70);
  return a1;
}

uint64_t assignWithCopy for CRLWPShapePresetData(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 *v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  uint64_t v60;
  __int128 v61;
  uint64_t v62;
  uint64_t v63;
  _OWORD *v64;
  _OWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  __int128 v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  _DWORD *v101;
  int *v102;
  uint64_t v103;
  int v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  int v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  _OWORD *v132;
  __int128 *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  _OWORD *v149;
  __int128 *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  uint64_t v166;
  __int128 *v167;
  __int128 *v168;
  int v169;
  char v170;
  __int128 v171;
  char v172;
  uint64_t v173;
  unint64_t v174;
  uint64_t v175;
  unint64_t v176;
  char v177;
  char v178;
  uint64_t v179;
  unint64_t v180;
  int v181;
  uint64_t v182;
  uint64_t v183;
  _QWORD *v184;
  uint64_t *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  __int128 v201;
  __int128 v202;
  __int128 v203;
  __int128 v204;
  __int128 v205;
  __int128 v206;
  __int128 v207;
  __int128 v208;
  __int128 v209;
  __int128 v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;

  v4 = a2[12];
  if (*(_QWORD *)(a1 + 96))
  {
    if (v4)
    {
      v5 = *a2;
      *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
      *(_QWORD *)a1 = v5;
      LODWORD(v5) = *((_DWORD *)a2 + 4);
      *(_BYTE *)(a1 + 20) = *((_BYTE *)a2 + 20);
      *(_DWORD *)(a1 + 16) = v5;
      v6 = a2[3];
      *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
      *(_QWORD *)(a1 + 24) = v6;
      *(_DWORD *)(a1 + 36) = *((_DWORD *)a2 + 9);
      *(_DWORD *)(a1 + 40) = *((_DWORD *)a2 + 10);
      *(_DWORD *)(a1 + 44) = *((_DWORD *)a2 + 11);
      v7 = a2[6];
      *(_QWORD *)(a1 + 48) = v7;
      swift_bridgeObjectRetain(v7);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 56) = *((_DWORD *)a2 + 14);
      *(_DWORD *)(a1 + 60) = *((_DWORD *)a2 + 15);
      *(_DWORD *)(a1 + 64) = *((_DWORD *)a2 + 16);
      *(_DWORD *)(a1 + 68) = *((_DWORD *)a2 + 17);
      v8 = a2[9];
      *(_QWORD *)(a1 + 72) = v8;
      swift_bridgeObjectRetain(v8);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 80) = *((_DWORD *)a2 + 20);
      v9 = a2[11];
      *(_QWORD *)(a1 + 88) = v9;
      swift_bridgeObjectRetain(v9);
      swift_bridgeObjectRelease();
      v10 = a2[12];
      *(_QWORD *)(a1 + 96) = v10;
      swift_bridgeObjectRetain(v10);
      swift_bridgeObjectRelease();
      v11 = (_OWORD *)(a1 + 144);
      v12 = *(_QWORD *)(a1 + 144);
      *(_DWORD *)(a1 + 104) = *((_DWORD *)a2 + 26);
      v13 = a2[14];
      *(_BYTE *)(a1 + 120) = *((_BYTE *)a2 + 120);
      *(_QWORD *)(a1 + 112) = v13;
      v14 = a2[16];
      *(_BYTE *)(a1 + 136) = *((_BYTE *)a2 + 136);
      *(_QWORD *)(a1 + 128) = v14;
      *(_DWORD *)(a1 + 140) = *((_DWORD *)a2 + 35);
      v16 = a2 + 18;
      v15 = a2[18];
      if (v12)
      {
        if (v15)
        {
          *(_QWORD *)(a1 + 144) = v15;
          swift_bridgeObjectRetain(v15);
          swift_bridgeObjectRelease();
          *(_DWORD *)(a1 + 152) = *((_DWORD *)a2 + 38);
          v17 = a2[20];
          *(_QWORD *)(a1 + 160) = v17;
          swift_bridgeObjectRetain(v17);
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_1008BAD90((_QWORD *)(a1 + 144));
          v52 = a2[20];
          *v11 = *v16;
          *(_QWORD *)(a1 + 160) = v52;
        }
      }
      else if (v15)
      {
        *(_QWORD *)(a1 + 144) = v15;
        *(_DWORD *)(a1 + 152) = *((_DWORD *)a2 + 38);
        v40 = a2[20];
        *(_QWORD *)(a1 + 160) = v40;
        swift_bridgeObjectRetain(v15);
        swift_bridgeObjectRetain(v40);
      }
      else
      {
        v61 = *v16;
        *(_QWORD *)(a1 + 160) = a2[20];
        *v11 = v61;
      }
      v62 = a2[21];
      *(_BYTE *)(a1 + 176) = *((_BYTE *)a2 + 176);
      *(_QWORD *)(a1 + 168) = v62;
      v63 = a2[23];
      *(_QWORD *)(a1 + 184) = v63;
      swift_bridgeObjectRetain(v63);
      swift_bridgeObjectRelease();
      v64 = (_OWORD *)(a1 + 192);
      v65 = a2 + 24;
      v66 = a2[25];
      if (*(_QWORD *)(a1 + 200))
      {
        if (v66)
        {
          *(_QWORD *)(a1 + 192) = a2[24];
          v67 = a2[25];
          *(_QWORD *)(a1 + 200) = v67;
          swift_bridgeObjectRetain(v67);
          swift_bridgeObjectRelease();
          *(_DWORD *)(a1 + 208) = *((_DWORD *)a2 + 52);
          *(_BYTE *)(a1 + 212) = *((_BYTE *)a2 + 212);
          v68 = a2[27];
          *(_QWORD *)(a1 + 216) = v68;
          swift_bridgeObjectRetain(v68);
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_1008BADC0(a1 + 192);
          v71 = *((_OWORD *)a2 + 13);
          *v64 = *v65;
          *(_OWORD *)(a1 + 208) = v71;
        }
      }
      else if (v66)
      {
        *(_QWORD *)(a1 + 192) = a2[24];
        v69 = a2[25];
        *(_QWORD *)(a1 + 200) = v69;
        *(_DWORD *)(a1 + 208) = *((_DWORD *)a2 + 52);
        *(_BYTE *)(a1 + 212) = *((_BYTE *)a2 + 212);
        v70 = a2[27];
        *(_QWORD *)(a1 + 216) = v70;
        swift_bridgeObjectRetain(v69);
        swift_bridgeObjectRetain(v70);
      }
      else
      {
        v72 = *((_OWORD *)a2 + 13);
        *v64 = *v65;
        *(_OWORD *)(a1 + 208) = v72;
      }
      v73 = a2[28];
      *(_QWORD *)(a1 + 224) = v73;
      swift_bridgeObjectRetain(v73);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1009AF5B4((_QWORD *)a1);
      v30 = *((_OWORD *)a2 + 1);
      v29 = *((_OWORD *)a2 + 2);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v30;
      *(_OWORD *)(a1 + 32) = v29;
      v31 = *((_OWORD *)a2 + 6);
      v33 = *((_OWORD *)a2 + 3);
      v32 = *((_OWORD *)a2 + 4);
      *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
      *(_OWORD *)(a1 + 96) = v31;
      *(_OWORD *)(a1 + 48) = v33;
      *(_OWORD *)(a1 + 64) = v32;
      v34 = *((_OWORD *)a2 + 10);
      v36 = *((_OWORD *)a2 + 7);
      v35 = *((_OWORD *)a2 + 8);
      *(_OWORD *)(a1 + 144) = *((_OWORD *)a2 + 9);
      *(_OWORD *)(a1 + 160) = v34;
      *(_OWORD *)(a1 + 112) = v36;
      *(_OWORD *)(a1 + 128) = v35;
      v38 = *((_OWORD *)a2 + 12);
      v37 = *((_OWORD *)a2 + 13);
      v39 = *((_OWORD *)a2 + 11);
      *(_QWORD *)(a1 + 224) = a2[28];
      *(_OWORD *)(a1 + 192) = v38;
      *(_OWORD *)(a1 + 208) = v37;
      *(_OWORD *)(a1 + 176) = v39;
    }
  }
  else if (v4)
  {
    v18 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    *(_QWORD *)a1 = v18;
    LODWORD(v18) = *((_DWORD *)a2 + 4);
    *(_BYTE *)(a1 + 20) = *((_BYTE *)a2 + 20);
    *(_DWORD *)(a1 + 16) = v18;
    v19 = a2[3];
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    *(_QWORD *)(a1 + 24) = v19;
    *(_DWORD *)(a1 + 36) = *((_DWORD *)a2 + 9);
    *(_DWORD *)(a1 + 40) = *((_DWORD *)a2 + 10);
    *(_DWORD *)(a1 + 44) = *((_DWORD *)a2 + 11);
    v20 = a2[6];
    *(_QWORD *)(a1 + 48) = v20;
    *(_DWORD *)(a1 + 56) = *((_DWORD *)a2 + 14);
    *(_DWORD *)(a1 + 60) = *((_DWORD *)a2 + 15);
    *(_DWORD *)(a1 + 64) = *((_DWORD *)a2 + 16);
    *(_DWORD *)(a1 + 68) = *((_DWORD *)a2 + 17);
    v21 = a2[9];
    *(_QWORD *)(a1 + 72) = v21;
    *(_DWORD *)(a1 + 80) = *((_DWORD *)a2 + 20);
    v22 = a2[11];
    *(_QWORD *)(a1 + 88) = v22;
    v23 = a2[12];
    *(_QWORD *)(a1 + 96) = v23;
    *(_DWORD *)(a1 + 104) = *((_DWORD *)a2 + 26);
    v24 = a2[14];
    *(_BYTE *)(a1 + 120) = *((_BYTE *)a2 + 120);
    *(_QWORD *)(a1 + 112) = v24;
    v25 = a2[16];
    *(_BYTE *)(a1 + 136) = *((_BYTE *)a2 + 136);
    *(_QWORD *)(a1 + 128) = v25;
    *(_DWORD *)(a1 + 140) = *((_DWORD *)a2 + 35);
    v27 = (__int128 *)(a2 + 18);
    v26 = a2[18];
    swift_bridgeObjectRetain(v20);
    swift_bridgeObjectRetain(v21);
    swift_bridgeObjectRetain(v22);
    swift_bridgeObjectRetain(v23);
    if (v26)
    {
      *(_QWORD *)(a1 + 144) = v26;
      *(_DWORD *)(a1 + 152) = *((_DWORD *)a2 + 38);
      v28 = a2[20];
      *(_QWORD *)(a1 + 160) = v28;
      swift_bridgeObjectRetain(v26);
      swift_bridgeObjectRetain(v28);
    }
    else
    {
      v53 = *v27;
      *(_QWORD *)(a1 + 160) = a2[20];
      *(_OWORD *)(a1 + 144) = v53;
    }
    v54 = a2[21];
    *(_BYTE *)(a1 + 176) = *((_BYTE *)a2 + 176);
    *(_QWORD *)(a1 + 168) = v54;
    v55 = a2[23];
    *(_QWORD *)(a1 + 184) = v55;
    v56 = a2[25];
    swift_bridgeObjectRetain(v55);
    if (v56)
    {
      *(_QWORD *)(a1 + 192) = a2[24];
      v57 = a2[25];
      *(_QWORD *)(a1 + 200) = v57;
      *(_DWORD *)(a1 + 208) = *((_DWORD *)a2 + 52);
      *(_BYTE *)(a1 + 212) = *((_BYTE *)a2 + 212);
      v58 = a2[27];
      *(_QWORD *)(a1 + 216) = v58;
      swift_bridgeObjectRetain(v57);
      swift_bridgeObjectRetain(v58);
    }
    else
    {
      v59 = *((_OWORD *)a2 + 13);
      *(_OWORD *)(a1 + 192) = *((_OWORD *)a2 + 12);
      *(_OWORD *)(a1 + 208) = v59;
    }
    v60 = a2[28];
    *(_QWORD *)(a1 + 224) = v60;
    swift_bridgeObjectRetain(v60);
  }
  else
  {
    v41 = *(_OWORD *)a2;
    v42 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    *(_OWORD *)(a1 + 32) = v42;
    *(_OWORD *)a1 = v41;
    v43 = *((_OWORD *)a2 + 3);
    v44 = *((_OWORD *)a2 + 4);
    v45 = *((_OWORD *)a2 + 6);
    *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
    *(_OWORD *)(a1 + 96) = v45;
    *(_OWORD *)(a1 + 48) = v43;
    *(_OWORD *)(a1 + 64) = v44;
    v46 = *((_OWORD *)a2 + 7);
    v47 = *((_OWORD *)a2 + 8);
    v48 = *((_OWORD *)a2 + 10);
    *(_OWORD *)(a1 + 144) = *((_OWORD *)a2 + 9);
    *(_OWORD *)(a1 + 160) = v48;
    *(_OWORD *)(a1 + 112) = v46;
    *(_OWORD *)(a1 + 128) = v47;
    v49 = *((_OWORD *)a2 + 11);
    v50 = *((_OWORD *)a2 + 12);
    v51 = *((_OWORD *)a2 + 13);
    *(_QWORD *)(a1 + 224) = a2[28];
    *(_OWORD *)(a1 + 192) = v50;
    *(_OWORD *)(a1 + 208) = v51;
    *(_OWORD *)(a1 + 176) = v49;
  }
  v74 = (_QWORD *)(a1 + 232);
  v75 = a2 + 29;
  v76 = a2[41];
  if (*(_QWORD *)(a1 + 328))
  {
    if (v76)
    {
      v77 = *v75;
      *(_BYTE *)(a1 + 240) = *((_BYTE *)a2 + 240);
      *v74 = v77;
      LODWORD(v77) = *((_DWORD *)a2 + 62);
      *(_BYTE *)(a1 + 252) = *((_BYTE *)a2 + 252);
      *(_DWORD *)(a1 + 248) = v77;
      v78 = a2[32];
      *(_BYTE *)(a1 + 264) = *((_BYTE *)a2 + 264);
      *(_QWORD *)(a1 + 256) = v78;
      *(_DWORD *)(a1 + 268) = *((_DWORD *)a2 + 67);
      *(_DWORD *)(a1 + 272) = *((_DWORD *)a2 + 68);
      *(_DWORD *)(a1 + 276) = *((_DWORD *)a2 + 69);
      v79 = a2[35];
      *(_QWORD *)(a1 + 280) = v79;
      swift_bridgeObjectRetain(v79);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 288) = *((_DWORD *)a2 + 72);
      *(_DWORD *)(a1 + 292) = *((_DWORD *)a2 + 73);
      *(_DWORD *)(a1 + 296) = *((_DWORD *)a2 + 74);
      *(_DWORD *)(a1 + 300) = *((_DWORD *)a2 + 75);
      v80 = a2[38];
      *(_QWORD *)(a1 + 304) = v80;
      swift_bridgeObjectRetain(v80);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 312) = *((_DWORD *)a2 + 78);
      v81 = a2[40];
      *(_QWORD *)(a1 + 320) = v81;
      swift_bridgeObjectRetain(v81);
      swift_bridgeObjectRelease();
      v82 = a2[41];
      *(_QWORD *)(a1 + 328) = v82;
      swift_bridgeObjectRetain(v82);
      swift_bridgeObjectRelease();
      v83 = a2[42];
      *(_QWORD *)(a1 + 336) = v83;
      swift_bridgeObjectRetain(v83);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1007C50EC((_QWORD *)(a1 + 232));
      v92 = *(_OWORD *)(a2 + 31);
      v91 = *(_OWORD *)(a2 + 33);
      *(_OWORD *)v74 = *(_OWORD *)v75;
      *(_OWORD *)(a1 + 248) = v92;
      *(_OWORD *)(a1 + 264) = v91;
      v93 = *(_OWORD *)(a2 + 41);
      v95 = *(_OWORD *)(a2 + 35);
      v94 = *(_OWORD *)(a2 + 37);
      *(_OWORD *)(a1 + 312) = *(_OWORD *)(a2 + 39);
      *(_OWORD *)(a1 + 328) = v93;
      *(_OWORD *)(a1 + 280) = v95;
      *(_OWORD *)(a1 + 296) = v94;
    }
  }
  else if (v76)
  {
    v84 = *v75;
    *(_BYTE *)(a1 + 240) = *((_BYTE *)a2 + 240);
    *v74 = v84;
    LODWORD(v84) = *((_DWORD *)a2 + 62);
    *(_BYTE *)(a1 + 252) = *((_BYTE *)a2 + 252);
    *(_DWORD *)(a1 + 248) = v84;
    v85 = a2[32];
    *(_BYTE *)(a1 + 264) = *((_BYTE *)a2 + 264);
    *(_QWORD *)(a1 + 256) = v85;
    *(_DWORD *)(a1 + 268) = *((_DWORD *)a2 + 67);
    *(_DWORD *)(a1 + 272) = *((_DWORD *)a2 + 68);
    *(_DWORD *)(a1 + 276) = *((_DWORD *)a2 + 69);
    v86 = a2[35];
    *(_QWORD *)(a1 + 280) = v86;
    *(_DWORD *)(a1 + 288) = *((_DWORD *)a2 + 72);
    *(_DWORD *)(a1 + 292) = *((_DWORD *)a2 + 73);
    *(_DWORD *)(a1 + 296) = *((_DWORD *)a2 + 74);
    *(_DWORD *)(a1 + 300) = *((_DWORD *)a2 + 75);
    v87 = a2[38];
    *(_QWORD *)(a1 + 304) = v87;
    *(_DWORD *)(a1 + 312) = *((_DWORD *)a2 + 78);
    v88 = a2[40];
    *(_QWORD *)(a1 + 320) = v88;
    v89 = a2[41];
    *(_QWORD *)(a1 + 328) = v89;
    v90 = a2[42];
    *(_QWORD *)(a1 + 336) = v90;
    swift_bridgeObjectRetain(v86);
    swift_bridgeObjectRetain(v87);
    swift_bridgeObjectRetain(v88);
    swift_bridgeObjectRetain(v89);
    swift_bridgeObjectRetain(v90);
  }
  else
  {
    v96 = *(_OWORD *)v75;
    v97 = *(_OWORD *)(a2 + 33);
    *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 31);
    *(_OWORD *)(a1 + 264) = v97;
    *(_OWORD *)v74 = v96;
    v98 = *(_OWORD *)(a2 + 35);
    v99 = *(_OWORD *)(a2 + 37);
    v100 = *(_OWORD *)(a2 + 41);
    *(_OWORD *)(a1 + 312) = *(_OWORD *)(a2 + 39);
    *(_OWORD *)(a1 + 328) = v100;
    *(_OWORD *)(a1 + 280) = v98;
    *(_OWORD *)(a1 + 296) = v99;
  }
  v101 = (_DWORD *)(a1 + 344);
  v102 = (int *)(a2 + 43);
  v103 = a2[53];
  if (*(_QWORD *)(a1 + 424))
  {
    if (v103)
    {
      v104 = *v102;
      *(_BYTE *)(a1 + 348) = *((_BYTE *)a2 + 348);
      *v101 = v104;
      v105 = a2[44];
      *(_BYTE *)(a1 + 360) = *((_BYTE *)a2 + 360);
      *(_QWORD *)(a1 + 352) = v105;
      *(_DWORD *)(a1 + 364) = *((_DWORD *)a2 + 91);
      *(_DWORD *)(a1 + 368) = *((_DWORD *)a2 + 92);
      *(_DWORD *)(a1 + 372) = *((_DWORD *)a2 + 93);
      v106 = a2[47];
      *(_QWORD *)(a1 + 376) = v106;
      swift_bridgeObjectRetain(v106);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 384) = *((_DWORD *)a2 + 96);
      *(_DWORD *)(a1 + 388) = *((_DWORD *)a2 + 97);
      *(_DWORD *)(a1 + 392) = *((_DWORD *)a2 + 98);
      *(_DWORD *)(a1 + 396) = *((_DWORD *)a2 + 99);
      v107 = a2[50];
      *(_QWORD *)(a1 + 400) = v107;
      swift_bridgeObjectRetain(v107);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 408) = *((_DWORD *)a2 + 102);
      v108 = a2[52];
      *(_QWORD *)(a1 + 416) = v108;
      swift_bridgeObjectRetain(v108);
      swift_bridgeObjectRelease();
      v109 = a2[53];
      *(_QWORD *)(a1 + 424) = v109;
      swift_bridgeObjectRetain(v109);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 432) = *((_DWORD *)a2 + 108);
      *(_DWORD *)(a1 + 436) = *((_DWORD *)a2 + 109);
      *(_DWORD *)(a1 + 440) = *((_DWORD *)a2 + 110);
      *(_DWORD *)(a1 + 444) = *((_DWORD *)a2 + 111);
      *(_DWORD *)(a1 + 448) = *((_DWORD *)a2 + 112);
      v110 = a2[57];
      *(_QWORD *)(a1 + 456) = v110;
      swift_bridgeObjectRetain(v110);
      swift_bridgeObjectRelease();
      v111 = a2[58];
      *(_QWORD *)(a1 + 464) = v111;
      swift_bridgeObjectRetain(v111);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1009AF5E8((_QWORD *)(a1 + 344));
      v120 = *(_OWORD *)(a2 + 49);
      v122 = *(_OWORD *)v102;
      v121 = *(_OWORD *)(a2 + 45);
      *(_OWORD *)(a1 + 376) = *(_OWORD *)(a2 + 47);
      *(_OWORD *)(a1 + 392) = v120;
      *(_OWORD *)v101 = v122;
      *(_OWORD *)(a1 + 360) = v121;
      v123 = *(_OWORD *)(a2 + 57);
      v125 = *(_OWORD *)(a2 + 51);
      v124 = *(_OWORD *)(a2 + 53);
      *(_OWORD *)(a1 + 440) = *(_OWORD *)(a2 + 55);
      *(_OWORD *)(a1 + 456) = v123;
      *(_OWORD *)(a1 + 408) = v125;
      *(_OWORD *)(a1 + 424) = v124;
    }
  }
  else if (v103)
  {
    v112 = *v102;
    *(_BYTE *)(a1 + 348) = *((_BYTE *)a2 + 348);
    *v101 = v112;
    v113 = a2[44];
    *(_BYTE *)(a1 + 360) = *((_BYTE *)a2 + 360);
    *(_QWORD *)(a1 + 352) = v113;
    *(_DWORD *)(a1 + 364) = *((_DWORD *)a2 + 91);
    *(_DWORD *)(a1 + 368) = *((_DWORD *)a2 + 92);
    *(_DWORD *)(a1 + 372) = *((_DWORD *)a2 + 93);
    v114 = a2[47];
    *(_QWORD *)(a1 + 376) = v114;
    *(_DWORD *)(a1 + 384) = *((_DWORD *)a2 + 96);
    *(_DWORD *)(a1 + 388) = *((_DWORD *)a2 + 97);
    *(_DWORD *)(a1 + 392) = *((_DWORD *)a2 + 98);
    *(_DWORD *)(a1 + 396) = *((_DWORD *)a2 + 99);
    v115 = a2[50];
    *(_QWORD *)(a1 + 400) = v115;
    *(_DWORD *)(a1 + 408) = *((_DWORD *)a2 + 102);
    v116 = a2[52];
    *(_QWORD *)(a1 + 416) = v116;
    v117 = a2[53];
    *(_QWORD *)(a1 + 424) = v117;
    *(_DWORD *)(a1 + 432) = *((_DWORD *)a2 + 108);
    *(_DWORD *)(a1 + 436) = *((_DWORD *)a2 + 109);
    *(_DWORD *)(a1 + 440) = *((_DWORD *)a2 + 110);
    *(_DWORD *)(a1 + 444) = *((_DWORD *)a2 + 111);
    *(_DWORD *)(a1 + 448) = *((_DWORD *)a2 + 112);
    v118 = a2[57];
    *(_QWORD *)(a1 + 456) = v118;
    v119 = a2[58];
    *(_QWORD *)(a1 + 464) = v119;
    swift_bridgeObjectRetain(v114);
    swift_bridgeObjectRetain(v115);
    swift_bridgeObjectRetain(v116);
    swift_bridgeObjectRetain(v117);
    swift_bridgeObjectRetain(v118);
    swift_bridgeObjectRetain(v119);
  }
  else
  {
    v126 = *(_OWORD *)v102;
    v127 = *(_OWORD *)(a2 + 45);
    v128 = *(_OWORD *)(a2 + 49);
    *(_OWORD *)(a1 + 376) = *(_OWORD *)(a2 + 47);
    *(_OWORD *)(a1 + 392) = v128;
    *(_OWORD *)v101 = v126;
    *(_OWORD *)(a1 + 360) = v127;
    v129 = *(_OWORD *)(a2 + 51);
    v130 = *(_OWORD *)(a2 + 53);
    v131 = *(_OWORD *)(a2 + 57);
    *(_OWORD *)(a1 + 440) = *(_OWORD *)(a2 + 55);
    *(_OWORD *)(a1 + 456) = v131;
    *(_OWORD *)(a1 + 408) = v129;
    *(_OWORD *)(a1 + 424) = v130;
  }
  *(_BYTE *)(a1 + 472) = *((_BYTE *)a2 + 472);
  v132 = (_OWORD *)(a1 + 480);
  v133 = (__int128 *)(a2 + 60);
  v134 = a2[65];
  if (*(_QWORD *)(a1 + 520))
  {
    if (v134)
    {
      v135 = a2[60];
      *(_QWORD *)(a1 + 480) = v135;
      swift_bridgeObjectRetain(v135);
      swift_bridgeObjectRelease();
      v136 = a2[61];
      *(_BYTE *)(a1 + 496) = *((_BYTE *)a2 + 496);
      *(_QWORD *)(a1 + 488) = v136;
      *(_DWORD *)(a1 + 500) = *((_DWORD *)a2 + 125);
      *(_DWORD *)(a1 + 504) = *((_DWORD *)a2 + 126);
      *(_BYTE *)(a1 + 508) = *((_BYTE *)a2 + 508);
      *(_QWORD *)(a1 + 512) = a2[64];
      v137 = a2[65];
      *(_QWORD *)(a1 + 520) = v137;
      swift_bridgeObjectRetain(v137);
      swift_bridgeObjectRelease();
      v138 = a2[66];
      *(_QWORD *)(a1 + 528) = v138;
      swift_bridgeObjectRetain(v138);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100C8B16C((_QWORD *)(a1 + 480));
      v144 = *((_OWORD *)a2 + 31);
      v143 = *((_OWORD *)a2 + 32);
      v145 = *v133;
      *(_QWORD *)(a1 + 528) = a2[66];
      *(_OWORD *)(a1 + 496) = v144;
      *(_OWORD *)(a1 + 512) = v143;
      *v132 = v145;
    }
  }
  else if (v134)
  {
    v139 = a2[60];
    *(_QWORD *)(a1 + 480) = v139;
    v140 = a2[61];
    *(_BYTE *)(a1 + 496) = *((_BYTE *)a2 + 496);
    *(_QWORD *)(a1 + 488) = v140;
    *(_QWORD *)(a1 + 500) = *(uint64_t *)((char *)a2 + 500);
    *(_BYTE *)(a1 + 508) = *((_BYTE *)a2 + 508);
    *(_QWORD *)(a1 + 512) = a2[64];
    v141 = a2[65];
    *(_QWORD *)(a1 + 520) = v141;
    v142 = a2[66];
    *(_QWORD *)(a1 + 528) = v142;
    swift_bridgeObjectRetain(v139);
    swift_bridgeObjectRetain(v141);
    swift_bridgeObjectRetain(v142);
  }
  else
  {
    v146 = *v133;
    v147 = *((_OWORD *)a2 + 31);
    v148 = *((_OWORD *)a2 + 32);
    *(_QWORD *)(a1 + 528) = a2[66];
    *(_OWORD *)(a1 + 496) = v147;
    *(_OWORD *)(a1 + 512) = v148;
    *v132 = v146;
  }
  v149 = (_OWORD *)(a1 + 536);
  v150 = (__int128 *)(a2 + 67);
  v151 = a2[72];
  if (*(_QWORD *)(a1 + 576))
  {
    if (v151)
    {
      v152 = a2[67];
      *(_QWORD *)(a1 + 536) = v152;
      swift_bridgeObjectRetain(v152);
      swift_bridgeObjectRelease();
      v153 = a2[68];
      *(_BYTE *)(a1 + 552) = *((_BYTE *)a2 + 552);
      *(_QWORD *)(a1 + 544) = v153;
      *(_DWORD *)(a1 + 556) = *((_DWORD *)a2 + 139);
      *(_DWORD *)(a1 + 560) = *((_DWORD *)a2 + 140);
      *(_BYTE *)(a1 + 564) = *((_BYTE *)a2 + 564);
      *(_QWORD *)(a1 + 568) = a2[71];
      v154 = a2[72];
      *(_QWORD *)(a1 + 576) = v154;
      swift_bridgeObjectRetain(v154);
      swift_bridgeObjectRelease();
      v155 = a2[73];
      *(_QWORD *)(a1 + 584) = v155;
      swift_bridgeObjectRetain(v155);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100C8B16C((_QWORD *)(a1 + 536));
      v161 = *(_OWORD *)(a2 + 69);
      v160 = *(_OWORD *)(a2 + 71);
      v162 = *v150;
      *(_QWORD *)(a1 + 584) = a2[73];
      *(_OWORD *)(a1 + 552) = v161;
      *(_OWORD *)(a1 + 568) = v160;
      *v149 = v162;
    }
  }
  else if (v151)
  {
    v156 = a2[67];
    *(_QWORD *)(a1 + 536) = v156;
    v157 = a2[68];
    *(_BYTE *)(a1 + 552) = *((_BYTE *)a2 + 552);
    *(_QWORD *)(a1 + 544) = v157;
    *(_QWORD *)(a1 + 556) = *(uint64_t *)((char *)a2 + 556);
    *(_BYTE *)(a1 + 564) = *((_BYTE *)a2 + 564);
    *(_QWORD *)(a1 + 568) = a2[71];
    v158 = a2[72];
    *(_QWORD *)(a1 + 576) = v158;
    v159 = a2[73];
    *(_QWORD *)(a1 + 584) = v159;
    swift_bridgeObjectRetain(v156);
    swift_bridgeObjectRetain(v158);
    swift_bridgeObjectRetain(v159);
  }
  else
  {
    v163 = *v150;
    v164 = *(_OWORD *)(a2 + 69);
    v165 = *(_OWORD *)(a2 + 71);
    *(_QWORD *)(a1 + 584) = a2[73];
    *(_OWORD *)(a1 + 552) = v164;
    *(_OWORD *)(a1 + 568) = v165;
    *v149 = v163;
  }
  v166 = a2[74];
  *(_QWORD *)(a1 + 592) = v166;
  swift_bridgeObjectRetain(v166);
  swift_bridgeObjectRelease();
  v167 = (__int128 *)(a1 + 600);
  v168 = (__int128 *)(a2 + 75);
  v169 = *((unsigned __int8 *)a2 + 616);
  if (*(unsigned __int8 *)(a1 + 616) == 255)
  {
    if (v169 == 255)
    {
      v171 = *v168;
      *(_BYTE *)(a1 + 616) = *((_BYTE *)a2 + 616);
      *v167 = v171;
    }
    else
    {
      v178 = v169 & 1;
      v179 = a2[75];
      v180 = a2[76];
      sub_1004C4914(v179, v180, v169 & 1);
      *(_QWORD *)(a1 + 600) = v179;
      *(_QWORD *)(a1 + 608) = v180;
      *(_BYTE *)(a1 + 616) = v178;
    }
  }
  else if (v169 == 255)
  {
    sub_1007C50AC(a1 + 600);
    v170 = *((_BYTE *)a2 + 616);
    *v167 = *v168;
    *(_BYTE *)(a1 + 616) = v170;
  }
  else
  {
    v172 = v169 & 1;
    v173 = a2[75];
    v174 = a2[76];
    sub_1004C4914(v173, v174, v169 & 1);
    v175 = *(_QWORD *)(a1 + 600);
    v176 = *(_QWORD *)(a1 + 608);
    v177 = *(_BYTE *)(a1 + 616);
    *(_QWORD *)(a1 + 600) = v173;
    *(_QWORD *)(a1 + 608) = v174;
    *(_BYTE *)(a1 + 616) = v172;
    sub_1004C4230(v175, v176, v177);
  }
  v181 = *((_DWORD *)a2 + 155);
  *(_BYTE *)(a1 + 624) = *((_BYTE *)a2 + 624);
  *(_DWORD *)(a1 + 620) = v181;
  *(_BYTE *)(a1 + 625) = *((_BYTE *)a2 + 625);
  *(_BYTE *)(a1 + 626) = *((_BYTE *)a2 + 626);
  v182 = a2[79];
  *(_BYTE *)(a1 + 640) = *((_BYTE *)a2 + 640);
  *(_QWORD *)(a1 + 632) = v182;
  v183 = a2[81];
  *(_BYTE *)(a1 + 656) = *((_BYTE *)a2 + 656);
  *(_QWORD *)(a1 + 648) = v183;
  v184 = (_QWORD *)(a1 + 664);
  v185 = a2 + 83;
  v186 = a2[95];
  if (*(_QWORD *)(a1 + 760))
  {
    if (v186)
    {
      v187 = *v185;
      *(_BYTE *)(a1 + 672) = *((_BYTE *)a2 + 672);
      *v184 = v187;
      LODWORD(v187) = *((_DWORD *)a2 + 170);
      *(_BYTE *)(a1 + 684) = *((_BYTE *)a2 + 684);
      *(_DWORD *)(a1 + 680) = v187;
      v188 = a2[86];
      *(_BYTE *)(a1 + 696) = *((_BYTE *)a2 + 696);
      *(_QWORD *)(a1 + 688) = v188;
      *(_DWORD *)(a1 + 700) = *((_DWORD *)a2 + 175);
      *(_DWORD *)(a1 + 704) = *((_DWORD *)a2 + 176);
      *(_DWORD *)(a1 + 708) = *((_DWORD *)a2 + 177);
      v189 = a2[89];
      *(_QWORD *)(a1 + 712) = v189;
      swift_bridgeObjectRetain(v189);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 720) = *((_DWORD *)a2 + 180);
      *(_DWORD *)(a1 + 724) = *((_DWORD *)a2 + 181);
      *(_DWORD *)(a1 + 728) = *((_DWORD *)a2 + 182);
      *(_DWORD *)(a1 + 732) = *((_DWORD *)a2 + 183);
      v190 = a2[92];
      *(_QWORD *)(a1 + 736) = v190;
      swift_bridgeObjectRetain(v190);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 744) = *((_DWORD *)a2 + 186);
      v191 = a2[94];
      *(_QWORD *)(a1 + 752) = v191;
      swift_bridgeObjectRetain(v191);
      swift_bridgeObjectRelease();
      v192 = a2[95];
      *(_QWORD *)(a1 + 760) = v192;
      swift_bridgeObjectRetain(v192);
      swift_bridgeObjectRelease();
      v193 = a2[96];
      *(_QWORD *)(a1 + 768) = v193;
      swift_bridgeObjectRetain(v193);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1007C50EC((_QWORD *)(a1 + 664));
      v202 = *(_OWORD *)(a2 + 85);
      v201 = *(_OWORD *)(a2 + 87);
      *(_OWORD *)v184 = *(_OWORD *)v185;
      *(_OWORD *)(a1 + 680) = v202;
      *(_OWORD *)(a1 + 696) = v201;
      v203 = *(_OWORD *)(a2 + 95);
      v205 = *(_OWORD *)(a2 + 89);
      v204 = *(_OWORD *)(a2 + 91);
      *(_OWORD *)(a1 + 744) = *(_OWORD *)(a2 + 93);
      *(_OWORD *)(a1 + 760) = v203;
      *(_OWORD *)(a1 + 712) = v205;
      *(_OWORD *)(a1 + 728) = v204;
    }
  }
  else if (v186)
  {
    v194 = *v185;
    *(_BYTE *)(a1 + 672) = *((_BYTE *)a2 + 672);
    *v184 = v194;
    LODWORD(v194) = *((_DWORD *)a2 + 170);
    *(_BYTE *)(a1 + 684) = *((_BYTE *)a2 + 684);
    *(_DWORD *)(a1 + 680) = v194;
    v195 = a2[86];
    *(_BYTE *)(a1 + 696) = *((_BYTE *)a2 + 696);
    *(_QWORD *)(a1 + 688) = v195;
    *(_DWORD *)(a1 + 700) = *((_DWORD *)a2 + 175);
    *(_DWORD *)(a1 + 704) = *((_DWORD *)a2 + 176);
    *(_DWORD *)(a1 + 708) = *((_DWORD *)a2 + 177);
    v196 = a2[89];
    *(_QWORD *)(a1 + 712) = v196;
    *(_DWORD *)(a1 + 720) = *((_DWORD *)a2 + 180);
    *(_DWORD *)(a1 + 724) = *((_DWORD *)a2 + 181);
    *(_DWORD *)(a1 + 728) = *((_DWORD *)a2 + 182);
    *(_DWORD *)(a1 + 732) = *((_DWORD *)a2 + 183);
    v197 = a2[92];
    *(_QWORD *)(a1 + 736) = v197;
    *(_DWORD *)(a1 + 744) = *((_DWORD *)a2 + 186);
    v198 = a2[94];
    *(_QWORD *)(a1 + 752) = v198;
    v199 = a2[95];
    *(_QWORD *)(a1 + 760) = v199;
    v200 = a2[96];
    *(_QWORD *)(a1 + 768) = v200;
    swift_bridgeObjectRetain(v196);
    swift_bridgeObjectRetain(v197);
    swift_bridgeObjectRetain(v198);
    swift_bridgeObjectRetain(v199);
    swift_bridgeObjectRetain(v200);
  }
  else
  {
    v206 = *(_OWORD *)v185;
    v207 = *(_OWORD *)(a2 + 87);
    *(_OWORD *)(a1 + 680) = *(_OWORD *)(a2 + 85);
    *(_OWORD *)(a1 + 696) = v207;
    *(_OWORD *)v184 = v206;
    v208 = *(_OWORD *)(a2 + 89);
    v209 = *(_OWORD *)(a2 + 91);
    v210 = *(_OWORD *)(a2 + 95);
    *(_OWORD *)(a1 + 744) = *(_OWORD *)(a2 + 93);
    *(_OWORD *)(a1 + 760) = v210;
    *(_OWORD *)(a1 + 712) = v208;
    *(_OWORD *)(a1 + 728) = v209;
  }
  v211 = a2[97];
  *(_BYTE *)(a1 + 784) = *((_BYTE *)a2 + 784);
  *(_QWORD *)(a1 + 776) = v211;
  v212 = a2[99];
  *(_BYTE *)(a1 + 800) = *((_BYTE *)a2 + 800);
  *(_QWORD *)(a1 + 792) = v212;
  v213 = a2[101];
  *(_BYTE *)(a1 + 816) = *((_BYTE *)a2 + 816);
  *(_QWORD *)(a1 + 808) = v213;
  v214 = a2[103];
  *(_BYTE *)(a1 + 832) = *((_BYTE *)a2 + 832);
  *(_QWORD *)(a1 + 824) = v214;
  v215 = a2[105];
  *(_QWORD *)(a1 + 840) = v215;
  swift_bridgeObjectRetain(v215);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 848) = *((_DWORD *)a2 + 212);
  v216 = a2[107];
  *(_BYTE *)(a1 + 864) = *((_BYTE *)a2 + 864);
  *(_QWORD *)(a1 + 856) = v216;
  v217 = a2[109];
  *(_QWORD *)(a1 + 872) = v217;
  swift_bridgeObjectRetain(v217);
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *sub_100C8B16C(_QWORD *a1)
{
  destroy for CRLLineEndData(a1);
  return a1;
}

void *initializeWithTake for CRLWPShapePresetData(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x370uLL);
}

uint64_t assignWithTake for CRLWPShapePresetData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  _QWORD *v15;
  _QWORD *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _DWORD *v20;
  _DWORD *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _OWORD *v28;
  _OWORD *v29;
  int v30;
  int v31;
  uint64_t v32;
  unint64_t v33;
  _OWORD *v34;
  _OWORD *v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;

  if (!*(_QWORD *)(a1 + 96))
    goto LABEL_7;
  if (!*(_QWORD *)(a2 + 96))
  {
    sub_1009AF5B4((_QWORD *)a1);
LABEL_7:
    v6 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v6;
    *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
    v7 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v7;
    v8 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v8;
    v9 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v9;
    v10 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v10;
    v11 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v11;
    v12 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v12;
    goto LABEL_16;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 36) = *(_QWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 144);
  v5 = *(_QWORD *)(a1 + 144);
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_DWORD *)(a1 + 140) = *(_DWORD *)(a2 + 140);
  if (v5)
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 144) = v4;
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
    sub_1008BAD90((_QWORD *)(a1 + 144));
  }
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
LABEL_10:
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(a1 + 200))
  {
LABEL_14:
    v14 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v14;
    goto LABEL_15;
  }
  v13 = *(_QWORD *)(a2 + 200);
  if (!v13)
  {
    sub_1008BADC0(a1 + 192);
    goto LABEL_14;
  }
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = v13;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 208) = *(_DWORD *)(a2 + 208);
  *(_BYTE *)(a1 + 212) = *(_BYTE *)(a2 + 212);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  swift_bridgeObjectRelease();
LABEL_15:
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  swift_bridgeObjectRelease();
LABEL_16:
  v15 = (_QWORD *)(a1 + 232);
  v16 = (_QWORD *)(a2 + 232);
  if (*(_QWORD *)(a1 + 328))
  {
    if (*(_QWORD *)(a2 + 328))
    {
      *v15 = *v16;
      *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
      *(_DWORD *)(a1 + 248) = *(_DWORD *)(a2 + 248);
      *(_BYTE *)(a1 + 252) = *(_BYTE *)(a2 + 252);
      *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
      *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
      *(_DWORD *)(a1 + 268) = *(_DWORD *)(a2 + 268);
      *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
      *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
      *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 312) = *(_DWORD *)(a2 + 312);
      *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
    sub_1007C50EC((_QWORD *)(a1 + 232));
  }
  v17 = *(_OWORD *)(a2 + 312);
  *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 312) = v17;
  *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
  v18 = *(_OWORD *)(a2 + 248);
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *(_OWORD *)(a1 + 248) = v18;
  v19 = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 280) = v19;
LABEL_21:
  v20 = (_DWORD *)(a1 + 344);
  v21 = (_DWORD *)(a2 + 344);
  if (*(_QWORD *)(a1 + 424))
  {
    if (*(_QWORD *)(a2 + 424))
    {
      *v20 = *v21;
      *(_BYTE *)(a1 + 348) = *(_BYTE *)(a2 + 348);
      *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
      *(_BYTE *)(a1 + 360) = *(_BYTE *)(a2 + 360);
      *(_DWORD *)(a1 + 364) = *(_DWORD *)(a2 + 364);
      *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
      *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
      *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 408) = *(_DWORD *)(a2 + 408);
      *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
      *(_DWORD *)(a1 + 448) = *(_DWORD *)(a2 + 448);
      *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 464) = *(_QWORD *)(a2 + 464);
      swift_bridgeObjectRelease();
      goto LABEL_26;
    }
    sub_1009AF5E8((_QWORD *)(a1 + 344));
  }
  v22 = *(_OWORD *)(a2 + 424);
  *(_OWORD *)(a1 + 408) = *(_OWORD *)(a2 + 408);
  *(_OWORD *)(a1 + 424) = v22;
  v23 = *(_OWORD *)(a2 + 456);
  *(_OWORD *)(a1 + 440) = *(_OWORD *)(a2 + 440);
  *(_OWORD *)(a1 + 456) = v23;
  v24 = *(_OWORD *)(a2 + 360);
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *(_OWORD *)(a1 + 360) = v24;
  v25 = *(_OWORD *)(a2 + 392);
  *(_OWORD *)(a1 + 376) = *(_OWORD *)(a2 + 376);
  *(_OWORD *)(a1 + 392) = v25;
LABEL_26:
  *(_BYTE *)(a1 + 472) = *(_BYTE *)(a2 + 472);
  if (*(_QWORD *)(a1 + 520))
  {
    if (*(_QWORD *)(a2 + 520))
    {
      *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
      *(_BYTE *)(a1 + 496) = *(_BYTE *)(a2 + 496);
      *(_DWORD *)(a1 + 500) = *(_DWORD *)(a2 + 500);
      *(_DWORD *)(a1 + 504) = *(_DWORD *)(a2 + 504);
      *(_BYTE *)(a1 + 508) = *(_BYTE *)(a2 + 508);
      *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
      *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
      swift_bridgeObjectRelease();
      goto LABEL_31;
    }
    sub_100C8B16C((_QWORD *)(a1 + 480));
  }
  v26 = *(_OWORD *)(a2 + 496);
  *(_OWORD *)(a1 + 480) = *(_OWORD *)(a2 + 480);
  *(_OWORD *)(a1 + 496) = v26;
  *(_OWORD *)(a1 + 512) = *(_OWORD *)(a2 + 512);
  *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
LABEL_31:
  if (*(_QWORD *)(a1 + 576))
  {
    if (*(_QWORD *)(a2 + 576))
    {
      *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
      *(_BYTE *)(a1 + 552) = *(_BYTE *)(a2 + 552);
      *(_DWORD *)(a1 + 556) = *(_DWORD *)(a2 + 556);
      *(_DWORD *)(a1 + 560) = *(_DWORD *)(a2 + 560);
      *(_BYTE *)(a1 + 564) = *(_BYTE *)(a2 + 564);
      *(_QWORD *)(a1 + 568) = *(_QWORD *)(a2 + 568);
      *(_QWORD *)(a1 + 576) = *(_QWORD *)(a2 + 576);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 584) = *(_QWORD *)(a2 + 584);
      swift_bridgeObjectRelease();
      goto LABEL_36;
    }
    sub_100C8B16C((_QWORD *)(a1 + 536));
  }
  v27 = *(_OWORD *)(a2 + 552);
  *(_OWORD *)(a1 + 536) = *(_OWORD *)(a2 + 536);
  *(_OWORD *)(a1 + 552) = v27;
  *(_OWORD *)(a1 + 568) = *(_OWORD *)(a2 + 568);
  *(_QWORD *)(a1 + 584) = *(_QWORD *)(a2 + 584);
LABEL_36:
  v28 = (_OWORD *)(a1 + 600);
  *(_QWORD *)(a1 + 592) = *(_QWORD *)(a2 + 592);
  swift_bridgeObjectRelease();
  v29 = (_OWORD *)(a2 + 600);
  v30 = *(unsigned __int8 *)(a1 + 616);
  if (v30 == 255)
  {
LABEL_39:
    *v28 = *v29;
    *(_BYTE *)(a1 + 616) = *(_BYTE *)(a2 + 616);
    goto LABEL_41;
  }
  v31 = *(unsigned __int8 *)(a2 + 616);
  if (v31 == 255)
  {
    sub_1007C50AC(a1 + 600);
    goto LABEL_39;
  }
  v32 = *(_QWORD *)(a1 + 600);
  v33 = *(_QWORD *)(a1 + 608);
  *v28 = *v29;
  *(_BYTE *)(a1 + 616) = v31 & 1;
  sub_1004C4230(v32, v33, v30 & 1);
LABEL_41:
  *(_DWORD *)(a1 + 620) = *(_DWORD *)(a2 + 620);
  *(_BYTE *)(a1 + 624) = *(_BYTE *)(a2 + 624);
  *(_WORD *)(a1 + 625) = *(_WORD *)(a2 + 625);
  *(_QWORD *)(a1 + 632) = *(_QWORD *)(a2 + 632);
  *(_BYTE *)(a1 + 640) = *(_BYTE *)(a2 + 640);
  *(_QWORD *)(a1 + 648) = *(_QWORD *)(a2 + 648);
  *(_BYTE *)(a1 + 656) = *(_BYTE *)(a2 + 656);
  v34 = (_OWORD *)(a1 + 664);
  v35 = (_OWORD *)(a2 + 664);
  if (!*(_QWORD *)(a1 + 760))
  {
LABEL_45:
    v36 = *(_OWORD *)(a2 + 744);
    *(_OWORD *)(a1 + 728) = *(_OWORD *)(a2 + 728);
    *(_OWORD *)(a1 + 744) = v36;
    *(_OWORD *)(a1 + 760) = *(_OWORD *)(a2 + 760);
    v37 = *(_OWORD *)(a2 + 680);
    *v34 = *v35;
    *(_OWORD *)(a1 + 680) = v37;
    v38 = *(_OWORD *)(a2 + 712);
    *(_OWORD *)(a1 + 696) = *(_OWORD *)(a2 + 696);
    *(_OWORD *)(a1 + 712) = v38;
    goto LABEL_46;
  }
  if (!*(_QWORD *)(a2 + 760))
  {
    sub_1007C50EC((_QWORD *)(a1 + 664));
    goto LABEL_45;
  }
  *(_QWORD *)v34 = *(_QWORD *)v35;
  *(_BYTE *)(a1 + 672) = *(_BYTE *)(a2 + 672);
  *(_DWORD *)(a1 + 680) = *(_DWORD *)(a2 + 680);
  *(_BYTE *)(a1 + 684) = *(_BYTE *)(a2 + 684);
  *(_QWORD *)(a1 + 688) = *(_QWORD *)(a2 + 688);
  *(_BYTE *)(a1 + 696) = *(_BYTE *)(a2 + 696);
  *(_DWORD *)(a1 + 700) = *(_DWORD *)(a2 + 700);
  *(_QWORD *)(a1 + 704) = *(_QWORD *)(a2 + 704);
  *(_QWORD *)(a1 + 712) = *(_QWORD *)(a2 + 712);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 720) = *(_OWORD *)(a2 + 720);
  *(_QWORD *)(a1 + 736) = *(_QWORD *)(a2 + 736);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 744) = *(_DWORD *)(a2 + 744);
  *(_QWORD *)(a1 + 752) = *(_QWORD *)(a2 + 752);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 760) = *(_QWORD *)(a2 + 760);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 768) = *(_QWORD *)(a2 + 768);
  swift_bridgeObjectRelease();
LABEL_46:
  *(_QWORD *)(a1 + 776) = *(_QWORD *)(a2 + 776);
  *(_BYTE *)(a1 + 784) = *(_BYTE *)(a2 + 784);
  *(_QWORD *)(a1 + 792) = *(_QWORD *)(a2 + 792);
  *(_BYTE *)(a1 + 800) = *(_BYTE *)(a2 + 800);
  *(_QWORD *)(a1 + 808) = *(_QWORD *)(a2 + 808);
  *(_BYTE *)(a1 + 816) = *(_BYTE *)(a2 + 816);
  *(_BYTE *)(a1 + 832) = *(_BYTE *)(a2 + 832);
  *(_QWORD *)(a1 + 824) = *(_QWORD *)(a2 + 824);
  *(_QWORD *)(a1 + 840) = *(_QWORD *)(a2 + 840);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 848) = *(_DWORD *)(a2 + 848);
  *(_QWORD *)(a1 + 856) = *(_QWORD *)(a2 + 856);
  *(_BYTE *)(a1 + 864) = *(_BYTE *)(a2 + 864);
  *(_QWORD *)(a1 + 872) = *(_QWORD *)(a2 + 872);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLWPShapePresetData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 880))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 592);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLWPShapePresetData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 872) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 856) = 0u;
    *(_OWORD *)(result + 840) = 0u;
    *(_OWORD *)(result + 824) = 0u;
    *(_OWORD *)(result + 808) = 0u;
    *(_OWORD *)(result + 792) = 0u;
    *(_OWORD *)(result + 776) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 880) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 592) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 880) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLWPShapePresetData()
{
  return &type metadata for CRLWPShapePresetData;
}

id sub_100C8BA78()
{
  uint64_t v0;
  id v1;
  CGColorSpace *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  id v7;
  _BYTE v9[128];
  _OWORD v10[5];
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  _OWORD v26[2];
  _OWORD v27[5];
  uint64_t v28;
  _BYTE v29[16];
  float v30;
  uint64_t v31;

  sub_1004C4938(v0 + 344, (uint64_t)v9, (uint64_t *)&unk_1013F02D0);
  sub_1004C4938((uint64_t)v9, (uint64_t)&v12, (uint64_t *)&unk_1013F02D0);
  if (sub_1005E3F34((uint64_t)&v12) == 1)
    return 0;
  v24 = v16;
  v25 = v17;
  v26[0] = v18;
  v26[1] = v19;
  v20 = v12;
  v21 = v13;
  v22 = v14;
  v23 = v15;
  sub_1004B8930(0, (unint64_t *)&qword_1013FBC20, off_101229840);
  v27[2] = v14;
  v27[3] = v15;
  v27[4] = v16;
  v28 = v17;
  v27[0] = v12;
  v27[1] = v13;
  v10[0] = v12;
  v10[1] = v13;
  v10[3] = v15;
  v10[4] = v16;
  v10[2] = v14;
  v11 = v17;
  sub_1005E4130(v27);
  v2 = sub_1006C52C0((uint64_t)v10);
  v3 = *((float *)&v25 + 2);
  v4 = *((float *)&v25 + 3);
  v5 = *(float *)v26;
  v6 = *((float *)v26 + 1);
  sub_1004C4938((uint64_t)v26 + 8, (uint64_t)v29, &qword_1013E6B28);
  sub_1004C4938((uint64_t)v29, (uint64_t)&v30, &qword_1013E6B28);
  if (v31)
    v7 = objc_msgSend(objc_allocWithZone((Class)CRLCurvedShadow), "initWithOffset:angle:radius:curve:opacity:color:enabled:", v2, 1, v4, v3, v5, v30, v6);
  else
    v7 = objc_msgSend(objc_allocWithZone((Class)CRLDropShadow), "initWithAngle:offset:radius:opacity:color:enabled:", v2, 1, v3, v4, v5, v6);
  v1 = v7;

  return v1;
}

uint64_t sub_100C8BC48(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100C8BC80 + 4 * byte_100F310C0[a1]))(0x7974536570616873, 0xEA0000000000656CLL);
}

uint64_t sub_100C8BC80()
{
  return 0x7365725074786574;
}

uint64_t sub_100C8BCA0()
{
  return 0x65736E4974786574;
}

unint64_t sub_100C8BCBC()
{
  return 0xD000000000000015;
}

unint64_t sub_100C8BCE0()
{
  return 0xD000000000000010;
}

BOOL sub_100C8BCFC(char *a1, char *a2)
{
  return qword_100F31890[*a1] == qword_100F31890[*a2];
}

Swift::Int sub_100C8BD20()
{
  char *v0;
  uint64_t v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(qword_100F31890[v1]);
  return Hasher._finalize()();
}

void sub_100C8BD6C()
{
  char *v0;

  Hasher._combine(_:)(qword_100F31890[*v0]);
}

Swift::Int sub_100C8BDA0(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(qword_100F31890[v2]);
  return Hasher._finalize()();
}

void sub_100C8BDE8(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_100F31890[*v1];
}

uint64_t sub_100C8BE00()
{
  unsigned __int8 *v0;

  return sub_100C8BC48(*v0);
}

uint64_t sub_100C8BE08@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100C8EA50(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100C8BE2C()
{
  char *v0;

  return qword_100F31890[*v0];
}

void sub_100C8BE44(_QWORD *a1@<X8>)
{
  *a1 = &off_101263FC0;
}

uint64_t sub_100C8BE54(uint64_t a1, uint64_t a2)
{
  return sub_1004ED430(a1, a2, (uint64_t (*)(void))sub_100C8C588, (uint64_t (*)(void))sub_100C8C5D0);
}

uint64_t sub_100C8BE68(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C8C5D0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100C8BE90(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C8C5D0();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100C8BEBC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  unint64_t v20;
  float v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v27;
  char v28;
  _OWORD v29[38];
  _BYTE v30[32];

  v3 = v1;
  v5 = sub_1004B804C(&qword_10140D1F8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_100C8C5D0();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLWPShapePresetData.CodingKeys, &type metadata for CRLWPShapePresetData.CodingKeys, v11, v9, v10);
  memcpy(v29, (const void *)v3, 0x258uLL);
  v28 = 0;
  v12 = sub_100C8F508();
  KeyedEncodingContainer.encode<A>(_:forKey:)(v29, &v28, v5, &type metadata for CRLShapePresetData, v12);
  if (!v2)
  {
    v13 = *(_OWORD *)(v3 + 808);
    v29[12] = *(_OWORD *)(v3 + 792);
    v29[13] = v13;
    v29[14] = *(_OWORD *)(v3 + 824);
    *(_QWORD *)&v29[15] = *(_QWORD *)(v3 + 840);
    v14 = *(_OWORD *)(v3 + 744);
    v29[8] = *(_OWORD *)(v3 + 728);
    v29[9] = v14;
    v15 = *(_OWORD *)(v3 + 776);
    v29[10] = *(_OWORD *)(v3 + 760);
    v29[11] = v15;
    v16 = *(_OWORD *)(v3 + 680);
    v29[4] = *(_OWORD *)(v3 + 664);
    v29[5] = v16;
    v17 = *(_OWORD *)(v3 + 712);
    v29[6] = *(_OWORD *)(v3 + 696);
    v29[7] = v17;
    v18 = *(_OWORD *)(v3 + 616);
    v29[0] = *(_OWORD *)(v3 + 600);
    v29[1] = v18;
    v19 = *(_OWORD *)(v3 + 648);
    v29[2] = *(_OWORD *)(v3 + 632);
    v29[3] = v19;
    v28 = 1;
    v20 = sub_1007C75AC();
    KeyedEncodingContainer.encode<A>(_:forKey:)(v29, &v28, v5, &type metadata for CRLWPTextPresetData, v20);
    v21 = *(float *)(v3 + 848);
    LOBYTE(v29[0]) = 2;
    KeyedEncodingContainer.encode(_:forKey:)(v29, v5, v21);
    sub_1004C4938(v3 + 856, (uint64_t)v30, (uint64_t *)&unk_1013F5520);
    sub_1004C4938((uint64_t)v30, (uint64_t)v29, (uint64_t *)&unk_1013F5520);
    v28 = 3;
    v22 = sub_1004B804C((uint64_t *)&unk_1013F5520);
    v23 = sub_100C8F54C(&qword_10140D208, (uint64_t)&protocol conformance descriptor for <> CRExtensible<A>);
    KeyedEncodingContainer.encode<A>(_:forKey:)(v29, &v28, v5, v22, v23);
    *(_QWORD *)&v29[0] = *(_QWORD *)(v3 + 872);
    v28 = 4;
    v24 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    v25 = sub_1004F31B4();
    KeyedEncodingContainer.encode<A>(_:forKey:)(v29, &v28, v5, v24, v25);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100C8C148()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + 872));
}

uint64_t sub_100C8C150(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease(*(_QWORD *)(v1 + 872));
  *(_QWORD *)(v1 + 872) = a1;
  return result;
}

Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *sub_100C8C178())(CKRecordID recordID, Swift::String recordType)
{
  return SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
}

uint64_t sub_100C8C188(void *__src, const void *a2)
{
  _BYTE v4[880];
  _BYTE __dst[880];

  memcpy(v4, __src, sizeof(v4));
  memcpy(__dst, a2, sizeof(__dst));
  return sub_100C8BEB8(v4) & 1;
}

void sub_100C8C1DC(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  _BYTE v4[880];

  sub_100C8EC94(a1, v4);
  if (!v2)
    memcpy(a2, v4, 0x370uLL);
}

uint64_t sub_100C8C22C(_QWORD *a1)
{
  const void *v1;
  _BYTE v4[880];

  memcpy(v4, v1, sizeof(v4));
  return sub_100C8BEBC(a1);
}

uint64_t sub_100C8C27C(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_1008514C4();
  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100C8C2BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t v7;

  v6 = sub_10089D5FC();
  v7 = sub_100C8F5B0();
  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_100C8C318(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_1008514C4();
  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_100C8C350(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_100C8C6CC();
  return CRValueStruct.init(from:)(a1, a2, v4);
}

uint64_t sub_100C8C39C(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_100C8C6CC();
  return CRValueStruct.encode(to:)(a1, a2, v4);
}

uint64_t sub_100C8C3E0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C8C6CC();
  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

unint64_t sub_100C8C41C()
{
  unint64_t result;

  result = qword_10140D178;
  if (!qword_10140D178)
  {
    result = swift_getWitnessTable(&unk_100F310F8, &type metadata for CRLWPShapePresetData);
    atomic_store(result, (unint64_t *)&qword_10140D178);
  }
  return result;
}

unint64_t sub_100C8C468()
{
  unint64_t result;

  result = qword_10140D180;
  if (!qword_10140D180)
  {
    result = swift_getWitnessTable(&unk_100F311C8, &type metadata for CRLWPShapePresetData);
    atomic_store(result, (unint64_t *)&qword_10140D180);
  }
  return result;
}

unint64_t sub_100C8C4B0()
{
  unint64_t result;

  result = qword_10140D188;
  if (!qword_10140D188)
  {
    result = swift_getWitnessTable(&unk_100F311A0, &type metadata for CRLWPShapePresetData);
    atomic_store(result, (unint64_t *)&qword_10140D188);
  }
  return result;
}

unint64_t sub_100C8C4F8()
{
  unint64_t result;

  result = qword_10140D190;
  if (!qword_10140D190)
  {
    result = swift_getWitnessTable(&unk_100F31238, &type metadata for CRLWPShapePresetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10140D190);
  }
  return result;
}

unint64_t sub_100C8C540()
{
  unint64_t result;

  result = qword_10140D198;
  if (!qword_10140D198)
  {
    result = swift_getWitnessTable(&unk_100F31348, &type metadata for CRLWPShapePresetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10140D198);
  }
  return result;
}

unint64_t sub_100C8C588()
{
  unint64_t result;

  result = qword_10140D1A0;
  if (!qword_10140D1A0)
  {
    result = swift_getWitnessTable(&unk_100F31310, &type metadata for CRLWPShapePresetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10140D1A0);
  }
  return result;
}

unint64_t sub_100C8C5D0()
{
  unint64_t result;

  result = qword_10140D1A8;
  if (!qword_10140D1A8)
  {
    result = swift_getWitnessTable(&unk_100F31270, &type metadata for CRLWPShapePresetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10140D1A8);
  }
  return result;
}

unint64_t sub_100C8C618()
{
  unint64_t result;

  result = qword_10140D1B0;
  if (!qword_10140D1B0)
  {
    result = swift_getWitnessTable(&unk_100F312E8, &type metadata for CRLWPShapePresetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10140D1B0);
  }
  return result;
}

unint64_t sub_100C8C660()
{
  unint64_t result;

  result = qword_10140D1B8;
  if (!qword_10140D1B8)
  {
    result = swift_getWitnessTable(&unk_100F312C0, &type metadata for CRLWPShapePresetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10140D1B8);
  }
  return result;
}

uint64_t sub_100C8C6A4()
{
  return sub_1006047EC(&qword_10140D1C0, &qword_10140D1C8);
}

unint64_t sub_100C8C6CC()
{
  unint64_t result;

  result = qword_10140D1D0;
  if (!qword_10140D1D0)
  {
    result = swift_getWitnessTable(&unk_100F311F0, &type metadata for CRLWPShapePresetData);
    atomic_store(result, (unint64_t *)&qword_10140D1D0);
  }
  return result;
}

unint64_t sub_100C8C714()
{
  unint64_t result;

  result = qword_10140D1D8;
  if (!qword_10140D1D8)
  {
    result = swift_getWitnessTable(&unk_100F31140, &type metadata for CRLWPShapePresetData);
    atomic_store(result, (unint64_t *)&qword_10140D1D8);
  }
  return result;
}

uint64_t sub_100C8C758(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100C8C788 + 4 * byte_100F310C5[a1]))(0x656B6F727473, 0xE600000000000000);
}

uint64_t sub_100C8C788()
{
  return 1819044198;
}

uint64_t sub_100C8C798()
{
  return 0x776F64616873;
}

unint64_t sub_100C8C7A8()
{
  return 0xD000000000000015;
}

uint64_t sub_100C8C7CC()
{
  return 0x656E694C7466656CLL;
}

uint64_t sub_100C8C7EC()
{
  return 0x6E694C7468676972;
}

unint64_t sub_100C8C80C()
{
  return 0xD000000000000010;
}

BOOL sub_100C8C828(char *a1, char *a2)
{
  return qword_100F318B8[*a1] == qword_100F318B8[*a2];
}

Swift::Int sub_100C8C84C()
{
  char *v0;
  uint64_t v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(qword_100F318B8[v1]);
  return Hasher._finalize()();
}

void sub_100C8C898()
{
  char *v0;

  Hasher._combine(_:)(qword_100F318B8[*v0]);
}

Swift::Int sub_100C8C8CC(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(qword_100F318B8[v2]);
  return Hasher._finalize()();
}

void sub_100C8C914(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_100F318B8[*v1];
}

uint64_t sub_100C8C92C()
{
  unsigned __int8 *v0;

  return sub_100C8C758(*v0);
}

uint64_t sub_100C8C934@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100C91258(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100C8C958()
{
  char *v0;

  return qword_100F318B8[*v0];
}

void sub_100C8C970(_QWORD *a1@<X8>)
{
  *a1 = &off_101263E50;
}

uint64_t sub_100C8C980(uint64_t a1, uint64_t a2)
{
  return sub_1004ED430(a1, a2, (uint64_t (*)(void))sub_100C91040, (uint64_t (*)(void))sub_100C91088);
}

uint64_t sub_100C8C994(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C91088();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100C8C9BC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C91088();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100C8C9E8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD v21[29];
  _BYTE v22[56];
  _BYTE v23[56];
  _BYTE v24[128];
  _BYTE v25[112];
  _BYTE v26[240];
  char v27;

  v3 = v1;
  v5 = sub_1004B804C(&qword_10140D280);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v21[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_100C91088();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLShapePresetData.CodingKeys, &type metadata for CRLShapePresetData.CodingKeys, v11, v9, v10);
  sub_1004C4938(v3, (uint64_t)v26, (uint64_t *)&unk_1013F1530);
  sub_1004C4938((uint64_t)v26, (uint64_t)v21, (uint64_t *)&unk_1013F1530);
  v27 = 0;
  v12 = sub_1008BDDE4();
  KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v21, &v27, v5, &type metadata for CRLStrokeData, v12);
  if (!v2)
  {
    sub_1004C4938(v3 + 232, (uint64_t)v25, &qword_1013F3148);
    sub_1004C4938((uint64_t)v25, (uint64_t)v21, &qword_1013F3148);
    v27 = 1;
    v13 = sub_1007CA0C8();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v21, &v27, v5, &type metadata for CRLFillData, v13);
    sub_1004C4938(v3 + 344, (uint64_t)v24, (uint64_t *)&unk_1013F02D0);
    sub_1004C4938((uint64_t)v24, (uint64_t)v21, (uint64_t *)&unk_1013F02D0);
    v27 = 2;
    v14 = sub_10080BB28();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v21, &v27, v5, &type metadata for CRLShadowData, v14);
    v15 = *(unsigned __int8 *)(v3 + 472);
    LOBYTE(v21[0]) = 3;
    KeyedEncodingContainer.encode(_:forKey:)(v15, v21, v5);
    sub_1004C4938(v3 + 480, (uint64_t)v23, &qword_10140A7D8);
    sub_1004C4938((uint64_t)v23, (uint64_t)v21, &qword_10140A7D8);
    v27 = 4;
    v16 = sub_100785BC8();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v21, &v27, v5, &type metadata for CRLLineEndData, v16);
    sub_1004C4938(v3 + 536, (uint64_t)v22, &qword_10140A7D8);
    sub_1004C4938((uint64_t)v22, (uint64_t)v21, &qword_10140A7D8);
    v27 = 5;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v21, &v27, v5, &type metadata for CRLLineEndData, v16);
    v21[0] = *(_QWORD *)(v3 + 592);
    v27 = 6;
    v17 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    v18 = sub_1004F31B4();
    KeyedEncodingContainer.encode<A>(_:forKey:)(v21, &v27, v5, v17, v18);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100C8CD0C()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + 592));
}

uint64_t sub_100C8CD14(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease(*(_QWORD *)(v1 + 592));
  *(_QWORD *)(v1 + 592) = a1;
  return result;
}

Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *sub_100C8CD3C())(CKRecordID recordID, Swift::String recordType)
{
  return SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
}

uint64_t sub_100C8CD4C(void *__src, const void *a2)
{
  _BYTE v4[600];
  _BYTE __dst[600];

  memcpy(v4, __src, sizeof(v4));
  memcpy(__dst, a2, sizeof(__dst));
  return sub_100C8C9E4(v4, __dst) & 1;
}

void sub_100C8CDA0(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  _BYTE __src[600];

  sub_100C91544(a1, __src);
  if (!v2)
    memcpy(a2, __src, 0x258uLL);
}

uint64_t sub_100C8CDF0(_QWORD *a1)
{
  const void *v1;
  _BYTE __dst[600];

  memcpy(__dst, v1, sizeof(__dst));
  return sub_100C8C9E8(a1);
}

uint64_t sub_100C8CE40(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_10089D2C0();
  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100C8CE80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t v7;

  v6 = sub_10089D430();
  v7 = sub_100C92050();
  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_100C8CEDC(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_10089D2C0();
  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_100C8CF14(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_100C91214();
  return CRValueStruct.init(from:)(a1, a2, v4);
}

uint64_t sub_100C8CF60(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_100C91214();
  return CRValueStruct.encode(to:)(a1, a2, v4);
}

uint64_t sub_100C8CFA4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C91214();
  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_100C8CFDC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char v112;
  char v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _OWORD v125[14];
  uint64_t v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  uint64_t v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  _QWORD v158[2];
  char v159;
  int v160;
  int v161;
  char v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  _QWORD v166[16];
  _QWORD v167[16];
  __int128 v168;
  __int128 v169;
  __int128 v170;
  __int128 v171;
  __int128 v172;
  __int128 v173;
  __int128 v174;
  __int128 v175;
  _QWORD v176[13];
  uint64_t v177;
  _QWORD v178[2];
  char v179;
  int v180;
  int v181;
  char v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  int v186;
  char v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  int v198;
  char v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  _OWORD v210[14];
  uint64_t v211;
  _OWORD v212[14];
  uint64_t v213;
  _QWORD v214[29];
  _QWORD v215[29];
  _BYTE v216[248];

  v3 = a1;
  sub_1004C4938(a1, (uint64_t)v214, (uint64_t *)&unk_1013F1530);
  sub_1004C4938(a2, (uint64_t)v215, (uint64_t *)&unk_1013F1530);
  sub_1004C4938((uint64_t)v214, (uint64_t)v216, (uint64_t *)&unk_1013F1530);
  if (sub_1004F276C((uint64_t)v216) == 1)
  {
    sub_1004C4938((uint64_t)v215, (uint64_t)&v168, (uint64_t *)&unk_1013F1530);
    if (sub_1004F276C((uint64_t)&v168) == 1)
      goto LABEL_7;
LABEL_5:
    sub_1004C4938((uint64_t)v214, (uint64_t)&v168, (uint64_t *)&unk_1013F1530);
    sub_1004C4938((uint64_t)v215, (uint64_t)&v177, (uint64_t *)&unk_1013F1530);
    sub_1008D3994(v214, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004C3830);
    sub_1008D3994(v215, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004C3830);
    sub_1004F2784((uint64_t)&v168);
    goto LABEL_35;
  }
  sub_1004C4938((uint64_t)v215, (uint64_t)&v168, (uint64_t *)&unk_1013F1530);
  if (sub_1004F276C((uint64_t)&v168) == 1)
    goto LABEL_5;
  sub_1004C4938((uint64_t)v214, (uint64_t)v125, (uint64_t *)&unk_1013F1530);
  v210[11] = v125[11];
  v210[12] = v125[12];
  v210[13] = v125[13];
  v210[7] = v125[7];
  v210[8] = v125[8];
  v210[9] = v125[9];
  v210[10] = v125[10];
  v210[3] = v125[3];
  v210[4] = v125[4];
  v210[5] = v125[5];
  v210[6] = v125[6];
  v210[0] = v125[0];
  v210[1] = v125[1];
  v211 = v126;
  v210[2] = v125[2];
  sub_1004C4938((uint64_t)v215, (uint64_t)&v127, (uint64_t *)&unk_1013F1530);
  v212[11] = v138;
  v212[12] = v139;
  v212[13] = v140;
  v212[7] = v134;
  v212[8] = v135;
  v212[9] = v136;
  v212[10] = v137;
  v212[3] = v130;
  v212[4] = v131;
  v212[5] = v132;
  v212[6] = v133;
  v212[0] = v127;
  v212[1] = v128;
  v213 = v141;
  v212[2] = v129;
  sub_1008D3994(v214, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004C3830);
  sub_1008D3994(v215, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004C3830);
  v4 = sub_1008BE12C((uint64_t)v210, (uint64_t)v212);
  sub_1008D3994(v215, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004C35DC);
  sub_1008D3994(v214, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004C35DC);
  if ((v4 & 1) == 0)
    goto LABEL_35;
LABEL_7:
  v5 = *(_QWORD *)(v3 + 232);
  v6 = *(_QWORD *)(v3 + 240);
  v7 = *(_QWORD *)(v3 + 248);
  v8 = *(_QWORD *)(v3 + 256);
  v9 = *(_QWORD *)(v3 + 264);
  v10 = *(_QWORD *)(v3 + 272);
  v11 = *(_QWORD *)(v3 + 280);
  v12 = *(_QWORD *)(v3 + 288);
  v13 = *(_QWORD *)(v3 + 296);
  v14 = *(_QWORD *)(v3 + 304);
  v15 = *(_QWORD *)(v3 + 312);
  v16 = *(_QWORD *)(v3 + 320);
  v17 = *(_QWORD *)(v3 + 336);
  v19 = *(_QWORD *)(a2 + 232);
  v18 = *(_QWORD *)(a2 + 240);
  v20 = *(_QWORD *)(a2 + 256);
  v111 = *(_QWORD *)(a2 + 248);
  v115 = *(_QWORD *)(v3 + 328);
  v22 = *(_QWORD *)(a2 + 264);
  v21 = *(_QWORD *)(a2 + 272);
  v24 = *(_QWORD *)(a2 + 280);
  v23 = *(_QWORD *)(a2 + 288);
  v101 = *(_QWORD *)(a2 + 296);
  v25 = *(_QWORD *)(a2 + 304);
  v117 = *(_QWORD *)(a2 + 312);
  v26 = *(_QWORD *)(a2 + 320);
  v121 = *(_QWORD *)(a2 + 328);
  v109 = *(_QWORD *)(a2 + 336);
  if (!v115)
  {
    if (!v121)
      goto LABEL_16;
LABEL_14:
    *(_QWORD *)&v168 = *(_QWORD *)(v3 + 232);
    *((_QWORD *)&v168 + 1) = v6;
    *(_QWORD *)&v169 = v7;
    *((_QWORD *)&v169 + 1) = v8;
    *(_QWORD *)&v170 = v9;
    *((_QWORD *)&v170 + 1) = v10;
    *(_QWORD *)&v171 = v11;
    *((_QWORD *)&v171 + 1) = v12;
    *(_QWORD *)&v172 = v13;
    *((_QWORD *)&v172 + 1) = v14;
    *(_QWORD *)&v173 = v15;
    *((_QWORD *)&v173 + 1) = v16;
    *(_QWORD *)&v174 = v115;
    *((_QWORD *)&v174 + 1) = v17;
    *(_QWORD *)&v175 = v19;
    *((_QWORD *)&v175 + 1) = v18;
    v176[0] = v111;
    v176[1] = v20;
    v176[2] = v22;
    v176[3] = v21;
    v176[4] = v24;
    v176[5] = v23;
    v176[6] = v101;
    v176[7] = v25;
    v176[8] = v117;
    v176[9] = v26;
    v176[10] = v121;
    v176[11] = v109;
    v104 = v24;
    v107 = v23;
    v98 = v21;
    v38 = v18;
    v39 = v19;
    v40 = v25;
    sub_1004C485C(v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v115, v17);
    sub_1004C485C(v39, v38, v111, v20, v22, v98, v104, v107, v101, v40, v117, v26, v121, v109);
    sub_1007C825C((uint64_t)&v168);
    goto LABEL_35;
  }
  if (!v121)
    goto LABEL_14;
  v81 = v3;
  v82 = a2;
  *(_QWORD *)&v168 = *(_QWORD *)(v3 + 232);
  v27 = v23;
  BYTE8(v168) = v6 & 1;
  *(_QWORD *)&v127 = v19;
  BYTE8(v127) = v18 & 1;
  v84 = v5;
  v85 = v6;
  v91 = v7;
  v92 = v9;
  v86 = v15;
  v87 = v8;
  v93 = v10;
  v94 = v11;
  v95 = v12;
  v89 = v14;
  v90 = v13;
  v88 = v16;
  v28 = v24;
  v29 = v20;
  v30 = v21;
  v83 = v17;
  v31 = v29;
  v32 = v18;
  v33 = v19;
  v34 = v25;
  sub_1004C485C(v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v115, v17);
  v35 = v32;
  sub_1004C485C(v33, v32, v111, v31, v22, v30, v28, v27, v101, v34, v117, v26, v121, v109);
  v36 = sub_1007C8324();
  if ((static CRExtensible.== infix(_:_:)(&v168, &v127, &type metadata for CRLFillData.FillType, v36, &protocol witness table for Int, &protocol witness table for Int) & 1) == 0)goto LABEL_19;
  v186 = v91;
  v187 = BYTE4(v91) & 1;
  v188 = v87;
  v189 = v92;
  v190 = v93;
  v191 = v94;
  v192 = v95;
  v193 = v90;
  v194 = v89;
  v195 = v86;
  v196 = v88;
  v197 = v115;
  v198 = v111;
  v199 = BYTE4(v111) & 1;
  v200 = v31;
  v201 = v22;
  v202 = v30;
  v203 = v28;
  v204 = v27;
  v205 = v101;
  v206 = v34;
  v207 = v117;
  v208 = v26;
  v209 = v121;
  if ((sub_1006C4CF8(&v186, &v198) & 1) == 0)
  {
LABEL_19:
    sub_1004C4174(v33, v32, v111, v31, v22, v30, v28, v27, v101, v34, v117, v26, v121, v109);
    sub_1004C4174(v84, v85, v91, v87, v92, v93, v94, v95, v90, v89, v86, v88, v115, v83);
    goto LABEL_35;
  }
  v37 = sub_100C9E04C(v83, v109);
  sub_1004C4174(v33, v35, v111, v31, v22, v30, v28, v27, v101, v34, v117, v26, v121, v109);
  sub_1004C4174(v84, v85, v91, v87, v92, v93, v94, v95, v90, v89, v86, v88, v115, v83);
  v3 = v81;
  a2 = v82;
  if ((v37 & 1) == 0)
    goto LABEL_35;
LABEL_16:
  sub_1004C4938(v3 + 344, (uint64_t)v166, (uint64_t *)&unk_1013F02D0);
  sub_1004C4938(a2 + 344, (uint64_t)v167, (uint64_t *)&unk_1013F02D0);
  sub_1004C4938((uint64_t)v166, (uint64_t)v125, (uint64_t *)&unk_1013F02D0);
  if (sub_1005E3F34((uint64_t)v125) == 1)
  {
    sub_1004C4938((uint64_t)v167, (uint64_t)&v168, (uint64_t *)&unk_1013F02D0);
    if (sub_1005E3F34((uint64_t)&v168) == 1)
      goto LABEL_23;
LABEL_21:
    sub_1004C4938((uint64_t)v166, (uint64_t)&v168, (uint64_t *)&unk_1013F02D0);
    sub_1004C4938((uint64_t)v167, (uint64_t)v176, (uint64_t *)&unk_1013F02D0);
    sub_1009351AC(v166, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004C396C);
    sub_1009351AC(v167, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004C396C);
    sub_1005E3F4C((uint64_t)&v168);
    goto LABEL_35;
  }
  sub_1004C4938((uint64_t)v167, (uint64_t)v158, (uint64_t *)&unk_1013F02D0);
  if (sub_1005E3F34((uint64_t)v158) == 1)
    goto LABEL_21;
  sub_1004C4938((uint64_t)v166, (uint64_t)&v142, (uint64_t *)&unk_1013F02D0);
  v131 = v146;
  v132 = v147;
  v133 = v148;
  v134 = v149;
  v127 = v142;
  v128 = v143;
  v129 = v144;
  v130 = v145;
  sub_1004C4938((uint64_t)v167, (uint64_t)&v150, (uint64_t *)&unk_1013F02D0);
  v172 = v154;
  v173 = v155;
  v174 = v156;
  v175 = v157;
  v168 = v150;
  v169 = v151;
  v170 = v152;
  v171 = v153;
  sub_1009351AC(v166, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004C396C);
  sub_1009351AC(v167, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004C396C);
  v41 = sub_10080C180((uint64_t)&v127, (uint64_t)&v168);
  sub_1009351AC(v167, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004C3718);
  sub_1009351AC(v166, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004C3718);
  if ((v41 & 1) == 0)
    goto LABEL_35;
LABEL_23:
  if (((*(unsigned __int8 *)(v3 + 472) ^ *(unsigned __int8 *)(a2 + 472)) & 1) != 0)
    goto LABEL_35;
  v42 = *(_QWORD *)(v3 + 480);
  v43 = *(_QWORD *)(v3 + 488);
  v45 = *(_QWORD *)(v3 + 496);
  v44 = *(_QWORD *)(v3 + 504);
  v46 = *(_QWORD *)(v3 + 512);
  v47 = *(_QWORD *)(v3 + 520);
  v48 = *(_QWORD *)(v3 + 528);
  v50 = *(_QWORD *)(a2 + 480);
  v49 = *(_QWORD *)(a2 + 488);
  v51 = *(_QWORD *)(a2 + 496);
  v52 = *(_QWORD *)(a2 + 504);
  v53 = *(_QWORD *)(a2 + 512);
  v54 = *(_QWORD *)(a2 + 520);
  v55 = *(_QWORD *)(a2 + 528);
  if (v47)
  {
    if (!v54)
      goto LABEL_34;
    *(_QWORD *)&v150 = *(_QWORD *)(v3 + 480);
    *((_QWORD *)&v150 + 1) = v43;
    LOBYTE(v151) = v45 & 1;
    *(_QWORD *)((char *)&v151 + 4) = __PAIR64__(v44, HIDWORD(v45));
    BYTE12(v151) = BYTE4(v44) & 1;
    *(_QWORD *)&v152 = v46;
    *((_QWORD *)&v152 + 1) = v47;
    *(_QWORD *)&v153 = v48;
    v158[0] = v50;
    v158[1] = v49;
    v159 = v51 & 1;
    v160 = HIDWORD(v51);
    v161 = v52;
    v162 = BYTE4(v52) & 1;
    v163 = v53;
    v164 = v54;
    v165 = v55;
    v118 = v49;
    v102 = v45;
    v105 = v43;
    v56 = v43;
    v57 = v45;
    v58 = v51;
    v59 = v44;
    v96 = v46;
    v99 = v44;
    v60 = v52;
    v61 = v47;
    v62 = v54;
    v122 = v48;
    v63 = v55;
    sub_1004C48C4(v42, v56, v57, v59, v46, v61, v48);
    sub_1004C48C4(v50, v118, v58, v60, v53, v62, v63);
    v112 = sub_100785E54((uint64_t)&v150, (uint64_t)v158);
    sub_1004C41DC(v50, v118, v58, v60, v53, v62, v63);
    sub_1004C41DC(v42, v105, v102, v99, v96, v61, v122);
    if ((v112 & 1) == 0)
      goto LABEL_35;
  }
  else if (v54)
  {
    goto LABEL_34;
  }
  v42 = *(_QWORD *)(v3 + 536);
  v43 = *(_QWORD *)(v3 + 544);
  v45 = *(_QWORD *)(v3 + 552);
  v44 = *(_QWORD *)(v3 + 560);
  v46 = *(_QWORD *)(v3 + 568);
  v47 = *(_QWORD *)(v3 + 576);
  v48 = *(_QWORD *)(v3 + 584);
  v50 = *(_QWORD *)(a2 + 536);
  v49 = *(_QWORD *)(a2 + 544);
  v51 = *(_QWORD *)(a2 + 552);
  v52 = *(_QWORD *)(a2 + 560);
  v53 = *(_QWORD *)(a2 + 568);
  v54 = *(_QWORD *)(a2 + 576);
  v55 = *(_QWORD *)(a2 + 584);
  if (!v47)
  {
    if (!v54)
    {
LABEL_37:
      v79 = sub_100C9E04C(*(_QWORD *)(v3 + 592), *(_QWORD *)(a2 + 592));
      return v79 & 1;
    }
    goto LABEL_34;
  }
  if (!v54)
  {
LABEL_34:
    v72 = v50;
    v116 = v50;
    v120 = v49;
    v73 = v42;
    v74 = v49;
    v108 = v51;
    v110 = v54;
    v75 = v52;
    v114 = v42;
    v76 = v46;
    v77 = v53;
    v124 = v48;
    v78 = v55;
    sub_1004C48C4(v73, v43, v45, v44, v46, v47, v48);
    sub_1004C48C4(v72, v74, v108, v75, v77, v110, v78);
    sub_1004C41DC(v114, v43, v45, v44, v76, v47, v124);
    sub_1004C41DC(v116, v120, v108, v75, v77, v110, v78);
    goto LABEL_35;
  }
  v178[0] = *(_QWORD *)(v3 + 536);
  v178[1] = v43;
  v179 = v45 & 1;
  v180 = HIDWORD(v45);
  v181 = v44;
  v182 = BYTE4(v44) & 1;
  v183 = v46;
  v184 = v47;
  v185 = v48;
  *(_QWORD *)&v142 = v50;
  *((_QWORD *)&v142 + 1) = v49;
  LOBYTE(v143) = v51 & 1;
  *(_QWORD *)((char *)&v143 + 4) = __PAIR64__(v52, HIDWORD(v51));
  BYTE12(v143) = BYTE4(v52) & 1;
  *(_QWORD *)&v144 = v53;
  *((_QWORD *)&v144 + 1) = v54;
  *(_QWORD *)&v145 = v55;
  v119 = v49;
  v103 = v45;
  v106 = v43;
  v64 = v43;
  v65 = v45;
  v66 = v51;
  v67 = v44;
  v97 = v46;
  v100 = v44;
  v68 = v52;
  v69 = v47;
  v70 = v54;
  v123 = v48;
  v71 = v55;
  sub_1004C48C4(v42, v64, v65, v67, v46, v69, v48);
  sub_1004C48C4(v50, v119, v66, v68, v53, v70, v71);
  v113 = sub_100785E54((uint64_t)v178, (uint64_t)&v142);
  sub_1004C41DC(v50, v119, v66, v68, v53, v70, v71);
  sub_1004C41DC(v42, v106, v103, v100, v97, v69, v123);
  if ((v113 & 1) != 0)
    goto LABEL_37;
LABEL_35:
  v79 = 0;
  return v79 & 1;
}

uint64_t sub_100C8DC24(char *__src, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  unint64_t v18;
  char v19;
  _BYTE v21[16];
  _BYTE v22[16];
  _BYTE v23[16];
  _BYTE v24[16];
  __int128 v25[15];
  uint64_t v26;
  _OWORD v27[15];
  uint64_t v28;
  _BYTE v29[600];
  _BYTE __dst[600];

  memcpy(__dst, __src, sizeof(__dst));
  memcpy(v29, (const void *)a2, sizeof(v29));
  if ((sub_100C8CFDC((uint64_t)__dst, (uint64_t)v29) & 1) == 0)
    goto LABEL_6;
  v28 = *((_QWORD *)__src + 105);
  v4 = *(_OWORD *)(__src + 808);
  v27[12] = *(_OWORD *)(__src + 792);
  v27[13] = v4;
  v27[14] = *(_OWORD *)(__src + 824);
  v5 = *(_OWORD *)(__src + 744);
  v27[8] = *(_OWORD *)(__src + 728);
  v27[9] = v5;
  v6 = *(_OWORD *)(__src + 776);
  v27[10] = *(_OWORD *)(__src + 760);
  v27[11] = v6;
  v7 = *(_OWORD *)(__src + 680);
  v27[4] = *(_OWORD *)(__src + 664);
  v27[5] = v7;
  v8 = *(_OWORD *)(__src + 712);
  v27[6] = *(_OWORD *)(__src + 696);
  v27[7] = v8;
  v9 = *(_OWORD *)(__src + 616);
  v27[0] = *(_OWORD *)(__src + 600);
  v27[1] = v9;
  v10 = *(_OWORD *)(__src + 648);
  v27[2] = *(_OWORD *)(__src + 632);
  v27[3] = v10;
  v11 = *(_OWORD *)(a2 + 808);
  v25[12] = *(_OWORD *)(a2 + 792);
  v25[13] = v11;
  v25[14] = *(_OWORD *)(a2 + 824);
  v26 = *(_QWORD *)(a2 + 840);
  v12 = *(_OWORD *)(a2 + 744);
  v25[8] = *(_OWORD *)(a2 + 728);
  v25[9] = v12;
  v13 = *(_OWORD *)(a2 + 776);
  v25[10] = *(_OWORD *)(a2 + 760);
  v25[11] = v13;
  v14 = *(_OWORD *)(a2 + 680);
  v25[4] = *(_OWORD *)(a2 + 664);
  v25[5] = v14;
  v15 = *(_OWORD *)(a2 + 712);
  v25[6] = *(_OWORD *)(a2 + 696);
  v25[7] = v15;
  v16 = *(_OWORD *)(a2 + 616);
  v25[0] = *(_OWORD *)(a2 + 600);
  v25[1] = v16;
  v17 = *(_OWORD *)(a2 + 648);
  v25[2] = *(_OWORD *)(a2 + 632);
  v25[3] = v17;
  if ((sub_1007C7838((uint64_t)v27, v25) & 1) == 0)
    goto LABEL_6;
  if (*((float *)__src + 212) == *(float *)(a2 + 848)
    && (sub_1004C4938((uint64_t)(__src + 856), (uint64_t)v24, (uint64_t *)&unk_1013F5520),
        sub_1004C4938((uint64_t)v24, (uint64_t)v22, (uint64_t *)&unk_1013F5520),
        sub_1004C4938(a2 + 856, (uint64_t)v23, (uint64_t *)&unk_1013F5520),
        sub_1004C4938((uint64_t)v23, (uint64_t)v21, (uint64_t *)&unk_1013F5520),
        v18 = sub_100563198(),
        (static CRExtensible.== infix(_:_:)(v22, v21, &type metadata for CRLWPShapeVerticalAlignmentData, v18, &protocol witness table for Int, &protocol witness table for Int) & 1) != 0))
  {
    v19 = sub_100C9E04C(*((_QWORD *)__src + 109), *(_QWORD *)(a2 + 872));
  }
  else
  {
LABEL_6:
    v19 = 0;
  }
  return v19 & 1;
}

_QWORD *sub_100C8DDCC@<X0>(_QWORD *a1@<X0>, char a2@<W1>, void *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  Swift::String v17;
  void *v18;
  uint64_t v19;
  __int128 v20;
  const mach_header_64 *v21;
  uint64_t (*v22)(void);
  uint64_t v23;
  uint64_t (*v24)(__n128);
  __n128 v25;
  void *v26;
  Swift::String v27;
  uint64_t v28;
  void *v29;
  id v30;
  char v31;
  char v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *result;
  _QWORD *v36;
  void (*v37)(uint64_t, _QWORD *, __n128);
  __n128 v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  const mach_header_64 *v47;
  __int128 v48;
  _BYTE *v49;
  _QWORD *v50;
  uint64_t v51;
  _QWORD *v52;
  void (*v53)(uint64_t, _QWORD *, __n128);
  __n128 v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  unint64_t v65;
  const mach_header_64 *v66;
  unint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  _QWORD *v70;
  void (*v71)(uint64_t, _QWORD *, __n128);
  __n128 v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  uint64_t v79;
  uint64_t v80;
  id v81;
  uint64_t v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  const mach_header_64 *v87;
  _QWORD *v88;
  uint64_t v89;
  _QWORD *v90;
  void (*v91)(uint64_t, _QWORD *, __n128);
  __n128 v92;
  uint64_t v93;
  uint64_t v94;
  __int128 v95;
  uint64_t v96;
  uint64_t v97;
  __int128 v98;
  uint64_t v99;
  uint64_t v100;
  id v101;
  uint64_t v102;
  int v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  const mach_header_64 *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  void *v113;
  _OWORD *v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  uint64_t v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  uint64_t v144;
  _BYTE v145[600];
  uint64_t v146;
  unsigned __int8 v147;
  unsigned int v148;
  char v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  uint64_t v154;
  __int128 v155;
  __int128 v156;
  unsigned __int8 v157;
  unsigned int v158;
  unsigned int v159;
  char v160;
  uint64_t v161;
  __int128 v162;
  __int128 v163;
  unsigned __int8 v164;
  unsigned int v165;
  unsigned int v166;
  unsigned __int8 v167;
  uint64_t v168;
  __int128 v169;

  v112 = type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  v6 = __chkstk_darwin(v112);
  v8 = (char *)&v108 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v6);
  v109 = (uint64_t)&v108 - v10;
  v11 = __chkstk_darwin(v9);
  v110 = (char *)&v108 - v12;
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v108 - v14;
  *(_QWORD *)&v145[592] = &_swiftEmptyDictionarySingleton;
  v16 = (void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *a1) + 0x420))(v13);
  v111 = v8;
  if (v16)
  {
    sub_1008BF750(v16, (uint64_t)&v115);
    v142 = v127;
    v143 = v128;
    v144 = v129;
    v138 = v123;
    v139 = v124;
    v140 = v125;
    v141 = v126;
    v134 = v119;
    v135 = v120;
    v136 = v121;
    v137 = v122;
    v130 = v115;
    v131 = v116;
    v132 = v117;
    v133 = v118;
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)((CKRecordID)&v130, v17);
  }
  else
  {
    sub_1004C39E8((uint64_t)&v130);
  }
  sub_1004C4938((uint64_t)&v130, (uint64_t)v145, (uint64_t *)&unk_1013F1530);
  v114 = &v145[328];
  v18 = (void *)sub_100923670();
  v113 = a3;
  if (v18)
  {
    sub_100D3743C(v18, (uint64_t)&v146);
    v19 = v154;
    v20 = v155;
    v21 = &_mh_execute_header;
    if (!v149)
      v21 = 0;
    *(_QWORD *)&v145[232] = v146;
    *(_QWORD *)&v145[240] = v147;
    *(_QWORD *)&v145[248] = (unint64_t)v21 | v148;
    *(_OWORD *)&v145[256] = v150;
    *(_OWORD *)&v145[272] = v151;
    *(_OWORD *)&v145[288] = v152;
    *(_OWORD *)&v145[304] = v153;
  }
  else
  {
    v19 = 0;
    v20 = 0uLL;
    memset(&v145[232], 0, 88);
  }
  *(_QWORD *)&v145[320] = v19;
  *v114 = v20;
  v22 = *(uint64_t (**)(void))((swift_isaMask & *a1) + 0x4C0);
  if ((v22() & 1) != 0
    || (v23 = *(_QWORD *)((char *)a1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData),
        v24 = *(uint64_t (**)(__n128))(*(_QWORD *)v23 + 384),
        v25 = swift_retain(v23),
        v26 = (void *)v24(v25),
        swift_release(v23),
        !v26))
  {
    sub_1004C3A10(&v130);
  }
  else
  {
    sub_10080C2C4(v26, (uint64_t)&v115);
    v134 = v119;
    v135 = v120;
    v136 = v121;
    v137 = v122;
    v130 = v115;
    v131 = v116;
    v132 = v117;
    v133 = v118;
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)((CKRecordID)&v130, v27);
  }
  v28 = sub_1004C4938((uint64_t)&v130, (uint64_t)&v145[344], (uint64_t *)&unk_1013F02D0);
  if ((a2 & 1) == 0
    || (v29 = (void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *a1) + 0x478))(v28),
        v30 = objc_msgSend(v29, "bezierPath"),
        v29,
        LODWORD(v29) = objc_msgSend(v30, "isOpen"),
        v30,
        !(_DWORD)v29))
  {

    v145[472] = 0;
    v48 = 0uLL;
    memset(&v145[480], 0, 96);
LABEL_23:
    v49 = &v145[321];
LABEL_24:
    *(_OWORD *)(v49 + 255) = v48;
    return memcpy(v113, v145, 0x258uLL);
  }
  v145[472] = 1;
  v31 = (*(uint64_t (**)(void))((swift_isaMask & *a1) + 0x500))();
  v32 = v22();
  if ((v31 & 1) != 0)
  {
    if ((v32 & 1) != 0)
      goto LABEL_32;
    v33 = *(_QWORD **)((char *)a1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    v34 = *v33;
    result = (_QWORD *)swift_conformsToProtocol2(*v33, &protocol descriptor for CRLAbstractShapeItemDataProtocol);
    if (result)
    {
      v36 = result;
      v37 = (void (*)(uint64_t, _QWORD *, __n128))result[2];
      v38 = swift_retain(v33);
      v37(v34, v36, v38);
      swift_release(v33);
      v39 = sub_1004B804C((uint64_t *)&unk_1013F62E0);
      CRRegister.wrappedValue.getter(v39);
      v40 = v130;
      v42 = *((_QWORD *)&v131 + 1);
      v41 = v131;
      v43 = *((_QWORD *)&v132 + 1);
      v111 = (char *)v132;
      v44 = v133;
      sub_1004B84A4((uint64_t)v15, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
      if (v43)
      {
        v130 = v40;
        v109 = *((_QWORD *)&v40 + 1);
        LOBYTE(v131) = v41 & 1;
        *(_QWORD *)((char *)&v131 + 4) = __PAIR64__(v42, HIDWORD(v41));
        BYTE12(v131) = BYTE4(v42) & 1;
        v45 = (uint64_t)v111;
        *(_QWORD *)&v132 = v111;
        *((_QWORD *)&v132 + 1) = v43;
        *(_QWORD *)&v133 = v44;
        sub_1004B8930(0, (unint64_t *)&qword_1013E0108, off_101229920);
        v46 = sub_100785FD4((uint64_t)&v130);
        sub_1004C41DC(v40, v109, v41, v42, v45, v43, v44);
        sub_100786178(v46, (uint64_t)&v156);
        v47 = &_mh_execute_header;
        if (!v160)
          v47 = 0;
        *(_OWORD *)&v145[480] = v156;
        v145[496] = v157;
        *(_DWORD *)&v145[500] = v158;
        *(_QWORD *)&v145[504] = (unint64_t)v47 | v159;
        *(_QWORD *)&v145[512] = v161;
        v114[12] = v162;
        goto LABEL_33;
      }
LABEL_32:
      memset(&v145[480], 0, 56);
LABEL_33:
      if ((v22() & 1) != 0)
        goto LABEL_46;
      v68 = *(_QWORD **)((char *)a1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
      v69 = *v68;
      result = (_QWORD *)swift_conformsToProtocol2(*v68, &protocol descriptor for CRLAbstractShapeItemDataProtocol);
      if (result)
      {
        v70 = result;
        v71 = (void (*)(uint64_t, _QWORD *, __n128))result[2];
        v72 = swift_retain(v68);
        v73 = (uint64_t)v110;
        v71(v69, v70, v72);
        swift_release(v68);
        v74 = sub_1004B804C((uint64_t *)&unk_1013F62E0);
        CRRegister.wrappedValue.getter(v74);
        v75 = v115;
        v77 = *((_QWORD *)&v116 + 1);
        v76 = v116;
        v78 = v117;
        v79 = v118;
        sub_1004B84A4(v73, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
        if (*((_QWORD *)&v78 + 1))
        {
          v115 = v75;
          LOBYTE(v116) = v76 & 1;
          *(_QWORD *)((char *)&v116 + 4) = __PAIR64__(v77, HIDWORD(v76));
          BYTE12(v116) = BYTE4(v77) & 1;
          v117 = v78;
          *(_QWORD *)&v118 = v79;
          sub_1004B8930(0, (unint64_t *)&qword_1013E0108, off_101229920);
          v80 = v79;
          v81 = sub_100785FD4((uint64_t)&v115);
          sub_1004C41DC(v75, *((uint64_t *)&v75 + 1), v76, v77, v78, *((uint64_t *)&v78 + 1), v80);
          sub_100786178(v81, (uint64_t)&v163);
          v82 = v164;
          v83 = v167;
          v84 = v168;
          v86 = v165;
          v85 = v166;

          v87 = &_mh_execute_header;
          if (!v83)
            v87 = 0;
          v114[13] = v163;
          *(_QWORD *)&v145[552] = v82 | (v86 << 32);
          *(_QWORD *)&v145[560] = (unint64_t)v87 | v85;
          *(_QWORD *)&v145[568] = v84;
          v48 = v169;
          goto LABEL_23;
        }
LABEL_46:

        memset(&v145[536], 0, 56);
        return memcpy(v113, v145, 0x258uLL);
      }
      goto LABEL_50;
    }
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  if ((v32 & 1) != 0)
    goto LABEL_39;
  v50 = *(_QWORD **)((char *)a1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v51 = *v50;
  result = (_QWORD *)swift_conformsToProtocol2(*v50, &protocol descriptor for CRLAbstractShapeItemDataProtocol);
  if (!result)
    goto LABEL_49;
  v52 = result;
  v53 = (void (*)(uint64_t, _QWORD *, __n128))result[2];
  v54 = swift_retain(v50);
  v55 = v109;
  v53(v51, v52, v54);
  swift_release(v50);
  v56 = sub_1004B804C((uint64_t *)&unk_1013F62E0);
  CRRegister.wrappedValue.getter(v56);
  v57 = v130;
  v58 = *((_QWORD *)&v131 + 1);
  v59 = v131;
  v60 = v132;
  v110 = (char *)v133;
  sub_1004B84A4(v55, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
  if (!*((_QWORD *)&v60 + 1))
  {
LABEL_39:
    memset(&v145[536], 0, 56);
  }
  else
  {
    v108 = v57;
    v130 = v57;
    LOBYTE(v131) = v59 & 1;
    *(_QWORD *)((char *)&v131 + 4) = __PAIR64__(v58, HIDWORD(v59));
    v61 = v58;
    BYTE12(v131) = BYTE4(v58) & 1;
    v132 = v60;
    v62 = (uint64_t)v110;
    *(_QWORD *)&v133 = v110;
    sub_1004B8930(0, (unint64_t *)&qword_1013E0108, off_101229920);
    v63 = sub_100785FD4((uint64_t)&v130);
    sub_1004C41DC(v108, *((uint64_t *)&v57 + 1), v59, v61, v60, *((uint64_t *)&v60 + 1), v62);
    sub_100786178(v63, (uint64_t)&v156);
    v64 = v161;
    v65 = v157 | ((unint64_t)v158 << 32);
    v66 = &_mh_execute_header;
    if (!v160)
      v66 = 0;
    v67 = (unint64_t)v66 | v159;
    v114[13] = v156;
    *(_QWORD *)&v145[552] = v65;
    *(_QWORD *)&v145[560] = v67;
    *(_QWORD *)&v145[568] = v64;
    *(_OWORD *)&v145[576] = v162;
  }
  if ((v22() & 1) != 0)
  {
LABEL_47:

    v48 = 0uLL;
    memset(&v145[496], 0, 40);
    v49 = &v145[225];
    goto LABEL_24;
  }
  v88 = *(_QWORD **)((char *)a1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v89 = *v88;
  result = (_QWORD *)swift_conformsToProtocol2(*v88, &protocol descriptor for CRLAbstractShapeItemDataProtocol);
  if (result)
  {
    v90 = result;
    v91 = (void (*)(uint64_t, _QWORD *, __n128))result[2];
    v92 = swift_retain(v88);
    v93 = (uint64_t)v111;
    v91(v89, v90, v92);
    swift_release(v88);
    v94 = sub_1004B804C((uint64_t *)&unk_1013F62E0);
    CRRegister.wrappedValue.getter(v94);
    v95 = v115;
    v97 = *((_QWORD *)&v116 + 1);
    v96 = v116;
    v98 = v117;
    v99 = v118;
    sub_1004B84A4(v93, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
    if (*((_QWORD *)&v98 + 1))
    {
      v115 = v95;
      LOBYTE(v116) = v96 & 1;
      *(_QWORD *)((char *)&v116 + 4) = __PAIR64__(v97, HIDWORD(v96));
      BYTE12(v116) = BYTE4(v97) & 1;
      v117 = v98;
      *(_QWORD *)&v118 = v99;
      sub_1004B8930(0, (unint64_t *)&qword_1013E0108, off_101229920);
      v100 = v99;
      v101 = sub_100785FD4((uint64_t)&v115);
      sub_1004C41DC(v95, *((uint64_t *)&v95 + 1), v96, v97, v98, *((uint64_t *)&v98 + 1), v100);
      sub_100786178(v101, (uint64_t)&v163);
      v102 = v164;
      v103 = v167;
      v104 = v168;
      v106 = v165;
      v105 = v166;

      v107 = &_mh_execute_header;
      if (!v103)
        v107 = 0;
      *(_OWORD *)&v145[480] = v163;
      *(_QWORD *)&v145[496] = v102 | (v106 << 32);
      *(_QWORD *)&v145[504] = (unint64_t)v107 | v105;
      *(_QWORD *)&v145[512] = v104;
      v114[12] = v169;
      return memcpy(v113, v145, 0x258uLL);
    }
    goto LABEL_47;
  }
LABEL_51:
  __break(1u);
  return result;
}

void *sub_100C8E820@<X0>(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _QWORD *v9;
  void *result;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[1696];
  _QWORD v21[106];
  _BYTE v22[600];
  _OWORD v23[15];
  uint64_t v24;

  v6 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v6);
  v8 = &v20[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = a1;
  result = sub_100C8DDCC(v9, a2, v22);
  v11 = *(void **)((char *)v9 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (v11)
  {
    sub_1007C8368((char *)v11, (uint64_t)v23);
    v12 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
    v13 = *(_QWORD *)((char *)v9 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    v14 = type metadata accessor for CRLWPShapeItemData(0);
    v15 = swift_dynamicCastClassUnconditional(v13, v14, 0, 0, 0);
    (*(void (**)(void))(*(_QWORD *)v15 + 760))();
    swift_retain(v13);
    v16 = sub_1004B804C(&qword_1013F55A0);
    CRRegister.wrappedValue.getter(v16);
    v17 = v21[0];
    sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLWPShapeItemCRDTData);
    swift_release(v13);
    v18 = *(_QWORD *)((char *)v9 + v12);
    swift_dynamicCastClassUnconditional(v18, v14, 0, 0, 0);
    swift_retain(v18);
    v19 = sub_1005603D8();

    swift_release(v18);
    if ((unint64_t)(v19 - 1) >= 3)
      v19 = 0;
    memcpy(v21, v22, 0x258uLL);
    *(_OWORD *)&v21[99] = v23[12];
    *(_OWORD *)&v21[101] = v23[13];
    *(_OWORD *)&v21[103] = v23[14];
    *(_OWORD *)&v21[91] = v23[8];
    *(_OWORD *)&v21[93] = v23[9];
    *(_OWORD *)&v21[95] = v23[10];
    *(_OWORD *)&v21[97] = v23[11];
    *(_OWORD *)&v21[83] = v23[4];
    *(_OWORD *)&v21[85] = v23[5];
    *(_OWORD *)&v21[87] = v23[6];
    *(_OWORD *)&v21[89] = v23[7];
    *(_OWORD *)&v21[75] = v23[0];
    *(_OWORD *)&v21[77] = v23[1];
    *(_OWORD *)&v21[79] = v23[2];
    *(_OWORD *)&v21[81] = v23[3];
    v21[105] = v24;
    v20[0] = 0;
    result = memcpy((void *)a3, v21, 0x350uLL);
    *(_DWORD *)(a3 + 848) = v17;
    *(_QWORD *)(a3 + 856) = v19;
    *(_BYTE *)(a3 + 864) = v20[0];
    *(_QWORD *)(a3 + 872) = &_swiftEmptyDictionarySingleton;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100C8EA50(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;

  if (a1 == 0x7974536570616873 && a2 == 0xEA0000000000656CLL)
  {
    v5 = 0xEA0000000000656CLL;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7974536570616873, 0xEA0000000000656CLL, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x7365725074786574 && a2 == 0xEB00000000737465)
  {
    v7 = 0xEB00000000737465;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7365725074786574, 0xEB00000000737465, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x65736E4974786574 && a2 == 0xE900000000000074)
  {
    v8 = 0xE900000000000074;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x65736E4974786574, 0xE900000000000074, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 0xD000000000000015)
  {
    v9 = 0x80000001010077B0;
    if (a2 == 0x80000001010077B0)
      goto LABEL_25;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000015, 0x80000001010077B0, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
LABEL_25:
    swift_bridgeObjectRelease(v9);
    return 3;
  }
  if (a1 == 0xD000000000000010 && a2 == 0x8000000100FAF1E0)
  {
    swift_bridgeObjectRelease(0x8000000100FAF1E0);
    return 4;
  }
  else
  {
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x8000000100FAF1E0, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v10 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

void sub_100C8EC94(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD v27[110];
  _QWORD v28[106];
  int v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  char v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  _BYTE v68[607];
  char v69;
  _BYTE v70[600];
  char v71;
  _QWORD v72[106];

  v5 = sub_1004B804C(&qword_10140D1E0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  v26 = a1;
  sub_1004BB5A4(a1, v9);
  v11 = sub_100C8C5D0();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLWPShapePresetData.CodingKeys, &type metadata for CRLWPShapePresetData.CodingKeys, v11, v9, v10);
  if (v2)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v26);
    swift_bridgeObjectRelease();
  }
  else
  {
    v12 = v6;
    v69 = 0;
    v13 = sub_100C8F1CC();
    v14 = v5;
    KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for CRLShapePresetData, &v69, v5, &type metadata for CRLShapePresetData, v13);
    memcpy(v68, v70, 0x258uLL);
    memcpy(v72, v70, 0x258uLL);
    v51 = 1;
    sub_100784C0C((uint64_t)v68);
    v15 = sub_1007C7564();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for CRLWPTextPresetData, &v51, v5, &type metadata for CRLWPTextPresetData, v15);
    v47 = v64;
    v48 = v65;
    v49 = v66;
    v43 = v60;
    v44 = v61;
    v45 = v62;
    v46 = v63;
    v39 = v56;
    v40 = v57;
    v41 = v58;
    v42 = v59;
    v35 = v52;
    v36 = v53;
    v37 = v54;
    v38 = v55;
    *(_OWORD *)&v72[99] = v64;
    *(_OWORD *)&v72[101] = v65;
    *(_OWORD *)&v72[103] = v66;
    *(_OWORD *)&v72[91] = v60;
    *(_OWORD *)&v72[93] = v61;
    *(_OWORD *)&v72[95] = v62;
    *(_OWORD *)&v72[97] = v63;
    *(_OWORD *)&v72[83] = v56;
    *(_OWORD *)&v72[85] = v57;
    *(_OWORD *)&v72[87] = v58;
    *(_OWORD *)&v72[89] = v59;
    *(_OWORD *)&v72[75] = v52;
    *(_OWORD *)&v72[77] = v53;
    v50 = v67;
    *(_OWORD *)&v72[79] = v54;
    *(_OWORD *)&v72[81] = v55;
    v72[105] = v67;
    LOBYTE(v28[0]) = 2;
    sub_1005630DC((uint64_t)&v35);
    KeyedDecodingContainer.decode(_:forKey:)(v28, v5);
    v17 = v16;
    v18 = sub_1004B804C((uint64_t *)&unk_1013F5520);
    LOBYTE(v27[0]) = 3;
    v19 = sub_100C8F54C(&qword_10140D1F0, (uint64_t)&protocol conformance descriptor for <> CRExtensible<A>);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v18, v27, v5, v18, v19);
    v25 = v28[0];
    v20 = v28[1];
    v71 = v28[1];
    v21 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    v33 = 4;
    v22 = sub_1004F3130();
    KeyedDecodingContainer.decode<A>(_:forKey:)(v21, &v33, v14, v21, v22);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v14);
    v23 = v34;
    swift_bridgeObjectRetain(v34);
    swift_bridgeObjectRelease();
    memcpy(v27, v68, 0x258uLL);
    *(_OWORD *)&v27[99] = v47;
    *(_OWORD *)&v27[101] = v48;
    *(_OWORD *)&v27[103] = v49;
    *(_OWORD *)&v27[91] = v43;
    *(_OWORD *)&v27[93] = v44;
    *(_OWORD *)&v27[95] = v45;
    *(_OWORD *)&v27[97] = v46;
    *(_OWORD *)&v27[83] = v39;
    *(_OWORD *)&v27[85] = v40;
    *(_OWORD *)&v27[87] = v41;
    *(_OWORD *)&v27[89] = v42;
    *(_OWORD *)&v27[75] = v35;
    *(_OWORD *)&v27[77] = v36;
    *(_OWORD *)&v27[79] = v37;
    *(_OWORD *)&v27[81] = v38;
    v27[105] = v50;
    LODWORD(v27[106]) = v17;
    v24 = v25;
    v27[107] = v25;
    LOBYTE(v27[108]) = v20;
    v27[109] = v23;
    sub_100C8F210((uint64_t)v27);
    swift_bridgeObjectRelease();
    sub_1007844D4((uint64_t)&v35);
    sub_1007849F0((uint64_t)v68);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v26);
    memcpy(v28, v72, sizeof(v28));
    v29 = v17;
    v30 = v24;
    v31 = v71;
    v32 = v23;
    sub_100784590((uint64_t)v28);
    memcpy(a2, v27, 0x370uLL);
  }
}

unint64_t sub_100C8F1CC()
{
  unint64_t result;

  result = qword_10140D1E8;
  if (!qword_10140D1E8)
  {
    result = swift_getWitnessTable(&unk_100F3174C, &type metadata for CRLShapePresetData);
    atomic_store(result, (unint64_t *)&qword_10140D1E8);
  }
  return result;
}

uint64_t sub_100C8F210(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  unint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;

  v38 = *(_QWORD *)(a1 + 240);
  v39 = *(_QWORD *)(a1 + 232);
  v36 = *(_QWORD *)(a1 + 256);
  v37 = *(_QWORD *)(a1 + 248);
  v34 = *(_QWORD *)(a1 + 272);
  v35 = *(_QWORD *)(a1 + 264);
  v32 = *(_QWORD *)(a1 + 288);
  v33 = *(_QWORD *)(a1 + 280);
  v26 = *(_OWORD *)(a1 + 296);
  v23 = *(_OWORD *)(a1 + 312);
  v20 = *(_QWORD *)(a1 + 328);
  v17 = *(_QWORD *)(a1 + 336);
  v53 = *(_QWORD *)(a1 + 352);
  v54 = *(_QWORD *)(a1 + 344);
  v51 = *(_QWORD *)(a1 + 368);
  v52 = *(_QWORD *)(a1 + 360);
  v49 = *(_QWORD *)(a1 + 384);
  v50 = *(_QWORD *)(a1 + 376);
  v47 = *(_QWORD *)(a1 + 400);
  v48 = *(_QWORD *)(a1 + 392);
  v31 = *(_OWORD *)(a1 + 408);
  v29 = *(_OWORD *)(a1 + 424);
  v25 = *(_OWORD *)(a1 + 440);
  v22 = *(_QWORD *)(a1 + 456);
  v19 = *(_QWORD *)(a1 + 464);
  v57 = *(_OWORD *)(a1 + 744);
  v58 = *(_OWORD *)(a1 + 728);
  v3 = *(_QWORD *)(a1 + 480);
  v2 = *(_QWORD *)(a1 + 488);
  v5 = *(_QWORD *)(a1 + 496);
  v4 = *(_QWORD *)(a1 + 504);
  v6 = *(_QWORD *)(a1 + 512);
  v7 = *(_QWORD *)(a1 + 520);
  v8 = *(_QWORD *)(a1 + 528);
  v9 = *(_QWORD *)(a1 + 536);
  v10 = *(_QWORD *)(a1 + 544);
  v12 = *(_QWORD *)(a1 + 552);
  v13 = *(_QWORD *)(a1 + 560);
  v14 = *(_QWORD *)(a1 + 568);
  v15 = *(_QWORD *)(a1 + 576);
  v16 = *(_QWORD *)(a1 + 584);
  v21 = *(_QWORD *)(a1 + 592);
  v24 = *(_QWORD *)(a1 + 600);
  v27 = *(_QWORD *)(a1 + 608);
  v40 = *(_QWORD *)(a1 + 664);
  v41 = *(_QWORD *)(a1 + 672);
  v42 = *(_QWORD *)(a1 + 680);
  v43 = *(_QWORD *)(a1 + 688);
  v44 = *(_QWORD *)(a1 + 696);
  v45 = *(_QWORD *)(a1 + 704);
  v46 = *(_QWORD *)(a1 + 712);
  v55 = *(_QWORD *)(a1 + 720);
  v30 = *(_QWORD *)(a1 + 760);
  v28 = *(_QWORD *)(a1 + 768);
  v56 = *(_QWORD *)(a1 + 840);
  v59 = *(_QWORD *)(a1 + 872);
  v18 = *(_BYTE *)(a1 + 616);
  sub_1004C3830(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    *(_QWORD *)(a1 + 224));
  sub_1004C485C(v39, v38, v37, v36, v35, v34, v33, v32, v26, *((uint64_t *)&v26 + 1), v23, *((uint64_t *)&v23 + 1), v20, v17);
  sub_1004C396C(v54, v53, v52, v51, v50, v49, v48, v47, v31, *((uint64_t *)&v31 + 1), v29, *((uint64_t *)&v29 + 1), v25, *((uint64_t *)&v25 + 1), v22, v19);
  sub_1004C48C4(v3, v2, v5, v4, v6, v7, v8);
  sub_1004C48C4(v9, v10, v12, v13, v14, v15, v16);
  swift_bridgeObjectRetain(v21);
  sub_1004C48FC(v24, v27, v18);
  sub_1004C485C(v40, v41, v42, v43, v44, v45, v46, v55, v58, *((uint64_t *)&v58 + 1), v57, *((uint64_t *)&v57 + 1), v30, v28);
  swift_bridgeObjectRetain(v56);
  swift_bridgeObjectRetain(v59);
  return a1;
}

unint64_t sub_100C8F508()
{
  unint64_t result;

  result = qword_10140D200;
  if (!qword_10140D200)
  {
    result = swift_getWitnessTable(&unk_100F31724, &type metadata for CRLShapePresetData);
    atomic_store(result, (unint64_t *)&qword_10140D200);
  }
  return result;
}

uint64_t sub_100C8F54C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1004CB6A4((uint64_t *)&unk_1013F5520);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100C8F5B0()
{
  unint64_t result;

  result = qword_10140D210;
  if (!qword_10140D210)
  {
    result = swift_getWitnessTable(&unk_100F31370, &type metadata for CRLWPShapePresetData);
    atomic_store(result, (unint64_t *)&qword_10140D210);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CRLWPShapePresetData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_100C8F640 + 4 * byte_100F310D1[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_100C8F674 + 4 * byte_100F310CC[v4]))();
}

uint64_t sub_100C8F674(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100C8F67C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100C8F684);
  return result;
}

uint64_t sub_100C8F690(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100C8F698);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_100C8F69C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100C8F6A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLWPShapePresetData.CodingKeys()
{
  return &type metadata for CRLWPShapePresetData.CodingKeys;
}

uint64_t destroy for CRLShapePresetData(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = a1[12];
  if (v2)
  {
    swift_bridgeObjectRelease(a1[6]);
    swift_bridgeObjectRelease(a1[9]);
    v3 = a1[11];
    swift_bridgeObjectRelease(v2);
    swift_bridgeObjectRelease(v3);
    v4 = a1[18];
    if (v4)
    {
      swift_bridgeObjectRelease(v4);
      swift_bridgeObjectRelease(a1[20]);
    }
    swift_bridgeObjectRelease(a1[23]);
    v5 = a1[25];
    if (v5)
    {
      swift_bridgeObjectRelease(v5);
      swift_bridgeObjectRelease(a1[27]);
    }
    swift_bridgeObjectRelease(a1[28]);
  }
  v6 = a1[41];
  if (v6)
  {
    swift_bridgeObjectRelease(a1[35]);
    swift_bridgeObjectRelease(a1[38]);
    v7 = a1[40];
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(v7);
    swift_bridgeObjectRelease(a1[42]);
  }
  v8 = a1[53];
  if (v8)
  {
    swift_bridgeObjectRelease(a1[47]);
    swift_bridgeObjectRelease(a1[50]);
    v9 = a1[52];
    swift_bridgeObjectRelease(v8);
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(a1[57]);
    swift_bridgeObjectRelease(a1[58]);
  }
  v10 = a1[65];
  if (v10)
  {
    v11 = a1[60];
    swift_bridgeObjectRelease(v10);
    swift_bridgeObjectRelease(v11);
    swift_bridgeObjectRelease(a1[66]);
  }
  v12 = a1[72];
  if (v12)
  {
    v13 = a1[67];
    swift_bridgeObjectRelease(v12);
    swift_bridgeObjectRelease(v13);
    swift_bridgeObjectRelease(a1[73]);
  }
  return swift_bridgeObjectRelease(a1[74]);
}

uint64_t initializeWithCopy for CRLShapePresetData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  _DWORD *v33;
  _DWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;

  v4 = *(_QWORD *)(a2 + 96);
  if (v4)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
    *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
    *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
    *(_QWORD *)(a1 + 36) = *(_QWORD *)(a2 + 36);
    *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
    v5 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 48) = v5;
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    v6 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 72) = v6;
    *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
    v7 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 88) = v7;
    *(_QWORD *)(a1 + 96) = v4;
    *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
    *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_DWORD *)(a1 + 140) = *(_DWORD *)(a2 + 140);
    v9 = (_OWORD *)(a2 + 144);
    v8 = *(_QWORD *)(a2 + 144);
    swift_bridgeObjectRetain(v5);
    swift_bridgeObjectRetain(v6);
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v4);
    if (v8)
    {
      *(_QWORD *)(a1 + 144) = v8;
      *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
      v10 = *(_QWORD *)(a2 + 160);
      *(_QWORD *)(a1 + 160) = v10;
      swift_bridgeObjectRetain(v8);
      swift_bridgeObjectRetain(v10);
    }
    else
    {
      *(_OWORD *)(a1 + 144) = *v9;
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    }
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
    *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
    v18 = *(_QWORD *)(a2 + 184);
    *(_QWORD *)(a1 + 184) = v18;
    v19 = *(_QWORD *)(a2 + 200);
    swift_bridgeObjectRetain(v18);
    if (v19)
    {
      *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
      *(_QWORD *)(a1 + 200) = v19;
      *(_DWORD *)(a1 + 208) = *(_DWORD *)(a2 + 208);
      *(_BYTE *)(a1 + 212) = *(_BYTE *)(a2 + 212);
      v20 = *(_QWORD *)(a2 + 216);
      *(_QWORD *)(a1 + 216) = v20;
      swift_bridgeObjectRetain(v19);
      swift_bridgeObjectRetain(v20);
    }
    else
    {
      v21 = *(_OWORD *)(a2 + 208);
      *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
      *(_OWORD *)(a1 + 208) = v21;
    }
    v22 = *(_QWORD *)(a2 + 224);
    *(_QWORD *)(a1 + 224) = v22;
    swift_bridgeObjectRetain(v22);
  }
  else
  {
    v11 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v11;
    *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
    v12 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v12;
    v13 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v13;
    v14 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v14;
    v15 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v15;
    v16 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v16;
    v17 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v17;
  }
  v23 = (_QWORD *)(a1 + 232);
  v24 = (_QWORD *)(a2 + 232);
  v25 = *(_QWORD *)(a2 + 328);
  if (v25)
  {
    *v23 = *v24;
    *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
    *(_DWORD *)(a1 + 248) = *(_DWORD *)(a2 + 248);
    *(_BYTE *)(a1 + 252) = *(_BYTE *)(a2 + 252);
    *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
    *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
    *(_DWORD *)(a1 + 268) = *(_DWORD *)(a2 + 268);
    *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
    v26 = *(_QWORD *)(a2 + 280);
    *(_QWORD *)(a1 + 280) = v26;
    *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
    v27 = *(_QWORD *)(a2 + 304);
    *(_QWORD *)(a1 + 304) = v27;
    *(_DWORD *)(a1 + 312) = *(_DWORD *)(a2 + 312);
    v28 = *(_QWORD *)(a2 + 320);
    *(_QWORD *)(a1 + 320) = v28;
    *(_QWORD *)(a1 + 328) = v25;
    v29 = *(_QWORD *)(a2 + 336);
    *(_QWORD *)(a1 + 336) = v29;
    swift_bridgeObjectRetain(v26);
    swift_bridgeObjectRetain(v27);
    swift_bridgeObjectRetain(v28);
    swift_bridgeObjectRetain(v25);
    swift_bridgeObjectRetain(v29);
  }
  else
  {
    v30 = *(_OWORD *)(a2 + 312);
    *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
    *(_OWORD *)(a1 + 312) = v30;
    *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
    v31 = *(_OWORD *)(a2 + 248);
    *(_OWORD *)v23 = *(_OWORD *)v24;
    *(_OWORD *)(a1 + 248) = v31;
    v32 = *(_OWORD *)(a2 + 280);
    *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
    *(_OWORD *)(a1 + 280) = v32;
  }
  v33 = (_DWORD *)(a1 + 344);
  v34 = (_DWORD *)(a2 + 344);
  v35 = *(_QWORD *)(a2 + 424);
  if (v35)
  {
    *v33 = *v34;
    *(_BYTE *)(a1 + 348) = *(_BYTE *)(a2 + 348);
    *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
    *(_BYTE *)(a1 + 360) = *(_BYTE *)(a2 + 360);
    *(_DWORD *)(a1 + 364) = *(_DWORD *)(a2 + 364);
    *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
    v36 = *(_QWORD *)(a2 + 376);
    *(_QWORD *)(a1 + 376) = v36;
    *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
    v37 = *(_QWORD *)(a2 + 400);
    *(_QWORD *)(a1 + 400) = v37;
    *(_DWORD *)(a1 + 408) = *(_DWORD *)(a2 + 408);
    v38 = *(_QWORD *)(a2 + 416);
    *(_QWORD *)(a1 + 416) = v38;
    *(_QWORD *)(a1 + 424) = v35;
    *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
    *(_DWORD *)(a1 + 448) = *(_DWORD *)(a2 + 448);
    v39 = *(_QWORD *)(a2 + 456);
    v40 = *(_QWORD *)(a2 + 464);
    *(_QWORD *)(a1 + 456) = v39;
    *(_QWORD *)(a1 + 464) = v40;
    swift_bridgeObjectRetain(v36);
    swift_bridgeObjectRetain(v37);
    swift_bridgeObjectRetain(v38);
    swift_bridgeObjectRetain(v35);
    swift_bridgeObjectRetain(v39);
    swift_bridgeObjectRetain(v40);
  }
  else
  {
    v41 = *(_OWORD *)(a2 + 424);
    *(_OWORD *)(a1 + 408) = *(_OWORD *)(a2 + 408);
    *(_OWORD *)(a1 + 424) = v41;
    v42 = *(_OWORD *)(a2 + 456);
    *(_OWORD *)(a1 + 440) = *(_OWORD *)(a2 + 440);
    *(_OWORD *)(a1 + 456) = v42;
    v43 = *(_OWORD *)(a2 + 360);
    *(_OWORD *)v33 = *(_OWORD *)v34;
    *(_OWORD *)(a1 + 360) = v43;
    v44 = *(_OWORD *)(a2 + 392);
    *(_OWORD *)(a1 + 376) = *(_OWORD *)(a2 + 376);
    *(_OWORD *)(a1 + 392) = v44;
  }
  *(_BYTE *)(a1 + 472) = *(_BYTE *)(a2 + 472);
  v45 = *(_QWORD *)(a2 + 520);
  if (!v45)
  {
    v52 = *(_OWORD *)(a2 + 496);
    *(_OWORD *)(a1 + 480) = *(_OWORD *)(a2 + 480);
    *(_OWORD *)(a1 + 496) = v52;
    *(_OWORD *)(a1 + 512) = *(_OWORD *)(a2 + 512);
    *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
    v49 = *(_QWORD *)(a2 + 576);
    if (v49)
      goto LABEL_18;
LABEL_20:
    v53 = *(_OWORD *)(a2 + 552);
    *(_OWORD *)(a1 + 536) = *(_OWORD *)(a2 + 536);
    *(_OWORD *)(a1 + 552) = v53;
    *(_OWORD *)(a1 + 568) = *(_OWORD *)(a2 + 568);
    *(_QWORD *)(a1 + 584) = *(_QWORD *)(a2 + 584);
    goto LABEL_21;
  }
  v46 = *(_QWORD *)(a2 + 480);
  v47 = *(_QWORD *)(a2 + 488);
  *(_QWORD *)(a1 + 480) = v46;
  *(_QWORD *)(a1 + 488) = v47;
  *(_BYTE *)(a1 + 496) = *(_BYTE *)(a2 + 496);
  *(_QWORD *)(a1 + 500) = *(_QWORD *)(a2 + 500);
  *(_BYTE *)(a1 + 508) = *(_BYTE *)(a2 + 508);
  *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
  *(_QWORD *)(a1 + 520) = v45;
  v48 = *(_QWORD *)(a2 + 528);
  *(_QWORD *)(a1 + 528) = v48;
  swift_bridgeObjectRetain(v46);
  swift_bridgeObjectRetain(v45);
  swift_bridgeObjectRetain(v48);
  v49 = *(_QWORD *)(a2 + 576);
  if (!v49)
    goto LABEL_20;
LABEL_18:
  v50 = *(_QWORD *)(a2 + 536);
  *(_QWORD *)(a1 + 536) = v50;
  *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
  *(_BYTE *)(a1 + 552) = *(_BYTE *)(a2 + 552);
  *(_QWORD *)(a1 + 556) = *(_QWORD *)(a2 + 556);
  *(_BYTE *)(a1 + 564) = *(_BYTE *)(a2 + 564);
  *(_QWORD *)(a1 + 568) = *(_QWORD *)(a2 + 568);
  *(_QWORD *)(a1 + 576) = v49;
  v51 = *(_QWORD *)(a2 + 584);
  *(_QWORD *)(a1 + 584) = v51;
  swift_bridgeObjectRetain(v50);
  swift_bridgeObjectRetain(v49);
  swift_bridgeObjectRetain(v51);
LABEL_21:
  v54 = *(_QWORD *)(a2 + 592);
  *(_QWORD *)(a1 + 592) = v54;
  swift_bridgeObjectRetain(v54);
  return a1;
}

uint64_t assignWithCopy for CRLShapePresetData(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 *v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  uint64_t v60;
  __int128 v61;
  uint64_t v62;
  uint64_t v63;
  _OWORD *v64;
  _OWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  __int128 v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  _DWORD *v101;
  int *v102;
  uint64_t v103;
  int v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  int v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  _OWORD *v132;
  __int128 *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  _OWORD *v149;
  __int128 *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  uint64_t v166;

  v4 = a2[12];
  if (*(_QWORD *)(a1 + 96))
  {
    if (v4)
    {
      v5 = *a2;
      *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
      *(_QWORD *)a1 = v5;
      LODWORD(v5) = *((_DWORD *)a2 + 4);
      *(_BYTE *)(a1 + 20) = *((_BYTE *)a2 + 20);
      *(_DWORD *)(a1 + 16) = v5;
      v6 = a2[3];
      *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
      *(_QWORD *)(a1 + 24) = v6;
      *(_DWORD *)(a1 + 36) = *((_DWORD *)a2 + 9);
      *(_DWORD *)(a1 + 40) = *((_DWORD *)a2 + 10);
      *(_DWORD *)(a1 + 44) = *((_DWORD *)a2 + 11);
      v7 = a2[6];
      *(_QWORD *)(a1 + 48) = v7;
      swift_bridgeObjectRetain(v7);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 56) = *((_DWORD *)a2 + 14);
      *(_DWORD *)(a1 + 60) = *((_DWORD *)a2 + 15);
      *(_DWORD *)(a1 + 64) = *((_DWORD *)a2 + 16);
      *(_DWORD *)(a1 + 68) = *((_DWORD *)a2 + 17);
      v8 = a2[9];
      *(_QWORD *)(a1 + 72) = v8;
      swift_bridgeObjectRetain(v8);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 80) = *((_DWORD *)a2 + 20);
      v9 = a2[11];
      *(_QWORD *)(a1 + 88) = v9;
      swift_bridgeObjectRetain(v9);
      swift_bridgeObjectRelease();
      v10 = a2[12];
      *(_QWORD *)(a1 + 96) = v10;
      swift_bridgeObjectRetain(v10);
      swift_bridgeObjectRelease();
      v11 = (_OWORD *)(a1 + 144);
      v12 = *(_QWORD *)(a1 + 144);
      *(_DWORD *)(a1 + 104) = *((_DWORD *)a2 + 26);
      v13 = a2[14];
      *(_BYTE *)(a1 + 120) = *((_BYTE *)a2 + 120);
      *(_QWORD *)(a1 + 112) = v13;
      v14 = a2[16];
      *(_BYTE *)(a1 + 136) = *((_BYTE *)a2 + 136);
      *(_QWORD *)(a1 + 128) = v14;
      *(_DWORD *)(a1 + 140) = *((_DWORD *)a2 + 35);
      v16 = a2 + 18;
      v15 = a2[18];
      if (v12)
      {
        if (v15)
        {
          *(_QWORD *)(a1 + 144) = v15;
          swift_bridgeObjectRetain(v15);
          swift_bridgeObjectRelease();
          *(_DWORD *)(a1 + 152) = *((_DWORD *)a2 + 38);
          v17 = a2[20];
          *(_QWORD *)(a1 + 160) = v17;
          swift_bridgeObjectRetain(v17);
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_1008BAD90((_QWORD *)(a1 + 144));
          v52 = a2[20];
          *v11 = *v16;
          *(_QWORD *)(a1 + 160) = v52;
        }
      }
      else if (v15)
      {
        *(_QWORD *)(a1 + 144) = v15;
        *(_DWORD *)(a1 + 152) = *((_DWORD *)a2 + 38);
        v40 = a2[20];
        *(_QWORD *)(a1 + 160) = v40;
        swift_bridgeObjectRetain(v15);
        swift_bridgeObjectRetain(v40);
      }
      else
      {
        v61 = *v16;
        *(_QWORD *)(a1 + 160) = a2[20];
        *v11 = v61;
      }
      v62 = a2[21];
      *(_BYTE *)(a1 + 176) = *((_BYTE *)a2 + 176);
      *(_QWORD *)(a1 + 168) = v62;
      v63 = a2[23];
      *(_QWORD *)(a1 + 184) = v63;
      swift_bridgeObjectRetain(v63);
      swift_bridgeObjectRelease();
      v64 = (_OWORD *)(a1 + 192);
      v65 = a2 + 24;
      v66 = a2[25];
      if (*(_QWORD *)(a1 + 200))
      {
        if (v66)
        {
          *(_QWORD *)(a1 + 192) = a2[24];
          v67 = a2[25];
          *(_QWORD *)(a1 + 200) = v67;
          swift_bridgeObjectRetain(v67);
          swift_bridgeObjectRelease();
          *(_DWORD *)(a1 + 208) = *((_DWORD *)a2 + 52);
          *(_BYTE *)(a1 + 212) = *((_BYTE *)a2 + 212);
          v68 = a2[27];
          *(_QWORD *)(a1 + 216) = v68;
          swift_bridgeObjectRetain(v68);
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_1008BADC0(a1 + 192);
          v71 = *((_OWORD *)a2 + 13);
          *v64 = *v65;
          *(_OWORD *)(a1 + 208) = v71;
        }
      }
      else if (v66)
      {
        *(_QWORD *)(a1 + 192) = a2[24];
        v69 = a2[25];
        *(_QWORD *)(a1 + 200) = v69;
        *(_DWORD *)(a1 + 208) = *((_DWORD *)a2 + 52);
        *(_BYTE *)(a1 + 212) = *((_BYTE *)a2 + 212);
        v70 = a2[27];
        *(_QWORD *)(a1 + 216) = v70;
        swift_bridgeObjectRetain(v69);
        swift_bridgeObjectRetain(v70);
      }
      else
      {
        v72 = *((_OWORD *)a2 + 13);
        *v64 = *v65;
        *(_OWORD *)(a1 + 208) = v72;
      }
      v73 = a2[28];
      *(_QWORD *)(a1 + 224) = v73;
      swift_bridgeObjectRetain(v73);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1009AF5B4((_QWORD *)a1);
      v30 = *((_OWORD *)a2 + 1);
      v29 = *((_OWORD *)a2 + 2);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v30;
      *(_OWORD *)(a1 + 32) = v29;
      v31 = *((_OWORD *)a2 + 6);
      v33 = *((_OWORD *)a2 + 3);
      v32 = *((_OWORD *)a2 + 4);
      *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
      *(_OWORD *)(a1 + 96) = v31;
      *(_OWORD *)(a1 + 48) = v33;
      *(_OWORD *)(a1 + 64) = v32;
      v34 = *((_OWORD *)a2 + 10);
      v36 = *((_OWORD *)a2 + 7);
      v35 = *((_OWORD *)a2 + 8);
      *(_OWORD *)(a1 + 144) = *((_OWORD *)a2 + 9);
      *(_OWORD *)(a1 + 160) = v34;
      *(_OWORD *)(a1 + 112) = v36;
      *(_OWORD *)(a1 + 128) = v35;
      v38 = *((_OWORD *)a2 + 12);
      v37 = *((_OWORD *)a2 + 13);
      v39 = *((_OWORD *)a2 + 11);
      *(_QWORD *)(a1 + 224) = a2[28];
      *(_OWORD *)(a1 + 192) = v38;
      *(_OWORD *)(a1 + 208) = v37;
      *(_OWORD *)(a1 + 176) = v39;
    }
  }
  else if (v4)
  {
    v18 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    *(_QWORD *)a1 = v18;
    LODWORD(v18) = *((_DWORD *)a2 + 4);
    *(_BYTE *)(a1 + 20) = *((_BYTE *)a2 + 20);
    *(_DWORD *)(a1 + 16) = v18;
    v19 = a2[3];
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    *(_QWORD *)(a1 + 24) = v19;
    *(_DWORD *)(a1 + 36) = *((_DWORD *)a2 + 9);
    *(_DWORD *)(a1 + 40) = *((_DWORD *)a2 + 10);
    *(_DWORD *)(a1 + 44) = *((_DWORD *)a2 + 11);
    v20 = a2[6];
    *(_QWORD *)(a1 + 48) = v20;
    *(_DWORD *)(a1 + 56) = *((_DWORD *)a2 + 14);
    *(_DWORD *)(a1 + 60) = *((_DWORD *)a2 + 15);
    *(_DWORD *)(a1 + 64) = *((_DWORD *)a2 + 16);
    *(_DWORD *)(a1 + 68) = *((_DWORD *)a2 + 17);
    v21 = a2[9];
    *(_QWORD *)(a1 + 72) = v21;
    *(_DWORD *)(a1 + 80) = *((_DWORD *)a2 + 20);
    v22 = a2[11];
    *(_QWORD *)(a1 + 88) = v22;
    v23 = a2[12];
    *(_QWORD *)(a1 + 96) = v23;
    *(_DWORD *)(a1 + 104) = *((_DWORD *)a2 + 26);
    v24 = a2[14];
    *(_BYTE *)(a1 + 120) = *((_BYTE *)a2 + 120);
    *(_QWORD *)(a1 + 112) = v24;
    v25 = a2[16];
    *(_BYTE *)(a1 + 136) = *((_BYTE *)a2 + 136);
    *(_QWORD *)(a1 + 128) = v25;
    *(_DWORD *)(a1 + 140) = *((_DWORD *)a2 + 35);
    v27 = (__int128 *)(a2 + 18);
    v26 = a2[18];
    swift_bridgeObjectRetain(v20);
    swift_bridgeObjectRetain(v21);
    swift_bridgeObjectRetain(v22);
    swift_bridgeObjectRetain(v23);
    if (v26)
    {
      *(_QWORD *)(a1 + 144) = v26;
      *(_DWORD *)(a1 + 152) = *((_DWORD *)a2 + 38);
      v28 = a2[20];
      *(_QWORD *)(a1 + 160) = v28;
      swift_bridgeObjectRetain(v26);
      swift_bridgeObjectRetain(v28);
    }
    else
    {
      v53 = *v27;
      *(_QWORD *)(a1 + 160) = a2[20];
      *(_OWORD *)(a1 + 144) = v53;
    }
    v54 = a2[21];
    *(_BYTE *)(a1 + 176) = *((_BYTE *)a2 + 176);
    *(_QWORD *)(a1 + 168) = v54;
    v55 = a2[23];
    *(_QWORD *)(a1 + 184) = v55;
    v56 = a2[25];
    swift_bridgeObjectRetain(v55);
    if (v56)
    {
      *(_QWORD *)(a1 + 192) = a2[24];
      v57 = a2[25];
      *(_QWORD *)(a1 + 200) = v57;
      *(_DWORD *)(a1 + 208) = *((_DWORD *)a2 + 52);
      *(_BYTE *)(a1 + 212) = *((_BYTE *)a2 + 212);
      v58 = a2[27];
      *(_QWORD *)(a1 + 216) = v58;
      swift_bridgeObjectRetain(v57);
      swift_bridgeObjectRetain(v58);
    }
    else
    {
      v59 = *((_OWORD *)a2 + 13);
      *(_OWORD *)(a1 + 192) = *((_OWORD *)a2 + 12);
      *(_OWORD *)(a1 + 208) = v59;
    }
    v60 = a2[28];
    *(_QWORD *)(a1 + 224) = v60;
    swift_bridgeObjectRetain(v60);
  }
  else
  {
    v41 = *(_OWORD *)a2;
    v42 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    *(_OWORD *)(a1 + 32) = v42;
    *(_OWORD *)a1 = v41;
    v43 = *((_OWORD *)a2 + 3);
    v44 = *((_OWORD *)a2 + 4);
    v45 = *((_OWORD *)a2 + 6);
    *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
    *(_OWORD *)(a1 + 96) = v45;
    *(_OWORD *)(a1 + 48) = v43;
    *(_OWORD *)(a1 + 64) = v44;
    v46 = *((_OWORD *)a2 + 7);
    v47 = *((_OWORD *)a2 + 8);
    v48 = *((_OWORD *)a2 + 10);
    *(_OWORD *)(a1 + 144) = *((_OWORD *)a2 + 9);
    *(_OWORD *)(a1 + 160) = v48;
    *(_OWORD *)(a1 + 112) = v46;
    *(_OWORD *)(a1 + 128) = v47;
    v49 = *((_OWORD *)a2 + 11);
    v50 = *((_OWORD *)a2 + 12);
    v51 = *((_OWORD *)a2 + 13);
    *(_QWORD *)(a1 + 224) = a2[28];
    *(_OWORD *)(a1 + 192) = v50;
    *(_OWORD *)(a1 + 208) = v51;
    *(_OWORD *)(a1 + 176) = v49;
  }
  v74 = (_QWORD *)(a1 + 232);
  v75 = a2 + 29;
  v76 = a2[41];
  if (*(_QWORD *)(a1 + 328))
  {
    if (v76)
    {
      v77 = *v75;
      *(_BYTE *)(a1 + 240) = *((_BYTE *)a2 + 240);
      *v74 = v77;
      LODWORD(v77) = *((_DWORD *)a2 + 62);
      *(_BYTE *)(a1 + 252) = *((_BYTE *)a2 + 252);
      *(_DWORD *)(a1 + 248) = v77;
      v78 = a2[32];
      *(_BYTE *)(a1 + 264) = *((_BYTE *)a2 + 264);
      *(_QWORD *)(a1 + 256) = v78;
      *(_DWORD *)(a1 + 268) = *((_DWORD *)a2 + 67);
      *(_DWORD *)(a1 + 272) = *((_DWORD *)a2 + 68);
      *(_DWORD *)(a1 + 276) = *((_DWORD *)a2 + 69);
      v79 = a2[35];
      *(_QWORD *)(a1 + 280) = v79;
      swift_bridgeObjectRetain(v79);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 288) = *((_DWORD *)a2 + 72);
      *(_DWORD *)(a1 + 292) = *((_DWORD *)a2 + 73);
      *(_DWORD *)(a1 + 296) = *((_DWORD *)a2 + 74);
      *(_DWORD *)(a1 + 300) = *((_DWORD *)a2 + 75);
      v80 = a2[38];
      *(_QWORD *)(a1 + 304) = v80;
      swift_bridgeObjectRetain(v80);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 312) = *((_DWORD *)a2 + 78);
      v81 = a2[40];
      *(_QWORD *)(a1 + 320) = v81;
      swift_bridgeObjectRetain(v81);
      swift_bridgeObjectRelease();
      v82 = a2[41];
      *(_QWORD *)(a1 + 328) = v82;
      swift_bridgeObjectRetain(v82);
      swift_bridgeObjectRelease();
      v83 = a2[42];
      *(_QWORD *)(a1 + 336) = v83;
      swift_bridgeObjectRetain(v83);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1007C50EC((_QWORD *)(a1 + 232));
      v92 = *(_OWORD *)(a2 + 31);
      v91 = *(_OWORD *)(a2 + 33);
      *(_OWORD *)v74 = *(_OWORD *)v75;
      *(_OWORD *)(a1 + 248) = v92;
      *(_OWORD *)(a1 + 264) = v91;
      v93 = *(_OWORD *)(a2 + 41);
      v95 = *(_OWORD *)(a2 + 35);
      v94 = *(_OWORD *)(a2 + 37);
      *(_OWORD *)(a1 + 312) = *(_OWORD *)(a2 + 39);
      *(_OWORD *)(a1 + 328) = v93;
      *(_OWORD *)(a1 + 280) = v95;
      *(_OWORD *)(a1 + 296) = v94;
    }
  }
  else if (v76)
  {
    v84 = *v75;
    *(_BYTE *)(a1 + 240) = *((_BYTE *)a2 + 240);
    *v74 = v84;
    LODWORD(v84) = *((_DWORD *)a2 + 62);
    *(_BYTE *)(a1 + 252) = *((_BYTE *)a2 + 252);
    *(_DWORD *)(a1 + 248) = v84;
    v85 = a2[32];
    *(_BYTE *)(a1 + 264) = *((_BYTE *)a2 + 264);
    *(_QWORD *)(a1 + 256) = v85;
    *(_DWORD *)(a1 + 268) = *((_DWORD *)a2 + 67);
    *(_DWORD *)(a1 + 272) = *((_DWORD *)a2 + 68);
    *(_DWORD *)(a1 + 276) = *((_DWORD *)a2 + 69);
    v86 = a2[35];
    *(_QWORD *)(a1 + 280) = v86;
    *(_DWORD *)(a1 + 288) = *((_DWORD *)a2 + 72);
    *(_DWORD *)(a1 + 292) = *((_DWORD *)a2 + 73);
    *(_DWORD *)(a1 + 296) = *((_DWORD *)a2 + 74);
    *(_DWORD *)(a1 + 300) = *((_DWORD *)a2 + 75);
    v87 = a2[38];
    *(_QWORD *)(a1 + 304) = v87;
    *(_DWORD *)(a1 + 312) = *((_DWORD *)a2 + 78);
    v88 = a2[40];
    *(_QWORD *)(a1 + 320) = v88;
    v89 = a2[41];
    *(_QWORD *)(a1 + 328) = v89;
    v90 = a2[42];
    *(_QWORD *)(a1 + 336) = v90;
    swift_bridgeObjectRetain(v86);
    swift_bridgeObjectRetain(v87);
    swift_bridgeObjectRetain(v88);
    swift_bridgeObjectRetain(v89);
    swift_bridgeObjectRetain(v90);
  }
  else
  {
    v96 = *(_OWORD *)v75;
    v97 = *(_OWORD *)(a2 + 33);
    *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 31);
    *(_OWORD *)(a1 + 264) = v97;
    *(_OWORD *)v74 = v96;
    v98 = *(_OWORD *)(a2 + 35);
    v99 = *(_OWORD *)(a2 + 37);
    v100 = *(_OWORD *)(a2 + 41);
    *(_OWORD *)(a1 + 312) = *(_OWORD *)(a2 + 39);
    *(_OWORD *)(a1 + 328) = v100;
    *(_OWORD *)(a1 + 280) = v98;
    *(_OWORD *)(a1 + 296) = v99;
  }
  v101 = (_DWORD *)(a1 + 344);
  v102 = (int *)(a2 + 43);
  v103 = a2[53];
  if (*(_QWORD *)(a1 + 424))
  {
    if (v103)
    {
      v104 = *v102;
      *(_BYTE *)(a1 + 348) = *((_BYTE *)a2 + 348);
      *v101 = v104;
      v105 = a2[44];
      *(_BYTE *)(a1 + 360) = *((_BYTE *)a2 + 360);
      *(_QWORD *)(a1 + 352) = v105;
      *(_DWORD *)(a1 + 364) = *((_DWORD *)a2 + 91);
      *(_DWORD *)(a1 + 368) = *((_DWORD *)a2 + 92);
      *(_DWORD *)(a1 + 372) = *((_DWORD *)a2 + 93);
      v106 = a2[47];
      *(_QWORD *)(a1 + 376) = v106;
      swift_bridgeObjectRetain(v106);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 384) = *((_DWORD *)a2 + 96);
      *(_DWORD *)(a1 + 388) = *((_DWORD *)a2 + 97);
      *(_DWORD *)(a1 + 392) = *((_DWORD *)a2 + 98);
      *(_DWORD *)(a1 + 396) = *((_DWORD *)a2 + 99);
      v107 = a2[50];
      *(_QWORD *)(a1 + 400) = v107;
      swift_bridgeObjectRetain(v107);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 408) = *((_DWORD *)a2 + 102);
      v108 = a2[52];
      *(_QWORD *)(a1 + 416) = v108;
      swift_bridgeObjectRetain(v108);
      swift_bridgeObjectRelease();
      v109 = a2[53];
      *(_QWORD *)(a1 + 424) = v109;
      swift_bridgeObjectRetain(v109);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 432) = *((_DWORD *)a2 + 108);
      *(_DWORD *)(a1 + 436) = *((_DWORD *)a2 + 109);
      *(_DWORD *)(a1 + 440) = *((_DWORD *)a2 + 110);
      *(_DWORD *)(a1 + 444) = *((_DWORD *)a2 + 111);
      *(_DWORD *)(a1 + 448) = *((_DWORD *)a2 + 112);
      v110 = a2[57];
      *(_QWORD *)(a1 + 456) = v110;
      swift_bridgeObjectRetain(v110);
      swift_bridgeObjectRelease();
      v111 = a2[58];
      *(_QWORD *)(a1 + 464) = v111;
      swift_bridgeObjectRetain(v111);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1009AF5E8((_QWORD *)(a1 + 344));
      v120 = *(_OWORD *)(a2 + 49);
      v122 = *(_OWORD *)v102;
      v121 = *(_OWORD *)(a2 + 45);
      *(_OWORD *)(a1 + 376) = *(_OWORD *)(a2 + 47);
      *(_OWORD *)(a1 + 392) = v120;
      *(_OWORD *)v101 = v122;
      *(_OWORD *)(a1 + 360) = v121;
      v123 = *(_OWORD *)(a2 + 57);
      v125 = *(_OWORD *)(a2 + 51);
      v124 = *(_OWORD *)(a2 + 53);
      *(_OWORD *)(a1 + 440) = *(_OWORD *)(a2 + 55);
      *(_OWORD *)(a1 + 456) = v123;
      *(_OWORD *)(a1 + 408) = v125;
      *(_OWORD *)(a1 + 424) = v124;
    }
  }
  else if (v103)
  {
    v112 = *v102;
    *(_BYTE *)(a1 + 348) = *((_BYTE *)a2 + 348);
    *v101 = v112;
    v113 = a2[44];
    *(_BYTE *)(a1 + 360) = *((_BYTE *)a2 + 360);
    *(_QWORD *)(a1 + 352) = v113;
    *(_DWORD *)(a1 + 364) = *((_DWORD *)a2 + 91);
    *(_DWORD *)(a1 + 368) = *((_DWORD *)a2 + 92);
    *(_DWORD *)(a1 + 372) = *((_DWORD *)a2 + 93);
    v114 = a2[47];
    *(_QWORD *)(a1 + 376) = v114;
    *(_DWORD *)(a1 + 384) = *((_DWORD *)a2 + 96);
    *(_DWORD *)(a1 + 388) = *((_DWORD *)a2 + 97);
    *(_DWORD *)(a1 + 392) = *((_DWORD *)a2 + 98);
    *(_DWORD *)(a1 + 396) = *((_DWORD *)a2 + 99);
    v115 = a2[50];
    *(_QWORD *)(a1 + 400) = v115;
    *(_DWORD *)(a1 + 408) = *((_DWORD *)a2 + 102);
    v116 = a2[52];
    *(_QWORD *)(a1 + 416) = v116;
    v117 = a2[53];
    *(_QWORD *)(a1 + 424) = v117;
    *(_DWORD *)(a1 + 432) = *((_DWORD *)a2 + 108);
    *(_DWORD *)(a1 + 436) = *((_DWORD *)a2 + 109);
    *(_DWORD *)(a1 + 440) = *((_DWORD *)a2 + 110);
    *(_DWORD *)(a1 + 444) = *((_DWORD *)a2 + 111);
    *(_DWORD *)(a1 + 448) = *((_DWORD *)a2 + 112);
    v118 = a2[57];
    *(_QWORD *)(a1 + 456) = v118;
    v119 = a2[58];
    *(_QWORD *)(a1 + 464) = v119;
    swift_bridgeObjectRetain(v114);
    swift_bridgeObjectRetain(v115);
    swift_bridgeObjectRetain(v116);
    swift_bridgeObjectRetain(v117);
    swift_bridgeObjectRetain(v118);
    swift_bridgeObjectRetain(v119);
  }
  else
  {
    v126 = *(_OWORD *)v102;
    v127 = *(_OWORD *)(a2 + 45);
    v128 = *(_OWORD *)(a2 + 49);
    *(_OWORD *)(a1 + 376) = *(_OWORD *)(a2 + 47);
    *(_OWORD *)(a1 + 392) = v128;
    *(_OWORD *)v101 = v126;
    *(_OWORD *)(a1 + 360) = v127;
    v129 = *(_OWORD *)(a2 + 51);
    v130 = *(_OWORD *)(a2 + 53);
    v131 = *(_OWORD *)(a2 + 57);
    *(_OWORD *)(a1 + 440) = *(_OWORD *)(a2 + 55);
    *(_OWORD *)(a1 + 456) = v131;
    *(_OWORD *)(a1 + 408) = v129;
    *(_OWORD *)(a1 + 424) = v130;
  }
  *(_BYTE *)(a1 + 472) = *((_BYTE *)a2 + 472);
  v132 = (_OWORD *)(a1 + 480);
  v133 = (__int128 *)(a2 + 60);
  v134 = a2[65];
  if (*(_QWORD *)(a1 + 520))
  {
    if (v134)
    {
      v135 = a2[60];
      *(_QWORD *)(a1 + 480) = v135;
      swift_bridgeObjectRetain(v135);
      swift_bridgeObjectRelease();
      v136 = a2[61];
      *(_BYTE *)(a1 + 496) = *((_BYTE *)a2 + 496);
      *(_QWORD *)(a1 + 488) = v136;
      *(_DWORD *)(a1 + 500) = *((_DWORD *)a2 + 125);
      *(_DWORD *)(a1 + 504) = *((_DWORD *)a2 + 126);
      *(_BYTE *)(a1 + 508) = *((_BYTE *)a2 + 508);
      *(_QWORD *)(a1 + 512) = a2[64];
      v137 = a2[65];
      *(_QWORD *)(a1 + 520) = v137;
      swift_bridgeObjectRetain(v137);
      swift_bridgeObjectRelease();
      v138 = a2[66];
      *(_QWORD *)(a1 + 528) = v138;
      swift_bridgeObjectRetain(v138);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100C8B16C((_QWORD *)(a1 + 480));
      v144 = *((_OWORD *)a2 + 31);
      v143 = *((_OWORD *)a2 + 32);
      v145 = *v133;
      *(_QWORD *)(a1 + 528) = a2[66];
      *(_OWORD *)(a1 + 496) = v144;
      *(_OWORD *)(a1 + 512) = v143;
      *v132 = v145;
    }
  }
  else if (v134)
  {
    v139 = a2[60];
    *(_QWORD *)(a1 + 480) = v139;
    v140 = a2[61];
    *(_BYTE *)(a1 + 496) = *((_BYTE *)a2 + 496);
    *(_QWORD *)(a1 + 488) = v140;
    *(_QWORD *)(a1 + 500) = *(uint64_t *)((char *)a2 + 500);
    *(_BYTE *)(a1 + 508) = *((_BYTE *)a2 + 508);
    *(_QWORD *)(a1 + 512) = a2[64];
    v141 = a2[65];
    *(_QWORD *)(a1 + 520) = v141;
    v142 = a2[66];
    *(_QWORD *)(a1 + 528) = v142;
    swift_bridgeObjectRetain(v139);
    swift_bridgeObjectRetain(v141);
    swift_bridgeObjectRetain(v142);
  }
  else
  {
    v146 = *v133;
    v147 = *((_OWORD *)a2 + 31);
    v148 = *((_OWORD *)a2 + 32);
    *(_QWORD *)(a1 + 528) = a2[66];
    *(_OWORD *)(a1 + 496) = v147;
    *(_OWORD *)(a1 + 512) = v148;
    *v132 = v146;
  }
  v149 = (_OWORD *)(a1 + 536);
  v150 = (__int128 *)(a2 + 67);
  v151 = a2[72];
  if (*(_QWORD *)(a1 + 576))
  {
    if (v151)
    {
      v152 = a2[67];
      *(_QWORD *)(a1 + 536) = v152;
      swift_bridgeObjectRetain(v152);
      swift_bridgeObjectRelease();
      v153 = a2[68];
      *(_BYTE *)(a1 + 552) = *((_BYTE *)a2 + 552);
      *(_QWORD *)(a1 + 544) = v153;
      *(_DWORD *)(a1 + 556) = *((_DWORD *)a2 + 139);
      *(_DWORD *)(a1 + 560) = *((_DWORD *)a2 + 140);
      *(_BYTE *)(a1 + 564) = *((_BYTE *)a2 + 564);
      *(_QWORD *)(a1 + 568) = a2[71];
      v154 = a2[72];
      *(_QWORD *)(a1 + 576) = v154;
      swift_bridgeObjectRetain(v154);
      swift_bridgeObjectRelease();
      v155 = a2[73];
      *(_QWORD *)(a1 + 584) = v155;
      swift_bridgeObjectRetain(v155);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100C8B16C((_QWORD *)(a1 + 536));
      v161 = *(_OWORD *)(a2 + 69);
      v160 = *(_OWORD *)(a2 + 71);
      v162 = *v150;
      *(_QWORD *)(a1 + 584) = a2[73];
      *(_OWORD *)(a1 + 552) = v161;
      *(_OWORD *)(a1 + 568) = v160;
      *v149 = v162;
    }
  }
  else if (v151)
  {
    v156 = a2[67];
    *(_QWORD *)(a1 + 536) = v156;
    v157 = a2[68];
    *(_BYTE *)(a1 + 552) = *((_BYTE *)a2 + 552);
    *(_QWORD *)(a1 + 544) = v157;
    *(_QWORD *)(a1 + 556) = *(uint64_t *)((char *)a2 + 556);
    *(_BYTE *)(a1 + 564) = *((_BYTE *)a2 + 564);
    *(_QWORD *)(a1 + 568) = a2[71];
    v158 = a2[72];
    *(_QWORD *)(a1 + 576) = v158;
    v159 = a2[73];
    *(_QWORD *)(a1 + 584) = v159;
    swift_bridgeObjectRetain(v156);
    swift_bridgeObjectRetain(v158);
    swift_bridgeObjectRetain(v159);
  }
  else
  {
    v163 = *v150;
    v164 = *(_OWORD *)(a2 + 69);
    v165 = *(_OWORD *)(a2 + 71);
    *(_QWORD *)(a1 + 584) = a2[73];
    *(_OWORD *)(a1 + 552) = v164;
    *(_OWORD *)(a1 + 568) = v165;
    *v149 = v163;
  }
  v166 = a2[74];
  *(_QWORD *)(a1 + 592) = v166;
  swift_bridgeObjectRetain(v166);
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for CRLShapePresetData(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x258uLL);
}

uint64_t assignWithTake for CRLShapePresetData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  _QWORD *v15;
  _QWORD *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _DWORD *v20;
  _DWORD *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;

  if (!*(_QWORD *)(a1 + 96))
    goto LABEL_7;
  if (!*(_QWORD *)(a2 + 96))
  {
    sub_1009AF5B4((_QWORD *)a1);
LABEL_7:
    v6 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v6;
    *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
    v7 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v7;
    v8 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v8;
    v9 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v9;
    v10 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v10;
    v11 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v11;
    v12 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v12;
    goto LABEL_16;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 36) = *(_QWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 144);
  v5 = *(_QWORD *)(a1 + 144);
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_DWORD *)(a1 + 140) = *(_DWORD *)(a2 + 140);
  if (v5)
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 144) = v4;
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
    sub_1008BAD90((_QWORD *)(a1 + 144));
  }
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
LABEL_10:
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(a1 + 200))
  {
LABEL_14:
    v14 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v14;
    goto LABEL_15;
  }
  v13 = *(_QWORD *)(a2 + 200);
  if (!v13)
  {
    sub_1008BADC0(a1 + 192);
    goto LABEL_14;
  }
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = v13;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 208) = *(_DWORD *)(a2 + 208);
  *(_BYTE *)(a1 + 212) = *(_BYTE *)(a2 + 212);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  swift_bridgeObjectRelease();
LABEL_15:
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  swift_bridgeObjectRelease();
LABEL_16:
  v15 = (_QWORD *)(a1 + 232);
  v16 = (_QWORD *)(a2 + 232);
  if (*(_QWORD *)(a1 + 328))
  {
    if (*(_QWORD *)(a2 + 328))
    {
      *v15 = *v16;
      *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
      *(_DWORD *)(a1 + 248) = *(_DWORD *)(a2 + 248);
      *(_BYTE *)(a1 + 252) = *(_BYTE *)(a2 + 252);
      *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
      *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
      *(_DWORD *)(a1 + 268) = *(_DWORD *)(a2 + 268);
      *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
      *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
      *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 312) = *(_DWORD *)(a2 + 312);
      *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
    sub_1007C50EC((_QWORD *)(a1 + 232));
  }
  v17 = *(_OWORD *)(a2 + 312);
  *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 312) = v17;
  *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
  v18 = *(_OWORD *)(a2 + 248);
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *(_OWORD *)(a1 + 248) = v18;
  v19 = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 280) = v19;
LABEL_21:
  v20 = (_DWORD *)(a1 + 344);
  v21 = (_DWORD *)(a2 + 344);
  if (*(_QWORD *)(a1 + 424))
  {
    if (*(_QWORD *)(a2 + 424))
    {
      *v20 = *v21;
      *(_BYTE *)(a1 + 348) = *(_BYTE *)(a2 + 348);
      *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
      *(_BYTE *)(a1 + 360) = *(_BYTE *)(a2 + 360);
      *(_DWORD *)(a1 + 364) = *(_DWORD *)(a2 + 364);
      *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
      *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
      *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 408) = *(_DWORD *)(a2 + 408);
      *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
      *(_DWORD *)(a1 + 448) = *(_DWORD *)(a2 + 448);
      *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 464) = *(_QWORD *)(a2 + 464);
      swift_bridgeObjectRelease();
      goto LABEL_26;
    }
    sub_1009AF5E8((_QWORD *)(a1 + 344));
  }
  v22 = *(_OWORD *)(a2 + 424);
  *(_OWORD *)(a1 + 408) = *(_OWORD *)(a2 + 408);
  *(_OWORD *)(a1 + 424) = v22;
  v23 = *(_OWORD *)(a2 + 456);
  *(_OWORD *)(a1 + 440) = *(_OWORD *)(a2 + 440);
  *(_OWORD *)(a1 + 456) = v23;
  v24 = *(_OWORD *)(a2 + 360);
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *(_OWORD *)(a1 + 360) = v24;
  v25 = *(_OWORD *)(a2 + 392);
  *(_OWORD *)(a1 + 376) = *(_OWORD *)(a2 + 376);
  *(_OWORD *)(a1 + 392) = v25;
LABEL_26:
  *(_BYTE *)(a1 + 472) = *(_BYTE *)(a2 + 472);
  if (*(_QWORD *)(a1 + 520))
  {
    if (*(_QWORD *)(a2 + 520))
    {
      *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
      *(_BYTE *)(a1 + 496) = *(_BYTE *)(a2 + 496);
      *(_DWORD *)(a1 + 500) = *(_DWORD *)(a2 + 500);
      *(_DWORD *)(a1 + 504) = *(_DWORD *)(a2 + 504);
      *(_BYTE *)(a1 + 508) = *(_BYTE *)(a2 + 508);
      *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
      *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
      swift_bridgeObjectRelease();
      goto LABEL_31;
    }
    sub_100C8B16C((_QWORD *)(a1 + 480));
  }
  v26 = *(_OWORD *)(a2 + 496);
  *(_OWORD *)(a1 + 480) = *(_OWORD *)(a2 + 480);
  *(_OWORD *)(a1 + 496) = v26;
  *(_OWORD *)(a1 + 512) = *(_OWORD *)(a2 + 512);
  *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
LABEL_31:
  if (!*(_QWORD *)(a1 + 576))
  {
LABEL_35:
    v27 = *(_OWORD *)(a2 + 552);
    *(_OWORD *)(a1 + 536) = *(_OWORD *)(a2 + 536);
    *(_OWORD *)(a1 + 552) = v27;
    *(_OWORD *)(a1 + 568) = *(_OWORD *)(a2 + 568);
    *(_QWORD *)(a1 + 584) = *(_QWORD *)(a2 + 584);
    goto LABEL_36;
  }
  if (!*(_QWORD *)(a2 + 576))
  {
    sub_100C8B16C((_QWORD *)(a1 + 536));
    goto LABEL_35;
  }
  *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
  *(_BYTE *)(a1 + 552) = *(_BYTE *)(a2 + 552);
  *(_DWORD *)(a1 + 556) = *(_DWORD *)(a2 + 556);
  *(_DWORD *)(a1 + 560) = *(_DWORD *)(a2 + 560);
  *(_BYTE *)(a1 + 564) = *(_BYTE *)(a2 + 564);
  *(_QWORD *)(a1 + 568) = *(_QWORD *)(a2 + 568);
  *(_QWORD *)(a1 + 576) = *(_QWORD *)(a2 + 576);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 584) = *(_QWORD *)(a2 + 584);
  swift_bridgeObjectRelease();
LABEL_36:
  *(_QWORD *)(a1 + 592) = *(_QWORD *)(a2 + 592);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLShapePresetData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 600))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 592);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLShapePresetData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 600) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 592) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 600) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLShapePresetData()
{
  return &type metadata for CRLShapePresetData;
}

unint64_t sub_100C90F5C()
{
  unint64_t result;

  result = qword_10140D218;
  if (!qword_10140D218)
  {
    result = swift_getWitnessTable(&unk_100F31434, &type metadata for CRLShapePresetData);
    atomic_store(result, (unint64_t *)&qword_10140D218);
  }
  return result;
}

unint64_t sub_100C90FB0()
{
  unint64_t result;

  result = qword_10140D220;
  if (!qword_10140D220)
  {
    result = swift_getWitnessTable(&unk_100F31524, &type metadata for CRLShapePresetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10140D220);
  }
  return result;
}

unint64_t sub_100C90FF8()
{
  unint64_t result;

  result = qword_10140D228;
  if (!qword_10140D228)
  {
    result = swift_getWitnessTable(&unk_100F31634, &type metadata for CRLShapePresetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10140D228);
  }
  return result;
}

unint64_t sub_100C91040()
{
  unint64_t result;

  result = qword_10140D230;
  if (!qword_10140D230)
  {
    result = swift_getWitnessTable(&unk_100F315FC, &type metadata for CRLShapePresetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10140D230);
  }
  return result;
}

unint64_t sub_100C91088()
{
  unint64_t result;

  result = qword_10140D238;
  if (!qword_10140D238)
  {
    result = swift_getWitnessTable(&unk_100F3155C, &type metadata for CRLShapePresetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10140D238);
  }
  return result;
}

unint64_t sub_100C910D0()
{
  unint64_t result;

  result = qword_10140D240;
  if (!qword_10140D240)
  {
    result = swift_getWitnessTable(&unk_100F315D4, &type metadata for CRLShapePresetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10140D240);
  }
  return result;
}

unint64_t sub_100C91118()
{
  unint64_t result;

  result = qword_10140D248;
  if (!qword_10140D248)
  {
    result = swift_getWitnessTable(&unk_100F315AC, &type metadata for CRLShapePresetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10140D248);
  }
  return result;
}

uint64_t sub_100C9115C()
{
  return sub_1006047EC(&qword_10140D250, &qword_10140D258);
}

unint64_t sub_100C91184()
{
  unint64_t result;

  result = qword_10140D260;
  if (!qword_10140D260)
  {
    result = swift_getWitnessTable(&unk_100F316FC, &type metadata for CRLWPShapePresetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10140D260);
  }
  return result;
}

unint64_t sub_100C911CC()
{
  unint64_t result;

  result = qword_10140D268;
  if (!qword_10140D268)
  {
    result = swift_getWitnessTable(&unk_100F3147C, &type metadata for CRLShapePresetData);
    atomic_store(result, (unint64_t *)&qword_10140D268);
  }
  return result;
}

unint64_t sub_100C91214()
{
  unint64_t result;

  result = qword_10140D270;
  if (!qword_10140D270)
  {
    result = swift_getWitnessTable(&unk_100F314DC, &type metadata for CRLShapePresetData);
    atomic_store(result, (unint64_t *)&qword_10140D270);
  }
  return result;
}

uint64_t sub_100C91258(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char v12;

  if (a1 == 0x656B6F727473 && a2 == 0xE600000000000000)
  {
    v5 = 0xE600000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x656B6F727473, 0xE600000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 1819044198 && a2 == 0xE400000000000000)
  {
    v7 = 0xE400000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(1819044198, 0xE400000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x776F64616873 && a2 == 0xE600000000000000)
  {
    v8 = 0xE600000000000000;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x776F64616873, 0xE600000000000000, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 0xD000000000000015)
  {
    v9 = 0x80000001010077D0;
    if (a2 == 0x80000001010077D0)
      goto LABEL_25;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000015, 0x80000001010077D0, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
LABEL_25:
    swift_bridgeObjectRelease(v9);
    return 3;
  }
  if (a1 == 0x656E694C7466656CLL && a2 == 0xEB00000000646E45)
  {
    v10 = 0xEB00000000646E45;
LABEL_31:
    swift_bridgeObjectRelease(v10);
    return 4;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x656E694C7466656CLL, 0xEB00000000646E45, a1, a2, 0) & 1) != 0)
  {
    v10 = a2;
    goto LABEL_31;
  }
  if (a1 == 0x6E694C7468676972 && a2 == 0xEC000000646E4565)
  {
    v11 = 0xEC000000646E4565;
LABEL_37:
    swift_bridgeObjectRelease(v11);
    return 5;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E694C7468676972, 0xEC000000646E4565, a1, a2, 0) & 1) != 0)
  {
    v11 = a2;
    goto LABEL_37;
  }
  if (a1 == 0xD000000000000010 && a2 == 0x8000000100FAF1E0)
  {
    swift_bridgeObjectRelease(0x8000000100FAF1E0);
    return 6;
  }
  else
  {
    v12 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x8000000100FAF1E0, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v12 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

void sub_100C91544(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  _QWORD *v75;
  _QWORD v76[75];
  uint64_t v77[75];
  uint64_t v78;
  _QWORD v79[16];
  uint64_t v80;
  _QWORD v81[29];
  uint64_t v82;
  _QWORD v83[76];
  int v84;
  char v85;
  char v86;
  char v87;

  v5 = sub_1004B804C(&qword_10140D278);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83[74] = _swiftEmptyDictionarySingleton;
  v9 = a1[3];
  v10 = a1[4];
  v75 = a1;
  sub_1004BB5A4(a1, v9);
  v11 = sub_100C91088();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLShapePresetData.CodingKeys, &type metadata for CRLShapePresetData.CodingKeys, v11, v9, v10);
  if (v2)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v75);
    swift_bridgeObjectRelease();
  }
  else
  {
    v73 = a2;
    v74 = v6;
    v87 = 0;
    v12 = sub_1008BDD9C();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&type metadata for CRLStrokeData, &v87, v5, &type metadata for CRLStrokeData, v12);
    sub_1004C4938((uint64_t)&v82, (uint64_t)v81, (uint64_t *)&unk_1013F1530);
    sub_1004C4938((uint64_t)v81, (uint64_t)v83, (uint64_t *)&unk_1013F1530);
    LOBYTE(v76[0]) = 1;
    sub_1008D3994(v81, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004C3830);
    v13 = sub_1007C9E2C();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&type metadata for CRLFillData, v76, v5, &type metadata for CRLFillData, v13);
    v14 = v77[0];
    v15 = v77[11];
    v16 = v77[12];
    v17 = v77[13];
    v83[29] = v77[0];
    v83[30] = v77[1];
    v83[31] = v77[2];
    v83[32] = v77[3];
    v83[33] = v77[4];
    v83[34] = v77[5];
    v83[35] = v77[6];
    v83[36] = v77[7];
    v83[37] = v77[8];
    v83[38] = v77[9];
    v83[39] = v77[10];
    v83[40] = v77[11];
    v83[41] = v77[12];
    v83[42] = v77[13];
    v86 = 2;
    v63 = v77[10];
    v64 = v77[9];
    v65 = v77[8];
    v66 = v77[1];
    v67 = v77[2];
    v68 = v77[3];
    v69 = v77[7];
    v71 = v77[4];
    v72 = v77[5];
    v70 = v77[6];
    sub_1004C485C(v77[0], v77[1], v77[2], v77[3], v77[4], v77[5], v77[6], v77[7], v77[8], v77[9], v77[10], v77[11], v77[12], v77[13]);
    v18 = sub_10080BAE0();
    v62 = 0;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&type metadata for CRLShadowData, &v86, v5, &type metadata for CRLShadowData, v18);
    v58 = v17;
    v59 = v16;
    v60 = v15;
    v61 = v14;
    sub_1004C4938((uint64_t)&v80, (uint64_t)v79, (uint64_t *)&unk_1013F02D0);
    sub_1004C4938((uint64_t)v79, (uint64_t)&v83[43], (uint64_t *)&unk_1013F02D0);
    LOBYTE(v77[0]) = 3;
    sub_1009351AC(v79, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004C396C);
    v19 = KeyedDecodingContainer.decode(_:forKey:)(v77, v5);
    LODWORD(v14) = v19 & 1;
    LOBYTE(v83[59]) = v19 & 1;
    LOBYTE(v76[0]) = 4;
    v20 = sub_100785B80();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&type metadata for CRLLineEndData, v76, v5, &type metadata for CRLLineEndData, v20);
    v84 = v14;
    v21 = v77[3];
    v22 = v77[4];
    v23 = v77[5];
    v24 = v20;
    v25 = v77[6];
    v83[60] = v77[0];
    v83[61] = v77[1];
    v83[62] = v77[2];
    v83[63] = v77[3];
    v83[64] = v77[4];
    v83[65] = v77[5];
    v83[66] = v77[6];
    LOBYTE(v76[0]) = 5;
    v55 = v77[0];
    v56 = v77[1];
    v57 = v77[2];
    sub_1004C48C4(v77[0], v77[1], v77[2], v77[3], v77[4], v77[5], v77[6]);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&type metadata for CRLLineEndData, v76, v5, &type metadata for CRLLineEndData, v24);
    v50 = v25;
    v51 = v21;
    v52 = v22;
    v53 = v23;
    v26 = v77[0];
    v27 = v77[1];
    v28 = v77[2];
    v29 = v77[3];
    v30 = v77[4];
    v54 = v77[5];
    v48 = v77[6];
    v83[67] = v77[0];
    v83[68] = v77[1];
    v83[69] = v77[2];
    v83[70] = v77[3];
    v83[71] = v77[4];
    v83[72] = v77[5];
    v83[73] = v77[6];
    v49 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    v85 = 6;
    v44 = v26;
    v45 = v28;
    v46 = v27;
    v47 = v30;
    v31 = v28;
    v32 = v54;
    v33 = v30;
    v34 = v48;
    sub_1004C48C4(v26, v27, v31, v29, v33, v54, v48);
    v35 = sub_1004F3130();
    KeyedDecodingContainer.decode<A>(_:forKey:)(v49, &v85, v5, v49, v35);
    (*(void (**)(char *, uint64_t))(v74 + 8))(v8, v5);
    v36 = v78;
    swift_bridgeObjectRetain(v78);
    swift_bridgeObjectRelease();
    v83[74] = v36;
    sub_1004C4938((uint64_t)v81, (uint64_t)v76, (uint64_t *)&unk_1013F1530);
    v76[29] = v61;
    v76[30] = v66;
    v76[31] = v67;
    v76[32] = v68;
    v76[33] = v71;
    v76[34] = v72;
    v76[35] = v70;
    v76[36] = v69;
    v76[37] = v65;
    v76[38] = v64;
    v76[39] = v63;
    v76[40] = v60;
    v76[41] = v59;
    v76[42] = v58;
    sub_1004C4938((uint64_t)v79, (uint64_t)&v76[43], (uint64_t *)&unk_1013F02D0);
    LOBYTE(v76[59]) = v84;
    v76[60] = v55;
    v76[61] = v56;
    v76[62] = v57;
    v37 = v32;
    v76[63] = v51;
    v76[64] = v52;
    v38 = v44;
    v39 = v45;
    v76[65] = v53;
    v40 = v34;
    v41 = v46;
    v42 = v47;
    v76[66] = v50;
    v76[67] = v44;
    v76[68] = v46;
    v76[69] = v45;
    v76[70] = v29;
    v76[71] = v47;
    v76[72] = v37;
    v76[73] = v40;
    v76[74] = v36;
    sub_100784C0C((uint64_t)v76);
    swift_bridgeObjectRelease();
    sub_1004C41DC(v38, v41, v39, v29, v42, v54, v40);
    sub_1004C41DC(v55, v56, v57, v51, v52, v53, v50);
    sub_1009351AC(v79, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004C3718);
    sub_1004C4174(v61, v66, v67, v68, v71, v72, v70, v69, v65, v64, v63, v60, v59, v58);
    sub_1008D3994(v81, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004C35DC);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v75);
    memcpy(v77, v83, sizeof(v77));
    sub_1007849F0((uint64_t)v77);
    memcpy(v73, v76, 0x258uLL);
  }
}

unint64_t sub_100C92050()
{
  unint64_t result;

  result = qword_10140D288;
  if (!qword_10140D288)
  {
    result = swift_getWitnessTable(&unk_100F3165C, &type metadata for CRLShapePresetData);
    atomic_store(result, (unint64_t *)&qword_10140D288);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CRLShapePresetData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_100C920E0 + 4 * byte_100F310DB[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_100C92114 + 4 * byte_100F310D6[v4]))();
}

uint64_t sub_100C92114(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100C9211C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100C92124);
  return result;
}

uint64_t sub_100C92130(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100C92138);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_100C9213C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100C92144(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLShapePresetData.CodingKeys()
{
  return &type metadata for CRLShapePresetData.CodingKeys;
}

unint64_t sub_100C92164()
{
  unint64_t result;

  result = qword_10140D290;
  if (!qword_10140D290)
  {
    result = swift_getWitnessTable(&unk_100F31864, &type metadata for CRLShapePresetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10140D290);
  }
  return result;
}

uint64_t sub_100C921A8()
{
  uint64_t v0;

  sub_1004BBB8C(v0 + OBJC_IVAR____TtC8Freeform23CRLBoardShareSyncRecord_boardIdentifier);

  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100C921E8()
{
  return type metadata accessor for CRLBoardShareSyncRecord(0);
}

uint64_t type metadata accessor for CRLBoardShareSyncRecord(uint64_t a1)
{
  return sub_1004BD408(a1, qword_10140D2C0, (uint64_t)&nominal type descriptor for CRLBoardShareSyncRecord);
}

uint64_t sub_100C92204(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for CRLBoardIdentifierStorage(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    result = swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_100C92280()
{
  return type metadata accessor for CRLBoardShareSyncLocalChangeRecord(0);
}

uint64_t type metadata accessor for CRLBoardShareSyncLocalChangeRecord(uint64_t a1)
{
  return sub_1004BD408(a1, qword_10140D378, (uint64_t)&nominal type descriptor for CRLBoardShareSyncLocalChangeRecord);
}

uint64_t sub_100C9229C(uint64_t a1)
{
  void *v2;

  v2 = &unk_100F31938;
  return swift_updateClassMetadata2(a1, 256, 1, &v2, a1 + 104);
}

uint64_t sub_100C922DC()
{
  return type metadata accessor for CRLBoardShareSyncRemoteRecord(0);
}

uint64_t type metadata accessor for CRLBoardShareSyncRemoteRecord(uint64_t a1)
{
  return sub_1004BD408(a1, qword_10140D458, (uint64_t)&nominal type descriptor for CRLBoardShareSyncRemoteRecord);
}

uint64_t sub_100C922F8(uint64_t a1)
{
  _BYTE v2[8];

  return swift_updateClassMetadata2(a1, 256, 0, v2, a1 + 104);
}

uint64_t sub_100C9232C()
{
  uint64_t v0;

  sub_1004BBB8C(v0 + OBJC_IVAR____TtC8Freeform39CRLBoardShareSyncRemoteRecordIdentifier_boardIdentifier);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100C9235C()
{
  return type metadata accessor for CRLBoardShareSyncRemoteRecordIdentifier(0);
}

uint64_t type metadata accessor for CRLBoardShareSyncRemoteRecordIdentifier(uint64_t a1)
{
  return sub_1004BD408(a1, qword_10140D510, (uint64_t)&nominal type descriptor for CRLBoardShareSyncRemoteRecordIdentifier);
}

uint64_t sub_100C92378()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  __int128 v24;
  uint64_t v25;

  v0 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  __chkstk_darwin(v0);
  v2 = (char *)&v24 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for CRLProto_Data(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (__int128 *)((char *)&v24 - v8);
  v10 = type metadata accessor for CRLProto_BoardItemIdentifier(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  UnknownStorage.init()(v13);
  v25 = v10;
  v14 = (uint64_t)&v12[*(int *)(v10 + 20)];
  v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
  v16 = v15(v14, 1, 1, v3);
  v24 = xmmword_100EF78C0;
  *v9 = xmmword_100EF78C0;
  UnknownStorage.init()(v16);
  sub_10078F968(v14);
  sub_100552FCC((uint64_t)v9, v14);
  v15(v14, 0, 1, v3);
  v17 = UUID.crl_data()();
  v19 = v18;
  sub_100552F84(v14, (uint64_t)v2);
  v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3);
  if ((_DWORD)v20 == 1)
  {
    *(_OWORD *)v6 = v24;
    UnknownStorage.init()(v20);
    sub_10078F968((uint64_t)v2);
  }
  else
  {
    sub_100552FCC((uint64_t)v2, (uint64_t)v6);
  }
  sub_1004BBBC8(*(_QWORD *)v6, *((_QWORD *)v6 + 1));
  *(_QWORD *)v6 = v17;
  *((_QWORD *)v6 + 1) = v19;
  sub_10078F968(v14);
  sub_100552FCC((uint64_t)v6, v14);
  v15(v14, 0, 1, v3);
  v21 = sub_100C925C0();
  v22 = Message.serializedData(partial:)(0, v25, v21);
  sub_100C92608((uint64_t)v12);
  return v22;
}

unint64_t sub_100C925C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E1538;
  if (!qword_1013E1538)
  {
    v1 = type metadata accessor for CRLProto_BoardItemIdentifier(255);
    result = swift_getWitnessTable(&unk_100F24348, v1);
    atomic_store(result, (unint64_t *)&qword_1013E1538);
  }
  return result;
}

uint64_t sub_100C92608(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CRLProto_BoardItemIdentifier(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100C92644(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C92650);
}

uint64_t sub_100C92650(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_100C9268C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C92698);
}

uint64_t sub_100C92698(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for CRLServerSyncedPeerAddedItemEvent(uint64_t a1)
{
  uint64_t result;

  result = qword_10140D5F0;
  if (!qword_10140D5F0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLServerSyncedPeerAddedItemEvent);
  return result;
}

uint64_t sub_100C92728(char a1)
{
  id v1;
  NSString v2;
  char v3;
  void *v4;
  NSString v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  if ((a1 & 1) != 0)
  {
    v3 = sub_100B02EA0();
    v4 = (void *)objc_opt_self(UIDevice);
    if (objc_msgSend(v4, "crl_iPadDevice"))
    {
      if ((v3 & 1) != 0)
      {
LABEL_5:
        v1 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
LABEL_8:
        v2 = String._bridgeToObjectiveC()();
        goto LABEL_9;
      }
    }
    else if ((v3 & 1) != 0)
    {
      goto LABEL_5;
    }
    objc_msgSend(v4, "crl_iPadDevice");
    v1 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    goto LABEL_8;
  }
  v1 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v2 = String._bridgeToObjectiveC()();
LABEL_9:
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v1, "localizedStringForKey:value:table:", v2, v5, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v8 = v7;

  return v8;
}

id sub_100C92944(char a1)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;

  v2 = (void *)objc_opt_self(UIFont);
  v3 = v2;
  if ((a1 & 1) != 0)
    return objc_msgSend(v2, "preferredFontForTextStyle:", UIFontTextStyleCaption1);
  v4 = objc_msgSend(v2, "preferredFontForTextStyle:", UIFontTextStyleFootnote);
  v5 = objc_msgSend(v4, "fontDescriptor");
  v6 = objc_msgSend(v5, "fontDescriptorWithSymbolicTraits:", 2);

  if (!v6)
    return v4;
  objc_msgSend(v4, "pointSize");
  v7 = objc_msgSend(v3, "fontWithDescriptor:size:", v6);

  return v7;
}

id sub_100C92A4C(char a1)
{
  void *v1;
  char **v2;
  id v3;
  id v4;

  if ((a1 & 1) != 0)
  {
    v3 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
    v4 = objc_msgSend(v3, "accessibilityContrast");

    v1 = (void *)objc_opt_self(UIColor);
    v2 = &selRef_grayColor;
    if (v4 == (id)1)
      v2 = &selRef_darkGrayColor;
  }
  else
  {
    v1 = (void *)objc_opt_self(UIColor);
    v2 = &selRef_darkGrayColor;
  }
  return objc_msgSend(v1, *v2);
}

unint64_t sub_100C92AE8(char a1)
{
  char v1;
  uint64_t v2;
  uint64_t inited;
  NSString *v4;
  id v5;
  unint64_t v6;
  NSString *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  NSString *v13;
  id v14;
  id v15;
  _BYTE v17[152];

  v1 = a1 & 1;
  v2 = sub_1004B804C((uint64_t *)&unk_1013F4250);
  inited = swift_initStackObject(v2, v17);
  *(_OWORD *)(inited + 16) = xmmword_100EF5550;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  v4 = NSFontAttributeName;
  v5 = sub_100C92944(v1);
  v6 = sub_1004BF9E0();
  *(_QWORD *)(inited + 40) = v5;
  *(_QWORD *)(inited + 64) = v6;
  *(_QWORD *)(inited + 72) = NSForegroundColorAttributeName;
  v7 = NSForegroundColorAttributeName;
  v8 = sub_100C92A4C(v1);
  v9 = objc_msgSend(v8, "CGColor");

  type metadata accessor for CGColor(0);
  v11 = v10;
  *(_QWORD *)(inited + 80) = v9;
  *(_QWORD *)(inited + 104) = v10;
  *(_QWORD *)(inited + 112) = NSBackgroundColorAttributeName;
  v12 = (void *)objc_opt_self(CRLColor);
  v13 = NSBackgroundColorAttributeName;
  v14 = objc_msgSend(v12, "clearColor");
  v15 = objc_msgSend(v14, "CGColor");

  *(_QWORD *)(inited + 144) = v11;
  *(_QWORD *)(inited + 120) = v15;
  return sub_1008D4FE0(inited);
}

void sub_100C92C20(CGContext *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  id v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  id v18;
  id v19;
  CGColor *v20;
  double v21;
  id v22;
  NSString v23;
  NSString v24;
  id v25;
  id v26;
  NSString v27;
  Class isa;
  const __CFAttributedString *v29;
  const __CTLine *v30;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double v35;
  double v36;
  double v37;
  id v38;
  NSString v39;
  Class v40;
  const __CFAttributedString *v41;
  const __CTLine *v42;
  CGFloat v43;
  CGFloat v44;
  CGFloat v45;
  CGFloat v46;
  double v47;
  double v48;
  double v49;
  double v50;
  id v51;
  NSString v52;
  Class v53;
  const __CFAttributedString *v54;
  const __CTLine *v55;
  double v56;
  uint64_t v57;
  double v58;
  CGContext *v59;
  id v60;
  double v61;
  id v62;
  CGRect v63;
  CGRect BoundsWithOptions;
  CGRect v65;
  CGRect v66;
  CGRect v67;
  CGRect v68;

  v2 = v1;
  v4 = type metadata accessor for CGPathFillRule(0);
  v5 = *(_QWORD *)(v4 - 8);
  *(_QWORD *)&v6 = __chkstk_darwin(v4).n128_u64[0];
  v8 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend(v2, "layout", v6);
  objc_msgSend(v9, "boundsForStandardKnobs");
  v11 = v10;
  v13 = v12;
  v15 = v14;
  v17 = v16;

  v62 = objc_msgSend(objc_allocWithZone((Class)CRLColor), "initWithRed:green:blue:alpha:", 0.819607843, 0.819607843, 0.839215686, 1.0);
  v18 = objc_msgSend((id)objc_opt_self(CRLBezierPath), "bezierPathWithContinuousCornerRoundedRect:cornerRadius:", v11, v13, v15, v17, 10.0);
  v19 = objc_msgSend(v18, "CGPath");

  if (v19)
  {
    v58 = v17;
    v60 = v19;
    CGContextAddPath(a1, (CGPathRef)v19);
    (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v8, enum case for CGPathFillRule.winding(_:), v4);
    CGContextRef.clip(using:)(v8);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    v20 = (CGColor *)objc_msgSend(v62, "CGColor");
    CGContextSetFillColorWithColor(a1, v20);

    objc_msgSend(v2, "naturalBounds");
    v59 = a1;
    CGContextFillRect(a1, v63);
    v61 = *(double *)&v2[OBJC_IVAR____TtC8Freeform13CRLUnknownRep_sidePadding]
        + *(double *)&v2[OBJC_IVAR____TtC8Freeform13CRLUnknownRep_sidePadding];
    v21 = v15 - v61;
    v22 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v23 = String._bridgeToObjectiveC()();
    v24 = String._bridgeToObjectiveC()();
    v25 = objc_msgSend(v22, "localizedStringForKey:value:table:", v23, v24, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
    sub_100C92AE8(0);
    v26 = objc_allocWithZone((Class)NSAttributedString);
    v27 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1004BFA1C();
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    v29 = (const __CFAttributedString *)objc_msgSend(v26, "initWithString:attributes:", v27, isa, swift_bridgeObjectRelease().n128_f64[0]);

    v30 = CTLineCreateWithAttributedString(v29);
    BoundsWithOptions = CTLineGetBoundsWithOptions(v30, 0);
    x = BoundsWithOptions.origin.x;
    y = BoundsWithOptions.origin.y;
    width = BoundsWithOptions.size.width;
    height = BoundsWithOptions.size.height;
    v35 = CGRectGetWidth(BoundsWithOptions);
    v65.origin.x = x;
    v65.origin.y = y;
    v65.size.width = width;
    v65.size.height = height;
    v36 = CGRectGetHeight(v65);

    if (v21 >= v35)
      v37 = v36;
    else
      v37 = v36 + v36;
    sub_100C92728(1);
    sub_100C92AE8(1);
    v38 = objc_allocWithZone((Class)NSAttributedString);
    v39 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v40 = Dictionary._bridgeToObjectiveC()().super.isa;
    v41 = (const __CFAttributedString *)objc_msgSend(v38, "initWithString:attributes:", v39, v40, swift_bridgeObjectRelease().n128_f64[0]);

    v42 = CTLineCreateWithAttributedString(v41);
    v66 = CTLineGetBoundsWithOptions(v42, 0);
    v43 = v66.origin.x;
    v44 = v66.origin.y;
    v45 = v66.size.width;
    v46 = v66.size.height;
    v47 = CGRectGetWidth(v66);
    v67.origin.x = v43;
    v67.origin.y = v44;
    v67.size.width = v45;
    v67.size.height = v46;
    v48 = CGRectGetHeight(v67);

    if (v21 >= v47)
      v49 = v48;
    else
      v49 = v48 + v48;
    v50 = *(double *)&v2[OBJC_IVAR____TtC8Freeform13CRLUnknownRep_topPadding];
    sub_100C92728(1);
    sub_100C92AE8(1);
    v51 = objc_allocWithZone((Class)NSAttributedString);
    v52 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v53 = Dictionary._bridgeToObjectiveC()().super.isa;
    v54 = (const __CFAttributedString *)objc_msgSend(v51, "initWithString:attributes:", v52, v53, swift_bridgeObjectRelease().n128_f64[0]);

    v55 = CTLineCreateWithAttributedString(v54);
    v68 = CTLineGetBoundsWithOptions(v55, 0);
    v56 = CGRectGetWidth(v68);

    if (v61 + v56 > v15 || v37 + v49 + v50 + v50 > v58 || v15 / (v61 + v56) > 3.0)
      sub_100C939C0(v59);
    else
      sub_100C9364C(v59);

  }
  else
  {

  }
}

void sub_100C93364(char a1, char a2, CGContext *a3, CGFloat a4, double a5)
{
  char *v5;
  char *v6;
  char v11;
  id v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  double v21;
  double v22;
  id v23;
  id v24;
  double v25;
  double v26;
  id v27;
  id v28;
  id v29;
  NSString v30;
  Class isa;
  id v32;
  id v33;

  v6 = v5;
  v11 = a1 & 1;
  v12 = objc_msgSend(v6, "layout");
  objc_msgSend(v12, "boundsForStandardKnobs");
  v14 = v13;
  v16 = v15;
  v18 = v17;
  v20 = v19;

  v21 = *(double *)&v6[OBJC_IVAR____TtC8Freeform13CRLUnknownRep_sidePadding];
  v22 = sub_100061400(v14, v16, v18, v20) + (v18 - (v21 + v21)) * -0.5;
  CGContextSaveGState(a3);
  v33 = objc_msgSend(objc_allocWithZone((Class)CATextLayer), "init");
  v23 = sub_100C92944(v11);
  objc_msgSend(v33, "setFont:", v23);

  v24 = sub_100C92944(v11);
  objc_msgSend(v24, "pointSize");
  v26 = v25;

  objc_msgSend(v33, "setFontSize:", v26);
  v27 = sub_100C92A4C(v11);
  v28 = objc_msgSend(v27, "CGColor");

  objc_msgSend(v33, "setForegroundColor:", v28);
  sub_100C92728(v11);
  sub_100C92AE8(v11);
  v29 = objc_allocWithZone((Class)NSAttributedString);
  v30 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1004BFA1C();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v32 = objc_msgSend(v29, "initWithString:attributes:", v30, isa, swift_bridgeObjectRelease().n128_f64[0]);

  objc_msgSend(v33, "setString:", v32);
  CGContextTranslateCTM(a3, v21, a4);
  objc_msgSend(v33, "setWrapped:", a2 & 1);
  objc_msgSend(v33, "setTruncationMode:", kCATruncationEnd);
  objc_msgSend(v33, "setAlignmentMode:", kCAAlignmentCenter);
  objc_msgSend(v33, "setBounds:", v22, a4, v18 - (v21 + v21), a5);
  objc_msgSend(v33, "drawInContext:", a3);
  CGContextRestoreGState(a3);

}

void sub_100C9364C(CGContext *a1)
{
  char *v1;
  id v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  id v9;
  NSString v10;
  NSString v11;
  id v12;
  id v13;
  NSString v14;
  Class isa;
  const __CFAttributedString *v16;
  const __CTLine *v17;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double v22;
  double v23;
  char v24;
  id v25;
  NSString v26;
  Class v27;
  const __CFAttributedString *v28;
  const __CTLine *v29;
  CGFloat v30;
  CGFloat v31;
  CGFloat v32;
  CGFloat v33;
  double v34;
  double v35;
  char v36;
  double v37;
  CGFloat v38;
  CGFloat v39;
  CGFloat v40;
  CGFloat v41;
  CGFloat v42;
  CGRect BoundsWithOptions;
  CGRect v45;
  CGRect v46;
  CGRect v47;

  v2 = objc_msgSend(v1, "layout");
  objc_msgSend(v2, "boundsForStandardKnobs");
  v41 = v4;
  v42 = v3;
  v6 = v5;
  v40 = v7;

  v8 = v6
     - (*(double *)&v1[OBJC_IVAR____TtC8Freeform13CRLUnknownRep_sidePadding]
      + *(double *)&v1[OBJC_IVAR____TtC8Freeform13CRLUnknownRep_sidePadding]);
  v9 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v10 = String._bridgeToObjectiveC()();
  v11 = String._bridgeToObjectiveC()();
  v12 = objc_msgSend(v9, "localizedStringForKey:value:table:", v10, v11, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  sub_100C92AE8(0);
  v13 = objc_allocWithZone((Class)NSAttributedString);
  v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1004BFA1C();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v16 = (const __CFAttributedString *)objc_msgSend(v13, "initWithString:attributes:", v14, isa, swift_bridgeObjectRelease().n128_f64[0]);

  v17 = CTLineCreateWithAttributedString(v16);
  BoundsWithOptions = CTLineGetBoundsWithOptions(v17, 0);
  x = BoundsWithOptions.origin.x;
  y = BoundsWithOptions.origin.y;
  width = BoundsWithOptions.size.width;
  height = BoundsWithOptions.size.height;
  v22 = CGRectGetWidth(BoundsWithOptions);
  v45.origin.x = x;
  v45.origin.y = y;
  v45.size.width = width;
  v45.size.height = height;
  v23 = CGRectGetHeight(v45);

  v24 = v8 < v22;
  if (v8 < v22)
    v23 = v23 + v23;
  sub_100C92728(1);
  sub_100C92AE8(1);
  v25 = objc_allocWithZone((Class)NSAttributedString);
  v26 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v27 = Dictionary._bridgeToObjectiveC()().super.isa;
  v28 = (const __CFAttributedString *)objc_msgSend(v25, "initWithString:attributes:", v26, v27, swift_bridgeObjectRelease().n128_f64[0]);

  v29 = CTLineCreateWithAttributedString(v28);
  v46 = CTLineGetBoundsWithOptions(v29, 0);
  v30 = v46.origin.x;
  v31 = v46.origin.y;
  v32 = v46.size.width;
  v33 = v46.size.height;
  v34 = CGRectGetWidth(v46);
  v47.origin.x = v30;
  v47.origin.y = v31;
  v47.size.width = v32;
  v47.size.height = v33;
  v35 = CGRectGetHeight(v47);

  v36 = v8 < v34;
  if (v8 < v34)
    v35 = v35 + v35;
  sub_100061400(v42, v41, v6, v40);
  v38 = v37 + (v23 + v35) * -0.5;
  v39 = v23 + v38;
  sub_100C93364(0, v24, a1, v38, v23);
  sub_100C93364(1, v36, a1, v39, v35);
}

void sub_100C939C0(CGContext *a1)
{
  void *v1;
  void *v2;
  double v4;
  CGFloat v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  void *v12;
  id v13;
  id v14;
  NSString v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  CGFloat v27;
  CGFloat v28;
  id v29;
  NSString v30;
  id v31;
  id v32;
  void *v33;
  CGContext *v34;
  CGContext *v35;
  CGImage *v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  id v45;
  CGSize v46;

  v2 = v1;
  objc_msgSend(v2, "boundsForStandardKnobs");
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v12 = (void *)objc_opt_self(UIImageSymbolConfiguration);
  v13 = objc_msgSend(v12, "configurationWithPointSize:weight:", 4, 28.0);
  v14 = objc_msgSend((id)objc_opt_self(UIColor), "darkGrayColor");
  v45 = v13;
  v15 = String._bridgeToObjectiveC()();
  v16 = (void *)objc_opt_self(UIImage);
  v17 = objc_msgSend(v16, "systemImageNamed:withConfiguration:", v15, v45);

  if (v17)
  {
    v18 = v17;
    v19 = objc_msgSend(v2, "canvas");
    if (v19)
    {
      v20 = v19;
      objc_msgSend(v19, "contentsScale");
      v22 = v21;

      objc_msgSend(v18, "size");
      v25 = sub_1000603DC(v23, v24, v22);
      v27 = v25;
      v28 = v26;
      if (v26 < v25)
        v25 = v26;
      v29 = objc_msgSend(v12, "configurationWithPointSize:weight:", 4, v25);
      v30 = String._bridgeToObjectiveC()();
      v31 = objc_msgSend(v16, "systemImageNamed:withConfiguration:", v30, v29);

      if (v31)
      {
        v32 = objc_msgSend(v31, "imageWithTintColor:", v14);

      }
      else
      {

        v32 = 0;
      }
      v46.width = v27;
      v46.height = v28;
      UIGraphicsBeginImageContextWithOptions(v46, 0, v22);
      v34 = UIGraphicsGetCurrentContext();
      if (v34)
      {
        v35 = v34;
        if (v32)
          objc_msgSend(v32, "drawInRect:", sub_10005FDDC());
        v36 = CGBitmapContextCreateImage(v35);
        UIGraphicsEndImageContext();
        if (v36)
        {
          CGContextTranslateCTM(a1, 0.0, v11);
          CGContextScaleCTM(a1, 1.0, -1.0);
          objc_msgSend(v18, "size");
          v38 = v37;
          v39 = sub_100061400(v5, v7, v9, v11);
          v41 = sub_10005FD98(v39, v40, v38);
          CGContextRef.draw(_:in:byTiling:)(v36, 0, v41, v42, v43, v44);

LABEL_19:
          v33 = v32;
          goto LABEL_20;
        }
        sub_100757E04(&_mh_execute_header, (uint64_t)"drawUnsupportedSymbol(in:)", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUnknownRep.swift", 84, 2, 261, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"drawUnsupportedSymbol(in:)", 26, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUnknownRep.swift", 84, 2u, 261, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);

      }
      else
      {
        sub_100757E04(&_mh_execute_header, (uint64_t)"drawUnsupportedSymbol(in:)", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUnknownRep.swift", 84, 2, 253, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"drawUnsupportedSymbol(in:)", 26, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUnknownRep.swift", 84, 2u, 253, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);

      }
      goto LABEL_19;
    }

  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"drawUnsupportedSymbol(in:)", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUnknownRep.swift", 84, 2, 244, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"drawUnsupportedSymbol(in:)", 26, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUnknownRep.swift", 84, 2u, 244, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  }

  v33 = v45;
LABEL_20:

}

id sub_100C93F68()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLUnknownRep();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLUnknownRep()
{
  return objc_opt_self(_TtC8Freeform13CRLUnknownRep);
}

uint64_t sub_100C93FB8()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  return v4;
}

uint64_t sub_100C940B8(char a1)
{
  char v2;
  void *v3;
  unsigned int v4;
  id v5;
  NSString v6;
  NSString v7;
  id v8;
  uint64_t v9;
  uint64_t v10;

  v2 = sub_100B02EA0();
  v3 = (void *)objc_opt_self(UIDevice);
  v4 = objc_msgSend(v3, "crl_iPadDevice");
  if ((a1 & 1) == 0)
  {
    if (v4)
    {
      if ((v2 & 1) != 0)
        goto LABEL_11;
    }
    else if ((v2 & 1) != 0)
    {
LABEL_11:
      v5 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
LABEL_13:
      v6 = String._bridgeToObjectiveC()();
      goto LABEL_14;
    }
LABEL_12:
    objc_msgSend(v3, "crl_iPadDevice");
    v5 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    goto LABEL_13;
  }
  if (v4)
  {
    if ((v2 & 1) != 0)
      goto LABEL_11;
    goto LABEL_12;
  }
  if ((v2 & 1) == 0)
    goto LABEL_12;
  v5 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v6 = String._bridgeToObjectiveC()();
LABEL_14:
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend(v5, "localizedStringForKey:value:table:", v6, v7, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v10 = v9;

  return v10;
}

void sub_100C94340(uint64_t a1, char a2)
{
  char v4;
  NSString v5;
  NSString v6;
  id v7;
  void *v8;
  id v9;
  NSString v10;
  NSString v11;
  id v12;
  NSString v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  NSString v18;
  NSString v19;
  id v20;
  NSString v21;
  id v22;
  NSString v23;
  NSString v24;
  id v25;
  NSString v26;
  id v27;
  uint64_t v28;
  void *v29;
  _QWORD v30[5];
  uint64_t v31;

  sub_100C93FB8();
  v4 = sub_100B02EA0();
  sub_100C940B8(a2);
  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v5, v6, 1);

  v8 = (void *)objc_opt_self(NSBundle);
  v9 = objc_msgSend(v8, "mainBundle");
  if ((v4 & 1) != 0)
  {
    v10 = String._bridgeToObjectiveC()();
    v11 = String._bridgeToObjectiveC()();
    v12 = objc_msgSend(v9, "localizedStringForKey:value:table:", v10, v11, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
    v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v30[4] = sub_10091CBA0;
    v31 = 0;
    v30[0] = _NSConcreteStackBlock;
    v30[1] = *(_QWORD *)"";
    v30[2] = sub_1004C6194;
    v30[3] = &unk_10129ED40;
    v14 = _Block_copy(v30);
    swift_release(v31);
    v15 = (void *)objc_opt_self(UIAlertAction);
    v16 = objc_msgSend(v15, "actionWithTitle:style:handler:", v13, 0, v14);
    _Block_release(v14);

    v17 = objc_msgSend(v8, "mainBundle");
    v18 = String._bridgeToObjectiveC()();
    v19 = String._bridgeToObjectiveC()();
    v20 = objc_msgSend(v17, "localizedStringForKey:value:table:", v18, v19, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
    v21 = String._bridgeToObjectiveC()();
    v22 = objc_msgSend(v15, "actionWithTitle:style:handler:", v21, 1, 0, swift_bridgeObjectRelease().n128_f64[0]);

    objc_msgSend(v7, "addAction:", v16);
    objc_msgSend(v7, "addAction:", v22);

  }
  else
  {
    v23 = String._bridgeToObjectiveC()();
    v24 = String._bridgeToObjectiveC()();
    v25 = objc_msgSend(v9, "localizedStringForKey:value:table:", v23, v24, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
    v26 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v27 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v26, 0, 0);

    objc_msgSend(v7, "addAction:", v27);
  }
  v28 = objc_opt_self(CRLiOSCanvasViewController);
  v29 = (void *)swift_dynamicCastObjCClass(a1, v28);
  if (v29)
    objc_msgSend(v29, "presentViewController:animated:completion:", v7, 1, 0);
  sub_100CE39D8(v7);

}

double sub_100C94788(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

double sub_100C94798(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_100C947A0(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  __n128 v16;
  uint64_t v17;
  unsigned __int8 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD v27[4];

  v8 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v8);
  v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004CB7BC(a1, (uint64_t)v10, &qword_1013E01F0);
  v11 = swift_allocObject(&unk_10129EFA8, 56, 7);
  *(_QWORD *)(v11 + 16) = 0;
  v12 = (_QWORD *)(v11 + 16);
  *(_QWORD *)(v11 + 24) = 0;
  *(double *)(v11 + 32) = a4;
  *(_QWORD *)(v11 + 40) = a2;
  *(_QWORD *)(v11 + 48) = a3;
  v13 = type metadata accessor for TaskPriority(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v10, 1, v13);
  v16 = swift_retain(a3);
  if (v15 == 1)
  {
    sub_1004CB800((uint64_t)v10, &qword_1013E01F0);
    v17 = 7168;
LABEL_6:
    v25 = 0;
    return swift_task_create(v17, v25, (char *)&type metadata for () + 8, &unk_10140D988);
  }
  v18 = TaskPriority.rawValue.getter(v16);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v10, v13);
  v17 = v18 | 0x1C00;
  v19 = *v12;
  if (!*v12)
    goto LABEL_6;
  v20 = *(_QWORD *)(v11 + 24);
  ObjectType = swift_getObjectType(*v12);
  swift_unknownObjectRetain(v19);
  v22 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v20);
  v24 = v23;
  swift_unknownObjectRelease(v19);
  if (!(v24 | v22))
    goto LABEL_6;
  v27[0] = 0;
  v27[1] = 0;
  v25 = v27;
  v27[2] = v22;
  v27[3] = v24;
  return swift_task_create(v17, v25, (char *)&type metadata for () + 8, &unk_10140D988);
}

uint64_t sub_100C94974(char *a1, char *a2)
{
  return sub_10083BF9C(*a1, *a2);
}

Swift::Int sub_100C94980()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5, 0);
  if (v1)
    v2 = 0x6863746566;
  else
    v2 = 1702257011;
  if (v1)
    v3 = 0xE500000000000000;
  else
    v3 = 0xE400000000000000;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_100C949F4(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0x6863746566;
  else
    v2 = 1702257011;
  if (*v1)
    v3 = 0xE500000000000000;
  else
    v3 = 0xE400000000000000;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_100C94A44(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD v6[9];

  v2 = *v1;
  Hasher.init(_seed:)(v6, a1);
  if (v2)
    v3 = 0x6863746566;
  else
    v3 = 1702257011;
  if (v2)
    v4 = 0xE500000000000000;
  else
    v4 = 0xE400000000000000;
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

uint64_t sub_100C94AB4@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;
  char v7;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_101265AF8, v3);
  result = swift_bridgeObjectRelease(v4);
  if (v5 == 1)
    v7 = 1;
  else
    v7 = 2;
  if (!v5)
    v7 = 0;
  *a2 = v7;
  return result;
}

void sub_100C94B10(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 1702257011;
  if (*v1)
    v2 = 0x6863746566;
  v3 = 0xE400000000000000;
  if (*v1)
    v3 = 0xE500000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_100C94B44()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = 0x6E69747563657865;
  if (*v0 != 2)
    v1 = 0x656C756465686373;
  if (*v0 == 1)
    return 0x676E69646E6570;
  else
    return v1;
}

double sub_100C94BAC(uint64_t a1)
{
  return (double)a1 * (double)a1;
}

double sub_100C94BB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  __n128 v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double result;
  uint64_t v15;
  double *v16;
  _QWORD aBlock[5];
  uint64_t v18;

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(v0 + 56);
  aBlock[4] = sub_100C9AEDC;
  v18 = v0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1005D2FC0;
  aBlock[3] = &unk_10129F100;
  v9 = _Block_copy(aBlock);
  v10 = swift_retain(v0);
  static DispatchQoS.unspecified.getter(v10);
  v16 = _swiftEmptyArrayStorage;
  v11 = sub_1004CB65C();
  v12 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
  v13 = sub_1004CBA30((unint64_t *)&qword_1013E1D30, (uint64_t *)&unk_1013DFBF0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v16, v12, v13, v1, v11);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v4, v9);
  _Block_release(v9);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *(_QWORD *)&result = swift_release(v18).n128_u64[0];
  return result;
}

void sub_100C94D6C()
{
  sub_100C98B58();
}

double sub_100C94EE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  __n128 v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double *v24;
  _QWORD aBlock[5];
  uint64_t v26;

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v23 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CRLSyncActivity(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v21 = *(_QWORD *)(v1 + 56);
  sub_1004B8460(a1, (uint64_t)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CRLSyncActivity);
  v12 = *(unsigned __int8 *)(v10 + 80);
  v13 = (v12 + 24) & ~v12;
  v14 = swift_allocObject(&unk_10129F0C0, v13 + v11, v12 | 7);
  *(_QWORD *)(v14 + 16) = v1;
  sub_1004B84E0((uint64_t)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v14 + v13, type metadata accessor for CRLSyncActivity);
  aBlock[4] = sub_100C9A708;
  v26 = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1005D2FC0;
  aBlock[3] = &unk_10129F0D8;
  v15 = _Block_copy(aBlock);
  v16 = swift_retain(v1);
  static DispatchQoS.unspecified.getter(v16);
  v24 = _swiftEmptyArrayStorage;
  v17 = sub_1004CB65C();
  v18 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
  v19 = sub_1004CBA30((unint64_t *)&qword_1013E1D30, (uint64_t *)&unk_1013DFBF0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v24, v18, v19, v3, v17);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v5, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v22);
  *(_QWORD *)&result = swift_release(v26).n128_u64[0];
  return result;
}

uint64_t sub_100C9512C(uint64_t a1, char *a2)
{
  return sub_100C956B8(a2);
}

double sub_100C952F0(char a1, char a2)
{
  uint64_t v2;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  __n128 v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double result;
  uint64_t v20;
  double *v21;
  _QWORD aBlock[5];
  uint64_t v23;

  v4 = a1 & 1;
  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(_QWORD *)(v2 + 56);
  v13 = swift_allocObject(&unk_10129F070, 26, 7);
  *(_QWORD *)(v13 + 16) = v2;
  *(_BYTE *)(v13 + 24) = v4;
  *(_BYTE *)(v13 + 25) = a2;
  aBlock[4] = sub_100C9ADD4;
  v23 = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1005D2FC0;
  aBlock[3] = &unk_10129F088;
  v14 = _Block_copy(aBlock);
  v15 = swift_retain(v2);
  static DispatchQoS.unspecified.getter(v15);
  v21 = _swiftEmptyArrayStorage;
  v16 = sub_1004CB65C();
  v17 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
  v18 = sub_1004CBA30((unint64_t *)&qword_1013E1D30, (uint64_t *)&unk_1013DFBF0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v21, v17, v18, v5, v16);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v12, v8, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  *(_QWORD *)&result = swift_release(v23).n128_u64[0];
  return result;
}

double sub_100C954CC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  __n128 v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double result;
  uint64_t v23;
  double *v24;
  _QWORD aBlock[5];
  uint64_t v26;

  v4 = v3;
  v7 = a3 & 1;
  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchQoS(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = *(_QWORD *)(v4 + 56);
  v16 = swift_allocObject(&unk_10129F020, 41, 7);
  *(_QWORD *)(v16 + 16) = v4;
  *(_QWORD *)(v16 + 24) = a1;
  *(_QWORD *)(v16 + 32) = a2;
  *(_BYTE *)(v16 + 40) = v7;
  aBlock[4] = sub_100C9AD84;
  v26 = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1005D2FC0;
  aBlock[3] = &unk_10129F038;
  v17 = _Block_copy(aBlock);
  swift_retain(v4);
  v18 = swift_retain(a2);
  static DispatchQoS.unspecified.getter(v18);
  v24 = _swiftEmptyArrayStorage;
  v19 = sub_1004CB65C();
  v20 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
  v21 = sub_1004CBA30((unint64_t *)&qword_1013E1D30, (uint64_t *)&unk_1013DFBF0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v24, v20, v21, v8, v19);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v15, v11, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  *(_QWORD *)&result = swift_release(v26).n128_u64[0];
  return result;
}

uint64_t sub_100C956B8(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  _QWORD *v27;
  void *v28;
  id v29;
  char v30;
  unint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t inited;
  _QWORD *v35;
  unint64_t v36;
  char v37;
  uint64_t v38;
  unint64_t v39;
  id v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  int v52;
  __n128 v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  void (*v62)(uint64_t, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  BOOL v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  id v73;
  uint64_t v74;
  unint64_t v75;
  _BYTE *v76;
  __n128 v77;
  uint64_t v79;
  __n128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  id v93;
  __n128 v94;
  uint64_t v95;
  void *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  int v102;
  uint64_t v103;
  unint64_t v104;
  id v105;
  __n128 v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  int v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t (*v114)(uint64_t, uint64_t, uint64_t);
  uint64_t v115;
  int v116;
  uint64_t v117;
  int v118;
  void *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  unint64_t v127;
  id v128;
  __n128 v129;
  uint64_t v130;
  uint64_t v131;
  _QWORD *v132;
  uint64_t v133;
  void *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  unint64_t v140;
  uint64_t v141;
  unint64_t v142;
  id v143;
  __n128 v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t *v147;
  uint64_t v148;
  void *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  unint64_t v153;
  uint64_t v154;
  unint64_t v155;
  uint64_t v156;
  unint64_t v157;
  id v158;
  id v159;
  __n128 v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  void *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  unint64_t v172;
  uint64_t v173;
  uint64_t v174;
  unint64_t v175;
  id v176;
  __n128 v177;
  uint64_t v178;
  uint64_t v179;
  void *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  unint64_t v185;
  uint64_t v186;
  unint64_t v187;
  uint64_t v188;
  unint64_t v189;
  id v190;
  __n128 v191;
  uint64_t v192;
  uint64_t v193;
  double v194;
  uint64_t v195;
  double (*v196)(uint64_t);
  uint64_t v197;
  double v198;
  double v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  uint64_t v204;
  uint64_t v205;
  void *v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  unint64_t v210;
  uint64_t v211;
  char *v212;
  uint64_t v213;
  unint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  id v218;
  __n128 v219;
  uint64_t v220;
  uint64_t v221;
  void (*v222)(uint64_t, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v223;
  uint64_t v224;
  __int128 v225;
  char *v226;
  char *v227;
  uint64_t v228;
  char *v229;
  char *v230;
  char *v231;
  char *v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  __int128 v243;
  uint64_t v244;
  unint64_t v245;
  uint64_t v246;
  char *v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  __int128 v254;
  uint64_t v255;
  _QWORD v256[5];
  uint64_t v257;
  uint64_t v258;
  char v259[24];
  char v260[112];
  char v261[32];

  v247 = a1;
  v2 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v2);
  v232 = (char *)&v221 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v235 = type metadata accessor for Date(0);
  v233 = *(_QWORD *)(v235 - 8);
  __chkstk_darwin(v235);
  v231 = (char *)&v221 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C(&qword_1013E04F0);
  __chkstk_darwin(v5);
  v230 = (char *)&v221 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v221 - v8;
  __chkstk_darwin(v10);
  v12 = (char *)&v221 - v11;
  v13 = sub_1004B804C(&qword_1013F5480);
  __chkstk_darwin(v13);
  v234 = (uint64_t)&v221 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v237 = (uint64_t)&v221 - v16;
  v241 = type metadata accessor for CRLSyncScheduledActivity(0);
  v236 = *(_QWORD *)(v241 - 8);
  __chkstk_darwin(v241);
  v229 = (char *)&v221 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v238 = (uint64_t)&v221 - v19;
  v240 = type metadata accessor for CRLSyncActivity(0);
  __chkstk_darwin(v240);
  v228 = (uint64_t)&v221 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v239 = (uint64_t)&v221 - v22;
  v23 = type metadata accessor for DispatchPredicate(0);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = __chkstk_darwin(v23);
  v27 = (uint64_t *)((char *)&v221 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  v28 = *(void **)(v1 + 56);
  *v27 = v28;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v24 + 104))(v27, enum case for DispatchPredicate.onQueue(_:), v23, v25);
  v29 = v28;
  v30 = _dispatchPreconditionTest(_:)(v27);
  (*(void (**)(_QWORD *, uint64_t))(v24 + 8))(v27, v23);
  if ((v30 & 1) != 0)
  {
    v226 = v9;
    v227 = v12;
    if (qword_1013DD870 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once(&qword_1013DD870, sub_100A059E0);
LABEL_3:
  v31 = 0xED000065706F6353;
  v32 = 0x5320646572616853;
  swift_beginAccess(&static OS_os_log.dataSync, v261, 0, 0);
  v33 = (void *)static OS_os_log.dataSync;
  v246 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v246, v260);
  v35 = (_QWORD *)inited;
  v243 = xmmword_100EF5A10;
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  if (*(_BYTE *)(v1 + 64))
    v31 = 0xEC00000065706F63;
  else
    v32 = 0x2065746176697250;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v36 = sub_1004CFC2C();
  v248 = v1;
  v35[4] = v32;
  v35[8] = v36;
  v35[5] = v31;
  v37 = *v247;
  if (*v247)
    v38 = 0x6863746566;
  else
    v38 = 1702257011;
  if (*v247)
    v39 = 0xE500000000000000;
  else
    v39 = 0xE400000000000000;
  v35[12] = &type metadata for String;
  v35[13] = v36;
  v245 = v36;
  v35[9] = v38;
  v35[10] = v39;
  v40 = v33;
  v42 = static os_log_type_t.default.getter(v41);
  sub_100A06EBC((uint64_t)v40, &_mh_execute_header, v42, "<%{public}@> Activity:%{public}@ Scheduling", 43, 2, (uint64_t)v35);
  swift_setDeallocating(v35);
  v43 = sub_1004B804C(&qword_1013E0190);
  v44 = v35 + 4;
  v45 = v248;
  v244 = v43;
  swift_arrayDestroy(v44, 2, v43);

  swift_beginAccess(v45 + 104, v259, 0, 0);
  v46 = *(_QWORD *)(v45 + 104);
  if (*(_QWORD *)(v46 + 16))
  {
    swift_bridgeObjectRetain(*(_QWORD *)(v45 + 104));
    v47 = sub_100843B24(v37);
    if ((v48 & 1) != 0)
    {
      v225 = *(_OWORD *)(*(_QWORD *)(v46 + 56) + 16 * v47);
      swift_retain(*((_QWORD *)&v225 + 1));
      swift_bridgeObjectRelease();
      v49 = swift_allocObject(&unk_10129EF58, 32, 7);
      *(_OWORD *)(v49 + 16) = v225;
      v50 = v247;
      v51 = v239;
      sub_1004B8460((uint64_t)v247, v239, type metadata accessor for CRLSyncActivity);
      v52 = *v50;
      v53 = swift_beginAccess(v45 + 112, &v257, 0, 0);
      v54 = *(_QWORD *)(v45 + 112);
      v55 = *(_QWORD *)(v54 + 16);
      v223 = v45 + 112;
      v224 = v49;
      LODWORD(v225) = v52;
      if (!v55)
      {
        v61 = v237;
        v57 = v241;
        v222 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v236 + 56);
        v222(v237, 1, 1, v241, v53);
        v58 = v245;
        v79 = v246;
LABEL_27:
        sub_1004CB800(v61, &qword_1013F5480);
        v237 = 0;
        v81 = v51;
        goto LABEL_91;
      }
      swift_bridgeObjectRetain(v54);
      v56 = sub_100843B24(v52);
      v57 = v241;
      v58 = v245;
      v59 = v236;
      if ((v60 & 1) != 0)
      {
        v61 = v237;
        sub_1004B8460(*(_QWORD *)(v54 + 56) + *(_QWORD *)(v236 + 72) * v56, v237, type metadata accessor for CRLSyncScheduledActivity);
        v62 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v59 + 56);
        v63 = v61;
        v64 = 0;
      }
      else
      {
        v62 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v236 + 56);
        v61 = v237;
        v63 = v237;
        v64 = 1;
      }
      v222 = v62;
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v62)(v63, v64, 1, v57);
      v80 = swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v59 + 48))(v61, 1, v57, v80) == 1)
      {
        v79 = v246;
        v50 = v247;
        goto LABEL_27;
      }
      v82 = v238;
      sub_1004B84E0(v61, v238, type metadata accessor for CRLSyncScheduledActivity);
      v83 = *(_QWORD *)(v82 + *(int *)(v57 + 20));
      v84 = v235;
      if (v83 == 1)
      {
        v96 = (void *)static OS_os_log.dataSync;
        v97 = swift_initStackObject(v246, &v250);
        v98 = v97;
        *(_OWORD *)(v97 + 16) = v243;
        v99 = 0x5320646572616853;
        if (!*(_BYTE *)(v248 + 64))
          v99 = 0x2065746176697250;
        v100 = 0xED000065706F6353;
        if (*(_BYTE *)(v248 + 64))
          v100 = 0xEC00000065706F63;
        *(_QWORD *)(v97 + 56) = &type metadata for String;
        *(_QWORD *)(v97 + 64) = v58;
        *(_QWORD *)(v97 + 32) = v99;
        v101 = v97 + 32;
        *(_QWORD *)(v97 + 40) = v100;
        v102 = v225;
        v103 = 0x6863746566;
        if (!(_DWORD)v225)
          v103 = 1702257011;
        v104 = 0xE400000000000000;
        if ((_DWORD)v225)
          v104 = 0xE500000000000000;
        *(_QWORD *)(v97 + 96) = &type metadata for String;
        *(_QWORD *)(v97 + 104) = v58;
        *(_QWORD *)(v97 + 72) = v103;
        *(_QWORD *)(v97 + 80) = v104;
        v105 = v96;
        v107 = static os_log_type_t.default.getter(v106);
        sub_100A06EBC((uint64_t)v105, &_mh_execute_header, v107, "<%{public}@> Activity:%{public}@ already pending, new activity replacing existing", 81, 2, v98);
        swift_setDeallocating(v98);
        swift_arrayDestroy(v101, 2, v244);

        v108 = *(int *)(v240 + 28);
        v109 = (_QWORD *)(v238 + v108);
        if ((*(_BYTE *)(v238 + v108 + 8) & 1) != 0)
        {
          v110 = v102;
          v79 = v246;
          v50 = v247;
          goto LABEL_79;
        }
        v146 = v51 + v108;
        v50 = v247;
        if (*(_BYTE *)(v146 + 8) == 1)
        {
          *(_QWORD *)v146 = *v109;
          *(_BYTE *)(v146 + 8) = 0;
        }
        v110 = v225;
      }
      else
      {
        v81 = v51;
        if (v83 == 2)
        {
          v85 = (void *)static OS_os_log.dataSync;
          v86 = swift_allocObject(v246, 112, 7);
          v87 = v86;
          *(_OWORD *)(v86 + 16) = v243;
          v88 = 0x5320646572616853;
          if (!*(_BYTE *)(v248 + 64))
            v88 = 0x2065746176697250;
          v89 = 0xED000065706F6353;
          if (*(_BYTE *)(v248 + 64))
            v89 = 0xEC00000065706F63;
          *(_QWORD *)(v86 + 56) = &type metadata for String;
          *(_QWORD *)(v86 + 64) = v58;
          *(_QWORD *)(v86 + 32) = v88;
          v90 = v86 + 32;
          *(_QWORD *)(v86 + 40) = v89;
          v91 = 0x6863746566;
          if (!(_DWORD)v225)
            v91 = 1702257011;
          v92 = 0xE400000000000000;
          if ((_DWORD)v225)
            v92 = 0xE500000000000000;
          *(_QWORD *)(v86 + 96) = &type metadata for String;
          *(_QWORD *)(v86 + 104) = v58;
          *(_QWORD *)(v86 + 72) = v91;
          *(_QWORD *)(v86 + 80) = v92;
          v93 = v85;
          v95 = static os_log_type_t.default.getter(v94);
          sub_100A06EBC((uint64_t)v93, &_mh_execute_header, v95, "<%{public}@> Activity:%{public}@ already executing, not scheduling again", 72, 2, v87);
          swift_setDeallocating(v87);
          swift_arrayDestroy(v90, 2, v244);
          swift_deallocClassInstance(v87, 32, 7);

LABEL_39:
          swift_release(v224);
          sub_1004B84A4(v238, type metadata accessor for CRLSyncScheduledActivity);
          return sub_1004B84A4(v81, type metadata accessor for CRLSyncActivity);
        }
        v111 = v228;
        sub_1004B8460(v238, v228, type metadata accessor for CRLSyncActivity);
        v112 = v240;
        v113 = (uint64_t)v227;
        sub_1004C4938(v111 + *(int *)(v240 + 20), (uint64_t)v227, &qword_1013E04F0);
        v114 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v233 + 48);
        v115 = v84;
        v116 = v114(v113, 1, v84);
        swift_retain(v83);
        sub_1004CB800(v113, &qword_1013E04F0);
        if (v116 != 1)
        {
          v117 = (uint64_t)v226;
          sub_1004CB7BC(v81 + *(int *)(v112 + 20), (uint64_t)v226, &qword_1013E04F0);
          v118 = v114(v117, 1, v115);
          sub_1004CB800(v117, &qword_1013E04F0);
          if (v118 == 1)
          {
            v119 = (void *)static OS_os_log.dataSync;
            v120 = swift_allocObject(v246, 112, 7);
            v121 = v120;
            *(_OWORD *)(v120 + 16) = v243;
            v122 = 0x5320646572616853;
            if (!*(_BYTE *)(v248 + 64))
              v122 = 0x2065746176697250;
            v123 = 0xED000065706F6353;
            if (*(_BYTE *)(v248 + 64))
              v123 = 0xEC00000065706F63;
            *(_QWORD *)(v120 + 32) = v122;
            v124 = v120 + 32;
            v125 = v245;
            *(_QWORD *)(v120 + 56) = &type metadata for String;
            *(_QWORD *)(v120 + 64) = v125;
            *(_QWORD *)(v120 + 40) = v123;
            v126 = 0x6863746566;
            if (!*v247)
              v126 = 1702257011;
            v127 = 0xE400000000000000;
            if (*v247)
              v127 = 0xE500000000000000;
            *(_QWORD *)(v120 + 96) = &type metadata for String;
            *(_QWORD *)(v120 + 104) = v125;
            *(_QWORD *)(v120 + 72) = v126;
            *(_QWORD *)(v120 + 80) = v127;
            v128 = v119;
            v130 = static os_log_type_t.default.getter(v129);
            sub_100A06EBC((uint64_t)v128, &_mh_execute_header, v130, "<%{public}@> Activity:%{public}@ already scheduled, new activity does not contain earliestStartDate, not scheduling again", 121, 2, v121);
            swift_setDeallocating(v121);
            swift_arrayDestroy(v124, 2, v244);
            swift_deallocClassInstance(v121, 32, 7);

            sub_100C9A8AC(v83);
            goto LABEL_39;
          }
        }
        v131 = *(int *)(v112 + 28);
        v132 = (_QWORD *)(v238 + v131);
        v50 = v247;
        if ((*(_BYTE *)(v238 + v131 + 8) & 1) == 0)
        {
          v133 = v81 + v131;
          if (*(_BYTE *)(v133 + 8) == 1)
          {
            *(_QWORD *)v133 = *v132;
            *(_BYTE *)(v133 + 8) = 0;
          }
        }
        v134 = (void *)static OS_os_log.dataSync;
        v135 = swift_initStackObject(v246, &v249);
        v136 = v135;
        *(_OWORD *)(v135 + 16) = v243;
        v137 = 0x5320646572616853;
        if (!*(_BYTE *)(v248 + 64))
          v137 = 0x2065746176697250;
        v138 = 0xED000065706F6353;
        if (*(_BYTE *)(v248 + 64))
          v138 = 0xEC00000065706F63;
        *(_QWORD *)(v135 + 32) = v137;
        v139 = v135 + 32;
        v140 = v245;
        *(_QWORD *)(v135 + 56) = &type metadata for String;
        *(_QWORD *)(v135 + 64) = v140;
        *(_QWORD *)(v135 + 40) = v138;
        v110 = *v50;
        v141 = 0x6863746566;
        if (!*v50)
          v141 = 1702257011;
        v142 = 0xE400000000000000;
        if (*v50)
          v142 = 0xE500000000000000;
        *(_QWORD *)(v135 + 96) = &type metadata for String;
        *(_QWORD *)(v135 + 104) = v140;
        *(_QWORD *)(v135 + 72) = v141;
        *(_QWORD *)(v135 + 80) = v142;
        v143 = v134;
        v145 = static os_log_type_t.default.getter(v144);
        sub_100A06EBC((uint64_t)v143, &_mh_execute_header, v145, "<%{public}@> Activity:%{public}@ Cancelling existing", 52, 2, v136);
        swift_setDeallocating(v136);
        swift_arrayDestroy(v139, 2, v244);

        if (v83)
        {
          swift_retain(v83);
          sub_1004B804C(&qword_1013E0210);
          Task.cancel()();
          sub_100C9A8AC(v83);
          sub_100C9A8AC(v83);
        }
      }
      v79 = v246;
LABEL_79:
      v237 = *(_QWORD *)(v238 + *(int *)(v241 + 24));
      v147 = (uint64_t *)(v239 + *(int *)(v240 + 28));
      if ((v147[1] & 1) == 0)
      {
        v148 = *v147;
        if (*v147 < v237)
        {
          v149 = (void *)static OS_os_log.dataSync;
          v150 = swift_allocObject(v79, 152, 7);
          v151 = v150;
          *(_OWORD *)(v150 + 16) = xmmword_100EF5550;
          v152 = 0x5320646572616853;
          if (!*(_BYTE *)(v248 + 64))
            v152 = 0x2065746176697250;
          v153 = 0xED000065706F6353;
          if (*(_BYTE *)(v248 + 64))
            v153 = 0xEC00000065706F63;
          *(_QWORD *)(v150 + 32) = v152;
          v154 = v150 + 32;
          v155 = v245;
          *(_QWORD *)(v150 + 56) = &type metadata for String;
          *(_QWORD *)(v150 + 64) = v155;
          *(_QWORD *)(v150 + 40) = v153;
          v156 = 0x6863746566;
          if (!v110)
            v156 = 1702257011;
          v157 = 0xE400000000000000;
          if (v110)
            v157 = 0xE500000000000000;
          *(_QWORD *)(v150 + 96) = &type metadata for String;
          *(_QWORD *)(v150 + 104) = v155;
          *(_QWORD *)(v150 + 72) = v156;
          *(_QWORD *)(v150 + 80) = v157;
          *(_QWORD *)(v150 + 136) = &type metadata for Int;
          *(_QWORD *)(v150 + 144) = &protocol witness table for Int;
          *(_QWORD *)(v150 + 112) = v148;
          v158 = v149;
          v50 = v247;
          v159 = v158;
          v161 = static os_log_type_t.default.getter(v160);
          sub_100A06EBC((uint64_t)v159, &_mh_execute_header, v161, "<%{public}@> Activity:%{public}@ reached max retry attempts: %d but we do not care. Schedule it again!", 102, 2, v151);
          swift_setDeallocating(v151);
          swift_arrayDestroy(v154, 3, v244);
          v162 = v151;
          v79 = v246;
          swift_deallocClassInstance(v162, 32, 7);

        }
      }
      sub_1004B84A4(v238, type metadata accessor for CRLSyncScheduledActivity);
      v81 = v239;
      v57 = v241;
      v58 = v245;
LABEL_91:
      sub_1004CB7BC(v248 + 16, (uint64_t)&v254, &qword_1013E6100);
      v163 = v240;
      if (v255)
      {
        sub_1004DB728(&v254, (uint64_t)v256);
        v164 = *sub_1004BB5A4(v256, v256[3]);
        type metadata accessor for SCNetworkReachabilityFlags(0);
        v165 = v242;
        OS_dispatch_queue.sync<A>(execute:)(sub_100C9AC4C, v164, v166);
        v242 = v165;
        if ((v254 & 2) == 0)
        {
          v167 = v234;
          sub_1004B8460(v81, v234, type metadata accessor for CRLSyncActivity);
          *(_QWORD *)(v167 + *(int *)(v57 + 20)) = 1;
          *(_QWORD *)(v167 + *(int *)(v57 + 24)) = v237;
          ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v222)(v167, 0, 1, v57);
          swift_beginAccess(v223, &v254, 33, 0);
          sub_10083F008(v167, v225);
          swift_endAccess(&v254);
          v168 = (void *)static OS_os_log.dataSync;
          v169 = swift_initStackObject(v246, &v251);
          v170 = v169;
          *(_OWORD *)(v169 + 16) = v243;
          v171 = 0x5320646572616853;
          if (!*(_BYTE *)(v248 + 64))
            v171 = 0x2065746176697250;
          v172 = 0xEC00000065706F63;
          if (!*(_BYTE *)(v248 + 64))
            v172 = 0xED000065706F6353;
          *(_QWORD *)(v169 + 32) = v171;
          v173 = v169 + 32;
          *(_QWORD *)(v169 + 56) = &type metadata for String;
          *(_QWORD *)(v169 + 64) = v58;
          *(_QWORD *)(v169 + 40) = v172;
          v174 = 1702257011;
          if (*v50)
            v174 = 0x6863746566;
          v175 = 0xE400000000000000;
          if (*v50)
            v175 = 0xE500000000000000;
          *(_QWORD *)(v169 + 96) = &type metadata for String;
          *(_QWORD *)(v169 + 104) = v58;
          *(_QWORD *)(v169 + 72) = v174;
          *(_QWORD *)(v169 + 80) = v175;
          v176 = v168;
          v178 = static os_log_type_t.default.getter(v177);
          sub_100A06EBC((uint64_t)v176, &_mh_execute_header, v178, "<%{public}@> Activity:%{public}@ Network unreachable while trying to schedule activity. Will retry later", 104, 2, v170);
          swift_release(v224);
          swift_setDeallocating(v170);
          swift_arrayDestroy(v173, 2, v244);

          _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v256);
          return sub_1004B84A4(v81, type metadata accessor for CRLSyncActivity);
        }
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v256);
        v79 = v246;
      }
      else
      {
        sub_1004CB800((uint64_t)&v254, &qword_1013E6100);
      }
      v179 = *(int *)(v163 + 32);
      if (*(_BYTE *)(v81 + v179) == 1)
      {
        v180 = (void *)static OS_os_log.dataSync;
        v181 = swift_initStackObject(v79, &v252);
        v182 = v181;
        *(_OWORD *)(v181 + 16) = v243;
        v183 = v248;
        v184 = 0x2065746176697250;
        if (*(_BYTE *)(v248 + 64))
          v184 = 0x5320646572616853;
        v185 = 0xEC00000065706F63;
        if (!*(_BYTE *)(v248 + 64))
          v185 = 0xED000065706F6353;
        *(_QWORD *)(v181 + 32) = v184;
        v186 = v181 + 32;
        v187 = v245;
        *(_QWORD *)(v181 + 56) = &type metadata for String;
        *(_QWORD *)(v181 + 64) = v187;
        *(_QWORD *)(v181 + 40) = v185;
        v188 = 0x6863746566;
        if (!*v247)
          v188 = 1702257011;
        v189 = 0xE400000000000000;
        if (*v247)
          v189 = 0xE500000000000000;
        *(_QWORD *)(v181 + 96) = &type metadata for String;
        *(_QWORD *)(v181 + 104) = v187;
        *(_QWORD *)(v181 + 72) = v188;
        *(_QWORD *)(v181 + 80) = v189;
        v190 = v180;
        v192 = static os_log_type_t.default.getter(v191);
        sub_100A06EBC((uint64_t)v190, &_mh_execute_header, v192, "<%{public}@> Activity:%{public}@ Bypassing any throttling", 57, 2, v182);
        swift_setDeallocating(v182);
        swift_arrayDestroy(v186, 2, v244);

        *(_BYTE *)(v81 + v179) = 0;
        v194 = 0.0;
      }
      else
      {
        v195 = v81 + *(int *)(v163 + 20);
        v183 = v248;
        v196 = *(double (**)(uint64_t))(v248 + 72);
        v197 = *(_QWORD *)(v248 + 80);
        swift_retain(v197);
        sub_100C9A9FC(v237, v195, v196);
        v199 = v198;
        swift_release(v197);
        v194 = v199 + *(double *)(v183 + 96);
        v187 = v245;
      }
      v200 = v231;
      Date.init()(v193);
      v201 = (uint64_t)v230;
      Date.advanced(by:)(v194);
      v202 = v233;
      v203 = v200;
      v204 = v235;
      (*(void (**)(char *, uint64_t))(v233 + 8))(v203, v235);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v202 + 56))(v201, 0, 1, v204);
      v205 = v240;
      sub_10056AFBC(v201, v81 + *(int *)(v240 + 20));
      v206 = (void *)static OS_os_log.dataSync;
      v207 = swift_initStackObject(v246, &v253);
      v208 = v207;
      *(_OWORD *)(v207 + 16) = xmmword_100F05060;
      v209 = 0x5320646572616853;
      if (!*(_BYTE *)(v183 + 64))
        v209 = 0x2065746176697250;
      v210 = 0xEC00000065706F63;
      if (!*(_BYTE *)(v183 + 64))
        v210 = 0xED000065706F6353;
      *(_QWORD *)(v207 + 56) = &type metadata for String;
      *(_QWORD *)(v207 + 64) = v187;
      *(_QWORD *)(v207 + 32) = v209;
      v211 = v207 + 32;
      *(_QWORD *)(v207 + 40) = v210;
      v212 = v247;
      v213 = 0x6863746566;
      if (!*v247)
        v213 = 1702257011;
      v214 = 0xE400000000000000;
      if (*v247)
        v214 = 0xE500000000000000;
      *(_QWORD *)(v207 + 96) = &type metadata for String;
      *(_QWORD *)(v207 + 104) = v187;
      *(_QWORD *)(v207 + 72) = v213;
      *(_QWORD *)(v207 + 80) = v214;
      *(_QWORD *)(v207 + 136) = &type metadata for Double;
      *(_QWORD *)(v207 + 144) = &protocol witness table for Double;
      *(double *)(v207 + 112) = v194;
      *(_QWORD *)(v207 + 176) = &type metadata for Int;
      *(_QWORD *)(v207 + 184) = &protocol witness table for Int;
      *(_QWORD *)(v207 + 152) = v237;
      v215 = v81 + *(int *)(v205 + 28);
      v216 = *(_QWORD *)v215;
      LODWORD(v215) = *(unsigned __int8 *)(v215 + 8);
      *(_QWORD *)(v207 + 216) = &type metadata for Int;
      *(_QWORD *)(v207 + 224) = &protocol witness table for Int;
      if ((_DWORD)v215)
        v217 = -1;
      else
        v217 = v216;
      *(_QWORD *)(v207 + 192) = v217;
      v218 = v206;
      v220 = static os_log_type_t.default.getter(v219);
      sub_100A06EBC((uint64_t)v218, &_mh_execute_header, v220, "<%{public}@> Activity:%{public}@ Scheduling after %.2f seconds, retries:%d maxRetries:%d", 88, 2, v208);
      swift_setDeallocating(v208);
      swift_arrayDestroy(v211, 5, v244);

      __asm { BR              X10 }
    }
    swift_bridgeObjectRelease();
  }
  v65 = (void *)static OS_os_log.dataSync;
  v66 = swift_initStackObject(v246, &v258);
  v67 = v66;
  *(_OWORD *)(v66 + 16) = v243;
  v68 = *(_BYTE *)(v45 + 64) == 0;
  v69 = 0x5320646572616853;
  if (!*(_BYTE *)(v45 + 64))
    v69 = 0x2065746176697250;
  *(_QWORD *)(v66 + 32) = v69;
  v70 = v66 + 32;
  v71 = 0xED000065706F6353;
  if (!v68)
    v71 = 0xEC00000065706F63;
  v72 = v245;
  *(_QWORD *)(v66 + 56) = &type metadata for String;
  *(_QWORD *)(v66 + 64) = v72;
  *(_QWORD *)(v66 + 40) = v71;
  *(_QWORD *)(v66 + 96) = &type metadata for String;
  *(_QWORD *)(v66 + 104) = v72;
  *(_QWORD *)(v66 + 72) = v38;
  *(_QWORD *)(v66 + 80) = v39;
  v73 = v65;
  v74 = static os_log_type_t.error.getter(v73);
  sub_100A06EBC((uint64_t)v73, &_mh_execute_header, v74, "<%{public}@> Activity:%{public}@ Attempting to schedule without a registered handler", 84, 2, v67);
  swift_setDeallocating(v67);
  swift_arrayDestroy(v70, 2, v244);

  v75 = sub_100C9A954();
  swift_allocError(&type metadata for CRLSyncSchedulerError, v75, 0, 0);
  *v76 = 0;
  return swift_willThrow(v77);
}

uint64_t sub_100C96D60(int *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))((char *)a1 + *a1);
  v2 = (_QWORD *)swift_task_alloc(a1[1]);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_1004CFD00;
  return v4();
}

uint64_t sub_100C96DB8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v5 + 104) = a4;
  *(_QWORD *)(v5 + 112) = a5;
  *(_BYTE *)(v5 + 192) = a3;
  *(_QWORD *)(v5 + 96) = a2;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  *(_QWORD *)(v5 + 120) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 + 128) = v7;
  *(_QWORD *)(v5 + 136) = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  *(_QWORD *)(v5 + 144) = v8;
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v5 + 152) = v9;
  *(_QWORD *)(v5 + 160) = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100C96E48, 0, 0);
}

uint64_t sub_100C96E48(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  char v9;
  uint64_t v10;
  void *v11;
  __n128 v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t (*v17)(void);
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(void);

  if ((static Task<>.isCancelled.getter(a1) & 1) != 0
    || (v2 = *(_QWORD *)(v1 + 96) + 16,
        swift_beginAccess(v2, v1 + 64, 0, 0),
        Strong = swift_weakLoadStrong(v2),
        (*(_QWORD *)(v1 + 168) = Strong) == 0))
  {
    v18 = *(_QWORD *)(v1 + 136);
    swift_task_dealloc(*(_QWORD *)(v1 + 160));
    swift_task_dealloc(v18);
    v17 = *(uint64_t (**)(void))(v1 + 8);
  }
  else
  {
    v4 = Strong;
    v5 = *(_QWORD *)(v1 + 160);
    v6 = *(_QWORD *)(v1 + 136);
    v21 = *(_QWORD *)(v1 + 152);
    v22 = *(_QWORD *)(v1 + 144);
    v7 = *(_QWORD *)(v1 + 120);
    v8 = *(int **)(v1 + 104);
    v9 = *(_BYTE *)(v1 + 192) & 1;
    v20 = *(_QWORD *)(v1 + 128);
    v10 = swift_allocObject(&unk_10129EFD0, 25, 7);
    *(_QWORD *)(v10 + 16) = v4;
    *(_BYTE *)(v10 + 24) = v9;
    *(_QWORD *)(v1 + 48) = sub_100C9AD2C;
    *(_QWORD *)(v1 + 56) = v10;
    *(_QWORD *)(v1 + 16) = _NSConcreteStackBlock;
    *(_QWORD *)(v1 + 24) = *(_QWORD *)"";
    *(_QWORD *)(v1 + 32) = sub_1005D2FC0;
    *(_QWORD *)(v1 + 40) = &unk_10129EFE8;
    v11 = _Block_copy((const void *)(v1 + 16));
    v12 = swift_retain(v4);
    static DispatchQoS.unspecified.getter(v12);
    *(_QWORD *)(v1 + 88) = _swiftEmptyArrayStorage;
    v13 = sub_1004CB65C();
    v14 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
    v15 = sub_1004CBA30((unint64_t *)&qword_1013E1D30, (uint64_t *)&unk_1013DFBF0, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(v1 + 88, v14, v15, v7, v13);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v5, v6, v11);
    _Block_release(v11);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v6, v7);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v5, v22);
    swift_release(*(_QWORD *)(v1 + 56));
    v23 = (uint64_t (*)(void))((char *)v8 + *v8);
    v16 = (_QWORD *)swift_task_alloc(v8[1]);
    *(_QWORD *)(v1 + 176) = v16;
    *v16 = v1;
    v16[1] = sub_100C97058;
    v17 = v23;
  }
  return v17();
}

uint64_t sub_100C97058()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 176);
  *(_QWORD *)(*(_QWORD *)v1 + 184) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100C97104;
  else
    v3 = sub_100C970BC;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100C970BC()
{
  uint64_t v0;
  uint64_t v1;

  swift_release(*(_QWORD *)(v0 + 168));
  v1 = *(_QWORD *)(v0 + 136);
  swift_task_dealloc(*(_QWORD *)(v0 + 160));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100C97104()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 136);
  swift_release(*(_QWORD *)(v0 + 168));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100C9714C(int a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t inited;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  id v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v28[24];
  _BYTE v29[112];
  _BYTE v30[24];

  v5 = sub_1004B804C(&qword_1013F5480);
  __chkstk_darwin(v5);
  v7 = &v28[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for DispatchPredicate(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = &v28[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = *(void **)(v2 + 56);
  *v12 = v13;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v9 + 104))(v12, enum case for DispatchPredicate.onQueue(_:), v8, v10);
  v14 = v13;
  LOBYTE(v13) = _dispatchPreconditionTest(_:)(v12);
  (*(void (**)(_QWORD *, uint64_t))(v9 + 8))(v12, v8);
  if ((v13 & 1) == 0)
  {
    __break(1u);
LABEL_17:
    swift_once(&qword_1013DD870, sub_100A059E0);
    goto LABEL_4;
  }
  a1 &= 1u;
  if ((a2 & 1) == 0)
  {
    sub_100C97718(1, a1);
    return;
  }
  if (qword_1013DD870 != -1)
    goto LABEL_17;
LABEL_4:
  swift_beginAccess(&static OS_os_log.dataSync, v30, 0, 0);
  v15 = (void *)static OS_os_log.dataSync;
  v16 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v16, v29);
  v18 = (_QWORD *)inited;
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  if (*(_BYTE *)(v2 + 64))
    v19 = 0x5320646572616853;
  else
    v19 = 0x2065746176697250;
  if (*(_BYTE *)(v2 + 64))
    v20 = 0xEC00000065706F63;
  else
    v20 = 0xED000065706F6353;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v21 = sub_1004CFC2C();
  v18[4] = v19;
  v18[5] = v20;
  v22 = 1702257011;
  if (a1)
    v22 = 0x6863746566;
  v23 = 0xE500000000000000;
  v18[12] = &type metadata for String;
  v18[13] = v21;
  if (!a1)
    v23 = 0xE400000000000000;
  v18[8] = v21;
  v18[9] = v22;
  v18[10] = v23;
  v24 = v15;
  v26 = static os_log_type_t.default.getter(v25);
  sub_100A06EBC((uint64_t)v24, &_mh_execute_header, v26, "<%{public}@> Activity:%{public}@ Completed", 42, 2, (uint64_t)v18);
  swift_setDeallocating(v18);
  v27 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v18 + 4, 2, v27);

  swift_beginAccess(v2 + 112, v28, 33, 0);
  sub_100848470(a1, (uint64_t)v7);
  sub_1004CB800((uint64_t)v7, &qword_1013F5480);
  swift_endAccess(v28);
}

uint64_t sub_100C97408(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t inited;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  uint64_t v23;
  unint64_t v24;
  id v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v31;
  uint64_t v33;
  _BYTE v34[24];
  _BYTE v35[112];
  _BYTE v36[32];

  v4 = v3;
  v8 = type metadata accessor for DispatchPredicate(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = &v34[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = *(void **)(v4 + 56);
  *v12 = v13;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v9 + 104))(v12, enum case for DispatchPredicate.onQueue(_:), v8, v10);
  v14 = v13;
  LOBYTE(v13) = _dispatchPreconditionTest(_:)(v12);
  (*(void (**)(_QWORD *, uint64_t))(v9 + 8))(v12, v8);
  if ((v13 & 1) != 0)
  {
    if (qword_1013DD870 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once(&qword_1013DD870, sub_100A059E0);
LABEL_3:
  swift_beginAccess(&static OS_os_log.dataSync, v36, 0, 0);
  v15 = (void *)static OS_os_log.dataSync;
  v16 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v16, v35);
  v18 = (_QWORD *)inited;
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  if (*(_BYTE *)(v4 + 64))
    v19 = 0x5320646572616853;
  else
    v19 = 0x2065746176697250;
  if (*(_BYTE *)(v4 + 64))
    v20 = 0xEC00000065706F63;
  else
    v20 = 0xED000065706F6353;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v21 = sub_1004CFC2C();
  v18[4] = v19;
  v18[5] = v20;
  v22 = a3 & 1;
  v23 = 1702257011;
  if (v22)
    v23 = 0x6863746566;
  v24 = 0xE500000000000000;
  v18[12] = &type metadata for String;
  v18[13] = v21;
  if (!v22)
    v24 = 0xE400000000000000;
  v18[8] = v21;
  v18[9] = v23;
  v18[10] = v24;
  v25 = v15;
  v27 = static os_log_type_t.default.getter(v26);
  sub_100A06EBC((uint64_t)v25, &_mh_execute_header, v27, "<%{public}@> Activity:%{public}@ Registering handler", 52, 2, (uint64_t)v18);
  swift_setDeallocating(v18);
  v28 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v18 + 4, 2, v28);

  v29 = swift_allocObject(&unk_10129EF30, 32, 7);
  *(_QWORD *)(v29 + 16) = a1;
  *(_QWORD *)(v29 + 24) = a2;
  swift_beginAccess(v4 + 104, v34, 33, 0);
  swift_retain(a2);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v4 + 104));
  v33 = *(_QWORD *)(v4 + 104);
  *(_QWORD *)(v4 + 104) = 0x8000000000000000;
  sub_10082A590((uint64_t)&unk_10140D950, v29, v22, isUniquelyReferenced_nonNull_native);
  v31 = *(_QWORD *)(v4 + 104);
  *(_QWORD *)(v4 + 104) = v33;
  swift_bridgeObjectRelease(v31);
  return swift_endAccess(v34);
}

uint64_t sub_100C976C4(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 16) = v3;
  *v3 = v2;
  v3[1] = sub_1004CF80C;
  return v5();
}

void sub_100C97718(uint64_t a1, char a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  _QWORD *v19;
  void *v20;
  id v21;
  char *v22;
  __n128 v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  __n128 v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  id v57;
  __n128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  uint64_t inited;
  _QWORD *v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  id v71;
  __n128 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  unint64_t v85;
  __n128 v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  BOOL v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  unint64_t v97;
  uint64_t v98;
  unint64_t v99;
  id v100;
  __n128 v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void *v105;
  uint64_t v106;
  uint64_t v107;
  _QWORD *v108;
  uint64_t v109;
  unint64_t v110;
  unint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  unint64_t v115;
  id v116;
  __n128 v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  void (*v122)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  _BYTE v132[24];
  uint64_t v133;
  char v134[112];
  _BYTE v135[24];
  char v136[32];

  v3 = v2;
  v125 = a1;
  v5 = sub_1004B804C(&qword_1013F5480);
  __chkstk_darwin(v5);
  v124 = (uint64_t)&v121 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v121 - v8;
  v10 = type metadata accessor for CRLSyncScheduledActivity(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v126 = (uint64_t)&v121 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v127 = (uint64_t)&v121 - v14;
  v15 = type metadata accessor for DispatchPredicate(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v19 = (uint64_t *)((char *)&v121 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = (void *)v3[7];
  *v19 = v20;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v16 + 104))(v19, enum case for DispatchPredicate.onQueue(_:), v15, v17);
  v21 = v20;
  LOBYTE(v20) = _dispatchPreconditionTest(_:)(v19);
  (*(void (**)(_QWORD *, uint64_t))(v16 + 8))(v19, v15);
  if ((v20 & 1) == 0)
  {
    __break(1u);
    goto LABEL_94;
  }
  LODWORD(v15) = a2 & 1;
  v22 = (char *)(v3 + 14);
  v23 = swift_beginAccess(v3 + 14, v136, 0, 0);
  v24 = v3[14];
  if (!*(_QWORD *)(v24 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v11 + 56))(v9, 1, 1, v10, v23);
    goto LABEL_8;
  }
  swift_bridgeObjectRetain(v3[14]);
  v25 = sub_100843B24(v15);
  if ((v26 & 1) != 0)
  {
    sub_1004B8460(*(_QWORD *)(v24 + 56) + *(_QWORD *)(v11 + 72) * v25, (uint64_t)v9, type metadata accessor for CRLSyncScheduledActivity);
    v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v27(v9, 0, 1, v10);
  }
  else
  {
    v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v27(v9, 1, 1, v10);
  }
  v28 = swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v11 + 48))(v9, 1, v10, v28) != 1)
  {
    v41 = v127;
    sub_1004B84E0((uint64_t)v9, v127, type metadata accessor for CRLSyncScheduledActivity);
    v42 = v41;
    v43 = v126;
    sub_1004B8460(v42, v126, type metadata accessor for CRLSyncScheduledActivity);
    v44 = *(int *)(v10 + 20);
    v45 = *(_QWORD *)(v43 + v44);
    if (v45 == 2)
    {
      if (v125 != 1)
      {
        sub_1004B84A4(v127, type metadata accessor for CRLSyncScheduledActivity);
        v61 = v43;
LABEL_92:
        sub_1004B84A4(v61, type metadata accessor for CRLSyncScheduledActivity);
        return;
      }
      v121 = *(int *)(v10 + 20);
      v122 = v27;
      v123 = 2;
      if (qword_1013DD870 != -1)
        swift_once(&qword_1013DD870, sub_100A059E0);
      swift_beginAccess(&static OS_os_log.dataSync, v135, 0, 0);
      v62 = (void *)static OS_os_log.dataSync;
      v63 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v63, &v133);
      v65 = (_QWORD *)inited;
      *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
      if (*((_BYTE *)v3 + 64))
        v66 = 0x5320646572616853;
      else
        v66 = 0x2065746176697250;
      if (*((_BYTE *)v3 + 64))
        v67 = 0xEC00000065706F63;
      else
        v67 = 0xED000065706F6353;
      *(_QWORD *)(inited + 56) = &type metadata for String;
      v68 = sub_1004CFC2C();
      v65[4] = v66;
      v65[5] = v67;
      v69 = 1702257011;
      if ((_DWORD)v15)
        v69 = 0x6863746566;
      v70 = 0xE500000000000000;
      v65[12] = &type metadata for String;
      v65[13] = v68;
      if (!(_DWORD)v15)
        v70 = 0xE400000000000000;
      v65[8] = v68;
      v65[9] = v69;
      v65[10] = v70;
      v71 = v62;
      v73 = static os_log_type_t.default.getter(v72);
      sub_100A06EBC((uint64_t)v71, &_mh_execute_header, v73, "<%{public}@> Activity:%{public}@ Executing --> Pending", 54, 2, (uint64_t)v65);
      swift_setDeallocating(v65);
      v74 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(v65 + 4, 2, v74);

      v75 = v126;
      *(_QWORD *)(v126 + v121) = 1;
      goto LABEL_90;
    }
    v122 = v27;
    v123 = v45;
    if (v45 == 1)
    {
      v46 = 0xEC00000065706F63;
      v47 = 0x5320646572616853;
      v48 = 0x2065746176697250;
      if ((unint64_t)(v125 - 1) < 2)
      {
        if (qword_1013DD870 != -1)
          swift_once(&qword_1013DD870, sub_100A059E0);
        swift_beginAccess(&static OS_os_log.dataSync, v135, 0, 0);
        v49 = (void *)static OS_os_log.dataSync;
        v50 = sub_1004B804C((uint64_t *)&unk_1013E0180);
        v51 = swift_initStackObject(v50, &v129);
        v52 = (_QWORD *)v51;
        *(_OWORD *)(v51 + 16) = xmmword_100EF5A10;
        if (*((_BYTE *)v3 + 64))
          v53 = 0x5320646572616853;
        else
          v53 = 0x2065746176697250;
        if (!*((_BYTE *)v3 + 64))
          v46 = 0xED000065706F6353;
        *(_QWORD *)(v51 + 56) = &type metadata for String;
        v54 = sub_1004CFC2C();
        v52[4] = v53;
        v52[5] = v46;
        v55 = 0x6863746566;
        if (!(_DWORD)v15)
          v55 = 1702257011;
        v56 = 0xE500000000000000;
        v52[12] = &type metadata for String;
        v52[13] = v54;
        if (!(_DWORD)v15)
          v56 = 0xE400000000000000;
        v52[8] = v54;
        v52[9] = v55;
        v52[10] = v56;
        v57 = v49;
        v59 = static os_log_type_t.default.getter(v58);
        sub_100A06EBC((uint64_t)v57, &_mh_execute_header, v59, "<%{public}@> Activity:%{public}@ Attempting invalid update from pending to scheduled", 84, 2, (uint64_t)v52);
        swift_setDeallocating(v52);
        v60 = sub_1004B804C(&qword_1013E0190);
        swift_arrayDestroy(v52 + 4, 2, v60);

        sub_1004B84A4(v127, type metadata accessor for CRLSyncScheduledActivity);
        v61 = v126;
        goto LABEL_92;
      }
      v121 = v44;
      if (qword_1013DD870 == -1)
        goto LABEL_65;
    }
    else
    {
      v121 = v44;
      v76 = qword_1013DD870;
      swift_retain(v45);
      if (v125 != 2)
      {
        if (v76 != -1)
          swift_once(&qword_1013DD870, sub_100A059E0);
        swift_beginAccess(&static OS_os_log.dataSync, v135, 0, 0);
        v105 = (void *)static OS_os_log.dataSync;
        v106 = sub_1004B804C((uint64_t *)&unk_1013E0180);
        v107 = swift_initStackObject(v106, &v131);
        v108 = (_QWORD *)v107;
        *(_OWORD *)(v107 + 16) = xmmword_100EF5550;
        if (*((_BYTE *)v3 + 64))
          v109 = 0x5320646572616853;
        else
          v109 = 0x2065746176697250;
        if (*((_BYTE *)v3 + 64))
          v110 = 0xEC00000065706F63;
        else
          v110 = 0xED000065706F6353;
        *(_QWORD *)(v107 + 56) = &type metadata for String;
        v111 = sub_1004CFC2C();
        v108[4] = v109;
        v108[5] = v110;
        v112 = 0x6863746566;
        if (!(_DWORD)v15)
          v112 = 1702257011;
        v113 = 0xE500000000000000;
        v108[12] = &type metadata for String;
        v108[13] = v111;
        if (!(_DWORD)v15)
          v113 = 0xE400000000000000;
        v108[8] = v111;
        v108[9] = v112;
        v108[10] = v113;
        v114 = 0x656C756465686373;
        if (v125 == 1)
          v114 = 0x676E69646E6570;
        v115 = 0xE900000000000064;
        if (v125 == 1)
          v115 = 0xE700000000000000;
        v108[17] = &type metadata for String;
        v108[18] = v111;
        v108[14] = v114;
        v108[15] = v115;
        v116 = v105;
        v118 = static os_log_type_t.default.getter(v117);
        sub_100A06EBC((uint64_t)v116, &_mh_execute_header, v118, "<%{public}@> Activity:%{public}@ Attempting Invalid state update, bailing... Scheduled --> <%{public}@>", 103, 2, (uint64_t)v108);
        swift_setDeallocating(v108);
        v119 = sub_1004B804C(&qword_1013E0190);
        swift_arrayDestroy(v108 + 4, 3, v119);

        v75 = v126;
        goto LABEL_90;
      }
      if (v76 != -1)
        swift_once(&qword_1013DD870, sub_100A059E0);
      swift_beginAccess(&static OS_os_log.dataSync, v135, 0, 0);
      v77 = (void *)static OS_os_log.dataSync;
      v78 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v79 = swift_initStackObject(v78, &v130);
      v80 = (_QWORD *)v79;
      *(_OWORD *)(v79 + 16) = xmmword_100EF5A10;
      if (*((_BYTE *)v3 + 64))
        v81 = 0x5320646572616853;
      else
        v81 = 0x2065746176697250;
      if (*((_BYTE *)v3 + 64))
        v82 = 0xEC00000065706F63;
      else
        v82 = 0xED000065706F6353;
      v3 = &type metadata for String;
      *(_QWORD *)(v79 + 56) = &type metadata for String;
      v83 = sub_1004CFC2C();
      v80[4] = v81;
      v48 = (uint64_t)(v80 + 4);
      v80[5] = v82;
      v84 = 0x6863746566;
      if (!(_DWORD)v15)
        v84 = 1702257011;
      v85 = 0xE500000000000000;
      v80[12] = &type metadata for String;
      v80[13] = v83;
      if (!(_DWORD)v15)
        v85 = 0xE400000000000000;
      v80[8] = v83;
      v80[9] = v84;
      v80[10] = v85;
      v47 = v77;
      v87 = static os_log_type_t.default.getter(v86);
      sub_100A06EBC(v47, &_mh_execute_header, v87, "<%{public}@> Activity:%{public}@ Scheduled --> Executing", 56, 2, (uint64_t)v80);
      swift_setDeallocating(v80);
      v88 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(v80 + 4, 2, v88);

      v46 = v123;
      sub_100C9A8AC(v123);
      v89 = *(int *)(v10 + 24);
      v75 = v126;
      v90 = *(_QWORD *)(v126 + v89);
      v91 = __OFADD__(v90, 1);
      v92 = v90 + 1;
      if (!v91)
      {
        *(_QWORD *)(v126 + v89) = v92;
        *(_QWORD *)(v75 + v121) = 2;
LABEL_91:
        v120 = v124;
        sub_1004B8460(v75, v124, type metadata accessor for CRLSyncScheduledActivity);
        v122((char *)v120, 0, 1, v10);
        swift_beginAccess(v22, v132, 33, 0);
        sub_10083F008(v120, v15);
        swift_endAccess(v132);
        sub_100C9A8AC(v46);
        sub_1004B84A4(v127, type metadata accessor for CRLSyncScheduledActivity);
        v61 = v75;
        goto LABEL_92;
      }
      __break(1u);
    }
    swift_once(&qword_1013DD870, sub_100A059E0);
LABEL_65:
    swift_beginAccess(&static OS_os_log.dataSync, v135, 0, 0);
    v93 = (void *)static OS_os_log.dataSync;
    v94 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v95 = swift_initStackObject(v94, &v128);
    v96 = (_QWORD *)v95;
    *(_OWORD *)(v95 + 16) = xmmword_100EF5A10;
    if (!*((_BYTE *)v3 + 64))
    {
      v47 = v48;
      v46 = 0xED000065706F6353;
    }
    *(_QWORD *)(v95 + 56) = &type metadata for String;
    v97 = sub_1004CFC2C();
    v96[4] = v47;
    v96[5] = v46;
    v98 = 0x6863746566;
    if (!(_DWORD)v15)
      v98 = 1702257011;
    v99 = 0xE500000000000000;
    v96[12] = &type metadata for String;
    v96[13] = v97;
    if (!(_DWORD)v15)
      v99 = 0xE400000000000000;
    v96[8] = v97;
    v96[9] = v98;
    v96[10] = v99;
    v100 = v93;
    v102 = static os_log_type_t.default.getter(v101);
    sub_100A06EBC((uint64_t)v100, &_mh_execute_header, v102, "<%{public}@> Activity:%{public}@ Pending --> Scheduled", 54, 2, (uint64_t)v96);
    swift_setDeallocating(v96);
    v103 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v96 + 4, 2, v103);

    v104 = v125;
    v75 = v126;
    *(_QWORD *)(v126 + v121) = v125;
    swift_retain(v104);
LABEL_90:
    v46 = v123;
    goto LABEL_91;
  }
LABEL_8:
  sub_1004CB800((uint64_t)v9, &qword_1013F5480);
  if (qword_1013DD870 != -1)
LABEL_94:
    swift_once(&qword_1013DD870, sub_100A059E0);
  swift_beginAccess(&static OS_os_log.dataSync, v135, 0, 0);
  v29 = (void *)static OS_os_log.dataSync;
  v30 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  v31 = swift_initStackObject(v30, v134);
  v32 = (_QWORD *)v31;
  *(_OWORD *)(v31 + 16) = xmmword_100EF5A10;
  if (*((_BYTE *)v3 + 64))
    v33 = 0x5320646572616853;
  else
    v33 = 0x2065746176697250;
  if (*((_BYTE *)v3 + 64))
    v34 = 0xEC00000065706F63;
  else
    v34 = 0xED000065706F6353;
  *(_QWORD *)(v31 + 56) = &type metadata for String;
  v35 = sub_1004CFC2C();
  v32[4] = v33;
  v32[5] = v34;
  v36 = 1702257011;
  if ((_DWORD)v15)
    v36 = 0x6863746566;
  v37 = 0xE500000000000000;
  v32[12] = &type metadata for String;
  v32[13] = v35;
  if (!(_DWORD)v15)
    v37 = 0xE400000000000000;
  v32[8] = v35;
  v32[9] = v36;
  v32[10] = v37;
  v38 = v29;
  v39 = static os_log_type_t.error.getter(v38);
  sub_100A06EBC((uint64_t)v38, &_mh_execute_header, v39, "<%{public}@> Activity:%{public}@ Attempting to update activity state for non-existent activity", 94, 2, (uint64_t)v32);
  swift_setDeallocating(v32);
  v40 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v32 + 4, 2, v40);

}

void sub_100C98358()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  _QWORD *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int64_t v32;
  double *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int64_t v39;
  unint64_t v40;
  int64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  __n128 v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char *v62;
  int64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  int64_t v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  double *v81;
  char *v82;
  double *v83;
  _QWORD aBlock[5];
  uint64_t v85;
  char v86[32];

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v75 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v66 = (char *)&v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DispatchQoS(0);
  v73 = *(_QWORD *)(v4 - 8);
  v74 = v4;
  __chkstk_darwin(v4);
  v82 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CRLSyncActivity(0);
  v69 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v72 = (uint64_t)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v76 = (char *)&v63 - v9;
  v65 = v10;
  __chkstk_darwin(v11);
  v79 = (uint64_t)&v63 - v12;
  v80 = type metadata accessor for CRLSyncScheduledActivity(0);
  v77 = *(_QWORD *)(v80 - 8);
  __chkstk_darwin(v80);
  v14 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1004B804C(&qword_10140D938);
  __chkstk_darwin(v15);
  v17 = (char *)&v63 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v63 - v19;
  v21 = type metadata accessor for DispatchPredicate(0);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = __chkstk_darwin(v21);
  v25 = (int64_t *)((char *)&v63 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v26 = *(void **)(v1 + 56);
  *v25 = v26;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v22 + 104))(v25, enum case for DispatchPredicate.onQueue(_:), v21, v23);
  v71 = v26;
  LOBYTE(v26) = _dispatchPreconditionTest(_:)(v25);
  (*(void (**)(_QWORD *, uint64_t))(v22 + 8))(v25, v21);
  if ((v26 & 1) != 0)
  {
    swift_beginAccess(v1 + 112, v86, 0, 0);
    v27 = *(_QWORD *)(v1 + 112);
    v28 = *(_QWORD *)(v27 + 64);
    v67 = v27 + 64;
    v29 = 1 << *(_BYTE *)(v27 + 32);
    v30 = -1;
    if (v29 < 64)
      v30 = ~(-1 << v29);
    v31 = v30 & v28;
    v68 = (unint64_t)(v29 + 63) >> 6;
    v63 = v68 - 1;
    v78 = v27;
    swift_bridgeObjectRetain(v27);
    v32 = 0;
    v81 = _swiftEmptyArrayStorage;
    v70 = v1;
    v64 = v2;
    while (!v31)
    {
      v39 = v32 + 1;
      if (__OFADD__(v32, 1))
      {
        __break(1u);
        goto LABEL_39;
      }
      if (v39 < v68)
      {
        v40 = *(_QWORD *)(v67 + 8 * v39);
        if (v40)
          goto LABEL_13;
        v41 = v32 + 2;
        ++v32;
        if (v39 + 1 < v68)
        {
          v40 = *(_QWORD *)(v67 + 8 * v41);
          if (v40)
            goto LABEL_16;
          v32 = v39 + 1;
          if (v39 + 2 < v68)
          {
            v40 = *(_QWORD *)(v67 + 8 * (v39 + 2));
            if (v40)
            {
              v39 += 2;
              goto LABEL_13;
            }
            v41 = v39 + 3;
            v32 = v39 + 2;
            if (v39 + 3 < v68)
            {
              v40 = *(_QWORD *)(v67 + 8 * v41);
              if (!v40)
              {
                while (1)
                {
                  v39 = v41 + 1;
                  if (__OFADD__(v41, 1))
                    goto LABEL_40;
                  if (v39 >= v68)
                  {
                    v32 = v63;
                    goto LABEL_27;
                  }
                  v40 = *(_QWORD *)(v67 + 8 * v39);
                  ++v41;
                  if (v40)
                    goto LABEL_13;
                }
              }
LABEL_16:
              v39 = v41;
LABEL_13:
              v31 = (v40 - 1) & v40;
              v35 = __clz(__rbit64(v40)) + (v39 << 6);
              v32 = v39;
LABEL_9:
              v36 = *(_QWORD *)(v78 + 56);
              *v17 = *(_BYTE *)(*(_QWORD *)(v78 + 48) + v35);
              v37 = v36 + *(_QWORD *)(v77 + 72) * v35;
              v38 = sub_1004B804C(&qword_10140D940);
              sub_1004B8460(v37, (uint64_t)&v17[*(int *)(v38 + 48)], type metadata accessor for CRLSyncScheduledActivity);
              (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v17, 0, 1, v38);
              goto LABEL_28;
            }
          }
        }
      }
LABEL_27:
      v42 = sub_1004B804C(&qword_10140D940);
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v17, 1, 1, v42);
      v31 = 0;
LABEL_28:
      sub_1004C4938((uint64_t)v17, (uint64_t)v20, &qword_10140D938);
      v43 = sub_1004B804C(&qword_10140D940);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 48))(v20, 1, v43) == 1)
      {
        swift_release(v78);
        v47 = *((_QWORD *)v81 + 2);
        if (v47)
        {
          v48 = *(unsigned __int8 *)(v69 + 80);
          v49 = (uint64_t)v81 + ((v48 + 32) & ~v48);
          v80 = *(_QWORD *)(v69 + 72);
          v78 = ((v48 + 24) & ~v48) + v65;
          v79 = (v48 + 24) & ~v48;
          v77 = v48 | 7;
          v50 = v64;
          v51 = v66;
          v52 = (uint64_t)v76;
          do
          {
            sub_1004B8460(v49, v52, type metadata accessor for CRLSyncActivity);
            v53 = v72;
            sub_1004B8460(v52, v72, type metadata accessor for CRLSyncActivity);
            v54 = swift_allocObject(&unk_10129EEE0, v78, v77);
            v55 = v70;
            *(_QWORD *)(v54 + 16) = v70;
            sub_1004B84E0(v53, v54 + v79, type metadata accessor for CRLSyncActivity);
            aBlock[4] = sub_100C9A708;
            v85 = v54;
            aBlock[0] = _NSConcreteStackBlock;
            aBlock[1] = *(_QWORD *)"";
            aBlock[2] = sub_1005D2FC0;
            aBlock[3] = &unk_10129EEF8;
            v56 = _Block_copy(aBlock);
            v57 = swift_retain(v55);
            static DispatchQoS.unspecified.getter(v57);
            v83 = _swiftEmptyArrayStorage;
            v58 = sub_1004CB65C();
            v59 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
            v60 = sub_1004CBA30((unint64_t *)&qword_1013E1D30, (uint64_t *)&unk_1013DFBF0, (uint64_t)&protocol conformance descriptor for [A]);
            v61 = v58;
            v62 = v82;
            dispatch thunk of SetAlgebra.init<A>(_:)(&v83, v59, v60, v50, v61);
            OS_dispatch_queue.async(group:qos:flags:execute:)(0, v62, v51, v56);
            v52 = (uint64_t)v76;
            _Block_release(v56);
            (*(void (**)(char *, uint64_t))(v75 + 8))(v51, v50);
            (*(void (**)(char *, uint64_t))(v73 + 8))(v62, v74);
            swift_release(v85);
            sub_1004B84A4(v52, type metadata accessor for CRLSyncActivity);
            v49 += v80;
            --v47;
          }
          while (v47);
        }
        swift_bridgeObjectRelease();
        return;
      }
      sub_1004B84E0((uint64_t)&v20[*(int *)(v43 + 48)], (uint64_t)v14, type metadata accessor for CRLSyncScheduledActivity);
      if (*(_QWORD *)&v14[*(int *)(v80 + 20)] == 1)
      {
        sub_1004B8460((uint64_t)v14, v79, type metadata accessor for CRLSyncActivity);
        v44 = (unint64_t)v81;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v44 = sub_100D11F04(0, *(_QWORD *)(v44 + 16) + 1, 1, v44);
        v46 = *(_QWORD *)(v44 + 16);
        v45 = *(_QWORD *)(v44 + 24);
        v81 = (double *)v44;
        if (v46 >= v45 >> 1)
          v81 = (double *)sub_100D11F04(v45 > 1, v46 + 1, 1, (unint64_t)v81);
        v33 = v81;
        *((_QWORD *)v81 + 2) = v46 + 1;
        sub_1004B84E0(v79, (uint64_t)v33+ ((*(unsigned __int8 *)(v69 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80))+ *(_QWORD *)(v69 + 72) * v46, type metadata accessor for CRLSyncActivity);
      }
      sub_1004B84A4((uint64_t)v14, type metadata accessor for CRLSyncScheduledActivity);
    }
    v34 = __clz(__rbit64(v31));
    v31 &= v31 - 1;
    v35 = v34 | (v32 << 6);
    goto LABEL_9;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
}

